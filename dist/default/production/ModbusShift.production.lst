

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Mar 26 13:20:41 2021

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F46K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
    10                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    13                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    14                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    22                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    23                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    24                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    25                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    26                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    27                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    28                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    29                           	psect	text0,global,reloc=2,class=CODE,delta=1
    30                           	psect	text1,global,reloc=2,class=CODE,delta=1
    31                           	psect	text2,global,reloc=2,class=CODE,delta=1
    32                           	psect	text3,global,reloc=2,class=CODE,delta=1
    33                           	psect	text4,global,reloc=2,class=CODE,delta=1
    34                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text8,global,reloc=2,class=CODE,delta=1
    38                           	psect	text9,global,reloc=2,class=CODE,delta=1
    39                           	psect	text10,global,reloc=2,class=CODE,delta=1
    40                           	psect	text11,global,reloc=2,class=CODE,delta=1
    41                           	psect	text12,global,reloc=2,class=CODE,delta=1
    42                           	psect	text13,global,reloc=2,class=CODE,delta=1
    43                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text15,global,reloc=2,class=CODE,delta=1
    45                           	psect	text16,global,reloc=2,class=CODE,delta=1
    46                           	psect	text17,global,reloc=2,class=CODE,delta=1
    47                           	psect	text18,global,reloc=2,class=CODE,delta=1
    48                           	psect	text19,global,reloc=2,class=CODE,delta=1
    49                           	psect	text20,global,reloc=2,class=CODE,delta=1
    50                           	psect	text21,global,reloc=2,class=CODE,delta=1
    51                           	psect	text22,global,reloc=2,class=CODE,delta=1
    52                           	psect	text23,global,reloc=2,class=CODE,delta=1
    53                           	psect	text24,global,reloc=2,class=CODE,delta=1
    54                           	psect	text25,global,reloc=2,class=CODE,delta=1
    55                           	psect	text26,global,reloc=2,class=CODE,delta=1
    56                           	psect	text27,global,reloc=2,class=CODE,delta=1
    57                           	psect	text28,global,reloc=2,class=CODE,delta=1
    58                           	psect	text29,global,reloc=2,class=CODE,delta=1
    59                           	psect	text30,global,reloc=2,class=CODE,delta=1
    60                           	psect	text31,global,reloc=2,class=CODE,delta=1
    61                           	psect	text32,global,reloc=2,class=CODE,delta=1
    62                           	psect	text33,global,reloc=2,class=CODE,delta=1
    63                           	psect	text34,global,reloc=2,class=CODE,delta=1
    64                           	psect	text35,global,reloc=2,class=CODE,delta=1
    65                           	psect	text36,global,reloc=2,class=CODE,delta=1
    66                           	psect	text37,global,reloc=2,class=CODE,delta=1
    67                           	psect	text38,global,reloc=2,class=CODE,delta=1
    68                           	psect	text39,global,reloc=2,class=CODE,delta=1
    69                           	psect	text40,global,reloc=2,class=CODE,delta=1
    70                           	psect	text41,global,reloc=2,class=CODE,delta=1
    71                           	psect	text42,global,reloc=2,class=CODE,delta=1
    72                           	psect	text43,global,reloc=2,class=CODE,delta=1
    73                           	psect	text44,global,reloc=2,class=CODE,delta=1
    74                           	psect	text45,global,reloc=2,class=CODE,delta=1
    75                           	psect	text46,global,reloc=2,class=CODE,delta=1
    76                           	psect	text47,global,reloc=2,class=CODE,delta=1
    77                           	psect	text48,global,reloc=2,class=CODE,delta=1
    78                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text50,global,reloc=2,class=CODE,delta=1
    80                           	psect	text51,global,reloc=2,class=CODE,delta=1
    81                           	psect	text52,global,reloc=2,class=CODE,delta=1
    82                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text57,global,reloc=2,class=CODE,delta=1
    87                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text60,global,reloc=2,class=CODE,delta=1
    90                           	psect	text61,global,reloc=2,class=CODE,delta=1
    91                           	psect	text62,global,reloc=2,class=CODE,delta=1
    92                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text66,global,reloc=2,class=CODE,delta=1
    96                           	psect	text67,global,reloc=2,class=CODE,delta=1
    97                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
    99                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=1
   100                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
   101                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
   103                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=1
   104                           	psect	text75,global,reloc=2,class=CODE,delta=1
   105                           	psect	text76,global,reloc=2,class=CODE,delta=1
   106                           	psect	text77,global,reloc=2,class=CODE,delta=1
   107                           	psect	text78,global,reloc=2,class=CODE,delta=1
   108                           	psect	text79,global,reloc=2,class=CODE,delta=1
   109                           	psect	text80,global,reloc=2,class=CODE,delta=1
   110                           	psect	text81,global,reloc=2,class=CODE,delta=1
   111                           	psect	text82,global,reloc=2,class=CODE,delta=1
   112                           	psect	text83,global,reloc=2,class=CODE,delta=1
   113                           	psect	text84,global,reloc=2,class=CODE,delta=1
   114                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   115                           	psect	text86,global,reloc=2,class=CODE,delta=1
   116                           	psect	text87,global,reloc=2,class=CODE,delta=1
   117                           	psect	text88,global,reloc=2,class=CODE,delta=1
   118                           	psect	text89,global,reloc=2,class=CODE,delta=1
   119                           	psect	text90,global,reloc=2,class=CODE,delta=1
   120                           	psect	text91,global,reloc=2,class=CODE,delta=1
   121                           	psect	text92,global,reloc=2,class=CODE,delta=1
   122                           	psect	text93,global,reloc=2,class=CODE,delta=1
   123                           	psect	text94,global,reloc=2,class=CODE,delta=1
   124                           	psect	text95,global,reloc=2,class=CODE,delta=1
   125                           	psect	text96,global,reloc=2,class=CODE,delta=1
   126                           	psect	text97,global,reloc=2,class=CODE,delta=1
   127                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   128                           	psect	text98,global,reloc=2,class=CODE,delta=1
   129                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   130                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   131  0000                     
   132                           ; Version 2.10
   133                           ; Generated 31/07/2019 GMT
   134                           ; 
   135                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   136                           ; All rights reserved.
   137                           ; 
   138                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   139                           ; 
   140                           ; Redistribution and use in source and binary forms, with or without modification, are
   141                           ; permitted provided that the following conditions are met:
   142                           ; 
   143                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   144                           ;        conditions and the following disclaimer.
   145                           ; 
   146                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   147                           ;        of conditions and the following disclaimer in the documentation and/or other
   148                           ;        materials provided with the distribution.
   149                           ; 
   150                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   151                           ;        software without specific prior written permission.
   152                           ; 
   153                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   154                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   155                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   156                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   157                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   158                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   159                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   160                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   161                           ; 
   162                           ; 
   163                           ; Code-generator required, PIC18F46K40 Definitions
   164                           ; 
   165                           ; SFR Addresses
   166  0000                     
   167                           	psect	idataBANK0
   168  004DD2                     __pidataBANK0:
   169                           	opt callstack 0
   170                           
   171                           ;initializer for _MB303xx
   172  004DD2  3132               	dw	12594
   173  004DD4  3334               	dw	13108
   174  004DD6  3536               	dw	13622
   175  004DD8  3738               	dw	14136
   176  004DDA  3930               	dw	14640
   177                           
   178                           ;initializer for ReadRX232@F10772
   179  004DDC  5A                 	db	90
   180  004DDD  00                 	db	0
   181                           
   182                           ;initializer for _ByteLo
   183  004DDE  00FF               	dw	255
   184                           
   185                           ;initializer for _MBResCRC
   186  004DE0  FFFF               	dw	65535
   187                           
   188                           ;initializer for _ExpectedBytes
   189  004DE2  0008               	dw	8
   190                           
   191                           ;initializer for _MB302xx
   192  004DE4  0004               	dw	4
   193                           
   194                           	psect	idataBANK1
   195  00415C                     __pidataBANK1:
   196                           	opt callstack 0
   197                           
   198                           ;initializer for _ModbusData
   199  00415C  FF                 	db	255
   200  00415D  00                 	db	0
   201  00415E  00                 	db	0
   202  00415F  00                 	db	0
   203  004160  00                 	db	0
   204  004161  00                 	db	0
   205  004162  00                 	db	0
   206  004163  00                 	db	0
   207  004164  00                 	db	0
   208  004165  00                 	db	0
   209  004166  00                 	db	0
   210  004167  00                 	db	0
   211  004168  00                 	db	0
   212  004169  00                 	db	0
   213  00416A  00                 	db	0
   214  00416B  00                 	db	0
   215  00416C  00                 	db	0
   216  00416D  00                 	db	0
   217  00416E  00                 	db	0
   218  00416F  00                 	db	0
   219  004170  00                 	db	0
   220  004171  00                 	db	0
   221  004172  00                 	db	0
   222  004173  00                 	db	0
   223  004174  00                 	db	0
   224  004175  00                 	db	0
   225  004176  00                 	db	0
   226  004177  00                 	db	0
   227  004178  00                 	db	0
   228  004179  00                 	db	0
   229  00417A  00                 	db	0
   230  00417B  00                 	db	0
   231  00417C  00                 	db	0
   232  00417D  00                 	db	0
   233  00417E  00                 	db	0
   234  00417F  00                 	db	0
   235  004180  00                 	db	0
   236  004181  00                 	db	0
   237  004182  00                 	db	0
   238  004183  00                 	db	0
   239  004184  00                 	db	0
   240  004185  00                 	db	0
   241  004186  00                 	db	0
   242  004187  00                 	db	0
   243  004188  00                 	db	0
   244  004189  00                 	db	0
   245  00418A  00                 	db	0
   246  00418B  00                 	db	0
   247  00418C  00                 	db	0
   248  00418D  00                 	db	0
   249  00418E  00                 	db	0
   250  00418F  00                 	db	0
   251  004190  00                 	db	0
   252  004191  00                 	db	0
   253  004192  00                 	db	0
   254  004193  00                 	db	0
   255  004194  00                 	db	0
   256  004195  00                 	db	0
   257  004196  00                 	db	0
   258  004197  00                 	db	0
   259  004198  00                 	db	0
   260  004199  00                 	db	0
   261  00419A  00                 	db	0
   262  00419B  00                 	db	0
   263  00419C  00                 	db	0
   264  00419D  00                 	db	0
   265  00419E  00                 	db	0
   266  00419F  00                 	db	0
   267  0041A0  00                 	db	0
   268  0041A1  00                 	db	0
   269  0041A2  00                 	db	0
   270  0041A3  00                 	db	0
   271  0041A4  00                 	db	0
   272  0041A5  00                 	db	0
   273  0041A6  00                 	db	0
   274  0041A7  00                 	db	0
   275  0041A8  00                 	db	0
   276  0041A9  00                 	db	0
   277  0041AA  00                 	db	0
   278  0041AB  00                 	db	0
   279  0041AC  00                 	db	0
   280  0041AD  00                 	db	0
   281  0041AE  00                 	db	0
   282  0041AF  00                 	db	0
   283  0041B0  00                 	db	0
   284  0041B1  00                 	db	0
   285  0041B2  00                 	db	0
   286  0041B3  00                 	db	0
   287  0041B4  00                 	db	0
   288  0041B5  00                 	db	0
   289  0041B6  00                 	db	0
   290  0041B7  00                 	db	0
   291  0041B8  00                 	db	0
   292  0041B9  00                 	db	0
   293  0041BA  00                 	db	0
   294  0041BB  00                 	db	0
   295  0041BC  00                 	db	0
   296  0041BD  00                 	db	0
   297  0041BE  00                 	db	0
   298  0041BF  00                 	db	0
   299                           
   300                           ;initializer for _MB301xx
   301  0041C0  4150               	dw	16720
   302  0041C2  3030               	dw	12336
   303  0041C4  3036               	dw	12342
   304  0041C6  3033               	dw	12339
   305  0041C8  3033               	dw	12339
   306  0041CA  2D30               	dw	11568
   307  0041CC  3200               	dw	12800
   308                           
   309                           ;initializer for _MB304xx
   310  0041CE  00FF               	dw	255
   311  0041D0  00                 	db	0
   312  0041D1  00                 	db	0
   313  0041D2  00                 	db	0
   314  0041D3  00                 	db	0
   315  0041D4  00                 	db	0
   316  0041D5  00                 	db	0
   317  0041D6  00                 	db	0
   318  0041D7  00                 	db	0
   319  0041D8  00                 	db	0
   320  0041D9  00                 	db	0
   321                           
   322                           ;initializer for InitialiseString@F10766
   323  0041DA  30                 	db	48
   324  0041DB  30                 	db	48
   325  0041DC  3A                 	db	58
   326  0041DD  32                 	db	50
   327  0041DE  34                 	db	52
   328  0041DF  3A                 	db	58
   329  0041E0  30                 	db	48
   330  0041E1  30                 	db	48
   331                           
   332                           ;initializer for stoa@F1139
   333  0041E2  28                 	db	40
   334  0041E3  6E                 	db	110
   335  0041E4  75                 	db	117
   336  0041E5  6C                 	db	108
   337  0041E6  6C                 	db	108
   338  0041E7  29                 	db	41
   339  0041E8  00                 	db	0
   340                           
   341                           ;initializer for _MB306xx
   342  0041E9  00FF               	dw	255
   343  0041EB  00                 	db	0
   344  0041EC  00                 	db	0
   345  0041ED  00                 	db	0
   346  0041EE  00                 	db	0
   347                           
   348                           	psect	idataBANK2
   349  004024                     __pidataBANK2:
   350                           	opt callstack 0
   351                           
   352                           ;initializer for ValidateCmd@F10796
   353  004024  52                 	db	82
   354  004025  65                 	db	101
   355  004026  76                 	db	118
   356  004027  69                 	db	105
   357  004028  73                 	db	115
   358  004029  69                 	db	105
   359  00402A  6F                 	db	111
   360  00402B  6E                 	db	110
   361  00402C  00                 	db	0
   362  00402D  00                 	db	0
   363  00402E  00                 	db	0
   364  00402F  00                 	db	0
   365  004030  00                 	db	0
   366  004031  00                 	db	0
   367  004032  00                 	db	0
   368  004033  00                 	db	0
   369  004034  00                 	db	0
   370  004035  00                 	db	0
   371  004036  00                 	db	0
   372  004037  00                 	db	0
   373                           
   374                           ;initializer for ValidateCmd@F10793
   375  004038  50                 	db	80
   376  004039  61                 	db	97
   377  00403A  72                 	db	114
   378  00403B  74                 	db	116
   379  00403C  20                 	db	32
   380  00403D  4E                 	db	78
   381  00403E  75                 	db	117
   382  00403F  6D                 	db	109
   383  004040  62                 	db	98
   384  004041  65                 	db	101
   385  004042  72                 	db	114
   386  004043  00                 	db	0
   387  004044  00                 	db	0
   388  004045  00                 	db	0
   389  004046  00                 	db	0
   390  004047  00                 	db	0
   391  004048  00                 	db	0
   392  004049  00                 	db	0
   393  00404A  00                 	db	0
   394  00404B  00                 	db	0
   395                           
   396                           ;initializer for ValidateCmd@F10790
   397  00404C  53                 	db	83
   398  00404D  65                 	db	101
   399  00404E  72                 	db	114
   400  00404F  69                 	db	105
   401  004050  61                 	db	97
   402  004051  6C                 	db	108
   403  004052  20                 	db	32
   404  004053  4E                 	db	78
   405  004054  75                 	db	117
   406  004055  6D                 	db	109
   407  004056  62                 	db	98
   408  004057  65                 	db	101
   409  004058  72                 	db	114
   410  004059  00                 	db	0
   411  00405A  00                 	db	0
   412  00405B  00                 	db	0
   413  00405C  00                 	db	0
   414  00405D  00                 	db	0
   415  00405E  00                 	db	0
   416  00405F  00                 	db	0
   417                           
   418                           ;initializer for _MB305xx
   419  004060  00FF               	dw	255
   420  004062  00                 	db	0
   421  004063  00                 	db	0
   422  004064  00                 	db	0
   423  004065  00                 	db	0
   424  004066  00                 	db	0
   425  004067  00                 	db	0
   426  004068  00                 	db	0
   427  004069  00                 	db	0
   428  00406A  00                 	db	0
   429  00406B  00                 	db	0
   430  00406C  00                 	db	0
   431  00406D  00                 	db	0
   432  00406E  00                 	db	0
   433  00406F  00                 	db	0
   434                           
   435                           ;initializer for InitialiseString@F10763
   436  004070  4D                 	db	77
   437  004071  61                 	db	97
   438  004072  72                 	db	114
   439  004073  20                 	db	32
   440  004074  32                 	db	50
   441  004075  35                 	db	53
   442  004076  20                 	db	32
   443  004077  32                 	db	50
   444  004078  30                 	db	48
   445  004079  32                 	db	50
   446  00407A  31                 	db	49
   447                           
   448                           ;initializer for _MBRespon
   449  00407B  FF                 	db	255
   450  00407C  00                 	db	0
   451  00407D  00                 	db	0
   452  00407E  00                 	db	0
   453  00407F  00                 	db	0
   454  004080  00                 	db	0
   455  004081  00                 	db	0
   456  004082  00                 	db	0
   457  004083  00                 	db	0
   458  004084  00                 	db	0
   459  004085  00                 	db	0
   460  004086  00                 	db	0
   461  004087  00                 	db	0
   462  004088  00                 	db	0
   463  004089  00                 	db	0
   464  00408A  00                 	db	0
   465  00408B  00                 	db	0
   466  00408C  00                 	db	0
   467  00408D  00                 	db	0
   468  00408E  00                 	db	0
   469  00408F  00                 	db	0
   470  004090  00                 	db	0
   471  004091  00                 	db	0
   472  004092  00                 	db	0
   473  004093  00                 	db	0
   474  004094  00                 	db	0
   475  004095  00                 	db	0
   476  004096  00                 	db	0
   477  004097  00                 	db	0
   478  004098  00                 	db	0
   479  004099  00                 	db	0
   480  00409A  00                 	db	0
   481  00409B  00                 	db	0
   482  00409C  00                 	db	0
   483  00409D  00                 	db	0
   484  00409E  00                 	db	0
   485  00409F  00                 	db	0
   486  0040A0  00                 	db	0
   487  0040A1  00                 	db	0
   488  0040A2  00                 	db	0
   489  0040A3  00                 	db	0
   490  0040A4  00                 	db	0
   491  0040A5  00                 	db	0
   492  0040A6  00                 	db	0
   493  0040A7  00                 	db	0
   494  0040A8  00                 	db	0
   495  0040A9  00                 	db	0
   496  0040AA  00                 	db	0
   497  0040AB  00                 	db	0
   498  0040AC  00                 	db	0
   499  0040AD  00                 	db	0
   500  0040AE  00                 	db	0
   501  0040AF  00                 	db	0
   502  0040B0  00                 	db	0
   503  0040B1  00                 	db	0
   504  0040B2  00                 	db	0
   505  0040B3  00                 	db	0
   506  0040B4  00                 	db	0
   507  0040B5  00                 	db	0
   508  0040B6  00                 	db	0
   509  0040B7  00                 	db	0
   510  0040B8  00                 	db	0
   511  0040B9  00                 	db	0
   512  0040BA  00                 	db	0
   513  0040BB  00                 	db	0
   514  0040BC  00                 	db	0
   515  0040BD  00                 	db	0
   516  0040BE  00                 	db	0
   517  0040BF  00                 	db	0
   518  0040C0  00                 	db	0
   519  0040C1  00                 	db	0
   520  0040C2  00                 	db	0
   521  0040C3  00                 	db	0
   522  0040C4  00                 	db	0
   523  0040C5  00                 	db	0
   524                           
   525                           	psect	idataBANK3
   526  004A18                     __pidataBANK3:
   527                           	opt callstack 0
   528                           
   529                           ;initializer for _MB300xx
   530  004A18  0001               	dw	1
   531  004A1A  0002               	dw	2
   532  004A1C  0003               	dw	3
   533  004A1E  0004               	dw	4
   534  004A20  0005               	dw	5
   535  004A22  0006               	dw	6
   536  004A24  0007               	dw	7
   537  004A26  0008               	dw	8
   538  004A28  0009               	dw	9
   539  004A2A  000A               	dw	10
   540  004A2C  000B               	dw	11
   541  004A2E  000C               	dw	12
   542  004A30  000D               	dw	13
   543  004A32  000E               	dw	14
   544  004A34  000F               	dw	15
   545  004A36  0010               	dw	16
   546  004A38  0011               	dw	17
   547  004A3A  0012               	dw	18
   548  004A3C  0013               	dw	19
   549  004A3E  0014               	dw	20
   550  004A40  0015               	dw	21
   551  004A42  0016               	dw	22
   552  004A44  0017               	dw	23
   553  004A46  0018               	dw	24
   554  004A48  0019               	dw	25
   555  004A4A  001A               	dw	26
   556  004A4C  001B               	dw	27
   557  004A4E  001C               	dw	28
   558  004A50  001D               	dw	29
   559  004A52  001E               	dw	30
   560  004A54  001F               	dw	31
   561  004A56  0020               	dw	32
   562                           
   563                           	psect	idataBANK4
   564  004A58                     __pidataBANK4:
   565                           	opt callstack 0
   566                           
   567                           ;initializer for _MB400xx
   568  004A58  0020               	dw	32
   569  004A5A  001F               	dw	31
   570  004A5C  001E               	dw	30
   571  004A5E  001D               	dw	29
   572  004A60  001C               	dw	28
   573  004A62  001B               	dw	27
   574  004A64  001A               	dw	26
   575  004A66  0019               	dw	25
   576  004A68  0018               	dw	24
   577  004A6A  0017               	dw	23
   578  004A6C  0016               	dw	22
   579  004A6E  0015               	dw	21
   580  004A70  0014               	dw	20
   581  004A72  0013               	dw	19
   582  004A74  0012               	dw	18
   583  004A76  0011               	dw	17
   584  004A78  0010               	dw	16
   585  004A7A  000F               	dw	15
   586  004A7C  000E               	dw	14
   587  004A7E  000D               	dw	13
   588  004A80  000C               	dw	12
   589  004A82  000B               	dw	11
   590  004A84  000A               	dw	10
   591  004A86  0009               	dw	9
   592  004A88  0008               	dw	8
   593  004A8A  0007               	dw	7
   594  004A8C  0006               	dw	6
   595  004A8E  0005               	dw	5
   596  004A90  0004               	dw	4
   597  004A92  0003               	dw	3
   598  004A94  0002               	dw	2
   599  004A96  0001               	dw	1
   600                           
   601                           	psect	nvBANK0
   602  0000FE                     __pnvBANK0:
   603                           	opt callstack 0
   604  0000FE                     _eusart1TxBufferRemaining:
   605                           	opt callstack 0
   606  0000FE                     	ds	1
   607  0000FF                     _eusart2TxBufferRemaining:
   608                           	opt callstack 0
   609  0000FF                     	ds	1
   610                           
   611                           	psect	nvBANK1
   612  0001D9                     __pnvBANK1:
   613                           	opt callstack 0
   614  0001D9                     _EUSART1_ErrorHandler:
   615                           	opt callstack 0
   616  0001D9                     	ds	2
   617  0001DB                     _EUSART1_OverrunErrorHandler:
   618                           	opt callstack 0
   619  0001DB                     	ds	2
   620  0001DD                     _EUSART1_FramingErrorHandler:
   621                           	opt callstack 0
   622  0001DD                     	ds	2
   623  0001DF                     _EUSART2_ErrorHandler:
   624                           	opt callstack 0
   625  0001DF                     	ds	2
   626  0001E1                     _EUSART2_OverrunErrorHandler:
   627                           	opt callstack 0
   628  0001E1                     	ds	2
   629  0001E3                     _EUSART2_FramingErrorHandler:
   630                           	opt callstack 0
   631  0001E3                     	ds	2
   632  0001E5                     _EUSART1_RxDefaultInterruptHandler:
   633                           	opt callstack 0
   634  0001E5                     	ds	2
   635  0001E7                     _EUSART1_TxDefaultInterruptHandler:
   636                           	opt callstack 0
   637  0001E7                     	ds	2
   638  0001E9                     _EUSART2_RxDefaultInterruptHandler:
   639                           	opt callstack 0
   640  0001E9                     	ds	2
   641  0001EB                     _EUSART2_TxDefaultInterruptHandler:
   642                           	opt callstack 0
   643  0001EB                     	ds	2
   644  0000                     _RC2REG	set	3737
   645  0000                     _RC2STAbits	set	3741
   646  0000                     _TX2REG	set	3738
   647  0000                     _TX2STAbits	set	3742
   648  0000                     _SP2BRGH	set	3740
   649  0000                     _SP2BRGL	set	3739
   650  0000                     _TX2STA	set	3742
   651  0000                     _RC2STA	set	3741
   652  0000                     _BAUD2CON	set	3743
   653  0000                     _PIR7bits	set	3793
   654  0000                     _PIR3bits	set	3789
   655  0000                     _PIE3bits	set	3781
   656  0000                     _PMD5	set	3814
   657  0000                     _PMD4	set	3813
   658  0000                     _PMD3	set	3812
   659  0000                     _PMD2	set	3811
   660  0000                     _PMD1	set	3810
   661  0000                     _PMD0	set	3809
   662  0000                     _OSCTUNE	set	3805
   663  0000                     _OSCFRQ	set	3806
   664  0000                     _OSCEN	set	3804
   665  0000                     _OSCCON3	set	3802
   666  0000                     _OSCCON1	set	3800
   667  0000                     _RX2PPS	set	3725
   668  0000                     _RC6PPS	set	3837
   669  0000                     _RB6PPS	set	3829
   670  0000                     _RX1PPS	set	3765
   671  0000                     _ADCON1bits	set	3929
   672  0000                     _ADCON2bits	set	3930
   673  0000                     _ADCON3bits	set	3931
   674  0000                     _ADACQ	set	3932
   675  0000                     _ADCLK	set	3927
   676  0000                     _ADACT	set	3926
   677  0000                     _ADREF	set	3928
   678  0000                     _ADCON3	set	3931
   679  0000                     _ADCON2	set	3930
   680  0000                     _ADCON1	set	3929
   681  0000                     _ADPRE	set	3934
   682  0000                     _ADCAP	set	3933
   683  0000                     _ADPCH	set	3935
   684  0000                     _INLVLE	set	3882
   685  0000                     _INLVLD	set	3874
   686  0000                     _INLVLC	set	3869
   687  0000                     _INLVLB	set	3861
   688  0000                     _INLVLA	set	3853
   689  0000                     _SLRCONE	set	3883
   690  0000                     _SLRCOND	set	3875
   691  0000                     _SLRCONC	set	3870
   692  0000                     _SLRCONB	set	3862
   693  0000                     _SLRCONA	set	3854
   694  0000                     _ODCOND	set	3876
   695  0000                     _ODCONC	set	3871
   696  0000                     _ODCONB	set	3863
   697  0000                     _ODCONA	set	3855
   698  0000                     _ODCONE	set	3884
   699  0000                     _WPUC	set	3872
   700  0000                     _WPUA	set	3856
   701  0000                     _WPUB	set	3864
   702  0000                     _WPUE	set	3885
   703  0000                     _WPUD	set	3877
   704  0000                     _ANSELA	set	3857
   705  0000                     _ANSELE	set	3886
   706  0000                     _ANSELB	set	3865
   707  0000                     _ANSELC	set	3873
   708  0000                     _ANSELD	set	3878
   709  0000                     _ADERRL	set	3950
   710  0000                     _ADERRH	set	3951
   711  0000                     _ADPREVL	set	3937
   712  0000                     _ADPREVH	set	3938
   713  0000                     _ADFLTRL	set	3954
   714  0000                     _ADFLTRH	set	3955
   715  0000                     _ADSTATbits	set	3941
   716  0000                     _ADACCL	set	3952
   717  0000                     _ADACCH	set	3953
   718  0000                     _ADCNT	set	3943
   719  0000                     _ADRESL	set	3939
   720  0000                     _ADRESH	set	3940
   721  0000                     _ADCON0bits	set	3936
   722  0000                     _ADCON0	set	3936
   723  0000                     _ADSTAT	set	3941
   724  0000                     _ADRPT	set	3942
   725  0000                     _ADSTPTH	set	3945
   726  0000                     _ADSTPTL	set	3944
   727  0000                     _ADUTHH	set	3949
   728  0000                     _ADUTHL	set	3948
   729  0000                     _ADLTHH	set	3947
   730  0000                     _ADLTHL	set	3946
   731  0000                     _LATDbits	set	3974
   732  0000                     _LATAbits	set	3971
   733  0000                     _RC1REG	set	3993
   734  0000                     _RC1STAbits	set	3997
   735  0000                     _TX1REG	set	3994
   736  0000                     _TX1STAbits	set	3998
   737  0000                     _SP1BRGH	set	3996
   738  0000                     _SP1BRGL	set	3995
   739  0000                     _TX1STA	set	3998
   740  0000                     _RC1STA	set	3997
   741  0000                     _BAUD1CON	set	3999
   742  0000                     _NVMDAT	set	3968
   743  0000                     _NVMADRL	set	3966
   744  0000                     _NVMADRH	set	3967
   745  0000                     _NVMCON2	set	3970
   746  0000                     _TABLAT	set	4085
   747  0000                     _TBLPTRL	set	4086
   748  0000                     _TBLPTRH	set	4087
   749  0000                     _TBLPTRU	set	4088
   750  0000                     _NVMCON1bits	set	3969
   751  0000                     _INTCONbits	set	4082
   752  0000                     _TRISD	set	3979
   753  0000                     _TRISC	set	3978
   754  0000                     _TRISB	set	3977
   755  0000                     _TRISA	set	3976
   756  0000                     _TRISE	set	3980
   757  0000                     _LATC	set	3973
   758  0000                     _LATB	set	3972
   759  0000                     _LATA	set	3971
   760  0000                     _LATD	set	3974
   761  0000                     _LATE	set	3975
   762                           
   763                           	psect	mediumconst
   764  00F47A                     __pmediumconst:
   765                           	opt callstack 0
   766  00F47A  00                 	db	0
   767  00F47B                     STR_105:
   768                           
   769                           ; BSR set to: 0
   770  00F47B  20                 	db	32
   771  00F47C  20                 	db	32
   772  00F47D  20                 	db	32
   773  00F47E  20                 	db	32
   774  00F47F  20                 	db	32
   775  00F480  20                 	db	32
   776  00F481  41                 	db	65	;'A'
   777  00F482  64                 	db	100	;'d'
   778  00F483  64                 	db	100	;'d'
   779  00F484  20                 	db	32
   780  00F485  30                 	db	48	;'0'
   781  00F486  78                 	db	120	;'x'
   782  00F487  30                 	db	48	;'0'
   783  00F488  30                 	db	48	;'0'
   784  00F489  30                 	db	48	;'0'
   785  00F48A  30                 	db	48	;'0'
   786  00F48B  20                 	db	32
   787  00F48C  74                 	db	116	;'t'
   788  00F48D  6F                 	db	111	;'o'
   789  00F48E  20                 	db	32
   790  00F48F  30                 	db	48	;'0'
   791  00F490  78                 	db	120	;'x'
   792  00F491  30                 	db	48	;'0'
   793  00F492  30                 	db	48	;'0'
   794  00F493  33                 	db	51	;'3'
   795  00F494  31                 	db	49	;'1'
   796  00F495  20                 	db	32
   797  00F496  2D                 	db	45
   798  00F497  20                 	db	32
   799  00F498  33                 	db	51	;'3'
   800  00F499  32                 	db	50	;'2'
   801  00F49A  78                 	db	120	;'x'
   802  00F49B  20                 	db	32
   803  00F49C  43                 	db	67	;'C'
   804  00F49D  69                 	db	105	;'i'
   805  00F49E  72                 	db	114	;'r'
   806  00F49F  63                 	db	99	;'c'
   807  00F4A0  75                 	db	117	;'u'
   808  00F4A1  69                 	db	105	;'i'
   809  00F4A2  74                 	db	116	;'t'
   810  00F4A3  20                 	db	32
   811  00F4A4  53                 	db	83	;'S'
   812  00F4A5  65                 	db	101	;'e'
   813  00F4A6  74                 	db	116	;'t'
   814  00F4A7  20                 	db	32
   815  00F4A8  53                 	db	83	;'S'
   816  00F4A9  74                 	db	116	;'t'
   817  00F4AA  61                 	db	97	;'a'
   818  00F4AB  74                 	db	116	;'t'
   819  00F4AC  75                 	db	117	;'u'
   820  00F4AD  73                 	db	115	;'s'
   821  00F4AE  20                 	db	32
   822  00F4AF  20                 	db	32
   823  00F4B0  28                 	db	40
   824  00F4B1  6C                 	db	108	;'l'
   825  00F4B2  6F                 	db	111	;'o'
   826  00F4B3  77                 	db	119	;'w'
   827  00F4B4  65                 	db	101	;'e'
   828  00F4B5  72                 	db	114	;'r'
   829  00F4B6  20                 	db	32
   830  00F4B7  38                 	db	56	;'8'
   831  00F4B8  62                 	db	98	;'b'
   832  00F4B9  69                 	db	105	;'i'
   833  00F4BA  74                 	db	116	;'t'
   834  00F4BB  73                 	db	115	;'s'
   835  00F4BC  20                 	db	32
   836  00F4BD  6F                 	db	111	;'o'
   837  00F4BE  6E                 	db	110	;'n'
   838  00F4BF  6C                 	db	108	;'l'
   839  00F4C0  79                 	db	121	;'y'
   840  00F4C1  29                 	db	41
   841  00F4C2  0D                 	db	13
   842  00F4C3  0A                 	db	10
   843  00F4C4  0A                 	db	10
   844  00F4C5  00                 	db	0
   845  00F4C6                     STR_97:
   846                           
   847                           ; BSR set to: 0
   848  00F4C6  20                 	db	32
   849  00F4C7  20                 	db	32
   850  00F4C8  20                 	db	32
   851  00F4C9  20                 	db	32
   852  00F4CA  20                 	db	32
   853  00F4CB  20                 	db	32
   854  00F4CC  41                 	db	65	;'A'
   855  00F4CD  64                 	db	100	;'d'
   856  00F4CE  64                 	db	100	;'d'
   857  00F4CF  20                 	db	32
   858  00F4D0  30                 	db	48	;'0'
   859  00F4D1  78                 	db	120	;'x'
   860  00F4D2  30                 	db	48	;'0'
   861  00F4D3  30                 	db	48	;'0'
   862  00F4D4  30                 	db	48	;'0'
   863  00F4D5  30                 	db	48	;'0'
   864  00F4D6  20                 	db	32
   865  00F4D7  74                 	db	116	;'t'
   866  00F4D8  6F                 	db	111	;'o'
   867  00F4D9  20                 	db	32
   868  00F4DA  30                 	db	48	;'0'
   869  00F4DB  78                 	db	120	;'x'
   870  00F4DC  30                 	db	48	;'0'
   871  00F4DD  30                 	db	48	;'0'
   872  00F4DE  33                 	db	51	;'3'
   873  00F4DF  31                 	db	49	;'1'
   874  00F4E0  20                 	db	32
   875  00F4E1  2D                 	db	45
   876  00F4E2  20                 	db	32
   877  00F4E3  33                 	db	51	;'3'
   878  00F4E4  32                 	db	50	;'2'
   879  00F4E5  78                 	db	120	;'x'
   880  00F4E6  20                 	db	32
   881  00F4E7  43                 	db	67	;'C'
   882  00F4E8  69                 	db	105	;'i'
   883  00F4E9  72                 	db	114	;'r'
   884  00F4EA  63                 	db	99	;'c'
   885  00F4EB  75                 	db	117	;'u'
   886  00F4EC  69                 	db	105	;'i'
   887  00F4ED  74                 	db	116	;'t'
   888  00F4EE  20                 	db	32
   889  00F4EF  47                 	db	71	;'G'
   890  00F4F0  65                 	db	101	;'e'
   891  00F4F1  74                 	db	116	;'t'
   892  00F4F2  20                 	db	32
   893  00F4F3  53                 	db	83	;'S'
   894  00F4F4  74                 	db	116	;'t'
   895  00F4F5  61                 	db	97	;'a'
   896  00F4F6  74                 	db	116	;'t'
   897  00F4F7  75                 	db	117	;'u'
   898  00F4F8  73                 	db	115	;'s'
   899  00F4F9  20                 	db	32
   900  00F4FA  28                 	db	40
   901  00F4FB  6C                 	db	108	;'l'
   902  00F4FC  6F                 	db	111	;'o'
   903  00F4FD  77                 	db	119	;'w'
   904  00F4FE  65                 	db	101	;'e'
   905  00F4FF  72                 	db	114	;'r'
   906  00F500  20                 	db	32
   907  00F501  38                 	db	56	;'8'
   908  00F502  62                 	db	98	;'b'
   909  00F503  69                 	db	105	;'i'
   910  00F504  74                 	db	116	;'t'
   911  00F505  73                 	db	115	;'s'
   912  00F506  20                 	db	32
   913  00F507  6F                 	db	111	;'o'
   914  00F508  6E                 	db	110	;'n'
   915  00F509  6C                 	db	108	;'l'
   916  00F50A  79                 	db	121	;'y'
   917  00F50B  29                 	db	41
   918  00F50C  0D                 	db	13
   919  00F50D  0A                 	db	10
   920  00F50E  00                 	db	0
   921  00F50F                     STR_103:
   922                           
   923                           ; BSR set to: 0
   924  00F50F  20                 	db	32
   925  00F510  20                 	db	32
   926  00F511  20                 	db	32
   927  00F512  20                 	db	32
   928  00F513  20                 	db	32
   929  00F514  20                 	db	32
   930  00F515  41                 	db	65	;'A'
   931  00F516  64                 	db	100	;'d'
   932  00F517  64                 	db	100	;'d'
   933  00F518  20                 	db	32
   934  00F519  30                 	db	48	;'0'
   935  00F51A  78                 	db	120	;'x'
   936  00F51B  30                 	db	48	;'0'
   937  00F51C  36                 	db	54	;'6'
   938  00F51D  30                 	db	48	;'0'
   939  00F51E  30                 	db	48	;'0'
   940  00F51F  20                 	db	32
   941  00F520  74                 	db	116	;'t'
   942  00F521  6F                 	db	111	;'o'
   943  00F522  20                 	db	32
   944  00F523  30                 	db	48	;'0'
   945  00F524  78                 	db	120	;'x'
   946  00F525  30                 	db	48	;'0'
   947  00F526  36                 	db	54	;'6'
   948  00F527  30                 	db	48	;'0'
   949  00F528  32                 	db	50	;'2'
   950  00F529  20                 	db	32
   951  00F52A  2D                 	db	45
   952  00F52B  20                 	db	32
   953  00F52C  33                 	db	51	;'3'
   954  00F52D  78                 	db	120	;'x'
   955  00F52E  20                 	db	32
   956  00F52F  41                 	db	65	;'A'
   957  00F530  6E                 	db	110	;'n'
   958  00F531  61                 	db	97	;'a'
   959  00F532  6C                 	db	108	;'l'
   960  00F533  6F                 	db	111	;'o'
   961  00F534  67                 	db	103	;'g'
   962  00F535  75                 	db	117	;'u'
   963  00F536  65                 	db	101	;'e'
   964  00F537  20                 	db	32
   965  00F538  49                 	db	73	;'I'
   966  00F539  6E                 	db	110	;'n'
   967  00F53A  70                 	db	112	;'p'
   968  00F53B  75                 	db	117	;'u'
   969  00F53C  74                 	db	116	;'t'
   970  00F53D  73                 	db	115	;'s'
   971  00F53E  20                 	db	32
   972  00F53F  28                 	db	40
   973  00F540  30                 	db	48	;'0'
   974  00F541  78                 	db	120	;'x'
   975  00F542  30                 	db	48	;'0'
   976  00F543  30                 	db	48	;'0'
   977  00F544  30                 	db	48	;'0'
   978  00F545  20                 	db	32
   979  00F546  74                 	db	116	;'t'
   980  00F547  6F                 	db	111	;'o'
   981  00F548  20                 	db	32
   982  00F549  30                 	db	48	;'0'
   983  00F54A  78                 	db	120	;'x'
   984  00F54B  30                 	db	48	;'0'
   985  00F54C  33                 	db	51	;'3'
   986  00F54D  66                 	db	102	;'f'
   987  00F54E  66                 	db	102	;'f'
   988  00F54F  29                 	db	41
   989  00F550  0D                 	db	13
   990  00F551  0A                 	db	10
   991  00F552  0A                 	db	10
   992  00F553  00                 	db	0
   993  00F554                     STR_26:
   994                           
   995                           ; BSR set to: 0
   996  00F554  20                 	db	32
   997  00F555  20                 	db	32
   998  00F556  20                 	db	32
   999  00F557  42                 	db	66	;'B'
  1000  00F558  79                 	db	121	;'y'
  1001  00F559  74                 	db	116	;'t'
  1002  00F55A  65                 	db	101	;'e'
  1003  00F55B  20                 	db	32
  1004  00F55C  25                 	db	37
  1005  00F55D  30                 	db	48	;'0'
  1006  00F55E  32                 	db	50	;'2'
  1007  00F55F  69                 	db	105	;'i'
  1008  00F560  3A                 	db	58	;':'
  1009  00F561  20                 	db	32
  1010  00F562  30                 	db	48	;'0'
  1011  00F563  78                 	db	120	;'x'
  1012  00F564  25                 	db	37
  1013  00F565  30                 	db	48	;'0'
  1014  00F566  32                 	db	50	;'2'
  1015  00F567  78                 	db	120	;'x'
  1016  00F568  20                 	db	32
  1017  00F569  2D                 	db	45
  1018  00F56A  20                 	db	32
  1019  00F56B  52                 	db	82	;'R'
  1020  00F56C  65                 	db	101	;'e'
  1021  00F56D  67                 	db	103	;'g'
  1022  00F56E  20                 	db	32
  1023  00F56F  25                 	db	37
  1024  00F570  69                 	db	105	;'i'
  1025  00F571  20                 	db	32
  1026  00F572  48                 	db	72	;'H'
  1027  00F573  69                 	db	105	;'i'
  1028  00F574  20                 	db	32
  1029  00F575  28                 	db	40
  1030  00F576  41                 	db	65	;'A'
  1031  00F577  64                 	db	100	;'d'
  1032  00F578  64                 	db	100	;'d'
  1033  00F579  2E                 	db	46
  1034  00F57A  20                 	db	32
  1035  00F57B  30                 	db	48	;'0'
  1036  00F57C  78                 	db	120	;'x'
  1037  00F57D  25                 	db	37
  1038  00F57E  30                 	db	48	;'0'
  1039  00F57F  32                 	db	50	;'2'
  1040  00F580  78                 	db	120	;'x'
  1041  00F581  25                 	db	37
  1042  00F582  30                 	db	48	;'0'
  1043  00F583  32                 	db	50	;'2'
  1044  00F584  78                 	db	120	;'x'
  1045  00F585  20                 	db	32
  1046  00F586  2F                 	db	47
  1047  00F587  20                 	db	32
  1048  00F588  43                 	db	67	;'C'
  1049  00F589  69                 	db	105	;'i'
  1050  00F58A  72                 	db	114	;'r'
  1051  00F58B  63                 	db	99	;'c'
  1052  00F58C  75                 	db	117	;'u'
  1053  00F58D  69                 	db	105	;'i'
  1054  00F58E  74                 	db	116	;'t'
  1055  00F58F  20                 	db	32
  1056  00F590  25                 	db	37
  1057  00F591  69                 	db	105	;'i'
  1058  00F592  29                 	db	41
  1059  00F593  0D                 	db	13
  1060  00F594  0A                 	db	10
  1061  00F595  00                 	db	0
  1062  00F596                     STR_116:
  1063                           
  1064                           ; BSR set to: 0
  1065  00F596  43                 	db	67	;'C'
  1066  00F597  6C                 	db	108	;'l'
  1067  00F598  65                 	db	101	;'e'
  1068  00F599  61                 	db	97	;'a'
  1069  00F59A  72                 	db	114	;'r'
  1070  00F59B  69                 	db	105	;'i'
  1071  00F59C  6E                 	db	110	;'n'
  1072  00F59D  67                 	db	103	;'g'
  1073  00F59E  20                 	db	32
  1074  00F59F  45                 	db	69	;'E'
  1075  00F5A0  45                 	db	69	;'E'
  1076  00F5A1  50                 	db	80	;'P'
  1077  00F5A2  52                 	db	82	;'R'
  1078  00F5A3  4F                 	db	79	;'O'
  1079  00F5A4  4D                 	db	77	;'M'
  1080  00F5A5  20                 	db	32
  1081  00F5A6  66                 	db	102	;'f'
  1082  00F5A7  72                 	db	114	;'r'
  1083  00F5A8  6F                 	db	111	;'o'
  1084  00F5A9  6D                 	db	109	;'m'
  1085  00F5AA  20                 	db	32
  1086  00F5AB  41                 	db	65	;'A'
  1087  00F5AC  64                 	db	100	;'d'
  1088  00F5AD  64                 	db	100	;'d'
  1089  00F5AE  72                 	db	114	;'r'
  1090  00F5AF  65                 	db	101	;'e'
  1091  00F5B0  73                 	db	115	;'s'
  1092  00F5B1  73                 	db	115	;'s'
  1093  00F5B2  3A                 	db	58	;':'
  1094  00F5B3  20                 	db	32
  1095  00F5B4  30                 	db	48	;'0'
  1096  00F5B5  78                 	db	120	;'x'
  1097  00F5B6  25                 	db	37
  1098  00F5B7  30                 	db	48	;'0'
  1099  00F5B8  34                 	db	52	;'4'
  1100  00F5B9  78                 	db	120	;'x'
  1101  00F5BA  20                 	db	32
  1102  00F5BB  66                 	db	102	;'f'
  1103  00F5BC  6F                 	db	111	;'o'
  1104  00F5BD  72                 	db	114	;'r'
  1105  00F5BE  20                 	db	32
  1106  00F5BF  6E                 	db	110	;'n'
  1107  00F5C0  75                 	db	117	;'u'
  1108  00F5C1  6D                 	db	109	;'m'
  1109  00F5C2  20                 	db	32
  1110  00F5C3  62                 	db	98	;'b'
  1111  00F5C4  79                 	db	121	;'y'
  1112  00F5C5  74                 	db	116	;'t'
  1113  00F5C6  65                 	db	101	;'e'
  1114  00F5C7  73                 	db	115	;'s'
  1115  00F5C8  3A                 	db	58	;':'
  1116  00F5C9  20                 	db	32
  1117  00F5CA  25                 	db	37
  1118  00F5CB  69                 	db	105	;'i'
  1119  00F5CC  20                 	db	32
  1120  00F5CD  0D                 	db	13
  1121  00F5CE  0A                 	db	10
  1122  00F5CF  00                 	db	0
  1123  00F5D0                     STR_20:
  1124                           
  1125                           ; BSR set to: 0
  1126  00F5D0  20                 	db	32
  1127  00F5D1  20                 	db	32
  1128  00F5D2  20                 	db	32
  1129  00F5D3  42                 	db	66	;'B'
  1130  00F5D4  79                 	db	121	;'y'
  1131  00F5D5  74                 	db	116	;'t'
  1132  00F5D6  65                 	db	101	;'e'
  1133  00F5D7  20                 	db	32
  1134  00F5D8  30                 	db	48	;'0'
  1135  00F5D9  31                 	db	49	;'1'
  1136  00F5DA  3A                 	db	58	;':'
  1137  00F5DB  20                 	db	32
  1138  00F5DC  30                 	db	48	;'0'
  1139  00F5DD  78                 	db	120	;'x'
  1140  00F5DE  25                 	db	37
  1141  00F5DF  30                 	db	48	;'0'
  1142  00F5E0  32                 	db	50	;'2'
  1143  00F5E1  78                 	db	120	;'x'
  1144  00F5E2  20                 	db	32
  1145  00F5E3  2D                 	db	45
  1146  00F5E4  20                 	db	32
  1147  00F5E5  46                 	db	70	;'F'
  1148  00F5E6  75                 	db	117	;'u'
  1149  00F5E7  6E                 	db	110	;'n'
  1150  00F5E8  63                 	db	99	;'c'
  1151  00F5E9  74                 	db	116	;'t'
  1152  00F5EA  69                 	db	105	;'i'
  1153  00F5EB  6F                 	db	111	;'o'
  1154  00F5EC  6E                 	db	110	;'n'
  1155  00F5ED  20                 	db	32
  1156  00F5EE  43                 	db	67	;'C'
  1157  00F5EF  6F                 	db	111	;'o'
  1158  00F5F0  64                 	db	100	;'d'
  1159  00F5F1  65                 	db	101	;'e'
  1160  00F5F2  20                 	db	32
  1161  00F5F3  28                 	db	40
  1162  00F5F4  57                 	db	87	;'W'
  1163  00F5F5  72                 	db	114	;'r'
  1164  00F5F6  69                 	db	105	;'i'
  1165  00F5F7  74                 	db	116	;'t'
  1166  00F5F8  65                 	db	101	;'e'
  1167  00F5F9  20                 	db	32
  1168  00F5FA  4D                 	db	77	;'M'
  1169  00F5FB  75                 	db	117	;'u'
  1170  00F5FC  6C                 	db	108	;'l'
  1171  00F5FD  74                 	db	116	;'t'
  1172  00F5FE  69                 	db	105	;'i'
  1173  00F5FF  20                 	db	32
  1174  00F600  52                 	db	82	;'R'
  1175  00F601  65                 	db	101	;'e'
  1176  00F602  67                 	db	103	;'g'
  1177  00F603  29                 	db	41
  1178  00F604  0D                 	db	13
  1179  00F605  0A                 	db	10
  1180  00F606  00                 	db	0
  1181  00F607                     STR_102:
  1182                           
  1183                           ; BSR set to: 0
  1184  00F607  20                 	db	32
  1185  00F608  20                 	db	32
  1186  00F609  20                 	db	32
  1187  00F60A  20                 	db	32
  1188  00F60B  20                 	db	32
  1189  00F60C  20                 	db	32
  1190  00F60D  41                 	db	65	;'A'
  1191  00F60E  64                 	db	100	;'d'
  1192  00F60F  64                 	db	100	;'d'
  1193  00F610  20                 	db	32
  1194  00F611  30                 	db	48	;'0'
  1195  00F612  78                 	db	120	;'x'
  1196  00F613  30                 	db	48	;'0'
  1197  00F614  35                 	db	53	;'5'
  1198  00F615  30                 	db	48	;'0'
  1199  00F616  30                 	db	48	;'0'
  1200  00F617  20                 	db	32
  1201  00F618  74                 	db	116	;'t'
  1202  00F619  6F                 	db	111	;'o'
  1203  00F61A  20                 	db	32
  1204  00F61B  30                 	db	48	;'0'
  1205  00F61C  78                 	db	120	;'x'
  1206  00F61D  30                 	db	48	;'0'
  1207  00F61E  35                 	db	53	;'5'
  1208  00F61F  30                 	db	48	;'0'
  1209  00F620  34                 	db	52	;'4'
  1210  00F621  20                 	db	32
  1211  00F622  2D                 	db	45
  1212  00F623  20                 	db	32
  1213  00F624  43                 	db	67	;'C'
  1214  00F625  6F                 	db	111	;'o'
  1215  00F626  6D                 	db	109	;'m'
  1216  00F627  70                 	db	112	;'p'
  1217  00F628  69                 	db	105	;'i'
  1218  00F629  6C                 	db	108	;'l'
  1219  00F62A  65                 	db	101	;'e'
  1220  00F62B  20                 	db	32
  1221  00F62C  54                 	db	84	;'T'
  1222  00F62D  69                 	db	105	;'i'
  1223  00F62E  6D                 	db	109	;'m'
  1224  00F62F  65                 	db	101	;'e'
  1225  00F630  20                 	db	32
  1226  00F631  2D                 	db	45
  1227  00F632  20                 	db	32
  1228  00F633  28                 	db	40
  1229  00F634  41                 	db	65	;'A'
  1230  00F635  53                 	db	83	;'S'
  1231  00F636  43                 	db	67	;'C'
  1232  00F637  49                 	db	73	;'I'
  1233  00F638  49                 	db	73	;'I'
  1234  00F639  29                 	db	41
  1235  00F63A  0D                 	db	13
  1236  00F63B  0A                 	db	10
  1237  00F63C  00                 	db	0
  1238  00F63D                     STR_8:
  1239                           
  1240                           ; BSR set to: 0
  1241  00F63D  43                 	db	67	;'C'
  1242  00F63E  6F                 	db	111	;'o'
  1243  00F63F  6D                 	db	109	;'m'
  1244  00F640  70                 	db	112	;'p'
  1245  00F641  6C                 	db	108	;'l'
  1246  00F642  65                 	db	101	;'e'
  1247  00F643  74                 	db	116	;'t'
  1248  00F644  65                 	db	101	;'e'
  1249  00F645  64                 	db	100	;'d'
  1250  00F646  20                 	db	32
  1251  00F647  41                 	db	65	;'A'
  1252  00F648  64                 	db	100	;'d'
  1253  00F649  64                 	db	100	;'d'
  1254  00F64A  69                 	db	105	;'i'
  1255  00F64B  6E                 	db	110	;'n'
  1256  00F64C  67                 	db	103	;'g'
  1257  00F64D  20                 	db	32
  1258  00F64E  72                 	db	114	;'r'
  1259  00F64F  78                 	db	120	;'x'
  1260  00F650  44                 	db	68	;'D'
  1261  00F651  61                 	db	97	;'a'
  1262  00F652  74                 	db	116	;'t'
  1263  00F653  61                 	db	97	;'a'
  1264  00F654  20                 	db	32
  1265  00F655  42                 	db	66	;'B'
  1266  00F656  75                 	db	117	;'u'
  1267  00F657  66                 	db	102	;'f'
  1268  00F658  66                 	db	102	;'f'
  1269  00F659  65                 	db	101	;'e'
  1270  00F65A  72                 	db	114	;'r'
  1271  00F65B  20                 	db	32
  1272  00F65C  74                 	db	116	;'t'
  1273  00F65D  6F                 	db	111	;'o'
  1274  00F65E  20                 	db	32
  1275  00F65F  4D                 	db	77	;'M'
  1276  00F660  6F                 	db	111	;'o'
  1277  00F661  64                 	db	100	;'d'
  1278  00F662  62                 	db	98	;'b'
  1279  00F663  75                 	db	117	;'u'
  1280  00F664  73                 	db	115	;'s'
  1281  00F665  44                 	db	68	;'D'
  1282  00F666  61                 	db	97	;'a'
  1283  00F667  74                 	db	116	;'t'
  1284  00F668  61                 	db	97	;'a'
  1285  00F669  20                 	db	32
  1286  00F66A  41                 	db	65	;'A'
  1287  00F66B  72                 	db	114	;'r'
  1288  00F66C  72                 	db	114	;'r'
  1289  00F66D  61                 	db	97	;'a'
  1290  00F66E  79                 	db	121	;'y'
  1291  00F66F  0D                 	db	13
  1292  00F670  0A                 	db	10
  1293  00F671  0A                 	db	10
  1294  00F672  00                 	db	0
  1295  00F673                     STR_12:
  1296                           
  1297                           ; BSR set to: 0
  1298  00F673  20                 	db	32
  1299  00F674  20                 	db	32
  1300  00F675  20                 	db	32
  1301  00F676  42                 	db	66	;'B'
  1302  00F677  79                 	db	121	;'y'
  1303  00F678  74                 	db	116	;'t'
  1304  00F679  65                 	db	101	;'e'
  1305  00F67A  20                 	db	32
  1306  00F67B  30                 	db	48	;'0'
  1307  00F67C  31                 	db	49	;'1'
  1308  00F67D  3A                 	db	58	;':'
  1309  00F67E  20                 	db	32
  1310  00F67F  30                 	db	48	;'0'
  1311  00F680  78                 	db	120	;'x'
  1312  00F681  25                 	db	37
  1313  00F682  30                 	db	48	;'0'
  1314  00F683  32                 	db	50	;'2'
  1315  00F684  78                 	db	120	;'x'
  1316  00F685  20                 	db	32
  1317  00F686  2D                 	db	45
  1318  00F687  20                 	db	32
  1319  00F688  46                 	db	70	;'F'
  1320  00F689  75                 	db	117	;'u'
  1321  00F68A  6E                 	db	110	;'n'
  1322  00F68B  63                 	db	99	;'c'
  1323  00F68C  74                 	db	116	;'t'
  1324  00F68D  69                 	db	105	;'i'
  1325  00F68E  6F                 	db	111	;'o'
  1326  00F68F  6E                 	db	110	;'n'
  1327  00F690  20                 	db	32
  1328  00F691  43                 	db	67	;'C'
  1329  00F692  6F                 	db	111	;'o'
  1330  00F693  64                 	db	100	;'d'
  1331  00F694  65                 	db	101	;'e'
  1332  00F695  20                 	db	32
  1333  00F696  28                 	db	40
  1334  00F697  52                 	db	82	;'R'
  1335  00F698  65                 	db	101	;'e'
  1336  00F699  61                 	db	97	;'a'
  1337  00F69A  64                 	db	100	;'d'
  1338  00F69B  20                 	db	32
  1339  00F69C  4D                 	db	77	;'M'
  1340  00F69D  75                 	db	117	;'u'
  1341  00F69E  6C                 	db	108	;'l'
  1342  00F69F  74                 	db	116	;'t'
  1343  00F6A0  69                 	db	105	;'i'
  1344  00F6A1  20                 	db	32
  1345  00F6A2  52                 	db	82	;'R'
  1346  00F6A3  65                 	db	101	;'e'
  1347  00F6A4  67                 	db	103	;'g'
  1348  00F6A5  29                 	db	41
  1349  00F6A6  0D                 	db	13
  1350  00F6A7  0A                 	db	10
  1351  00F6A8  00                 	db	0
  1352  00F6A9                     STR_59:
  1353                           
  1354                           ; BSR set to: 0
  1355  00F6A9  20                 	db	32
  1356  00F6AA  20                 	db	32
  1357  00F6AB  20                 	db	32
  1358  00F6AC  42                 	db	66	;'B'
  1359  00F6AD  79                 	db	121	;'y'
  1360  00F6AE  74                 	db	116	;'t'
  1361  00F6AF  65                 	db	101	;'e'
  1362  00F6B0  20                 	db	32
  1363  00F6B1  25                 	db	37
  1364  00F6B2  30                 	db	48	;'0'
  1365  00F6B3  32                 	db	50	;'2'
  1366  00F6B4  69                 	db	105	;'i'
  1367  00F6B5  3A                 	db	58	;':'
  1368  00F6B6  20                 	db	32
  1369  00F6B7  30                 	db	48	;'0'
  1370  00F6B8  78                 	db	120	;'x'
  1371  00F6B9  25                 	db	37
  1372  00F6BA  30                 	db	48	;'0'
  1373  00F6BB  32                 	db	50	;'2'
  1374  00F6BC  78                 	db	120	;'x'
  1375  00F6BD  20                 	db	32
  1376  00F6BE  2D                 	db	45
  1377  00F6BF  20                 	db	32
  1378  00F6C0  52                 	db	82	;'R'
  1379  00F6C1  65                 	db	101	;'e'
  1380  00F6C2  67                 	db	103	;'g'
  1381  00F6C3  20                 	db	32
  1382  00F6C4  25                 	db	37
  1383  00F6C5  69                 	db	105	;'i'
  1384  00F6C6  20                 	db	32
  1385  00F6C7  48                 	db	72	;'H'
  1386  00F6C8  69                 	db	105	;'i'
  1387  00F6C9  20                 	db	32
  1388  00F6CA  28                 	db	40
  1389  00F6CB  41                 	db	65	;'A'
  1390  00F6CC  64                 	db	100	;'d'
  1391  00F6CD  64                 	db	100	;'d'
  1392  00F6CE  2E                 	db	46
  1393  00F6CF  20                 	db	32
  1394  00F6D0  30                 	db	48	;'0'
  1395  00F6D1  78                 	db	120	;'x'
  1396  00F6D2  25                 	db	37
  1397  00F6D3  30                 	db	48	;'0'
  1398  00F6D4  32                 	db	50	;'2'
  1399  00F6D5  78                 	db	120	;'x'
  1400  00F6D6  20                 	db	32
  1401  00F6D7  25                 	db	37
  1402  00F6D8  30                 	db	48	;'0'
  1403  00F6D9  32                 	db	50	;'2'
  1404  00F6DA  78                 	db	120	;'x'
  1405  00F6DB  29                 	db	41
  1406  00F6DC  0D                 	db	13
  1407  00F6DD  0A                 	db	10
  1408  00F6DE  00                 	db	0
  1409  00F6DF                     STR_54:
  1410                           
  1411                           ; BSR set to: 0
  1412  00F6DF  52                 	db	82	;'R'
  1413  00F6E0  65                 	db	101	;'e'
  1414  00F6E1  71                 	db	113	;'q'
  1415  00F6E2  75                 	db	117	;'u'
  1416  00F6E3  65                 	db	101	;'e'
  1417  00F6E4  73                 	db	115	;'s'
  1418  00F6E5  74                 	db	116	;'t'
  1419  00F6E6  65                 	db	101	;'e'
  1420  00F6E7  64                 	db	100	;'d'
  1421  00F6E8  20                 	db	32
  1422  00F6E9  72                 	db	114	;'r'
  1423  00F6EA  65                 	db	101	;'e'
  1424  00F6EB  67                 	db	103	;'g'
  1425  00F6EC  69                 	db	105	;'i'
  1426  00F6ED  73                 	db	115	;'s'
  1427  00F6EE  74                 	db	116	;'t'
  1428  00F6EF  65                 	db	101	;'e'
  1429  00F6F0  72                 	db	114	;'r'
  1430  00F6F1  73                 	db	115	;'s'
  1431  00F6F2  20                 	db	32
  1432  00F6F3  6F                 	db	111	;'o'
  1433  00F6F4  75                 	db	117	;'u'
  1434  00F6F5  74                 	db	116	;'t'
  1435  00F6F6  20                 	db	32
  1436  00F6F7  6F                 	db	111	;'o'
  1437  00F6F8  66                 	db	102	;'f'
  1438  00F6F9  20                 	db	32
  1439  00F6FA  72                 	db	114	;'r'
  1440  00F6FB  61                 	db	97	;'a'
  1441  00F6FC  6E                 	db	110	;'n'
  1442  00F6FD  67                 	db	103	;'g'
  1443  00F6FE  65                 	db	101	;'e'
  1444  00F6FF  2E                 	db	46
  1445  00F700  20                 	db	32
  1446  00F701  20                 	db	32
  1447  00F702  30                 	db	48	;'0'
  1448  00F703  78                 	db	120	;'x'
  1449  00F704  30                 	db	48	;'0'
  1450  00F705  30                 	db	48	;'0'
  1451  00F706  30                 	db	48	;'0'
  1452  00F707  30                 	db	48	;'0'
  1453  00F708  20                 	db	32
  1454  00F709  74                 	db	116	;'t'
  1455  00F70A  6F                 	db	111	;'o'
  1456  00F70B  20                 	db	32
  1457  00F70C  30                 	db	48	;'0'
  1458  00F70D  78                 	db	120	;'x'
  1459  00F70E  30                 	db	48	;'0'
  1460  00F70F  32                 	db	50	;'2'
  1461  00F710  30                 	db	48	;'0'
  1462  00F711  2E                 	db	46
  1463  00F712  0D                 	db	13
  1464  00F713  0A                 	db	10
  1465  00F714  00                 	db	0
  1466  00F715                     STR_104:
  1467                           
  1468                           ; BSR set to: 0
  1469  00F715  20                 	db	32
  1470  00F716  20                 	db	32
  1471  00F717  20                 	db	32
  1472  00F718  30                 	db	48	;'0'
  1473  00F719  78                 	db	120	;'x'
  1474  00F71A  31                 	db	49	;'1'
  1475  00F71B  30                 	db	48	;'0'
  1476  00F71C  20                 	db	32
  1477  00F71D  2D                 	db	45
  1478  00F71E  20                 	db	32
  1479  00F71F  57                 	db	87	;'W'
  1480  00F720  72                 	db	114	;'r'
  1481  00F721  69                 	db	105	;'i'
  1482  00F722  74                 	db	116	;'t'
  1483  00F723  65                 	db	101	;'e'
  1484  00F724  20                 	db	32
  1485  00F725  4D                 	db	77	;'M'
  1486  00F726  75                 	db	117	;'u'
  1487  00F727  6C                 	db	108	;'l'
  1488  00F728  74                 	db	116	;'t'
  1489  00F729  69                 	db	105	;'i'
  1490  00F72A  70                 	db	112	;'p'
  1491  00F72B  6C                 	db	108	;'l'
  1492  00F72C  65                 	db	101	;'e'
  1493  00F72D  20                 	db	32
  1494  00F72E  52                 	db	82	;'R'
  1495  00F72F  65                 	db	101	;'e'
  1496  00F730  67                 	db	103	;'g'
  1497  00F731  69                 	db	105	;'i'
  1498  00F732  73                 	db	115	;'s'
  1499  00F733  74                 	db	116	;'t'
  1500  00F734  65                 	db	101	;'e'
  1501  00F735  72                 	db	114	;'r'
  1502  00F736  73                 	db	115	;'s'
  1503  00F737  20                 	db	32
  1504  00F738  28                 	db	40
  1505  00F739  4D                 	db	77	;'M'
  1506  00F73A  61                 	db	97	;'a'
  1507  00F73B  78                 	db	120	;'x'
  1508  00F73C  20                 	db	32
  1509  00F73D  33                 	db	51	;'3'
  1510  00F73E  32                 	db	50	;'2'
  1511  00F73F  78                 	db	120	;'x'
  1512  00F740  20                 	db	32
  1513  00F741  31                 	db	49	;'1'
  1514  00F742  36                 	db	54	;'6'
  1515  00F743  62                 	db	98	;'b'
  1516  00F744  69                 	db	105	;'i'
  1517  00F745  74                 	db	116	;'t'
  1518  00F746  29                 	db	41
  1519  00F747  0D                 	db	13
  1520  00F748  0A                 	db	10
  1521  00F749  00                 	db	0
  1522  00F74A                     STR_101:
  1523                           
  1524                           ; BSR set to: 0
  1525  00F74A  20                 	db	32
  1526  00F74B  20                 	db	32
  1527  00F74C  20                 	db	32
  1528  00F74D  20                 	db	32
  1529  00F74E  20                 	db	32
  1530  00F74F  20                 	db	32
  1531  00F750  41                 	db	65	;'A'
  1532  00F751  64                 	db	100	;'d'
  1533  00F752  64                 	db	100	;'d'
  1534  00F753  20                 	db	32
  1535  00F754  30                 	db	48	;'0'
  1536  00F755  78                 	db	120	;'x'
  1537  00F756  30                 	db	48	;'0'
  1538  00F757  34                 	db	52	;'4'
  1539  00F758  30                 	db	48	;'0'
  1540  00F759  30                 	db	48	;'0'
  1541  00F75A  20                 	db	32
  1542  00F75B  74                 	db	116	;'t'
  1543  00F75C  6F                 	db	111	;'o'
  1544  00F75D  20                 	db	32
  1545  00F75E  30                 	db	48	;'0'
  1546  00F75F  78                 	db	120	;'x'
  1547  00F760  30                 	db	48	;'0'
  1548  00F761  34                 	db	52	;'4'
  1549  00F762  30                 	db	48	;'0'
  1550  00F763  35                 	db	53	;'5'
  1551  00F764  20                 	db	32
  1552  00F765  2D                 	db	45
  1553  00F766  20                 	db	32
  1554  00F767  43                 	db	67	;'C'
  1555  00F768  6F                 	db	111	;'o'
  1556  00F769  6D                 	db	109	;'m'
  1557  00F76A  70                 	db	112	;'p'
  1558  00F76B  69                 	db	105	;'i'
  1559  00F76C  6C                 	db	108	;'l'
  1560  00F76D  65                 	db	101	;'e'
  1561  00F76E  20                 	db	32
  1562  00F76F  44                 	db	68	;'D'
  1563  00F770  61                 	db	97	;'a'
  1564  00F771  74                 	db	116	;'t'
  1565  00F772  65                 	db	101	;'e'
  1566  00F773  20                 	db	32
  1567  00F774  28                 	db	40
  1568  00F775  41                 	db	65	;'A'
  1569  00F776  53                 	db	83	;'S'
  1570  00F777  43                 	db	67	;'C'
  1571  00F778  49                 	db	73	;'I'
  1572  00F779  49                 	db	73	;'I'
  1573  00F77A  29                 	db	41
  1574  00F77B  0D                 	db	13
  1575  00F77C  0A                 	db	10
  1576  00F77D  00                 	db	0
  1577  00F77E                     STR_33:
  1578                           
  1579                           ; BSR set to: 0
  1580  00F77E  52                 	db	82	;'R'
  1581  00F77F  65                 	db	101	;'e'
  1582  00F780  67                 	db	103	;'g'
  1583  00F781  69                 	db	105	;'i'
  1584  00F782  73                 	db	115	;'s'
  1585  00F783  74                 	db	116	;'t'
  1586  00F784  65                 	db	101	;'e'
  1587  00F785  72                 	db	114	;'r'
  1588  00F786  73                 	db	115	;'s'
  1589  00F787  20                 	db	32
  1590  00F788  6F                 	db	111	;'o'
  1591  00F789  75                 	db	117	;'u'
  1592  00F78A  74                 	db	116	;'t'
  1593  00F78B  20                 	db	32
  1594  00F78C  6F                 	db	111	;'o'
  1595  00F78D  66                 	db	102	;'f'
  1596  00F78E  20                 	db	32
  1597  00F78F  72                 	db	114	;'r'
  1598  00F790  61                 	db	97	;'a'
  1599  00F791  6E                 	db	110	;'n'
  1600  00F792  67                 	db	103	;'g'
  1601  00F793  65                 	db	101	;'e'
  1602  00F794  2E                 	db	46
  1603  00F795  0D                 	db	13
  1604  00F796  0A                 	db	10
  1605  00F797  56                 	db	86	;'V'
  1606  00F798  61                 	db	97	;'a'
  1607  00F799  6C                 	db	108	;'l'
  1608  00F79A  69                 	db	105	;'i'
  1609  00F79B  64                 	db	100	;'d'
  1610  00F79C  3A                 	db	58	;':'
  1611  00F79D  20                 	db	32
  1612  00F79E  30                 	db	48	;'0'
  1613  00F79F  78                 	db	120	;'x'
  1614  00F7A0  30                 	db	48	;'0'
  1615  00F7A1  30                 	db	48	;'0'
  1616  00F7A2  30                 	db	48	;'0'
  1617  00F7A3  30                 	db	48	;'0'
  1618  00F7A4  20                 	db	32
  1619  00F7A5  74                 	db	116	;'t'
  1620  00F7A6  6F                 	db	111	;'o'
  1621  00F7A7  20                 	db	32
  1622  00F7A8  30                 	db	48	;'0'
  1623  00F7A9  78                 	db	120	;'x'
  1624  00F7AA  30                 	db	48	;'0'
  1625  00F7AB  30                 	db	48	;'0'
  1626  00F7AC  33                 	db	51	;'3'
  1627  00F7AD  31                 	db	49	;'1'
  1628  00F7AE  2E                 	db	46
  1629  00F7AF  0D                 	db	13
  1630  00F7B0  0A                 	db	10
  1631  00F7B1  00                 	db	0
  1632  00F7B2                     STR_51:
  1633                           
  1634                           ; BSR set to: 0
  1635  00F7B2  52                 	db	82	;'R'
  1636  00F7B3  65                 	db	101	;'e'
  1637  00F7B4  67                 	db	103	;'g'
  1638  00F7B5  69                 	db	105	;'i'
  1639  00F7B6  73                 	db	115	;'s'
  1640  00F7B7  74                 	db	116	;'t'
  1641  00F7B8  65                 	db	101	;'e'
  1642  00F7B9  72                 	db	114	;'r'
  1643  00F7BA  73                 	db	115	;'s'
  1644  00F7BB  20                 	db	32
  1645  00F7BC  6F                 	db	111	;'o'
  1646  00F7BD  75                 	db	117	;'u'
  1647  00F7BE  74                 	db	116	;'t'
  1648  00F7BF  20                 	db	32
  1649  00F7C0  6F                 	db	111	;'o'
  1650  00F7C1  66                 	db	102	;'f'
  1651  00F7C2  20                 	db	32
  1652  00F7C3  72                 	db	114	;'r'
  1653  00F7C4  61                 	db	97	;'a'
  1654  00F7C5  6E                 	db	110	;'n'
  1655  00F7C6  67                 	db	103	;'g'
  1656  00F7C7  65                 	db	101	;'e'
  1657  00F7C8  2E                 	db	46
  1658  00F7C9  0D                 	db	13
  1659  00F7CA  0A                 	db	10
  1660  00F7CB  56                 	db	86	;'V'
  1661  00F7CC  61                 	db	97	;'a'
  1662  00F7CD  6C                 	db	108	;'l'
  1663  00F7CE  69                 	db	105	;'i'
  1664  00F7CF  64                 	db	100	;'d'
  1665  00F7D0  3A                 	db	58	;':'
  1666  00F7D1  20                 	db	32
  1667  00F7D2  30                 	db	48	;'0'
  1668  00F7D3  78                 	db	120	;'x'
  1669  00F7D4  30                 	db	48	;'0'
  1670  00F7D5  36                 	db	54	;'6'
  1671  00F7D6  30                 	db	48	;'0'
  1672  00F7D7  30                 	db	48	;'0'
  1673  00F7D8  20                 	db	32
  1674  00F7D9  74                 	db	116	;'t'
  1675  00F7DA  6F                 	db	111	;'o'
  1676  00F7DB  20                 	db	32
  1677  00F7DC  30                 	db	48	;'0'
  1678  00F7DD  78                 	db	120	;'x'
  1679  00F7DE  30                 	db	48	;'0'
  1680  00F7DF  36                 	db	54	;'6'
  1681  00F7E0  30                 	db	48	;'0'
  1682  00F7E1  32                 	db	50	;'2'
  1683  00F7E2  2E                 	db	46
  1684  00F7E3  0D                 	db	13
  1685  00F7E4  0A                 	db	10
  1686  00F7E5  00                 	db	0
  1687  00F7E6                     STR_48:
  1688                           
  1689                           ; BSR set to: 0
  1690  00F7E6  52                 	db	82	;'R'
  1691  00F7E7  65                 	db	101	;'e'
  1692  00F7E8  67                 	db	103	;'g'
  1693  00F7E9  69                 	db	105	;'i'
  1694  00F7EA  73                 	db	115	;'s'
  1695  00F7EB  74                 	db	116	;'t'
  1696  00F7EC  65                 	db	101	;'e'
  1697  00F7ED  72                 	db	114	;'r'
  1698  00F7EE  73                 	db	115	;'s'
  1699  00F7EF  20                 	db	32
  1700  00F7F0  6F                 	db	111	;'o'
  1701  00F7F1  75                 	db	117	;'u'
  1702  00F7F2  74                 	db	116	;'t'
  1703  00F7F3  20                 	db	32
  1704  00F7F4  6F                 	db	111	;'o'
  1705  00F7F5  66                 	db	102	;'f'
  1706  00F7F6  20                 	db	32
  1707  00F7F7  72                 	db	114	;'r'
  1708  00F7F8  61                 	db	97	;'a'
  1709  00F7F9  6E                 	db	110	;'n'
  1710  00F7FA  67                 	db	103	;'g'
  1711  00F7FB  65                 	db	101	;'e'
  1712  00F7FC  2E                 	db	46
  1713  00F7FD  0D                 	db	13
  1714  00F7FE  0A                 	db	10
  1715  00F7FF  56                 	db	86	;'V'
  1716  00F800  61                 	db	97	;'a'
  1717  00F801  6C                 	db	108	;'l'
  1718  00F802  69                 	db	105	;'i'
  1719  00F803  64                 	db	100	;'d'
  1720  00F804  3A                 	db	58	;':'
  1721  00F805  20                 	db	32
  1722  00F806  30                 	db	48	;'0'
  1723  00F807  78                 	db	120	;'x'
  1724  00F808  30                 	db	48	;'0'
  1725  00F809  35                 	db	53	;'5'
  1726  00F80A  30                 	db	48	;'0'
  1727  00F80B  30                 	db	48	;'0'
  1728  00F80C  20                 	db	32
  1729  00F80D  74                 	db	116	;'t'
  1730  00F80E  6F                 	db	111	;'o'
  1731  00F80F  20                 	db	32
  1732  00F810  30                 	db	48	;'0'
  1733  00F811  78                 	db	120	;'x'
  1734  00F812  30                 	db	48	;'0'
  1735  00F813  35                 	db	53	;'5'
  1736  00F814  30                 	db	48	;'0'
  1737  00F815  33                 	db	51	;'3'
  1738  00F816  2E                 	db	46
  1739  00F817  0D                 	db	13
  1740  00F818  0A                 	db	10
  1741  00F819  00                 	db	0
  1742  00F81A                     STR_42:
  1743                           
  1744                           ; BSR set to: 0
  1745  00F81A  52                 	db	82	;'R'
  1746  00F81B  65                 	db	101	;'e'
  1747  00F81C  67                 	db	103	;'g'
  1748  00F81D  69                 	db	105	;'i'
  1749  00F81E  73                 	db	115	;'s'
  1750  00F81F  74                 	db	116	;'t'
  1751  00F820  65                 	db	101	;'e'
  1752  00F821  72                 	db	114	;'r'
  1753  00F822  73                 	db	115	;'s'
  1754  00F823  20                 	db	32
  1755  00F824  6F                 	db	111	;'o'
  1756  00F825  75                 	db	117	;'u'
  1757  00F826  74                 	db	116	;'t'
  1758  00F827  20                 	db	32
  1759  00F828  6F                 	db	111	;'o'
  1760  00F829  66                 	db	102	;'f'
  1761  00F82A  20                 	db	32
  1762  00F82B  72                 	db	114	;'r'
  1763  00F82C  61                 	db	97	;'a'
  1764  00F82D  6E                 	db	110	;'n'
  1765  00F82E  67                 	db	103	;'g'
  1766  00F82F  65                 	db	101	;'e'
  1767  00F830  2E                 	db	46
  1768  00F831  0D                 	db	13
  1769  00F832  0A                 	db	10
  1770  00F833  56                 	db	86	;'V'
  1771  00F834  61                 	db	97	;'a'
  1772  00F835  6C                 	db	108	;'l'
  1773  00F836  69                 	db	105	;'i'
  1774  00F837  64                 	db	100	;'d'
  1775  00F838  3A                 	db	58	;':'
  1776  00F839  20                 	db	32
  1777  00F83A  30                 	db	48	;'0'
  1778  00F83B  78                 	db	120	;'x'
  1779  00F83C  30                 	db	48	;'0'
  1780  00F83D  33                 	db	51	;'3'
  1781  00F83E  30                 	db	48	;'0'
  1782  00F83F  30                 	db	48	;'0'
  1783  00F840  20                 	db	32
  1784  00F841  74                 	db	116	;'t'
  1785  00F842  6F                 	db	111	;'o'
  1786  00F843  20                 	db	32
  1787  00F844  30                 	db	48	;'0'
  1788  00F845  78                 	db	120	;'x'
  1789  00F846  30                 	db	48	;'0'
  1790  00F847  33                 	db	51	;'3'
  1791  00F848  30                 	db	48	;'0'
  1792  00F849  34                 	db	52	;'4'
  1793  00F84A  2E                 	db	46
  1794  00F84B  0D                 	db	13
  1795  00F84C  0A                 	db	10
  1796  00F84D  00                 	db	0
  1797  00F84E                     STR_45:
  1798                           
  1799                           ; BSR set to: 0
  1800  00F84E  52                 	db	82	;'R'
  1801  00F84F  65                 	db	101	;'e'
  1802  00F850  67                 	db	103	;'g'
  1803  00F851  69                 	db	105	;'i'
  1804  00F852  73                 	db	115	;'s'
  1805  00F853  74                 	db	116	;'t'
  1806  00F854  65                 	db	101	;'e'
  1807  00F855  72                 	db	114	;'r'
  1808  00F856  73                 	db	115	;'s'
  1809  00F857  20                 	db	32
  1810  00F858  6F                 	db	111	;'o'
  1811  00F859  75                 	db	117	;'u'
  1812  00F85A  74                 	db	116	;'t'
  1813  00F85B  20                 	db	32
  1814  00F85C  6F                 	db	111	;'o'
  1815  00F85D  66                 	db	102	;'f'
  1816  00F85E  20                 	db	32
  1817  00F85F  72                 	db	114	;'r'
  1818  00F860  61                 	db	97	;'a'
  1819  00F861  6E                 	db	110	;'n'
  1820  00F862  67                 	db	103	;'g'
  1821  00F863  65                 	db	101	;'e'
  1822  00F864  2E                 	db	46
  1823  00F865  0D                 	db	13
  1824  00F866  0A                 	db	10
  1825  00F867  56                 	db	86	;'V'
  1826  00F868  61                 	db	97	;'a'
  1827  00F869  6C                 	db	108	;'l'
  1828  00F86A  69                 	db	105	;'i'
  1829  00F86B  64                 	db	100	;'d'
  1830  00F86C  3A                 	db	58	;':'
  1831  00F86D  20                 	db	32
  1832  00F86E  30                 	db	48	;'0'
  1833  00F86F  78                 	db	120	;'x'
  1834  00F870  30                 	db	48	;'0'
  1835  00F871  34                 	db	52	;'4'
  1836  00F872  30                 	db	48	;'0'
  1837  00F873  30                 	db	48	;'0'
  1838  00F874  20                 	db	32
  1839  00F875  74                 	db	116	;'t'
  1840  00F876  6F                 	db	111	;'o'
  1841  00F877  20                 	db	32
  1842  00F878  30                 	db	48	;'0'
  1843  00F879  78                 	db	120	;'x'
  1844  00F87A  30                 	db	48	;'0'
  1845  00F87B  34                 	db	52	;'4'
  1846  00F87C  30                 	db	48	;'0'
  1847  00F87D  35                 	db	53	;'5'
  1848  00F87E  2E                 	db	46
  1849  00F87F  0D                 	db	13
  1850  00F880  0A                 	db	10
  1851  00F881  00                 	db	0
  1852  00F882                     STR_36:
  1853                           
  1854                           ; BSR set to: 0
  1855  00F882  52                 	db	82	;'R'
  1856  00F883  65                 	db	101	;'e'
  1857  00F884  67                 	db	103	;'g'
  1858  00F885  69                 	db	105	;'i'
  1859  00F886  73                 	db	115	;'s'
  1860  00F887  74                 	db	116	;'t'
  1861  00F888  65                 	db	101	;'e'
  1862  00F889  72                 	db	114	;'r'
  1863  00F88A  73                 	db	115	;'s'
  1864  00F88B  20                 	db	32
  1865  00F88C  6F                 	db	111	;'o'
  1866  00F88D  75                 	db	117	;'u'
  1867  00F88E  74                 	db	116	;'t'
  1868  00F88F  20                 	db	32
  1869  00F890  6F                 	db	111	;'o'
  1870  00F891  66                 	db	102	;'f'
  1871  00F892  20                 	db	32
  1872  00F893  72                 	db	114	;'r'
  1873  00F894  61                 	db	97	;'a'
  1874  00F895  6E                 	db	110	;'n'
  1875  00F896  67                 	db	103	;'g'
  1876  00F897  65                 	db	101	;'e'
  1877  00F898  2E                 	db	46
  1878  00F899  0D                 	db	13
  1879  00F89A  0A                 	db	10
  1880  00F89B  56                 	db	86	;'V'
  1881  00F89C  61                 	db	97	;'a'
  1882  00F89D  6C                 	db	108	;'l'
  1883  00F89E  69                 	db	105	;'i'
  1884  00F89F  64                 	db	100	;'d'
  1885  00F8A0  3A                 	db	58	;':'
  1886  00F8A1  20                 	db	32
  1887  00F8A2  30                 	db	48	;'0'
  1888  00F8A3  78                 	db	120	;'x'
  1889  00F8A4  30                 	db	48	;'0'
  1890  00F8A5  31                 	db	49	;'1'
  1891  00F8A6  30                 	db	48	;'0'
  1892  00F8A7  30                 	db	48	;'0'
  1893  00F8A8  20                 	db	32
  1894  00F8A9  74                 	db	116	;'t'
  1895  00F8AA  6F                 	db	111	;'o'
  1896  00F8AB  20                 	db	32
  1897  00F8AC  30                 	db	48	;'0'
  1898  00F8AD  78                 	db	120	;'x'
  1899  00F8AE  30                 	db	48	;'0'
  1900  00F8AF  31                 	db	49	;'1'
  1901  00F8B0  30                 	db	48	;'0'
  1902  00F8B1  38                 	db	56	;'8'
  1903  00F8B2  2E                 	db	46
  1904  00F8B3  0D                 	db	13
  1905  00F8B4  0A                 	db	10
  1906  00F8B5  00                 	db	0
  1907  00F8B6                     STR_107:
  1908                           
  1909                           ; BSR set to: 0
  1910  00F8B6  20                 	db	32
  1911  00F8B7  20                 	db	32
  1912  00F8B8  20                 	db	32
  1913  00F8B9  3F                 	db	63	;'?'
  1914  00F8BA  20                 	db	32
  1915  00F8BB  2D                 	db	45
  1916  00F8BC  20                 	db	32
  1917  00F8BD  49                 	db	73	;'I'
  1918  00F8BE  6E                 	db	110	;'n'
  1919  00F8BF  69                 	db	105	;'i'
  1920  00F8C0  74                 	db	116	;'t'
  1921  00F8C1  61                 	db	97	;'a'
  1922  00F8C2  6C                 	db	108	;'l'
  1923  00F8C3  69                 	db	105	;'i'
  1924  00F8C4  73                 	db	115	;'s'
  1925  00F8C5  65                 	db	101	;'e'
  1926  00F8C6  20                 	db	32
  1927  00F8C7  61                 	db	97	;'a'
  1928  00F8C8  6E                 	db	110	;'n'
  1929  00F8C9  64                 	db	100	;'d'
  1930  00F8CA  20                 	db	32
  1931  00F8CB  64                 	db	100	;'d'
  1932  00F8CC  69                 	db	105	;'i'
  1933  00F8CD  73                 	db	115	;'s'
  1934  00F8CE  70                 	db	112	;'p'
  1935  00F8CF  6C                 	db	108	;'l'
  1936  00F8D0  61                 	db	97	;'a'
  1937  00F8D1  79                 	db	121	;'y'
  1938  00F8D2  20                 	db	32
  1939  00F8D3  63                 	db	99	;'c'
  1940  00F8D4  61                 	db	97	;'a'
  1941  00F8D5  72                 	db	114	;'r'
  1942  00F8D6  64                 	db	100	;'d'
  1943  00F8D7  20                 	db	32
  1944  00F8D8  64                 	db	100	;'d'
  1945  00F8D9  65                 	db	101	;'e'
  1946  00F8DA  74                 	db	116	;'t'
  1947  00F8DB  61                 	db	97	;'a'
  1948  00F8DC  69                 	db	105	;'i'
  1949  00F8DD  6C                 	db	108	;'l'
  1950  00F8DE  73                 	db	115	;'s'
  1951  00F8DF  0D                 	db	13
  1952  00F8E0  0A                 	db	10
  1953  00F8E1  00                 	db	0
  1954  00F8E2                     STR_98:
  1955                           
  1956                           ; BSR set to: 0
  1957  00F8E2  20                 	db	32
  1958  00F8E3  20                 	db	32
  1959  00F8E4  20                 	db	32
  1960  00F8E5  20                 	db	32
  1961  00F8E6  20                 	db	32
  1962  00F8E7  20                 	db	32
  1963  00F8E8  41                 	db	65	;'A'
  1964  00F8E9  64                 	db	100	;'d'
  1965  00F8EA  64                 	db	100	;'d'
  1966  00F8EB  20                 	db	32
  1967  00F8EC  30                 	db	48	;'0'
  1968  00F8ED  78                 	db	120	;'x'
  1969  00F8EE  30                 	db	48	;'0'
  1970  00F8EF  31                 	db	49	;'1'
  1971  00F8F0  30                 	db	48	;'0'
  1972  00F8F1  30                 	db	48	;'0'
  1973  00F8F2  20                 	db	32
  1974  00F8F3  74                 	db	116	;'t'
  1975  00F8F4  6F                 	db	111	;'o'
  1976  00F8F5  20                 	db	32
  1977  00F8F6  30                 	db	48	;'0'
  1978  00F8F7  78                 	db	120	;'x'
  1979  00F8F8  30                 	db	48	;'0'
  1980  00F8F9  31                 	db	49	;'1'
  1981  00F8FA  30                 	db	48	;'0'
  1982  00F8FB  38                 	db	56	;'8'
  1983  00F8FC  20                 	db	32
  1984  00F8FD  2D                 	db	45
  1985  00F8FE  20                 	db	32
  1986  00F8FF  50                 	db	80	;'P'
  1987  00F900  61                 	db	97	;'a'
  1988  00F901  72                 	db	114	;'r'
  1989  00F902  74                 	db	116	;'t'
  1990  00F903  20                 	db	32
  1991  00F904  4E                 	db	78	;'N'
  1992  00F905  75                 	db	117	;'u'
  1993  00F906  6D                 	db	109	;'m'
  1994  00F907  62                 	db	98	;'b'
  1995  00F908  65                 	db	101	;'e'
  1996  00F909  72                 	db	114	;'r'
  1997  00F90A  0D                 	db	13
  1998  00F90B  0A                 	db	10
  1999  00F90C  00                 	db	0
  2000  00F90D                     STR_91:
  2001                           
  2002                           ; BSR set to: 0
  2003  00F90D  43                 	db	67	;'C'
  2004  00F90E  6F                 	db	111	;'o'
  2005  00F90F  6D                 	db	109	;'m'
  2006  00F910  70                 	db	112	;'p'
  2007  00F911  69                 	db	105	;'i'
  2008  00F912  6C                 	db	108	;'l'
  2009  00F913  65                 	db	101	;'e'
  2010  00F914  64                 	db	100	;'d'
  2011  00F915  20                 	db	32
  2012  00F916  6F                 	db	111	;'o'
  2013  00F917  6E                 	db	110	;'n'
  2014  00F918  20                 	db	32
  2015  00F919  25                 	db	37
  2016  00F91A  73                 	db	115	;'s'
  2017  00F91B  20                 	db	32
  2018  00F91C  61                 	db	97	;'a'
  2019  00F91D  74                 	db	116	;'t'
  2020  00F91E  20                 	db	32
  2021  00F91F  25                 	db	37
  2022  00F920  73                 	db	115	;'s'
  2023  00F921  20                 	db	32
  2024  00F922  62                 	db	98	;'b'
  2025  00F923  79                 	db	121	;'y'
  2026  00F924  20                 	db	32
  2027  00F925  58                 	db	88	;'X'
  2028  00F926  43                 	db	67	;'C'
  2029  00F927  38                 	db	56	;'8'
  2030  00F928  20                 	db	32
  2031  00F929  76                 	db	118	;'v'
  2032  00F92A  65                 	db	101	;'e'
  2033  00F92B  72                 	db	114	;'r'
  2034  00F92C  73                 	db	115	;'s'
  2035  00F92D  69                 	db	105	;'i'
  2036  00F92E  6F                 	db	111	;'o'
  2037  00F92F  6E                 	db	110	;'n'
  2038  00F930  20                 	db	32
  2039  00F931  25                 	db	37
  2040  00F932  75                 	db	117	;'u'
  2041  00F933  0D                 	db	13
  2042  00F934  0A                 	db	10
  2043  00F935  0A                 	db	10
  2044  00F936  00                 	db	0
  2045  00F937                     STR_96:
  2046                           
  2047                           ; BSR set to: 0
  2048  00F937  20                 	db	32
  2049  00F938  20                 	db	32
  2050  00F939  20                 	db	32
  2051  00F93A  30                 	db	48	;'0'
  2052  00F93B  78                 	db	120	;'x'
  2053  00F93C  30                 	db	48	;'0'
  2054  00F93D  33                 	db	51	;'3'
  2055  00F93E  20                 	db	32
  2056  00F93F  2D                 	db	45
  2057  00F940  20                 	db	32
  2058  00F941  52                 	db	82	;'R'
  2059  00F942  65                 	db	101	;'e'
  2060  00F943  61                 	db	97	;'a'
  2061  00F944  64                 	db	100	;'d'
  2062  00F945  20                 	db	32
  2063  00F946  4D                 	db	77	;'M'
  2064  00F947  75                 	db	117	;'u'
  2065  00F948  6C                 	db	108	;'l'
  2066  00F949  74                 	db	116	;'t'
  2067  00F94A  69                 	db	105	;'i'
  2068  00F94B  70                 	db	112	;'p'
  2069  00F94C  6C                 	db	108	;'l'
  2070  00F94D  65                 	db	101	;'e'
  2071  00F94E  20                 	db	32
  2072  00F94F  31                 	db	49	;'1'
  2073  00F950  36                 	db	54	;'6'
  2074  00F951  62                 	db	98	;'b'
  2075  00F952  69                 	db	105	;'i'
  2076  00F953  74                 	db	116	;'t'
  2077  00F954  20                 	db	32
  2078  00F955  52                 	db	82	;'R'
  2079  00F956  65                 	db	101	;'e'
  2080  00F957  67                 	db	103	;'g'
  2081  00F958  69                 	db	105	;'i'
  2082  00F959  73                 	db	115	;'s'
  2083  00F95A  74                 	db	116	;'t'
  2084  00F95B  65                 	db	101	;'e'
  2085  00F95C  72                 	db	114	;'r'
  2086  00F95D  73                 	db	115	;'s'
  2087  00F95E  0D                 	db	13
  2088  00F95F  0A                 	db	10
  2089  00F960  00                 	db	0
  2090  00F961                     STR_39:
  2091                           
  2092                           ; BSR set to: 0
  2093  00F961  52                 	db	82	;'R'
  2094  00F962  65                 	db	101	;'e'
  2095  00F963  67                 	db	103	;'g'
  2096  00F964  69                 	db	105	;'i'
  2097  00F965  73                 	db	115	;'s'
  2098  00F966  74                 	db	116	;'t'
  2099  00F967  65                 	db	101	;'e'
  2100  00F968  72                 	db	114	;'r'
  2101  00F969  73                 	db	115	;'s'
  2102  00F96A  20                 	db	32
  2103  00F96B  6F                 	db	111	;'o'
  2104  00F96C  75                 	db	117	;'u'
  2105  00F96D  74                 	db	116	;'t'
  2106  00F96E  20                 	db	32
  2107  00F96F  6F                 	db	111	;'o'
  2108  00F970  66                 	db	102	;'f'
  2109  00F971  20                 	db	32
  2110  00F972  72                 	db	114	;'r'
  2111  00F973  61                 	db	97	;'a'
  2112  00F974  6E                 	db	110	;'n'
  2113  00F975  67                 	db	103	;'g'
  2114  00F976  65                 	db	101	;'e'
  2115  00F977  2E                 	db	46
  2116  00F978  0D                 	db	13
  2117  00F979  0A                 	db	10
  2118  00F97A  56                 	db	86	;'V'
  2119  00F97B  61                 	db	97	;'a'
  2120  00F97C  6C                 	db	108	;'l'
  2121  00F97D  69                 	db	105	;'i'
  2122  00F97E  64                 	db	100	;'d'
  2123  00F97F  3A                 	db	58	;':'
  2124  00F980  20                 	db	32
  2125  00F981  30                 	db	48	;'0'
  2126  00F982  78                 	db	120	;'x'
  2127  00F983  30                 	db	48	;'0'
  2128  00F984  35                 	db	53	;'5'
  2129  00F985  31                 	db	49	;'1'
  2130  00F986  32                 	db	50	;'2'
  2131  00F987  2E                 	db	46
  2132  00F988  0D                 	db	13
  2133  00F989  0A                 	db	10
  2134  00F98A  00                 	db	0
  2135  00F98B                     STR_100:
  2136                           
  2137                           ; BSR set to: 0
  2138  00F98B  20                 	db	32
  2139  00F98C  20                 	db	32
  2140  00F98D  20                 	db	32
  2141  00F98E  20                 	db	32
  2142  00F98F  20                 	db	32
  2143  00F990  20                 	db	32
  2144  00F991  41                 	db	65	;'A'
  2145  00F992  64                 	db	100	;'d'
  2146  00F993  64                 	db	100	;'d'
  2147  00F994  20                 	db	32
  2148  00F995  30                 	db	48	;'0'
  2149  00F996  78                 	db	120	;'x'
  2150  00F997  30                 	db	48	;'0'
  2151  00F998  33                 	db	51	;'3'
  2152  00F999  30                 	db	48	;'0'
  2153  00F99A  30                 	db	48	;'0'
  2154  00F99B  20                 	db	32
  2155  00F99C  74                 	db	116	;'t'
  2156  00F99D  6F                 	db	111	;'o'
  2157  00F99E  20                 	db	32
  2158  00F99F  30                 	db	48	;'0'
  2159  00F9A0  78                 	db	120	;'x'
  2160  00F9A1  30                 	db	48	;'0'
  2161  00F9A2  33                 	db	51	;'3'
  2162  00F9A3  30                 	db	48	;'0'
  2163  00F9A4  34                 	db	52	;'4'
  2164  00F9A5  20                 	db	32
  2165  00F9A6  2D                 	db	45
  2166  00F9A7  20                 	db	32
  2167  00F9A8  52                 	db	82	;'R'
  2168  00F9A9  65                 	db	101	;'e'
  2169  00F9AA  76                 	db	118	;'v'
  2170  00F9AB  69                 	db	105	;'i'
  2171  00F9AC  73                 	db	115	;'s'
  2172  00F9AD  69                 	db	105	;'i'
  2173  00F9AE  6F                 	db	111	;'o'
  2174  00F9AF  6E                 	db	110	;'n'
  2175  00F9B0  0D                 	db	13
  2176  00F9B1  0A                 	db	10
  2177  00F9B2  00                 	db	0
  2178  00F9B3                     STR_86:
  2179                           
  2180                           ; BSR set to: 0
  2181  00F9B3  0D                 	db	13
  2182  00F9B4  0A                 	db	10
  2183  00F9B5  44                 	db	68	;'D'
  2184  00F9B6  61                 	db	97	;'a'
  2185  00F9B7  6E                 	db	110	;'n'
  2186  00F9B8  20                 	db	32
  2187  00F9B9  61                 	db	97	;'a'
  2188  00F9BA  6E                 	db	110	;'n'
  2189  00F9BB  64                 	db	100	;'d'
  2190  00F9BC  20                 	db	32
  2191  00F9BD  53                 	db	83	;'S'
  2192  00F9BE  61                 	db	97	;'a'
  2193  00F9BF  6D                 	db	109	;'m'
  2194  00F9C0  27                 	db	39
  2195  00F9C1  73                 	db	115	;'s'
  2196  00F9C2  20                 	db	32
  2197  00F9C3  4D                 	db	77	;'M'
  2198  00F9C4  6F                 	db	111	;'o'
  2199  00F9C5  64                 	db	100	;'d'
  2200  00F9C6  62                 	db	98	;'b'
  2201  00F9C7  75                 	db	117	;'u'
  2202  00F9C8  73                 	db	115	;'s'
  2203  00F9C9  20                 	db	32
  2204  00F9CA  47                 	db	71	;'G'
  2205  00F9CB  50                 	db	80	;'P'
  2206  00F9CC  49                 	db	73	;'I'
  2207  00F9CD  4F                 	db	79	;'O'
  2208  00F9CE  20                 	db	32
  2209  00F9CF  45                 	db	69	;'E'
  2210  00F9D0  78                 	db	120	;'x'
  2211  00F9D1  70                 	db	112	;'p'
  2212  00F9D2  61                 	db	97	;'a'
  2213  00F9D3  6E                 	db	110	;'n'
  2214  00F9D4  73                 	db	115	;'s'
  2215  00F9D5  69                 	db	105	;'i'
  2216  00F9D6  6F                 	db	111	;'o'
  2217  00F9D7  6E                 	db	110	;'n'
  2218  00F9D8  0D                 	db	13
  2219  00F9D9  0A                 	db	10
  2220  00F9DA  00                 	db	0
  2221  00F9DB                     STR_117:
  2222                           
  2223                           ; BSR set to: 0
  2224  00F9DB  0D                 	db	13
  2225  00F9DC  0A                 	db	10
  2226  00F9DD  45                 	db	69	;'E'
  2227  00F9DE  6E                 	db	110	;'n'
  2228  00F9DF  74                 	db	116	;'t'
  2229  00F9E0  65                 	db	101	;'e'
  2230  00F9E1  72                 	db	114	;'r'
  2231  00F9E2  20                 	db	32
  2232  00F9E3  63                 	db	99	;'c'
  2233  00F9E4  61                 	db	97	;'a'
  2234  00F9E5  72                 	db	114	;'r'
  2235  00F9E6  64                 	db	100	;'d'
  2236  00F9E7  20                 	db	32
  2237  00F9E8  25                 	db	37
  2238  00F9E9  73                 	db	115	;'s'
  2239  00F9EA  20                 	db	32
  2240  00F9EB  28                 	db	40
  2241  00F9EC  6D                 	db	109	;'m'
  2242  00F9ED  61                 	db	97	;'a'
  2243  00F9EE  78                 	db	120	;'x'
  2244  00F9EF  20                 	db	32
  2245  00F9F0  25                 	db	37
  2246  00F9F1  69                 	db	105	;'i'
  2247  00F9F2  20                 	db	32
  2248  00F9F3  63                 	db	99	;'c'
  2249  00F9F4  68                 	db	104	;'h'
  2250  00F9F5  61                 	db	97	;'a'
  2251  00F9F6  72                 	db	114	;'r'
  2252  00F9F7  61                 	db	97	;'a'
  2253  00F9F8  63                 	db	99	;'c'
  2254  00F9F9  74                 	db	116	;'t'
  2255  00F9FA  65                 	db	101	;'e'
  2256  00F9FB  72                 	db	114	;'r'
  2257  00F9FC  73                 	db	115	;'s'
  2258  00F9FD  29                 	db	41
  2259  00F9FE  3A                 	db	58	;':'
  2260  00F9FF  20                 	db	32
  2261  00FA00  00                 	db	0
  2262  00FA01                     STR_58:
  2263                           
  2264                           ; BSR set to: 0
  2265  00FA01  20                 	db	32
  2266  00FA02  20                 	db	32
  2267  00FA03  20                 	db	32
  2268  00FA04  42                 	db	66	;'B'
  2269  00FA05  79                 	db	121	;'y'
  2270  00FA06  74                 	db	116	;'t'
  2271  00FA07  65                 	db	101	;'e'
  2272  00FA08  20                 	db	32
  2273  00FA09  30                 	db	48	;'0'
  2274  00FA0A  32                 	db	50	;'2'
  2275  00FA0B  3A                 	db	58	;':'
  2276  00FA0C  20                 	db	32
  2277  00FA0D  30                 	db	48	;'0'
  2278  00FA0E  78                 	db	120	;'x'
  2279  00FA0F  25                 	db	37
  2280  00FA10  30                 	db	48	;'0'
  2281  00FA11  32                 	db	50	;'2'
  2282  00FA12  78                 	db	120	;'x'
  2283  00FA13  20                 	db	32
  2284  00FA14  2D                 	db	45
  2285  00FA15  20                 	db	32
  2286  00FA16  4E                 	db	78	;'N'
  2287  00FA17  75                 	db	117	;'u'
  2288  00FA18  6D                 	db	109	;'m'
  2289  00FA19  20                 	db	32
  2290  00FA1A  42                 	db	66	;'B'
  2291  00FA1B  79                 	db	121	;'y'
  2292  00FA1C  74                 	db	116	;'t'
  2293  00FA1D  65                 	db	101	;'e'
  2294  00FA1E  73                 	db	115	;'s'
  2295  00FA1F  20                 	db	32
  2296  00FA20  4D                 	db	77	;'M'
  2297  00FA21  6F                 	db	111	;'o'
  2298  00FA22  72                 	db	114	;'r'
  2299  00FA23  65                 	db	101	;'e'
  2300  00FA24  0D                 	db	13
  2301  00FA25  0A                 	db	10
  2302  00FA26  00                 	db	0
  2303  00FA27                     STR_25:
  2304                           
  2305                           ; BSR set to: 0
  2306  00FA27  20                 	db	32
  2307  00FA28  20                 	db	32
  2308  00FA29  20                 	db	32
  2309  00FA2A  42                 	db	66	;'B'
  2310  00FA2B  79                 	db	121	;'y'
  2311  00FA2C  74                 	db	116	;'t'
  2312  00FA2D  65                 	db	101	;'e'
  2313  00FA2E  20                 	db	32
  2314  00FA2F  30                 	db	48	;'0'
  2315  00FA30  36                 	db	54	;'6'
  2316  00FA31  3A                 	db	58	;':'
  2317  00FA32  20                 	db	32
  2318  00FA33  30                 	db	48	;'0'
  2319  00FA34  78                 	db	120	;'x'
  2320  00FA35  25                 	db	37
  2321  00FA36  30                 	db	48	;'0'
  2322  00FA37  32                 	db	50	;'2'
  2323  00FA38  78                 	db	120	;'x'
  2324  00FA39  20                 	db	32
  2325  00FA3A  2D                 	db	45
  2326  00FA3B  20                 	db	32
  2327  00FA3C  4E                 	db	78	;'N'
  2328  00FA3D  75                 	db	117	;'u'
  2329  00FA3E  6D                 	db	109	;'m'
  2330  00FA3F  20                 	db	32
  2331  00FA40  42                 	db	66	;'B'
  2332  00FA41  79                 	db	121	;'y'
  2333  00FA42  74                 	db	116	;'t'
  2334  00FA43  65                 	db	101	;'e'
  2335  00FA44  73                 	db	115	;'s'
  2336  00FA45  20                 	db	32
  2337  00FA46  4D                 	db	77	;'M'
  2338  00FA47  6F                 	db	111	;'o'
  2339  00FA48  72                 	db	114	;'r'
  2340  00FA49  65                 	db	101	;'e'
  2341  00FA4A  0D                 	db	13
  2342  00FA4B  0A                 	db	10
  2343  00FA4C  00                 	db	0
  2344  00FA4D                     STR_13:
  2345                           
  2346                           ; BSR set to: 0
  2347  00FA4D  20                 	db	32
  2348  00FA4E  20                 	db	32
  2349  00FA4F  20                 	db	32
  2350  00FA50  42                 	db	66	;'B'
  2351  00FA51  79                 	db	121	;'y'
  2352  00FA52  74                 	db	116	;'t'
  2353  00FA53  65                 	db	101	;'e'
  2354  00FA54  20                 	db	32
  2355  00FA55  30                 	db	48	;'0'
  2356  00FA56  32                 	db	50	;'2'
  2357  00FA57  3A                 	db	58	;':'
  2358  00FA58  20                 	db	32
  2359  00FA59  30                 	db	48	;'0'
  2360  00FA5A  78                 	db	120	;'x'
  2361  00FA5B  25                 	db	37
  2362  00FA5C  30                 	db	48	;'0'
  2363  00FA5D  32                 	db	50	;'2'
  2364  00FA5E  78                 	db	120	;'x'
  2365  00FA5F  20                 	db	32
  2366  00FA60  2D                 	db	45
  2367  00FA61  20                 	db	32
  2368  00FA62  31                 	db	49	;'1'
  2369  00FA63  73                 	db	115	;'s'
  2370  00FA64  74                 	db	116	;'t'
  2371  00FA65  20                 	db	32
  2372  00FA66  52                 	db	82	;'R'
  2373  00FA67  65                 	db	101	;'e'
  2374  00FA68  67                 	db	103	;'g'
  2375  00FA69  20                 	db	32
  2376  00FA6A  41                 	db	65	;'A'
  2377  00FA6B  64                 	db	100	;'d'
  2378  00FA6C  64                 	db	100	;'d'
  2379  00FA6D  20                 	db	32
  2380  00FA6E  48                 	db	72	;'H'
  2381  00FA6F  69                 	db	105	;'i'
  2382  00FA70  0D                 	db	13
  2383  00FA71  0A                 	db	10
  2384  00FA72  00                 	db	0
  2385  00FA73                     STR_14:
  2386                           
  2387                           ; BSR set to: 0
  2388  00FA73  20                 	db	32
  2389  00FA74  20                 	db	32
  2390  00FA75  20                 	db	32
  2391  00FA76  42                 	db	66	;'B'
  2392  00FA77  79                 	db	121	;'y'
  2393  00FA78  74                 	db	116	;'t'
  2394  00FA79  65                 	db	101	;'e'
  2395  00FA7A  20                 	db	32
  2396  00FA7B  30                 	db	48	;'0'
  2397  00FA7C  33                 	db	51	;'3'
  2398  00FA7D  3A                 	db	58	;':'
  2399  00FA7E  20                 	db	32
  2400  00FA7F  30                 	db	48	;'0'
  2401  00FA80  78                 	db	120	;'x'
  2402  00FA81  25                 	db	37
  2403  00FA82  30                 	db	48	;'0'
  2404  00FA83  32                 	db	50	;'2'
  2405  00FA84  78                 	db	120	;'x'
  2406  00FA85  20                 	db	32
  2407  00FA86  2D                 	db	45
  2408  00FA87  20                 	db	32
  2409  00FA88  31                 	db	49	;'1'
  2410  00FA89  73                 	db	115	;'s'
  2411  00FA8A  74                 	db	116	;'t'
  2412  00FA8B  20                 	db	32
  2413  00FA8C  52                 	db	82	;'R'
  2414  00FA8D  65                 	db	101	;'e'
  2415  00FA8E  67                 	db	103	;'g'
  2416  00FA8F  20                 	db	32
  2417  00FA90  41                 	db	65	;'A'
  2418  00FA91  64                 	db	100	;'d'
  2419  00FA92  64                 	db	100	;'d'
  2420  00FA93  20                 	db	32
  2421  00FA94  4C                 	db	76	;'L'
  2422  00FA95  6F                 	db	111	;'o'
  2423  00FA96  0D                 	db	13
  2424  00FA97  0A                 	db	10
  2425  00FA98  00                 	db	0
  2426  00FA99                     STR_108:
  2427                           
  2428                           ; BSR set to: 0
  2429  00FA99  20                 	db	32
  2430  00FA9A  20                 	db	32
  2431  00FA9B  20                 	db	32
  2432  00FA9C  73                 	db	115	;'s'
  2433  00FA9D  65                 	db	101	;'e'
  2434  00FA9E  72                 	db	114	;'r'
  2435  00FA9F  69                 	db	105	;'i'
  2436  00FAA0  61                 	db	97	;'a'
  2437  00FAA1  6C                 	db	108	;'l'
  2438  00FAA2  20                 	db	32
  2439  00FAA3  2D                 	db	45
  2440  00FAA4  20                 	db	32
  2441  00FAA5  53                 	db	83	;'S'
  2442  00FAA6  65                 	db	101	;'e'
  2443  00FAA7  74                 	db	116	;'t'
  2444  00FAA8  20                 	db	32
  2445  00FAA9  63                 	db	99	;'c'
  2446  00FAAA  61                 	db	97	;'a'
  2447  00FAAB  72                 	db	114	;'r'
  2448  00FAAC  64                 	db	100	;'d'
  2449  00FAAD  20                 	db	32
  2450  00FAAE  73                 	db	115	;'s'
  2451  00FAAF  65                 	db	101	;'e'
  2452  00FAB0  72                 	db	114	;'r'
  2453  00FAB1  69                 	db	105	;'i'
  2454  00FAB2  61                 	db	97	;'a'
  2455  00FAB3  6C                 	db	108	;'l'
  2456  00FAB4  20                 	db	32
  2457  00FAB5  6E                 	db	110	;'n'
  2458  00FAB6  75                 	db	117	;'u'
  2459  00FAB7  6D                 	db	109	;'m'
  2460  00FAB8  62                 	db	98	;'b'
  2461  00FAB9  65                 	db	101	;'e'
  2462  00FABA  72                 	db	114	;'r'
  2463  00FABB  0D                 	db	13
  2464  00FABC  0A                 	db	10
  2465  00FABD  00                 	db	0
  2466  00FABE                     STR_75:
  2467                           
  2468                           ; BSR set to: 0
  2469  00FABE  0D                 	db	13
  2470  00FABF  0A                 	db	10
  2471  00FAC0  52                 	db	82	;'R'
  2472  00FAC1  65                 	db	101	;'e'
  2473  00FAC2  63                 	db	99	;'c'
  2474  00FAC3  65                 	db	101	;'e'
  2475  00FAC4  69                 	db	105	;'i'
  2476  00FAC5  76                 	db	118	;'v'
  2477  00FAC6  65                 	db	101	;'e'
  2478  00FAC7  64                 	db	100	;'d'
  2479  00FAC8  20                 	db	32
  2480  00FAC9  4D                 	db	77	;'M'
  2481  00FACA  6F                 	db	111	;'o'
  2482  00FACB  64                 	db	100	;'d'
  2483  00FACC  62                 	db	98	;'b'
  2484  00FACD  75                 	db	117	;'u'
  2485  00FACE  73                 	db	115	;'s'
  2486  00FACF  20                 	db	32
  2487  00FAD0  43                 	db	67	;'C'
  2488  00FAD1  52                 	db	82	;'R'
  2489  00FAD2  43                 	db	67	;'C'
  2490  00FAD3  20                 	db	32
  2491  00FAD4  63                 	db	99	;'c'
  2492  00FAD5  68                 	db	104	;'h'
  2493  00FAD6  65                 	db	101	;'e'
  2494  00FAD7  63                 	db	99	;'c'
  2495  00FAD8  6B                 	db	107	;'k'
  2496  00FAD9  65                 	db	101	;'e'
  2497  00FADA  64                 	db	100	;'d'
  2498  00FADB  20                 	db	32
  2499  00FADC  6F                 	db	111	;'o'
  2500  00FADD  75                 	db	117	;'u'
  2501  00FADE  74                 	db	116	;'t'
  2502  00FADF  2E                 	db	46
  2503  00FAE0  0D                 	db	13
  2504  00FAE1  0A                 	db	10
  2505  00FAE2  00                 	db	0
  2506  00FAE3                     STR_15:
  2507                           
  2508                           ; BSR set to: 0
  2509  00FAE3  20                 	db	32
  2510  00FAE4  20                 	db	32
  2511  00FAE5  20                 	db	32
  2512  00FAE6  42                 	db	66	;'B'
  2513  00FAE7  79                 	db	121	;'y'
  2514  00FAE8  74                 	db	116	;'t'
  2515  00FAE9  65                 	db	101	;'e'
  2516  00FAEA  20                 	db	32
  2517  00FAEB  30                 	db	48	;'0'
  2518  00FAEC  34                 	db	52	;'4'
  2519  00FAED  3A                 	db	58	;':'
  2520  00FAEE  20                 	db	32
  2521  00FAEF  30                 	db	48	;'0'
  2522  00FAF0  78                 	db	120	;'x'
  2523  00FAF1  25                 	db	37
  2524  00FAF2  30                 	db	48	;'0'
  2525  00FAF3  32                 	db	50	;'2'
  2526  00FAF4  78                 	db	120	;'x'
  2527  00FAF5  20                 	db	32
  2528  00FAF6  2D                 	db	45
  2529  00FAF7  20                 	db	32
  2530  00FAF8  4E                 	db	78	;'N'
  2531  00FAF9  75                 	db	117	;'u'
  2532  00FAFA  6D                 	db	109	;'m'
  2533  00FAFB  20                 	db	32
  2534  00FAFC  6F                 	db	111	;'o'
  2535  00FAFD  66                 	db	102	;'f'
  2536  00FAFE  20                 	db	32
  2537  00FAFF  52                 	db	82	;'R'
  2538  00FB00  65                 	db	101	;'e'
  2539  00FB01  67                 	db	103	;'g'
  2540  00FB02  20                 	db	32
  2541  00FB03  48                 	db	72	;'H'
  2542  00FB04  69                 	db	105	;'i'
  2543  00FB05  0D                 	db	13
  2544  00FB06  0A                 	db	10
  2545  00FB07  00                 	db	0
  2546  00FB08                     STR_16:
  2547                           
  2548                           ; BSR set to: 0
  2549  00FB08  20                 	db	32
  2550  00FB09  20                 	db	32
  2551  00FB0A  20                 	db	32
  2552  00FB0B  42                 	db	66	;'B'
  2553  00FB0C  79                 	db	121	;'y'
  2554  00FB0D  74                 	db	116	;'t'
  2555  00FB0E  65                 	db	101	;'e'
  2556  00FB0F  20                 	db	32
  2557  00FB10  30                 	db	48	;'0'
  2558  00FB11  35                 	db	53	;'5'
  2559  00FB12  3A                 	db	58	;':'
  2560  00FB13  20                 	db	32
  2561  00FB14  30                 	db	48	;'0'
  2562  00FB15  78                 	db	120	;'x'
  2563  00FB16  25                 	db	37
  2564  00FB17  30                 	db	48	;'0'
  2565  00FB18  32                 	db	50	;'2'
  2566  00FB19  78                 	db	120	;'x'
  2567  00FB1A  20                 	db	32
  2568  00FB1B  2D                 	db	45
  2569  00FB1C  20                 	db	32
  2570  00FB1D  4E                 	db	78	;'N'
  2571  00FB1E  75                 	db	117	;'u'
  2572  00FB1F  6D                 	db	109	;'m'
  2573  00FB20  20                 	db	32
  2574  00FB21  6F                 	db	111	;'o'
  2575  00FB22  66                 	db	102	;'f'
  2576  00FB23  20                 	db	32
  2577  00FB24  52                 	db	82	;'R'
  2578  00FB25  65                 	db	101	;'e'
  2579  00FB26  67                 	db	103	;'g'
  2580  00FB27  20                 	db	32
  2581  00FB28  4C                 	db	76	;'L'
  2582  00FB29  6F                 	db	111	;'o'
  2583  00FB2A  0D                 	db	13
  2584  00FB2B  0A                 	db	10
  2585  00FB2C  00                 	db	0
  2586  00FB2D                     STR_95:
  2587                           
  2588                           ; BSR set to: 0
  2589  00FB2D  4D                 	db	77	;'M'
  2590  00FB2E  6F                 	db	111	;'o'
  2591  00FB2F  64                 	db	100	;'d'
  2592  00FB30  62                 	db	98	;'b'
  2593  00FB31  75                 	db	117	;'u'
  2594  00FB32  73                 	db	115	;'s'
  2595  00FB33  20                 	db	32
  2596  00FB34  46                 	db	70	;'F'
  2597  00FB35  75                 	db	117	;'u'
  2598  00FB36  6E                 	db	110	;'n'
  2599  00FB37  63                 	db	99	;'c'
  2600  00FB38  74                 	db	116	;'t'
  2601  00FB39  69                 	db	105	;'i'
  2602  00FB3A  6F                 	db	111	;'o'
  2603  00FB3B  6E                 	db	110	;'n'
  2604  00FB3C  20                 	db	32
  2605  00FB3D  43                 	db	67	;'C'
  2606  00FB3E  6F                 	db	111	;'o'
  2607  00FB3F  64                 	db	100	;'d'
  2608  00FB40  65                 	db	101	;'e'
  2609  00FB41  73                 	db	115	;'s'
  2610  00FB42  20                 	db	32
  2611  00FB43  53                 	db	83	;'S'
  2612  00FB44  75                 	db	117	;'u'
  2613  00FB45  70                 	db	112	;'p'
  2614  00FB46  70                 	db	112	;'p'
  2615  00FB47  6F                 	db	111	;'o'
  2616  00FB48  72                 	db	114	;'r'
  2617  00FB49  74                 	db	116	;'t'
  2618  00FB4A  65                 	db	101	;'e'
  2619  00FB4B  64                 	db	100	;'d'
  2620  00FB4C  3A                 	db	58	;':'
  2621  00FB4D  0D                 	db	13
  2622  00FB4E  0A                 	db	10
  2623  00FB4F  0A                 	db	10
  2624  00FB50  00                 	db	0
  2625  00FB51                     STR_31:
  2626                           
  2627                           ; BSR set to: 0
  2628  00FB51  63                 	db	99	;'c'
  2629  00FB52  72                 	db	114	;'r'
  2630  00FB53  63                 	db	99	;'c'
  2631  00FB54  48                 	db	72	;'H'
  2632  00FB55  69                 	db	105	;'i'
  2633  00FB56  67                 	db	103	;'g'
  2634  00FB57  68                 	db	104	;'h'
  2635  00FB58  3A                 	db	58	;':'
  2636  00FB59  20                 	db	32
  2637  00FB5A  30                 	db	48	;'0'
  2638  00FB5B  78                 	db	120	;'x'
  2639  00FB5C  25                 	db	37
  2640  00FB5D  30                 	db	48	;'0'
  2641  00FB5E  32                 	db	50	;'2'
  2642  00FB5F  78                 	db	120	;'x'
  2643  00FB60  20                 	db	32
  2644  00FB61  20                 	db	32
  2645  00FB62  63                 	db	99	;'c'
  2646  00FB63  72                 	db	114	;'r'
  2647  00FB64  63                 	db	99	;'c'
  2648  00FB65  4C                 	db	76	;'L'
  2649  00FB66  6F                 	db	111	;'o'
  2650  00FB67  77                 	db	119	;'w'
  2651  00FB68  3A                 	db	58	;':'
  2652  00FB69  20                 	db	32
  2653  00FB6A  30                 	db	48	;'0'
  2654  00FB6B  78                 	db	120	;'x'
  2655  00FB6C  25                 	db	37
  2656  00FB6D  30                 	db	48	;'0'
  2657  00FB6E  32                 	db	50	;'2'
  2658  00FB6F  78                 	db	120	;'x'
  2659  00FB70  20                 	db	32
  2660  00FB71  20                 	db	32
  2661  00FB72  0D                 	db	13
  2662  00FB73  0A                 	db	10
  2663  00FB74  00                 	db	0
  2664  00FB75                     STR_11:
  2665                           
  2666                           ; BSR set to: 0
  2667  00FB75  20                 	db	32
  2668  00FB76  20                 	db	32
  2669  00FB77  20                 	db	32
  2670  00FB78  42                 	db	66	;'B'
  2671  00FB79  79                 	db	121	;'y'
  2672  00FB7A  74                 	db	116	;'t'
  2673  00FB7B  65                 	db	101	;'e'
  2674  00FB7C  20                 	db	32
  2675  00FB7D  30                 	db	48	;'0'
  2676  00FB7E  30                 	db	48	;'0'
  2677  00FB7F  3A                 	db	58	;':'
  2678  00FB80  20                 	db	32
  2679  00FB81  30                 	db	48	;'0'
  2680  00FB82  78                 	db	120	;'x'
  2681  00FB83  25                 	db	37
  2682  00FB84  30                 	db	48	;'0'
  2683  00FB85  32                 	db	50	;'2'
  2684  00FB86  78                 	db	120	;'x'
  2685  00FB87  20                 	db	32
  2686  00FB88  2D                 	db	45
  2687  00FB89  20                 	db	32
  2688  00FB8A  43                 	db	67	;'C'
  2689  00FB8B  61                 	db	97	;'a'
  2690  00FB8C  72                 	db	114	;'r'
  2691  00FB8D  64                 	db	100	;'d'
  2692  00FB8E  20                 	db	32
  2693  00FB8F  41                 	db	65	;'A'
  2694  00FB90  64                 	db	100	;'d'
  2695  00FB91  64                 	db	100	;'d'
  2696  00FB92  72                 	db	114	;'r'
  2697  00FB93  65                 	db	101	;'e'
  2698  00FB94  73                 	db	115	;'s'
  2699  00FB95  73                 	db	115	;'s'
  2700  00FB96  0D                 	db	13
  2701  00FB97  0A                 	db	10
  2702  00FB98  00                 	db	0
  2703  00FB99                     STR_27:
  2704                           
  2705                           ; BSR set to: 0
  2706  00FB99  20                 	db	32
  2707  00FB9A  20                 	db	32
  2708  00FB9B  20                 	db	32
  2709  00FB9C  42                 	db	66	;'B'
  2710  00FB9D  79                 	db	121	;'y'
  2711  00FB9E  74                 	db	116	;'t'
  2712  00FB9F  65                 	db	101	;'e'
  2713  00FBA0  20                 	db	32
  2714  00FBA1  25                 	db	37
  2715  00FBA2  30                 	db	48	;'0'
  2716  00FBA3  32                 	db	50	;'2'
  2717  00FBA4  69                 	db	105	;'i'
  2718  00FBA5  3A                 	db	58	;':'
  2719  00FBA6  20                 	db	32
  2720  00FBA7  30                 	db	48	;'0'
  2721  00FBA8  78                 	db	120	;'x'
  2722  00FBA9  25                 	db	37
  2723  00FBAA  30                 	db	48	;'0'
  2724  00FBAB  32                 	db	50	;'2'
  2725  00FBAC  78                 	db	120	;'x'
  2726  00FBAD  20                 	db	32
  2727  00FBAE  2D                 	db	45
  2728  00FBAF  20                 	db	32
  2729  00FBB0  52                 	db	82	;'R'
  2730  00FBB1  65                 	db	101	;'e'
  2731  00FBB2  67                 	db	103	;'g'
  2732  00FBB3  20                 	db	32
  2733  00FBB4  25                 	db	37
  2734  00FBB5  69                 	db	105	;'i'
  2735  00FBB6  20                 	db	32
  2736  00FBB7  4C                 	db	76	;'L'
  2737  00FBB8  6F                 	db	111	;'o'
  2738  00FBB9  0D                 	db	13
  2739  00FBBA  0A                 	db	10
  2740  00FBBB  00                 	db	0
  2741  00FBBC                     STR_94:
  2742                           
  2743                           ; BSR set to: 0
  2744  00FBBC  49                 	db	73	;'I'
  2745  00FBBD  6E                 	db	110	;'n'
  2746  00FBBE  69                 	db	105	;'i'
  2747  00FBBF  74                 	db	116	;'t'
  2748  00FBC0  61                 	db	97	;'a'
  2749  00FBC1  6C                 	db	108	;'l'
  2750  00FBC2  69                 	db	105	;'i'
  2751  00FBC3  73                 	db	115	;'s'
  2752  00FBC4  61                 	db	97	;'a'
  2753  00FBC5  74                 	db	116	;'t'
  2754  00FBC6  69                 	db	105	;'i'
  2755  00FBC7  6F                 	db	111	;'o'
  2756  00FBC8  6E                 	db	110	;'n'
  2757  00FBC9  20                 	db	32
  2758  00FBCA  43                 	db	67	;'C'
  2759  00FBCB  6F                 	db	111	;'o'
  2760  00FBCC  6D                 	db	109	;'m'
  2761  00FBCD  70                 	db	112	;'p'
  2762  00FBCE  6C                 	db	108	;'l'
  2763  00FBCF  65                 	db	101	;'e'
  2764  00FBD0  74                 	db	116	;'t'
  2765  00FBD1  65                 	db	101	;'e'
  2766  00FBD2  20                 	db	32
  2767  00FBD3  2D                 	db	45
  2768  00FBD4  20                 	db	32
  2769  00FBD5  52                 	db	82	;'R'
  2770  00FBD6  65                 	db	101	;'e'
  2771  00FBD7  61                 	db	97	;'a'
  2772  00FBD8  64                 	db	100	;'d'
  2773  00FBD9  79                 	db	121	;'y'
  2774  00FBDA  0D                 	db	13
  2775  00FBDB  0A                 	db	10
  2776  00FBDC  0A                 	db	10
  2777  00FBDD  00                 	db	0
  2778  00FBDE                     STR_109:
  2779                           
  2780                           ; BSR set to: 0
  2781  00FBDE  20                 	db	32
  2782  00FBDF  20                 	db	32
  2783  00FBE0  20                 	db	32
  2784  00FBE1  70                 	db	112	;'p'
  2785  00FBE2  61                 	db	97	;'a'
  2786  00FBE3  72                 	db	114	;'r'
  2787  00FBE4  74                 	db	116	;'t'
  2788  00FBE5  20                 	db	32
  2789  00FBE6  2D                 	db	45
  2790  00FBE7  20                 	db	32
  2791  00FBE8  53                 	db	83	;'S'
  2792  00FBE9  65                 	db	101	;'e'
  2793  00FBEA  74                 	db	116	;'t'
  2794  00FBEB  20                 	db	32
  2795  00FBEC  63                 	db	99	;'c'
  2796  00FBED  61                 	db	97	;'a'
  2797  00FBEE  72                 	db	114	;'r'
  2798  00FBEF  64                 	db	100	;'d'
  2799  00FBF0  20                 	db	32
  2800  00FBF1  70                 	db	112	;'p'
  2801  00FBF2  61                 	db	97	;'a'
  2802  00FBF3  72                 	db	114	;'r'
  2803  00FBF4  74                 	db	116	;'t'
  2804  00FBF5  20                 	db	32
  2805  00FBF6  6E                 	db	110	;'n'
  2806  00FBF7  75                 	db	117	;'u'
  2807  00FBF8  6D                 	db	109	;'m'
  2808  00FBF9  62                 	db	98	;'b'
  2809  00FBFA  65                 	db	101	;'e'
  2810  00FBFB  72                 	db	114	;'r'
  2811  00FBFC  0D                 	db	13
  2812  00FBFD  0A                 	db	10
  2813  00FBFE  00                 	db	0
  2814  00FBFF                     STR_119:
  2815                           
  2816                           ; BSR set to: 0
  2817  00FBFF  0D                 	db	13
  2818  00FC00  0A                 	db	10
  2819  00FC01  45                 	db	69	;'E'
  2820  00FC02  6E                 	db	110	;'n'
  2821  00FC03  74                 	db	116	;'t'
  2822  00FC04  65                 	db	101	;'e'
  2823  00FC05  72                 	db	114	;'r'
  2824  00FC06  65                 	db	101	;'e'
  2825  00FC07  64                 	db	100	;'d'
  2826  00FC08  3A                 	db	58	;':'
  2827  00FC09  20                 	db	32
  2828  00FC0A  25                 	db	37
  2829  00FC0B  73                 	db	115	;'s'
  2830  00FC0C  20                 	db	32
  2831  00FC0D  0D                 	db	13
  2832  00FC0E  0A                 	db	10
  2833  00FC0F  20                 	db	32
  2834  00FC10  43                 	db	67	;'C'
  2835  00FC11  6F                 	db	111	;'o'
  2836  00FC12  6E                 	db	110	;'n'
  2837  00FC13  66                 	db	102	;'f'
  2838  00FC14  69                 	db	105	;'i'
  2839  00FC15  72                 	db	114	;'r'
  2840  00FC16  6D                 	db	109	;'m'
  2841  00FC17  20                 	db	32
  2842  00FC18  20                 	db	32
  2843  00FC19  59                 	db	89	;'Y'
  2844  00FC1A  7C                 	db	124
  2845  00FC1B  4E                 	db	78	;'N'
  2846  00FC1C  3F                 	db	63	;'?'
  2847  00FC1D  3A                 	db	58	;':'
  2848  00FC1E  20                 	db	32
  2849  00FC1F  00                 	db	0
  2850  00FC20                     STR_110:
  2851                           
  2852                           ; BSR set to: 0
  2853  00FC20  20                 	db	32
  2854  00FC21  20                 	db	32
  2855  00FC22  20                 	db	32
  2856  00FC23  72                 	db	114	;'r'
  2857  00FC24  65                 	db	101	;'e'
  2858  00FC25  76                 	db	118	;'v'
  2859  00FC26  20                 	db	32
  2860  00FC27  2D                 	db	45
  2861  00FC28  20                 	db	32
  2862  00FC29  53                 	db	83	;'S'
  2863  00FC2A  65                 	db	101	;'e'
  2864  00FC2B  74                 	db	116	;'t'
  2865  00FC2C  20                 	db	32
  2866  00FC2D  63                 	db	99	;'c'
  2867  00FC2E  61                 	db	97	;'a'
  2868  00FC2F  72                 	db	114	;'r'
  2869  00FC30  64                 	db	100	;'d'
  2870  00FC31  20                 	db	32
  2871  00FC32  70                 	db	112	;'p'
  2872  00FC33  61                 	db	97	;'a'
  2873  00FC34  72                 	db	114	;'r'
  2874  00FC35  74                 	db	116	;'t'
  2875  00FC36  20                 	db	32
  2876  00FC37  6E                 	db	110	;'n'
  2877  00FC38  75                 	db	117	;'u'
  2878  00FC39  6D                 	db	109	;'m'
  2879  00FC3A  62                 	db	98	;'b'
  2880  00FC3B  65                 	db	101	;'e'
  2881  00FC3C  72                 	db	114	;'r'
  2882  00FC3D  0D                 	db	13
  2883  00FC3E  0A                 	db	10
  2884  00FC3F  00                 	db	0
  2885  00FC40                     STR_76:
  2886                           
  2887                           ; BSR set to: 0
  2888  00FC40  0D                 	db	13
  2889  00FC41  0A                 	db	10
  2890  00FC42  52                 	db	82	;'R'
  2891  00FC43  65                 	db	101	;'e'
  2892  00FC44  63                 	db	99	;'c'
  2893  00FC45  65                 	db	101	;'e'
  2894  00FC46  69                 	db	105	;'i'
  2895  00FC47  76                 	db	118	;'v'
  2896  00FC48  65                 	db	101	;'e'
  2897  00FC49  64                 	db	100	;'d'
  2898  00FC4A  20                 	db	32
  2899  00FC4B  4D                 	db	77	;'M'
  2900  00FC4C  6F                 	db	111	;'o'
  2901  00FC4D  64                 	db	100	;'d'
  2902  00FC4E  62                 	db	98	;'b'
  2903  00FC4F  75                 	db	117	;'u'
  2904  00FC50  73                 	db	115	;'s'
  2905  00FC51  20                 	db	32
  2906  00FC52  43                 	db	67	;'C'
  2907  00FC53  52                 	db	82	;'R'
  2908  00FC54  43                 	db	67	;'C'
  2909  00FC55  20                 	db	32
  2910  00FC56  69                 	db	105	;'i'
  2911  00FC57  73                 	db	115	;'s'
  2912  00FC58  20                 	db	32
  2913  00FC59  62                 	db	98	;'b'
  2914  00FC5A  61                 	db	97	;'a'
  2915  00FC5B  64                 	db	100	;'d'
  2916  00FC5C  2E                 	db	46
  2917  00FC5D  0D                 	db	13
  2918  00FC5E  0A                 	db	10
  2919  00FC5F  00                 	db	0
  2920  00FC60                     STR_28:
  2921                           
  2922                           ; BSR set to: 0
  2923  00FC60  20                 	db	32
  2924  00FC61  20                 	db	32
  2925  00FC62  20                 	db	32
  2926  00FC63  42                 	db	66	;'B'
  2927  00FC64  79                 	db	121	;'y'
  2928  00FC65  74                 	db	116	;'t'
  2929  00FC66  65                 	db	101	;'e'
  2930  00FC67  20                 	db	32
  2931  00FC68  25                 	db	37
  2932  00FC69  30                 	db	48	;'0'
  2933  00FC6A  32                 	db	50	;'2'
  2934  00FC6B  69                 	db	105	;'i'
  2935  00FC6C  3A                 	db	58	;':'
  2936  00FC6D  20                 	db	32
  2937  00FC6E  30                 	db	48	;'0'
  2938  00FC6F  78                 	db	120	;'x'
  2939  00FC70  25                 	db	37
  2940  00FC71  30                 	db	48	;'0'
  2941  00FC72  32                 	db	50	;'2'
  2942  00FC73  78                 	db	120	;'x'
  2943  00FC74  20                 	db	32
  2944  00FC75  2D                 	db	45
  2945  00FC76  20                 	db	32
  2946  00FC77  43                 	db	67	;'C'
  2947  00FC78  52                 	db	82	;'R'
  2948  00FC79  43                 	db	67	;'C'
  2949  00FC7A  20                 	db	32
  2950  00FC7B  48                 	db	72	;'H'
  2951  00FC7C  69                 	db	105	;'i'
  2952  00FC7D  0D                 	db	13
  2953  00FC7E  0A                 	db	10
  2954  00FC7F  00                 	db	0
  2955  00FC80                     STR_29:
  2956                           
  2957                           ; BSR set to: 0
  2958  00FC80  20                 	db	32
  2959  00FC81  20                 	db	32
  2960  00FC82  20                 	db	32
  2961  00FC83  42                 	db	66	;'B'
  2962  00FC84  79                 	db	121	;'y'
  2963  00FC85  74                 	db	116	;'t'
  2964  00FC86  65                 	db	101	;'e'
  2965  00FC87  20                 	db	32
  2966  00FC88  25                 	db	37
  2967  00FC89  30                 	db	48	;'0'
  2968  00FC8A  32                 	db	50	;'2'
  2969  00FC8B  69                 	db	105	;'i'
  2970  00FC8C  3A                 	db	58	;':'
  2971  00FC8D  20                 	db	32
  2972  00FC8E  30                 	db	48	;'0'
  2973  00FC8F  78                 	db	120	;'x'
  2974  00FC90  25                 	db	37
  2975  00FC91  30                 	db	48	;'0'
  2976  00FC92  32                 	db	50	;'2'
  2977  00FC93  78                 	db	120	;'x'
  2978  00FC94  20                 	db	32
  2979  00FC95  2D                 	db	45
  2980  00FC96  20                 	db	32
  2981  00FC97  43                 	db	67	;'C'
  2982  00FC98  52                 	db	82	;'R'
  2983  00FC99  43                 	db	67	;'C'
  2984  00FC9A  20                 	db	32
  2985  00FC9B  4C                 	db	76	;'L'
  2986  00FC9C  6F                 	db	111	;'o'
  2987  00FC9D  0D                 	db	13
  2988  00FC9E  0A                 	db	10
  2989  00FC9F  00                 	db	0
  2990  00FCA0                     STR_2:
  2991                           
  2992                           ; BSR set to: 0
  2993  00FCA0  4D                 	db	77	;'M'
  2994  00FCA1  6F                 	db	111	;'o'
  2995  00FCA2  64                 	db	100	;'d'
  2996  00FCA3  62                 	db	98	;'b'
  2997  00FCA4  75                 	db	117	;'u'
  2998  00FCA5  73                 	db	115	;'s'
  2999  00FCA6  20                 	db	32
  3000  00FCA7  52                 	db	82	;'R'
  3001  00FCA8  65                 	db	101	;'e'
  3002  00FCA9  67                 	db	103	;'g'
  3003  00FCAA  69                 	db	105	;'i'
  3004  00FCAB  73                 	db	115	;'s'
  3005  00FCAC  74                 	db	116	;'t'
  3006  00FCAD  65                 	db	101	;'e'
  3007  00FCAE  72                 	db	114	;'r'
  3008  00FCAF  20                 	db	32
  3009  00FCB0  42                 	db	66	;'B'
  3010  00FCB1  65                 	db	101	;'e'
  3011  00FCB2  66                 	db	102	;'f'
  3012  00FCB3  6F                 	db	111	;'o'
  3013  00FCB4  72                 	db	114	;'r'
  3014  00FCB5  65                 	db	101	;'e'
  3015  00FCB6  20                 	db	32
  3016  00FCB7  55                 	db	85	;'U'
  3017  00FCB8  70                 	db	112	;'p'
  3018  00FCB9  64                 	db	100	;'d'
  3019  00FCBA  61                 	db	97	;'a'
  3020  00FCBB  74                 	db	116	;'t'
  3021  00FCBC  65                 	db	101	;'e'
  3022  00FCBD  3A                 	db	58	;':'
  3023  00FCBE  00                 	db	0
  3024  00FCBF                     STR_99:
  3025                           
  3026                           ; BSR set to: 0
  3027  00FCBF  20                 	db	32
  3028  00FCC0  20                 	db	32
  3029  00FCC1  20                 	db	32
  3030  00FCC2  20                 	db	32
  3031  00FCC3  20                 	db	32
  3032  00FCC4  20                 	db	32
  3033  00FCC5  41                 	db	65	;'A'
  3034  00FCC6  64                 	db	100	;'d'
  3035  00FCC7  64                 	db	100	;'d'
  3036  00FCC8  20                 	db	32
  3037  00FCC9  30                 	db	48	;'0'
  3038  00FCCA  78                 	db	120	;'x'
  3039  00FCCB  30                 	db	48	;'0'
  3040  00FCCC  32                 	db	50	;'2'
  3041  00FCCD  30                 	db	48	;'0'
  3042  00FCCE  30                 	db	48	;'0'
  3043  00FCCF  20                 	db	32
  3044  00FCD0  2D                 	db	45
  3045  00FCD1  20                 	db	32
  3046  00FCD2  52                 	db	82	;'R'
  3047  00FCD3  65                 	db	101	;'e'
  3048  00FCD4  76                 	db	118	;'v'
  3049  00FCD5  69                 	db	105	;'i'
  3050  00FCD6  73                 	db	115	;'s'
  3051  00FCD7  69                 	db	105	;'i'
  3052  00FCD8  6F                 	db	111	;'o'
  3053  00FCD9  6E                 	db	110	;'n'
  3054  00FCDA  0D                 	db	13
  3055  00FCDB  0A                 	db	10
  3056  00FCDC  00                 	db	0
  3057  00FCDD                     STR_17:
  3058                           
  3059                           ; BSR set to: 0
  3060  00FCDD  20                 	db	32
  3061  00FCDE  20                 	db	32
  3062  00FCDF  20                 	db	32
  3063  00FCE0  42                 	db	66	;'B'
  3064  00FCE1  79                 	db	121	;'y'
  3065  00FCE2  74                 	db	116	;'t'
  3066  00FCE3  65                 	db	101	;'e'
  3067  00FCE4  20                 	db	32
  3068  00FCE5  30                 	db	48	;'0'
  3069  00FCE6  36                 	db	54	;'6'
  3070  00FCE7  3A                 	db	58	;':'
  3071  00FCE8  20                 	db	32
  3072  00FCE9  30                 	db	48	;'0'
  3073  00FCEA  78                 	db	120	;'x'
  3074  00FCEB  25                 	db	37
  3075  00FCEC  30                 	db	48	;'0'
  3076  00FCED  32                 	db	50	;'2'
  3077  00FCEE  78                 	db	120	;'x'
  3078  00FCEF  20                 	db	32
  3079  00FCF0  2D                 	db	45
  3080  00FCF1  20                 	db	32
  3081  00FCF2  43                 	db	67	;'C'
  3082  00FCF3  52                 	db	82	;'R'
  3083  00FCF4  43                 	db	67	;'C'
  3084  00FCF5  20                 	db	32
  3085  00FCF6  48                 	db	72	;'H'
  3086  00FCF7  69                 	db	105	;'i'
  3087  00FCF8  0D                 	db	13
  3088  00FCF9  0A                 	db	10
  3089  00FCFA  00                 	db	0
  3090  00FCFB                     STR_70:
  3091                           
  3092                           ; BSR set to: 0
  3093  00FCFB  20                 	db	32
  3094  00FCFC  20                 	db	32
  3095  00FCFD  20                 	db	32
  3096  00FCFE  42                 	db	66	;'B'
  3097  00FCFF  79                 	db	121	;'y'
  3098  00FD00  74                 	db	116	;'t'
  3099  00FD01  65                 	db	101	;'e'
  3100  00FD02  20                 	db	32
  3101  00FD03  30                 	db	48	;'0'
  3102  00FD04  37                 	db	55	;'7'
  3103  00FD05  3A                 	db	58	;':'
  3104  00FD06  20                 	db	32
  3105  00FD07  30                 	db	48	;'0'
  3106  00FD08  78                 	db	120	;'x'
  3107  00FD09  25                 	db	37
  3108  00FD0A  30                 	db	48	;'0'
  3109  00FD0B  32                 	db	50	;'2'
  3110  00FD0C  78                 	db	120	;'x'
  3111  00FD0D  20                 	db	32
  3112  00FD0E  2D                 	db	45
  3113  00FD0F  20                 	db	32
  3114  00FD10  43                 	db	67	;'C'
  3115  00FD11  52                 	db	82	;'R'
  3116  00FD12  43                 	db	67	;'C'
  3117  00FD13  20                 	db	32
  3118  00FD14  48                 	db	72	;'H'
  3119  00FD15  69                 	db	105	;'i'
  3120  00FD16  0D                 	db	13
  3121  00FD17  0A                 	db	10
  3122  00FD18  00                 	db	0
  3123  00FD19                     STR_18:
  3124                           
  3125                           ; BSR set to: 0
  3126  00FD19  20                 	db	32
  3127  00FD1A  20                 	db	32
  3128  00FD1B  20                 	db	32
  3129  00FD1C  42                 	db	66	;'B'
  3130  00FD1D  79                 	db	121	;'y'
  3131  00FD1E  74                 	db	116	;'t'
  3132  00FD1F  65                 	db	101	;'e'
  3133  00FD20  20                 	db	32
  3134  00FD21  30                 	db	48	;'0'
  3135  00FD22  37                 	db	55	;'7'
  3136  00FD23  3A                 	db	58	;':'
  3137  00FD24  20                 	db	32
  3138  00FD25  30                 	db	48	;'0'
  3139  00FD26  78                 	db	120	;'x'
  3140  00FD27  25                 	db	37
  3141  00FD28  30                 	db	48	;'0'
  3142  00FD29  32                 	db	50	;'2'
  3143  00FD2A  78                 	db	120	;'x'
  3144  00FD2B  20                 	db	32
  3145  00FD2C  2D                 	db	45
  3146  00FD2D  20                 	db	32
  3147  00FD2E  43                 	db	67	;'C'
  3148  00FD2F  52                 	db	82	;'R'
  3149  00FD30  43                 	db	67	;'C'
  3150  00FD31  20                 	db	32
  3151  00FD32  4C                 	db	76	;'L'
  3152  00FD33  6F                 	db	111	;'o'
  3153  00FD34  0D                 	db	13
  3154  00FD35  0A                 	db	10
  3155  00FD36  00                 	db	0
  3156  00FD37                     STR_34:
  3157                           
  3158                           ; BSR set to: 0
  3159  00FD37  52                 	db	82	;'R'
  3160  00FD38  65                 	db	101	;'e'
  3161  00FD39  71                 	db	113	;'q'
  3162  00FD3A  75                 	db	117	;'u'
  3163  00FD3B  65                 	db	101	;'e'
  3164  00FD3C  73                 	db	115	;'s'
  3165  00FD3D  74                 	db	116	;'t'
  3166  00FD3E  65                 	db	101	;'e'
  3167  00FD3F  64                 	db	100	;'d'
  3168  00FD40  3A                 	db	58	;':'
  3169  00FD41  20                 	db	32
  3170  00FD42  30                 	db	48	;'0'
  3171  00FD43  78                 	db	120	;'x'
  3172  00FD44  25                 	db	37
  3173  00FD45  30                 	db	48	;'0'
  3174  00FD46  34                 	db	52	;'4'
  3175  00FD47  78                 	db	120	;'x'
  3176  00FD48  20                 	db	32
  3177  00FD49  74                 	db	116	;'t'
  3178  00FD4A  6F                 	db	111	;'o'
  3179  00FD4B  20                 	db	32
  3180  00FD4C  30                 	db	48	;'0'
  3181  00FD4D  78                 	db	120	;'x'
  3182  00FD4E  25                 	db	37
  3183  00FD4F  30                 	db	48	;'0'
  3184  00FD50  34                 	db	52	;'4'
  3185  00FD51  78                 	db	120	;'x'
  3186  00FD52  0D                 	db	13
  3187  00FD53  0A                 	db	10
  3188  00FD54  00                 	db	0
  3189  00FD55                     STR_9:
  3190                           
  3191                           ; BSR set to: 0
  3192  00FD55  4D                 	db	77	;'M'
  3193  00FD56  6F                 	db	111	;'o'
  3194  00FD57  64                 	db	100	;'d'
  3195  00FD58  44                 	db	68	;'D'
  3196  00FD59  61                 	db	97	;'a'
  3197  00FD5A  74                 	db	116	;'t'
  3198  00FD5B  61                 	db	97	;'a'
  3199  00FD5C  43                 	db	67	;'C'
  3200  00FD5D  6E                 	db	110	;'n'
  3201  00FD5E  74                 	db	116	;'t'
  3202  00FD5F  20                 	db	32
  3203  00FD60  73                 	db	115	;'s'
  3204  00FD61  69                 	db	105	;'i'
  3205  00FD62  74                 	db	116	;'t'
  3206  00FD63  74                 	db	116	;'t'
  3207  00FD64  69                 	db	105	;'i'
  3208  00FD65  6E                 	db	110	;'n'
  3209  00FD66  67                 	db	103	;'g'
  3210  00FD67  20                 	db	32
  3211  00FD68  61                 	db	97	;'a'
  3212  00FD69  74                 	db	116	;'t'
  3213  00FD6A  20                 	db	32
  3214  00FD6B  25                 	db	37
  3215  00FD6C  69                 	db	105	;'i'
  3216  00FD6D  0D                 	db	13
  3217  00FD6E  0A                 	db	10
  3218  00FD6F  0A                 	db	10
  3219  00FD70  00                 	db	0
  3220  00FD71                     STR_50:
  3221                           
  3222                           ; BSR set to: 0
  3223  00FD71  52                 	db	82	;'R'
  3224  00FD72  65                 	db	101	;'e'
  3225  00FD73  71                 	db	113	;'q'
  3226  00FD74  75                 	db	117	;'u'
  3227  00FD75  65                 	db	101	;'e'
  3228  00FD76  73                 	db	115	;'s'
  3229  00FD77  74                 	db	116	;'t'
  3230  00FD78  65                 	db	101	;'e'
  3231  00FD79  64                 	db	100	;'d'
  3232  00FD7A  20                 	db	32
  3233  00FD7B  41                 	db	65	;'A'
  3234  00FD7C  6E                 	db	110	;'n'
  3235  00FD7D  61                 	db	97	;'a'
  3236  00FD7E  6C                 	db	108	;'l'
  3237  00FD7F  6F                 	db	111	;'o'
  3238  00FD80  67                 	db	103	;'g'
  3239  00FD81  75                 	db	117	;'u'
  3240  00FD82  65                 	db	101	;'e'
  3241  00FD83  20                 	db	32
  3242  00FD84  49                 	db	73	;'I'
  3243  00FD85  6E                 	db	110	;'n'
  3244  00FD86  70                 	db	112	;'p'
  3245  00FD87  75                 	db	117	;'u'
  3246  00FD88  74                 	db	116	;'t'
  3247  00FD89  73                 	db	115	;'s'
  3248  00FD8A  0D                 	db	13
  3249  00FD8B  0A                 	db	10
  3250  00FD8C  00                 	db	0
  3251  00FD8D                     STR_3:
  3252                           
  3253                           ; BSR set to: 0
  3254  00FD8D  55                 	db	85	;'U'
  3255  00FD8E  6E                 	db	110	;'n'
  3256  00FD8F  73                 	db	115	;'s'
  3257  00FD90  75                 	db	117	;'u'
  3258  00FD91  70                 	db	112	;'p'
  3259  00FD92  70                 	db	112	;'p'
  3260  00FD93  6F                 	db	111	;'o'
  3261  00FD94  72                 	db	114	;'r'
  3262  00FD95  74                 	db	116	;'t'
  3263  00FD96  65                 	db	101	;'e'
  3264  00FD97  64                 	db	100	;'d'
  3265  00FD98  20                 	db	32
  3266  00FD99  46                 	db	70	;'F'
  3267  00FD9A  75                 	db	117	;'u'
  3268  00FD9B  6E                 	db	110	;'n'
  3269  00FD9C  63                 	db	99	;'c'
  3270  00FD9D  74                 	db	116	;'t'
  3271  00FD9E  69                 	db	105	;'i'
  3272  00FD9F  6F                 	db	111	;'o'
  3273  00FDA0  6E                 	db	110	;'n'
  3274  00FDA1  20                 	db	32
  3275  00FDA2  43                 	db	67	;'C'
  3276  00FDA3  6F                 	db	111	;'o'
  3277  00FDA4  64                 	db	100	;'d'
  3278  00FDA5  65                 	db	101	;'e'
  3279  00FDA6  0D                 	db	13
  3280  00FDA7  0A                 	db	10
  3281  00FDA8  00                 	db	0
  3282  00FDA9                     STR_7:
  3283                           
  3284                           ; BSR set to: 0
  3285  00FDA9  20                 	db	32
  3286  00FDAA  20                 	db	32
  3287  00FDAB  20                 	db	32
  3288  00FDAC  52                 	db	82	;'R'
  3289  00FDAD  65                 	db	101	;'e'
  3290  00FDAE  67                 	db	103	;'g'
  3291  00FDAF  3A                 	db	58	;':'
  3292  00FDB0  20                 	db	32
  3293  00FDB1  25                 	db	37
  3294  00FDB2  69                 	db	105	;'i'
  3295  00FDB3  20                 	db	32
  3296  00FDB4  44                 	db	68	;'D'
  3297  00FDB5  61                 	db	97	;'a'
  3298  00FDB6  74                 	db	116	;'t'
  3299  00FDB7  61                 	db	97	;'a'
  3300  00FDB8  3A                 	db	58	;':'
  3301  00FDB9  20                 	db	32
  3302  00FDBA  30                 	db	48	;'0'
  3303  00FDBB  78                 	db	120	;'x'
  3304  00FDBC  25                 	db	37
  3305  00FDBD  30                 	db	48	;'0'
  3306  00FDBE  34                 	db	52	;'4'
  3307  00FDBF  78                 	db	120	;'x'
  3308  00FDC0  20                 	db	32
  3309  00FDC1  0D                 	db	13
  3310  00FDC2  0A                 	db	10
  3311  00FDC3  00                 	db	0
  3312  00FDC4                     STR_32:
  3313                           
  3314                           ; BSR set to: 0
  3315  00FDC4  52                 	db	82	;'R'
  3316  00FDC5  65                 	db	101	;'e'
  3317  00FDC6  71                 	db	113	;'q'
  3318  00FDC7  75                 	db	117	;'u'
  3319  00FDC8  65                 	db	101	;'e'
  3320  00FDC9  73                 	db	115	;'s'
  3321  00FDCA  74                 	db	116	;'t'
  3322  00FDCB  65                 	db	101	;'e'
  3323  00FDCC  64                 	db	100	;'d'
  3324  00FDCD  20                 	db	32
  3325  00FDCE  43                 	db	67	;'C'
  3326  00FDCF  69                 	db	105	;'i'
  3327  00FDD0  72                 	db	114	;'r'
  3328  00FDD1  63                 	db	99	;'c'
  3329  00FDD2  75                 	db	117	;'u'
  3330  00FDD3  69                 	db	105	;'i'
  3331  00FDD4  74                 	db	116	;'t'
  3332  00FDD5  20                 	db	32
  3333  00FDD6  44                 	db	68	;'D'
  3334  00FDD7  61                 	db	97	;'a'
  3335  00FDD8  74                 	db	116	;'t'
  3336  00FDD9  61                 	db	97	;'a'
  3337  00FDDA  0D                 	db	13
  3338  00FDDB  0A                 	db	10
  3339  00FDDC  00                 	db	0
  3340  00FDDD                     STR_47:
  3341                           
  3342                           ; BSR set to: 0
  3343  00FDDD  52                 	db	82	;'R'
  3344  00FDDE  65                 	db	101	;'e'
  3345  00FDDF  71                 	db	113	;'q'
  3346  00FDE0  75                 	db	117	;'u'
  3347  00FDE1  65                 	db	101	;'e'
  3348  00FDE2  73                 	db	115	;'s'
  3349  00FDE3  74                 	db	116	;'t'
  3350  00FDE4  65                 	db	101	;'e'
  3351  00FDE5  64                 	db	100	;'d'
  3352  00FDE6  20                 	db	32
  3353  00FDE7  43                 	db	67	;'C'
  3354  00FDE8  6F                 	db	111	;'o'
  3355  00FDE9  6D                 	db	109	;'m'
  3356  00FDEA  70                 	db	112	;'p'
  3357  00FDEB  69                 	db	105	;'i'
  3358  00FDEC  6C                 	db	108	;'l'
  3359  00FDED  65                 	db	101	;'e'
  3360  00FDEE  20                 	db	32
  3361  00FDEF  54                 	db	84	;'T'
  3362  00FDF0  69                 	db	105	;'i'
  3363  00FDF1  6D                 	db	109	;'m'
  3364  00FDF2  65                 	db	101	;'e'
  3365  00FDF3  0D                 	db	13
  3366  00FDF4  0A                 	db	10
  3367  00FDF5  00                 	db	0
  3368  00FDF6                     STR_44:
  3369                           
  3370                           ; BSR set to: 0
  3371  00FDF6  52                 	db	82	;'R'
  3372  00FDF7  65                 	db	101	;'e'
  3373  00FDF8  71                 	db	113	;'q'
  3374  00FDF9  75                 	db	117	;'u'
  3375  00FDFA  65                 	db	101	;'e'
  3376  00FDFB  73                 	db	115	;'s'
  3377  00FDFC  74                 	db	116	;'t'
  3378  00FDFD  65                 	db	101	;'e'
  3379  00FDFE  64                 	db	100	;'d'
  3380  00FDFF  20                 	db	32
  3381  00FE00  43                 	db	67	;'C'
  3382  00FE01  6F                 	db	111	;'o'
  3383  00FE02  6D                 	db	109	;'m'
  3384  00FE03  70                 	db	112	;'p'
  3385  00FE04  69                 	db	105	;'i'
  3386  00FE05  6C                 	db	108	;'l'
  3387  00FE06  65                 	db	101	;'e'
  3388  00FE07  20                 	db	32
  3389  00FE08  44                 	db	68	;'D'
  3390  00FE09  61                 	db	97	;'a'
  3391  00FE0A  74                 	db	116	;'t'
  3392  00FE0B  65                 	db	101	;'e'
  3393  00FE0C  0D                 	db	13
  3394  00FE0D  0A                 	db	10
  3395  00FE0E  00                 	db	0
  3396  00FE0F                     STR_73:
  3397                           
  3398                           ; BSR set to: 0
  3399  00FE0F  53                 	db	83	;'S'
  3400  00FE10  6F                 	db	111	;'o'
  3401  00FE11  6D                 	db	109	;'m'
  3402  00FE12  65                 	db	101	;'e'
  3403  00FE13  74                 	db	116	;'t'
  3404  00FE14  68                 	db	104	;'h'
  3405  00FE15  69                 	db	105	;'i'
  3406  00FE16  6E                 	db	110	;'n'
  3407  00FE17  67                 	db	103	;'g'
  3408  00FE18  20                 	db	32
  3409  00FE19  69                 	db	105	;'i'
  3410  00FE1A  6E                 	db	110	;'n'
  3411  00FE1B  20                 	db	32
  3412  00FE1C  45                 	db	69	;'E'
  3413  00FE1D  53                 	db	83	;'S'
  3414  00FE1E  55                 	db	85	;'U'
  3415  00FE1F  41                 	db	65	;'A'
  3416  00FE20  52                 	db	82	;'R'
  3417  00FE21  54                 	db	84	;'T'
  3418  00FE22  31                 	db	49	;'1'
  3419  00FE23  20                 	db	32
  3420  00FE24  0D                 	db	13
  3421  00FE25  0A                 	db	10
  3422  00FE26  00                 	db	0
  3423  00FE27                     STR_71:
  3424                           
  3425                           ; BSR set to: 0
  3426  00FE27  20                 	db	32
  3427  00FE28  20                 	db	32
  3428  00FE29  20                 	db	32
  3429  00FE2A  42                 	db	66	;'B'
  3430  00FE2B  79                 	db	121	;'y'
  3431  00FE2C  74                 	db	116	;'t'
  3432  00FE2D  65                 	db	101	;'e'
  3433  00FE2E  20                 	db	32
  3434  00FE2F  25                 	db	37
  3435  00FE30  30                 	db	48	;'0'
  3436  00FE31  32                 	db	50	;'2'
  3437  00FE32  69                 	db	105	;'i'
  3438  00FE33  3A                 	db	58	;':'
  3439  00FE34  20                 	db	32
  3440  00FE35  30                 	db	48	;'0'
  3441  00FE36  78                 	db	120	;'x'
  3442  00FE37  25                 	db	37
  3443  00FE38  30                 	db	48	;'0'
  3444  00FE39  32                 	db	50	;'2'
  3445  00FE3A  78                 	db	120	;'x'
  3446  00FE3B  20                 	db	32
  3447  00FE3C  0D                 	db	13
  3448  00FE3D  0A                 	db	10
  3449  00FE3E  00                 	db	0
  3450  00FE3F                     STR_41:
  3451                           
  3452                           ; BSR set to: 0
  3453  00FE3F  52                 	db	82	;'R'
  3454  00FE40  65                 	db	101	;'e'
  3455  00FE41  71                 	db	113	;'q'
  3456  00FE42  75                 	db	117	;'u'
  3457  00FE43  65                 	db	101	;'e'
  3458  00FE44  73                 	db	115	;'s'
  3459  00FE45  74                 	db	116	;'t'
  3460  00FE46  65                 	db	101	;'e'
  3461  00FE47  64                 	db	100	;'d'
  3462  00FE48  20                 	db	32
  3463  00FE49  53                 	db	83	;'S'
  3464  00FE4A  65                 	db	101	;'e'
  3465  00FE4B  72                 	db	114	;'r'
  3466  00FE4C  69                 	db	105	;'i'
  3467  00FE4D  61                 	db	97	;'a'
  3468  00FE4E  6C                 	db	108	;'l'
  3469  00FE4F  20                 	db	32
  3470  00FE50  4E                 	db	78	;'N'
  3471  00FE51  6F                 	db	111	;'o'
  3472  00FE52  2E                 	db	46
  3473  00FE53  0D                 	db	13
  3474  00FE54  0A                 	db	10
  3475  00FE55  00                 	db	0
  3476  00FE56                     STR_90:
  3477                           
  3478                           ; BSR set to: 0
  3479  00FE56  43                 	db	67	;'C'
  3480  00FE57  61                 	db	97	;'a'
  3481  00FE58  72                 	db	114	;'r'
  3482  00FE59  64                 	db	100	;'d'
  3483  00FE5A  20                 	db	32
  3484  00FE5B  41                 	db	65	;'A'
  3485  00FE5C  64                 	db	100	;'d'
  3486  00FE5D  64                 	db	100	;'d'
  3487  00FE5E  72                 	db	114	;'r'
  3488  00FE5F  65                 	db	101	;'e'
  3489  00FE60  73                 	db	115	;'s'
  3490  00FE61  73                 	db	115	;'s'
  3491  00FE62  2E                 	db	46
  3492  00FE63  20                 	db	32
  3493  00FE64  30                 	db	48	;'0'
  3494  00FE65  78                 	db	120	;'x'
  3495  00FE66  30                 	db	48	;'0'
  3496  00FE67  35                 	db	53	;'5'
  3497  00FE68  20                 	db	32
  3498  00FE69  0D                 	db	13
  3499  00FE6A  0A                 	db	10
  3500  00FE6B  00                 	db	0
  3501  00FE6C                     STR_106:
  3502                           
  3503                           ; BSR set to: 0
  3504  00FE6C  43                 	db	67	;'C'
  3505  00FE6D  6F                 	db	111	;'o'
  3506  00FE6E  6D                 	db	109	;'m'
  3507  00FE6F  6D                 	db	109	;'m'
  3508  00FE70  61                 	db	97	;'a'
  3509  00FE71  6E                 	db	110	;'n'
  3510  00FE72  64                 	db	100	;'d'
  3511  00FE73  73                 	db	115	;'s'
  3512  00FE74  20                 	db	32
  3513  00FE75  53                 	db	83	;'S'
  3514  00FE76  75                 	db	117	;'u'
  3515  00FE77  70                 	db	112	;'p'
  3516  00FE78  70                 	db	112	;'p'
  3517  00FE79  6F                 	db	111	;'o'
  3518  00FE7A  72                 	db	114	;'r'
  3519  00FE7B  74                 	db	116	;'t'
  3520  00FE7C  65                 	db	101	;'e'
  3521  00FE7D  64                 	db	100	;'d'
  3522  00FE7E  3A                 	db	58	;':'
  3523  00FE7F  0D                 	db	13
  3524  00FE80  0A                 	db	10
  3525  00FE81  00                 	db	0
  3526  00FE82                     STR_89:
  3527                           
  3528                           ; BSR set to: 0
  3529  00FE82  43                 	db	67	;'C'
  3530  00FE83  61                 	db	97	;'a'
  3531  00FE84  72                 	db	114	;'r'
  3532  00FE85  64                 	db	100	;'d'
  3533  00FE86  20                 	db	32
  3534  00FE87  52                 	db	82	;'R'
  3535  00FE88  65                 	db	101	;'e'
  3536  00FE89  76                 	db	118	;'v'
  3537  00FE8A  69                 	db	105	;'i'
  3538  00FE8B  73                 	db	115	;'s'
  3539  00FE8C  69                 	db	105	;'i'
  3540  00FE8D  6F                 	db	111	;'o'
  3541  00FE8E  6E                 	db	110	;'n'
  3542  00FE8F  2E                 	db	46
  3543  00FE90  20                 	db	32
  3544  00FE91  25                 	db	37
  3545  00FE92  73                 	db	115	;'s'
  3546  00FE93  20                 	db	32
  3547  00FE94  0D                 	db	13
  3548  00FE95  0A                 	db	10
  3549  00FE96  00                 	db	0
  3550  00FE97                     STR_35:
  3551                           
  3552                           ; BSR set to: 0
  3553  00FE97  52                 	db	82	;'R'
  3554  00FE98  65                 	db	101	;'e'
  3555  00FE99  71                 	db	113	;'q'
  3556  00FE9A  75                 	db	117	;'u'
  3557  00FE9B  65                 	db	101	;'e'
  3558  00FE9C  73                 	db	115	;'s'
  3559  00FE9D  74                 	db	116	;'t'
  3560  00FE9E  65                 	db	101	;'e'
  3561  00FE9F  64                 	db	100	;'d'
  3562  00FEA0  20                 	db	32
  3563  00FEA1  50                 	db	80	;'P'
  3564  00FEA2  61                 	db	97	;'a'
  3565  00FEA3  72                 	db	114	;'r'
  3566  00FEA4  74                 	db	116	;'t'
  3567  00FEA5  20                 	db	32
  3568  00FEA6  4E                 	db	78	;'N'
  3569  00FEA7  6F                 	db	111	;'o'
  3570  00FEA8  2E                 	db	46
  3571  00FEA9  0D                 	db	13
  3572  00FEAA  0A                 	db	10
  3573  00FEAB  00                 	db	0
  3574  00FEAC                     STR_10:
  3575                           
  3576                           ; BSR set to: 0
  3577  00FEAC  0D                 	db	13
  3578  00FEAD  0A                 	db	10
  3579  00FEAE  4D                 	db	77	;'M'
  3580  00FEAF  6F                 	db	111	;'o'
  3581  00FEB0  64                 	db	100	;'d'
  3582  00FEB1  62                 	db	98	;'b'
  3583  00FEB2  75                 	db	117	;'u'
  3584  00FEB3  73                 	db	115	;'s'
  3585  00FEB4  20                 	db	32
  3586  00FEB5  52                 	db	82	;'R'
  3587  00FEB6  65                 	db	101	;'e'
  3588  00FEB7  63                 	db	99	;'c'
  3589  00FEB8  65                 	db	101	;'e'
  3590  00FEB9  69                 	db	105	;'i'
  3591  00FEBA  76                 	db	118	;'v'
  3592  00FEBB  65                 	db	101	;'e'
  3593  00FEBC  64                 	db	100	;'d'
  3594  00FEBD  3A                 	db	58	;':'
  3595  00FEBE  0D                 	db	13
  3596  00FEBF  0A                 	db	10
  3597  00FEC0  00                 	db	0
  3598  00FEC1                     STR_38:
  3599                           
  3600                           ; BSR set to: 0
  3601  00FEC1  52                 	db	82	;'R'
  3602  00FEC2  65                 	db	101	;'e'
  3603  00FEC3  71                 	db	113	;'q'
  3604  00FEC4  75                 	db	117	;'u'
  3605  00FEC5  65                 	db	101	;'e'
  3606  00FEC6  73                 	db	115	;'s'
  3607  00FEC7  74                 	db	116	;'t'
  3608  00FEC8  65                 	db	101	;'e'
  3609  00FEC9  64                 	db	100	;'d'
  3610  00FECA  20                 	db	32
  3611  00FECB  52                 	db	82	;'R'
  3612  00FECC  65                 	db	101	;'e'
  3613  00FECD  76                 	db	118	;'v'
  3614  00FECE  69                 	db	105	;'i'
  3615  00FECF  73                 	db	115	;'s'
  3616  00FED0  69                 	db	105	;'i'
  3617  00FED1  6F                 	db	111	;'o'
  3618  00FED2  6E                 	db	110	;'n'
  3619  00FED3  0D                 	db	13
  3620  00FED4  0A                 	db	10
  3621  00FED5  00                 	db	0
  3622  00FED6                     STR_1:
  3623                           
  3624                           ; BSR set to: 0
  3625  00FED6  46                 	db	70	;'F'
  3626  00FED7  75                 	db	117	;'u'
  3627  00FED8  6E                 	db	110	;'n'
  3628  00FED9  63                 	db	99	;'c'
  3629  00FEDA  74                 	db	116	;'t'
  3630  00FEDB  69                 	db	105	;'i'
  3631  00FEDC  6F                 	db	111	;'o'
  3632  00FEDD  6E                 	db	110	;'n'
  3633  00FEDE  20                 	db	32
  3634  00FEDF  43                 	db	67	;'C'
  3635  00FEE0  6F                 	db	111	;'o'
  3636  00FEE1  64                 	db	100	;'d'
  3637  00FEE2  65                 	db	101	;'e'
  3638  00FEE3  20                 	db	32
  3639  00FEE4  30                 	db	48	;'0'
  3640  00FEE5  78                 	db	120	;'x'
  3641  00FEE6  31                 	db	49	;'1'
  3642  00FEE7  30                 	db	48	;'0'
  3643  00FEE8  0D                 	db	13
  3644  00FEE9  0A                 	db	10
  3645  00FEEA  00                 	db	0
  3646  00FEEB                     STR_88:
  3647                           
  3648                           ; BSR set to: 0
  3649  00FEEB  43                 	db	67	;'C'
  3650  00FEEC  61                 	db	97	;'a'
  3651  00FEED  72                 	db	114	;'r'
  3652  00FEEE  64                 	db	100	;'d'
  3653  00FEEF  20                 	db	32
  3654  00FEF0  50                 	db	80	;'P'
  3655  00FEF1  61                 	db	97	;'a'
  3656  00FEF2  72                 	db	114	;'r'
  3657  00FEF3  74                 	db	116	;'t'
  3658  00FEF4  20                 	db	32
  3659  00FEF5  4E                 	db	78	;'N'
  3660  00FEF6  6F                 	db	111	;'o'
  3661  00FEF7  2E                 	db	46
  3662  00FEF8  20                 	db	32
  3663  00FEF9  25                 	db	37
  3664  00FEFA  73                 	db	115	;'s'
  3665  00FEFB  20                 	db	32
  3666  00FEFC  0D                 	db	13
  3667  00FEFD  0A                 	db	10
  3668  00FEFE  00                 	db	0
  3669  00FEFF                     STR_87:
  3670                           
  3671                           ; BSR set to: 0
  3672  00FEFF  43                 	db	67	;'C'
  3673  00FF00  61                 	db	97	;'a'
  3674  00FF01  72                 	db	114	;'r'
  3675  00FF02  64                 	db	100	;'d'
  3676  00FF03  20                 	db	32
  3677  00FF04  53                 	db	83	;'S'
  3678  00FF05  65                 	db	101	;'e'
  3679  00FF06  72                 	db	114	;'r'
  3680  00FF07  20                 	db	32
  3681  00FF08  4E                 	db	78	;'N'
  3682  00FF09  6F                 	db	111	;'o'
  3683  00FF0A  2E                 	db	46
  3684  00FF0B  20                 	db	32
  3685  00FF0C  25                 	db	37
  3686  00FF0D  73                 	db	115	;'s'
  3687  00FF0E  20                 	db	32
  3688  00FF0F  0D                 	db	13
  3689  00FF10  0A                 	db	10
  3690  00FF11  00                 	db	0
  3691  00FF12                     STR_55:
  3692                           
  3693                           ; BSR set to: 0
  3694  00FF12  4D                 	db	77	;'M'
  3695  00FF13  6F                 	db	111	;'o'
  3696  00FF14  64                 	db	100	;'d'
  3697  00FF15  62                 	db	98	;'b'
  3698  00FF16  75                 	db	117	;'u'
  3699  00FF17  73                 	db	115	;'s'
  3700  00FF18  20                 	db	32
  3701  00FF19  52                 	db	82	;'R'
  3702  00FF1A  65                 	db	101	;'e'
  3703  00FF1B  73                 	db	115	;'s'
  3704  00FF1C  70                 	db	112	;'p'
  3705  00FF1D  6F                 	db	111	;'o'
  3706  00FF1E  6E                 	db	110	;'n'
  3707  00FF1F  73                 	db	115	;'s'
  3708  00FF20  65                 	db	101	;'e'
  3709  00FF21  3A                 	db	58	;':'
  3710  00FF22  0D                 	db	13
  3711  00FF23  0A                 	db	10
  3712  00FF24  00                 	db	0
  3713  00FF25                     STR_4:
  3714                           
  3715                           ; BSR set to: 0
  3716  00FF25  0D                 	db	13
  3717  00FF26  0A                 	db	10
  3718  00FF27  45                 	db	69	;'E'
  3719  00FF28  6E                 	db	110	;'n'
  3720  00FF29  74                 	db	116	;'t'
  3721  00FF2A  65                 	db	101	;'e'
  3722  00FF2B  72                 	db	114	;'r'
  3723  00FF2C  20                 	db	32
  3724  00FF2D  43                 	db	67	;'C'
  3725  00FF2E  6F                 	db	111	;'o'
  3726  00FF2F  6D                 	db	109	;'m'
  3727  00FF30  6D                 	db	109	;'m'
  3728  00FF31  61                 	db	97	;'a'
  3729  00FF32  6E                 	db	110	;'n'
  3730  00FF33  64                 	db	100	;'d'
  3731  00FF34  20                 	db	32
  3732  00FF35  3A                 	db	58	;':'
  3733  00FF36  20                 	db	32
  3734  00FF37  00                 	db	0
  3735  00FF38                     STR_121:
  3736                           
  3737                           ; BSR set to: 0
  3738  00FF38  4E                 	db	78	;'N'
  3739  00FF39  75                 	db	117	;'u'
  3740  00FF3A  6D                 	db	109	;'m'
  3741  00FF3B  20                 	db	32
  3742  00FF3C  43                 	db	67	;'C'
  3743  00FF3D  68                 	db	104	;'h'
  3744  00FF3E  61                 	db	97	;'a'
  3745  00FF3F  72                 	db	114	;'r'
  3746  00FF40  73                 	db	115	;'s'
  3747  00FF41  3A                 	db	58	;':'
  3748  00FF42  20                 	db	32
  3749  00FF43  25                 	db	37
  3750  00FF44  69                 	db	105	;'i'
  3751  00FF45  20                 	db	32
  3752  00FF46  0D                 	db	13
  3753  00FF47  0A                 	db	10
  3754  00FF48  00                 	db	0
  3755  00FF49                     STR_115:
  3756                           
  3757                           ; BSR set to: 0
  3758  00FF49  44                 	db	68	;'D'
  3759  00FF4A  65                 	db	101	;'e'
  3760  00FF4B  62                 	db	98	;'b'
  3761  00FF4C  75                 	db	117	;'u'
  3762  00FF4D  67                 	db	103	;'g'
  3763  00FF4E  20                 	db	32
  3764  00FF4F  44                 	db	68	;'D'
  3765  00FF50  69                 	db	105	;'i'
  3766  00FF51  73                 	db	115	;'s'
  3767  00FF52  61                 	db	97	;'a'
  3768  00FF53  62                 	db	98	;'b'
  3769  00FF54  6C                 	db	108	;'l'
  3770  00FF55  65                 	db	101	;'e'
  3771  00FF56  64                 	db	100	;'d'
  3772  00FF57  0D                 	db	13
  3773  00FF58  0A                 	db	10
  3774  00FF59  00                 	db	0
  3775  00FF5A                     STR_114:
  3776                           
  3777                           ; BSR set to: 0
  3778  00FF5A  44                 	db	68	;'D'
  3779  00FF5B  65                 	db	101	;'e'
  3780  00FF5C  62                 	db	98	;'b'
  3781  00FF5D  75                 	db	117	;'u'
  3782  00FF5E  67                 	db	103	;'g'
  3783  00FF5F  20                 	db	32
  3784  00FF60  45                 	db	69	;'E'
  3785  00FF61  6E                 	db	110	;'n'
  3786  00FF62  61                 	db	97	;'a'
  3787  00FF63  62                 	db	98	;'b'
  3788  00FF64  6C                 	db	108	;'l'
  3789  00FF65  65                 	db	101	;'e'
  3790  00FF66  64                 	db	100	;'d'
  3791  00FF67  0D                 	db	13
  3792  00FF68  0A                 	db	10
  3793  00FF69  00                 	db	0
  3794  00FF6A                     STR_6:
  3795                           
  3796                           ; BSR set to: 0
  3797  00FF6A  55                 	db	85	;'U'
  3798  00FF6B  70                 	db	112	;'p'
  3799  00FF6C  64                 	db	100	;'d'
  3800  00FF6D  61                 	db	97	;'a'
  3801  00FF6E  74                 	db	116	;'t'
  3802  00FF6F  65                 	db	101	;'e'
  3803  00FF70  64                 	db	100	;'d'
  3804  00FF71  4D                 	db	77	;'M'
  3805  00FF72  42                 	db	66	;'B'
  3806  00FF73  34                 	db	52	;'4'
  3807  00FF74  30                 	db	48	;'0'
  3808  00FF75  30                 	db	48	;'0'
  3809  00FF76  20                 	db	32
  3810  00FF77  0D                 	db	13
  3811  00FF78  0A                 	db	10
  3812  00FF79  00                 	db	0
  3813  00FF7A                     STR_74:
  3814                           
  3815                           ; BSR set to: 0
  3816  00FF7A  52                 	db	82	;'R'
  3817  00FF7B  65                 	db	101	;'e'
  3818  00FF7C  61                 	db	97	;'a'
  3819  00FF7D  64                 	db	100	;'d'
  3820  00FF7E  3A                 	db	58	;':'
  3821  00FF7F  20                 	db	32
  3822  00FF80  30                 	db	48	;'0'
  3823  00FF81  78                 	db	120	;'x'
  3824  00FF82  25                 	db	37
  3825  00FF83  30                 	db	48	;'0'
  3826  00FF84  32                 	db	50	;'2'
  3827  00FF85  78                 	db	120	;'x'
  3828  00FF86  20                 	db	32
  3829  00FF87  0D                 	db	13
  3830  00FF88  0A                 	db	10
  3831  00FF89  00                 	db	0
  3832  00FF8A                     STR_120:
  3833                           
  3834                           ; BSR set to: 0
  3835  00FF8A  59                 	db	89	;'Y'
  3836  00FF8B  0D                 	db	13
  3837  00FF8C  0A                 	db	10
  3838  00FF8D  53                 	db	83	;'S'
  3839  00FF8E  61                 	db	97	;'a'
  3840  00FF8F  76                 	db	118	;'v'
  3841  00FF90  69                 	db	105	;'i'
  3842  00FF91  6E                 	db	110	;'n'
  3843  00FF92  67                 	db	103	;'g'
  3844  00FF93  20                 	db	32
  3845  00FF94  25                 	db	37
  3846  00FF95  73                 	db	115	;'s'
  3847  00FF96  0D                 	db	13
  3848  00FF97  0A                 	db	10
  3849  00FF98  00                 	db	0
  3850  00FF99                     STR_53:
  3851                           
  3852                           ; BSR set to: 0
  3853  00FF99  41                 	db	65	;'A'
  3854  00FF9A  44                 	db	68	;'D'
  3855  00FF9B  43                 	db	67	;'C'
  3856  00FF9C  3A                 	db	58	;':'
  3857  00FF9D  20                 	db	32
  3858  00FF9E  30                 	db	48	;'0'
  3859  00FF9F  78                 	db	120	;'x'
  3860  00FFA0  25                 	db	37
  3861  00FFA1  30                 	db	48	;'0'
  3862  00FFA2  34                 	db	52	;'4'
  3863  00FFA3  78                 	db	120	;'x'
  3864  00FFA4  20                 	db	32
  3865  00FFA5  0D                 	db	13
  3866  00FFA6  0A                 	db	10
  3867  00FFA7  00                 	db	0
  3868  00FFA8                     STR_122:
  3869                           
  3870                           ; BSR set to: 0
  3871  00FFA8  25                 	db	37
  3872  00FFA9  73                 	db	115	;'s'
  3873  00FFAA  20                 	db	32
  3874  00FFAB  53                 	db	83	;'S'
  3875  00FFAC  61                 	db	97	;'a'
  3876  00FFAD  76                 	db	118	;'v'
  3877  00FFAE  65                 	db	101	;'e'
  3878  00FFAF  64                 	db	100	;'d'
  3879  00FFB0  2E                 	db	46
  3880  00FFB1  20                 	db	32
  3881  00FFB2  0D                 	db	13
  3882  00FFB3  0A                 	db	10
  3883  00FFB4  00                 	db	0
  3884  00FFB5                     STR_124:
  3885                           
  3886                           ; BSR set to: 0
  3887  00FFB5  4E                 	db	78	;'N'
  3888  00FFB6  6F                 	db	111	;'o'
  3889  00FFB7  74                 	db	116	;'t'
  3890  00FFB8  20                 	db	32
  3891  00FFB9  73                 	db	115	;'s'
  3892  00FFBA  61                 	db	97	;'a'
  3893  00FFBB  76                 	db	118	;'v'
  3894  00FFBC  65                 	db	101	;'e'
  3895  00FFBD  64                 	db	100	;'d'
  3896  00FFBE  0D                 	db	13
  3897  00FFBF  0A                 	db	10
  3898  00FFC0  00                 	db	0
  3899  00FFC1                     STR_92:
  3900                           
  3901                           ; BSR set to: 0
  3902  00FFC1  4D                 	db	77	;'M'
  3903  00FFC2  61                 	db	97	;'a'
  3904  00FFC3  72                 	db	114	;'r'
  3905  00FFC4  20                 	db	32
  3906  00FFC5  32                 	db	50	;'2'
  3907  00FFC6  35                 	db	53	;'5'
  3908  00FFC7  20                 	db	32
  3909  00FFC8  32                 	db	50	;'2'
  3910  00FFC9  30                 	db	48	;'0'
  3911  00FFCA  32                 	db	50	;'2'
  3912  00FFCB  31                 	db	49	;'1'
  3913  00FFCC  00                 	db	0
  3914  00FFCD                     STR_93:
  3915                           
  3916                           ; BSR set to: 0
  3917  00FFCD  30                 	db	48	;'0'
  3918  00FFCE  30                 	db	48	;'0'
  3919  00FFCF  3A                 	db	58	;':'
  3920  00FFD0  32                 	db	50	;'2'
  3921  00FFD1  34                 	db	52	;'4'
  3922  00FFD2  3A                 	db	58	;':'
  3923  00FFD3  30                 	db	48	;'0'
  3924  00FFD4  30                 	db	48	;'0'
  3925  00FFD5  00                 	db	0
  3926  00FFD6                     STR_77:
  3927                           
  3928                           ; BSR set to: 0
  3929  00FFD6  53                 	db	83	;'S'
  3930  00FFD7  65                 	db	101	;'e'
  3931  00FFD8  72                 	db	114	;'r'
  3932  00FFD9  69                 	db	105	;'i'
  3933  00FFDA  61                 	db	97	;'a'
  3934  00FFDB  6C                 	db	108	;'l'
  3935  00FFDC  00                 	db	0
  3936  00FFDD                     STR_129:
  3937                           
  3938                           ; BSR set to: 0
  3939  00FFDD  73                 	db	115	;'s'
  3940  00FFDE  65                 	db	101	;'e'
  3941  00FFDF  72                 	db	114	;'r'
  3942  00FFE0  69                 	db	105	;'i'
  3943  00FFE1  61                 	db	97	;'a'
  3944  00FFE2  6C                 	db	108	;'l'
  3945  00FFE3  00                 	db	0
  3946  00FFE4                     STR_125:
  3947                           
  3948                           ; BSR set to: 0
  3949  00FFE4  64                 	db	100	;'d'
  3950  00FFE5  65                 	db	101	;'e'
  3951  00FFE6  62                 	db	98	;'b'
  3952  00FFE7  75                 	db	117	;'u'
  3953  00FFE8  67                 	db	103	;'g'
  3954  00FFE9  00                 	db	0
  3955  00FFEA                     STR_79:
  3956                           
  3957                           ; BSR set to: 0
  3958  00FFEA  50                 	db	80	;'P'
  3959  00FFEB  61                 	db	97	;'a'
  3960  00FFEC  72                 	db	114	;'r'
  3961  00FFED  74                 	db	116	;'t'
  3962  00FFEE  00                 	db	0
  3963  00FFEF                     STR_131:
  3964                           
  3965                           ; BSR set to: 0
  3966  00FFEF  70                 	db	112	;'p'
  3967  00FFF0  61                 	db	97	;'a'
  3968  00FFF1  72                 	db	114	;'r'
  3969  00FFF2  74                 	db	116	;'t'
  3970  00FFF3  00                 	db	0
  3971  00FFF4                     STR_81:
  3972                           
  3973                           ; BSR set to: 0
  3974  00FFF4  52                 	db	82	;'R'
  3975  00FFF5  65                 	db	101	;'e'
  3976  00FFF6  76                 	db	118	;'v'
  3977  00FFF7  00                 	db	0
  3978  00FFF8                     STR_133:
  3979                           
  3980                           ; BSR set to: 0
  3981  00FFF8  72                 	db	114	;'r'
  3982  00FFF9  65                 	db	101	;'e'
  3983  00FFFA  76                 	db	118	;'v'
  3984  00FFFB  00                 	db	0
  3985  00FFFC                     STR_127:
  3986                           
  3987                           ; BSR set to: 0
  3988  00FFFC  3F                 	db	63	;'?'
  3989  00FFFD  00                 	db	0
  3990  0000                     
  3991                           ; #config settings
  3992  00FFFE  00                 	db	0	; dummy byte at the end
  3993  0000                     
  3994                           	psect	cinit
  3995  00371C                     __pcinit:
  3996                           	opt callstack 0
  3997  00371C                     start_initialization:
  3998                           	opt callstack 0
  3999  00371C                     __initialization:
  4000                           	opt callstack 0
  4001                           
  4002                           ; Initialize objects allocated to BANK4 (64 bytes)
  4003                           ; load TBLPTR registers with __pidataBANK4
  4004  00371C  0E58               	movlw	low __pidataBANK4
  4005  00371E  6EF6               	movwf	tblptrl,c
  4006  003720  0E4A               	movlw	high __pidataBANK4
  4007  003722  6EF7               	movwf	tblptrh,c
  4008  003724  0E00               	movlw	low (__pidataBANK4 shr (0+16))
  4009  003726  6EF8               	movwf	tblptru,c
  4010  003728  EE04  F064         	lfsr	0,__pdataBANK4
  4011  00372C  EE10 F040          	lfsr	1,64
  4012  003730                     copy_data0:
  4013  003730  0009               	tblrd		*+
  4014  003732  CFF5 FFEE          	movff	tablat,postinc0
  4015  003736  50E5               	movf	postdec1,w,c
  4016  003738  50E1               	movf	fsr1l,w,c
  4017  00373A  E1FA               	bnz	copy_data0
  4018                           
  4019                           ; Initialize objects allocated to BANK3 (64 bytes)
  4020                           ; load TBLPTR registers with __pidataBANK3
  4021  00373C  0E18               	movlw	low __pidataBANK3
  4022  00373E  6EF6               	movwf	tblptrl,c
  4023  003740  0E4A               	movlw	high __pidataBANK3
  4024  003742  6EF7               	movwf	tblptrh,c
  4025  003744  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  4026  003746  6EF8               	movwf	tblptru,c
  4027  003748  EE03  F0B7         	lfsr	0,__pdataBANK3
  4028  00374C  EE10 F040          	lfsr	1,64
  4029  003750                     copy_data1:
  4030  003750  0009               	tblrd		*+
  4031  003752  CFF5 FFEE          	movff	tablat,postinc0
  4032  003756  50E5               	movf	postdec1,w,c
  4033  003758  50E1               	movf	fsr1l,w,c
  4034  00375A  E1FA               	bnz	copy_data1
  4035                           
  4036                           ; Initialize objects allocated to BANK2 (162 bytes)
  4037                           ; load TBLPTR registers with __pidataBANK2
  4038  00375C  0E24               	movlw	low __pidataBANK2
  4039  00375E  6EF6               	movwf	tblptrl,c
  4040  003760  0E40               	movlw	high __pidataBANK2
  4041  003762  6EF7               	movwf	tblptrh,c
  4042  003764  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  4043  003766  6EF8               	movwf	tblptru,c
  4044  003768  EE02  F000         	lfsr	0,__pdataBANK2
  4045  00376C  EE10 F0A2          	lfsr	1,162
  4046  003770                     copy_data2:
  4047  003770  0009               	tblrd		*+
  4048  003772  CFF5 FFEE          	movff	tablat,postinc0
  4049  003776  50E5               	movf	postdec1,w,c
  4050  003778  50E1               	movf	fsr1l,w,c
  4051  00377A  E1FA               	bnz	copy_data2
  4052                           
  4053                           ; Initialize objects allocated to BANK1 (147 bytes)
  4054                           ; load TBLPTR registers with __pidataBANK1
  4055  00377C  0E5C               	movlw	low __pidataBANK1
  4056  00377E  6EF6               	movwf	tblptrl,c
  4057  003780  0E41               	movlw	high __pidataBANK1
  4058  003782  6EF7               	movwf	tblptrh,c
  4059  003784  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  4060  003786  6EF8               	movwf	tblptru,c
  4061  003788  EE01  F000         	lfsr	0,__pdataBANK1
  4062  00378C  EE10 F093          	lfsr	1,147
  4063  003790                     copy_data3:
  4064  003790  0009               	tblrd		*+
  4065  003792  CFF5 FFEE          	movff	tablat,postinc0
  4066  003796  50E5               	movf	postdec1,w,c
  4067  003798  50E1               	movf	fsr1l,w,c
  4068  00379A  E1FA               	bnz	copy_data3
  4069                           
  4070                           ; Initialize objects allocated to BANK0 (20 bytes)
  4071                           ; load TBLPTR registers with __pidataBANK0
  4072  00379C  0ED2               	movlw	low __pidataBANK0
  4073  00379E  6EF6               	movwf	tblptrl,c
  4074  0037A0  0E4D               	movlw	high __pidataBANK0
  4075  0037A2  6EF7               	movwf	tblptrh,c
  4076  0037A4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  4077  0037A6  6EF8               	movwf	tblptru,c
  4078  0037A8  EE00  F0EA         	lfsr	0,__pdataBANK0
  4079  0037AC  EE10 F014          	lfsr	1,20
  4080  0037B0                     copy_data4:
  4081  0037B0  0009               	tblrd		*+
  4082  0037B2  CFF5 FFEE          	movff	tablat,postinc0
  4083  0037B6  50E5               	movf	postdec1,w,c
  4084  0037B8  50E1               	movf	fsr1l,w,c
  4085  0037BA  E1FA               	bnz	copy_data4
  4086                           
  4087                           ; Clear objects allocated to BANK5 (100 bytes)
  4088  0037BC  EE05  F000         	lfsr	0,__pbssBANK5
  4089  0037C0  0E64               	movlw	100
  4090  0037C2                     clear_0:
  4091  0037C2  6AEE               	clrf	postinc0,c
  4092  0037C4  06E8               	decf	wreg,f,c
  4093  0037C6  E1FD               	bnz	clear_0
  4094                           
  4095                           ; Clear objects allocated to BANK4 (100 bytes)
  4096  0037C8  EE04  F000         	lfsr	0,__pbssBANK4
  4097  0037CC  0E64               	movlw	100
  4098  0037CE                     clear_1:
  4099  0037CE  6AEE               	clrf	postinc0,c
  4100  0037D0  06E8               	decf	wreg,f,c
  4101  0037D2  E1FD               	bnz	clear_1
  4102                           
  4103                           ; Clear objects allocated to BANK3 (183 bytes)
  4104  0037D4  EE03  F000         	lfsr	0,__pbssBANK3
  4105  0037D8  0EB7               	movlw	183
  4106  0037DA                     clear_2:
  4107  0037DA  6AEE               	clrf	postinc0,c
  4108  0037DC  06E8               	decf	wreg,f,c
  4109  0037DE  E1FD               	bnz	clear_2
  4110                           
  4111                           ; Clear objects allocated to BANK2 (91 bytes)
  4112  0037E0  EE02  F0A2         	lfsr	0,__pbssBANK2
  4113  0037E4  0E5B               	movlw	91
  4114  0037E6                     clear_3:
  4115  0037E6  6AEE               	clrf	postinc0,c
  4116  0037E8  06E8               	decf	wreg,f,c
  4117  0037EA  E1FD               	bnz	clear_3
  4118                           
  4119                           ; Clear objects allocated to BANK1 (16 bytes)
  4120  0037EC  EE01  F0ED         	lfsr	0,__pbssBANK1
  4121  0037F0  0E10               	movlw	16
  4122  0037F2                     clear_4:
  4123  0037F2  6AEE               	clrf	postinc0,c
  4124  0037F4  06E8               	decf	wreg,f,c
  4125  0037F6  E1FD               	bnz	clear_4
  4126                           
  4127                           ; Clear objects allocated to BANK0 (29 bytes)
  4128  0037F8  EE00  F0CD         	lfsr	0,__pbssBANK0
  4129  0037FC  0E1D               	movlw	29
  4130  0037FE                     clear_5:
  4131  0037FE  6AEE               	clrf	postinc0,c
  4132  003800  06E8               	decf	wreg,f,c
  4133  003802  E1FD               	bnz	clear_5
  4134                           
  4135                           ; Clear objects allocated to COMRAM (4 bytes)
  4136  003804  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
  4137  003806  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
  4138  003808  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
  4139  00380A  6A57               	clrf	__pbssCOMRAM& (0+255),c
  4140  00380C                     end_of_initialization:
  4141                           	opt callstack 0
  4142  00380C                     __end_of__initialization:
  4143                           	opt callstack 0
  4144  00380C  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  4145  00380E  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4146  003810  0100               	movlb	0
  4147  003812  EF00  F01B         	goto	_main	;jump to C main() function
  4148                           
  4149                           	psect	bssCOMRAM
  4150  000057                     __pbssCOMRAM:
  4151                           	opt callstack 0
  4152  000057                     _flags:
  4153                           	opt callstack 0
  4154  000057                     	ds	2
  4155  000059                     _eusart1RxHead:
  4156                           	opt callstack 0
  4157  000059                     	ds	1
  4158  00005A                     _eusart2RxHead:
  4159                           	opt callstack 0
  4160  00005A                     	ds	1
  4161                           
  4162                           	psect	bssBANK0
  4163  0000CD                     __pbssBANK0:
  4164                           	opt callstack 0
  4165  0000CD                     _nout:
  4166                           	opt callstack 0
  4167  0000CD                     	ds	2
  4168  0000CF                     _width:
  4169                           	opt callstack 0
  4170  0000CF                     	ds	2
  4171  0000D1                     _prec:
  4172                           	opt callstack 0
  4173  0000D1                     	ds	2
  4174  0000D3                     	ds	2
  4175  0000D5                     _ByteHi:
  4176                           	opt callstack 0
  4177  0000D5                     	ds	2
  4178  0000D7                     _MBResCnt:
  4179                           	opt callstack 0
  4180  0000D7                     	ds	2
  4181  0000D9                     _ByteNum:
  4182                           	opt callstack 0
  4183  0000D9                     	ds	2
  4184  0000DB                     _ModDataCnt:
  4185                           	opt callstack 0
  4186  0000DB                     	ds	2
  4187  0000DD                     _rxStatus:
  4188                           	opt callstack 0
  4189  0000DD                     	ds	1
  4190  0000DE                     _RXStat:
  4191                           	opt callstack 0
  4192  0000DE                     	ds	1
  4193  0000DF                     _Debug:
  4194                           	opt callstack 0
  4195  0000DF                     	ds	1
  4196  0000E0                     _eusart1RxLastError:
  4197                           	opt callstack 0
  4198  0000E0                     	ds	1
  4199  0000E1                     _eusart1RxCount:
  4200                           	opt callstack 0
  4201  0000E1                     	ds	1
  4202  0000E2                     _eusart1RxTail:
  4203                           	opt callstack 0
  4204  0000E2                     	ds	1
  4205  0000E3                     _eusart1TxTail:
  4206                           	opt callstack 0
  4207  0000E3                     	ds	1
  4208  0000E4                     _eusart1TxHead:
  4209                           	opt callstack 0
  4210  0000E4                     	ds	1
  4211  0000E5                     _eusart2RxLastError:
  4212                           	opt callstack 0
  4213  0000E5                     	ds	1
  4214  0000E6                     _eusart2RxCount:
  4215                           	opt callstack 0
  4216  0000E6                     	ds	1
  4217  0000E7                     _eusart2RxTail:
  4218                           	opt callstack 0
  4219  0000E7                     	ds	1
  4220  0000E8                     _eusart2TxTail:
  4221                           	opt callstack 0
  4222  0000E8                     	ds	1
  4223  0000E9                     _eusart2TxHead:
  4224                           	opt callstack 0
  4225  0000E9                     	ds	1
  4226                           
  4227                           	psect	dataBANK0
  4228  0000EA                     __pdataBANK0:
  4229                           	opt callstack 0
  4230  0000EA                     _MB303xx:
  4231                           	opt callstack 0
  4232  0000EA                     	ds	10
  4233  0000F4                     ReadRX232@F10772:
  4234                           	opt callstack 0
  4235  0000F4                     	ds	2
  4236  0000F6                     _ByteLo:
  4237                           	opt callstack 0
  4238  0000F6                     	ds	2
  4239  0000F8                     _MBResCRC:
  4240                           	opt callstack 0
  4241  0000F8                     	ds	2
  4242  0000FA                     _ExpectedBytes:
  4243                           	opt callstack 0
  4244  0000FA                     	ds	2
  4245  0000FC                     _MB302xx:
  4246                           	opt callstack 0
  4247  0000FC                     	ds	2
  4248                           
  4249                           	psect	bssBANK1
  4250  0001ED                     __pbssBANK1:
  4251                           	opt callstack 0
  4252  0001ED                     _Command:
  4253                           	opt callstack 0
  4254  0001ED                     	ds	16
  4255                           
  4256                           	psect	dataBANK1
  4257  000100                     __pdataBANK1:
  4258                           	opt callstack 0
  4259  000100                     _ModbusData:
  4260                           	opt callstack 0
  4261  000100                     	ds	100
  4262  000164                     _MB301xx:
  4263                           	opt callstack 0
  4264  000164                     	ds	14
  4265  000172                     _MB304xx:
  4266                           	opt callstack 0
  4267  000172                     	ds	12
  4268  00017E                     InitialiseString@F10766:
  4269                           	opt callstack 0
  4270  00017E                     	ds	8
  4271  000186                     stoa@F1139:
  4272                           	opt callstack 0
  4273  000186                     	ds	7
  4274  00018D                     _MB306xx:
  4275                           	opt callstack 0
  4276  00018D                     	ds	6
  4277                           
  4278                           	psect	bssBANK2
  4279  0002A2                     __pbssBANK2:
  4280                           	opt callstack 0
  4281  0002A2                     _eusart2RxStatusBuffer:
  4282                           	opt callstack 0
  4283  0002A2                     	ds	32
  4284  0002C2                     _eusart1TxBuffer:
  4285                           	opt callstack 0
  4286  0002C2                     	ds	16
  4287  0002D2                     	ds	11
  4288  0002DD                     _dbuf:
  4289                           	opt callstack 0
  4290  0002DD                     	ds	32
  4291                           
  4292                           	psect	dataBANK2
  4293  000200                     __pdataBANK2:
  4294                           	opt callstack 0
  4295  000200                     ValidateCmd@F10796:
  4296                           	opt callstack 0
  4297  000200                     	ds	20
  4298  000214                     ValidateCmd@F10793:
  4299                           	opt callstack 0
  4300  000214                     	ds	20
  4301  000228                     ValidateCmd@F10790:
  4302                           	opt callstack 0
  4303  000228                     	ds	20
  4304  00023C                     _MB305xx:
  4305                           	opt callstack 0
  4306  00023C                     	ds	16
  4307  00024C                     InitialiseString@F10763:
  4308                           	opt callstack 0
  4309  00024C                     	ds	11
  4310  000257                     _MBRespon:
  4311                           	opt callstack 0
  4312  000257                     	ds	75
  4313                           
  4314                           	psect	bssBANK3
  4315  000300                     __pbssBANK3:
  4316                           	opt callstack 0
  4317  000300                     _eusart1RxStatusBuffer:
  4318                           	opt callstack 0
  4319  000300                     	ds	100
  4320  000364                     _eusart2RxBuffer:
  4321                           	opt callstack 0
  4322  000364                     	ds	32
  4323  000384                     _eusart2TxBuffer:
  4324                           	opt callstack 0
  4325  000384                     	ds	32
  4326  0003A4                     	ds	19
  4327                           
  4328                           	psect	dataBANK3
  4329  0003B7                     __pdataBANK3:
  4330                           	opt callstack 0
  4331  0003B7                     _MB300xx:
  4332                           	opt callstack 0
  4333  0003B7                     	ds	64
  4334                           
  4335                           	psect	bssBANK4
  4336  000400                     __pbssBANK4:
  4337                           	opt callstack 0
  4338  000400                     _eusart1RxBuffer:
  4339                           	opt callstack 0
  4340  000400                     	ds	100
  4341                           
  4342                           	psect	dataBANK4
  4343  000464                     __pdataBANK4:
  4344                           	opt callstack 0
  4345  000464                     _MB400xx:
  4346                           	opt callstack 0
  4347  000464                     	ds	64
  4348                           
  4349                           	psect	bssBANK5
  4350  000500                     __pbssBANK5:
  4351                           	opt callstack 0
  4352  000500                     _rxData:
  4353                           	opt callstack 0
  4354  000500                     	ds	100
  4355                           
  4356                           	psect	cstackBANK1
  4357  000193                     __pcstackBANK1:
  4358                           	opt callstack 0
  4359  000193                     ValidateCmd@ConfName:
  4360                           	opt callstack 0
  4361                           
  4362                           ; 20 bytes @ 0x0
  4363  000193                     	ds	20
  4364  0001A7                     ValidateCmd@ConfName_1561:
  4365                           	opt callstack 0
  4366                           
  4367                           ; 20 bytes @ 0x14
  4368  0001A7                     	ds	20
  4369  0001BB                     ValidateCmd@ConfName_1565:
  4370                           	opt callstack 0
  4371                           
  4372                           ; 20 bytes @ 0x28
  4373  0001BB                     	ds	28
  4374  0001D7                     ??_main:
  4375                           
  4376                           ; 1 bytes @ 0x44
  4377  0001D7                     	ds	2
  4378                           
  4379                           	psect	cstackBANK0
  4380  000060                     __pcstackBANK0:
  4381                           	opt callstack 0
  4382  000060                     vfpfcnvrt@ll:
  4383                           	opt callstack 0
  4384                           
  4385                           ; 8 bytes @ 0x0
  4386  000060                     	ds	8
  4387  000068                     vfpfcnvrt@cp:
  4388                           	opt callstack 0
  4389                           
  4390                           ; 2 bytes @ 0x8
  4391  000068                     	ds	2
  4392  00006A                     vfpfcnvrt@c:
  4393                           	opt callstack 0
  4394                           
  4395                           ; 1 bytes @ 0xA
  4396  00006A                     	ds	1
  4397  00006B                     vfpfcnvrt@done:
  4398                           	opt callstack 0
  4399                           
  4400                           ; 2 bytes @ 0xB
  4401  00006B                     	ds	2
  4402  00006D                     _vfpfcnvrt$1935:
  4403                           	opt callstack 0
  4404                           
  4405                           ; 2 bytes @ 0xD
  4406  00006D                     	ds	2
  4407  00006F                     vfpfcnvrt@llu:
  4408                           	opt callstack 0
  4409                           
  4410                           ; 8 bytes @ 0xF
  4411  00006F                     	ds	8
  4412  000077                     ?_vfprintf:
  4413                           	opt callstack 0
  4414  000077                     vfprintf@fp:
  4415                           	opt callstack 0
  4416                           
  4417                           ; 2 bytes @ 0x17
  4418  000077                     	ds	2
  4419  000079                     vfprintf@fmt:
  4420                           	opt callstack 0
  4421                           
  4422                           ; 2 bytes @ 0x19
  4423  000079                     	ds	2
  4424  00007B                     vfprintf@ap:
  4425                           	opt callstack 0
  4426                           
  4427                           ; 2 bytes @ 0x1B
  4428  00007B                     	ds	2
  4429  00007D                     ?_printf:
  4430                           	opt callstack 0
  4431  00007D                     printf@fmt:
  4432                           	opt callstack 0
  4433                           
  4434                           ; 2 bytes @ 0x1D
  4435  00007D                     	ds	16
  4436  00008D                     printf@ap:
  4437                           	opt callstack 0
  4438                           
  4439                           ; 2 bytes @ 0x2D
  4440  00008D                     	ds	2
  4441  00008F                     ??_ModbusFC03:
  4442  00008F                     ??_ModbusFC10:
  4443  00008F                     ??_PrintModbus:
  4444  00008F                     ??_PrintModRespon:
  4445  00008F                     ??_checkCRC:
  4446  00008F                     ?_ReadRX232:
  4447                           	opt callstack 0
  4448  00008F                     AddRxBuffToModBus@i:
  4449                           	opt callstack 0
  4450  00008F                     ReadRX232@NumChars:
  4451                           	opt callstack 0
  4452  00008F                     ClearEEAddRange@StartAdd:
  4453                           	opt callstack 0
  4454  00008F                     InitialiseString@PartNum:
  4455                           	opt callstack 0
  4456                           
  4457                           ; 19 bytes @ 0x2F
  4458  00008F                     	ds	2
  4459  000091                     ClearEEAddRange@NumBytes:
  4460                           	opt callstack 0
  4461                           
  4462                           ; 2 bytes @ 0x31
  4463  000091                     	ds	1
  4464  000092                     PrintModRespon@j:
  4465                           	opt callstack 0
  4466                           
  4467                           ; 2 bytes @ 0x32
  4468  000092                     	ds	1
  4469  000093                     ModbusFC10@TempData:
  4470                           	opt callstack 0
  4471  000093                     SaveCardDat@Name:
  4472                           	opt callstack 0
  4473                           
  4474                           ; 2 bytes @ 0x33
  4475  000093                     	ds	1
  4476  000094                     PrintModbus@j:
  4477                           	opt callstack 0
  4478  000094                     checkCRC@crcHigh:
  4479                           	opt callstack 0
  4480  000094                     PrintModRespon@i:
  4481                           	opt callstack 0
  4482                           
  4483                           ; 2 bytes @ 0x34
  4484  000094                     	ds	1
  4485  000095                     ModbusFC10@error:
  4486                           	opt callstack 0
  4487  000095                     ModbusFC03@convertedValue:
  4488                           	opt callstack 0
  4489  000095                     SaveCardDat@MBAddress:
  4490                           	opt callstack 0
  4491                           
  4492                           ; 2 bytes @ 0x35
  4493  000095                     	ds	1
  4494  000096                     PrintModbus@i:
  4495                           	opt callstack 0
  4496  000096                     checkCRC@crcLow:
  4497                           	opt callstack 0
  4498  000096                     ModbusFC10@i:
  4499                           	opt callstack 0
  4500                           
  4501                           ; 2 bytes @ 0x36
  4502  000096                     	ds	1
  4503  000097                     ModbusFC03@error:
  4504                           	opt callstack 0
  4505  000097                     SaveCardDat@dataeeAddr:
  4506                           	opt callstack 0
  4507                           
  4508                           ; 2 bytes @ 0x37
  4509  000097                     	ds	1
  4510  000098                     checkCRC@j:
  4511                           	opt callstack 0
  4512  000098                     ModbusFC03@i:
  4513                           	opt callstack 0
  4514  000098                     ModbusFC10@j:
  4515                           	opt callstack 0
  4516                           
  4517                           ; 2 bytes @ 0x38
  4518  000098                     	ds	1
  4519  000099                     SaveCardDat@NumBytes:
  4520                           	opt callstack 0
  4521                           
  4522                           ; 2 bytes @ 0x39
  4523  000099                     	ds	1
  4524  00009A                     checkCRC@crc:
  4525                           	opt callstack 0
  4526                           
  4527                           ; 2 bytes @ 0x3A
  4528  00009A                     	ds	1
  4529  00009B                     ??_SaveCardDat:
  4530                           
  4531                           ; 1 bytes @ 0x3B
  4532  00009B                     	ds	1
  4533  00009C                     checkCRC@i:
  4534                           	opt callstack 0
  4535                           
  4536                           ; 2 bytes @ 0x3C
  4537  00009C                     	ds	1
  4538  00009D                     _SaveCardDat$2869:
  4539                           	opt callstack 0
  4540                           
  4541                           ; 2 bytes @ 0x3D
  4542  00009D                     	ds	2
  4543  00009F                     SaveCardDat@dataeeAddrWrk:
  4544                           	opt callstack 0
  4545                           
  4546                           ; 2 bytes @ 0x3F
  4547  00009F                     	ds	2
  4548  0000A1                     SaveCardDat@i:
  4549                           	opt callstack 0
  4550                           
  4551                           ; 2 bytes @ 0x41
  4552  0000A1                     	ds	1
  4553  0000A2                     InitialiseString@Date:
  4554                           	opt callstack 0
  4555                           
  4556                           ; 11 bytes @ 0x42
  4557  0000A2                     	ds	1
  4558  0000A3                     SaveCardDat@Conf:
  4559                           	opt callstack 0
  4560                           
  4561                           ; 1 bytes @ 0x43
  4562  0000A3                     	ds	10
  4563  0000AD                     InitialiseString@Time:
  4564                           	opt callstack 0
  4565                           
  4566                           ; 8 bytes @ 0x4D
  4567  0000AD                     	ds	8
  4568  0000B5                     InitialiseString@SerialNum:
  4569                           	opt callstack 0
  4570                           
  4571                           ; 11 bytes @ 0x55
  4572  0000B5                     	ds	11
  4573  0000C0                     InitialiseString@Partial:
  4574                           	opt callstack 0
  4575                           
  4576                           ; 1 bytes @ 0x60
  4577  0000C0                     	ds	1
  4578  0000C1                     InitialiseString@convertedValue:
  4579                           	opt callstack 0
  4580                           
  4581                           ; 2 bytes @ 0x61
  4582  0000C1                     	ds	2
  4583  0000C3                     InitialiseString@RevNum:
  4584                           	opt callstack 0
  4585                           
  4586                           ; 2 bytes @ 0x63
  4587  0000C3                     	ds	2
  4588  0000C5                     InitialiseString@readDataOdd:
  4589                           	opt callstack 0
  4590                           
  4591                           ; 1 bytes @ 0x65
  4592  0000C5                     	ds	1
  4593  0000C6                     InitialiseString@readDataEven:
  4594                           	opt callstack 0
  4595                           
  4596                           ; 1 bytes @ 0x66
  4597  0000C6                     	ds	1
  4598  0000C7                     InitialiseString@j:
  4599                           	opt callstack 0
  4600                           
  4601                           ; 2 bytes @ 0x67
  4602  0000C7                     	ds	2
  4603  0000C9                     InitialiseString@i:
  4604                           	opt callstack 0
  4605                           
  4606                           ; 2 bytes @ 0x69
  4607  0000C9                     	ds	2
  4608  0000CB                     InitialiseString@i_1495:
  4609                           	opt callstack 0
  4610                           
  4611                           ; 2 bytes @ 0x6B
  4612  0000CB                     	ds	2
  4613                           
  4614                           	psect	cstackCOMRAM
  4615  000001                     __pcstackCOMRAM:
  4616                           	opt callstack 0
  4617  000001                     ??_INTERRUPT_InterruptManager:
  4618  000001                     
  4619                           ; 1 bytes @ 0x0
  4620  000001                     	ds	4
  4621  000005                     ??_ClearRxBuff:
  4622  000005                     ?_ADCC_GetSingleConversion:
  4623                           	opt callstack 0
  4624  000005                     ?_generateCRC:
  4625                           	opt callstack 0
  4626  000005                     ?_strcmp:
  4627                           	opt callstack 0
  4628  000005                     ?_strlen:
  4629                           	opt callstack 0
  4630  000005                     ?_isupper:
  4631                           	opt callstack 0
  4632  000005                     ?_isalpha:
  4633                           	opt callstack 0
  4634  000005                     ?_isdigit:
  4635                           	opt callstack 0
  4636  000005                     ?_isspace:
  4637                           	opt callstack 0
  4638  000005                     ?_islower:
  4639                           	opt callstack 0
  4640  000005                     ?___wmul:
  4641                           	opt callstack 0
  4642  000005                     ?___aodiv:
  4643                           	opt callstack 0
  4644  000005                     ?___aomod:
  4645                           	opt callstack 0
  4646  000005                     ?___lodiv:
  4647                           	opt callstack 0
  4648  000005                     ?___lomod:
  4649                           	opt callstack 0
  4650  000005                     EUSART2_Read@readValue:
  4651                           	opt callstack 0
  4652  000005                     EUSART2_Write@txData:
  4653                           	opt callstack 0
  4654  000005                     EUSART1_Read@readValue:
  4655                           	opt callstack 0
  4656  000005                     EUSART1_Write@txData:
  4657                           	opt callstack 0
  4658  000005                     DATAEE_WriteByte@bAdd:
  4659                           	opt callstack 0
  4660  000005                     DATAEE_ReadByte@bAdd:
  4661                           	opt callstack 0
  4662  000005                     EUSART2_SetFramingErrorHandler@interruptHandler:
  4663                           	opt callstack 0
  4664  000005                     EUSART2_SetOverrunErrorHandler@interruptHandler:
  4665                           	opt callstack 0
  4666  000005                     EUSART2_SetErrorHandler@interruptHandler:
  4667                           	opt callstack 0
  4668  000005                     EUSART2_SetTxInterruptHandler@interruptHandler:
  4669                           	opt callstack 0
  4670  000005                     EUSART2_SetRxInterruptHandler@interruptHandler:
  4671                           	opt callstack 0
  4672  000005                     EUSART1_SetFramingErrorHandler@interruptHandler:
  4673                           	opt callstack 0
  4674  000005                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  4675                           	opt callstack 0
  4676  000005                     EUSART1_SetErrorHandler@interruptHandler:
  4677                           	opt callstack 0
  4678  000005                     EUSART1_SetTxInterruptHandler@interruptHandler:
  4679                           	opt callstack 0
  4680  000005                     EUSART1_SetRxInterruptHandler@interruptHandler:
  4681                           	opt callstack 0
  4682  000005                     ClearModbusData@i:
  4683                           	opt callstack 0
  4684  000005                     generateCRC@MessCnt:
  4685                           	opt callstack 0
  4686  000005                     ClearModbusRespon@i:
  4687                           	opt callstack 0
  4688  000005                     ___wmul@multiplier:
  4689                           	opt callstack 0
  4690  000005                     isalpha@c:
  4691                           	opt callstack 0
  4692  000005                     isdigit@c:
  4693                           	opt callstack 0
  4694  000005                     isspace@c:
  4695                           	opt callstack 0
  4696  000005                     isupper@c:
  4697                           	opt callstack 0
  4698  000005                     strcmp@l:
  4699                           	opt callstack 0
  4700  000005                     strlen@s:
  4701                           	opt callstack 0
  4702  000005                     islower@c:
  4703                           	opt callstack 0
  4704  000005                     ___aodiv@dividend:
  4705                           	opt callstack 0
  4706  000005                     ___aomod@dividend:
  4707                           	opt callstack 0
  4708  000005                     ___lodiv@dividend:
  4709                           	opt callstack 0
  4710  000005                     ___lomod@dividend:
  4711                           	opt callstack 0
  4712                           
  4713                           ; 8 bytes @ 0x4
  4714  000005                     	ds	1
  4715  000006                     putch@txData:
  4716                           	opt callstack 0
  4717  000006                     ClearRxBuff@i:
  4718                           	opt callstack 0
  4719  000006                     UART1_Write_string@data:
  4720                           	opt callstack 0
  4721                           
  4722                           ; 2 bytes @ 0x5
  4723  000006                     	ds	1
  4724  000007                     ??_ADCC_GetSingleConversion:
  4725  000007                     ??_isupper:
  4726  000007                     ??_isalpha:
  4727  000007                     ??_isdigit:
  4728  000007                     ??_isspace:
  4729  000007                     ??_islower:
  4730  000007                     DATAEE_WriteByte@bData:
  4731                           	opt callstack 0
  4732  000007                     generateCRC@HiOrLo:
  4733                           	opt callstack 0
  4734  000007                     ___wmul@multiplicand:
  4735                           	opt callstack 0
  4736  000007                     fputc@c:
  4737                           	opt callstack 0
  4738  000007                     strcmp@r:
  4739                           	opt callstack 0
  4740  000007                     strlen@a:
  4741                           	opt callstack 0
  4742                           
  4743                           ; 2 bytes @ 0x6
  4744  000007                     	ds	1
  4745  000008                     ??_generateCRC:
  4746  000008                     DATAEE_WriteByte@GIEBitValue:
  4747                           	opt callstack 0
  4748  000008                     UART1_Write_string@data_len:
  4749                           	opt callstack 0
  4750                           
  4751                           ; 2 bytes @ 0x7
  4752  000008                     	ds	1
  4753  000009                     ??_strcmp:
  4754  000009                     ADCC_GetSingleConversion@channel:
  4755                           	opt callstack 0
  4756  000009                     ___wmul@product:
  4757                           	opt callstack 0
  4758  000009                     memmove@d1:
  4759                           	opt callstack 0
  4760  000009                     fputc@fp:
  4761                           	opt callstack 0
  4762  000009                     strcpy@dest:
  4763                           	opt callstack 0
  4764                           
  4765                           ; 2 bytes @ 0x8
  4766  000009                     	ds	1
  4767  00000A                     ??_UART1_Write_string:
  4768  00000A                     generateCRC@crcHigh:
  4769                           	opt callstack 0
  4770  00000A                     CardConfigIni@Name:
  4771                           	opt callstack 0
  4772                           
  4773                           ; 2 bytes @ 0x9
  4774  00000A                     	ds	1
  4775  00000B                     ??_fputc:
  4776  00000B                     ?_toupper:
  4777                           	opt callstack 0
  4778  00000B                     _isspace$2422:
  4779                           	opt callstack 0
  4780  00000B                     UART1_Write_string@i:
  4781                           	opt callstack 0
  4782  00000B                     memmove@s1:
  4783                           	opt callstack 0
  4784  00000B                     strcpy@src:
  4785                           	opt callstack 0
  4786  00000B                     toupper@c:
  4787                           	opt callstack 0
  4788                           
  4789                           ; 2 bytes @ 0xA
  4790  00000B                     	ds	1
  4791  00000C                     ?_atoi:
  4792                           	opt callstack 0
  4793  00000C                     generateCRC@crcLow:
  4794                           	opt callstack 0
  4795  00000C                     CardConfigIni@RetNum:
  4796                           	opt callstack 0
  4797  00000C                     atoi@s:
  4798                           	opt callstack 0
  4799                           
  4800                           ; 2 bytes @ 0xB
  4801  00000C                     	ds	1
  4802  00000D                     ??_strcpy:
  4803  00000D                     ??_toupper:
  4804  00000D                     memmove@n:
  4805                           	opt callstack 0
  4806  00000D                     ___aodiv@divisor:
  4807                           	opt callstack 0
  4808  00000D                     ___aomod@divisor:
  4809                           	opt callstack 0
  4810  00000D                     ___lodiv@divisor:
  4811                           	opt callstack 0
  4812  00000D                     ___lomod@divisor:
  4813                           	opt callstack 0
  4814                           
  4815                           ; 8 bytes @ 0xC
  4816  00000D                     	ds	1
  4817  00000E                     ??_atoi:
  4818  00000E                     generateCRC@i:
  4819                           	opt callstack 0
  4820  00000E                     CardConfigIni@dataeeAddrWrk:
  4821                           	opt callstack 0
  4822                           
  4823                           ; 2 bytes @ 0xD
  4824  00000E                     	ds	1
  4825  00000F                     ??_memmove:
  4826  00000F                     strcpy@s:
  4827                           	opt callstack 0
  4828                           
  4829                           ; 2 bytes @ 0xE
  4830  00000F                     	ds	1
  4831  000010                     ?_stoa:
  4832                           	opt callstack 0
  4833  000010                     generateCRC@j:
  4834                           	opt callstack 0
  4835  000010                     CardConfigIni@NumBytes:
  4836                           	opt callstack 0
  4837  000010                     stoa@fp:
  4838                           	opt callstack 0
  4839  000010                     fputs@s:
  4840                           	opt callstack 0
  4841                           
  4842                           ; 2 bytes @ 0xF
  4843  000010                     	ds	1
  4844  000011                     memmove@d:
  4845                           	opt callstack 0
  4846  000011                     strcpy@d:
  4847                           	opt callstack 0
  4848  000011                     _toupper$2509:
  4849                           	opt callstack 0
  4850                           
  4851                           ; 2 bytes @ 0x10
  4852  000011                     	ds	1
  4853  000012                     ??_CardConfigIni:
  4854  000012                     generateCRC@crc:
  4855                           	opt callstack 0
  4856  000012                     stoa@s:
  4857                           	opt callstack 0
  4858  000012                     atoi@neg:
  4859                           	opt callstack 0
  4860  000012                     fputs@fp:
  4861                           	opt callstack 0
  4862                           
  4863                           ; 2 bytes @ 0x11
  4864  000012                     	ds	1
  4865  000013                     memmove@s:
  4866                           	opt callstack 0
  4867  000013                     strcat@dest:
  4868                           	opt callstack 0
  4869                           
  4870                           ; 2 bytes @ 0x12
  4871  000013                     	ds	1
  4872  000014                     ??_stoa:
  4873  000014                     fputs@c:
  4874                           	opt callstack 0
  4875  000014                     ModbusError@ErrorCode:
  4876                           	opt callstack 0
  4877  000014                     CardConfigIni@j:
  4878                           	opt callstack 0
  4879  000014                     _atoi$2395:
  4880                           	opt callstack 0
  4881                           
  4882                           ; 2 bytes @ 0x13
  4883  000014                     	ds	1
  4884  000015                     ___aodiv@counter:
  4885                           	opt callstack 0
  4886  000015                     ___aomod@counter:
  4887                           	opt callstack 0
  4888  000015                     ___lomod@counter:
  4889                           	opt callstack 0
  4890  000015                     fputs@i:
  4891                           	opt callstack 0
  4892  000015                     strcat@src:
  4893                           	opt callstack 0
  4894  000015                     stoa@nuls:
  4895                           	opt callstack 0
  4896  000015                     ___lodiv@quotient:
  4897                           	opt callstack 0
  4898                           
  4899                           ; 8 bytes @ 0x14
  4900  000015                     	ds	1
  4901  000016                     ___aodiv@sign:
  4902                           	opt callstack 0
  4903  000016                     ___aomod@sign:
  4904                           	opt callstack 0
  4905  000016                     CardConfigIni@i:
  4906                           	opt callstack 0
  4907  000016                     _atoi$2397:
  4908                           	opt callstack 0
  4909                           
  4910                           ; 2 bytes @ 0x15
  4911  000016                     	ds	1
  4912  000017                     ?_abs:
  4913                           	opt callstack 0
  4914  000017                     ?_pad:
  4915                           	opt callstack 0
  4916  000017                     pad@fp:
  4917                           	opt callstack 0
  4918  000017                     abs@a:
  4919                           	opt callstack 0
  4920  000017                     ___aodiv@quotient:
  4921                           	opt callstack 0
  4922                           
  4923                           ; 8 bytes @ 0x16
  4924  000017                     	ds	1
  4925  000018                     CardConfigIni@readDataOdd:
  4926                           	opt callstack 0
  4927  000018                     _atoi$2396:
  4928                           	opt callstack 0
  4929                           
  4930                           ; 1 bytes @ 0x17
  4931  000018                     	ds	1
  4932  000019                     ??_abs:
  4933  000019                     CardConfigIni@readDataEven:
  4934                           	opt callstack 0
  4935  000019                     pad@buf:
  4936                           	opt callstack 0
  4937  000019                     atoi@n:
  4938                           	opt callstack 0
  4939                           
  4940                           ; 2 bytes @ 0x18
  4941  000019                     	ds	2
  4942  00001B                     pad@p:
  4943                           	opt callstack 0
  4944                           
  4945                           ; 2 bytes @ 0x1A
  4946  00001B                     	ds	1
  4947  00001C                     stoa@i:
  4948                           	opt callstack 0
  4949                           
  4950                           ; 2 bytes @ 0x1B
  4951  00001C                     	ds	1
  4952  00001D                     ??_pad:
  4953  00001D                     ___lodiv@counter:
  4954                           	opt callstack 0
  4955                           
  4956                           ; 1 bytes @ 0x1C
  4957  00001D                     	ds	1
  4958  00001E                     pad@i:
  4959                           	opt callstack 0
  4960  00001E                     stoa@w:
  4961                           	opt callstack 0
  4962                           
  4963                           ; 2 bytes @ 0x1D
  4964  00001E                     	ds	2
  4965  000020                     pad@w:
  4966                           	opt callstack 0
  4967  000020                     stoa@cp:
  4968                           	opt callstack 0
  4969                           
  4970                           ; 2 bytes @ 0x1F
  4971  000020                     	ds	2
  4972  000022                     ?_dtoa:
  4973                           	opt callstack 0
  4974  000022                     ?_utoa:
  4975                           	opt callstack 0
  4976  000022                     ?_xtoa:
  4977                           	opt callstack 0
  4978  000022                     dtoa@fp:
  4979                           	opt callstack 0
  4980  000022                     stoa@p:
  4981                           	opt callstack 0
  4982  000022                     utoa@fp:
  4983                           	opt callstack 0
  4984  000022                     xtoa@fp:
  4985                           	opt callstack 0
  4986                           
  4987                           ; 2 bytes @ 0x21
  4988  000022                     	ds	2
  4989  000024                     stoa@l:
  4990                           	opt callstack 0
  4991  000024                     dtoa@d:
  4992                           	opt callstack 0
  4993  000024                     utoa@d:
  4994                           	opt callstack 0
  4995  000024                     xtoa@d:
  4996                           	opt callstack 0
  4997                           
  4998                           ; 8 bytes @ 0x23
  4999  000024                     	ds	8
  5000  00002C                     ??_dtoa:
  5001  00002C                     ??_utoa:
  5002  00002C                     xtoa@x:
  5003                           	opt callstack 0
  5004                           
  5005                           ; 1 bytes @ 0x2B
  5006  00002C                     	ds	1
  5007  00002D                     ??_xtoa:
  5008                           
  5009                           ; 1 bytes @ 0x2C
  5010  00002D                     	ds	7
  5011  000034                     _dtoa$1891:
  5012                           	opt callstack 0
  5013  000034                     utoa@p:
  5014                           	opt callstack 0
  5015                           
  5016                           ; 2 bytes @ 0x33
  5017  000034                     	ds	1
  5018  000035                     _xtoa$1920:
  5019                           	opt callstack 0
  5020                           
  5021                           ; 2 bytes @ 0x34
  5022  000035                     	ds	1
  5023  000036                     dtoa@p:
  5024                           	opt callstack 0
  5025  000036                     utoa@w:
  5026                           	opt callstack 0
  5027                           
  5028                           ; 2 bytes @ 0x35
  5029  000036                     	ds	1
  5030  000037                     _xtoa$1921:
  5031                           	opt callstack 0
  5032                           
  5033                           ; 2 bytes @ 0x36
  5034  000037                     	ds	1
  5035  000038                     dtoa@w:
  5036                           	opt callstack 0
  5037  000038                     utoa@n:
  5038                           	opt callstack 0
  5039                           
  5040                           ; 8 bytes @ 0x37
  5041  000038                     	ds	1
  5042  000039                     xtoa@p:
  5043                           	opt callstack 0
  5044                           
  5045                           ; 2 bytes @ 0x38
  5046  000039                     	ds	1
  5047  00003A                     dtoa@s:
  5048                           	opt callstack 0
  5049                           
  5050                           ; 2 bytes @ 0x39
  5051  00003A                     	ds	1
  5052  00003B                     xtoa@w:
  5053                           	opt callstack 0
  5054                           
  5055                           ; 2 bytes @ 0x3A
  5056  00003B                     	ds	1
  5057  00003C                     dtoa@n:
  5058                           	opt callstack 0
  5059                           
  5060                           ; 8 bytes @ 0x3B
  5061  00003C                     	ds	1
  5062  00003D                     xtoa@n:
  5063                           	opt callstack 0
  5064                           
  5065                           ; 8 bytes @ 0x3C
  5066  00003D                     	ds	3
  5067  000040                     utoa@i:
  5068                           	opt callstack 0
  5069                           
  5070                           ; 2 bytes @ 0x3F
  5071  000040                     	ds	4
  5072  000044                     dtoa@i:
  5073                           	opt callstack 0
  5074                           
  5075                           ; 2 bytes @ 0x43
  5076  000044                     	ds	1
  5077  000045                     xtoa@i:
  5078                           	opt callstack 0
  5079                           
  5080                           ; 2 bytes @ 0x44
  5081  000045                     	ds	2
  5082  000047                     xtoa@c:
  5083                           	opt callstack 0
  5084                           
  5085                           ; 2 bytes @ 0x46
  5086  000047                     	ds	2
  5087  000049                     ?_vfpfcnvrt:
  5088                           	opt callstack 0
  5089  000049                     vfpfcnvrt@fp:
  5090                           	opt callstack 0
  5091                           
  5092                           ; 2 bytes @ 0x48
  5093  000049                     	ds	2
  5094  00004B                     vfpfcnvrt@fmt:
  5095                           	opt callstack 0
  5096                           
  5097                           ; 2 bytes @ 0x4A
  5098  00004B                     	ds	2
  5099  00004D                     vfpfcnvrt@ap:
  5100                           	opt callstack 0
  5101                           
  5102                           ; 2 bytes @ 0x4C
  5103  00004D                     	ds	2
  5104  00004F                     ??_vfpfcnvrt:
  5105                           
  5106                           ; 1 bytes @ 0x4E
  5107  00004F                     	ds	4
  5108  000053                     vfprintf@cfmt:
  5109                           	opt callstack 0
  5110                           
  5111                           ; 2 bytes @ 0x52
  5112  000053                     	ds	2
  5113  000055                     ??_InitialiseString:
  5114  000055                     ??_AddRxBuffToModBus:
  5115  000055                     PrintMB400@i:
  5116                           	opt callstack 0
  5117  000055                     ReadRX232@temp:
  5118                           	opt callstack 0
  5119  000055                     ClearEEAddRange@i:
  5120                           	opt callstack 0
  5121                           
  5122                           ; 2 bytes @ 0x54
  5123  000055                     	ds	1
  5124  000056                     ??_ModbusRx:
  5125                           
  5126                           ; 1 bytes @ 0x55
  5127  000056                     	ds	1
  5128  000057                     
  5129                           ; 1 bytes @ 0x56
  5130 ;;
  5131 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  5132 ;;
  5133 ;; *************** function _main *****************
  5134 ;; Defined at:
  5135 ;;		line 14 in file "main.c"
  5136 ;; Parameters:    Size  Location     Type
  5137 ;;		None
  5138 ;; Auto vars:     Size  Location     Type
  5139 ;;  RXStat          1    0        _Bool 
  5140 ;; Return value:  Size  Location     Type
  5141 ;;                  1    wreg      void 
  5142 ;; Registers used:
  5143 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5144 ;; Tracked objects:
  5145 ;;		On entry : 0/0
  5146 ;;		On exit  : 0/0
  5147 ;;		Unchanged: 0/0
  5148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5150 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5151 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5152 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5153 ;;Total ram usage:        3 bytes
  5154 ;; Hardware stack levels required when called:   16
  5155 ;; This function calls:
  5156 ;;		_ClearModbusData
  5157 ;;		_ClearModbusRespon
  5158 ;;		_ClearRxBuff
  5159 ;;		_InitialiseString
  5160 ;;		_ModbusError
  5161 ;;		_ModbusFC03
  5162 ;;		_ModbusFC10
  5163 ;;		_ModbusRx
  5164 ;;		_PrintMB400
  5165 ;;		_PrintModRespon
  5166 ;;		_PrintModbus
  5167 ;;		_RXMode
  5168 ;;		_ReadRX232
  5169 ;;		_SYSTEM_Initialize
  5170 ;;		_ValidateCmd
  5171 ;;		_printf
  5172 ;;		_strcpy
  5173 ;; This function is called by:
  5174 ;;		Startup code after reset
  5175 ;; This function uses a non-reentrant model
  5176 ;;
  5177                           
  5178                           	psect	text0
  5179  003600                     __ptext0:
  5180                           	opt callstack 0
  5181  003600                     _main:
  5182                           	opt callstack 15
  5183  003600                     
  5184                           ;main.c: 17:     SYSTEM_Initialize();
  5185  003600  EC77  F026         	call	_SYSTEM_Initialize	;wreg free
  5186  003604                     
  5187                           ;main.c: 24:     (INTCONbits.GIE = 1);
  5188  003604  8EF2               	bsf	242,7,c	;volatile
  5189  003606                     
  5190                           ;main.c: 30:     (INTCONbits.PEIE = 1);
  5191  003606  8CF2               	bsf	242,6,c	;volatile
  5192  003608  9883               	bcf	131,4,c	;volatile
  5193  00360A  9A83               	bcf	131,5,c	;volatile
  5194  00360C  9C83               	bcf	131,6,c	;volatile
  5195  00360E  9E83               	bcf	131,7,c	;volatile
  5196  003610                     
  5197                           ;main.c: 40:     InitialiseString(0);
  5198  003610  0E00               	movlw	0
  5199  003612  ECAB  F009         	call	_InitialiseString
  5200  003616                     
  5201                           ;main.c: 43:     RXMode();
  5202  003616  EC38  F027         	call	_RXMode	;wreg free
  5203  00361A                     
  5204                           ;main.c: 44:     ClearRxBuff();
  5205  00361A  EC3C  F024         	call	_ClearRxBuff	;wreg free
  5206  00361E                     
  5207                           ;main.c: 45:     ClearModbusRespon();
  5208  00361E  ECEB  F024         	call	_ClearModbusRespon	;wreg free
  5209  003622                     l8157:
  5210                           
  5211                           ;main.c: 51:     {;main.c: 52:         if(ModbusRx() == 1){
  5212  003622  EC50  F018         	call	_ModbusRx	;wreg free
  5213  003626  06E8               	decf	wreg,f,c
  5214  003628  A4D8               	btfss	status,2,c
  5215  00362A  EF19  F01B         	goto	u8321
  5216  00362E  EF1B  F01B         	goto	u8320
  5217  003632                     u8321:
  5218  003632  EF64  F01B         	goto	l8179
  5219  003636                     u8320:
  5220  003636  EF44  F01B         	goto	l8171
  5221  00363A                     l8161:
  5222                           
  5223                           ; BSR set to: 1
  5224                           ;main.c: 58:                 {;main.c: 62:                     ModbusFC03();
  5225  00363A  EC95  F000         	call	_ModbusFC03	;wreg free
  5226                           
  5227                           ;main.c: 63:                     break;
  5228  00363E  EF5A  F01B         	goto	l8173
  5229  003642                     l8163:
  5230                           
  5231                           ; BSR set to: 1
  5232                           ;main.c: 66:                 {;main.c: 67:                     printf("Function Code 0x1
      +                          0\r\n");
  5233  003642  0ED6               	movlw	low STR_1
  5234  003644  0100               	movlb	0	; () banked
  5235  003646  6F7D               	movwf	printf@fmt& (0+255),b
  5236  003648  0EFE               	movlw	high STR_1
  5237  00364A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5238  00364C  EC3D  F026         	call	_printf	;wreg free
  5239                           
  5240                           ;main.c: 69:                     printf("Modbus Register Before Update:");
  5241  003650  0EA0               	movlw	low STR_2
  5242  003652  0100               	movlb	0	; () banked
  5243  003654  6F7D               	movwf	printf@fmt& (0+255),b
  5244  003656  0EFC               	movlw	high STR_2
  5245  003658  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5246  00365A  EC3D  F026         	call	_printf	;wreg free
  5247                           
  5248                           ;main.c: 70:                     PrintMB400();
  5249  00365E  ECF5  F021         	call	_PrintMB400	;wreg free
  5250                           
  5251                           ;main.c: 71:                     ModbusFC10();
  5252  003662  EC2C  F011         	call	_ModbusFC10	;wreg free
  5253                           
  5254                           ;main.c: 73:                     break;
  5255  003666  EF5A  F01B         	goto	l8173
  5256  00366A                     l8165:
  5257                           
  5258                           ; BSR set to: 1
  5259                           ;main.c: 76:                 {;main.c: 77:                     printf("Unsupported Funct
      +                          ion Code\r\n");
  5260  00366A  0E8D               	movlw	low STR_3
  5261  00366C  0100               	movlb	0	; () banked
  5262  00366E  6F7D               	movwf	printf@fmt& (0+255),b
  5263  003670  0EFD               	movlw	high STR_3
  5264  003672  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5265  003674  EC3D  F026         	call	_printf	;wreg free
  5266  003678                     
  5267                           ;main.c: 79:                     ModbusError(0x01);
  5268  003678  0E00               	movlw	0
  5269  00367A  6E15               	movwf	(ModbusError@ErrorCode+1)^0,c
  5270  00367C  0E01               	movlw	1
  5271  00367E  6E14               	movwf	ModbusError@ErrorCode^0,c
  5272  003680  ECF3  F01E         	call	_ModbusError	;wreg free
  5273                           
  5274                           ;main.c: 80:                     break;
  5275  003684  EF5A  F01B         	goto	l8173
  5276  003688                     l8171:
  5277  003688  0101               	movlb	1	; () banked
  5278  00368A  5101               	movf	(_ModbusData+1)& (0+255),w,b
  5279  00368C  6FD7               	movwf	??_main& (0+255),b
  5280  00368E  6BD8               	clrf	(??_main+1)& (0+255),b
  5281                           
  5282                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5283                           ; Switch size 1, requested type "simple"
  5284                           ; Number of cases is 1, Range of values is 0 to 0
  5285                           ; switch strategies available:
  5286                           ; Name         Instructions Cycles
  5287                           ; simple_byte            4     3 (average)
  5288                           ;	Chosen strategy is simple_byte
  5289  003690  51D8               	movf	(??_main+1)& (0+255),w,b
  5290  003692  0A00               	xorlw	0	; case 0
  5291  003694  B4D8               	btfsc	status,2,c
  5292  003696  EF4F  F01B         	goto	l8315
  5293  00369A  EF35  F01B         	goto	l8165
  5294  00369E                     l8315:
  5295                           
  5296                           ; BSR set to: 1
  5297                           ; Switch size 1, requested type "simple"
  5298                           ; Number of cases is 2, Range of values is 3 to 16
  5299                           ; switch strategies available:
  5300                           ; Name         Instructions Cycles
  5301                           ; simple_byte            7     4 (average)
  5302                           ;	Chosen strategy is simple_byte
  5303  00369E  51D7               	movf	??_main& (0+255),w,b
  5304  0036A0  0A03               	xorlw	3	; case 3
  5305  0036A2  B4D8               	btfsc	status,2,c
  5306  0036A4  EF1D  F01B         	goto	l8161
  5307  0036A8  0A13               	xorlw	19	; case 16
  5308  0036AA  B4D8               	btfsc	status,2,c
  5309  0036AC  EF21  F01B         	goto	l8163
  5310  0036B0  EF35  F01B         	goto	l8165
  5311  0036B4                     l8173:
  5312                           
  5313                           ;main.c: 84:             PrintModbus();
  5314  0036B4  ECC6  F00F         	call	_PrintModbus	;wreg free
  5315                           
  5316                           ;main.c: 85:             PrintModRespon();
  5317  0036B8  EC77  F00B         	call	_PrintModRespon	;wreg free
  5318  0036BC                     
  5319                           ;main.c: 89:             ClearModbusData();
  5320  0036BC  EC16  F024         	call	_ClearModbusData	;wreg free
  5321  0036C0                     
  5322                           ;main.c: 90:             ClearModbusRespon();
  5323  0036C0  ECEB  F024         	call	_ClearModbusRespon	;wreg free
  5324                           
  5325                           ;main.c: 92:         }else if(ReadRX232(16) != 0){
  5326  0036C4  EF11  F01B         	goto	l8157
  5327  0036C8                     l8179:
  5328  0036C8  0E00               	movlw	0
  5329  0036CA  0100               	movlb	0	; () banked
  5330  0036CC  6F90               	movwf	(ReadRX232@NumChars+1)& (0+255),b
  5331  0036CE  0E10               	movlw	16
  5332  0036D0  6F8F               	movwf	ReadRX232@NumChars& (0+255),b
  5333  0036D2  EC6E  F01A         	call	_ReadRX232	;wreg free
  5334  0036D6  0100               	movlb	0	; () banked
  5335  0036D8  518F               	movf	?_ReadRX232& (0+255),w,b
  5336  0036DA  1190               	iorwf	(?_ReadRX232+1)& (0+255),w,b
  5337  0036DC  B4D8               	btfsc	status,2,c
  5338  0036DE  EF73  F01B         	goto	u8331
  5339  0036E2  EF75  F01B         	goto	u8330
  5340  0036E6                     u8331:
  5341  0036E6  EF8A  F01B         	goto	l601
  5342  0036EA                     u8330:
  5343  0036EA                     
  5344                           ; BSR set to: 0
  5345                           ;main.c: 94:             if(ValidateCmd() ==1){
  5346  0036EA  EC24  F015         	call	_ValidateCmd	;wreg free
  5347  0036EE                     
  5348                           ;main.c: 101:             printf("\r\nEnter Command : ");
  5349  0036EE  0E25               	movlw	low STR_4
  5350  0036F0  0100               	movlb	0	; () banked
  5351  0036F2  6F7D               	movwf	printf@fmt& (0+255),b
  5352  0036F4  0EFF               	movlw	high STR_4
  5353  0036F6  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5354  0036F8  EC3D  F026         	call	_printf	;wreg free
  5355  0036FC                     
  5356                           ;main.c: 102:             strcpy(Command, "");
  5357  0036FC  0EED               	movlw	low _Command
  5358  0036FE  6E09               	movwf	strcpy@dest^0,c
  5359  003700  0E01               	movlw	high _Command
  5360  003702  6E0A               	movwf	(strcpy@dest+1)^0,c
  5361  003704  0E53               	movlw	low (STR_103+68)
  5362  003706  6E0B               	movwf	strcpy@src^0,c
  5363  003708  0EF5               	movlw	high (STR_103+68)
  5364  00370A  6E0C               	movwf	(strcpy@src+1)^0,c
  5365  00370C  EC5B  F022         	call	_strcpy	;wreg free
  5366                           
  5367                           ;main.c: 104:         }else{
  5368  003710  EF11  F01B         	goto	l8157
  5369  003714                     l601:
  5370                           
  5371                           ; BSR set to: 0
  5372  003714  EF11  F01B         	goto	l8157
  5373  003718  EF93  F000         	goto	start
  5374  00371C                     __end_of_main:
  5375                           	opt callstack 0
  5376                           
  5377 ;; *************** function _ValidateCmd *****************
  5378 ;; Defined at:
  5379 ;;		line 277 in file "RS232.c"
  5380 ;; Parameters:    Size  Location     Type
  5381 ;;		None
  5382 ;; Auto vars:     Size  Location     Type
  5383 ;;  ConfName       20   40[BANK1 ] unsigned char [20]
  5384 ;;  MaxChars        2    0        int 
  5385 ;;  ConfName       20   20[BANK1 ] unsigned char [20]
  5386 ;;  MaxChars        2    0        int 
  5387 ;;  ConfName       20    0[BANK1 ] unsigned char [20]
  5388 ;;  MaxChars        2    0        int 
  5389 ;;  i               2    0        int 
  5390 ;; Return value:  Size  Location     Type
  5391 ;;                  1    wreg      _Bool 
  5392 ;; Registers used:
  5393 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5394 ;; Tracked objects:
  5395 ;;		On entry : 0/0
  5396 ;;		On exit  : 0/0
  5397 ;;		Unchanged: 0/0
  5398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5400 ;;      Locals:         0       0      68       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5402 ;;      Totals:         0       0      68       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5403 ;;Total ram usage:       68 bytes
  5404 ;; Hardware stack levels used:    1
  5405 ;; Hardware stack levels required when called:   15
  5406 ;; This function calls:
  5407 ;;		_InitialiseString
  5408 ;;		_SaveCardDat
  5409 ;;		_TogDebug
  5410 ;;		_strcmp
  5411 ;; This function is called by:
  5412 ;;		_main
  5413 ;; This function uses a non-reentrant model
  5414 ;;
  5415                           
  5416                           	psect	text1
  5417  002A48                     __ptext1:
  5418                           	opt callstack 0
  5419  002A48                     _ValidateCmd:
  5420                           	opt callstack 15
  5421  002A48                     
  5422                           ;RS232.c: 283:     if(!strcmp(Command,"debug")){
  5423  002A48  0EED               	movlw	low _Command
  5424  002A4A  6E05               	movwf	strcmp@l^0,c
  5425  002A4C  0E01               	movlw	high _Command
  5426  002A4E  6E06               	movwf	(strcmp@l+1)^0,c
  5427  002A50  0EE4               	movlw	low STR_125
  5428  002A52  6E07               	movwf	strcmp@r^0,c
  5429  002A54  0EFF               	movlw	high STR_125
  5430  002A56  6E08               	movwf	(strcmp@r+1)^0,c
  5431  002A58  ECB3  F01F         	call	_strcmp	;wreg free
  5432  002A5C  5005               	movf	?_strcmp^0,w,c
  5433  002A5E  1006               	iorwf	(?_strcmp+1)^0,w,c
  5434  002A60  A4D8               	btfss	status,2,c
  5435  002A62  EF35  F015         	goto	u8241
  5436  002A66  EF37  F015         	goto	u8240
  5437  002A6A                     u8241:
  5438  002A6A  EF3C  F015         	goto	l8063
  5439  002A6E                     u8240:
  5440  002A6E                     
  5441                           ;RS232.c: 284:         TogDebug();
  5442  002A6E  EC8A  F025         	call	_TogDebug	;wreg free
  5443  002A72                     l8057:
  5444                           
  5445                           ;RS232.c: 285:         return 1;
  5446  002A72  0E01               	movlw	1
  5447  002A74  EFF1  F015         	goto	l998
  5448  002A78                     l8063:
  5449  002A78  0EED               	movlw	low _Command
  5450  002A7A  6E05               	movwf	strcmp@l^0,c
  5451  002A7C  0E01               	movlw	high _Command
  5452  002A7E  6E06               	movwf	(strcmp@l+1)^0,c
  5453  002A80  0EFC               	movlw	low STR_127
  5454  002A82  6E07               	movwf	strcmp@r^0,c
  5455  002A84  0EFF               	movlw	high STR_127
  5456  002A86  6E08               	movwf	(strcmp@r+1)^0,c
  5457  002A88  ECB3  F01F         	call	_strcmp	;wreg free
  5458  002A8C  5005               	movf	?_strcmp^0,w,c
  5459  002A8E  1006               	iorwf	(?_strcmp+1)^0,w,c
  5460  002A90  A4D8               	btfss	status,2,c
  5461  002A92  EF4D  F015         	goto	u8251
  5462  002A96  EF4F  F015         	goto	u8250
  5463  002A9A                     u8251:
  5464  002A9A  EF54  F015         	goto	l8073
  5465  002A9E                     u8250:
  5466  002A9E                     
  5467                           ;RS232.c: 287:         InitialiseString(0);
  5468  002A9E  0E00               	movlw	0
  5469  002AA0  ECAB  F009         	call	_InitialiseString
  5470  002AA4  EF39  F015         	goto	l8057
  5471  002AA8                     l8073:
  5472  002AA8  0EED               	movlw	low _Command
  5473  002AAA  6E05               	movwf	strcmp@l^0,c
  5474  002AAC  0E01               	movlw	high _Command
  5475  002AAE  6E06               	movwf	(strcmp@l+1)^0,c
  5476  002AB0  0EDD               	movlw	low STR_129
  5477  002AB2  6E07               	movwf	strcmp@r^0,c
  5478  002AB4  0EFF               	movlw	high STR_129
  5479  002AB6  6E08               	movwf	(strcmp@r+1)^0,c
  5480  002AB8  ECB3  F01F         	call	_strcmp	;wreg free
  5481  002ABC  5005               	movf	?_strcmp^0,w,c
  5482  002ABE  1006               	iorwf	(?_strcmp+1)^0,w,c
  5483  002AC0  A4D8               	btfss	status,2,c
  5484  002AC2  EF65  F015         	goto	u8261
  5485  002AC6  EF67  F015         	goto	u8260
  5486  002ACA                     u8261:
  5487  002ACA  EF88  F015         	goto	l8089
  5488  002ACE                     u8260:
  5489  002ACE                     
  5490                           ;RS232.c: 290:         char ConfName[20] = "Serial Number";
  5491  002ACE  EE22  F028         	lfsr	2,ValidateCmd@F10790
  5492  002AD2  EE11  F093         	lfsr	1,ValidateCmd@ConfName
  5493  002AD6  0E13               	movlw	19
  5494  002AD8                     u8271:
  5495  002AD8  CFDB FFE3          	movff	plusw2,plusw1
  5496  002ADC  06E8               	decf	wreg,f,c
  5497  002ADE  E2FC               	bc	u8271
  5498  002AE0                     
  5499                           ;RS232.c: 296:         SaveCardDat(ConfName,0x0300,0x0300,MaxChars);
  5500  002AE0  0E93               	movlw	low ValidateCmd@ConfName
  5501  002AE2  0100               	movlb	0	; () banked
  5502  002AE4  6F93               	movwf	SaveCardDat@Name& (0+255),b
  5503  002AE6  0E01               	movlw	high ValidateCmd@ConfName
  5504  002AE8  6F94               	movwf	(SaveCardDat@Name+1)& (0+255),b
  5505  002AEA  0E03               	movlw	3
  5506  002AEC  6F96               	movwf	(SaveCardDat@MBAddress+1)& (0+255),b
  5507  002AEE  0E00               	movlw	0
  5508  002AF0  6F95               	movwf	SaveCardDat@MBAddress& (0+255),b
  5509  002AF2  0E03               	movlw	3
  5510  002AF4  6F98               	movwf	(SaveCardDat@dataeeAddr+1)& (0+255),b
  5511  002AF6  0E00               	movlw	0
  5512  002AF8  6F97               	movwf	SaveCardDat@dataeeAddr& (0+255),b
  5513  002AFA  0E00               	movlw	0
  5514  002AFC  6F9A               	movwf	(SaveCardDat@NumBytes+1)& (0+255),b
  5515  002AFE  0E0A               	movlw	10
  5516  002B00  6F99               	movwf	SaveCardDat@NumBytes& (0+255),b
  5517  002B02  EC3C  F014         	call	_SaveCardDat	;wreg free
  5518  002B06                     
  5519                           ;RS232.c: 297:         InitialiseString(1);
  5520  002B06  0E01               	movlw	1
  5521  002B08  ECAB  F009         	call	_InitialiseString
  5522  002B0C  EF39  F015         	goto	l8057
  5523  002B10                     l8089:
  5524  002B10  0EED               	movlw	low _Command
  5525  002B12  6E05               	movwf	strcmp@l^0,c
  5526  002B14  0E01               	movlw	high _Command
  5527  002B16  6E06               	movwf	(strcmp@l+1)^0,c
  5528  002B18  0EEF               	movlw	low STR_131
  5529  002B1A  6E07               	movwf	strcmp@r^0,c
  5530  002B1C  0EFF               	movlw	high STR_131
  5531  002B1E  6E08               	movwf	(strcmp@r+1)^0,c
  5532  002B20  ECB3  F01F         	call	_strcmp	;wreg free
  5533  002B24  5005               	movf	?_strcmp^0,w,c
  5534  002B26  1006               	iorwf	(?_strcmp+1)^0,w,c
  5535  002B28  A4D8               	btfss	status,2,c
  5536  002B2A  EF99  F015         	goto	u8281
  5537  002B2E  EF9B  F015         	goto	u8280
  5538  002B32                     u8281:
  5539  002B32  EFBC  F015         	goto	l8105
  5540  002B36                     u8280:
  5541  002B36                     
  5542                           ;RS232.c: 303:         char ConfName[20] = "Part Number";
  5543  002B36  EE22  F014         	lfsr	2,ValidateCmd@F10793
  5544  002B3A  EE11  F0A7         	lfsr	1,ValidateCmd@ConfName_1561
  5545  002B3E  0E13               	movlw	19
  5546  002B40                     u8291:
  5547  002B40  CFDB FFE3          	movff	plusw2,plusw1
  5548  002B44  06E8               	decf	wreg,f,c
  5549  002B46  E2FC               	bc	u8291
  5550  002B48                     
  5551                           ;RS232.c: 305:         SaveCardDat(ConfName,0x0100,0x0100,MaxChars);
  5552  002B48  0EA7               	movlw	low ValidateCmd@ConfName_1561
  5553  002B4A  0100               	movlb	0	; () banked
  5554  002B4C  6F93               	movwf	SaveCardDat@Name& (0+255),b
  5555  002B4E  0E01               	movlw	high ValidateCmd@ConfName_1561
  5556  002B50  6F94               	movwf	(SaveCardDat@Name+1)& (0+255),b
  5557  002B52  0E01               	movlw	1
  5558  002B54  6F96               	movwf	(SaveCardDat@MBAddress+1)& (0+255),b
  5559  002B56  0E00               	movlw	0
  5560  002B58  6F95               	movwf	SaveCardDat@MBAddress& (0+255),b
  5561  002B5A  0E01               	movlw	1
  5562  002B5C  6F98               	movwf	(SaveCardDat@dataeeAddr+1)& (0+255),b
  5563  002B5E  0E00               	movlw	0
  5564  002B60  6F97               	movwf	SaveCardDat@dataeeAddr& (0+255),b
  5565  002B62  0E00               	movlw	0
  5566  002B64  6F9A               	movwf	(SaveCardDat@NumBytes+1)& (0+255),b
  5567  002B66  0E10               	movlw	16
  5568  002B68  6F99               	movwf	SaveCardDat@NumBytes& (0+255),b
  5569  002B6A  EC3C  F014         	call	_SaveCardDat	;wreg free
  5570  002B6E                     
  5571                           ;RS232.c: 306:         InitialiseString(1);
  5572  002B6E  0E01               	movlw	1
  5573  002B70  ECAB  F009         	call	_InitialiseString
  5574  002B74  EF39  F015         	goto	l8057
  5575  002B78                     l8105:
  5576  002B78  0EED               	movlw	low _Command
  5577  002B7A  6E05               	movwf	strcmp@l^0,c
  5578  002B7C  0E01               	movlw	high _Command
  5579  002B7E  6E06               	movwf	(strcmp@l+1)^0,c
  5580  002B80  0EF8               	movlw	low STR_133
  5581  002B82  6E07               	movwf	strcmp@r^0,c
  5582  002B84  0EFF               	movlw	high STR_133
  5583  002B86  6E08               	movwf	(strcmp@r+1)^0,c
  5584  002B88  ECB3  F01F         	call	_strcmp	;wreg free
  5585  002B8C  5005               	movf	?_strcmp^0,w,c
  5586  002B8E  1006               	iorwf	(?_strcmp+1)^0,w,c
  5587  002B90  A4D8               	btfss	status,2,c
  5588  002B92  EFCD  F015         	goto	u8301
  5589  002B96  EFCF  F015         	goto	u8300
  5590  002B9A                     u8301:
  5591  002B9A  EFF0  F015         	goto	l8121
  5592  002B9E                     u8300:
  5593  002B9E                     
  5594                           ;RS232.c: 313:         char ConfName[20] = "Revision";
  5595  002B9E  EE22  F000         	lfsr	2,ValidateCmd@F10796
  5596  002BA2  EE11  F0BB         	lfsr	1,ValidateCmd@ConfName_1565
  5597  002BA6  0E13               	movlw	19
  5598  002BA8                     u8311:
  5599  002BA8  CFDB FFE3          	movff	plusw2,plusw1
  5600  002BAC  06E8               	decf	wreg,f,c
  5601  002BAE  E2FC               	bc	u8311
  5602  002BB0                     
  5603                           ;RS232.c: 316:         SaveCardDat(ConfName,0x0200,0x0200,MaxChars);
  5604  002BB0  0EBB               	movlw	low ValidateCmd@ConfName_1565
  5605  002BB2  0100               	movlb	0	; () banked
  5606  002BB4  6F93               	movwf	SaveCardDat@Name& (0+255),b
  5607  002BB6  0E01               	movlw	high ValidateCmd@ConfName_1565
  5608  002BB8  6F94               	movwf	(SaveCardDat@Name+1)& (0+255),b
  5609  002BBA  0E02               	movlw	2
  5610  002BBC  6F96               	movwf	(SaveCardDat@MBAddress+1)& (0+255),b
  5611  002BBE  0E00               	movlw	0
  5612  002BC0  6F95               	movwf	SaveCardDat@MBAddress& (0+255),b
  5613  002BC2  0E02               	movlw	2
  5614  002BC4  6F98               	movwf	(SaveCardDat@dataeeAddr+1)& (0+255),b
  5615  002BC6  0E00               	movlw	0
  5616  002BC8  6F97               	movwf	SaveCardDat@dataeeAddr& (0+255),b
  5617  002BCA  0E00               	movlw	0
  5618  002BCC  6F9A               	movwf	(SaveCardDat@NumBytes+1)& (0+255),b
  5619  002BCE  0E02               	movlw	2
  5620  002BD0  6F99               	movwf	SaveCardDat@NumBytes& (0+255),b
  5621  002BD2  EC3C  F014         	call	_SaveCardDat	;wreg free
  5622  002BD6                     
  5623                           ;RS232.c: 318:         InitialiseString(1);
  5624  002BD6  0E01               	movlw	1
  5625  002BD8  ECAB  F009         	call	_InitialiseString
  5626  002BDC  EF39  F015         	goto	l8057
  5627  002BE0                     l8121:
  5628                           
  5629                           ;RS232.c: 322:         return 0;
  5630  002BE0  0E00               	movlw	0
  5631  002BE2                     l998:
  5632  002BE2  0012               	return		;funcret
  5633  002BE4                     __end_of_ValidateCmd:
  5634                           	opt callstack 0
  5635                           
  5636 ;; *************** function _TogDebug *****************
  5637 ;; Defined at:
  5638 ;;		line 192 in file "RS232.c"
  5639 ;; Parameters:    Size  Location     Type
  5640 ;;		None
  5641 ;; Auto vars:     Size  Location     Type
  5642 ;;		None
  5643 ;; Return value:  Size  Location     Type
  5644 ;;                  1    wreg      void 
  5645 ;; Registers used:
  5646 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5647 ;; Tracked objects:
  5648 ;;		On entry : 0/0
  5649 ;;		On exit  : 0/0
  5650 ;;		Unchanged: 0/0
  5651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5656 ;;Total ram usage:        0 bytes
  5657 ;; Hardware stack levels used:    1
  5658 ;; Hardware stack levels required when called:   13
  5659 ;; This function calls:
  5660 ;;		_printf
  5661 ;; This function is called by:
  5662 ;;		_ValidateCmd
  5663 ;; This function uses a non-reentrant model
  5664 ;;
  5665                           
  5666                           	psect	text2
  5667  004B14                     __ptext2:
  5668                           	opt callstack 0
  5669  004B14                     _TogDebug:
  5670                           	opt callstack 16
  5671  004B14                     
  5672                           ;RS232.c: 194:     if(Debug==0){
  5673  004B14  0100               	movlb	0	; () banked
  5674  004B16  51DF               	movf	_Debug& (0+255),w,b
  5675  004B18  A4D8               	btfss	status,2,c
  5676  004B1A  EF91  F025         	goto	u7681
  5677  004B1E  EF93  F025         	goto	u7680
  5678  004B22                     u7681:
  5679  004B22  EF9D  F025         	goto	l7609
  5680  004B26                     u7680:
  5681  004B26                     
  5682                           ; BSR set to: 0
  5683                           ;RS232.c: 195:         Debug =1;
  5684  004B26  0E01               	movlw	1
  5685  004B28  6FDF               	movwf	_Debug& (0+255),b
  5686  004B2A                     
  5687                           ; BSR set to: 0
  5688                           ;RS232.c: 196:         printf("Debug Enabled\r\n");
  5689  004B2A  0E5A               	movlw	low STR_114
  5690  004B2C  6F7D               	movwf	printf@fmt& (0+255),b
  5691  004B2E  0EFF               	movlw	high STR_114
  5692  004B30  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5693  004B32  EC3D  F026         	call	_printf	;wreg free
  5694                           
  5695                           ;RS232.c: 197:     }else{
  5696  004B36  EFA5  F025         	goto	l969
  5697  004B3A                     l7609:
  5698                           
  5699                           ; BSR set to: 0
  5700                           ;RS232.c: 198:         Debug =0;
  5701  004B3A  0E00               	movlw	0
  5702  004B3C  6FDF               	movwf	_Debug& (0+255),b
  5703  004B3E                     
  5704                           ; BSR set to: 0
  5705                           ;RS232.c: 199:         printf("Debug Disabled\r\n");
  5706  004B3E  0E49               	movlw	low STR_115
  5707  004B40  6F7D               	movwf	printf@fmt& (0+255),b
  5708  004B42  0EFF               	movlw	high STR_115
  5709  004B44  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5710  004B46  EC3D  F026         	call	_printf	;wreg free
  5711  004B4A                     l969:
  5712  004B4A  0012               	return		;funcret
  5713  004B4C                     __end_of_TogDebug:
  5714                           	opt callstack 0
  5715                           
  5716 ;; *************** function _SaveCardDat *****************
  5717 ;; Defined at:
  5718 ;;		line 217 in file "RS232.c"
  5719 ;; Parameters:    Size  Location     Type
  5720 ;;  Name            2   51[BANK0 ] PTR unsigned char 
  5721 ;;		 -> ValidateCmd@ConfName_1565(20), ValidateCmd@ConfName_1561(20), ValidateCmd@ConfName(20), 
  5722 ;;  MBAddress       2   53[BANK0 ] unsigned int 
  5723 ;;  dataeeAddr      2   55[BANK0 ] unsigned short 
  5724 ;;  NumBytes        2   57[BANK0 ] int 
  5725 ;; Auto vars:     Size  Location     Type
  5726 ;;  i               2   65[BANK0 ] int 
  5727 ;;  dataeeAddrWr    2   63[BANK0 ] unsigned short 
  5728 ;;  Conf            1   67[BANK0 ] unsigned char 
  5729 ;;  readData        1    0        unsigned char 
  5730 ;; Return value:  Size  Location     Type
  5731 ;;                  1    wreg      void 
  5732 ;; Registers used:
  5733 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5734 ;; Tracked objects:
  5735 ;;		On entry : 0/0
  5736 ;;		On exit  : 0/0
  5737 ;;		Unchanged: 0/0
  5738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5739 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5740 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5741 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5742 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5743 ;;Total ram usage:       17 bytes
  5744 ;; Hardware stack levels used:    1
  5745 ;; Hardware stack levels required when called:   14
  5746 ;; This function calls:
  5747 ;;		_ClearEEAddRange
  5748 ;;		_DATAEE_WriteByte
  5749 ;;		_EUSART2_Read
  5750 ;;		_EUSART2_is_rx_ready
  5751 ;;		_ReadRX232
  5752 ;;		_printf
  5753 ;;		_strcpy
  5754 ;;		_strlen
  5755 ;; This function is called by:
  5756 ;;		_ValidateCmd
  5757 ;; This function uses a non-reentrant model
  5758 ;;
  5759                           
  5760                           	psect	text3
  5761  002878                     __ptext3:
  5762                           	opt callstack 0
  5763  002878                     _SaveCardDat:
  5764                           	opt callstack 15
  5765  002878                     
  5766                           ;RS232.c: 220:     unsigned char Conf, readData;;RS232.c: 221:     uint16_t dataeeAddrWr
      +                          k = dataeeAddr;
  5767  002878  C097  F09F         	movff	SaveCardDat@dataeeAddr,SaveCardDat@dataeeAddrWrk
  5768  00287C  C098  F0A0         	movff	SaveCardDat@dataeeAddr+1,SaveCardDat@dataeeAddrWrk+1
  5769  002880                     
  5770                           ;RS232.c: 223:     printf("\r\nEnter card %s (max %i characters): ", Name, NumBytes);
  5771  002880  0EDB               	movlw	low STR_117
  5772  002882  0100               	movlb	0	; () banked
  5773  002884  6F7D               	movwf	printf@fmt& (0+255),b
  5774  002886  0EF9               	movlw	high STR_117
  5775  002888  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5776  00288A  C093  F07F         	movff	SaveCardDat@Name,?_printf+2
  5777  00288E  C094  F080         	movff	SaveCardDat@Name+1,?_printf+3
  5778  002892  C099  F081         	movff	SaveCardDat@NumBytes,?_printf+4
  5779  002896  C09A  F082         	movff	SaveCardDat@NumBytes+1,?_printf+5
  5780  00289A  EC3D  F026         	call	_printf	;wreg free
  5781  00289E                     
  5782                           ;RS232.c: 225:     strcpy(Command, "");
  5783  00289E  0EED               	movlw	low _Command
  5784  0028A0  6E09               	movwf	strcpy@dest^0,c
  5785  0028A2  0E01               	movlw	high _Command
  5786  0028A4  6E0A               	movwf	(strcpy@dest+1)^0,c
  5787  0028A6  0E53               	movlw	low (STR_103+68)
  5788  0028A8  6E0B               	movwf	strcpy@src^0,c
  5789  0028AA  0EF5               	movlw	high (STR_103+68)
  5790  0028AC  6E0C               	movwf	(strcpy@src+1)^0,c
  5791  0028AE  EC5B  F022         	call	_strcpy	;wreg free
  5792  0028B2                     l7621:
  5793  0028B2  C099  F08F         	movff	SaveCardDat@NumBytes,ReadRX232@NumChars
  5794  0028B6  C09A  F090         	movff	SaveCardDat@NumBytes+1,ReadRX232@NumChars+1
  5795  0028BA  EC6E  F01A         	call	_ReadRX232	;wreg free
  5796  0028BE  0100               	movlb	0	; () banked
  5797  0028C0  518F               	movf	?_ReadRX232& (0+255),w,b
  5798  0028C2  1190               	iorwf	(?_ReadRX232+1)& (0+255),w,b
  5799  0028C4  B4D8               	btfsc	status,2,c
  5800  0028C6  EF67  F014         	goto	u7691
  5801  0028CA  EF69  F014         	goto	u7690
  5802  0028CE                     u7691:
  5803  0028CE  EF59  F014         	goto	l7621
  5804  0028D2                     u7690:
  5805  0028D2                     
  5806                           ; BSR set to: 0
  5807                           ;RS232.c: 228:     printf("\r\nEntered: %s \r\n Confirm  Y|N?: ", Command);
  5808  0028D2  0EFF               	movlw	low STR_119
  5809  0028D4  6F7D               	movwf	printf@fmt& (0+255),b
  5810  0028D6  0EFB               	movlw	high STR_119
  5811  0028D8  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5812  0028DA  0EED               	movlw	low _Command
  5813  0028DC  6F7F               	movwf	(?_printf+2)& (0+255),b
  5814  0028DE  0E01               	movlw	high _Command
  5815  0028E0  6F80               	movwf	(?_printf+3)& (0+255),b
  5816  0028E2  EC3D  F026         	call	_printf	;wreg free
  5817  0028E6                     l7625:
  5818  0028E6  EC96  F026         	call	_EUSART2_is_rx_ready	;wreg free
  5819  0028EA  0900               	iorlw	0
  5820  0028EC  B4D8               	btfsc	status,2,c
  5821  0028EE  EF7B  F014         	goto	u7701
  5822  0028F2  EF7D  F014         	goto	u7700
  5823  0028F6                     u7701:
  5824  0028F6  EF73  F014         	goto	l7625
  5825  0028FA                     u7700:
  5826  0028FA                     
  5827                           ;RS232.c: 233:     Conf = EUSART2_Read();
  5828  0028FA  EC45  F023         	call	_EUSART2_Read	;wreg free
  5829  0028FE  0100               	movlb	0	; () banked
  5830  002900  6FA3               	movwf	SaveCardDat@Conf& (0+255),b
  5831  002902                     
  5832                           ; BSR set to: 0
  5833                           ;RS232.c: 236:     if(Conf == 0x79 || Conf == 0x59){
  5834  002902  0E79               	movlw	121
  5835  002904  19A3               	xorwf	SaveCardDat@Conf& (0+255),w,b
  5836  002906  B4D8               	btfsc	status,2,c
  5837  002908  EF88  F014         	goto	u7711
  5838  00290C  EF8A  F014         	goto	u7710
  5839  002910                     u7711:
  5840  002910  EF93  F014         	goto	l986
  5841  002914                     u7710:
  5842  002914                     
  5843                           ; BSR set to: 0
  5844  002914  0E59               	movlw	89
  5845  002916  19A3               	xorwf	SaveCardDat@Conf& (0+255),w,b
  5846  002918  A4D8               	btfss	status,2,c
  5847  00291A  EF91  F014         	goto	u7721
  5848  00291E  EF93  F014         	goto	u7720
  5849  002922                     u7721:
  5850  002922  EF0B  F015         	goto	l7657
  5851  002926                     u7720:
  5852  002926                     l986:
  5853  002926                     
  5854                           ; BSR set to: 0
  5855                           ;RS232.c: 238:         printf("Y\r\nSaving %s\r\n", Name);
  5856  002926  0E8A               	movlw	low STR_120
  5857  002928  6F7D               	movwf	printf@fmt& (0+255),b
  5858  00292A  0EFF               	movlw	high STR_120
  5859  00292C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5860  00292E  C093  F07F         	movff	SaveCardDat@Name,?_printf+2
  5861  002932  C094  F080         	movff	SaveCardDat@Name+1,?_printf+3
  5862  002936  EC3D  F026         	call	_printf	;wreg free
  5863  00293A                     
  5864                           ;RS232.c: 239:         printf("Num Chars: %i \r\n", strlen(Command));
  5865  00293A  0EED               	movlw	low _Command
  5866  00293C  6E05               	movwf	strlen@s^0,c
  5867  00293E  0E01               	movlw	high _Command
  5868  002940  6E06               	movwf	(strlen@s+1)^0,c
  5869  002942  ECEE  F023         	call	_strlen	;wreg free
  5870  002946  C005  F09D         	movff	?_strlen,_SaveCardDat$2869
  5871  00294A  C006  F09E         	movff	?_strlen+1,_SaveCardDat$2869+1
  5872  00294E                     
  5873                           ;RS232.c: 239:         printf("Num Chars: %i \r\n", strlen(Command));
  5874  00294E  0E38               	movlw	low STR_121
  5875  002950  0100               	movlb	0	; () banked
  5876  002952  6F7D               	movwf	printf@fmt& (0+255),b
  5877  002954  0EFF               	movlw	high STR_121
  5878  002956  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5879  002958  C09D  F07F         	movff	_SaveCardDat$2869,?_printf+2
  5880  00295C  C09E  F080         	movff	_SaveCardDat$2869+1,?_printf+3
  5881  002960  EC3D  F026         	call	_printf	;wreg free
  5882  002964                     
  5883                           ;RS232.c: 243:         ClearEEAddRange(dataeeAddr,NumBytes);
  5884  002964  C097  F08F         	movff	SaveCardDat@dataeeAddr,ClearEEAddRange@StartAdd
  5885  002968  C098  F090         	movff	SaveCardDat@dataeeAddr+1,ClearEEAddRange@StartAdd+1
  5886  00296C  C099  F091         	movff	SaveCardDat@NumBytes,ClearEEAddRange@NumBytes
  5887  002970  C09A  F092         	movff	SaveCardDat@NumBytes+1,ClearEEAddRange@NumBytes+1
  5888  002974  EC17  F023         	call	_ClearEEAddRange	;wreg free
  5889  002978                     
  5890                           ;RS232.c: 246:         for (i = 0; i < strlen(Command); i++){
  5891  002978  0E00               	movlw	0
  5892  00297A  0100               	movlb	0	; () banked
  5893  00297C  6FA2               	movwf	(SaveCardDat@i+1)& (0+255),b
  5894  00297E  0E00               	movlw	0
  5895  002980  6FA1               	movwf	SaveCardDat@i& (0+255),b
  5896  002982  EFE3  F014         	goto	l7651
  5897  002986                     l7643:
  5898                           
  5899                           ; BSR set to: 0
  5900                           ;RS232.c: 247:             DATAEE_WriteByte(dataeeAddrWrk, Command[i]);
  5901  002986  C09F  F005         	movff	SaveCardDat@dataeeAddrWrk,DATAEE_WriteByte@bAdd
  5902  00298A  C0A0  F006         	movff	SaveCardDat@dataeeAddrWrk+1,DATAEE_WriteByte@bAdd+1
  5903  00298E  0EED               	movlw	low _Command
  5904  002990  25A1               	addwf	SaveCardDat@i& (0+255),w,b
  5905  002992  6ED9               	movwf	fsr2l,c
  5906  002994  0E01               	movlw	high _Command
  5907  002996  21A2               	addwfc	(SaveCardDat@i+1)& (0+255),w,b
  5908  002998  6EDA               	movwf	fsr2h,c
  5909  00299A  50DF               	movf	indf2,w,c
  5910  00299C  6E07               	movwf	DATAEE_WriteByte@bData^0,c
  5911  00299E  EC85  F024         	call	_DATAEE_WriteByte	;wreg free
  5912  0029A2                     
  5913                           ;RS232.c: 248:             dataeeAddrWrk++;
  5914  0029A2  0100               	movlb	0	; () banked
  5915  0029A4  4B9F               	infsnz	SaveCardDat@dataeeAddrWrk& (0+255),f,b
  5916  0029A6  2BA0               	incf	(SaveCardDat@dataeeAddrWrk+1)& (0+255),f,b
  5917  0029A8                     
  5918                           ; BSR set to: 0
  5919                           ;RS232.c: 249:             _delay((unsigned long)((50)*(32000000/4000.0)));
  5920  0029A8  0E03               	movlw	3
  5921  0029AA  0100               	movlb	0	; () banked
  5922  0029AC  6F9C               	movwf	(??_SaveCardDat+1)& (0+255),b
  5923  0029AE  0E08               	movlw	8
  5924  0029B0  6F9B               	movwf	??_SaveCardDat& (0+255),b
  5925  0029B2  0E77               	movlw	119
  5926  0029B4                     u8347:
  5927  0029B4  2EE8               	decfsz	wreg,f,c
  5928  0029B6  D7FE               	bra	u8347
  5929  0029B8  2F9B               	decfsz	??_SaveCardDat& (0+255),f,b
  5930  0029BA  D7FC               	bra	u8347
  5931  0029BC  2F9C               	decfsz	(??_SaveCardDat+1)& (0+255),f,b
  5932  0029BE  D7FA               	bra	u8347
  5933  0029C0                     
  5934                           ;RS232.c: 250:         }
  5935  0029C0  0100               	movlb	0	; () banked
  5936  0029C2  4BA1               	infsnz	SaveCardDat@i& (0+255),f,b
  5937  0029C4  2BA2               	incf	(SaveCardDat@i+1)& (0+255),f,b
  5938  0029C6                     l7651:
  5939                           
  5940                           ; BSR set to: 0
  5941  0029C6  0EED               	movlw	low _Command
  5942  0029C8  6E05               	movwf	strlen@s^0,c
  5943  0029CA  0E01               	movlw	high _Command
  5944  0029CC  6E06               	movwf	(strlen@s+1)^0,c
  5945  0029CE  ECEE  F023         	call	_strlen	;wreg free
  5946  0029D2  5005               	movf	?_strlen^0,w,c
  5947  0029D4  0100               	movlb	0	; () banked
  5948  0029D6  5DA1               	subwf	SaveCardDat@i& (0+255),w,b
  5949  0029D8  5006               	movf	(?_strlen+1)^0,w,c
  5950  0029DA  59A2               	subwfb	(SaveCardDat@i+1)& (0+255),w,b
  5951  0029DC  A0D8               	btfss	status,0,c
  5952  0029DE  EFF3  F014         	goto	u7731
  5953  0029E2  EFF5  F014         	goto	u7730
  5954  0029E6                     u7731:
  5955  0029E6  EFC3  F014         	goto	l7643
  5956  0029EA                     u7730:
  5957  0029EA                     
  5958                           ; BSR set to: 0
  5959                           ;RS232.c: 252:         printf("%s Saved. \r\n",Name);
  5960  0029EA  0EA8               	movlw	low STR_122
  5961  0029EC  6F7D               	movwf	printf@fmt& (0+255),b
  5962  0029EE  0EFF               	movlw	high STR_122
  5963  0029F0  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5964  0029F2  C093  F07F         	movff	SaveCardDat@Name,?_printf+2
  5965  0029F6  C094  F080         	movff	SaveCardDat@Name+1,?_printf+3
  5966  0029FA  EC3D  F026         	call	_printf	;wreg free
  5967  0029FE                     
  5968                           ;RS232.c: 267:         strcpy(Command, "");
  5969  0029FE  0EED               	movlw	low _Command
  5970  002A00  6E09               	movwf	strcpy@dest^0,c
  5971  002A02  0E01               	movlw	high _Command
  5972  002A04  6E0A               	movwf	(strcpy@dest+1)^0,c
  5973  002A06  0E53               	movlw	low (STR_103+68)
  5974  002A08  6E0B               	movwf	strcpy@src^0,c
  5975  002A0A  0EF5               	movlw	high (STR_103+68)
  5976  002A0C  6E0C               	movwf	(strcpy@src+1)^0,c
  5977  002A0E  EC5B  F022         	call	_strcpy	;wreg free
  5978                           
  5979                           ;RS232.c: 269:     }else if(Conf == 0x4e || Conf == 0x6e){
  5980  002A12  EF23  F015         	goto	l994
  5981  002A16                     l7657:
  5982                           
  5983                           ; BSR set to: 0
  5984  002A16  0E4E               	movlw	78
  5985  002A18  19A3               	xorwf	SaveCardDat@Conf& (0+255),w,b
  5986  002A1A  B4D8               	btfsc	status,2,c
  5987  002A1C  EF12  F015         	goto	u7741
  5988  002A20  EF14  F015         	goto	u7740
  5989  002A24                     u7741:
  5990  002A24  EF1D  F015         	goto	l7661
  5991  002A28                     u7740:
  5992  002A28                     
  5993                           ; BSR set to: 0
  5994  002A28  0E6E               	movlw	110
  5995  002A2A  19A3               	xorwf	SaveCardDat@Conf& (0+255),w,b
  5996  002A2C  A4D8               	btfss	status,2,c
  5997  002A2E  EF1B  F015         	goto	u7751
  5998  002A32  EF1D  F015         	goto	u7750
  5999  002A36                     u7751:
  6000  002A36  EF23  F015         	goto	l994
  6001  002A3A                     u7750:
  6002  002A3A                     l7661:
  6003                           
  6004                           ; BSR set to: 0
  6005                           ;RS232.c: 270:         printf("Not saved\r\n");
  6006  002A3A  0EB5               	movlw	low STR_124
  6007  002A3C  6F7D               	movwf	printf@fmt& (0+255),b
  6008  002A3E  0EFF               	movlw	high STR_124
  6009  002A40  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6010  002A42  EC3D  F026         	call	_printf	;wreg free
  6011  002A46                     l994:
  6012  002A46  0012               	return		;funcret
  6013  002A48                     __end_of_SaveCardDat:
  6014                           	opt callstack 0
  6015                           
  6016 ;; *************** function _ReadRX232 *****************
  6017 ;; Defined at:
  6018 ;;		line 137 in file "RS232.c"
  6019 ;; Parameters:    Size  Location     Type
  6020 ;;  NumChars        2   47[BANK0 ] int 
  6021 ;; Auto vars:     Size  Location     Type
  6022 ;;  temp            2   84[COMRAM] unsigned char [2]
  6023 ;; Return value:  Size  Location     Type
  6024 ;;                  2   47[BANK0 ] int 
  6025 ;; Registers used:
  6026 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6027 ;; Tracked objects:
  6028 ;;		On entry : 0/0
  6029 ;;		On exit  : 0/0
  6030 ;;		Unchanged: 0/0
  6031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6032 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6033 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6035 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6036 ;;Total ram usage:        4 bytes
  6037 ;; Hardware stack levels used:    1
  6038 ;; Hardware stack levels required when called:   13
  6039 ;; This function calls:
  6040 ;;		_EUSART2_Read
  6041 ;;		_EUSART2_Write
  6042 ;;		_EUSART2_is_rx_ready
  6043 ;;		_memmove
  6044 ;;		_printf
  6045 ;;		_strcat
  6046 ;;		_strlen
  6047 ;; This function is called by:
  6048 ;;		_main
  6049 ;;		_SaveCardDat
  6050 ;; This function uses a non-reentrant model
  6051 ;;
  6052                           
  6053                           	psect	text4
  6054  0034DC                     __ptext4:
  6055                           	opt callstack 0
  6056  0034DC                     _ReadRX232:
  6057                           	opt callstack 15
  6058  0034DC                     
  6059                           ;RS232.c: 137: int ReadRX232(int NumChars);RS232.c: 138: {;RS232.c: 143:     char temp[2
      +                          ] = {'Z','\0'};
  6060  0034DC  C0F4  F055         	movff	ReadRX232@F10772,ReadRX232@temp
  6061  0034E0  C0F5  F056         	movff	ReadRX232@F10772+1,ReadRX232@temp+1
  6062  0034E4                     
  6063                           ;RS232.c: 146:     if(EUSART2_is_rx_ready())
  6064  0034E4  EC96  F026         	call	_EUSART2_is_rx_ready	;wreg free
  6065  0034E8  0900               	iorlw	0
  6066  0034EA  B4D8               	btfsc	status,2,c
  6067  0034EC  EF7A  F01A         	goto	u7221
  6068  0034F0  EF7C  F01A         	goto	u7220
  6069  0034F4                     u7221:
  6070  0034F4  EFFA  F01A         	goto	l7197
  6071  0034F8                     u7220:
  6072  0034F8                     l7169:
  6073                           
  6074                           ;RS232.c: 152:              if(EUSART2_is_rx_ready())
  6075  0034F8  EC96  F026         	call	_EUSART2_is_rx_ready	;wreg free
  6076  0034FC  0900               	iorlw	0
  6077  0034FE  B4D8               	btfsc	status,2,c
  6078  003500  EF84  F01A         	goto	u7231
  6079  003504  EF86  F01A         	goto	u7230
  6080  003508                     u7231:
  6081  003508  EFD6  F01A         	goto	l7189
  6082  00350C                     u7230:
  6083  00350C                     
  6084                           ;RS232.c: 153:              {;RS232.c: 155:                 temp[0]=EUSART2_Read();
  6085  00350C  EC45  F023         	call	_EUSART2_Read	;wreg free
  6086  003510  6E55               	movwf	ReadRX232@temp^0,c
  6087                           
  6088                           ;RS232.c: 158:                 EUSART2_Write(temp[0]);
  6089  003512  5055               	movf	ReadRX232@temp^0,w,c
  6090  003514  ECB9  F022         	call	_EUSART2_Write
  6091  003518                     
  6092                           ;RS232.c: 160:                 if(temp[0]!='\r'){
  6093  003518  0E0D               	movlw	13
  6094  00351A  1855               	xorwf	ReadRX232@temp^0,w,c
  6095  00351C  B4D8               	btfsc	status,2,c
  6096  00351E  EF93  F01A         	goto	u7241
  6097  003522  EF95  F01A         	goto	u7240
  6098  003526                     u7241:
  6099  003526  EF9F  F01A         	goto	l7177
  6100  00352A                     u7240:
  6101  00352A                     
  6102                           ;RS232.c: 161:                     strcat(Command, temp);
  6103  00352A  0EED               	movlw	low _Command
  6104  00352C  6E13               	movwf	strcat@dest^0,c
  6105  00352E  0E01               	movlw	high _Command
  6106  003530  6E14               	movwf	(strcat@dest+1)^0,c
  6107  003532  0E55               	movlw	low ReadRX232@temp
  6108  003534  6E15               	movwf	strcat@src^0,c
  6109  003536  0E00               	movlw	high ReadRX232@temp
  6110  003538  6E16               	movwf	(strcat@src+1)^0,c
  6111  00353A  EC51  F026         	call	_strcat	;wreg free
  6112  00353E                     l7177:
  6113                           
  6114                           ;RS232.c: 164:                 if(strlen(Command)>NumChars)
  6115  00353E  0EED               	movlw	low _Command
  6116  003540  6E05               	movwf	strlen@s^0,c
  6117  003542  0E01               	movlw	high _Command
  6118  003544  6E06               	movwf	(strlen@s+1)^0,c
  6119  003546  ECEE  F023         	call	_strlen	;wreg free
  6120  00354A  5005               	movf	?_strlen^0,w,c
  6121  00354C  0100               	movlb	0	; () banked
  6122  00354E  5D8F               	subwf	ReadRX232@NumChars& (0+255),w,b
  6123  003550  5006               	movf	(?_strlen+1)^0,w,c
  6124  003552  5990               	subwfb	(ReadRX232@NumChars+1)& (0+255),w,b
  6125  003554  B0D8               	btfsc	status,0,c
  6126  003556  EFAF  F01A         	goto	u7251
  6127  00355A  EFB1  F01A         	goto	u7250
  6128  00355E                     u7251:
  6129  00355E  EFC5  F01A         	goto	l7181
  6130  003562                     u7250:
  6131  003562                     
  6132                           ; BSR set to: 0
  6133                           ;RS232.c: 165:                 {;RS232.c: 167:                     memmove(Command, Comm
      +                          and+1, strlen(Command));
  6134  003562  0EED               	movlw	low _Command
  6135  003564  6E09               	movwf	memmove@d1^0,c
  6136  003566  0E01               	movlw	high _Command
  6137  003568  6E0A               	movwf	(memmove@d1+1)^0,c
  6138  00356A  0EEE               	movlw	low (_Command+1)
  6139  00356C  6E0B               	movwf	memmove@s1^0,c
  6140  00356E  0E01               	movlw	high (_Command+1)
  6141  003570  6E0C               	movwf	(memmove@s1+1)^0,c
  6142  003572  0EED               	movlw	low _Command
  6143  003574  6E05               	movwf	strlen@s^0,c
  6144  003576  0E01               	movlw	high _Command
  6145  003578  6E06               	movwf	(strlen@s+1)^0,c
  6146  00357A  ECEE  F023         	call	_strlen	;wreg free
  6147  00357E  C005  F00D         	movff	?_strlen,memmove@n
  6148  003582  C006  F00E         	movff	?_strlen+1,memmove@n+1
  6149  003586  EC83  F01C         	call	_memmove	;wreg free
  6150  00358A                     l7181:
  6151                           
  6152                           ;RS232.c: 171:                 if(temp[0]=='\r'){
  6153  00358A  0E0D               	movlw	13
  6154  00358C  1855               	xorwf	ReadRX232@temp^0,w,c
  6155  00358E  A4D8               	btfss	status,2,c
  6156  003590  EFCC  F01A         	goto	u7261
  6157  003594  EFCE  F01A         	goto	u7260
  6158  003598                     u7261:
  6159  003598  EFD6  F01A         	goto	l7189
  6160  00359C                     u7260:
  6161  00359C                     
  6162                           ;RS232.c: 173:                     temp[0]='z';
  6163  00359C  0E7A               	movlw	122
  6164  00359E  6E55               	movwf	ReadRX232@temp^0,c
  6165  0035A0                     
  6166                           ;RS232.c: 174:                     return NumChars;
  6167  0035A0  C08F  F08F         	movff	ReadRX232@NumChars,?_ReadRX232
  6168  0035A4  C090  F090         	movff	ReadRX232@NumChars+1,?_ReadRX232+1
  6169  0035A8  EFFF  F01A         	goto	l963
  6170  0035AC                     l7189:
  6171                           
  6172                           ;RS232.c: 177:         }while( temp[0] !='\r' );
  6173  0035AC  0E0D               	movlw	13
  6174  0035AE  1855               	xorwf	ReadRX232@temp^0,w,c
  6175  0035B0  A4D8               	btfss	status,2,c
  6176  0035B2  EFDD  F01A         	goto	u7271
  6177  0035B6  EFDF  F01A         	goto	u7270
  6178  0035BA                     u7271:
  6179  0035BA  EF7C  F01A         	goto	l7169
  6180  0035BE                     u7270:
  6181  0035BE                     
  6182                           ;RS232.c: 179:         Command[strlen(Command)-1] = '\0';
  6183  0035BE  0EED               	movlw	low _Command
  6184  0035C0  6E05               	movwf	strlen@s^0,c
  6185  0035C2  0E01               	movlw	high _Command
  6186  0035C4  6E06               	movwf	(strlen@s+1)^0,c
  6187  0035C6  ECEE  F023         	call	_strlen	;wreg free
  6188  0035CA  0EEC               	movlw	low (_Command+65535)
  6189  0035CC  2405               	addwf	?_strlen^0,w,c
  6190  0035CE  6ED9               	movwf	fsr2l,c
  6191  0035D0  0E01               	movlw	high (_Command+65535)
  6192  0035D2  2006               	addwfc	(?_strlen+1)^0,w,c
  6193  0035D4  6EDA               	movwf	fsr2h,c
  6194  0035D6  0E00               	movlw	0
  6195  0035D8  6EDF               	movwf	indf2,c
  6196  0035DA                     
  6197                           ;RS232.c: 181:         printf("\r\n\n");
  6198  0035DA  0E50               	movlw	low (STR_103+65)
  6199  0035DC  0100               	movlb	0	; () banked
  6200  0035DE  6F7D               	movwf	printf@fmt& (0+255),b
  6201  0035E0  0EF5               	movlw	high (STR_103+65)
  6202  0035E2  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6203  0035E4  EC3D  F026         	call	_printf	;wreg free
  6204  0035E8                     
  6205                           ;RS232.c: 183:         strlen(Command);
  6206  0035E8  0EED               	movlw	low _Command
  6207  0035EA  6E05               	movwf	strlen@s^0,c
  6208  0035EC  0E01               	movlw	high _Command
  6209  0035EE  6E06               	movwf	(strlen@s+1)^0,c
  6210  0035F0  ECEE  F023         	call	_strlen	;wreg free
  6211  0035F4                     l7197:
  6212                           
  6213                           ;RS232.c: 186:     return 0;
  6214  0035F4  0E00               	movlw	0
  6215  0035F6  0100               	movlb	0	; () banked
  6216  0035F8  6F90               	movwf	(?_ReadRX232+1)& (0+255),b
  6217  0035FA  0E00               	movlw	0
  6218  0035FC  6F8F               	movwf	?_ReadRX232& (0+255),b
  6219  0035FE                     l963:
  6220  0035FE  0012               	return		;funcret
  6221  003600                     __end_of_ReadRX232:
  6222                           	opt callstack 0
  6223                           
  6224 ;; *************** function _strcat *****************
  6225 ;; Defined at:
  6226 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcat.c"
  6227 ;; Parameters:    Size  Location     Type
  6228 ;;  dest            2   18[COMRAM] PTR unsigned char 
  6229 ;;		 -> Command(16), 
  6230 ;;  src             2   20[COMRAM] PTR const unsigned char 
  6231 ;;		 -> ReadRX232@temp(2), 
  6232 ;; Auto vars:     Size  Location     Type
  6233 ;;		None
  6234 ;; Return value:  Size  Location     Type
  6235 ;;                  2   18[COMRAM] PTR unsigned char 
  6236 ;; Registers used:
  6237 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6238 ;; Tracked objects:
  6239 ;;		On entry : 0/0
  6240 ;;		On exit  : 0/0
  6241 ;;		Unchanged: 0/0
  6242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6243 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6246 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6247 ;;Total ram usage:        4 bytes
  6248 ;; Hardware stack levels used:    1
  6249 ;; Hardware stack levels required when called:    5
  6250 ;; This function calls:
  6251 ;;		_strcpy
  6252 ;;		_strlen
  6253 ;; This function is called by:
  6254 ;;		_ReadRX232
  6255 ;; This function uses a non-reentrant model
  6256 ;;
  6257                           
  6258                           	psect	text5
  6259  004CA2                     __ptext5:
  6260                           	opt callstack 0
  6261  004CA2                     _strcat:
  6262                           	opt callstack 22
  6263  004CA2  C013  F005         	movff	strcat@dest,strlen@s
  6264  004CA6  C014  F006         	movff	strcat@dest+1,strlen@s+1
  6265  004CAA  ECEE  F023         	call	_strlen	;wreg free
  6266  004CAE  5005               	movf	?_strlen^0,w,c
  6267  004CB0  2413               	addwf	strcat@dest^0,w,c
  6268  004CB2  6E09               	movwf	strcpy@dest^0,c
  6269  004CB4  5006               	movf	(?_strlen+1)^0,w,c
  6270  004CB6  2014               	addwfc	(strcat@dest+1)^0,w,c
  6271  004CB8  6E0A               	movwf	(strcpy@dest+1)^0,c
  6272  004CBA  C015  F00B         	movff	strcat@src,strcpy@src
  6273  004CBE  C016  F00C         	movff	strcat@src+1,strcpy@src+1
  6274  004CC2  EC5B  F022         	call	_strcpy	;wreg free
  6275  004CC6  0012               	return		;funcret
  6276  004CC8                     __end_of_strcat:
  6277                           	opt callstack 0
  6278                           
  6279 ;; *************** function _strcpy *****************
  6280 ;; Defined at:
  6281 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  6282 ;; Parameters:    Size  Location     Type
  6283 ;;  dest            2    8[COMRAM] PTR unsigned char 
  6284 ;;		 -> Command(16), 
  6285 ;;  src             2   10[COMRAM] PTR const unsigned char 
  6286 ;;		 -> STR_123(1), STR_118(1), ReadRX232@temp(2), STR_5(1), 
  6287 ;; Auto vars:     Size  Location     Type
  6288 ;;  d               2   16[COMRAM] PTR unsigned char 
  6289 ;;		 -> Command(16), 
  6290 ;;  s               2   14[COMRAM] PTR const unsigned char 
  6291 ;;		 -> STR_123(1), STR_118(1), ReadRX232@temp(2), STR_5(1), 
  6292 ;; Return value:  Size  Location     Type
  6293 ;;                  2    8[COMRAM] PTR unsigned char 
  6294 ;; Registers used:
  6295 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6296 ;; Tracked objects:
  6297 ;;		On entry : 0/0
  6298 ;;		On exit  : 0/0
  6299 ;;		Unchanged: 0/0
  6300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6301 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6302 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6303 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6304 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6305 ;;Total ram usage:       10 bytes
  6306 ;; Hardware stack levels used:    1
  6307 ;; Hardware stack levels required when called:    4
  6308 ;; This function calls:
  6309 ;;		Nothing
  6310 ;; This function is called by:
  6311 ;;		_main
  6312 ;;		_SaveCardDat
  6313 ;;		_strcat
  6314 ;; This function uses a non-reentrant model
  6315 ;;
  6316                           
  6317                           	psect	text6
  6318  0044B6                     __ptext6:
  6319                           	opt callstack 0
  6320  0044B6                     _strcpy:
  6321                           	opt callstack 26
  6322  0044B6  C00B  F00F         	movff	strcpy@src,strcpy@s
  6323  0044BA  C00C  F010         	movff	strcpy@src+1,strcpy@s+1
  6324  0044BE  C009  F011         	movff	strcpy@dest,strcpy@d
  6325  0044C2  C00A  F012         	movff	strcpy@dest+1,strcpy@d+1
  6326  0044C6                     l7005:
  6327  0044C6  500F               	movf	strcpy@s^0,w,c
  6328  0044C8  6E0D               	movwf	??_strcpy^0,c
  6329  0044CA  5010               	movf	(strcpy@s+1)^0,w,c
  6330  0044CC  6E0E               	movwf	(??_strcpy+1)^0,c
  6331  0044CE  4A0F               	infsnz	strcpy@s^0,f,c
  6332  0044D0  2A10               	incf	(strcpy@s+1)^0,f,c
  6333  0044D2  C00D  FFF6         	movff	??_strcpy,tblptrl
  6334  0044D6  C00E  FFF7         	movff	??_strcpy+1,tblptrh
  6335  0044DA  0E00               	movlw	low (__mediumconst shr (0+16))
  6336  0044DC  6EF8               	movwf	tblptru,c
  6337  0044DE  C011  FFD9         	movff	strcpy@d,fsr2l
  6338  0044E2  C012  FFDA         	movff	strcpy@d+1,fsr2h
  6339  0044E6  4A11               	infsnz	strcpy@d^0,f,c
  6340  0044E8  2A12               	incf	(strcpy@d+1)^0,f,c
  6341  0044EA  0E0E               	movlw	(high __ramtop+-1)
  6342  0044EC  64F7               	cpfsgt	tblptrh,c
  6343  0044EE  D003               	bra	u6987
  6344  0044F0  0008               	tblrd		*
  6345  0044F2  50F5               	movf	tablat,w,c
  6346  0044F4  D005               	bra	u6980
  6347  0044F6                     u6987:
  6348  0044F6  CFF6 FFE9          	movff	tblptrl,fsr0l
  6349  0044FA  CFF7 FFEA          	movff	tblptrh,fsr0h
  6350  0044FE  50EF               	movf	indf0,w,c
  6351  004500                     u6980:
  6352  004500  6EDF               	movwf	indf2,c
  6353  004502  50DF               	movf	indf2,w,c
  6354  004504  A4D8               	btfss	status,2,c
  6355  004506  EF87  F022         	goto	u6991
  6356  00450A  EF89  F022         	goto	u6990
  6357  00450E                     u6991:
  6358  00450E  EF63  F022         	goto	l7005
  6359  004512                     u6990:
  6360  004512  0012               	return		;funcret
  6361  004514                     __end_of_strcpy:
  6362                           	opt callstack 0
  6363                           
  6364 ;; *************** function _memmove *****************
  6365 ;; Defined at:
  6366 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\memmove.c"
  6367 ;; Parameters:    Size  Location     Type
  6368 ;;  d1              2    8[COMRAM] PTR void 
  6369 ;;		 -> Command(16), 
  6370 ;;  s1              2   10[COMRAM] PTR const void 
  6371 ;;		 -> Command(16), 
  6372 ;;  n               2   12[COMRAM] unsigned int 
  6373 ;; Auto vars:     Size  Location     Type
  6374 ;;  s               2   18[COMRAM] PTR const unsigned char 
  6375 ;;		 -> Command(16), 
  6376 ;;  d               2   16[COMRAM] PTR unsigned char 
  6377 ;;		 -> Command(16), 
  6378 ;; Return value:  Size  Location     Type
  6379 ;;                  2    8[COMRAM] PTR void 
  6380 ;; Registers used:
  6381 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6382 ;; Tracked objects:
  6383 ;;		On entry : 0/0
  6384 ;;		On exit  : 0/0
  6385 ;;		Unchanged: 0/0
  6386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6387 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6388 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6389 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6390 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6391 ;;Total ram usage:       12 bytes
  6392 ;; Hardware stack levels used:    1
  6393 ;; Hardware stack levels required when called:    4
  6394 ;; This function calls:
  6395 ;;		Nothing
  6396 ;; This function is called by:
  6397 ;;		_ReadRX232
  6398 ;; This function uses a non-reentrant model
  6399 ;;
  6400                           
  6401                           	psect	text7
  6402  003906                     __ptext7:
  6403                           	opt callstack 0
  6404  003906                     _memmove:
  6405                           	opt callstack 23
  6406  003906  C00B  F013         	movff	memmove@s1,memmove@s
  6407  00390A  C00C  F014         	movff	memmove@s1+1,memmove@s+1
  6408  00390E  C009  F011         	movff	memmove@d1,memmove@d
  6409  003912  C00A  F012         	movff	memmove@d1+1,memmove@d+1
  6410  003916  5011               	movf	memmove@d^0,w,c
  6411  003918  5C13               	subwf	memmove@s^0,w,c
  6412  00391A  5012               	movf	(memmove@d+1)^0,w,c
  6413  00391C  5814               	subwfb	(memmove@s+1)^0,w,c
  6414  00391E  B0D8               	btfsc	status,0,c
  6415  003920  EF94  F01C         	goto	u7171
  6416  003924  EF96  F01C         	goto	u7170
  6417  003928                     u7171:
  6418  003928  EFCD  F01C         	goto	l7135
  6419  00392C                     u7170:
  6420  00392C  500D               	movf	memmove@n^0,w,c
  6421  00392E  2413               	addwf	memmove@s^0,w,c
  6422  003930  6E0F               	movwf	??_memmove^0,c
  6423  003932  500E               	movf	(memmove@n+1)^0,w,c
  6424  003934  2014               	addwfc	(memmove@s+1)^0,w,c
  6425  003936  6E10               	movwf	(??_memmove+1)^0,c
  6426  003938  500F               	movf	??_memmove^0,w,c
  6427  00393A  5C11               	subwf	memmove@d^0,w,c
  6428  00393C  5010               	movf	(??_memmove+1)^0,w,c
  6429  00393E  5812               	subwfb	(memmove@d+1)^0,w,c
  6430  003940  B0D8               	btfsc	status,0,c
  6431  003942  EFA5  F01C         	goto	u7181
  6432  003946  EFA7  F01C         	goto	u7180
  6433  00394A                     u7181:
  6434  00394A  EFCD  F01C         	goto	l7135
  6435  00394E                     u7180:
  6436  00394E  500D               	movf	memmove@n^0,w,c
  6437  003950  2613               	addwf	memmove@s^0,f,c
  6438  003952  500E               	movf	(memmove@n+1)^0,w,c
  6439  003954  2214               	addwfc	(memmove@s+1)^0,f,c
  6440  003956  500D               	movf	memmove@n^0,w,c
  6441  003958  2611               	addwf	memmove@d^0,f,c
  6442  00395A  500E               	movf	(memmove@n+1)^0,w,c
  6443  00395C  2212               	addwfc	(memmove@d+1)^0,f,c
  6444  00395E                     l7131:
  6445  00395E  0613               	decf	memmove@s^0,f,c
  6446  003960  A0D8               	btfss	status,0,c
  6447  003962  0614               	decf	(memmove@s+1)^0,f,c
  6448  003964  C013  FFD9         	movff	memmove@s,fsr2l
  6449  003968  C014  FFDA         	movff	memmove@s+1,fsr2h
  6450  00396C  0611               	decf	memmove@d^0,f,c
  6451  00396E  A0D8               	btfss	status,0,c
  6452  003970  0612               	decf	(memmove@d+1)^0,f,c
  6453  003972  C011  FFE1         	movff	memmove@d,fsr1l
  6454  003976  C012  FFE2         	movff	memmove@d+1,fsr1h
  6455  00397A  CFDF FFE7          	movff	indf2,indf1
  6456  00397E  060D               	decf	memmove@n^0,f,c
  6457  003980  A0D8               	btfss	status,0,c
  6458  003982  060E               	decf	(memmove@n+1)^0,f,c
  6459  003984  500D               	movf	memmove@n^0,w,c
  6460  003986  100E               	iorwf	(memmove@n+1)^0,w,c
  6461  003988  A4D8               	btfss	status,2,c
  6462  00398A  EFC9  F01C         	goto	u7191
  6463  00398E  EFCB  F01C         	goto	u7190
  6464  003992                     u7191:
  6465  003992  EFAF  F01C         	goto	l7131
  6466  003996                     u7190:
  6467  003996  EFF0  F01C         	goto	l2092
  6468  00399A                     l7135:
  6469  00399A  500D               	movf	memmove@n^0,w,c
  6470  00399C  100E               	iorwf	(memmove@n+1)^0,w,c
  6471  00399E  B4D8               	btfsc	status,2,c
  6472  0039A0  EFD4  F01C         	goto	u7201
  6473  0039A4  EFD6  F01C         	goto	u7200
  6474  0039A8                     u7201:
  6475  0039A8  EFF0  F01C         	goto	l2092
  6476  0039AC                     u7200:
  6477  0039AC                     l7137:
  6478  0039AC  C013  FFD9         	movff	memmove@s,fsr2l
  6479  0039B0  C014  FFDA         	movff	memmove@s+1,fsr2h
  6480  0039B4  C011  FFE1         	movff	memmove@d,fsr1l
  6481  0039B8  C012  FFE2         	movff	memmove@d+1,fsr1h
  6482  0039BC  CFDF FFE7          	movff	indf2,indf1
  6483  0039C0  4A13               	infsnz	memmove@s^0,f,c
  6484  0039C2  2A14               	incf	(memmove@s+1)^0,f,c
  6485  0039C4  4A11               	infsnz	memmove@d^0,f,c
  6486  0039C6  2A12               	incf	(memmove@d+1)^0,f,c
  6487  0039C8  060D               	decf	memmove@n^0,f,c
  6488  0039CA  A0D8               	btfss	status,0,c
  6489  0039CC  060E               	decf	(memmove@n+1)^0,f,c
  6490  0039CE  500D               	movf	memmove@n^0,w,c
  6491  0039D0  100E               	iorwf	(memmove@n+1)^0,w,c
  6492  0039D2  A4D8               	btfss	status,2,c
  6493  0039D4  EFEE  F01C         	goto	u7211
  6494  0039D8  EFF0  F01C         	goto	u7210
  6495  0039DC                     u7211:
  6496  0039DC  EFD6  F01C         	goto	l7137
  6497  0039E0                     u7210:
  6498  0039E0                     l2092:
  6499  0039E0  0012               	return		;funcret
  6500  0039E2                     __end_of_memmove:
  6501                           	opt callstack 0
  6502                           
  6503 ;; *************** function _EUSART2_is_rx_ready *****************
  6504 ;; Defined at:
  6505 ;;		line 139 in file "mcc_generated_files/eusart2.c"
  6506 ;; Parameters:    Size  Location     Type
  6507 ;;		None
  6508 ;; Auto vars:     Size  Location     Type
  6509 ;;		None
  6510 ;; Return value:  Size  Location     Type
  6511 ;;                  1    wreg      _Bool 
  6512 ;; Registers used:
  6513 ;;		wreg, status,2
  6514 ;; Tracked objects:
  6515 ;;		On entry : 0/0
  6516 ;;		On exit  : 0/0
  6517 ;;		Unchanged: 0/0
  6518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6523 ;;Total ram usage:        0 bytes
  6524 ;; Hardware stack levels used:    1
  6525 ;; Hardware stack levels required when called:    4
  6526 ;; This function calls:
  6527 ;;		Nothing
  6528 ;; This function is called by:
  6529 ;;		_ReadRX232
  6530 ;;		_SaveCardDat
  6531 ;; This function uses a non-reentrant model
  6532 ;;
  6533                           
  6534                           	psect	text8
  6535  004D2C                     __ptext8:
  6536                           	opt callstack 0
  6537  004D2C                     _EUSART2_is_rx_ready:
  6538                           	opt callstack 23
  6539  004D2C                     
  6540                           ;mcc_generated_files/eusart2.c: 141:     return (eusart2RxCount ? 1 : 0);
  6541  004D2C  0100               	movlb	0	; () banked
  6542  004D2E  51E6               	movf	_eusart2RxCount& (0+255),w,b	;volatile
  6543  004D30  A4D8               	btfss	status,2,c
  6544  004D32  EF9D  F026         	goto	u7031
  6545  004D36  EFA0  F026         	goto	u7030
  6546  004D3A                     u7031:
  6547  004D3A  0E01               	movlw	1
  6548  004D3C  EFA1  F026         	goto	u7040
  6549  004D40                     u7030:
  6550  004D40  0E00               	movlw	0
  6551  004D42                     u7040:
  6552  004D42                     
  6553                           ; BSR set to: 0
  6554  004D42  0012               	return		;funcret
  6555  004D44                     __end_of_EUSART2_is_rx_ready:
  6556                           	opt callstack 0
  6557                           
  6558 ;; *************** function _EUSART2_Read *****************
  6559 ;; Defined at:
  6560 ;;		line 153 in file "mcc_generated_files/eusart2.c"
  6561 ;; Parameters:    Size  Location     Type
  6562 ;;		None
  6563 ;; Auto vars:     Size  Location     Type
  6564 ;;  readValue       1    4[COMRAM] unsigned char 
  6565 ;; Return value:  Size  Location     Type
  6566 ;;                  1    wreg      unsigned char 
  6567 ;; Registers used:
  6568 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6569 ;; Tracked objects:
  6570 ;;		On entry : 0/0
  6571 ;;		On exit  : 0/0
  6572 ;;		Unchanged: 0/0
  6573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6575 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6577 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6578 ;;Total ram usage:        1 bytes
  6579 ;; Hardware stack levels used:    1
  6580 ;; Hardware stack levels required when called:    4
  6581 ;; This function calls:
  6582 ;;		Nothing
  6583 ;; This function is called by:
  6584 ;;		_ReadRX232
  6585 ;;		_SaveCardDat
  6586 ;;		_getch
  6587 ;; This function uses a non-reentrant model
  6588 ;;
  6589                           
  6590                           	psect	text9
  6591  00468A                     __ptext9:
  6592                           	opt callstack 0
  6593  00468A                     _EUSART2_Read:
  6594                           	opt callstack 23
  6595  00468A                     l7057:
  6596                           
  6597                           ;mcc_generated_files/eusart2.c: 157:     while(0 == eusart2RxCount)
  6598  00468A  0100               	movlb	0	; () banked
  6599  00468C  51E6               	movf	_eusart2RxCount& (0+255),w,b	;volatile
  6600  00468E  B4D8               	btfsc	status,2,c
  6601  004690  EF4C  F023         	goto	u7051
  6602  004694  EF4E  F023         	goto	u7050
  6603  004698                     u7051:
  6604  004698  EF45  F023         	goto	l7057
  6605  00469C                     u7050:
  6606  00469C                     
  6607                           ; BSR set to: 0
  6608                           ;mcc_generated_files/eusart2.c: 161:     eusart2RxLastError = eusart2RxStatusBuffer[eusa
      +                          rt2RxTail];
  6609  00469C  0EA2               	movlw	low _eusart2RxStatusBuffer
  6610  00469E  25E7               	addwf	_eusart2RxTail& (0+255),w,b	;volatile
  6611  0046A0  6ED9               	movwf	fsr2l,c
  6612  0046A2  6ADA               	clrf	fsr2h,c
  6613  0046A4  0E02               	movlw	high _eusart2RxStatusBuffer
  6614  0046A6  22DA               	addwfc	fsr2h,f,c
  6615  0046A8  50DF               	movf	indf2,w,c
  6616  0046AA  6FE5               	movwf	_eusart2RxLastError& (0+255),b	;volatile
  6617                           
  6618                           ;mcc_generated_files/eusart2.c: 163:     readValue = eusart2RxBuffer[eusart2RxTail++];
  6619  0046AC  0E64               	movlw	low _eusart2RxBuffer
  6620  0046AE  25E7               	addwf	_eusart2RxTail& (0+255),w,b	;volatile
  6621  0046B0  6ED9               	movwf	fsr2l,c
  6622  0046B2  6ADA               	clrf	fsr2h,c
  6623  0046B4  0E03               	movlw	high _eusart2RxBuffer
  6624  0046B6  22DA               	addwfc	fsr2h,f,c
  6625  0046B8  50DF               	movf	indf2,w,c
  6626  0046BA  6E05               	movwf	EUSART2_Read@readValue^0,c
  6627  0046BC                     
  6628                           ; BSR set to: 0
  6629  0046BC  2BE7               	incf	_eusart2RxTail& (0+255),f,b	;volatile
  6630  0046BE                     
  6631                           ; BSR set to: 0
  6632                           ;mcc_generated_files/eusart2.c: 164:     if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
  6633  0046BE  0E1F               	movlw	31
  6634  0046C0  65E7               	cpfsgt	_eusart2RxTail& (0+255),b	;volatile
  6635  0046C2  EF65  F023         	goto	u7061
  6636  0046C6  EF67  F023         	goto	u7060
  6637  0046CA                     u7061:
  6638  0046CA  EF69  F023         	goto	l7067
  6639  0046CE                     u7060:
  6640  0046CE                     
  6641                           ; BSR set to: 0
  6642                           ;mcc_generated_files/eusart2.c: 165:     {;mcc_generated_files/eusart2.c: 166:         e
      +                          usart2RxTail = 0;
  6643  0046CE  0E00               	movlw	0
  6644  0046D0  6FE7               	movwf	_eusart2RxTail& (0+255),b	;volatile
  6645  0046D2                     l7067:
  6646                           
  6647                           ; BSR set to: 0
  6648                           ;mcc_generated_files/eusart2.c: 168:     PIE3bits.RC2IE = 0;
  6649  0046D2  010E               	movlb	14	; () banked
  6650  0046D4  9FC5               	bcf	197,7,b	;volatile
  6651  0046D6                     
  6652                           ; BSR set to: 14
  6653                           ;mcc_generated_files/eusart2.c: 169:     eusart2RxCount--;
  6654  0046D6  0100               	movlb	0	; () banked
  6655  0046D8  07E6               	decf	_eusart2RxCount& (0+255),f,b	;volatile
  6656  0046DA                     
  6657                           ; BSR set to: 0
  6658                           ;mcc_generated_files/eusart2.c: 170:     PIE3bits.RC2IE = 1;
  6659  0046DA  010E               	movlb	14	; () banked
  6660  0046DC  8FC5               	bsf	197,7,b	;volatile
  6661  0046DE                     
  6662                           ; BSR set to: 14
  6663                           ;mcc_generated_files/eusart2.c: 172:     return readValue;
  6664  0046DE  5005               	movf	EUSART2_Read@readValue^0,w,c
  6665  0046E0                     
  6666                           ; BSR set to: 14
  6667  0046E0  0012               	return		;funcret
  6668  0046E2                     __end_of_EUSART2_Read:
  6669                           	opt callstack 0
  6670                           
  6671 ;; *************** function _ClearEEAddRange *****************
  6672 ;; Defined at:
  6673 ;;		line 205 in file "RS232.c"
  6674 ;; Parameters:    Size  Location     Type
  6675 ;;  StartAdd        2   47[BANK0 ] unsigned int 
  6676 ;;  NumBytes        2   49[BANK0 ] unsigned int 
  6677 ;; Auto vars:     Size  Location     Type
  6678 ;;  i               2   84[COMRAM] int 
  6679 ;; Return value:  Size  Location     Type
  6680 ;;                  1    wreg      void 
  6681 ;; Registers used:
  6682 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6683 ;; Tracked objects:
  6684 ;;		On entry : 0/0
  6685 ;;		On exit  : 0/0
  6686 ;;		Unchanged: 0/0
  6687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6688 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6689 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6691 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6692 ;;Total ram usage:        6 bytes
  6693 ;; Hardware stack levels used:    1
  6694 ;; Hardware stack levels required when called:   13
  6695 ;; This function calls:
  6696 ;;		_DATAEE_WriteByte
  6697 ;;		_printf
  6698 ;; This function is called by:
  6699 ;;		_SaveCardDat
  6700 ;; This function uses a non-reentrant model
  6701 ;;
  6702                           
  6703                           	psect	text10
  6704  00462E                     __ptext10:
  6705                           	opt callstack 0
  6706  00462E                     _ClearEEAddRange:
  6707                           	opt callstack 15
  6708  00462E                     
  6709                           ;RS232.c: 208:     printf("Clearing EEPROM from Address: 0x%04x for num bytes: %i \r\n",
      +                           StartAdd, NumBytes);
  6710  00462E  0E96               	movlw	low STR_116
  6711  004630  0100               	movlb	0	; () banked
  6712  004632  6F7D               	movwf	printf@fmt& (0+255),b
  6713  004634  0EF5               	movlw	high STR_116
  6714  004636  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6715  004638  C08F  F07F         	movff	ClearEEAddRange@StartAdd,?_printf+2
  6716  00463C  C090  F080         	movff	ClearEEAddRange@StartAdd+1,?_printf+3
  6717  004640  C091  F081         	movff	ClearEEAddRange@NumBytes,?_printf+4
  6718  004644  C092  F082         	movff	ClearEEAddRange@NumBytes+1,?_printf+5
  6719  004648  EC3D  F026         	call	_printf	;wreg free
  6720  00464C                     
  6721                           ;RS232.c: 210:     for(int i = 0; i<NumBytes; i++){
  6722  00464C  0E00               	movlw	0
  6723  00464E  6E56               	movwf	(ClearEEAddRange@i+1)^0,c
  6724  004650  0E00               	movlw	0
  6725  004652  6E55               	movwf	ClearEEAddRange@i^0,c
  6726  004654  EF38  F023         	goto	l7311
  6727  004658                     l7307:
  6728                           
  6729                           ; BSR set to: 0
  6730                           ;RS232.c: 211:         DATAEE_WriteByte(StartAdd +i, 0xFF);
  6731  004658  518F               	movf	ClearEEAddRange@StartAdd& (0+255),w,b
  6732  00465A  2455               	addwf	ClearEEAddRange@i^0,w,c
  6733  00465C  6E05               	movwf	DATAEE_WriteByte@bAdd^0,c
  6734  00465E  5190               	movf	(ClearEEAddRange@StartAdd+1)& (0+255),w,b
  6735  004660  2056               	addwfc	(ClearEEAddRange@i+1)^0,w,c
  6736  004662  6E06               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
  6737  004664  0EFF               	movlw	255
  6738  004666  6E07               	movwf	DATAEE_WriteByte@bData^0,c
  6739  004668  EC85  F024         	call	_DATAEE_WriteByte	;wreg free
  6740  00466C                     
  6741                           ;RS232.c: 212:     }
  6742  00466C  4A55               	infsnz	ClearEEAddRange@i^0,f,c
  6743  00466E  2A56               	incf	(ClearEEAddRange@i+1)^0,f,c
  6744  004670                     l7311:
  6745  004670  0100               	movlb	0	; () banked
  6746  004672  5191               	movf	ClearEEAddRange@NumBytes& (0+255),w,b
  6747  004674  5C55               	subwf	ClearEEAddRange@i^0,w,c
  6748  004676  5192               	movf	(ClearEEAddRange@NumBytes+1)& (0+255),w,b
  6749  004678  5856               	subwfb	(ClearEEAddRange@i+1)^0,w,c
  6750  00467A  A0D8               	btfss	status,0,c
  6751  00467C  EF42  F023         	goto	u7421
  6752  004680  EF44  F023         	goto	u7420
  6753  004684                     u7421:
  6754  004684  EF2C  F023         	goto	l7307
  6755  004688                     u7420:
  6756  004688                     
  6757                           ; BSR set to: 0
  6758  004688  0012               	return		;funcret
  6759  00468A                     __end_of_ClearEEAddRange:
  6760                           	opt callstack 0
  6761                           
  6762 ;; *************** function _DATAEE_WriteByte *****************
  6763 ;; Defined at:
  6764 ;;		line 165 in file "mcc_generated_files/memory.c"
  6765 ;; Parameters:    Size  Location     Type
  6766 ;;  bAdd            2    4[COMRAM] unsigned short 
  6767 ;;  bData           1    6[COMRAM] unsigned char 
  6768 ;; Auto vars:     Size  Location     Type
  6769 ;;  GIEBitValue     1    7[COMRAM] unsigned char 
  6770 ;; Return value:  Size  Location     Type
  6771 ;;                  1    wreg      void 
  6772 ;; Registers used:
  6773 ;;		wreg, status,2, status,0
  6774 ;; Tracked objects:
  6775 ;;		On entry : 0/0
  6776 ;;		On exit  : 0/0
  6777 ;;		Unchanged: 0/0
  6778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6779 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6780 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6782 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6783 ;;Total ram usage:        4 bytes
  6784 ;; Hardware stack levels used:    1
  6785 ;; Hardware stack levels required when called:    4
  6786 ;; This function calls:
  6787 ;;		Nothing
  6788 ;; This function is called by:
  6789 ;;		_ClearEEAddRange
  6790 ;;		_SaveCardDat
  6791 ;; This function uses a non-reentrant model
  6792 ;;
  6793                           
  6794                           	psect	text11
  6795  00490A                     __ptext11:
  6796                           	opt callstack 0
  6797  00490A                     _DATAEE_WriteByte:
  6798                           	opt callstack 24
  6799  00490A                     
  6800                           ;mcc_generated_files/memory.c: 165: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 166: {;mcc_generated_files/memory.c: 167:  uint8_t GIEBitV
      +                          alue = INTCONbits.GIE;
  6801  00490A  0E00               	movlw	0
  6802  00490C  BEF2               	btfsc	242,7,c	;volatile
  6803  00490E  0E01               	movlw	1
  6804  004910  6E08               	movwf	DATAEE_WriteByte@GIEBitValue^0,c
  6805  004912                     
  6806                           ;mcc_generated_files/memory.c: 169:     NVMADRH = ((bAdd >> 8) & 0x03);
  6807  004912  5006               	movf	(DATAEE_WriteByte@bAdd+1)^0,w,c
  6808  004914  0B03               	andlw	3
  6809  004916  6E7F               	movwf	127,c	;volatile
  6810  004918                     
  6811                           ;mcc_generated_files/memory.c: 170:     NVMADRL = (bAdd & 0xFF);
  6812  004918  C005  FF7E         	movff	DATAEE_WriteByte@bAdd,3966	;volatile
  6813  00491C                     
  6814                           ;mcc_generated_files/memory.c: 171:     NVMDAT = bData;
  6815  00491C  C007  FF80         	movff	DATAEE_WriteByte@bData,3968	;volatile
  6816  004920                     
  6817                           ;mcc_generated_files/memory.c: 172:     NVMCON1bits.NVMREG = 0;
  6818  004920  0E3F               	movlw	-193
  6819  004922  1681               	andwf	129,f,c	;volsfr
  6820  004924                     
  6821                           ;mcc_generated_files/memory.c: 173:     NVMCON1bits.WREN = 1;
  6822  004924  8481               	bsf	129,2,c	;volsfr
  6823  004926                     
  6824                           ;mcc_generated_files/memory.c: 174:  INTCONbits.GIE = 0;
  6825  004926  9EF2               	bcf	242,7,c	;volatile
  6826  004928                     
  6827                           ;mcc_generated_files/memory.c: 175:     NVMCON2 = 0x55;
  6828  004928  0E55               	movlw	85
  6829  00492A  6E82               	movwf	130,c	;volsfr
  6830  00492C                     
  6831                           ;mcc_generated_files/memory.c: 176:     NVMCON2 = 0xAA;
  6832  00492C  0EAA               	movlw	170
  6833  00492E  6E82               	movwf	130,c	;volsfr
  6834  004930                     
  6835                           ;mcc_generated_files/memory.c: 177:     NVMCON1bits.WR = 1;
  6836  004930  8281               	bsf	129,1,c	;volsfr
  6837  004932                     l216:
  6838                           
  6839                           ;mcc_generated_files/memory.c: 179:     while (NVMCON1bits.WR)
  6840  004932  B281               	btfsc	129,1,c	;volsfr
  6841  004934  EF9E  F024         	goto	u7011
  6842  004938  EFA0  F024         	goto	u7010
  6843  00493C                     u7011:
  6844  00493C  EF99  F024         	goto	l216
  6845  004940                     u7010:
  6846  004940                     
  6847                           ;mcc_generated_files/memory.c: 183:     NVMCON1bits.WREN = 0;
  6848  004940  9481               	bcf	129,2,c	;volsfr
  6849                           
  6850                           ;mcc_generated_files/memory.c: 184:  INTCONbits.GIE = GIEBitValue;
  6851  004942  B008               	btfsc	DATAEE_WriteByte@GIEBitValue^0,0,c
  6852  004944  D002               	bra	u7025
  6853  004946  9EF2               	bcf	242,7,c	;volatile
  6854  004948  D001               	bra	u7026
  6855  00494A                     u7025:
  6856  00494A  8EF2               	bsf	242,7,c	;volatile
  6857  00494C                     u7026:
  6858  00494C  0012               	return		;funcret
  6859  00494E                     __end_of_DATAEE_WriteByte:
  6860                           	opt callstack 0
  6861                           
  6862 ;; *************** function _InitialiseString *****************
  6863 ;; Defined at:
  6864 ;;		line 59 in file "RS232.c"
  6865 ;; Parameters:    Size  Location     Type
  6866 ;;  Partial         1    wreg     _Bool 
  6867 ;; Auto vars:     Size  Location     Type
  6868 ;;  Partial         1   96[BANK0 ] _Bool 
  6869 ;;  convertedVal    2   97[BANK0 ] unsigned short 
  6870 ;;  i               2  107[BANK0 ] int 
  6871 ;;  i               2  105[BANK0 ] int 
  6872 ;;  PartNum        19   47[BANK0 ] unsigned char [19]
  6873 ;;  SerialNum      11   85[BANK0 ] unsigned char [11]
  6874 ;;  Date           11   66[BANK0 ] unsigned char [11]
  6875 ;;  Time            8   77[BANK0 ] unsigned char [8]
  6876 ;;  RevNum          2   99[BANK0 ] unsigned char [2]
  6877 ;;  j               2  103[BANK0 ] int 
  6878 ;;  readDataEven    1  102[BANK0 ] unsigned char 
  6879 ;;  readDataOdd     1  101[BANK0 ] unsigned char 
  6880 ;; Return value:  Size  Location     Type
  6881 ;;                  1    wreg      void 
  6882 ;; Registers used:
  6883 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6884 ;; Tracked objects:
  6885 ;;		On entry : 0/0
  6886 ;;		On exit  : 0/0
  6887 ;;		Unchanged: 0/0
  6888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6890 ;;      Locals:         0      62       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6891 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6892 ;;      Totals:         2      62       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6893 ;;Total ram usage:       64 bytes
  6894 ;; Hardware stack levels used:    1
  6895 ;; Hardware stack levels required when called:   13
  6896 ;; This function calls:
  6897 ;;		_ADCC_GetSingleConversion
  6898 ;;		_CardConfigIni
  6899 ;;		_printf
  6900 ;; This function is called by:
  6901 ;;		_main
  6902 ;;		_ValidateCmd
  6903 ;; This function uses a non-reentrant model
  6904 ;;
  6905                           
  6906                           	psect	text12
  6907  001356                     __ptext12:
  6908                           	opt callstack 0
  6909  001356                     _InitialiseString:
  6910                           	opt callstack 16
  6911                           
  6912                           ;incstack = 0
  6913                           ;InitialiseString@Partial stored from wreg
  6914  001356  0100               	movlb	0	; () banked
  6915  001358  6FC0               	movwf	InitialiseString@Partial& (0+255),b
  6916  00135A                     
  6917                           ;RS232.c: 61:     char readDataOdd, readDataEven;;RS232.c: 63:     char SerialNum[11] = 
      +                          { '\0' };
  6918  00135A  EE20  F0B5         	lfsr	2,InitialiseString@SerialNum
  6919  00135E  0E0A               	movlw	10
  6920  001360                     u7501:
  6921  001360  6ADE               	clrf	postinc2,c
  6922  001362  06E8               	decf	wreg,f,c
  6923  001364  E2FD               	bc	u7501
  6924  001366                     
  6925                           ;RS232.c: 65:     CardConfigIni("Serial", SerialNum,0x0300,5);
  6926  001366  0ED6               	movlw	low STR_77
  6927  001368  6E0A               	movwf	CardConfigIni@Name^0,c
  6928  00136A  0EFF               	movlw	high STR_77
  6929  00136C  6E0B               	movwf	(CardConfigIni@Name+1)^0,c
  6930  00136E  0EB5               	movlw	low InitialiseString@SerialNum
  6931  001370  6E0C               	movwf	CardConfigIni@RetNum^0,c
  6932  001372  0E00               	movlw	high InitialiseString@SerialNum
  6933  001374  6E0D               	movwf	(CardConfigIni@RetNum+1)^0,c
  6934  001376  0E03               	movlw	3
  6935  001378  6E0F               	movwf	(CardConfigIni@dataeeAddrWrk+1)^0,c
  6936  00137A  0E00               	movlw	0
  6937  00137C  6E0E               	movwf	CardConfigIni@dataeeAddrWrk^0,c
  6938  00137E  0E00               	movlw	0
  6939  001380  6E11               	movwf	(CardConfigIni@NumBytes+1)^0,c
  6940  001382  0E05               	movlw	5
  6941  001384  6E10               	movwf	CardConfigIni@NumBytes^0,c
  6942  001386  EC44  F013         	call	_CardConfigIni	;wreg free
  6943  00138A                     
  6944                           ;RS232.c: 67:     char PartNum[19] = { '\0' };
  6945  00138A  EE20  F08F         	lfsr	2,InitialiseString@PartNum
  6946  00138E  0E12               	movlw	18
  6947  001390                     u7511:
  6948  001390  6ADE               	clrf	postinc2,c
  6949  001392  06E8               	decf	wreg,f,c
  6950  001394  E2FD               	bc	u7511
  6951                           
  6952                           ;RS232.c: 68:     CardConfigIni("Part", PartNum,0x0100,8);
  6953  001396  0EEA               	movlw	low STR_79
  6954  001398  6E0A               	movwf	CardConfigIni@Name^0,c
  6955  00139A  0EFF               	movlw	high STR_79
  6956  00139C  6E0B               	movwf	(CardConfigIni@Name+1)^0,c
  6957  00139E  0E8F               	movlw	low InitialiseString@PartNum
  6958  0013A0  6E0C               	movwf	CardConfigIni@RetNum^0,c
  6959  0013A2  0E00               	movlw	high InitialiseString@PartNum
  6960  0013A4  6E0D               	movwf	(CardConfigIni@RetNum+1)^0,c
  6961  0013A6  0E01               	movlw	1
  6962  0013A8  6E0F               	movwf	(CardConfigIni@dataeeAddrWrk+1)^0,c
  6963  0013AA  0E00               	movlw	0
  6964  0013AC  6E0E               	movwf	CardConfigIni@dataeeAddrWrk^0,c
  6965  0013AE  0E00               	movlw	0
  6966  0013B0  6E11               	movwf	(CardConfigIni@NumBytes+1)^0,c
  6967  0013B2  0E08               	movlw	8
  6968  0013B4  6E10               	movwf	CardConfigIni@NumBytes^0,c
  6969  0013B6  EC44  F013         	call	_CardConfigIni	;wreg free
  6970  0013BA                     
  6971                           ;RS232.c: 70:     char RevNum[2] = { '\0' };
  6972  0013BA  0E00               	movlw	0
  6973  0013BC  0100               	movlb	0	; () banked
  6974  0013BE  6FC4               	movwf	(InitialiseString@RevNum+1)& (0+255),b
  6975  0013C0  0E00               	movlw	0
  6976  0013C2  6FC3               	movwf	InitialiseString@RevNum& (0+255),b
  6977  0013C4                     
  6978                           ; BSR set to: 0
  6979                           ;RS232.c: 71:     CardConfigIni("Rev", RevNum,0x0200,1);
  6980  0013C4  0EF4               	movlw	low STR_81
  6981  0013C6  6E0A               	movwf	CardConfigIni@Name^0,c
  6982  0013C8  0EFF               	movlw	high STR_81
  6983  0013CA  6E0B               	movwf	(CardConfigIni@Name+1)^0,c
  6984  0013CC  0EC3               	movlw	low InitialiseString@RevNum
  6985  0013CE  6E0C               	movwf	CardConfigIni@RetNum^0,c
  6986  0013D0  0E00               	movlw	high InitialiseString@RevNum
  6987  0013D2  6E0D               	movwf	(CardConfigIni@RetNum+1)^0,c
  6988  0013D4  0E02               	movlw	2
  6989  0013D6  6E0F               	movwf	(CardConfigIni@dataeeAddrWrk+1)^0,c
  6990  0013D8  0E00               	movlw	0
  6991  0013DA  6E0E               	movwf	CardConfigIni@dataeeAddrWrk^0,c
  6992  0013DC  0E00               	movlw	0
  6993  0013DE  6E11               	movwf	(CardConfigIni@NumBytes+1)^0,c
  6994  0013E0  0E01               	movlw	1
  6995  0013E2  6E10               	movwf	CardConfigIni@NumBytes^0,c
  6996  0013E4  EC44  F013         	call	_CardConfigIni	;wreg free
  6997  0013E8                     
  6998                           ;RS232.c: 75:     printf("\r\nDan and Sam's Modbus GPIO Expansion\r\n");
  6999  0013E8  0EB3               	movlw	low STR_86
  7000  0013EA  0100               	movlb	0	; () banked
  7001  0013EC  6F7D               	movwf	printf@fmt& (0+255),b
  7002  0013EE  0EF9               	movlw	high STR_86
  7003  0013F0  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7004  0013F2  EC3D  F026         	call	_printf	;wreg free
  7005  0013F6                     
  7006                           ;RS232.c: 79:     printf("Card Ser No. %s \r\n",SerialNum);
  7007  0013F6  0EFF               	movlw	low STR_87
  7008  0013F8  0100               	movlb	0	; () banked
  7009  0013FA  6F7D               	movwf	printf@fmt& (0+255),b
  7010  0013FC  0EFE               	movlw	high STR_87
  7011  0013FE  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7012  001400  0EB5               	movlw	low InitialiseString@SerialNum
  7013  001402  6F7F               	movwf	(?_printf+2)& (0+255),b
  7014  001404  0E00               	movlw	high InitialiseString@SerialNum
  7015  001406  6F80               	movwf	(?_printf+3)& (0+255),b
  7016  001408  EC3D  F026         	call	_printf	;wreg free
  7017  00140C                     
  7018                           ;RS232.c: 80:     printf("Card Part No. %s \r\n",PartNum);
  7019  00140C  0EEB               	movlw	low STR_88
  7020  00140E  0100               	movlb	0	; () banked
  7021  001410  6F7D               	movwf	printf@fmt& (0+255),b
  7022  001412  0EFE               	movlw	high STR_88
  7023  001414  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7024  001416  0E8F               	movlw	low InitialiseString@PartNum
  7025  001418  6F7F               	movwf	(?_printf+2)& (0+255),b
  7026  00141A  0E00               	movlw	high InitialiseString@PartNum
  7027  00141C  6F80               	movwf	(?_printf+3)& (0+255),b
  7028  00141E  EC3D  F026         	call	_printf	;wreg free
  7029  001422                     
  7030                           ;RS232.c: 81:     printf("Card Revision. %s \r\n",RevNum);
  7031  001422  0E82               	movlw	low STR_89
  7032  001424  0100               	movlb	0	; () banked
  7033  001426  6F7D               	movwf	printf@fmt& (0+255),b
  7034  001428  0EFE               	movlw	high STR_89
  7035  00142A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7036  00142C  0EC3               	movlw	low InitialiseString@RevNum
  7037  00142E  6F7F               	movwf	(?_printf+2)& (0+255),b
  7038  001430  0E00               	movlw	high InitialiseString@RevNum
  7039  001432  6F80               	movwf	(?_printf+3)& (0+255),b
  7040  001434  EC3D  F026         	call	_printf	;wreg free
  7041  001438                     
  7042                           ;RS232.c: 82:     printf("Card Address. 0x05 \r\n");
  7043  001438  0E56               	movlw	low STR_90
  7044  00143A  0100               	movlb	0	; () banked
  7045  00143C  6F7D               	movwf	printf@fmt& (0+255),b
  7046  00143E  0EFE               	movlw	high STR_90
  7047  001440  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7048  001442  EC3D  F026         	call	_printf	;wreg free
  7049  001446                     
  7050                           ;RS232.c: 83:     printf("Compiled on %s at %s by XC8 version %u\r\n\n",
  7051  001446  0E0D               	movlw	low STR_91
  7052  001448  0100               	movlb	0	; () banked
  7053  00144A  6F7D               	movwf	printf@fmt& (0+255),b
  7054  00144C  0EF9               	movlw	high STR_91
  7055  00144E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7056  001450  0EC1               	movlw	low STR_92
  7057  001452  6F7F               	movwf	(?_printf+2)& (0+255),b
  7058  001454  0EFF               	movlw	high STR_92
  7059  001456  6F80               	movwf	(?_printf+3)& (0+255),b
  7060  001458  0ECD               	movlw	low STR_93
  7061  00145A  6F81               	movwf	(?_printf+4)& (0+255),b
  7062  00145C  0EFF               	movlw	high STR_93
  7063  00145E  6F82               	movwf	(?_printf+5)& (0+255),b
  7064  001460  0E08               	movlw	8
  7065  001462  6F84               	movwf	(?_printf+7)& (0+255),b
  7066  001464  0E34               	movlw	52
  7067  001466  6F83               	movwf	(?_printf+6)& (0+255),b
  7068  001468  EC3D  F026         	call	_printf	;wreg free
  7069                           
  7070                           ;RS232.c: 86:     int j = 0;
  7071  00146C  0E00               	movlw	0
  7072  00146E  0100               	movlb	0	; () banked
  7073  001470  6FC8               	movwf	(InitialiseString@j+1)& (0+255),b
  7074  001472  0E00               	movlw	0
  7075  001474  6FC7               	movwf	InitialiseString@j& (0+255),b
  7076  001476                     
  7077                           ; BSR set to: 0
  7078                           ;RS232.c: 89:     char Date[11] = "Mar 25 2021";
  7079  001476  EE22  F04C         	lfsr	2,InitialiseString@F10763
  7080  00147A  EE10  F0A2         	lfsr	1,InitialiseString@Date
  7081  00147E  0E0A               	movlw	10
  7082  001480                     u7521:
  7083  001480  CFDB FFE3          	movff	plusw2,plusw1
  7084  001484  06E8               	decf	wreg,f,c
  7085  001486  E2FC               	bc	u7521
  7086  001488                     
  7087                           ; BSR set to: 0
  7088                           ;RS232.c: 90:     for(int i=0; i<12; i = i+2){
  7089  001488  0E00               	movlw	0
  7090  00148A  6FCA               	movwf	(InitialiseString@i+1)& (0+255),b
  7091  00148C  0E00               	movlw	0
  7092  00148E  6FC9               	movwf	InitialiseString@i& (0+255),b
  7093  001490                     l7467:
  7094                           
  7095                           ; BSR set to: 0
  7096                           ;RS232.c: 91:         readDataOdd = Date[i];
  7097  001490  0EA2               	movlw	low InitialiseString@Date
  7098  001492  25C9               	addwf	InitialiseString@i& (0+255),w,b
  7099  001494  6ED9               	movwf	fsr2l,c
  7100  001496  0E00               	movlw	high InitialiseString@Date
  7101  001498  21CA               	addwfc	(InitialiseString@i+1)& (0+255),w,b
  7102  00149A  6EDA               	movwf	fsr2h,c
  7103  00149C  50DF               	movf	indf2,w,c
  7104  00149E  6FC5               	movwf	InitialiseString@readDataOdd& (0+255),b
  7105                           
  7106                           ;RS232.c: 92:         readDataEven = Date[i +1];
  7107  0014A0  0E01               	movlw	1
  7108  0014A2  25C9               	addwf	InitialiseString@i& (0+255),w,b
  7109  0014A4  6E55               	movwf	??_InitialiseString^0,c
  7110  0014A6  0E00               	movlw	0
  7111  0014A8  21CA               	addwfc	(InitialiseString@i+1)& (0+255),w,b
  7112  0014AA  6E56               	movwf	(??_InitialiseString+1)^0,c
  7113  0014AC  0EA2               	movlw	low InitialiseString@Date
  7114  0014AE  2455               	addwf	??_InitialiseString^0,w,c
  7115  0014B0  6ED9               	movwf	fsr2l,c
  7116  0014B2  0E00               	movlw	high InitialiseString@Date
  7117  0014B4  2056               	addwfc	(??_InitialiseString+1)^0,w,c
  7118  0014B6  6EDA               	movwf	fsr2h,c
  7119  0014B8  50DF               	movf	indf2,w,c
  7120  0014BA  6FC6               	movwf	InitialiseString@readDataEven& (0+255),b
  7121                           
  7122                           ;RS232.c: 93:         MB304xx[j] = readDataOdd *256 + readDataEven;
  7123  0014BC  51C6               	movf	InitialiseString@readDataEven& (0+255),w,b
  7124  0014BE  C0C5  F055         	movff	InitialiseString@readDataOdd,??_InitialiseString
  7125  0014C2  6A56               	clrf	(??_InitialiseString+1)^0,c
  7126  0014C4  C055  F056         	movff	??_InitialiseString,??_InitialiseString+1
  7127  0014C8  6A55               	clrf	??_InitialiseString^0,c
  7128  0014CA  2655               	addwf	??_InitialiseString^0,f,c
  7129  0014CC  0E00               	movlw	0
  7130  0014CE  2256               	addwfc	(??_InitialiseString+1)^0,f,c
  7131  0014D0  90D8               	bcf	status,0,c
  7132  0014D2  35C7               	rlcf	InitialiseString@j& (0+255),w,b
  7133  0014D4  6ED9               	movwf	fsr2l,c
  7134  0014D6  35C8               	rlcf	(InitialiseString@j+1)& (0+255),w,b
  7135  0014D8  6EDA               	movwf	fsr2h,c
  7136  0014DA  0E72               	movlw	low _MB304xx
  7137  0014DC  26D9               	addwf	fsr2l,f,c
  7138  0014DE  0E01               	movlw	high _MB304xx
  7139  0014E0  22DA               	addwfc	fsr2h,f,c
  7140  0014E2  C055  FFDE         	movff	??_InitialiseString,postinc2
  7141  0014E6  C056  FFDD         	movff	??_InitialiseString+1,postdec2
  7142  0014EA                     
  7143                           ; BSR set to: 0
  7144                           ;RS232.c: 94:         j++;
  7145  0014EA  4BC7               	infsnz	InitialiseString@j& (0+255),f,b
  7146  0014EC  2BC8               	incf	(InitialiseString@j+1)& (0+255),f,b
  7147  0014EE                     
  7148                           ; BSR set to: 0
  7149                           ;RS232.c: 95:     }
  7150  0014EE  0E02               	movlw	2
  7151  0014F0  25C9               	addwf	InitialiseString@i& (0+255),w,b
  7152  0014F2  6FC9               	movwf	InitialiseString@i& (0+255),b
  7153  0014F4  0E00               	movlw	0
  7154  0014F6  21CA               	addwfc	(InitialiseString@i+1)& (0+255),w,b
  7155  0014F8  6FCA               	movwf	(InitialiseString@i+1)& (0+255),b
  7156  0014FA                     
  7157                           ; BSR set to: 0
  7158  0014FA  BFCA               	btfsc	(InitialiseString@i+1)& (0+255),7,b
  7159  0014FC  EF89  F00A         	goto	u7531
  7160  001500  51CA               	movf	(InitialiseString@i+1)& (0+255),w,b
  7161  001502  E109               	bnz	u7530
  7162  001504  0E0C               	movlw	12
  7163  001506  5DC9               	subwf	InitialiseString@i& (0+255),w,b
  7164  001508  A0D8               	btfss	status,0,c
  7165  00150A  EF89  F00A         	goto	u7531
  7166  00150E  EF8B  F00A         	goto	u7530
  7167  001512                     u7531:
  7168  001512  EF48  F00A         	goto	l7467
  7169  001516                     u7530:
  7170  001516                     
  7171                           ; BSR set to: 0
  7172                           ;RS232.c: 98:     j = 0;
  7173  001516  0E00               	movlw	0
  7174  001518  6FC8               	movwf	(InitialiseString@j+1)& (0+255),b
  7175  00151A  0E00               	movlw	0
  7176  00151C  6FC7               	movwf	InitialiseString@j& (0+255),b
  7177  00151E                     
  7178                           ; BSR set to: 0
  7179                           ;RS232.c: 99:     char Time[8] = "00:23:59";
  7180  00151E  EE21  F07E         	lfsr	2,InitialiseString@F10766
  7181  001522  EE10  F0AD         	lfsr	1,InitialiseString@Time
  7182  001526  0E07               	movlw	7
  7183  001528                     u7541:
  7184  001528  CFDB FFE3          	movff	plusw2,plusw1
  7185  00152C  06E8               	decf	wreg,f,c
  7186  00152E  E2FC               	bc	u7541
  7187  001530                     
  7188                           ; BSR set to: 0
  7189                           ;RS232.c: 100:     for(int i=0; i<8; i = i+2){
  7190  001530  0E00               	movlw	0
  7191  001532  6FCC               	movwf	(InitialiseString@i_1495+1)& (0+255),b
  7192  001534  0E00               	movlw	0
  7193  001536  6FCB               	movwf	InitialiseString@i_1495& (0+255),b
  7194  001538                     l7485:
  7195                           
  7196                           ; BSR set to: 0
  7197                           ;RS232.c: 101:         readDataOdd = Time[i];
  7198  001538  0EAD               	movlw	low InitialiseString@Time
  7199  00153A  25CB               	addwf	InitialiseString@i_1495& (0+255),w,b
  7200  00153C  6ED9               	movwf	fsr2l,c
  7201  00153E  0E00               	movlw	high InitialiseString@Time
  7202  001540  21CC               	addwfc	(InitialiseString@i_1495+1)& (0+255),w,b
  7203  001542  6EDA               	movwf	fsr2h,c
  7204  001544  50DF               	movf	indf2,w,c
  7205  001546  6FC5               	movwf	InitialiseString@readDataOdd& (0+255),b
  7206                           
  7207                           ;RS232.c: 102:         readDataEven = Time[i +1];
  7208  001548  0E01               	movlw	1
  7209  00154A  25CB               	addwf	InitialiseString@i_1495& (0+255),w,b
  7210  00154C  6E55               	movwf	??_InitialiseString^0,c
  7211  00154E  0E00               	movlw	0
  7212  001550  21CC               	addwfc	(InitialiseString@i_1495+1)& (0+255),w,b
  7213  001552  6E56               	movwf	(??_InitialiseString+1)^0,c
  7214  001554  0EAD               	movlw	low InitialiseString@Time
  7215  001556  2455               	addwf	??_InitialiseString^0,w,c
  7216  001558  6ED9               	movwf	fsr2l,c
  7217  00155A  0E00               	movlw	high InitialiseString@Time
  7218  00155C  2056               	addwfc	(??_InitialiseString+1)^0,w,c
  7219  00155E  6EDA               	movwf	fsr2h,c
  7220  001560  50DF               	movf	indf2,w,c
  7221  001562  6FC6               	movwf	InitialiseString@readDataEven& (0+255),b
  7222                           
  7223                           ;RS232.c: 103:         MB305xx[j] = readDataOdd *256 + readDataEven;
  7224  001564  51C6               	movf	InitialiseString@readDataEven& (0+255),w,b
  7225  001566  C0C5  F055         	movff	InitialiseString@readDataOdd,??_InitialiseString
  7226  00156A  6A56               	clrf	(??_InitialiseString+1)^0,c
  7227  00156C  C055  F056         	movff	??_InitialiseString,??_InitialiseString+1
  7228  001570  6A55               	clrf	??_InitialiseString^0,c
  7229  001572  2655               	addwf	??_InitialiseString^0,f,c
  7230  001574  0E00               	movlw	0
  7231  001576  2256               	addwfc	(??_InitialiseString+1)^0,f,c
  7232  001578  90D8               	bcf	status,0,c
  7233  00157A  35C7               	rlcf	InitialiseString@j& (0+255),w,b
  7234  00157C  6ED9               	movwf	fsr2l,c
  7235  00157E  35C8               	rlcf	(InitialiseString@j+1)& (0+255),w,b
  7236  001580  6EDA               	movwf	fsr2h,c
  7237  001582  0E3C               	movlw	low _MB305xx
  7238  001584  26D9               	addwf	fsr2l,f,c
  7239  001586  0E02               	movlw	high _MB305xx
  7240  001588  22DA               	addwfc	fsr2h,f,c
  7241  00158A  C055  FFDE         	movff	??_InitialiseString,postinc2
  7242  00158E  C056  FFDD         	movff	??_InitialiseString+1,postdec2
  7243  001592                     
  7244                           ; BSR set to: 0
  7245                           ;RS232.c: 104:         j++;
  7246  001592  4BC7               	infsnz	InitialiseString@j& (0+255),f,b
  7247  001594  2BC8               	incf	(InitialiseString@j+1)& (0+255),f,b
  7248  001596                     
  7249                           ; BSR set to: 0
  7250                           ;RS232.c: 105:     }
  7251  001596  0E02               	movlw	2
  7252  001598  25CB               	addwf	InitialiseString@i_1495& (0+255),w,b
  7253  00159A  6FCB               	movwf	InitialiseString@i_1495& (0+255),b
  7254  00159C  0E00               	movlw	0
  7255  00159E  21CC               	addwfc	(InitialiseString@i_1495+1)& (0+255),w,b
  7256  0015A0  6FCC               	movwf	(InitialiseString@i_1495+1)& (0+255),b
  7257  0015A2                     
  7258                           ; BSR set to: 0
  7259  0015A2  BFCC               	btfsc	(InitialiseString@i_1495+1)& (0+255),7,b
  7260  0015A4  EFDD  F00A         	goto	u7551
  7261  0015A8  51CC               	movf	(InitialiseString@i_1495+1)& (0+255),w,b
  7262  0015AA  E109               	bnz	u7550
  7263  0015AC  0E08               	movlw	8
  7264  0015AE  5DCB               	subwf	InitialiseString@i_1495& (0+255),w,b
  7265  0015B0  A0D8               	btfss	status,0,c
  7266  0015B2  EFDD  F00A         	goto	u7551
  7267  0015B6  EFDF  F00A         	goto	u7550
  7268  0015BA                     u7551:
  7269  0015BA  EF9C  F00A         	goto	l7485
  7270  0015BE                     u7550:
  7271  0015BE                     
  7272                           ; BSR set to: 0
  7273                           ;RS232.c: 108:     if(Partial != 1){
  7274  0015BE  05C0               	decf	InitialiseString@Partial& (0+255),w,b
  7275  0015C0  B4D8               	btfsc	status,2,c
  7276  0015C2  EFE5  F00A         	goto	u7561
  7277  0015C6  EFE7  F00A         	goto	u7560
  7278  0015CA                     u7561:
  7279  0015CA  EF76  F00B         	goto	l952
  7280  0015CE                     u7560:
  7281  0015CE                     
  7282                           ; BSR set to: 0
  7283                           ;RS232.c: 109:         printf("Initalisation Complete - Ready\r\n\n");
  7284  0015CE  0EBC               	movlw	low STR_94
  7285  0015D0  6F7D               	movwf	printf@fmt& (0+255),b
  7286  0015D2  0EFB               	movlw	high STR_94
  7287  0015D4  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7288  0015D6  EC3D  F026         	call	_printf	;wreg free
  7289                           
  7290                           ;RS232.c: 110:         printf("Modbus Function Codes Supported:\r\n\n");
  7291  0015DA  0E2D               	movlw	low STR_95
  7292  0015DC  0100               	movlb	0	; () banked
  7293  0015DE  6F7D               	movwf	printf@fmt& (0+255),b
  7294  0015E0  0EFB               	movlw	high STR_95
  7295  0015E2  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7296  0015E4  EC3D  F026         	call	_printf	;wreg free
  7297                           
  7298                           ;RS232.c: 111:         printf("   0x03 - Read Multiple 16bit Registers\r\n");
  7299  0015E8  0E37               	movlw	low STR_96
  7300  0015EA  0100               	movlb	0	; () banked
  7301  0015EC  6F7D               	movwf	printf@fmt& (0+255),b
  7302  0015EE  0EF9               	movlw	high STR_96
  7303  0015F0  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7304  0015F2  EC3D  F026         	call	_printf	;wreg free
  7305                           
  7306                           ;RS232.c: 112:         printf("      Add 0x0000 to 0x0031 - 32x Circuit Get Status (lowe
      +                          r 8bits only)\r\n");
  7307  0015F6  0EC6               	movlw	low STR_97
  7308  0015F8  0100               	movlb	0	; () banked
  7309  0015FA  6F7D               	movwf	printf@fmt& (0+255),b
  7310  0015FC  0EF4               	movlw	high STR_97
  7311  0015FE  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7312  001600  EC3D  F026         	call	_printf	;wreg free
  7313                           
  7314                           ;RS232.c: 113:         printf("      Add 0x0100 to 0x0108 - Part Number\r\n");
  7315  001604  0EE2               	movlw	low STR_98
  7316  001606  0100               	movlb	0	; () banked
  7317  001608  6F7D               	movwf	printf@fmt& (0+255),b
  7318  00160A  0EF8               	movlw	high STR_98
  7319  00160C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7320  00160E  EC3D  F026         	call	_printf	;wreg free
  7321                           
  7322                           ;RS232.c: 114:         printf("      Add 0x0200 - Revision\r\n");
  7323  001612  0EBF               	movlw	low STR_99
  7324  001614  0100               	movlb	0	; () banked
  7325  001616  6F7D               	movwf	printf@fmt& (0+255),b
  7326  001618  0EFC               	movlw	high STR_99
  7327  00161A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7328  00161C  EC3D  F026         	call	_printf	;wreg free
  7329                           
  7330                           ;RS232.c: 115:         printf("      Add 0x0300 to 0x0304 - Revision\r\n");
  7331  001620  0E8B               	movlw	low STR_100
  7332  001622  0100               	movlb	0	; () banked
  7333  001624  6F7D               	movwf	printf@fmt& (0+255),b
  7334  001626  0EF9               	movlw	high STR_100
  7335  001628  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7336  00162A  EC3D  F026         	call	_printf	;wreg free
  7337                           
  7338                           ;RS232.c: 116:         printf("      Add 0x0400 to 0x0405 - Compile Date (ASCII)\r\n");
  7339  00162E  0E4A               	movlw	low STR_101
  7340  001630  0100               	movlb	0	; () banked
  7341  001632  6F7D               	movwf	printf@fmt& (0+255),b
  7342  001634  0EF7               	movlw	high STR_101
  7343  001636  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7344  001638  EC3D  F026         	call	_printf	;wreg free
  7345                           
  7346                           ;RS232.c: 117:         printf("      Add 0x0500 to 0x0504 - Compile Time - (ASCII)\r\n")
      +                          ;
  7347  00163C  0E07               	movlw	low STR_102
  7348  00163E  0100               	movlb	0	; () banked
  7349  001640  6F7D               	movwf	printf@fmt& (0+255),b
  7350  001642  0EF6               	movlw	high STR_102
  7351  001644  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7352  001646  EC3D  F026         	call	_printf	;wreg free
  7353                           
  7354                           ;RS232.c: 118:         printf("      Add 0x0600 to 0x0602 - 3x Analogue Inputs (0x000 to
      +                           0x03ff)\r\n\n");
  7355  00164A  0E0F               	movlw	low STR_103
  7356  00164C  0100               	movlb	0	; () banked
  7357  00164E  6F7D               	movwf	printf@fmt& (0+255),b
  7358  001650  0EF5               	movlw	high STR_103
  7359  001652  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7360  001654  EC3D  F026         	call	_printf	;wreg free
  7361                           
  7362                           ;RS232.c: 119:         printf("   0x10 - Write Multiple Registers (Max 32x 16bit)\r\n");
  7363  001658  0E15               	movlw	low STR_104
  7364  00165A  0100               	movlb	0	; () banked
  7365  00165C  6F7D               	movwf	printf@fmt& (0+255),b
  7366  00165E  0EF7               	movlw	high STR_104
  7367  001660  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7368  001662  EC3D  F026         	call	_printf	;wreg free
  7369                           
  7370                           ;RS232.c: 120:         printf("      Add 0x0000 to 0x0031 - 32x Circuit Set Status  (low
      +                          er 8bits only)\r\n\n");
  7371  001666  0E7B               	movlw	low STR_105
  7372  001668  0100               	movlb	0	; () banked
  7373  00166A  6F7D               	movwf	printf@fmt& (0+255),b
  7374  00166C  0EF4               	movlw	high STR_105
  7375  00166E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7376  001670  EC3D  F026         	call	_printf	;wreg free
  7377                           
  7378                           ;RS232.c: 122:         printf("Commands Supported:\r\n");
  7379  001674  0E6C               	movlw	low STR_106
  7380  001676  0100               	movlb	0	; () banked
  7381  001678  6F7D               	movwf	printf@fmt& (0+255),b
  7382  00167A  0EFE               	movlw	high STR_106
  7383  00167C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7384  00167E  EC3D  F026         	call	_printf	;wreg free
  7385                           
  7386                           ;RS232.c: 123:         printf("   ? - Initalise and display card details\r\n");
  7387  001682  0EB6               	movlw	low STR_107
  7388  001684  0100               	movlb	0	; () banked
  7389  001686  6F7D               	movwf	printf@fmt& (0+255),b
  7390  001688  0EF8               	movlw	high STR_107
  7391  00168A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7392  00168C  EC3D  F026         	call	_printf	;wreg free
  7393                           
  7394                           ;RS232.c: 124:         printf("   serial - Set card serial number\r\n");
  7395  001690  0E99               	movlw	low STR_108
  7396  001692  0100               	movlb	0	; () banked
  7397  001694  6F7D               	movwf	printf@fmt& (0+255),b
  7398  001696  0EFA               	movlw	high STR_108
  7399  001698  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7400  00169A  EC3D  F026         	call	_printf	;wreg free
  7401                           
  7402                           ;RS232.c: 125:         printf("   part - Set card part number\r\n");
  7403  00169E  0EDE               	movlw	low STR_109
  7404  0016A0  0100               	movlb	0	; () banked
  7405  0016A2  6F7D               	movwf	printf@fmt& (0+255),b
  7406  0016A4  0EFB               	movlw	high STR_109
  7407  0016A6  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7408  0016A8  EC3D  F026         	call	_printf	;wreg free
  7409                           
  7410                           ;RS232.c: 126:         printf("   rev - Set card part number\r\n");
  7411  0016AC  0E20               	movlw	low STR_110
  7412  0016AE  0100               	movlb	0	; () banked
  7413  0016B0  6F7D               	movwf	printf@fmt& (0+255),b
  7414  0016B2  0EFC               	movlw	high STR_110
  7415  0016B4  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7416  0016B6  EC3D  F026         	call	_printf	;wreg free
  7417                           
  7418                           ;RS232.c: 128:         printf("\r\nEnter Command : ");
  7419  0016BA  0E25               	movlw	low STR_4
  7420  0016BC  0100               	movlb	0	; () banked
  7421  0016BE  6F7D               	movwf	printf@fmt& (0+255),b
  7422  0016C0  0EFF               	movlw	high STR_4
  7423  0016C2  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7424  0016C4  EC3D  F026         	call	_printf	;wreg free
  7425  0016C8                     
  7426                           ;RS232.c: 130:         uint16_t convertedValue;;RS232.c: 131:         convertedValue = A
      +                          DCC_GetSingleConversion(AIP_0);
  7427  0016C8  0E00               	movlw	0
  7428  0016CA  ECFA  F025         	call	_ADCC_GetSingleConversion
  7429  0016CE  C005  F0C1         	movff	?_ADCC_GetSingleConversion,InitialiseString@convertedValue
  7430  0016D2  C006  F0C2         	movff	?_ADCC_GetSingleConversion+1,InitialiseString@convertedValue+1
  7431  0016D6                     
  7432                           ;RS232.c: 132:         printf("ADC: 0x%04x \r\n", convertedValue);
  7433  0016D6  0E99               	movlw	low STR_53
  7434  0016D8  0100               	movlb	0	; () banked
  7435  0016DA  6F7D               	movwf	printf@fmt& (0+255),b
  7436  0016DC  0EFF               	movlw	high STR_53
  7437  0016DE  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7438  0016E0  C0C1  F07F         	movff	InitialiseString@convertedValue,?_printf+2
  7439  0016E4  C0C2  F080         	movff	InitialiseString@convertedValue+1,?_printf+3
  7440  0016E8  EC3D  F026         	call	_printf	;wreg free
  7441  0016EC                     l952:
  7442  0016EC  0012               	return		;funcret
  7443  0016EE                     __end_of_InitialiseString:
  7444                           	opt callstack 0
  7445                           
  7446 ;; *************** function _CardConfigIni *****************
  7447 ;; Defined at:
  7448 ;;		line 10 in file "RS232.c"
  7449 ;; Parameters:    Size  Location     Type
  7450 ;;  Name            2    9[COMRAM] PTR unsigned char 
  7451 ;;		 -> STR_85(4), STR_84(5), STR_83(7), 
  7452 ;;  RetNum          2   11[COMRAM] PTR unsigned char 
  7453 ;;		 -> InitialiseString@RevNum(2), InitialiseString@PartNum(19), InitialiseString@SerialNum(11), 
  7454 ;;  dataeeAddrWr    2   13[COMRAM] unsigned short 
  7455 ;;  NumBytes        2   15[COMRAM] int 
  7456 ;; Auto vars:     Size  Location     Type
  7457 ;;  i               2   21[COMRAM] int 
  7458 ;;  j               2   19[COMRAM] int 
  7459 ;;  readDataEven    1   24[COMRAM] unsigned char 
  7460 ;;  readDataOdd     1   23[COMRAM] unsigned char 
  7461 ;; Return value:  Size  Location     Type
  7462 ;;                  1    wreg      void 
  7463 ;; Registers used:
  7464 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7465 ;; Tracked objects:
  7466 ;;		On entry : 0/0
  7467 ;;		On exit  : 0/0
  7468 ;;		Unchanged: 0/0
  7469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7470 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7471 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7472 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7473 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7474 ;;Total ram usage:       16 bytes
  7475 ;; Hardware stack levels used:    1
  7476 ;; Hardware stack levels required when called:    5
  7477 ;; This function calls:
  7478 ;;		_DATAEE_ReadByte
  7479 ;;		_strcmp
  7480 ;; This function is called by:
  7481 ;;		_InitialiseString
  7482 ;; This function uses a non-reentrant model
  7483 ;;
  7484                           
  7485                           	psect	text13
  7486  002688                     __ptext13:
  7487                           	opt callstack 0
  7488  002688                     _CardConfigIni:
  7489                           	opt callstack 23
  7490  002688                     
  7491                           ;RS232.c: 14:     char readDataOdd, readDataEven;;RS232.c: 15:     int i=0, j=0;
  7492  002688  0E00               	movlw	0
  7493  00268A  6E17               	movwf	(CardConfigIni@i+1)^0,c
  7494  00268C  0E00               	movlw	0
  7495  00268E  6E16               	movwf	CardConfigIni@i^0,c
  7496  002690  0E00               	movlw	0
  7497  002692  6E15               	movwf	(CardConfigIni@j+1)^0,c
  7498  002694  0E00               	movlw	0
  7499  002696  6E14               	movwf	CardConfigIni@j^0,c
  7500                           
  7501                           ;RS232.c: 19:     for(i = 0; i < NumBytes; i++){
  7502  002698  0E00               	movlw	0
  7503  00269A  6E17               	movwf	(CardConfigIni@i+1)^0,c
  7504  00269C  0E00               	movlw	0
  7505  00269E  6E16               	movwf	CardConfigIni@i^0,c
  7506  0026A0  EF24  F014         	goto	l7299
  7507  0026A4                     l7261:
  7508                           
  7509                           ;RS232.c: 20:         readDataOdd = DATAEE_ReadByte(dataeeAddrWrk);
  7510  0026A4  C00E  F005         	movff	CardConfigIni@dataeeAddrWrk,DATAEE_ReadByte@bAdd
  7511  0026A8  C00F  F006         	movff	CardConfigIni@dataeeAddrWrk+1,DATAEE_ReadByte@bAdd+1
  7512  0026AC  ECA2  F026         	call	_DATAEE_ReadByte	;wreg free
  7513  0026B0  6E18               	movwf	CardConfigIni@readDataOdd^0,c
  7514  0026B2                     
  7515                           ;RS232.c: 22:         _delay((unsigned long)((50)*(32000000/4000.0)));
  7516  0026B2  0E03               	movlw	3
  7517  0026B4  6E13               	movwf	(??_CardConfigIni+1)^0,c
  7518  0026B6  0E08               	movlw	8
  7519  0026B8  6E12               	movwf	??_CardConfigIni^0,c
  7520  0026BA  0E77               	movlw	119
  7521  0026BC                     u8357:
  7522  0026BC  2EE8               	decfsz	wreg,f,c
  7523  0026BE  D7FE               	bra	u8357
  7524  0026C0  2E12               	decfsz	??_CardConfigIni^0,f,c
  7525  0026C2  D7FC               	bra	u8357
  7526  0026C4  2E13               	decfsz	(??_CardConfigIni+1)^0,f,c
  7527  0026C6  D7FA               	bra	u8357
  7528  0026C8  F000               	nop	
  7529  0026CA                     
  7530                           ;RS232.c: 25:         if(readDataOdd != 0xFF){
  7531  0026CA  2818               	incf	CardConfigIni@readDataOdd^0,w,c
  7532  0026CC  B4D8               	btfsc	status,2,c
  7533  0026CE  EF6B  F013         	goto	u7361
  7534  0026D2  EF6D  F013         	goto	u7360
  7535  0026D6                     u7361:
  7536  0026D6  EF77  F013         	goto	l7271
  7537  0026DA                     u7360:
  7538  0026DA                     
  7539                           ;RS232.c: 26:             RetNum[j] = readDataOdd;
  7540  0026DA  5014               	movf	CardConfigIni@j^0,w,c
  7541  0026DC  240C               	addwf	CardConfigIni@RetNum^0,w,c
  7542  0026DE  6ED9               	movwf	fsr2l,c
  7543  0026E0  5015               	movf	(CardConfigIni@j+1)^0,w,c
  7544  0026E2  200D               	addwfc	(CardConfigIni@RetNum+1)^0,w,c
  7545  0026E4  6EDA               	movwf	fsr2h,c
  7546  0026E6  C018  FFDF         	movff	CardConfigIni@readDataOdd,indf2
  7547  0026EA                     
  7548                           ;RS232.c: 27:             j++;
  7549  0026EA  4A14               	infsnz	CardConfigIni@j^0,f,c
  7550  0026EC  2A15               	incf	(CardConfigIni@j+1)^0,f,c
  7551  0026EE                     l7271:
  7552                           
  7553                           ;RS232.c: 30:         dataeeAddrWrk++;
  7554  0026EE  4A0E               	infsnz	CardConfigIni@dataeeAddrWrk^0,f,c
  7555  0026F0  2A0F               	incf	(CardConfigIni@dataeeAddrWrk+1)^0,f,c
  7556  0026F2                     
  7557                           ;RS232.c: 31:         readDataEven = DATAEE_ReadByte(dataeeAddrWrk);
  7558  0026F2  C00E  F005         	movff	CardConfigIni@dataeeAddrWrk,DATAEE_ReadByte@bAdd
  7559  0026F6  C00F  F006         	movff	CardConfigIni@dataeeAddrWrk+1,DATAEE_ReadByte@bAdd+1
  7560  0026FA  ECA2  F026         	call	_DATAEE_ReadByte	;wreg free
  7561  0026FE  6E19               	movwf	CardConfigIni@readDataEven^0,c
  7562  002700                     
  7563                           ;RS232.c: 33:         dataeeAddrWrk++;
  7564  002700  4A0E               	infsnz	CardConfigIni@dataeeAddrWrk^0,f,c
  7565  002702  2A0F               	incf	(CardConfigIni@dataeeAddrWrk+1)^0,f,c
  7566  002704                     
  7567                           ;RS232.c: 34:         _delay((unsigned long)((50)*(32000000/4000.0)));
  7568  002704  0E03               	movlw	3
  7569  002706  6E13               	movwf	(??_CardConfigIni+1)^0,c
  7570  002708  0E08               	movlw	8
  7571  00270A  6E12               	movwf	??_CardConfigIni^0,c
  7572  00270C  0E77               	movlw	119
  7573  00270E                     u8367:
  7574  00270E  2EE8               	decfsz	wreg,f,c
  7575  002710  D7FE               	bra	u8367
  7576  002712  2E12               	decfsz	??_CardConfigIni^0,f,c
  7577  002714  D7FC               	bra	u8367
  7578  002716  2E13               	decfsz	(??_CardConfigIni+1)^0,f,c
  7579  002718  D7FA               	bra	u8367
  7580  00271A  F000               	nop	
  7581  00271C                     
  7582                           ;RS232.c: 37:         if(readDataEven != 0xFF){
  7583  00271C  2819               	incf	CardConfigIni@readDataEven^0,w,c
  7584  00271E  B4D8               	btfsc	status,2,c
  7585  002720  EF94  F013         	goto	u7371
  7586  002724  EF96  F013         	goto	u7370
  7587  002728                     u7371:
  7588  002728  EFA0  F013         	goto	l7285
  7589  00272C                     u7370:
  7590  00272C                     
  7591                           ;RS232.c: 38:             RetNum[j] = readDataEven;
  7592  00272C  5014               	movf	CardConfigIni@j^0,w,c
  7593  00272E  240C               	addwf	CardConfigIni@RetNum^0,w,c
  7594  002730  6ED9               	movwf	fsr2l,c
  7595  002732  5015               	movf	(CardConfigIni@j+1)^0,w,c
  7596  002734  200D               	addwfc	(CardConfigIni@RetNum+1)^0,w,c
  7597  002736  6EDA               	movwf	fsr2h,c
  7598  002738  C019  FFDF         	movff	CardConfigIni@readDataEven,indf2
  7599  00273C                     
  7600                           ;RS232.c: 39:             j++;
  7601  00273C  4A14               	infsnz	CardConfigIni@j^0,f,c
  7602  00273E  2A15               	incf	(CardConfigIni@j+1)^0,f,c
  7603  002740                     l7285:
  7604                           
  7605                           ;RS232.c: 42:         if(!strcmp("Serial",Name)){
  7606  002740  0ED6               	movlw	low STR_77
  7607  002742  6E05               	movwf	strcmp@l^0,c
  7608  002744  0EFF               	movlw	high STR_77
  7609  002746  6E06               	movwf	(strcmp@l+1)^0,c
  7610  002748  C00A  F007         	movff	CardConfigIni@Name,strcmp@r
  7611  00274C  C00B  F008         	movff	CardConfigIni@Name+1,strcmp@r+1
  7612  002750  ECB3  F01F         	call	_strcmp	;wreg free
  7613  002754  5005               	movf	?_strcmp^0,w,c
  7614  002756  1006               	iorwf	(?_strcmp+1)^0,w,c
  7615  002758  A4D8               	btfss	status,2,c
  7616  00275A  EFB1  F013         	goto	u7381
  7617  00275E  EFB3  F013         	goto	u7380
  7618  002762                     u7381:
  7619  002762  EFCC  F013         	goto	l7289
  7620  002766                     u7380:
  7621  002766                     
  7622                           ;RS232.c: 43:             MB303xx[i] = readDataOdd *256 + readDataEven;
  7623  002766  5019               	movf	CardConfigIni@readDataEven^0,w,c
  7624  002768  C018  F012         	movff	CardConfigIni@readDataOdd,??_CardConfigIni
  7625  00276C  6A13               	clrf	(??_CardConfigIni+1)^0,c
  7626  00276E  C012  F013         	movff	??_CardConfigIni,??_CardConfigIni+1
  7627  002772  6A12               	clrf	??_CardConfigIni^0,c
  7628  002774  2612               	addwf	??_CardConfigIni^0,f,c
  7629  002776  0E00               	movlw	0
  7630  002778  2213               	addwfc	(??_CardConfigIni+1)^0,f,c
  7631  00277A  90D8               	bcf	status,0,c
  7632  00277C  3416               	rlcf	CardConfigIni@i^0,w,c
  7633  00277E  6ED9               	movwf	fsr2l,c
  7634  002780  3417               	rlcf	(CardConfigIni@i+1)^0,w,c
  7635  002782  6EDA               	movwf	fsr2h,c
  7636  002784  0EEA               	movlw	low _MB303xx
  7637  002786  26D9               	addwf	fsr2l,f,c
  7638  002788  0E00               	movlw	high _MB303xx
  7639  00278A  22DA               	addwfc	fsr2h,f,c
  7640  00278C  C012  FFDE         	movff	??_CardConfigIni,postinc2
  7641  002790  C013  FFDD         	movff	??_CardConfigIni+1,postdec2
  7642                           
  7643                           ;RS232.c: 44:         }else if(!strcmp("Part",Name)){
  7644  002794  EF22  F014         	goto	l7297
  7645  002798                     l7289:
  7646  002798  0EEA               	movlw	low STR_79
  7647  00279A  6E05               	movwf	strcmp@l^0,c
  7648  00279C  0EFF               	movlw	high STR_79
  7649  00279E  6E06               	movwf	(strcmp@l+1)^0,c
  7650  0027A0  C00A  F007         	movff	CardConfigIni@Name,strcmp@r
  7651  0027A4  C00B  F008         	movff	CardConfigIni@Name+1,strcmp@r+1
  7652  0027A8  ECB3  F01F         	call	_strcmp	;wreg free
  7653  0027AC  5005               	movf	?_strcmp^0,w,c
  7654  0027AE  1006               	iorwf	(?_strcmp+1)^0,w,c
  7655  0027B0  A4D8               	btfss	status,2,c
  7656  0027B2  EFDD  F013         	goto	u7391
  7657  0027B6  EFDF  F013         	goto	u7390
  7658  0027BA                     u7391:
  7659  0027BA  EFF8  F013         	goto	l7293
  7660  0027BE                     u7390:
  7661  0027BE                     
  7662                           ;RS232.c: 45:             MB301xx[i] = readDataOdd *256 + readDataEven;
  7663  0027BE  5019               	movf	CardConfigIni@readDataEven^0,w,c
  7664  0027C0  C018  F012         	movff	CardConfigIni@readDataOdd,??_CardConfigIni
  7665  0027C4  6A13               	clrf	(??_CardConfigIni+1)^0,c
  7666  0027C6  C012  F013         	movff	??_CardConfigIni,??_CardConfigIni+1
  7667  0027CA  6A12               	clrf	??_CardConfigIni^0,c
  7668  0027CC  2612               	addwf	??_CardConfigIni^0,f,c
  7669  0027CE  0E00               	movlw	0
  7670  0027D0  2213               	addwfc	(??_CardConfigIni+1)^0,f,c
  7671  0027D2  90D8               	bcf	status,0,c
  7672  0027D4  3416               	rlcf	CardConfigIni@i^0,w,c
  7673  0027D6  6ED9               	movwf	fsr2l,c
  7674  0027D8  3417               	rlcf	(CardConfigIni@i+1)^0,w,c
  7675  0027DA  6EDA               	movwf	fsr2h,c
  7676  0027DC  0E64               	movlw	low _MB301xx
  7677  0027DE  26D9               	addwf	fsr2l,f,c
  7678  0027E0  0E01               	movlw	high _MB301xx
  7679  0027E2  22DA               	addwfc	fsr2h,f,c
  7680  0027E4  C012  FFDE         	movff	??_CardConfigIni,postinc2
  7681  0027E8  C013  FFDD         	movff	??_CardConfigIni+1,postdec2
  7682                           
  7683                           ;RS232.c: 46:         }else if(!strcmp("Rev",Name)){
  7684  0027EC  EF22  F014         	goto	l7297
  7685  0027F0                     l7293:
  7686  0027F0  0EF4               	movlw	low STR_81
  7687  0027F2  6E05               	movwf	strcmp@l^0,c
  7688  0027F4  0EFF               	movlw	high STR_81
  7689  0027F6  6E06               	movwf	(strcmp@l+1)^0,c
  7690  0027F8  C00A  F007         	movff	CardConfigIni@Name,strcmp@r
  7691  0027FC  C00B  F008         	movff	CardConfigIni@Name+1,strcmp@r+1
  7692  002800  ECB3  F01F         	call	_strcmp	;wreg free
  7693  002804  5005               	movf	?_strcmp^0,w,c
  7694  002806  1006               	iorwf	(?_strcmp+1)^0,w,c
  7695  002808  A4D8               	btfss	status,2,c
  7696  00280A  EF09  F014         	goto	u7401
  7697  00280E  EF0B  F014         	goto	u7400
  7698  002812                     u7401:
  7699  002812  EF22  F014         	goto	l7297
  7700  002816                     u7400:
  7701  002816                     
  7702                           ;RS232.c: 47:             MB302xx[i] = readDataOdd *256 + readDataEven;
  7703  002816  5019               	movf	CardConfigIni@readDataEven^0,w,c
  7704  002818  C018  F012         	movff	CardConfigIni@readDataOdd,??_CardConfigIni
  7705  00281C  6A13               	clrf	(??_CardConfigIni+1)^0,c
  7706  00281E  C012  F013         	movff	??_CardConfigIni,??_CardConfigIni+1
  7707  002822  6A12               	clrf	??_CardConfigIni^0,c
  7708  002824  2612               	addwf	??_CardConfigIni^0,f,c
  7709  002826  0E00               	movlw	0
  7710  002828  2213               	addwfc	(??_CardConfigIni+1)^0,f,c
  7711  00282A  90D8               	bcf	status,0,c
  7712  00282C  3416               	rlcf	CardConfigIni@i^0,w,c
  7713  00282E  6ED9               	movwf	fsr2l,c
  7714  002830  3417               	rlcf	(CardConfigIni@i+1)^0,w,c
  7715  002832  6EDA               	movwf	fsr2h,c
  7716  002834  0EFC               	movlw	low _MB302xx
  7717  002836  26D9               	addwf	fsr2l,f,c
  7718  002838  0E00               	movlw	high _MB302xx
  7719  00283A  22DA               	addwfc	fsr2h,f,c
  7720  00283C  C012  FFDE         	movff	??_CardConfigIni,postinc2
  7721  002840  C013  FFDD         	movff	??_CardConfigIni+1,postdec2
  7722  002844                     l7297:
  7723                           
  7724                           ;RS232.c: 51:     }
  7725  002844  4A16               	infsnz	CardConfigIni@i^0,f,c
  7726  002846  2A17               	incf	(CardConfigIni@i+1)^0,f,c
  7727  002848                     l7299:
  7728  002848  5010               	movf	CardConfigIni@NumBytes^0,w,c
  7729  00284A  5C16               	subwf	CardConfigIni@i^0,w,c
  7730  00284C  5017               	movf	(CardConfigIni@i+1)^0,w,c
  7731  00284E  0A80               	xorlw	128
  7732  002850  6E12               	movwf	??_CardConfigIni^0,c
  7733  002852  5011               	movf	(CardConfigIni@NumBytes+1)^0,w,c
  7734  002854  0A80               	xorlw	128
  7735  002856  5812               	subwfb	??_CardConfigIni^0,w,c
  7736  002858  A0D8               	btfss	status,0,c
  7737  00285A  EF31  F014         	goto	u7411
  7738  00285E  EF33  F014         	goto	u7410
  7739  002862                     u7411:
  7740  002862  EF52  F013         	goto	l7261
  7741  002866                     u7410:
  7742  002866                     
  7743                           ;RS232.c: 53:     RetNum[j] = '\0';
  7744  002866  5014               	movf	CardConfigIni@j^0,w,c
  7745  002868  240C               	addwf	CardConfigIni@RetNum^0,w,c
  7746  00286A  6ED9               	movwf	fsr2l,c
  7747  00286C  5015               	movf	(CardConfigIni@j+1)^0,w,c
  7748  00286E  200D               	addwfc	(CardConfigIni@RetNum+1)^0,w,c
  7749  002870  6EDA               	movwf	fsr2h,c
  7750  002872  0E00               	movlw	0
  7751  002874  6EDF               	movwf	indf2,c
  7752  002876  0012               	return		;funcret
  7753  002878                     __end_of_CardConfigIni:
  7754                           	opt callstack 0
  7755                           
  7756 ;; *************** function _strcmp *****************
  7757 ;; Defined at:
  7758 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcmp.c"
  7759 ;; Parameters:    Size  Location     Type
  7760 ;;  l               2    4[COMRAM] PTR const unsigned char 
  7761 ;;		 -> STR_82(4), STR_80(5), STR_78(7), Command(16), 
  7762 ;;  r               2    6[COMRAM] PTR const unsigned char 
  7763 ;;		 -> STR_134(4), STR_132(5), STR_130(7), STR_128(2), 
  7764 ;;		 -> STR_126(6), STR_85(4), STR_84(5), STR_83(7), 
  7765 ;; Auto vars:     Size  Location     Type
  7766 ;;		None
  7767 ;; Return value:  Size  Location     Type
  7768 ;;                  2    4[COMRAM] int 
  7769 ;; Registers used:
  7770 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  7771 ;; Tracked objects:
  7772 ;;		On entry : 0/0
  7773 ;;		On exit  : 0/0
  7774 ;;		Unchanged: 0/0
  7775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7776 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7778 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7779 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7780 ;;Total ram usage:        5 bytes
  7781 ;; Hardware stack levels used:    1
  7782 ;; Hardware stack levels required when called:    4
  7783 ;; This function calls:
  7784 ;;		Nothing
  7785 ;; This function is called by:
  7786 ;;		_CardConfigIni
  7787 ;;		_ValidateCmd
  7788 ;; This function uses a non-reentrant model
  7789 ;;
  7790                           
  7791                           	psect	text14
  7792  003F66                     __ptext14:
  7793                           	opt callstack 0
  7794  003F66                     _strcmp:
  7795                           	opt callstack 25
  7796  003F66  EFB9  F01F         	goto	l7113
  7797  003F6A                     l7111:
  7798  003F6A  4A05               	infsnz	strcmp@l^0,f,c
  7799  003F6C  2A06               	incf	(strcmp@l+1)^0,f,c
  7800  003F6E  4A07               	infsnz	strcmp@r^0,f,c
  7801  003F70  2A08               	incf	(strcmp@r+1)^0,f,c
  7802  003F72                     l7113:
  7803  003F72  C007  FFF6         	movff	strcmp@r,tblptrl
  7804  003F76  C008  FFF7         	movff	strcmp@r+1,tblptrh
  7805  003F7A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7806  003F7A  6AF8               	clrf	tblptru,c
  7807  003F7C                     	endif
  7808  003F7C                     	if	0	;tblptru may be non-zero
  7809  003F7C                     	endif
  7810  003F7C  0008               	tblrd		*
  7811  003F7E  CFF5 F009          	movff	tablat,??_strcmp
  7812  003F82  C005  FFF6         	movff	strcmp@l,tblptrl
  7813  003F86  C006  FFF7         	movff	strcmp@l+1,tblptrh
  7814  003F8A  0E00               	movlw	low (__mediumconst shr (0+16))
  7815  003F8C  6EF8               	movwf	tblptru,c
  7816  003F8E  0E0E               	movlw	(high __ramtop+-1)
  7817  003F90  64F7               	cpfsgt	tblptrh,c
  7818  003F92  D003               	bra	u7137
  7819  003F94  0008               	tblrd		*
  7820  003F96  50F5               	movf	tablat,w,c
  7821  003F98  D005               	bra	u7135
  7822  003F9A                     u7137:
  7823  003F9A  CFF6 FFE9          	movff	tblptrl,fsr0l
  7824  003F9E  CFF7 FFEA          	movff	tblptrh,fsr0h
  7825  003FA2  50EF               	movf	indf0,w,c
  7826  003FA4                     u7135:
  7827  003FA4  1809               	xorwf	??_strcmp^0,w,c
  7828  003FA6  A4D8               	btfss	status,2,c
  7829  003FA8  EFD8  F01F         	goto	u7131
  7830  003FAC  EFDA  F01F         	goto	u7130
  7831  003FB0                     u7131:
  7832  003FB0  EFF3  F01F         	goto	l7117
  7833  003FB4                     u7130:
  7834  003FB4  C005  FFF6         	movff	strcmp@l,tblptrl
  7835  003FB8  C006  FFF7         	movff	strcmp@l+1,tblptrh
  7836  003FBC  0E00               	movlw	low (__mediumconst shr (0+16))
  7837  003FBE  6EF8               	movwf	tblptru,c
  7838  003FC0  0E0E               	movlw	(high __ramtop+-1)
  7839  003FC2  64F7               	cpfsgt	tblptrh,c
  7840  003FC4  D003               	bra	u7147
  7841  003FC6  0008               	tblrd		*
  7842  003FC8  50F5               	movf	tablat,w,c
  7843  003FCA  D005               	bra	u7140
  7844  003FCC                     u7147:
  7845  003FCC  CFF6 FFE9          	movff	tblptrl,fsr0l
  7846  003FD0  CFF7 FFEA          	movff	tblptrh,fsr0h
  7847  003FD4  50EF               	movf	indf0,w,c
  7848  003FD6                     u7140:
  7849  003FD6  0900               	iorlw	0
  7850  003FD8  A4D8               	btfss	status,2,c
  7851  003FDA  EFF1  F01F         	goto	u7151
  7852  003FDE  EFF3  F01F         	goto	u7150
  7853  003FE2                     u7151:
  7854  003FE2  EFB5  F01F         	goto	l7111
  7855  003FE6                     u7150:
  7856  003FE6                     l7117:
  7857  003FE6  C005  FFF6         	movff	strcmp@l,tblptrl
  7858  003FEA  C006  FFF7         	movff	strcmp@l+1,tblptrh
  7859  003FEE  0E00               	movlw	low (__mediumconst shr (0+16))
  7860  003FF0  6EF8               	movwf	tblptru,c
  7861  003FF2  0E0E               	movlw	(high __ramtop+-1)
  7862  003FF4  64F7               	cpfsgt	tblptrh,c
  7863  003FF6  D003               	bra	u7167
  7864  003FF8  0008               	tblrd		*
  7865  003FFA  50F5               	movf	tablat,w,c
  7866  003FFC  D005               	bra	u7160
  7867  003FFE                     u7167:
  7868  003FFE  CFF6 FFE9          	movff	tblptrl,fsr0l
  7869  004002  CFF7 FFEA          	movff	tblptrh,fsr0h
  7870  004006  50EF               	movf	indf0,w,c
  7871  004008                     u7160:
  7872  004008  6E09               	movwf	??_strcmp^0,c
  7873  00400A  C007  FFF6         	movff	strcmp@r,tblptrl
  7874  00400E  C008  FFF7         	movff	strcmp@r+1,tblptrh
  7875  004012                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7876  004012  6AF8               	clrf	tblptru,c
  7877  004014                     	endif
  7878  004014                     	if	0	;tblptru may be non-zero
  7879  004014                     	endif
  7880  004014  0008               	tblrd		*
  7881  004016  50F5               	movf	tablat,w,c
  7882  004018  5C09               	subwf	??_strcmp^0,w,c
  7883  00401A  6E05               	movwf	?_strcmp^0,c
  7884  00401C  6A06               	clrf	(?_strcmp+1)^0,c
  7885  00401E  A0D8               	btfss	status,0,c
  7886  004020  0606               	decf	(?_strcmp+1)^0,f,c
  7887  004022  0012               	return		;funcret
  7888  004024                     __end_of_strcmp:
  7889                           	opt callstack 0
  7890                           
  7891 ;; *************** function _DATAEE_ReadByte *****************
  7892 ;; Defined at:
  7893 ;;		line 187 in file "mcc_generated_files/memory.c"
  7894 ;; Parameters:    Size  Location     Type
  7895 ;;  bAdd            2    4[COMRAM] unsigned short 
  7896 ;; Auto vars:     Size  Location     Type
  7897 ;;		None
  7898 ;; Return value:  Size  Location     Type
  7899 ;;                  1    wreg      unsigned char 
  7900 ;; Registers used:
  7901 ;;		wreg, status,2, status,0
  7902 ;; Tracked objects:
  7903 ;;		On entry : 0/0
  7904 ;;		On exit  : 0/0
  7905 ;;		Unchanged: 0/0
  7906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7907 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7910 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7911 ;;Total ram usage:        2 bytes
  7912 ;; Hardware stack levels used:    1
  7913 ;; Hardware stack levels required when called:    4
  7914 ;; This function calls:
  7915 ;;		Nothing
  7916 ;; This function is called by:
  7917 ;;		_CardConfigIni
  7918 ;; This function uses a non-reentrant model
  7919 ;;
  7920                           
  7921                           	psect	text15
  7922  004D44                     __ptext15:
  7923                           	opt callstack 0
  7924  004D44                     _DATAEE_ReadByte:
  7925                           	opt callstack 23
  7926  004D44                     
  7927                           ;mcc_generated_files/memory.c: 187: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 188: {;mcc_generated_files/memory.c: 189:     NVMADRH = ((bAdd >> 8) & 
      +                          0x03);
  7928  004D44  5006               	movf	(DATAEE_ReadByte@bAdd+1)^0,w,c
  7929  004D46  0B03               	andlw	3
  7930  004D48  6E7F               	movwf	127,c	;volatile
  7931  004D4A                     
  7932                           ;mcc_generated_files/memory.c: 190:     NVMADRL = (bAdd & 0xFF);
  7933  004D4A  C005  FF7E         	movff	DATAEE_ReadByte@bAdd,3966	;volatile
  7934  004D4E                     
  7935                           ;mcc_generated_files/memory.c: 191:     NVMCON1bits.NVMREG = 0;
  7936  004D4E  0E3F               	movlw	-193
  7937  004D50  1681               	andwf	129,f,c	;volsfr
  7938  004D52                     
  7939                           ;mcc_generated_files/memory.c: 192:     NVMCON1bits.RD = 1;
  7940  004D52  8081               	bsf	129,0,c	;volsfr
  7941  004D54                     
  7942                           ;mcc_generated_files/memory.c: 193:     __nop();
  7943  004D54  F000               	nop	
  7944  004D56                     
  7945                           ;mcc_generated_files/memory.c: 194:     __nop();
  7946  004D56  F000               	nop	
  7947  004D58                     
  7948                           ;mcc_generated_files/memory.c: 196:     return (NVMDAT);
  7949  004D58  5080               	movf	128,w,c	;volatile
  7950  004D5A  0012               	return		;funcret
  7951  004D5C                     __end_of_DATAEE_ReadByte:
  7952                           	opt callstack 0
  7953                           
  7954 ;; *************** function _SYSTEM_Initialize *****************
  7955 ;; Defined at:
  7956 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7957 ;; Parameters:    Size  Location     Type
  7958 ;;		None
  7959 ;; Auto vars:     Size  Location     Type
  7960 ;;		None
  7961 ;; Return value:  Size  Location     Type
  7962 ;;                  1    wreg      void 
  7963 ;; Registers used:
  7964 ;;		wreg, status,2, status,0, cstack
  7965 ;; Tracked objects:
  7966 ;;		On entry : 0/0
  7967 ;;		On exit  : 0/0
  7968 ;;		Unchanged: 0/0
  7969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7974 ;;Total ram usage:        0 bytes
  7975 ;; Hardware stack levels used:    1
  7976 ;; Hardware stack levels required when called:    6
  7977 ;; This function calls:
  7978 ;;		_ADCC_DisableContinuousConversion
  7979 ;;		_ADCC_Initialize
  7980 ;;		_EUSART1_Initialize
  7981 ;;		_EUSART2_Initialize
  7982 ;;		_INTERRUPT_Initialize
  7983 ;;		_OSCILLATOR_Initialize
  7984 ;;		_PIN_MANAGER_Initialize
  7985 ;;		_PMD_Initialize
  7986 ;; This function is called by:
  7987 ;;		_main
  7988 ;; This function uses a non-reentrant model
  7989 ;;
  7990                           
  7991                           	psect	text16
  7992  004CEE                     __ptext16:
  7993                           	opt callstack 0
  7994  004CEE                     _SYSTEM_Initialize:
  7995                           	opt callstack 24
  7996  004CEE                     
  7997                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  7998  004CEE  EC47  F027         	call	_INTERRUPT_Initialize	;wreg free
  7999  004CF2                     
  8000                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  8001  004CF2  EC88  F026         	call	_PMD_Initialize	;wreg free
  8002  004CF6                     
  8003                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  8004  004CF6  ECF8  F020         	call	_PIN_MANAGER_Initialize	;wreg free
  8005  004CFA                     
  8006                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  8007  004CFA  ECAE  F026         	call	_OSCILLATOR_Initialize	;wreg free
  8008  004CFE                     
  8009                           ;mcc_generated_files/mcc.c: 56:     EUSART1_Initialize();
  8010  004CFE  EC3F  F021         	call	_EUSART1_Initialize	;wreg free
  8011  004D02                     
  8012                           ;mcc_generated_files/mcc.c: 57:     EUSART2_Initialize();
  8013  004D02  EC7F  F021         	call	_EUSART2_Initialize	;wreg free
  8014  004D06                     
  8015                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
  8016  004D06  ECC6  F023         	call	_ADCC_Initialize	;wreg free
  8017                           
  8018                           ;mcc_generated_files/mcc.c: 59:     ADCC_DisableContinuousConversion();
  8019  004D0A  EC49  F027         	call	_ADCC_DisableContinuousConversion	;wreg free
  8020  004D0E  0012               	return		;funcret
  8021  004D10                     __end_of_SYSTEM_Initialize:
  8022                           	opt callstack 0
  8023                           
  8024 ;; *************** function _PMD_Initialize *****************
  8025 ;; Defined at:
  8026 ;;		line 76 in file "mcc_generated_files/mcc.c"
  8027 ;; Parameters:    Size  Location     Type
  8028 ;;		None
  8029 ;; Auto vars:     Size  Location     Type
  8030 ;;		None
  8031 ;; Return value:  Size  Location     Type
  8032 ;;                  1    wreg      void 
  8033 ;; Registers used:
  8034 ;;		wreg, status,2
  8035 ;; Tracked objects:
  8036 ;;		On entry : 0/0
  8037 ;;		On exit  : 0/0
  8038 ;;		Unchanged: 0/0
  8039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8044 ;;Total ram usage:        0 bytes
  8045 ;; Hardware stack levels used:    1
  8046 ;; Hardware stack levels required when called:    4
  8047 ;; This function calls:
  8048 ;;		Nothing
  8049 ;; This function is called by:
  8050 ;;		_SYSTEM_Initialize
  8051 ;; This function uses a non-reentrant model
  8052 ;;
  8053                           
  8054                           	psect	text17
  8055  004D10                     __ptext17:
  8056                           	opt callstack 0
  8057  004D10                     _PMD_Initialize:
  8058                           	opt callstack 25
  8059  004D10                     
  8060                           ;mcc_generated_files/mcc.c: 79:     PMD0 = 0x00;
  8061  004D10  0E00               	movlw	0
  8062  004D12  010E               	movlb	14	; () banked
  8063  004D14  6FE1               	movwf	225,b	;volatile
  8064                           
  8065                           ;mcc_generated_files/mcc.c: 81:     PMD1 = 0x00;
  8066  004D16  0E00               	movlw	0
  8067  004D18  6FE2               	movwf	226,b	;volatile
  8068                           
  8069                           ;mcc_generated_files/mcc.c: 83:     PMD2 = 0x00;
  8070  004D1A  0E00               	movlw	0
  8071  004D1C  6FE3               	movwf	227,b	;volatile
  8072                           
  8073                           ;mcc_generated_files/mcc.c: 85:     PMD3 = 0x00;
  8074  004D1E  0E00               	movlw	0
  8075  004D20  6FE4               	movwf	228,b	;volatile
  8076                           
  8077                           ;mcc_generated_files/mcc.c: 87:     PMD4 = 0x00;
  8078  004D22  0E00               	movlw	0
  8079  004D24  6FE5               	movwf	229,b	;volatile
  8080                           
  8081                           ;mcc_generated_files/mcc.c: 89:     PMD5 = 0x00;
  8082  004D26  0E00               	movlw	0
  8083  004D28  6FE6               	movwf	230,b	;volatile
  8084  004D2A                     
  8085                           ; BSR set to: 14
  8086  004D2A  0012               	return		;funcret
  8087  004D2C                     __end_of_PMD_Initialize:
  8088                           	opt callstack 0
  8089                           
  8090 ;; *************** function _PIN_MANAGER_Initialize *****************
  8091 ;; Defined at:
  8092 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  8093 ;; Parameters:    Size  Location     Type
  8094 ;;		None
  8095 ;; Auto vars:     Size  Location     Type
  8096 ;;		None
  8097 ;; Return value:  Size  Location     Type
  8098 ;;                  1    wreg      void 
  8099 ;; Registers used:
  8100 ;;		wreg, status,2
  8101 ;; Tracked objects:
  8102 ;;		On entry : 0/0
  8103 ;;		On exit  : 0/0
  8104 ;;		Unchanged: 0/0
  8105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8110 ;;Total ram usage:        0 bytes
  8111 ;; Hardware stack levels used:    1
  8112 ;; Hardware stack levels required when called:    4
  8113 ;; This function calls:
  8114 ;;		Nothing
  8115 ;; This function is called by:
  8116 ;;		_SYSTEM_Initialize
  8117 ;; This function uses a non-reentrant model
  8118 ;;
  8119                           
  8120                           	psect	text18
  8121  0041F0                     __ptext18:
  8122                           	opt callstack 0
  8123  0041F0                     _PIN_MANAGER_Initialize:
  8124                           	opt callstack 25
  8125  0041F0                     
  8126                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  8127  0041F0  0E00               	movlw	0
  8128  0041F2  6E87               	movwf	135,c	;volatile
  8129                           
  8130                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  8131  0041F4  0E00               	movlw	0
  8132  0041F6  6E86               	movwf	134,c	;volatile
  8133                           
  8134                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  8135  0041F8  0E00               	movlw	0
  8136  0041FA  6E83               	movwf	131,c	;volatile
  8137                           
  8138                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  8139  0041FC  0E00               	movlw	0
  8140  0041FE  6E84               	movwf	132,c	;volatile
  8141                           
  8142                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  8143  004200  0E00               	movlw	0
  8144  004202  6E85               	movwf	133,c	;volatile
  8145                           
  8146                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  8147  004204  0E07               	movlw	7
  8148  004206  6E8C               	movwf	140,c	;volatile
  8149                           
  8150                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x07;
  8151  004208  0E07               	movlw	7
  8152  00420A  6E88               	movwf	136,c	;volatile
  8153                           
  8154                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xBF;
  8155  00420C  0EBF               	movlw	191
  8156  00420E  6E89               	movwf	137,c	;volatile
  8157                           
  8158                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  8159  004210  0EBF               	movlw	191
  8160  004212  6E8A               	movwf	138,c	;volatile
  8161                           
  8162                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFE;
  8163  004214  0EFE               	movlw	254
  8164  004216  6E8B               	movwf	139,c	;volatile
  8165  004218                     
  8166                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
  8167  004218  010F               	movlb	15	; () banked
  8168  00421A  6926               	setf	38,b	;volatile
  8169                           
  8170                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x3B;
  8171  00421C  0E3B               	movlw	59
  8172  00421E  6F21               	movwf	33,b	;volatile
  8173                           
  8174                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x37;
  8175  004220  0E37               	movlw	55
  8176  004222  6F19               	movwf	25,b	;volatile
  8177                           
  8178                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  8179  004224  0E07               	movlw	7
  8180  004226  6F2E               	movwf	46,b	;volatile
  8181  004228                     
  8182                           ; BSR set to: 15
  8183                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
  8184  004228  6911               	setf	17,b	;volatile
  8185                           
  8186                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  8187  00422A  0E00               	movlw	0
  8188  00422C  6F25               	movwf	37,b	;volatile
  8189                           
  8190                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  8191  00422E  0E00               	movlw	0
  8192  004230  6F2D               	movwf	45,b	;volatile
  8193                           
  8194                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  8195  004232  0E00               	movlw	0
  8196  004234  6F18               	movwf	24,b	;volatile
  8197                           
  8198                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  8199  004236  0E00               	movlw	0
  8200  004238  6F10               	movwf	16,b	;volatile
  8201                           
  8202                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  8203  00423A  0E00               	movlw	0
  8204  00423C  6F20               	movwf	32,b	;volatile
  8205                           
  8206                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
  8207  00423E  0E00               	movlw	0
  8208  004240  6F2C               	movwf	44,b	;volatile
  8209                           
  8210                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
  8211  004242  0E00               	movlw	0
  8212  004244  6F0F               	movwf	15,b	;volatile
  8213                           
  8214                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
  8215  004246  0E00               	movlw	0
  8216  004248  6F17               	movwf	23,b	;volatile
  8217                           
  8218                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
  8219  00424A  0E00               	movlw	0
  8220  00424C  6F1F               	movwf	31,b	;volatile
  8221                           
  8222                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
  8223  00424E  0E00               	movlw	0
  8224  004250  6F24               	movwf	36,b	;volatile
  8225  004252                     
  8226                           ; BSR set to: 15
  8227                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
  8228  004252  690E               	setf	14,b	;volatile
  8229  004254                     
  8230                           ; BSR set to: 15
  8231                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
  8232  004254  6916               	setf	22,b	;volatile
  8233  004256                     
  8234                           ; BSR set to: 15
  8235                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
  8236  004256  691E               	setf	30,b	;volatile
  8237  004258                     
  8238                           ; BSR set to: 15
  8239                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
  8240  004258  6923               	setf	35,b	;volatile
  8241                           
  8242                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
  8243  00425A  0E07               	movlw	7
  8244  00425C  6F2B               	movwf	43,b	;volatile
  8245  00425E                     
  8246                           ; BSR set to: 15
  8247                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
  8248  00425E  690D               	setf	13,b	;volatile
  8249  004260                     
  8250                           ; BSR set to: 15
  8251                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
  8252  004260  6915               	setf	21,b	;volatile
  8253  004262                     
  8254                           ; BSR set to: 15
  8255                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
  8256  004262  691D               	setf	29,b	;volatile
  8257  004264                     
  8258                           ; BSR set to: 15
  8259                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
  8260  004264  6922               	setf	34,b	;volatile
  8261                           
  8262                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x0F;
  8263  004266  0E0F               	movlw	15
  8264  004268  6F2A               	movwf	42,b	;volatile
  8265                           
  8266                           ;mcc_generated_files/pin_manager.c: 127:     RX1PPS = 0x17;
  8267  00426A  0E17               	movlw	23
  8268  00426C  010E               	movlb	14	; () banked
  8269  00426E  6FB5               	movwf	181,b	;volatile
  8270                           
  8271                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x0B;
  8272  004270  0E0B               	movlw	11
  8273  004272  6FF5               	movwf	245,b	;volatile
  8274                           
  8275                           ;mcc_generated_files/pin_manager.c: 129:     RC6PPS = 0x09;
  8276  004274  0E09               	movlw	9
  8277  004276  6FFD               	movwf	253,b	;volatile
  8278                           
  8279                           ;mcc_generated_files/pin_manager.c: 130:     RX2PPS = 0x0F;
  8280  004278  0E0F               	movlw	15
  8281  00427A  6F8D               	movwf	141,b	;volatile
  8282  00427C                     
  8283                           ; BSR set to: 14
  8284  00427C  0012               	return		;funcret
  8285  00427E                     __end_of_PIN_MANAGER_Initialize:
  8286                           	opt callstack 0
  8287                           
  8288 ;; *************** function _OSCILLATOR_Initialize *****************
  8289 ;; Defined at:
  8290 ;;		line 62 in file "mcc_generated_files/mcc.c"
  8291 ;; Parameters:    Size  Location     Type
  8292 ;;		None
  8293 ;; Auto vars:     Size  Location     Type
  8294 ;;		None
  8295 ;; Return value:  Size  Location     Type
  8296 ;;                  1    wreg      void 
  8297 ;; Registers used:
  8298 ;;		wreg, status,2
  8299 ;; Tracked objects:
  8300 ;;		On entry : 0/0
  8301 ;;		On exit  : 0/0
  8302 ;;		Unchanged: 0/0
  8303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8308 ;;Total ram usage:        0 bytes
  8309 ;; Hardware stack levels used:    1
  8310 ;; Hardware stack levels required when called:    4
  8311 ;; This function calls:
  8312 ;;		Nothing
  8313 ;; This function is called by:
  8314 ;;		_SYSTEM_Initialize
  8315 ;; This function uses a non-reentrant model
  8316 ;;
  8317                           
  8318                           	psect	text19
  8319  004D5C                     __ptext19:
  8320                           	opt callstack 0
  8321  004D5C                     _OSCILLATOR_Initialize:
  8322                           	opt callstack 25
  8323  004D5C                     
  8324                           ;mcc_generated_files/mcc.c: 65:     OSCCON1 = 0x60;
  8325  004D5C  0E60               	movlw	96
  8326  004D5E  010E               	movlb	14	; () banked
  8327  004D60  6FD8               	movwf	216,b	;volatile
  8328                           
  8329                           ;mcc_generated_files/mcc.c: 67:     OSCCON3 = 0x00;
  8330  004D62  0E00               	movlw	0
  8331  004D64  6FDA               	movwf	218,b	;volatile
  8332                           
  8333                           ;mcc_generated_files/mcc.c: 69:     OSCEN = 0x00;
  8334  004D66  0E00               	movlw	0
  8335  004D68  6FDC               	movwf	220,b	;volatile
  8336                           
  8337                           ;mcc_generated_files/mcc.c: 71:     OSCFRQ = 0x06;
  8338  004D6A  0E06               	movlw	6
  8339  004D6C  6FDE               	movwf	222,b	;volatile
  8340                           
  8341                           ;mcc_generated_files/mcc.c: 73:     OSCTUNE = 0x00;
  8342  004D6E  0E00               	movlw	0
  8343  004D70  6FDD               	movwf	221,b	;volatile
  8344  004D72                     
  8345                           ; BSR set to: 14
  8346  004D72  0012               	return		;funcret
  8347  004D74                     __end_of_OSCILLATOR_Initialize:
  8348                           	opt callstack 0
  8349                           
  8350 ;; *************** function _INTERRUPT_Initialize *****************
  8351 ;; Defined at:
  8352 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  8353 ;; Parameters:    Size  Location     Type
  8354 ;;		None
  8355 ;; Auto vars:     Size  Location     Type
  8356 ;;		None
  8357 ;; Return value:  Size  Location     Type
  8358 ;;                  1    wreg      void 
  8359 ;; Registers used:
  8360 ;;		None
  8361 ;; Tracked objects:
  8362 ;;		On entry : 0/0
  8363 ;;		On exit  : 0/0
  8364 ;;		Unchanged: 0/0
  8365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8370 ;;Total ram usage:        0 bytes
  8371 ;; Hardware stack levels used:    1
  8372 ;; Hardware stack levels required when called:    4
  8373 ;; This function calls:
  8374 ;;		Nothing
  8375 ;; This function is called by:
  8376 ;;		_SYSTEM_Initialize
  8377 ;; This function uses a non-reentrant model
  8378 ;;
  8379                           
  8380                           	psect	text20
  8381  004E8E                     __ptext20:
  8382                           	opt callstack 0
  8383  004E8E                     _INTERRUPT_Initialize:
  8384                           	opt callstack 25
  8385  004E8E                     
  8386                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
  8387  004E8E  9AF2               	bcf	242,5,c	;volatile
  8388  004E90  0012               	return		;funcret
  8389  004E92                     __end_of_INTERRUPT_Initialize:
  8390                           	opt callstack 0
  8391                           
  8392 ;; *************** function _EUSART2_Initialize *****************
  8393 ;; Defined at:
  8394 ;;		line 88 in file "mcc_generated_files/eusart2.c"
  8395 ;; Parameters:    Size  Location     Type
  8396 ;;		None
  8397 ;; Auto vars:     Size  Location     Type
  8398 ;;		None
  8399 ;; Return value:  Size  Location     Type
  8400 ;;                  1    wreg      void 
  8401 ;; Registers used:
  8402 ;;		wreg, status,2, status,0, cstack
  8403 ;; Tracked objects:
  8404 ;;		On entry : 0/0
  8405 ;;		On exit  : 0/0
  8406 ;;		Unchanged: 0/0
  8407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8411 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8412 ;;Total ram usage:        0 bytes
  8413 ;; Hardware stack levels used:    1
  8414 ;; Hardware stack levels required when called:    5
  8415 ;; This function calls:
  8416 ;;		_EUSART2_SetErrorHandler
  8417 ;;		_EUSART2_SetFramingErrorHandler
  8418 ;;		_EUSART2_SetOverrunErrorHandler
  8419 ;;		_EUSART2_SetRxInterruptHandler
  8420 ;;		_EUSART2_SetTxInterruptHandler
  8421 ;; This function is called by:
  8422 ;;		_SYSTEM_Initialize
  8423 ;; This function uses a non-reentrant model
  8424 ;;
  8425                           
  8426                           	psect	text21
  8427  0042FE                     __ptext21:
  8428                           	opt callstack 0
  8429  0042FE                     _EUSART2_Initialize:
  8430                           	opt callstack 24
  8431  0042FE                     
  8432                           ;mcc_generated_files/eusart2.c: 91:     PIE3bits.RC2IE = 0;
  8433  0042FE  010E               	movlb	14	; () banked
  8434  004300  9FC5               	bcf	197,7,b	;volatile
  8435  004302                     
  8436                           ; BSR set to: 14
  8437                           ;mcc_generated_files/eusart2.c: 92:     EUSART2_SetRxInterruptHandler(EUSART2_Receive_IS
      +                          R);
  8438  004302  0E60               	movlw	low _EUSART2_Receive_ISR
  8439  004304  6E05               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler^0,c
  8440  004306  0E3C               	movlw	high _EUSART2_Receive_ISR
  8441  004308  6E06               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)^0,c
  8442  00430A  EC02  F027         	call	_EUSART2_SetRxInterruptHandler	;wreg free
  8443  00430E                     
  8444                           ;mcc_generated_files/eusart2.c: 93:     PIE3bits.TX2IE = 0;
  8445  00430E  010E               	movlb	14	; () banked
  8446  004310  9DC5               	bcf	197,6,b	;volatile
  8447                           
  8448                           ;mcc_generated_files/eusart2.c: 94:     EUSART2_SetTxInterruptHandler(EUSART2_Transmit_I
      +                          SR);
  8449  004312  0EC2               	movlw	low _EUSART2_Transmit_ISR
  8450  004314  6E05               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler^0,c
  8451  004316  0E48               	movlw	high _EUSART2_Transmit_ISR
  8452  004318  6E06               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)^0,c
  8453  00431A  ECFD  F026         	call	_EUSART2_SetTxInterruptHandler	;wreg free
  8454  00431E                     
  8455                           ;mcc_generated_files/eusart2.c: 98:     BAUD2CON = 0x08;
  8456  00431E  0E08               	movlw	8
  8457  004320  010E               	movlb	14	; () banked
  8458  004322  6F9F               	movwf	159,b	;volatile
  8459  004324                     
  8460                           ; BSR set to: 14
  8461                           ;mcc_generated_files/eusart2.c: 101:     RC2STA = 0x90;
  8462  004324  0E90               	movlw	144
  8463  004326  6F9D               	movwf	157,b	;volatile
  8464  004328                     
  8465                           ; BSR set to: 14
  8466                           ;mcc_generated_files/eusart2.c: 104:     TX2STA = 0x24;
  8467  004328  0E24               	movlw	36
  8468  00432A  6F9E               	movwf	158,b	;volatile
  8469  00432C                     
  8470                           ; BSR set to: 14
  8471                           ;mcc_generated_files/eusart2.c: 108:     SP2BRGL = 0xA0;
  8472  00432C  0EA0               	movlw	160
  8473  00432E  6F9B               	movwf	155,b	;volatile
  8474  004330                     
  8475                           ; BSR set to: 14
  8476                           ;mcc_generated_files/eusart2.c: 112:     SP2BRGH = 0x01;
  8477  004330  0E01               	movlw	1
  8478  004332  6F9C               	movwf	156,b	;volatile
  8479  004334                     
  8480                           ; BSR set to: 14
  8481                           ;mcc_generated_files/eusart2.c: 115:     EUSART2_SetFramingErrorHandler(EUSART2_DefaultF
      +                          ramingErrorHandler);
  8482  004334  0E96               	movlw	low _EUSART2_DefaultFramingErrorHandler
  8483  004336  6E05               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler^0,c
  8484  004338  0E4E               	movlw	high _EUSART2_DefaultFramingErrorHandler
  8485  00433A  6E06               	movwf	(EUSART2_SetFramingErrorHandler@interruptHandler+1)^0,c
  8486  00433C  EC0C  F027         	call	_EUSART2_SetFramingErrorHandler	;wreg free
  8487  004340                     
  8488                           ;mcc_generated_files/eusart2.c: 116:     EUSART2_SetOverrunErrorHandler(EUSART2_DefaultO
      +                          verrunErrorHandler);
  8489  004340  0E68               	movlw	low _EUSART2_DefaultOverrunErrorHandler
  8490  004342  6E05               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler^0,c
  8491  004344  0E4E               	movlw	high _EUSART2_DefaultOverrunErrorHandler
  8492  004346  6E06               	movwf	(EUSART2_SetOverrunErrorHandler@interruptHandler+1)^0,c
  8493  004348  EC07  F027         	call	_EUSART2_SetOverrunErrorHandler	;wreg free
  8494  00434C                     
  8495                           ;mcc_generated_files/eusart2.c: 117:     EUSART2_SetErrorHandler(EUSART2_DefaultErrorHan
      +                          dler);
  8496  00434C  0E7C               	movlw	low _EUSART2_DefaultErrorHandler
  8497  00434E  6E05               	movwf	EUSART2_SetErrorHandler@interruptHandler^0,c
  8498  004350  0E4E               	movlw	high _EUSART2_DefaultErrorHandler
  8499  004352  6E06               	movwf	(EUSART2_SetErrorHandler@interruptHandler+1)^0,c
  8500  004354  EC11  F027         	call	_EUSART2_SetErrorHandler	;wreg free
  8501                           
  8502                           ;mcc_generated_files/eusart2.c: 119:     eusart2RxLastError.status = 0;
  8503  004358  0E00               	movlw	0
  8504  00435A  0100               	movlb	0	; () banked
  8505  00435C  6FE5               	movwf	_eusart2RxLastError& (0+255),b	;volatile
  8506                           
  8507                           ;mcc_generated_files/eusart2.c: 122:     eusart2TxHead = 0;
  8508  00435E  0E00               	movlw	0
  8509  004360  6FE9               	movwf	_eusart2TxHead& (0+255),b	;volatile
  8510                           
  8511                           ;mcc_generated_files/eusart2.c: 123:     eusart2TxTail = 0;
  8512  004362  0E00               	movlw	0
  8513  004364  6FE8               	movwf	_eusart2TxTail& (0+255),b	;volatile
  8514                           
  8515                           ;mcc_generated_files/eusart2.c: 124:     eusart2TxBufferRemaining = sizeof(eusart2TxBuff
      +                          er);
  8516  004366  0E20               	movlw	32
  8517  004368  6FFF               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
  8518                           
  8519                           ;mcc_generated_files/eusart2.c: 126:     eusart2RxHead = 0;
  8520  00436A  0E00               	movlw	0
  8521  00436C  6E5A               	movwf	_eusart2RxHead^0,c	;volatile
  8522                           
  8523                           ;mcc_generated_files/eusart2.c: 127:     eusart2RxTail = 0;
  8524  00436E  0E00               	movlw	0
  8525  004370  6FE7               	movwf	_eusart2RxTail& (0+255),b	;volatile
  8526                           
  8527                           ;mcc_generated_files/eusart2.c: 128:     eusart2RxCount = 0;
  8528  004372  0E00               	movlw	0
  8529  004374  6FE6               	movwf	_eusart2RxCount& (0+255),b	;volatile
  8530  004376                     
  8531                           ; BSR set to: 0
  8532                           ;mcc_generated_files/eusart2.c: 131:     PIE3bits.RC2IE = 1;
  8533  004376  010E               	movlb	14	; () banked
  8534  004378  8FC5               	bsf	197,7,b	;volatile
  8535  00437A                     
  8536                           ; BSR set to: 14
  8537  00437A  0012               	return		;funcret
  8538  00437C                     __end_of_EUSART2_Initialize:
  8539                           	opt callstack 0
  8540                           
  8541 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
  8542 ;; Defined at:
  8543 ;;		line 287 in file "mcc_generated_files/eusart2.c"
  8544 ;; Parameters:    Size  Location     Type
  8545 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  8546 ;;		 -> EUSART2_Transmit_ISR(1), 
  8547 ;; Auto vars:     Size  Location     Type
  8548 ;;		None
  8549 ;; Return value:  Size  Location     Type
  8550 ;;                  1    wreg      void 
  8551 ;; Registers used:
  8552 ;;		wreg, status,2, status,0
  8553 ;; Tracked objects:
  8554 ;;		On entry : 0/0
  8555 ;;		On exit  : 0/0
  8556 ;;		Unchanged: 0/0
  8557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8558 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8561 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8562 ;;Total ram usage:        2 bytes
  8563 ;; Hardware stack levels used:    1
  8564 ;; Hardware stack levels required when called:    4
  8565 ;; This function calls:
  8566 ;;		Nothing
  8567 ;; This function is called by:
  8568 ;;		_EUSART2_Initialize
  8569 ;; This function uses a non-reentrant model
  8570 ;;
  8571                           
  8572                           	psect	text22
  8573  004DFA                     __ptext22:
  8574                           	opt callstack 0
  8575  004DFA                     _EUSART2_SetTxInterruptHandler:
  8576                           	opt callstack 24
  8577  004DFA                     
  8578                           ;mcc_generated_files/eusart2.c: 288:     EUSART2_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  8579  004DFA  C005  F1EB         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
  8580  004DFE  C006  F1EC         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
  8581  004E02  0012               	return		;funcret
  8582  004E04                     __end_of_EUSART2_SetTxInterruptHandler:
  8583                           	opt callstack 0
  8584                           
  8585 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
  8586 ;; Defined at:
  8587 ;;		line 291 in file "mcc_generated_files/eusart2.c"
  8588 ;; Parameters:    Size  Location     Type
  8589 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  8590 ;;		 -> EUSART2_Receive_ISR(1), 
  8591 ;; Auto vars:     Size  Location     Type
  8592 ;;		None
  8593 ;; Return value:  Size  Location     Type
  8594 ;;                  1    wreg      void 
  8595 ;; Registers used:
  8596 ;;		wreg, status,2, status,0
  8597 ;; Tracked objects:
  8598 ;;		On entry : 0/0
  8599 ;;		On exit  : 0/0
  8600 ;;		Unchanged: 0/0
  8601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8602 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8605 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8606 ;;Total ram usage:        2 bytes
  8607 ;; Hardware stack levels used:    1
  8608 ;; Hardware stack levels required when called:    4
  8609 ;; This function calls:
  8610 ;;		Nothing
  8611 ;; This function is called by:
  8612 ;;		_EUSART2_Initialize
  8613 ;; This function uses a non-reentrant model
  8614 ;;
  8615                           
  8616                           	psect	text23
  8617  004E04                     __ptext23:
  8618                           	opt callstack 0
  8619  004E04                     _EUSART2_SetRxInterruptHandler:
  8620                           	opt callstack 24
  8621  004E04                     
  8622                           ;mcc_generated_files/eusart2.c: 292:     EUSART2_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  8623  004E04  C005  F1E9         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
  8624  004E08  C006  F1EA         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
  8625  004E0C  0012               	return		;funcret
  8626  004E0E                     __end_of_EUSART2_SetRxInterruptHandler:
  8627                           	opt callstack 0
  8628                           
  8629 ;; *************** function _EUSART2_SetOverrunErrorHandler *****************
  8630 ;; Defined at:
  8631 ;;		line 279 in file "mcc_generated_files/eusart2.c"
  8632 ;; Parameters:    Size  Location     Type
  8633 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  8634 ;;		 -> EUSART2_DefaultOverrunErrorHandler(1), 
  8635 ;; Auto vars:     Size  Location     Type
  8636 ;;		None
  8637 ;; Return value:  Size  Location     Type
  8638 ;;                  1    wreg      void 
  8639 ;; Registers used:
  8640 ;;		wreg, status,2, status,0
  8641 ;; Tracked objects:
  8642 ;;		On entry : 0/0
  8643 ;;		On exit  : 0/0
  8644 ;;		Unchanged: 0/0
  8645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8646 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8649 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8650 ;;Total ram usage:        2 bytes
  8651 ;; Hardware stack levels used:    1
  8652 ;; Hardware stack levels required when called:    4
  8653 ;; This function calls:
  8654 ;;		Nothing
  8655 ;; This function is called by:
  8656 ;;		_EUSART2_Initialize
  8657 ;; This function uses a non-reentrant model
  8658 ;;
  8659                           
  8660                           	psect	text24
  8661  004E0E                     __ptext24:
  8662                           	opt callstack 0
  8663  004E0E                     _EUSART2_SetOverrunErrorHandler:
  8664                           	opt callstack 24
  8665  004E0E                     
  8666                           ;mcc_generated_files/eusart2.c: 280:     EUSART2_OverrunErrorHandler = interruptHandler;
  8667  004E0E  C005  F1E1         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler,_EUSART2_OverrunErrorHandler
  8668  004E12  C006  F1E2         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler+1,_EUSART2_OverrunErrorHandler+1
  8669  004E16  0012               	return		;funcret
  8670  004E18                     __end_of_EUSART2_SetOverrunErrorHandler:
  8671                           	opt callstack 0
  8672                           
  8673 ;; *************** function _EUSART2_SetFramingErrorHandler *****************
  8674 ;; Defined at:
  8675 ;;		line 275 in file "mcc_generated_files/eusart2.c"
  8676 ;; Parameters:    Size  Location     Type
  8677 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  8678 ;;		 -> EUSART2_DefaultFramingErrorHandler(1), 
  8679 ;; Auto vars:     Size  Location     Type
  8680 ;;		None
  8681 ;; Return value:  Size  Location     Type
  8682 ;;                  1    wreg      void 
  8683 ;; Registers used:
  8684 ;;		wreg, status,2, status,0
  8685 ;; Tracked objects:
  8686 ;;		On entry : 0/0
  8687 ;;		On exit  : 0/0
  8688 ;;		Unchanged: 0/0
  8689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8690 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8693 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8694 ;;Total ram usage:        2 bytes
  8695 ;; Hardware stack levels used:    1
  8696 ;; Hardware stack levels required when called:    4
  8697 ;; This function calls:
  8698 ;;		Nothing
  8699 ;; This function is called by:
  8700 ;;		_EUSART2_Initialize
  8701 ;; This function uses a non-reentrant model
  8702 ;;
  8703                           
  8704                           	psect	text25
  8705  004E18                     __ptext25:
  8706                           	opt callstack 0
  8707  004E18                     _EUSART2_SetFramingErrorHandler:
  8708                           	opt callstack 24
  8709  004E18                     
  8710                           ;mcc_generated_files/eusart2.c: 276:     EUSART2_FramingErrorHandler = interruptHandler;
  8711  004E18  C005  F1E3         	movff	EUSART2_SetFramingErrorHandler@interruptHandler,_EUSART2_FramingErrorHandler
  8712  004E1C  C006  F1E4         	movff	EUSART2_SetFramingErrorHandler@interruptHandler+1,_EUSART2_FramingErrorHandler+1
  8713  004E20  0012               	return		;funcret
  8714  004E22                     __end_of_EUSART2_SetFramingErrorHandler:
  8715                           	opt callstack 0
  8716                           
  8717 ;; *************** function _EUSART2_SetErrorHandler *****************
  8718 ;; Defined at:
  8719 ;;		line 283 in file "mcc_generated_files/eusart2.c"
  8720 ;; Parameters:    Size  Location     Type
  8721 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  8722 ;;		 -> EUSART2_DefaultErrorHandler(1), 
  8723 ;; Auto vars:     Size  Location     Type
  8724 ;;		None
  8725 ;; Return value:  Size  Location     Type
  8726 ;;                  1    wreg      void 
  8727 ;; Registers used:
  8728 ;;		wreg, status,2, status,0
  8729 ;; Tracked objects:
  8730 ;;		On entry : 0/0
  8731 ;;		On exit  : 0/0
  8732 ;;		Unchanged: 0/0
  8733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8734 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8737 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8738 ;;Total ram usage:        2 bytes
  8739 ;; Hardware stack levels used:    1
  8740 ;; Hardware stack levels required when called:    4
  8741 ;; This function calls:
  8742 ;;		Nothing
  8743 ;; This function is called by:
  8744 ;;		_EUSART2_Initialize
  8745 ;; This function uses a non-reentrant model
  8746 ;;
  8747                           
  8748                           	psect	text26
  8749  004E22                     __ptext26:
  8750                           	opt callstack 0
  8751  004E22                     _EUSART2_SetErrorHandler:
  8752                           	opt callstack 24
  8753  004E22                     
  8754                           ;mcc_generated_files/eusart2.c: 284:     EUSART2_ErrorHandler = interruptHandler;
  8755  004E22  C005  F1DF         	movff	EUSART2_SetErrorHandler@interruptHandler,_EUSART2_ErrorHandler
  8756  004E26  C006  F1E0         	movff	EUSART2_SetErrorHandler@interruptHandler+1,_EUSART2_ErrorHandler+1
  8757  004E2A  0012               	return		;funcret
  8758  004E2C                     __end_of_EUSART2_SetErrorHandler:
  8759                           	opt callstack 0
  8760                           
  8761 ;; *************** function _EUSART1_Initialize *****************
  8762 ;; Defined at:
  8763 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  8764 ;; Parameters:    Size  Location     Type
  8765 ;;		None
  8766 ;; Auto vars:     Size  Location     Type
  8767 ;;		None
  8768 ;; Return value:  Size  Location     Type
  8769 ;;                  1    wreg      void 
  8770 ;; Registers used:
  8771 ;;		wreg, status,2, status,0, cstack
  8772 ;; Tracked objects:
  8773 ;;		On entry : 0/0
  8774 ;;		On exit  : 0/0
  8775 ;;		Unchanged: 0/0
  8776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8781 ;;Total ram usage:        0 bytes
  8782 ;; Hardware stack levels used:    1
  8783 ;; Hardware stack levels required when called:    5
  8784 ;; This function calls:
  8785 ;;		_EUSART1_SetErrorHandler
  8786 ;;		_EUSART1_SetFramingErrorHandler
  8787 ;;		_EUSART1_SetOverrunErrorHandler
  8788 ;;		_EUSART1_SetRxInterruptHandler
  8789 ;;		_EUSART1_SetTxInterruptHandler
  8790 ;; This function is called by:
  8791 ;;		_SYSTEM_Initialize
  8792 ;; This function uses a non-reentrant model
  8793 ;;
  8794                           
  8795                           	psect	text27
  8796  00427E                     __ptext27:
  8797                           	opt callstack 0
  8798  00427E                     _EUSART1_Initialize:
  8799                           	opt callstack 24
  8800  00427E                     
  8801                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
  8802  00427E  010E               	movlb	14	; () banked
  8803  004280  9BC5               	bcf	197,5,b	;volatile
  8804  004282                     
  8805                           ; BSR set to: 14
  8806                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  8807  004282  0EA6               	movlw	low _EUSART1_Receive_ISR
  8808  004284  6E05               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
  8809  004286  0E3E               	movlw	high _EUSART1_Receive_ISR
  8810  004288  6E06               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
  8811  00428A  EC1B  F027         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  8812  00428E                     
  8813                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
  8814  00428E  010E               	movlb	14	; () banked
  8815  004290  99C5               	bcf	197,4,b	;volatile
  8816                           
  8817                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  8818  004292  0E92               	movlw	low _EUSART1_Transmit_ISR
  8819  004294  6E05               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
  8820  004296  0E49               	movlw	high _EUSART1_Transmit_ISR
  8821  004298  6E06               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
  8822  00429A  EC16  F027         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  8823  00429E                     
  8824                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
  8825  00429E  0E08               	movlw	8
  8826  0042A0  6E9F               	movwf	159,c	;volatile
  8827  0042A2                     
  8828                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
  8829  0042A2  0E90               	movlw	144
  8830  0042A4  6E9D               	movwf	157,c	;volatile
  8831  0042A6                     
  8832                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
  8833  0042A6  0E24               	movlw	36
  8834  0042A8  6E9E               	movwf	158,c	;volatile
  8835  0042AA                     
  8836                           ;mcc_generated_files/eusart1.c: 108:     SP1BRGL = 0xA0;
  8837  0042AA  0EA0               	movlw	160
  8838  0042AC  6E9B               	movwf	155,c	;volatile
  8839  0042AE                     
  8840                           ;mcc_generated_files/eusart1.c: 111:     SP1BRGH = 0x03;
  8841  0042AE  0E03               	movlw	3
  8842  0042B0  6E9C               	movwf	156,c	;volatile
  8843  0042B2                     
  8844                           ;mcc_generated_files/eusart1.c: 112:     SP1BRGH = 0x01;
  8845  0042B2  0E01               	movlw	1
  8846  0042B4  6E9C               	movwf	156,c	;volatile
  8847                           
  8848                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  8849  0042B6  0E98               	movlw	low _EUSART1_DefaultFramingErrorHandler
  8850  0042B8  6E05               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  8851  0042BA  0E4E               	movlw	high _EUSART1_DefaultFramingErrorHandler
  8852  0042BC  6E06               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  8853  0042BE  EC25  F027         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  8854                           
  8855                           ;mcc_generated_files/eusart1.c: 116:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  8856  0042C2  0E82               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  8857  0042C4  6E05               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  8858  0042C6  0E4E               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  8859  0042C8  6E06               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  8860  0042CA  EC20  F027         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  8861                           
  8862                           ;mcc_generated_files/eusart1.c: 117:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  8863  0042CE  0E88               	movlw	low _EUSART1_DefaultErrorHandler
  8864  0042D0  6E05               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  8865  0042D2  0E4E               	movlw	high _EUSART1_DefaultErrorHandler
  8866  0042D4  6E06               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  8867  0042D6  EC2A  F027         	call	_EUSART1_SetErrorHandler	;wreg free
  8868  0042DA                     
  8869                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  8870  0042DA  0E00               	movlw	0
  8871  0042DC  0100               	movlb	0	; () banked
  8872  0042DE  6FE0               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  8873  0042E0                     
  8874                           ; BSR set to: 0
  8875                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxHead = 0;
  8876  0042E0  0E00               	movlw	0
  8877  0042E2  6FE4               	movwf	_eusart1TxHead& (0+255),b	;volatile
  8878  0042E4                     
  8879                           ; BSR set to: 0
  8880                           ;mcc_generated_files/eusart1.c: 123:     eusart1TxTail = 0;
  8881  0042E4  0E00               	movlw	0
  8882  0042E6  6FE3               	movwf	_eusart1TxTail& (0+255),b	;volatile
  8883  0042E8                     
  8884                           ; BSR set to: 0
  8885                           ;mcc_generated_files/eusart1.c: 124:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  8886  0042E8  0E10               	movlw	16
  8887  0042EA  6FFE               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
  8888  0042EC                     
  8889                           ; BSR set to: 0
  8890                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxHead = 0;
  8891  0042EC  0E00               	movlw	0
  8892  0042EE  6E59               	movwf	_eusart1RxHead^0,c	;volatile
  8893  0042F0                     
  8894                           ; BSR set to: 0
  8895                           ;mcc_generated_files/eusart1.c: 127:     eusart1RxTail = 0;
  8896  0042F0  0E00               	movlw	0
  8897  0042F2  6FE2               	movwf	_eusart1RxTail& (0+255),b	;volatile
  8898  0042F4                     
  8899                           ; BSR set to: 0
  8900                           ;mcc_generated_files/eusart1.c: 128:     eusart1RxCount = 0;
  8901  0042F4  0E00               	movlw	0
  8902  0042F6  6FE1               	movwf	_eusart1RxCount& (0+255),b	;volatile
  8903  0042F8                     
  8904                           ; BSR set to: 0
  8905                           ;mcc_generated_files/eusart1.c: 131:     PIE3bits.RC1IE = 1;
  8906  0042F8  010E               	movlb	14	; () banked
  8907  0042FA  8BC5               	bsf	197,5,b	;volatile
  8908  0042FC                     
  8909                           ; BSR set to: 14
  8910  0042FC  0012               	return		;funcret
  8911  0042FE                     __end_of_EUSART1_Initialize:
  8912                           	opt callstack 0
  8913                           
  8914 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  8915 ;; Defined at:
  8916 ;;		line 278 in file "mcc_generated_files/eusart1.c"
  8917 ;; Parameters:    Size  Location     Type
  8918 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  8919 ;;		 -> EUSART1_Transmit_ISR(1), 
  8920 ;; Auto vars:     Size  Location     Type
  8921 ;;		None
  8922 ;; Return value:  Size  Location     Type
  8923 ;;                  1    wreg      void 
  8924 ;; Registers used:
  8925 ;;		wreg, status,2, status,0
  8926 ;; Tracked objects:
  8927 ;;		On entry : 0/0
  8928 ;;		On exit  : 0/0
  8929 ;;		Unchanged: 0/0
  8930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8931 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8934 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8935 ;;Total ram usage:        2 bytes
  8936 ;; Hardware stack levels used:    1
  8937 ;; Hardware stack levels required when called:    4
  8938 ;; This function calls:
  8939 ;;		Nothing
  8940 ;; This function is called by:
  8941 ;;		_EUSART1_Initialize
  8942 ;; This function uses a non-reentrant model
  8943 ;;
  8944                           
  8945                           	psect	text28
  8946  004E2C                     __ptext28:
  8947                           	opt callstack 0
  8948  004E2C                     _EUSART1_SetTxInterruptHandler:
  8949                           	opt callstack 24
  8950  004E2C                     
  8951                           ;mcc_generated_files/eusart1.c: 279:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  8952  004E2C  C005  F1E7         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  8953  004E30  C006  F1E8         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  8954  004E34  0012               	return		;funcret
  8955  004E36                     __end_of_EUSART1_SetTxInterruptHandler:
  8956                           	opt callstack 0
  8957                           
  8958 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  8959 ;; Defined at:
  8960 ;;		line 282 in file "mcc_generated_files/eusart1.c"
  8961 ;; Parameters:    Size  Location     Type
  8962 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  8963 ;;		 -> EUSART1_Receive_ISR(1), 
  8964 ;; Auto vars:     Size  Location     Type
  8965 ;;		None
  8966 ;; Return value:  Size  Location     Type
  8967 ;;                  1    wreg      void 
  8968 ;; Registers used:
  8969 ;;		wreg, status,2, status,0
  8970 ;; Tracked objects:
  8971 ;;		On entry : 0/0
  8972 ;;		On exit  : 0/0
  8973 ;;		Unchanged: 0/0
  8974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8975 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8978 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8979 ;;Total ram usage:        2 bytes
  8980 ;; Hardware stack levels used:    1
  8981 ;; Hardware stack levels required when called:    4
  8982 ;; This function calls:
  8983 ;;		Nothing
  8984 ;; This function is called by:
  8985 ;;		_EUSART1_Initialize
  8986 ;; This function uses a non-reentrant model
  8987 ;;
  8988                           
  8989                           	psect	text29
  8990  004E36                     __ptext29:
  8991                           	opt callstack 0
  8992  004E36                     _EUSART1_SetRxInterruptHandler:
  8993                           	opt callstack 24
  8994  004E36                     
  8995                           ;mcc_generated_files/eusart1.c: 283:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  8996  004E36  C005  F1E5         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  8997  004E3A  C006  F1E6         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  8998  004E3E  0012               	return		;funcret
  8999  004E40                     __end_of_EUSART1_SetRxInterruptHandler:
  9000                           	opt callstack 0
  9001                           
  9002 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  9003 ;; Defined at:
  9004 ;;		line 270 in file "mcc_generated_files/eusart1.c"
  9005 ;; Parameters:    Size  Location     Type
  9006 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  9007 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  9008 ;; Auto vars:     Size  Location     Type
  9009 ;;		None
  9010 ;; Return value:  Size  Location     Type
  9011 ;;                  1    wreg      void 
  9012 ;; Registers used:
  9013 ;;		wreg, status,2, status,0
  9014 ;; Tracked objects:
  9015 ;;		On entry : 0/0
  9016 ;;		On exit  : 0/0
  9017 ;;		Unchanged: 0/0
  9018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9019 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9022 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9023 ;;Total ram usage:        2 bytes
  9024 ;; Hardware stack levels used:    1
  9025 ;; Hardware stack levels required when called:    4
  9026 ;; This function calls:
  9027 ;;		Nothing
  9028 ;; This function is called by:
  9029 ;;		_EUSART1_Initialize
  9030 ;; This function uses a non-reentrant model
  9031 ;;
  9032                           
  9033                           	psect	text30
  9034  004E40                     __ptext30:
  9035                           	opt callstack 0
  9036  004E40                     _EUSART1_SetOverrunErrorHandler:
  9037                           	opt callstack 24
  9038  004E40                     
  9039                           ;mcc_generated_files/eusart1.c: 271:     EUSART1_OverrunErrorHandler = interruptHandler;
  9040  004E40  C005  F1DB         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  9041  004E44  C006  F1DC         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  9042  004E48  0012               	return		;funcret
  9043  004E4A                     __end_of_EUSART1_SetOverrunErrorHandler:
  9044                           	opt callstack 0
  9045                           
  9046 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  9047 ;; Defined at:
  9048 ;;		line 266 in file "mcc_generated_files/eusart1.c"
  9049 ;; Parameters:    Size  Location     Type
  9050 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  9051 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  9052 ;; Auto vars:     Size  Location     Type
  9053 ;;		None
  9054 ;; Return value:  Size  Location     Type
  9055 ;;                  1    wreg      void 
  9056 ;; Registers used:
  9057 ;;		wreg, status,2, status,0
  9058 ;; Tracked objects:
  9059 ;;		On entry : 0/0
  9060 ;;		On exit  : 0/0
  9061 ;;		Unchanged: 0/0
  9062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9063 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9066 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9067 ;;Total ram usage:        2 bytes
  9068 ;; Hardware stack levels used:    1
  9069 ;; Hardware stack levels required when called:    4
  9070 ;; This function calls:
  9071 ;;		Nothing
  9072 ;; This function is called by:
  9073 ;;		_EUSART1_Initialize
  9074 ;; This function uses a non-reentrant model
  9075 ;;
  9076                           
  9077                           	psect	text31
  9078  004E4A                     __ptext31:
  9079                           	opt callstack 0
  9080  004E4A                     _EUSART1_SetFramingErrorHandler:
  9081                           	opt callstack 24
  9082  004E4A                     
  9083                           ;mcc_generated_files/eusart1.c: 267:     EUSART1_FramingErrorHandler = interruptHandler;
  9084  004E4A  C005  F1DD         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  9085  004E4E  C006  F1DE         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  9086  004E52  0012               	return		;funcret
  9087  004E54                     __end_of_EUSART1_SetFramingErrorHandler:
  9088                           	opt callstack 0
  9089                           
  9090 ;; *************** function _EUSART1_SetErrorHandler *****************
  9091 ;; Defined at:
  9092 ;;		line 274 in file "mcc_generated_files/eusart1.c"
  9093 ;; Parameters:    Size  Location     Type
  9094 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  9095 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  9096 ;; Auto vars:     Size  Location     Type
  9097 ;;		None
  9098 ;; Return value:  Size  Location     Type
  9099 ;;                  1    wreg      void 
  9100 ;; Registers used:
  9101 ;;		wreg, status,2, status,0
  9102 ;; Tracked objects:
  9103 ;;		On entry : 0/0
  9104 ;;		On exit  : 0/0
  9105 ;;		Unchanged: 0/0
  9106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9107 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9110 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9111 ;;Total ram usage:        2 bytes
  9112 ;; Hardware stack levels used:    1
  9113 ;; Hardware stack levels required when called:    4
  9114 ;; This function calls:
  9115 ;;		Nothing
  9116 ;; This function is called by:
  9117 ;;		_EUSART1_Initialize
  9118 ;; This function uses a non-reentrant model
  9119 ;;
  9120                           
  9121                           	psect	text32
  9122  004E54                     __ptext32:
  9123                           	opt callstack 0
  9124  004E54                     _EUSART1_SetErrorHandler:
  9125                           	opt callstack 24
  9126  004E54                     
  9127                           ;mcc_generated_files/eusart1.c: 275:     EUSART1_ErrorHandler = interruptHandler;
  9128  004E54  C005  F1D9         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  9129  004E58  C006  F1DA         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  9130  004E5C  0012               	return		;funcret
  9131  004E5E                     __end_of_EUSART1_SetErrorHandler:
  9132                           	opt callstack 0
  9133                           
  9134 ;; *************** function _ADCC_Initialize *****************
  9135 ;; Defined at:
  9136 ;;		line 62 in file "mcc_generated_files/adcc.c"
  9137 ;; Parameters:    Size  Location     Type
  9138 ;;		None
  9139 ;; Auto vars:     Size  Location     Type
  9140 ;;		None
  9141 ;; Return value:  Size  Location     Type
  9142 ;;                  1    wreg      void 
  9143 ;; Registers used:
  9144 ;;		wreg, status,2
  9145 ;; Tracked objects:
  9146 ;;		On entry : 0/0
  9147 ;;		On exit  : 0/0
  9148 ;;		Unchanged: 0/0
  9149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9154 ;;Total ram usage:        0 bytes
  9155 ;; Hardware stack levels used:    1
  9156 ;; Hardware stack levels required when called:    4
  9157 ;; This function calls:
  9158 ;;		Nothing
  9159 ;; This function is called by:
  9160 ;;		_SYSTEM_Initialize
  9161 ;; This function uses a non-reentrant model
  9162 ;;
  9163                           
  9164                           	psect	text33
  9165  00478C                     __ptext33:
  9166                           	opt callstack 0
  9167  00478C                     _ADCC_Initialize:
  9168                           	opt callstack 25
  9169  00478C                     
  9170                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
  9171  00478C  0E00               	movlw	0
  9172  00478E  6E6A               	movwf	106,c	;volatile
  9173                           
  9174                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
  9175  004790  0E00               	movlw	0
  9176  004792  6E6B               	movwf	107,c	;volatile
  9177                           
  9178                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
  9179  004794  0E00               	movlw	0
  9180  004796  6E6C               	movwf	108,c	;volatile
  9181                           
  9182                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
  9183  004798  0E00               	movlw	0
  9184  00479A  6E6D               	movwf	109,c	;volatile
  9185                           
  9186                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
  9187  00479C  0E00               	movlw	0
  9188  00479E  6E68               	movwf	104,c	;volatile
  9189                           
  9190                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
  9191  0047A0  0E00               	movlw	0
  9192  0047A2  6E69               	movwf	105,c	;volatile
  9193                           
  9194                           ;mcc_generated_files/adcc.c: 78:     ADRPT = 0x00;
  9195  0047A4  0E00               	movlw	0
  9196  0047A6  6E66               	movwf	102,c	;volatile
  9197                           
  9198                           ;mcc_generated_files/adcc.c: 80:     ADPCH = 0x00;
  9199  0047A8  0E00               	movlw	0
  9200  0047AA  010F               	movlb	15	; () banked
  9201  0047AC  6F5F               	movwf	95,b	;volatile
  9202                           
  9203                           ;mcc_generated_files/adcc.c: 82:     ADCAP = 0x00;
  9204  0047AE  0E00               	movlw	0
  9205  0047B0  6F5D               	movwf	93,b	;volatile
  9206                           
  9207                           ;mcc_generated_files/adcc.c: 84:     ADPRE = 0x00;
  9208  0047B2  0E00               	movlw	0
  9209  0047B4  6F5E               	movwf	94,b	;volatile
  9210                           
  9211                           ;mcc_generated_files/adcc.c: 86:     ADCON1 = 0x00;
  9212  0047B6  0E00               	movlw	0
  9213  0047B8  6F59               	movwf	89,b	;volatile
  9214                           
  9215                           ;mcc_generated_files/adcc.c: 88:     ADCON2 = 0x00;
  9216  0047BA  0E00               	movlw	0
  9217  0047BC  6F5A               	movwf	90,b	;volatile
  9218                           
  9219                           ;mcc_generated_files/adcc.c: 90:     ADCON3 = 0x00;
  9220  0047BE  0E00               	movlw	0
  9221  0047C0  6F5B               	movwf	91,b	;volatile
  9222                           
  9223                           ;mcc_generated_files/adcc.c: 92:     ADSTAT = 0x00;
  9224  0047C2  0E00               	movlw	0
  9225  0047C4  6E65               	movwf	101,c	;volatile
  9226                           
  9227                           ;mcc_generated_files/adcc.c: 94:     ADREF = 0x00;
  9228  0047C6  0E00               	movlw	0
  9229  0047C8  6F58               	movwf	88,b	;volatile
  9230                           
  9231                           ;mcc_generated_files/adcc.c: 96:     ADACT = 0x00;
  9232  0047CA  0E00               	movlw	0
  9233  0047CC  6F56               	movwf	86,b	;volatile
  9234                           
  9235                           ;mcc_generated_files/adcc.c: 98:     ADCLK = 0x00;
  9236  0047CE  0E00               	movlw	0
  9237  0047D0  6F57               	movwf	87,b	;volatile
  9238                           
  9239                           ;mcc_generated_files/adcc.c: 100:     ADCON0 = 0x94;
  9240  0047D2  0E94               	movlw	148
  9241  0047D4  6E60               	movwf	96,c	;volatile
  9242                           
  9243                           ;mcc_generated_files/adcc.c: 102:     ADACQ = 0x0A;
  9244  0047D6  0E0A               	movlw	10
  9245  0047D8  6F5C               	movwf	92,b	;volatile
  9246  0047DA                     
  9247                           ; BSR set to: 15
  9248  0047DA  0012               	return		;funcret
  9249  0047DC                     __end_of_ADCC_Initialize:
  9250                           	opt callstack 0
  9251                           
  9252 ;; *************** function _ADCC_DisableContinuousConversion *****************
  9253 ;; Defined at:
  9254 ;;		line 267 in file "mcc_generated_files/adcc.c"
  9255 ;; Parameters:    Size  Location     Type
  9256 ;;		None
  9257 ;; Auto vars:     Size  Location     Type
  9258 ;;		None
  9259 ;; Return value:  Size  Location     Type
  9260 ;;                  1    wreg      void 
  9261 ;; Registers used:
  9262 ;;		None
  9263 ;; Tracked objects:
  9264 ;;		On entry : 0/0
  9265 ;;		On exit  : 0/0
  9266 ;;		Unchanged: 0/0
  9267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9272 ;;Total ram usage:        0 bytes
  9273 ;; Hardware stack levels used:    1
  9274 ;; Hardware stack levels required when called:    4
  9275 ;; This function calls:
  9276 ;;		Nothing
  9277 ;; This function is called by:
  9278 ;;		_SYSTEM_Initialize
  9279 ;; This function uses a non-reentrant model
  9280 ;;
  9281                           
  9282                           	psect	text34
  9283  004E92                     __ptext34:
  9284                           	opt callstack 0
  9285  004E92                     _ADCC_DisableContinuousConversion:
  9286                           	opt callstack 25
  9287  004E92                     
  9288                           ;mcc_generated_files/adcc.c: 270:     ADCON0bits.ADCONT = 0;
  9289  004E92  9C60               	bcf	96,6,c	;volatile
  9290  004E94  0012               	return		;funcret
  9291  004E96                     __end_of_ADCC_DisableContinuousConversion:
  9292                           	opt callstack 0
  9293                           
  9294 ;; *************** function _PrintModbus *****************
  9295 ;; Defined at:
  9296 ;;		line 91 in file "Modbus.c"
  9297 ;; Parameters:    Size  Location     Type
  9298 ;;		None
  9299 ;; Auto vars:     Size  Location     Type
  9300 ;;  j               2   52[BANK0 ] int 
  9301 ;;  i               2   54[BANK0 ] int 
  9302 ;; Return value:  Size  Location     Type
  9303 ;;                  1    wreg      void 
  9304 ;; Registers used:
  9305 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9306 ;; Tracked objects:
  9307 ;;		On entry : 0/0
  9308 ;;		On exit  : 0/0
  9309 ;;		Unchanged: 0/0
  9310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9312 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9313 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9314 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9315 ;;Total ram usage:        9 bytes
  9316 ;; Hardware stack levels used:    1
  9317 ;; Hardware stack levels required when called:   13
  9318 ;; This function calls:
  9319 ;;		_printf
  9320 ;; This function is called by:
  9321 ;;		_main
  9322 ;; This function uses a non-reentrant model
  9323 ;;
  9324                           
  9325                           	psect	text35
  9326  001F8C                     __ptext35:
  9327                           	opt callstack 0
  9328  001F8C                     _PrintModbus:
  9329                           	opt callstack 17
  9330  001F8C                     
  9331                           ;Modbus.c: 96:     printf("\r\nModbus Received:\r\n");
  9332  001F8C  0EAC               	movlw	low STR_10
  9333  001F8E  0100               	movlb	0	; () banked
  9334  001F90  6F7D               	movwf	printf@fmt& (0+255),b
  9335  001F92  0EFE               	movlw	high STR_10
  9336  001F94  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9337  001F96  EC3D  F026         	call	_printf	;wreg free
  9338  001F9A                     
  9339                           ;Modbus.c: 98:     if(ModbusData[1] == 0x03){
  9340  001F9A  0E03               	movlw	3
  9341  001F9C  0101               	movlb	1	; () banked
  9342  001F9E  1901               	xorwf	(_ModbusData+1)& (0+255),w,b
  9343  001FA0  A4D8               	btfss	status,2,c
  9344  001FA2  EFD5  F00F         	goto	u8141
  9345  001FA6  EFD7  F00F         	goto	u8140
  9346  001FAA                     u8141:
  9347  001FAA  EF29  F010         	goto	l7979
  9348  001FAE                     u8140:
  9349  001FAE                     
  9350                           ; BSR set to: 1
  9351                           ;Modbus.c: 100:         printf("   Byte 00: 0x%02x - Card Address\r\n",ModbusData[0]);
  9352  001FAE  0E75               	movlw	low STR_11
  9353  001FB0  0100               	movlb	0	; () banked
  9354  001FB2  6F7D               	movwf	printf@fmt& (0+255),b
  9355  001FB4  0EFB               	movlw	high STR_11
  9356  001FB6  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9357  001FB8  C100  F07F         	movff	_ModbusData,?_printf+2
  9358  001FBC  6B80               	clrf	(?_printf+3)& (0+255),b
  9359  001FBE  EC3D  F026         	call	_printf	;wreg free
  9360                           
  9361                           ;Modbus.c: 101:         printf("   Byte 01: 0x%02x - Function Code (Read Multi Reg)\r\n"
      +                          ,ModbusData[1]);
  9362  001FC2  0E73               	movlw	low STR_12
  9363  001FC4  0100               	movlb	0	; () banked
  9364  001FC6  6F7D               	movwf	printf@fmt& (0+255),b
  9365  001FC8  0EF6               	movlw	high STR_12
  9366  001FCA  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9367  001FCC  C101  F07F         	movff	_ModbusData+1,?_printf+2
  9368  001FD0  6B80               	clrf	(?_printf+3)& (0+255),b
  9369  001FD2  EC3D  F026         	call	_printf	;wreg free
  9370                           
  9371                           ;Modbus.c: 102:         printf("   Byte 02: 0x%02x - 1st Reg Add Hi\r\n",ModbusData[2]);
  9372  001FD6  0E4D               	movlw	low STR_13
  9373  001FD8  0100               	movlb	0	; () banked
  9374  001FDA  6F7D               	movwf	printf@fmt& (0+255),b
  9375  001FDC  0EFA               	movlw	high STR_13
  9376  001FDE  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9377  001FE0  C102  F07F         	movff	_ModbusData+2,?_printf+2
  9378  001FE4  6B80               	clrf	(?_printf+3)& (0+255),b
  9379  001FE6  EC3D  F026         	call	_printf	;wreg free
  9380                           
  9381                           ;Modbus.c: 103:         printf("   Byte 03: 0x%02x - 1st Reg Add Lo\r\n",ModbusData[3]);
  9382  001FEA  0E73               	movlw	low STR_14
  9383  001FEC  0100               	movlb	0	; () banked
  9384  001FEE  6F7D               	movwf	printf@fmt& (0+255),b
  9385  001FF0  0EFA               	movlw	high STR_14
  9386  001FF2  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9387  001FF4  C103  F07F         	movff	_ModbusData+3,?_printf+2
  9388  001FF8  6B80               	clrf	(?_printf+3)& (0+255),b
  9389  001FFA  EC3D  F026         	call	_printf	;wreg free
  9390                           
  9391                           ;Modbus.c: 104:         printf("   Byte 04: 0x%02x - Num of Reg Hi\r\n",ModbusData[4]);
  9392  001FFE  0EE3               	movlw	low STR_15
  9393  002000  0100               	movlb	0	; () banked
  9394  002002  6F7D               	movwf	printf@fmt& (0+255),b
  9395  002004  0EFA               	movlw	high STR_15
  9396  002006  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9397  002008  C104  F07F         	movff	_ModbusData+4,?_printf+2
  9398  00200C  6B80               	clrf	(?_printf+3)& (0+255),b
  9399  00200E  EC3D  F026         	call	_printf	;wreg free
  9400                           
  9401                           ;Modbus.c: 105:         printf("   Byte 05: 0x%02x - Num of Reg Lo\r\n",ModbusData[5]);
  9402  002012  0E08               	movlw	low STR_16
  9403  002014  0100               	movlb	0	; () banked
  9404  002016  6F7D               	movwf	printf@fmt& (0+255),b
  9405  002018  0EFB               	movlw	high STR_16
  9406  00201A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9407  00201C  C105  F07F         	movff	_ModbusData+5,?_printf+2
  9408  002020  6B80               	clrf	(?_printf+3)& (0+255),b
  9409  002022  EC3D  F026         	call	_printf	;wreg free
  9410                           
  9411                           ;Modbus.c: 106:         printf("   Byte 06: 0x%02x - CRC Hi\r\n",ModbusData[6]);
  9412  002026  0EDD               	movlw	low STR_17
  9413  002028  0100               	movlb	0	; () banked
  9414  00202A  6F7D               	movwf	printf@fmt& (0+255),b
  9415  00202C  0EFC               	movlw	high STR_17
  9416  00202E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9417  002030  C106  F07F         	movff	_ModbusData+6,?_printf+2
  9418  002034  6B80               	clrf	(?_printf+3)& (0+255),b
  9419  002036  EC3D  F026         	call	_printf	;wreg free
  9420                           
  9421                           ;Modbus.c: 107:         printf("   Byte 07: 0x%02x - CRC Lo\r\n",ModbusData[7]);
  9422  00203A  0E19               	movlw	low STR_18
  9423  00203C  0100               	movlb	0	; () banked
  9424  00203E  6F7D               	movwf	printf@fmt& (0+255),b
  9425  002040  0EFD               	movlw	high STR_18
  9426  002042  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9427  002044  C107  F07F         	movff	_ModbusData+7,?_printf+2
  9428  002048  6B80               	clrf	(?_printf+3)& (0+255),b
  9429  00204A  EC3D  F026         	call	_printf	;wreg free
  9430                           
  9431                           ;Modbus.c: 109:     }else if(ModbusData[1] == 0x10){
  9432  00204E  EF24  F011         	goto	l723
  9433  002052                     l7979:
  9434                           
  9435                           ; BSR set to: 1
  9436  002052  0E10               	movlw	16
  9437  002054  1901               	xorwf	(_ModbusData+1)& (0+255),w,b
  9438  002056  A4D8               	btfss	status,2,c
  9439  002058  EF30  F010         	goto	u8151
  9440  00205C  EF32  F010         	goto	u8150
  9441  002060                     u8151:
  9442  002060  EF24  F011         	goto	l723
  9443  002064                     u8150:
  9444  002064                     
  9445                           ; BSR set to: 1
  9446                           ;Modbus.c: 111:         printf("   Byte 00: 0x%02x - Card Address\r\n",ModbusData[0]);
  9447  002064  0E75               	movlw	low STR_11
  9448  002066  0100               	movlb	0	; () banked
  9449  002068  6F7D               	movwf	printf@fmt& (0+255),b
  9450  00206A  0EFB               	movlw	high STR_11
  9451  00206C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9452  00206E  C100  F07F         	movff	_ModbusData,?_printf+2
  9453  002072  6B80               	clrf	(?_printf+3)& (0+255),b
  9454  002074  EC3D  F026         	call	_printf	;wreg free
  9455                           
  9456                           ;Modbus.c: 112:         printf("   Byte 01: 0x%02x - Function Code (Write Multi Reg)\r\n
      +                          ",ModbusData[1]);
  9457  002078  0ED0               	movlw	low STR_20
  9458  00207A  0100               	movlb	0	; () banked
  9459  00207C  6F7D               	movwf	printf@fmt& (0+255),b
  9460  00207E  0EF5               	movlw	high STR_20
  9461  002080  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9462  002082  C101  F07F         	movff	_ModbusData+1,?_printf+2
  9463  002086  6B80               	clrf	(?_printf+3)& (0+255),b
  9464  002088  EC3D  F026         	call	_printf	;wreg free
  9465                           
  9466                           ;Modbus.c: 113:         printf("   Byte 02: 0x%02x - 1st Reg Add Hi\r\n",ModbusData[2]);
  9467  00208C  0E4D               	movlw	low STR_13
  9468  00208E  0100               	movlb	0	; () banked
  9469  002090  6F7D               	movwf	printf@fmt& (0+255),b
  9470  002092  0EFA               	movlw	high STR_13
  9471  002094  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9472  002096  C102  F07F         	movff	_ModbusData+2,?_printf+2
  9473  00209A  6B80               	clrf	(?_printf+3)& (0+255),b
  9474  00209C  EC3D  F026         	call	_printf	;wreg free
  9475                           
  9476                           ;Modbus.c: 114:         printf("   Byte 03: 0x%02x - 1st Reg Add Lo\r\n",ModbusData[3]);
  9477  0020A0  0E73               	movlw	low STR_14
  9478  0020A2  0100               	movlb	0	; () banked
  9479  0020A4  6F7D               	movwf	printf@fmt& (0+255),b
  9480  0020A6  0EFA               	movlw	high STR_14
  9481  0020A8  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9482  0020AA  C103  F07F         	movff	_ModbusData+3,?_printf+2
  9483  0020AE  6B80               	clrf	(?_printf+3)& (0+255),b
  9484  0020B0  EC3D  F026         	call	_printf	;wreg free
  9485                           
  9486                           ;Modbus.c: 115:         printf("   Byte 04: 0x%02x - Num of Reg Hi\r\n",ModbusData[4]);
  9487  0020B4  0EE3               	movlw	low STR_15
  9488  0020B6  0100               	movlb	0	; () banked
  9489  0020B8  6F7D               	movwf	printf@fmt& (0+255),b
  9490  0020BA  0EFA               	movlw	high STR_15
  9491  0020BC  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9492  0020BE  C104  F07F         	movff	_ModbusData+4,?_printf+2
  9493  0020C2  6B80               	clrf	(?_printf+3)& (0+255),b
  9494  0020C4  EC3D  F026         	call	_printf	;wreg free
  9495                           
  9496                           ;Modbus.c: 116:         printf("   Byte 05: 0x%02x - Num of Reg Lo\r\n",ModbusData[5]);
  9497  0020C8  0E08               	movlw	low STR_16
  9498  0020CA  0100               	movlb	0	; () banked
  9499  0020CC  6F7D               	movwf	printf@fmt& (0+255),b
  9500  0020CE  0EFB               	movlw	high STR_16
  9501  0020D0  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9502  0020D2  C105  F07F         	movff	_ModbusData+5,?_printf+2
  9503  0020D6  6B80               	clrf	(?_printf+3)& (0+255),b
  9504  0020D8  EC3D  F026         	call	_printf	;wreg free
  9505                           
  9506                           ;Modbus.c: 117:         printf("   Byte 06: 0x%02x - Num Bytes More\r\n",ModbusData[6]);
  9507  0020DC  0E27               	movlw	low STR_25
  9508  0020DE  0100               	movlb	0	; () banked
  9509  0020E0  6F7D               	movwf	printf@fmt& (0+255),b
  9510  0020E2  0EFA               	movlw	high STR_25
  9511  0020E4  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9512  0020E6  C106  F07F         	movff	_ModbusData+6,?_printf+2
  9513  0020EA  6B80               	clrf	(?_printf+3)& (0+255),b
  9514  0020EC  EC3D  F026         	call	_printf	;wreg free
  9515  0020F0                     
  9516                           ;Modbus.c: 120:         int j = 1;
  9517  0020F0  0E00               	movlw	0
  9518  0020F2  0100               	movlb	0	; () banked
  9519  0020F4  6F95               	movwf	(PrintModbus@j+1)& (0+255),b
  9520  0020F6  0E01               	movlw	1
  9521  0020F8  6F94               	movwf	PrintModbus@j& (0+255),b
  9522  0020FA                     
  9523                           ; BSR set to: 0
  9524                           ;Modbus.c: 121:         for(i=7; i< ModDataCnt -2 ; i++ ){
  9525  0020FA  0E00               	movlw	0
  9526  0020FC  6F97               	movwf	(PrintModbus@i+1)& (0+255),b
  9527  0020FE  0E07               	movlw	7
  9528  002100  6F96               	movwf	PrintModbus@i& (0+255),b
  9529  002102  EFDC  F010         	goto	l7993
  9530  002106                     l7987:
  9531                           
  9532                           ; BSR set to: 0
  9533                           ;Modbus.c: 122:             printf("   Byte %02i: 0x%02x - Reg %i Hi (Add. 0x%02x%02x / 
      +                          Circuit %i)\r\n", i, ModbusData[i],j, ModbusData[2], ModbusData[3] + j-1,ModbusData[3] +
      +                           j-1);
  9534  002106  0E54               	movlw	low STR_26
  9535  002108  6F7D               	movwf	printf@fmt& (0+255),b
  9536  00210A  0EF5               	movlw	high STR_26
  9537  00210C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9538  00210E  C096  F07F         	movff	PrintModbus@i,?_printf+2
  9539  002112  C097  F080         	movff	PrintModbus@i+1,?_printf+3
  9540  002116  0E00               	movlw	low _ModbusData
  9541  002118  2596               	addwf	PrintModbus@i& (0+255),w,b
  9542  00211A  6ED9               	movwf	fsr2l,c
  9543  00211C  0E01               	movlw	high _ModbusData
  9544  00211E  2197               	addwfc	(PrintModbus@i+1)& (0+255),w,b
  9545  002120  6EDA               	movwf	fsr2h,c
  9546  002122  50DF               	movf	indf2,w,c
  9547  002124  6F8F               	movwf	??_PrintModbus& (0+255),b
  9548  002126  518F               	movf	??_PrintModbus& (0+255),w,b
  9549  002128  6F81               	movwf	(?_printf+4)& (0+255),b
  9550  00212A  6B82               	clrf	(?_printf+5)& (0+255),b
  9551  00212C  C094  F083         	movff	PrintModbus@j,?_printf+6
  9552  002130  C095  F084         	movff	PrintModbus@j+1,?_printf+7
  9553  002134  C102  F085         	movff	_ModbusData+2,?_printf+8
  9554  002138  6B86               	clrf	(?_printf+9)& (0+255),b
  9555  00213A  0101               	movlb	1	; () banked
  9556  00213C  5103               	movf	(_ModbusData+3)& (0+255),w,b
  9557  00213E  0100               	movlb	0	; () banked
  9558  002140  2594               	addwf	PrintModbus@j& (0+255),w,b
  9559  002142  6F90               	movwf	(??_PrintModbus+1)& (0+255),b
  9560  002144  0E00               	movlw	0
  9561  002146  2195               	addwfc	(PrintModbus@j+1)& (0+255),w,b
  9562  002148  6F91               	movwf	(??_PrintModbus+2)& (0+255),b
  9563  00214A  0EFF               	movlw	255
  9564  00214C  2590               	addwf	(??_PrintModbus+1)& (0+255),w,b
  9565  00214E  6F87               	movwf	(?_printf+10)& (0+255),b
  9566  002150  0EFF               	movlw	255
  9567  002152  2191               	addwfc	(??_PrintModbus+2)& (0+255),w,b
  9568  002154  6F88               	movwf	(?_printf+11)& (0+255),b
  9569  002156  0101               	movlb	1	; () banked
  9570  002158  5103               	movf	(_ModbusData+3)& (0+255),w,b
  9571  00215A  0100               	movlb	0	; () banked
  9572  00215C  2594               	addwf	PrintModbus@j& (0+255),w,b
  9573  00215E  6F92               	movwf	(??_PrintModbus+3)& (0+255),b
  9574  002160  0E00               	movlw	0
  9575  002162  2195               	addwfc	(PrintModbus@j+1)& (0+255),w,b
  9576  002164  6F93               	movwf	(??_PrintModbus+4)& (0+255),b
  9577  002166  0EFF               	movlw	255
  9578  002168  2592               	addwf	(??_PrintModbus+3)& (0+255),w,b
  9579  00216A  6F89               	movwf	(?_printf+12)& (0+255),b
  9580  00216C  0EFF               	movlw	255
  9581  00216E  2193               	addwfc	(??_PrintModbus+4)& (0+255),w,b
  9582  002170  6F8A               	movwf	(?_printf+13)& (0+255),b
  9583  002172  EC3D  F026         	call	_printf	;wreg free
  9584  002176                     
  9585                           ;Modbus.c: 123:             i++;
  9586  002176  0100               	movlb	0	; () banked
  9587  002178  4B96               	infsnz	PrintModbus@i& (0+255),f,b
  9588  00217A  2B97               	incf	(PrintModbus@i+1)& (0+255),f,b
  9589  00217C                     
  9590                           ; BSR set to: 0
  9591                           ;Modbus.c: 124:             printf("   Byte %02i: 0x%02x - Reg %i Lo\r\n", i, ModbusData
      +                          [i],j);
  9592  00217C  0E99               	movlw	low STR_27
  9593  00217E  6F7D               	movwf	printf@fmt& (0+255),b
  9594  002180  0EFB               	movlw	high STR_27
  9595  002182  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9596  002184  C096  F07F         	movff	PrintModbus@i,?_printf+2
  9597  002188  C097  F080         	movff	PrintModbus@i+1,?_printf+3
  9598  00218C  0E00               	movlw	low _ModbusData
  9599  00218E  2596               	addwf	PrintModbus@i& (0+255),w,b
  9600  002190  6ED9               	movwf	fsr2l,c
  9601  002192  0E01               	movlw	high _ModbusData
  9602  002194  2197               	addwfc	(PrintModbus@i+1)& (0+255),w,b
  9603  002196  6EDA               	movwf	fsr2h,c
  9604  002198  50DF               	movf	indf2,w,c
  9605  00219A  6F8F               	movwf	??_PrintModbus& (0+255),b
  9606  00219C  518F               	movf	??_PrintModbus& (0+255),w,b
  9607  00219E  6F81               	movwf	(?_printf+4)& (0+255),b
  9608  0021A0  6B82               	clrf	(?_printf+5)& (0+255),b
  9609  0021A2  C094  F083         	movff	PrintModbus@j,?_printf+6
  9610  0021A6  C095  F084         	movff	PrintModbus@j+1,?_printf+7
  9611  0021AA  EC3D  F026         	call	_printf	;wreg free
  9612                           
  9613                           ;Modbus.c: 125:             j++;
  9614  0021AE  0100               	movlb	0	; () banked
  9615  0021B0  4B94               	infsnz	PrintModbus@j& (0+255),f,b
  9616  0021B2  2B95               	incf	(PrintModbus@j+1)& (0+255),f,b
  9617                           
  9618                           ;Modbus.c: 126:         }
  9619  0021B4  4B96               	infsnz	PrintModbus@i& (0+255),f,b
  9620  0021B6  2B97               	incf	(PrintModbus@i+1)& (0+255),f,b
  9621  0021B8                     l7993:
  9622                           
  9623                           ; BSR set to: 0
  9624  0021B8  0EFE               	movlw	254
  9625  0021BA  6F8F               	movwf	??_PrintModbus& (0+255),b
  9626  0021BC  0EFF               	movlw	255
  9627  0021BE  6F90               	movwf	(??_PrintModbus+1)& (0+255),b
  9628  0021C0  C0DB  F091         	movff	_ModDataCnt,??_PrintModbus+2
  9629  0021C4  C0DC  F092         	movff	_ModDataCnt+1,??_PrintModbus+3
  9630  0021C8  518F               	movf	??_PrintModbus& (0+255),w,b
  9631  0021CA  2791               	addwf	(??_PrintModbus+2)& (0+255),f,b
  9632  0021CC  5190               	movf	(??_PrintModbus+1)& (0+255),w,b
  9633  0021CE  2392               	addwfc	(??_PrintModbus+3)& (0+255),f,b
  9634  0021D0  5191               	movf	(??_PrintModbus+2)& (0+255),w,b
  9635  0021D2  5D96               	subwf	PrintModbus@i& (0+255),w,b
  9636  0021D4  5197               	movf	(PrintModbus@i+1)& (0+255),w,b
  9637  0021D6  0A80               	xorlw	128
  9638  0021D8  6F93               	movwf	(??_PrintModbus+4)& (0+255),b
  9639  0021DA  5192               	movf	(??_PrintModbus+3)& (0+255),w,b
  9640  0021DC  0A80               	xorlw	128
  9641  0021DE  5993               	subwfb	(??_PrintModbus+4)& (0+255),w,b
  9642  0021E0  A0D8               	btfss	status,0,c
  9643  0021E2  EFF5  F010         	goto	u8161
  9644  0021E6  EFF7  F010         	goto	u8160
  9645  0021EA                     u8161:
  9646  0021EA  EF83  F010         	goto	l7987
  9647  0021EE                     u8160:
  9648  0021EE                     
  9649                           ; BSR set to: 0
  9650                           ;Modbus.c: 128:         printf("   Byte %02i: 0x%02x - CRC Hi\r\n",i, ModbusData[i]);
  9651  0021EE  0E60               	movlw	low STR_28
  9652  0021F0  6F7D               	movwf	printf@fmt& (0+255),b
  9653  0021F2  0EFC               	movlw	high STR_28
  9654  0021F4  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9655  0021F6  C096  F07F         	movff	PrintModbus@i,?_printf+2
  9656  0021FA  C097  F080         	movff	PrintModbus@i+1,?_printf+3
  9657  0021FE  0E00               	movlw	low _ModbusData
  9658  002200  2596               	addwf	PrintModbus@i& (0+255),w,b
  9659  002202  6ED9               	movwf	fsr2l,c
  9660  002204  0E01               	movlw	high _ModbusData
  9661  002206  2197               	addwfc	(PrintModbus@i+1)& (0+255),w,b
  9662  002208  6EDA               	movwf	fsr2h,c
  9663  00220A  50DF               	movf	indf2,w,c
  9664  00220C  6F8F               	movwf	??_PrintModbus& (0+255),b
  9665  00220E  518F               	movf	??_PrintModbus& (0+255),w,b
  9666  002210  6F81               	movwf	(?_printf+4)& (0+255),b
  9667  002212  6B82               	clrf	(?_printf+5)& (0+255),b
  9668  002214  EC3D  F026         	call	_printf	;wreg free
  9669                           
  9670                           ;Modbus.c: 129:         printf("   Byte %02i: 0x%02x - CRC Lo\r\n",i + 1, ModbusData[i +
      +                           1]);
  9671  002218  0E80               	movlw	low STR_29
  9672  00221A  0100               	movlb	0	; () banked
  9673  00221C  6F7D               	movwf	printf@fmt& (0+255),b
  9674  00221E  0EFC               	movlw	high STR_29
  9675  002220  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9676  002222  0E01               	movlw	1
  9677  002224  2596               	addwf	PrintModbus@i& (0+255),w,b
  9678  002226  6F7F               	movwf	(?_printf+2)& (0+255),b
  9679  002228  0E00               	movlw	0
  9680  00222A  2197               	addwfc	(PrintModbus@i+1)& (0+255),w,b
  9681  00222C  6F80               	movwf	(?_printf+3)& (0+255),b
  9682  00222E  0E01               	movlw	low (_ModbusData+1)
  9683  002230  2596               	addwf	PrintModbus@i& (0+255),w,b
  9684  002232  6ED9               	movwf	fsr2l,c
  9685  002234  0E01               	movlw	high (_ModbusData+1)
  9686  002236  2197               	addwfc	(PrintModbus@i+1)& (0+255),w,b
  9687  002238  6EDA               	movwf	fsr2h,c
  9688  00223A  50DF               	movf	indf2,w,c
  9689  00223C  6F8F               	movwf	??_PrintModbus& (0+255),b
  9690  00223E  518F               	movf	??_PrintModbus& (0+255),w,b
  9691  002240  6F81               	movwf	(?_printf+4)& (0+255),b
  9692  002242  6B82               	clrf	(?_printf+5)& (0+255),b
  9693  002244  EC3D  F026         	call	_printf	;wreg free
  9694  002248                     l723:
  9695                           
  9696                           ;Modbus.c: 133:     printf("\r\n");
  9697  002248  0E72               	movlw	low (STR_31+33)
  9698  00224A  0100               	movlb	0	; () banked
  9699  00224C  6F7D               	movwf	printf@fmt& (0+255),b
  9700  00224E  0EFB               	movlw	high (STR_31+33)
  9701  002250  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9702  002252  EC3D  F026         	call	_printf	;wreg free
  9703  002256  0012               	return		;funcret
  9704  002258                     __end_of_PrintModbus:
  9705                           	opt callstack 0
  9706                           
  9707 ;; *************** function _PrintModRespon *****************
  9708 ;; Defined at:
  9709 ;;		line 477 in file "Modbus.c"
  9710 ;; Parameters:    Size  Location     Type
  9711 ;;		None
  9712 ;; Auto vars:     Size  Location     Type
  9713 ;;  j               2   50[BANK0 ] int 
  9714 ;;  i               2   52[BANK0 ] int 
  9715 ;; Return value:  Size  Location     Type
  9716 ;;                  1    wreg      void 
  9717 ;; Registers used:
  9718 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9719 ;; Tracked objects:
  9720 ;;		On entry : 0/0
  9721 ;;		On exit  : 0/0
  9722 ;;		Unchanged: 0/0
  9723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9725 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9726 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9727 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9728 ;;Total ram usage:        7 bytes
  9729 ;; Hardware stack levels used:    1
  9730 ;; Hardware stack levels required when called:   13
  9731 ;; This function calls:
  9732 ;;		_EUSART2_is_tx_done
  9733 ;;		_EUSART2_is_tx_ready
  9734 ;;		_printf
  9735 ;; This function is called by:
  9736 ;;		_main
  9737 ;; This function uses a non-reentrant model
  9738 ;;
  9739                           
  9740                           	psect	text36
  9741  0016EE                     __ptext36:
  9742                           	opt callstack 0
  9743  0016EE                     _PrintModRespon:
  9744                           	opt callstack 17
  9745  0016EE                     
  9746                           ;Modbus.c: 481:     printf("Modbus Response:\r\n");
  9747  0016EE  0E12               	movlw	low STR_55
  9748  0016F0  0100               	movlb	0	; () banked
  9749  0016F2  6F7D               	movwf	printf@fmt& (0+255),b
  9750  0016F4  0EFF               	movlw	high STR_55
  9751  0016F6  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9752  0016F8  EC3D  F026         	call	_printf	;wreg free
  9753  0016FC                     
  9754                           ;Modbus.c: 484:     if(MBRespon[1] == 0x03){
  9755  0016FC  0E03               	movlw	3
  9756  0016FE  0102               	movlb	2	; () banked
  9757  001700  1958               	xorwf	(_MBRespon+1)& (0+255),w,b
  9758  001702  A4D8               	btfss	status,2,c
  9759  001704  EF86  F00B         	goto	u8171
  9760  001708  EF88  F00B         	goto	u8170
  9761  00170C                     u8171:
  9762  00170C  EF45  F00C         	goto	l8019
  9763  001710                     u8170:
  9764  001710                     
  9765                           ; BSR set to: 2
  9766                           ;Modbus.c: 487:         printf("   Byte 00: 0x%02x - Card Address\r\n", MBRespon[0]);
  9767  001710  0E75               	movlw	low STR_11
  9768  001712  0100               	movlb	0	; () banked
  9769  001714  6F7D               	movwf	printf@fmt& (0+255),b
  9770  001716  0EFB               	movlw	high STR_11
  9771  001718  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9772  00171A  C257  F07F         	movff	_MBRespon,?_printf+2
  9773  00171E  6B80               	clrf	(?_printf+3)& (0+255),b
  9774  001720  EC3D  F026         	call	_printf	;wreg free
  9775                           
  9776                           ;Modbus.c: 488:         printf("   Byte 01: 0x%02x - Function Code (Read Multi Reg)\r\n"
      +                          , MBRespon[1]);
  9777  001724  0E73               	movlw	low STR_12
  9778  001726  0100               	movlb	0	; () banked
  9779  001728  6F7D               	movwf	printf@fmt& (0+255),b
  9780  00172A  0EF6               	movlw	high STR_12
  9781  00172C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9782  00172E  C258  F07F         	movff	_MBRespon+1,?_printf+2
  9783  001732  6B80               	clrf	(?_printf+3)& (0+255),b
  9784  001734  EC3D  F026         	call	_printf	;wreg free
  9785                           
  9786                           ;Modbus.c: 489:         printf("   Byte 02: 0x%02x - Num Bytes More\r\n", MBRespon[2]);
  9787  001738  0E01               	movlw	low STR_58
  9788  00173A  0100               	movlb	0	; () banked
  9789  00173C  6F7D               	movwf	printf@fmt& (0+255),b
  9790  00173E  0EFA               	movlw	high STR_58
  9791  001740  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9792  001742  C259  F07F         	movff	_MBRespon+2,?_printf+2
  9793  001746  6B80               	clrf	(?_printf+3)& (0+255),b
  9794  001748  EC3D  F026         	call	_printf	;wreg free
  9795  00174C                     
  9796                           ;Modbus.c: 493:         int j = 1;
  9797  00174C  0E00               	movlw	0
  9798  00174E  0100               	movlb	0	; () banked
  9799  001750  6F93               	movwf	(PrintModRespon@j+1)& (0+255),b
  9800  001752  0E01               	movlw	1
  9801  001754  6F92               	movwf	PrintModRespon@j& (0+255),b
  9802  001756                     
  9803                           ; BSR set to: 0
  9804                           ;Modbus.c: 494:         for(i=0; i< MBRespon[2] ; i++ ){
  9805  001756  0E00               	movlw	0
  9806  001758  6F95               	movwf	(PrintModRespon@i+1)& (0+255),b
  9807  00175A  0E00               	movlw	0
  9808  00175C  6F94               	movwf	PrintModRespon@i& (0+255),b
  9809  00175E  EF00  F00C         	goto	l8015
  9810  001762                     l8009:
  9811                           
  9812                           ; BSR set to: 0
  9813                           ;Modbus.c: 495:             printf("   Byte %02i: 0x%02x - Reg %i Hi (Add. 0x%02x %02x)\
      +                          r\n", i+1, MBRespon[i+3],j, ModbusData[2], ModbusData[3] +j-1);
  9814  001762  0EA9               	movlw	low STR_59
  9815  001764  6F7D               	movwf	printf@fmt& (0+255),b
  9816  001766  0EF6               	movlw	high STR_59
  9817  001768  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9818  00176A  0E01               	movlw	1
  9819  00176C  2594               	addwf	PrintModRespon@i& (0+255),w,b
  9820  00176E  6F7F               	movwf	(?_printf+2)& (0+255),b
  9821  001770  0E00               	movlw	0
  9822  001772  2195               	addwfc	(PrintModRespon@i+1)& (0+255),w,b
  9823  001774  6F80               	movwf	(?_printf+3)& (0+255),b
  9824  001776  0E5A               	movlw	low (_MBRespon+3)
  9825  001778  2594               	addwf	PrintModRespon@i& (0+255),w,b
  9826  00177A  6ED9               	movwf	fsr2l,c
  9827  00177C  0E02               	movlw	high (_MBRespon+3)
  9828  00177E  2195               	addwfc	(PrintModRespon@i+1)& (0+255),w,b
  9829  001780  6EDA               	movwf	fsr2h,c
  9830  001782  50DF               	movf	indf2,w,c
  9831  001784  6F8F               	movwf	??_PrintModRespon& (0+255),b
  9832  001786  518F               	movf	??_PrintModRespon& (0+255),w,b
  9833  001788  6F81               	movwf	(?_printf+4)& (0+255),b
  9834  00178A  6B82               	clrf	(?_printf+5)& (0+255),b
  9835  00178C  C092  F083         	movff	PrintModRespon@j,?_printf+6
  9836  001790  C093  F084         	movff	PrintModRespon@j+1,?_printf+7
  9837  001794  C102  F085         	movff	_ModbusData+2,?_printf+8
  9838  001798  6B86               	clrf	(?_printf+9)& (0+255),b
  9839  00179A  0101               	movlb	1	; () banked
  9840  00179C  5103               	movf	(_ModbusData+3)& (0+255),w,b
  9841  00179E  0100               	movlb	0	; () banked
  9842  0017A0  2592               	addwf	PrintModRespon@j& (0+255),w,b
  9843  0017A2  6F90               	movwf	(??_PrintModRespon+1)& (0+255),b
  9844  0017A4  0E00               	movlw	0
  9845  0017A6  2193               	addwfc	(PrintModRespon@j+1)& (0+255),w,b
  9846  0017A8  6F91               	movwf	(??_PrintModRespon+2)& (0+255),b
  9847  0017AA  0EFF               	movlw	255
  9848  0017AC  2590               	addwf	(??_PrintModRespon+1)& (0+255),w,b
  9849  0017AE  6F87               	movwf	(?_printf+10)& (0+255),b
  9850  0017B0  0EFF               	movlw	255
  9851  0017B2  2191               	addwfc	(??_PrintModRespon+2)& (0+255),w,b
  9852  0017B4  6F88               	movwf	(?_printf+11)& (0+255),b
  9853  0017B6  EC3D  F026         	call	_printf	;wreg free
  9854  0017BA                     
  9855                           ;Modbus.c: 496:             i++;
  9856  0017BA  0100               	movlb	0	; () banked
  9857  0017BC  4B94               	infsnz	PrintModRespon@i& (0+255),f,b
  9858  0017BE  2B95               	incf	(PrintModRespon@i+1)& (0+255),f,b
  9859  0017C0                     
  9860                           ; BSR set to: 0
  9861                           ;Modbus.c: 497:             printf("   Byte %02i: 0x%02x - Reg %i Lo\r\n", i+1, MBRespon
      +                          [i+3],j);
  9862  0017C0  0E99               	movlw	low STR_27
  9863  0017C2  6F7D               	movwf	printf@fmt& (0+255),b
  9864  0017C4  0EFB               	movlw	high STR_27
  9865  0017C6  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9866  0017C8  0E01               	movlw	1
  9867  0017CA  2594               	addwf	PrintModRespon@i& (0+255),w,b
  9868  0017CC  6F7F               	movwf	(?_printf+2)& (0+255),b
  9869  0017CE  0E00               	movlw	0
  9870  0017D0  2195               	addwfc	(PrintModRespon@i+1)& (0+255),w,b
  9871  0017D2  6F80               	movwf	(?_printf+3)& (0+255),b
  9872  0017D4  0E5A               	movlw	low (_MBRespon+3)
  9873  0017D6  2594               	addwf	PrintModRespon@i& (0+255),w,b
  9874  0017D8  6ED9               	movwf	fsr2l,c
  9875  0017DA  0E02               	movlw	high (_MBRespon+3)
  9876  0017DC  2195               	addwfc	(PrintModRespon@i+1)& (0+255),w,b
  9877  0017DE  6EDA               	movwf	fsr2h,c
  9878  0017E0  50DF               	movf	indf2,w,c
  9879  0017E2  6F8F               	movwf	??_PrintModRespon& (0+255),b
  9880  0017E4  518F               	movf	??_PrintModRespon& (0+255),w,b
  9881  0017E6  6F81               	movwf	(?_printf+4)& (0+255),b
  9882  0017E8  6B82               	clrf	(?_printf+5)& (0+255),b
  9883  0017EA  C092  F083         	movff	PrintModRespon@j,?_printf+6
  9884  0017EE  C093  F084         	movff	PrintModRespon@j+1,?_printf+7
  9885  0017F2  EC3D  F026         	call	_printf	;wreg free
  9886                           
  9887                           ;Modbus.c: 498:             j++;
  9888  0017F6  0100               	movlb	0	; () banked
  9889  0017F8  4B92               	infsnz	PrintModRespon@j& (0+255),f,b
  9890  0017FA  2B93               	incf	(PrintModRespon@j+1)& (0+255),f,b
  9891                           
  9892                           ;Modbus.c: 499:         }
  9893  0017FC  4B94               	infsnz	PrintModRespon@i& (0+255),f,b
  9894  0017FE  2B95               	incf	(PrintModRespon@i+1)& (0+255),f,b
  9895  001800                     l8015:
  9896                           
  9897                           ; BSR set to: 0
  9898  001800  0102               	movlb	2	; () banked
  9899  001802  5159               	movf	(_MBRespon+2)& (0+255),w,b
  9900  001804  0100               	movlb	0	; () banked
  9901  001806  6F8F               	movwf	??_PrintModRespon& (0+255),b
  9902  001808  6B90               	clrf	(??_PrintModRespon+1)& (0+255),b
  9903  00180A  518F               	movf	??_PrintModRespon& (0+255),w,b
  9904  00180C  5D94               	subwf	PrintModRespon@i& (0+255),w,b
  9905  00180E  5195               	movf	(PrintModRespon@i+1)& (0+255),w,b
  9906  001810  0A80               	xorlw	128
  9907  001812  6F91               	movwf	(??_PrintModRespon+2)& (0+255),b
  9908  001814  5190               	movf	(??_PrintModRespon+1)& (0+255),w,b
  9909  001816  0A80               	xorlw	128
  9910  001818  5991               	subwfb	(??_PrintModRespon+2)& (0+255),w,b
  9911  00181A  A0D8               	btfss	status,0,c
  9912  00181C  EF12  F00C         	goto	u8181
  9913  001820  EF14  F00C         	goto	u8180
  9914  001824                     u8181:
  9915  001824  EFB1  F00B         	goto	l8009
  9916  001828                     u8180:
  9917  001828                     
  9918                           ; BSR set to: 0
  9919                           ;Modbus.c: 502:         printf("   Byte %02i: 0x%02x - CRC Hi\r\n", i +1 , MBRespon[i + 
      +                          2 + 1] );
  9920  001828  0E60               	movlw	low STR_28
  9921  00182A  6F7D               	movwf	printf@fmt& (0+255),b
  9922  00182C  0EFC               	movlw	high STR_28
  9923  00182E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9924  001830  0E01               	movlw	1
  9925  001832  2594               	addwf	PrintModRespon@i& (0+255),w,b
  9926  001834  6F7F               	movwf	(?_printf+2)& (0+255),b
  9927  001836  0E00               	movlw	0
  9928  001838  2195               	addwfc	(PrintModRespon@i+1)& (0+255),w,b
  9929  00183A  6F80               	movwf	(?_printf+3)& (0+255),b
  9930  00183C  0E5A               	movlw	low (_MBRespon+3)
  9931  00183E  2594               	addwf	PrintModRespon@i& (0+255),w,b
  9932  001840  6ED9               	movwf	fsr2l,c
  9933  001842  0E02               	movlw	high (_MBRespon+3)
  9934  001844  2195               	addwfc	(PrintModRespon@i+1)& (0+255),w,b
  9935  001846  6EDA               	movwf	fsr2h,c
  9936  001848  50DF               	movf	indf2,w,c
  9937  00184A  6F8F               	movwf	??_PrintModRespon& (0+255),b
  9938  00184C  518F               	movf	??_PrintModRespon& (0+255),w,b
  9939  00184E  6F81               	movwf	(?_printf+4)& (0+255),b
  9940  001850  6B82               	clrf	(?_printf+5)& (0+255),b
  9941  001852  EC3D  F026         	call	_printf	;wreg free
  9942                           
  9943                           ;Modbus.c: 503:         printf("   Byte %02i: 0x%02x - CRC Lo\r\n", i +2 , MBRespon[i + 
      +                          2 + 2] );
  9944  001856  0E80               	movlw	low STR_29
  9945  001858  0100               	movlb	0	; () banked
  9946  00185A  6F7D               	movwf	printf@fmt& (0+255),b
  9947  00185C  0EFC               	movlw	high STR_29
  9948  00185E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9949  001860  0E02               	movlw	2
  9950  001862  2594               	addwf	PrintModRespon@i& (0+255),w,b
  9951  001864  6F7F               	movwf	(?_printf+2)& (0+255),b
  9952  001866  0E00               	movlw	0
  9953  001868  2195               	addwfc	(PrintModRespon@i+1)& (0+255),w,b
  9954  00186A  6F80               	movwf	(?_printf+3)& (0+255),b
  9955  00186C  0E5B               	movlw	low (_MBRespon+4)
  9956  00186E  2594               	addwf	PrintModRespon@i& (0+255),w,b
  9957  001870  6ED9               	movwf	fsr2l,c
  9958  001872  0E02               	movlw	high (_MBRespon+4)
  9959  001874  2195               	addwfc	(PrintModRespon@i+1)& (0+255),w,b
  9960  001876  6EDA               	movwf	fsr2h,c
  9961  001878  50DF               	movf	indf2,w,c
  9962  00187A  6F8F               	movwf	??_PrintModRespon& (0+255),b
  9963  00187C  518F               	movf	??_PrintModRespon& (0+255),w,b
  9964  00187E  6F81               	movwf	(?_printf+4)& (0+255),b
  9965  001880  6B82               	clrf	(?_printf+5)& (0+255),b
  9966  001882  EC3D  F026         	call	_printf	;wreg free
  9967                           
  9968                           ;Modbus.c: 505:     }else if(MBRespon[1] == 0x10){
  9969  001886  EFE3  F00C         	goto	l8035
  9970  00188A                     l8019:
  9971                           
  9972                           ; BSR set to: 2
  9973  00188A  0E10               	movlw	16
  9974  00188C  1958               	xorwf	(_MBRespon+1)& (0+255),w,b
  9975  00188E  A4D8               	btfss	status,2,c
  9976  001890  EF4C  F00C         	goto	u8191
  9977  001894  EF4E  F00C         	goto	u8190
  9978  001898                     u8191:
  9979  001898  EFA0  F00C         	goto	l8023
  9980  00189C                     u8190:
  9981  00189C                     
  9982                           ; BSR set to: 2
  9983                           ;Modbus.c: 508:         printf("   Byte 00: 0x%02x - Card Address\r\n", MBRespon[0]);
  9984  00189C  0E75               	movlw	low STR_11
  9985  00189E  0100               	movlb	0	; () banked
  9986  0018A0  6F7D               	movwf	printf@fmt& (0+255),b
  9987  0018A2  0EFB               	movlw	high STR_11
  9988  0018A4  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9989  0018A6  C257  F07F         	movff	_MBRespon,?_printf+2
  9990  0018AA  6B80               	clrf	(?_printf+3)& (0+255),b
  9991  0018AC  EC3D  F026         	call	_printf	;wreg free
  9992                           
  9993                           ;Modbus.c: 509:         printf("   Byte 01: 0x%02x - Function Code (Read Multi Reg)\r\n"
      +                          , MBRespon[1]);
  9994  0018B0  0E73               	movlw	low STR_12
  9995  0018B2  0100               	movlb	0	; () banked
  9996  0018B4  6F7D               	movwf	printf@fmt& (0+255),b
  9997  0018B6  0EF6               	movlw	high STR_12
  9998  0018B8  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9999  0018BA  C258  F07F         	movff	_MBRespon+1,?_printf+2
 10000  0018BE  6B80               	clrf	(?_printf+3)& (0+255),b
 10001  0018C0  EC3D  F026         	call	_printf	;wreg free
 10002                           
 10003                           ;Modbus.c: 510:         printf("   Byte 02: 0x%02x - 1st Reg Add Hi\r\n", MBRespon[2]);
 10004  0018C4  0E4D               	movlw	low STR_13
 10005  0018C6  0100               	movlb	0	; () banked
 10006  0018C8  6F7D               	movwf	printf@fmt& (0+255),b
 10007  0018CA  0EFA               	movlw	high STR_13
 10008  0018CC  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10009  0018CE  C259  F07F         	movff	_MBRespon+2,?_printf+2
 10010  0018D2  6B80               	clrf	(?_printf+3)& (0+255),b
 10011  0018D4  EC3D  F026         	call	_printf	;wreg free
 10012                           
 10013                           ;Modbus.c: 511:         printf("   Byte 03: 0x%02x - 1st Reg Add Lo\r\n", MBRespon[3]);
 10014  0018D8  0E73               	movlw	low STR_14
 10015  0018DA  0100               	movlb	0	; () banked
 10016  0018DC  6F7D               	movwf	printf@fmt& (0+255),b
 10017  0018DE  0EFA               	movlw	high STR_14
 10018  0018E0  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10019  0018E2  C25A  F07F         	movff	_MBRespon+3,?_printf+2
 10020  0018E6  6B80               	clrf	(?_printf+3)& (0+255),b
 10021  0018E8  EC3D  F026         	call	_printf	;wreg free
 10022                           
 10023                           ;Modbus.c: 512:         printf("   Byte 04: 0x%02x - Num of Reg Hi\r\n", MBRespon[4]);
 10024  0018EC  0EE3               	movlw	low STR_15
 10025  0018EE  0100               	movlb	0	; () banked
 10026  0018F0  6F7D               	movwf	printf@fmt& (0+255),b
 10027  0018F2  0EFA               	movlw	high STR_15
 10028  0018F4  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10029  0018F6  C25B  F07F         	movff	_MBRespon+4,?_printf+2
 10030  0018FA  6B80               	clrf	(?_printf+3)& (0+255),b
 10031  0018FC  EC3D  F026         	call	_printf	;wreg free
 10032                           
 10033                           ;Modbus.c: 513:         printf("   Byte 05: 0x%02x - Num of Reg Lo\r\n", MBRespon[5]);
 10034  001900  0E08               	movlw	low STR_16
 10035  001902  0100               	movlb	0	; () banked
 10036  001904  6F7D               	movwf	printf@fmt& (0+255),b
 10037  001906  0EFB               	movlw	high STR_16
 10038  001908  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10039  00190A  C25C  F07F         	movff	_MBRespon+5,?_printf+2
 10040  00190E  6B80               	clrf	(?_printf+3)& (0+255),b
 10041  001910  EC3D  F026         	call	_printf	;wreg free
 10042                           
 10043                           ;Modbus.c: 517:         printf("   Byte 06: 0x%02x - CRC Hi\r\n", MBRespon[6]);
 10044  001914  0EDD               	movlw	low STR_17
 10045  001916  0100               	movlb	0	; () banked
 10046  001918  6F7D               	movwf	printf@fmt& (0+255),b
 10047  00191A  0EFC               	movlw	high STR_17
 10048  00191C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10049  00191E  C25D  F07F         	movff	_MBRespon+6,?_printf+2
 10050  001922  6B80               	clrf	(?_printf+3)& (0+255),b
 10051  001924  EC3D  F026         	call	_printf	;wreg free
 10052                           
 10053                           ;Modbus.c: 518:         printf("   Byte 07: 0x%02x - CRC Hi\r\n", MBRespon[7]);
 10054  001928  0EFB               	movlw	low STR_70
 10055  00192A  0100               	movlb	0	; () banked
 10056  00192C  6F7D               	movwf	printf@fmt& (0+255),b
 10057  00192E  0EFC               	movlw	high STR_70
 10058  001930  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10059  001932  C25E  F07F         	movff	_MBRespon+7,?_printf+2
 10060  001936  6B80               	clrf	(?_printf+3)& (0+255),b
 10061  001938  EC3D  F026         	call	_printf	;wreg free
 10062                           
 10063                           ;Modbus.c: 520:     }else{
 10064  00193C  EFE3  F00C         	goto	l8035
 10065  001940                     l8023:
 10066                           
 10067                           ; BSR set to: 2
 10068                           ;Modbus.c: 521:         for(i=0; i< MBResCnt ; i++ ){
 10069  001940  0E00               	movlw	0
 10070  001942  0100               	movlb	0	; () banked
 10071  001944  6F95               	movwf	(PrintModRespon@i+1)& (0+255),b
 10072  001946  0E00               	movlw	0
 10073  001948  6F94               	movwf	PrintModRespon@i& (0+255),b
 10074  00194A  EFD4  F00C         	goto	l8033
 10075  00194E                     l8025:
 10076  00194E  ECBA  F026         	call	_EUSART2_is_tx_ready	;wreg free
 10077  001952  0900               	iorlw	0
 10078  001954  B4D8               	btfsc	status,2,c
 10079  001956  EFAF  F00C         	goto	u8201
 10080  00195A  EFB1  F00C         	goto	u8200
 10081  00195E                     u8201:
 10082  00195E  EFA7  F00C         	goto	l8025
 10083  001962                     u8200:
 10084  001962                     
 10085                           ;Modbus.c: 523:             printf("   Byte %02i: 0x%02x \r\n", i, MBRespon[i]);
 10086  001962  0E27               	movlw	low STR_71
 10087  001964  0100               	movlb	0	; () banked
 10088  001966  6F7D               	movwf	printf@fmt& (0+255),b
 10089  001968  0EFE               	movlw	high STR_71
 10090  00196A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10091  00196C  C094  F07F         	movff	PrintModRespon@i,?_printf+2
 10092  001970  C095  F080         	movff	PrintModRespon@i+1,?_printf+3
 10093  001974  0E57               	movlw	low _MBRespon
 10094  001976  2594               	addwf	PrintModRespon@i& (0+255),w,b
 10095  001978  6ED9               	movwf	fsr2l,c
 10096  00197A  0E02               	movlw	high _MBRespon
 10097  00197C  2195               	addwfc	(PrintModRespon@i+1)& (0+255),w,b
 10098  00197E  6EDA               	movwf	fsr2h,c
 10099  001980  50DF               	movf	indf2,w,c
 10100  001982  6F8F               	movwf	??_PrintModRespon& (0+255),b
 10101  001984  518F               	movf	??_PrintModRespon& (0+255),w,b
 10102  001986  6F81               	movwf	(?_printf+4)& (0+255),b
 10103  001988  6B82               	clrf	(?_printf+5)& (0+255),b
 10104  00198A  EC3D  F026         	call	_printf	;wreg free
 10105  00198E                     l8029:
 10106  00198E  ECDE  F026         	call	_EUSART2_is_tx_done	;wreg free
 10107  001992  0900               	iorlw	0
 10108  001994  B4D8               	btfsc	status,2,c
 10109  001996  EFCF  F00C         	goto	u8211
 10110  00199A  EFD1  F00C         	goto	u8210
 10111  00199E                     u8211:
 10112  00199E  EFC7  F00C         	goto	l8029
 10113  0019A2                     u8210:
 10114  0019A2                     
 10115                           ;Modbus.c: 525:         }
 10116  0019A2  0100               	movlb	0	; () banked
 10117  0019A4  4B94               	infsnz	PrintModRespon@i& (0+255),f,b
 10118  0019A6  2B95               	incf	(PrintModRespon@i+1)& (0+255),f,b
 10119  0019A8                     l8033:
 10120                           
 10121                           ; BSR set to: 0
 10122  0019A8  51D7               	movf	_MBResCnt& (0+255),w,b
 10123  0019AA  5D94               	subwf	PrintModRespon@i& (0+255),w,b
 10124  0019AC  5195               	movf	(PrintModRespon@i+1)& (0+255),w,b
 10125  0019AE  0A80               	xorlw	128
 10126  0019B0  6F8F               	movwf	??_PrintModRespon& (0+255),b
 10127  0019B2  51D8               	movf	(_MBResCnt+1)& (0+255),w,b
 10128  0019B4  0A80               	xorlw	128
 10129  0019B6  598F               	subwfb	??_PrintModRespon& (0+255),w,b
 10130  0019B8  A0D8               	btfss	status,0,c
 10131  0019BA  EFE1  F00C         	goto	u8221
 10132  0019BE  EFE3  F00C         	goto	u8220
 10133  0019C2                     u8221:
 10134  0019C2  EFA7  F00C         	goto	l8025
 10135  0019C6                     u8220:
 10136  0019C6                     l8035:
 10137                           
 10138                           ;Modbus.c: 527:     printf("\r\n\n");
 10139  0019C6  0E50               	movlw	low (STR_103+65)
 10140  0019C8  0100               	movlb	0	; () banked
 10141  0019CA  6F7D               	movwf	printf@fmt& (0+255),b
 10142  0019CC  0EF5               	movlw	high (STR_103+65)
 10143  0019CE  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10144  0019D0  EC3D  F026         	call	_printf	;wreg free
 10145  0019D4  0012               	return		;funcret
 10146  0019D6                     __end_of_PrintModRespon:
 10147                           	opt callstack 0
 10148                           
 10149 ;; *************** function _EUSART2_is_tx_ready *****************
 10150 ;; Defined at:
 10151 ;;		line 134 in file "mcc_generated_files/eusart2.c"
 10152 ;; Parameters:    Size  Location     Type
 10153 ;;		None
 10154 ;; Auto vars:     Size  Location     Type
 10155 ;;		None
 10156 ;; Return value:  Size  Location     Type
 10157 ;;                  1    wreg      _Bool 
 10158 ;; Registers used:
 10159 ;;		wreg, status,2
 10160 ;; Tracked objects:
 10161 ;;		On entry : 0/0
 10162 ;;		On exit  : 0/0
 10163 ;;		Unchanged: 0/0
 10164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10169 ;;Total ram usage:        0 bytes
 10170 ;; Hardware stack levels used:    1
 10171 ;; Hardware stack levels required when called:    4
 10172 ;; This function calls:
 10173 ;;		Nothing
 10174 ;; This function is called by:
 10175 ;;		_PrintModRespon
 10176 ;; This function uses a non-reentrant model
 10177 ;;
 10178                           
 10179                           	psect	text37
 10180  004D74                     __ptext37:
 10181                           	opt callstack 0
 10182  004D74                     _EUSART2_is_tx_ready:
 10183                           	opt callstack 25
 10184  004D74                     
 10185                           ;mcc_generated_files/eusart2.c: 136:     return (eusart2TxBufferRemaining ? 1 : 0);
 10186  004D74  0100               	movlb	0	; () banked
 10187  004D76  51FF               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 10188  004D78  A4D8               	btfss	status,2,c
 10189  004D7A  EFC1  F026         	goto	u7431
 10190  004D7E  EFC4  F026         	goto	u7430
 10191  004D82                     u7431:
 10192  004D82  0E01               	movlw	1
 10193  004D84  EFC5  F026         	goto	u7440
 10194  004D88                     u7430:
 10195  004D88  0E00               	movlw	0
 10196  004D8A                     u7440:
 10197  004D8A                     
 10198                           ; BSR set to: 0
 10199  004D8A  0012               	return		;funcret
 10200  004D8C                     __end_of_EUSART2_is_tx_ready:
 10201                           	opt callstack 0
 10202                           
 10203 ;; *************** function _EUSART2_is_tx_done *****************
 10204 ;; Defined at:
 10205 ;;		line 144 in file "mcc_generated_files/eusart2.c"
 10206 ;; Parameters:    Size  Location     Type
 10207 ;;		None
 10208 ;; Auto vars:     Size  Location     Type
 10209 ;;		None
 10210 ;; Return value:  Size  Location     Type
 10211 ;;                  1    wreg      _Bool 
 10212 ;; Registers used:
 10213 ;;		wreg
 10214 ;; Tracked objects:
 10215 ;;		On entry : 0/0
 10216 ;;		On exit  : 0/0
 10217 ;;		Unchanged: 0/0
 10218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10223 ;;Total ram usage:        0 bytes
 10224 ;; Hardware stack levels used:    1
 10225 ;; Hardware stack levels required when called:    4
 10226 ;; This function calls:
 10227 ;;		Nothing
 10228 ;; This function is called by:
 10229 ;;		_PrintModRespon
 10230 ;; This function uses a non-reentrant model
 10231 ;;
 10232                           
 10233                           	psect	text38
 10234  004DBC                     __ptext38:
 10235                           	opt callstack 0
 10236  004DBC                     _EUSART2_is_tx_done:
 10237                           	opt callstack 25
 10238  004DBC                     
 10239                           ;mcc_generated_files/eusart2.c: 146:     return TX2STAbits.TRMT;
 10240  004DBC  010E               	movlb	14	; () banked
 10241  004DBE  B39E               	btfsc	158,1,b	;volatile
 10242  004DC0  EFE4  F026         	goto	u7451
 10243  004DC4  EFE7  F026         	goto	u7450
 10244  004DC8                     u7451:
 10245  004DC8  0E01               	movlw	1
 10246  004DCA  EFE8  F026         	goto	u7456
 10247  004DCE                     u7450:
 10248  004DCE  0E00               	movlw	0
 10249  004DD0                     u7456:
 10250  004DD0                     
 10251                           ; BSR set to: 14
 10252  004DD0  0012               	return		;funcret
 10253  004DD2                     __end_of_EUSART2_is_tx_done:
 10254                           	opt callstack 0
 10255                           
 10256 ;; *************** function _PrintMB400 *****************
 10257 ;; Defined at:
 10258 ;;		line 23 in file "Modbus.c"
 10259 ;; Parameters:    Size  Location     Type
 10260 ;;		None
 10261 ;; Auto vars:     Size  Location     Type
 10262 ;;  i               2   84[COMRAM] int 
 10263 ;; Return value:  Size  Location     Type
 10264 ;;                  1    wreg      void 
 10265 ;; Registers used:
 10266 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10267 ;; Tracked objects:
 10268 ;;		On entry : 0/0
 10269 ;;		On exit  : 0/0
 10270 ;;		Unchanged: 0/0
 10271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10273 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10275 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10276 ;;Total ram usage:        2 bytes
 10277 ;; Hardware stack levels used:    1
 10278 ;; Hardware stack levels required when called:   13
 10279 ;; This function calls:
 10280 ;;		_printf
 10281 ;; This function is called by:
 10282 ;;		_main
 10283 ;; This function uses a non-reentrant model
 10284 ;;
 10285                           
 10286                           	psect	text39
 10287  0043EA                     __ptext39:
 10288                           	opt callstack 0
 10289  0043EA                     _PrintMB400:
 10290                           	opt callstack 17
 10291  0043EA                     
 10292                           ;Modbus.c: 26:     printf("UpdatedMB400 \r\n");
 10293  0043EA  0E6A               	movlw	low STR_6
 10294  0043EC  0100               	movlb	0	; () banked
 10295  0043EE  6F7D               	movwf	printf@fmt& (0+255),b
 10296  0043F0  0EFF               	movlw	high STR_6
 10297  0043F2  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10298  0043F4  EC3D  F026         	call	_printf	;wreg free
 10299  0043F8                     
 10300                           ;Modbus.c: 29:     for(i=0; i<32; i++ ){
 10301  0043F8  0E00               	movlw	0
 10302  0043FA  6E56               	movwf	(PrintMB400@i+1)^0,c
 10303  0043FC  0E00               	movlw	0
 10304  0043FE  6E55               	movwf	PrintMB400@i^0,c
 10305  004400                     l7907:
 10306                           
 10307                           ;Modbus.c: 30:         printf("   Reg: %i Data: 0x%04x \r\n", i, MB400xx[i]);
 10308  004400  0EA9               	movlw	low STR_7
 10309  004402  0100               	movlb	0	; () banked
 10310  004404  6F7D               	movwf	printf@fmt& (0+255),b
 10311  004406  0EFD               	movlw	high STR_7
 10312  004408  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10313  00440A  C055  F07F         	movff	PrintMB400@i,?_printf+2
 10314  00440E  C056  F080         	movff	PrintMB400@i+1,?_printf+3
 10315  004412  90D8               	bcf	status,0,c
 10316  004414  3455               	rlcf	PrintMB400@i^0,w,c
 10317  004416  6ED9               	movwf	fsr2l,c
 10318  004418  3456               	rlcf	(PrintMB400@i+1)^0,w,c
 10319  00441A  6EDA               	movwf	fsr2h,c
 10320  00441C  0E64               	movlw	low _MB400xx
 10321  00441E  26D9               	addwf	fsr2l,f,c
 10322  004420  0E04               	movlw	high _MB400xx
 10323  004422  22DA               	addwfc	fsr2h,f,c
 10324  004424  CFDE F081          	movff	postinc2,?_printf+4
 10325  004428  CFDD F082          	movff	postdec2,?_printf+5
 10326  00442C  EC3D  F026         	call	_printf	;wreg free
 10327  004430                     
 10328                           ;Modbus.c: 31:     }
 10329  004430  4A55               	infsnz	PrintMB400@i^0,f,c
 10330  004432  2A56               	incf	(PrintMB400@i+1)^0,f,c
 10331  004434  BE56               	btfsc	(PrintMB400@i+1)^0,7,c
 10332  004436  EF26  F022         	goto	u8101
 10333  00443A  5056               	movf	(PrintMB400@i+1)^0,w,c
 10334  00443C  E109               	bnz	u8100
 10335  00443E  0E20               	movlw	32
 10336  004440  5C55               	subwf	PrintMB400@i^0,w,c
 10337  004442  A0D8               	btfss	status,0,c
 10338  004444  EF26  F022         	goto	u8101
 10339  004448  EF28  F022         	goto	u8100
 10340  00444C                     u8101:
 10341  00444C  EF00  F022         	goto	l7907
 10342  004450                     u8100:
 10343  004450  0012               	return		;funcret
 10344  004452                     __end_of_PrintMB400:
 10345                           	opt callstack 0
 10346                           
 10347 ;; *************** function _ModbusRx *****************
 10348 ;; Defined at:
 10349 ;;		line 569 in file "Modbus.c"
 10350 ;; Parameters:    Size  Location     Type
 10351 ;;		None
 10352 ;; Auto vars:     Size  Location     Type
 10353 ;;		None
 10354 ;; Return value:  Size  Location     Type
 10355 ;;                  1    wreg      _Bool 
 10356 ;; Registers used:
 10357 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10358 ;; Tracked objects:
 10359 ;;		On entry : 0/0
 10360 ;;		On exit  : 0/0
 10361 ;;		Unchanged: 0/0
 10362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10365 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10366 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10367 ;;Total ram usage:        1 bytes
 10368 ;; Hardware stack levels used:    1
 10369 ;; Hardware stack levels required when called:   14
 10370 ;; This function calls:
 10371 ;;		_AddRxBuffToModBus
 10372 ;;		_ClearRxBuff
 10373 ;;		_EUSART1_Read
 10374 ;;		_EUSART1_is_rx_ready
 10375 ;;		_RXMode
 10376 ;;		_checkCRC
 10377 ;;		_printf
 10378 ;; This function is called by:
 10379 ;;		_main
 10380 ;; This function uses a non-reentrant model
 10381 ;;
 10382                           
 10383                           	psect	text40
 10384  0030A0                     __ptext40:
 10385                           	opt callstack 0
 10386  0030A0                     _ModbusRx:
 10387                           	opt callstack 16
 10388  0030A0                     
 10389                           ;Modbus.c: 570:     RXMode();
 10390  0030A0  EC38  F027         	call	_RXMode	;wreg free
 10391  0030A4                     
 10392                           ;Modbus.c: 571:     if(EUSART1_is_rx_ready()){
 10393  0030A4  ECC6  F026         	call	_EUSART1_is_rx_ready	;wreg free
 10394  0030A8  0900               	iorlw	0
 10395  0030AA  B4D8               	btfsc	status,2,c
 10396  0030AC  EF5A  F018         	goto	u7771
 10397  0030B0  EF5C  F018         	goto	u7770
 10398  0030B4                     u7771:
 10399  0030B4  EF0C  F019         	goto	l7739
 10400  0030B8                     u7770:
 10401  0030B8                     
 10402                           ;Modbus.c: 572:         if(Debug ==1){
 10403  0030B8  0100               	movlb	0	; () banked
 10404  0030BA  05DF               	decf	_Debug& (0+255),w,b
 10405  0030BC  A4D8               	btfss	status,2,c
 10406  0030BE  EF63  F018         	goto	u7781
 10407  0030C2  EF65  F018         	goto	u7780
 10408  0030C6                     u7781:
 10409  0030C6  EF6B  F018         	goto	l7697
 10410  0030CA                     u7780:
 10411  0030CA                     
 10412                           ; BSR set to: 0
 10413                           ;Modbus.c: 573:             printf("Something in ESUART1 \r\n");
 10414  0030CA  0E0F               	movlw	low STR_73
 10415  0030CC  6F7D               	movwf	printf@fmt& (0+255),b
 10416  0030CE  0EFE               	movlw	high STR_73
 10417  0030D0  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10418  0030D2  EC3D  F026         	call	_printf	;wreg free
 10419  0030D6                     l7697:
 10420                           
 10421                           ;Modbus.c: 576:             if(EUSART1_is_rx_ready()){
 10422  0030D6  ECC6  F026         	call	_EUSART1_is_rx_ready	;wreg free
 10423  0030DA  0900               	iorlw	0
 10424  0030DC  B4D8               	btfsc	status,2,c
 10425  0030DE  EF73  F018         	goto	u7791
 10426  0030E2  EF75  F018         	goto	u7790
 10427  0030E6                     u7791:
 10428  0030E6  EFAC  F018         	goto	l7713
 10429  0030EA                     u7790:
 10430  0030EA  EF9F  F018         	goto	l7709
 10431  0030EE                     l7701:
 10432                           
 10433                           ;Modbus.c: 580:                     rxData[ByteNum] = EUSART1_Read();
 10434  0030EE  EC71  F023         	call	_EUSART1_Read	;wreg free
 10435  0030F2  6E56               	movwf	??_ModbusRx^0,c
 10436  0030F4  0E00               	movlw	low _rxData
 10437  0030F6  0100               	movlb	0	; () banked
 10438  0030F8  25D9               	addwf	_ByteNum& (0+255),w,b
 10439  0030FA  6ED9               	movwf	fsr2l,c
 10440  0030FC  0E05               	movlw	high _rxData
 10441  0030FE  21DA               	addwfc	(_ByteNum+1)& (0+255),w,b
 10442  003100  6EDA               	movwf	fsr2h,c
 10443  003102  C056  FFDF         	movff	??_ModbusRx,indf2
 10444  003106                     
 10445                           ; BSR set to: 0
 10446                           ;Modbus.c: 582:                     if(Debug == 1){
 10447  003106  05DF               	decf	_Debug& (0+255),w,b
 10448  003108  A4D8               	btfss	status,2,c
 10449  00310A  EF89  F018         	goto	u7801
 10450  00310E  EF8B  F018         	goto	u7800
 10451  003112                     u7801:
 10452  003112  EF9C  F018         	goto	l7707
 10453  003116                     u7800:
 10454  003116                     
 10455                           ; BSR set to: 0
 10456                           ;Modbus.c: 583:                         printf("Read: 0x%02x \r\n",rxData[ByteNum]);
 10457  003116  0E7A               	movlw	low STR_74
 10458  003118  6F7D               	movwf	printf@fmt& (0+255),b
 10459  00311A  0EFF               	movlw	high STR_74
 10460  00311C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10461  00311E  0E00               	movlw	low _rxData
 10462  003120  25D9               	addwf	_ByteNum& (0+255),w,b
 10463  003122  6ED9               	movwf	fsr2l,c
 10464  003124  0E05               	movlw	high _rxData
 10465  003126  21DA               	addwfc	(_ByteNum+1)& (0+255),w,b
 10466  003128  6EDA               	movwf	fsr2h,c
 10467  00312A  50DF               	movf	indf2,w,c
 10468  00312C  6E56               	movwf	??_ModbusRx^0,c
 10469  00312E  5056               	movf	??_ModbusRx^0,w,c
 10470  003130  6F7F               	movwf	(?_printf+2)& (0+255),b
 10471  003132  6B80               	clrf	(?_printf+3)& (0+255),b
 10472  003134  EC3D  F026         	call	_printf	;wreg free
 10473  003138                     l7707:
 10474                           
 10475                           ;Modbus.c: 585:                     ByteNum++;
 10476  003138  0100               	movlb	0	; () banked
 10477  00313A  4BD9               	infsnz	_ByteNum& (0+255),f,b
 10478  00313C  2BDA               	incf	(_ByteNum+1)& (0+255),f,b
 10479  00313E                     l7709:
 10480                           
 10481                           ;Modbus.c: 578:                 while(EUSART1_is_rx_ready()){
 10482  00313E  ECC6  F026         	call	_EUSART1_is_rx_ready	;wreg free
 10483  003142  0900               	iorlw	0
 10484  003144  A4D8               	btfss	status,2,c
 10485  003146  EFA7  F018         	goto	u7811
 10486  00314A  EFA9  F018         	goto	u7810
 10487  00314E                     u7811:
 10488  00314E  EF77  F018         	goto	l7701
 10489  003152                     u7810:
 10490  003152                     
 10491                           ;Modbus.c: 588:                 RXStat = 1;
 10492  003152  0E01               	movlw	1
 10493  003154  0100               	movlb	0	; () banked
 10494  003156  6FDE               	movwf	_RXStat& (0+255),b
 10495  003158                     l7713:
 10496                           
 10497                           ;Modbus.c: 591:             if(RXStat ==1){
 10498  003158  0100               	movlb	0	; () banked
 10499  00315A  05DE               	decf	_RXStat& (0+255),w,b
 10500  00315C  A4D8               	btfss	status,2,c
 10501  00315E  EFB3  F018         	goto	u7821
 10502  003162  EFB5  F018         	goto	u7820
 10503  003166                     u7821:
 10504  003166  EFD1  F018         	goto	l7725
 10505  00316A                     u7820:
 10506  00316A                     
 10507                           ; BSR set to: 0
 10508                           ;Modbus.c: 594:                 AddRxBuffToModBus();
 10509  00316A  EC5F  F01D         	call	_AddRxBuffToModBus	;wreg free
 10510  00316E                     
 10511                           ;Modbus.c: 595:                 ClearRxBuff();
 10512  00316E  EC3C  F024         	call	_ClearRxBuff	;wreg free
 10513  003172                     
 10514                           ;Modbus.c: 596:                 RXStat = 0;
 10515  003172  0E00               	movlw	0
 10516  003174  0100               	movlb	0	; () banked
 10517  003176  6FDE               	movwf	_RXStat& (0+255),b
 10518  003178                     
 10519                           ; BSR set to: 0
 10520                           ;Modbus.c: 597:                 ByteNum = 0;
 10521  003178  0E00               	movlw	0
 10522  00317A  6FDA               	movwf	(_ByteNum+1)& (0+255),b
 10523  00317C  0E00               	movlw	0
 10524  00317E  6FD9               	movwf	_ByteNum& (0+255),b
 10525  003180                     
 10526                           ; BSR set to: 0
 10527  003180  B883               	btfsc	131,4,c	;volatile
 10528  003182  EFC5  F018         	goto	u7831
 10529  003186  EFC8  F018         	goto	u7830
 10530  00318A                     u7831:
 10531  00318A  0E01               	movlw	1
 10532  00318C  EFC9  F018         	goto	u7836
 10533  003190                     u7830:
 10534  003190  0E00               	movlw	0
 10535  003192                     u7836:
 10536  003192  0AFF               	xorlw	255
 10537  003194  6E56               	movwf	??_ModbusRx^0,c
 10538  003196  3A56               	swapf	??_ModbusRx^0,f,c
 10539  003198  5083               	movf	131,w,c	;volatile
 10540  00319A  1856               	xorwf	??_ModbusRx^0,w,c
 10541  00319C  0BEF               	andlw	-17
 10542  00319E  1856               	xorwf	??_ModbusRx^0,w,c
 10543  0031A0  6E83               	movwf	131,c	;volatile
 10544  0031A2                     l7725:
 10545                           
 10546                           ; BSR set to: 0
 10547                           ;Modbus.c: 602:         }while(ModDataCnt != ExpectedBytes);
 10548  0031A2  51FA               	movf	_ExpectedBytes& (0+255),w,b
 10549  0031A4  19DB               	xorwf	_ModDataCnt& (0+255),w,b
 10550  0031A6  E107               	bnz	u7841
 10551  0031A8  51FB               	movf	(_ExpectedBytes+1)& (0+255),w,b
 10552  0031AA  19DC               	xorwf	(_ModDataCnt+1)& (0+255),w,b
 10553  0031AC  A4D8               	btfss	status,2,c
 10554  0031AE  EFDB  F018         	goto	u7841
 10555  0031B2  EFDD  F018         	goto	u7840
 10556  0031B6                     u7841:
 10557  0031B6  EF6B  F018         	goto	l7697
 10558  0031BA                     u7840:
 10559  0031BA                     
 10560                           ; BSR set to: 0
 10561  0031BA  BA83               	btfsc	131,5,c	;volatile
 10562  0031BC  EFE2  F018         	goto	u7851
 10563  0031C0  EFE5  F018         	goto	u7850
 10564  0031C4                     u7851:
 10565  0031C4  0E01               	movlw	1
 10566  0031C6  EFE6  F018         	goto	u7856
 10567  0031CA                     u7850:
 10568  0031CA  0E00               	movlw	0
 10569  0031CC                     u7856:
 10570  0031CC  0AFF               	xorlw	255
 10571  0031CE  6E56               	movwf	??_ModbusRx^0,c
 10572  0031D0  3A56               	swapf	??_ModbusRx^0,f,c
 10573  0031D2  4656               	rlncf	??_ModbusRx^0,f,c
 10574  0031D4  5083               	movf	131,w,c	;volatile
 10575  0031D6  1856               	xorwf	??_ModbusRx^0,w,c
 10576  0031D8  0BDF               	andlw	-33
 10577  0031DA  1856               	xorwf	??_ModbusRx^0,w,c
 10578  0031DC  6E83               	movwf	131,c	;volatile
 10579  0031DE                     
 10580                           ; BSR set to: 0
 10581                           ;Modbus.c: 607:         if(checkCRC() == 1)
 10582  0031DE  ECC0  F019         	call	_checkCRC	;wreg free
 10583  0031E2  06E8               	decf	wreg,f,c
 10584  0031E4  A4D8               	btfss	status,2,c
 10585  0031E6  EFF7  F018         	goto	u7861
 10586  0031EA  EFF9  F018         	goto	u7860
 10587  0031EE                     u7861:
 10588  0031EE  EF02  F019         	goto	l7733
 10589  0031F2                     u7860:
 10590  0031F2                     
 10591                           ;Modbus.c: 608:         {;Modbus.c: 609:             printf("\r\nReceived Modbus CRC che
      +                          cked out.\r\n");
 10592  0031F2  0EBE               	movlw	low STR_75
 10593  0031F4  0100               	movlb	0	; () banked
 10594  0031F6  6F7D               	movwf	printf@fmt& (0+255),b
 10595  0031F8  0EFA               	movlw	high STR_75
 10596  0031FA  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10597  0031FC  EC3D  F026         	call	_printf	;wreg free
 10598                           
 10599                           ;Modbus.c: 610:         }else{
 10600  003200  EF09  F019         	goto	l7735
 10601  003204                     l7733:
 10602                           
 10603                           ;Modbus.c: 611:             printf("\r\nReceived Modbus CRC is bad.\r\n");
 10604  003204  0E40               	movlw	low STR_76
 10605  003206  0100               	movlb	0	; () banked
 10606  003208  6F7D               	movwf	printf@fmt& (0+255),b
 10607  00320A  0EFC               	movlw	high STR_76
 10608  00320C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10609  00320E  EC3D  F026         	call	_printf	;wreg free
 10610  003212                     l7735:
 10611                           
 10612                           ;Modbus.c: 615:         return 1;
 10613  003212  0E01               	movlw	1
 10614  003214  EF0D  F019         	goto	l871
 10615  003218                     l7739:
 10616                           
 10617                           ;Modbus.c: 617:     return 0;
 10618  003218  0E00               	movlw	0
 10619  00321A                     l871:
 10620  00321A  0012               	return		;funcret
 10621  00321C                     __end_of_ModbusRx:
 10622                           	opt callstack 0
 10623                           
 10624 ;; *************** function _checkCRC *****************
 10625 ;; Defined at:
 10626 ;;		line 137 in file "Modbus.c"
 10627 ;; Parameters:    Size  Location     Type
 10628 ;;		None
 10629 ;; Auto vars:     Size  Location     Type
 10630 ;;  i               2   60[BANK0 ] int 
 10631 ;;  crc             2   58[BANK0 ] unsigned int 
 10632 ;;  j               2   56[BANK0 ] int 
 10633 ;;  crcLow          2   54[BANK0 ] unsigned int 
 10634 ;;  crcHigh         2   52[BANK0 ] unsigned int 
 10635 ;; Return value:  Size  Location     Type
 10636 ;;                  1    wreg      _Bool 
 10637 ;; Registers used:
 10638 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10639 ;; Tracked objects:
 10640 ;;		On entry : 0/0
 10641 ;;		On exit  : 0/0
 10642 ;;		Unchanged: 0/0
 10643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10645 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10646 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10647 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10648 ;;Total ram usage:       15 bytes
 10649 ;; Hardware stack levels used:    1
 10650 ;; Hardware stack levels required when called:   13
 10651 ;; This function calls:
 10652 ;;		_printf
 10653 ;; This function is called by:
 10654 ;;		_ModbusRx
 10655 ;; This function uses a non-reentrant model
 10656 ;;
 10657                           
 10658                           	psect	text41
 10659  003380                     __ptext41:
 10660                           	opt callstack 0
 10661  003380                     _checkCRC:
 10662                           	opt callstack 16
 10663  003380                     
 10664                           ;Modbus.c: 138:   unsigned int crc = 0xFFFF;
 10665  003380  0100               	movlb	0	; () banked
 10666  003382  699A               	setf	checkCRC@crc& (0+255),b
 10667  003384  699B               	setf	(checkCRC@crc+1)& (0+255),b
 10668  003386                     
 10669                           ; BSR set to: 0
 10670                           ;Modbus.c: 140:   unsigned int crcLow = 0;
 10671  003386  0E00               	movlw	0
 10672  003388  6F97               	movwf	(checkCRC@crcLow+1)& (0+255),b
 10673  00338A  0E00               	movlw	0
 10674  00338C  6F96               	movwf	checkCRC@crcLow& (0+255),b
 10675                           
 10676                           ;Modbus.c: 141:   int i,j = 0;
 10677  00338E  0E00               	movlw	0
 10678  003390  6F99               	movwf	(checkCRC@j+1)& (0+255),b
 10679  003392  0E00               	movlw	0
 10680  003394  6F98               	movwf	checkCRC@j& (0+255),b
 10681                           
 10682                           ;Modbus.c: 143:     for(i=0;i<ModDataCnt-2;i++){
 10683  003396  0E00               	movlw	0
 10684  003398  6F9D               	movwf	(checkCRC@i+1)& (0+255),b
 10685  00339A  0E00               	movlw	0
 10686  00339C  6F9C               	movwf	checkCRC@i& (0+255),b
 10687  00339E  EF00  F01A         	goto	l7581
 10688  0033A2                     l7563:
 10689                           
 10690                           ; BSR set to: 0
 10691                           ;Modbus.c: 144:       crc ^= ModbusData[i];
 10692  0033A2  0E00               	movlw	low _ModbusData
 10693  0033A4  259C               	addwf	checkCRC@i& (0+255),w,b
 10694  0033A6  6ED9               	movwf	fsr2l,c
 10695  0033A8  0E01               	movlw	high _ModbusData
 10696  0033AA  219D               	addwfc	(checkCRC@i+1)& (0+255),w,b
 10697  0033AC  6EDA               	movwf	fsr2h,c
 10698  0033AE  50DF               	movf	indf2,w,c
 10699  0033B0  6F8F               	movwf	??_checkCRC& (0+255),b
 10700  0033B2  518F               	movf	??_checkCRC& (0+255),w,b
 10701  0033B4  1B9A               	xorwf	checkCRC@crc& (0+255),f,b
 10702  0033B6                     
 10703                           ; BSR set to: 0
 10704                           ;Modbus.c: 145:       for(j=8; j!=0; j--){
 10705  0033B6  0E00               	movlw	0
 10706  0033B8  6F99               	movwf	(checkCRC@j+1)& (0+255),b
 10707  0033BA  0E08               	movlw	8
 10708  0033BC  6F98               	movwf	checkCRC@j& (0+255),b
 10709  0033BE                     l733:
 10710                           
 10711                           ; BSR set to: 0
 10712                           ;Modbus.c: 146:         if((crc & 0x0001) != 0){
 10713  0033BE  A19A               	btfss	checkCRC@crc& (0+255),0,b
 10714  0033C0  EFE4  F019         	goto	u7621
 10715  0033C4  EFE6  F019         	goto	u7620
 10716  0033C8                     u7621:
 10717  0033C8  EFEF  F019         	goto	l7575
 10718  0033CC                     u7620:
 10719  0033CC                     
 10720                           ; BSR set to: 0
 10721                           ;Modbus.c: 147:           crc >>= 1;
 10722  0033CC  90D8               	bcf	status,0,c
 10723  0033CE  339B               	rrcf	(checkCRC@crc+1)& (0+255),f,b
 10724  0033D0  339A               	rrcf	checkCRC@crc& (0+255),f,b
 10725  0033D2                     
 10726                           ; BSR set to: 0
 10727                           ;Modbus.c: 148:           crc ^= 0xA001;
 10728  0033D2  0E01               	movlw	1
 10729  0033D4  1B9A               	xorwf	checkCRC@crc& (0+255),f,b
 10730  0033D6  0EA0               	movlw	160
 10731  0033D8  1B9B               	xorwf	(checkCRC@crc+1)& (0+255),f,b
 10732                           
 10733                           ;Modbus.c: 149:         }
 10734  0033DA  EFF2  F019         	goto	l736
 10735  0033DE                     l7575:
 10736                           
 10737                           ; BSR set to: 0
 10738                           ;Modbus.c: 151:           crc >>= 1;
 10739  0033DE  90D8               	bcf	status,0,c
 10740  0033E0  339B               	rrcf	(checkCRC@crc+1)& (0+255),f,b
 10741  0033E2  339A               	rrcf	checkCRC@crc& (0+255),f,b
 10742  0033E4                     l736:
 10743                           
 10744                           ; BSR set to: 0
 10745                           ;Modbus.c: 153:       }
 10746  0033E4  0798               	decf	checkCRC@j& (0+255),f,b
 10747  0033E6  A0D8               	btfss	status,0,c
 10748  0033E8  0799               	decf	(checkCRC@j+1)& (0+255),f,b
 10749  0033EA                     
 10750                           ; BSR set to: 0
 10751  0033EA  5198               	movf	checkCRC@j& (0+255),w,b
 10752  0033EC  1199               	iorwf	(checkCRC@j+1)& (0+255),w,b
 10753  0033EE  A4D8               	btfss	status,2,c
 10754  0033F0  EFFC  F019         	goto	u7631
 10755  0033F4  EFFE  F019         	goto	u7630
 10756  0033F8                     u7631:
 10757  0033F8  EFDF  F019         	goto	l733
 10758  0033FC                     u7630:
 10759  0033FC                     
 10760                           ; BSR set to: 0
 10761                           ;Modbus.c: 154:     }
 10762  0033FC  4B9C               	infsnz	checkCRC@i& (0+255),f,b
 10763  0033FE  2B9D               	incf	(checkCRC@i+1)& (0+255),f,b
 10764  003400                     l7581:
 10765                           
 10766                           ; BSR set to: 0
 10767  003400  0EFE               	movlw	254
 10768  003402  6F8F               	movwf	??_checkCRC& (0+255),b
 10769  003404  0EFF               	movlw	255
 10770  003406  6F90               	movwf	(??_checkCRC+1)& (0+255),b
 10771  003408  C0DB  F091         	movff	_ModDataCnt,??_checkCRC+2
 10772  00340C  C0DC  F092         	movff	_ModDataCnt+1,??_checkCRC+3
 10773  003410  518F               	movf	??_checkCRC& (0+255),w,b
 10774  003412  2791               	addwf	(??_checkCRC+2)& (0+255),f,b
 10775  003414  5190               	movf	(??_checkCRC+1)& (0+255),w,b
 10776  003416  2392               	addwfc	(??_checkCRC+3)& (0+255),f,b
 10777  003418  5191               	movf	(??_checkCRC+2)& (0+255),w,b
 10778  00341A  5D9C               	subwf	checkCRC@i& (0+255),w,b
 10779  00341C  519D               	movf	(checkCRC@i+1)& (0+255),w,b
 10780  00341E  0A80               	xorlw	128
 10781  003420  6F93               	movwf	(??_checkCRC+4)& (0+255),b
 10782  003422  5192               	movf	(??_checkCRC+3)& (0+255),w,b
 10783  003424  0A80               	xorlw	128
 10784  003426  5993               	subwfb	(??_checkCRC+4)& (0+255),w,b
 10785  003428  A0D8               	btfss	status,0,c
 10786  00342A  EF19  F01A         	goto	u7641
 10787  00342E  EF1B  F01A         	goto	u7640
 10788  003432                     u7641:
 10789  003432  EFD1  F019         	goto	l7563
 10790  003436                     u7640:
 10791  003436                     
 10792                           ; BSR set to: 0
 10793                           ;Modbus.c: 156:   crcHigh = (crc & 0x00FF);
 10794  003436  519A               	movf	checkCRC@crc& (0+255),w,b
 10795  003438  6F94               	movwf	checkCRC@crcHigh& (0+255),b
 10796  00343A  6B95               	clrf	(checkCRC@crcHigh+1)& (0+255),b
 10797                           
 10798                           ;Modbus.c: 157:   crcLow = (crc & 0xFF00) >>8;
 10799  00343C  C09A  F08F         	movff	checkCRC@crc,??_checkCRC
 10800  003440  C09B  F090         	movff	checkCRC@crc+1,??_checkCRC+1
 10801  003444  C090  F08F         	movff	??_checkCRC+1,??_checkCRC
 10802  003448  6B90               	clrf	(??_checkCRC+1)& (0+255),b
 10803  00344A  518F               	movf	??_checkCRC& (0+255),w,b
 10804  00344C  6F96               	movwf	checkCRC@crcLow& (0+255),b
 10805  00344E  6B97               	clrf	(checkCRC@crcLow+1)& (0+255),b
 10806  003450                     
 10807                           ; BSR set to: 0
 10808                           ;Modbus.c: 159:   if(Debug == 1){
 10809  003450  05DF               	decf	_Debug& (0+255),w,b
 10810  003452  A4D8               	btfss	status,2,c
 10811  003454  EF2E  F01A         	goto	u7651
 10812  003458  EF30  F01A         	goto	u7650
 10813  00345C                     u7651:
 10814  00345C  EF3E  F01A         	goto	l7589
 10815  003460                     u7650:
 10816  003460                     
 10817                           ; BSR set to: 0
 10818                           ;Modbus.c: 160:     printf("crcHigh: 0x%02x  crcLow: 0x%02x  \r\n", crcHigh, crcLow);
 10819  003460  0E51               	movlw	low STR_31
 10820  003462  6F7D               	movwf	printf@fmt& (0+255),b
 10821  003464  0EFB               	movlw	high STR_31
 10822  003466  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10823  003468  C094  F07F         	movff	checkCRC@crcHigh,?_printf+2
 10824  00346C  C095  F080         	movff	checkCRC@crcHigh+1,?_printf+3
 10825  003470  C096  F081         	movff	checkCRC@crcLow,?_printf+4
 10826  003474  C097  F082         	movff	checkCRC@crcLow+1,?_printf+5
 10827  003478  EC3D  F026         	call	_printf	;wreg free
 10828  00347C                     l7589:
 10829                           
 10830                           ;Modbus.c: 164:   if((crcHigh == ModbusData[i])&&(crcLow == ModbusData[i+1]))
 10831  00347C  0E00               	movlw	low _ModbusData
 10832  00347E  0100               	movlb	0	; () banked
 10833  003480  259C               	addwf	checkCRC@i& (0+255),w,b
 10834  003482  6ED9               	movwf	fsr2l,c
 10835  003484  0E01               	movlw	high _ModbusData
 10836  003486  219D               	addwfc	(checkCRC@i+1)& (0+255),w,b
 10837  003488  6EDA               	movwf	fsr2h,c
 10838  00348A  50DF               	movf	indf2,w,c
 10839  00348C  6F8F               	movwf	??_checkCRC& (0+255),b
 10840  00348E  6B90               	clrf	(??_checkCRC+1)& (0+255),b
 10841  003490  5194               	movf	checkCRC@crcHigh& (0+255),w,b
 10842  003492  198F               	xorwf	??_checkCRC& (0+255),w,b
 10843  003494  E107               	bnz	u7661
 10844  003496  5195               	movf	(checkCRC@crcHigh+1)& (0+255),w,b
 10845  003498  1990               	xorwf	(??_checkCRC+1)& (0+255),w,b
 10846  00349A  A4D8               	btfss	status,2,c
 10847  00349C  EF52  F01A         	goto	u7661
 10848  0034A0  EF54  F01A         	goto	u7660
 10849  0034A4                     u7661:
 10850  0034A4  EF6C  F01A         	goto	l7599
 10851  0034A8                     u7660:
 10852  0034A8                     
 10853                           ; BSR set to: 0
 10854  0034A8  0E01               	movlw	low (_ModbusData+1)
 10855  0034AA  259C               	addwf	checkCRC@i& (0+255),w,b
 10856  0034AC  6ED9               	movwf	fsr2l,c
 10857  0034AE  0E01               	movlw	high (_ModbusData+1)
 10858  0034B0  219D               	addwfc	(checkCRC@i+1)& (0+255),w,b
 10859  0034B2  6EDA               	movwf	fsr2h,c
 10860  0034B4  50DF               	movf	indf2,w,c
 10861  0034B6  6F8F               	movwf	??_checkCRC& (0+255),b
 10862  0034B8  6B90               	clrf	(??_checkCRC+1)& (0+255),b
 10863  0034BA  5196               	movf	checkCRC@crcLow& (0+255),w,b
 10864  0034BC  198F               	xorwf	??_checkCRC& (0+255),w,b
 10865  0034BE  E107               	bnz	u7671
 10866  0034C0  5197               	movf	(checkCRC@crcLow+1)& (0+255),w,b
 10867  0034C2  1990               	xorwf	(??_checkCRC+1)& (0+255),w,b
 10868  0034C4  A4D8               	btfss	status,2,c
 10869  0034C6  EF67  F01A         	goto	u7671
 10870  0034CA  EF69  F01A         	goto	u7670
 10871  0034CE                     u7671:
 10872  0034CE  EF6C  F01A         	goto	l7599
 10873  0034D2                     u7670:
 10874  0034D2                     
 10875                           ; BSR set to: 0
 10876                           ;Modbus.c: 165:   {;Modbus.c: 166:     return 1;
 10877  0034D2  0E01               	movlw	1
 10878  0034D4  EF6D  F01A         	goto	l740
 10879  0034D8                     l7599:
 10880                           
 10881                           ; BSR set to: 0
 10882                           ;Modbus.c: 169:     return 0;
 10883  0034D8  0E00               	movlw	0
 10884  0034DA                     l740:
 10885                           
 10886                           ; BSR set to: 0
 10887  0034DA  0012               	return		;funcret
 10888  0034DC                     __end_of_checkCRC:
 10889                           	opt callstack 0
 10890                           
 10891 ;; *************** function _RXMode *****************
 10892 ;; Defined at:
 10893 ;;		line 43 in file "Modbus.c"
 10894 ;; Parameters:    Size  Location     Type
 10895 ;;		None
 10896 ;; Auto vars:     Size  Location     Type
 10897 ;;		None
 10898 ;; Return value:  Size  Location     Type
 10899 ;;                  1    wreg      void 
 10900 ;; Registers used:
 10901 ;;		None
 10902 ;; Tracked objects:
 10903 ;;		On entry : 0/0
 10904 ;;		On exit  : 0/0
 10905 ;;		Unchanged: 0/0
 10906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10911 ;;Total ram usage:        0 bytes
 10912 ;; Hardware stack levels used:    1
 10913 ;; Hardware stack levels required when called:    4
 10914 ;; This function calls:
 10915 ;;		Nothing
 10916 ;; This function is called by:
 10917 ;;		_main
 10918 ;;		_ModbusRx
 10919 ;; This function uses a non-reentrant model
 10920 ;;
 10921                           
 10922                           	psect	text42
 10923  004E70                     __ptext42:
 10924                           	opt callstack 0
 10925  004E70                     _RXMode:
 10926                           	opt callstack 26
 10927  004E70  9086               	bcf	134,0,c	;volatile
 10928  004E72  9683               	bcf	131,3,c	;volatile
 10929  004E74  0012               	return		;funcret
 10930  004E76                     __end_of_RXMode:
 10931                           	opt callstack 0
 10932                           
 10933 ;; *************** function _EUSART1_is_rx_ready *****************
 10934 ;; Defined at:
 10935 ;;		line 139 in file "mcc_generated_files/eusart1.c"
 10936 ;; Parameters:    Size  Location     Type
 10937 ;;		None
 10938 ;; Auto vars:     Size  Location     Type
 10939 ;;		None
 10940 ;; Return value:  Size  Location     Type
 10941 ;;                  1    wreg      _Bool 
 10942 ;; Registers used:
 10943 ;;		wreg, status,2
 10944 ;; Tracked objects:
 10945 ;;		On entry : 0/0
 10946 ;;		On exit  : 0/0
 10947 ;;		Unchanged: 0/0
 10948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10953 ;;Total ram usage:        0 bytes
 10954 ;; Hardware stack levels used:    1
 10955 ;; Hardware stack levels required when called:    4
 10956 ;; This function calls:
 10957 ;;		Nothing
 10958 ;; This function is called by:
 10959 ;;		_ModbusRx
 10960 ;; This function uses a non-reentrant model
 10961 ;;
 10962                           
 10963                           	psect	text43
 10964  004D8C                     __ptext43:
 10965                           	opt callstack 0
 10966  004D8C                     _EUSART1_is_rx_ready:
 10967                           	opt callstack 25
 10968  004D8C                     
 10969                           ;mcc_generated_files/eusart1.c: 141:     return (eusart1RxCount ? 1 : 0);
 10970  004D8C  0100               	movlb	0	; () banked
 10971  004D8E  51E1               	movf	_eusart1RxCount& (0+255),w,b	;volatile
 10972  004D90  A4D8               	btfss	status,2,c
 10973  004D92  EFCD  F026         	goto	u7461
 10974  004D96  EFD0  F026         	goto	u7460
 10975  004D9A                     u7461:
 10976  004D9A  0E01               	movlw	1
 10977  004D9C  EFD1  F026         	goto	u7470
 10978  004DA0                     u7460:
 10979  004DA0  0E00               	movlw	0
 10980  004DA2                     u7470:
 10981  004DA2                     
 10982                           ; BSR set to: 0
 10983  004DA2  0012               	return		;funcret
 10984  004DA4                     __end_of_EUSART1_is_rx_ready:
 10985                           	opt callstack 0
 10986                           
 10987 ;; *************** function _EUSART1_Read *****************
 10988 ;; Defined at:
 10989 ;;		line 153 in file "mcc_generated_files/eusart1.c"
 10990 ;; Parameters:    Size  Location     Type
 10991 ;;		None
 10992 ;; Auto vars:     Size  Location     Type
 10993 ;;  readValue       1    4[COMRAM] unsigned char 
 10994 ;; Return value:  Size  Location     Type
 10995 ;;                  1    wreg      unsigned char 
 10996 ;; Registers used:
 10997 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10998 ;; Tracked objects:
 10999 ;;		On entry : 0/0
 11000 ;;		On exit  : 0/0
 11001 ;;		Unchanged: 0/0
 11002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11004 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11006 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11007 ;;Total ram usage:        1 bytes
 11008 ;; Hardware stack levels used:    1
 11009 ;; Hardware stack levels required when called:    4
 11010 ;; This function calls:
 11011 ;;		Nothing
 11012 ;; This function is called by:
 11013 ;;		_ModbusRx
 11014 ;; This function uses a non-reentrant model
 11015 ;;
 11016                           
 11017                           	psect	text44
 11018  0046E2                     __ptext44:
 11019                           	opt callstack 0
 11020  0046E2                     _EUSART1_Read:
 11021                           	opt callstack 25
 11022  0046E2                     l7417:
 11023                           
 11024                           ;mcc_generated_files/eusart1.c: 157:     while(0 == eusart1RxCount)
 11025  0046E2  0100               	movlb	0	; () banked
 11026  0046E4  51E1               	movf	_eusart1RxCount& (0+255),w,b	;volatile
 11027  0046E6  B4D8               	btfsc	status,2,c
 11028  0046E8  EF78  F023         	goto	u7481
 11029  0046EC  EF7A  F023         	goto	u7480
 11030  0046F0                     u7481:
 11031  0046F0  EF71  F023         	goto	l7417
 11032  0046F4                     u7480:
 11033  0046F4                     
 11034                           ; BSR set to: 0
 11035                           ;mcc_generated_files/eusart1.c: 161:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
 11036  0046F4  0E00               	movlw	low _eusart1RxStatusBuffer
 11037  0046F6  25E2               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
 11038  0046F8  6ED9               	movwf	fsr2l,c
 11039  0046FA  6ADA               	clrf	fsr2h,c
 11040  0046FC  0E03               	movlw	high _eusart1RxStatusBuffer
 11041  0046FE  22DA               	addwfc	fsr2h,f,c
 11042  004700  50DF               	movf	indf2,w,c
 11043  004702  6FE0               	movwf	_eusart1RxLastError& (0+255),b	;volatile
 11044                           
 11045                           ;mcc_generated_files/eusart1.c: 163:     readValue = eusart1RxBuffer[eusart1RxTail++];
 11046  004704  0E00               	movlw	low _eusart1RxBuffer
 11047  004706  25E2               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
 11048  004708  6ED9               	movwf	fsr2l,c
 11049  00470A  6ADA               	clrf	fsr2h,c
 11050  00470C  0E04               	movlw	high _eusart1RxBuffer
 11051  00470E  22DA               	addwfc	fsr2h,f,c
 11052  004710  50DF               	movf	indf2,w,c
 11053  004712  6E05               	movwf	EUSART1_Read@readValue^0,c
 11054  004714                     
 11055                           ; BSR set to: 0
 11056  004714  2BE2               	incf	_eusart1RxTail& (0+255),f,b	;volatile
 11057  004716                     
 11058                           ; BSR set to: 0
 11059                           ;mcc_generated_files/eusart1.c: 164:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
 11060  004716  0E63               	movlw	99
 11061  004718  65E2               	cpfsgt	_eusart1RxTail& (0+255),b	;volatile
 11062  00471A  EF91  F023         	goto	u7491
 11063  00471E  EF93  F023         	goto	u7490
 11064  004722                     u7491:
 11065  004722  EF95  F023         	goto	l7427
 11066  004726                     u7490:
 11067  004726                     
 11068                           ; BSR set to: 0
 11069                           ;mcc_generated_files/eusart1.c: 165:     {;mcc_generated_files/eusart1.c: 166:         e
      +                          usart1RxTail = 0;
 11070  004726  0E00               	movlw	0
 11071  004728  6FE2               	movwf	_eusart1RxTail& (0+255),b	;volatile
 11072  00472A                     l7427:
 11073                           
 11074                           ; BSR set to: 0
 11075                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 0;
 11076  00472A  010E               	movlb	14	; () banked
 11077  00472C  9BC5               	bcf	197,5,b	;volatile
 11078  00472E                     
 11079                           ; BSR set to: 14
 11080                           ;mcc_generated_files/eusart1.c: 169:     eusart1RxCount--;
 11081  00472E  0100               	movlb	0	; () banked
 11082  004730  07E1               	decf	_eusart1RxCount& (0+255),f,b	;volatile
 11083  004732                     
 11084                           ; BSR set to: 0
 11085                           ;mcc_generated_files/eusart1.c: 170:     PIE3bits.RC1IE = 1;
 11086  004732  010E               	movlb	14	; () banked
 11087  004734  8BC5               	bsf	197,5,b	;volatile
 11088  004736                     
 11089                           ; BSR set to: 14
 11090                           ;mcc_generated_files/eusart1.c: 172:     return readValue;
 11091  004736  5005               	movf	EUSART1_Read@readValue^0,w,c
 11092  004738                     
 11093                           ; BSR set to: 14
 11094  004738  0012               	return		;funcret
 11095  00473A                     __end_of_EUSART1_Read:
 11096                           	opt callstack 0
 11097                           
 11098 ;; *************** function _ClearRxBuff *****************
 11099 ;; Defined at:
 11100 ;;		line 59 in file "Modbus.c"
 11101 ;; Parameters:    Size  Location     Type
 11102 ;;		None
 11103 ;; Auto vars:     Size  Location     Type
 11104 ;;  i               2    5[COMRAM] int 
 11105 ;; Return value:  Size  Location     Type
 11106 ;;                  1    wreg      void 
 11107 ;; Registers used:
 11108 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11109 ;; Tracked objects:
 11110 ;;		On entry : 0/0
 11111 ;;		On exit  : 0/0
 11112 ;;		Unchanged: 0/0
 11113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11115 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11116 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11117 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11118 ;;Total ram usage:        3 bytes
 11119 ;; Hardware stack levels used:    1
 11120 ;; Hardware stack levels required when called:    4
 11121 ;; This function calls:
 11122 ;;		Nothing
 11123 ;; This function is called by:
 11124 ;;		_main
 11125 ;;		_ModbusRx
 11126 ;; This function uses a non-reentrant model
 11127 ;;
 11128                           
 11129                           	psect	text45
 11130  004878                     __ptext45:
 11131                           	opt callstack 0
 11132  004878                     _ClearRxBuff:
 11133                           	opt callstack 25
 11134  004878                     
 11135                           ;Modbus.c: 61:     int i = 0;
 11136  004878  0E00               	movlw	0
 11137  00487A  6E07               	movwf	(ClearRxBuff@i+1)^0,c
 11138  00487C  0E00               	movlw	0
 11139  00487E  6E06               	movwf	ClearRxBuff@i^0,c
 11140                           
 11141                           ;Modbus.c: 62:     for(i=0; i<ByteNum; i++ ){
 11142  004880  0E00               	movlw	0
 11143  004882  6E07               	movwf	(ClearRxBuff@i+1)^0,c
 11144  004884  0E00               	movlw	0
 11145  004886  6E06               	movwf	ClearRxBuff@i^0,c
 11146  004888  EF50  F024         	goto	l7507
 11147  00488C                     l7503:
 11148                           
 11149                           ; BSR set to: 0
 11150                           ;Modbus.c: 63:         rxData[i] = 0xFF;
 11151  00488C  0E00               	movlw	low _rxData
 11152  00488E  2406               	addwf	ClearRxBuff@i^0,w,c
 11153  004890  6ED9               	movwf	fsr2l,c
 11154  004892  0E05               	movlw	high _rxData
 11155  004894  2007               	addwfc	(ClearRxBuff@i+1)^0,w,c
 11156  004896  6EDA               	movwf	fsr2h,c
 11157  004898  0EFF               	movlw	255
 11158  00489A  6EDF               	movwf	indf2,c
 11159  00489C                     
 11160                           ; BSR set to: 0
 11161                           ;Modbus.c: 64:     }
 11162  00489C  4A06               	infsnz	ClearRxBuff@i^0,f,c
 11163  00489E  2A07               	incf	(ClearRxBuff@i+1)^0,f,c
 11164  0048A0                     l7507:
 11165  0048A0  0100               	movlb	0	; () banked
 11166  0048A2  51D9               	movf	_ByteNum& (0+255),w,b
 11167  0048A4  5C06               	subwf	ClearRxBuff@i^0,w,c
 11168  0048A6  5007               	movf	(ClearRxBuff@i+1)^0,w,c
 11169  0048A8  0A80               	xorlw	128
 11170  0048AA  6E05               	movwf	??_ClearRxBuff^0,c
 11171  0048AC  51DA               	movf	(_ByteNum+1)& (0+255),w,b
 11172  0048AE  0A80               	xorlw	128
 11173  0048B0  5805               	subwfb	??_ClearRxBuff^0,w,c
 11174  0048B2  A0D8               	btfss	status,0,c
 11175  0048B4  EF5E  F024         	goto	u7571
 11176  0048B8  EF60  F024         	goto	u7570
 11177  0048BC                     u7571:
 11178  0048BC  EF46  F024         	goto	l7503
 11179  0048C0                     u7570:
 11180  0048C0                     
 11181                           ; BSR set to: 0
 11182  0048C0  0012               	return		;funcret
 11183  0048C2                     __end_of_ClearRxBuff:
 11184                           	opt callstack 0
 11185                           
 11186 ;; *************** function _AddRxBuffToModBus *****************
 11187 ;; Defined at:
 11188 ;;		line 68 in file "Modbus.c"
 11189 ;; Parameters:    Size  Location     Type
 11190 ;;		None
 11191 ;; Auto vars:     Size  Location     Type
 11192 ;;  i               2   47[BANK0 ] int 
 11193 ;; Return value:  Size  Location     Type
 11194 ;;                  1    wreg      void 
 11195 ;; Registers used:
 11196 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11197 ;; Tracked objects:
 11198 ;;		On entry : 0/0
 11199 ;;		On exit  : 0/0
 11200 ;;		Unchanged: 0/0
 11201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11203 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11204 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11205 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11206 ;;Total ram usage:        3 bytes
 11207 ;; Hardware stack levels used:    1
 11208 ;; Hardware stack levels required when called:   13
 11209 ;; This function calls:
 11210 ;;		_printf
 11211 ;; This function is called by:
 11212 ;;		_ModbusRx
 11213 ;; This function uses a non-reentrant model
 11214 ;;
 11215                           
 11216                           	psect	text46
 11217  003ABE                     __ptext46:
 11218                           	opt callstack 0
 11219  003ABE                     _AddRxBuffToModBus:
 11220                           	opt callstack 16
 11221  003ABE                     
 11222                           ;Modbus.c: 69:     int i = 0;
 11223  003ABE  0E00               	movlw	0
 11224  003AC0  0100               	movlb	0	; () banked
 11225  003AC2  6F90               	movwf	(AddRxBuffToModBus@i+1)& (0+255),b
 11226  003AC4  0E00               	movlw	0
 11227  003AC6  6F8F               	movwf	AddRxBuffToModBus@i& (0+255),b
 11228                           
 11229                           ;Modbus.c: 71:     for(i=0l; i<ByteNum; i++){
 11230  003AC8  0E00               	movlw	0
 11231  003ACA  6F90               	movwf	(AddRxBuffToModBus@i+1)& (0+255),b
 11232  003ACC  0E00               	movlw	0
 11233  003ACE  6F8F               	movwf	AddRxBuffToModBus@i& (0+255),b
 11234  003AD0  EF7C  F01D         	goto	l7543
 11235  003AD4                     l7537:
 11236                           
 11237                           ; BSR set to: 0
 11238                           ;Modbus.c: 72:         ModbusData[ModDataCnt] = rxData[i];
 11239  003AD4  0E00               	movlw	low _rxData
 11240  003AD6  258F               	addwf	AddRxBuffToModBus@i& (0+255),w,b
 11241  003AD8  6ED9               	movwf	fsr2l,c
 11242  003ADA  0E05               	movlw	high _rxData
 11243  003ADC  2190               	addwfc	(AddRxBuffToModBus@i+1)& (0+255),w,b
 11244  003ADE  6EDA               	movwf	fsr2h,c
 11245  003AE0  0E00               	movlw	low _ModbusData
 11246  003AE2  25DB               	addwf	_ModDataCnt& (0+255),w,b
 11247  003AE4  6EE1               	movwf	fsr1l,c
 11248  003AE6  0E01               	movlw	high _ModbusData
 11249  003AE8  21DC               	addwfc	(_ModDataCnt+1)& (0+255),w,b
 11250  003AEA  6EE2               	movwf	fsr1h,c
 11251  003AEC  CFDF FFE7          	movff	indf2,indf1
 11252  003AF0                     
 11253                           ; BSR set to: 0
 11254                           ;Modbus.c: 73:         ModDataCnt++;
 11255  003AF0  4BDB               	infsnz	_ModDataCnt& (0+255),f,b
 11256  003AF2  2BDC               	incf	(_ModDataCnt+1)& (0+255),f,b
 11257  003AF4                     
 11258                           ; BSR set to: 0
 11259                           ;Modbus.c: 74:     }
 11260  003AF4  4B8F               	infsnz	AddRxBuffToModBus@i& (0+255),f,b
 11261  003AF6  2B90               	incf	(AddRxBuffToModBus@i+1)& (0+255),f,b
 11262  003AF8                     l7543:
 11263                           
 11264                           ; BSR set to: 0
 11265  003AF8  51D9               	movf	_ByteNum& (0+255),w,b
 11266  003AFA  5D8F               	subwf	AddRxBuffToModBus@i& (0+255),w,b
 11267  003AFC  5190               	movf	(AddRxBuffToModBus@i+1)& (0+255),w,b
 11268  003AFE  0A80               	xorlw	128
 11269  003B00  6E55               	movwf	??_AddRxBuffToModBus^0,c
 11270  003B02  51DA               	movf	(_ByteNum+1)& (0+255),w,b
 11271  003B04  0A80               	xorlw	128
 11272  003B06  5855               	subwfb	??_AddRxBuffToModBus^0,w,c
 11273  003B08  A0D8               	btfss	status,0,c
 11274  003B0A  EF89  F01D         	goto	u7581
 11275  003B0E  EF8B  F01D         	goto	u7580
 11276  003B12                     u7581:
 11277  003B12  EF6A  F01D         	goto	l7537
 11278  003B16                     u7580:
 11279  003B16                     
 11280                           ; BSR set to: 0
 11281                           ;Modbus.c: 76:     if(Debug ==1){
 11282  003B16  05DF               	decf	_Debug& (0+255),w,b
 11283  003B18  A4D8               	btfss	status,2,c
 11284  003B1A  EF91  F01D         	goto	u7591
 11285  003B1E  EF93  F01D         	goto	u7590
 11286  003B22                     u7591:
 11287  003B22  EFA4  F01D         	goto	l7549
 11288  003B26                     u7590:
 11289  003B26                     
 11290                           ; BSR set to: 0
 11291                           ;Modbus.c: 77:         printf("Completed Adding rxData Buffer to ModbusData Array\r\n\n"
      +                          );
 11292  003B26  0E3D               	movlw	low STR_8
 11293  003B28  6F7D               	movwf	printf@fmt& (0+255),b
 11294  003B2A  0EF6               	movlw	high STR_8
 11295  003B2C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 11296  003B2E  EC3D  F026         	call	_printf	;wreg free
 11297                           
 11298                           ;Modbus.c: 78:         printf("ModDataCnt sitting at %i\r\n\n", ModDataCnt);
 11299  003B32  0E55               	movlw	low STR_9
 11300  003B34  0100               	movlb	0	; () banked
 11301  003B36  6F7D               	movwf	printf@fmt& (0+255),b
 11302  003B38  0EFD               	movlw	high STR_9
 11303  003B3A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 11304  003B3C  C0DB  F07F         	movff	_ModDataCnt,?_printf+2
 11305  003B40  C0DC  F080         	movff	_ModDataCnt+1,?_printf+3
 11306  003B44  EC3D  F026         	call	_printf	;wreg free
 11307  003B48                     l7549:
 11308                           
 11309                           ;Modbus.c: 81:     if(ModbusData[1] == 0x0F){
 11310  003B48  0E0F               	movlw	15
 11311  003B4A  0101               	movlb	1	; () banked
 11312  003B4C  1901               	xorwf	(_ModbusData+1)& (0+255),w,b
 11313  003B4E  A4D8               	btfss	status,2,c
 11314  003B50  EFAC  F01D         	goto	u7601
 11315  003B54  EFAE  F01D         	goto	u7600
 11316  003B58                     u7601:
 11317  003B58  EFB7  F01D         	goto	l7553
 11318  003B5C                     u7600:
 11319  003B5C                     l7551:
 11320                           
 11321                           ; BSR set to: 1
 11322                           ;Modbus.c: 82:         ExpectedBytes = ModbusData[6] + 9;
 11323  003B5C  0E09               	movlw	9
 11324  003B5E  2506               	addwf	(_ModbusData+6)& (0+255),w,b
 11325  003B60  0100               	movlb	0	; () banked
 11326  003B62  6FFA               	movwf	_ExpectedBytes& (0+255),b
 11327  003B64  6BFB               	clrf	(_ExpectedBytes+1)& (0+255),b
 11328  003B66  0E00               	movlw	0
 11329  003B68  23FB               	addwfc	(_ExpectedBytes+1)& (0+255),f,b
 11330                           
 11331                           ;Modbus.c: 83:     }else if (ModbusData[1] == 0x10){
 11332  003B6A  EFC7  F01D         	goto	l719
 11333  003B6E                     l7553:
 11334                           
 11335                           ; BSR set to: 1
 11336  003B6E  0E10               	movlw	16
 11337  003B70  1901               	xorwf	(_ModbusData+1)& (0+255),w,b
 11338  003B72  A4D8               	btfss	status,2,c
 11339  003B74  EFBE  F01D         	goto	u7611
 11340  003B78  EFC0  F01D         	goto	u7610
 11341  003B7C                     u7611:
 11342  003B7C  EFC2  F01D         	goto	l7557
 11343  003B80                     u7610:
 11344  003B80  EFAE  F01D         	goto	l7551
 11345  003B84                     l7557:
 11346                           
 11347                           ; BSR set to: 1
 11348                           ;Modbus.c: 86:         ExpectedBytes = 8;
 11349  003B84  0E00               	movlw	0
 11350  003B86  0100               	movlb	0	; () banked
 11351  003B88  6FFB               	movwf	(_ExpectedBytes+1)& (0+255),b
 11352  003B8A  0E08               	movlw	8
 11353  003B8C  6FFA               	movwf	_ExpectedBytes& (0+255),b
 11354  003B8E                     l719:
 11355                           
 11356                           ; BSR set to: 0
 11357  003B8E  0012               	return		;funcret
 11358  003B90                     __end_of_AddRxBuffToModBus:
 11359                           	opt callstack 0
 11360                           
 11361 ;; *************** function _ModbusFC10 *****************
 11362 ;; Defined at:
 11363 ;;		line 378 in file "Modbus.c"
 11364 ;; Parameters:    Size  Location     Type
 11365 ;;		None
 11366 ;; Auto vars:     Size  Location     Type
 11367 ;;  j               2   56[BANK0 ] int 
 11368 ;;  i               2   54[BANK0 ] int 
 11369 ;;  TempData        2   51[BANK0 ] unsigned int 
 11370 ;;  error           1   53[BANK0 ] _Bool 
 11371 ;; Return value:  Size  Location     Type
 11372 ;;                  1    wreg      void 
 11373 ;; Registers used:
 11374 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11375 ;; Tracked objects:
 11376 ;;		On entry : 0/0
 11377 ;;		On exit  : 0/0
 11378 ;;		Unchanged: 0/0
 11379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11381 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11382 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11383 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11384 ;;Total ram usage:       11 bytes
 11385 ;; Hardware stack levels used:    1
 11386 ;; Hardware stack levels required when called:   13
 11387 ;; This function calls:
 11388 ;;		_ModbusError
 11389 ;;		_UART1_Write_string
 11390 ;;		_generateCRC
 11391 ;;		_printf
 11392 ;; This function is called by:
 11393 ;;		_main
 11394 ;; This function uses a non-reentrant model
 11395 ;;
 11396                           
 11397                           	psect	text47
 11398  002258                     __ptext47:
 11399                           	opt callstack 0
 11400  002258                     _ModbusFC10:
 11401                           	opt callstack 17
 11402  002258                     
 11403                           ;Modbus.c: 383:     int j = 0;
 11404  002258  0E00               	movlw	0
 11405  00225A  0100               	movlb	0	; () banked
 11406  00225C  6F99               	movwf	(ModbusFC10@j+1)& (0+255),b
 11407  00225E  0E00               	movlw	0
 11408  002260  6F98               	movwf	ModbusFC10@j& (0+255),b
 11409                           
 11410                           ;Modbus.c: 384:     unsigned int TempData = 0x0000;
 11411  002262  0E00               	movlw	0
 11412  002264  6F94               	movwf	(ModbusFC10@TempData+1)& (0+255),b
 11413  002266  0E00               	movlw	0
 11414  002268  6F93               	movwf	ModbusFC10@TempData& (0+255),b
 11415                           
 11416                           ;Modbus.c: 385:     _Bool error = 0;
 11417  00226A  0E00               	movlw	0
 11418  00226C  6F95               	movwf	ModbusFC10@error& (0+255),b
 11419  00226E                     
 11420                           ; BSR set to: 0
 11421                           ;Modbus.c: 387:     if(((ModbusData[2] * 256) + ModbusData[3]) + ((ModbusData[4] * 256) 
      +                          + ModbusData[5]) > 32){
 11422  00226E  0101               	movlb	1	; () banked
 11423  002270  5102               	movf	(_ModbusData+2)& (0+255),w,b
 11424  002272  0100               	movlb	0	; () banked
 11425  002274  6F90               	movwf	(??_ModbusFC10+1)& (0+255),b
 11426  002276  6B8F               	clrf	??_ModbusFC10& (0+255),b
 11427  002278  0101               	movlb	1	; () banked
 11428  00227A  5105               	movf	(_ModbusData+5)& (0+255),w,b
 11429  00227C  C104  F091         	movff	_ModbusData+4,??_ModbusFC10+2
 11430  002280  0100               	movlb	0	; () banked
 11431  002282  6B92               	clrf	(??_ModbusFC10+3)& (0+255),b
 11432  002284  C091  F092         	movff	??_ModbusFC10+2,??_ModbusFC10+3
 11433  002288  6B91               	clrf	(??_ModbusFC10+2)& (0+255),b
 11434  00228A  2791               	addwf	(??_ModbusFC10+2)& (0+255),f,b
 11435  00228C  0E00               	movlw	0
 11436  00228E  2392               	addwfc	(??_ModbusFC10+3)& (0+255),f,b
 11437  002290  518F               	movf	??_ModbusFC10& (0+255),w,b
 11438  002292  2791               	addwf	(??_ModbusFC10+2)& (0+255),f,b
 11439  002294  5190               	movf	(??_ModbusFC10+1)& (0+255),w,b
 11440  002296  2392               	addwfc	(??_ModbusFC10+3)& (0+255),f,b
 11441  002298  0101               	movlb	1	; () banked
 11442  00229A  5103               	movf	(_ModbusData+3)& (0+255),w,b
 11443  00229C  0100               	movlb	0	; () banked
 11444  00229E  2791               	addwf	(??_ModbusFC10+2)& (0+255),f,b
 11445  0022A0  0E00               	movlw	0
 11446  0022A2  2392               	addwfc	(??_ModbusFC10+3)& (0+255),f,b
 11447  0022A4  BF92               	btfsc	(??_ModbusFC10+3)& (0+255),7,b
 11448  0022A6  EF5E  F011         	goto	u8111
 11449  0022AA  5192               	movf	(??_ModbusFC10+3)& (0+255),w,b
 11450  0022AC  E109               	bnz	u8110
 11451  0022AE  0E21               	movlw	33
 11452  0022B0  5D91               	subwf	(??_ModbusFC10+2)& (0+255),w,b
 11453  0022B2  A0D8               	btfss	status,0,c
 11454  0022B4  EF5E  F011         	goto	u8111
 11455  0022B8  EF60  F011         	goto	u8110
 11456  0022BC                     u8111:
 11457  0022BC  EF69  F011         	goto	l7921
 11458  0022C0                     u8110:
 11459  0022C0                     
 11460                           ; BSR set to: 0
 11461                           ;Modbus.c: 388:          printf("Requested registers out of range.  0x0000 to 0x020.\r\n
      +                          ");
 11462  0022C0  0EDF               	movlw	low STR_54
 11463  0022C2  6F7D               	movwf	printf@fmt& (0+255),b
 11464  0022C4  0EF6               	movlw	high STR_54
 11465  0022C6  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 11466  0022C8  EC3D  F026         	call	_printf	;wreg free
 11467  0022CC                     
 11468                           ;Modbus.c: 389:          error = 1;
 11469  0022CC  0E01               	movlw	1
 11470  0022CE  0100               	movlb	0	; () banked
 11471  0022D0  6F95               	movwf	ModbusFC10@error& (0+255),b
 11472  0022D2                     l7921:
 11473                           
 11474                           ; BSR set to: 0
 11475                           ;Modbus.c: 392:     if(error == 0){
 11476  0022D2  5195               	movf	ModbusFC10@error& (0+255),w,b
 11477  0022D4  A4D8               	btfss	status,2,c
 11478  0022D6  EF6F  F011         	goto	u8121
 11479  0022DA  EF71  F011         	goto	u8120
 11480  0022DE                     u8121:
 11481  0022DE  EF3C  F012         	goto	l7969
 11482  0022E2                     u8120:
 11483  0022E2                     
 11484                           ; BSR set to: 0
 11485                           ;Modbus.c: 394:         MBResCnt = 0;
 11486  0022E2  0E00               	movlw	0
 11487  0022E4  6FD8               	movwf	(_MBResCnt+1)& (0+255),b
 11488  0022E6  0E00               	movlw	0
 11489  0022E8  6FD7               	movwf	_MBResCnt& (0+255),b
 11490  0022EA                     
 11491                           ; BSR set to: 0
 11492                           ;Modbus.c: 395:         MBRespon[MBResCnt] = ModbusData[0];
 11493  0022EA  0E57               	movlw	low _MBRespon
 11494  0022EC  25D7               	addwf	_MBResCnt& (0+255),w,b
 11495  0022EE  6ED9               	movwf	fsr2l,c
 11496  0022F0  0E02               	movlw	high _MBRespon
 11497  0022F2  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 11498  0022F4  6EDA               	movwf	fsr2h,c
 11499  0022F6  C100  FFDF         	movff	_ModbusData,indf2
 11500  0022FA                     
 11501                           ; BSR set to: 0
 11502                           ;Modbus.c: 396:         MBResCnt++;
 11503  0022FA  4BD7               	infsnz	_MBResCnt& (0+255),f,b
 11504  0022FC  2BD8               	incf	(_MBResCnt+1)& (0+255),f,b
 11505  0022FE                     
 11506                           ; BSR set to: 0
 11507                           ;Modbus.c: 397:         MBRespon[MBResCnt] = ModbusData[1];
 11508  0022FE  0E57               	movlw	low _MBRespon
 11509  002300  25D7               	addwf	_MBResCnt& (0+255),w,b
 11510  002302  6ED9               	movwf	fsr2l,c
 11511  002304  0E02               	movlw	high _MBRespon
 11512  002306  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 11513  002308  6EDA               	movwf	fsr2h,c
 11514  00230A  C101  FFDF         	movff	_ModbusData+1,indf2
 11515  00230E                     
 11516                           ; BSR set to: 0
 11517                           ;Modbus.c: 398:         MBResCnt++;
 11518  00230E  4BD7               	infsnz	_MBResCnt& (0+255),f,b
 11519  002310  2BD8               	incf	(_MBResCnt+1)& (0+255),f,b
 11520  002312                     
 11521                           ; BSR set to: 0
 11522                           ;Modbus.c: 399:         MBRespon[MBResCnt] = ModbusData[2];
 11523  002312  0E57               	movlw	low _MBRespon
 11524  002314  25D7               	addwf	_MBResCnt& (0+255),w,b
 11525  002316  6ED9               	movwf	fsr2l,c
 11526  002318  0E02               	movlw	high _MBRespon
 11527  00231A  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 11528  00231C  6EDA               	movwf	fsr2h,c
 11529  00231E  C102  FFDF         	movff	_ModbusData+2,indf2
 11530  002322                     
 11531                           ; BSR set to: 0
 11532                           ;Modbus.c: 400:         MBResCnt++;
 11533  002322  4BD7               	infsnz	_MBResCnt& (0+255),f,b
 11534  002324  2BD8               	incf	(_MBResCnt+1)& (0+255),f,b
 11535  002326                     
 11536                           ; BSR set to: 0
 11537                           ;Modbus.c: 401:         MBRespon[MBResCnt] = ModbusData[3];
 11538  002326  0E57               	movlw	low _MBRespon
 11539  002328  25D7               	addwf	_MBResCnt& (0+255),w,b
 11540  00232A  6ED9               	movwf	fsr2l,c
 11541  00232C  0E02               	movlw	high _MBRespon
 11542  00232E  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 11543  002330  6EDA               	movwf	fsr2h,c
 11544  002332  C103  FFDF         	movff	_ModbusData+3,indf2
 11545  002336                     
 11546                           ; BSR set to: 0
 11547                           ;Modbus.c: 402:         MBResCnt++;
 11548  002336  4BD7               	infsnz	_MBResCnt& (0+255),f,b
 11549  002338  2BD8               	incf	(_MBResCnt+1)& (0+255),f,b
 11550  00233A                     
 11551                           ; BSR set to: 0
 11552                           ;Modbus.c: 403:         MBRespon[MBResCnt] = ModbusData[4];
 11553  00233A  0E57               	movlw	low _MBRespon
 11554  00233C  25D7               	addwf	_MBResCnt& (0+255),w,b
 11555  00233E  6ED9               	movwf	fsr2l,c
 11556  002340  0E02               	movlw	high _MBRespon
 11557  002342  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 11558  002344  6EDA               	movwf	fsr2h,c
 11559  002346  C104  FFDF         	movff	_ModbusData+4,indf2
 11560  00234A                     
 11561                           ; BSR set to: 0
 11562                           ;Modbus.c: 404:         MBResCnt++;
 11563  00234A  4BD7               	infsnz	_MBResCnt& (0+255),f,b
 11564  00234C  2BD8               	incf	(_MBResCnt+1)& (0+255),f,b
 11565  00234E                     
 11566                           ; BSR set to: 0
 11567                           ;Modbus.c: 405:         MBRespon[MBResCnt] = ModbusData[5];
 11568  00234E  0E57               	movlw	low _MBRespon
 11569  002350  25D7               	addwf	_MBResCnt& (0+255),w,b
 11570  002352  6ED9               	movwf	fsr2l,c
 11571  002354  0E02               	movlw	high _MBRespon
 11572  002356  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 11573  002358  6EDA               	movwf	fsr2h,c
 11574  00235A  C105  FFDF         	movff	_ModbusData+5,indf2
 11575  00235E                     
 11576                           ; BSR set to: 0
 11577                           ;Modbus.c: 406:         MBResCnt++;
 11578  00235E  4BD7               	infsnz	_MBResCnt& (0+255),f,b
 11579  002360  2BD8               	incf	(_MBResCnt+1)& (0+255),f,b
 11580                           
 11581                           ;Modbus.c: 408:         for(i=0; i< (ModbusData[5]) ; i++ ){
 11582  002362  0E00               	movlw	0
 11583  002364  6F97               	movwf	(ModbusFC10@i+1)& (0+255),b
 11584  002366  0E00               	movlw	0
 11585  002368  6F96               	movwf	ModbusFC10@i& (0+255),b
 11586  00236A  EFED  F011         	goto	l7957
 11587  00236E                     l7949:
 11588                           
 11589                           ; BSR set to: 0
 11590                           ;Modbus.c: 415:             TempData = ModbusData[7 +j] *256 + ModbusData[8 +j];
 11591  00236E  0E08               	movlw	low (_ModbusData+8)
 11592  002370  2598               	addwf	ModbusFC10@j& (0+255),w,b
 11593  002372  6ED9               	movwf	fsr2l,c
 11594  002374  0E01               	movlw	high (_ModbusData+8)
 11595  002376  2199               	addwfc	(ModbusFC10@j+1)& (0+255),w,b
 11596  002378  6EDA               	movwf	fsr2h,c
 11597  00237A  50DF               	movf	indf2,w,c
 11598  00237C  6F8F               	movwf	??_ModbusFC10& (0+255),b
 11599  00237E  0E07               	movlw	low (_ModbusData+7)
 11600  002380  2598               	addwf	ModbusFC10@j& (0+255),w,b
 11601  002382  6ED9               	movwf	fsr2l,c
 11602  002384  0E01               	movlw	high (_ModbusData+7)
 11603  002386  2199               	addwfc	(ModbusFC10@j+1)& (0+255),w,b
 11604  002388  6EDA               	movwf	fsr2h,c
 11605  00238A  50DF               	movf	indf2,w,c
 11606  00238C  6F90               	movwf	(??_ModbusFC10+1)& (0+255),b
 11607  00238E  5190               	movf	(??_ModbusFC10+1)& (0+255),w,b
 11608  002390  6F92               	movwf	(??_ModbusFC10+3)& (0+255),b
 11609  002392  6B91               	clrf	(??_ModbusFC10+2)& (0+255),b
 11610  002394  518F               	movf	??_ModbusFC10& (0+255),w,b
 11611  002396  2591               	addwf	(??_ModbusFC10+2)& (0+255),w,b
 11612  002398  6F93               	movwf	ModbusFC10@TempData& (0+255),b
 11613  00239A  0E00               	movlw	0
 11614  00239C  2192               	addwfc	(??_ModbusFC10+3)& (0+255),w,b
 11615  00239E  6F94               	movwf	(ModbusFC10@TempData+1)& (0+255),b
 11616  0023A0                     
 11617                           ; BSR set to: 0
 11618                           ;Modbus.c: 416:             j = j+2;
 11619  0023A0  0E02               	movlw	2
 11620  0023A2  2598               	addwf	ModbusFC10@j& (0+255),w,b
 11621  0023A4  6F98               	movwf	ModbusFC10@j& (0+255),b
 11622  0023A6  0E00               	movlw	0
 11623  0023A8  2199               	addwfc	(ModbusFC10@j+1)& (0+255),w,b
 11624  0023AA  6F99               	movwf	(ModbusFC10@j+1)& (0+255),b
 11625  0023AC                     
 11626                           ; BSR set to: 0
 11627                           ;Modbus.c: 417:             MB400xx[ModbusData[3] +i] = TempData;
 11628  0023AC  0101               	movlb	1	; () banked
 11629  0023AE  5103               	movf	(_ModbusData+3)& (0+255),w,b
 11630  0023B0  0100               	movlb	0	; () banked
 11631  0023B2  2596               	addwf	ModbusFC10@i& (0+255),w,b
 11632  0023B4  6F8F               	movwf	??_ModbusFC10& (0+255),b
 11633  0023B6  0E00               	movlw	0
 11634  0023B8  2197               	addwfc	(ModbusFC10@i+1)& (0+255),w,b
 11635  0023BA  6F90               	movwf	(??_ModbusFC10+1)& (0+255),b
 11636  0023BC  90D8               	bcf	status,0,c
 11637  0023BE  378F               	rlcf	??_ModbusFC10& (0+255),f,b
 11638  0023C0  3790               	rlcf	(??_ModbusFC10+1)& (0+255),f,b
 11639  0023C2  0E64               	movlw	low _MB400xx
 11640  0023C4  258F               	addwf	??_ModbusFC10& (0+255),w,b
 11641  0023C6  6ED9               	movwf	fsr2l,c
 11642  0023C8  0E04               	movlw	high _MB400xx
 11643  0023CA  2190               	addwfc	(??_ModbusFC10+1)& (0+255),w,b
 11644  0023CC  6EDA               	movwf	fsr2h,c
 11645  0023CE  C093  FFDE         	movff	ModbusFC10@TempData,postinc2
 11646  0023D2  C094  FFDD         	movff	ModbusFC10@TempData+1,postdec2
 11647  0023D6                     
 11648                           ; BSR set to: 0
 11649                           ;Modbus.c: 418:         }
 11650  0023D6  4B96               	infsnz	ModbusFC10@i& (0+255),f,b
 11651  0023D8  2B97               	incf	(ModbusFC10@i+1)& (0+255),f,b
 11652  0023DA                     l7957:
 11653                           
 11654                           ; BSR set to: 0
 11655  0023DA  0101               	movlb	1	; () banked
 11656  0023DC  5105               	movf	(_ModbusData+5)& (0+255),w,b
 11657  0023DE  0100               	movlb	0	; () banked
 11658  0023E0  6F8F               	movwf	??_ModbusFC10& (0+255),b
 11659  0023E2  6B90               	clrf	(??_ModbusFC10+1)& (0+255),b
 11660  0023E4  518F               	movf	??_ModbusFC10& (0+255),w,b
 11661  0023E6  5D96               	subwf	ModbusFC10@i& (0+255),w,b
 11662  0023E8  5197               	movf	(ModbusFC10@i+1)& (0+255),w,b
 11663  0023EA  0A80               	xorlw	128
 11664  0023EC  6F91               	movwf	(??_ModbusFC10+2)& (0+255),b
 11665  0023EE  5190               	movf	(??_ModbusFC10+1)& (0+255),w,b
 11666  0023F0  0A80               	xorlw	128
 11667  0023F2  5991               	subwfb	(??_ModbusFC10+2)& (0+255),w,b
 11668  0023F4  A0D8               	btfss	status,0,c
 11669  0023F6  EFFF  F011         	goto	u8131
 11670  0023FA  EF01  F012         	goto	u8130
 11671  0023FE                     u8131:
 11672  0023FE  EFB7  F011         	goto	l7949
 11673  002402                     u8130:
 11674  002402                     
 11675                           ; BSR set to: 0
 11676                           ;Modbus.c: 420:         ByteHi = generateCRC(MBResCnt, 1);
 11677  002402  C0D7  F005         	movff	_MBResCnt,generateCRC@MessCnt
 11678  002406  C0D8  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
 11679  00240A  0E01               	movlw	1
 11680  00240C  6E07               	movwf	generateCRC@HiOrLo^0,c
 11681  00240E  ECF1  F01C         	call	_generateCRC	;wreg free
 11682  002412  C005  F0D5         	movff	?_generateCRC,_ByteHi
 11683  002416  C006  F0D6         	movff	?_generateCRC+1,_ByteHi+1
 11684                           
 11685                           ;Modbus.c: 421:         ByteLo = generateCRC(MBResCnt, 0);
 11686  00241A  C0D7  F005         	movff	_MBResCnt,generateCRC@MessCnt
 11687  00241E  C0D8  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
 11688  002422  0E00               	movlw	0
 11689  002424  6E07               	movwf	generateCRC@HiOrLo^0,c
 11690  002426  ECF1  F01C         	call	_generateCRC	;wreg free
 11691  00242A  C005  F0F6         	movff	?_generateCRC,_ByteLo
 11692  00242E  C006  F0F7         	movff	?_generateCRC+1,_ByteLo+1
 11693  002432                     
 11694                           ;Modbus.c: 423:         MBRespon[MBResCnt] = ByteHi;
 11695  002432  0E57               	movlw	low _MBRespon
 11696  002434  0100               	movlb	0	; () banked
 11697  002436  25D7               	addwf	_MBResCnt& (0+255),w,b
 11698  002438  6ED9               	movwf	fsr2l,c
 11699  00243A  0E02               	movlw	high _MBRespon
 11700  00243C  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 11701  00243E  6EDA               	movwf	fsr2h,c
 11702  002440  C0D5  FFDF         	movff	_ByteHi,indf2
 11703  002444                     
 11704                           ; BSR set to: 0
 11705                           ;Modbus.c: 424:         MBRespon[MBResCnt +1] = ByteLo;
 11706  002444  0E58               	movlw	low (_MBRespon+1)
 11707  002446  25D7               	addwf	_MBResCnt& (0+255),w,b
 11708  002448  6ED9               	movwf	fsr2l,c
 11709  00244A  0E02               	movlw	high (_MBRespon+1)
 11710  00244C  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 11711  00244E  6EDA               	movwf	fsr2h,c
 11712  002450  C0F6  FFDF         	movff	_ByteLo,indf2
 11713  002454                     
 11714                           ; BSR set to: 0
 11715                           ;Modbus.c: 425:         MBResCnt = MBResCnt +2;
 11716  002454  0E02               	movlw	2
 11717  002456  25D7               	addwf	_MBResCnt& (0+255),w,b
 11718  002458  6FD7               	movwf	_MBResCnt& (0+255),b
 11719  00245A  0E00               	movlw	0
 11720  00245C  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 11721  00245E  6FD8               	movwf	(_MBResCnt+1)& (0+255),b
 11722  002460                     
 11723                           ; BSR set to: 0
 11724                           ;Modbus.c: 427:         UART1_Write_string(MBRespon,MBResCnt);
 11725  002460  0E57               	movlw	low _MBRespon
 11726  002462  6E06               	movwf	UART1_Write_string@data^0,c
 11727  002464  0E02               	movlw	high _MBRespon
 11728  002466  6E07               	movwf	(UART1_Write_string@data+1)^0,c
 11729  002468  C0D7  F008         	movff	_MBResCnt,UART1_Write_string@data_len
 11730  00246C  C0D8  F009         	movff	_MBResCnt+1,UART1_Write_string@data_len+1
 11731  002470  ECBE  F021         	call	_UART1_Write_string	;wreg free
 11732                           
 11733                           ;Modbus.c: 428:     }else{
 11734  002474  EF42  F012         	goto	l801
 11735  002478                     l7969:
 11736                           
 11737                           ; BSR set to: 0
 11738                           ;Modbus.c: 429:         ModbusError(0x02);
 11739  002478  0E00               	movlw	0
 11740  00247A  6E15               	movwf	(ModbusError@ErrorCode+1)^0,c
 11741  00247C  0E02               	movlw	2
 11742  00247E  6E14               	movwf	ModbusError@ErrorCode^0,c
 11743  002480  ECF3  F01E         	call	_ModbusError	;wreg free
 11744  002484                     l801:
 11745  002484  0012               	return		;funcret
 11746  002486                     __end_of_ModbusFC10:
 11747                           	opt callstack 0
 11748                           
 11749 ;; *************** function _ModbusFC03 *****************
 11750 ;; Defined at:
 11751 ;;		line 174 in file "Modbus.c"
 11752 ;; Parameters:    Size  Location     Type
 11753 ;;		None
 11754 ;; Auto vars:     Size  Location     Type
 11755 ;;  convertedVal    2   53[BANK0 ] unsigned short 
 11756 ;;  i               2   56[BANK0 ] int 
 11757 ;;  error           1   55[BANK0 ] _Bool 
 11758 ;; Return value:  Size  Location     Type
 11759 ;;                  1    wreg      void 
 11760 ;; Registers used:
 11761 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11762 ;; Tracked objects:
 11763 ;;		On entry : 0/0
 11764 ;;		On exit  : 0/0
 11765 ;;		Unchanged: 0/0
 11766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11768 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11769 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11770 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11771 ;;Total ram usage:       11 bytes
 11772 ;; Hardware stack levels used:    1
 11773 ;; Hardware stack levels required when called:   13
 11774 ;; This function calls:
 11775 ;;		_ADCC_GetSingleConversion
 11776 ;;		_ModbusError
 11777 ;;		_UART1_Write_string
 11778 ;;		_generateCRC
 11779 ;;		_printf
 11780 ;; This function is called by:
 11781 ;;		_main
 11782 ;; This function uses a non-reentrant model
 11783 ;;
 11784                           
 11785                           	psect	text48
 11786  00012A                     __ptext48:
 11787                           	opt callstack 0
 11788  00012A                     _ModbusFC03:
 11789                           	opt callstack 17
 11790  00012A                     
 11791                           ;Modbus.c: 178:     _Bool error = 0;
 11792  00012A  0E00               	movlw	0
 11793  00012C  0100               	movlb	0	; () banked
 11794  00012E  6F97               	movwf	ModbusFC03@error& (0+255),b
 11795                           
 11796                           ;Modbus.c: 180:     MBResCnt = 0;
 11797  000130  0E00               	movlw	0
 11798  000132  6FD8               	movwf	(_MBResCnt+1)& (0+255),b
 11799  000134  0E00               	movlw	0
 11800  000136  6FD7               	movwf	_MBResCnt& (0+255),b
 11801  000138                     
 11802                           ; BSR set to: 0
 11803                           ;Modbus.c: 181:     MBRespon[MBResCnt] = ModbusData[0];
 11804  000138  0E57               	movlw	low _MBRespon
 11805  00013A  25D7               	addwf	_MBResCnt& (0+255),w,b
 11806  00013C  6ED9               	movwf	fsr2l,c
 11807  00013E  0E02               	movlw	high _MBRespon
 11808  000140  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 11809  000142  6EDA               	movwf	fsr2h,c
 11810  000144  C100  FFDF         	movff	_ModbusData,indf2
 11811  000148                     
 11812                           ; BSR set to: 0
 11813                           ;Modbus.c: 182:     MBResCnt++;
 11814  000148  4BD7               	infsnz	_MBResCnt& (0+255),f,b
 11815  00014A  2BD8               	incf	(_MBResCnt+1)& (0+255),f,b
 11816  00014C                     
 11817                           ; BSR set to: 0
 11818                           ;Modbus.c: 183:     MBRespon[MBResCnt] = ModbusData[1];
 11819  00014C  0E57               	movlw	low _MBRespon
 11820  00014E  25D7               	addwf	_MBResCnt& (0+255),w,b
 11821  000150  6ED9               	movwf	fsr2l,c
 11822  000152  0E02               	movlw	high _MBRespon
 11823  000154  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 11824  000156  6EDA               	movwf	fsr2h,c
 11825  000158  C101  FFDF         	movff	_ModbusData+1,indf2
 11826  00015C                     
 11827                           ; BSR set to: 0
 11828                           ;Modbus.c: 184:     MBResCnt++;
 11829  00015C  4BD7               	infsnz	_MBResCnt& (0+255),f,b
 11830  00015E  2BD8               	incf	(_MBResCnt+1)& (0+255),f,b
 11831  000160                     
 11832                           ; BSR set to: 0
 11833                           ;Modbus.c: 185:     MBRespon[MBResCnt] = ModbusData[5] *2;
 11834  000160  0101               	movlb	1	; () banked
 11835  000162  5105               	movf	(_ModbusData+5)& (0+255),w,b
 11836  000164  0D02               	mullw	2
 11837  000166  0E57               	movlw	low _MBRespon
 11838  000168  0100               	movlb	0	; () banked
 11839  00016A  25D7               	addwf	_MBResCnt& (0+255),w,b
 11840  00016C  6ED9               	movwf	fsr2l,c
 11841  00016E  0E02               	movlw	high _MBRespon
 11842  000170  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 11843  000172  6EDA               	movwf	fsr2h,c
 11844  000174  CFF3 FFDF          	movff	prodl,indf2
 11845  000178                     
 11846                           ; BSR set to: 0
 11847                           ;Modbus.c: 186:     MBResCnt++;
 11848  000178  4BD7               	infsnz	_MBResCnt& (0+255),f,b
 11849  00017A  2BD8               	incf	(_MBResCnt+1)& (0+255),f,b
 11850                           
 11851                           ;Modbus.c: 189:     switch(ModbusData[2]){
 11852  00017C  EFC1  F004         	goto	l7829
 11853  000180                     l7757:
 11854                           
 11855                           ; BSR set to: 0
 11856                           ;Modbus.c: 192:         {;Modbus.c: 193:             printf("Requested Circuit Data\r\n"
      +                          );
 11857  000180  0EC4               	movlw	low STR_32
 11858  000182  6F7D               	movwf	printf@fmt& (0+255),b
 11859  000184  0EFD               	movlw	high STR_32
 11860  000186  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 11861  000188  EC3D  F026         	call	_printf	;wreg free
 11862  00018C                     
 11863                           ;Modbus.c: 195:             if(
 11864  00018C  0101               	movlb	1	; () banked
 11865  00018E  5102               	movf	(_ModbusData+2)& (0+255),w,b
 11866  000190  0100               	movlb	0	; () banked
 11867  000192  6F90               	movwf	(??_ModbusFC03+1)& (0+255),b
 11868  000194  6B8F               	clrf	??_ModbusFC03& (0+255),b
 11869  000196  0101               	movlb	1	; () banked
 11870  000198  5105               	movf	(_ModbusData+5)& (0+255),w,b
 11871  00019A  C104  F091         	movff	_ModbusData+4,??_ModbusFC03+2
 11872  00019E  0100               	movlb	0	; () banked
 11873  0001A0  6B92               	clrf	(??_ModbusFC03+3)& (0+255),b
 11874  0001A2  C091  F092         	movff	??_ModbusFC03+2,??_ModbusFC03+3
 11875  0001A6  6B91               	clrf	(??_ModbusFC03+2)& (0+255),b
 11876  0001A8  2791               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 11877  0001AA  0E00               	movlw	0
 11878  0001AC  2392               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 11879  0001AE  518F               	movf	??_ModbusFC03& (0+255),w,b
 11880  0001B0  2791               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 11881  0001B2  5190               	movf	(??_ModbusFC03+1)& (0+255),w,b
 11882  0001B4  2392               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 11883  0001B6  0101               	movlb	1	; () banked
 11884  0001B8  5103               	movf	(_ModbusData+3)& (0+255),w,b
 11885  0001BA  0100               	movlb	0	; () banked
 11886  0001BC  2791               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 11887  0001BE  0E00               	movlw	0
 11888  0001C0  2392               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 11889  0001C2  BF92               	btfsc	(??_ModbusFC03+3)& (0+255),7,b
 11890  0001C4  EFE6  F000         	goto	u7871
 11891  0001C8  EFE8  F000         	goto	u7870
 11892  0001CC                     u7871:
 11893  0001CC  EF11  F001         	goto	l7763
 11894  0001D0                     u7870:
 11895  0001D0                     
 11896                           ; BSR set to: 0
 11897  0001D0  0101               	movlb	1	; () banked
 11898  0001D2  5102               	movf	(_ModbusData+2)& (0+255),w,b
 11899  0001D4  0100               	movlb	0	; () banked
 11900  0001D6  6F90               	movwf	(??_ModbusFC03+1)& (0+255),b
 11901  0001D8  6B8F               	clrf	??_ModbusFC03& (0+255),b
 11902  0001DA  0101               	movlb	1	; () banked
 11903  0001DC  5105               	movf	(_ModbusData+5)& (0+255),w,b
 11904  0001DE  C104  F091         	movff	_ModbusData+4,??_ModbusFC03+2
 11905  0001E2  0100               	movlb	0	; () banked
 11906  0001E4  6B92               	clrf	(??_ModbusFC03+3)& (0+255),b
 11907  0001E6  C091  F092         	movff	??_ModbusFC03+2,??_ModbusFC03+3
 11908  0001EA  6B91               	clrf	(??_ModbusFC03+2)& (0+255),b
 11909  0001EC  2791               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 11910  0001EE  0E00               	movlw	0
 11911  0001F0  2392               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 11912  0001F2  518F               	movf	??_ModbusFC03& (0+255),w,b
 11913  0001F4  2791               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 11914  0001F6  5190               	movf	(??_ModbusFC03+1)& (0+255),w,b
 11915  0001F8  2392               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 11916  0001FA  0101               	movlb	1	; () banked
 11917  0001FC  5103               	movf	(_ModbusData+3)& (0+255),w,b
 11918  0001FE  0100               	movlb	0	; () banked
 11919  000200  2791               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 11920  000202  0E00               	movlw	0
 11921  000204  2392               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 11922  000206  BF92               	btfsc	(??_ModbusFC03+3)& (0+255),7,b
 11923  000208  EF0F  F001         	goto	u7881
 11924  00020C  5192               	movf	(??_ModbusFC03+3)& (0+255),w,b
 11925  00020E  E109               	bnz	u7880
 11926  000210  0E21               	movlw	33
 11927  000212  5D91               	subwf	(??_ModbusFC03+2)& (0+255),w,b
 11928  000214  A0D8               	btfss	status,0,c
 11929  000216  EF0F  F001         	goto	u7881
 11930  00021A  EF11  F001         	goto	u7880
 11931  00021E                     u7881:
 11932  00021E  EFEC  F004         	goto	l7831
 11933  000222                     u7880:
 11934  000222                     l7763:
 11935                           
 11936                           ; BSR set to: 0
 11937                           ;Modbus.c: 197:                 (((ModbusData[2] * 256) + ModbusData[3]) + ((ModbusData[
      +                          4] * 256) + ModbusData[5]) > 32)){;Modbus.c: 199:                 printf("Registers out 
      +                          of range.\r\nValid: 0x0000 to 0x0031.\r\n");
 11938  000222  0E7E               	movlw	low STR_33
 11939  000224  6F7D               	movwf	printf@fmt& (0+255),b
 11940  000226  0EF7               	movlw	high STR_33
 11941  000228  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 11942  00022A  EC3D  F026         	call	_printf	;wreg free
 11943                           
 11944                           ;Modbus.c: 201:                 printf("Requested: 0x%04x to 0x%04x\r\n", ModbusData[2] 
      +                          * 256 + ModbusData[3],
 11945  00022E  0E37               	movlw	low STR_34
 11946  000230  0100               	movlb	0	; () banked
 11947  000232  6F7D               	movwf	printf@fmt& (0+255),b
 11948  000234  0EFD               	movlw	high STR_34
 11949  000236  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 11950  000238  0101               	movlb	1	; () banked
 11951  00023A  5102               	movf	(_ModbusData+2)& (0+255),w,b
 11952  00023C  0100               	movlb	0	; () banked
 11953  00023E  6F90               	movwf	(??_ModbusFC03+1)& (0+255),b
 11954  000240  6B8F               	clrf	??_ModbusFC03& (0+255),b
 11955  000242  0101               	movlb	1	; () banked
 11956  000244  5103               	movf	(_ModbusData+3)& (0+255),w,b
 11957  000246  0100               	movlb	0	; () banked
 11958  000248  258F               	addwf	??_ModbusFC03& (0+255),w,b
 11959  00024A  6F7F               	movwf	(?_printf+2)& (0+255),b
 11960  00024C  0101               	movlb	1	; () banked
 11961  00024E  0E00               	movlw	0
 11962  000250  0100               	movlb	0	; () banked
 11963  000252  2190               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
 11964  000254  6F80               	movwf	(?_printf+3)& (0+255),b
 11965  000256  0101               	movlb	1	; () banked
 11966  000258  5104               	movf	(_ModbusData+4)& (0+255),w,b
 11967  00025A  0100               	movlb	0	; () banked
 11968  00025C  6F92               	movwf	(??_ModbusFC03+3)& (0+255),b
 11969  00025E  6B91               	clrf	(??_ModbusFC03+2)& (0+255),b
 11970  000260  0101               	movlb	1	; () banked
 11971  000262  5103               	movf	(_ModbusData+3)& (0+255),w,b
 11972  000264  C102  F093         	movff	_ModbusData+2,??_ModbusFC03+4
 11973  000268  0100               	movlb	0	; () banked
 11974  00026A  6B94               	clrf	(??_ModbusFC03+5)& (0+255),b
 11975  00026C  C093  F094         	movff	??_ModbusFC03+4,??_ModbusFC03+5
 11976  000270  6B93               	clrf	(??_ModbusFC03+4)& (0+255),b
 11977  000272  2793               	addwf	(??_ModbusFC03+4)& (0+255),f,b
 11978  000274  0E00               	movlw	0
 11979  000276  2394               	addwfc	(??_ModbusFC03+5)& (0+255),f,b
 11980  000278  5191               	movf	(??_ModbusFC03+2)& (0+255),w,b
 11981  00027A  2793               	addwf	(??_ModbusFC03+4)& (0+255),f,b
 11982  00027C  5192               	movf	(??_ModbusFC03+3)& (0+255),w,b
 11983  00027E  2394               	addwfc	(??_ModbusFC03+5)& (0+255),f,b
 11984  000280  0101               	movlb	1	; () banked
 11985  000282  5105               	movf	(_ModbusData+5)& (0+255),w,b
 11986  000284  0100               	movlb	0	; () banked
 11987  000286  2593               	addwf	(??_ModbusFC03+4)& (0+255),w,b
 11988  000288  6F81               	movwf	(?_printf+4)& (0+255),b
 11989  00028A  0101               	movlb	1	; () banked
 11990  00028C  0E00               	movlw	0
 11991  00028E  0100               	movlb	0	; () banked
 11992  000290  2194               	addwfc	(??_ModbusFC03+5)& (0+255),w,b
 11993  000292  6F82               	movwf	(?_printf+5)& (0+255),b
 11994  000294  EC3D  F026         	call	_printf	;wreg free
 11995  000298                     l7765:
 11996                           
 11997                           ;Modbus.c: 203:                 error = 1;
 11998  000298  0E01               	movlw	1
 11999  00029A  0100               	movlb	0	; () banked
 12000  00029C  6F97               	movwf	ModbusFC03@error& (0+255),b
 12001  00029E  EFEC  F004         	goto	l7831
 12002  0002A2                     l7767:
 12003                           
 12004                           ; BSR set to: 0
 12005                           ;Modbus.c: 208:         {;Modbus.c: 209:             printf("Requested Part No.\r\n");
 12006  0002A2  0E97               	movlw	low STR_35
 12007  0002A4  6F7D               	movwf	printf@fmt& (0+255),b
 12008  0002A6  0EFE               	movlw	high STR_35
 12009  0002A8  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 12010  0002AA  EC3D  F026         	call	_printf	;wreg free
 12011  0002AE                     
 12012                           ;Modbus.c: 211:             if(
 12013  0002AE  0101               	movlb	1	; () banked
 12014  0002B0  5102               	movf	(_ModbusData+2)& (0+255),w,b
 12015  0002B2  0100               	movlb	0	; () banked
 12016  0002B4  6F90               	movwf	(??_ModbusFC03+1)& (0+255),b
 12017  0002B6  6B8F               	clrf	??_ModbusFC03& (0+255),b
 12018  0002B8  0101               	movlb	1	; () banked
 12019  0002BA  5105               	movf	(_ModbusData+5)& (0+255),w,b
 12020  0002BC  C104  F091         	movff	_ModbusData+4,??_ModbusFC03+2
 12021  0002C0  0100               	movlb	0	; () banked
 12022  0002C2  6B92               	clrf	(??_ModbusFC03+3)& (0+255),b
 12023  0002C4  C091  F092         	movff	??_ModbusFC03+2,??_ModbusFC03+3
 12024  0002C8  6B91               	clrf	(??_ModbusFC03+2)& (0+255),b
 12025  0002CA  2791               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 12026  0002CC  0E00               	movlw	0
 12027  0002CE  2392               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 12028  0002D0  518F               	movf	??_ModbusFC03& (0+255),w,b
 12029  0002D2  2791               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 12030  0002D4  5190               	movf	(??_ModbusFC03+1)& (0+255),w,b
 12031  0002D6  2392               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 12032  0002D8  0101               	movlb	1	; () banked
 12033  0002DA  5103               	movf	(_ModbusData+3)& (0+255),w,b
 12034  0002DC  0100               	movlb	0	; () banked
 12035  0002DE  2791               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 12036  0002E0  0E00               	movlw	0
 12037  0002E2  2392               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 12038  0002E4  BF92               	btfsc	(??_ModbusFC03+3)& (0+255),7,b
 12039  0002E6  EF7B  F001         	goto	u7891
 12040  0002EA  0592               	decf	(??_ModbusFC03+3)& (0+255),w,b
 12041  0002EC  A0D8               	btfss	status,0,c
 12042  0002EE  EF7B  F001         	goto	u7891
 12043  0002F2  EF7D  F001         	goto	u7890
 12044  0002F6                     u7891:
 12045  0002F6  EFA6  F001         	goto	l7773
 12046  0002FA                     u7890:
 12047  0002FA                     
 12048                           ; BSR set to: 0
 12049  0002FA  0101               	movlb	1	; () banked
 12050  0002FC  5102               	movf	(_ModbusData+2)& (0+255),w,b
 12051  0002FE  0100               	movlb	0	; () banked
 12052  000300  6F90               	movwf	(??_ModbusFC03+1)& (0+255),b
 12053  000302  6B8F               	clrf	??_ModbusFC03& (0+255),b
 12054  000304  0101               	movlb	1	; () banked
 12055  000306  5105               	movf	(_ModbusData+5)& (0+255),w,b
 12056  000308  C104  F091         	movff	_ModbusData+4,??_ModbusFC03+2
 12057  00030C  0100               	movlb	0	; () banked
 12058  00030E  6B92               	clrf	(??_ModbusFC03+3)& (0+255),b
 12059  000310  C091  F092         	movff	??_ModbusFC03+2,??_ModbusFC03+3
 12060  000314  6B91               	clrf	(??_ModbusFC03+2)& (0+255),b
 12061  000316  2791               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 12062  000318  0E00               	movlw	0
 12063  00031A  2392               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 12064  00031C  518F               	movf	??_ModbusFC03& (0+255),w,b
 12065  00031E  2791               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 12066  000320  5190               	movf	(??_ModbusFC03+1)& (0+255),w,b
 12067  000322  2392               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 12068  000324  0101               	movlb	1	; () banked
 12069  000326  5103               	movf	(_ModbusData+3)& (0+255),w,b
 12070  000328  0100               	movlb	0	; () banked
 12071  00032A  2791               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 12072  00032C  0E00               	movlw	0
 12073  00032E  2392               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 12074  000330  BF92               	btfsc	(??_ModbusFC03+3)& (0+255),7,b
 12075  000332  EFA4  F001         	goto	u7901
 12076  000336  0E09               	movlw	9
 12077  000338  5D91               	subwf	(??_ModbusFC03+2)& (0+255),w,b
 12078  00033A  0E01               	movlw	1
 12079  00033C  5992               	subwfb	(??_ModbusFC03+3)& (0+255),w,b
 12080  00033E  A0D8               	btfss	status,0,c
 12081  000340  EFA4  F001         	goto	u7901
 12082  000344  EFA6  F001         	goto	u7900
 12083  000348                     u7901:
 12084  000348  EFEC  F004         	goto	l7831
 12085  00034C                     u7900:
 12086  00034C                     l7773:
 12087                           
 12088                           ; BSR set to: 0
 12089                           ;Modbus.c: 213:                 (((ModbusData[2] * 256) + ModbusData[3]) + ((ModbusData[
      +                          4] * 256) + ModbusData[5]) > 264)){;Modbus.c: 215:                 printf("Registers out
      +                           of range.\r\nValid: 0x0100 to 0x0108.\r\n");
 12090  00034C  0E82               	movlw	low STR_36
 12091  00034E  6F7D               	movwf	printf@fmt& (0+255),b
 12092  000350  0EF8               	movlw	high STR_36
 12093  000352  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 12094  000354  EC3D  F026         	call	_printf	;wreg free
 12095                           
 12096                           ;Modbus.c: 217:                 printf("Requested: 0x%04x to 0x%04x\r\n", ModbusData[2] 
      +                          * 256 + ModbusData[3],
 12097  000358  0E37               	movlw	low STR_34
 12098  00035A  0100               	movlb	0	; () banked
 12099  00035C  6F7D               	movwf	printf@fmt& (0+255),b
 12100  00035E  0EFD               	movlw	high STR_34
 12101  000360  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 12102  000362  0101               	movlb	1	; () banked
 12103  000364  5102               	movf	(_ModbusData+2)& (0+255),w,b
 12104  000366  0100               	movlb	0	; () banked
 12105  000368  6F90               	movwf	(??_ModbusFC03+1)& (0+255),b
 12106  00036A  6B8F               	clrf	??_ModbusFC03& (0+255),b
 12107  00036C  0101               	movlb	1	; () banked
 12108  00036E  5103               	movf	(_ModbusData+3)& (0+255),w,b
 12109  000370  0100               	movlb	0	; () banked
 12110  000372  258F               	addwf	??_ModbusFC03& (0+255),w,b
 12111  000374  6F7F               	movwf	(?_printf+2)& (0+255),b
 12112  000376  0101               	movlb	1	; () banked
 12113  000378  0E00               	movlw	0
 12114  00037A  0100               	movlb	0	; () banked
 12115  00037C  2190               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
 12116  00037E  6F80               	movwf	(?_printf+3)& (0+255),b
 12117  000380  0101               	movlb	1	; () banked
 12118  000382  5104               	movf	(_ModbusData+4)& (0+255),w,b
 12119  000384  0100               	movlb	0	; () banked
 12120  000386  6F92               	movwf	(??_ModbusFC03+3)& (0+255),b
 12121  000388  6B91               	clrf	(??_ModbusFC03+2)& (0+255),b
 12122  00038A  0101               	movlb	1	; () banked
 12123  00038C  5103               	movf	(_ModbusData+3)& (0+255),w,b
 12124  00038E  C102  F093         	movff	_ModbusData+2,??_ModbusFC03+4
 12125  000392  0100               	movlb	0	; () banked
 12126  000394  6B94               	clrf	(??_ModbusFC03+5)& (0+255),b
 12127  000396  C093  F094         	movff	??_ModbusFC03+4,??_ModbusFC03+5
 12128  00039A  6B93               	clrf	(??_ModbusFC03+4)& (0+255),b
 12129  00039C  2793               	addwf	(??_ModbusFC03+4)& (0+255),f,b
 12130  00039E  0E00               	movlw	0
 12131  0003A0  2394               	addwfc	(??_ModbusFC03+5)& (0+255),f,b
 12132  0003A2  5191               	movf	(??_ModbusFC03+2)& (0+255),w,b
 12133  0003A4  2793               	addwf	(??_ModbusFC03+4)& (0+255),f,b
 12134  0003A6  5192               	movf	(??_ModbusFC03+3)& (0+255),w,b
 12135  0003A8  2394               	addwfc	(??_ModbusFC03+5)& (0+255),f,b
 12136  0003AA  0101               	movlb	1	; () banked
 12137  0003AC  5105               	movf	(_ModbusData+5)& (0+255),w,b
 12138  0003AE  0100               	movlb	0	; () banked
 12139  0003B0  2593               	addwf	(??_ModbusFC03+4)& (0+255),w,b
 12140  0003B2  6F81               	movwf	(?_printf+4)& (0+255),b
 12141  0003B4  0101               	movlb	1	; () banked
 12142  0003B6  0E00               	movlw	0
 12143  0003B8  0100               	movlb	0	; () banked
 12144  0003BA  2194               	addwfc	(??_ModbusFC03+5)& (0+255),w,b
 12145  0003BC  6F82               	movwf	(?_printf+5)& (0+255),b
 12146  0003BE  EC3D  F026         	call	_printf	;wreg free
 12147  0003C2  EF4C  F001         	goto	l7765
 12148  0003C6                     l7777:
 12149                           
 12150                           ; BSR set to: 0
 12151                           ;Modbus.c: 224:         {;Modbus.c: 225:             printf("Requested Revision\r\n");
 12152  0003C6  0EC1               	movlw	low STR_38
 12153  0003C8  6F7D               	movwf	printf@fmt& (0+255),b
 12154  0003CA  0EFE               	movlw	high STR_38
 12155  0003CC  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 12156  0003CE  EC3D  F026         	call	_printf	;wreg free
 12157  0003D2                     
 12158                           ;Modbus.c: 226:             if(
 12159  0003D2  0101               	movlb	1	; () banked
 12160  0003D4  5102               	movf	(_ModbusData+2)& (0+255),w,b
 12161  0003D6  0100               	movlb	0	; () banked
 12162  0003D8  6F90               	movwf	(??_ModbusFC03+1)& (0+255),b
 12163  0003DA  6B8F               	clrf	??_ModbusFC03& (0+255),b
 12164  0003DC  0101               	movlb	1	; () banked
 12165  0003DE  5105               	movf	(_ModbusData+5)& (0+255),w,b
 12166  0003E0  C104  F091         	movff	_ModbusData+4,??_ModbusFC03+2
 12167  0003E4  0100               	movlb	0	; () banked
 12168  0003E6  6B92               	clrf	(??_ModbusFC03+3)& (0+255),b
 12169  0003E8  C091  F092         	movff	??_ModbusFC03+2,??_ModbusFC03+3
 12170  0003EC  6B91               	clrf	(??_ModbusFC03+2)& (0+255),b
 12171  0003EE  2791               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 12172  0003F0  0E00               	movlw	0
 12173  0003F2  2392               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 12174  0003F4  518F               	movf	??_ModbusFC03& (0+255),w,b
 12175  0003F6  2791               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 12176  0003F8  5190               	movf	(??_ModbusFC03+1)& (0+255),w,b
 12177  0003FA  2392               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 12178  0003FC  0101               	movlb	1	; () banked
 12179  0003FE  5103               	movf	(_ModbusData+3)& (0+255),w,b
 12180  000400  0100               	movlb	0	; () banked
 12181  000402  2791               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 12182  000404  0E00               	movlw	0
 12183  000406  2392               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 12184  000408  BF92               	btfsc	(??_ModbusFC03+3)& (0+255),7,b
 12185  00040A  EF0E  F002         	goto	u7911
 12186  00040E  0E02               	movlw	2
 12187  000410  5D92               	subwf	(??_ModbusFC03+3)& (0+255),w,b
 12188  000412  A0D8               	btfss	status,0,c
 12189  000414  EF0E  F002         	goto	u7911
 12190  000418  EF10  F002         	goto	u7910
 12191  00041C                     u7911:
 12192  00041C  EF38  F002         	goto	l7783
 12193  000420                     u7910:
 12194  000420                     
 12195                           ; BSR set to: 0
 12196  000420  0101               	movlb	1	; () banked
 12197  000422  5102               	movf	(_ModbusData+2)& (0+255),w,b
 12198  000424  0100               	movlb	0	; () banked
 12199  000426  6F90               	movwf	(??_ModbusFC03+1)& (0+255),b
 12200  000428  6B8F               	clrf	??_ModbusFC03& (0+255),b
 12201  00042A  0101               	movlb	1	; () banked
 12202  00042C  5105               	movf	(_ModbusData+5)& (0+255),w,b
 12203  00042E  C104  F091         	movff	_ModbusData+4,??_ModbusFC03+2
 12204  000432  0100               	movlb	0	; () banked
 12205  000434  6B92               	clrf	(??_ModbusFC03+3)& (0+255),b
 12206  000436  C091  F092         	movff	??_ModbusFC03+2,??_ModbusFC03+3
 12207  00043A  6B91               	clrf	(??_ModbusFC03+2)& (0+255),b
 12208  00043C  2791               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 12209  00043E  0E00               	movlw	0
 12210  000440  2392               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 12211  000442  518F               	movf	??_ModbusFC03& (0+255),w,b
 12212  000444  2791               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 12213  000446  5190               	movf	(??_ModbusFC03+1)& (0+255),w,b
 12214  000448  2392               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 12215  00044A  0101               	movlb	1	; () banked
 12216  00044C  5103               	movf	(_ModbusData+3)& (0+255),w,b
 12217  00044E  0100               	movlb	0	; () banked
 12218  000450  2791               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 12219  000452  0E00               	movlw	0
 12220  000454  2392               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 12221  000456  BF92               	btfsc	(??_ModbusFC03+3)& (0+255),7,b
 12222  000458  EF36  F002         	goto	u7921
 12223  00045C  0591               	decf	(??_ModbusFC03+2)& (0+255),w,b
 12224  00045E  0E02               	movlw	2
 12225  000460  5992               	subwfb	(??_ModbusFC03+3)& (0+255),w,b
 12226  000462  A0D8               	btfss	status,0,c
 12227  000464  EF36  F002         	goto	u7921
 12228  000468  EF38  F002         	goto	u7920
 12229  00046C                     u7921:
 12230  00046C  EFEC  F004         	goto	l7831
 12231  000470                     u7920:
 12232  000470                     l7783:
 12233                           
 12234                           ; BSR set to: 0
 12235                           ;Modbus.c: 228:                 (((ModbusData[2] * 256) + ModbusData[3]) + ((ModbusData[
      +                          4] * 256) + ModbusData[5]) > 512)){;Modbus.c: 230:                 printf("Registers out
      +                           of range.\r\nValid: 0x0512.\r\n");
 12236  000470  0E61               	movlw	low STR_39
 12237  000472  6F7D               	movwf	printf@fmt& (0+255),b
 12238  000474  0EF9               	movlw	high STR_39
 12239  000476  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 12240  000478  EC3D  F026         	call	_printf	;wreg free
 12241                           
 12242                           ;Modbus.c: 231:                 printf("Requested: 0x%04x to 0x%04x\r\n", ModbusData[2] 
      +                          * 256 + ModbusData[3],
 12243  00047C  0E37               	movlw	low STR_34
 12244  00047E  0100               	movlb	0	; () banked
 12245  000480  6F7D               	movwf	printf@fmt& (0+255),b
 12246  000482  0EFD               	movlw	high STR_34
 12247  000484  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 12248  000486  0101               	movlb	1	; () banked
 12249  000488  5102               	movf	(_ModbusData+2)& (0+255),w,b
 12250  00048A  0100               	movlb	0	; () banked
 12251  00048C  6F90               	movwf	(??_ModbusFC03+1)& (0+255),b
 12252  00048E  6B8F               	clrf	??_ModbusFC03& (0+255),b
 12253  000490  0101               	movlb	1	; () banked
 12254  000492  5103               	movf	(_ModbusData+3)& (0+255),w,b
 12255  000494  0100               	movlb	0	; () banked
 12256  000496  258F               	addwf	??_ModbusFC03& (0+255),w,b
 12257  000498  6F7F               	movwf	(?_printf+2)& (0+255),b
 12258  00049A  0101               	movlb	1	; () banked
 12259  00049C  0E00               	movlw	0
 12260  00049E  0100               	movlb	0	; () banked
 12261  0004A0  2190               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
 12262  0004A2  6F80               	movwf	(?_printf+3)& (0+255),b
 12263  0004A4  0101               	movlb	1	; () banked
 12264  0004A6  5104               	movf	(_ModbusData+4)& (0+255),w,b
 12265  0004A8  0100               	movlb	0	; () banked
 12266  0004AA  6F92               	movwf	(??_ModbusFC03+3)& (0+255),b
 12267  0004AC  6B91               	clrf	(??_ModbusFC03+2)& (0+255),b
 12268  0004AE  0101               	movlb	1	; () banked
 12269  0004B0  5103               	movf	(_ModbusData+3)& (0+255),w,b
 12270  0004B2  C102  F093         	movff	_ModbusData+2,??_ModbusFC03+4
 12271  0004B6  0100               	movlb	0	; () banked
 12272  0004B8  6B94               	clrf	(??_ModbusFC03+5)& (0+255),b
 12273  0004BA  C093  F094         	movff	??_ModbusFC03+4,??_ModbusFC03+5
 12274  0004BE  6B93               	clrf	(??_ModbusFC03+4)& (0+255),b
 12275  0004C0  2793               	addwf	(??_ModbusFC03+4)& (0+255),f,b
 12276  0004C2  0E00               	movlw	0
 12277  0004C4  2394               	addwfc	(??_ModbusFC03+5)& (0+255),f,b
 12278  0004C6  5191               	movf	(??_ModbusFC03+2)& (0+255),w,b
 12279  0004C8  2793               	addwf	(??_ModbusFC03+4)& (0+255),f,b
 12280  0004CA  5192               	movf	(??_ModbusFC03+3)& (0+255),w,b
 12281  0004CC  2394               	addwfc	(??_ModbusFC03+5)& (0+255),f,b
 12282  0004CE  0101               	movlb	1	; () banked
 12283  0004D0  5105               	movf	(_ModbusData+5)& (0+255),w,b
 12284  0004D2  0100               	movlb	0	; () banked
 12285  0004D4  2593               	addwf	(??_ModbusFC03+4)& (0+255),w,b
 12286  0004D6  6F81               	movwf	(?_printf+4)& (0+255),b
 12287  0004D8  0101               	movlb	1	; () banked
 12288  0004DA  0E00               	movlw	0
 12289  0004DC  0100               	movlb	0	; () banked
 12290  0004DE  2194               	addwfc	(??_ModbusFC03+5)& (0+255),w,b
 12291  0004E0  6F82               	movwf	(?_printf+5)& (0+255),b
 12292  0004E2  EC3D  F026         	call	_printf	;wreg free
 12293  0004E6  EF4C  F001         	goto	l7765
 12294  0004EA                     l7787:
 12295                           
 12296                           ; BSR set to: 0
 12297                           ;Modbus.c: 238:         {;Modbus.c: 239:             printf("Requested Serial No.\r\n");
 12298  0004EA  0E3F               	movlw	low STR_41
 12299  0004EC  6F7D               	movwf	printf@fmt& (0+255),b
 12300  0004EE  0EFE               	movlw	high STR_41
 12301  0004F0  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 12302  0004F2  EC3D  F026         	call	_printf	;wreg free
 12303  0004F6                     
 12304                           ;Modbus.c: 240:             if(
 12305  0004F6  0101               	movlb	1	; () banked
 12306  0004F8  5102               	movf	(_ModbusData+2)& (0+255),w,b
 12307  0004FA  0100               	movlb	0	; () banked
 12308  0004FC  6F90               	movwf	(??_ModbusFC03+1)& (0+255),b
 12309  0004FE  6B8F               	clrf	??_ModbusFC03& (0+255),b
 12310  000500  0101               	movlb	1	; () banked
 12311  000502  5105               	movf	(_ModbusData+5)& (0+255),w,b
 12312  000504  C104  F091         	movff	_ModbusData+4,??_ModbusFC03+2
 12313  000508  0100               	movlb	0	; () banked
 12314  00050A  6B92               	clrf	(??_ModbusFC03+3)& (0+255),b
 12315  00050C  C091  F092         	movff	??_ModbusFC03+2,??_ModbusFC03+3
 12316  000510  6B91               	clrf	(??_ModbusFC03+2)& (0+255),b
 12317  000512  2791               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 12318  000514  0E00               	movlw	0
 12319  000516  2392               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 12320  000518  518F               	movf	??_ModbusFC03& (0+255),w,b
 12321  00051A  2791               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 12322  00051C  5190               	movf	(??_ModbusFC03+1)& (0+255),w,b
 12323  00051E  2392               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 12324  000520  0101               	movlb	1	; () banked
 12325  000522  5103               	movf	(_ModbusData+3)& (0+255),w,b
 12326  000524  0100               	movlb	0	; () banked
 12327  000526  2791               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 12328  000528  0E00               	movlw	0
 12329  00052A  2392               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 12330  00052C  BF92               	btfsc	(??_ModbusFC03+3)& (0+255),7,b
 12331  00052E  EFA0  F002         	goto	u7931
 12332  000532  0E03               	movlw	3
 12333  000534  5D92               	subwf	(??_ModbusFC03+3)& (0+255),w,b
 12334  000536  A0D8               	btfss	status,0,c
 12335  000538  EFA0  F002         	goto	u7931
 12336  00053C  EFA2  F002         	goto	u7930
 12337  000540                     u7931:
 12338  000540  EFCB  F002         	goto	l7793
 12339  000544                     u7930:
 12340  000544                     
 12341                           ; BSR set to: 0
 12342  000544  0101               	movlb	1	; () banked
 12343  000546  5102               	movf	(_ModbusData+2)& (0+255),w,b
 12344  000548  0100               	movlb	0	; () banked
 12345  00054A  6F90               	movwf	(??_ModbusFC03+1)& (0+255),b
 12346  00054C  6B8F               	clrf	??_ModbusFC03& (0+255),b
 12347  00054E  0101               	movlb	1	; () banked
 12348  000550  5105               	movf	(_ModbusData+5)& (0+255),w,b
 12349  000552  C104  F091         	movff	_ModbusData+4,??_ModbusFC03+2
 12350  000556  0100               	movlb	0	; () banked
 12351  000558  6B92               	clrf	(??_ModbusFC03+3)& (0+255),b
 12352  00055A  C091  F092         	movff	??_ModbusFC03+2,??_ModbusFC03+3
 12353  00055E  6B91               	clrf	(??_ModbusFC03+2)& (0+255),b
 12354  000560  2791               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 12355  000562  0E00               	movlw	0
 12356  000564  2392               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 12357  000566  518F               	movf	??_ModbusFC03& (0+255),w,b
 12358  000568  2791               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 12359  00056A  5190               	movf	(??_ModbusFC03+1)& (0+255),w,b
 12360  00056C  2392               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 12361  00056E  0101               	movlb	1	; () banked
 12362  000570  5103               	movf	(_ModbusData+3)& (0+255),w,b
 12363  000572  0100               	movlb	0	; () banked
 12364  000574  2791               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 12365  000576  0E00               	movlw	0
 12366  000578  2392               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 12367  00057A  BF92               	btfsc	(??_ModbusFC03+3)& (0+255),7,b
 12368  00057C  EFC9  F002         	goto	u7941
 12369  000580  0E05               	movlw	5
 12370  000582  5D91               	subwf	(??_ModbusFC03+2)& (0+255),w,b
 12371  000584  0E03               	movlw	3
 12372  000586  5992               	subwfb	(??_ModbusFC03+3)& (0+255),w,b
 12373  000588  A0D8               	btfss	status,0,c
 12374  00058A  EFC9  F002         	goto	u7941
 12375  00058E  EFCB  F002         	goto	u7940
 12376  000592                     u7941:
 12377  000592  EFEC  F004         	goto	l7831
 12378  000596                     u7940:
 12379  000596                     l7793:
 12380                           
 12381                           ; BSR set to: 0
 12382                           ;Modbus.c: 242:                 (((ModbusData[2] * 256) + ModbusData[3]) + ((ModbusData[
      +                          4] * 256) + ModbusData[5]) > 772)){;Modbus.c: 244:                 printf("Registers out
      +                           of range.\r\nValid: 0x0300 to 0x0304.\r\n");
 12383  000596  0E1A               	movlw	low STR_42
 12384  000598  6F7D               	movwf	printf@fmt& (0+255),b
 12385  00059A  0EF8               	movlw	high STR_42
 12386  00059C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 12387  00059E  EC3D  F026         	call	_printf	;wreg free
 12388                           
 12389                           ;Modbus.c: 245:                 printf("Requested: 0x%04x to 0x%04x\r\n", ModbusData[2] 
      +                          * 256 + ModbusData[3],
 12390  0005A2  0E37               	movlw	low STR_34
 12391  0005A4  0100               	movlb	0	; () banked
 12392  0005A6  6F7D               	movwf	printf@fmt& (0+255),b
 12393  0005A8  0EFD               	movlw	high STR_34
 12394  0005AA  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 12395  0005AC  0101               	movlb	1	; () banked
 12396  0005AE  5102               	movf	(_ModbusData+2)& (0+255),w,b
 12397  0005B0  0100               	movlb	0	; () banked
 12398  0005B2  6F90               	movwf	(??_ModbusFC03+1)& (0+255),b
 12399  0005B4  6B8F               	clrf	??_ModbusFC03& (0+255),b
 12400  0005B6  0101               	movlb	1	; () banked
 12401  0005B8  5103               	movf	(_ModbusData+3)& (0+255),w,b
 12402  0005BA  0100               	movlb	0	; () banked
 12403  0005BC  258F               	addwf	??_ModbusFC03& (0+255),w,b
 12404  0005BE  6F7F               	movwf	(?_printf+2)& (0+255),b
 12405  0005C0  0101               	movlb	1	; () banked
 12406  0005C2  0E00               	movlw	0
 12407  0005C4  0100               	movlb	0	; () banked
 12408  0005C6  2190               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
 12409  0005C8  6F80               	movwf	(?_printf+3)& (0+255),b
 12410  0005CA  0101               	movlb	1	; () banked
 12411  0005CC  5104               	movf	(_ModbusData+4)& (0+255),w,b
 12412  0005CE  0100               	movlb	0	; () banked
 12413  0005D0  6F92               	movwf	(??_ModbusFC03+3)& (0+255),b
 12414  0005D2  6B91               	clrf	(??_ModbusFC03+2)& (0+255),b
 12415  0005D4  0101               	movlb	1	; () banked
 12416  0005D6  5103               	movf	(_ModbusData+3)& (0+255),w,b
 12417  0005D8  C102  F093         	movff	_ModbusData+2,??_ModbusFC03+4
 12418  0005DC  0100               	movlb	0	; () banked
 12419  0005DE  6B94               	clrf	(??_ModbusFC03+5)& (0+255),b
 12420  0005E0  C093  F094         	movff	??_ModbusFC03+4,??_ModbusFC03+5
 12421  0005E4  6B93               	clrf	(??_ModbusFC03+4)& (0+255),b
 12422  0005E6  2793               	addwf	(??_ModbusFC03+4)& (0+255),f,b
 12423  0005E8  0E00               	movlw	0
 12424  0005EA  2394               	addwfc	(??_ModbusFC03+5)& (0+255),f,b
 12425  0005EC  5191               	movf	(??_ModbusFC03+2)& (0+255),w,b
 12426  0005EE  2793               	addwf	(??_ModbusFC03+4)& (0+255),f,b
 12427  0005F0  5192               	movf	(??_ModbusFC03+3)& (0+255),w,b
 12428  0005F2  2394               	addwfc	(??_ModbusFC03+5)& (0+255),f,b
 12429  0005F4  0101               	movlb	1	; () banked
 12430  0005F6  5105               	movf	(_ModbusData+5)& (0+255),w,b
 12431  0005F8  0100               	movlb	0	; () banked
 12432  0005FA  2593               	addwf	(??_ModbusFC03+4)& (0+255),w,b
 12433  0005FC  6F81               	movwf	(?_printf+4)& (0+255),b
 12434  0005FE  0101               	movlb	1	; () banked
 12435  000600  0E00               	movlw	0
 12436  000602  0100               	movlb	0	; () banked
 12437  000604  2194               	addwfc	(??_ModbusFC03+5)& (0+255),w,b
 12438  000606  6F82               	movwf	(?_printf+5)& (0+255),b
 12439  000608  EC3D  F026         	call	_printf	;wreg free
 12440  00060C  EF4C  F001         	goto	l7765
 12441  000610                     l7797:
 12442                           
 12443                           ; BSR set to: 0
 12444                           ;Modbus.c: 252:         {;Modbus.c: 253:             printf("Requested Compile Date\r\n"
      +                          );
 12445  000610  0EF6               	movlw	low STR_44
 12446  000612  6F7D               	movwf	printf@fmt& (0+255),b
 12447  000614  0EFD               	movlw	high STR_44
 12448  000616  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 12449  000618  EC3D  F026         	call	_printf	;wreg free
 12450  00061C                     
 12451                           ;Modbus.c: 254:             if(
 12452  00061C  0101               	movlb	1	; () banked
 12453  00061E  5102               	movf	(_ModbusData+2)& (0+255),w,b
 12454  000620  0100               	movlb	0	; () banked
 12455  000622  6F90               	movwf	(??_ModbusFC03+1)& (0+255),b
 12456  000624  6B8F               	clrf	??_ModbusFC03& (0+255),b
 12457  000626  0101               	movlb	1	; () banked
 12458  000628  5105               	movf	(_ModbusData+5)& (0+255),w,b
 12459  00062A  C104  F091         	movff	_ModbusData+4,??_ModbusFC03+2
 12460  00062E  0100               	movlb	0	; () banked
 12461  000630  6B92               	clrf	(??_ModbusFC03+3)& (0+255),b
 12462  000632  C091  F092         	movff	??_ModbusFC03+2,??_ModbusFC03+3
 12463  000636  6B91               	clrf	(??_ModbusFC03+2)& (0+255),b
 12464  000638  2791               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 12465  00063A  0E00               	movlw	0
 12466  00063C  2392               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 12467  00063E  518F               	movf	??_ModbusFC03& (0+255),w,b
 12468  000640  2791               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 12469  000642  5190               	movf	(??_ModbusFC03+1)& (0+255),w,b
 12470  000644  2392               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 12471  000646  0101               	movlb	1	; () banked
 12472  000648  5103               	movf	(_ModbusData+3)& (0+255),w,b
 12473  00064A  0100               	movlb	0	; () banked
 12474  00064C  2791               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 12475  00064E  0E00               	movlw	0
 12476  000650  2392               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 12477  000652  BF92               	btfsc	(??_ModbusFC03+3)& (0+255),7,b
 12478  000654  EF33  F003         	goto	u7951
 12479  000658  0E04               	movlw	4
 12480  00065A  5D92               	subwf	(??_ModbusFC03+3)& (0+255),w,b
 12481  00065C  A0D8               	btfss	status,0,c
 12482  00065E  EF33  F003         	goto	u7951
 12483  000662  EF35  F003         	goto	u7950
 12484  000666                     u7951:
 12485  000666  EF5E  F003         	goto	l7803
 12486  00066A                     u7950:
 12487  00066A                     
 12488                           ; BSR set to: 0
 12489  00066A  0101               	movlb	1	; () banked
 12490  00066C  5102               	movf	(_ModbusData+2)& (0+255),w,b
 12491  00066E  0100               	movlb	0	; () banked
 12492  000670  6F90               	movwf	(??_ModbusFC03+1)& (0+255),b
 12493  000672  6B8F               	clrf	??_ModbusFC03& (0+255),b
 12494  000674  0101               	movlb	1	; () banked
 12495  000676  5105               	movf	(_ModbusData+5)& (0+255),w,b
 12496  000678  C104  F091         	movff	_ModbusData+4,??_ModbusFC03+2
 12497  00067C  0100               	movlb	0	; () banked
 12498  00067E  6B92               	clrf	(??_ModbusFC03+3)& (0+255),b
 12499  000680  C091  F092         	movff	??_ModbusFC03+2,??_ModbusFC03+3
 12500  000684  6B91               	clrf	(??_ModbusFC03+2)& (0+255),b
 12501  000686  2791               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 12502  000688  0E00               	movlw	0
 12503  00068A  2392               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 12504  00068C  518F               	movf	??_ModbusFC03& (0+255),w,b
 12505  00068E  2791               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 12506  000690  5190               	movf	(??_ModbusFC03+1)& (0+255),w,b
 12507  000692  2392               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 12508  000694  0101               	movlb	1	; () banked
 12509  000696  5103               	movf	(_ModbusData+3)& (0+255),w,b
 12510  000698  0100               	movlb	0	; () banked
 12511  00069A  2791               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 12512  00069C  0E00               	movlw	0
 12513  00069E  2392               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 12514  0006A0  BF92               	btfsc	(??_ModbusFC03+3)& (0+255),7,b
 12515  0006A2  EF5C  F003         	goto	u7961
 12516  0006A6  0E06               	movlw	6
 12517  0006A8  5D91               	subwf	(??_ModbusFC03+2)& (0+255),w,b
 12518  0006AA  0E04               	movlw	4
 12519  0006AC  5992               	subwfb	(??_ModbusFC03+3)& (0+255),w,b
 12520  0006AE  A0D8               	btfss	status,0,c
 12521  0006B0  EF5C  F003         	goto	u7961
 12522  0006B4  EF5E  F003         	goto	u7960
 12523  0006B8                     u7961:
 12524  0006B8  EFEC  F004         	goto	l7831
 12525  0006BC                     u7960:
 12526  0006BC                     l7803:
 12527                           
 12528                           ; BSR set to: 0
 12529                           ;Modbus.c: 256:                 (((ModbusData[2] * 256) + ModbusData[3]) + ((ModbusData[
      +                          4] * 256) + ModbusData[5]) > 1029)){;Modbus.c: 258:                 printf("Registers ou
      +                          t of range.\r\nValid: 0x0400 to 0x0405.\r\n");
 12530  0006BC  0E4E               	movlw	low STR_45
 12531  0006BE  6F7D               	movwf	printf@fmt& (0+255),b
 12532  0006C0  0EF8               	movlw	high STR_45
 12533  0006C2  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 12534  0006C4  EC3D  F026         	call	_printf	;wreg free
 12535                           
 12536                           ;Modbus.c: 260:                 printf("Requested: 0x%04x to 0x%04x\r\n", ModbusData[2] 
      +                          * 256 + ModbusData[3],
 12537  0006C8  0E37               	movlw	low STR_34
 12538  0006CA  0100               	movlb	0	; () banked
 12539  0006CC  6F7D               	movwf	printf@fmt& (0+255),b
 12540  0006CE  0EFD               	movlw	high STR_34
 12541  0006D0  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 12542  0006D2  0101               	movlb	1	; () banked
 12543  0006D4  5102               	movf	(_ModbusData+2)& (0+255),w,b
 12544  0006D6  0100               	movlb	0	; () banked
 12545  0006D8  6F90               	movwf	(??_ModbusFC03+1)& (0+255),b
 12546  0006DA  6B8F               	clrf	??_ModbusFC03& (0+255),b
 12547  0006DC  0101               	movlb	1	; () banked
 12548  0006DE  5103               	movf	(_ModbusData+3)& (0+255),w,b
 12549  0006E0  0100               	movlb	0	; () banked
 12550  0006E2  258F               	addwf	??_ModbusFC03& (0+255),w,b
 12551  0006E4  6F7F               	movwf	(?_printf+2)& (0+255),b
 12552  0006E6  0101               	movlb	1	; () banked
 12553  0006E8  0E00               	movlw	0
 12554  0006EA  0100               	movlb	0	; () banked
 12555  0006EC  2190               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
 12556  0006EE  6F80               	movwf	(?_printf+3)& (0+255),b
 12557  0006F0  0101               	movlb	1	; () banked
 12558  0006F2  5104               	movf	(_ModbusData+4)& (0+255),w,b
 12559  0006F4  0100               	movlb	0	; () banked
 12560  0006F6  6F92               	movwf	(??_ModbusFC03+3)& (0+255),b
 12561  0006F8  6B91               	clrf	(??_ModbusFC03+2)& (0+255),b
 12562  0006FA  0101               	movlb	1	; () banked
 12563  0006FC  5103               	movf	(_ModbusData+3)& (0+255),w,b
 12564  0006FE  C102  F093         	movff	_ModbusData+2,??_ModbusFC03+4
 12565  000702  0100               	movlb	0	; () banked
 12566  000704  6B94               	clrf	(??_ModbusFC03+5)& (0+255),b
 12567  000706  C093  F094         	movff	??_ModbusFC03+4,??_ModbusFC03+5
 12568  00070A  6B93               	clrf	(??_ModbusFC03+4)& (0+255),b
 12569  00070C  2793               	addwf	(??_ModbusFC03+4)& (0+255),f,b
 12570  00070E  0E00               	movlw	0
 12571  000710  2394               	addwfc	(??_ModbusFC03+5)& (0+255),f,b
 12572  000712  5191               	movf	(??_ModbusFC03+2)& (0+255),w,b
 12573  000714  2793               	addwf	(??_ModbusFC03+4)& (0+255),f,b
 12574  000716  5192               	movf	(??_ModbusFC03+3)& (0+255),w,b
 12575  000718  2394               	addwfc	(??_ModbusFC03+5)& (0+255),f,b
 12576  00071A  0101               	movlb	1	; () banked
 12577  00071C  5105               	movf	(_ModbusData+5)& (0+255),w,b
 12578  00071E  0100               	movlb	0	; () banked
 12579  000720  2593               	addwf	(??_ModbusFC03+4)& (0+255),w,b
 12580  000722  6F81               	movwf	(?_printf+4)& (0+255),b
 12581  000724  0101               	movlb	1	; () banked
 12582  000726  0E00               	movlw	0
 12583  000728  0100               	movlb	0	; () banked
 12584  00072A  2194               	addwfc	(??_ModbusFC03+5)& (0+255),w,b
 12585  00072C  6F82               	movwf	(?_printf+5)& (0+255),b
 12586  00072E  EC3D  F026         	call	_printf	;wreg free
 12587  000732  EF4C  F001         	goto	l7765
 12588  000736                     l7807:
 12589                           
 12590                           ; BSR set to: 0
 12591                           ;Modbus.c: 267:         {;Modbus.c: 268:             printf("Requested Compile Time\r\n"
      +                          );
 12592  000736  0EDD               	movlw	low STR_47
 12593  000738  6F7D               	movwf	printf@fmt& (0+255),b
 12594  00073A  0EFD               	movlw	high STR_47
 12595  00073C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 12596  00073E  EC3D  F026         	call	_printf	;wreg free
 12597  000742                     
 12598                           ;Modbus.c: 270:             if(
 12599  000742  0101               	movlb	1	; () banked
 12600  000744  5102               	movf	(_ModbusData+2)& (0+255),w,b
 12601  000746  0100               	movlb	0	; () banked
 12602  000748  6F90               	movwf	(??_ModbusFC03+1)& (0+255),b
 12603  00074A  6B8F               	clrf	??_ModbusFC03& (0+255),b
 12604  00074C  0101               	movlb	1	; () banked
 12605  00074E  5105               	movf	(_ModbusData+5)& (0+255),w,b
 12606  000750  C104  F091         	movff	_ModbusData+4,??_ModbusFC03+2
 12607  000754  0100               	movlb	0	; () banked
 12608  000756  6B92               	clrf	(??_ModbusFC03+3)& (0+255),b
 12609  000758  C091  F092         	movff	??_ModbusFC03+2,??_ModbusFC03+3
 12610  00075C  6B91               	clrf	(??_ModbusFC03+2)& (0+255),b
 12611  00075E  2791               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 12612  000760  0E00               	movlw	0
 12613  000762  2392               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 12614  000764  518F               	movf	??_ModbusFC03& (0+255),w,b
 12615  000766  2791               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 12616  000768  5190               	movf	(??_ModbusFC03+1)& (0+255),w,b
 12617  00076A  2392               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 12618  00076C  0101               	movlb	1	; () banked
 12619  00076E  5103               	movf	(_ModbusData+3)& (0+255),w,b
 12620  000770  0100               	movlb	0	; () banked
 12621  000772  2791               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 12622  000774  0E00               	movlw	0
 12623  000776  2392               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 12624  000778  BF92               	btfsc	(??_ModbusFC03+3)& (0+255),7,b
 12625  00077A  EFC6  F003         	goto	u7971
 12626  00077E  0E05               	movlw	5
 12627  000780  5D92               	subwf	(??_ModbusFC03+3)& (0+255),w,b
 12628  000782  A0D8               	btfss	status,0,c
 12629  000784  EFC6  F003         	goto	u7971
 12630  000788  EFC8  F003         	goto	u7970
 12631  00078C                     u7971:
 12632  00078C  EFF1  F003         	goto	l7813
 12633  000790                     u7970:
 12634  000790                     
 12635                           ; BSR set to: 0
 12636  000790  0101               	movlb	1	; () banked
 12637  000792  5102               	movf	(_ModbusData+2)& (0+255),w,b
 12638  000794  0100               	movlb	0	; () banked
 12639  000796  6F90               	movwf	(??_ModbusFC03+1)& (0+255),b
 12640  000798  6B8F               	clrf	??_ModbusFC03& (0+255),b
 12641  00079A  0101               	movlb	1	; () banked
 12642  00079C  5105               	movf	(_ModbusData+5)& (0+255),w,b
 12643  00079E  C104  F091         	movff	_ModbusData+4,??_ModbusFC03+2
 12644  0007A2  0100               	movlb	0	; () banked
 12645  0007A4  6B92               	clrf	(??_ModbusFC03+3)& (0+255),b
 12646  0007A6  C091  F092         	movff	??_ModbusFC03+2,??_ModbusFC03+3
 12647  0007AA  6B91               	clrf	(??_ModbusFC03+2)& (0+255),b
 12648  0007AC  2791               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 12649  0007AE  0E00               	movlw	0
 12650  0007B0  2392               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 12651  0007B2  518F               	movf	??_ModbusFC03& (0+255),w,b
 12652  0007B4  2791               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 12653  0007B6  5190               	movf	(??_ModbusFC03+1)& (0+255),w,b
 12654  0007B8  2392               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 12655  0007BA  0101               	movlb	1	; () banked
 12656  0007BC  5103               	movf	(_ModbusData+3)& (0+255),w,b
 12657  0007BE  0100               	movlb	0	; () banked
 12658  0007C0  2791               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 12659  0007C2  0E00               	movlw	0
 12660  0007C4  2392               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 12661  0007C6  BF92               	btfsc	(??_ModbusFC03+3)& (0+255),7,b
 12662  0007C8  EFEF  F003         	goto	u7981
 12663  0007CC  0E04               	movlw	4
 12664  0007CE  5D91               	subwf	(??_ModbusFC03+2)& (0+255),w,b
 12665  0007D0  0E05               	movlw	5
 12666  0007D2  5992               	subwfb	(??_ModbusFC03+3)& (0+255),w,b
 12667  0007D4  A0D8               	btfss	status,0,c
 12668  0007D6  EFEF  F003         	goto	u7981
 12669  0007DA  EFF1  F003         	goto	u7980
 12670  0007DE                     u7981:
 12671  0007DE  EFEC  F004         	goto	l7831
 12672  0007E2                     u7980:
 12673  0007E2                     l7813:
 12674                           
 12675                           ; BSR set to: 0
 12676                           ;Modbus.c: 272:                 (((ModbusData[2] * 256) + ModbusData[3]) + ((ModbusData[
      +                          4] * 256) + ModbusData[5]) > 1283)){;Modbus.c: 274:                 printf("Registers ou
      +                          t of range.\r\nValid: 0x0500 to 0x0503.\r\n");
 12677  0007E2  0EE6               	movlw	low STR_48
 12678  0007E4  6F7D               	movwf	printf@fmt& (0+255),b
 12679  0007E6  0EF7               	movlw	high STR_48
 12680  0007E8  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 12681  0007EA  EC3D  F026         	call	_printf	;wreg free
 12682                           
 12683                           ;Modbus.c: 276:                 printf("Requested: 0x%04x to 0x%04x\r\n", ModbusData[2] 
      +                          * 256 + ModbusData[3],
 12684  0007EE  0E37               	movlw	low STR_34
 12685  0007F0  0100               	movlb	0	; () banked
 12686  0007F2  6F7D               	movwf	printf@fmt& (0+255),b
 12687  0007F4  0EFD               	movlw	high STR_34
 12688  0007F6  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 12689  0007F8  0101               	movlb	1	; () banked
 12690  0007FA  5102               	movf	(_ModbusData+2)& (0+255),w,b
 12691  0007FC  0100               	movlb	0	; () banked
 12692  0007FE  6F90               	movwf	(??_ModbusFC03+1)& (0+255),b
 12693  000800  6B8F               	clrf	??_ModbusFC03& (0+255),b
 12694  000802  0101               	movlb	1	; () banked
 12695  000804  5103               	movf	(_ModbusData+3)& (0+255),w,b
 12696  000806  0100               	movlb	0	; () banked
 12697  000808  258F               	addwf	??_ModbusFC03& (0+255),w,b
 12698  00080A  6F7F               	movwf	(?_printf+2)& (0+255),b
 12699  00080C  0101               	movlb	1	; () banked
 12700  00080E  0E00               	movlw	0
 12701  000810  0100               	movlb	0	; () banked
 12702  000812  2190               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
 12703  000814  6F80               	movwf	(?_printf+3)& (0+255),b
 12704  000816  0101               	movlb	1	; () banked
 12705  000818  5104               	movf	(_ModbusData+4)& (0+255),w,b
 12706  00081A  0100               	movlb	0	; () banked
 12707  00081C  6F92               	movwf	(??_ModbusFC03+3)& (0+255),b
 12708  00081E  6B91               	clrf	(??_ModbusFC03+2)& (0+255),b
 12709  000820  0101               	movlb	1	; () banked
 12710  000822  5103               	movf	(_ModbusData+3)& (0+255),w,b
 12711  000824  C102  F093         	movff	_ModbusData+2,??_ModbusFC03+4
 12712  000828  0100               	movlb	0	; () banked
 12713  00082A  6B94               	clrf	(??_ModbusFC03+5)& (0+255),b
 12714  00082C  C093  F094         	movff	??_ModbusFC03+4,??_ModbusFC03+5
 12715  000830  6B93               	clrf	(??_ModbusFC03+4)& (0+255),b
 12716  000832  2793               	addwf	(??_ModbusFC03+4)& (0+255),f,b
 12717  000834  0E00               	movlw	0
 12718  000836  2394               	addwfc	(??_ModbusFC03+5)& (0+255),f,b
 12719  000838  5191               	movf	(??_ModbusFC03+2)& (0+255),w,b
 12720  00083A  2793               	addwf	(??_ModbusFC03+4)& (0+255),f,b
 12721  00083C  5192               	movf	(??_ModbusFC03+3)& (0+255),w,b
 12722  00083E  2394               	addwfc	(??_ModbusFC03+5)& (0+255),f,b
 12723  000840  0101               	movlb	1	; () banked
 12724  000842  5105               	movf	(_ModbusData+5)& (0+255),w,b
 12725  000844  0100               	movlb	0	; () banked
 12726  000846  2593               	addwf	(??_ModbusFC03+4)& (0+255),w,b
 12727  000848  6F81               	movwf	(?_printf+4)& (0+255),b
 12728  00084A  0101               	movlb	1	; () banked
 12729  00084C  0E00               	movlw	0
 12730  00084E  0100               	movlb	0	; () banked
 12731  000850  2194               	addwfc	(??_ModbusFC03+5)& (0+255),w,b
 12732  000852  6F82               	movwf	(?_printf+5)& (0+255),b
 12733  000854  EC3D  F026         	call	_printf	;wreg free
 12734  000858  EF4C  F001         	goto	l7765
 12735  00085C                     l7817:
 12736                           
 12737                           ; BSR set to: 0
 12738                           ;Modbus.c: 283:         {;Modbus.c: 284:             printf("Requested Analogue Inputs\r
      +                          \n");
 12739  00085C  0E71               	movlw	low STR_50
 12740  00085E  6F7D               	movwf	printf@fmt& (0+255),b
 12741  000860  0EFD               	movlw	high STR_50
 12742  000862  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 12743  000864  EC3D  F026         	call	_printf	;wreg free
 12744  000868                     
 12745                           ;Modbus.c: 285:             if(
 12746  000868  0101               	movlb	1	; () banked
 12747  00086A  5102               	movf	(_ModbusData+2)& (0+255),w,b
 12748  00086C  0100               	movlb	0	; () banked
 12749  00086E  6F90               	movwf	(??_ModbusFC03+1)& (0+255),b
 12750  000870  6B8F               	clrf	??_ModbusFC03& (0+255),b
 12751  000872  0101               	movlb	1	; () banked
 12752  000874  5105               	movf	(_ModbusData+5)& (0+255),w,b
 12753  000876  C104  F091         	movff	_ModbusData+4,??_ModbusFC03+2
 12754  00087A  0100               	movlb	0	; () banked
 12755  00087C  6B92               	clrf	(??_ModbusFC03+3)& (0+255),b
 12756  00087E  C091  F092         	movff	??_ModbusFC03+2,??_ModbusFC03+3
 12757  000882  6B91               	clrf	(??_ModbusFC03+2)& (0+255),b
 12758  000884  2791               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 12759  000886  0E00               	movlw	0
 12760  000888  2392               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 12761  00088A  518F               	movf	??_ModbusFC03& (0+255),w,b
 12762  00088C  2791               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 12763  00088E  5190               	movf	(??_ModbusFC03+1)& (0+255),w,b
 12764  000890  2392               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 12765  000892  0101               	movlb	1	; () banked
 12766  000894  5103               	movf	(_ModbusData+3)& (0+255),w,b
 12767  000896  0100               	movlb	0	; () banked
 12768  000898  2791               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 12769  00089A  0E00               	movlw	0
 12770  00089C  2392               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 12771  00089E  BF92               	btfsc	(??_ModbusFC03+3)& (0+255),7,b
 12772  0008A0  EF59  F004         	goto	u7991
 12773  0008A4  0E06               	movlw	6
 12774  0008A6  5D92               	subwf	(??_ModbusFC03+3)& (0+255),w,b
 12775  0008A8  A0D8               	btfss	status,0,c
 12776  0008AA  EF59  F004         	goto	u7991
 12777  0008AE  EF5B  F004         	goto	u7990
 12778  0008B2                     u7991:
 12779  0008B2  EF84  F004         	goto	l7823
 12780  0008B6                     u7990:
 12781  0008B6                     
 12782                           ; BSR set to: 0
 12783  0008B6  0101               	movlb	1	; () banked
 12784  0008B8  5102               	movf	(_ModbusData+2)& (0+255),w,b
 12785  0008BA  0100               	movlb	0	; () banked
 12786  0008BC  6F90               	movwf	(??_ModbusFC03+1)& (0+255),b
 12787  0008BE  6B8F               	clrf	??_ModbusFC03& (0+255),b
 12788  0008C0  0101               	movlb	1	; () banked
 12789  0008C2  5105               	movf	(_ModbusData+5)& (0+255),w,b
 12790  0008C4  C104  F091         	movff	_ModbusData+4,??_ModbusFC03+2
 12791  0008C8  0100               	movlb	0	; () banked
 12792  0008CA  6B92               	clrf	(??_ModbusFC03+3)& (0+255),b
 12793  0008CC  C091  F092         	movff	??_ModbusFC03+2,??_ModbusFC03+3
 12794  0008D0  6B91               	clrf	(??_ModbusFC03+2)& (0+255),b
 12795  0008D2  2791               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 12796  0008D4  0E00               	movlw	0
 12797  0008D6  2392               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 12798  0008D8  518F               	movf	??_ModbusFC03& (0+255),w,b
 12799  0008DA  2791               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 12800  0008DC  5190               	movf	(??_ModbusFC03+1)& (0+255),w,b
 12801  0008DE  2392               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 12802  0008E0  0101               	movlb	1	; () banked
 12803  0008E2  5103               	movf	(_ModbusData+3)& (0+255),w,b
 12804  0008E4  0100               	movlb	0	; () banked
 12805  0008E6  2791               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 12806  0008E8  0E00               	movlw	0
 12807  0008EA  2392               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 12808  0008EC  BF92               	btfsc	(??_ModbusFC03+3)& (0+255),7,b
 12809  0008EE  EF82  F004         	goto	u8001
 12810  0008F2  0E03               	movlw	3
 12811  0008F4  5D91               	subwf	(??_ModbusFC03+2)& (0+255),w,b
 12812  0008F6  0E06               	movlw	6
 12813  0008F8  5992               	subwfb	(??_ModbusFC03+3)& (0+255),w,b
 12814  0008FA  A0D8               	btfss	status,0,c
 12815  0008FC  EF82  F004         	goto	u8001
 12816  000900  EF84  F004         	goto	u8000
 12817  000904                     u8001:
 12818  000904  EFEC  F004         	goto	l7831
 12819  000908                     u8000:
 12820  000908                     l7823:
 12821                           
 12822                           ; BSR set to: 0
 12823                           ;Modbus.c: 287:                 (((ModbusData[2] * 256) + ModbusData[3]) + ((ModbusData[
      +                          4] * 256) + ModbusData[5]) > 1538)){;Modbus.c: 289:                 printf("Registers ou
      +                          t of range.\r\nValid: 0x0600 to 0x0602.\r\n");
 12824  000908  0EB2               	movlw	low STR_51
 12825  00090A  6F7D               	movwf	printf@fmt& (0+255),b
 12826  00090C  0EF7               	movlw	high STR_51
 12827  00090E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 12828  000910  EC3D  F026         	call	_printf	;wreg free
 12829                           
 12830                           ;Modbus.c: 290:                 printf("Requested: 0x%04x to 0x%04x\r\n", ModbusData[2] 
      +                          * 256 + ModbusData[3],
 12831  000914  0E37               	movlw	low STR_34
 12832  000916  0100               	movlb	0	; () banked
 12833  000918  6F7D               	movwf	printf@fmt& (0+255),b
 12834  00091A  0EFD               	movlw	high STR_34
 12835  00091C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 12836  00091E  0101               	movlb	1	; () banked
 12837  000920  5102               	movf	(_ModbusData+2)& (0+255),w,b
 12838  000922  0100               	movlb	0	; () banked
 12839  000924  6F90               	movwf	(??_ModbusFC03+1)& (0+255),b
 12840  000926  6B8F               	clrf	??_ModbusFC03& (0+255),b
 12841  000928  0101               	movlb	1	; () banked
 12842  00092A  5103               	movf	(_ModbusData+3)& (0+255),w,b
 12843  00092C  0100               	movlb	0	; () banked
 12844  00092E  258F               	addwf	??_ModbusFC03& (0+255),w,b
 12845  000930  6F7F               	movwf	(?_printf+2)& (0+255),b
 12846  000932  0101               	movlb	1	; () banked
 12847  000934  0E00               	movlw	0
 12848  000936  0100               	movlb	0	; () banked
 12849  000938  2190               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
 12850  00093A  6F80               	movwf	(?_printf+3)& (0+255),b
 12851  00093C  0101               	movlb	1	; () banked
 12852  00093E  5104               	movf	(_ModbusData+4)& (0+255),w,b
 12853  000940  0100               	movlb	0	; () banked
 12854  000942  6F92               	movwf	(??_ModbusFC03+3)& (0+255),b
 12855  000944  6B91               	clrf	(??_ModbusFC03+2)& (0+255),b
 12856  000946  0101               	movlb	1	; () banked
 12857  000948  5103               	movf	(_ModbusData+3)& (0+255),w,b
 12858  00094A  C102  F093         	movff	_ModbusData+2,??_ModbusFC03+4
 12859  00094E  0100               	movlb	0	; () banked
 12860  000950  6B94               	clrf	(??_ModbusFC03+5)& (0+255),b
 12861  000952  C093  F094         	movff	??_ModbusFC03+4,??_ModbusFC03+5
 12862  000956  6B93               	clrf	(??_ModbusFC03+4)& (0+255),b
 12863  000958  2793               	addwf	(??_ModbusFC03+4)& (0+255),f,b
 12864  00095A  0E00               	movlw	0
 12865  00095C  2394               	addwfc	(??_ModbusFC03+5)& (0+255),f,b
 12866  00095E  5191               	movf	(??_ModbusFC03+2)& (0+255),w,b
 12867  000960  2793               	addwf	(??_ModbusFC03+4)& (0+255),f,b
 12868  000962  5192               	movf	(??_ModbusFC03+3)& (0+255),w,b
 12869  000964  2394               	addwfc	(??_ModbusFC03+5)& (0+255),f,b
 12870  000966  0101               	movlb	1	; () banked
 12871  000968  5105               	movf	(_ModbusData+5)& (0+255),w,b
 12872  00096A  0100               	movlb	0	; () banked
 12873  00096C  2593               	addwf	(??_ModbusFC03+4)& (0+255),w,b
 12874  00096E  6F81               	movwf	(?_printf+4)& (0+255),b
 12875  000970  0101               	movlb	1	; () banked
 12876  000972  0E00               	movlw	0
 12877  000974  0100               	movlb	0	; () banked
 12878  000976  2194               	addwfc	(??_ModbusFC03+5)& (0+255),w,b
 12879  000978  6F82               	movwf	(?_printf+5)& (0+255),b
 12880  00097A  EC3D  F026         	call	_printf	;wreg free
 12881  00097E  EF4C  F001         	goto	l7765
 12882  000982                     l7829:
 12883                           
 12884                           ; BSR set to: 0
 12885  000982  0101               	movlb	1	; () banked
 12886  000984  5102               	movf	(_ModbusData+2)& (0+255),w,b
 12887  000986  0100               	movlb	0	; () banked
 12888  000988  6F8F               	movwf	??_ModbusFC03& (0+255),b
 12889  00098A  6B90               	clrf	(??_ModbusFC03+1)& (0+255),b
 12890                           
 12891                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12892                           ; Switch size 1, requested type "simple"
 12893                           ; Number of cases is 1, Range of values is 0 to 0
 12894                           ; switch strategies available:
 12895                           ; Name         Instructions Cycles
 12896                           ; simple_byte            4     3 (average)
 12897                           ;	Chosen strategy is simple_byte
 12898  00098C  5190               	movf	(??_ModbusFC03+1)& (0+255),w,b
 12899  00098E  0A00               	xorlw	0	; case 0
 12900  000990  B4D8               	btfsc	status,2,c
 12901  000992  EFCD  F004         	goto	l8317
 12902  000996  EFEC  F004         	goto	l7831
 12903  00099A                     l8317:
 12904                           
 12905                           ; BSR set to: 0
 12906                           ; Switch size 1, requested type "simple"
 12907                           ; Number of cases is 7, Range of values is 0 to 6
 12908                           ; switch strategies available:
 12909                           ; Name         Instructions Cycles
 12910                           ; simple_byte           22    12 (average)
 12911                           ;	Chosen strategy is simple_byte
 12912  00099A  518F               	movf	??_ModbusFC03& (0+255),w,b
 12913  00099C  0A00               	xorlw	0	; case 0
 12914  00099E  B4D8               	btfsc	status,2,c
 12915  0009A0  EFC0  F000         	goto	l7757
 12916  0009A4  0A01               	xorlw	1	; case 1
 12917  0009A6  B4D8               	btfsc	status,2,c
 12918  0009A8  EF51  F001         	goto	l7767
 12919  0009AC  0A03               	xorlw	3	; case 2
 12920  0009AE  B4D8               	btfsc	status,2,c
 12921  0009B0  EFE3  F001         	goto	l7777
 12922  0009B4  0A01               	xorlw	1	; case 3
 12923  0009B6  B4D8               	btfsc	status,2,c
 12924  0009B8  EF75  F002         	goto	l7787
 12925  0009BC  0A07               	xorlw	7	; case 4
 12926  0009BE  B4D8               	btfsc	status,2,c
 12927  0009C0  EF08  F003         	goto	l7797
 12928  0009C4  0A01               	xorlw	1	; case 5
 12929  0009C6  B4D8               	btfsc	status,2,c
 12930  0009C8  EF9B  F003         	goto	l7807
 12931  0009CC  0A03               	xorlw	3	; case 6
 12932  0009CE  B4D8               	btfsc	status,2,c
 12933  0009D0  EF2E  F004         	goto	l7817
 12934  0009D4  EFEC  F004         	goto	l7831
 12935  0009D8                     l7831:
 12936                           
 12937                           ; BSR set to: 0
 12938                           ;Modbus.c: 298:     if(error == 0){
 12939  0009D8  5197               	movf	ModbusFC03@error& (0+255),w,b
 12940  0009DA  A4D8               	btfss	status,2,c
 12941  0009DC  EFF2  F004         	goto	u8011
 12942  0009E0  EFF4  F004         	goto	u8010
 12943  0009E4                     u8011:
 12944  0009E4  EFDF  F006         	goto	l7891
 12945  0009E8                     u8010:
 12946  0009E8                     
 12947                           ; BSR set to: 0
 12948                           ;Modbus.c: 299:         for(i=0; i< (ModbusData[5]) ; i++ ){
 12949  0009E8  0E00               	movlw	0
 12950  0009EA  6F99               	movwf	(ModbusFC03@i+1)& (0+255),b
 12951  0009EC  0E00               	movlw	0
 12952  0009EE  6F98               	movwf	ModbusFC03@i& (0+255),b
 12953  0009F0  EF90  F006         	goto	l7879
 12954  0009F4                     l7835:
 12955                           
 12956                           ; BSR set to: 0
 12957                           ;Modbus.c: 304:             if(ModbusData[2] == 0x03){
 12958  0009F4  0E03               	movlw	3
 12959  0009F6  0101               	movlb	1	; () banked
 12960  0009F8  1902               	xorwf	(_ModbusData+2)& (0+255),w,b
 12961  0009FA  A4D8               	btfss	status,2,c
 12962  0009FC  EF02  F005         	goto	u8021
 12963  000A00  EF04  F005         	goto	u8020
 12964  000A04                     u8021:
 12965  000A04  EF35  F005         	goto	l7839
 12966  000A08                     u8020:
 12967  000A08                     
 12968                           ; BSR set to: 1
 12969                           ;Modbus.c: 306:                 ByteLo = MB303xx[ModbusData[3] +i] & 0x00FF;
 12970  000A08  5103               	movf	(_ModbusData+3)& (0+255),w,b
 12971  000A0A  0100               	movlb	0	; () banked
 12972  000A0C  2598               	addwf	ModbusFC03@i& (0+255),w,b
 12973  000A0E  6F8F               	movwf	??_ModbusFC03& (0+255),b
 12974  000A10  0E00               	movlw	0
 12975  000A12  2199               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
 12976  000A14  6F90               	movwf	(??_ModbusFC03+1)& (0+255),b
 12977  000A16  90D8               	bcf	status,0,c
 12978  000A18  378F               	rlcf	??_ModbusFC03& (0+255),f,b
 12979  000A1A  3790               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
 12980  000A1C  0EEA               	movlw	low _MB303xx
 12981  000A1E  258F               	addwf	??_ModbusFC03& (0+255),w,b
 12982  000A20  6ED9               	movwf	fsr2l,c
 12983  000A22  0E00               	movlw	high _MB303xx
 12984  000A24  2190               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
 12985  000A26  6EDA               	movwf	fsr2h,c
 12986  000A28  CFDE F091          	movff	postinc2,??_ModbusFC03+2
 12987  000A2C  CFDD F092          	movff	postdec2,??_ModbusFC03+3
 12988  000A30  5191               	movf	(??_ModbusFC03+2)& (0+255),w,b
 12989  000A32  6FF6               	movwf	_ByteLo& (0+255),b
 12990  000A34  6BF7               	clrf	(_ByteLo+1)& (0+255),b
 12991                           
 12992                           ;Modbus.c: 307:                 ByteHi = MB303xx[ModbusData[3] +i] >> 8;
 12993  000A36  0101               	movlb	1	; () banked
 12994  000A38  5103               	movf	(_ModbusData+3)& (0+255),w,b
 12995  000A3A  0100               	movlb	0	; () banked
 12996  000A3C  2598               	addwf	ModbusFC03@i& (0+255),w,b
 12997  000A3E  6F8F               	movwf	??_ModbusFC03& (0+255),b
 12998  000A40  0E00               	movlw	0
 12999  000A42  2199               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
 13000  000A44  6F90               	movwf	(??_ModbusFC03+1)& (0+255),b
 13001  000A46  90D8               	bcf	status,0,c
 13002  000A48  378F               	rlcf	??_ModbusFC03& (0+255),f,b
 13003  000A4A  3790               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
 13004  000A4C  0EEA               	movlw	low _MB303xx
 13005  000A4E  258F               	addwf	??_ModbusFC03& (0+255),w,b
 13006  000A50  6ED9               	movwf	fsr2l,c
 13007  000A52  0E00               	movlw	high _MB303xx
 13008  000A54  2190               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
 13009  000A56  6EDA               	movwf	fsr2h,c
 13010  000A58  CFDE F091          	movff	postinc2,??_ModbusFC03+2
 13011  000A5C  CFDD F092          	movff	postdec2,??_ModbusFC03+3
 13012  000A60  5192               	movf	(??_ModbusFC03+3)& (0+255),w,b
 13013  000A62  6FD5               	movwf	_ByteHi& (0+255),b
 13014  000A64  6BD6               	clrf	(_ByteHi+1)& (0+255),b
 13015                           
 13016                           ;Modbus.c: 310:             }else if(ModbusData[2] == 0x01){
 13017  000A66  EF79  F006         	goto	l7869
 13018  000A6A                     l7839:
 13019                           
 13020                           ; BSR set to: 1
 13021  000A6A  0502               	decf	(_ModbusData+2)& (0+255),w,b
 13022  000A6C  A4D8               	btfss	status,2,c
 13023  000A6E  EF3B  F005         	goto	u8031
 13024  000A72  EF3D  F005         	goto	u8030
 13025  000A76                     u8031:
 13026  000A76  EF6E  F005         	goto	l7843
 13027  000A7A                     u8030:
 13028  000A7A                     
 13029                           ; BSR set to: 1
 13030                           ;Modbus.c: 317:                 ByteLo = MB301xx[ModbusData[3] +i] & 0x00FF;
 13031  000A7A  5103               	movf	(_ModbusData+3)& (0+255),w,b
 13032  000A7C  0100               	movlb	0	; () banked
 13033  000A7E  2598               	addwf	ModbusFC03@i& (0+255),w,b
 13034  000A80  6F8F               	movwf	??_ModbusFC03& (0+255),b
 13035  000A82  0E00               	movlw	0
 13036  000A84  2199               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
 13037  000A86  6F90               	movwf	(??_ModbusFC03+1)& (0+255),b
 13038  000A88  90D8               	bcf	status,0,c
 13039  000A8A  378F               	rlcf	??_ModbusFC03& (0+255),f,b
 13040  000A8C  3790               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
 13041  000A8E  0E64               	movlw	low _MB301xx
 13042  000A90  258F               	addwf	??_ModbusFC03& (0+255),w,b
 13043  000A92  6ED9               	movwf	fsr2l,c
 13044  000A94  0E01               	movlw	high _MB301xx
 13045  000A96  2190               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
 13046  000A98  6EDA               	movwf	fsr2h,c
 13047  000A9A  CFDE F091          	movff	postinc2,??_ModbusFC03+2
 13048  000A9E  CFDD F092          	movff	postdec2,??_ModbusFC03+3
 13049  000AA2  5191               	movf	(??_ModbusFC03+2)& (0+255),w,b
 13050  000AA4  6FF6               	movwf	_ByteLo& (0+255),b
 13051  000AA6  6BF7               	clrf	(_ByteLo+1)& (0+255),b
 13052                           
 13053                           ;Modbus.c: 318:                 ByteHi = MB301xx[ModbusData[3] +i] >> 8;
 13054  000AA8  0101               	movlb	1	; () banked
 13055  000AAA  5103               	movf	(_ModbusData+3)& (0+255),w,b
 13056  000AAC  0100               	movlb	0	; () banked
 13057  000AAE  2598               	addwf	ModbusFC03@i& (0+255),w,b
 13058  000AB0  6F8F               	movwf	??_ModbusFC03& (0+255),b
 13059  000AB2  0E00               	movlw	0
 13060  000AB4  2199               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
 13061  000AB6  6F90               	movwf	(??_ModbusFC03+1)& (0+255),b
 13062  000AB8  90D8               	bcf	status,0,c
 13063  000ABA  378F               	rlcf	??_ModbusFC03& (0+255),f,b
 13064  000ABC  3790               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
 13065  000ABE  0E64               	movlw	low _MB301xx
 13066  000AC0  258F               	addwf	??_ModbusFC03& (0+255),w,b
 13067  000AC2  6ED9               	movwf	fsr2l,c
 13068  000AC4  0E01               	movlw	high _MB301xx
 13069  000AC6  2190               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
 13070  000AC8  6EDA               	movwf	fsr2h,c
 13071  000ACA  CFDE F091          	movff	postinc2,??_ModbusFC03+2
 13072  000ACE  CFDD F092          	movff	postdec2,??_ModbusFC03+3
 13073  000AD2  5192               	movf	(??_ModbusFC03+3)& (0+255),w,b
 13074  000AD4  6FD5               	movwf	_ByteHi& (0+255),b
 13075  000AD6  6BD6               	clrf	(_ByteHi+1)& (0+255),b
 13076                           
 13077                           ;Modbus.c: 320:             }
 13078  000AD8  EF79  F006         	goto	l7869
 13079  000ADC                     l7843:
 13080                           
 13081                           ; BSR set to: 1
 13082  000ADC  0E02               	movlw	2
 13083  000ADE  1902               	xorwf	(_ModbusData+2)& (0+255),w,b
 13084  000AE0  A4D8               	btfss	status,2,c
 13085  000AE2  EF75  F005         	goto	u8041
 13086  000AE6  EF77  F005         	goto	u8040
 13087  000AEA                     u8041:
 13088  000AEA  EFA8  F005         	goto	l7847
 13089  000AEE                     u8040:
 13090  000AEE                     
 13091                           ; BSR set to: 1
 13092                           ;Modbus.c: 327:                 ByteLo = MB302xx[ModbusData[3] +i] & 0x00FF;
 13093  000AEE  5103               	movf	(_ModbusData+3)& (0+255),w,b
 13094  000AF0  0100               	movlb	0	; () banked
 13095  000AF2  2598               	addwf	ModbusFC03@i& (0+255),w,b
 13096  000AF4  6F8F               	movwf	??_ModbusFC03& (0+255),b
 13097  000AF6  0E00               	movlw	0
 13098  000AF8  2199               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
 13099  000AFA  6F90               	movwf	(??_ModbusFC03+1)& (0+255),b
 13100  000AFC  90D8               	bcf	status,0,c
 13101  000AFE  378F               	rlcf	??_ModbusFC03& (0+255),f,b
 13102  000B00  3790               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
 13103  000B02  0EFC               	movlw	low _MB302xx
 13104  000B04  258F               	addwf	??_ModbusFC03& (0+255),w,b
 13105  000B06  6ED9               	movwf	fsr2l,c
 13106  000B08  0E00               	movlw	high _MB302xx
 13107  000B0A  2190               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
 13108  000B0C  6EDA               	movwf	fsr2h,c
 13109  000B0E  CFDE F091          	movff	postinc2,??_ModbusFC03+2
 13110  000B12  CFDD F092          	movff	postdec2,??_ModbusFC03+3
 13111  000B16  5191               	movf	(??_ModbusFC03+2)& (0+255),w,b
 13112  000B18  6FF6               	movwf	_ByteLo& (0+255),b
 13113  000B1A  6BF7               	clrf	(_ByteLo+1)& (0+255),b
 13114                           
 13115                           ;Modbus.c: 328:                 ByteHi = MB302xx[ModbusData[3] +i] >> 8;
 13116  000B1C  0101               	movlb	1	; () banked
 13117  000B1E  5103               	movf	(_ModbusData+3)& (0+255),w,b
 13118  000B20  0100               	movlb	0	; () banked
 13119  000B22  2598               	addwf	ModbusFC03@i& (0+255),w,b
 13120  000B24  6F8F               	movwf	??_ModbusFC03& (0+255),b
 13121  000B26  0E00               	movlw	0
 13122  000B28  2199               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
 13123  000B2A  6F90               	movwf	(??_ModbusFC03+1)& (0+255),b
 13124  000B2C  90D8               	bcf	status,0,c
 13125  000B2E  378F               	rlcf	??_ModbusFC03& (0+255),f,b
 13126  000B30  3790               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
 13127  000B32  0EFC               	movlw	low _MB302xx
 13128  000B34  258F               	addwf	??_ModbusFC03& (0+255),w,b
 13129  000B36  6ED9               	movwf	fsr2l,c
 13130  000B38  0E00               	movlw	high _MB302xx
 13131  000B3A  2190               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
 13132  000B3C  6EDA               	movwf	fsr2h,c
 13133  000B3E  CFDE F091          	movff	postinc2,??_ModbusFC03+2
 13134  000B42  CFDD F092          	movff	postdec2,??_ModbusFC03+3
 13135  000B46  5192               	movf	(??_ModbusFC03+3)& (0+255),w,b
 13136  000B48  6FD5               	movwf	_ByteHi& (0+255),b
 13137  000B4A  6BD6               	clrf	(_ByteHi+1)& (0+255),b
 13138                           
 13139                           ;Modbus.c: 330:             }else if(ModbusData[2] == 0x04){
 13140  000B4C  EF79  F006         	goto	l7869
 13141  000B50                     l7847:
 13142                           
 13143                           ; BSR set to: 1
 13144  000B50  0E04               	movlw	4
 13145  000B52  1902               	xorwf	(_ModbusData+2)& (0+255),w,b
 13146  000B54  A4D8               	btfss	status,2,c
 13147  000B56  EFAF  F005         	goto	u8051
 13148  000B5A  EFB1  F005         	goto	u8050
 13149  000B5E                     u8051:
 13150  000B5E  EFE2  F005         	goto	l7851
 13151  000B62                     u8050:
 13152  000B62                     
 13153                           ; BSR set to: 1
 13154                           ;Modbus.c: 332:                 ByteLo = MB304xx[ModbusData[3] +i] & 0x00FF;
 13155  000B62  5103               	movf	(_ModbusData+3)& (0+255),w,b
 13156  000B64  0100               	movlb	0	; () banked
 13157  000B66  2598               	addwf	ModbusFC03@i& (0+255),w,b
 13158  000B68  6F8F               	movwf	??_ModbusFC03& (0+255),b
 13159  000B6A  0E00               	movlw	0
 13160  000B6C  2199               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
 13161  000B6E  6F90               	movwf	(??_ModbusFC03+1)& (0+255),b
 13162  000B70  90D8               	bcf	status,0,c
 13163  000B72  378F               	rlcf	??_ModbusFC03& (0+255),f,b
 13164  000B74  3790               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
 13165  000B76  0E72               	movlw	low _MB304xx
 13166  000B78  258F               	addwf	??_ModbusFC03& (0+255),w,b
 13167  000B7A  6ED9               	movwf	fsr2l,c
 13168  000B7C  0E01               	movlw	high _MB304xx
 13169  000B7E  2190               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
 13170  000B80  6EDA               	movwf	fsr2h,c
 13171  000B82  CFDE F091          	movff	postinc2,??_ModbusFC03+2
 13172  000B86  CFDD F092          	movff	postdec2,??_ModbusFC03+3
 13173  000B8A  5191               	movf	(??_ModbusFC03+2)& (0+255),w,b
 13174  000B8C  6FF6               	movwf	_ByteLo& (0+255),b
 13175  000B8E  6BF7               	clrf	(_ByteLo+1)& (0+255),b
 13176                           
 13177                           ;Modbus.c: 333:                 ByteHi = MB304xx[ModbusData[3] +i] >> 8;
 13178  000B90  0101               	movlb	1	; () banked
 13179  000B92  5103               	movf	(_ModbusData+3)& (0+255),w,b
 13180  000B94  0100               	movlb	0	; () banked
 13181  000B96  2598               	addwf	ModbusFC03@i& (0+255),w,b
 13182  000B98  6F8F               	movwf	??_ModbusFC03& (0+255),b
 13183  000B9A  0E00               	movlw	0
 13184  000B9C  2199               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
 13185  000B9E  6F90               	movwf	(??_ModbusFC03+1)& (0+255),b
 13186  000BA0  90D8               	bcf	status,0,c
 13187  000BA2  378F               	rlcf	??_ModbusFC03& (0+255),f,b
 13188  000BA4  3790               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
 13189  000BA6  0E72               	movlw	low _MB304xx
 13190  000BA8  258F               	addwf	??_ModbusFC03& (0+255),w,b
 13191  000BAA  6ED9               	movwf	fsr2l,c
 13192  000BAC  0E01               	movlw	high _MB304xx
 13193  000BAE  2190               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
 13194  000BB0  6EDA               	movwf	fsr2h,c
 13195  000BB2  CFDE F091          	movff	postinc2,??_ModbusFC03+2
 13196  000BB6  CFDD F092          	movff	postdec2,??_ModbusFC03+3
 13197  000BBA  5192               	movf	(??_ModbusFC03+3)& (0+255),w,b
 13198  000BBC  6FD5               	movwf	_ByteHi& (0+255),b
 13199  000BBE  6BD6               	clrf	(_ByteHi+1)& (0+255),b
 13200                           
 13201                           ;Modbus.c: 335:             }else if(ModbusData[2] == 0x05){
 13202  000BC0  EF79  F006         	goto	l7869
 13203  000BC4                     l7851:
 13204                           
 13205                           ; BSR set to: 1
 13206  000BC4  0E05               	movlw	5
 13207  000BC6  1902               	xorwf	(_ModbusData+2)& (0+255),w,b
 13208  000BC8  A4D8               	btfss	status,2,c
 13209  000BCA  EFE9  F005         	goto	u8061
 13210  000BCE  EFEB  F005         	goto	u8060
 13211  000BD2                     u8061:
 13212  000BD2  EF1C  F006         	goto	l7855
 13213  000BD6                     u8060:
 13214  000BD6                     
 13215                           ; BSR set to: 1
 13216                           ;Modbus.c: 337:                 ByteLo = MB305xx[ModbusData[3] +i] & 0x00FF;
 13217  000BD6  5103               	movf	(_ModbusData+3)& (0+255),w,b
 13218  000BD8  0100               	movlb	0	; () banked
 13219  000BDA  2598               	addwf	ModbusFC03@i& (0+255),w,b
 13220  000BDC  6F8F               	movwf	??_ModbusFC03& (0+255),b
 13221  000BDE  0E00               	movlw	0
 13222  000BE0  2199               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
 13223  000BE2  6F90               	movwf	(??_ModbusFC03+1)& (0+255),b
 13224  000BE4  90D8               	bcf	status,0,c
 13225  000BE6  378F               	rlcf	??_ModbusFC03& (0+255),f,b
 13226  000BE8  3790               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
 13227  000BEA  0E3C               	movlw	low _MB305xx
 13228  000BEC  258F               	addwf	??_ModbusFC03& (0+255),w,b
 13229  000BEE  6ED9               	movwf	fsr2l,c
 13230  000BF0  0E02               	movlw	high _MB305xx
 13231  000BF2  2190               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
 13232  000BF4  6EDA               	movwf	fsr2h,c
 13233  000BF6  CFDE F091          	movff	postinc2,??_ModbusFC03+2
 13234  000BFA  CFDD F092          	movff	postdec2,??_ModbusFC03+3
 13235  000BFE  5191               	movf	(??_ModbusFC03+2)& (0+255),w,b
 13236  000C00  6FF6               	movwf	_ByteLo& (0+255),b
 13237  000C02  6BF7               	clrf	(_ByteLo+1)& (0+255),b
 13238                           
 13239                           ;Modbus.c: 338:                 ByteHi = MB305xx[ModbusData[3] +i] >> 8;
 13240  000C04  0101               	movlb	1	; () banked
 13241  000C06  5103               	movf	(_ModbusData+3)& (0+255),w,b
 13242  000C08  0100               	movlb	0	; () banked
 13243  000C0A  2598               	addwf	ModbusFC03@i& (0+255),w,b
 13244  000C0C  6F8F               	movwf	??_ModbusFC03& (0+255),b
 13245  000C0E  0E00               	movlw	0
 13246  000C10  2199               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
 13247  000C12  6F90               	movwf	(??_ModbusFC03+1)& (0+255),b
 13248  000C14  90D8               	bcf	status,0,c
 13249  000C16  378F               	rlcf	??_ModbusFC03& (0+255),f,b
 13250  000C18  3790               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
 13251  000C1A  0E3C               	movlw	low _MB305xx
 13252  000C1C  258F               	addwf	??_ModbusFC03& (0+255),w,b
 13253  000C1E  6ED9               	movwf	fsr2l,c
 13254  000C20  0E02               	movlw	high _MB305xx
 13255  000C22  2190               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
 13256  000C24  6EDA               	movwf	fsr2h,c
 13257  000C26  CFDE F091          	movff	postinc2,??_ModbusFC03+2
 13258  000C2A  CFDD F092          	movff	postdec2,??_ModbusFC03+3
 13259  000C2E  5192               	movf	(??_ModbusFC03+3)& (0+255),w,b
 13260  000C30  6FD5               	movwf	_ByteHi& (0+255),b
 13261  000C32  6BD6               	clrf	(_ByteHi+1)& (0+255),b
 13262                           
 13263                           ;Modbus.c: 340:             }
 13264  000C34  EF79  F006         	goto	l7869
 13265  000C38                     l7855:
 13266                           
 13267                           ; BSR set to: 1
 13268  000C38  5102               	movf	(_ModbusData+2)& (0+255),w,b
 13269  000C3A  A4D8               	btfss	status,2,c
 13270  000C3C  EF22  F006         	goto	u8071
 13271  000C40  EF24  F006         	goto	u8070
 13272  000C44                     u8071:
 13273  000C44  EF55  F006         	goto	l7859
 13274  000C48                     u8070:
 13275  000C48                     
 13276                           ; BSR set to: 1
 13277                           ;Modbus.c: 343:                 ByteLo = MB300xx[ModbusData[3] +i] & 0x00FF;
 13278  000C48  5103               	movf	(_ModbusData+3)& (0+255),w,b
 13279  000C4A  0100               	movlb	0	; () banked
 13280  000C4C  2598               	addwf	ModbusFC03@i& (0+255),w,b
 13281  000C4E  6F8F               	movwf	??_ModbusFC03& (0+255),b
 13282  000C50  0E00               	movlw	0
 13283  000C52  2199               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
 13284  000C54  6F90               	movwf	(??_ModbusFC03+1)& (0+255),b
 13285  000C56  90D8               	bcf	status,0,c
 13286  000C58  378F               	rlcf	??_ModbusFC03& (0+255),f,b
 13287  000C5A  3790               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
 13288  000C5C  0EB7               	movlw	low _MB300xx
 13289  000C5E  258F               	addwf	??_ModbusFC03& (0+255),w,b
 13290  000C60  6ED9               	movwf	fsr2l,c
 13291  000C62  0E03               	movlw	high _MB300xx
 13292  000C64  2190               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
 13293  000C66  6EDA               	movwf	fsr2h,c
 13294  000C68  CFDE F091          	movff	postinc2,??_ModbusFC03+2
 13295  000C6C  CFDD F092          	movff	postdec2,??_ModbusFC03+3
 13296  000C70  5191               	movf	(??_ModbusFC03+2)& (0+255),w,b
 13297  000C72  6FF6               	movwf	_ByteLo& (0+255),b
 13298  000C74  6BF7               	clrf	(_ByteLo+1)& (0+255),b
 13299                           
 13300                           ;Modbus.c: 344:                 ByteHi = MB300xx[ModbusData[3] +i] >> 8;
 13301  000C76  0101               	movlb	1	; () banked
 13302  000C78  5103               	movf	(_ModbusData+3)& (0+255),w,b
 13303  000C7A  0100               	movlb	0	; () banked
 13304  000C7C  2598               	addwf	ModbusFC03@i& (0+255),w,b
 13305  000C7E  6F8F               	movwf	??_ModbusFC03& (0+255),b
 13306  000C80  0E00               	movlw	0
 13307  000C82  2199               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
 13308  000C84  6F90               	movwf	(??_ModbusFC03+1)& (0+255),b
 13309  000C86  90D8               	bcf	status,0,c
 13310  000C88  378F               	rlcf	??_ModbusFC03& (0+255),f,b
 13311  000C8A  3790               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
 13312  000C8C  0EB7               	movlw	low _MB300xx
 13313  000C8E  258F               	addwf	??_ModbusFC03& (0+255),w,b
 13314  000C90  6ED9               	movwf	fsr2l,c
 13315  000C92  0E03               	movlw	high _MB300xx
 13316  000C94  2190               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
 13317  000C96  6EDA               	movwf	fsr2h,c
 13318  000C98  CFDE F091          	movff	postinc2,??_ModbusFC03+2
 13319  000C9C  CFDD F092          	movff	postdec2,??_ModbusFC03+3
 13320  000CA0  5192               	movf	(??_ModbusFC03+3)& (0+255),w,b
 13321  000CA2  6FD5               	movwf	_ByteHi& (0+255),b
 13322  000CA4  6BD6               	clrf	(_ByteHi+1)& (0+255),b
 13323                           
 13324                           ;Modbus.c: 346:             }else if(ModbusData[2] == 0x06){
 13325  000CA6  EF79  F006         	goto	l7869
 13326  000CAA                     l7859:
 13327                           
 13328                           ; BSR set to: 1
 13329  000CAA  0E06               	movlw	6
 13330  000CAC  1902               	xorwf	(_ModbusData+2)& (0+255),w,b
 13331  000CAE  A4D8               	btfss	status,2,c
 13332  000CB0  EF5C  F006         	goto	u8081
 13333  000CB4  EF5E  F006         	goto	u8080
 13334  000CB8                     u8081:
 13335  000CB8  EF79  F006         	goto	l784
 13336  000CBC                     u8080:
 13337  000CBC                     
 13338                           ; BSR set to: 1
 13339                           ;Modbus.c: 348:                 uint16_t convertedValue;;Modbus.c: 349:                 
      +                          convertedValue = ADCC_GetSingleConversion(AIP_0);
 13340  000CBC  0E00               	movlw	0
 13341  000CBE  ECFA  F025         	call	_ADCC_GetSingleConversion
 13342  000CC2  C005  F095         	movff	?_ADCC_GetSingleConversion,ModbusFC03@convertedValue
 13343  000CC6  C006  F096         	movff	?_ADCC_GetSingleConversion+1,ModbusFC03@convertedValue+1
 13344  000CCA                     
 13345                           ;Modbus.c: 350:                 printf("ADC: 0x%04x \r\n", convertedValue);
 13346  000CCA  0E99               	movlw	low STR_53
 13347  000CCC  0100               	movlb	0	; () banked
 13348  000CCE  6F7D               	movwf	printf@fmt& (0+255),b
 13349  000CD0  0EFF               	movlw	high STR_53
 13350  000CD2  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 13351  000CD4  C095  F07F         	movff	ModbusFC03@convertedValue,?_printf+2
 13352  000CD8  C096  F080         	movff	ModbusFC03@convertedValue+1,?_printf+3
 13353  000CDC  EC3D  F026         	call	_printf	;wreg free
 13354  000CE0                     
 13355                           ;Modbus.c: 352:                 ByteLo = convertedValue & 0x00FF;
 13356  000CE0  0100               	movlb	0	; () banked
 13357  000CE2  5195               	movf	ModbusFC03@convertedValue& (0+255),w,b
 13358  000CE4  6FF6               	movwf	_ByteLo& (0+255),b
 13359  000CE6  6BF7               	clrf	(_ByteLo+1)& (0+255),b
 13360  000CE8                     
 13361                           ; BSR set to: 0
 13362                           ;Modbus.c: 353:                 ByteHi = convertedValue >> 8;
 13363  000CE8  5196               	movf	(ModbusFC03@convertedValue+1)& (0+255),w,b
 13364  000CEA  6FD5               	movwf	_ByteHi& (0+255),b
 13365  000CEC  6BD6               	clrf	(_ByteHi+1)& (0+255),b
 13366  000CEE  EF79  F006         	goto	l7869
 13367  000CF2                     l784:
 13368  000CF2                     l7869:
 13369                           
 13370                           ;Modbus.c: 356:             MBRespon[MBResCnt] = ByteHi;
 13371  000CF2  0E57               	movlw	low _MBRespon
 13372  000CF4  0100               	movlb	0	; () banked
 13373  000CF6  25D7               	addwf	_MBResCnt& (0+255),w,b
 13374  000CF8  6ED9               	movwf	fsr2l,c
 13375  000CFA  0E02               	movlw	high _MBRespon
 13376  000CFC  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 13377  000CFE  6EDA               	movwf	fsr2h,c
 13378  000D00  C0D5  FFDF         	movff	_ByteHi,indf2
 13379  000D04                     
 13380                           ; BSR set to: 0
 13381                           ;Modbus.c: 357:             MBResCnt++;
 13382  000D04  4BD7               	infsnz	_MBResCnt& (0+255),f,b
 13383  000D06  2BD8               	incf	(_MBResCnt+1)& (0+255),f,b
 13384  000D08                     
 13385                           ; BSR set to: 0
 13386                           ;Modbus.c: 358:             MBRespon[MBResCnt] = ByteLo;
 13387  000D08  0E57               	movlw	low _MBRespon
 13388  000D0A  25D7               	addwf	_MBResCnt& (0+255),w,b
 13389  000D0C  6ED9               	movwf	fsr2l,c
 13390  000D0E  0E02               	movlw	high _MBRespon
 13391  000D10  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 13392  000D12  6EDA               	movwf	fsr2h,c
 13393  000D14  C0F6  FFDF         	movff	_ByteLo,indf2
 13394  000D18                     
 13395                           ; BSR set to: 0
 13396                           ;Modbus.c: 359:             MBResCnt++;
 13397  000D18  4BD7               	infsnz	_MBResCnt& (0+255),f,b
 13398  000D1A  2BD8               	incf	(_MBResCnt+1)& (0+255),f,b
 13399  000D1C                     
 13400                           ; BSR set to: 0
 13401                           ;Modbus.c: 361:         }
 13402  000D1C  4B98               	infsnz	ModbusFC03@i& (0+255),f,b
 13403  000D1E  2B99               	incf	(ModbusFC03@i+1)& (0+255),f,b
 13404  000D20                     l7879:
 13405                           
 13406                           ; BSR set to: 0
 13407  000D20  0101               	movlb	1	; () banked
 13408  000D22  5105               	movf	(_ModbusData+5)& (0+255),w,b
 13409  000D24  0100               	movlb	0	; () banked
 13410  000D26  6F8F               	movwf	??_ModbusFC03& (0+255),b
 13411  000D28  6B90               	clrf	(??_ModbusFC03+1)& (0+255),b
 13412  000D2A  518F               	movf	??_ModbusFC03& (0+255),w,b
 13413  000D2C  5D98               	subwf	ModbusFC03@i& (0+255),w,b
 13414  000D2E  5199               	movf	(ModbusFC03@i+1)& (0+255),w,b
 13415  000D30  0A80               	xorlw	128
 13416  000D32  6F91               	movwf	(??_ModbusFC03+2)& (0+255),b
 13417  000D34  5190               	movf	(??_ModbusFC03+1)& (0+255),w,b
 13418  000D36  0A80               	xorlw	128
 13419  000D38  5991               	subwfb	(??_ModbusFC03+2)& (0+255),w,b
 13420  000D3A  A0D8               	btfss	status,0,c
 13421  000D3C  EFA2  F006         	goto	u8091
 13422  000D40  EFA4  F006         	goto	u8090
 13423  000D44                     u8091:
 13424  000D44  EFFA  F004         	goto	l7835
 13425  000D48                     u8090:
 13426  000D48                     
 13427                           ; BSR set to: 0
 13428                           ;Modbus.c: 363:         ByteHi = generateCRC(MBResCnt, 1);
 13429  000D48  C0D7  F005         	movff	_MBResCnt,generateCRC@MessCnt
 13430  000D4C  C0D8  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
 13431  000D50  0E01               	movlw	1
 13432  000D52  6E07               	movwf	generateCRC@HiOrLo^0,c
 13433  000D54  ECF1  F01C         	call	_generateCRC	;wreg free
 13434  000D58  C005  F0D5         	movff	?_generateCRC,_ByteHi
 13435  000D5C  C006  F0D6         	movff	?_generateCRC+1,_ByteHi+1
 13436                           
 13437                           ;Modbus.c: 364:         ByteLo = generateCRC(MBResCnt, 0);
 13438  000D60  C0D7  F005         	movff	_MBResCnt,generateCRC@MessCnt
 13439  000D64  C0D8  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
 13440  000D68  0E00               	movlw	0
 13441  000D6A  6E07               	movwf	generateCRC@HiOrLo^0,c
 13442  000D6C  ECF1  F01C         	call	_generateCRC	;wreg free
 13443  000D70  C005  F0F6         	movff	?_generateCRC,_ByteLo
 13444  000D74  C006  F0F7         	movff	?_generateCRC+1,_ByteLo+1
 13445  000D78                     
 13446                           ;Modbus.c: 366:         MBRespon[MBResCnt] = ByteHi;
 13447  000D78  0E57               	movlw	low _MBRespon
 13448  000D7A  0100               	movlb	0	; () banked
 13449  000D7C  25D7               	addwf	_MBResCnt& (0+255),w,b
 13450  000D7E  6ED9               	movwf	fsr2l,c
 13451  000D80  0E02               	movlw	high _MBRespon
 13452  000D82  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 13453  000D84  6EDA               	movwf	fsr2h,c
 13454  000D86  C0D5  FFDF         	movff	_ByteHi,indf2
 13455  000D8A                     
 13456                           ; BSR set to: 0
 13457                           ;Modbus.c: 367:         MBRespon[MBResCnt +1] = ByteLo;
 13458  000D8A  0E58               	movlw	low (_MBRespon+1)
 13459  000D8C  25D7               	addwf	_MBResCnt& (0+255),w,b
 13460  000D8E  6ED9               	movwf	fsr2l,c
 13461  000D90  0E02               	movlw	high (_MBRespon+1)
 13462  000D92  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 13463  000D94  6EDA               	movwf	fsr2h,c
 13464  000D96  C0F6  FFDF         	movff	_ByteLo,indf2
 13465  000D9A                     
 13466                           ; BSR set to: 0
 13467                           ;Modbus.c: 368:         MBResCnt = MBResCnt +2;
 13468  000D9A  0E02               	movlw	2
 13469  000D9C  25D7               	addwf	_MBResCnt& (0+255),w,b
 13470  000D9E  6FD7               	movwf	_MBResCnt& (0+255),b
 13471  000DA0  0E00               	movlw	0
 13472  000DA2  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 13473  000DA4  6FD8               	movwf	(_MBResCnt+1)& (0+255),b
 13474  000DA6                     
 13475                           ; BSR set to: 0
 13476                           ;Modbus.c: 371:         UART1_Write_string(MBRespon,MBResCnt);
 13477  000DA6  0E57               	movlw	low _MBRespon
 13478  000DA8  6E06               	movwf	UART1_Write_string@data^0,c
 13479  000DAA  0E02               	movlw	high _MBRespon
 13480  000DAC  6E07               	movwf	(UART1_Write_string@data+1)^0,c
 13481  000DAE  C0D7  F008         	movff	_MBResCnt,UART1_Write_string@data_len
 13482  000DB2  C0D8  F009         	movff	_MBResCnt+1,UART1_Write_string@data_len+1
 13483  000DB6  ECBE  F021         	call	_UART1_Write_string	;wreg free
 13484                           
 13485                           ;Modbus.c: 372:     }else{
 13486  000DBA  EFE5  F006         	goto	l792
 13487  000DBE                     l7891:
 13488                           
 13489                           ; BSR set to: 0
 13490                           ;Modbus.c: 373:         ModbusError(0x02);
 13491  000DBE  0E00               	movlw	0
 13492  000DC0  6E15               	movwf	(ModbusError@ErrorCode+1)^0,c
 13493  000DC2  0E02               	movlw	2
 13494  000DC4  6E14               	movwf	ModbusError@ErrorCode^0,c
 13495  000DC6  ECF3  F01E         	call	_ModbusError	;wreg free
 13496  000DCA                     l792:
 13497  000DCA  0012               	return		;funcret
 13498  000DCC                     __end_of_ModbusFC03:
 13499                           	opt callstack 0
 13500                           
 13501 ;; *************** function _printf *****************
 13502 ;; Defined at:
 13503 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
 13504 ;; Parameters:    Size  Location     Type
 13505 ;;  fmt             2   29[BANK0 ] PTR const unsigned char 
 13506 ;;		 -> STR_124(12), STR_122(13), STR_121(17), STR_120(15), 
 13507 ;;		 -> STR_119(33), STR_117(38), STR_116(58), STR_115(17), 
 13508 ;;		 -> STR_114(16), STR_113(4), STR_112(15), STR_111(19), 
 13509 ;;		 -> STR_110(32), STR_109(33), STR_108(37), STR_107(44), 
 13510 ;;		 -> STR_106(22), STR_105(75), STR_104(53), STR_103(69), 
 13511 ;;		 -> STR_102(54), STR_101(52), STR_100(40), STR_99(30), 
 13512 ;;		 -> STR_98(43), STR_97(73), STR_96(42), STR_95(36), 
 13513 ;;		 -> STR_94(34), STR_91(42), STR_90(22), STR_89(21), 
 13514 ;;		 -> STR_88(20), STR_87(19), STR_86(40), STR_76(32), 
 13515 ;;		 -> STR_75(37), STR_74(16), STR_73(24), STR_72(4), 
 13516 ;;		 -> STR_71(24), STR_70(30), STR_69(30), STR_68(37), 
 13517 ;;		 -> STR_67(37), STR_66(38), STR_65(38), STR_64(54), 
 13518 ;;		 -> STR_63(36), STR_62(32), STR_61(32), STR_60(35), 
 13519 ;;		 -> STR_59(54), STR_58(38), STR_57(54), STR_56(36), 
 13520 ;;		 -> STR_55(19), STR_54(54), STR_53(15), STR_52(30), 
 13521 ;;		 -> STR_51(52), STR_50(28), STR_49(30), STR_48(52), 
 13522 ;;		 -> STR_47(25), STR_46(30), STR_45(52), STR_44(25), 
 13523 ;;		 -> STR_43(30), STR_42(52), STR_41(23), STR_40(30), 
 13524 ;;		 -> STR_39(42), STR_38(21), STR_37(30), STR_36(52), 
 13525 ;;		 -> STR_35(21), STR_34(30), STR_33(52), STR_32(25), 
 13526 ;;		 -> STR_31(36), STR_30(3), STR_29(32), STR_28(32), 
 13527 ;;		 -> STR_27(35), STR_26(66), STR_25(38), STR_24(37), 
 13528 ;;		 -> STR_23(37), STR_22(38), STR_21(38), STR_20(55), 
 13529 ;;		 -> STR_19(36), STR_18(30), STR_17(30), STR_16(37), 
 13530 ;;		 -> STR_15(37), STR_14(38), STR_13(38), STR_12(54), 
 13531 ;;		 -> STR_11(36), STR_10(21), STR_9(28), STR_8(54), 
 13532 ;;		 -> STR_7(27), STR_6(16), STR_4(19), STR_3(28), 
 13533 ;;		 -> STR_2(31), STR_1(21), 
 13534 ;; Auto vars:     Size  Location     Type
 13535 ;;  ap              2   45[BANK0 ] PTR void [1]
 13536 ;;		 -> ?_printf(2), 
 13537 ;;  ret             2    0        int 
 13538 ;; Return value:  Size  Location     Type
 13539 ;;                  2   29[BANK0 ] int 
 13540 ;; Registers used:
 13541 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13542 ;; Tracked objects:
 13543 ;;		On entry : 0/0
 13544 ;;		On exit  : 0/0
 13545 ;;		Unchanged: 0/0
 13546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13547 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13548 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13550 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13551 ;;Total ram usage:       18 bytes
 13552 ;; Hardware stack levels used:    1
 13553 ;; Hardware stack levels required when called:   12
 13554 ;; This function calls:
 13555 ;;		_vfprintf
 13556 ;; This function is called by:
 13557 ;;		_main
 13558 ;;		_PrintMB400
 13559 ;;		_AddRxBuffToModBus
 13560 ;;		_PrintModbus
 13561 ;;		_checkCRC
 13562 ;;		_ModbusFC03
 13563 ;;		_ModbusFC10
 13564 ;;		_PrintModRespon
 13565 ;;		_ModbusRx
 13566 ;;		_InitialiseString
 13567 ;;		_ReadRX232
 13568 ;;		_TogDebug
 13569 ;;		_ClearEEAddRange
 13570 ;;		_SaveCardDat
 13571 ;; This function uses a non-reentrant model
 13572 ;;
 13573                           
 13574                           	psect	text49
 13575  004C7A                     __ptext49:
 13576                           	opt callstack 0
 13577  004C7A                     _printf:
 13578                           	opt callstack 18
 13579  004C7A  0E7F               	movlw	low (?_printf+2)
 13580  004C7C  0100               	movlb	0	; () banked
 13581  004C7E  6F8D               	movwf	printf@ap& (0+255),b
 13582  004C80  0E00               	movlw	high (?_printf+2)
 13583  004C82  6F8E               	movwf	(printf@ap+1)& (0+255),b
 13584  004C84                     
 13585                           ; BSR set to: 0
 13586  004C84  0E00               	movlw	0
 13587  004C86  6F77               	movwf	vfprintf@fp& (0+255),b
 13588  004C88  0E00               	movlw	0
 13589  004C8A  6F78               	movwf	(vfprintf@fp+1)& (0+255),b
 13590  004C8C  C07D  F079         	movff	printf@fmt,vfprintf@fmt
 13591  004C90  C07E  F07A         	movff	printf@fmt+1,vfprintf@fmt+1
 13592  004C94  0E8D               	movlw	low printf@ap
 13593  004C96  6F7B               	movwf	vfprintf@ap& (0+255),b
 13594  004C98  0E00               	movlw	high printf@ap
 13595  004C9A  6F7C               	movwf	(vfprintf@ap+1)& (0+255),b
 13596  004C9C  EC29  F022         	call	_vfprintf	;wreg free
 13597  004CA0  0012               	return		;funcret
 13598  004CA2                     __end_of_printf:
 13599                           	opt callstack 0
 13600                           
 13601 ;; *************** function _vfprintf *****************
 13602 ;; Defined at:
 13603 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 13604 ;; Parameters:    Size  Location     Type
 13605 ;;  fp              2   23[BANK0 ] PTR struct _IO_FILE
 13606 ;;		 -> NULL(0), 
 13607 ;;  fmt             2   25[BANK0 ] PTR const unsigned char 
 13608 ;;		 -> STR_124(12), STR_122(13), STR_121(17), STR_120(15), 
 13609 ;;		 -> STR_119(33), STR_117(38), STR_116(58), STR_115(17), 
 13610 ;;		 -> STR_114(16), STR_113(4), STR_112(15), STR_111(19), 
 13611 ;;		 -> STR_110(32), STR_109(33), STR_108(37), STR_107(44), 
 13612 ;;		 -> STR_106(22), STR_105(75), STR_104(53), STR_103(69), 
 13613 ;;		 -> STR_102(54), STR_101(52), STR_100(40), STR_99(30), 
 13614 ;;		 -> STR_98(43), STR_97(73), STR_96(42), STR_95(36), 
 13615 ;;		 -> STR_94(34), STR_91(42), STR_90(22), STR_89(21), 
 13616 ;;		 -> STR_88(20), STR_87(19), STR_86(40), STR_76(32), 
 13617 ;;		 -> STR_75(37), STR_74(16), STR_73(24), STR_72(4), 
 13618 ;;		 -> STR_71(24), STR_70(30), STR_69(30), STR_68(37), 
 13619 ;;		 -> STR_67(37), STR_66(38), STR_65(38), STR_64(54), 
 13620 ;;		 -> STR_63(36), STR_62(32), STR_61(32), STR_60(35), 
 13621 ;;		 -> STR_59(54), STR_58(38), STR_57(54), STR_56(36), 
 13622 ;;		 -> STR_55(19), STR_54(54), STR_53(15), STR_52(30), 
 13623 ;;		 -> STR_51(52), STR_50(28), STR_49(30), STR_48(52), 
 13624 ;;		 -> STR_47(25), STR_46(30), STR_45(52), STR_44(25), 
 13625 ;;		 -> STR_43(30), STR_42(52), STR_41(23), STR_40(30), 
 13626 ;;		 -> STR_39(42), STR_38(21), STR_37(30), STR_36(52), 
 13627 ;;		 -> STR_35(21), STR_34(30), STR_33(52), STR_32(25), 
 13628 ;;		 -> STR_31(36), STR_30(3), STR_29(32), STR_28(32), 
 13629 ;;		 -> STR_27(35), STR_26(66), STR_25(38), STR_24(37), 
 13630 ;;		 -> STR_23(37), STR_22(38), STR_21(38), STR_20(55), 
 13631 ;;		 -> STR_19(36), STR_18(30), STR_17(30), STR_16(37), 
 13632 ;;		 -> STR_15(37), STR_14(38), STR_13(38), STR_12(54), 
 13633 ;;		 -> STR_11(36), STR_10(21), STR_9(28), STR_8(54), 
 13634 ;;		 -> STR_7(27), STR_6(16), STR_4(19), STR_3(28), 
 13635 ;;		 -> STR_2(31), STR_1(21), 
 13636 ;;  ap              2   27[BANK0 ] PTR PTR void 
 13637 ;;		 -> printf@ap(2), 
 13638 ;; Auto vars:     Size  Location     Type
 13639 ;;  cfmt            2   82[COMRAM] PTR unsigned char 
 13640 ;;		 -> STR_124(12), STR_122(13), STR_121(17), STR_120(15), 
 13641 ;;		 -> STR_119(33), STR_117(38), STR_116(58), STR_115(17), 
 13642 ;;		 -> STR_114(16), STR_113(4), STR_112(15), STR_111(19), 
 13643 ;;		 -> STR_110(32), STR_109(33), STR_108(37), STR_107(44), 
 13644 ;;		 -> STR_106(22), STR_105(75), STR_104(53), STR_103(69), 
 13645 ;;		 -> STR_102(54), STR_101(52), STR_100(40), STR_99(30), 
 13646 ;;		 -> STR_98(43), STR_97(73), STR_96(42), STR_95(36), 
 13647 ;;		 -> STR_94(34), STR_91(42), STR_90(22), STR_89(21), 
 13648 ;;		 -> STR_88(20), STR_87(19), STR_86(40), STR_76(32), 
 13649 ;;		 -> STR_75(37), STR_74(16), STR_73(24), STR_72(4), 
 13650 ;;		 -> STR_71(24), STR_70(30), STR_69(30), STR_68(37), 
 13651 ;;		 -> STR_67(37), STR_66(38), STR_65(38), STR_64(54), 
 13652 ;;		 -> STR_63(36), STR_62(32), STR_61(32), STR_60(35), 
 13653 ;;		 -> STR_59(54), STR_58(38), STR_57(54), STR_56(36), 
 13654 ;;		 -> STR_55(19), STR_54(54), STR_53(15), STR_52(30), 
 13655 ;;		 -> STR_51(52), STR_50(28), STR_49(30), STR_48(52), 
 13656 ;;		 -> STR_47(25), STR_46(30), STR_45(52), STR_44(25), 
 13657 ;;		 -> STR_43(30), STR_42(52), STR_41(23), STR_40(30), 
 13658 ;;		 -> STR_39(42), STR_38(21), STR_37(30), STR_36(52), 
 13659 ;;		 -> STR_35(21), STR_34(30), STR_33(52), STR_32(25), 
 13660 ;;		 -> STR_31(36), STR_30(3), STR_29(32), STR_28(32), 
 13661 ;;		 -> STR_27(35), STR_26(66), STR_25(38), STR_24(37), 
 13662 ;;		 -> STR_23(37), STR_22(38), STR_21(38), STR_20(55), 
 13663 ;;		 -> STR_19(36), STR_18(30), STR_17(30), STR_16(37), 
 13664 ;;		 -> STR_15(37), STR_14(38), STR_13(38), STR_12(54), 
 13665 ;;		 -> STR_11(36), STR_10(21), STR_9(28), STR_8(54), 
 13666 ;;		 -> STR_7(27), STR_6(16), STR_4(19), STR_3(28), 
 13667 ;;		 -> STR_2(31), STR_1(21), 
 13668 ;; Return value:  Size  Location     Type
 13669 ;;                  2   23[BANK0 ] int 
 13670 ;; Registers used:
 13671 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13672 ;; Tracked objects:
 13673 ;;		On entry : 0/0
 13674 ;;		On exit  : 0/0
 13675 ;;		Unchanged: 0/0
 13676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13677 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13678 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13680 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13681 ;;Total ram usage:        8 bytes
 13682 ;; Hardware stack levels used:    1
 13683 ;; Hardware stack levels required when called:   11
 13684 ;; This function calls:
 13685 ;;		_vfpfcnvrt
 13686 ;; This function is called by:
 13687 ;;		_printf
 13688 ;; This function uses a non-reentrant model
 13689 ;;
 13690                           
 13691                           	psect	text50
 13692  004452                     __ptext50:
 13693                           	opt callstack 0
 13694  004452                     _vfprintf:
 13695                           	opt callstack 18
 13696  004452                     
 13697                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
 13698  004452  C079  F053         	movff	vfprintf@fmt,vfprintf@cfmt
 13699  004456  C07A  F054         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 13700  00445A                     
 13701                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
 13702  00445A  0E00               	movlw	0
 13703  00445C  0100               	movlb	0	; () banked
 13704  00445E  6FCE               	movwf	(_nout+1)& (0+255),b
 13705  004460  0E00               	movlw	0
 13706  004462  6FCD               	movwf	_nout& (0+255),b
 13707                           
 13708                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 13709  004464  EF47  F022         	goto	l7013
 13710  004468                     l7011:
 13711                           
 13712                           ; BSR set to: 0
 13713                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
 13714  004468  C077  F049         	movff	vfprintf@fp,vfpfcnvrt@fp
 13715  00446C  C078  F04A         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 13716  004470  0E53               	movlw	low vfprintf@cfmt
 13717  004472  6E4B               	movwf	vfpfcnvrt@fmt^0,c
 13718  004474  0E00               	movlw	high vfprintf@cfmt
 13719  004476  6E4C               	movwf	(vfpfcnvrt@fmt+1)^0,c
 13720  004478  C07B  F04D         	movff	vfprintf@ap,vfpfcnvrt@ap
 13721  00447C  C07C  F04E         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
 13722  004480  ECE6  F006         	call	_vfpfcnvrt	;wreg free
 13723  004484  5049               	movf	?_vfpfcnvrt^0,w,c
 13724  004486  0100               	movlb	0	; () banked
 13725  004488  27CD               	addwf	_nout& (0+255),f,b
 13726  00448A  504A               	movf	(?_vfpfcnvrt+1)^0,w,c
 13727  00448C  23CE               	addwfc	(_nout+1)& (0+255),f,b
 13728  00448E                     l7013:
 13729                           
 13730                           ; BSR set to: 0
 13731                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 13732  00448E  C053  FFF6         	movff	vfprintf@cfmt,tblptrl
 13733  004492  C054  FFF7         	movff	vfprintf@cfmt+1,tblptrh
 13734  004496                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13735  004496  6AF8               	clrf	tblptru,c
 13736  004498                     	endif
 13737  004498                     	if	0	;tblptru may be non-zero
 13738  004498                     	endif
 13739  004498  0008               	tblrd		*
 13740  00449A  50F5               	movf	tablat,w,c
 13741  00449C  0900               	iorlw	0
 13742  00449E  A4D8               	btfss	status,2,c
 13743  0044A0  EF54  F022         	goto	u7001
 13744  0044A4  EF56  F022         	goto	u7000
 13745  0044A8                     u7001:
 13746  0044A8  EF34  F022         	goto	l7011
 13747  0044AC                     u7000:
 13748  0044AC                     
 13749                           ; BSR set to: 0
 13750                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
 13751  0044AC  C0CD  F077         	movff	_nout,?_vfprintf
 13752  0044B0  C0CE  F078         	movff	_nout+1,?_vfprintf+1
 13753  0044B4                     
 13754                           ; BSR set to: 0
 13755  0044B4  0012               	return		;funcret
 13756  0044B6                     __end_of_vfprintf:
 13757                           	opt callstack 0
 13758                           
 13759 ;; *************** function _vfpfcnvrt *****************
 13760 ;; Defined at:
 13761 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 13762 ;; Parameters:    Size  Location     Type
 13763 ;;  fp              2   72[COMRAM] PTR struct _IO_FILE
 13764 ;;		 -> NULL(0), 
 13765 ;;  fmt             2   74[COMRAM] PTR PTR unsigned char 
 13766 ;;		 -> vfprintf@cfmt(2), 
 13767 ;;  ap              2   76[COMRAM] PTR PTR void 
 13768 ;;		 -> printf@ap(2), 
 13769 ;; Auto vars:     Size  Location     Type
 13770 ;;  llu             8   15[BANK0 ] unsigned long long 
 13771 ;;  ll              8    0[BANK0 ] long long 
 13772 ;;  f               4    0        long long 
 13773 ;;  vp              3    0        PTR void 
 13774 ;;  ct              3    0        unsigned char [3]
 13775 ;;  done            2   11[BANK0 ] int 
 13776 ;;  cp              2    8[BANK0 ] PTR unsigned char 
 13777 ;;		 -> ?_printf(2), ValidateCmd@ConfName_1565(20), ValidateCmd@ConfName_1561(20), ValidateCmd@ConfName(20), 
 13778 ;;		 -> STR_93(9), STR_92(12), InitialiseString@RevNum(2), InitialiseString@PartNum(19), 
 13779 ;;		 -> InitialiseString@SerialNum(11), Command(16), 
 13780 ;;  i               2    0        int 
 13781 ;;  c               1   10[BANK0 ] unsigned char 
 13782 ;; Return value:  Size  Location     Type
 13783 ;;                  2   72[COMRAM] int 
 13784 ;; Registers used:
 13785 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13786 ;; Tracked objects:
 13787 ;;		On entry : 0/0
 13788 ;;		On exit  : 0/0
 13789 ;;		Unchanged: 0/0
 13790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13791 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13792 ;;      Locals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13793 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13794 ;;      Totals:        10      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13795 ;;Total ram usage:       33 bytes
 13796 ;; Hardware stack levels used:    1
 13797 ;; Hardware stack levels required when called:   10
 13798 ;; This function calls:
 13799 ;;		_atoi
 13800 ;;		_dtoa
 13801 ;;		_fputc
 13802 ;;		_isdigit
 13803 ;;		_stoa
 13804 ;;		_utoa
 13805 ;;		_xtoa
 13806 ;; This function is called by:
 13807 ;;		_vfprintf
 13808 ;; This function uses a non-reentrant model
 13809 ;;
 13810                           
 13811                           	psect	text51
 13812  000DCC                     __ptext51:
 13813                           	opt callstack 0
 13814  000DCC                     _vfpfcnvrt:
 13815                           	opt callstack 18
 13816  000DCC                     
 13817                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
 13818  000DCC  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13819  000DD0  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13820  000DD4  CFDE FFF6          	movff	postinc2,tblptrl
 13821  000DD8  CFDD FFF7          	movff	postdec2,tblptrh
 13822  000DDC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13823  000DDC  6AF8               	clrf	tblptru,c
 13824  000DDE                     	endif
 13825  000DDE                     	if	0	;tblptru may be non-zero
 13826  000DDE                     	endif
 13827  000DDE  0008               	tblrd		*
 13828  000DE0  50F5               	movf	tablat,w,c
 13829  000DE2  0A25               	xorlw	37
 13830  000DE4  A4D8               	btfss	status,2,c
 13831  000DE6  EFF7  F006         	goto	u6831
 13832  000DEA  EFF9  F006         	goto	u6830
 13833  000DEE                     u6831:
 13834  000DEE  EF8E  F009         	goto	l6985
 13835  000DF2                     u6830:
 13836  000DF2                     
 13837                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
 13838  000DF2  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13839  000DF6  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13840  000DFA  2ADE               	incf	postinc2,f,c
 13841  000DFC  0E00               	movlw	0
 13842  000DFE  22DD               	addwfc	postdec2,f,c
 13843  000E00                     
 13844                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
 13845  000E00  0E00               	movlw	0
 13846  000E02  0100               	movlb	0	; () banked
 13847  000E04  6FD0               	movwf	(_width+1)& (0+255),b
 13848  000E06  0E00               	movlw	0
 13849  000E08  6FCF               	movwf	_width& (0+255),b
 13850  000E0A  C0CF  F057         	movff	_width,_flags
 13851  000E0E  C0D0  F058         	movff	_width+1,_flags+1
 13852  000E12                     
 13853                           ; BSR set to: 0
 13854                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
 13855  000E12  69D1               	setf	_prec& (0+255),b
 13856  000E14  69D2               	setf	(_prec+1)& (0+255),b
 13857  000E16                     
 13858                           ; BSR set to: 0
 13859                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
 13860  000E16  0E00               	movlw	0
 13861  000E18  6F6C               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 13862  000E1A  0E00               	movlw	0
 13863  000E1C  6F6B               	movwf	vfpfcnvrt@done& (0+255),b
 13864                           
 13865                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
 13866  000E1E  EF58  F007         	goto	l6907
 13867  000E22                     l6881:
 13868                           
 13869                           ; BSR set to: 0
 13870                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
 13871  000E22  8057               	bsf	_flags^0,0,c
 13872  000E24                     l6883:
 13873                           
 13874                           ; BSR set to: 0
 13875                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
 13876  000E24  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13877  000E28  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13878  000E2C  2ADE               	incf	postinc2,f,c
 13879  000E2E  0E00               	movlw	0
 13880  000E30  22DD               	addwfc	postdec2,f,c
 13881                           
 13882                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
 13883  000E32  EF58  F007         	goto	l6907
 13884  000E36                     l6885:
 13885                           
 13886                           ; BSR set to: 0
 13887                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
 13888  000E36  8257               	bsf	_flags^0,1,c
 13889  000E38  EF12  F007         	goto	l6883
 13890  000E3C                     l6889:
 13891                           
 13892                           ; BSR set to: 0
 13893                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
 13894  000E3C  8457               	bsf	_flags^0,2,c
 13895  000E3E  EF12  F007         	goto	l6883
 13896  000E42                     l6893:
 13897                           
 13898                           ; BSR set to: 0
 13899                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
 13900  000E42  8657               	bsf	_flags^0,3,c
 13901  000E44  EF12  F007         	goto	l6883
 13902  000E48                     l6897:
 13903                           
 13904                           ; BSR set to: 0
 13905                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
 13906  000E48  8857               	bsf	_flags^0,4,c
 13907  000E4A  EF12  F007         	goto	l6883
 13908  000E4E                     l6901:
 13909                           
 13910                           ; BSR set to: 0
 13911                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
 13912  000E4E  0E00               	movlw	0
 13913  000E50  6F6C               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 13914  000E52  0E01               	movlw	1
 13915  000E54  6F6B               	movwf	vfpfcnvrt@done& (0+255),b
 13916                           
 13917                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
 13918  000E56  EF58  F007         	goto	l6907
 13919  000E5A                     l6905:
 13920                           
 13921                           ; BSR set to: 0
 13922  000E5A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13923  000E5E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13924  000E62  CFDE FFF6          	movff	postinc2,tblptrl
 13925  000E66  CFDD FFF7          	movff	postdec2,tblptrh
 13926  000E6A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13927  000E6A  6AF8               	clrf	tblptru,c
 13928  000E6C                     	endif
 13929  000E6C                     	if	0	;tblptru may be non-zero
 13930  000E6C                     	endif
 13931  000E6C  0008               	tblrd		*
 13932  000E6E  50F5               	movf	tablat,w,c
 13933  000E70  6E4F               	movwf	??_vfpfcnvrt^0,c
 13934  000E72  6A50               	clrf	(??_vfpfcnvrt+1)^0,c
 13935                           
 13936                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13937                           ; Switch size 1, requested type "simple"
 13938                           ; Number of cases is 1, Range of values is 0 to 0
 13939                           ; switch strategies available:
 13940                           ; Name         Instructions Cycles
 13941                           ; simple_byte            4     3 (average)
 13942                           ;	Chosen strategy is simple_byte
 13943  000E74  5050               	movf	(??_vfpfcnvrt+1)^0,w,c
 13944  000E76  0A00               	xorlw	0	; case 0
 13945  000E78  B4D8               	btfsc	status,2,c
 13946  000E7A  EF41  F007         	goto	l8319
 13947  000E7E  EF27  F007         	goto	l6901
 13948  000E82                     l8319:
 13949                           
 13950                           ; BSR set to: 0
 13951                           ; Switch size 1, requested type "simple"
 13952                           ; Number of cases is 5, Range of values is 32 to 48
 13953                           ; switch strategies available:
 13954                           ; Name         Instructions Cycles
 13955                           ; simple_byte           16     9 (average)
 13956                           ;	Chosen strategy is simple_byte
 13957  000E82  504F               	movf	??_vfpfcnvrt^0,w,c
 13958  000E84  0A20               	xorlw	32	; case 32
 13959  000E86  B4D8               	btfsc	status,2,c
 13960  000E88  EF21  F007         	goto	l6893
 13961  000E8C  0A03               	xorlw	3	; case 35
 13962  000E8E  B4D8               	btfsc	status,2,c
 13963  000E90  EF24  F007         	goto	l6897
 13964  000E94  0A08               	xorlw	8	; case 43
 13965  000E96  B4D8               	btfsc	status,2,c
 13966  000E98  EF1E  F007         	goto	l6889
 13967  000E9C  0A06               	xorlw	6	; case 45
 13968  000E9E  B4D8               	btfsc	status,2,c
 13969  000EA0  EF11  F007         	goto	l6881
 13970  000EA4  0A1D               	xorlw	29	; case 48
 13971  000EA6  B4D8               	btfsc	status,2,c
 13972  000EA8  EF1B  F007         	goto	l6885
 13973  000EAC  EF27  F007         	goto	l6901
 13974  000EB0                     l6907:
 13975                           
 13976                           ; BSR set to: 0
 13977                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
 13978  000EB0  516B               	movf	vfpfcnvrt@done& (0+255),w,b
 13979  000EB2  116C               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
 13980  000EB4  B4D8               	btfsc	status,2,c
 13981  000EB6  EF5F  F007         	goto	u6841
 13982  000EBA  EF61  F007         	goto	u6840
 13983  000EBE                     u6841:
 13984  000EBE  EF2D  F007         	goto	l6905
 13985  000EC2                     u6840:
 13986  000EC2                     
 13987                           ; BSR set to: 0
 13988                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
 13989  000EC2  A057               	btfss	_flags^0,0,c
 13990  000EC4  EF66  F007         	goto	u6851
 13991  000EC8  EF68  F007         	goto	u6850
 13992  000ECC                     u6851:
 13993  000ECC  EF69  F007         	goto	l6911
 13994  000ED0                     u6850:
 13995  000ED0                     
 13996                           ; BSR set to: 0
 13997                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
 13998  000ED0  9257               	bcf	_flags^0,1,c
 13999  000ED2                     l6911:
 14000                           
 14001                           ; BSR set to: 0
 14002                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
 14003  000ED2  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14004  000ED6  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14005  000EDA  CFDE FFF6          	movff	postinc2,tblptrl
 14006  000EDE  CFDD FFF7          	movff	postdec2,tblptrh
 14007  000EE2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14008  000EE2  6AF8               	clrf	tblptru,c
 14009  000EE4                     	endif
 14010  000EE4                     	if	0	;tblptru may be non-zero
 14011  000EE4                     	endif
 14012  000EE4  0008               	tblrd		*
 14013  000EE6  50F5               	movf	tablat,w,c
 14014  000EE8  0A2A               	xorlw	42
 14015  000EEA  A4D8               	btfss	status,2,c
 14016  000EEC  EF7A  F007         	goto	u6861
 14017  000EF0  EF7C  F007         	goto	u6860
 14018  000EF4                     u6861:
 14019  000EF4  EFA5  F007         	goto	l6919
 14020  000EF8                     u6860:
 14021  000EF8                     
 14022                           ; BSR set to: 0
 14023                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
 14024  000EF8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14025  000EFC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14026  000F00  2ADE               	incf	postinc2,f,c
 14027  000F02  0E00               	movlw	0
 14028  000F04  22DD               	addwfc	postdec2,f,c
 14029                           
 14030                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
 14031  000F06  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 14032  000F0A  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 14033  000F0E  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 14034  000F12  0E02               	movlw	2
 14035  000F14  26DE               	addwf	postinc2,f,c
 14036  000F16  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 14037  000F1A  0E00               	movlw	0
 14038  000F1C  22DD               	addwfc	postdec2,f,c
 14039  000F1E  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 14040  000F22  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 14041  000F26  CFDE F0CF          	movff	postinc2,_width
 14042  000F2A  CFDD F0D0          	movff	postdec2,_width+1
 14043  000F2E                     
 14044                           ; BSR set to: 0
 14045                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
 14046  000F2E  BFD0               	btfsc	(_width+1)& (0+255),7,b
 14047  000F30  EF9E  F007         	goto	u6870
 14048  000F34  EF9C  F007         	goto	u6871
 14049  000F38                     u6871:
 14050  000F38  EFEA  F007         	goto	l6929
 14051  000F3C                     u6870:
 14052  000F3C                     
 14053                           ; BSR set to: 0
 14054                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
 14055  000F3C  8057               	bsf	_flags^0,0,c
 14056                           
 14057                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
 14058  000F3E  6DCF               	negf	_width& (0+255),b
 14059  000F40  1FD0               	comf	(_width+1)& (0+255),f,b
 14060  000F42  B0D8               	btfsc	status,0,c
 14061  000F44  2BD0               	incf	(_width+1)& (0+255),f,b
 14062  000F46  EFEA  F007         	goto	l6929
 14063  000F4A                     l6919:
 14064                           
 14065                           ; BSR set to: 0
 14066                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
 14067  000F4A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14068  000F4E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14069  000F52  CFDE F00C          	movff	postinc2,atoi@s
 14070  000F56  CFDD F00D          	movff	postdec2,atoi@s+1
 14071  000F5A  ECBF  F016         	call	_atoi	;wreg free
 14072  000F5E  C00C  F0CF         	movff	?_atoi,_width
 14073  000F62  C00D  F0D0         	movff	?_atoi+1,_width+1
 14074                           
 14075                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 14076  000F66  EFBC  F007         	goto	l6923
 14077  000F6A                     l6921:
 14078                           
 14079                           ; BSR set to: 0
 14080                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
 14081  000F6A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14082  000F6E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14083  000F72  2ADE               	incf	postinc2,f,c
 14084  000F74  0E00               	movlw	0
 14085  000F76  22DD               	addwfc	postdec2,f,c
 14086  000F78                     l6923:
 14087  000F78  0ED0               	movlw	208
 14088  000F7A  6E4F               	movwf	??_vfpfcnvrt^0,c
 14089  000F7C  0EFF               	movlw	255
 14090  000F7E  6E50               	movwf	(??_vfpfcnvrt+1)^0,c
 14091  000F80  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14092  000F84  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14093  000F88  CFDE FFF6          	movff	postinc2,tblptrl
 14094  000F8C  CFDD FFF7          	movff	postdec2,tblptrh
 14095  000F90                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14096  000F90  6AF8               	clrf	tblptru,c
 14097  000F92                     	endif
 14098  000F92                     	if	0	;tblptru may be non-zero
 14099  000F92                     	endif
 14100  000F92  0008               	tblrd		*
 14101  000F94  50F5               	movf	tablat,w,c
 14102  000F96  6E51               	movwf	(??_vfpfcnvrt+2)^0,c
 14103  000F98  6A52               	clrf	(??_vfpfcnvrt+3)^0,c
 14104  000F9A  504F               	movf	??_vfpfcnvrt^0,w,c
 14105  000F9C  2651               	addwf	(??_vfpfcnvrt+2)^0,f,c
 14106  000F9E  5050               	movf	(??_vfpfcnvrt+1)^0,w,c
 14107  000FA0  2252               	addwfc	(??_vfpfcnvrt+3)^0,f,c
 14108  000FA2  5052               	movf	(??_vfpfcnvrt+3)^0,w,c
 14109  000FA4  E10A               	bnz	u6880
 14110  000FA6  0E0A               	movlw	10
 14111  000FA8  5C51               	subwf	(??_vfpfcnvrt+2)^0,w,c
 14112  000FAA  A0D8               	btfss	status,0,c
 14113  000FAC  EFDA  F007         	goto	u6881
 14114  000FB0  EFDD  F007         	goto	u6880
 14115  000FB4                     u6881:
 14116  000FB4  0E01               	movlw	1
 14117  000FB6  EFDE  F007         	goto	u6890
 14118  000FBA                     u6880:
 14119  000FBA  0E00               	movlw	0
 14120  000FBC                     u6890:
 14121  000FBC  0100               	movlb	0	; () banked
 14122  000FBE  6F6D               	movwf	_vfpfcnvrt$1935& (0+255),b
 14123  000FC0  6B6E               	clrf	(_vfpfcnvrt$1935+1)& (0+255),b
 14124  000FC2                     
 14125                           ; BSR set to: 0
 14126  000FC2  516D               	movf	_vfpfcnvrt$1935& (0+255),w,b
 14127  000FC4  116E               	iorwf	(_vfpfcnvrt$1935+1)& (0+255),w,b
 14128  000FC6  A4D8               	btfss	status,2,c
 14129  000FC8  EFE8  F007         	goto	u6901
 14130  000FCC  EFEA  F007         	goto	u6900
 14131  000FD0                     u6901:
 14132  000FD0  EFB5  F007         	goto	l6921
 14133  000FD4                     u6900:
 14134  000FD4                     l6929:
 14135                           
 14136                           ; BSR set to: 0
 14137                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 14138  000FD4  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14139  000FD8  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14140  000FDC  CFDE FFF6          	movff	postinc2,tblptrl
 14141  000FE0  CFDD FFF7          	movff	postdec2,tblptrh
 14142  000FE4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14143  000FE4  6AF8               	clrf	tblptru,c
 14144  000FE6                     	endif
 14145  000FE6                     	if	0	;tblptru may be non-zero
 14146  000FE6                     	endif
 14147  000FE6  0008               	tblrd		*
 14148  000FE8  50F5               	movf	tablat,w,c
 14149  000FEA  0A64               	xorlw	100
 14150  000FEC  B4D8               	btfsc	status,2,c
 14151  000FEE  EFFB  F007         	goto	u6911
 14152  000FF2  EFFD  F007         	goto	u6910
 14153  000FF6                     u6911:
 14154  000FF6  EF10  F008         	goto	l6933
 14155  000FFA                     u6910:
 14156  000FFA                     
 14157                           ; BSR set to: 0
 14158  000FFA  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14159  000FFE  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14160  001002  CFDE FFF6          	movff	postinc2,tblptrl
 14161  001006  CFDD FFF7          	movff	postdec2,tblptrh
 14162  00100A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14163  00100A  6AF8               	clrf	tblptru,c
 14164  00100C                     	endif
 14165  00100C                     	if	0	;tblptru may be non-zero
 14166  00100C                     	endif
 14167  00100C  0008               	tblrd		*
 14168  00100E  50F5               	movf	tablat,w,c
 14169  001010  0A69               	xorlw	105
 14170  001012  A4D8               	btfss	status,2,c
 14171  001014  EF0E  F008         	goto	u6921
 14172  001018  EF10  F008         	goto	u6920
 14173  00101C                     u6921:
 14174  00101C  EF50  F008         	goto	l6939
 14175  001020                     u6920:
 14176  001020                     l6933:
 14177                           
 14178                           ; BSR set to: 0
 14179                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
 14180  001020  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14181  001024  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14182  001028  2ADE               	incf	postinc2,f,c
 14183  00102A  0E00               	movlw	0
 14184  00102C  22DD               	addwfc	postdec2,f,c
 14185                           
 14186                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 14187  00102E  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 14188  001032  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 14189  001036  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 14190  00103A  0E02               	movlw	2
 14191  00103C  26DE               	addwf	postinc2,f,c
 14192  00103E  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 14193  001042  0E00               	movlw	0
 14194  001044  22DD               	addwfc	postdec2,f,c
 14195  001046  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 14196  00104A  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 14197  00104E  CFDE F060          	movff	postinc2,vfpfcnvrt@ll
 14198  001052  CFDD F061          	movff	postdec2,vfpfcnvrt@ll+1
 14199  001056  0E00               	movlw	0
 14200  001058  BF61               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
 14201  00105A  0EFF               	movlw	-1
 14202  00105C  6F62               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
 14203  00105E  6F63               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
 14204  001060  6F64               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
 14205  001062  6F65               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
 14206  001064  6F66               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
 14207  001066  6F67               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
 14208  001068                     
 14209                           ; BSR set to: 0
 14210                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
 14211  001068  C049  F022         	movff	vfpfcnvrt@fp,dtoa@fp
 14212  00106C  C04A  F023         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 14213  001070  C060  F024         	movff	vfpfcnvrt@ll,dtoa@d
 14214  001074  C061  F025         	movff	vfpfcnvrt@ll+1,dtoa@d+1
 14215  001078  C062  F026         	movff	vfpfcnvrt@ll+2,dtoa@d+2
 14216  00107C  C063  F027         	movff	vfpfcnvrt@ll+3,dtoa@d+3
 14217  001080  C064  F028         	movff	vfpfcnvrt@ll+4,dtoa@d+4
 14218  001084  C065  F029         	movff	vfpfcnvrt@ll+5,dtoa@d+5
 14219  001088  C066  F02A         	movff	vfpfcnvrt@ll+6,dtoa@d+6
 14220  00108C  C067  F02B         	movff	vfpfcnvrt@ll+7,dtoa@d+7
 14221  001090  ECEB  F00C         	call	_dtoa	;wreg free
 14222  001094  C022  F049         	movff	?_dtoa,?_vfpfcnvrt
 14223  001098  C023  F04A         	movff	?_dtoa+1,?_vfpfcnvrt+1
 14224  00109C  EFAA  F009         	goto	l1332
 14225  0010A0                     l6939:
 14226                           
 14227                           ; BSR set to: 0
 14228                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
 14229  0010A0  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14230  0010A4  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14231  0010A8  CFDE FFF6          	movff	postinc2,tblptrl
 14232  0010AC  CFDD FFF7          	movff	postdec2,tblptrh
 14233  0010B0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14234  0010B0  6AF8               	clrf	tblptru,c
 14235  0010B2                     	endif
 14236  0010B2                     	if	0	;tblptru may be non-zero
 14237  0010B2                     	endif
 14238  0010B2  0008               	tblrd		*
 14239  0010B4  50F5               	movf	tablat,w,c
 14240  0010B6  0A73               	xorlw	115
 14241  0010B8  A4D8               	btfss	status,2,c
 14242  0010BA  EF61  F008         	goto	u6931
 14243  0010BE  EF63  F008         	goto	u6930
 14244  0010C2                     u6931:
 14245  0010C2  EF8E  F008         	goto	l6947
 14246  0010C6                     u6930:
 14247  0010C6                     
 14248                           ; BSR set to: 0
 14249                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
 14250  0010C6  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14251  0010CA  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14252  0010CE  2ADE               	incf	postinc2,f,c
 14253  0010D0  0E00               	movlw	0
 14254  0010D2  22DD               	addwfc	postdec2,f,c
 14255                           
 14256                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 14257  0010D4  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 14258  0010D8  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 14259  0010DC  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 14260  0010E0  0E02               	movlw	2
 14261  0010E2  26DE               	addwf	postinc2,f,c
 14262  0010E4  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 14263  0010E8  0E00               	movlw	0
 14264  0010EA  22DD               	addwfc	postdec2,f,c
 14265  0010EC  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 14266  0010F0  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 14267  0010F4  CFDE F068          	movff	postinc2,vfpfcnvrt@cp
 14268  0010F8  CFDD F069          	movff	postdec2,vfpfcnvrt@cp+1
 14269  0010FC                     
 14270                           ; BSR set to: 0
 14271                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
 14272  0010FC  C049  F010         	movff	vfpfcnvrt@fp,stoa@fp
 14273  001100  C04A  F011         	movff	vfpfcnvrt@fp+1,stoa@fp+1
 14274  001104  C068  F012         	movff	vfpfcnvrt@cp,stoa@s
 14275  001108  C069  F013         	movff	vfpfcnvrt@cp+1,stoa@s+1
 14276  00110C  ECF2  F015         	call	_stoa	;wreg free
 14277  001110  C010  F049         	movff	?_stoa,?_vfpfcnvrt
 14278  001114  C011  F04A         	movff	?_stoa+1,?_vfpfcnvrt+1
 14279  001118  EFAA  F009         	goto	l1332
 14280  00111C                     l6947:
 14281                           
 14282                           ; BSR set to: 0
 14283                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
 14284  00111C  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14285  001120  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14286  001124  CFDE FFF6          	movff	postinc2,tblptrl
 14287  001128  CFDD FFF7          	movff	postdec2,tblptrh
 14288  00112C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14289  00112C  6AF8               	clrf	tblptru,c
 14290  00112E                     	endif
 14291  00112E                     	if	0	;tblptru may be non-zero
 14292  00112E                     	endif
 14293  00112E  0008               	tblrd		*
 14294  001130  50F5               	movf	tablat,w,c
 14295  001132  0A75               	xorlw	117
 14296  001134  A4D8               	btfss	status,2,c
 14297  001136  EF9F  F008         	goto	u6941
 14298  00113A  EFA1  F008         	goto	u6940
 14299  00113E                     u6941:
 14300  00113E  EFE2  F008         	goto	l6955
 14301  001142                     u6940:
 14302  001142                     
 14303                           ; BSR set to: 0
 14304                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
 14305  001142  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14306  001146  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14307  00114A  2ADE               	incf	postinc2,f,c
 14308  00114C  0E00               	movlw	0
 14309  00114E  22DD               	addwfc	postdec2,f,c
 14310                           
 14311                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 14312  001150  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 14313  001154  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 14314  001158  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 14315  00115C  0E02               	movlw	2
 14316  00115E  26DE               	addwf	postinc2,f,c
 14317  001160  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 14318  001164  0E00               	movlw	0
 14319  001166  22DD               	addwfc	postdec2,f,c
 14320  001168  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 14321  00116C  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 14322  001170  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
 14323  001174  CFDD F052          	movff	postdec2,??_vfpfcnvrt+3
 14324  001178  C051  F06F         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
 14325  00117C  C052  F070         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
 14326  001180  6B71               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 14327  001182  6B72               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 14328  001184  6B73               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 14329  001186  6B74               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 14330  001188  6B75               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 14331  00118A  6B76               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 14332  00118C                     
 14333                           ; BSR set to: 0
 14334                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
 14335  00118C  C049  F022         	movff	vfpfcnvrt@fp,utoa@fp
 14336  001190  C04A  F023         	movff	vfpfcnvrt@fp+1,utoa@fp+1
 14337  001194  C06F  F024         	movff	vfpfcnvrt@llu,utoa@d
 14338  001198  C070  F025         	movff	vfpfcnvrt@llu+1,utoa@d+1
 14339  00119C  C071  F026         	movff	vfpfcnvrt@llu+2,utoa@d+2
 14340  0011A0  C072  F027         	movff	vfpfcnvrt@llu+3,utoa@d+3
 14341  0011A4  C073  F028         	movff	vfpfcnvrt@llu+4,utoa@d+4
 14342  0011A8  C074  F029         	movff	vfpfcnvrt@llu+5,utoa@d+5
 14343  0011AC  C075  F02A         	movff	vfpfcnvrt@llu+6,utoa@d+6
 14344  0011B0  C076  F02B         	movff	vfpfcnvrt@llu+7,utoa@d+7
 14345  0011B4  EC43  F012         	call	_utoa	;wreg free
 14346  0011B8  C022  F049         	movff	?_utoa,?_vfpfcnvrt
 14347  0011BC  C023  F04A         	movff	?_utoa+1,?_vfpfcnvrt+1
 14348  0011C0  EFAA  F009         	goto	l1332
 14349  0011C4                     l6955:
 14350                           
 14351                           ; BSR set to: 0
 14352                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 14353  0011C4  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14354  0011C8  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14355  0011CC  CFDE FFF6          	movff	postinc2,tblptrl
 14356  0011D0  CFDD FFF7          	movff	postdec2,tblptrh
 14357  0011D4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14358  0011D4  6AF8               	clrf	tblptru,c
 14359  0011D6                     	endif
 14360  0011D6                     	if	0	;tblptru may be non-zero
 14361  0011D6                     	endif
 14362  0011D6  0008               	tblrd		*
 14363  0011D8  50F5               	movf	tablat,w,c
 14364  0011DA  0A78               	xorlw	120
 14365  0011DC  B4D8               	btfsc	status,2,c
 14366  0011DE  EFF3  F008         	goto	u6951
 14367  0011E2  EFF5  F008         	goto	u6950
 14368  0011E6                     u6951:
 14369  0011E6  EF08  F009         	goto	l6959
 14370  0011EA                     u6950:
 14371  0011EA                     
 14372                           ; BSR set to: 0
 14373  0011EA  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14374  0011EE  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14375  0011F2  CFDE FFF6          	movff	postinc2,tblptrl
 14376  0011F6  CFDD FFF7          	movff	postdec2,tblptrh
 14377  0011FA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14378  0011FA  6AF8               	clrf	tblptru,c
 14379  0011FC                     	endif
 14380  0011FC                     	if	0	;tblptru may be non-zero
 14381  0011FC                     	endif
 14382  0011FC  0008               	tblrd		*
 14383  0011FE  50F5               	movf	tablat,w,c
 14384  001200  0A58               	xorlw	88
 14385  001202  A4D8               	btfss	status,2,c
 14386  001204  EF06  F009         	goto	u6961
 14387  001208  EF08  F009         	goto	u6960
 14388  00120C                     u6961:
 14389  00120C  EF57  F009         	goto	l6969
 14390  001210                     u6960:
 14391  001210                     l6959:
 14392                           
 14393                           ; BSR set to: 0
 14394                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
 14395  001210  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14396  001214  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14397  001218  CFDE FFF6          	movff	postinc2,tblptrl
 14398  00121C  CFDD FFF7          	movff	postdec2,tblptrh
 14399  001220                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14400  001220  6AF8               	clrf	tblptru,c
 14401  001222                     	endif
 14402  001222                     	if	0	;tblptru may be non-zero
 14403  001222                     	endif
 14404  001222  0008               	tblrd		*
 14405  001224  CFF5 F06A          	movff	tablat,vfpfcnvrt@c
 14406  001228                     
 14407                           ; BSR set to: 0
 14408                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
 14409  001228  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14410  00122C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14411  001230  2ADE               	incf	postinc2,f,c
 14412  001232  0E00               	movlw	0
 14413  001234  22DD               	addwfc	postdec2,f,c
 14414  001236                     
 14415                           ; BSR set to: 0
 14416                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 14417  001236  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 14418  00123A  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 14419  00123E  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 14420  001242  0E02               	movlw	2
 14421  001244  26DE               	addwf	postinc2,f,c
 14422  001246  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 14423  00124A  0E00               	movlw	0
 14424  00124C  22DD               	addwfc	postdec2,f,c
 14425  00124E  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 14426  001252  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 14427  001256  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
 14428  00125A  CFDD F052          	movff	postdec2,??_vfpfcnvrt+3
 14429  00125E  C051  F06F         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
 14430  001262  C052  F070         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
 14431  001266  6B71               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 14432  001268  6B72               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 14433  00126A  6B73               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 14434  00126C  6B74               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 14435  00126E  6B75               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 14436  001270  6B76               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 14437  001272                     
 14438                           ; BSR set to: 0
 14439                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
 14440  001272  C049  F022         	movff	vfpfcnvrt@fp,xtoa@fp
 14441  001276  C04A  F023         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
 14442  00127A  C06F  F024         	movff	vfpfcnvrt@llu,xtoa@d
 14443  00127E  C070  F025         	movff	vfpfcnvrt@llu+1,xtoa@d+1
 14444  001282  C071  F026         	movff	vfpfcnvrt@llu+2,xtoa@d+2
 14445  001286  C072  F027         	movff	vfpfcnvrt@llu+3,xtoa@d+3
 14446  00128A  C073  F028         	movff	vfpfcnvrt@llu+4,xtoa@d+4
 14447  00128E  C074  F029         	movff	vfpfcnvrt@llu+5,xtoa@d+5
 14448  001292  C075  F02A         	movff	vfpfcnvrt@llu+6,xtoa@d+6
 14449  001296  C076  F02B         	movff	vfpfcnvrt@llu+7,xtoa@d+7
 14450  00129A  C06A  F02C         	movff	vfpfcnvrt@c,xtoa@x
 14451  00129E  EC5B  F00E         	call	_xtoa	;wreg free
 14452  0012A2  C022  F049         	movff	?_xtoa,?_vfpfcnvrt
 14453  0012A6  C023  F04A         	movff	?_xtoa+1,?_vfpfcnvrt+1
 14454  0012AA  EFAA  F009         	goto	l1332
 14455  0012AE                     l6969:
 14456                           
 14457                           ; BSR set to: 0
 14458                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 14459  0012AE  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14460  0012B2  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14461  0012B6  CFDE FFF6          	movff	postinc2,tblptrl
 14462  0012BA  CFDD FFF7          	movff	postdec2,tblptrh
 14463  0012BE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14464  0012BE  6AF8               	clrf	tblptru,c
 14465  0012C0                     	endif
 14466  0012C0                     	if	0	;tblptru may be non-zero
 14467  0012C0                     	endif
 14468  0012C0  0008               	tblrd		*
 14469  0012C2  50F5               	movf	tablat,w,c
 14470  0012C4  0A25               	xorlw	37
 14471  0012C6  A4D8               	btfss	status,2,c
 14472  0012C8  EF68  F009         	goto	u6971
 14473  0012CC  EF6A  F009         	goto	u6970
 14474  0012D0                     u6971:
 14475  0012D0  EF81  F009         	goto	l6979
 14476  0012D4                     u6970:
 14477  0012D4                     
 14478                           ; BSR set to: 0
 14479                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 14480  0012D4  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14481  0012D8  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14482  0012DC  2ADE               	incf	postinc2,f,c
 14483  0012DE  0E00               	movlw	0
 14484  0012E0  22DD               	addwfc	postdec2,f,c
 14485  0012E2                     
 14486                           ; BSR set to: 0
 14487                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 14488  0012E2  0E00               	movlw	0
 14489  0012E4  6E08               	movwf	(fputc@c+1)^0,c
 14490  0012E6  0E25               	movlw	37
 14491  0012E8  6E07               	movwf	fputc@c^0,c
 14492  0012EA  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
 14493  0012EE  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 14494  0012F2  EC63  F020         	call	_fputc	;wreg free
 14495  0012F6                     l6975:
 14496                           
 14497                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 14498  0012F6  0E00               	movlw	0
 14499  0012F8  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
 14500  0012FA  0E01               	movlw	1
 14501  0012FC  6E49               	movwf	?_vfpfcnvrt^0,c
 14502  0012FE  EFAA  F009         	goto	l1332
 14503  001302                     l6979:
 14504                           
 14505                           ; BSR set to: 0
 14506                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 14507  001302  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14508  001306  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14509  00130A  2ADE               	incf	postinc2,f,c
 14510  00130C  0E00               	movlw	0
 14511  00130E  22DD               	addwfc	postdec2,f,c
 14512  001310                     
 14513                           ; BSR set to: 0
 14514                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
 14515  001310  0E00               	movlw	0
 14516  001312  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
 14517  001314  0E00               	movlw	0
 14518  001316  6E49               	movwf	?_vfpfcnvrt^0,c
 14519  001318  EFAA  F009         	goto	l1332
 14520  00131C                     l6985:
 14521                           
 14522                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 14523  00131C  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14524  001320  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14525  001324  CFDE FFF6          	movff	postinc2,tblptrl
 14526  001328  CFDD FFF7          	movff	postdec2,tblptrh
 14527  00132C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14528  00132C  6AF8               	clrf	tblptru,c
 14529  00132E                     	endif
 14530  00132E                     	if	0	;tblptru may be non-zero
 14531  00132E                     	endif
 14532  00132E  0008               	tblrd		*
 14533  001330  50F5               	movf	tablat,w,c
 14534  001332  6E07               	movwf	fputc@c^0,c
 14535  001334  6A08               	clrf	(fputc@c+1)^0,c
 14536  001336  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
 14537  00133A  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 14538  00133E  EC63  F020         	call	_fputc	;wreg free
 14539  001342                     
 14540                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 14541  001342  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14542  001346  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14543  00134A  2ADE               	incf	postinc2,f,c
 14544  00134C  0E00               	movlw	0
 14545  00134E  22DD               	addwfc	postdec2,f,c
 14546  001350  EF7B  F009         	goto	l6975
 14547  001354                     l1332:
 14548  001354  0012               	return		;funcret
 14549  001356                     __end_of_vfpfcnvrt:
 14550                           	opt callstack 0
 14551                           
 14552 ;; *************** function _xtoa *****************
 14553 ;; Defined at:
 14554 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 14555 ;; Parameters:    Size  Location     Type
 14556 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
 14557 ;;		 -> NULL(0), 
 14558 ;;  d               8   35[COMRAM] unsigned long long 
 14559 ;;  x               1   43[COMRAM] unsigned char 
 14560 ;; Auto vars:     Size  Location     Type
 14561 ;;  n               8   60[COMRAM] unsigned long long 
 14562 ;;  c               2   70[COMRAM] int 
 14563 ;;  i               2   68[COMRAM] int 
 14564 ;;  w               2   58[COMRAM] int 
 14565 ;;  p               2   56[COMRAM] int 
 14566 ;; Return value:  Size  Location     Type
 14567 ;;                  2   33[COMRAM] int 
 14568 ;; Registers used:
 14569 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14570 ;; Tracked objects:
 14571 ;;		On entry : 0/0
 14572 ;;		On exit  : 0/0
 14573 ;;		Unchanged: 0/0
 14574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14575 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14576 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14577 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14578 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14579 ;;Total ram usage:       39 bytes
 14580 ;; Hardware stack levels used:    1
 14581 ;; Hardware stack levels required when called:    9
 14582 ;; This function calls:
 14583 ;;		_isalpha
 14584 ;;		_isupper
 14585 ;;		_pad
 14586 ;;		_toupper
 14587 ;; This function is called by:
 14588 ;;		_vfpfcnvrt
 14589 ;; This function uses a non-reentrant model
 14590 ;;
 14591                           
 14592                           	psect	text52
 14593  001CB6                     __ptext52:
 14594                           	opt callstack 0
 14595  001CB6                     _xtoa:
 14596                           	opt callstack 18
 14597  001CB6                     
 14598                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
 14599  001CB6  0100               	movlb	0	; () banked
 14600  001CB8  BFD2               	btfsc	(_prec+1)& (0+255),7,b
 14601  001CBA  EF61  F00E         	goto	u6591
 14602  001CBE  EF63  F00E         	goto	u6590
 14603  001CC2                     u6591:
 14604  001CC2  EF64  F00E         	goto	l6767
 14605  001CC6                     u6590:
 14606  001CC6                     
 14607                           ; BSR set to: 0
 14608                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
 14609  001CC6  9257               	bcf	_flags^0,1,c
 14610  001CC8                     l6767:
 14611                           
 14612                           ; BSR set to: 0
 14613                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
 14614  001CC8  BFD2               	btfsc	(_prec+1)& (0+255),7,b
 14615  001CCA  EF71  F00E         	goto	u6600
 14616  001CCE  51D2               	movf	(_prec+1)& (0+255),w,b
 14617  001CD0  E106               	bnz	u6601
 14618  001CD2  05D1               	decf	_prec& (0+255),w,b
 14619  001CD4  B0D8               	btfsc	status,0,c
 14620  001CD6  EF6F  F00E         	goto	u6601
 14621  001CDA  EF71  F00E         	goto	u6600
 14622  001CDE                     u6601:
 14623  001CDE  EF77  F00E         	goto	l1278
 14624  001CE2                     u6600:
 14625  001CE2                     
 14626                           ; BSR set to: 0
 14627  001CE2  0E00               	movlw	0
 14628  001CE4  6E3A               	movwf	(xtoa@p+1)^0,c
 14629  001CE6  0E01               	movlw	1
 14630  001CE8  6E39               	movwf	xtoa@p^0,c
 14631  001CEA  EF7B  F00E         	goto	l1280
 14632  001CEE                     l1278:
 14633                           
 14634                           ; BSR set to: 0
 14635  001CEE  C0D1  F039         	movff	_prec,xtoa@p
 14636  001CF2  C0D2  F03A         	movff	_prec+1,xtoa@p+1
 14637  001CF6                     l1280:
 14638                           
 14639                           ; BSR set to: 0
 14640                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
 14641  001CF6  C0CF  F03B         	movff	_width,xtoa@w
 14642  001CFA  C0D0  F03C         	movff	_width+1,xtoa@w+1
 14643                           
 14644                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
 14645  001CFE  A857               	btfss	_flags^0,4,c
 14646  001D00  EF84  F00E         	goto	u6611
 14647  001D04  EF86  F00E         	goto	u6610
 14648  001D08                     u6611:
 14649  001D08  EF8A  F00E         	goto	l6773
 14650  001D0C                     u6610:
 14651  001D0C                     
 14652                           ; BSR set to: 0
 14653                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
 14654  001D0C  0EFE               	movlw	254
 14655  001D0E  263B               	addwf	xtoa@w^0,f,c
 14656  001D10  0EFF               	movlw	255
 14657  001D12  223C               	addwfc	(xtoa@w+1)^0,f,c
 14658  001D14                     l6773:
 14659                           
 14660                           ; BSR set to: 0
 14661                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
 14662  001D14  C024  F03D         	movff	xtoa@d,xtoa@n
 14663  001D18  C025  F03E         	movff	xtoa@d+1,xtoa@n+1
 14664  001D1C  C026  F03F         	movff	xtoa@d+2,xtoa@n+2
 14665  001D20  C027  F040         	movff	xtoa@d+3,xtoa@n+3
 14666  001D24  C028  F041         	movff	xtoa@d+4,xtoa@n+4
 14667  001D28  C029  F042         	movff	xtoa@d+5,xtoa@n+5
 14668  001D2C  C02A  F043         	movff	xtoa@d+6,xtoa@n+6
 14669  001D30  C02B  F044         	movff	xtoa@d+7,xtoa@n+7
 14670  001D34                     
 14671                           ; BSR set to: 0
 14672                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
 14673  001D34  0E00               	movlw	0
 14674  001D36  6E46               	movwf	(xtoa@i+1)^0,c
 14675  001D38  0E1F               	movlw	31
 14676  001D3A  6E45               	movwf	xtoa@i^0,c
 14677  001D3C                     
 14678                           ; BSR set to: 0
 14679                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
 14680  001D3C  0E00               	movlw	0
 14681  001D3E  0102               	movlb	2	; () banked
 14682  001D40  6FFC               	movwf	(_dbuf+31)& (0+255),b
 14683                           
 14684                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 14685  001D42  EF56  F00F         	goto	l6809
 14686  001D46                     l6779:
 14687                           
 14688                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
 14689  001D46  0645               	decf	xtoa@i^0,f,c
 14690  001D48  A0D8               	btfss	status,0,c
 14691  001D4A  0646               	decf	(xtoa@i+1)^0,f,c
 14692  001D4C                     
 14693                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
 14694  001D4C  0E0F               	movlw	15
 14695  001D4E  143D               	andwf	xtoa@n^0,w,c
 14696  001D50  6E47               	movwf	xtoa@c^0,c
 14697  001D52  6A48               	clrf	(xtoa@c+1)^0,c
 14698  001D54                     
 14699                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
 14700  001D54  BE48               	btfsc	(xtoa@c+1)^0,7,c
 14701  001D56  EFB6  F00E         	goto	u6621
 14702  001D5A  5048               	movf	(xtoa@c+1)^0,w,c
 14703  001D5C  E109               	bnz	u6620
 14704  001D5E  0E0A               	movlw	10
 14705  001D60  5C47               	subwf	xtoa@c^0,w,c
 14706  001D62  A0D8               	btfss	status,0,c
 14707  001D64  EFB6  F00E         	goto	u6621
 14708  001D68  EFB8  F00E         	goto	u6620
 14709  001D6C                     u6621:
 14710  001D6C  EFC0  F00E         	goto	l6787
 14711  001D70                     u6620:
 14712  001D70  0E57               	movlw	87
 14713  001D72  2447               	addwf	xtoa@c^0,w,c
 14714  001D74  6E47               	movwf	xtoa@c^0,c
 14715  001D76  0E00               	movlw	0
 14716  001D78  2048               	addwfc	(xtoa@c+1)^0,w,c
 14717  001D7A  6E48               	movwf	(xtoa@c+1)^0,c
 14718  001D7C  EFC6  F00E         	goto	l1287
 14719  001D80                     l6787:
 14720  001D80  0E30               	movlw	48
 14721  001D82  2447               	addwf	xtoa@c^0,w,c
 14722  001D84  6E47               	movwf	xtoa@c^0,c
 14723  001D86  0E00               	movlw	0
 14724  001D88  2048               	addwfc	(xtoa@c+1)^0,w,c
 14725  001D8A  6E48               	movwf	(xtoa@c+1)^0,c
 14726  001D8C                     l1287:
 14727  001D8C  0EBF               	movlw	191
 14728  001D8E  6E2D               	movwf	??_xtoa^0,c
 14729  001D90  0EFF               	movlw	255
 14730  001D92  6E2E               	movwf	(??_xtoa+1)^0,c
 14731  001D94  502C               	movf	xtoa@x^0,w,c
 14732  001D96  6E2F               	movwf	(??_xtoa+2)^0,c
 14733  001D98  6A30               	clrf	(??_xtoa+3)^0,c
 14734  001D9A  502D               	movf	??_xtoa^0,w,c
 14735  001D9C  262F               	addwf	(??_xtoa+2)^0,f,c
 14736  001D9E  502E               	movf	(??_xtoa+1)^0,w,c
 14737  001DA0  2230               	addwfc	(??_xtoa+3)^0,f,c
 14738  001DA2  5030               	movf	(??_xtoa+3)^0,w,c
 14739  001DA4  E10A               	bnz	u6630
 14740  001DA6  0E1A               	movlw	26
 14741  001DA8  5C2F               	subwf	(??_xtoa+2)^0,w,c
 14742  001DAA  A0D8               	btfss	status,0,c
 14743  001DAC  EFDA  F00E         	goto	u6631
 14744  001DB0  EFDD  F00E         	goto	u6630
 14745  001DB4                     u6631:
 14746  001DB4  0E01               	movlw	1
 14747  001DB6  EFDE  F00E         	goto	u6640
 14748  001DBA                     u6630:
 14749  001DBA  0E00               	movlw	0
 14750  001DBC                     u6640:
 14751  001DBC  6E35               	movwf	_xtoa$1920^0,c
 14752  001DBE  6A36               	clrf	(_xtoa$1920+1)^0,c
 14753  001DC0  5035               	movf	_xtoa$1920^0,w,c
 14754  001DC2  1036               	iorwf	(_xtoa$1920+1)^0,w,c
 14755  001DC4  B4D8               	btfsc	status,2,c
 14756  001DC6  EFE7  F00E         	goto	u6651
 14757  001DCA  EFE9  F00E         	goto	u6650
 14758  001DCE                     u6651:
 14759  001DCE  EF19  F00F         	goto	l6801
 14760  001DD2                     u6650:
 14761  001DD2  0E9F               	movlw	159
 14762  001DD4  6E2D               	movwf	??_xtoa^0,c
 14763  001DD6  0EFF               	movlw	255
 14764  001DD8  6E2E               	movwf	(??_xtoa+1)^0,c
 14765  001DDA  0E20               	movlw	32
 14766  001DDC  1047               	iorwf	xtoa@c^0,w,c
 14767  001DDE  6E2F               	movwf	(??_xtoa+2)^0,c
 14768  001DE0  0E00               	movlw	0
 14769  001DE2  1048               	iorwf	(xtoa@c+1)^0,w,c
 14770  001DE4  6E30               	movwf	(??_xtoa+3)^0,c
 14771  001DE6  502D               	movf	??_xtoa^0,w,c
 14772  001DE8  262F               	addwf	(??_xtoa+2)^0,f,c
 14773  001DEA  502E               	movf	(??_xtoa+1)^0,w,c
 14774  001DEC  2230               	addwfc	(??_xtoa+3)^0,f,c
 14775  001DEE  5030               	movf	(??_xtoa+3)^0,w,c
 14776  001DF0  E10A               	bnz	u6660
 14777  001DF2  0E1A               	movlw	26
 14778  001DF4  5C2F               	subwf	(??_xtoa+2)^0,w,c
 14779  001DF6  A0D8               	btfss	status,0,c
 14780  001DF8  EF00  F00F         	goto	u6661
 14781  001DFC  EF03  F00F         	goto	u6660
 14782  001E00                     u6661:
 14783  001E00  0E01               	movlw	1
 14784  001E02  EF04  F00F         	goto	u6670
 14785  001E06                     u6660:
 14786  001E06  0E00               	movlw	0
 14787  001E08                     u6670:
 14788  001E08  6E37               	movwf	_xtoa$1921^0,c
 14789  001E0A  6A38               	clrf	(_xtoa$1921+1)^0,c
 14790  001E0C  5037               	movf	_xtoa$1921^0,w,c
 14791  001E0E  1038               	iorwf	(_xtoa$1921+1)^0,w,c
 14792  001E10  B4D8               	btfsc	status,2,c
 14793  001E12  EF0D  F00F         	goto	u6681
 14794  001E16  EF0F  F00F         	goto	u6680
 14795  001E1A                     u6681:
 14796  001E1A  EF19  F00F         	goto	l6801
 14797  001E1E                     u6680:
 14798  001E1E                     
 14799                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
 14800  001E1E  C047  F00B         	movff	xtoa@c,toupper@c
 14801  001E22  C048  F00C         	movff	xtoa@c+1,toupper@c+1
 14802  001E26  EC8A  F022         	call	_toupper	;wreg free
 14803  001E2A  C00B  F047         	movff	?_toupper,xtoa@c
 14804  001E2E  C00C  F048         	movff	?_toupper+1,xtoa@c+1
 14805  001E32                     l6801:
 14806                           
 14807                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
 14808  001E32  0EDD               	movlw	low _dbuf
 14809  001E34  2445               	addwf	xtoa@i^0,w,c
 14810  001E36  6ED9               	movwf	fsr2l,c
 14811  001E38  0E02               	movlw	high _dbuf
 14812  001E3A  2046               	addwfc	(xtoa@i+1)^0,w,c
 14813  001E3C  6EDA               	movwf	fsr2h,c
 14814  001E3E  C047  FFDF         	movff	xtoa@c,indf2
 14815  001E42                     
 14816                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
 14817  001E42  0639               	decf	xtoa@p^0,f,c
 14818  001E44  A0D8               	btfss	status,0,c
 14819  001E46  063A               	decf	(xtoa@p+1)^0,f,c
 14820  001E48                     
 14821                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
 14822  001E48  063B               	decf	xtoa@w^0,f,c
 14823  001E4A  A0D8               	btfss	status,0,c
 14824  001E4C  063C               	decf	(xtoa@w+1)^0,f,c
 14825  001E4E                     
 14826                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
 14827  001E4E  C03D  F02D         	movff	xtoa@n,??_xtoa
 14828  001E52  C03E  F02E         	movff	xtoa@n+1,??_xtoa+1
 14829  001E56  C03F  F02F         	movff	xtoa@n+2,??_xtoa+2
 14830  001E5A  C040  F030         	movff	xtoa@n+3,??_xtoa+3
 14831  001E5E  C041  F031         	movff	xtoa@n+4,??_xtoa+4
 14832  001E62  C042  F032         	movff	xtoa@n+5,??_xtoa+5
 14833  001E66  C043  F033         	movff	xtoa@n+6,??_xtoa+6
 14834  001E6A  C044  F034         	movff	xtoa@n+7,??_xtoa+7
 14835  001E6E  0E05               	movlw	5
 14836  001E70  EF43  F00F         	goto	u6690
 14837  001E74                     u6695:
 14838  001E74  90D8               	bcf	status,0,c
 14839  001E76  3234               	rrcf	(??_xtoa+7)^0,f,c
 14840  001E78  3233               	rrcf	(??_xtoa+6)^0,f,c
 14841  001E7A  3232               	rrcf	(??_xtoa+5)^0,f,c
 14842  001E7C  3231               	rrcf	(??_xtoa+4)^0,f,c
 14843  001E7E  3230               	rrcf	(??_xtoa+3)^0,f,c
 14844  001E80  322F               	rrcf	(??_xtoa+2)^0,f,c
 14845  001E82  322E               	rrcf	(??_xtoa+1)^0,f,c
 14846  001E84  322D               	rrcf	??_xtoa^0,f,c
 14847  001E86                     u6690:
 14848  001E86  2EE8               	decfsz	wreg,f,c
 14849  001E88  EF3A  F00F         	goto	u6695
 14850  001E8C  C02D  F03D         	movff	??_xtoa,xtoa@n
 14851  001E90  C02E  F03E         	movff	??_xtoa+1,xtoa@n+1
 14852  001E94  C02F  F03F         	movff	??_xtoa+2,xtoa@n+2
 14853  001E98  C030  F040         	movff	??_xtoa+3,xtoa@n+3
 14854  001E9C  C031  F041         	movff	??_xtoa+4,xtoa@n+4
 14855  001EA0  C032  F042         	movff	??_xtoa+5,xtoa@n+5
 14856  001EA4  C033  F043         	movff	??_xtoa+6,xtoa@n+6
 14857  001EA8  C034  F044         	movff	??_xtoa+7,xtoa@n+7
 14858  001EAC                     l6809:
 14859                           
 14860                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 14861  001EAC  BE46               	btfsc	(xtoa@i+1)^0,7,c
 14862  001EAE  EF62  F00F         	goto	u6701
 14863  001EB2  5046               	movf	(xtoa@i+1)^0,w,c
 14864  001EB4  E109               	bnz	u6700
 14865  001EB6  0E02               	movlw	2
 14866  001EB8  5C45               	subwf	xtoa@i^0,w,c
 14867  001EBA  A0D8               	btfss	status,0,c
 14868  001EBC  EF62  F00F         	goto	u6701
 14869  001EC0  EF64  F00F         	goto	u6700
 14870  001EC4                     u6701:
 14871  001EC4  EF94  F00F         	goto	l1301
 14872  001EC8                     u6700:
 14873  001EC8  503D               	movf	xtoa@n^0,w,c
 14874  001ECA  103E               	iorwf	(xtoa@n+1)^0,w,c
 14875  001ECC  103F               	iorwf	(xtoa@n+2)^0,w,c
 14876  001ECE  1040               	iorwf	(xtoa@n+3)^0,w,c
 14877  001ED0  1041               	iorwf	(xtoa@n+4)^0,w,c
 14878  001ED2  1042               	iorwf	(xtoa@n+5)^0,w,c
 14879  001ED4  1043               	iorwf	(xtoa@n+6)^0,w,c
 14880  001ED6  1044               	iorwf	(xtoa@n+7)^0,w,c
 14881  001ED8  A4D8               	btfss	status,2,c
 14882  001EDA  EF71  F00F         	goto	u6711
 14883  001EDE  EF73  F00F         	goto	u6710
 14884  001EE2                     u6711:
 14885  001EE2  EFA3  F00E         	goto	l6779
 14886  001EE6                     u6710:
 14887  001EE6  BE3A               	btfsc	(xtoa@p+1)^0,7,c
 14888  001EE8  EF80  F00F         	goto	u6720
 14889  001EEC  503A               	movf	(xtoa@p+1)^0,w,c
 14890  001EEE  E106               	bnz	u6721
 14891  001EF0  0439               	decf	xtoa@p^0,w,c
 14892  001EF2  B0D8               	btfsc	status,0,c
 14893  001EF4  EF7E  F00F         	goto	u6721
 14894  001EF8  EF80  F00F         	goto	u6720
 14895  001EFC                     u6721:
 14896  001EFC  EFA3  F00E         	goto	l6779
 14897  001F00                     u6720:
 14898  001F00  BE3C               	btfsc	(xtoa@w+1)^0,7,c
 14899  001F02  EF8B  F00F         	goto	u6731
 14900  001F06  503C               	movf	(xtoa@w+1)^0,w,c
 14901  001F08  E108               	bnz	u6730
 14902  001F0A  043B               	decf	xtoa@w^0,w,c
 14903  001F0C  A0D8               	btfss	status,0,c
 14904  001F0E  EF8B  F00F         	goto	u6731
 14905  001F12  EF8D  F00F         	goto	u6730
 14906  001F16                     u6731:
 14907  001F16  EF94  F00F         	goto	l1301
 14908  001F1A                     u6730:
 14909  001F1A  B257               	btfsc	_flags^0,1,c
 14910  001F1C  EF92  F00F         	goto	u6741
 14911  001F20  EF94  F00F         	goto	u6740
 14912  001F24                     u6741:
 14913  001F24  EFA3  F00E         	goto	l6779
 14914  001F28                     u6740:
 14915  001F28                     l1301:
 14916                           
 14917                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
 14918  001F28  A857               	btfss	_flags^0,4,c
 14919  001F2A  EF99  F00F         	goto	u6751
 14920  001F2E  EF9B  F00F         	goto	u6750
 14921  001F32                     u6751:
 14922  001F32  EFB1  F00F         	goto	l6825
 14923  001F36                     u6750:
 14924  001F36                     
 14925                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
 14926  001F36  0645               	decf	xtoa@i^0,f,c
 14927  001F38  A0D8               	btfss	status,0,c
 14928  001F3A  0646               	decf	(xtoa@i+1)^0,f,c
 14929  001F3C                     
 14930                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
 14931  001F3C  0EDD               	movlw	low _dbuf
 14932  001F3E  2445               	addwf	xtoa@i^0,w,c
 14933  001F40  6ED9               	movwf	fsr2l,c
 14934  001F42  0E02               	movlw	high _dbuf
 14935  001F44  2046               	addwfc	(xtoa@i+1)^0,w,c
 14936  001F46  6EDA               	movwf	fsr2h,c
 14937  001F48  C02C  FFDF         	movff	xtoa@x,indf2
 14938  001F4C                     
 14939                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
 14940  001F4C  0645               	decf	xtoa@i^0,f,c
 14941  001F4E  A0D8               	btfss	status,0,c
 14942  001F50  0646               	decf	(xtoa@i+1)^0,f,c
 14943                           
 14944                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
 14945  001F52  0EDD               	movlw	low _dbuf
 14946  001F54  2445               	addwf	xtoa@i^0,w,c
 14947  001F56  6ED9               	movwf	fsr2l,c
 14948  001F58  0E02               	movlw	high _dbuf
 14949  001F5A  2046               	addwfc	(xtoa@i+1)^0,w,c
 14950  001F5C  6EDA               	movwf	fsr2h,c
 14951  001F5E  0E30               	movlw	48
 14952  001F60  6EDF               	movwf	indf2,c
 14953  001F62                     l6825:
 14954                           
 14955                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
 14956  001F62  C022  F017         	movff	xtoa@fp,pad@fp
 14957  001F66  C023  F018         	movff	xtoa@fp+1,pad@fp+1
 14958  001F6A  0EDD               	movlw	low _dbuf
 14959  001F6C  2445               	addwf	xtoa@i^0,w,c
 14960  001F6E  6E19               	movwf	pad@buf^0,c
 14961  001F70  0E02               	movlw	high _dbuf
 14962  001F72  2046               	addwfc	(xtoa@i+1)^0,w,c
 14963  001F74  6E1A               	movwf	(pad@buf+1)^0,c
 14964  001F76  C03B  F01B         	movff	xtoa@w,pad@p
 14965  001F7A  C03C  F01C         	movff	xtoa@w+1,pad@p+1
 14966  001F7E  EC92  F01E         	call	_pad	;wreg free
 14967  001F82  C017  F022         	movff	?_pad,?_xtoa
 14968  001F86  C018  F023         	movff	?_pad+1,?_xtoa+1
 14969  001F8A  0012               	return		;funcret
 14970  001F8C                     __end_of_xtoa:
 14971                           	opt callstack 0
 14972                           
 14973 ;; *************** function _toupper *****************
 14974 ;; Defined at:
 14975 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
 14976 ;; Parameters:    Size  Location     Type
 14977 ;;  c               2   10[COMRAM] int 
 14978 ;; Auto vars:     Size  Location     Type
 14979 ;;		None
 14980 ;; Return value:  Size  Location     Type
 14981 ;;                  2   10[COMRAM] int 
 14982 ;; Registers used:
 14983 ;;		wreg, status,2, status,0
 14984 ;; Tracked objects:
 14985 ;;		On entry : 0/0
 14986 ;;		On exit  : 0/0
 14987 ;;		Unchanged: 0/0
 14988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14989 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14990 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14991 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14992 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14993 ;;Total ram usage:        8 bytes
 14994 ;; Hardware stack levels used:    1
 14995 ;; Hardware stack levels required when called:    5
 14996 ;; This function calls:
 14997 ;;		_islower
 14998 ;; This function is called by:
 14999 ;;		_xtoa
 15000 ;; This function uses a non-reentrant model
 15001 ;;
 15002                           
 15003                           	psect	text53
 15004  004514                     __ptext53:
 15005                           	opt callstack 0
 15006  004514                     _toupper:
 15007                           	opt callstack 21
 15008  004514  0E9F               	movlw	159
 15009  004516  6E0D               	movwf	??_toupper^0,c
 15010  004518  0EFF               	movlw	255
 15011  00451A  6E0E               	movwf	(??_toupper+1)^0,c
 15012  00451C  C00B  F00F         	movff	toupper@c,??_toupper+2
 15013  004520  C00C  F010         	movff	toupper@c+1,??_toupper+3
 15014  004524  500D               	movf	??_toupper^0,w,c
 15015  004526  260F               	addwf	(??_toupper+2)^0,f,c
 15016  004528  500E               	movf	(??_toupper+1)^0,w,c
 15017  00452A  2210               	addwfc	(??_toupper+3)^0,f,c
 15018  00452C  5010               	movf	(??_toupper+3)^0,w,c
 15019  00452E  E10A               	bnz	u6000
 15020  004530  0E1A               	movlw	26
 15021  004532  5C0F               	subwf	(??_toupper+2)^0,w,c
 15022  004534  A0D8               	btfss	status,0,c
 15023  004536  EF9F  F022         	goto	u6001
 15024  00453A  EFA2  F022         	goto	u6000
 15025  00453E                     u6001:
 15026  00453E  0E01               	movlw	1
 15027  004540  EFA3  F022         	goto	u6010
 15028  004544                     u6000:
 15029  004544  0E00               	movlw	0
 15030  004546                     u6010:
 15031  004546  6E11               	movwf	_toupper$2509^0,c
 15032  004548  6A12               	clrf	(_toupper$2509+1)^0,c
 15033  00454A  5011               	movf	_toupper$2509^0,w,c
 15034  00454C  1012               	iorwf	(_toupper$2509+1)^0,w,c
 15035  00454E  B4D8               	btfsc	status,2,c
 15036  004550  EFAC  F022         	goto	u6021
 15037  004554  EFAE  F022         	goto	u6020
 15038  004558                     u6021:
 15039  004558  EFB4  F022         	goto	l2151
 15040  00455C                     u6020:
 15041  00455C  0E5F               	movlw	95
 15042  00455E  140B               	andwf	toupper@c^0,w,c
 15043  004560  6E0B               	movwf	?_toupper^0,c
 15044  004562  6A0C               	clrf	(?_toupper+1)^0,c
 15045  004564  EFB8  F022         	goto	l2156
 15046  004568                     l2151:
 15047  004568  C00B  F00B         	movff	toupper@c,?_toupper
 15048  00456C  C00C  F00C         	movff	toupper@c+1,?_toupper+1
 15049  004570                     l2156:
 15050  004570  0012               	return		;funcret
 15051  004572                     __end_of_toupper:
 15052                           	opt callstack 0
 15053                           
 15054 ;; *************** function _islower *****************
 15055 ;; Defined at:
 15056 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
 15057 ;; Parameters:    Size  Location     Type
 15058 ;;  c               2    4[COMRAM] int 
 15059 ;; Auto vars:     Size  Location     Type
 15060 ;;		None
 15061 ;; Return value:  Size  Location     Type
 15062 ;;                  2    4[COMRAM] int 
 15063 ;; Registers used:
 15064 ;;		wreg, status,2, status,0
 15065 ;; Tracked objects:
 15066 ;;		On entry : 0/0
 15067 ;;		On exit  : 0/0
 15068 ;;		Unchanged: 0/0
 15069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15070 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15072 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15073 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15074 ;;Total ram usage:        6 bytes
 15075 ;; Hardware stack levels used:    1
 15076 ;; Hardware stack levels required when called:    4
 15077 ;; This function calls:
 15078 ;;		Nothing
 15079 ;; This function is called by:
 15080 ;;		_toupper
 15081 ;; This function uses a non-reentrant model
 15082 ;;
 15083                           
 15084                           	psect	text54
 15085  004B4C                     __ptext54:
 15086                           	opt callstack 0
 15087  004B4C                     _islower:
 15088                           	opt callstack 21
 15089  004B4C  0E9F               	movlw	159
 15090  004B4E  6E07               	movwf	??_islower^0,c
 15091  004B50  0EFF               	movlw	255
 15092  004B52  6E08               	movwf	(??_islower+1)^0,c
 15093  004B54  C005  F009         	movff	islower@c,??_islower+2
 15094  004B58  C006  F00A         	movff	islower@c+1,??_islower+3
 15095  004B5C  5007               	movf	??_islower^0,w,c
 15096  004B5E  2609               	addwf	(??_islower+2)^0,f,c
 15097  004B60  5008               	movf	(??_islower+1)^0,w,c
 15098  004B62  220A               	addwfc	(??_islower+3)^0,f,c
 15099  004B64  500A               	movf	(??_islower+3)^0,w,c
 15100  004B66  E10A               	bnz	u5890
 15101  004B68  0E1A               	movlw	26
 15102  004B6A  5C09               	subwf	(??_islower+2)^0,w,c
 15103  004B6C  A0D8               	btfss	status,0,c
 15104  004B6E  EFBB  F025         	goto	u5891
 15105  004B72  EFBE  F025         	goto	u5890
 15106  004B76                     u5891:
 15107  004B76  0E01               	movlw	1
 15108  004B78  EFBF  F025         	goto	u5900
 15109  004B7C                     u5890:
 15110  004B7C  0E00               	movlw	0
 15111  004B7E                     u5900:
 15112  004B7E  6E05               	movwf	?_islower^0,c
 15113  004B80  6A06               	clrf	(?_islower+1)^0,c
 15114  004B82  0012               	return		;funcret
 15115  004B84                     __end_of_islower:
 15116                           	opt callstack 0
 15117                           
 15118 ;; *************** function _isupper *****************
 15119 ;; Defined at:
 15120 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
 15121 ;; Parameters:    Size  Location     Type
 15122 ;;  c               2    4[COMRAM] int 
 15123 ;; Auto vars:     Size  Location     Type
 15124 ;;		None
 15125 ;; Return value:  Size  Location     Type
 15126 ;;                  2    4[COMRAM] int 
 15127 ;; Registers used:
 15128 ;;		wreg, status,2, status,0
 15129 ;; Tracked objects:
 15130 ;;		On entry : 0/0
 15131 ;;		On exit  : 0/0
 15132 ;;		Unchanged: 0/0
 15133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15134 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15136 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15137 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15138 ;;Total ram usage:        6 bytes
 15139 ;; Hardware stack levels used:    1
 15140 ;; Hardware stack levels required when called:    4
 15141 ;; This function calls:
 15142 ;;		Nothing
 15143 ;; This function is called by:
 15144 ;;		_xtoa
 15145 ;; This function uses a non-reentrant model
 15146 ;;
 15147                           
 15148                           	psect	text55
 15149  004B84                     __ptext55:
 15150                           	opt callstack 0
 15151  004B84                     _isupper:
 15152                           	opt callstack 22
 15153  004B84  0EBF               	movlw	191
 15154  004B86  6E07               	movwf	??_isupper^0,c
 15155  004B88  0EFF               	movlw	255
 15156  004B8A  6E08               	movwf	(??_isupper+1)^0,c
 15157  004B8C  C005  F009         	movff	isupper@c,??_isupper+2
 15158  004B90  C006  F00A         	movff	isupper@c+1,??_isupper+3
 15159  004B94  5007               	movf	??_isupper^0,w,c
 15160  004B96  2609               	addwf	(??_isupper+2)^0,f,c
 15161  004B98  5008               	movf	(??_isupper+1)^0,w,c
 15162  004B9A  220A               	addwfc	(??_isupper+3)^0,f,c
 15163  004B9C  500A               	movf	(??_isupper+3)^0,w,c
 15164  004B9E  E10A               	bnz	u5960
 15165  004BA0  0E1A               	movlw	26
 15166  004BA2  5C09               	subwf	(??_isupper+2)^0,w,c
 15167  004BA4  A0D8               	btfss	status,0,c
 15168  004BA6  EFD7  F025         	goto	u5961
 15169  004BAA  EFDA  F025         	goto	u5960
 15170  004BAE                     u5961:
 15171  004BAE  0E01               	movlw	1
 15172  004BB0  EFDB  F025         	goto	u5970
 15173  004BB4                     u5960:
 15174  004BB4  0E00               	movlw	0
 15175  004BB6                     u5970:
 15176  004BB6  6E05               	movwf	?_isupper^0,c
 15177  004BB8  6A06               	clrf	(?_isupper+1)^0,c
 15178  004BBA  0012               	return		;funcret
 15179  004BBC                     __end_of_isupper:
 15180                           	opt callstack 0
 15181                           
 15182 ;; *************** function _isalpha *****************
 15183 ;; Defined at:
 15184 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
 15185 ;; Parameters:    Size  Location     Type
 15186 ;;  c               2    4[COMRAM] int 
 15187 ;; Auto vars:     Size  Location     Type
 15188 ;;		None
 15189 ;; Return value:  Size  Location     Type
 15190 ;;                  2    4[COMRAM] int 
 15191 ;; Registers used:
 15192 ;;		wreg, status,2, status,0
 15193 ;; Tracked objects:
 15194 ;;		On entry : 0/0
 15195 ;;		On exit  : 0/0
 15196 ;;		Unchanged: 0/0
 15197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15198 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15200 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15201 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15202 ;;Total ram usage:        6 bytes
 15203 ;; Hardware stack levels used:    1
 15204 ;; Hardware stack levels required when called:    4
 15205 ;; This function calls:
 15206 ;;		Nothing
 15207 ;; This function is called by:
 15208 ;;		_xtoa
 15209 ;; This function uses a non-reentrant model
 15210 ;;
 15211                           
 15212                           	psect	text56
 15213  004AD8                     __ptext56:
 15214                           	opt callstack 0
 15215  004AD8                     _isalpha:
 15216                           	opt callstack 22
 15217  004AD8  0E9F               	movlw	159
 15218  004ADA  6E07               	movwf	??_isalpha^0,c
 15219  004ADC  0EFF               	movlw	255
 15220  004ADE  6E08               	movwf	(??_isalpha+1)^0,c
 15221  004AE0  0E20               	movlw	32
 15222  004AE2  1005               	iorwf	isalpha@c^0,w,c
 15223  004AE4  6E09               	movwf	(??_isalpha+2)^0,c
 15224  004AE6  0E00               	movlw	0
 15225  004AE8  1006               	iorwf	(isalpha@c+1)^0,w,c
 15226  004AEA  6E0A               	movwf	(??_isalpha+3)^0,c
 15227  004AEC  5007               	movf	??_isalpha^0,w,c
 15228  004AEE  2609               	addwf	(??_isalpha+2)^0,f,c
 15229  004AF0  5008               	movf	(??_isalpha+1)^0,w,c
 15230  004AF2  220A               	addwfc	(??_isalpha+3)^0,f,c
 15231  004AF4  500A               	movf	(??_isalpha+3)^0,w,c
 15232  004AF6  E10A               	bnz	u5980
 15233  004AF8  0E1A               	movlw	26
 15234  004AFA  5C09               	subwf	(??_isalpha+2)^0,w,c
 15235  004AFC  A0D8               	btfss	status,0,c
 15236  004AFE  EF83  F025         	goto	u5981
 15237  004B02  EF86  F025         	goto	u5980
 15238  004B06                     u5981:
 15239  004B06  0E01               	movlw	1
 15240  004B08  EF87  F025         	goto	u5990
 15241  004B0C                     u5980:
 15242  004B0C  0E00               	movlw	0
 15243  004B0E                     u5990:
 15244  004B0E  6E05               	movwf	?_isalpha^0,c
 15245  004B10  6A06               	clrf	(?_isalpha+1)^0,c
 15246  004B12  0012               	return		;funcret
 15247  004B14                     __end_of_isalpha:
 15248                           	opt callstack 0
 15249                           
 15250 ;; *************** function _utoa *****************
 15251 ;; Defined at:
 15252 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 15253 ;; Parameters:    Size  Location     Type
 15254 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
 15255 ;;		 -> NULL(0), 
 15256 ;;  d               8   35[COMRAM] unsigned long long 
 15257 ;; Auto vars:     Size  Location     Type
 15258 ;;  n               8   55[COMRAM] unsigned long long 
 15259 ;;  i               2   63[COMRAM] int 
 15260 ;;  w               2   53[COMRAM] int 
 15261 ;;  p               2   51[COMRAM] int 
 15262 ;; Return value:  Size  Location     Type
 15263 ;;                  2   33[COMRAM] int 
 15264 ;; Registers used:
 15265 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15266 ;; Tracked objects:
 15267 ;;		On entry : 0/0
 15268 ;;		On exit  : 0/0
 15269 ;;		Unchanged: 0/0
 15270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15271 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15272 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15273 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15274 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15275 ;;Total ram usage:       32 bytes
 15276 ;; Hardware stack levels used:    1
 15277 ;; Hardware stack levels required when called:    9
 15278 ;; This function calls:
 15279 ;;		___lodiv
 15280 ;;		___lomod
 15281 ;;		_pad
 15282 ;; This function is called by:
 15283 ;;		_vfpfcnvrt
 15284 ;; This function uses a non-reentrant model
 15285 ;;
 15286                           
 15287                           	psect	text57
 15288  002486                     __ptext57:
 15289                           	opt callstack 0
 15290  002486                     _utoa:
 15291                           	opt callstack 18
 15292  002486                     
 15293                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
 15294  002486  0100               	movlb	0	; () banked
 15295  002488  BFD2               	btfsc	(_prec+1)& (0+255),7,b
 15296  00248A  EF49  F012         	goto	u6521
 15297  00248E  EF4B  F012         	goto	u6520
 15298  002492                     u6521:
 15299  002492  EF4C  F012         	goto	l6731
 15300  002496                     u6520:
 15301  002496                     
 15302                           ; BSR set to: 0
 15303                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
 15304  002496  9257               	bcf	_flags^0,1,c
 15305  002498                     l6731:
 15306                           
 15307                           ; BSR set to: 0
 15308                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
 15309  002498  BFD2               	btfsc	(_prec+1)& (0+255),7,b
 15310  00249A  EF59  F012         	goto	u6530
 15311  00249E  51D2               	movf	(_prec+1)& (0+255),w,b
 15312  0024A0  E106               	bnz	u6531
 15313  0024A2  05D1               	decf	_prec& (0+255),w,b
 15314  0024A4  B0D8               	btfsc	status,0,c
 15315  0024A6  EF57  F012         	goto	u6531
 15316  0024AA  EF59  F012         	goto	u6530
 15317  0024AE                     u6531:
 15318  0024AE  EF5F  F012         	goto	l1263
 15319  0024B2                     u6530:
 15320  0024B2                     
 15321                           ; BSR set to: 0
 15322  0024B2  0E00               	movlw	0
 15323  0024B4  6E35               	movwf	(utoa@p+1)^0,c
 15324  0024B6  0E01               	movlw	1
 15325  0024B8  6E34               	movwf	utoa@p^0,c
 15326  0024BA  EF63  F012         	goto	l1265
 15327  0024BE                     l1263:
 15328                           
 15329                           ; BSR set to: 0
 15330  0024BE  C0D1  F034         	movff	_prec,utoa@p
 15331  0024C2  C0D2  F035         	movff	_prec+1,utoa@p+1
 15332  0024C6                     l1265:
 15333                           
 15334                           ; BSR set to: 0
 15335                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
 15336  0024C6  C0CF  F036         	movff	_width,utoa@w
 15337  0024CA  C0D0  F037         	movff	_width+1,utoa@w+1
 15338                           
 15339                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
 15340  0024CE  C024  F038         	movff	utoa@d,utoa@n
 15341  0024D2  C025  F039         	movff	utoa@d+1,utoa@n+1
 15342  0024D6  C026  F03A         	movff	utoa@d+2,utoa@n+2
 15343  0024DA  C027  F03B         	movff	utoa@d+3,utoa@n+3
 15344  0024DE  C028  F03C         	movff	utoa@d+4,utoa@n+4
 15345  0024E2  C029  F03D         	movff	utoa@d+5,utoa@n+5
 15346  0024E6  C02A  F03E         	movff	utoa@d+6,utoa@n+6
 15347  0024EA  C02B  F03F         	movff	utoa@d+7,utoa@n+7
 15348  0024EE                     
 15349                           ; BSR set to: 0
 15350                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
 15351  0024EE  0E00               	movlw	0
 15352  0024F0  6E41               	movwf	(utoa@i+1)^0,c
 15353  0024F2  0E1F               	movlw	31
 15354  0024F4  6E40               	movwf	utoa@i^0,c
 15355  0024F6                     
 15356                           ; BSR set to: 0
 15357                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
 15358  0024F6  0E00               	movlw	0
 15359  0024F8  0102               	movlb	2	; () banked
 15360  0024FA  6FFC               	movwf	(_dbuf+31)& (0+255),b
 15361                           
 15362                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 15363  0024FC  EFF6  F012         	goto	l6749
 15364  002500                     l6739:
 15365                           
 15366                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
 15367  002500  0640               	decf	utoa@i^0,f,c
 15368  002502  A0D8               	btfss	status,0,c
 15369  002504  0641               	decf	(utoa@i+1)^0,f,c
 15370  002506                     
 15371                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
 15372  002506  0EDD               	movlw	low _dbuf
 15373  002508  2440               	addwf	utoa@i^0,w,c
 15374  00250A  6ED9               	movwf	fsr2l,c
 15375  00250C  0E02               	movlw	high _dbuf
 15376  00250E  2041               	addwfc	(utoa@i+1)^0,w,c
 15377  002510  6EDA               	movwf	fsr2h,c
 15378  002512  C038  F005         	movff	utoa@n,___lomod@dividend
 15379  002516  C039  F006         	movff	utoa@n+1,___lomod@dividend+1
 15380  00251A  C03A  F007         	movff	utoa@n+2,___lomod@dividend+2
 15381  00251E  C03B  F008         	movff	utoa@n+3,___lomod@dividend+3
 15382  002522  C03C  F009         	movff	utoa@n+4,___lomod@dividend+4
 15383  002526  C03D  F00A         	movff	utoa@n+5,___lomod@dividend+5
 15384  00252A  C03E  F00B         	movff	utoa@n+6,___lomod@dividend+6
 15385  00252E  C03F  F00C         	movff	utoa@n+7,___lomod@dividend+7
 15386  002532  0E0A               	movlw	10
 15387  002534  6E0D               	movwf	___lomod@divisor^0,c
 15388  002536  0E00               	movlw	0
 15389  002538  6E0E               	movwf	(___lomod@divisor+1)^0,c
 15390  00253A  0E00               	movlw	0
 15391  00253C  6E0F               	movwf	(___lomod@divisor+2)^0,c
 15392  00253E  0E00               	movlw	0
 15393  002540  6E10               	movwf	(___lomod@divisor+3)^0,c
 15394  002542  0E00               	movlw	0
 15395  002544  6E11               	movwf	(___lomod@divisor+4)^0,c
 15396  002546  0E00               	movlw	0
 15397  002548  6E12               	movwf	(___lomod@divisor+5)^0,c
 15398  00254A  0E00               	movlw	0
 15399  00254C  6E13               	movwf	(___lomod@divisor+6)^0,c
 15400  00254E  0E00               	movlw	0
 15401  002550  6E14               	movwf	(___lomod@divisor+7)^0,c
 15402  002552  ECC8  F01D         	call	___lomod	;wreg free
 15403  002556  C005  F02C         	movff	?___lomod,??_utoa
 15404  00255A  C006  F02D         	movff	?___lomod+1,??_utoa+1
 15405  00255E  C007  F02E         	movff	?___lomod+2,??_utoa+2
 15406  002562  C008  F02F         	movff	?___lomod+3,??_utoa+3
 15407  002566  C009  F030         	movff	?___lomod+4,??_utoa+4
 15408  00256A  C00A  F031         	movff	?___lomod+5,??_utoa+5
 15409  00256E  C00B  F032         	movff	?___lomod+6,??_utoa+6
 15410  002572  C00C  F033         	movff	?___lomod+7,??_utoa+7
 15411  002576  502C               	movf	??_utoa^0,w,c
 15412  002578  0F30               	addlw	48
 15413  00257A  6EDF               	movwf	indf2,c
 15414  00257C                     
 15415                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
 15416  00257C  0634               	decf	utoa@p^0,f,c
 15417  00257E  A0D8               	btfss	status,0,c
 15418  002580  0635               	decf	(utoa@p+1)^0,f,c
 15419  002582                     
 15420                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
 15421  002582  0636               	decf	utoa@w^0,f,c
 15422  002584  A0D8               	btfss	status,0,c
 15423  002586  0637               	decf	(utoa@w+1)^0,f,c
 15424  002588                     
 15425                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
 15426  002588  C038  F005         	movff	utoa@n,___lodiv@dividend
 15427  00258C  C039  F006         	movff	utoa@n+1,___lodiv@dividend+1
 15428  002590  C03A  F007         	movff	utoa@n+2,___lodiv@dividend+2
 15429  002594  C03B  F008         	movff	utoa@n+3,___lodiv@dividend+3
 15430  002598  C03C  F009         	movff	utoa@n+4,___lodiv@dividend+4
 15431  00259C  C03D  F00A         	movff	utoa@n+5,___lodiv@dividend+5
 15432  0025A0  C03E  F00B         	movff	utoa@n+6,___lodiv@dividend+6
 15433  0025A4  C03F  F00C         	movff	utoa@n+7,___lodiv@dividend+7
 15434  0025A8  0E0A               	movlw	10
 15435  0025AA  6E0D               	movwf	___lodiv@divisor^0,c
 15436  0025AC  0E00               	movlw	0
 15437  0025AE  6E0E               	movwf	(___lodiv@divisor+1)^0,c
 15438  0025B0  0E00               	movlw	0
 15439  0025B2  6E0F               	movwf	(___lodiv@divisor+2)^0,c
 15440  0025B4  0E00               	movlw	0
 15441  0025B6  6E10               	movwf	(___lodiv@divisor+3)^0,c
 15442  0025B8  0E00               	movlw	0
 15443  0025BA  6E11               	movwf	(___lodiv@divisor+4)^0,c
 15444  0025BC  0E00               	movlw	0
 15445  0025BE  6E12               	movwf	(___lodiv@divisor+5)^0,c
 15446  0025C0  0E00               	movlw	0
 15447  0025C2  6E13               	movwf	(___lodiv@divisor+6)^0,c
 15448  0025C4  0E00               	movlw	0
 15449  0025C6  6E14               	movwf	(___lodiv@divisor+7)^0,c
 15450  0025C8  EC0B  F01C         	call	___lodiv	;wreg free
 15451  0025CC  C005  F038         	movff	?___lodiv,utoa@n
 15452  0025D0  C006  F039         	movff	?___lodiv+1,utoa@n+1
 15453  0025D4  C007  F03A         	movff	?___lodiv+2,utoa@n+2
 15454  0025D8  C008  F03B         	movff	?___lodiv+3,utoa@n+3
 15455  0025DC  C009  F03C         	movff	?___lodiv+4,utoa@n+4
 15456  0025E0  C00A  F03D         	movff	?___lodiv+5,utoa@n+5
 15457  0025E4  C00B  F03E         	movff	?___lodiv+6,utoa@n+6
 15458  0025E8  C00C  F03F         	movff	?___lodiv+7,utoa@n+7
 15459  0025EC                     l6749:
 15460                           
 15461                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 15462  0025EC  5040               	movf	utoa@i^0,w,c
 15463  0025EE  1041               	iorwf	(utoa@i+1)^0,w,c
 15464  0025F0  B4D8               	btfsc	status,2,c
 15465  0025F2  EFFD  F012         	goto	u6541
 15466  0025F6  EFFF  F012         	goto	u6540
 15467  0025FA                     u6541:
 15468  0025FA  EF2F  F013         	goto	l6759
 15469  0025FE                     u6540:
 15470  0025FE  5038               	movf	utoa@n^0,w,c
 15471  002600  1039               	iorwf	(utoa@n+1)^0,w,c
 15472  002602  103A               	iorwf	(utoa@n+2)^0,w,c
 15473  002604  103B               	iorwf	(utoa@n+3)^0,w,c
 15474  002606  103C               	iorwf	(utoa@n+4)^0,w,c
 15475  002608  103D               	iorwf	(utoa@n+5)^0,w,c
 15476  00260A  103E               	iorwf	(utoa@n+6)^0,w,c
 15477  00260C  103F               	iorwf	(utoa@n+7)^0,w,c
 15478  00260E  A4D8               	btfss	status,2,c
 15479  002610  EF0C  F013         	goto	u6551
 15480  002614  EF0E  F013         	goto	u6550
 15481  002618                     u6551:
 15482  002618  EF80  F012         	goto	l6739
 15483  00261C                     u6550:
 15484  00261C  BE35               	btfsc	(utoa@p+1)^0,7,c
 15485  00261E  EF1B  F013         	goto	u6560
 15486  002622  5035               	movf	(utoa@p+1)^0,w,c
 15487  002624  E106               	bnz	u6561
 15488  002626  0434               	decf	utoa@p^0,w,c
 15489  002628  B0D8               	btfsc	status,0,c
 15490  00262A  EF19  F013         	goto	u6561
 15491  00262E  EF1B  F013         	goto	u6560
 15492  002632                     u6561:
 15493  002632  EF80  F012         	goto	l6739
 15494  002636                     u6560:
 15495  002636  BE37               	btfsc	(utoa@w+1)^0,7,c
 15496  002638  EF26  F013         	goto	u6571
 15497  00263C  5037               	movf	(utoa@w+1)^0,w,c
 15498  00263E  E108               	bnz	u6570
 15499  002640  0436               	decf	utoa@w^0,w,c
 15500  002642  A0D8               	btfss	status,0,c
 15501  002644  EF26  F013         	goto	u6571
 15502  002648  EF28  F013         	goto	u6570
 15503  00264C                     u6571:
 15504  00264C  EF2F  F013         	goto	l6759
 15505  002650                     u6570:
 15506  002650  B257               	btfsc	_flags^0,1,c
 15507  002652  EF2D  F013         	goto	u6581
 15508  002656  EF2F  F013         	goto	u6580
 15509  00265A                     u6581:
 15510  00265A  EF80  F012         	goto	l6739
 15511  00265E                     u6580:
 15512  00265E                     l6759:
 15513                           
 15514                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
 15515  00265E  C022  F017         	movff	utoa@fp,pad@fp
 15516  002662  C023  F018         	movff	utoa@fp+1,pad@fp+1
 15517  002666  0EDD               	movlw	low _dbuf
 15518  002668  2440               	addwf	utoa@i^0,w,c
 15519  00266A  6E19               	movwf	pad@buf^0,c
 15520  00266C  0E02               	movlw	high _dbuf
 15521  00266E  2041               	addwfc	(utoa@i+1)^0,w,c
 15522  002670  6E1A               	movwf	(pad@buf+1)^0,c
 15523  002672  C036  F01B         	movff	utoa@w,pad@p
 15524  002676  C037  F01C         	movff	utoa@w+1,pad@p+1
 15525  00267A  EC92  F01E         	call	_pad	;wreg free
 15526  00267E  C017  F022         	movff	?_pad,?_utoa
 15527  002682  C018  F023         	movff	?_pad+1,?_utoa+1
 15528  002686  0012               	return		;funcret
 15529  002688                     __end_of_utoa:
 15530                           	opt callstack 0
 15531                           
 15532 ;; *************** function ___lomod *****************
 15533 ;; Defined at:
 15534 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
 15535 ;; Parameters:    Size  Location     Type
 15536 ;;  dividend        8    4[COMRAM] unsigned long long 
 15537 ;;  divisor         8   12[COMRAM] unsigned long long 
 15538 ;; Auto vars:     Size  Location     Type
 15539 ;;  counter         1   20[COMRAM] unsigned char 
 15540 ;; Return value:  Size  Location     Type
 15541 ;;                  8    4[COMRAM] unsigned long long 
 15542 ;; Registers used:
 15543 ;;		wreg, status,2, status,0
 15544 ;; Tracked objects:
 15545 ;;		On entry : 0/0
 15546 ;;		On exit  : 0/0
 15547 ;;		Unchanged: 0/0
 15548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15549 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15550 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15552 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15553 ;;Total ram usage:       17 bytes
 15554 ;; Hardware stack levels used:    1
 15555 ;; Hardware stack levels required when called:    4
 15556 ;; This function calls:
 15557 ;;		Nothing
 15558 ;; This function is called by:
 15559 ;;		_utoa
 15560 ;; This function uses a non-reentrant model
 15561 ;;
 15562                           
 15563                           	psect	text58
 15564  003B90                     __ptext58:
 15565                           	opt callstack 0
 15566  003B90                     ___lomod:
 15567                           	opt callstack 22
 15568  003B90  500D               	movf	___lomod@divisor^0,w,c
 15569  003B92  100E               	iorwf	(___lomod@divisor+1)^0,w,c
 15570  003B94  100F               	iorwf	(___lomod@divisor+2)^0,w,c
 15571  003B96  1010               	iorwf	(___lomod@divisor+3)^0,w,c
 15572  003B98  1011               	iorwf	(___lomod@divisor+4)^0,w,c
 15573  003B9A  1012               	iorwf	(___lomod@divisor+5)^0,w,c
 15574  003B9C  1013               	iorwf	(___lomod@divisor+6)^0,w,c
 15575  003B9E  1014               	iorwf	(___lomod@divisor+7)^0,w,c
 15576  003BA0  B4D8               	btfsc	status,2,c
 15577  003BA2  EFD5  F01D         	goto	u6221
 15578  003BA6  EFD7  F01D         	goto	u6220
 15579  003BAA                     u6221:
 15580  003BAA  EF1F  F01E         	goto	l1795
 15581  003BAE                     u6220:
 15582  003BAE  0E01               	movlw	1
 15583  003BB0  6E15               	movwf	___lomod@counter^0,c
 15584  003BB2  EFE5  F01D         	goto	l6601
 15585  003BB6                     l6599:
 15586  003BB6  90D8               	bcf	status,0,c
 15587  003BB8  360D               	rlcf	___lomod@divisor^0,f,c
 15588  003BBA  360E               	rlcf	(___lomod@divisor+1)^0,f,c
 15589  003BBC  360F               	rlcf	(___lomod@divisor+2)^0,f,c
 15590  003BBE  3610               	rlcf	(___lomod@divisor+3)^0,f,c
 15591  003BC0  3611               	rlcf	(___lomod@divisor+4)^0,f,c
 15592  003BC2  3612               	rlcf	(___lomod@divisor+5)^0,f,c
 15593  003BC4  3613               	rlcf	(___lomod@divisor+6)^0,f,c
 15594  003BC6  3614               	rlcf	(___lomod@divisor+7)^0,f,c
 15595  003BC8  2A15               	incf	___lomod@counter^0,f,c
 15596  003BCA                     l6601:
 15597  003BCA  AE14               	btfss	(___lomod@divisor+7)^0,7,c
 15598  003BCC  EFEA  F01D         	goto	u6231
 15599  003BD0  EFEC  F01D         	goto	u6230
 15600  003BD4                     u6231:
 15601  003BD4  EFDB  F01D         	goto	l6599
 15602  003BD8                     u6230:
 15603  003BD8                     l6603:
 15604  003BD8  500D               	movf	___lomod@divisor^0,w,c
 15605  003BDA  5C05               	subwf	___lomod@dividend^0,w,c
 15606  003BDC  500E               	movf	(___lomod@divisor+1)^0,w,c
 15607  003BDE  5806               	subwfb	(___lomod@dividend+1)^0,w,c
 15608  003BE0  500F               	movf	(___lomod@divisor+2)^0,w,c
 15609  003BE2  5807               	subwfb	(___lomod@dividend+2)^0,w,c
 15610  003BE4  5010               	movf	(___lomod@divisor+3)^0,w,c
 15611  003BE6  5808               	subwfb	(___lomod@dividend+3)^0,w,c
 15612  003BE8  5011               	movf	(___lomod@divisor+4)^0,w,c
 15613  003BEA  5809               	subwfb	(___lomod@dividend+4)^0,w,c
 15614  003BEC  5012               	movf	(___lomod@divisor+5)^0,w,c
 15615  003BEE  580A               	subwfb	(___lomod@dividend+5)^0,w,c
 15616  003BF0  5013               	movf	(___lomod@divisor+6)^0,w,c
 15617  003BF2  580B               	subwfb	(___lomod@dividend+6)^0,w,c
 15618  003BF4  5014               	movf	(___lomod@divisor+7)^0,w,c
 15619  003BF6  580C               	subwfb	(___lomod@dividend+7)^0,w,c
 15620  003BF8  A0D8               	btfss	status,0,c
 15621  003BFA  EF01  F01E         	goto	u6241
 15622  003BFE  EF03  F01E         	goto	u6240
 15623  003C02                     u6241:
 15624  003C02  EF13  F01E         	goto	l6607
 15625  003C06                     u6240:
 15626  003C06  500D               	movf	___lomod@divisor^0,w,c
 15627  003C08  5E05               	subwf	___lomod@dividend^0,f,c
 15628  003C0A  500E               	movf	(___lomod@divisor+1)^0,w,c
 15629  003C0C  5A06               	subwfb	(___lomod@dividend+1)^0,f,c
 15630  003C0E  500F               	movf	(___lomod@divisor+2)^0,w,c
 15631  003C10  5A07               	subwfb	(___lomod@dividend+2)^0,f,c
 15632  003C12  5010               	movf	(___lomod@divisor+3)^0,w,c
 15633  003C14  5A08               	subwfb	(___lomod@dividend+3)^0,f,c
 15634  003C16  5011               	movf	(___lomod@divisor+4)^0,w,c
 15635  003C18  5A09               	subwfb	(___lomod@dividend+4)^0,f,c
 15636  003C1A  5012               	movf	(___lomod@divisor+5)^0,w,c
 15637  003C1C  5A0A               	subwfb	(___lomod@dividend+5)^0,f,c
 15638  003C1E  5013               	movf	(___lomod@divisor+6)^0,w,c
 15639  003C20  5A0B               	subwfb	(___lomod@dividend+6)^0,f,c
 15640  003C22  5014               	movf	(___lomod@divisor+7)^0,w,c
 15641  003C24  5A0C               	subwfb	(___lomod@dividend+7)^0,f,c
 15642  003C26                     l6607:
 15643  003C26  90D8               	bcf	status,0,c
 15644  003C28  3214               	rrcf	(___lomod@divisor+7)^0,f,c
 15645  003C2A  3213               	rrcf	(___lomod@divisor+6)^0,f,c
 15646  003C2C  3212               	rrcf	(___lomod@divisor+5)^0,f,c
 15647  003C2E  3211               	rrcf	(___lomod@divisor+4)^0,f,c
 15648  003C30  3210               	rrcf	(___lomod@divisor+3)^0,f,c
 15649  003C32  320F               	rrcf	(___lomod@divisor+2)^0,f,c
 15650  003C34  320E               	rrcf	(___lomod@divisor+1)^0,f,c
 15651  003C36  320D               	rrcf	___lomod@divisor^0,f,c
 15652  003C38  2E15               	decfsz	___lomod@counter^0,f,c
 15653  003C3A  EFEC  F01D         	goto	l6603
 15654  003C3E                     l1795:
 15655  003C3E  C005  F005         	movff	___lomod@dividend,?___lomod
 15656  003C42  C006  F006         	movff	___lomod@dividend+1,?___lomod+1
 15657  003C46  C007  F007         	movff	___lomod@dividend+2,?___lomod+2
 15658  003C4A  C008  F008         	movff	___lomod@dividend+3,?___lomod+3
 15659  003C4E  C009  F009         	movff	___lomod@dividend+4,?___lomod+4
 15660  003C52  C00A  F00A         	movff	___lomod@dividend+5,?___lomod+5
 15661  003C56  C00B  F00B         	movff	___lomod@dividend+6,?___lomod+6
 15662  003C5A  C00C  F00C         	movff	___lomod@dividend+7,?___lomod+7
 15663  003C5E  0012               	return		;funcret
 15664  003C60                     __end_of___lomod:
 15665                           	opt callstack 0
 15666                           
 15667 ;; *************** function ___lodiv *****************
 15668 ;; Defined at:
 15669 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
 15670 ;; Parameters:    Size  Location     Type
 15671 ;;  dividend        8    4[COMRAM] unsigned long long 
 15672 ;;  divisor         8   12[COMRAM] unsigned long long 
 15673 ;; Auto vars:     Size  Location     Type
 15674 ;;  quotient        8   20[COMRAM] unsigned long long 
 15675 ;;  counter         1   28[COMRAM] unsigned char 
 15676 ;; Return value:  Size  Location     Type
 15677 ;;                  8    4[COMRAM] unsigned long long 
 15678 ;; Registers used:
 15679 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15680 ;; Tracked objects:
 15681 ;;		On entry : 0/0
 15682 ;;		On exit  : 0/0
 15683 ;;		Unchanged: 0/0
 15684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15685 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15686 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15688 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15689 ;;Total ram usage:       25 bytes
 15690 ;; Hardware stack levels used:    1
 15691 ;; Hardware stack levels required when called:    4
 15692 ;; This function calls:
 15693 ;;		Nothing
 15694 ;; This function is called by:
 15695 ;;		_utoa
 15696 ;; This function uses a non-reentrant model
 15697 ;;
 15698                           
 15699                           	psect	text59
 15700  003816                     __ptext59:
 15701                           	opt callstack 0
 15702  003816                     ___lodiv:
 15703                           	opt callstack 22
 15704  003816  EE20  F015         	lfsr	2,___lodiv@quotient
 15705  00381A  0E07               	movlw	7
 15706  00381C                     u6181:
 15707  00381C  6ADE               	clrf	postinc2,c
 15708  00381E  06E8               	decf	wreg,f,c
 15709  003820  E2FD               	bc	u6181
 15710  003822  500D               	movf	___lodiv@divisor^0,w,c
 15711  003824  100E               	iorwf	(___lodiv@divisor+1)^0,w,c
 15712  003826  100F               	iorwf	(___lodiv@divisor+2)^0,w,c
 15713  003828  1010               	iorwf	(___lodiv@divisor+3)^0,w,c
 15714  00382A  1011               	iorwf	(___lodiv@divisor+4)^0,w,c
 15715  00382C  1012               	iorwf	(___lodiv@divisor+5)^0,w,c
 15716  00382E  1013               	iorwf	(___lodiv@divisor+6)^0,w,c
 15717  003830  1014               	iorwf	(___lodiv@divisor+7)^0,w,c
 15718  003832  B4D8               	btfsc	status,2,c
 15719  003834  EF1E  F01C         	goto	u6191
 15720  003838  EF20  F01C         	goto	u6190
 15721  00383C                     u6191:
 15722  00383C  EF72  F01C         	goto	l1785
 15723  003840                     u6190:
 15724  003840  0E01               	movlw	1
 15725  003842  6E1D               	movwf	___lodiv@counter^0,c
 15726  003844  EF2E  F01C         	goto	l6581
 15727  003848                     l6579:
 15728  003848  90D8               	bcf	status,0,c
 15729  00384A  360D               	rlcf	___lodiv@divisor^0,f,c
 15730  00384C  360E               	rlcf	(___lodiv@divisor+1)^0,f,c
 15731  00384E  360F               	rlcf	(___lodiv@divisor+2)^0,f,c
 15732  003850  3610               	rlcf	(___lodiv@divisor+3)^0,f,c
 15733  003852  3611               	rlcf	(___lodiv@divisor+4)^0,f,c
 15734  003854  3612               	rlcf	(___lodiv@divisor+5)^0,f,c
 15735  003856  3613               	rlcf	(___lodiv@divisor+6)^0,f,c
 15736  003858  3614               	rlcf	(___lodiv@divisor+7)^0,f,c
 15737  00385A  2A1D               	incf	___lodiv@counter^0,f,c
 15738  00385C                     l6581:
 15739  00385C  AE14               	btfss	(___lodiv@divisor+7)^0,7,c
 15740  00385E  EF33  F01C         	goto	u6201
 15741  003862  EF35  F01C         	goto	u6200
 15742  003866                     u6201:
 15743  003866  EF24  F01C         	goto	l6579
 15744  00386A                     u6200:
 15745  00386A                     l6583:
 15746  00386A  90D8               	bcf	status,0,c
 15747  00386C  3615               	rlcf	___lodiv@quotient^0,f,c
 15748  00386E  3616               	rlcf	(___lodiv@quotient+1)^0,f,c
 15749  003870  3617               	rlcf	(___lodiv@quotient+2)^0,f,c
 15750  003872  3618               	rlcf	(___lodiv@quotient+3)^0,f,c
 15751  003874  3619               	rlcf	(___lodiv@quotient+4)^0,f,c
 15752  003876  361A               	rlcf	(___lodiv@quotient+5)^0,f,c
 15753  003878  361B               	rlcf	(___lodiv@quotient+6)^0,f,c
 15754  00387A  361C               	rlcf	(___lodiv@quotient+7)^0,f,c
 15755  00387C  500D               	movf	___lodiv@divisor^0,w,c
 15756  00387E  5C05               	subwf	___lodiv@dividend^0,w,c
 15757  003880  500E               	movf	(___lodiv@divisor+1)^0,w,c
 15758  003882  5806               	subwfb	(___lodiv@dividend+1)^0,w,c
 15759  003884  500F               	movf	(___lodiv@divisor+2)^0,w,c
 15760  003886  5807               	subwfb	(___lodiv@dividend+2)^0,w,c
 15761  003888  5010               	movf	(___lodiv@divisor+3)^0,w,c
 15762  00388A  5808               	subwfb	(___lodiv@dividend+3)^0,w,c
 15763  00388C  5011               	movf	(___lodiv@divisor+4)^0,w,c
 15764  00388E  5809               	subwfb	(___lodiv@dividend+4)^0,w,c
 15765  003890  5012               	movf	(___lodiv@divisor+5)^0,w,c
 15766  003892  580A               	subwfb	(___lodiv@dividend+5)^0,w,c
 15767  003894  5013               	movf	(___lodiv@divisor+6)^0,w,c
 15768  003896  580B               	subwfb	(___lodiv@dividend+6)^0,w,c
 15769  003898  5014               	movf	(___lodiv@divisor+7)^0,w,c
 15770  00389A  580C               	subwfb	(___lodiv@dividend+7)^0,w,c
 15771  00389C  A0D8               	btfss	status,0,c
 15772  00389E  EF53  F01C         	goto	u6211
 15773  0038A2  EF55  F01C         	goto	u6210
 15774  0038A6                     u6211:
 15775  0038A6  EF66  F01C         	goto	l6591
 15776  0038AA                     u6210:
 15777  0038AA  500D               	movf	___lodiv@divisor^0,w,c
 15778  0038AC  5E05               	subwf	___lodiv@dividend^0,f,c
 15779  0038AE  500E               	movf	(___lodiv@divisor+1)^0,w,c
 15780  0038B0  5A06               	subwfb	(___lodiv@dividend+1)^0,f,c
 15781  0038B2  500F               	movf	(___lodiv@divisor+2)^0,w,c
 15782  0038B4  5A07               	subwfb	(___lodiv@dividend+2)^0,f,c
 15783  0038B6  5010               	movf	(___lodiv@divisor+3)^0,w,c
 15784  0038B8  5A08               	subwfb	(___lodiv@dividend+3)^0,f,c
 15785  0038BA  5011               	movf	(___lodiv@divisor+4)^0,w,c
 15786  0038BC  5A09               	subwfb	(___lodiv@dividend+4)^0,f,c
 15787  0038BE  5012               	movf	(___lodiv@divisor+5)^0,w,c
 15788  0038C0  5A0A               	subwfb	(___lodiv@dividend+5)^0,f,c
 15789  0038C2  5013               	movf	(___lodiv@divisor+6)^0,w,c
 15790  0038C4  5A0B               	subwfb	(___lodiv@dividend+6)^0,f,c
 15791  0038C6  5014               	movf	(___lodiv@divisor+7)^0,w,c
 15792  0038C8  5A0C               	subwfb	(___lodiv@dividend+7)^0,f,c
 15793  0038CA  8015               	bsf	___lodiv@quotient^0,0,c
 15794  0038CC                     l6591:
 15795  0038CC  90D8               	bcf	status,0,c
 15796  0038CE  3214               	rrcf	(___lodiv@divisor+7)^0,f,c
 15797  0038D0  3213               	rrcf	(___lodiv@divisor+6)^0,f,c
 15798  0038D2  3212               	rrcf	(___lodiv@divisor+5)^0,f,c
 15799  0038D4  3211               	rrcf	(___lodiv@divisor+4)^0,f,c
 15800  0038D6  3210               	rrcf	(___lodiv@divisor+3)^0,f,c
 15801  0038D8  320F               	rrcf	(___lodiv@divisor+2)^0,f,c
 15802  0038DA  320E               	rrcf	(___lodiv@divisor+1)^0,f,c
 15803  0038DC  320D               	rrcf	___lodiv@divisor^0,f,c
 15804  0038DE  2E1D               	decfsz	___lodiv@counter^0,f,c
 15805  0038E0  EF35  F01C         	goto	l6583
 15806  0038E4                     l1785:
 15807  0038E4  C015  F005         	movff	___lodiv@quotient,?___lodiv
 15808  0038E8  C016  F006         	movff	___lodiv@quotient+1,?___lodiv+1
 15809  0038EC  C017  F007         	movff	___lodiv@quotient+2,?___lodiv+2
 15810  0038F0  C018  F008         	movff	___lodiv@quotient+3,?___lodiv+3
 15811  0038F4  C019  F009         	movff	___lodiv@quotient+4,?___lodiv+4
 15812  0038F8  C01A  F00A         	movff	___lodiv@quotient+5,?___lodiv+5
 15813  0038FC  C01B  F00B         	movff	___lodiv@quotient+6,?___lodiv+6
 15814  003900  C01C  F00C         	movff	___lodiv@quotient+7,?___lodiv+7
 15815  003904  0012               	return		;funcret
 15816  003906                     __end_of___lodiv:
 15817                           	opt callstack 0
 15818                           
 15819 ;; *************** function _stoa *****************
 15820 ;; Defined at:
 15821 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 15822 ;; Parameters:    Size  Location     Type
 15823 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
 15824 ;;		 -> NULL(0), 
 15825 ;;  s               2   17[COMRAM] PTR unsigned char 
 15826 ;;		 -> ?_printf(2), ValidateCmd@ConfName_1565(20), ValidateCmd@ConfName_1561(20), ValidateCmd@ConfName(20), 
 15827 ;;		 -> STR_93(9), STR_92(12), InitialiseString@RevNum(2), InitialiseString@PartNum(19), 
 15828 ;;		 -> InitialiseString@SerialNum(11), Command(16), 
 15829 ;; Auto vars:     Size  Location     Type
 15830 ;;  nuls            7   20[COMRAM] unsigned char [7]
 15831 ;;  l               2   35[COMRAM] int 
 15832 ;;  p               2   33[COMRAM] int 
 15833 ;;  cp              2   31[COMRAM] PTR unsigned char 
 15834 ;;		 -> ?_printf(2), stoa@nuls(7), ValidateCmd@ConfName_1565(20), ValidateCmd@ConfName_1561(20), 
 15835 ;;		 -> ValidateCmd@ConfName(20), STR_93(9), STR_92(12), InitialiseString@RevNum(2), 
 15836 ;;		 -> InitialiseString@PartNum(19), InitialiseString@SerialNum(11), Command(16), 
 15837 ;;  w               2   29[COMRAM] int 
 15838 ;;  i               2   27[COMRAM] int 
 15839 ;; Return value:  Size  Location     Type
 15840 ;;                  2   15[COMRAM] int 
 15841 ;; Registers used:
 15842 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15843 ;; Tracked objects:
 15844 ;;		On entry : 0/0
 15845 ;;		On exit  : 0/0
 15846 ;;		Unchanged: 0/0
 15847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15848 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15849 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15850 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15851 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15852 ;;Total ram usage:       22 bytes
 15853 ;; Hardware stack levels used:    1
 15854 ;; Hardware stack levels required when called:    7
 15855 ;; This function calls:
 15856 ;;		_fputc
 15857 ;;		_strlen
 15858 ;; This function is called by:
 15859 ;;		_vfpfcnvrt
 15860 ;; This function uses a non-reentrant model
 15861 ;;
 15862                           
 15863                           	psect	text60
 15864  002BE4                     __ptext60:
 15865                           	opt callstack 0
 15866  002BE4                     _stoa:
 15867                           	opt callstack 20
 15868  002BE4                     
 15869                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
 15870  002BE4  EE21  F086         	lfsr	2,stoa@F1139
 15871  002BE8  EE10  F015         	lfsr	1,stoa@nuls
 15872  002BEC  0E06               	movlw	6
 15873  002BEE                     u6421:
 15874  002BEE  CFDB FFE3          	movff	plusw2,plusw1
 15875  002BF2  06E8               	decf	wreg,f,c
 15876  002BF4  E2FC               	bc	u6421
 15877  002BF6                     
 15878                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
 15879  002BF6  C012  F020         	movff	stoa@s,stoa@cp
 15880  002BFA  C013  F021         	movff	stoa@s+1,stoa@cp+1
 15881  002BFE                     
 15882                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
 15883  002BFE  5020               	movf	stoa@cp^0,w,c
 15884  002C00  1021               	iorwf	(stoa@cp+1)^0,w,c
 15885  002C02  A4D8               	btfss	status,2,c
 15886  002C04  EF06  F016         	goto	u6431
 15887  002C08  EF08  F016         	goto	u6430
 15888  002C0C                     u6431:
 15889  002C0C  EF0C  F016         	goto	l6693
 15890  002C10                     u6430:
 15891  002C10                     
 15892                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
 15893  002C10  0E15               	movlw	low stoa@nuls
 15894  002C12  6E20               	movwf	stoa@cp^0,c
 15895  002C14  0E00               	movlw	high stoa@nuls
 15896  002C16  6E21               	movwf	(stoa@cp+1)^0,c
 15897  002C18                     l6693:
 15898                           
 15899                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
 15900  002C18  C020  F005         	movff	stoa@cp,strlen@s
 15901  002C1C  C021  F006         	movff	stoa@cp+1,strlen@s+1
 15902  002C20  ECEE  F023         	call	_strlen	;wreg free
 15903  002C24  C005  F024         	movff	?_strlen,stoa@l
 15904  002C28  C006  F025         	movff	?_strlen+1,stoa@l+1
 15905  002C2C                     
 15906                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
 15907  002C2C  C0D1  F022         	movff	_prec,stoa@p
 15908  002C30  C0D2  F023         	movff	_prec+1,stoa@p+1
 15909  002C34                     
 15910                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
 15911  002C34  BE23               	btfsc	(stoa@p+1)^0,7,c
 15912  002C36  EF1F  F016         	goto	u6441
 15913  002C3A  EF21  F016         	goto	u6440
 15914  002C3E                     u6441:
 15915  002C3E  EF36  F016         	goto	l1244
 15916  002C42                     u6440:
 15917  002C42  5024               	movf	stoa@l^0,w,c
 15918  002C44  5C22               	subwf	stoa@p^0,w,c
 15919  002C46  5023               	movf	(stoa@p+1)^0,w,c
 15920  002C48  0A80               	xorlw	128
 15921  002C4A  6E14               	movwf	??_stoa^0,c
 15922  002C4C  5025               	movf	(stoa@l+1)^0,w,c
 15923  002C4E  0A80               	xorlw	128
 15924  002C50  5814               	subwfb	??_stoa^0,w,c
 15925  002C52  A0D8               	btfss	status,0,c
 15926  002C54  EF2E  F016         	goto	u6451
 15927  002C58  EF30  F016         	goto	u6450
 15928  002C5C                     u6451:
 15929  002C5C  EF32  F016         	goto	l1242
 15930  002C60                     u6450:
 15931  002C60  EF36  F016         	goto	l1244
 15932  002C64                     l1242:
 15933  002C64  C022  F024         	movff	stoa@p,stoa@l
 15934  002C68  C023  F025         	movff	stoa@p+1,stoa@l+1
 15935  002C6C                     l1244:
 15936                           
 15937                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
 15938  002C6C  C024  F022         	movff	stoa@l,stoa@p
 15939  002C70  C025  F023         	movff	stoa@l+1,stoa@p+1
 15940                           
 15941                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
 15942  002C74  C0CF  F01E         	movff	_width,stoa@w
 15943  002C78  C0D0  F01F         	movff	_width+1,stoa@w+1
 15944                           
 15945                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
 15946  002C7C  B057               	btfsc	_flags^0,0,c
 15947  002C7E  EF43  F016         	goto	u6461
 15948  002C82  EF45  F016         	goto	u6460
 15949  002C86                     u6461:
 15950  002C86  EF62  F016         	goto	l6709
 15951  002C8A                     u6460:
 15952  002C8A  EF53  F016         	goto	l6707
 15953  002C8E                     l6703:
 15954                           
 15955                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
 15956  002C8E  0E00               	movlw	0
 15957  002C90  6E08               	movwf	(fputc@c+1)^0,c
 15958  002C92  0E20               	movlw	32
 15959  002C94  6E07               	movwf	fputc@c^0,c
 15960  002C96  C010  F009         	movff	stoa@fp,fputc@fp
 15961  002C9A  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
 15962  002C9E  EC63  F020         	call	_fputc	;wreg free
 15963  002CA2                     
 15964                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
 15965  002CA2  4A24               	infsnz	stoa@l^0,f,c
 15966  002CA4  2A25               	incf	(stoa@l+1)^0,f,c
 15967  002CA6                     l6707:
 15968                           
 15969                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
 15970  002CA6  501E               	movf	stoa@w^0,w,c
 15971  002CA8  5C24               	subwf	stoa@l^0,w,c
 15972  002CAA  5025               	movf	(stoa@l+1)^0,w,c
 15973  002CAC  0A80               	xorlw	128
 15974  002CAE  6E14               	movwf	??_stoa^0,c
 15975  002CB0  501F               	movf	(stoa@w+1)^0,w,c
 15976  002CB2  0A80               	xorlw	128
 15977  002CB4  5814               	subwfb	??_stoa^0,w,c
 15978  002CB6  A0D8               	btfss	status,0,c
 15979  002CB8  EF60  F016         	goto	u6471
 15980  002CBC  EF62  F016         	goto	u6470
 15981  002CC0                     u6471:
 15982  002CC0  EF47  F016         	goto	l6703
 15983  002CC4                     u6470:
 15984  002CC4                     l6709:
 15985                           
 15986                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
 15987  002CC4  0E00               	movlw	0
 15988  002CC6  6E1D               	movwf	(stoa@i+1)^0,c
 15989  002CC8  0E00               	movlw	0
 15990  002CCA  6E1C               	movwf	stoa@i^0,c
 15991                           
 15992                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 15993  002CCC  EF87  F016         	goto	l6717
 15994  002CD0                     l6711:
 15995                           
 15996                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
 15997  002CD0  C020  FFF6         	movff	stoa@cp,tblptrl
 15998  002CD4  C021  FFF7         	movff	stoa@cp+1,tblptrh
 15999  002CD8  0E00               	movlw	low (__mediumconst shr (0+16))
 16000  002CDA  6EF8               	movwf	tblptru,c
 16001  002CDC  0E0E               	movlw	(high __ramtop+-1)
 16002  002CDE  64F7               	cpfsgt	tblptrh,c
 16003  002CE0  D003               	bra	u6487
 16004  002CE2  0008               	tblrd		*
 16005  002CE4  50F5               	movf	tablat,w,c
 16006  002CE6  D005               	bra	u6480
 16007  002CE8                     u6487:
 16008  002CE8  CFF6 FFE9          	movff	tblptrl,fsr0l
 16009  002CEC  CFF7 FFEA          	movff	tblptrh,fsr0h
 16010  002CF0  50EF               	movf	indf0,w,c
 16011  002CF2                     u6480:
 16012  002CF2  6E14               	movwf	??_stoa^0,c
 16013  002CF4  5014               	movf	??_stoa^0,w,c
 16014  002CF6  6E07               	movwf	fputc@c^0,c
 16015  002CF8  6A08               	clrf	(fputc@c+1)^0,c
 16016  002CFA  C010  F009         	movff	stoa@fp,fputc@fp
 16017  002CFE  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
 16018  002D02  EC63  F020         	call	_fputc	;wreg free
 16019  002D06                     
 16020                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
 16021  002D06  4A20               	infsnz	stoa@cp^0,f,c
 16022  002D08  2A21               	incf	(stoa@cp+1)^0,f,c
 16023  002D0A                     
 16024                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
 16025  002D0A  4A1C               	infsnz	stoa@i^0,f,c
 16026  002D0C  2A1D               	incf	(stoa@i+1)^0,f,c
 16027  002D0E                     l6717:
 16028                           
 16029                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 16030  002D0E  5022               	movf	stoa@p^0,w,c
 16031  002D10  5C1C               	subwf	stoa@i^0,w,c
 16032  002D12  501D               	movf	(stoa@i+1)^0,w,c
 16033  002D14  0A80               	xorlw	128
 16034  002D16  6E14               	movwf	??_stoa^0,c
 16035  002D18  5023               	movf	(stoa@p+1)^0,w,c
 16036  002D1A  0A80               	xorlw	128
 16037  002D1C  5814               	subwfb	??_stoa^0,w,c
 16038  002D1E  A0D8               	btfss	status,0,c
 16039  002D20  EF94  F016         	goto	u6491
 16040  002D24  EF96  F016         	goto	u6490
 16041  002D28                     u6491:
 16042  002D28  EF68  F016         	goto	l6711
 16043  002D2C                     u6490:
 16044  002D2C                     
 16045                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
 16046  002D2C  A057               	btfss	_flags^0,0,c
 16047  002D2E  EF9B  F016         	goto	u6501
 16048  002D32  EF9D  F016         	goto	u6500
 16049  002D36                     u6501:
 16050  002D36  EFBA  F016         	goto	l1254
 16051  002D3A                     u6500:
 16052  002D3A  EFAB  F016         	goto	l6725
 16053  002D3E                     l6721:
 16054                           
 16055                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
 16056  002D3E  0E00               	movlw	0
 16057  002D40  6E08               	movwf	(fputc@c+1)^0,c
 16058  002D42  0E20               	movlw	32
 16059  002D44  6E07               	movwf	fputc@c^0,c
 16060  002D46  C010  F009         	movff	stoa@fp,fputc@fp
 16061  002D4A  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
 16062  002D4E  EC63  F020         	call	_fputc	;wreg free
 16063  002D52                     
 16064                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
 16065  002D52  4A24               	infsnz	stoa@l^0,f,c
 16066  002D54  2A25               	incf	(stoa@l+1)^0,f,c
 16067  002D56                     l6725:
 16068                           
 16069                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
 16070  002D56  501E               	movf	stoa@w^0,w,c
 16071  002D58  5C24               	subwf	stoa@l^0,w,c
 16072  002D5A  5025               	movf	(stoa@l+1)^0,w,c
 16073  002D5C  0A80               	xorlw	128
 16074  002D5E  6E14               	movwf	??_stoa^0,c
 16075  002D60  501F               	movf	(stoa@w+1)^0,w,c
 16076  002D62  0A80               	xorlw	128
 16077  002D64  5814               	subwfb	??_stoa^0,w,c
 16078  002D66  A0D8               	btfss	status,0,c
 16079  002D68  EFB8  F016         	goto	u6511
 16080  002D6C  EFBA  F016         	goto	u6510
 16081  002D70                     u6511:
 16082  002D70  EF9F  F016         	goto	l6721
 16083  002D74                     u6510:
 16084  002D74                     l1254:
 16085                           
 16086                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
 16087  002D74  C024  F010         	movff	stoa@l,?_stoa
 16088  002D78  C025  F011         	movff	stoa@l+1,?_stoa+1
 16089  002D7C  0012               	return		;funcret
 16090  002D7E                     __end_of_stoa:
 16091                           	opt callstack 0
 16092                           
 16093 ;; *************** function _dtoa *****************
 16094 ;; Defined at:
 16095 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 16096 ;; Parameters:    Size  Location     Type
 16097 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
 16098 ;;		 -> NULL(0), 
 16099 ;;  d               8   35[COMRAM] long long 
 16100 ;; Auto vars:     Size  Location     Type
 16101 ;;  n               8   59[COMRAM] long long 
 16102 ;;  i               2   67[COMRAM] int 
 16103 ;;  s               2   57[COMRAM] int 
 16104 ;;  w               2   55[COMRAM] int 
 16105 ;;  p               2   53[COMRAM] int 
 16106 ;; Return value:  Size  Location     Type
 16107 ;;                  2   33[COMRAM] int 
 16108 ;; Registers used:
 16109 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16110 ;; Tracked objects:
 16111 ;;		On entry : 0/0
 16112 ;;		On exit  : 0/0
 16113 ;;		Unchanged: 0/0
 16114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16115 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16116 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16117 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16118 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16119 ;;Total ram usage:       36 bytes
 16120 ;; Hardware stack levels used:    1
 16121 ;; Hardware stack levels required when called:    9
 16122 ;; This function calls:
 16123 ;;		___aodiv
 16124 ;;		___aomod
 16125 ;;		_abs
 16126 ;;		_pad
 16127 ;; This function is called by:
 16128 ;;		_vfpfcnvrt
 16129 ;; This function uses a non-reentrant model
 16130 ;;
 16131                           
 16132                           	psect	text61
 16133  0019D6                     __ptext61:
 16134                           	opt callstack 0
 16135  0019D6                     _dtoa:
 16136                           	opt callstack 18
 16137  0019D6                     
 16138                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
 16139  0019D6  C024  F03C         	movff	dtoa@d,dtoa@n
 16140  0019DA  C025  F03D         	movff	dtoa@d+1,dtoa@n+1
 16141  0019DE  C026  F03E         	movff	dtoa@d+2,dtoa@n+2
 16142  0019E2  C027  F03F         	movff	dtoa@d+3,dtoa@n+3
 16143  0019E6  C028  F040         	movff	dtoa@d+4,dtoa@n+4
 16144  0019EA  C029  F041         	movff	dtoa@d+5,dtoa@n+5
 16145  0019EE  C02A  F042         	movff	dtoa@d+6,dtoa@n+6
 16146  0019F2  C02B  F043         	movff	dtoa@d+7,dtoa@n+7
 16147  0019F6                     
 16148                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 16149  0019F6  BE43               	btfsc	(dtoa@n+7)^0,7,c
 16150  0019F8  EF00  F00D         	goto	u6271
 16151  0019FC  EF03  F00D         	goto	u6270
 16152  001A00                     u6271:
 16153  001A00  0E01               	movlw	1
 16154  001A02  EF04  F00D         	goto	u6280
 16155  001A06                     u6270:
 16156  001A06  0E00               	movlw	0
 16157  001A08                     u6280:
 16158  001A08  6E3A               	movwf	dtoa@s^0,c
 16159  001A0A  6A3B               	clrf	(dtoa@s+1)^0,c
 16160                           
 16161                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 16162  001A0C  503A               	movf	dtoa@s^0,w,c
 16163  001A0E  103B               	iorwf	(dtoa@s+1)^0,w,c
 16164  001A10  B4D8               	btfsc	status,2,c
 16165  001A12  EF0D  F00D         	goto	u6291
 16166  001A16  EF0F  F00D         	goto	u6290
 16167  001A1A                     u6291:
 16168  001A1A  EF1F  F00D         	goto	l6629
 16169  001A1E                     u6290:
 16170  001A1E                     
 16171                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 16172  001A1E  1E43               	comf	(dtoa@n+7)^0,f,c
 16173  001A20  1E42               	comf	(dtoa@n+6)^0,f,c
 16174  001A22  1E41               	comf	(dtoa@n+5)^0,f,c
 16175  001A24  1E40               	comf	(dtoa@n+4)^0,f,c
 16176  001A26  1E3F               	comf	(dtoa@n+3)^0,f,c
 16177  001A28  1E3E               	comf	(dtoa@n+2)^0,f,c
 16178  001A2A  1E3D               	comf	(dtoa@n+1)^0,f,c
 16179  001A2C  6C3C               	negf	dtoa@n^0,c
 16180  001A2E  0E00               	movlw	0
 16181  001A30  223D               	addwfc	(dtoa@n+1)^0,f,c
 16182  001A32  223E               	addwfc	(dtoa@n+2)^0,f,c
 16183  001A34  223F               	addwfc	(dtoa@n+3)^0,f,c
 16184  001A36  2240               	addwfc	(dtoa@n+4)^0,f,c
 16185  001A38  2241               	addwfc	(dtoa@n+5)^0,f,c
 16186  001A3A  2242               	addwfc	(dtoa@n+6)^0,f,c
 16187  001A3C  2243               	addwfc	(dtoa@n+7)^0,f,c
 16188  001A3E                     l6629:
 16189                           
 16190                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 16191  001A3E  0100               	movlb	0	; () banked
 16192  001A40  BFD2               	btfsc	(_prec+1)& (0+255),7,b
 16193  001A42  EF25  F00D         	goto	u6301
 16194  001A46  EF27  F00D         	goto	u6300
 16195  001A4A                     u6301:
 16196  001A4A  EF28  F00D         	goto	l6633
 16197  001A4E                     u6300:
 16198  001A4E                     
 16199                           ; BSR set to: 0
 16200                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 16201  001A4E  9257               	bcf	_flags^0,1,c
 16202  001A50                     l6633:
 16203                           
 16204                           ; BSR set to: 0
 16205                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 16206  001A50  BFD2               	btfsc	(_prec+1)& (0+255),7,b
 16207  001A52  EF35  F00D         	goto	u6310
 16208  001A56  51D2               	movf	(_prec+1)& (0+255),w,b
 16209  001A58  E106               	bnz	u6311
 16210  001A5A  05D1               	decf	_prec& (0+255),w,b
 16211  001A5C  B0D8               	btfsc	status,0,c
 16212  001A5E  EF33  F00D         	goto	u6311
 16213  001A62  EF35  F00D         	goto	u6310
 16214  001A66                     u6311:
 16215  001A66  EF3B  F00D         	goto	l1215
 16216  001A6A                     u6310:
 16217  001A6A                     
 16218                           ; BSR set to: 0
 16219  001A6A  0E00               	movlw	0
 16220  001A6C  6E37               	movwf	(dtoa@p+1)^0,c
 16221  001A6E  0E01               	movlw	1
 16222  001A70  6E36               	movwf	dtoa@p^0,c
 16223  001A72  EF3F  F00D         	goto	l1217
 16224  001A76                     l1215:
 16225                           
 16226                           ; BSR set to: 0
 16227  001A76  C0D1  F036         	movff	_prec,dtoa@p
 16228  001A7A  C0D2  F037         	movff	_prec+1,dtoa@p+1
 16229  001A7E                     l1217:
 16230                           
 16231                           ; BSR set to: 0
 16232                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 16233  001A7E  C0CF  F038         	movff	_width,dtoa@w
 16234  001A82  C0D0  F039         	movff	_width+1,dtoa@w+1
 16235  001A86                     
 16236                           ; BSR set to: 0
 16237                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 16238  001A86  503A               	movf	dtoa@s^0,w,c
 16239  001A88  103B               	iorwf	(dtoa@s+1)^0,w,c
 16240  001A8A  A4D8               	btfss	status,2,c
 16241  001A8C  EF4A  F00D         	goto	u6321
 16242  001A90  EF4C  F00D         	goto	u6320
 16243  001A94                     u6321:
 16244  001A94  EF53  F00D         	goto	l6641
 16245  001A98                     u6320:
 16246  001A98                     
 16247                           ; BSR set to: 0
 16248  001A98  A457               	btfss	_flags^0,2,c
 16249  001A9A  EF51  F00D         	goto	u6331
 16250  001A9E  EF53  F00D         	goto	u6330
 16251  001AA2                     u6331:
 16252  001AA2  EF56  F00D         	goto	l6643
 16253  001AA6                     u6330:
 16254  001AA6                     l6641:
 16255                           
 16256                           ; BSR set to: 0
 16257                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 16258  001AA6  0638               	decf	dtoa@w^0,f,c
 16259  001AA8  A0D8               	btfss	status,0,c
 16260  001AAA  0639               	decf	(dtoa@w+1)^0,f,c
 16261  001AAC                     l6643:
 16262                           
 16263                           ; BSR set to: 0
 16264                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 16265  001AAC  0E00               	movlw	0
 16266  001AAE  6E45               	movwf	(dtoa@i+1)^0,c
 16267  001AB0  0E1F               	movlw	31
 16268  001AB2  6E44               	movwf	dtoa@i^0,c
 16269  001AB4                     
 16270                           ; BSR set to: 0
 16271                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 16272  001AB4  0E00               	movlw	0
 16273  001AB6  0102               	movlb	2	; () banked
 16274  001AB8  6FFC               	movwf	(_dbuf+31)& (0+255),b
 16275                           
 16276                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16277  001ABA  EFDB  F00D         	goto	l6657
 16278  001ABE                     l6647:
 16279                           
 16280                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 16281  001ABE  0644               	decf	dtoa@i^0,f,c
 16282  001AC0  A0D8               	btfss	status,0,c
 16283  001AC2  0645               	decf	(dtoa@i+1)^0,f,c
 16284  001AC4                     
 16285                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 16286  001AC4  0EDD               	movlw	low _dbuf
 16287  001AC6  2444               	addwf	dtoa@i^0,w,c
 16288  001AC8  6ED9               	movwf	fsr2l,c
 16289  001ACA  0E02               	movlw	high _dbuf
 16290  001ACC  2045               	addwfc	(dtoa@i+1)^0,w,c
 16291  001ACE  6EDA               	movwf	fsr2h,c
 16292  001AD0  C03C  F005         	movff	dtoa@n,___aomod@dividend
 16293  001AD4  C03D  F006         	movff	dtoa@n+1,___aomod@dividend+1
 16294  001AD8  C03E  F007         	movff	dtoa@n+2,___aomod@dividend+2
 16295  001ADC  C03F  F008         	movff	dtoa@n+3,___aomod@dividend+3
 16296  001AE0  C040  F009         	movff	dtoa@n+4,___aomod@dividend+4
 16297  001AE4  C041  F00A         	movff	dtoa@n+5,___aomod@dividend+5
 16298  001AE8  C042  F00B         	movff	dtoa@n+6,___aomod@dividend+6
 16299  001AEC  C043  F00C         	movff	dtoa@n+7,___aomod@dividend+7
 16300  001AF0  0E0A               	movlw	10
 16301  001AF2  6E0D               	movwf	___aomod@divisor^0,c
 16302  001AF4  0E00               	movlw	0
 16303  001AF6  6E0E               	movwf	(___aomod@divisor+1)^0,c
 16304  001AF8  0E00               	movlw	0
 16305  001AFA  6E0F               	movwf	(___aomod@divisor+2)^0,c
 16306  001AFC  0E00               	movlw	0
 16307  001AFE  6E10               	movwf	(___aomod@divisor+3)^0,c
 16308  001B00  0E00               	movlw	0
 16309  001B02  6E11               	movwf	(___aomod@divisor+4)^0,c
 16310  001B04  0E00               	movlw	0
 16311  001B06  6E12               	movwf	(___aomod@divisor+5)^0,c
 16312  001B08  0E00               	movlw	0
 16313  001B0A  6E13               	movwf	(___aomod@divisor+6)^0,c
 16314  001B0C  0E00               	movlw	0
 16315  001B0E  6E14               	movwf	(___aomod@divisor+7)^0,c
 16316  001B10  EC0E  F019         	call	___aomod	;wreg free
 16317  001B14  C005  F02C         	movff	?___aomod,??_dtoa
 16318  001B18  C006  F02D         	movff	?___aomod+1,??_dtoa+1
 16319  001B1C  C007  F02E         	movff	?___aomod+2,??_dtoa+2
 16320  001B20  C008  F02F         	movff	?___aomod+3,??_dtoa+3
 16321  001B24  C009  F030         	movff	?___aomod+4,??_dtoa+4
 16322  001B28  C00A  F031         	movff	?___aomod+5,??_dtoa+5
 16323  001B2C  C00B  F032         	movff	?___aomod+6,??_dtoa+6
 16324  001B30  C00C  F033         	movff	?___aomod+7,??_dtoa+7
 16325  001B34  C02C  F017         	movff	??_dtoa,abs@a
 16326  001B38  C02E  F018         	movff	??_dtoa+2,abs@a+1
 16327  001B3C  EC4C  F025         	call	_abs	;wreg free
 16328  001B40  5017               	movf	?_abs^0,w,c
 16329  001B42  0F30               	addlw	48
 16330  001B44  6EDF               	movwf	indf2,c
 16331  001B46                     
 16332                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 16333  001B46  0636               	decf	dtoa@p^0,f,c
 16334  001B48  A0D8               	btfss	status,0,c
 16335  001B4A  0637               	decf	(dtoa@p+1)^0,f,c
 16336  001B4C                     
 16337                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 16338  001B4C  0638               	decf	dtoa@w^0,f,c
 16339  001B4E  A0D8               	btfss	status,0,c
 16340  001B50  0639               	decf	(dtoa@w+1)^0,f,c
 16341  001B52                     
 16342                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 16343  001B52  C03C  F005         	movff	dtoa@n,___aodiv@dividend
 16344  001B56  C03D  F006         	movff	dtoa@n+1,___aodiv@dividend+1
 16345  001B5A  C03E  F007         	movff	dtoa@n+2,___aodiv@dividend+2
 16346  001B5E  C03F  F008         	movff	dtoa@n+3,___aodiv@dividend+3
 16347  001B62  C040  F009         	movff	dtoa@n+4,___aodiv@dividend+4
 16348  001B66  C041  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
 16349  001B6A  C042  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
 16350  001B6E  C043  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
 16351  001B72  0E0A               	movlw	10
 16352  001B74  6E0D               	movwf	___aodiv@divisor^0,c
 16353  001B76  0E00               	movlw	0
 16354  001B78  6E0E               	movwf	(___aodiv@divisor+1)^0,c
 16355  001B7A  0E00               	movlw	0
 16356  001B7C  6E0F               	movwf	(___aodiv@divisor+2)^0,c
 16357  001B7E  0E00               	movlw	0
 16358  001B80  6E10               	movwf	(___aodiv@divisor+3)^0,c
 16359  001B82  0E00               	movlw	0
 16360  001B84  6E11               	movwf	(___aodiv@divisor+4)^0,c
 16361  001B86  0E00               	movlw	0
 16362  001B88  6E12               	movwf	(___aodiv@divisor+5)^0,c
 16363  001B8A  0E00               	movlw	0
 16364  001B8C  6E13               	movwf	(___aodiv@divisor+6)^0,c
 16365  001B8E  0E00               	movlw	0
 16366  001B90  6E14               	movwf	(___aodiv@divisor+7)^0,c
 16367  001B92  EC8C  F017         	call	___aodiv	;wreg free
 16368  001B96  C005  F03C         	movff	?___aodiv,dtoa@n
 16369  001B9A  C006  F03D         	movff	?___aodiv+1,dtoa@n+1
 16370  001B9E  C007  F03E         	movff	?___aodiv+2,dtoa@n+2
 16371  001BA2  C008  F03F         	movff	?___aodiv+3,dtoa@n+3
 16372  001BA6  C009  F040         	movff	?___aodiv+4,dtoa@n+4
 16373  001BAA  C00A  F041         	movff	?___aodiv+5,dtoa@n+5
 16374  001BAE  C00B  F042         	movff	?___aodiv+6,dtoa@n+6
 16375  001BB2  C00C  F043         	movff	?___aodiv+7,dtoa@n+7
 16376  001BB6                     l6657:
 16377                           
 16378                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16379  001BB6  BE45               	btfsc	(dtoa@i+1)^0,7,c
 16380  001BB8  EFE6  F00D         	goto	u6341
 16381  001BBC  5045               	movf	(dtoa@i+1)^0,w,c
 16382  001BBE  E108               	bnz	u6340
 16383  001BC0  0444               	decf	dtoa@i^0,w,c
 16384  001BC2  A0D8               	btfss	status,0,c
 16385  001BC4  EFE6  F00D         	goto	u6341
 16386  001BC8  EFE8  F00D         	goto	u6340
 16387  001BCC                     u6341:
 16388  001BCC  EF18  F00E         	goto	l6667
 16389  001BD0                     u6340:
 16390  001BD0  503C               	movf	dtoa@n^0,w,c
 16391  001BD2  103D               	iorwf	(dtoa@n+1)^0,w,c
 16392  001BD4  103E               	iorwf	(dtoa@n+2)^0,w,c
 16393  001BD6  103F               	iorwf	(dtoa@n+3)^0,w,c
 16394  001BD8  1040               	iorwf	(dtoa@n+4)^0,w,c
 16395  001BDA  1041               	iorwf	(dtoa@n+5)^0,w,c
 16396  001BDC  1042               	iorwf	(dtoa@n+6)^0,w,c
 16397  001BDE  1043               	iorwf	(dtoa@n+7)^0,w,c
 16398  001BE0  A4D8               	btfss	status,2,c
 16399  001BE2  EFF5  F00D         	goto	u6351
 16400  001BE6  EFF7  F00D         	goto	u6350
 16401  001BEA                     u6351:
 16402  001BEA  EF5F  F00D         	goto	l6647
 16403  001BEE                     u6350:
 16404  001BEE  BE37               	btfsc	(dtoa@p+1)^0,7,c
 16405  001BF0  EF04  F00E         	goto	u6360
 16406  001BF4  5037               	movf	(dtoa@p+1)^0,w,c
 16407  001BF6  E106               	bnz	u6361
 16408  001BF8  0436               	decf	dtoa@p^0,w,c
 16409  001BFA  B0D8               	btfsc	status,0,c
 16410  001BFC  EF02  F00E         	goto	u6361
 16411  001C00  EF04  F00E         	goto	u6360
 16412  001C04                     u6361:
 16413  001C04  EF5F  F00D         	goto	l6647
 16414  001C08                     u6360:
 16415  001C08  BE39               	btfsc	(dtoa@w+1)^0,7,c
 16416  001C0A  EF0F  F00E         	goto	u6371
 16417  001C0E  5039               	movf	(dtoa@w+1)^0,w,c
 16418  001C10  E108               	bnz	u6370
 16419  001C12  0438               	decf	dtoa@w^0,w,c
 16420  001C14  A0D8               	btfss	status,0,c
 16421  001C16  EF0F  F00E         	goto	u6371
 16422  001C1A  EF11  F00E         	goto	u6370
 16423  001C1E                     u6371:
 16424  001C1E  EF18  F00E         	goto	l6667
 16425  001C22                     u6370:
 16426  001C22  B257               	btfsc	_flags^0,1,c
 16427  001C24  EF16  F00E         	goto	u6381
 16428  001C28  EF18  F00E         	goto	u6380
 16429  001C2C                     u6381:
 16430  001C2C  EF5F  F00D         	goto	l6647
 16431  001C30                     u6380:
 16432  001C30                     l6667:
 16433                           
 16434                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 16435  001C30  503A               	movf	dtoa@s^0,w,c
 16436  001C32  103B               	iorwf	(dtoa@s+1)^0,w,c
 16437  001C34  A4D8               	btfss	status,2,c
 16438  001C36  EF1F  F00E         	goto	u6391
 16439  001C3A  EF21  F00E         	goto	u6390
 16440  001C3E                     u6391:
 16441  001C3E  EF28  F00E         	goto	l6671
 16442  001C42                     u6390:
 16443  001C42  A457               	btfss	_flags^0,2,c
 16444  001C44  EF26  F00E         	goto	u6401
 16445  001C48  EF28  F00E         	goto	u6400
 16446  001C4C                     u6401:
 16447  001C4C  EF46  F00E         	goto	l6681
 16448  001C50                     u6400:
 16449  001C50                     l6671:
 16450                           
 16451                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 16452  001C50  0644               	decf	dtoa@i^0,f,c
 16453  001C52  A0D8               	btfss	status,0,c
 16454  001C54  0645               	decf	(dtoa@i+1)^0,f,c
 16455  001C56                     
 16456                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 16457  001C56  503A               	movf	dtoa@s^0,w,c
 16458  001C58  103B               	iorwf	(dtoa@s+1)^0,w,c
 16459  001C5A  A4D8               	btfss	status,2,c
 16460  001C5C  EF32  F00E         	goto	u6411
 16461  001C60  EF34  F00E         	goto	u6410
 16462  001C64                     u6411:
 16463  001C64  EF3A  F00E         	goto	l6677
 16464  001C68                     u6410:
 16465  001C68  0E00               	movlw	0
 16466  001C6A  6E35               	movwf	(_dtoa$1891+1)^0,c
 16467  001C6C  0E2B               	movlw	43
 16468  001C6E  6E34               	movwf	_dtoa$1891^0,c
 16469  001C70  EF3E  F00E         	goto	l6679
 16470  001C74                     l6677:
 16471  001C74  0E00               	movlw	0
 16472  001C76  6E35               	movwf	(_dtoa$1891+1)^0,c
 16473  001C78  0E2D               	movlw	45
 16474  001C7A  6E34               	movwf	_dtoa$1891^0,c
 16475  001C7C                     l6679:
 16476  001C7C  0EDD               	movlw	low _dbuf
 16477  001C7E  2444               	addwf	dtoa@i^0,w,c
 16478  001C80  6ED9               	movwf	fsr2l,c
 16479  001C82  0E02               	movlw	high _dbuf
 16480  001C84  2045               	addwfc	(dtoa@i+1)^0,w,c
 16481  001C86  6EDA               	movwf	fsr2h,c
 16482  001C88  C034  FFDF         	movff	_dtoa$1891,indf2
 16483  001C8C                     l6681:
 16484                           
 16485                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 16486  001C8C  C022  F017         	movff	dtoa@fp,pad@fp
 16487  001C90  C023  F018         	movff	dtoa@fp+1,pad@fp+1
 16488  001C94  0EDD               	movlw	low _dbuf
 16489  001C96  2444               	addwf	dtoa@i^0,w,c
 16490  001C98  6E19               	movwf	pad@buf^0,c
 16491  001C9A  0E02               	movlw	high _dbuf
 16492  001C9C  2045               	addwfc	(dtoa@i+1)^0,w,c
 16493  001C9E  6E1A               	movwf	(pad@buf+1)^0,c
 16494  001CA0  C038  F01B         	movff	dtoa@w,pad@p
 16495  001CA4  C039  F01C         	movff	dtoa@w+1,pad@p+1
 16496  001CA8  EC92  F01E         	call	_pad	;wreg free
 16497  001CAC  C017  F022         	movff	?_pad,?_dtoa
 16498  001CB0  C018  F023         	movff	?_pad+1,?_dtoa+1
 16499  001CB4  0012               	return		;funcret
 16500  001CB6                     __end_of_dtoa:
 16501                           	opt callstack 0
 16502                           
 16503 ;; *************** function _pad *****************
 16504 ;; Defined at:
 16505 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 16506 ;; Parameters:    Size  Location     Type
 16507 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
 16508 ;;		 -> NULL(0), 
 16509 ;;  buf             2   24[COMRAM] PTR unsigned char 
 16510 ;;		 -> dbuf(32), 
 16511 ;;  p               2   26[COMRAM] int 
 16512 ;; Auto vars:     Size  Location     Type
 16513 ;;  w               2   31[COMRAM] int 
 16514 ;;  i               2   29[COMRAM] int 
 16515 ;; Return value:  Size  Location     Type
 16516 ;;                  2   22[COMRAM] int 
 16517 ;; Registers used:
 16518 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16519 ;; Tracked objects:
 16520 ;;		On entry : 0/0
 16521 ;;		On exit  : 0/0
 16522 ;;		Unchanged: 0/0
 16523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16524 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16525 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16526 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16527 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16528 ;;Total ram usage:       11 bytes
 16529 ;; Hardware stack levels used:    1
 16530 ;; Hardware stack levels required when called:    8
 16531 ;; This function calls:
 16532 ;;		_fputc
 16533 ;;		_fputs
 16534 ;;		_strlen
 16535 ;; This function is called by:
 16536 ;;		_dtoa
 16537 ;;		_utoa
 16538 ;;		_xtoa
 16539 ;; This function uses a non-reentrant model
 16540 ;;
 16541                           
 16542                           	psect	text62
 16543  003D24                     __ptext62:
 16544                           	opt callstack 0
 16545  003D24                     _pad:
 16546                           	opt callstack 18
 16547  003D24                     
 16548                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 16549  003D24  A057               	btfss	_flags^0,0,c
 16550  003D26  EF97  F01E         	goto	u5911
 16551  003D2A  EF99  F01E         	goto	u5910
 16552  003D2E                     u5911:
 16553  003D2E  EFA3  F01E         	goto	l6443
 16554  003D32                     u5910:
 16555  003D32                     
 16556                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 16557  003D32  C019  F010         	movff	pad@buf,fputs@s
 16558  003D36  C01A  F011         	movff	pad@buf+1,fputs@s+1
 16559  003D3A  C017  F012         	movff	pad@fp,fputs@fp
 16560  003D3E  C018  F013         	movff	pad@fp+1,fputs@fp+1
 16561  003D42  ECA7  F024         	call	_fputs	;wreg free
 16562  003D46                     l6443:
 16563                           
 16564                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 16565  003D46  BE1C               	btfsc	(pad@p+1)^0,7,c
 16566  003D48  EFA8  F01E         	goto	u5921
 16567  003D4C  EFAA  F01E         	goto	u5920
 16568  003D50                     u5921:
 16569  003D50  EFB0  F01E         	goto	l6447
 16570  003D54                     u5920:
 16571  003D54  C01B  F020         	movff	pad@p,pad@w
 16572  003D58  C01C  F021         	movff	pad@p+1,pad@w+1
 16573  003D5C  EFB4  F01E         	goto	l1204
 16574  003D60                     l6447:
 16575  003D60  0E00               	movlw	0
 16576  003D62  6E21               	movwf	(pad@w+1)^0,c
 16577  003D64  0E00               	movlw	0
 16578  003D66  6E20               	movwf	pad@w^0,c
 16579  003D68                     l1204:
 16580                           
 16581                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 16582  003D68  0E00               	movlw	0
 16583  003D6A  6E1F               	movwf	(pad@i+1)^0,c
 16584  003D6C  0E00               	movlw	0
 16585  003D6E  6E1E               	movwf	pad@i^0,c
 16586                           
 16587                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 16588  003D70  EFC6  F01E         	goto	l6453
 16589  003D74                     l6449:
 16590                           
 16591                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 16592  003D74  0E00               	movlw	0
 16593  003D76  6E08               	movwf	(fputc@c+1)^0,c
 16594  003D78  0E20               	movlw	32
 16595  003D7A  6E07               	movwf	fputc@c^0,c
 16596  003D7C  C017  F009         	movff	pad@fp,fputc@fp
 16597  003D80  C018  F00A         	movff	pad@fp+1,fputc@fp+1
 16598  003D84  EC63  F020         	call	_fputc	;wreg free
 16599  003D88                     
 16600                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 16601  003D88  4A1E               	infsnz	pad@i^0,f,c
 16602  003D8A  2A1F               	incf	(pad@i+1)^0,f,c
 16603  003D8C                     l6453:
 16604                           
 16605                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 16606  003D8C  5020               	movf	pad@w^0,w,c
 16607  003D8E  5C1E               	subwf	pad@i^0,w,c
 16608  003D90  501F               	movf	(pad@i+1)^0,w,c
 16609  003D92  0A80               	xorlw	128
 16610  003D94  6E1D               	movwf	??_pad^0,c
 16611  003D96  5021               	movf	(pad@w+1)^0,w,c
 16612  003D98  0A80               	xorlw	128
 16613  003D9A  581D               	subwfb	??_pad^0,w,c
 16614  003D9C  A0D8               	btfss	status,0,c
 16615  003D9E  EFD3  F01E         	goto	u5931
 16616  003DA2  EFD5  F01E         	goto	u5930
 16617  003DA6                     u5931:
 16618  003DA6  EFBA  F01E         	goto	l6449
 16619  003DAA                     u5930:
 16620  003DAA                     
 16621                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 16622  003DAA  B057               	btfsc	_flags^0,0,c
 16623  003DAC  EFDA  F01E         	goto	u5941
 16624  003DB0  EFDC  F01E         	goto	u5940
 16625  003DB4                     u5941:
 16626  003DB4  EFE6  F01E         	goto	l6457
 16627  003DB8                     u5940:
 16628  003DB8                     
 16629                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 16630  003DB8  C019  F010         	movff	pad@buf,fputs@s
 16631  003DBC  C01A  F011         	movff	pad@buf+1,fputs@s+1
 16632  003DC0  C017  F012         	movff	pad@fp,fputs@fp
 16633  003DC4  C018  F013         	movff	pad@fp+1,fputs@fp+1
 16634  003DC8  ECA7  F024         	call	_fputs	;wreg free
 16635  003DCC                     l6457:
 16636                           
 16637                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 16638  003DCC  C019  F005         	movff	pad@buf,strlen@s
 16639  003DD0  C01A  F006         	movff	pad@buf+1,strlen@s+1
 16640  003DD4  ECEE  F023         	call	_strlen	;wreg free
 16641  003DD8  5020               	movf	pad@w^0,w,c
 16642  003DDA  2405               	addwf	?_strlen^0,w,c
 16643  003DDC  6E17               	movwf	?_pad^0,c
 16644  003DDE  5021               	movf	(pad@w+1)^0,w,c
 16645  003DE0  2006               	addwfc	(?_strlen+1)^0,w,c
 16646  003DE2  6E18               	movwf	(?_pad+1)^0,c
 16647  003DE4  0012               	return		;funcret
 16648  003DE6                     __end_of_pad:
 16649                           	opt callstack 0
 16650                           
 16651 ;; *************** function _strlen *****************
 16652 ;; Defined at:
 16653 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 16654 ;; Parameters:    Size  Location     Type
 16655 ;;  s               2    4[COMRAM] PTR const unsigned char 
 16656 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), ValidateCmd@ConfName_1565(20), 
 16657 ;;		 -> ValidateCmd@ConfName_1561(20), ValidateCmd@ConfName(20), STR_93(9), STR_92(12), 
 16658 ;;		 -> InitialiseString@RevNum(2), InitialiseString@PartNum(19), InitialiseString@SerialNum(11), Command(16), 
 16659 ;; Auto vars:     Size  Location     Type
 16660 ;;  a               2    6[COMRAM] PTR const unsigned char 
 16661 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), ValidateCmd@ConfName_1565(20), 
 16662 ;;		 -> ValidateCmd@ConfName_1561(20), ValidateCmd@ConfName(20), STR_93(9), STR_92(12), 
 16663 ;;		 -> InitialiseString@RevNum(2), InitialiseString@PartNum(19), InitialiseString@SerialNum(11), Command(16), 
 16664 ;; Return value:  Size  Location     Type
 16665 ;;                  2    4[COMRAM] unsigned int 
 16666 ;; Registers used:
 16667 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 16668 ;; Tracked objects:
 16669 ;;		On entry : 0/0
 16670 ;;		On exit  : 0/0
 16671 ;;		Unchanged: 0/0
 16672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16673 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16674 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16676 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16677 ;;Total ram usage:        4 bytes
 16678 ;; Hardware stack levels used:    1
 16679 ;; Hardware stack levels required when called:    4
 16680 ;; This function calls:
 16681 ;;		Nothing
 16682 ;; This function is called by:
 16683 ;;		_ReadRX232
 16684 ;;		_SaveCardDat
 16685 ;;		_pad
 16686 ;;		_stoa
 16687 ;;		_strcat
 16688 ;; This function uses a non-reentrant model
 16689 ;;
 16690                           
 16691                           	psect	text63
 16692  0047DC                     __ptext63:
 16693                           	opt callstack 0
 16694  0047DC                     _strlen:
 16695                           	opt callstack 21
 16696  0047DC  C005  F007         	movff	strlen@s,strlen@a
 16697  0047E0  C006  F008         	movff	strlen@s+1,strlen@a+1
 16698  0047E4  EFF6  F023         	goto	l6421
 16699  0047E8                     l6419:
 16700  0047E8  4A05               	infsnz	strlen@s^0,f,c
 16701  0047EA  2A06               	incf	(strlen@s+1)^0,f,c
 16702  0047EC                     l6421:
 16703  0047EC  C005  FFF6         	movff	strlen@s,tblptrl
 16704  0047F0  C006  FFF7         	movff	strlen@s+1,tblptrh
 16705  0047F4  0E00               	movlw	low (__mediumconst shr (0+16))
 16706  0047F6  6EF8               	movwf	tblptru,c
 16707  0047F8  0E0E               	movlw	(high __ramtop+-1)
 16708  0047FA  64F7               	cpfsgt	tblptrh,c
 16709  0047FC  D003               	bra	u5867
 16710  0047FE  0008               	tblrd		*
 16711  004800  50F5               	movf	tablat,w,c
 16712  004802  D005               	bra	u5860
 16713  004804                     u5867:
 16714  004804  CFF6 FFE9          	movff	tblptrl,fsr0l
 16715  004808  CFF7 FFEA          	movff	tblptrh,fsr0h
 16716  00480C  50EF               	movf	indf0,w,c
 16717  00480E                     u5860:
 16718  00480E  0900               	iorlw	0
 16719  004810  A4D8               	btfss	status,2,c
 16720  004812  EF0D  F024         	goto	u5871
 16721  004816  EF0F  F024         	goto	u5870
 16722  00481A                     u5871:
 16723  00481A  EFF4  F023         	goto	l6419
 16724  00481E                     u5870:
 16725  00481E  5007               	movf	strlen@a^0,w,c
 16726  004820  5C05               	subwf	strlen@s^0,w,c
 16727  004822  6E05               	movwf	?_strlen^0,c
 16728  004824  5008               	movf	(strlen@a+1)^0,w,c
 16729  004826  5806               	subwfb	(strlen@s+1)^0,w,c
 16730  004828  6E06               	movwf	(?_strlen+1)^0,c
 16731  00482A  0012               	return		;funcret
 16732  00482C                     __end_of_strlen:
 16733                           	opt callstack 0
 16734                           
 16735 ;; *************** function _fputs *****************
 16736 ;; Defined at:
 16737 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
 16738 ;; Parameters:    Size  Location     Type
 16739 ;;  s               2   15[COMRAM] PTR const unsigned char 
 16740 ;;		 -> dbuf(32), 
 16741 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
 16742 ;;		 -> NULL(0), 
 16743 ;; Auto vars:     Size  Location     Type
 16744 ;;  i               2   20[COMRAM] int 
 16745 ;;  c               1   19[COMRAM] unsigned char 
 16746 ;; Return value:  Size  Location     Type
 16747 ;;                  2   15[COMRAM] int 
 16748 ;; Registers used:
 16749 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 16750 ;; Tracked objects:
 16751 ;;		On entry : 0/0
 16752 ;;		On exit  : 0/0
 16753 ;;		Unchanged: 0/0
 16754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16755 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16756 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16758 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16759 ;;Total ram usage:        7 bytes
 16760 ;; Hardware stack levels used:    1
 16761 ;; Hardware stack levels required when called:    7
 16762 ;; This function calls:
 16763 ;;		_fputc
 16764 ;; This function is called by:
 16765 ;;		_pad
 16766 ;; This function uses a non-reentrant model
 16767 ;;
 16768                           
 16769                           	psect	text64
 16770  00494E                     __ptext64:
 16771                           	opt callstack 0
 16772  00494E                     _fputs:
 16773                           	opt callstack 18
 16774  00494E  0E00               	movlw	0
 16775  004950  6E16               	movwf	(fputs@i+1)^0,c
 16776  004952  0E00               	movlw	0
 16777  004954  6E15               	movwf	fputs@i^0,c
 16778  004956  EFB8  F024         	goto	l6433
 16779  00495A                     l6429:
 16780  00495A  C014  F007         	movff	fputs@c,fputc@c
 16781  00495E  6A08               	clrf	(fputc@c+1)^0,c
 16782  004960  C012  F009         	movff	fputs@fp,fputc@fp
 16783  004964  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
 16784  004968  EC63  F020         	call	_fputc	;wreg free
 16785  00496C  4A15               	infsnz	fputs@i^0,f,c
 16786  00496E  2A16               	incf	(fputs@i+1)^0,f,c
 16787  004970                     l6433:
 16788  004970  5015               	movf	fputs@i^0,w,c
 16789  004972  2410               	addwf	fputs@s^0,w,c
 16790  004974  6ED9               	movwf	fsr2l,c
 16791  004976  5016               	movf	(fputs@i+1)^0,w,c
 16792  004978  2011               	addwfc	(fputs@s+1)^0,w,c
 16793  00497A  6EDA               	movwf	fsr2h,c
 16794  00497C  50DF               	movf	indf2,w,c
 16795  00497E  6E14               	movwf	fputs@c^0,c
 16796  004980  5014               	movf	fputs@c^0,w,c
 16797  004982  A4D8               	btfss	status,2,c
 16798  004984  EFC6  F024         	goto	u5881
 16799  004988  EFC8  F024         	goto	u5880
 16800  00498C                     u5881:
 16801  00498C  EFAD  F024         	goto	l6429
 16802  004990                     u5880:
 16803  004990  0012               	return		;funcret
 16804  004992                     __end_of_fputs:
 16805                           	opt callstack 0
 16806                           
 16807 ;; *************** function _fputc *****************
 16808 ;; Defined at:
 16809 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
 16810 ;; Parameters:    Size  Location     Type
 16811 ;;  c               2    6[COMRAM] int 
 16812 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
 16813 ;;		 -> NULL(0), 
 16814 ;; Auto vars:     Size  Location     Type
 16815 ;;		None
 16816 ;; Return value:  Size  Location     Type
 16817 ;;                  2    6[COMRAM] int 
 16818 ;; Registers used:
 16819 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 16820 ;; Tracked objects:
 16821 ;;		On entry : 0/0
 16822 ;;		On exit  : 0/0
 16823 ;;		Unchanged: 0/0
 16824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16825 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16827 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16828 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16829 ;;Total ram usage:        9 bytes
 16830 ;; Hardware stack levels used:    1
 16831 ;; Hardware stack levels required when called:    6
 16832 ;; This function calls:
 16833 ;;		_putch
 16834 ;; This function is called by:
 16835 ;;		_pad
 16836 ;;		_stoa
 16837 ;;		_vfpfcnvrt
 16838 ;;		_fputs
 16839 ;; This function uses a non-reentrant model
 16840 ;;
 16841                           
 16842                           	psect	text65
 16843  0040C6                     __ptext65:
 16844                           	opt callstack 0
 16845  0040C6                     _fputc:
 16846                           	opt callstack 18
 16847  0040C6  5009               	movf	fputc@fp^0,w,c
 16848  0040C8  100A               	iorwf	(fputc@fp+1)^0,w,c
 16849  0040CA  B4D8               	btfsc	status,2,c
 16850  0040CC  EF6A  F020         	goto	u5821
 16851  0040D0  EF6C  F020         	goto	u5820
 16852  0040D4                     u5821:
 16853  0040D4  EF75  F020         	goto	l6407
 16854  0040D8                     u5820:
 16855  0040D8  5009               	movf	fputc@fp^0,w,c
 16856  0040DA  100A               	iorwf	(fputc@fp+1)^0,w,c
 16857  0040DC  A4D8               	btfss	status,2,c
 16858  0040DE  EF73  F020         	goto	u5831
 16859  0040E2  EF75  F020         	goto	u5830
 16860  0040E6                     u5831:
 16861  0040E6  EF7A  F020         	goto	l6409
 16862  0040EA                     u5830:
 16863  0040EA                     l6407:
 16864  0040EA  5007               	movf	fputc@c^0,w,c
 16865  0040EC  EC2F  F027         	call	_putch
 16866  0040F0  EFAD  F020         	goto	l2104
 16867  0040F4                     l6409:
 16868  0040F4  EE20 F004          	lfsr	2,4
 16869  0040F8  5009               	movf	fputc@fp^0,w,c
 16870  0040FA  26D9               	addwf	fsr2l,f,c
 16871  0040FC  500A               	movf	(fputc@fp+1)^0,w,c
 16872  0040FE  22DA               	addwfc	fsr2h,f,c
 16873  004100  50DE               	movf	postinc2,w,c
 16874  004102  10DE               	iorwf	postinc2,w,c
 16875  004104  B4D8               	btfsc	status,2,c
 16876  004106  EF87  F020         	goto	u5841
 16877  00410A  EF89  F020         	goto	u5840
 16878  00410E                     u5841:
 16879  00410E  EFA4  F020         	goto	l6413
 16880  004112                     u5840:
 16881  004112  EE20 F004          	lfsr	2,4
 16882  004116  5009               	movf	fputc@fp^0,w,c
 16883  004118  26D9               	addwf	fsr2l,f,c
 16884  00411A  500A               	movf	(fputc@fp+1)^0,w,c
 16885  00411C  22DA               	addwfc	fsr2h,f,c
 16886  00411E  EE10 F002          	lfsr	1,2
 16887  004122  5009               	movf	fputc@fp^0,w,c
 16888  004124  26E1               	addwf	fsr1l,f,c
 16889  004126  500A               	movf	(fputc@fp+1)^0,w,c
 16890  004128  22E2               	addwfc	fsr1h,f,c
 16891  00412A  50DE               	movf	postinc2,w,c
 16892  00412C  5CE6               	subwf	postinc1,w,c
 16893  00412E  50E6               	movf	postinc1,w,c
 16894  004130  0A80               	xorlw	128
 16895  004132  6E0F               	movwf	(??_fputc+4)^0,c
 16896  004134  50DE               	movf	postinc2,w,c
 16897  004136  0A80               	xorlw	128
 16898  004138  580F               	subwfb	(??_fputc+4)^0,w,c
 16899  00413A  B0D8               	btfsc	status,0,c
 16900  00413C  EFA2  F020         	goto	u5851
 16901  004140  EFA4  F020         	goto	u5850
 16902  004144                     u5851:
 16903  004144  EFAD  F020         	goto	l2104
 16904  004148                     u5850:
 16905  004148                     l6413:
 16906  004148  EE20 F002          	lfsr	2,2
 16907  00414C  5009               	movf	fputc@fp^0,w,c
 16908  00414E  26D9               	addwf	fsr2l,f,c
 16909  004150  500A               	movf	(fputc@fp+1)^0,w,c
 16910  004152  22DA               	addwfc	fsr2h,f,c
 16911  004154  2ADE               	incf	postinc2,f,c
 16912  004156  0E00               	movlw	0
 16913  004158  22DD               	addwfc	postdec2,f,c
 16914  00415A                     l2104:
 16915  00415A  0012               	return		;funcret
 16916  00415C                     __end_of_fputc:
 16917                           	opt callstack 0
 16918                           
 16919 ;; *************** function _putch *****************
 16920 ;; Defined at:
 16921 ;;		line 203 in file "mcc_generated_files/eusart2.c"
 16922 ;; Parameters:    Size  Location     Type
 16923 ;;  txData          1    wreg     unsigned char 
 16924 ;; Auto vars:     Size  Location     Type
 16925 ;;  txData          1    5[COMRAM] unsigned char 
 16926 ;; Return value:  Size  Location     Type
 16927 ;;                  1    wreg      void 
 16928 ;; Registers used:
 16929 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16930 ;; Tracked objects:
 16931 ;;		On entry : 0/0
 16932 ;;		On exit  : 0/0
 16933 ;;		Unchanged: 0/0
 16934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16936 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16938 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16939 ;;Total ram usage:        1 bytes
 16940 ;; Hardware stack levels used:    1
 16941 ;; Hardware stack levels required when called:    5
 16942 ;; This function calls:
 16943 ;;		_EUSART2_Write
 16944 ;; This function is called by:
 16945 ;;		_fputc
 16946 ;; This function uses a non-reentrant model
 16947 ;;
 16948                           
 16949                           	psect	text66
 16950  004E5E                     __ptext66:
 16951                           	opt callstack 0
 16952  004E5E                     _putch:
 16953                           	opt callstack 18
 16954                           
 16955                           ;incstack = 0
 16956                           ;putch@txData stored from wreg
 16957  004E5E  6E06               	movwf	putch@txData^0,c
 16958  004E60                     
 16959                           ;mcc_generated_files/eusart2.c: 203: void putch(char txData);mcc_generated_files/eusart2
      +                          .c: 204: {;mcc_generated_files/eusart2.c: 205:     EUSART2_Write(txData);
 16960  004E60  5006               	movf	putch@txData^0,w,c
 16961  004E62  ECB9  F022         	call	_EUSART2_Write
 16962  004E66  0012               	return		;funcret
 16963  004E68                     __end_of_putch:
 16964                           	opt callstack 0
 16965                           
 16966 ;; *************** function _EUSART2_Write *****************
 16967 ;; Defined at:
 16968 ;;		line 175 in file "mcc_generated_files/eusart2.c"
 16969 ;; Parameters:    Size  Location     Type
 16970 ;;  txData          1    wreg     unsigned char 
 16971 ;; Auto vars:     Size  Location     Type
 16972 ;;  txData          1    4[COMRAM] unsigned char 
 16973 ;; Return value:  Size  Location     Type
 16974 ;;                  1    wreg      void 
 16975 ;; Registers used:
 16976 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16977 ;; Tracked objects:
 16978 ;;		On entry : 0/0
 16979 ;;		On exit  : 0/0
 16980 ;;		Unchanged: 0/0
 16981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16983 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16985 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16986 ;;Total ram usage:        1 bytes
 16987 ;; Hardware stack levels used:    1
 16988 ;; Hardware stack levels required when called:    4
 16989 ;; This function calls:
 16990 ;;		Nothing
 16991 ;; This function is called by:
 16992 ;;		_putch
 16993 ;;		_ReadRX232
 16994 ;; This function uses a non-reentrant model
 16995 ;;
 16996                           
 16997                           	psect	text67
 16998  004572                     __ptext67:
 16999                           	opt callstack 0
 17000  004572                     _EUSART2_Write:
 17001                           	opt callstack 18
 17002                           
 17003                           ;incstack = 0
 17004                           ;EUSART2_Write@txData stored from wreg
 17005  004572  6E05               	movwf	EUSART2_Write@txData^0,c
 17006  004574                     l6385:
 17007                           
 17008                           ;mcc_generated_files/eusart2.c: 177:     while(0 == eusart2TxBufferRemaining)
 17009  004574  0100               	movlb	0	; () banked
 17010  004576  51FF               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 17011  004578  B4D8               	btfsc	status,2,c
 17012  00457A  EFC1  F022         	goto	u5791
 17013  00457E  EFC3  F022         	goto	u5790
 17014  004582                     u5791:
 17015  004582  EFBA  F022         	goto	l6385
 17016  004586                     u5790:
 17017  004586                     
 17018                           ; BSR set to: 0
 17019                           ;mcc_generated_files/eusart2.c: 181:     if(0 == PIE3bits.TX2IE)
 17020  004586  010E               	movlb	14	; () banked
 17021  004588  BDC5               	btfsc	197,6,b	;volatile
 17022  00458A  EFC9  F022         	goto	u5801
 17023  00458E  EFCB  F022         	goto	u5800
 17024  004592                     u5801:
 17025  004592  EFCF  F022         	goto	l325
 17026  004596                     u5800:
 17027  004596                     
 17028                           ; BSR set to: 14
 17029                           ;mcc_generated_files/eusart2.c: 182:     {;mcc_generated_files/eusart2.c: 183:         T
      +                          X2REG = txData;
 17030  004596  C005  FE9A         	movff	EUSART2_Write@txData,3738	;volatile
 17031                           
 17032                           ;mcc_generated_files/eusart2.c: 184:     }
 17033  00459A  EFE5  F022         	goto	l6399
 17034  00459E                     l325:
 17035                           
 17036                           ; BSR set to: 14
 17037                           ;mcc_generated_files/eusart2.c: 186:     {;mcc_generated_files/eusart2.c: 187:         P
      +                          IE3bits.TX2IE = 0;
 17038  00459E  9DC5               	bcf	197,6,b	;volatile
 17039  0045A0                     
 17040                           ; BSR set to: 14
 17041                           ;mcc_generated_files/eusart2.c: 188:         eusart2TxBuffer[eusart2TxHead++] = txData;
 17042  0045A0  0E84               	movlw	low _eusart2TxBuffer
 17043  0045A2  0100               	movlb	0	; () banked
 17044  0045A4  25E9               	addwf	_eusart2TxHead& (0+255),w,b	;volatile
 17045  0045A6  6ED9               	movwf	fsr2l,c
 17046  0045A8  6ADA               	clrf	fsr2h,c
 17047  0045AA  0E03               	movlw	high _eusart2TxBuffer
 17048  0045AC  22DA               	addwfc	fsr2h,f,c
 17049  0045AE  C005  FFDF         	movff	EUSART2_Write@txData,indf2
 17050  0045B2                     
 17051                           ; BSR set to: 0
 17052  0045B2  2BE9               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 17053  0045B4                     
 17054                           ; BSR set to: 0
 17055                           ;mcc_generated_files/eusart2.c: 189:         if(sizeof(eusart2TxBuffer) <= eusart2TxHead
      +                          )
 17056  0045B4  0E1F               	movlw	31
 17057  0045B6  65E9               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 17058  0045B8  EFE0  F022         	goto	u5811
 17059  0045BC  EFE2  F022         	goto	u5810
 17060  0045C0                     u5811:
 17061  0045C0  EFE4  F022         	goto	l6397
 17062  0045C4                     u5810:
 17063  0045C4                     
 17064                           ; BSR set to: 0
 17065                           ;mcc_generated_files/eusart2.c: 190:         {;mcc_generated_files/eusart2.c: 191:      
      +                                 eusart2TxHead = 0;
 17066  0045C4  0E00               	movlw	0
 17067  0045C6  6FE9               	movwf	_eusart2TxHead& (0+255),b	;volatile
 17068  0045C8                     l6397:
 17069                           
 17070                           ; BSR set to: 0
 17071                           ;mcc_generated_files/eusart2.c: 193:         eusart2TxBufferRemaining--;
 17072  0045C8  07FF               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 17073  0045CA                     l6399:
 17074                           
 17075                           ;mcc_generated_files/eusart2.c: 195:     PIE3bits.TX2IE = 1;
 17076  0045CA  010E               	movlb	14	; () banked
 17077  0045CC  8DC5               	bsf	197,6,b	;volatile
 17078  0045CE                     
 17079                           ; BSR set to: 14
 17080  0045CE  0012               	return		;funcret
 17081  0045D0                     __end_of_EUSART2_Write:
 17082                           	opt callstack 0
 17083                           
 17084 ;; *************** function _abs *****************
 17085 ;; Defined at:
 17086 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
 17087 ;; Parameters:    Size  Location     Type
 17088 ;;  a               2   22[COMRAM] int 
 17089 ;; Auto vars:     Size  Location     Type
 17090 ;;		None
 17091 ;; Return value:  Size  Location     Type
 17092 ;;                  2   22[COMRAM] int 
 17093 ;; Registers used:
 17094 ;;		wreg, status,2, status,0
 17095 ;; Tracked objects:
 17096 ;;		On entry : 0/0
 17097 ;;		On exit  : 0/0
 17098 ;;		Unchanged: 0/0
 17099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17100 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17102 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17103 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17104 ;;Total ram usage:        4 bytes
 17105 ;; Hardware stack levels used:    1
 17106 ;; Hardware stack levels required when called:    4
 17107 ;; This function calls:
 17108 ;;		Nothing
 17109 ;; This function is called by:
 17110 ;;		_dtoa
 17111 ;; This function uses a non-reentrant model
 17112 ;;
 17113                           
 17114                           	psect	text68
 17115  004A98                     __ptext68:
 17116                           	opt callstack 0
 17117  004A98                     _abs:
 17118                           	opt callstack 22
 17119  004A98  BE18               	btfsc	(abs@a+1)^0,7,c
 17120  004A9A  EF59  F025         	goto	u5950
 17121  004A9E  5018               	movf	(abs@a+1)^0,w,c
 17122  004AA0  E106               	bnz	u5951
 17123  004AA2  0417               	decf	abs@a^0,w,c
 17124  004AA4  B0D8               	btfsc	status,0,c
 17125  004AA6  EF57  F025         	goto	u5951
 17126  004AAA  EF59  F025         	goto	u5950
 17127  004AAE                     u5951:
 17128  004AAE  EF67  F025         	goto	l2022
 17129  004AB2                     u5950:
 17130  004AB2  C017  F019         	movff	abs@a,??_abs
 17131  004AB6  C018  F01A         	movff	abs@a+1,??_abs+1
 17132  004ABA  1E19               	comf	??_abs^0,f,c
 17133  004ABC  1E1A               	comf	(??_abs+1)^0,f,c
 17134  004ABE  4A19               	infsnz	??_abs^0,f,c
 17135  004AC0  2A1A               	incf	(??_abs+1)^0,f,c
 17136  004AC2  C019  F017         	movff	??_abs,?_abs
 17137  004AC6  C01A  F018         	movff	??_abs+1,?_abs+1
 17138  004ACA  EF6B  F025         	goto	l2025
 17139  004ACE                     l2022:
 17140  004ACE  C017  F017         	movff	abs@a,?_abs
 17141  004AD2  C018  F018         	movff	abs@a+1,?_abs+1
 17142  004AD6                     l2025:
 17143  004AD6  0012               	return		;funcret
 17144  004AD8                     __end_of_abs:
 17145                           	opt callstack 0
 17146                           
 17147 ;; *************** function ___aomod *****************
 17148 ;; Defined at:
 17149 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
 17150 ;; Parameters:    Size  Location     Type
 17151 ;;  dividend        8    4[COMRAM] long long 
 17152 ;;  divisor         8   12[COMRAM] long long 
 17153 ;; Auto vars:     Size  Location     Type
 17154 ;;  sign            1   21[COMRAM] unsigned char 
 17155 ;;  counter         1   20[COMRAM] unsigned char 
 17156 ;; Return value:  Size  Location     Type
 17157 ;;                  8    4[COMRAM] long long 
 17158 ;; Registers used:
 17159 ;;		wreg, status,2, status,0
 17160 ;; Tracked objects:
 17161 ;;		On entry : 0/0
 17162 ;;		On exit  : 0/0
 17163 ;;		Unchanged: 0/0
 17164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17165 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17166 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17168 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17169 ;;Total ram usage:       18 bytes
 17170 ;; Hardware stack levels used:    1
 17171 ;; Hardware stack levels required when called:    4
 17172 ;; This function calls:
 17173 ;;		Nothing
 17174 ;; This function is called by:
 17175 ;;		_dtoa
 17176 ;; This function uses a non-reentrant model
 17177 ;;
 17178                           
 17179                           	psect	text69
 17180  00321C                     __ptext69:
 17181                           	opt callstack 0
 17182  00321C                     ___aomod:
 17183                           	opt callstack 22
 17184  00321C  0E00               	movlw	0
 17185  00321E  6E16               	movwf	___aomod@sign^0,c
 17186  003220  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
 17187  003222  EF17  F019         	goto	u6120
 17188  003226  EF15  F019         	goto	u6121
 17189  00322A                     u6121:
 17190  00322A  EF29  F019         	goto	l6545
 17191  00322E                     u6120:
 17192  00322E  1E0C               	comf	(___aomod@dividend+7)^0,f,c
 17193  003230  1E0B               	comf	(___aomod@dividend+6)^0,f,c
 17194  003232  1E0A               	comf	(___aomod@dividend+5)^0,f,c
 17195  003234  1E09               	comf	(___aomod@dividend+4)^0,f,c
 17196  003236  1E08               	comf	(___aomod@dividend+3)^0,f,c
 17197  003238  1E07               	comf	(___aomod@dividend+2)^0,f,c
 17198  00323A  1E06               	comf	(___aomod@dividend+1)^0,f,c
 17199  00323C  6C05               	negf	___aomod@dividend^0,c
 17200  00323E  0E00               	movlw	0
 17201  003240  2206               	addwfc	(___aomod@dividend+1)^0,f,c
 17202  003242  2207               	addwfc	(___aomod@dividend+2)^0,f,c
 17203  003244  2208               	addwfc	(___aomod@dividend+3)^0,f,c
 17204  003246  2209               	addwfc	(___aomod@dividend+4)^0,f,c
 17205  003248  220A               	addwfc	(___aomod@dividend+5)^0,f,c
 17206  00324A  220B               	addwfc	(___aomod@dividend+6)^0,f,c
 17207  00324C  220C               	addwfc	(___aomod@dividend+7)^0,f,c
 17208  00324E  0E01               	movlw	1
 17209  003250  6E16               	movwf	___aomod@sign^0,c
 17210  003252                     l6545:
 17211  003252  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
 17212  003254  EF30  F019         	goto	u6130
 17213  003258  EF2E  F019         	goto	u6131
 17214  00325C                     u6131:
 17215  00325C  EF40  F019         	goto	l6549
 17216  003260                     u6130:
 17217  003260  1E14               	comf	(___aomod@divisor+7)^0,f,c
 17218  003262  1E13               	comf	(___aomod@divisor+6)^0,f,c
 17219  003264  1E12               	comf	(___aomod@divisor+5)^0,f,c
 17220  003266  1E11               	comf	(___aomod@divisor+4)^0,f,c
 17221  003268  1E10               	comf	(___aomod@divisor+3)^0,f,c
 17222  00326A  1E0F               	comf	(___aomod@divisor+2)^0,f,c
 17223  00326C  1E0E               	comf	(___aomod@divisor+1)^0,f,c
 17224  00326E  6C0D               	negf	___aomod@divisor^0,c
 17225  003270  0E00               	movlw	0
 17226  003272  220E               	addwfc	(___aomod@divisor+1)^0,f,c
 17227  003274  220F               	addwfc	(___aomod@divisor+2)^0,f,c
 17228  003276  2210               	addwfc	(___aomod@divisor+3)^0,f,c
 17229  003278  2211               	addwfc	(___aomod@divisor+4)^0,f,c
 17230  00327A  2212               	addwfc	(___aomod@divisor+5)^0,f,c
 17231  00327C  2213               	addwfc	(___aomod@divisor+6)^0,f,c
 17232  00327E  2214               	addwfc	(___aomod@divisor+7)^0,f,c
 17233  003280                     l6549:
 17234  003280  500D               	movf	___aomod@divisor^0,w,c
 17235  003282  100E               	iorwf	(___aomod@divisor+1)^0,w,c
 17236  003284  100F               	iorwf	(___aomod@divisor+2)^0,w,c
 17237  003286  1010               	iorwf	(___aomod@divisor+3)^0,w,c
 17238  003288  1011               	iorwf	(___aomod@divisor+4)^0,w,c
 17239  00328A  1012               	iorwf	(___aomod@divisor+5)^0,w,c
 17240  00328C  1013               	iorwf	(___aomod@divisor+6)^0,w,c
 17241  00328E  1014               	iorwf	(___aomod@divisor+7)^0,w,c
 17242  003290  B4D8               	btfsc	status,2,c
 17243  003292  EF4D  F019         	goto	u6141
 17244  003296  EF4F  F019         	goto	u6140
 17245  00329A                     u6141:
 17246  00329A  EF97  F019         	goto	l6565
 17247  00329E                     u6140:
 17248  00329E  0E01               	movlw	1
 17249  0032A0  6E15               	movwf	___aomod@counter^0,c
 17250  0032A2  EF5D  F019         	goto	l6555
 17251  0032A6                     l6553:
 17252  0032A6  90D8               	bcf	status,0,c
 17253  0032A8  360D               	rlcf	___aomod@divisor^0,f,c
 17254  0032AA  360E               	rlcf	(___aomod@divisor+1)^0,f,c
 17255  0032AC  360F               	rlcf	(___aomod@divisor+2)^0,f,c
 17256  0032AE  3610               	rlcf	(___aomod@divisor+3)^0,f,c
 17257  0032B0  3611               	rlcf	(___aomod@divisor+4)^0,f,c
 17258  0032B2  3612               	rlcf	(___aomod@divisor+5)^0,f,c
 17259  0032B4  3613               	rlcf	(___aomod@divisor+6)^0,f,c
 17260  0032B6  3614               	rlcf	(___aomod@divisor+7)^0,f,c
 17261  0032B8  2A15               	incf	___aomod@counter^0,f,c
 17262  0032BA                     l6555:
 17263  0032BA  AE14               	btfss	(___aomod@divisor+7)^0,7,c
 17264  0032BC  EF62  F019         	goto	u6151
 17265  0032C0  EF64  F019         	goto	u6150
 17266  0032C4                     u6151:
 17267  0032C4  EF53  F019         	goto	l6553
 17268  0032C8                     u6150:
 17269  0032C8                     l6557:
 17270  0032C8  500D               	movf	___aomod@divisor^0,w,c
 17271  0032CA  5C05               	subwf	___aomod@dividend^0,w,c
 17272  0032CC  500E               	movf	(___aomod@divisor+1)^0,w,c
 17273  0032CE  5806               	subwfb	(___aomod@dividend+1)^0,w,c
 17274  0032D0  500F               	movf	(___aomod@divisor+2)^0,w,c
 17275  0032D2  5807               	subwfb	(___aomod@dividend+2)^0,w,c
 17276  0032D4  5010               	movf	(___aomod@divisor+3)^0,w,c
 17277  0032D6  5808               	subwfb	(___aomod@dividend+3)^0,w,c
 17278  0032D8  5011               	movf	(___aomod@divisor+4)^0,w,c
 17279  0032DA  5809               	subwfb	(___aomod@dividend+4)^0,w,c
 17280  0032DC  5012               	movf	(___aomod@divisor+5)^0,w,c
 17281  0032DE  580A               	subwfb	(___aomod@dividend+5)^0,w,c
 17282  0032E0  5013               	movf	(___aomod@divisor+6)^0,w,c
 17283  0032E2  580B               	subwfb	(___aomod@dividend+6)^0,w,c
 17284  0032E4  5014               	movf	(___aomod@divisor+7)^0,w,c
 17285  0032E6  580C               	subwfb	(___aomod@dividend+7)^0,w,c
 17286  0032E8  A0D8               	btfss	status,0,c
 17287  0032EA  EF79  F019         	goto	u6161
 17288  0032EE  EF7B  F019         	goto	u6160
 17289  0032F2                     u6161:
 17290  0032F2  EF8B  F019         	goto	l6561
 17291  0032F6                     u6160:
 17292  0032F6  500D               	movf	___aomod@divisor^0,w,c
 17293  0032F8  5E05               	subwf	___aomod@dividend^0,f,c
 17294  0032FA  500E               	movf	(___aomod@divisor+1)^0,w,c
 17295  0032FC  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
 17296  0032FE  500F               	movf	(___aomod@divisor+2)^0,w,c
 17297  003300  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
 17298  003302  5010               	movf	(___aomod@divisor+3)^0,w,c
 17299  003304  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
 17300  003306  5011               	movf	(___aomod@divisor+4)^0,w,c
 17301  003308  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
 17302  00330A  5012               	movf	(___aomod@divisor+5)^0,w,c
 17303  00330C  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
 17304  00330E  5013               	movf	(___aomod@divisor+6)^0,w,c
 17305  003310  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
 17306  003312  5014               	movf	(___aomod@divisor+7)^0,w,c
 17307  003314  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
 17308  003316                     l6561:
 17309  003316  90D8               	bcf	status,0,c
 17310  003318  3214               	rrcf	(___aomod@divisor+7)^0,f,c
 17311  00331A  3213               	rrcf	(___aomod@divisor+6)^0,f,c
 17312  00331C  3212               	rrcf	(___aomod@divisor+5)^0,f,c
 17313  00331E  3211               	rrcf	(___aomod@divisor+4)^0,f,c
 17314  003320  3210               	rrcf	(___aomod@divisor+3)^0,f,c
 17315  003322  320F               	rrcf	(___aomod@divisor+2)^0,f,c
 17316  003324  320E               	rrcf	(___aomod@divisor+1)^0,f,c
 17317  003326  320D               	rrcf	___aomod@divisor^0,f,c
 17318  003328  2E15               	decfsz	___aomod@counter^0,f,c
 17319  00332A  EF64  F019         	goto	l6557
 17320  00332E                     l6565:
 17321  00332E  5016               	movf	___aomod@sign^0,w,c
 17322  003330  B4D8               	btfsc	status,2,c
 17323  003332  EF9D  F019         	goto	u6171
 17324  003336  EF9F  F019         	goto	u6170
 17325  00333A                     u6171:
 17326  00333A  EFAF  F019         	goto	l6569
 17327  00333E                     u6170:
 17328  00333E  1E0C               	comf	(___aomod@dividend+7)^0,f,c
 17329  003340  1E0B               	comf	(___aomod@dividend+6)^0,f,c
 17330  003342  1E0A               	comf	(___aomod@dividend+5)^0,f,c
 17331  003344  1E09               	comf	(___aomod@dividend+4)^0,f,c
 17332  003346  1E08               	comf	(___aomod@dividend+3)^0,f,c
 17333  003348  1E07               	comf	(___aomod@dividend+2)^0,f,c
 17334  00334A  1E06               	comf	(___aomod@dividend+1)^0,f,c
 17335  00334C  6C05               	negf	___aomod@dividend^0,c
 17336  00334E  0E00               	movlw	0
 17337  003350  2206               	addwfc	(___aomod@dividend+1)^0,f,c
 17338  003352  2207               	addwfc	(___aomod@dividend+2)^0,f,c
 17339  003354  2208               	addwfc	(___aomod@dividend+3)^0,f,c
 17340  003356  2209               	addwfc	(___aomod@dividend+4)^0,f,c
 17341  003358  220A               	addwfc	(___aomod@dividend+5)^0,f,c
 17342  00335A  220B               	addwfc	(___aomod@dividend+6)^0,f,c
 17343  00335C  220C               	addwfc	(___aomod@dividend+7)^0,f,c
 17344  00335E                     l6569:
 17345  00335E  C005  F005         	movff	___aomod@dividend,?___aomod
 17346  003362  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
 17347  003366  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
 17348  00336A  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
 17349  00336E  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
 17350  003372  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
 17351  003376  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
 17352  00337A  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
 17353  00337E  0012               	return		;funcret
 17354  003380                     __end_of___aomod:
 17355                           	opt callstack 0
 17356                           
 17357 ;; *************** function ___aodiv *****************
 17358 ;; Defined at:
 17359 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
 17360 ;; Parameters:    Size  Location     Type
 17361 ;;  dividend        8    4[COMRAM] long long 
 17362 ;;  divisor         8   12[COMRAM] long long 
 17363 ;; Auto vars:     Size  Location     Type
 17364 ;;  quotient        8   22[COMRAM] long long 
 17365 ;;  sign            1   21[COMRAM] unsigned char 
 17366 ;;  counter         1   20[COMRAM] unsigned char 
 17367 ;; Return value:  Size  Location     Type
 17368 ;;                  8    4[COMRAM] long long 
 17369 ;; Registers used:
 17370 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17371 ;; Tracked objects:
 17372 ;;		On entry : 0/0
 17373 ;;		On exit  : 0/0
 17374 ;;		Unchanged: 0/0
 17375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17376 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17377 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17379 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17380 ;;Total ram usage:       26 bytes
 17381 ;; Hardware stack levels used:    1
 17382 ;; Hardware stack levels required when called:    4
 17383 ;; This function calls:
 17384 ;;		Nothing
 17385 ;; This function is called by:
 17386 ;;		_dtoa
 17387 ;; This function uses a non-reentrant model
 17388 ;;
 17389                           
 17390                           	psect	text70
 17391  002F18                     __ptext70:
 17392                           	opt callstack 0
 17393  002F18                     ___aodiv:
 17394                           	opt callstack 22
 17395  002F18  0E00               	movlw	0
 17396  002F1A  6E16               	movwf	___aodiv@sign^0,c
 17397  002F1C  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
 17398  002F1E  EF95  F017         	goto	u6050
 17399  002F22  EF93  F017         	goto	u6051
 17400  002F26                     u6051:
 17401  002F26  EFA7  F017         	goto	l6501
 17402  002F2A                     u6050:
 17403  002F2A  1E14               	comf	(___aodiv@divisor+7)^0,f,c
 17404  002F2C  1E13               	comf	(___aodiv@divisor+6)^0,f,c
 17405  002F2E  1E12               	comf	(___aodiv@divisor+5)^0,f,c
 17406  002F30  1E11               	comf	(___aodiv@divisor+4)^0,f,c
 17407  002F32  1E10               	comf	(___aodiv@divisor+3)^0,f,c
 17408  002F34  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
 17409  002F36  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
 17410  002F38  6C0D               	negf	___aodiv@divisor^0,c
 17411  002F3A  0E00               	movlw	0
 17412  002F3C  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
 17413  002F3E  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
 17414  002F40  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
 17415  002F42  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
 17416  002F44  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
 17417  002F46  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
 17418  002F48  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
 17419  002F4A  0E01               	movlw	1
 17420  002F4C  6E16               	movwf	___aodiv@sign^0,c
 17421  002F4E                     l6501:
 17422  002F4E  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
 17423  002F50  EFAE  F017         	goto	u6060
 17424  002F54  EFAC  F017         	goto	u6061
 17425  002F58                     u6061:
 17426  002F58  EFC0  F017         	goto	l6507
 17427  002F5C                     u6060:
 17428  002F5C  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
 17429  002F5E  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
 17430  002F60  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
 17431  002F62  1E09               	comf	(___aodiv@dividend+4)^0,f,c
 17432  002F64  1E08               	comf	(___aodiv@dividend+3)^0,f,c
 17433  002F66  1E07               	comf	(___aodiv@dividend+2)^0,f,c
 17434  002F68  1E06               	comf	(___aodiv@dividend+1)^0,f,c
 17435  002F6A  6C05               	negf	___aodiv@dividend^0,c
 17436  002F6C  0E00               	movlw	0
 17437  002F6E  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
 17438  002F70  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
 17439  002F72  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
 17440  002F74  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
 17441  002F76  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
 17442  002F78  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
 17443  002F7A  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
 17444  002F7C  0E01               	movlw	1
 17445  002F7E  1A16               	xorwf	___aodiv@sign^0,f,c
 17446  002F80                     l6507:
 17447  002F80  EE20  F017         	lfsr	2,___aodiv@quotient
 17448  002F84  0E07               	movlw	7
 17449  002F86                     u6071:
 17450  002F86  6ADE               	clrf	postinc2,c
 17451  002F88  06E8               	decf	wreg,f,c
 17452  002F8A  E2FD               	bc	u6071
 17453  002F8C  500D               	movf	___aodiv@divisor^0,w,c
 17454  002F8E  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
 17455  002F90  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
 17456  002F92  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
 17457  002F94  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
 17458  002F96  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
 17459  002F98  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
 17460  002F9A  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
 17461  002F9C  B4D8               	btfsc	status,2,c
 17462  002F9E  EFD3  F017         	goto	u6081
 17463  002FA2  EFD5  F017         	goto	u6080
 17464  002FA6                     u6081:
 17465  002FA6  EF27  F018         	goto	l6529
 17466  002FAA                     u6080:
 17467  002FAA  0E01               	movlw	1
 17468  002FAC  6E15               	movwf	___aodiv@counter^0,c
 17469  002FAE  EFE3  F017         	goto	l6515
 17470  002FB2                     l6513:
 17471  002FB2  90D8               	bcf	status,0,c
 17472  002FB4  360D               	rlcf	___aodiv@divisor^0,f,c
 17473  002FB6  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
 17474  002FB8  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
 17475  002FBA  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
 17476  002FBC  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
 17477  002FBE  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
 17478  002FC0  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
 17479  002FC2  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
 17480  002FC4  2A15               	incf	___aodiv@counter^0,f,c
 17481  002FC6                     l6515:
 17482  002FC6  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
 17483  002FC8  EFE8  F017         	goto	u6091
 17484  002FCC  EFEA  F017         	goto	u6090
 17485  002FD0                     u6091:
 17486  002FD0  EFD9  F017         	goto	l6513
 17487  002FD4                     u6090:
 17488  002FD4                     l6517:
 17489  002FD4  90D8               	bcf	status,0,c
 17490  002FD6  3617               	rlcf	___aodiv@quotient^0,f,c
 17491  002FD8  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
 17492  002FDA  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
 17493  002FDC  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
 17494  002FDE  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
 17495  002FE0  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
 17496  002FE2  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
 17497  002FE4  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
 17498  002FE6  500D               	movf	___aodiv@divisor^0,w,c
 17499  002FE8  5C05               	subwf	___aodiv@dividend^0,w,c
 17500  002FEA  500E               	movf	(___aodiv@divisor+1)^0,w,c
 17501  002FEC  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
 17502  002FEE  500F               	movf	(___aodiv@divisor+2)^0,w,c
 17503  002FF0  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
 17504  002FF2  5010               	movf	(___aodiv@divisor+3)^0,w,c
 17505  002FF4  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
 17506  002FF6  5011               	movf	(___aodiv@divisor+4)^0,w,c
 17507  002FF8  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
 17508  002FFA  5012               	movf	(___aodiv@divisor+5)^0,w,c
 17509  002FFC  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
 17510  002FFE  5013               	movf	(___aodiv@divisor+6)^0,w,c
 17511  003000  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
 17512  003002  5014               	movf	(___aodiv@divisor+7)^0,w,c
 17513  003004  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
 17514  003006  A0D8               	btfss	status,0,c
 17515  003008  EF08  F018         	goto	u6101
 17516  00300C  EF0A  F018         	goto	u6100
 17517  003010                     u6101:
 17518  003010  EF1B  F018         	goto	l6525
 17519  003014                     u6100:
 17520  003014  500D               	movf	___aodiv@divisor^0,w,c
 17521  003016  5E05               	subwf	___aodiv@dividend^0,f,c
 17522  003018  500E               	movf	(___aodiv@divisor+1)^0,w,c
 17523  00301A  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
 17524  00301C  500F               	movf	(___aodiv@divisor+2)^0,w,c
 17525  00301E  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
 17526  003020  5010               	movf	(___aodiv@divisor+3)^0,w,c
 17527  003022  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
 17528  003024  5011               	movf	(___aodiv@divisor+4)^0,w,c
 17529  003026  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
 17530  003028  5012               	movf	(___aodiv@divisor+5)^0,w,c
 17531  00302A  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
 17532  00302C  5013               	movf	(___aodiv@divisor+6)^0,w,c
 17533  00302E  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
 17534  003030  5014               	movf	(___aodiv@divisor+7)^0,w,c
 17535  003032  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
 17536  003034  8017               	bsf	___aodiv@quotient^0,0,c
 17537  003036                     l6525:
 17538  003036  90D8               	bcf	status,0,c
 17539  003038  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
 17540  00303A  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
 17541  00303C  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
 17542  00303E  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
 17543  003040  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
 17544  003042  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
 17545  003044  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
 17546  003046  320D               	rrcf	___aodiv@divisor^0,f,c
 17547  003048  2E15               	decfsz	___aodiv@counter^0,f,c
 17548  00304A  EFEA  F017         	goto	l6517
 17549  00304E                     l6529:
 17550  00304E  5016               	movf	___aodiv@sign^0,w,c
 17551  003050  B4D8               	btfsc	status,2,c
 17552  003052  EF2D  F018         	goto	u6111
 17553  003056  EF2F  F018         	goto	u6110
 17554  00305A                     u6111:
 17555  00305A  EF3F  F018         	goto	l6533
 17556  00305E                     u6110:
 17557  00305E  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
 17558  003060  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
 17559  003062  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
 17560  003064  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
 17561  003066  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
 17562  003068  1E19               	comf	(___aodiv@quotient+2)^0,f,c
 17563  00306A  1E18               	comf	(___aodiv@quotient+1)^0,f,c
 17564  00306C  6C17               	negf	___aodiv@quotient^0,c
 17565  00306E  0E00               	movlw	0
 17566  003070  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
 17567  003072  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
 17568  003074  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
 17569  003076  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
 17570  003078  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
 17571  00307A  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
 17572  00307C  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
 17573  00307E                     l6533:
 17574  00307E  C017  F005         	movff	___aodiv@quotient,?___aodiv
 17575  003082  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
 17576  003086  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
 17577  00308A  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
 17578  00308E  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
 17579  003092  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
 17580  003096  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
 17581  00309A  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
 17582  00309E  0012               	return		;funcret
 17583  0030A0                     __end_of___aodiv:
 17584                           	opt callstack 0
 17585                           
 17586 ;; *************** function _atoi *****************
 17587 ;; Defined at:
 17588 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 17589 ;; Parameters:    Size  Location     Type
 17590 ;;  s               2   11[COMRAM] PTR const unsigned char 
 17591 ;;		 -> STR_124(12), STR_122(13), STR_121(17), STR_120(15), 
 17592 ;;		 -> STR_119(33), STR_117(38), STR_116(58), STR_115(17), 
 17593 ;;		 -> STR_114(16), STR_113(4), STR_112(15), STR_111(19), 
 17594 ;;		 -> STR_110(32), STR_109(33), STR_108(37), STR_107(44), 
 17595 ;;		 -> STR_106(22), STR_105(75), STR_104(53), STR_103(69), 
 17596 ;;		 -> STR_102(54), STR_101(52), STR_100(40), STR_99(30), 
 17597 ;;		 -> STR_98(43), STR_97(73), STR_96(42), STR_95(36), 
 17598 ;;		 -> STR_94(34), STR_91(42), STR_90(22), STR_89(21), 
 17599 ;;		 -> STR_88(20), STR_87(19), STR_86(40), STR_76(32), 
 17600 ;;		 -> STR_75(37), STR_74(16), STR_73(24), STR_72(4), 
 17601 ;;		 -> STR_71(24), STR_70(30), STR_69(30), STR_68(37), 
 17602 ;;		 -> STR_67(37), STR_66(38), STR_65(38), STR_64(54), 
 17603 ;;		 -> STR_63(36), STR_62(32), STR_61(32), STR_60(35), 
 17604 ;;		 -> STR_59(54), STR_58(38), STR_57(54), STR_56(36), 
 17605 ;;		 -> STR_55(19), STR_54(54), STR_53(15), STR_52(30), 
 17606 ;;		 -> STR_51(52), STR_50(28), STR_49(30), STR_48(52), 
 17607 ;;		 -> STR_47(25), STR_46(30), STR_45(52), STR_44(25), 
 17608 ;;		 -> STR_43(30), STR_42(52), STR_41(23), STR_40(30), 
 17609 ;;		 -> STR_39(42), STR_38(21), STR_37(30), STR_36(52), 
 17610 ;;		 -> STR_35(21), STR_34(30), STR_33(52), STR_32(25), 
 17611 ;;		 -> STR_31(36), STR_30(3), STR_29(32), STR_28(32), 
 17612 ;;		 -> STR_27(35), STR_26(66), STR_25(38), STR_24(37), 
 17613 ;;		 -> STR_23(37), STR_22(38), STR_21(38), STR_20(55), 
 17614 ;;		 -> STR_19(36), STR_18(30), STR_17(30), STR_16(37), 
 17615 ;;		 -> STR_15(37), STR_14(38), STR_13(38), STR_12(54), 
 17616 ;;		 -> STR_11(36), STR_10(21), STR_9(28), STR_8(54), 
 17617 ;;		 -> STR_7(27), STR_6(16), STR_4(19), STR_3(28), 
 17618 ;;		 -> STR_2(31), STR_1(21), 
 17619 ;; Auto vars:     Size  Location     Type
 17620 ;;  n               2   24[COMRAM] int 
 17621 ;;  neg             2   17[COMRAM] int 
 17622 ;; Return value:  Size  Location     Type
 17623 ;;                  2   11[COMRAM] int 
 17624 ;; Registers used:
 17625 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17626 ;; Tracked objects:
 17627 ;;		On entry : 0/0
 17628 ;;		On exit  : 0/0
 17629 ;;		Unchanged: 0/0
 17630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17631 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17632 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17633 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17634 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17635 ;;Total ram usage:       15 bytes
 17636 ;; Hardware stack levels used:    1
 17637 ;; Hardware stack levels required when called:    5
 17638 ;; This function calls:
 17639 ;;		___wmul
 17640 ;;		_isdigit
 17641 ;;		_isspace
 17642 ;; This function is called by:
 17643 ;;		_vfpfcnvrt
 17644 ;; This function uses a non-reentrant model
 17645 ;;
 17646                           
 17647                           	psect	text71
 17648  002D7E                     __ptext71:
 17649                           	opt callstack 0
 17650  002D7E                     _atoi:
 17651                           	opt callstack 22
 17652  002D7E  0E00               	movlw	0
 17653  002D80  6E1A               	movwf	(atoi@n+1)^0,c
 17654  002D82  0E00               	movlw	0
 17655  002D84  6E19               	movwf	atoi@n^0,c
 17656  002D86  0E00               	movlw	0
 17657  002D88  6E13               	movwf	(atoi@neg+1)^0,c
 17658  002D8A  0E00               	movlw	0
 17659  002D8C  6E12               	movwf	atoi@neg^0,c
 17660  002D8E  EFCB  F016         	goto	l6833
 17661  002D92                     l6831:
 17662  002D92  4A0C               	infsnz	atoi@s^0,f,c
 17663  002D94  2A0D               	incf	(atoi@s+1)^0,f,c
 17664  002D96                     l6833:
 17665  002D96  0E01               	movlw	1
 17666  002D98  6E18               	movwf	_atoi$2396^0,c
 17667  002D9A  C00C  FFF6         	movff	atoi@s,tblptrl
 17668  002D9E  C00D  FFF7         	movff	atoi@s+1,tblptrh
 17669  002DA2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17670  002DA2  6AF8               	clrf	tblptru,c
 17671  002DA4                     	endif
 17672  002DA4                     	if	0	;tblptru may be non-zero
 17673  002DA4                     	endif
 17674  002DA4  0008               	tblrd		*
 17675  002DA6  50F5               	movf	tablat,w,c
 17676  002DA8  0A20               	xorlw	32
 17677  002DAA  B4D8               	btfsc	status,2,c
 17678  002DAC  EFDA  F016         	goto	u6761
 17679  002DB0  EFDC  F016         	goto	u6760
 17680  002DB4                     u6761:
 17681  002DB4  EFFA  F016         	goto	l6841
 17682  002DB8                     u6760:
 17683  002DB8  0EF7               	movlw	247
 17684  002DBA  6E0E               	movwf	??_atoi^0,c
 17685  002DBC  0EFF               	movlw	255
 17686  002DBE  6E0F               	movwf	(??_atoi+1)^0,c
 17687  002DC0  C00C  FFF6         	movff	atoi@s,tblptrl
 17688  002DC4  C00D  FFF7         	movff	atoi@s+1,tblptrh
 17689  002DC8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17690  002DC8  6AF8               	clrf	tblptru,c
 17691  002DCA                     	endif
 17692  002DCA                     	if	0	;tblptru may be non-zero
 17693  002DCA                     	endif
 17694  002DCA  0008               	tblrd		*
 17695  002DCC  50F5               	movf	tablat,w,c
 17696  002DCE  6E10               	movwf	(??_atoi+2)^0,c
 17697  002DD0  6A11               	clrf	(??_atoi+3)^0,c
 17698  002DD2  500E               	movf	??_atoi^0,w,c
 17699  002DD4  2610               	addwf	(??_atoi+2)^0,f,c
 17700  002DD6  500F               	movf	(??_atoi+1)^0,w,c
 17701  002DD8  2211               	addwfc	(??_atoi+3)^0,f,c
 17702  002DDA  5011               	movf	(??_atoi+3)^0,w,c
 17703  002DDC  E109               	bnz	u6770
 17704  002DDE  0E05               	movlw	5
 17705  002DE0  5C10               	subwf	(??_atoi+2)^0,w,c
 17706  002DE2  A0D8               	btfss	status,0,c
 17707  002DE4  EFF6  F016         	goto	u6771
 17708  002DE8  EFF8  F016         	goto	u6770
 17709  002DEC                     u6771:
 17710  002DEC  EFFA  F016         	goto	l6841
 17711  002DF0                     u6770:
 17712  002DF0  0E00               	movlw	0
 17713  002DF2  6E18               	movwf	_atoi$2396^0,c
 17714  002DF4                     l6841:
 17715  002DF4  C018  F014         	movff	_atoi$2396,_atoi$2395
 17716  002DF8  6A15               	clrf	(_atoi$2395+1)^0,c
 17717  002DFA  5014               	movf	_atoi$2395^0,w,c
 17718  002DFC  1015               	iorwf	(_atoi$2395+1)^0,w,c
 17719  002DFE  A4D8               	btfss	status,2,c
 17720  002E00  EF04  F017         	goto	u6781
 17721  002E04  EF06  F017         	goto	u6780
 17722  002E08                     u6781:
 17723  002E08  EFC9  F016         	goto	l6831
 17724  002E0C                     u6780:
 17725  002E0C  EF10  F017         	goto	l6851
 17726  002E10                     l6847:
 17727  002E10  0E00               	movlw	0
 17728  002E12  6E13               	movwf	(atoi@neg+1)^0,c
 17729  002E14  0E01               	movlw	1
 17730  002E16  6E12               	movwf	atoi@neg^0,c
 17731  002E18                     l6849:
 17732  002E18  4A0C               	infsnz	atoi@s^0,f,c
 17733  002E1A  2A0D               	incf	(atoi@s+1)^0,f,c
 17734  002E1C  EF47  F017         	goto	l6857
 17735  002E20                     l6851:
 17736  002E20  C00C  FFF6         	movff	atoi@s,tblptrl
 17737  002E24  C00D  FFF7         	movff	atoi@s+1,tblptrh
 17738  002E28                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17739  002E28  6AF8               	clrf	tblptru,c
 17740  002E2A                     	endif
 17741  002E2A                     	if	0	;tblptru may be non-zero
 17742  002E2A                     	endif
 17743  002E2A  0008               	tblrd		*
 17744  002E2C  50F5               	movf	tablat,w,c
 17745  002E2E  6E0E               	movwf	??_atoi^0,c
 17746  002E30  6A0F               	clrf	(??_atoi+1)^0,c
 17747                           
 17748                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17749                           ; Switch size 1, requested type "simple"
 17750                           ; Number of cases is 1, Range of values is 0 to 0
 17751                           ; switch strategies available:
 17752                           ; Name         Instructions Cycles
 17753                           ; simple_byte            4     3 (average)
 17754                           ;	Chosen strategy is simple_byte
 17755  002E32  500F               	movf	(??_atoi+1)^0,w,c
 17756  002E34  0A00               	xorlw	0	; case 0
 17757  002E36  B4D8               	btfsc	status,2,c
 17758  002E38  EF20  F017         	goto	l8321
 17759  002E3C  EF47  F017         	goto	l6857
 17760  002E40                     l8321:
 17761                           
 17762                           ; Switch size 1, requested type "simple"
 17763                           ; Number of cases is 2, Range of values is 43 to 45
 17764                           ; switch strategies available:
 17765                           ; Name         Instructions Cycles
 17766                           ; simple_byte            7     4 (average)
 17767                           ;	Chosen strategy is simple_byte
 17768  002E40  500E               	movf	??_atoi^0,w,c
 17769  002E42  0A2B               	xorlw	43	; case 43
 17770  002E44  B4D8               	btfsc	status,2,c
 17771  002E46  EF0C  F017         	goto	l6849
 17772  002E4A  0A06               	xorlw	6	; case 45
 17773  002E4C  B4D8               	btfsc	status,2,c
 17774  002E4E  EF08  F017         	goto	l6847
 17775  002E52  EF47  F017         	goto	l6857
 17776  002E56                     l6853:
 17777  002E56  C019  F005         	movff	atoi@n,___wmul@multiplier
 17778  002E5A  C01A  F006         	movff	atoi@n+1,___wmul@multiplier+1
 17779  002E5E  0E00               	movlw	0
 17780  002E60  6E08               	movwf	(___wmul@multiplicand+1)^0,c
 17781  002E62  0E0A               	movlw	10
 17782  002E64  6E07               	movwf	___wmul@multiplicand^0,c
 17783  002E66  EC64  F026         	call	___wmul	;wreg free
 17784  002E6A  C00C  FFF6         	movff	atoi@s,tblptrl
 17785  002E6E  C00D  FFF7         	movff	atoi@s+1,tblptrh
 17786  002E72                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17787  002E72  6AF8               	clrf	tblptru,c
 17788  002E74                     	endif
 17789  002E74                     	if	0	;tblptru may be non-zero
 17790  002E74                     	endif
 17791  002E74  0008               	tblrd		*
 17792  002E76  50F5               	movf	tablat,w,c
 17793  002E78  5E05               	subwf	?___wmul^0,f,c
 17794  002E7A  0E00               	movlw	0
 17795  002E7C  5A06               	subwfb	(?___wmul+1)^0,f,c
 17796  002E7E  0E30               	movlw	48
 17797  002E80  2405               	addwf	?___wmul^0,w,c
 17798  002E82  6E19               	movwf	atoi@n^0,c
 17799  002E84  0E00               	movlw	0
 17800  002E86  2006               	addwfc	(?___wmul+1)^0,w,c
 17801  002E88  6E1A               	movwf	(atoi@n+1)^0,c
 17802  002E8A  EF0C  F017         	goto	l6849
 17803  002E8E                     l6857:
 17804  002E8E  0ED0               	movlw	208
 17805  002E90  6E0E               	movwf	??_atoi^0,c
 17806  002E92  0EFF               	movlw	255
 17807  002E94  6E0F               	movwf	(??_atoi+1)^0,c
 17808  002E96  C00C  FFF6         	movff	atoi@s,tblptrl
 17809  002E9A  C00D  FFF7         	movff	atoi@s+1,tblptrh
 17810  002E9E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17811  002E9E  6AF8               	clrf	tblptru,c
 17812  002EA0                     	endif
 17813  002EA0                     	if	0	;tblptru may be non-zero
 17814  002EA0                     	endif
 17815  002EA0  0008               	tblrd		*
 17816  002EA2  50F5               	movf	tablat,w,c
 17817  002EA4  6E10               	movwf	(??_atoi+2)^0,c
 17818  002EA6  6A11               	clrf	(??_atoi+3)^0,c
 17819  002EA8  500E               	movf	??_atoi^0,w,c
 17820  002EAA  2610               	addwf	(??_atoi+2)^0,f,c
 17821  002EAC  500F               	movf	(??_atoi+1)^0,w,c
 17822  002EAE  2211               	addwfc	(??_atoi+3)^0,f,c
 17823  002EB0  5011               	movf	(??_atoi+3)^0,w,c
 17824  002EB2  E10A               	bnz	u6790
 17825  002EB4  0E0A               	movlw	10
 17826  002EB6  5C10               	subwf	(??_atoi+2)^0,w,c
 17827  002EB8  A0D8               	btfss	status,0,c
 17828  002EBA  EF61  F017         	goto	u6791
 17829  002EBE  EF64  F017         	goto	u6790
 17830  002EC2                     u6791:
 17831  002EC2  0E01               	movlw	1
 17832  002EC4  EF65  F017         	goto	u6800
 17833  002EC8                     u6790:
 17834  002EC8  0E00               	movlw	0
 17835  002ECA                     u6800:
 17836  002ECA  6E16               	movwf	_atoi$2397^0,c
 17837  002ECC  6A17               	clrf	(_atoi$2397+1)^0,c
 17838  002ECE  5016               	movf	_atoi$2397^0,w,c
 17839  002ED0  1017               	iorwf	(_atoi$2397+1)^0,w,c
 17840  002ED2  A4D8               	btfss	status,2,c
 17841  002ED4  EF6E  F017         	goto	u6811
 17842  002ED8  EF70  F017         	goto	u6810
 17843  002EDC                     u6811:
 17844  002EDC  EF2B  F017         	goto	l6853
 17845  002EE0                     u6810:
 17846  002EE0  5012               	movf	atoi@neg^0,w,c
 17847  002EE2  1013               	iorwf	(atoi@neg+1)^0,w,c
 17848  002EE4  A4D8               	btfss	status,2,c
 17849  002EE6  EF77  F017         	goto	u6821
 17850  002EEA  EF79  F017         	goto	u6820
 17851  002EEE                     u6821:
 17852  002EEE  EF87  F017         	goto	l2053
 17853  002EF2                     u6820:
 17854  002EF2  C019  F00E         	movff	atoi@n,??_atoi
 17855  002EF6  C01A  F00F         	movff	atoi@n+1,??_atoi+1
 17856  002EFA  1E0E               	comf	??_atoi^0,f,c
 17857  002EFC  1E0F               	comf	(??_atoi+1)^0,f,c
 17858  002EFE  4A0E               	infsnz	??_atoi^0,f,c
 17859  002F00  2A0F               	incf	(??_atoi+1)^0,f,c
 17860  002F02  C00E  F00C         	movff	??_atoi,?_atoi
 17861  002F06  C00F  F00D         	movff	??_atoi+1,?_atoi+1
 17862  002F0A  EF8B  F017         	goto	l2056
 17863  002F0E                     l2053:
 17864  002F0E  C019  F00C         	movff	atoi@n,?_atoi
 17865  002F12  C01A  F00D         	movff	atoi@n+1,?_atoi+1
 17866  002F16                     l2056:
 17867  002F16  0012               	return		;funcret
 17868  002F18                     __end_of_atoi:
 17869                           	opt callstack 0
 17870                           
 17871 ;; *************** function _isspace *****************
 17872 ;; Defined at:
 17873 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 17874 ;; Parameters:    Size  Location     Type
 17875 ;;  c               2    4[COMRAM] int 
 17876 ;; Auto vars:     Size  Location     Type
 17877 ;;		None
 17878 ;; Return value:  Size  Location     Type
 17879 ;;                  2    4[COMRAM] int 
 17880 ;; Registers used:
 17881 ;;		wreg, status,2, status,0
 17882 ;; Tracked objects:
 17883 ;;		On entry : 0/0
 17884 ;;		On exit  : 0/0
 17885 ;;		Unchanged: 0/0
 17886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17887 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17888 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17889 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17890 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17891 ;;Total ram usage:        7 bytes
 17892 ;; Hardware stack levels used:    1
 17893 ;; Hardware stack levels required when called:    4
 17894 ;; This function calls:
 17895 ;;		Nothing
 17896 ;; This function is called by:
 17897 ;;		_atoi
 17898 ;; This function uses a non-reentrant model
 17899 ;;
 17900                           
 17901                           	psect	text72
 17902  00473A                     __ptext72:
 17903                           	opt callstack 0
 17904  00473A                     _isspace:
 17905                           	opt callstack 22
 17906  00473A  0E01               	movlw	1
 17907  00473C  6E0B               	movwf	_isspace$2422^0,c
 17908  00473E  0E20               	movlw	32
 17909  004740  1805               	xorwf	isspace@c^0,w,c
 17910  004742  1006               	iorwf	(isspace@c+1)^0,w,c
 17911  004744  B4D8               	btfsc	status,2,c
 17912  004746  EFA7  F023         	goto	u6251
 17913  00474A  EFA9  F023         	goto	u6250
 17914  00474E                     u6251:
 17915  00474E  EFC2  F023         	goto	l6619
 17916  004752                     u6250:
 17917  004752  0EF7               	movlw	247
 17918  004754  6E07               	movwf	??_isspace^0,c
 17919  004756  0EFF               	movlw	255
 17920  004758  6E08               	movwf	(??_isspace+1)^0,c
 17921  00475A  C005  F009         	movff	isspace@c,??_isspace+2
 17922  00475E  C006  F00A         	movff	isspace@c+1,??_isspace+3
 17923  004762  5007               	movf	??_isspace^0,w,c
 17924  004764  2609               	addwf	(??_isspace+2)^0,f,c
 17925  004766  5008               	movf	(??_isspace+1)^0,w,c
 17926  004768  220A               	addwfc	(??_isspace+3)^0,f,c
 17927  00476A  500A               	movf	(??_isspace+3)^0,w,c
 17928  00476C  E109               	bnz	u6260
 17929  00476E  0E05               	movlw	5
 17930  004770  5C09               	subwf	(??_isspace+2)^0,w,c
 17931  004772  A0D8               	btfss	status,0,c
 17932  004774  EFBE  F023         	goto	u6261
 17933  004778  EFC0  F023         	goto	u6260
 17934  00477C                     u6261:
 17935  00477C  EFC2  F023         	goto	l6619
 17936  004780                     u6260:
 17937  004780  0E00               	movlw	0
 17938  004782  6E0B               	movwf	_isspace$2422^0,c
 17939  004784                     l6619:
 17940  004784  C00B  F005         	movff	_isspace$2422,?_isspace
 17941  004788  6A06               	clrf	(?_isspace+1)^0,c
 17942  00478A  0012               	return		;funcret
 17943  00478C                     __end_of_isspace:
 17944                           	opt callstack 0
 17945                           
 17946 ;; *************** function _isdigit *****************
 17947 ;; Defined at:
 17948 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 17949 ;; Parameters:    Size  Location     Type
 17950 ;;  c               2    4[COMRAM] int 
 17951 ;; Auto vars:     Size  Location     Type
 17952 ;;		None
 17953 ;; Return value:  Size  Location     Type
 17954 ;;                  2    4[COMRAM] int 
 17955 ;; Registers used:
 17956 ;;		wreg, status,2, status,0
 17957 ;; Tracked objects:
 17958 ;;		On entry : 0/0
 17959 ;;		On exit  : 0/0
 17960 ;;		Unchanged: 0/0
 17961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17962 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17964 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17965 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17966 ;;Total ram usage:        6 bytes
 17967 ;; Hardware stack levels used:    1
 17968 ;; Hardware stack levels required when called:    4
 17969 ;; This function calls:
 17970 ;;		Nothing
 17971 ;; This function is called by:
 17972 ;;		_vfpfcnvrt
 17973 ;;		_atoi
 17974 ;; This function uses a non-reentrant model
 17975 ;;
 17976                           
 17977                           	psect	text73
 17978  004BBC                     __ptext73:
 17979                           	opt callstack 0
 17980  004BBC                     _isdigit:
 17981                           	opt callstack 23
 17982  004BBC  0ED0               	movlw	208
 17983  004BBE  6E07               	movwf	??_isdigit^0,c
 17984  004BC0  0EFF               	movlw	255
 17985  004BC2  6E08               	movwf	(??_isdigit+1)^0,c
 17986  004BC4  C005  F009         	movff	isdigit@c,??_isdigit+2
 17987  004BC8  C006  F00A         	movff	isdigit@c+1,??_isdigit+3
 17988  004BCC  5007               	movf	??_isdigit^0,w,c
 17989  004BCE  2609               	addwf	(??_isdigit+2)^0,f,c
 17990  004BD0  5008               	movf	(??_isdigit+1)^0,w,c
 17991  004BD2  220A               	addwfc	(??_isdigit+3)^0,f,c
 17992  004BD4  500A               	movf	(??_isdigit+3)^0,w,c
 17993  004BD6  E10A               	bnz	u6030
 17994  004BD8  0E0A               	movlw	10
 17995  004BDA  5C09               	subwf	(??_isdigit+2)^0,w,c
 17996  004BDC  A0D8               	btfss	status,0,c
 17997  004BDE  EFF3  F025         	goto	u6031
 17998  004BE2  EFF6  F025         	goto	u6030
 17999  004BE6                     u6031:
 18000  004BE6  0E01               	movlw	1
 18001  004BE8  EFF7  F025         	goto	u6040
 18002  004BEC                     u6030:
 18003  004BEC  0E00               	movlw	0
 18004  004BEE                     u6040:
 18005  004BEE  6E05               	movwf	?_isdigit^0,c
 18006  004BF0  6A06               	clrf	(?_isdigit+1)^0,c
 18007  004BF2  0012               	return		;funcret
 18008  004BF4                     __end_of_isdigit:
 18009                           	opt callstack 0
 18010                           
 18011 ;; *************** function ___wmul *****************
 18012 ;; Defined at:
 18013 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 18014 ;; Parameters:    Size  Location     Type
 18015 ;;  multiplier      2    4[COMRAM] unsigned int 
 18016 ;;  multiplicand    2    6[COMRAM] unsigned int 
 18017 ;; Auto vars:     Size  Location     Type
 18018 ;;  product         2    8[COMRAM] unsigned int 
 18019 ;; Return value:  Size  Location     Type
 18020 ;;                  2    4[COMRAM] unsigned int 
 18021 ;; Registers used:
 18022 ;;		wreg, status,2, status,0, prodl, prodh
 18023 ;; Tracked objects:
 18024 ;;		On entry : 0/0
 18025 ;;		On exit  : 0/0
 18026 ;;		Unchanged: 0/0
 18027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18028 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18029 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18031 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18032 ;;Total ram usage:        6 bytes
 18033 ;; Hardware stack levels used:    1
 18034 ;; Hardware stack levels required when called:    4
 18035 ;; This function calls:
 18036 ;;		Nothing
 18037 ;; This function is called by:
 18038 ;;		_atoi
 18039 ;; This function uses a non-reentrant model
 18040 ;;
 18041                           
 18042                           	psect	text74
 18043  004CC8                     __ptext74:
 18044                           	opt callstack 0
 18045  004CC8                     ___wmul:
 18046                           	opt callstack 22
 18047  004CC8  5005               	movf	___wmul@multiplier^0,w,c
 18048  004CCA  0207               	mulwf	___wmul@multiplicand^0,c
 18049  004CCC  CFF3 F009          	movff	prodl,___wmul@product
 18050  004CD0  CFF4 F00A          	movff	prodh,___wmul@product+1
 18051  004CD4  5005               	movf	___wmul@multiplier^0,w,c
 18052  004CD6  0208               	mulwf	(___wmul@multiplicand+1)^0,c
 18053  004CD8  50F3               	movf	243,w,c
 18054  004CDA  260A               	addwf	(___wmul@product+1)^0,f,c
 18055  004CDC  5006               	movf	(___wmul@multiplier+1)^0,w,c
 18056  004CDE  0207               	mulwf	___wmul@multiplicand^0,c
 18057  004CE0  50F3               	movf	243,w,c
 18058  004CE2  260A               	addwf	(___wmul@product+1)^0,f,c
 18059  004CE4  C009  F005         	movff	___wmul@product,?___wmul
 18060  004CE8  C00A  F006         	movff	___wmul@product+1,?___wmul+1
 18061  004CEC  0012               	return		;funcret
 18062  004CEE                     __end_of___wmul:
 18063                           	opt callstack 0
 18064                           
 18065 ;; *************** function _ModbusError *****************
 18066 ;; Defined at:
 18067 ;;		line 543 in file "Modbus.c"
 18068 ;; Parameters:    Size  Location     Type
 18069 ;;  ErrorCode       2   19[COMRAM] int 
 18070 ;; Auto vars:     Size  Location     Type
 18071 ;;  i               2    0        int 
 18072 ;; Return value:  Size  Location     Type
 18073 ;;                  1    wreg      void 
 18074 ;; Registers used:
 18075 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18076 ;; Tracked objects:
 18077 ;;		On entry : 0/0
 18078 ;;		On exit  : 0/0
 18079 ;;		Unchanged: 0/0
 18080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18081 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18082 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18084 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18085 ;;Total ram usage:        4 bytes
 18086 ;; Hardware stack levels used:    1
 18087 ;; Hardware stack levels required when called:    6
 18088 ;; This function calls:
 18089 ;;		_UART1_Write_string
 18090 ;;		_generateCRC
 18091 ;; This function is called by:
 18092 ;;		_main
 18093 ;;		_ModbusFC03
 18094 ;;		_ModbusFC10
 18095 ;; This function uses a non-reentrant model
 18096 ;;
 18097                           
 18098                           	psect	text75
 18099  003DE6                     __ptext75:
 18100                           	opt callstack 0
 18101  003DE6                     _ModbusError:
 18102                           	opt callstack 23
 18103  003DE6                     
 18104                           ;Modbus.c: 548:     MBResCnt = 0;
 18105  003DE6  0E00               	movlw	0
 18106  003DE8  0100               	movlb	0	; () banked
 18107  003DEA  6FD8               	movwf	(_MBResCnt+1)& (0+255),b
 18108  003DEC  0E00               	movlw	0
 18109  003DEE  6FD7               	movwf	_MBResCnt& (0+255),b
 18110  003DF0                     
 18111                           ; BSR set to: 0
 18112                           ;Modbus.c: 549:     MBRespon[MBResCnt] = ModbusData[0];
 18113  003DF0  0E57               	movlw	low _MBRespon
 18114  003DF2  25D7               	addwf	_MBResCnt& (0+255),w,b
 18115  003DF4  6ED9               	movwf	fsr2l,c
 18116  003DF6  0E02               	movlw	high _MBRespon
 18117  003DF8  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 18118  003DFA  6EDA               	movwf	fsr2h,c
 18119  003DFC  C100  FFDF         	movff	_ModbusData,indf2
 18120  003E00                     
 18121                           ; BSR set to: 0
 18122                           ;Modbus.c: 550:     MBResCnt++;
 18123  003E00  4BD7               	infsnz	_MBResCnt& (0+255),f,b
 18124  003E02  2BD8               	incf	(_MBResCnt+1)& (0+255),f,b
 18125  003E04                     
 18126                           ; BSR set to: 0
 18127                           ;Modbus.c: 551:     MBRespon[MBResCnt] = ModbusData[1] + 128;
 18128  003E04  0E57               	movlw	low _MBRespon
 18129  003E06  25D7               	addwf	_MBResCnt& (0+255),w,b
 18130  003E08  6ED9               	movwf	fsr2l,c
 18131  003E0A  0E02               	movlw	high _MBRespon
 18132  003E0C  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 18133  003E0E  6EDA               	movwf	fsr2h,c
 18134  003E10  0101               	movlb	1	; () banked
 18135  003E12  5101               	movf	(_ModbusData+1)& (0+255),w,b
 18136  003E14  0F80               	addlw	128
 18137  003E16  6EDF               	movwf	indf2,c
 18138  003E18                     
 18139                           ; BSR set to: 1
 18140                           ;Modbus.c: 552:     MBResCnt++;
 18141  003E18  0100               	movlb	0	; () banked
 18142  003E1A  4BD7               	infsnz	_MBResCnt& (0+255),f,b
 18143  003E1C  2BD8               	incf	(_MBResCnt+1)& (0+255),f,b
 18144  003E1E                     
 18145                           ; BSR set to: 0
 18146                           ;Modbus.c: 553:     MBRespon[MBResCnt] = ErrorCode;
 18147  003E1E  0E57               	movlw	low _MBRespon
 18148  003E20  25D7               	addwf	_MBResCnt& (0+255),w,b
 18149  003E22  6ED9               	movwf	fsr2l,c
 18150  003E24  0E02               	movlw	high _MBRespon
 18151  003E26  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 18152  003E28  6EDA               	movwf	fsr2h,c
 18153  003E2A  C014  FFDF         	movff	ModbusError@ErrorCode,indf2
 18154  003E2E                     
 18155                           ; BSR set to: 0
 18156                           ;Modbus.c: 554:     MBResCnt++;
 18157  003E2E  4BD7               	infsnz	_MBResCnt& (0+255),f,b
 18158  003E30  2BD8               	incf	(_MBResCnt+1)& (0+255),f,b
 18159  003E32                     
 18160                           ; BSR set to: 0
 18161                           ;Modbus.c: 556:     ByteHi = generateCRC(MBResCnt, 1);
 18162  003E32  C0D7  F005         	movff	_MBResCnt,generateCRC@MessCnt
 18163  003E36  C0D8  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
 18164  003E3A  0E01               	movlw	1
 18165  003E3C  6E07               	movwf	generateCRC@HiOrLo^0,c
 18166  003E3E  ECF1  F01C         	call	_generateCRC	;wreg free
 18167  003E42  C005  F0D5         	movff	?_generateCRC,_ByteHi
 18168  003E46  C006  F0D6         	movff	?_generateCRC+1,_ByteHi+1
 18169  003E4A                     
 18170                           ;Modbus.c: 557:     ByteLo = generateCRC(MBResCnt, 0);
 18171  003E4A  C0D7  F005         	movff	_MBResCnt,generateCRC@MessCnt
 18172  003E4E  C0D8  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
 18173  003E52  0E00               	movlw	0
 18174  003E54  6E07               	movwf	generateCRC@HiOrLo^0,c
 18175  003E56  ECF1  F01C         	call	_generateCRC	;wreg free
 18176  003E5A  C005  F0F6         	movff	?_generateCRC,_ByteLo
 18177  003E5E  C006  F0F7         	movff	?_generateCRC+1,_ByteLo+1
 18178  003E62                     
 18179                           ;Modbus.c: 559:     MBRespon[MBResCnt] = ByteHi;
 18180  003E62  0E57               	movlw	low _MBRespon
 18181  003E64  0100               	movlb	0	; () banked
 18182  003E66  25D7               	addwf	_MBResCnt& (0+255),w,b
 18183  003E68  6ED9               	movwf	fsr2l,c
 18184  003E6A  0E02               	movlw	high _MBRespon
 18185  003E6C  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 18186  003E6E  6EDA               	movwf	fsr2h,c
 18187  003E70  C0D5  FFDF         	movff	_ByteHi,indf2
 18188  003E74                     
 18189                           ; BSR set to: 0
 18190                           ;Modbus.c: 560:     MBRespon[MBResCnt +1] = ByteLo;
 18191  003E74  0E58               	movlw	low (_MBRespon+1)
 18192  003E76  25D7               	addwf	_MBResCnt& (0+255),w,b
 18193  003E78  6ED9               	movwf	fsr2l,c
 18194  003E7A  0E02               	movlw	high (_MBRespon+1)
 18195  003E7C  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 18196  003E7E  6EDA               	movwf	fsr2h,c
 18197  003E80  C0F6  FFDF         	movff	_ByteLo,indf2
 18198  003E84                     
 18199                           ; BSR set to: 0
 18200                           ;Modbus.c: 561:     MBResCnt = MBResCnt +2;
 18201  003E84  0E02               	movlw	2
 18202  003E86  25D7               	addwf	_MBResCnt& (0+255),w,b
 18203  003E88  6FD7               	movwf	_MBResCnt& (0+255),b
 18204  003E8A  0E00               	movlw	0
 18205  003E8C  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 18206  003E8E  6FD8               	movwf	(_MBResCnt+1)& (0+255),b
 18207  003E90                     
 18208                           ; BSR set to: 0
 18209                           ;Modbus.c: 563:     UART1_Write_string(MBRespon,MBResCnt);
 18210  003E90  0E57               	movlw	low _MBRespon
 18211  003E92  6E06               	movwf	UART1_Write_string@data^0,c
 18212  003E94  0E02               	movlw	high _MBRespon
 18213  003E96  6E07               	movwf	(UART1_Write_string@data+1)^0,c
 18214  003E98  C0D7  F008         	movff	_MBResCnt,UART1_Write_string@data_len
 18215  003E9C  C0D8  F009         	movff	_MBResCnt+1,UART1_Write_string@data_len+1
 18216  003EA0  ECBE  F021         	call	_UART1_Write_string	;wreg free
 18217  003EA4  0012               	return		;funcret
 18218  003EA6                     __end_of_ModbusError:
 18219                           	opt callstack 0
 18220                           
 18221 ;; *************** function _generateCRC *****************
 18222 ;; Defined at:
 18223 ;;		line 435 in file "Modbus.c"
 18224 ;; Parameters:    Size  Location     Type
 18225 ;;  MessCnt         2    4[COMRAM] int 
 18226 ;;  HiOrLo          1    6[COMRAM] _Bool 
 18227 ;; Auto vars:     Size  Location     Type
 18228 ;;  crc             2   17[COMRAM] unsigned int 
 18229 ;;  j               2   15[COMRAM] int 
 18230 ;;  i               2   13[COMRAM] int 
 18231 ;;  crcLow          2   11[COMRAM] unsigned int 
 18232 ;;  crcHigh         2    9[COMRAM] unsigned int 
 18233 ;; Return value:  Size  Location     Type
 18234 ;;                  2    4[COMRAM] unsigned int 
 18235 ;; Registers used:
 18236 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18237 ;; Tracked objects:
 18238 ;;		On entry : 0/0
 18239 ;;		On exit  : 0/0
 18240 ;;		Unchanged: 0/0
 18241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18242 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18243 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18244 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18245 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18246 ;;Total ram usage:       15 bytes
 18247 ;; Hardware stack levels used:    1
 18248 ;; Hardware stack levels required when called:    4
 18249 ;; This function calls:
 18250 ;;		Nothing
 18251 ;; This function is called by:
 18252 ;;		_ModbusFC03
 18253 ;;		_ModbusFC10
 18254 ;;		_ModbusError
 18255 ;; This function uses a non-reentrant model
 18256 ;;
 18257                           
 18258                           	psect	text76
 18259  0039E2                     __ptext76:
 18260                           	opt callstack 0
 18261  0039E2                     _generateCRC:
 18262                           	opt callstack 25
 18263  0039E2                     
 18264                           ;Modbus.c: 436:   unsigned int crc = 0xFFFF;
 18265  0039E2  6812               	setf	generateCRC@crc^0,c
 18266  0039E4  6813               	setf	(generateCRC@crc+1)^0,c
 18267  0039E6                     
 18268                           ;Modbus.c: 438:   unsigned int crcLow = 0;
 18269  0039E6  0E00               	movlw	0
 18270  0039E8  6E0D               	movwf	(generateCRC@crcLow+1)^0,c
 18271  0039EA  0E00               	movlw	0
 18272  0039EC  6E0C               	movwf	generateCRC@crcLow^0,c
 18273                           
 18274                           ;Modbus.c: 439:   int i,j = 0;
 18275  0039EE  0E00               	movlw	0
 18276  0039F0  6E11               	movwf	(generateCRC@j+1)^0,c
 18277  0039F2  0E00               	movlw	0
 18278  0039F4  6E10               	movwf	generateCRC@j^0,c
 18279                           
 18280                           ;Modbus.c: 441:     for(i=0;i<MessCnt;i++){
 18281  0039F6  0E00               	movlw	0
 18282  0039F8  6E0F               	movwf	(generateCRC@i+1)^0,c
 18283  0039FA  0E00               	movlw	0
 18284  0039FC  6E0E               	movwf	generateCRC@i^0,c
 18285  0039FE  EF30  F01D         	goto	l7235
 18286  003A02                     l7217:
 18287                           
 18288                           ;Modbus.c: 442:       crc ^= MBRespon[i];
 18289  003A02  0E57               	movlw	low _MBRespon
 18290  003A04  240E               	addwf	generateCRC@i^0,w,c
 18291  003A06  6ED9               	movwf	fsr2l,c
 18292  003A08  0E02               	movlw	high _MBRespon
 18293  003A0A  200F               	addwfc	(generateCRC@i+1)^0,w,c
 18294  003A0C  6EDA               	movwf	fsr2h,c
 18295  003A0E  50DF               	movf	indf2,w,c
 18296  003A10  6E08               	movwf	??_generateCRC^0,c
 18297  003A12  5008               	movf	??_generateCRC^0,w,c
 18298  003A14  1A12               	xorwf	generateCRC@crc^0,f,c
 18299  003A16                     
 18300                           ;Modbus.c: 443:       for(j=8; j!=0; j--){
 18301  003A16  0E00               	movlw	0
 18302  003A18  6E11               	movwf	(generateCRC@j+1)^0,c
 18303  003A1A  0E08               	movlw	8
 18304  003A1C  6E10               	movwf	generateCRC@j^0,c
 18305  003A1E                     l806:
 18306                           
 18307                           ;Modbus.c: 444:         if((crc & 0x0001) != 0){
 18308  003A1E  A012               	btfss	generateCRC@crc^0,0,c
 18309  003A20  EF14  F01D         	goto	u7291
 18310  003A24  EF16  F01D         	goto	u7290
 18311  003A28                     u7291:
 18312  003A28  EF1F  F01D         	goto	l7229
 18313  003A2C                     u7290:
 18314  003A2C                     
 18315                           ;Modbus.c: 445:           crc >>= 1;
 18316  003A2C  90D8               	bcf	status,0,c
 18317  003A2E  3213               	rrcf	(generateCRC@crc+1)^0,f,c
 18318  003A30  3212               	rrcf	generateCRC@crc^0,f,c
 18319  003A32                     
 18320                           ;Modbus.c: 446:           crc ^= 0xA001;
 18321  003A32  0E01               	movlw	1
 18322  003A34  1A12               	xorwf	generateCRC@crc^0,f,c
 18323  003A36  0EA0               	movlw	160
 18324  003A38  1A13               	xorwf	(generateCRC@crc+1)^0,f,c
 18325                           
 18326                           ;Modbus.c: 447:         }
 18327  003A3A  EF22  F01D         	goto	l809
 18328  003A3E                     l7229:
 18329                           
 18330                           ;Modbus.c: 449:           crc >>= 1;
 18331  003A3E  90D8               	bcf	status,0,c
 18332  003A40  3213               	rrcf	(generateCRC@crc+1)^0,f,c
 18333  003A42  3212               	rrcf	generateCRC@crc^0,f,c
 18334  003A44                     l809:
 18335                           
 18336                           ;Modbus.c: 451:       }
 18337  003A44  0610               	decf	generateCRC@j^0,f,c
 18338  003A46  A0D8               	btfss	status,0,c
 18339  003A48  0611               	decf	(generateCRC@j+1)^0,f,c
 18340  003A4A  5010               	movf	generateCRC@j^0,w,c
 18341  003A4C  1011               	iorwf	(generateCRC@j+1)^0,w,c
 18342  003A4E  A4D8               	btfss	status,2,c
 18343  003A50  EF2C  F01D         	goto	u7301
 18344  003A54  EF2E  F01D         	goto	u7300
 18345  003A58                     u7301:
 18346  003A58  EF0F  F01D         	goto	l806
 18347  003A5C                     u7300:
 18348  003A5C                     
 18349                           ;Modbus.c: 452:     }
 18350  003A5C  4A0E               	infsnz	generateCRC@i^0,f,c
 18351  003A5E  2A0F               	incf	(generateCRC@i+1)^0,f,c
 18352  003A60                     l7235:
 18353  003A60  5005               	movf	generateCRC@MessCnt^0,w,c
 18354  003A62  5C0E               	subwf	generateCRC@i^0,w,c
 18355  003A64  500F               	movf	(generateCRC@i+1)^0,w,c
 18356  003A66  0A80               	xorlw	128
 18357  003A68  6E08               	movwf	??_generateCRC^0,c
 18358  003A6A  5006               	movf	(generateCRC@MessCnt+1)^0,w,c
 18359  003A6C  0A80               	xorlw	128
 18360  003A6E  5808               	subwfb	??_generateCRC^0,w,c
 18361  003A70  A0D8               	btfss	status,0,c
 18362  003A72  EF3D  F01D         	goto	u7311
 18363  003A76  EF3F  F01D         	goto	u7310
 18364  003A7A                     u7311:
 18365  003A7A  EF01  F01D         	goto	l7217
 18366  003A7E                     u7310:
 18367  003A7E                     
 18368                           ;Modbus.c: 454:     crcHigh = (crc & 0x00FF);
 18369  003A7E  5012               	movf	generateCRC@crc^0,w,c
 18370  003A80  6E0A               	movwf	generateCRC@crcHigh^0,c
 18371  003A82  6A0B               	clrf	(generateCRC@crcHigh+1)^0,c
 18372                           
 18373                           ;Modbus.c: 455:     crcLow = (crc & 0xFF00) >>8;
 18374  003A84  C012  F008         	movff	generateCRC@crc,??_generateCRC
 18375  003A88  C013  F009         	movff	generateCRC@crc+1,??_generateCRC+1
 18376  003A8C  C009  F008         	movff	??_generateCRC+1,??_generateCRC
 18377  003A90  6A09               	clrf	(??_generateCRC+1)^0,c
 18378  003A92  5008               	movf	??_generateCRC^0,w,c
 18379  003A94  6E0C               	movwf	generateCRC@crcLow^0,c
 18380  003A96  6A0D               	clrf	(generateCRC@crcLow+1)^0,c
 18381  003A98                     
 18382                           ;Modbus.c: 457:     if(HiOrLo == 1){
 18383  003A98  0407               	decf	generateCRC@HiOrLo^0,w,c
 18384  003A9A  A4D8               	btfss	status,2,c
 18385  003A9C  EF52  F01D         	goto	u7321
 18386  003AA0  EF54  F01D         	goto	u7320
 18387  003AA4                     u7321:
 18388  003AA4  EF5A  F01D         	goto	l811
 18389  003AA8                     u7320:
 18390  003AA8                     
 18391                           ;Modbus.c: 458:         return crcHigh;
 18392  003AA8  C00A  F005         	movff	generateCRC@crcHigh,?_generateCRC
 18393  003AAC  C00B  F006         	movff	generateCRC@crcHigh+1,?_generateCRC+1
 18394  003AB0  EF5E  F01D         	goto	l812
 18395  003AB4                     l811:
 18396                           
 18397                           ;Modbus.c: 460:         return crcLow;
 18398  003AB4  C00C  F005         	movff	generateCRC@crcLow,?_generateCRC
 18399  003AB8  C00D  F006         	movff	generateCRC@crcLow+1,?_generateCRC+1
 18400  003ABC                     l812:
 18401  003ABC  0012               	return		;funcret
 18402  003ABE                     __end_of_generateCRC:
 18403                           	opt callstack 0
 18404                           
 18405 ;; *************** function _UART1_Write_string *****************
 18406 ;; Defined at:
 18407 ;;		line 465 in file "Modbus.c"
 18408 ;; Parameters:    Size  Location     Type
 18409 ;;  data            2    5[COMRAM] PTR unsigned char 
 18410 ;;		 -> MBRespon(75), 
 18411 ;;  data_len        2    7[COMRAM] int 
 18412 ;; Auto vars:     Size  Location     Type
 18413 ;;  i               2   10[COMRAM] int 
 18414 ;; Return value:  Size  Location     Type
 18415 ;;                  1    wreg      void 
 18416 ;; Registers used:
 18417 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18418 ;; Tracked objects:
 18419 ;;		On entry : 0/0
 18420 ;;		On exit  : 0/0
 18421 ;;		Unchanged: 0/0
 18422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18423 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18424 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18425 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18426 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18427 ;;Total ram usage:        7 bytes
 18428 ;; Hardware stack levels used:    1
 18429 ;; Hardware stack levels required when called:    5
 18430 ;; This function calls:
 18431 ;;		_EUSART1_Write
 18432 ;;		_EUSART1_is_tx_done
 18433 ;;		_EUSART1_is_tx_ready
 18434 ;;		_TXMode
 18435 ;; This function is called by:
 18436 ;;		_ModbusFC03
 18437 ;;		_ModbusFC10
 18438 ;;		_ModbusError
 18439 ;; This function uses a non-reentrant model
 18440 ;;
 18441                           
 18442                           	psect	text77
 18443  00437C                     __ptext77:
 18444                           	opt callstack 0
 18445  00437C                     _UART1_Write_string:
 18446                           	opt callstack 24
 18447  00437C                     
 18448                           ;Modbus.c: 465: void UART1_Write_string(unsigned char * data, int data_len);Modbus.c: 46
      +                          6: {;Modbus.c: 467:     TXMode();
 18449  00437C  EC3B  F027         	call	_TXMode	;wreg free
 18450  004380                     l7247:
 18451  004380  ECD2  F026         	call	_EUSART1_is_tx_ready	;wreg free
 18452  004384  0900               	iorlw	0
 18453  004386  B4D8               	btfsc	status,2,c
 18454  004388  EFC8  F021         	goto	u7331
 18455  00438C  EFCA  F021         	goto	u7330
 18456  004390                     u7331:
 18457  004390  EFC0  F021         	goto	l7247
 18458  004394                     u7330:
 18459  004394                     
 18460                           ;Modbus.c: 469:     for (int i = 0; i < data_len; i++) {
 18461  004394  0E00               	movlw	0
 18462  004396  6E0C               	movwf	(UART1_Write_string@i+1)^0,c
 18463  004398  0E00               	movlw	0
 18464  00439A  6E0B               	movwf	UART1_Write_string@i^0,c
 18465  00439C  EFE5  F021         	goto	l7257
 18466  0043A0                     l7251:
 18467                           
 18468                           ;Modbus.c: 470:         EUSART1_Write(data[i]);
 18469  0043A0  500B               	movf	UART1_Write_string@i^0,w,c
 18470  0043A2  2406               	addwf	UART1_Write_string@data^0,w,c
 18471  0043A4  6ED9               	movwf	fsr2l,c
 18472  0043A6  500C               	movf	(UART1_Write_string@i+1)^0,w,c
 18473  0043A8  2007               	addwfc	(UART1_Write_string@data+1)^0,w,c
 18474  0043AA  6EDA               	movwf	fsr2h,c
 18475  0043AC  50DF               	movf	indf2,w,c
 18476  0043AE  ECE8  F022         	call	_EUSART1_Write
 18477  0043B2                     l7253:
 18478  0043B2  ECF3  F026         	call	_EUSART1_is_tx_done	;wreg free
 18479  0043B6  0900               	iorlw	0
 18480  0043B8  B4D8               	btfsc	status,2,c
 18481  0043BA  EFE1  F021         	goto	u7341
 18482  0043BE  EFE3  F021         	goto	u7340
 18483  0043C2                     u7341:
 18484  0043C2  EFD9  F021         	goto	l7253
 18485  0043C6                     u7340:
 18486  0043C6                     
 18487                           ;Modbus.c: 472:     }
 18488  0043C6  4A0B               	infsnz	UART1_Write_string@i^0,f,c
 18489  0043C8  2A0C               	incf	(UART1_Write_string@i+1)^0,f,c
 18490  0043CA                     l7257:
 18491  0043CA  5008               	movf	UART1_Write_string@data_len^0,w,c
 18492  0043CC  5C0B               	subwf	UART1_Write_string@i^0,w,c
 18493  0043CE  500C               	movf	(UART1_Write_string@i+1)^0,w,c
 18494  0043D0  0A80               	xorlw	128
 18495  0043D2  6E0A               	movwf	??_UART1_Write_string^0,c
 18496  0043D4  5009               	movf	(UART1_Write_string@data_len+1)^0,w,c
 18497  0043D6  0A80               	xorlw	128
 18498  0043D8  580A               	subwfb	??_UART1_Write_string^0,w,c
 18499  0043DA  A0D8               	btfss	status,0,c
 18500  0043DC  EFF2  F021         	goto	u7351
 18501  0043E0  EFF4  F021         	goto	u7350
 18502  0043E4                     u7351:
 18503  0043E4  EFD0  F021         	goto	l7251
 18504  0043E8                     u7350:
 18505  0043E8  0012               	return		;funcret
 18506  0043EA                     __end_of_UART1_Write_string:
 18507                           	opt callstack 0
 18508                           
 18509 ;; *************** function _TXMode *****************
 18510 ;; Defined at:
 18511 ;;		line 37 in file "Modbus.c"
 18512 ;; Parameters:    Size  Location     Type
 18513 ;;		None
 18514 ;; Auto vars:     Size  Location     Type
 18515 ;;		None
 18516 ;; Return value:  Size  Location     Type
 18517 ;;                  1    wreg      void 
 18518 ;; Registers used:
 18519 ;;		None
 18520 ;; Tracked objects:
 18521 ;;		On entry : 0/0
 18522 ;;		On exit  : 0/0
 18523 ;;		Unchanged: 0/0
 18524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18529 ;;Total ram usage:        0 bytes
 18530 ;; Hardware stack levels used:    1
 18531 ;; Hardware stack levels required when called:    4
 18532 ;; This function calls:
 18533 ;;		Nothing
 18534 ;; This function is called by:
 18535 ;;		_UART1_Write_string
 18536 ;; This function uses a non-reentrant model
 18537 ;;
 18538                           
 18539                           	psect	text78
 18540  004E76                     __ptext78:
 18541                           	opt callstack 0
 18542  004E76                     _TXMode:
 18543                           	opt callstack 24
 18544  004E76  8086               	bsf	134,0,c	;volatile
 18545  004E78  8683               	bsf	131,3,c	;volatile
 18546  004E7A  0012               	return		;funcret
 18547  004E7C                     __end_of_TXMode:
 18548                           	opt callstack 0
 18549                           
 18550 ;; *************** function _EUSART1_is_tx_ready *****************
 18551 ;; Defined at:
 18552 ;;		line 134 in file "mcc_generated_files/eusart1.c"
 18553 ;; Parameters:    Size  Location     Type
 18554 ;;		None
 18555 ;; Auto vars:     Size  Location     Type
 18556 ;;		None
 18557 ;; Return value:  Size  Location     Type
 18558 ;;                  1    wreg      _Bool 
 18559 ;; Registers used:
 18560 ;;		wreg, status,2
 18561 ;; Tracked objects:
 18562 ;;		On entry : 0/0
 18563 ;;		On exit  : 0/0
 18564 ;;		Unchanged: 0/0
 18565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18570 ;;Total ram usage:        0 bytes
 18571 ;; Hardware stack levels used:    1
 18572 ;; Hardware stack levels required when called:    4
 18573 ;; This function calls:
 18574 ;;		Nothing
 18575 ;; This function is called by:
 18576 ;;		_UART1_Write_string
 18577 ;; This function uses a non-reentrant model
 18578 ;;
 18579                           
 18580                           	psect	text79
 18581  004DA4                     __ptext79:
 18582                           	opt callstack 0
 18583  004DA4                     _EUSART1_is_tx_ready:
 18584                           	opt callstack 24
 18585  004DA4                     
 18586                           ;mcc_generated_files/eusart1.c: 136:     return (eusart1TxBufferRemaining ? 1 : 0);
 18587  004DA4  0100               	movlb	0	; () banked
 18588  004DA6  51FE               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
 18589  004DA8  A4D8               	btfss	status,2,c
 18590  004DAA  EFD9  F026         	goto	u7071
 18591  004DAE  EFDC  F026         	goto	u7070
 18592  004DB2                     u7071:
 18593  004DB2  0E01               	movlw	1
 18594  004DB4  EFDD  F026         	goto	u7080
 18595  004DB8                     u7070:
 18596  004DB8  0E00               	movlw	0
 18597  004DBA                     u7080:
 18598  004DBA                     
 18599                           ; BSR set to: 0
 18600  004DBA  0012               	return		;funcret
 18601  004DBC                     __end_of_EUSART1_is_tx_ready:
 18602                           	opt callstack 0
 18603                           
 18604 ;; *************** function _EUSART1_is_tx_done *****************
 18605 ;; Defined at:
 18606 ;;		line 144 in file "mcc_generated_files/eusart1.c"
 18607 ;; Parameters:    Size  Location     Type
 18608 ;;		None
 18609 ;; Auto vars:     Size  Location     Type
 18610 ;;		None
 18611 ;; Return value:  Size  Location     Type
 18612 ;;                  1    wreg      _Bool 
 18613 ;; Registers used:
 18614 ;;		wreg
 18615 ;; Tracked objects:
 18616 ;;		On entry : 0/0
 18617 ;;		On exit  : 0/0
 18618 ;;		Unchanged: 0/0
 18619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18624 ;;Total ram usage:        0 bytes
 18625 ;; Hardware stack levels used:    1
 18626 ;; Hardware stack levels required when called:    4
 18627 ;; This function calls:
 18628 ;;		Nothing
 18629 ;; This function is called by:
 18630 ;;		_UART1_Write_string
 18631 ;; This function uses a non-reentrant model
 18632 ;;
 18633                           
 18634                           	psect	text80
 18635  004DE6                     __ptext80:
 18636                           	opt callstack 0
 18637  004DE6                     _EUSART1_is_tx_done:
 18638                           	opt callstack 24
 18639  004DE6                     
 18640                           ;mcc_generated_files/eusart1.c: 146:     return TX1STAbits.TRMT;
 18641  004DE6  B29E               	btfsc	158,1,c	;volatile
 18642  004DE8  EFF8  F026         	goto	u7091
 18643  004DEC  EFFB  F026         	goto	u7090
 18644  004DF0                     u7091:
 18645  004DF0  0E01               	movlw	1
 18646  004DF2  EFFC  F026         	goto	u7096
 18647  004DF6                     u7090:
 18648  004DF6  0E00               	movlw	0
 18649  004DF8                     u7096:
 18650  004DF8  0012               	return		;funcret
 18651  004DFA                     __end_of_EUSART1_is_tx_done:
 18652                           	opt callstack 0
 18653                           
 18654 ;; *************** function _EUSART1_Write *****************
 18655 ;; Defined at:
 18656 ;;		line 175 in file "mcc_generated_files/eusart1.c"
 18657 ;; Parameters:    Size  Location     Type
 18658 ;;  txData          1    wreg     unsigned char 
 18659 ;; Auto vars:     Size  Location     Type
 18660 ;;  txData          1    4[COMRAM] unsigned char 
 18661 ;; Return value:  Size  Location     Type
 18662 ;;                  1    wreg      void 
 18663 ;; Registers used:
 18664 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18665 ;; Tracked objects:
 18666 ;;		On entry : 0/0
 18667 ;;		On exit  : 0/0
 18668 ;;		Unchanged: 0/0
 18669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18671 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18673 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18674 ;;Total ram usage:        1 bytes
 18675 ;; Hardware stack levels used:    1
 18676 ;; Hardware stack levels required when called:    4
 18677 ;; This function calls:
 18678 ;;		Nothing
 18679 ;; This function is called by:
 18680 ;;		_UART1_Write_string
 18681 ;; This function uses a non-reentrant model
 18682 ;;
 18683                           
 18684                           	psect	text81
 18685  0045D0                     __ptext81:
 18686                           	opt callstack 0
 18687  0045D0                     _EUSART1_Write:
 18688                           	opt callstack 24
 18689                           
 18690                           ;incstack = 0
 18691                           ;EUSART1_Write@txData stored from wreg
 18692  0045D0  6E05               	movwf	EUSART1_Write@txData^0,c
 18693  0045D2                     l7087:
 18694                           
 18695                           ;mcc_generated_files/eusart1.c: 177:     while(0 == eusart1TxBufferRemaining)
 18696  0045D2  0100               	movlb	0	; () banked
 18697  0045D4  51FE               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
 18698  0045D6  B4D8               	btfsc	status,2,c
 18699  0045D8  EFF0  F022         	goto	u7101
 18700  0045DC  EFF2  F022         	goto	u7100
 18701  0045E0                     u7101:
 18702  0045E0  EFE9  F022         	goto	l7087
 18703  0045E4                     u7100:
 18704  0045E4                     
 18705                           ; BSR set to: 0
 18706                           ;mcc_generated_files/eusart1.c: 181:     if(0 == PIE3bits.TX1IE)
 18707  0045E4  010E               	movlb	14	; () banked
 18708  0045E6  B9C5               	btfsc	197,4,b	;volatile
 18709  0045E8  EFF8  F022         	goto	u7111
 18710  0045EC  EFFA  F022         	goto	u7110
 18711  0045F0                     u7111:
 18712  0045F0  EFFE  F022         	goto	l475
 18713  0045F4                     u7110:
 18714  0045F4                     
 18715                           ; BSR set to: 14
 18716                           ;mcc_generated_files/eusart1.c: 182:     {;mcc_generated_files/eusart1.c: 183:         T
      +                          X1REG = txData;
 18717  0045F4  C005  FF9A         	movff	EUSART1_Write@txData,3994	;volatile
 18718                           
 18719                           ;mcc_generated_files/eusart1.c: 184:     }
 18720  0045F8  EF14  F023         	goto	l7101
 18721  0045FC                     l475:
 18722                           
 18723                           ; BSR set to: 14
 18724                           ;mcc_generated_files/eusart1.c: 186:     {;mcc_generated_files/eusart1.c: 187:         P
      +                          IE3bits.TX1IE = 0;
 18725  0045FC  99C5               	bcf	197,4,b	;volatile
 18726  0045FE                     
 18727                           ; BSR set to: 14
 18728                           ;mcc_generated_files/eusart1.c: 188:         eusart1TxBuffer[eusart1TxHead++] = txData;
 18729  0045FE  0EC2               	movlw	low _eusart1TxBuffer
 18730  004600  0100               	movlb	0	; () banked
 18731  004602  25E4               	addwf	_eusart1TxHead& (0+255),w,b	;volatile
 18732  004604  6ED9               	movwf	fsr2l,c
 18733  004606  6ADA               	clrf	fsr2h,c
 18734  004608  0E02               	movlw	high _eusart1TxBuffer
 18735  00460A  22DA               	addwfc	fsr2h,f,c
 18736  00460C  C005  FFDF         	movff	EUSART1_Write@txData,indf2
 18737  004610                     
 18738                           ; BSR set to: 0
 18739  004610  2BE4               	incf	_eusart1TxHead& (0+255),f,b	;volatile
 18740  004612                     
 18741                           ; BSR set to: 0
 18742                           ;mcc_generated_files/eusart1.c: 189:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
 18743  004612  0E0F               	movlw	15
 18744  004614  65E4               	cpfsgt	_eusart1TxHead& (0+255),b	;volatile
 18745  004616  EF0F  F023         	goto	u7121
 18746  00461A  EF11  F023         	goto	u7120
 18747  00461E                     u7121:
 18748  00461E  EF13  F023         	goto	l7099
 18749  004622                     u7120:
 18750  004622                     
 18751                           ; BSR set to: 0
 18752                           ;mcc_generated_files/eusart1.c: 190:         {;mcc_generated_files/eusart1.c: 191:      
      +                                 eusart1TxHead = 0;
 18753  004622  0E00               	movlw	0
 18754  004624  6FE4               	movwf	_eusart1TxHead& (0+255),b	;volatile
 18755  004626                     l7099:
 18756                           
 18757                           ; BSR set to: 0
 18758                           ;mcc_generated_files/eusart1.c: 193:         eusart1TxBufferRemaining--;
 18759  004626  07FE               	decf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 18760  004628                     l7101:
 18761                           
 18762                           ;mcc_generated_files/eusart1.c: 195:     PIE3bits.TX1IE = 1;
 18763  004628  010E               	movlb	14	; () banked
 18764  00462A  89C5               	bsf	197,4,b	;volatile
 18765  00462C                     
 18766                           ; BSR set to: 14
 18767  00462C  0012               	return		;funcret
 18768  00462E                     __end_of_EUSART1_Write:
 18769                           	opt callstack 0
 18770                           
 18771 ;; *************** function _ADCC_GetSingleConversion *****************
 18772 ;; Defined at:
 18773 ;;		line 131 in file "mcc_generated_files/adcc.c"
 18774 ;; Parameters:    Size  Location     Type
 18775 ;;  channel         1    wreg     enum E10046
 18776 ;; Auto vars:     Size  Location     Type
 18777 ;;  channel         1    8[COMRAM] enum E10046
 18778 ;; Return value:  Size  Location     Type
 18779 ;;                  2    4[COMRAM] unsigned short 
 18780 ;; Registers used:
 18781 ;;		wreg, status,2, status,0
 18782 ;; Tracked objects:
 18783 ;;		On entry : 0/0
 18784 ;;		On exit  : 0/0
 18785 ;;		Unchanged: 0/0
 18786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18787 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18788 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18789 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18790 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18791 ;;Total ram usage:        5 bytes
 18792 ;; Hardware stack levels used:    1
 18793 ;; Hardware stack levels required when called:    4
 18794 ;; This function calls:
 18795 ;;		Nothing
 18796 ;; This function is called by:
 18797 ;;		_ModbusFC03
 18798 ;;		_InitialiseString
 18799 ;; This function uses a non-reentrant model
 18800 ;;
 18801                           
 18802                           	psect	text82
 18803  004BF4                     __ptext82:
 18804                           	opt callstack 0
 18805  004BF4                     _ADCC_GetSingleConversion:
 18806                           	opt callstack 24
 18807                           
 18808                           ; BSR set to: 14
 18809                           ;incstack = 0
 18810                           ;ADCC_GetSingleConversion@channel stored from wreg
 18811  004BF4  6E09               	movwf	ADCC_GetSingleConversion@channel^0,c
 18812  004BF6                     
 18813                           ;mcc_generated_files/adcc.c: 131: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 132: {;mcc_generated_files/adcc.c: 134:     ADPCH = 
      +                          channel;
 18814  004BF6  C009  FF5F         	movff	ADCC_GetSingleConversion@channel,3935	;volatile
 18815  004BFA                     
 18816                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADON = 1;
 18817  004BFA  8E60               	bsf	96,7,c	;volatile
 18818  004BFC                     
 18819                           ;mcc_generated_files/adcc.c: 140:     ADCON0bits.ADCONT = 0;
 18820  004BFC  9C60               	bcf	96,6,c	;volatile
 18821  004BFE                     
 18822                           ;mcc_generated_files/adcc.c: 143:     ADCON0bits.ADGO = 1;
 18823  004BFE  8060               	bsf	96,0,c	;volatile
 18824  004C00                     l1098:
 18825                           
 18826                           ;mcc_generated_files/adcc.c: 147:     while (ADCON0bits.ADGO)
 18827  004C00  B060               	btfsc	96,0,c	;volatile
 18828  004C02  EF05  F026         	goto	u7281
 18829  004C06  EF07  F026         	goto	u7280
 18830  004C0A                     u7281:
 18831  004C0A  EF00  F026         	goto	l1098
 18832  004C0E                     u7280:
 18833  004C0E                     
 18834                           ;mcc_generated_files/adcc.c: 153:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 18835  004C0E  5064               	movf	100,w,c	;volatile
 18836  004C10  6E08               	movwf	(??_ADCC_GetSingleConversion+1)^0,c
 18837  004C12  6A07               	clrf	??_ADCC_GetSingleConversion^0,c
 18838  004C14  5063               	movf	99,w,c	;volatile
 18839  004C16  2407               	addwf	??_ADCC_GetSingleConversion^0,w,c
 18840  004C18  6E05               	movwf	?_ADCC_GetSingleConversion^0,c
 18841  004C1A  0E00               	movlw	0
 18842  004C1C  2008               	addwfc	(??_ADCC_GetSingleConversion+1)^0,w,c
 18843  004C1E  6E06               	movwf	(?_ADCC_GetSingleConversion+1)^0,c
 18844  004C20  0012               	return		;funcret
 18845  004C22                     __end_of_ADCC_GetSingleConversion:
 18846                           	opt callstack 0
 18847                           
 18848 ;; *************** function _ClearModbusRespon *****************
 18849 ;; Defined at:
 18850 ;;		line 533 in file "Modbus.c"
 18851 ;; Parameters:    Size  Location     Type
 18852 ;;		None
 18853 ;; Auto vars:     Size  Location     Type
 18854 ;;  i               2    4[COMRAM] int 
 18855 ;; Return value:  Size  Location     Type
 18856 ;;                  1    wreg      void 
 18857 ;; Registers used:
 18858 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18859 ;; Tracked objects:
 18860 ;;		On entry : 0/0
 18861 ;;		On exit  : 0/0
 18862 ;;		Unchanged: 0/0
 18863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18865 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18867 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18868 ;;Total ram usage:        2 bytes
 18869 ;; Hardware stack levels used:    1
 18870 ;; Hardware stack levels required when called:    4
 18871 ;; This function calls:
 18872 ;;		Nothing
 18873 ;; This function is called by:
 18874 ;;		_main
 18875 ;; This function uses a non-reentrant model
 18876 ;;
 18877                           
 18878                           	psect	text83
 18879  0049D6                     __ptext83:
 18880                           	opt callstack 0
 18881  0049D6                     _ClearModbusRespon:
 18882                           	opt callstack 26
 18883  0049D6                     
 18884                           ;Modbus.c: 534:     int i = 0;
 18885  0049D6  0E00               	movlw	0
 18886  0049D8  6E06               	movwf	(ClearModbusRespon@i+1)^0,c
 18887  0049DA  0E00               	movlw	0
 18888  0049DC  6E05               	movwf	ClearModbusRespon@i^0,c
 18889                           
 18890                           ;Modbus.c: 535:     for(i=0; i<32; i++ ){
 18891  0049DE  0E00               	movlw	0
 18892  0049E0  6E06               	movwf	(ClearModbusRespon@i+1)^0,c
 18893  0049E2  0E00               	movlw	0
 18894  0049E4  6E05               	movwf	ClearModbusRespon@i^0,c
 18895  0049E6                     l7683:
 18896                           
 18897                           ;Modbus.c: 536:         MBRespon[i] = 0xFF;
 18898  0049E6  0E57               	movlw	low _MBRespon
 18899  0049E8  2405               	addwf	ClearModbusRespon@i^0,w,c
 18900  0049EA  6ED9               	movwf	fsr2l,c
 18901  0049EC  0E02               	movlw	high _MBRespon
 18902  0049EE  2006               	addwfc	(ClearModbusRespon@i+1)^0,w,c
 18903  0049F0  6EDA               	movwf	fsr2h,c
 18904  0049F2  0EFF               	movlw	255
 18905  0049F4  6EDF               	movwf	indf2,c
 18906  0049F6                     
 18907                           ;Modbus.c: 537:     }
 18908  0049F6  4A05               	infsnz	ClearModbusRespon@i^0,f,c
 18909  0049F8  2A06               	incf	(ClearModbusRespon@i+1)^0,f,c
 18910  0049FA  BE06               	btfsc	(ClearModbusRespon@i+1)^0,7,c
 18911  0049FC  EF09  F025         	goto	u7761
 18912  004A00  5006               	movf	(ClearModbusRespon@i+1)^0,w,c
 18913  004A02  E109               	bnz	u7760
 18914  004A04  0E20               	movlw	32
 18915  004A06  5C05               	subwf	ClearModbusRespon@i^0,w,c
 18916  004A08  A0D8               	btfss	status,0,c
 18917  004A0A  EF09  F025         	goto	u7761
 18918  004A0E  EF0B  F025         	goto	u7760
 18919  004A12                     u7761:
 18920  004A12  EFF3  F024         	goto	l7683
 18921  004A16                     u7760:
 18922  004A16  0012               	return		;funcret
 18923  004A18                     __end_of_ClearModbusRespon:
 18924                           	opt callstack 0
 18925                           
 18926 ;; *************** function _ClearModbusData *****************
 18927 ;; Defined at:
 18928 ;;		line 49 in file "Modbus.c"
 18929 ;; Parameters:    Size  Location     Type
 18930 ;;		None
 18931 ;; Auto vars:     Size  Location     Type
 18932 ;;  i               2    4[COMRAM] int 
 18933 ;; Return value:  Size  Location     Type
 18934 ;;                  1    wreg      void 
 18935 ;; Registers used:
 18936 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18937 ;; Tracked objects:
 18938 ;;		On entry : 0/0
 18939 ;;		On exit  : 0/0
 18940 ;;		Unchanged: 0/0
 18941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18943 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18945 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18946 ;;Total ram usage:        2 bytes
 18947 ;; Hardware stack levels used:    1
 18948 ;; Hardware stack levels required when called:    4
 18949 ;; This function calls:
 18950 ;;		Nothing
 18951 ;; This function is called by:
 18952 ;;		_main
 18953 ;; This function uses a non-reentrant model
 18954 ;;
 18955                           
 18956                           	psect	text84
 18957  00482C                     __ptext84:
 18958                           	opt callstack 0
 18959  00482C                     _ClearModbusData:
 18960                           	opt callstack 26
 18961  00482C                     
 18962                           ;Modbus.c: 50:     int i = 0;
 18963  00482C  0E00               	movlw	0
 18964  00482E  6E06               	movwf	(ClearModbusData@i+1)^0,c
 18965  004830  0E00               	movlw	0
 18966  004832  6E05               	movwf	ClearModbusData@i^0,c
 18967                           
 18968                           ;Modbus.c: 51:     for(i=0; i<99; i++ ){
 18969  004834  0E00               	movlw	0
 18970  004836  6E06               	movwf	(ClearModbusData@i+1)^0,c
 18971  004838  0E00               	movlw	0
 18972  00483A  6E05               	movwf	ClearModbusData@i^0,c
 18973  00483C                     l8043:
 18974                           
 18975                           ;Modbus.c: 52:         ModbusData[i] = 0xFF;
 18976  00483C  0E00               	movlw	low _ModbusData
 18977  00483E  2405               	addwf	ClearModbusData@i^0,w,c
 18978  004840  6ED9               	movwf	fsr2l,c
 18979  004842  0E01               	movlw	high _ModbusData
 18980  004844  2006               	addwfc	(ClearModbusData@i+1)^0,w,c
 18981  004846  6EDA               	movwf	fsr2h,c
 18982  004848  0EFF               	movlw	255
 18983  00484A  6EDF               	movwf	indf2,c
 18984  00484C                     
 18985                           ;Modbus.c: 53:     }
 18986  00484C  4A05               	infsnz	ClearModbusData@i^0,f,c
 18987  00484E  2A06               	incf	(ClearModbusData@i+1)^0,f,c
 18988  004850  BE06               	btfsc	(ClearModbusData@i+1)^0,7,c
 18989  004852  EF34  F024         	goto	u8231
 18990  004856  5006               	movf	(ClearModbusData@i+1)^0,w,c
 18991  004858  E109               	bnz	u8230
 18992  00485A  0E63               	movlw	99
 18993  00485C  5C05               	subwf	ClearModbusData@i^0,w,c
 18994  00485E  A0D8               	btfss	status,0,c
 18995  004860  EF34  F024         	goto	u8231
 18996  004864  EF36  F024         	goto	u8230
 18997  004868                     u8231:
 18998  004868  EF1E  F024         	goto	l8043
 18999  00486C                     u8230:
 19000  00486C                     
 19001                           ;Modbus.c: 55:     ModDataCnt = 0;
 19002  00486C  0E00               	movlw	0
 19003  00486E  0100               	movlb	0	; () banked
 19004  004870  6FDC               	movwf	(_ModDataCnt+1)& (0+255),b
 19005  004872  0E00               	movlw	0
 19006  004874  6FDB               	movwf	_ModDataCnt& (0+255),b
 19007  004876                     
 19008                           ; BSR set to: 0
 19009  004876  0012               	return		;funcret
 19010  004878                     __end_of_ClearModbusData:
 19011                           	opt callstack 0
 19012                           
 19013 ;; *************** function _INTERRUPT_InterruptManager *****************
 19014 ;; Defined at:
 19015 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 19016 ;; Parameters:    Size  Location     Type
 19017 ;;		None
 19018 ;; Auto vars:     Size  Location     Type
 19019 ;;		None
 19020 ;; Return value:  Size  Location     Type
 19021 ;;                  1    wreg      void 
 19022 ;; Registers used:
 19023 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 19024 ;; Tracked objects:
 19025 ;;		On entry : 0/0
 19026 ;;		On exit  : 0/0
 19027 ;;		Unchanged: 0/0
 19028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19031 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19032 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19033 ;;Total ram usage:        4 bytes
 19034 ;; Hardware stack levels used:    1
 19035 ;; Hardware stack levels required when called:    3
 19036 ;; This function calls:
 19037 ;;		Absolute function
 19038 ;;		_EUSART1_Receive_ISR
 19039 ;;		_EUSART1_Transmit_ISR
 19040 ;;		_EUSART2_Receive_ISR
 19041 ;;		_EUSART2_Transmit_ISR
 19042 ;; This function is called by:
 19043 ;;		Interrupt level 2
 19044 ;; This function uses a non-reentrant model
 19045 ;;
 19046                           
 19047                           	psect	intcode
 19048  000008                     __pintcode:
 19049                           	opt callstack 0
 19050  000008                     _INTERRUPT_InterruptManager:
 19051                           	opt callstack 15
 19052                           
 19053                           ; BSR set to: 0
 19054                           ;incstack = 0
 19055  000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 19056  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
 19057  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 19058  000012  CFD9 F003          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
 19059  000016  CFDA F004          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
 19060  00001A                     
 19061                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
 19062  00001A  ACF2               	btfss	242,6,c	;volatile
 19063  00001C  EF12  F000         	goto	i2u564_41
 19064  000020  EF14  F000         	goto	i2u564_40
 19065  000024                     i2u564_41:
 19066  000024  EF89  F000         	goto	i2l163
 19067  000028                     i2u564_40:
 19068  000028                     
 19069                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
 19070  000028  010E               	movlb	14	; () banked
 19071  00002A  ADC5               	btfss	197,6,b	;volatile
 19072  00002C  EF1A  F000         	goto	i2u565_41
 19073  000030  EF1C  F000         	goto	i2u565_40
 19074  000034                     i2u565_41:
 19075  000034  EF32  F000         	goto	i2l154
 19076  000038                     i2u565_40:
 19077  000038                     
 19078                           ; BSR set to: 14
 19079  000038  ADCD               	btfss	205,6,b	;volatile
 19080  00003A  EF21  F000         	goto	i2u566_41
 19081  00003E  EF23  F000         	goto	i2u566_40
 19082  000042                     i2u566_41:
 19083  000042  EF32  F000         	goto	i2l154
 19084  000046                     i2u566_40:
 19085  000046                     
 19086                           ; BSR set to: 14
 19087                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART2_TxDefaultInterruptHandler();
 19088  000046  D802               	call	i2u567_48
 19089  000048  EF30  F000         	goto	i2u567_49
 19090  00004C                     i2u567_48:
 19091  00004C  0005               	push	
 19092  00004E  6EFA               	movwf	pclath,c
 19093  000050  0101               	movlb	1	; () banked
 19094  000052  51EB               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
 19095  000054  6EFD               	movwf	tosl,c
 19096  000056  51EC               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
 19097  000058  6EFE               	movwf	tosh,c
 19098  00005A  6AFF               	clrf	tosu,c
 19099  00005C  50FA               	movf	pclath,w,c
 19100  00005E  0012               	return		;indir
 19101  000060                     i2u567_49:
 19102                           
 19103                           ;mcc_generated_files/interrupt_manager.c: 66:         }
 19104  000060  EF89  F000         	goto	i2l163
 19105  000064                     i2l154:
 19106                           
 19107                           ; BSR set to: 14
 19108  000064  AFC5               	btfss	197,7,b	;volatile
 19109  000066  EF37  F000         	goto	i2u568_41
 19110  00006A  EF39  F000         	goto	i2u568_40
 19111  00006E                     i2u568_41:
 19112  00006E  EF4F  F000         	goto	i2l156
 19113  000072                     i2u568_40:
 19114  000072                     
 19115                           ; BSR set to: 14
 19116  000072  AFCD               	btfss	205,7,b	;volatile
 19117  000074  EF3E  F000         	goto	i2u569_41
 19118  000078  EF40  F000         	goto	i2u569_40
 19119  00007C                     i2u569_41:
 19120  00007C  EF4F  F000         	goto	i2l156
 19121  000080                     i2u569_40:
 19122  000080                     
 19123                           ; BSR set to: 14
 19124                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART2_RxDefaultInterruptHandler();
 19125  000080  D802               	call	i2u570_48
 19126  000082  EF4D  F000         	goto	i2u570_49
 19127  000086                     i2u570_48:
 19128  000086  0005               	push	
 19129  000088  6EFA               	movwf	pclath,c
 19130  00008A  0101               	movlb	1	; () banked
 19131  00008C  51E9               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
 19132  00008E  6EFD               	movwf	tosl,c
 19133  000090  51EA               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
 19134  000092  6EFE               	movwf	tosh,c
 19135  000094  6AFF               	clrf	tosu,c
 19136  000096  50FA               	movf	pclath,w,c
 19137  000098  0012               	return		;indir
 19138  00009A                     i2u570_49:
 19139                           
 19140                           ;mcc_generated_files/interrupt_manager.c: 70:         }
 19141  00009A  EF89  F000         	goto	i2l163
 19142  00009E                     i2l156:
 19143                           
 19144                           ; BSR set to: 14
 19145  00009E  A9C5               	btfss	197,4,b	;volatile
 19146  0000A0  EF54  F000         	goto	i2u571_41
 19147  0000A4  EF56  F000         	goto	i2u571_40
 19148  0000A8                     i2u571_41:
 19149  0000A8  EF6C  F000         	goto	i2l158
 19150  0000AC                     i2u571_40:
 19151  0000AC                     
 19152                           ; BSR set to: 14
 19153  0000AC  A9CD               	btfss	205,4,b	;volatile
 19154  0000AE  EF5B  F000         	goto	i2u572_41
 19155  0000B2  EF5D  F000         	goto	i2u572_40
 19156  0000B6                     i2u572_41:
 19157  0000B6  EF6C  F000         	goto	i2l158
 19158  0000BA                     i2u572_40:
 19159  0000BA                     
 19160                           ; BSR set to: 14
 19161                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART1_TxDefaultInterruptHandler();
 19162  0000BA  D802               	call	i2u573_48
 19163  0000BC  EF6A  F000         	goto	i2u573_49
 19164  0000C0                     i2u573_48:
 19165  0000C0  0005               	push	
 19166  0000C2  6EFA               	movwf	pclath,c
 19167  0000C4  0101               	movlb	1	; () banked
 19168  0000C6  51E7               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
 19169  0000C8  6EFD               	movwf	tosl,c
 19170  0000CA  51E8               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
 19171  0000CC  6EFE               	movwf	tosh,c
 19172  0000CE  6AFF               	clrf	tosu,c
 19173  0000D0  50FA               	movf	pclath,w,c
 19174  0000D2  0012               	return		;indir
 19175  0000D4                     i2u573_49:
 19176                           
 19177                           ;mcc_generated_files/interrupt_manager.c: 74:         }
 19178  0000D4  EF89  F000         	goto	i2l163
 19179  0000D8                     i2l158:
 19180                           
 19181                           ; BSR set to: 14
 19182  0000D8  ABC5               	btfss	197,5,b	;volatile
 19183  0000DA  EF71  F000         	goto	i2u574_41
 19184  0000DE  EF73  F000         	goto	i2u574_40
 19185  0000E2                     i2u574_41:
 19186  0000E2  EF89  F000         	goto	i2l157
 19187  0000E6                     i2u574_40:
 19188  0000E6                     
 19189                           ; BSR set to: 14
 19190  0000E6  ABCD               	btfss	205,5,b	;volatile
 19191  0000E8  EF78  F000         	goto	i2u575_41
 19192  0000EC  EF7A  F000         	goto	i2u575_40
 19193  0000F0                     i2u575_41:
 19194  0000F0  EF89  F000         	goto	i2l157
 19195  0000F4                     i2u575_40:
 19196  0000F4                     
 19197                           ; BSR set to: 14
 19198                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             EUSART1_RxDefaultInterruptHandler();
 19199  0000F4  D802               	call	i2u576_48
 19200  0000F6  EF87  F000         	goto	i2u576_49
 19201  0000FA                     i2u576_48:
 19202  0000FA  0005               	push	
 19203  0000FC  6EFA               	movwf	pclath,c
 19204  0000FE  0101               	movlb	1	; () banked
 19205  000100  51E5               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
 19206  000102  6EFD               	movwf	tosl,c
 19207  000104  51E6               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
 19208  000106  6EFE               	movwf	tosh,c
 19209  000108  6AFF               	clrf	tosu,c
 19210  00010A  50FA               	movf	pclath,w,c
 19211  00010C  0012               	return		;indir
 19212  00010E                     i2u576_49:
 19213                           
 19214                           ;mcc_generated_files/interrupt_manager.c: 78:         }
 19215  00010E  EF89  F000         	goto	i2l163
 19216  000112                     i2l157:
 19217  000112                     i2l163:
 19218  000112  C004  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
 19219  000116  C003  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
 19220  00011A  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 19221  00011E  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 19222  000122  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 19223  000124  0011               	retfie		f
 19224  000126                     __end_of_INTERRUPT_InterruptManager:
 19225                           	opt callstack 0
 19226                           
 19227 ;; *************** function _EUSART2_Transmit_ISR *****************
 19228 ;; Defined at:
 19229 ;;		line 208 in file "mcc_generated_files/eusart2.c"
 19230 ;; Parameters:    Size  Location     Type
 19231 ;;		None
 19232 ;; Auto vars:     Size  Location     Type
 19233 ;;		None
 19234 ;; Return value:  Size  Location     Type
 19235 ;;                  1    wreg      void 
 19236 ;; Registers used:
 19237 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19238 ;; Tracked objects:
 19239 ;;		On entry : 0/0
 19240 ;;		On exit  : 0/0
 19241 ;;		Unchanged: 0/0
 19242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19247 ;;Total ram usage:        0 bytes
 19248 ;; Hardware stack levels used:    1
 19249 ;; This function calls:
 19250 ;;		Nothing
 19251 ;; This function is called by:
 19252 ;;		_EUSART2_Initialize
 19253 ;;		_INTERRUPT_InterruptManager
 19254 ;; This function uses a non-reentrant model
 19255 ;;
 19256                           
 19257                           	psect	text86
 19258  0048C2                     __ptext86:
 19259                           	opt callstack 0
 19260  0048C2                     _EUSART2_Transmit_ISR:
 19261                           	opt callstack 17
 19262  0048C2                     
 19263                           ;mcc_generated_files/eusart2.c: 212:     if(sizeof(eusart2TxBuffer) > eusart2TxBufferRem
      +                          aining)
 19264  0048C2  0E20               	movlw	32
 19265  0048C4  0100               	movlb	0	; () banked
 19266  0048C6  61FF               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
 19267  0048C8  EF68  F024         	goto	i2u492_41
 19268  0048CC  EF6A  F024         	goto	i2u492_40
 19269  0048D0                     i2u492_41:
 19270  0048D0  EF82  F024         	goto	i2l337
 19271  0048D4                     i2u492_40:
 19272  0048D4                     
 19273                           ; BSR set to: 0
 19274                           ;mcc_generated_files/eusart2.c: 213:     {;mcc_generated_files/eusart2.c: 214:         T
      +                          X2REG = eusart2TxBuffer[eusart2TxTail++];
 19275  0048D4  0E84               	movlw	low _eusart2TxBuffer
 19276  0048D6  25E8               	addwf	_eusart2TxTail& (0+255),w,b	;volatile
 19277  0048D8  6ED9               	movwf	fsr2l,c
 19278  0048DA  6ADA               	clrf	fsr2h,c
 19279  0048DC  0E03               	movlw	high _eusart2TxBuffer
 19280  0048DE  22DA               	addwfc	fsr2h,f,c
 19281  0048E0  50DF               	movf	indf2,w,c
 19282  0048E2  010E               	movlb	14	; () banked
 19283  0048E4  6F9A               	movwf	154,b	;volatile
 19284  0048E6                     
 19285                           ; BSR set to: 14
 19286  0048E6  0100               	movlb	0	; () banked
 19287  0048E8  2BE8               	incf	_eusart2TxTail& (0+255),f,b	;volatile
 19288  0048EA                     
 19289                           ; BSR set to: 0
 19290                           ;mcc_generated_files/eusart2.c: 215:         if(sizeof(eusart2TxBuffer) <= eusart2TxTail
      +                          )
 19291  0048EA  0E1F               	movlw	31
 19292  0048EC  65E8               	cpfsgt	_eusart2TxTail& (0+255),b	;volatile
 19293  0048EE  EF7B  F024         	goto	i2u493_41
 19294  0048F2  EF7D  F024         	goto	i2u493_40
 19295  0048F6                     i2u493_41:
 19296  0048F6  EF7F  F024         	goto	i2l5683
 19297  0048FA                     i2u493_40:
 19298  0048FA                     
 19299                           ; BSR set to: 0
 19300                           ;mcc_generated_files/eusart2.c: 216:         {;mcc_generated_files/eusart2.c: 217:      
      +                                 eusart2TxTail = 0;
 19301  0048FA  0E00               	movlw	0
 19302  0048FC  6FE8               	movwf	_eusart2TxTail& (0+255),b	;volatile
 19303  0048FE                     i2l5683:
 19304                           
 19305                           ; BSR set to: 0
 19306                           ;mcc_generated_files/eusart2.c: 219:         eusart2TxBufferRemaining++;
 19307  0048FE  2BFF               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 19308                           
 19309                           ;mcc_generated_files/eusart2.c: 220:     }
 19310  004900  EF84  F024         	goto	i2l340
 19311  004904                     i2l337:
 19312                           
 19313                           ; BSR set to: 0
 19314                           ;mcc_generated_files/eusart2.c: 222:     {;mcc_generated_files/eusart2.c: 223:         P
      +                          IE3bits.TX2IE = 0;
 19315  004904  010E               	movlb	14	; () banked
 19316  004906  9DC5               	bcf	197,6,b	;volatile
 19317  004908                     i2l340:
 19318  004908  0012               	return		;funcret
 19319  00490A                     __end_of_EUSART2_Transmit_ISR:
 19320                           	opt callstack 0
 19321                           
 19322 ;; *************** function _EUSART2_Receive_ISR *****************
 19323 ;; Defined at:
 19324 ;;		line 227 in file "mcc_generated_files/eusart2.c"
 19325 ;; Parameters:    Size  Location     Type
 19326 ;;		None
 19327 ;; Auto vars:     Size  Location     Type
 19328 ;;		None
 19329 ;; Return value:  Size  Location     Type
 19330 ;;                  1    wreg      void 
 19331 ;; Registers used:
 19332 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 19333 ;; Tracked objects:
 19334 ;;		On entry : 0/0
 19335 ;;		On exit  : 0/0
 19336 ;;		Unchanged: 0/0
 19337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19342 ;;Total ram usage:        0 bytes
 19343 ;; Hardware stack levels used:    1
 19344 ;; Hardware stack levels required when called:    2
 19345 ;; This function calls:
 19346 ;;		Absolute function
 19347 ;;		_EUSART2_DefaultErrorHandler
 19348 ;;		_EUSART2_DefaultFramingErrorHandler
 19349 ;;		_EUSART2_DefaultOverrunErrorHandler
 19350 ;;		_EUSART2_RxDataHandler
 19351 ;; This function is called by:
 19352 ;;		_EUSART2_Initialize
 19353 ;;		_INTERRUPT_InterruptManager
 19354 ;; This function uses a non-reentrant model
 19355 ;;
 19356                           
 19357                           	psect	text87
 19358  003C60                     __ptext87:
 19359                           	opt callstack 0
 19360  003C60                     _EUSART2_Receive_ISR:
 19361                           	opt callstack 15
 19362  003C60                     
 19363                           ;mcc_generated_files/eusart2.c: 230:     eusart2RxStatusBuffer[eusart2RxHead].status = 0
      +                          ;
 19364  003C60  0EA2               	movlw	low _eusart2RxStatusBuffer
 19365  003C62  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
 19366  003C64  6ED9               	movwf	fsr2l,c
 19367  003C66  6ADA               	clrf	fsr2h,c
 19368  003C68  0E02               	movlw	high _eusart2RxStatusBuffer
 19369  003C6A  22DA               	addwfc	fsr2h,f,c
 19370  003C6C  0E00               	movlw	0
 19371  003C6E  6EDF               	movwf	indf2,c
 19372  003C70                     
 19373                           ;mcc_generated_files/eusart2.c: 232:     if(RC2STAbits.FERR){
 19374  003C70  010E               	movlb	14	; () banked
 19375  003C72  A59D               	btfss	157,2,b	;volatile
 19376  003C74  EF3E  F01E         	goto	i2u494_41
 19377  003C78  EF40  F01E         	goto	i2u494_40
 19378  003C7C                     i2u494_41:
 19379  003C7C  EF55  F01E         	goto	i2l5693
 19380  003C80                     i2u494_40:
 19381  003C80                     
 19382                           ; BSR set to: 14
 19383                           ;mcc_generated_files/eusart2.c: 233:         eusart2RxStatusBuffer[eusart2RxHead].ferr =
      +                           1;
 19384  003C80  0EA2               	movlw	low _eusart2RxStatusBuffer
 19385  003C82  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
 19386  003C84  6ED9               	movwf	fsr2l,c
 19387  003C86  6ADA               	clrf	fsr2h,c
 19388  003C88  0E02               	movlw	high _eusart2RxStatusBuffer
 19389  003C8A  22DA               	addwfc	fsr2h,f,c
 19390  003C8C  0102               	movlb	2	; () banked
 19391  003C8E  82DF               	bsf	indf2,1,c
 19392  003C90                     
 19393                           ; BSR set to: 2
 19394                           ;mcc_generated_files/eusart2.c: 234:         EUSART2_FramingErrorHandler();
 19395  003C90  D802               	call	i2u495_48
 19396  003C92  EF55  F01E         	goto	i2u495_49
 19397  003C96                     i2u495_48:
 19398  003C96  0005               	push	
 19399  003C98  6EFA               	movwf	pclath,c
 19400  003C9A  0101               	movlb	1	; () banked
 19401  003C9C  51E3               	movf	_EUSART2_FramingErrorHandler& (0+255),w,b
 19402  003C9E  6EFD               	movwf	tosl,c
 19403  003CA0  51E4               	movf	(_EUSART2_FramingErrorHandler+1)& (0+255),w,b
 19404  003CA2  6EFE               	movwf	tosh,c
 19405  003CA4  6AFF               	clrf	tosu,c
 19406  003CA6  50FA               	movf	pclath,w,c
 19407  003CA8  0012               	return		;indir
 19408  003CAA                     i2u495_49:
 19409  003CAA                     i2l5693:
 19410                           
 19411                           ;mcc_generated_files/eusart2.c: 237:     if(RC2STAbits.OERR){
 19412  003CAA  010E               	movlb	14	; () banked
 19413  003CAC  A39D               	btfss	157,1,b	;volatile
 19414  003CAE  EF5B  F01E         	goto	i2u496_41
 19415  003CB2  EF5D  F01E         	goto	i2u496_40
 19416  003CB6                     i2u496_41:
 19417  003CB6  EF72  F01E         	goto	i2l5699
 19418  003CBA                     i2u496_40:
 19419  003CBA                     
 19420                           ; BSR set to: 14
 19421                           ;mcc_generated_files/eusart2.c: 238:         eusart2RxStatusBuffer[eusart2RxHead].oerr =
      +                           1;
 19422  003CBA  0EA2               	movlw	low _eusart2RxStatusBuffer
 19423  003CBC  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
 19424  003CBE  6ED9               	movwf	fsr2l,c
 19425  003CC0  6ADA               	clrf	fsr2h,c
 19426  003CC2  0E02               	movlw	high _eusart2RxStatusBuffer
 19427  003CC4  22DA               	addwfc	fsr2h,f,c
 19428  003CC6  0102               	movlb	2	; () banked
 19429  003CC8  84DF               	bsf	indf2,2,c
 19430  003CCA                     
 19431                           ; BSR set to: 2
 19432                           ;mcc_generated_files/eusart2.c: 239:         EUSART2_OverrunErrorHandler();
 19433  003CCA  D802               	call	i2u497_48
 19434  003CCC  EF72  F01E         	goto	i2u497_49
 19435  003CD0                     i2u497_48:
 19436  003CD0  0005               	push	
 19437  003CD2  6EFA               	movwf	pclath,c
 19438  003CD4  0101               	movlb	1	; () banked
 19439  003CD6  51E1               	movf	_EUSART2_OverrunErrorHandler& (0+255),w,b
 19440  003CD8  6EFD               	movwf	tosl,c
 19441  003CDA  51E2               	movf	(_EUSART2_OverrunErrorHandler+1)& (0+255),w,b
 19442  003CDC  6EFE               	movwf	tosh,c
 19443  003CDE  6AFF               	clrf	tosu,c
 19444  003CE0  50FA               	movf	pclath,w,c
 19445  003CE2  0012               	return		;indir
 19446  003CE4                     i2u497_49:
 19447  003CE4                     i2l5699:
 19448                           
 19449                           ;mcc_generated_files/eusart2.c: 242:     if(eusart2RxStatusBuffer[eusart2RxHead].status)
      +                          {
 19450  003CE4  0EA2               	movlw	low _eusart2RxStatusBuffer
 19451  003CE6  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
 19452  003CE8  6ED9               	movwf	fsr2l,c
 19453  003CEA  6ADA               	clrf	fsr2h,c
 19454  003CEC  0E02               	movlw	high _eusart2RxStatusBuffer
 19455  003CEE  22DA               	addwfc	fsr2h,f,c
 19456  003CF0  50DF               	movf	indf2,w,c
 19457  003CF2  B4D8               	btfsc	status,2,c
 19458  003CF4  EF7E  F01E         	goto	i2u498_41
 19459  003CF8  EF80  F01E         	goto	i2u498_40
 19460  003CFC                     i2u498_41:
 19461  003CFC  EF8F  F01E         	goto	i2l5703
 19462  003D00                     i2u498_40:
 19463  003D00                     
 19464                           ;mcc_generated_files/eusart2.c: 243:         EUSART2_ErrorHandler();
 19465  003D00  D802               	call	i2u499_48
 19466  003D02  EF8D  F01E         	goto	i2u499_49
 19467  003D06                     i2u499_48:
 19468  003D06  0005               	push	
 19469  003D08  6EFA               	movwf	pclath,c
 19470  003D0A  0101               	movlb	1	; () banked
 19471  003D0C  51DF               	movf	_EUSART2_ErrorHandler& (0+255),w,b
 19472  003D0E  6EFD               	movwf	tosl,c
 19473  003D10  51E0               	movf	(_EUSART2_ErrorHandler+1)& (0+255),w,b
 19474  003D12  6EFE               	movwf	tosh,c
 19475  003D14  6AFF               	clrf	tosu,c
 19476  003D16  50FA               	movf	pclath,w,c
 19477  003D18  0012               	return		;indir
 19478  003D1A                     i2u499_49:
 19479                           
 19480                           ;mcc_generated_files/eusart2.c: 244:     } else {
 19481  003D1A  EF91  F01E         	goto	i2l347
 19482  003D1E                     i2l5703:
 19483                           
 19484                           ;mcc_generated_files/eusart2.c: 245:         EUSART2_RxDataHandler();
 19485  003D1E  EC11  F026         	call	_EUSART2_RxDataHandler	;wreg free
 19486  003D22                     i2l347:
 19487  003D22  0012               	return		;funcret
 19488  003D24                     __end_of_EUSART2_Receive_ISR:
 19489                           	opt callstack 0
 19490                           
 19491 ;; *************** function _EUSART2_DefaultOverrunErrorHandler *****************
 19492 ;; Defined at:
 19493 ;;		line 263 in file "mcc_generated_files/eusart2.c"
 19494 ;; Parameters:    Size  Location     Type
 19495 ;;		None
 19496 ;; Auto vars:     Size  Location     Type
 19497 ;;		None
 19498 ;; Return value:  Size  Location     Type
 19499 ;;                  1    wreg      void 
 19500 ;; Registers used:
 19501 ;;		None
 19502 ;; Tracked objects:
 19503 ;;		On entry : 0/0
 19504 ;;		On exit  : 0/0
 19505 ;;		Unchanged: 0/0
 19506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19511 ;;Total ram usage:        0 bytes
 19512 ;; Hardware stack levels used:    1
 19513 ;; This function calls:
 19514 ;;		Nothing
 19515 ;; This function is called by:
 19516 ;;		_EUSART2_Initialize
 19517 ;;		_EUSART2_Receive_ISR
 19518 ;; This function uses a non-reentrant model
 19519 ;;
 19520                           
 19521                           	psect	text88
 19522  004E68                     __ptext88:
 19523                           	opt callstack 0
 19524  004E68                     _EUSART2_DefaultOverrunErrorHandler:
 19525                           	opt callstack 16
 19526  004E68                     
 19527                           ;mcc_generated_files/eusart2.c: 266:     RC2STAbits.CREN = 0;
 19528  004E68  010E               	movlb	14	; () banked
 19529  004E6A  999D               	bcf	157,4,b	;volatile
 19530                           
 19531                           ;mcc_generated_files/eusart2.c: 267:     RC2STAbits.CREN = 1;
 19532  004E6C  899D               	bsf	157,4,b	;volatile
 19533  004E6E                     
 19534                           ; BSR set to: 14
 19535  004E6E  0012               	return		;funcret
 19536  004E70                     __end_of_EUSART2_DefaultOverrunErrorHandler:
 19537                           	opt callstack 0
 19538                           
 19539 ;; *************** function _EUSART2_DefaultFramingErrorHandler *****************
 19540 ;; Defined at:
 19541 ;;		line 261 in file "mcc_generated_files/eusart2.c"
 19542 ;; Parameters:    Size  Location     Type
 19543 ;;		None
 19544 ;; Auto vars:     Size  Location     Type
 19545 ;;		None
 19546 ;; Return value:  Size  Location     Type
 19547 ;;                  1    wreg      void 
 19548 ;; Registers used:
 19549 ;;		None
 19550 ;; Tracked objects:
 19551 ;;		On entry : 0/0
 19552 ;;		On exit  : 0/0
 19553 ;;		Unchanged: 0/0
 19554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19559 ;;Total ram usage:        0 bytes
 19560 ;; Hardware stack levels used:    1
 19561 ;; This function calls:
 19562 ;;		Nothing
 19563 ;; This function is called by:
 19564 ;;		_EUSART2_Initialize
 19565 ;;		_EUSART2_Receive_ISR
 19566 ;; This function uses a non-reentrant model
 19567 ;;
 19568                           
 19569                           	psect	text89
 19570  004E96                     __ptext89:
 19571                           	opt callstack 0
 19572  004E96                     _EUSART2_DefaultFramingErrorHandler:
 19573                           	opt callstack 16
 19574  004E96  0012               	return		;funcret
 19575  004E98                     __end_of_EUSART2_DefaultFramingErrorHandler:
 19576                           	opt callstack 0
 19577                           
 19578 ;; *************** function _EUSART2_DefaultErrorHandler *****************
 19579 ;; Defined at:
 19580 ;;		line 271 in file "mcc_generated_files/eusart2.c"
 19581 ;; Parameters:    Size  Location     Type
 19582 ;;		None
 19583 ;; Auto vars:     Size  Location     Type
 19584 ;;		None
 19585 ;; Return value:  Size  Location     Type
 19586 ;;                  1    wreg      void 
 19587 ;; Registers used:
 19588 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19589 ;; Tracked objects:
 19590 ;;		On entry : 0/0
 19591 ;;		On exit  : 0/0
 19592 ;;		Unchanged: 0/0
 19593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19598 ;;Total ram usage:        0 bytes
 19599 ;; Hardware stack levels used:    1
 19600 ;; Hardware stack levels required when called:    1
 19601 ;; This function calls:
 19602 ;;		_EUSART2_RxDataHandler
 19603 ;; This function is called by:
 19604 ;;		_EUSART2_Initialize
 19605 ;;		_EUSART2_Receive_ISR
 19606 ;; This function uses a non-reentrant model
 19607 ;;
 19608                           
 19609                           	psect	text90
 19610  004E7C                     __ptext90:
 19611                           	opt callstack 0
 19612  004E7C                     _EUSART2_DefaultErrorHandler:
 19613                           	opt callstack 15
 19614  004E7C                     
 19615                           ;mcc_generated_files/eusart2.c: 272:     EUSART2_RxDataHandler();
 19616  004E7C  EC11  F026         	call	_EUSART2_RxDataHandler	;wreg free
 19617  004E80  0012               	return		;funcret
 19618  004E82                     __end_of_EUSART2_DefaultErrorHandler:
 19619                           	opt callstack 0
 19620                           
 19621 ;; *************** function _EUSART2_RxDataHandler *****************
 19622 ;; Defined at:
 19623 ;;		line 251 in file "mcc_generated_files/eusart2.c"
 19624 ;; Parameters:    Size  Location     Type
 19625 ;;		None
 19626 ;; Auto vars:     Size  Location     Type
 19627 ;;		None
 19628 ;; Return value:  Size  Location     Type
 19629 ;;                  1    wreg      void 
 19630 ;; Registers used:
 19631 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19632 ;; Tracked objects:
 19633 ;;		On entry : 0/0
 19634 ;;		On exit  : 0/0
 19635 ;;		Unchanged: 0/0
 19636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19641 ;;Total ram usage:        0 bytes
 19642 ;; Hardware stack levels used:    1
 19643 ;; This function calls:
 19644 ;;		Nothing
 19645 ;; This function is called by:
 19646 ;;		_EUSART2_Receive_ISR
 19647 ;;		_EUSART2_DefaultErrorHandler
 19648 ;; This function uses a non-reentrant model
 19649 ;;
 19650                           
 19651                           	psect	text91
 19652  004C22                     __ptext91:
 19653                           	opt callstack 0
 19654  004C22                     _EUSART2_RxDataHandler:
 19655                           	opt callstack 16
 19656  004C22                     
 19657                           ;mcc_generated_files/eusart2.c: 253:     eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 19658  004C22  0E64               	movlw	low _eusart2RxBuffer
 19659  004C24  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
 19660  004C26  6ED9               	movwf	fsr2l,c
 19661  004C28  6ADA               	clrf	fsr2h,c
 19662  004C2A  0E03               	movlw	high _eusart2RxBuffer
 19663  004C2C  22DA               	addwfc	fsr2h,f,c
 19664  004C2E  CE99 FFDF          	movff	3737,indf2	;volatile
 19665  004C32  2A5A               	incf	_eusart2RxHead^0,f,c	;volatile
 19666  004C34                     
 19667                           ;mcc_generated_files/eusart2.c: 254:     if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 19668  004C34  0E1F               	movlw	31
 19669  004C36  645A               	cpfsgt	_eusart2RxHead^0,c	;volatile
 19670  004C38  EF20  F026         	goto	i2u436_41
 19671  004C3C  EF22  F026         	goto	i2u436_40
 19672  004C40                     i2u436_41:
 19673  004C40  EF24  F026         	goto	i2l5131
 19674  004C44                     i2u436_40:
 19675  004C44                     
 19676                           ;mcc_generated_files/eusart2.c: 255:     {;mcc_generated_files/eusart2.c: 256:         e
      +                          usart2RxHead = 0;
 19677  004C44  0E00               	movlw	0
 19678  004C46  6E5A               	movwf	_eusart2RxHead^0,c	;volatile
 19679  004C48                     i2l5131:
 19680                           
 19681                           ;mcc_generated_files/eusart2.c: 258:     eusart2RxCount++;
 19682  004C48  0100               	movlb	0	; () banked
 19683  004C4A  2BE6               	incf	_eusart2RxCount& (0+255),f,b	;volatile
 19684  004C4C                     
 19685                           ; BSR set to: 0
 19686  004C4C  0012               	return		;funcret
 19687  004C4E                     __end_of_EUSART2_RxDataHandler:
 19688                           	opt callstack 0
 19689                           
 19690 ;; *************** function _EUSART1_Transmit_ISR *****************
 19691 ;; Defined at:
 19692 ;;		line 199 in file "mcc_generated_files/eusart1.c"
 19693 ;; Parameters:    Size  Location     Type
 19694 ;;		None
 19695 ;; Auto vars:     Size  Location     Type
 19696 ;;		None
 19697 ;; Return value:  Size  Location     Type
 19698 ;;                  1    wreg      void 
 19699 ;; Registers used:
 19700 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19701 ;; Tracked objects:
 19702 ;;		On entry : 0/0
 19703 ;;		On exit  : 0/0
 19704 ;;		Unchanged: 0/0
 19705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19710 ;;Total ram usage:        0 bytes
 19711 ;; Hardware stack levels used:    1
 19712 ;; This function calls:
 19713 ;;		Nothing
 19714 ;; This function is called by:
 19715 ;;		_EUSART1_Initialize
 19716 ;;		_INTERRUPT_InterruptManager
 19717 ;; This function uses a non-reentrant model
 19718 ;;
 19719                           
 19720                           	psect	text92
 19721  004992                     __ptext92:
 19722                           	opt callstack 0
 19723  004992                     _EUSART1_Transmit_ISR:
 19724                           	opt callstack 17
 19725  004992                     
 19726                           ;mcc_generated_files/eusart1.c: 203:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 19727  004992  0E10               	movlw	16
 19728  004994  0100               	movlb	0	; () banked
 19729  004996  61FE               	cpfslt	_eusart1TxBufferRemaining& (0+255),b	;volatile
 19730  004998  EFD0  F024         	goto	i2u500_41
 19731  00499C  EFD2  F024         	goto	i2u500_40
 19732  0049A0                     i2u500_41:
 19733  0049A0  EFE8  F024         	goto	i2l481
 19734  0049A4                     i2u500_40:
 19735  0049A4                     
 19736                           ; BSR set to: 0
 19737                           ;mcc_generated_files/eusart1.c: 204:     {;mcc_generated_files/eusart1.c: 205:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 19738  0049A4  0EC2               	movlw	low _eusart1TxBuffer
 19739  0049A6  25E3               	addwf	_eusart1TxTail& (0+255),w,b	;volatile
 19740  0049A8  6ED9               	movwf	fsr2l,c
 19741  0049AA  6ADA               	clrf	fsr2h,c
 19742  0049AC  0E02               	movlw	high _eusart1TxBuffer
 19743  0049AE  22DA               	addwfc	fsr2h,f,c
 19744  0049B0  50DF               	movf	indf2,w,c
 19745  0049B2  6E9A               	movwf	154,c	;volatile
 19746  0049B4                     
 19747                           ; BSR set to: 0
 19748  0049B4  2BE3               	incf	_eusart1TxTail& (0+255),f,b	;volatile
 19749  0049B6                     
 19750                           ; BSR set to: 0
 19751                           ;mcc_generated_files/eusart1.c: 206:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 19752  0049B6  0E0F               	movlw	15
 19753  0049B8  65E3               	cpfsgt	_eusart1TxTail& (0+255),b	;volatile
 19754  0049BA  EFE1  F024         	goto	i2u501_41
 19755  0049BE  EFE3  F024         	goto	i2u501_40
 19756  0049C2                     i2u501_41:
 19757  0049C2  EFE5  F024         	goto	i2l5715
 19758  0049C6                     i2u501_40:
 19759  0049C6                     
 19760                           ; BSR set to: 0
 19761                           ;mcc_generated_files/eusart1.c: 207:         {;mcc_generated_files/eusart1.c: 208:      
      +                                 eusart1TxTail = 0;
 19762  0049C6  0E00               	movlw	0
 19763  0049C8  6FE3               	movwf	_eusart1TxTail& (0+255),b	;volatile
 19764  0049CA                     i2l5715:
 19765                           
 19766                           ; BSR set to: 0
 19767                           ;mcc_generated_files/eusart1.c: 210:         eusart1TxBufferRemaining++;
 19768  0049CA  2BFE               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 19769                           
 19770                           ;mcc_generated_files/eusart1.c: 211:     }
 19771  0049CC  EFEA  F024         	goto	i2l484
 19772  0049D0                     i2l481:
 19773                           
 19774                           ; BSR set to: 0
 19775                           ;mcc_generated_files/eusart1.c: 213:     {;mcc_generated_files/eusart1.c: 214:         P
      +                          IE3bits.TX1IE = 0;
 19776  0049D0  010E               	movlb	14	; () banked
 19777  0049D2  99C5               	bcf	197,4,b	;volatile
 19778  0049D4                     i2l484:
 19779  0049D4  0012               	return		;funcret
 19780  0049D6                     __end_of_EUSART1_Transmit_ISR:
 19781                           	opt callstack 0
 19782                           
 19783 ;; *************** function _EUSART1_Receive_ISR *****************
 19784 ;; Defined at:
 19785 ;;		line 218 in file "mcc_generated_files/eusart1.c"
 19786 ;; Parameters:    Size  Location     Type
 19787 ;;		None
 19788 ;; Auto vars:     Size  Location     Type
 19789 ;;		None
 19790 ;; Return value:  Size  Location     Type
 19791 ;;                  1    wreg      void 
 19792 ;; Registers used:
 19793 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 19794 ;; Tracked objects:
 19795 ;;		On entry : 0/0
 19796 ;;		On exit  : 0/0
 19797 ;;		Unchanged: 0/0
 19798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19803 ;;Total ram usage:        0 bytes
 19804 ;; Hardware stack levels used:    1
 19805 ;; Hardware stack levels required when called:    2
 19806 ;; This function calls:
 19807 ;;		Absolute function
 19808 ;;		_EUSART1_DefaultErrorHandler
 19809 ;;		_EUSART1_DefaultFramingErrorHandler
 19810 ;;		_EUSART1_DefaultOverrunErrorHandler
 19811 ;;		_EUSART1_RxDataHandler
 19812 ;; This function is called by:
 19813 ;;		_EUSART1_Initialize
 19814 ;;		_INTERRUPT_InterruptManager
 19815 ;; This function uses a non-reentrant model
 19816 ;;
 19817                           
 19818                           	psect	text93
 19819  003EA6                     __ptext93:
 19820                           	opt callstack 0
 19821  003EA6                     _EUSART1_Receive_ISR:
 19822                           	opt callstack 15
 19823  003EA6                     
 19824                           ;mcc_generated_files/eusart1.c: 221:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 19825  003EA6  0E00               	movlw	low _eusart1RxStatusBuffer
 19826  003EA8  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
 19827  003EAA  6ED9               	movwf	fsr2l,c
 19828  003EAC  6ADA               	clrf	fsr2h,c
 19829  003EAE  0E03               	movlw	high _eusart1RxStatusBuffer
 19830  003EB0  22DA               	addwfc	fsr2h,f,c
 19831  003EB2  0E00               	movlw	0
 19832  003EB4  6EDF               	movwf	indf2,c
 19833  003EB6                     
 19834                           ;mcc_generated_files/eusart1.c: 223:     if(RC1STAbits.FERR){
 19835  003EB6  A49D               	btfss	157,2,c	;volatile
 19836  003EB8  EF60  F01F         	goto	i2u502_41
 19837  003EBC  EF62  F01F         	goto	i2u502_40
 19838  003EC0                     i2u502_41:
 19839  003EC0  EF77  F01F         	goto	i2l5725
 19840  003EC4                     i2u502_40:
 19841  003EC4                     
 19842                           ;mcc_generated_files/eusart1.c: 224:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 19843  003EC4  0E00               	movlw	low _eusart1RxStatusBuffer
 19844  003EC6  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
 19845  003EC8  6ED9               	movwf	fsr2l,c
 19846  003ECA  6ADA               	clrf	fsr2h,c
 19847  003ECC  0E03               	movlw	high _eusart1RxStatusBuffer
 19848  003ECE  22DA               	addwfc	fsr2h,f,c
 19849  003ED0  0103               	movlb	3	; () banked
 19850  003ED2  82DF               	bsf	indf2,1,c
 19851  003ED4                     
 19852                           ; BSR set to: 3
 19853                           ;mcc_generated_files/eusart1.c: 225:         EUSART1_FramingErrorHandler();
 19854  003ED4  D802               	call	i2u503_48
 19855  003ED6  EF77  F01F         	goto	i2u503_49
 19856  003EDA                     i2u503_48:
 19857  003EDA  0005               	push	
 19858  003EDC  6EFA               	movwf	pclath,c
 19859  003EDE  0101               	movlb	1	; () banked
 19860  003EE0  51DD               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
 19861  003EE2  6EFD               	movwf	tosl,c
 19862  003EE4  51DE               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
 19863  003EE6  6EFE               	movwf	tosh,c
 19864  003EE8  6AFF               	clrf	tosu,c
 19865  003EEA  50FA               	movf	pclath,w,c
 19866  003EEC  0012               	return		;indir
 19867  003EEE                     i2u503_49:
 19868  003EEE                     i2l5725:
 19869                           
 19870                           ;mcc_generated_files/eusart1.c: 228:     if(RC1STAbits.OERR){
 19871  003EEE  A29D               	btfss	157,1,c	;volatile
 19872  003EF0  EF7C  F01F         	goto	i2u504_41
 19873  003EF4  EF7E  F01F         	goto	i2u504_40
 19874  003EF8                     i2u504_41:
 19875  003EF8  EF93  F01F         	goto	i2l5731
 19876  003EFC                     i2u504_40:
 19877  003EFC                     
 19878                           ;mcc_generated_files/eusart1.c: 229:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 19879  003EFC  0E00               	movlw	low _eusart1RxStatusBuffer
 19880  003EFE  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
 19881  003F00  6ED9               	movwf	fsr2l,c
 19882  003F02  6ADA               	clrf	fsr2h,c
 19883  003F04  0E03               	movlw	high _eusart1RxStatusBuffer
 19884  003F06  22DA               	addwfc	fsr2h,f,c
 19885  003F08  0103               	movlb	3	; () banked
 19886  003F0A  84DF               	bsf	indf2,2,c
 19887  003F0C                     
 19888                           ; BSR set to: 3
 19889                           ;mcc_generated_files/eusart1.c: 230:         EUSART1_OverrunErrorHandler();
 19890  003F0C  D802               	call	i2u505_48
 19891  003F0E  EF93  F01F         	goto	i2u505_49
 19892  003F12                     i2u505_48:
 19893  003F12  0005               	push	
 19894  003F14  6EFA               	movwf	pclath,c
 19895  003F16  0101               	movlb	1	; () banked
 19896  003F18  51DB               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
 19897  003F1A  6EFD               	movwf	tosl,c
 19898  003F1C  51DC               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
 19899  003F1E  6EFE               	movwf	tosh,c
 19900  003F20  6AFF               	clrf	tosu,c
 19901  003F22  50FA               	movf	pclath,w,c
 19902  003F24  0012               	return		;indir
 19903  003F26                     i2u505_49:
 19904  003F26                     i2l5731:
 19905                           
 19906                           ;mcc_generated_files/eusart1.c: 233:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 19907  003F26  0E00               	movlw	low _eusart1RxStatusBuffer
 19908  003F28  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
 19909  003F2A  6ED9               	movwf	fsr2l,c
 19910  003F2C  6ADA               	clrf	fsr2h,c
 19911  003F2E  0E03               	movlw	high _eusart1RxStatusBuffer
 19912  003F30  22DA               	addwfc	fsr2h,f,c
 19913  003F32  50DF               	movf	indf2,w,c
 19914  003F34  B4D8               	btfsc	status,2,c
 19915  003F36  EF9F  F01F         	goto	i2u506_41
 19916  003F3A  EFA1  F01F         	goto	i2u506_40
 19917  003F3E                     i2u506_41:
 19918  003F3E  EFB0  F01F         	goto	i2l5735
 19919  003F42                     i2u506_40:
 19920  003F42                     
 19921                           ;mcc_generated_files/eusart1.c: 234:         EUSART1_ErrorHandler();
 19922  003F42  D802               	call	i2u507_48
 19923  003F44  EFAE  F01F         	goto	i2u507_49
 19924  003F48                     i2u507_48:
 19925  003F48  0005               	push	
 19926  003F4A  6EFA               	movwf	pclath,c
 19927  003F4C  0101               	movlb	1	; () banked
 19928  003F4E  51D9               	movf	_EUSART1_ErrorHandler& (0+255),w,b
 19929  003F50  6EFD               	movwf	tosl,c
 19930  003F52  51DA               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
 19931  003F54  6EFE               	movwf	tosh,c
 19932  003F56  6AFF               	clrf	tosu,c
 19933  003F58  50FA               	movf	pclath,w,c
 19934  003F5A  0012               	return		;indir
 19935  003F5C                     i2u507_49:
 19936                           
 19937                           ;mcc_generated_files/eusart1.c: 235:     } else {
 19938  003F5C  EFB2  F01F         	goto	i2l491
 19939  003F60                     i2l5735:
 19940                           
 19941                           ;mcc_generated_files/eusart1.c: 236:         EUSART1_RxDataHandler();
 19942  003F60  EC27  F026         	call	_EUSART1_RxDataHandler	;wreg free
 19943  003F64                     i2l491:
 19944  003F64  0012               	return		;funcret
 19945  003F66                     __end_of_EUSART1_Receive_ISR:
 19946                           	opt callstack 0
 19947                           
 19948 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 19949 ;; Defined at:
 19950 ;;		line 254 in file "mcc_generated_files/eusart1.c"
 19951 ;; Parameters:    Size  Location     Type
 19952 ;;		None
 19953 ;; Auto vars:     Size  Location     Type
 19954 ;;		None
 19955 ;; Return value:  Size  Location     Type
 19956 ;;                  1    wreg      void 
 19957 ;; Registers used:
 19958 ;;		None
 19959 ;; Tracked objects:
 19960 ;;		On entry : 0/0
 19961 ;;		On exit  : 0/0
 19962 ;;		Unchanged: 0/0
 19963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19968 ;;Total ram usage:        0 bytes
 19969 ;; Hardware stack levels used:    1
 19970 ;; This function calls:
 19971 ;;		Nothing
 19972 ;; This function is called by:
 19973 ;;		_EUSART1_Initialize
 19974 ;;		_EUSART1_Receive_ISR
 19975 ;; This function uses a non-reentrant model
 19976 ;;
 19977                           
 19978                           	psect	text94
 19979  004E82                     __ptext94:
 19980                           	opt callstack 0
 19981  004E82                     _EUSART1_DefaultOverrunErrorHandler:
 19982                           	opt callstack 16
 19983  004E82                     
 19984                           ;mcc_generated_files/eusart1.c: 257:     RC1STAbits.CREN = 0;
 19985  004E82  989D               	bcf	157,4,c	;volatile
 19986                           
 19987                           ;mcc_generated_files/eusart1.c: 258:     RC1STAbits.CREN = 1;
 19988  004E84  889D               	bsf	157,4,c	;volatile
 19989  004E86  0012               	return		;funcret
 19990  004E88                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 19991                           	opt callstack 0
 19992                           
 19993 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 19994 ;; Defined at:
 19995 ;;		line 252 in file "mcc_generated_files/eusart1.c"
 19996 ;; Parameters:    Size  Location     Type
 19997 ;;		None
 19998 ;; Auto vars:     Size  Location     Type
 19999 ;;		None
 20000 ;; Return value:  Size  Location     Type
 20001 ;;                  1    wreg      void 
 20002 ;; Registers used:
 20003 ;;		None
 20004 ;; Tracked objects:
 20005 ;;		On entry : 0/0
 20006 ;;		On exit  : 0/0
 20007 ;;		Unchanged: 0/0
 20008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20013 ;;Total ram usage:        0 bytes
 20014 ;; Hardware stack levels used:    1
 20015 ;; This function calls:
 20016 ;;		Nothing
 20017 ;; This function is called by:
 20018 ;;		_EUSART1_Initialize
 20019 ;;		_EUSART1_Receive_ISR
 20020 ;; This function uses a non-reentrant model
 20021 ;;
 20022                           
 20023                           	psect	text95
 20024  004E98                     __ptext95:
 20025                           	opt callstack 0
 20026  004E98                     _EUSART1_DefaultFramingErrorHandler:
 20027                           	opt callstack 16
 20028  004E98  0012               	return		;funcret
 20029  004E9A                     __end_of_EUSART1_DefaultFramingErrorHandler:
 20030                           	opt callstack 0
 20031                           
 20032 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 20033 ;; Defined at:
 20034 ;;		line 262 in file "mcc_generated_files/eusart1.c"
 20035 ;; Parameters:    Size  Location     Type
 20036 ;;		None
 20037 ;; Auto vars:     Size  Location     Type
 20038 ;;		None
 20039 ;; Return value:  Size  Location     Type
 20040 ;;                  1    wreg      void 
 20041 ;; Registers used:
 20042 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20043 ;; Tracked objects:
 20044 ;;		On entry : 0/0
 20045 ;;		On exit  : 0/0
 20046 ;;		Unchanged: 0/0
 20047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20052 ;;Total ram usage:        0 bytes
 20053 ;; Hardware stack levels used:    1
 20054 ;; Hardware stack levels required when called:    1
 20055 ;; This function calls:
 20056 ;;		_EUSART1_RxDataHandler
 20057 ;; This function is called by:
 20058 ;;		_EUSART1_Initialize
 20059 ;;		_EUSART1_Receive_ISR
 20060 ;; This function uses a non-reentrant model
 20061 ;;
 20062                           
 20063                           	psect	text96
 20064  004E88                     __ptext96:
 20065                           	opt callstack 0
 20066  004E88                     _EUSART1_DefaultErrorHandler:
 20067                           	opt callstack 15
 20068  004E88                     
 20069                           ;mcc_generated_files/eusart1.c: 263:     EUSART1_RxDataHandler();
 20070  004E88  EC27  F026         	call	_EUSART1_RxDataHandler	;wreg free
 20071  004E8C  0012               	return		;funcret
 20072  004E8E                     __end_of_EUSART1_DefaultErrorHandler:
 20073                           	opt callstack 0
 20074                           
 20075 ;; *************** function _EUSART1_RxDataHandler *****************
 20076 ;; Defined at:
 20077 ;;		line 242 in file "mcc_generated_files/eusart1.c"
 20078 ;; Parameters:    Size  Location     Type
 20079 ;;		None
 20080 ;; Auto vars:     Size  Location     Type
 20081 ;;		None
 20082 ;; Return value:  Size  Location     Type
 20083 ;;                  1    wreg      void 
 20084 ;; Registers used:
 20085 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20086 ;; Tracked objects:
 20087 ;;		On entry : 0/0
 20088 ;;		On exit  : 0/0
 20089 ;;		Unchanged: 0/0
 20090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20095 ;;Total ram usage:        0 bytes
 20096 ;; Hardware stack levels used:    1
 20097 ;; This function calls:
 20098 ;;		Nothing
 20099 ;; This function is called by:
 20100 ;;		_EUSART1_Receive_ISR
 20101 ;;		_EUSART1_DefaultErrorHandler
 20102 ;; This function uses a non-reentrant model
 20103 ;;
 20104                           
 20105                           	psect	text97
 20106  004C4E                     __ptext97:
 20107                           	opt callstack 0
 20108  004C4E                     _EUSART1_RxDataHandler:
 20109                           	opt callstack 16
 20110  004C4E                     
 20111                           ;mcc_generated_files/eusart1.c: 244:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 20112  004C4E  0E00               	movlw	low _eusart1RxBuffer
 20113  004C50  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
 20114  004C52  6ED9               	movwf	fsr2l,c
 20115  004C54  6ADA               	clrf	fsr2h,c
 20116  004C56  0E04               	movlw	high _eusart1RxBuffer
 20117  004C58  22DA               	addwfc	fsr2h,f,c
 20118  004C5A  CF99 FFDF          	movff	3993,indf2	;volatile
 20119  004C5E  2A59               	incf	_eusart1RxHead^0,f,c	;volatile
 20120  004C60                     
 20121                           ;mcc_generated_files/eusart1.c: 245:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 20122  004C60  0E63               	movlw	99
 20123  004C62  6459               	cpfsgt	_eusart1RxHead^0,c	;volatile
 20124  004C64  EF36  F026         	goto	i2u437_41
 20125  004C68  EF38  F026         	goto	i2u437_40
 20126  004C6C                     i2u437_41:
 20127  004C6C  EF3A  F026         	goto	i2l5151
 20128  004C70                     i2u437_40:
 20129  004C70                     
 20130                           ;mcc_generated_files/eusart1.c: 246:     {;mcc_generated_files/eusart1.c: 247:         e
      +                          usart1RxHead = 0;
 20131  004C70  0E00               	movlw	0
 20132  004C72  6E59               	movwf	_eusart1RxHead^0,c	;volatile
 20133  004C74                     i2l5151:
 20134                           
 20135                           ;mcc_generated_files/eusart1.c: 249:     eusart1RxCount++;
 20136  004C74  0100               	movlb	0	; () banked
 20137  004C76  2BE1               	incf	_eusart1RxCount& (0+255),f,b	;volatile
 20138  004C78                     
 20139                           ; BSR set to: 0
 20140  004C78  0012               	return		;funcret
 20141  004C7A                     __end_of_EUSART1_RxDataHandler:
 20142                           	opt callstack 0
 20143                           
 20144                           	psect	text98
 20145  000000                     __ptext98:
 20146                           	opt callstack 0
 20147  000000                     
 20148                           	psect	rparam
 20149  0000                     
 20150                           	psect	temp
 20151  00005B                     btemp:
 20152                           	opt callstack 0
 20153  00005B                     	ds	1
 20154  0000                     int$flags	set	btemp
 20155  0000                     wtemp8	set	btemp+1
 20156  0000                     ttemp5	set	btemp+1
 20157  0000                     ttemp6	set	btemp+4
 20158  0000                     ttemp7	set	btemp+8
 20159                           tosu	equ	0xFFF
 20160                           tosh	equ	0xFFE
 20161                           tosl	equ	0xFFD
 20162                           stkptr	equ	0xFFC
 20163                           pclatu	equ	0xFFB
 20164                           pclath	equ	0xFFA
 20165                           pcl	equ	0xFF9
 20166                           tblptru	equ	0xFF8
 20167                           tblptrh	equ	0xFF7
 20168                           tblptrl	equ	0xFF6
 20169                           tablat	equ	0xFF5
 20170                           prodh	equ	0xFF4
 20171                           prodl	equ	0xFF3
 20172                           indf0	equ	0xFEF
 20173                           postinc0	equ	0xFEE
 20174                           postdec0	equ	0xFED
 20175                           preinc0	equ	0xFEC
 20176                           plusw0	equ	0xFEB
 20177                           fsr0h	equ	0xFEA
 20178                           fsr0l	equ	0xFE9
 20179                           wreg	equ	0xFE8
 20180                           indf1	equ	0xFE7
 20181                           postinc1	equ	0xFE6
 20182                           postdec1	equ	0xFE5
 20183                           preinc1	equ	0xFE4
 20184                           plusw1	equ	0xFE3
 20185                           fsr1h	equ	0xFE2
 20186                           fsr1l	equ	0xFE1
 20187                           bsr	equ	0xFE0
 20188                           indf2	equ	0xFDF
 20189                           postinc2	equ	0xFDE
 20190                           postdec2	equ	0xFDD
 20191                           preinc2	equ	0xFDC
 20192                           plusw2	equ	0xFDB
 20193                           fsr2h	equ	0xFDA
 20194                           fsr2l	equ	0xFD9
 20195                           status	equ	0xFD8


Data Sizes:
    Strings     2947
    Constant    0
    Data        457
    BSS         523
    Persistent  22
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      90
    BANK0           160    109     160
    BANK1           256     71     254
    BANK2           256      0     253
    BANK3           256      0     247
    BANK4           256      0     164
    BANK5           256      0     100
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK2[32]), ValidateCmd@ConfName_1565(BANK1[20]), 
		 -> ValidateCmd@ConfName_1561(BANK1[20]), ValidateCmd@ConfName(BANK1[20]), STR_93(CODE[9]), STR_92(CODE[12]), 
		 -> InitialiseString@RevNum(BANK0[2]), InitialiseString@PartNum(BANK0[19]), InitialiseString@SerialNum(BANK0[11]), Command(BANK1[16]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK2[32]), ValidateCmd@ConfName_1565(BANK1[20]), 
		 -> ValidateCmd@ConfName_1561(BANK1[20]), ValidateCmd@ConfName(BANK1[20]), STR_93(CODE[9]), STR_92(CODE[12]), 
		 -> InitialiseString@RevNum(BANK0[2]), InitialiseString@PartNum(BANK0[19]), InitialiseString@SerialNum(BANK0[11]), Command(BANK1[16]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_123(CODE[1]), STR_118(CODE[1]), ReadRX232@temp(COMRAM[2]), STR_5(CODE[1]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_123(CODE[1]), STR_118(CODE[1]), ReadRX232@temp(COMRAM[2]), STR_5(CODE[1]), 

    strcmp@r	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_134(CODE[4]), STR_132(CODE[5]), STR_130(CODE[7]), STR_128(CODE[2]), 
		 -> STR_126(CODE[6]), STR_85(CODE[4]), STR_84(CODE[5]), STR_83(CODE[7]), 

    strcmp@l	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_82(CODE[4]), STR_80(CODE[5]), STR_78(CODE[7]), Command(BANK1[16]), 

    strcat@src	PTR const unsigned char  size(2) Largest target is 2
		 -> ReadRX232@temp(COMRAM[2]), 

    strcat@dest	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 75
		 -> STR_124(CODE[12]), STR_122(CODE[13]), STR_121(CODE[17]), STR_120(CODE[15]), 
		 -> STR_119(CODE[33]), STR_117(CODE[38]), STR_116(CODE[58]), STR_115(CODE[17]), 
		 -> STR_114(CODE[16]), STR_113(CODE[4]), STR_112(CODE[15]), STR_111(CODE[19]), 
		 -> STR_110(CODE[32]), STR_109(CODE[33]), STR_108(CODE[37]), STR_107(CODE[44]), 
		 -> STR_106(CODE[22]), STR_105(CODE[75]), STR_104(CODE[53]), STR_103(CODE[69]), 
		 -> STR_102(CODE[54]), STR_101(CODE[52]), STR_100(CODE[40]), STR_99(CODE[30]), 
		 -> STR_98(CODE[43]), STR_97(CODE[73]), STR_96(CODE[42]), STR_95(CODE[36]), 
		 -> STR_94(CODE[34]), STR_91(CODE[42]), STR_90(CODE[22]), STR_89(CODE[21]), 
		 -> STR_88(CODE[20]), STR_87(CODE[19]), STR_86(CODE[40]), STR_76(CODE[32]), 
		 -> STR_75(CODE[37]), STR_74(CODE[16]), STR_73(CODE[24]), STR_72(CODE[4]), 
		 -> STR_71(CODE[24]), STR_70(CODE[30]), STR_69(CODE[30]), STR_68(CODE[37]), 
		 -> STR_67(CODE[37]), STR_66(CODE[38]), STR_65(CODE[38]), STR_64(CODE[54]), 
		 -> STR_63(CODE[36]), STR_62(CODE[32]), STR_61(CODE[32]), STR_60(CODE[35]), 
		 -> STR_59(CODE[54]), STR_58(CODE[38]), STR_57(CODE[54]), STR_56(CODE[36]), 
		 -> STR_55(CODE[19]), STR_54(CODE[54]), STR_53(CODE[15]), STR_52(CODE[30]), 
		 -> STR_51(CODE[52]), STR_50(CODE[28]), STR_49(CODE[30]), STR_48(CODE[52]), 
		 -> STR_47(CODE[25]), STR_46(CODE[30]), STR_45(CODE[52]), STR_44(CODE[25]), 
		 -> STR_43(CODE[30]), STR_42(CODE[52]), STR_41(CODE[23]), STR_40(CODE[30]), 
		 -> STR_39(CODE[42]), STR_38(CODE[21]), STR_37(CODE[30]), STR_36(CODE[52]), 
		 -> STR_35(CODE[21]), STR_34(CODE[30]), STR_33(CODE[52]), STR_32(CODE[25]), 
		 -> STR_31(CODE[36]), STR_30(CODE[3]), STR_29(CODE[32]), STR_28(CODE[32]), 
		 -> STR_27(CODE[35]), STR_26(CODE[66]), STR_25(CODE[38]), STR_24(CODE[37]), 
		 -> STR_23(CODE[37]), STR_22(CODE[38]), STR_21(CODE[38]), STR_20(CODE[55]), 
		 -> STR_19(CODE[36]), STR_18(CODE[30]), STR_17(CODE[30]), STR_16(CODE[37]), 
		 -> STR_15(CODE[37]), STR_14(CODE[38]), STR_13(CODE[38]), STR_12(CODE[54]), 
		 -> STR_11(CODE[36]), STR_10(CODE[21]), STR_9(CODE[28]), STR_8(CODE[54]), 
		 -> STR_7(CODE[27]), STR_6(CODE[16]), STR_4(CODE[19]), STR_3(CODE[28]), 
		 -> STR_2(CODE[31]), STR_1(CODE[21]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2441_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    memmove@d1	PTR void  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    memmove@d	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    memmove@s1	PTR const void  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    memmove@s	PTR const unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 75
		 -> STR_124(CODE[12]), STR_122(CODE[13]), STR_121(CODE[17]), STR_120(CODE[15]), 
		 -> STR_119(CODE[33]), STR_117(CODE[38]), STR_116(CODE[58]), STR_115(CODE[17]), 
		 -> STR_114(CODE[16]), STR_113(CODE[4]), STR_112(CODE[15]), STR_111(CODE[19]), 
		 -> STR_110(CODE[32]), STR_109(CODE[33]), STR_108(CODE[37]), STR_107(CODE[44]), 
		 -> STR_106(CODE[22]), STR_105(CODE[75]), STR_104(CODE[53]), STR_103(CODE[69]), 
		 -> STR_102(CODE[54]), STR_101(CODE[52]), STR_100(CODE[40]), STR_99(CODE[30]), 
		 -> STR_98(CODE[43]), STR_97(CODE[73]), STR_96(CODE[42]), STR_95(CODE[36]), 
		 -> STR_94(CODE[34]), STR_91(CODE[42]), STR_90(CODE[22]), STR_89(CODE[21]), 
		 -> STR_88(CODE[20]), STR_87(CODE[19]), STR_86(CODE[40]), STR_76(CODE[32]), 
		 -> STR_75(CODE[37]), STR_74(CODE[16]), STR_73(CODE[24]), STR_72(CODE[4]), 
		 -> STR_71(CODE[24]), STR_70(CODE[30]), STR_69(CODE[30]), STR_68(CODE[37]), 
		 -> STR_67(CODE[37]), STR_66(CODE[38]), STR_65(CODE[38]), STR_64(CODE[54]), 
		 -> STR_63(CODE[36]), STR_62(CODE[32]), STR_61(CODE[32]), STR_60(CODE[35]), 
		 -> STR_59(CODE[54]), STR_58(CODE[38]), STR_57(CODE[54]), STR_56(CODE[36]), 
		 -> STR_55(CODE[19]), STR_54(CODE[54]), STR_53(CODE[15]), STR_52(CODE[30]), 
		 -> STR_51(CODE[52]), STR_50(CODE[28]), STR_49(CODE[30]), STR_48(CODE[52]), 
		 -> STR_47(CODE[25]), STR_46(CODE[30]), STR_45(CODE[52]), STR_44(CODE[25]), 
		 -> STR_43(CODE[30]), STR_42(CODE[52]), STR_41(CODE[23]), STR_40(CODE[30]), 
		 -> STR_39(CODE[42]), STR_38(CODE[21]), STR_37(CODE[30]), STR_36(CODE[52]), 
		 -> STR_35(CODE[21]), STR_34(CODE[30]), STR_33(CODE[52]), STR_32(CODE[25]), 
		 -> STR_31(CODE[36]), STR_30(CODE[3]), STR_29(CODE[32]), STR_28(CODE[32]), 
		 -> STR_27(CODE[35]), STR_26(CODE[66]), STR_25(CODE[38]), STR_24(CODE[37]), 
		 -> STR_23(CODE[37]), STR_22(CODE[38]), STR_21(CODE[38]), STR_20(CODE[55]), 
		 -> STR_19(CODE[36]), STR_18(CODE[30]), STR_17(CODE[30]), STR_16(CODE[37]), 
		 -> STR_15(CODE[37]), STR_14(CODE[38]), STR_13(CODE[38]), STR_12(CODE[54]), 
		 -> STR_11(CODE[36]), STR_10(CODE[21]), STR_9(CODE[28]), STR_8(CODE[54]), 
		 -> STR_7(CODE[27]), STR_6(CODE[16]), STR_4(CODE[19]), STR_3(CODE[28]), 
		 -> STR_2(CODE[31]), STR_1(CODE[21]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 75
		 -> STR_124(CODE[12]), STR_122(CODE[13]), STR_121(CODE[17]), STR_120(CODE[15]), 
		 -> STR_119(CODE[33]), STR_117(CODE[38]), STR_116(CODE[58]), STR_115(CODE[17]), 
		 -> STR_114(CODE[16]), STR_113(CODE[4]), STR_112(CODE[15]), STR_111(CODE[19]), 
		 -> STR_110(CODE[32]), STR_109(CODE[33]), STR_108(CODE[37]), STR_107(CODE[44]), 
		 -> STR_106(CODE[22]), STR_105(CODE[75]), STR_104(CODE[53]), STR_103(CODE[69]), 
		 -> STR_102(CODE[54]), STR_101(CODE[52]), STR_100(CODE[40]), STR_99(CODE[30]), 
		 -> STR_98(CODE[43]), STR_97(CODE[73]), STR_96(CODE[42]), STR_95(CODE[36]), 
		 -> STR_94(CODE[34]), STR_91(CODE[42]), STR_90(CODE[22]), STR_89(CODE[21]), 
		 -> STR_88(CODE[20]), STR_87(CODE[19]), STR_86(CODE[40]), STR_76(CODE[32]), 
		 -> STR_75(CODE[37]), STR_74(CODE[16]), STR_73(CODE[24]), STR_72(CODE[4]), 
		 -> STR_71(CODE[24]), STR_70(CODE[30]), STR_69(CODE[30]), STR_68(CODE[37]), 
		 -> STR_67(CODE[37]), STR_66(CODE[38]), STR_65(CODE[38]), STR_64(CODE[54]), 
		 -> STR_63(CODE[36]), STR_62(CODE[32]), STR_61(CODE[32]), STR_60(CODE[35]), 
		 -> STR_59(CODE[54]), STR_58(CODE[38]), STR_57(CODE[54]), STR_56(CODE[36]), 
		 -> STR_55(CODE[19]), STR_54(CODE[54]), STR_53(CODE[15]), STR_52(CODE[30]), 
		 -> STR_51(CODE[52]), STR_50(CODE[28]), STR_49(CODE[30]), STR_48(CODE[52]), 
		 -> STR_47(CODE[25]), STR_46(CODE[30]), STR_45(CODE[52]), STR_44(CODE[25]), 
		 -> STR_43(CODE[30]), STR_42(CODE[52]), STR_41(CODE[23]), STR_40(CODE[30]), 
		 -> STR_39(CODE[42]), STR_38(CODE[21]), STR_37(CODE[30]), STR_36(CODE[52]), 
		 -> STR_35(CODE[21]), STR_34(CODE[30]), STR_33(CODE[52]), STR_32(CODE[25]), 
		 -> STR_31(CODE[36]), STR_30(CODE[3]), STR_29(CODE[32]), STR_28(CODE[32]), 
		 -> STR_27(CODE[35]), STR_26(CODE[66]), STR_25(CODE[38]), STR_24(CODE[37]), 
		 -> STR_23(CODE[37]), STR_22(CODE[38]), STR_21(CODE[38]), STR_20(CODE[55]), 
		 -> STR_19(CODE[36]), STR_18(CODE[30]), STR_17(CODE[30]), STR_16(CODE[37]), 
		 -> STR_15(CODE[37]), STR_14(CODE[38]), STR_13(CODE[38]), STR_12(CODE[54]), 
		 -> STR_11(CODE[36]), STR_10(CODE[21]), STR_9(CODE[28]), STR_8(CODE[54]), 
		 -> STR_7(CODE[27]), STR_6(CODE[16]), STR_4(CODE[19]), STR_3(CODE[28]), 
		 -> STR_2(CODE[31]), STR_1(CODE[21]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 75
		 -> STR_124(CODE[12]), STR_122(CODE[13]), STR_121(CODE[17]), STR_120(CODE[15]), 
		 -> STR_119(CODE[33]), STR_117(CODE[38]), STR_116(CODE[58]), STR_115(CODE[17]), 
		 -> STR_114(CODE[16]), STR_113(CODE[4]), STR_112(CODE[15]), STR_111(CODE[19]), 
		 -> STR_110(CODE[32]), STR_109(CODE[33]), STR_108(CODE[37]), STR_107(CODE[44]), 
		 -> STR_106(CODE[22]), STR_105(CODE[75]), STR_104(CODE[53]), STR_103(CODE[69]), 
		 -> STR_102(CODE[54]), STR_101(CODE[52]), STR_100(CODE[40]), STR_99(CODE[30]), 
		 -> STR_98(CODE[43]), STR_97(CODE[73]), STR_96(CODE[42]), STR_95(CODE[36]), 
		 -> STR_94(CODE[34]), STR_91(CODE[42]), STR_90(CODE[22]), STR_89(CODE[21]), 
		 -> STR_88(CODE[20]), STR_87(CODE[19]), STR_86(CODE[40]), STR_76(CODE[32]), 
		 -> STR_75(CODE[37]), STR_74(CODE[16]), STR_73(CODE[24]), STR_72(CODE[4]), 
		 -> STR_71(CODE[24]), STR_70(CODE[30]), STR_69(CODE[30]), STR_68(CODE[37]), 
		 -> STR_67(CODE[37]), STR_66(CODE[38]), STR_65(CODE[38]), STR_64(CODE[54]), 
		 -> STR_63(CODE[36]), STR_62(CODE[32]), STR_61(CODE[32]), STR_60(CODE[35]), 
		 -> STR_59(CODE[54]), STR_58(CODE[38]), STR_57(CODE[54]), STR_56(CODE[36]), 
		 -> STR_55(CODE[19]), STR_54(CODE[54]), STR_53(CODE[15]), STR_52(CODE[30]), 
		 -> STR_51(CODE[52]), STR_50(CODE[28]), STR_49(CODE[30]), STR_48(CODE[52]), 
		 -> STR_47(CODE[25]), STR_46(CODE[30]), STR_45(CODE[52]), STR_44(CODE[25]), 
		 -> STR_43(CODE[30]), STR_42(CODE[52]), STR_41(CODE[23]), STR_40(CODE[30]), 
		 -> STR_39(CODE[42]), STR_38(CODE[21]), STR_37(CODE[30]), STR_36(CODE[52]), 
		 -> STR_35(CODE[21]), STR_34(CODE[30]), STR_33(CODE[52]), STR_32(CODE[25]), 
		 -> STR_31(CODE[36]), STR_30(CODE[3]), STR_29(CODE[32]), STR_28(CODE[32]), 
		 -> STR_27(CODE[35]), STR_26(CODE[66]), STR_25(CODE[38]), STR_24(CODE[37]), 
		 -> STR_23(CODE[37]), STR_22(CODE[38]), STR_21(CODE[38]), STR_20(CODE[55]), 
		 -> STR_19(CODE[36]), STR_18(CODE[30]), STR_17(CODE[30]), STR_16(CODE[37]), 
		 -> STR_15(CODE[37]), STR_14(CODE[38]), STR_13(CODE[38]), STR_12(CODE[54]), 
		 -> STR_11(CODE[36]), STR_10(CODE[21]), STR_9(CODE[28]), STR_8(CODE[54]), 
		 -> STR_7(CODE[27]), STR_6(CODE[16]), STR_4(CODE[19]), STR_3(CODE[28]), 
		 -> STR_2(CODE[31]), STR_1(CODE[21]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ValidateCmd@ConfName_1565(BANK1[20]), ValidateCmd@ConfName_1561(BANK1[20]), ValidateCmd@ConfName(BANK1[20]), 
		 -> STR_93(CODE[9]), STR_92(CODE[12]), InitialiseString@RevNum(BANK0[2]), InitialiseString@PartNum(BANK0[19]), 
		 -> InitialiseString@SerialNum(BANK0[11]), Command(BANK1[16]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ValidateCmd@ConfName_1565(BANK1[20]), ValidateCmd@ConfName_1561(BANK1[20]), ValidateCmd@ConfName(BANK1[20]), 
		 -> STR_93(CODE[9]), STR_92(CODE[12]), InitialiseString@RevNum(BANK0[2]), InitialiseString@PartNum(BANK0[19]), 
		 -> InitialiseString@SerialNum(BANK0[11]), Command(BANK1[16]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), ValidateCmd@ConfName_1565(BANK1[20]), ValidateCmd@ConfName_1561(BANK1[20]), 
		 -> ValidateCmd@ConfName(BANK1[20]), STR_93(CODE[9]), STR_92(CODE[12]), InitialiseString@RevNum(BANK0[2]), 
		 -> InitialiseString@PartNum(BANK0[19]), InitialiseString@SerialNum(BANK0[11]), Command(BANK1[16]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    SaveCardDat@Name	PTR unsigned char  size(2) Largest target is 20
		 -> ValidateCmd@ConfName_1565(BANK1[20]), ValidateCmd@ConfName_1561(BANK1[20]), ValidateCmd@ConfName(BANK1[20]), 

    sp__memmove	PTR void  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    CardConfigIni@Name	PTR unsigned char  size(2) Largest target is 7
		 -> STR_85(CODE[4]), STR_84(CODE[5]), STR_83(CODE[7]), 

    CardConfigIni@RetNum	PTR unsigned char  size(2) Largest target is 19
		 -> InitialiseString@RevNum(BANK0[2]), InitialiseString@PartNum(BANK0[19]), InitialiseString@SerialNum(BANK0[11]), 

    UART1_Write_string@data	PTR unsigned char  size(2) Largest target is 75
		 -> MBRespon(BANK2[75]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    EUSART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), 

    EUSART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), 

    EUSART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultErrorHandler(), 

    EUSART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultFramingErrorHandler(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_Receive_ISR(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _main->_InitialiseString
    _main->_ModbusRx
    _main->_PrintMB400
    _main->_ReadRX232
    _ValidateCmd->_InitialiseString
    _SaveCardDat->_ClearEEAddRange
    _SaveCardDat->_ReadRX232
    _strcat->_strcpy
    _strcpy->_strlen
    _memmove->_strlen
    _CardConfigIni->_strcmp
    _EUSART2_Initialize->_EUSART2_SetErrorHandler
    _EUSART2_Initialize->_EUSART2_SetFramingErrorHandler
    _EUSART2_Initialize->_EUSART2_SetOverrunErrorHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _ModbusRx->_AddRxBuffToModBus
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART2_Write
    _abs->___aomod
    _atoi->_isspace
    _ModbusError->_generateCRC
    _UART1_Write_string->_EUSART1_Write

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_InitialiseString
    _ValidateCmd->_InitialiseString
    _TogDebug->_printf
    _SaveCardDat->_ClearEEAddRange
    _ReadRX232->_printf
    _ClearEEAddRange->_printf
    _InitialiseString->_printf
    _PrintModbus->_printf
    _PrintModRespon->_printf
    _PrintMB400->_printf
    _ModbusRx->_checkCRC
    _checkCRC->_printf
    _AddRxBuffToModBus->_printf
    _ModbusFC10->_printf
    _ModbusFC03->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_ValidateCmd

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  719439
                                             68 BANK1      3     3      0
                    _ClearModbusData
                  _ClearModbusRespon
                        _ClearRxBuff
                   _InitialiseString
                        _ModbusError
                         _ModbusFC03
                         _ModbusFC10
                           _ModbusRx
                         _PrintMB400
                     _PrintModRespon
                        _PrintModbus
                             _RXMode
                          _ReadRX232
                  _SYSTEM_Initialize
                        _ValidateCmd
                             _printf
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _ValidateCmd                                         68    68      0  227553
                                              0 BANK1     68    68      0
                   _InitialiseString
                        _SaveCardDat
                           _TogDebug
                             _strcmp
 ---------------------------------------------------------------------------------
 (2) _TogDebug                                             0     0      0   42367
                             _printf
 ---------------------------------------------------------------------------------
 (2) _SaveCardDat                                         18    10      8  136197
                                             51 BANK0     17     9      8
                    _ClearEEAddRange
                   _DATAEE_WriteByte
                       _EUSART2_Read
                _EUSART2_is_rx_ready
                          _ReadRX232
                             _printf
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _ReadRX232                                            4     2      2   46683
                                             84 COMRAM     2     2      0
                                             47 BANK0      2     0      2
                       _EUSART2_Read
                      _EUSART2_Write
                _EUSART2_is_rx_ready
                            _memmove
                             _printf
                             _strcat
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strcat                                               4     0      4    2077
                                             18 COMRAM     4     0      4
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strcpy                                              10     6      4     857
                                              8 COMRAM    10     6      4
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (4) _memmove                                             12     6      6     791
                                              8 COMRAM    12     6      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (4) _EUSART2_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EUSART2_Read                                         1     1      0      37
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ClearEEAddRange                                      6     2      4   43226
                                             84 COMRAM     2     2      0
                                             47 BANK0      4     0      4
                   _DATAEE_WriteByte
                             _printf
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     4     1      3     487
                                              4 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (2) _InitialiseString                                    64    64      0   47163
                                             84 COMRAM     2     2      0
                                             47 BANK0     62    62      0
           _ADCC_GetSingleConversion
                      _CardConfigIni
                             _printf
 ---------------------------------------------------------------------------------
 (3) _CardConfigIni                                       16     8      8    3759
                                              9 COMRAM    16     8      8
                    _DATAEE_ReadByte
                             _strcmp
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               5     1      4    1601
                                              4 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) _DATAEE_ReadByte                                      2     0      2     242
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1210
   _ADCC_DisableContinuousConversion
                    _ADCC_Initialize
                 _EUSART1_Initialize
                 _EUSART2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     605
            _EUSART2_SetErrorHandler
     _EUSART2_SetFramingErrorHandler
     _EUSART2_SetOverrunErrorHandler
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetOverrunErrorHandler                       2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetFramingErrorHandler                       2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetErrorHandler                              2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     605
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_DisableContinuousConversion                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PrintModbus                                          9     9      0   42788
                                             47 BANK0      9     9      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _PrintModRespon                                       7     7      0   42856
                                             47 BANK0      7     7      0
                 _EUSART2_is_tx_done
                _EUSART2_is_tx_ready
                             _printf
 ---------------------------------------------------------------------------------
 (2) _EUSART2_is_tx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_is_tx_done                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PrintMB400                                           2     2      0   42500
                                             84 COMRAM     2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _ModbusRx                                             1     1      0  127725
                                             85 COMRAM     1     1      0
                  _AddRxBuffToModBus
                        _ClearRxBuff
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                             _RXMode
                           _checkCRC
                             _printf
 ---------------------------------------------------------------------------------
 (2) _checkCRC                                            15    15      0   42812
                                             47 BANK0     15    15      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _RXMode                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         1     1      0      37
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ClearRxBuff                                          3     3      0      71
                                              4 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _AddRxBuffToModBus                                    3     3      0   42438
                                             84 COMRAM     1     1      0
                                             47 BANK0      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _ModbusFC10                                          11    11      0   47305
                                             47 BANK0     11    11      0
                        _ModbusError
                 _UART1_Write_string
                        _generateCRC
                             _printf
 ---------------------------------------------------------------------------------
 (1) _ModbusFC03                                          11    11      0   47655
                                             47 BANK0     11    11      0
           _ADCC_GetSingleConversion
                        _ModbusError
                 _UART1_Write_string
                        _generateCRC
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              18     4     14   42367
                                             29 BANK0     18     4     14
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   32362
                                             82 COMRAM     2     2      0
                                             23 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           45    39      6   31799
                                             72 COMRAM    10     4      6
                                              0 BANK0     23    23      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    7787
                                             33 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     512
                                             10 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    7169
                                             33 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     412
                                              4 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     421
                                              4 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _stoa                                                22    18      4    3362
                                             15 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    8023
                                             33 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    5757
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     940
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    2077
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1577
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      93
                                              5 COMRAM     1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART2_Write                                        1     1      0      62
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1815
                                             11 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     712
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _ModbusError                                          4     2      2    2499
                                             19 COMRAM     4     2      2
                 _UART1_Write_string
                        _generateCRC
 ---------------------------------------------------------------------------------
 (2) _generateCRC                                         15    12      3    1463
                                              4 COMRAM    15    12      3
 ---------------------------------------------------------------------------------
 (2) _UART1_Write_string                                   7     3      4     732
                                              5 COMRAM     7     3      4
                      _EUSART1_Write
                 _EUSART1_is_tx_done
                _EUSART1_is_tx_ready
                             _TXMode
 ---------------------------------------------------------------------------------
 (3) _TXMode                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART1_is_tx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART1_is_tx_done                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      62
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ADCC_GetSingleConversion                             5     3      2      31
                                              4 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ClearModbusRespon                                    2     2      0     102
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ClearModbusData                                      2     2      0     102
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManager                          4     4      0       0
                                              0 COMRAM     4     4      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                _EUSART2_Receive_ISR *
               _EUSART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (14) _EUSART2_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART2_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART2_DefaultErrorHandler *
 _EUSART2_DefaultFramingErrorHandler *
 _EUSART2_DefaultOverrunErrorHandler *
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART2_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART2_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART2_DefaultErrorHandler                         0     0      0       0
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART2_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearModbusData
   _ClearModbusRespon
   _ClearRxBuff
   _InitialiseString
     _ADCC_GetSingleConversion
     _CardConfigIni
       _DATAEE_ReadByte
       _strcmp
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _ModbusError
     _UART1_Write_string
       _EUSART1_Write
       _EUSART1_is_tx_done
       _EUSART1_is_tx_ready
       _TXMode
     _generateCRC
   _ModbusFC03
     _ADCC_GetSingleConversion
     _ModbusError
       _UART1_Write_string
         _EUSART1_Write
         _EUSART1_is_tx_done
         _EUSART1_is_tx_ready
         _TXMode
       _generateCRC
     _UART1_Write_string
       _EUSART1_Write
       _EUSART1_is_tx_done
       _EUSART1_is_tx_ready
       _TXMode
     _generateCRC
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _ModbusFC10
     _ModbusError
       _UART1_Write_string
         _EUSART1_Write
         _EUSART1_is_tx_done
         _EUSART1_is_tx_ready
         _TXMode
       _generateCRC
     _UART1_Write_string
       _EUSART1_Write
       _EUSART1_is_tx_done
       _EUSART1_is_tx_ready
       _TXMode
     _generateCRC
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _ModbusRx
     _AddRxBuffToModBus
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _ClearRxBuff
     _EUSART1_Read
     _EUSART1_is_rx_ready
     _RXMode
     _checkCRC
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _PrintMB400
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _PrintModRespon
     _EUSART2_is_tx_done
     _EUSART2_is_tx_ready
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _PrintModbus
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _RXMode
   _ReadRX232
     _EUSART2_Read
     _EUSART2_Write
     _EUSART2_is_rx_ready
     _memmove
       _strlen (ARG)
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
     _strcat
       _strcpy
         _strlen (ARG)
       _strlen
     _strlen
   _SYSTEM_Initialize
     _ADCC_DisableContinuousConversion
     _ADCC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetErrorHandler
       _EUSART2_SetFramingErrorHandler
       _EUSART2_SetOverrunErrorHandler
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _ValidateCmd
     _InitialiseString
       _ADCC_GetSingleConversion
       _CardConfigIni
         _DATAEE_ReadByte
         _strcmp
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _SaveCardDat
       _ClearEEAddRange
         _DATAEE_WriteByte
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
               _fputc
                 _putch
                   _EUSART2_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _EUSART2_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
                 _toupper
                   _islower
       _DATAEE_WriteByte
       _EUSART2_Read
       _EUSART2_is_rx_ready
       _ReadRX232
         _EUSART2_Read
         _EUSART2_Write
         _EUSART2_is_rx_ready
         _memmove
           _strlen (ARG)
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
               _fputc
                 _putch
                   _EUSART2_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _EUSART2_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
                 _toupper
                   _islower
         _strcat
           _strcpy
             _strlen (ARG)
           _strlen
         _strlen
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
       _strcpy
         _strlen (ARG)
       _strlen
     _TogDebug
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _strcmp
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART2_Write
             _fputs
               _fputc
                 _putch
                   _EUSART2_Write
             _strlen
         _fputc
           _putch
             _EUSART2_Write
         _isdigit
         _stoa
           _fputc
             _putch
               _EUSART2_Write
           _strlen
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _EUSART2_Write
             _fputs
               _fputc
                 _putch
                   _EUSART2_Write
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART2_Write
             _fputs
               _fputc
                 _putch
                   _EUSART2_Write
             _strlen
           _toupper
             _islower
   _strcpy
     _strlen (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _EUSART2_Receive_ISR *
     Absolute function(Fake) *
     _EUSART2_DefaultErrorHandler *
       _EUSART2_RxDataHandler
     _EUSART2_DefaultFramingErrorHandler *
     _EUSART2_DefaultOverrunErrorHandler *
     _EUSART2_RxDataHandler *
   _EUSART2_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      64      16       39.1%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      A4      14       64.1%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      F7      12       96.5%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      FD      10       98.8%
BITBANK1           100      0       0       7        0.0%
BANK1              100     47      FE       8       99.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6D      A0       5      100.0%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     4F4       6        0.0%
DATA                 0      0     4F4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Mar 26 13:20:41 2021

                      _eusart1TxBufferRemaining 00FE                          ?_EUSART2_RxDataHandler 0001  
                                   __CFG_CP$OFF 000000                                              l81 427C  
                                  generateCRC@i 000E                                    generateCRC@j 0010  
                           ___wmul@multiplicand 0007                                     __CFG_LVP$ON 000000  
                                           l131 4D2A                                             l300 437A  
                                           l125 4D0E                                             l222 4D5A  
                                           l303 4D8A                                             l128 4D72  
                                           l216 4932                                             l218 4940  
                                           l306 4D42                                             l219 494C  
                                           l324 4586                                             l148 4E90  
                                           l325 459E                                             l309 4DD0  
                                           l334 4E66                                             l510 4E48  
                                           l319 46E0                                             l328 45CE  
                                           l513 4E5C                                             l601 3714  
                                           l450 42FC                                             l507 4E52  
                                           l363 4E20                                             l516 4E34  
                                           l372 4E02                                             l453 4DBA  
                                           l702 4876                                             l366 4E16  
                                           l519 4E3E                                             l375 4E0C  
                                           l456 4DA2                                             l801 2484  
                                           l369 4E2A                                             l474 45E4  
                                           l475 45FC                                             l459 4DF8  
                                           l811 3AB4                                             l723 2248  
                                           l812 3ABC                                             l708 48C0  
                                           l740 34DA                                             l469 4738  
                                           l733 33BE                                             l478 462C  
                                           l806 3A1E                                             l719 3B8E  
                                           l736 33E4                                             l728 2256  
                                           l825 43E8                                             l809 3A44  
                                           l690 4E7A                                             l683 4450  
                                           l852 3EA4                                             l844 19D4  
                                           l693 4E70                                             l686 4E76  
                                           l934 2876                                             l695 4E72  
                                           l871 321A                                             l688 4E78  
                                           l792 0DCA                                             l784 0CF2  
                                           l952 16EC                                             l849 4A16  
                                           l697 4E74                                             l963 35FE  
                                           l975 4688                                             l969 4B4A  
                                           l994 2A46                                             l986 2926  
                                           l998 2BE2                                    __CFG_CPD$OFF 000000  
                  InitialiseString@readDataEven 00C6          __end_of_EUSART2_SetFramingErrorHandler 4E22  
       __size_of_EUSART2_SetFramingErrorHandler 000A                  _EUSART2_SetFramingErrorHandler 4E18  
                                           _abs 4A98                                             _pad 3D24  
                       __size_of_PMD_Initialize 001C                                             tosl 000FFD  
                                           wreg 000FE8                                    __CFG_ZCD$OFF 000000  
                                          l1101 4C20                                            ?_abs 0017  
                                          l1204 3D68                                            l1301 1F28  
                                          l2022 4ACE                                            l1207 3DAA  
                                          l1215 1A76                                            l1303 1F8A  
                                          l2104 415A                                            l2112 4990  
                                          l2025 4AD6                                            l1209 3DE4  
                                          l1217 1A7E                                            l1242 2C64  
                                          l1235 1CB4                                            l1244 2C6C  
                                          l1332 1354                                            l2140 4512  
                                          l2053 2F0E                                            l1253 2D2C  
                                          l1317 0EC2                                            l1254 2D74  
                                          l1158 4E94                                            l1086 47DA  
                                          l2134 4022                                            l2126 4CC6  
                                          l1263 24BE                                            l2151 4568  
                                          l1343 44AC                                            l2119 4CA0  
                                          l2056 2F16                                            l1280 1CF6  
                                          l1344 44B4                                            l2065 4BF2  
                                          l2073 478A                                            l1273 2686  
                                          l1265 24C6                                            l1098 4C00  
                                          l2146 482A                                            l1258 2D7C  
                                          l2162 4B82                                            l1347 4CEC  
                                          l2059 4B12                                            l2156 4570  
                                          l2092 39E0                                            l1461 309E  
                                          l1278 1CEE                                            l2079 4BBA  
                                          l1287 1D8C                                            l1474 337E  
                                          l1802 3C5E                                            l1792 3904  
                                          l1785 38E4                                            l1795 3C3E  
                                          l7011 4468                                            l7003 44B6  
                                          l7101 4628                                            l7013 448E  
                                          l7021 491C                                            l7005 44C6  
                                          ?_pad 0017                                            l7007 4452  
                                          l7103 4C7A                                            l7111 3F6A  
                                          l7031 492C                                            l7023 4920  
                                          l7015 490A                                            l7201 4BF6  
                                          l6401 4E60                                            l7009 445A  
                                          l7105 4C84                                            l8001 16FC  
                                          l7041 4D52                                            l7113 3F72  
                                          l7033 4930                                            l7025 4924  
                                          l7017 4912                                            l7121 4CA2  
                                          l7203 4BFA                                            l6411 4112  
                                          l6403 40C6                                            l8011 17BA  
                                          l8003 1710                                            l7043 4D54  
                                          l7035 4D44                                            l7115 3FB4  
                                          l7027 4926                                            l7019 4918  
                                          l7051 4D2C                                            l7131 395E  
                                          l7205 4BFC                                            l7213 39E2  
                                          l6501 2F4E                                            l6413 4148  
                                          l6405 40D8                                            l6421 47EC  
                                          l8021 189C                                            l8013 17C0  
                                          l8005 174C                                            l7045 4D56  
                                          l7037 4D4A                                            l7117 3FE6  
                                          l7109 3F66                                            l7301 2866  
                                          l7029 4928                                            l7061 46BC  
                                          l7141 39C4                                            l7133 397E  
                                          l7125 3906                                            l7207 4BFE  
                                          l7231 3A4A                                            l7215 39E6  
                                          l6511 2FAA                                            l6503 2F5C  
                                          l6407 40EA                                            l6431 496C  
                                          l6423 481E                                            l8031 19A2  
                                          l8023 1940                                            l8015 1800  
                                          l8007 1756                                            l7151 4E0E  
                                          l7047 4D58                                            l7039 4D4E  
                                          l7311 4670                                            l7303 462E  
                                          l7071 46DA                                            l7063 46BE  
                                          l7055 468A                                            l7143 39C8  
                                          l7127 392C                                            l7135 399A  
                                          l8111 2BB0                                            l7209 4C0E  
                                          l7081 4DE6                                            l7241 3AA8  
                                          l7233 3A5C                                            l7225 3A2C  
                                          l7217 3A02                                            l6521 3014  
                                          l6513 2FB2                                            l6505 2F7C  
                                          l6409 40F4                                            l6433 4970  
                                          l6417 47DC                                            l6441 3D32  
                                          l6601 3BCA                                            l8025 194E  
                                          l8033 19A8                                            l8017 1828  
                                          l8009 1762                                            l7401 4E92  
                                          l7161 4E40                                            l7153 4E22  
                                          l7145 4E04                                            l7321 4254  
                                          l7313 41F0                                            l7305 464C  
                                          l7073 46DE                                            l7065 46CE  
                                          l7057 468A                                            l7137 39AC  
                                          l7129 394E                                            l8113 2BD6  
                                          l8121 2BE0                                            l8105 2B78  
                                          l8043 483C                                            l7091 45FE  
                                          l7251 43A0                                            l7227 3A32  
                                          l7219 3A16                                            l7235 3A60  
                                          l6611 473A                                            l6531 305E  
                                          l6523 3034                                            l6515 2FC6  
                                          l6507 2F80                                            l6427 494E  
                                          l6419 47E8                                            l6451 3D88  
                                          l6443 3D46                                            l6603 3BD8  
                                          l6435 4B4C                                            l7411 4D8C  
                                          l7403 4D74                                            l8027 1962  
                                          l8035 19C6                                            l8019 188A  
                                          l7163 4E54                                            l7155 4E36  
                                          l7147 4DFA                                            l7331 4262  
                                          l7323 4256                                            l7315 4218  
                                          l7307 4658                                            l7067 46D2  
                                          l7059 469C                                            l7139 39C0  
                                          l7171 350C                                            l8107 2B9E  
                                          l8051 2A48                                            l8045 484C  
                                          l8037 482C                                            l7093 4610  
                                          l7085 45D2                                            l7077 4DA4  
                                          l7253 43B2                                            l7245 437C  
                                          l7237 3A7E                                            l7229 3A3E  
                                          l6613 473E                                            l6533 307E  
                                          l6525 3036                                            l6517 2FD4  
                                          l6509 2F8C                                            l6541 322E  
                                          l6461 4A98                                            l6429 495A  
                                          l6453 3D8C                                            l6445 3D54  
                                          l6605 3C06                                            l7501 4878  
                                          l7421 4714                                            l8029 198E  
                                          l7157 4E2C                                            l7341 427E  
                                          l7149 4E18                                            l7333 4264  
                                          l7325 4258                                            l7317 4228  
                                          l7261 26A4                                            l7309 466C  
                                          l7069 46D6                                            l7181 358A  
                                          l7173 3518                                            l7165 34DC  
                                          l8109 2BB0                                            l8053 2A48  
                                          l8141 360A                                            l8133 3600  
                                          l8047 4850                                            l7095 4612  
                                          l7087 45D2                                            l7255 43C6  
                                          l7247 4380                                            l7239 3A98  
                                          l7511 3DF0                                            l6615 4752  
                                          l6527 3048                                            l6519 2FE6  
                                          l6551 329E                                            l6543 324E  
                                          l6463 4AB2                                            l6391 45B2  
                                          l6383 4574                                            l6455 3DB8  
                                          l6447 3D60                                            l6439 3D24  
                                          l6631 1A4E                                            l6623 19D6  
                                          l6711 2CD0                                            l6703 2C8E  
                                          l6607 3C26                                            l7503 488C  
                                          l7431 4732                                            l7423 4716  
                                          l7415 46E2                                            l7407 4DBC  
                                          l7159 4E4A                                            l7351 42A6  
                                          l7343 4282                                            l7335 4E8E  
                                          l7327 425E                                            l7319 4252  
                                          l7271 26EE                                            l7263 26B2  
                                          l7191 35BE                                            l7183 359C  
                                          l7175 352A                                            l7167 34E4  
                                          l8055 2A6E                                            l8063 2A78  
                                          l8151 361A                                            l8143 360C  
                                          l8135 3604                                            l8049 486C  
                                          l7097 4622                                            l7089 45F4  
                                          l7257 43CA                                            l7249 4394  
                                          l7521 3E2E                                            l7513 3E00  
                                          l6617 4780                                            l8321 2E40  
                                          l6529 304E                                            l6561 3316  
                                          l6553 32A6                                            l6545 3252  
                                          l6537 321C                                            l6393 45B4  
                                          l6385 4574                                            l6457 3DCC  
                                          l6449 3D74                                            l6641 1AA6  
                                          l6633 1A50                                            l6625 19F6  
                                          l6721 2D3E                                            l6713 2D06  
                                          l6705 2CA2                                            l6609 3C38  
                                          l6465 4B84                                            l6473 4514  
                                          l6801 1E32                                            l7505 489C  
                                          l7433 4736                                            l7425 4726  
                                          l7417 46E2                                            l7361 42E0  
                                          l7353 42AA                                            l7345 428E  
                                          l7329 4260                                            l7337 4D10  
                                          l7281 272C                                            l7273 26F2  
                                          l7265 26CA                                            l7441 138A  
                                          l7193 35DA                                            l7185 35A0  
                                          l7177 353E                                            l7169 34F8  
                                          l8081 2B06                                            l8065 2A9E  
                                          l8073 2AA8                                            l8057 2A72  
                                          l8161 363A                                            l8153 361E  
                                          l8145 360E                                            l8137 3606  
                                          l7099 4626                                            l7531 3E84  
                                          l7523 3E32                                            l7515 3E04  
                                          l6483 4BBC                                            l6619 4784  
                                          l6563 3328                                            l6555 32BA  
                                          l6547 3260                                            l6539 3220  
                                          l6395 45C4                                            l6387 4596  
                                          l6651 1B46                                            l6643 1AAC  
                                          l6635 1A6A                                            l6627 1A1E  
                                          l6723 2D52                                            l6715 2D0A  
                                          l6707 2CA6                                            l6731 2498  
                                          l6811 1EC8                                            l6803 1E42  
                                          l7507 48A0                                            l7427 472A  
                                          l7419 46F4                                            l7371 42F4  
                                          l7363 42E4                                            l7355 42AE  
                                          l7347 429E                                            l7339 4D5C  
                                          l7291 27BE                                            l7283 273C  
                                          l7275 2700                                            l7267 26DA  
                                          l7259 2688                                            l7451 140C  
                                          l7443 13BA                                            l7195 35E8  
                                          l7179 3562                                            l7611 4B3E  
                                          l7603 4B14                                            l8091 2B36  
                                          l8075 2ACE                                            l8315 369E  
                                          l8163 3642                                            l8171 3688  
                                          l8155 3622                                            l8147 3610  
                                          l8139 3608                                            l7533 3E90  
                                          l7525 3E4A                                            l7517 3E18  
                                          l7509 3DE6                                            l6493 2F18  
                                          l6557 32C8                                            l6565 332E  
                                          l6549 3280                                            l6397 45C8  
                                          l6389 45A0                                            l6661 1BEE  
                                          l6653 1B4C                                            l6645 1AB4  
                                          l6637 1A86                                            l6629 1A3E  
                                          l6725 2D56                                            l6717 2D0E  
                                          l6709 2CC4                                            l6581 385C  
                                          l6573 3816                                            l6741 2506  
                                          l6733 24B2                                            l6469 4AD8  
                                          l6477 454A                                            l6821 1F3C  
                                          l6813 1EE6                                            l6805 1E48  
                                          l6901 0E4E                                            l8317 099A  
                                          l7541 3AF4                                            l7429 472E  
                                          l7701 30EE                                            l7373 42F8  
                                          l7365 42E8                                            l7357 42B2  
                                          l7349 42A2                                            l7381 431E  
                                          l7293 27F0                                            l7285 2740  
                                          l7277 2704                                            l7269 26EA  
                                          l7461 1488                                            l7453 1422  
                                          l7445 13C4                                            l7437 135A  
                                          l7189 35AC                                            l7197 35F4  
                                          l7621 28B2                                            l7613 2878  
                                          l7605 4B26                                            l8093 2B48  
                                          l8077 2AE0                                            l8181 36EA  
                                          l8165 366A                                            l8173 36B4  
                                          l8157 3622                                            l8149 3616  
                                          l7527 3E62                                            l7519 3E1E  
                                          l6487 4CC8                                            l6831 2D92  
                                          l6495 2F1C                                            l6567 333E  
                                          l6559 32F6                                            l6399 45CA  
                                          l6671 1C50                                            l6663 1C08  
                                          l6655 1B52                                            l6647 1ABE  
                                          l6639 1A98                                            l6591 38CC  
                                          l6583 386A                                            l6575 3822  
                                          l6751 25FE                                            l6743 257C  
                                          l6735 24EE                                            l6727 2486  
                                          l6479 455C                                            l6823 1F4C  
                                          l6815 1F00                                            l6807 1E4E  
                                          l6911 0ED2                                            l8319 0E82  
                                          l7551 3B5C                                            l7543 3AF8  
                                          l7535 3ABE                                            l7711 3152  
                                          l7703 3106                                            l7367 42EC  
                                          l7359 42DA                                            l7391 4334  
                                          l7383 4324                                            l7375 42FE  
                                          l7295 2816                                            l7287 2766  
                                          l7279 271C                                            l7471 14EE  
                                          l7455 1438                                            l7447 13E8  
                                          l7439 1366                                            l7631 2914  
                                          l7623 28D2                                            l7615 2878  
                                          l7607 4B2A                                            l8095 2B48  
                                          l8079 2AE0                                            l8175 36BC  
                                          l8167 3678                                            l7529 3E74  
                                          l6489 4CE4                                            l6841 2DF4  
                                          l6833 2D96                                            l6497 2F2A  
                                          l6569 335E                                            l6673 1C56  
                                          l6681 1C8C                                            l6665 1C22  
                                          l6649 1AC4                                            l6657 1BB6  
                                          l6593 38DE                                            l6585 387C  
                                          l6577 3840                                            l6753 261C  
                                          l6745 2582                                            l6737 24F6  
                                          l6729 2496                                            l6825 1F62  
                                          l6817 1F1A                                            l6809 1EAC  
                                          l6921 0F6A                                            l6913 0EF8  
                                          l6905 0E5A                                            l7801 066A  
                                          l7553 3B6E                                            l7545 3B16  
                                          l7537 3AD4                                            l7561 3386  
                                          l7721 3178                                            l7705 3116  
                                          l7713 3158                                            l7369 42F0  
                                          l7393 4340                                            l7385 4328  
                                          l7377 4302                                            l7297 2844  
                                          l7289 2798                                            l7473 14FA  
                                          l7457 1446                                            l7449 13F6  
                                          l7641 2978                                            l7633 2926  
                                          l7625 28E6                                            l7617 2880  
                                          l7609 4B3A                                            l8097 2B6E  
                                          l8089 2B10                                            l8185 36EE  
                                          l8177 36C0                                            l6851 2E20  
                                          l6835 2D9A                                            l6499 2F4A  
                                          l6675 1C68                                            l6659 1BD0  
                                          l6667 1C30                                            l6691 2C10  
                                          l6587 38AA                                            l6579 3848  
                                          l6595 3B90                                            l6755 2636  
                                          l6747 2588                                            l6739 2500  
                                          l6819 1F36                                            l6771 1D0C  
                                          l6763 1CB6                                            l6931 0FFA  
                                          l6923 0F78                                            l6915 0F2E  
                                          l6907 0EB0                                            l7811 0790  
                                          l7803 06BC                                            l7547 3B26  
                                          l7539 3AF0                                            l7571 33CC  
                                          l7563 33A2                                            l7731 31F2  
                                          l7723 3180                                            l7715 316A  
                                          l7707 3138                                            l7395 434C  
                                          l7387 432C                                            l7379 430E  
                                          l7299 2848                                            l7491 15A2  
                                          l7475 1516                                            l7467 1490  
                                          l7459 1476                                            l7643 2986  
                                          l7651 29C6                                            l7635 293A  
                                          l7627 28FA                                            l7619 289E  
                                          l8187 36FC                                            l8179 36C8  
                                          l6861 2ECE                                            l6853 2E56  
                                          l6845 2DFA                                            l6837 2DB8  
                                          l6829 2D7E                                            l6677 1C74  
                                          l6669 1C42                                            l6693 2C18  
                                          l6685 2BE4                                            l6589 38CA  
                                          l6597 3BAE                                            l6757 2650  
                                          l6749 25EC                                            l6781 1D4C  
                                          l6773 1D14                                            l6765 1CC6  
                                          l6941 10C6                                            l6933 1020  
                                          l6917 0F3C                                            l6909 0ED0  
                                          l7821 08B6                                            l7813 07E2  
                                          l7557 3B84                                            l7549 3B48  
                                          l7573 33D2                                            l7565 33B6  
                                          l7581 3400                                            l7733 3204  
                                          l7717 316E                                            l7725 31A2  
                                          l7709 313E                                            l7901 43F8  
                                          l7397 4376                                            l7389 4330  
                                          l7493 15BE                                            l7485 1538  
                                          l7477 151E                                            l7469 14EA  
                                          l7661 2A3A                                            l7653 29EA  
                                          l7645 29A2                                            l7637 294E  
                                          l7629 2902                                            l6863 2EE0  
                                          l6847 2E10                                            l6839 2DF0  
                                          l6679 1C7C                                            l6695 2C2C  
                                          l6687 2BF6                                            l6599 3BB6  
                                          l6759 265E                                            l6791 1DC0  
                                          l6783 1D54                                            l6775 1D34  
                                          l6767 1CC8                                            l6951 118C  
                                          l6943 10FC                                            l6935 1068  
                                          l6927 0FC2                                            l6919 0F4A  
                                          l6871 0DCC                                            l7823 0908  
                                          l7807 0736                                            l7831 09D8  
                                          l7751 015C                                            l7743 012A  
                                          l7591 34A8                                            l7583 3436  
                                          l7575 33DE                                            l7559 3380  
                                          l7735 3212                                            l7727 31BA  
                                          l7719 3172                                            l7911 4434  
                                          l7399 478C                                            l7671 4CFE  
                                          l7663 4CEE                                            l7495 15CE  
                                          l7487 1592                                            l7479 1530  
                                          l7655 29FE                                            l7647 29A8  
                                          l7639 2964                                            l6865 2EF2  
                                          l6857 2E8E                                            l6849 2E18  
                                          l6697 2C34                                            l6689 2BFE  
                                          l6793 1DD2                                            l6785 1D70  
                                          l6777 1D3C                                            l6769 1CE2  
                                          l6961 1228                                            l6929 0FD4  
                                          l6881 0E22                                            l6873 0DF2  
                                          l7841 0A7A                                            l7833 09E8  
                                          l7817 085C                                            l7809 0742  
                                          l7761 01D0                                            l7753 0160  
                                          l7745 0138                                            l7921 22D2  
                                          l7913 2258                                            l7593 34D2  
                                          l7585 3450                                            l7577 33EA  
                                          l7729 31DE                                            l7673 4D02  
                                          l7665 4CF2                                            l7497 16C8  
                                          l7489 1596                                            l7649 29C0  
                                          l7657 2A16                                            l7683 49E6  
                                          l6699 2C42                                            l6787 1D80  
                                          l6779 1D46                                            l6971 12D4  
                                          l6963 1236                                            l6955 11C4  
                                          l6947 111C                                            l6939 10A0  
                                          l6883 0E24                                            l6875 0E00  
                                          l7851 0BC4                                            l7843 0ADC  
                                          l7835 09F4                                            l7819 0868  
                                          l7771 02FA                                            l7763 0222  
                                          l7755 0178                                            l7747 0148  
                                          l7931 230E                                            l7923 22E2  
                                          l7915 226E                                            l7587 3460  
                                          l7579 33FC                                            l7739 3218  
                                          l7691 30A4                                            l7907 4400  
                                          l7675 4D06                                            l7667 4CF6  
                                          l7499 16D6                                            l7659 2A28  
                                          l7685 49F6                                            l7677 49D6  
                                          l6797 1E0C                                            l6981 1310  
                                          l6973 12E2                                            l6965 1272  
                                          l6957 11EA                                            l6949 1142  
                                          l6893 0E42                                            l6885 0E36  
                                          l6877 0E12                                            l7861 0CBC  
                                          l7853 0BD6                                            l7845 0AEE  
                                          l7837 0A08                                            l7781 0420  
                                          l7773 034C                                            l7765 0298  
                                          l7757 0180                                            l7829 0982  
                                          l7749 014C                                            l7941 233A  
                                          l7933 2312                                            l7925 22EA  
                                          l7917 22C0                                            l7589 347C  
                                          l7693 30B8                                            l7909 4430  
                                          l7669 4CFA                                            l7687 49FA  
                                          l6799 1E1E                                            l6975 12F6  
                                          l6959 1210                                            l6879 0E16  
                                          l7871 0D04                                            l7863 0CCA  
                                          l7855 0C38                                            l7847 0B50  
                                          l7839 0A6A                                            l7791 0544  
                                          l7783 0470                                            l7767 02A2  
                                          l7759 018C                                            l7951 23A0  
                                          l7943 234A                                            l7935 2322  
                                          l7927 22FA                                            l7919 22CC  
                                          l7599 34D8                                            l7695 30CA  
                                          l6969 12AE                                            l6897 0E48  
                                          l6889 0E3C                                            l6985 131C  
                                          l7881 0D48                                            l7873 0D08  
                                          l7865 0CE0                                            l7857 0C48  
                                          l7849 0B62                                            l7793 0596  
                                          l7777 03C6                                            l7769 02AE  
                                          l7961 2432                                            l7953 23AC  
                                          l7945 234E                                            l7937 2326  
                                          l7929 22FE                                            l7697 30D6  
                                          l7689 30A0                                            l6987 1342  
                                          l6979 1302                                            l7883 0D78  
                                          l7875 0D18                                            l7867 0CE8  
                                          l7859 0CAA                                            l7891 0DBE  
                                          l7787 04EA                                            l7779 03D2  
                                          l7963 2444                                            l7955 23D6  
                                          l7947 235E                                            l7939 2336  
                                          l7971 1F8C                                            l7885 0D8A  
                                          l7877 0D1C                                            l7869 0CF2  
                                          l7797 0610                                            l7789 04F6  
                                          l7965 2454                                            l7949 236E  
                                          l7957 23DA                                            l7981 2064  
                                          l7973 1F8C                                            l7887 0D9A  
                                          l7879 0D20                                            l7799 061C  
                                          l7967 2460                                            l7959 2402  
                                          l7991 217C                                            l7983 20F0  
                                          l7975 1F9A                                            l7889 0DA6  
                                          l7969 2478                                            l7897 43EA  
                                          l7993 21B8                                            l7985 20FA  
                                          l7977 1FAE                                            l7899 43F8  
                                          l7995 21EE                                            l7987 2106  
                                          l7979 2052                                            l7997 16EE  
                                          l7989 2176                                            l7999 16EE  
                                          STR_1 FED6                                            STR_2 FCA0  
                                          STR_3 FD8D                                            STR_4 FF25  
                                          STR_5 F553                                            STR_6 FF6A  
                                          STR_7 FDA9                                            STR_8 F63D  
                                          STR_9 FD55                                            _LATA 000F83  
                                          _LATB 000F84                                            _LATC 000F85  
                                          _LATD 000F86                                            _LATE 000F87  
                                          u6000 4544                                            u6001 453E  
                                          u6010 4546                                            u6100 3014  
                                          u6020 455C                                            u6101 3010  
                                          u6021 4558                                            u6030 4BEC  
                                          u6110 305E                                            u6031 4BE6  
                                          u6111 305A                                            u6040 4BEE  
                                          u6120 322E                                            u6200 386A  
                                          u7000 44AC                                            u6121 322A  
                                          u6201 3866                                            u7001 44A8  
                                          u6050 2F2A                                            u6130 3260  
                                          u6210 38AA                                            u7010 4940  
                                          u6051 2F26                                            u6131 325C  
                                          u6211 38A6                                            u7011 493C  
                                          u7100 45E4                                            u6060 2F5C  
                                          u6140 329E                                            u6300 1A4E  
                                          u6220 3BAE                                            _PMD0 000EE1  
                                          u7101 45E0                                            u6061 2F58  
                                          u6141 329A                                            u6301 1A4A  
                                          u6221 3BAA                                            _PMD1 000EE2  
                                          u7110 45F4                                            u6150 32C8  
                                          u6310 1A6A                                            u6230 3BD8  
                                          u7030 4D40                                            _PMD2 000EE3  
                                          u7111 45F0                                            u6071 2F86  
                                          u6151 32C4                                            u6311 1A66  
                                          u6231 3BD4                                            u7031 4D3A  
                                          _PMD3 000EE4                                            u7120 4622  
                                          u6080 2FAA                                            u6160 32F6  
                                          u6400 1C50                                            u6320 1A98  
                                          u6240 3C06                                            u8000 0908  
                                          u7040 4D42                                            u7200 39AC  
                                          _PMD4 000EE5                                            u7121 461E  
                                          u6081 2FA6                                            u6161 32F2  
                                          u6401 1C4C                                            u6321 1A94  
                                          u6241 3C02                                            u8001 0904  
                                          u7025 494A                                            u7201 39A8  
                                          _PMD5 000EE6                                            u6250 4752  
                                          u6090 2FD4                                            u6170 333E  
                                          u6410 1C68                                            u6330 1AA6  
                                          u8010 09E8                                            u7130 3FB4  
                                          u7026 494C                                            u7050 469C  
                                          u7210 39E0                                            u6251 474E  
                                          u6091 2FD0                                            u6171 333A  
                                          u6411 1C64                                            u6331 1AA2  
                                          u8011 09E4                                            u7131 3FB0  
                                          u7051 4698                                            u7211 39DC  
                                          u7300 3A5C                                            u6260 4780  
                                          u6340 1BD0                                            u6500 2D3A  
                                          u8020 0A08                                            u8100 4450  
                                          u7140 3FD6                                            u7060 46CE  
                                          u7220 34F8                                            u7301 3A58  
                                          u6261 477C                                            u6341 1BCC  
                                          u6501 2D36                                            u6421 2BEE  
                                          u6181 381C                                            u8021 0A04  
                                          u8101 444C                                            u7061 46CA  
                                          u7221 34F4                                            u7070 4DB8  
                                          u7310 3A7E                                            u6350 1BEE  
                                          u6270 1A06                                            u6510 2D74  
                                          u6430 2C10                                            u6190 3840  
                                          u8030 0A7A                                            u8110 22C0  
                                          u7150 3FE6                                            u7230 350C  
                                          u7071 4DB2                                            u7311 3A7A  
                                          u6351 1BEA                                            u6271 1A00  
                                          u6511 2D70                                            u6431 2C0C  
                                          u6191 383C                                            u8031 0A76  
                                          u8111 22BC                                            u7151 3FE2  
                                          u7135 3FA4                                            u7231 3508  
                                          u7080 4DBA                                            u7320 3AA8  
                                          u5800 4596                                            u6360 1C08  
                                          u6280 1A08                                            u6440 2C42  
                                          u6520 2496                                            u6600 1CE2  
                                          u8040 0AEE                                            u8120 22E2  
                                          u8200 1962                                            u7160 4008  
                                          u7400 2816                                            u7240 352A  
                                          u7321 3AA4                                            u5801 4592  
                                          u6361 1C04                                            u6441 2C3E  
                                          u6521 2492                                            u6601 1CDE  
                                          u8041 0AEA                                            u8121 22DE  
                                          u8201 195E                                            u7137 3F9A  
                                          u7401 2812                                            u7241 3526  
                                          u7090 4DF6                                            u7330 4394  
                                          u5810 45C4                                            u6370 1C22  
                                          u6290 1A1E                                            u6450 2C60  
                                          u6530 24B2                                            u6610 1D0C  
                                          u8050 0B62                                            u8130 2402  
                                          u8210 19A2                                            u7410 2866  
                                          u7170 392C                                            u7250 3562  
                                          u7091 4DF0                                            u7331 4390  
                                          u5811 45C0                                            u6371 1C1E  
                                          u6291 1A1A                                            u6451 2C5C  
                                          u6531 24AE                                            u6611 1D08  
                                          u8051 0B5E                                            u8131 23FE  
                                          u8211 199E                                            u7147 3FCC  
                                          u7411 2862                                            u7171 3928  
                                          u7251 355E                                            u7340 43C6  
                                          u5820 40D8                                            u6380 1C30  
                                          u6460 2C8A                                            u6540 25FE  
                                          u5900 4B7E                                            u6700 1EC8  
                                          u6620 1D70                                            u8060 0BD6  
                                          u8220 19C6                                            u8140 1FAE  
                                          u7420 4688                                            u7180 394E  
                                          u7260 359C                                            u8300 2B9E  
                                          u7341 43C2                                            u5821 40D4  
                                          u6381 1C2C                                            u6461 2C86  
                                          u6541 25FA                                            u6701 1EC4  
                                          u6621 1D6C                                            u8061 0BD2  
                                          u8221 19C2                                            u8141 1FAA  
                                          u7501 1360                                            u7421 4684  
                                          u7181 394A                                            u7261 3598  
                                          u8301 2B9A                                            u8230 486C  
                                          u7350 43E8                                            u5830 40EA  
                                          u5910 3D32                                            u6390 1C42  
                                          u6470 2CC4                                            u6550 261C  
                                          u6710 1EE6                                            u6630 1DBA  
                                          u8070 0C48                                            u7430 4D88  
                                          u8150 2064                                            u7190 3996  
                                          u7270 35BE                                            u8231 4868  
                                          u7351 43E4                                            u5831 40E6  
                                          u5911 3D2E                                            u6391 1C3E  
                                          u6471 2CC0                                            u6551 2618  
                                          u6711 1EE2                                            u6631 1DB4  
                                          u8071 0C44                                            u7431 4D82  
                                          u8151 2060                                            u7167 3FFE  
                                          u7511 1390                                            u7191 3992  
                                          u7271 35BA                                            u8311 2BA8  
                                          u7280 4C0E                                            u7096 4DF8  
                                          u6800 2ECA                                            u5840 4112  
                                          u5920 3D54                                            u6480 2CF2  
                                          u6560 2636                                            u6720 1F00  
                                          u6640 1DBC                                            u8080 0CBC  
                                          u7600 3B5C                                            u7440 4D8A  
                                          u8160 21EE                                            u7360 26DA  
                                          u8240 2A6E                                            u8320 3636  
                                          u7281 4C0A                                            u5841 410E  
                                          u5921 3D50                                            u6561 2632  
                                          u6721 1EFC                                            u8081 0CB8  
                                          u7601 3B58                                            u8161 21EA  
                                          u7361 26D6                                            u7521 1480  
                                          u8241 2A6A                                            u8321 3632  
                                          u7290 3A2C                                            u6810 2EE0  
                                          u5850 4148                                            u5930 3DAA  
                                          u6490 2D2C                                            u6570 2650  
                                          u6730 1F1A                                            u6650 1DD2  
                                          u8090 0D48                                            u7610 3B80  
                                          u7450 4DCE                                            u8170 1710  
                                          u7370 272C                                            u7530 1516  
                                          u8250 2A9E                                            u8330 36EA  
                                          u7291 3A28                                            u6811 2EDC  
                                          u5851 4144                                            u5931 3DA6  
                                          u6491 2D28                                            u6571 264C  
                                          u6731 1F16                                            u6651 1DCE  
                                          u8091 0D44                                            u7611 3B7C  
                                          u7451 4DC8                                            u8171 170C  
                                          u7371 2728                                            u7531 1512  
                                          u8251 2A9A                                            u8331 36E6  
                                          u6820 2EF2                                            u5860 480E  
                                          u5940 3DB8                                            u6580 265E  
                                          u6740 1F28                                            u6660 1E06  
                                          u6900 0FD4                                            u7460 4DA0  
                                          u7620 33CC                                            u8180 1828  
                                          u7380 2766                                            u7700 28FA  
                                          u8260 2ACE                                            u6821 2EEE  
                                          u5941 3DB4                                            u6581 265A  
                                          u6741 1F24                                            u6661 1E00  
                                          u6901 0FD0                                            u7461 4D9A  
                                          u7621 33C8                                            u8181 1824  
                                          u7381 2762                                            u7541 1528  
                                          u7701 28F6                                            u8261 2ACA  
                                          u5950 4AB2                                            u5790 4586  
                                          u5870 481E                                            u6750 1F36  
                                          u6670 1E08                                            u6590 1CC6  
                                          u6910 0FFA                                            u6830 0DF2  
                                          u7470 4DA2                                            u7630 33FC  
                                          u8190 189C                                            u7390 27BE  
                                          u7550 15BE                                            u7710 2914  
                                          u5951 4AAE                                            u5791 4582  
                                          u5871 481A                                            u6487 2CE8  
                                          u6751 1F32                                            u6591 1CC2  
                                          u6911 0FF6                                            u6831 0DEE  
                                          u7631 33F8                                            u8191 1898  
                                          u7391 27BA                                            u7551 15BA  
                                          u7711 2910                                            u8271 2AD8  
                                          u6760 2DB8                                            u5880 4990  
                                          u5960 4BB4                                            u6680 1E1E  
                                          u6920 1020                                            u6840 0EC2  
                                          u7480 46F4                                            u7640 3436  
                                          u7800 3116                                            u7456 4DD0  
                                          u7560 15CE                                            u7720 2926  
                                          u8280 2B36                                            u6761 2DB4  
                                          u5881 498C                                            u5961 4BAE  
                                          u6681 1E1A                                            u6921 101C  
                                          u6841 0EBE                                            u7481 46F0  
                                          u7641 3432                                            u7801 3112  
                                          u7561 15CA                                            u7721 2922  
                                          u8281 2B32                                            u6770 2DF0  
                                          u5970 4BB6                                            u5890 4B7C  
                                          u6690 1E86                                            u6930 10C6  
                                          u6850 0ED0                                            u7570 48C0  
                                          u7490 4726                                            u7650 3460  
                                          u7810 3152                                            u7730 29EA  
                                          u6771 2DEC                                            u5867 4804  
                                          u5891 4B76                                            u6931 10C2  
                                          u6851 0ECC                                            u7571 48BC  
                                          u7491 4722                                            u7651 345C  
                                          u7811 314E                                            u7731 29E6  
                                          u8347 29B4                                            u8291 2B40  
                                          u6780 2E0C                                            u5980 4B0C  
                                          u6940 1142                                            u6860 0EF8  
                                          u7900 034C                                            u7580 3B16  
                                          u7660 34A8                                            u7820 316A  
                                          u7740 2A28                                            u6781 2E08  
                                          u5981 4B06                                            u6941 113E  
                                          u6861 0EF4                                            u7901 0348  
                                          u7581 3B12                                            u7661 34A4  
                                          u7821 3166                                            u8357 26BC  
                                          u7741 2A24                                            u6790 2EC8  
                                          u5990 4B0E                                            u6950 11EA  
                                          u6870 0F3C                                            u7910 0420  
                                          u7590 3B26                                            u7670 34D2  
                                          u7830 3190                                            u7750 2A3A  
                                          u6791 2EC2                                            u6695 1E74  
                                          u6951 11E6                                            u6871 0F38  
                                          u7911 041C                                            u7591 3B22  
                                          u7671 34CE                                            u7831 318A  
                                          u8367 270E                                            u7751 2A36  
                                          u7760 4A16                                            u6960 1210  
                                          u6880 0FBA                                            u7920 0470  
                                          u7840 31BA                                            u7680 4B26  
                                          u7761 4A12                                            u6961 120C  
                                          u6881 0FB4                                            u7921 046C  
                                          u7841 31B6                                            u7681 4B22  
                                          u6970 12D4                                            u6890 0FBC  
                                          u7930 0544                                            u7850 31CA  
                                          u7770 30B8                                            u7690 28D2  
                                          u6971 12D0                                            u7931 0540  
                                          u7851 31C4                                            u7771 30B4  
                                          u7691 28CE                                            u7940 0596  
                                          u7860 31F2                                            u7836 3192  
                                          u7780 30CA                                            u6980 4500  
                                          u7941 0592                                            u7861 31EE  
                                          u7781 30C6                                            u7950 066A  
                                          u7870 01D0                                            u7790 30EA  
                                          u6990 4512                                            u7951 0666  
                                          u7871 01CC                                            u7791 30E6  
                                          u6991 450E                                            u7960 06BC  
                                          u7880 0222                                            u7856 31CC  
                                          u7961 06B8                                            u7881 021E  
                                          u7970 0790                                            u7890 02FA  
                                          u7971 078C                                            u7891 02F6  
                                          u6987 44F6                                            u7980 07E2  
                                          u7981 07DE                                            u7990 08B6  
                                          u7991 08B2                             ValidateCmd@ConfName 0193  
                                          _WPUA 000F10                                            _WPUB 000F18  
                                          _WPUC 000F20                                            _WPUD 000F25  
                                          _WPUE 000F2D                           ??_EUSART2_Receive_ISR 0001  
                                 _EUSART1_Write 45D0                                   __CFG_FCMEN$ON 000000  
                                 _EUSART2_Write 4572                              ClearModbusRespon@i 0005  
                                generateCRC@crc 0012                                            abs@a 0017  
                                          _dbuf 02DD                                            _atoi 2D7E  
                                          _main 3600                                            _dtoa 19D6  
                                 ?_EUSART1_Read 0001                                            _prec 00D1  
                                 ?_EUSART2_Read 0001                                            _nout 00CD  
                                          pad@i 001E                                            pad@p 001B  
                                          fsr0h 000FEA                                            fsr1h 000FE2  
                                          indf0 000FEF                                            fsr2h 000FDA  
                                          fsr0l 000FE9                                            indf1 000FE7  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 0020                                            fsr2l 000FD9  
                                          _stoa 2BE4                                            btemp 005B  
                                          _utoa 2486                                            _xtoa 1CB6  
                                          prodh 000FF4                                            prodl 000FF3  
                                          start 0126                    __end_of_EUSART2_Transmit_ISR 490A  
                                 __CFG_CSWEN$ON 000000                             UART1_Write_string@i 000B  
                fp__EUSART1_DefaultErrorHandler 0000                                    ___param_bank 000000  
                                 __CFG_SCANE$ON 000000                                           ??_abs 0019  
                                         ??_pad 001D                       __size_of_DATAEE_WriteByte 0044  
                __size_of_OSCILLATOR_Initialize 0018                   __end_of_OSCILLATOR_Initialize 4D74  
                         _eusart1RxStatusBuffer 0300                                 __end_of___aodiv 30A0  
                                         _ADACQ 000F5C                                           _ADCAP 000F5D  
                                         _ADACT 000F56                                           ?_atoi 000C  
                                         ?_main 0001                                           ?_dtoa 0022  
                                         _ADCLK 000F57                                 __end_of___aomod 3380  
                                         _ADCNT 000F67                                           _ADPCH 000F5F  
                                         _ADREF 000F58                                           _ADPRE 000F5E  
                                         STR_10 FEAC                                           STR_11 FB75  
                                         STR_12 F673                                           STR_20 F5D0  
                                         STR_21 FA4D                                           STR_13 FA4D  
                                         STR_30 FB72                                           STR_22 FA73  
                                         STR_14 FA73                                           STR_23 FAE3  
                                         STR_31 FB51                                           STR_15 FAE3  
                                         STR_24 FB08                                           STR_40 FD37  
                                         STR_32 FDC4                                           STR_16 FB08  
                                         STR_41 FE3F                                           STR_17 FCDD  
                                         STR_25 FA27                                           STR_33 F77E  
                                 __CFG_WDTE$OFF 000000                                           STR_50 FD71  
                                         STR_34 FD37                                           STR_18 FD19  
                                         STR_42 F81A                                           STR_26 F554  
                                         STR_19 FB75                                           STR_43 FD37  
                                         STR_35 FE97                                           STR_27 FB99  
                                         STR_51 F7B2                                           STR_60 FB99  
                                         STR_52 FD37                                           STR_44 FDF6  
                                         STR_28 FC60                                           STR_36 F882  
                                         STR_61 FC60                                           STR_37 FD37  
                                         STR_53 FF99                                           STR_29 FC80  
                                         STR_45 F84E                                           STR_62 FC80  
                                         STR_46 FD37                                           STR_38 FEC1  
                                         STR_70 FCFB                                           STR_54 F6DF  
                                         STR_63 FB75                                           STR_55 FF12  
                                         STR_71 FE27                                           STR_47 FDDD  
                                         STR_39 F961                                           STR_72 F550  
                                         STR_64 F673                                           STR_56 FB75  
                                         STR_80 FFEA                                           STR_48 F7E6  
                                         _ADRPT 000F66                                           STR_57 F673  
                                         STR_65 FA4D                                           STR_49 FD37  
                                         STR_81 FFF4                                           STR_73 FE0F  
                                         STR_66 FA73                                           STR_82 FFF4  
                                         STR_74 FF7A                                           STR_90 FE56  
                                         STR_58 FA01                                ?_ClearModbusData 0001  
                                         STR_67 FAE3                                           STR_83 FFD6  
                                         STR_75 FABE                                           STR_91 F90D  
                                         STR_59 F6A9                                           STR_68 FB08  
                                         STR_84 FFEA                                           STR_92 FFC1  
                                         STR_76 FC40                                           STR_69 FCDD  
                                         STR_85 FFF4                                           STR_77 FFD6  
                                         STR_93 FFCD                                           STR_78 FFD6  
                                         STR_94 FBBC                                           STR_86 F9B3  
                                         STR_79 FFEA                                           STR_87 FEFF  
                                         STR_95 FB2D                                           STR_88 FEEB  
                                         STR_96 F937                                           STR_89 FE82  
                                         STR_97 F4C6                                           STR_98 F8E2  
                                         STR_99 FCBF                                           ?_stoa 0010  
                                         ?_utoa 0022                                 __end_of___lodiv 3906  
                                         ?_xtoa 0022                                 __end_of___lomod 3C60  
                                __CFG_DEBUG$OFF 000000                                           i2l154 0064  
                                         i2l163 0112                                           i2l340 4908  
                                         i2l156 009E                                           i2l501 4E86  
                                         i2l157 0112                                           i2l158 00D8  
                                         i2l351 4C4C                                           i2l504 4E8C  
                                         i2l360 4E80                                           i2l337 4904  
                                         i2l354 4E96                                           i2l347 3D22  
                                         i2l357 4E6E                                           i2l481 49D0  
                                         i2l491 3F64                                           i2l484 49D4  
                                         i2l495 4C78                                           i2l498 4E98  
                   __size_of_EUSART1_is_tx_done 0014                                           _OSCEN 000EDC  
                                  vfpfcnvrt@fmt 004B                                    vfpfcnvrt@llu 006F  
                                         _TRISA 000F88                                           _TRISB 000F89  
                                         _TRISC 000F8A                                           _TRISD 000F8B  
                                         _TRISE 000F8C                        CardConfigIni@readDataOdd 0018  
                                         _Debug 00DF                                   __CFG_WRT0$OFF 000000  
                                 __CFG_WRT1$OFF 000000                                   __CFG_WRT2$OFF 000000  
                                 __CFG_WRT3$OFF 000000                            _EUSART1_Transmit_ISR 4992  
                                __CFG_EBTR0$OFF 000000                                  __CFG_EBTR1$OFF 000000  
                                __CFG_EBTR2$OFF 000000                                  __CFG_EBTR3$OFF 000000  
                                 __CFG_WRTB$OFF 000000                                   __CFG_WRTC$OFF 000000  
                                 __CFG_WRTD$OFF 000000                                 _DATAEE_ReadByte 4D44  
                                __CFG_EBTRB$OFF 000000                                           _flags 0057  
                        __size_of_CardConfigIni 01F0                                           _fputc 40C6  
                               __end_of_isalpha 4B14                                           _fputs 494E  
                               __end_of_isdigit 4BF4                        SaveCardDat@dataeeAddrWrk 009F  
                               __end_of_memmove 39E2                              __CFG_MCLRE$EXTMCLR 000000  
                                         atoi@n 0019                                           pad@fp 0017  
                                         atoi@s 000C                                           _width 00CF  
                                         _putch 4E5E                        __size_of_ClearEEAddRange 005C  
                                         dtoa@d 0024                                           dtoa@i 0044  
                                         dtoa@n 003C                                           dtoa@p 0036  
                                         dtoa@s 003A                                           dtoa@w 0038  
                               __end_of_islower 4B84                                 __end_of_isspace 478C  
                                ?_EUSART1_Write 0001                                  ?_EUSART2_Write 0001  
                               __end_of_isupper 4BBC                                           pclath 000FFA  
                                         tablat 000FF5                                     _ClearRxBuff 4878  
                                ??_EUSART1_Read 0005                                           plusw1 000FE3  
                                         plusw2 000FDB                                  ??_EUSART2_Read 0005  
                                         stoa@i 001C                                           stoa@l 0024  
                                         stoa@p 0022                                           stoa@s 0012  
                                         stoa@w 001E                                           ttemp5 005C  
                                         ttemp6 005F                                           ttemp7 0063  
                                         utoa@d 0024                                           utoa@i 0040  
                                         utoa@n 0038                                           utoa@p 0034  
                                         utoa@w 0036                                           status 000FD8  
                                    _ModDataCnt 00DB                                   ??_ModbusError 0016  
                                         wtemp8 005C                                           xtoa@c 0047  
                                         xtoa@d 0024                                           xtoa@i 0045  
                                         xtoa@n 003D                                           xtoa@p 0039  
                                         xtoa@w 003B                                           xtoa@x 002C  
                               __end_of_toupper 4572                                ___lodiv@dividend 0005  
         fp__EUSART1_DefaultFramingErrorHandler 0000      __end_of_EUSART1_DefaultFramingErrorHandler 4E9A  
   __size_of_EUSART1_DefaultFramingErrorHandler 0002            ??_EUSART1_DefaultFramingErrorHandler 0001  
           ?_EUSART1_DefaultFramingErrorHandler 0001              _EUSART1_DefaultFramingErrorHandler 4E98  
                   __size_of_EUSART2_is_tx_done 0016                                   ??_SaveCardDat 009B  
                                checkCRC@crcLow 0096           __end_of_EUSART2_SetTxInterruptHandler 4E04  
        __size_of_EUSART2_SetTxInterruptHandler 000A                   _EUSART2_SetTxInterruptHandler 4DFA  
                                  _toupper$2509 0011                                 __initialization 371C  
                                  __end_of_atoi 2F18                      __end_of_EUSART1_Initialize 42FE  
                                  __end_of_main 371C                                    __end_of_dtoa 1CB6  
                     __size_of_InitialiseString 0398                                    __end_of_stoa 2D7E  
                                  __end_of_utoa 2688                                    __end_of_xtoa 1F8C  
                   ?_INTERRUPT_InterruptManager 0001                                __end_of_ModbusRx 321C  
                                        ??_atoi 000E                                          ??_main 01D7  
                                        ??_dtoa 002C                                          ??_stoa 0014  
                                    _ModbusFC10 2258                                      _ModbusFC03 012A  
                                        ??_utoa 002C                                          ??_xtoa 002D  
                                 __activetblptr 000003                                __end_of_TogDebug 4B4C  
                           SaveCardDat@NumBytes 0099             __end_of_EUSART2_DefaultErrorHandler 4E82  
                   _EUSART2_DefaultErrorHandler 4E7C                                      _ModbusData 0100  
                         ?_EUSART1_Transmit_ISR 0001                                ___lodiv@quotient 0015  
                          SaveCardDat@MBAddress 0095                                          _ADACCH 000F71  
                                        _ADACCL 000F70                      __end_of_EUSART2_Initialize 437C  
                                        _ADCON0 000F60                                          _ADCON1 000F59  
                                        _ADCON2 000F5A                                          _ADCON3 000F5B  
                      _eusart2TxBufferRemaining 00FF                                          _ADERRH 000F6F  
                                        _ADERRL 000F6E                                          ?_fputc 0007  
                                        _ADLTHH 000F6B                                          STR_100 F98B  
                                        _ADLTHL 000F6A                                          STR_101 F74A  
                                        STR_110 FC20                                          STR_102 F607  
                                        ?_fputs 0010                                          STR_111 FF25  
                                        STR_103 F50F                                          STR_112 FF99  
                                        STR_120 FF8A                                          STR_104 F715  
                                        STR_113 F550                                          STR_121 FF38  
                                        STR_105 F47B                                          STR_130 FFDD  
                                        STR_122 FFA8                                          STR_114 FF5A  
                                        STR_106 FE6C                                          _ADRESH 000F64  
                                        STR_123 F553                                          STR_131 FFEF  
                                        STR_115 FF49                                          STR_107 F8B6  
                                        STR_132 FFEF                                          STR_124 FFB5  
                                        STR_108 FA99                                          STR_116 F596  
                                        STR_133 FFF8                                          STR_125 FFE4  
                                        STR_109 FBDE                                          STR_117 F9DB  
                                        STR_118 F553                                          STR_126 FFE4  
                                        STR_134 FFF8                                          _ADRESL 000F63  
                                        STR_127 FFFC                                          STR_119 FBFF  
                                        STR_128 FFFC                                          STR_129 FFDD  
                                        _ADSTAT 000F65                                          _ADUTHH 000F6D  
                                        _ADUTHL 000F6C                                          _ANSELA 000F11  
                                        ?_putch 0001                                          _ANSELB 000F19  
                                        _ANSELC 000F21                                          _ANSELD 000F26  
                                        _ANSELE 000F2E                                          _RC1REG 000F99  
                                        _RC2REG 000E99                       InitialiseString@SerialNum 00B5  
                              ClearEEAddRange@i 0055                                          _RC1STA 000F9D  
                                        _RC2STA 000E9D                                          _RB6PPS 000EF5  
                                        _ODCONA 000F0F                                          _ODCONB 000F17  
                                        _ODCONC 000F1F                                          _RC6PPS 000EFD  
                                        _ODCOND 000F24                                          _ODCONE 000F2C  
                  __size_of_EUSART1_is_rx_ready 0018                              __size_of_ReadRX232 0124  
                                __CFG_WDTCCS$SC 000000                                          i2l5131 4C48  
                                        i2l5123 4C22                                          i2l5125 4C32  
                                        i2l5151 4C74                                          i2l5143 4C4E  
                                        i2l5127 4C34                                          i2l5145 4C5E  
                                        i2l5129 4C44                                          i2l5401 4E7C  
                                        i2l6201 00AC                                          i2l5147 4C60  
                                        i2l6203 00BA                                          i2l5149 4C70  
                                        i2l6205 00E6                                          i2l5431 4E88  
                                        i2l6207 00F4                                          _INLVLA 000F0D  
                                        _INLVLB 000F15                                          _INLVLC 000F1D  
                                        _INLVLD 000F22                                          i2l5429 4E82  
                                        i2l5701 3D00                                          _INLVLE 000F2A  
                                        i2l5711 49B6                                          i2l5703 3D1E  
                                        i2l6191 0028                                          i2l5721 3EC4  
                                        i2l5713 49C6                                          i2l5705 4992  
                                        i2l6193 0038                                          i2l5731 3F26  
                                        i2l5723 3ED4                                          i2l5715 49CA  
                                        i2l5707 49A4                                          i2l6195 0046  
                                        i2l5733 3F42                                          i2l5725 3EEE  
                                        i2l5717 3EA6                                          i2l5709 49B4  
                                        i2l6197 0072                                          i2l6189 001A  
                                        i2l5735 3F60                                          i2l5727 3EFC  
                                        i2l5719 3EB6                                          i2l5399 4E68  
                                        i2l6199 0080                                          i2l5729 3F0C  
                                        i2l5681 48FA                                          i2l5673 48C2  
                                        i2l5691 3C90                                          i2l5683 48FE  
                                        i2l5675 48D4                                          i2l5693 3CAA  
                                        i2l5685 3C60                                          i2l5677 48E6  
                                        _TABLAT 000FF5                                          i2l5695 3CBA  
                                        i2l5687 3C70                                          i2l5679 48EA  
                                        i2l5697 3CCA                                          i2l5689 3C80  
                                        i2l5699 3CE4                                   ??_ValidateCmd 0057  
                                        _OSCFRQ 000EDE                                   vfpfcnvrt@done 006B  
                  __size_of_EUSART1_is_tx_ready 0018                                          _NVMDAT 000F80  
                                        _RX1PPS 000EB5                                          _RX2PPS 000E8D  
                                        _TX1REG 000F9A                                          _TX2REG 000E9A  
                              __end_of_checkCRC 34DC                                          _TX1STA 000F9E  
                                        _TX2STA 000E9E                                     ModbusFC10@i 0096  
                                   ModbusFC10@j 0098                                     ModbusFC03@i 0098  
                                        _RXMode 4E70                                          _TXMode 4E76  
                                        _RXStat 00DE                                  __CFG_PWRTE$OFF 000000  
                          __size_of_generateCRC 00DC                                          _ByteHi 00D5  
                                        _ByteLo 00F6                              _UART1_Write_string 437C  
                                __CFG_XINST$OFF 000000                                    vfprintf@cfmt 0053  
                     __CFG_RSTOSC$HFINTOSC_1MHZ 000000                              AddRxBuffToModBus@i 008F  
                                 _CardConfigIni 2688                                      _PrintMB400 43EA  
                           __end_of_ModbusError 3EA6                                       ??___aodiv 0015  
                                     ??___aomod 0015                                          ___wmul 4CC8  
                                __CFG_STVREN$ON 000000                           CardConfigIni@NumBytes 0010  
                                     ??___lodiv 0015                                       ??___lomod 0015  
                           ?_UART1_Write_string 0006                        ?_EUSART1_SetErrorHandler 0005  
                           __end_of_SaveCardDat 2A48                                          clear_0 37C2  
                                        clear_1 37CE                                          clear_2 37DA  
                                        clear_3 37E6                                          clear_4 37F2  
                                        clear_5 37FE                                          _rxData 0500  
                   _EUSART2_FramingErrorHandler 01E3                                          _printf 4C7A  
                                        pad@buf 0019                                   ReadRX232@temp 0055  
              ??_EUSART1_SetOverrunErrorHandler 0007                 ?_EUSART1_SetOverrunErrorHandler 0005  
                                        _strcat 4CA2                                          dtoa@fp 0022  
                       __end_of_DATAEE_ReadByte 4D5C                                          _strcmp 3F66  
                                        _strcpy 44B6                                          _strlen 47DC  
                                 _ExpectedBytes 00FA                                 _ADCC_Initialize 478C  
                                        fputc@c 0007                                  _PMD_Initialize 4D10  
                                        fputs@c 0014                                          fputs@i 0015  
                                        fputs@s 0010                                       ??_isalpha 0007  
                                     ??_isdigit 0007                                       ??_memmove 000F  
                                 ??_PrintModbus 008F                                       ??_islower 0007  
                                  __mediumconst F47A                                       ??_isspace 0007  
                                        tblptrh 000FF7                                       ??_isupper 0007  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                          _EUSART2_Transmit_ISR 48C2               __size_of_ADCC_GetSingleConversion 002E  
                                        stoa@cp 0020                                          stoa@fp 0010  
                              __end_of_vfprintf 44B6                       ?_ADCC_GetSingleConversion 0005  
                               ??_EUSART1_Write 0005                                          utoa@fp 0022  
                               ??_EUSART2_Write 0005                                          xtoa@fp 0022  
                               _eusart1RxBuffer 0400                                       ??_toupper 000D  
                          ??_UART1_Write_string 000A                   __size_of_INTERRUPT_Initialize 0004  
                               _eusart2RxBuffer 0364                                 _eusart1TxBuffer 02C2  
                  __size_of_EUSART2_is_rx_ready 0018                               _SYSTEM_Initialize 4CEE  
                       __size_of_PrintModRespon 02E8                                 _eusart2TxBuffer 0384  
                                    __accesstop 0060                         __end_of__initialization 380C  
                  __size_of_EUSART2_is_tx_ready 0018                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                                 checkCRC@crcHigh 0094  
                             ??_ClearEEAddRange 0055                         ??_EUSART2_RxDataHandler 0001  
                __size_of_EUSART1_RxDataHandler 002C                   __end_of_EUSART1_RxDataHandler 4C7A  
                                ?_CardConfigIni 000A                             __end_of_ValidateCmd 2BE4  
                                __pcstackCOMRAM 0001                                    __pidataBANK0 4DD2  
                                  __pidataBANK1 415C                                    __pidataBANK2 4024  
                                  __pidataBANK3 4A18                                    __pidataBANK4 4A58  
                           ??_SYSTEM_Initialize 0007                                _DATAEE_WriteByte 490A  
                                 __end_of_fputc 415C                                   __end_of_fputs 4992  
                ?_EUSART2_SetTxInterruptHandler 0005                                   __end_of_putch 4E68  
                             __end_of_ReadRX232 3600                          __end_of_PMD_Initialize 4D2C  
                          __end_of_EUSART1_Read 473A                            __end_of_EUSART2_Read 46E2  
                                   ?_ModbusFC10 0001                                     ?_ModbusFC03 0001  
                        ??_EUSART1_Transmit_ISR 0001                        ?_EUSART2_SetErrorHandler 0005  
                         ?_EUSART2_Transmit_ISR 0001                     __end_of_EUSART1_Receive_ISR 3F66  
                           CardConfigIni@RetNum 000C                            ModbusError@ErrorCode 0014  
                                       ??_fputc 000B                       __end_of_SYSTEM_Initialize 4D10  
                                       ??_fputs 0014                                         ??_putch 0006  
                                 _eusart1RxHead 0059                                   _eusart1TxHead 00E4  
                                 _eusart2RxHead 005A                                   _eusart1RxTail 00E2  
                                 _eusart2TxHead 00E9                                      __pbssBANK0 00CD  
                                    __pbssBANK1 01ED                                      __pbssBANK2 02A2  
                                    __pbssBANK3 0300                                      __pbssBANK4 0400  
                                    __pbssBANK5 0500                                   _eusart2RxTail 00E7  
                                 _eusart1TxTail 00E3               _EUSART1_TxDefaultInterruptHandler 01E7  
                                 _eusart2TxTail 00E8                 ??_EUSART1_SetRxInterruptHandler 0007  
                           __end_of_PrintModbus 2258                ??_EUSART2_SetFramingErrorHandler 0007  
               ?_EUSART2_SetFramingErrorHandler 0005                                     _ModbusError 3DE6  
                                     ?_ModbusRx 0001                                         ?_RXMode 0001  
                                       ?_TXMode 0001                           EUSART2_Read@readValue 0005  
                                     ?_TogDebug 0001                 __end_of_EUSART1_SetErrorHandler 4E5E  
                                   _SaveCardDat 2878                                     ?_PrintMB400 0001  
                              _InitialiseString 1356                                         ?___wmul 0005  
                               __CFG_PPS1WAY$ON 000000                         __end_of_ADCC_Initialize 47DC  
                                       _ADFLTRH 000F73                                         _ADFLTRL 000F72  
                                       _ADPREVH 000F62                                         _MB300xx 03B7  
                                       _ADPREVL 000F61                                         _MB301xx 0164  
                                       _MB302xx 00FC                                         _MB303xx 00EA  
                                       _MB400xx 0464                                         _MB304xx 0172  
                                       _MB305xx 023C                                         _MB306xx 018D  
                                       _ADSTPTH 000F69                                         _ADSTPTL 000F68  
                                       ?_printf 007D                                 ?_PMD_Initialize 0001  
                             _ClearModbusRespon 49D6                                  CardConfigIni@i 0016  
                                CardConfigIni@j 0014                                         ?_strcat 0013  
                                       ?_strcmp 0005                                         ?_strcpy 0009  
                                       ?_strlen 0005          __end_of_EUSART1_SetFramingErrorHandler 4E54  
       __size_of_EUSART1_SetFramingErrorHandler 000A                  _EUSART1_SetFramingErrorHandler 4E4A  
                              ?_DATAEE_ReadByte 0005                           _eusart2RxStatusBuffer 02A2  
                                     ?_checkCRC 0001                            InitialiseString@Date 00A2  
                            ?_ClearModbusRespon 0001                    ?_EUSART1_DefaultErrorHandler 0001  
                          InitialiseString@Time 00AD                                         _SP1BRGH 000F9C  
                                       _SP1BRGL 000F9B                                         _SP2BRGH 000E9C  
                                       _SP2BRGL 000E9B                                         _OSCCON1 000ED8  
                                       _OSCCON3 000EDA                     __end_of_EUSART2_Receive_ISR 3D24  
                            __size_of_vfpfcnvrt 058A                                         _TBLPTRH 000FF7  
                                       _TBLPTRL 000FF6                                         _TBLPTRU 000FF8  
                                       _NVMADRH 000F7F                                         _NVMADRL 000F7E  
                                       _OSCTUNE 000EDD                                         _NVMCON2 000F82  
                                       _SLRCONA 000F0E                                         _SLRCONB 000F16  
                                       _SLRCONC 000F1E                                         _SLRCOND 000F23  
                                       _SLRCONE 000F2B                        ModbusFC03@convertedValue 0095  
                           ??_ClearModbusRespon 0005                                ___lomod@dividend 0005  
                                  ?_ClearRxBuff 0001                                     PrintMB400@i 0055  
                          DATAEE_WriteByte@bAdd 0005                                     _ValidateCmd 2A48  
                                       _Command 01ED                               generateCRC@HiOrLo 0007  
                                    ??_ModbusRx 0056                                         _ByteNum 00D9  
                           __size_of_ModbusFC10 022E                             __size_of_ModbusFC03 0CA2  
                               ??_CardConfigIni 0012                                 __size_of_RXMode 0006  
                               __size_of_TXMode 0006                                         __Hparam 0000  
                                    ??_TogDebug 0055                                         __Lparam 0000  
                fp__EUSART2_DefaultErrorHandler 0000                                         ___aodiv 2F18  
                                       ___aomod 321C                               generateCRC@crcLow 000C  
                               __size_of___wmul 0026                                         ___lodiv 3816  
                                       ___lomod 3B90                                       ?_vfprintf 0077  
                     __end_of_ClearModbusRespon 4A18                             _EUSART1_is_rx_ready 4D8C  
                        InitialiseString@F10760 00D3                          InitialiseString@F10763 024C  
                        InitialiseString@F10756 02D2                          InitialiseString@F10758 03A4  
                        InitialiseString@F10766 017E                      __end_of_EUSART1_is_tx_done 4DFA  
                                       __pcinit 371C                 __end_of_EUSART2_SetErrorHandler 4E2C  
                                       __ramtop 0F00                             _EUSART1_is_tx_ready 4DA4  
                                       __ptext0 3600                                         __ptext1 2A48  
                                       __ptext2 4B14                                         __ptext3 2878  
                                       __ptext4 34DC                                         __ptext5 4CA2  
                                       __ptext6 44B6                                         __ptext7 3906  
                                       __ptext8 4D2C                                         __ptext9 468A  
                               __size_of_printf 0028                                 __size_of_strcat 0026  
                               __size_of_strcmp 00BE                                 __size_of_strcpy 005E  
                               __size_of_strlen 0050                               ReadRX232@NumChars 008F  
                                    ??_checkCRC 008F           fp__EUSART2_DefaultOverrunErrorHandler 0000  
    __end_of_EUSART2_DefaultOverrunErrorHandler 4E70     __size_of_EUSART2_DefaultOverrunErrorHandler 0008  
          ??_EUSART2_DefaultOverrunErrorHandler 0001             ?_EUSART2_DefaultOverrunErrorHandler 0001  
            _EUSART2_DefaultOverrunErrorHandler 4E68                           _OSCILLATOR_Initialize 4D5C  
                        ??_EUSART2_Transmit_ISR 0001                                    __size_of_abs 0040  
                                  __size_of_pad 00C2                                         _isalpha 4AD8  
                                       _isdigit 4BBC                                         _memmove 3906  
                            _EUSART1_Initialize 427E                                         _islower 4B4C  
                      ??_PIN_MANAGER_Initialize 0005                                         _isspace 473A  
                                   _PrintModbus 1F8C                                         _isupper 4B84  
                 ??_EUSART1_DefaultErrorHandler 0001                                         atoi@neg 0012  
                InitialiseString@convertedValue 00C1                      __size_of_SYSTEM_Initialize 0022  
                      __size_of_ClearModbusData 004C                             __size_of_PrintMB400 0068  
                                       _toupper 4514                            end_of_initialization 380C  
                        InitialiseString@i_1495 00CB                            ?_EUSART1_is_rx_ready 0001  
                           ?_EUSART1_Initialize 0001                                  _PrintModRespon 16EE  
                        InitialiseString@RevNum 00C3                      __end_of_EUSART2_is_tx_done 4DD2  
                          ?_EUSART1_is_tx_ready 0001                                         fputc@fp 0009  
                   _EUSART1_OverrunErrorHandler 01DB                                         fputs@fp 0012  
         __end_of_EUSART1_SetRxInterruptHandler 4E40          __size_of_EUSART1_SetRxInterruptHandler 000A  
                 _EUSART1_SetRxInterruptHandler 4E36                                    SaveCardDat@i 00A1  
                            _EUSART2_Initialize 42FE                               __end_of_vfpfcnvrt 1356  
                                       postdec1 000FE5                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc1 000FE6  
                                       postinc2 000FDE                           __size_of_EUSART1_Read 0058  
                         __size_of_EUSART2_Read 0058                                ?_ADCC_Initialize 0001  
                                    ??_vfprintf 0053                __end_of_ADCC_GetSingleConversion 4C22  
                          ??_EUSART1_Initialize 0007                                         strcmp@l 0005  
                                       strcmp@r 0007                           __CFG_WDTCPS$WDTCPS_31 000000  
                           ?_EUSART2_Initialize 0001                                         strcpy@d 0011  
                                       strlen@a 0007                             _EUSART2_is_rx_ready 4D2C  
                                       strcpy@s 000F                                         strlen@s 0005  
                             ValidateCmd@F10790 0228                               ValidateCmd@F10793 0214  
                             ValidateCmd@F10796 0200                             _EUSART2_is_tx_ready 4D74  
                      ValidateCmd@ConfName_1561 01A7                        ValidateCmd@ConfName_1565 01BB  
                              ClearModbusData@i 0005                         fp__EUSART1_Transmit_ISR 0000  
                               _ClearEEAddRange 462E                          __end_of_PrintModRespon 19D6  
              __size_of_EUSART1_SetErrorHandler 000A                             EUSART1_Write@txData 0005  
                              __CFG_FEXTOSC$OFF 000000                           ??_EUSART1_is_rx_ready 0005  
                      __end_of_DATAEE_WriteByte 494E                            ??_EUSART2_Initialize 0007  
                          ?_EUSART2_is_rx_ready 0001                           ??_EUSART1_is_tx_ready 0005  
                                 ??_generateCRC 0008                            ?_EUSART2_is_tx_ready 0001  
                                  _EUSART1_Read 46E2                                    _EUSART2_Read 468A  
          __size_of_EUSART1_DefaultErrorHandler 0006                                  __end_of_RXMode 4E76  
                                __end_of_TXMode 4E7C                          UART1_Write_string@data 0006  
                __size_of_EUSART2_RxDataHandler 002C                   __end_of_EUSART2_RxDataHandler 4C4E  
                  __end_of_INTERRUPT_Initialize 4E92                      __size_of_ClearModbusRespon 0042  
                                   vfpfcnvrt@ap 004D                                     vfpfcnvrt@cp 0068  
                                   vfpfcnvrt@fp 0049                                     vfpfcnvrt@ll 0060  
                                __end_of___wmul 4CEE                          ?_OSCILLATOR_Initialize 0001  
                                  ??_ModbusFC10 008F                                    ??_ModbusFC03 008F  
                                __end_of_printf 4CA2                                  __end_of_strcat 4CC8  
                                __end_of_strcmp 4024                                  __end_of_strcpy 4514  
                                     _ReadRX232 34DC                                  __end_of_strlen 482C  
                           start_initialization 371C                                 ___lodiv@divisor 000D  
                               ___lodiv@counter 001D                 __size_of_PIN_MANAGER_Initialize 008E  
                                   __end_of_abs 4AD8                                     __end_of_pad 3DE6  
                      __end_of_InitialiseString 16EE   EUSART1_SetRxInterruptHandler@interruptHandler 0005  
 EUSART1_SetTxInterruptHandler@interruptHandler 0005   EUSART2_SetRxInterruptHandler@interruptHandler 0005  
 EUSART2_SetTxInterruptHandler@interruptHandler 0005                                 ?_PrintModRespon 0001  
                                   putch@txData 0006                           ??_EUSART2_is_rx_ready 0005  
                         __end_of_EUSART1_Write 462E                     __size_of_UART1_Write_string 006E  
                         __end_of_EUSART2_Write 45D0                           ??_EUSART2_is_tx_ready 0005  
                        fp__EUSART1_Receive_ISR 0000                                    ?_ModbusError 0014  
              __size_of_EUSART2_SetErrorHandler 000A                             DATAEE_ReadByte@bAdd 0005  
                                      ??_RXMode 0005                            __size_of_ClearRxBuff 004A  
                             ??_ClearModbusData 0005                                        ??_TXMode 0005  
        __end_of_EUSART2_SetOverrunErrorHandler 4E18         __size_of_EUSART2_SetOverrunErrorHandler 000A  
                _EUSART2_SetOverrunErrorHandler 4E0E                              __end_of_ModbusFC10 2486  
                            __end_of_ModbusFC03 0DCC                                    ?_SaveCardDat 0093  
                              __CFG_LPBOREN$OFF 000000                                    ClearRxBuff@i 0006  
                              _SaveCardDat$2869 009D                               __size_of_ModbusRx 017C  
                                   vfprintf@fmt 0079                             __end_of_generateCRC 3ABE  
                                  ??_PrintMB400 0055                                ??_PMD_Initialize 0005  
                                      ??___wmul 0009                               __size_of_TogDebug 0038  
                         _EUSART1_RxDataHandler 4C4E                  ?_EUSART1_SetRxInterruptHandler 0005  
                                   __pdataBANK0 00EA                                     __pdataBANK1 0100  
                                   __pdataBANK2 0200                                     __pdataBANK3 03B7  
                                   __pdataBANK4 0464                                        ??_printf 0055  
                                      ??_strcat 0017                                        ??_strcmp 0009  
                                      ??_strcpy 000D                                        ??_strlen 0007  
                                _eusart1RxCount 00E1                         __end_of_ClearEEAddRange 468A  
                                _eusart2RxCount 00E6                        _ADCC_GetSingleConversion 4BF4  
                                    ?_ReadRX232 008F                                     __pbssCOMRAM 0057  
             _EUSART1_RxDefaultInterruptHandler 01E5                   __size_of_EUSART1_Transmit_ISR 0044  
                                 __pcstackBANK0 0060                                   __pcstackBANK1 0193  
                              ___aodiv@dividend 0005                               __size_of_checkCRC 015C  
                       fp__EUSART2_Transmit_ISR 0000                               _AddRxBuffToModBus 3ABE  
                           EUSART2_Write@txData 0005                              __end_of_PrintMB400 4452  
               ??_EUSART1_SetTxInterruptHandler 0007                              ?_AddRxBuffToModBus 0001  
              ??_EUSART1_SetFramingErrorHandler 0007                 ?_EUSART1_SetFramingErrorHandler 0005  
               ??_EUSART2_SetRxInterruptHandler 0007                                    ?_ValidateCmd 0001  
                  __size_of_EUSART1_Receive_ISR 00C0                          fp__EUSART2_Receive_ISR 0000  
                                     _atoi$2395 0014                                       _atoi$2396 0018  
                                     _atoi$2397 0016                                       __pnvBANK0 00FE  
                                     __pnvBANK1 01D9        __end_of_ADCC_DisableContinuousConversion 4E96  
     __size_of_ADCC_DisableContinuousConversion 0004              ??_ADCC_DisableContinuousConversion 0005  
             ?_ADCC_DisableContinuousConversion 0001                _ADCC_DisableContinuousConversion 4E92  
                           ??_AddRxBuffToModBus 0055                          _PIN_MANAGER_Initialize 41F0  
                                     _dtoa$1891 0034                                       __pintcode 0008  
                             InitialiseString@i 00C9                               InitialiseString@j 00C7  
                                 __pmediumconst F47A                 ADCC_GetSingleConversion@channel 0009  
                                      ?___aodiv 0005                                        ?___aomod 0005  
                              ___aodiv@quotient 0017                                        ?___lodiv 0005  
                                      ?___lomod 0005               _EUSART2_TxDefaultInterruptHandler 01EB  
                  ??_INTERRUPT_InterruptManager 0001                               __size_of_vfprintf 0064  
                               ___lomod@divisor 000D                                        _BAUD1CON 000F9F  
                                      _BAUD2CON 000E9F                                       checkCRC@i 009C  
                                     checkCRC@j 0098                                 ___lomod@counter 0015  
         fp__EUSART1_DefaultOverrunErrorHandler 0000      __end_of_EUSART1_DefaultOverrunErrorHandler 4E88  
   __size_of_EUSART1_DefaultOverrunErrorHandler 0006            ??_EUSART1_DefaultOverrunErrorHandler 0001  
           ?_EUSART1_DefaultOverrunErrorHandler 0001              _EUSART1_DefaultOverrunErrorHandler 4E82  
                                      ?_isalpha 0005                                        ?_isdigit 0005  
                                      ?_memmove 0009                            _EUSART1_ErrorHandler 01D9  
                               SaveCardDat@Conf 00A3                    ?_EUSART2_DefaultErrorHandler 0001  
                               SaveCardDat@Name 0093                                        ?_islower 0005  
                                      ?_isspace 0005                                    ?_PrintModbus 0001  
                     __end_of_AddRxBuffToModBus 3B90                                        ?_isupper 0005  
                       _EUSART1_SetErrorHandler 4E54                              _EUSART1_is_tx_done 4DE6  
                                __size_of_fputc 0096                                  __size_of_fputs 0044  
                      __size_of_DATAEE_ReadByte 0018                                        ?_toupper 000B  
                                __size_of_putch 000A                            _INTERRUPT_Initialize 4E8E  
                   InitialiseString@readDataOdd 00C5                    __size_of_EUSART2_Receive_ISR 00C4  
                                   _generateCRC 39E2                                  ___wmul@product 0009  
                                      _LATAbits 000F83         EUSART1_SetErrorHandler@interruptHandler 0005  
       EUSART2_SetErrorHandler@interruptHandler 0005                                        _LATDbits 000F86  
                           ?_EUSART1_is_tx_done 0001                                        _PIE3bits 000EC5  
                           __CFG_BORV$VBOR_2P45 000000                      UART1_Write_string@data_len 0008  
                                      _MBResCRC 00F8             __size_of_INTERRUPT_InterruptManager 011E  
                                      i2u500_40 49A4                                        i2u500_41 49A0  
                                      i2u501_40 49C6                                        i2u501_41 49C2  
                                      i2u502_40 3EC4                                        _MBResCnt 00D7  
                                      i2u502_41 3EC0                                        i2u504_40 3EFC  
                                      i2u503_48 3EDA                                        i2u504_41 3EF8  
                                      i2u503_49 3EEE                                        i2u506_40 3F42  
                                      i2u505_48 3F12                                        i2u506_41 3F3E  
                                      i2u505_49 3F26                                        i2u507_48 3F48  
                                      i2u436_40 4C44                                        i2u507_49 3F5C  
                                      i2u436_41 4C40                                        i2u437_40 4C70  
                                      i2u437_41 4C6C                                        _PIR3bits 000ECD  
                         __end_of_CardConfigIni 2878                                        i2u571_40 00AC  
                                      i2u570_48 0086                                        i2u571_41 00A8  
                                      i2u570_49 009A                                        i2u492_40 48D4  
                                      i2u572_40 00BA                                        i2u564_40 0028  
                                      i2u492_41 48D0                                        i2u572_41 00B6  
                                      i2u564_41 0024                                        i2u493_40 48FA  
                                      i2u565_40 0038                                        i2u493_41 48F6  
                                      i2u565_41 0034                                        _PIR7bits 000ED1  
                                      i2u494_40 3C80                                        i2u574_40 00E6  
                                      i2u573_48 00C0                                        i2u566_40 0046  
                                      i2u494_41 3C7C                                        i2u574_41 00E2  
                                      i2u573_49 00D4                                        i2u566_41 0042  
                                      i2u575_40 00F4                                        i2u575_41 00F0  
                                      i2u496_40 3CBA                                        i2u495_48 3C96  
                                      i2u568_40 0072                                        i2u567_48 004C  
                                      i2u496_41 3CB6                                        i2u495_49 3CAA  
                                      i2u568_41 006E                                        i2u567_49 0060  
                                      i2u576_48 00FA                                        i2u569_40 0080  
                                      i2u576_49 010E                                        i2u569_41 007C  
                                      i2u498_40 3D00                                        i2u497_48 3CD0  
                                      i2u498_41 3CFC                                        i2u497_49 3CE4  
                                      i2u499_48 3D06                                        _MBRespon 0257  
                                      i2u499_49 3D1A                          ?_EUSART1_RxDataHandler 0001  
                            _EUSART2_is_tx_done 4DBC                                       _vfpfcnvrt 0DCC  
                                     _xtoa$1920 0035                                       _xtoa$1921 0037  
                                    _ADCON0bits 000F60                                      _ADCON1bits 000F59  
                                    _ADCON2bits 000F5A                                      _ADCON3bits 000F5B  
                             ___wmul@multiplier 0005                            ??_EUSART1_is_tx_done 0005  
                              ?_ClearEEAddRange 008F                             ?_EUSART2_is_tx_done 0001  
                                   ??_ReadRX232 0055                           SaveCardDat@dataeeAddr 0097  
                                   checkCRC@crc 009A                   __size_of_EUSART2_Transmit_ISR 0048  
                         DATAEE_WriteByte@bData 0007                                    _isspace$2422 000B  
                 ??_EUSART2_DefaultErrorHandler 0001                                      vfpfcnvrt@c 006A  
                                     copy_data0 3730                                       copy_data1 3750  
                                     copy_data2 3770                                       copy_data3 3790  
                                     copy_data4 37B0                              ModbusFC10@TempData 0093  
                         ?_INTERRUPT_Initialize 0001                       CardConfigIni@readDataEven 0019  
                             ?_DATAEE_WriteByte 0005                         _EUSART2_SetErrorHandler 4E22  
                         EUSART1_Read@readValue 0005                     _EUSART2_OverrunErrorHandler 01E1  
                            ??_DATAEE_WriteByte 0008                            ??_EUSART2_is_tx_done 0005  
                                      _ModbusRx 30A0                              generateCRC@MessCnt 0005  
                                    _ADSTATbits 000F65           __end_of_EUSART1_SetTxInterruptHandler 4E36  
        __size_of_EUSART1_SetTxInterruptHandler 000A                   _EUSART1_SetTxInterruptHandler 4E2C  
                                      __Hrparam 0000                                        _TogDebug 4B14  
         __end_of_EUSART2_SetRxInterruptHandler 4E0E          __size_of_EUSART2_SetRxInterruptHandler 000A  
                 _EUSART2_SetRxInterruptHandler 4E04                            __size_of_ModbusError 00C0  
                                    vfprintf@ap 007B                                        __Lrparam 0000  
                                    vfprintf@fp 0077                              __CFG_BOREN$SBORDIS 000000  
                          __size_of_SaveCardDat 01D0                         ??_OSCILLATOR_Initialize 0005  
                                     memmove@d1 0009                                       memmove@s1 000B  
                              __size_of___aodiv 0188                                __size_of___aomod 0164  
                            generateCRC@crcHigh 000A                                __size_of___lodiv 00F0  
                              __size_of___lomod 00D0                     __size_of_EUSART1_Initialize 0080  
                                    ?_vfpfcnvrt 0049                                 ___aodiv@divisor 000D  
                               ___aodiv@counter 0015                                 ReadRX232@F10772 00F4  
                     ??_EUSART1_SetErrorHandler 0007                               CardConfigIni@Name 000A  
                                      _checkCRC 3380             __end_of_EUSART1_DefaultErrorHandler 4E8E  
                   _EUSART1_DefaultErrorHandler 4E88                                ??_PrintModRespon 008F  
                   __end_of_EUSART1_is_rx_ready 4DA4                                      strcat@dest 0013  
                      __size_of_ADCC_Initialize 0050                            _EUSART2_ErrorHandler 01DF  
                              __size_of_isalpha 003C                                __size_of_isdigit 0038  
                   __end_of_EUSART1_is_tx_ready 4DBC                      __size_of_AddRxBuffToModBus 00D2  
                              __size_of_memmove 00DC                                 _ClearModbusData 482C  
                              __size_of_islower 0038                                __size_of_isspace 0052  
                                      __ptext10 462E                                        __ptext11 490A  
                                      __ptext20 4E8E                                        __ptext12 1356  
                                      __ptext21 42FE                                        __ptext13 2688  
                                      __ptext30 4E40                                        __ptext22 4DFA  
                                      __ptext14 3F66                                        __ptext31 4E4A  
                                      __ptext23 4E04                                        __ptext15 4D44  
                                      __ptext40 30A0                                        __ptext32 4E54  
                                      __ptext24 4E0E                                        __ptext16 4CEE  
                                      __ptext41 3380                                        __ptext33 478C  
                                      __ptext25 4E18                                        __ptext17 4D10  
                                      __ptext50 4452                                        __ptext42 4E70  
                                      __ptext34 4E92                                        __ptext26 4E22  
                                      __ptext18 41F0                                        __ptext51 0DCC  
                                      __ptext43 4D8C                                        __ptext35 1F8C  
                                      __ptext27 427E                                        __ptext19 4D5C  
                                      __ptext60 2BE4                                        __ptext52 1CB6  
                                      __ptext44 46E2                                        __ptext36 16EE  
                                      __ptext28 4E2C                                        __ptext61 19D6  
                                      __ptext53 4514                                        __ptext45 4878  
                                      __ptext37 4D74                                        __ptext29 4E36  
                                      __ptext70 2F18                                        __ptext62 3D24  
                                      __ptext54 4B4C                                        __ptext46 3ABE  
                                      __ptext38 4DBC                                        __ptext71 2D7E  
                                      __ptext63 47DC                                        __ptext55 4B84  
                                      __ptext47 2258                                        __ptext39 43EA  
                                      __ptext80 4DE6                                        __ptext72 473A  
                                      __ptext64 494E                                        __ptext56 4AD8  
                                      __ptext48 012A                                        __ptext81 45D0  
                                      __ptext73 4BBC                                        __ptext65 40C6  
                                      __ptext57 2486                                        __ptext49 4C7A  
                                      __ptext90 4E7C                                        __ptext82 4BF4  
                                      __ptext74 4CC8                                        __ptext66 4E5E  
                                      __ptext58 3B90                                        __ptext91 4C22  
                                      __ptext83 49D6                                        __ptext75 3DE6  
                                      __ptext67 4572                                        __ptext59 3816  
                                      __ptext92 4992                                        __ptext84 482C  
                                      __ptext76 39E2                                        __ptext68 4A98  
                                      __ptext93 3EA6                                        __ptext77 437C  
                                      __ptext69 321C                                        __ptext94 4E82  
                                      __ptext86 48C2                                        __ptext78 4E76  
                                      __ptext95 4E98                                        __ptext87 3C60  
                                      __ptext79 4DA4                                        __ptext96 4E88  
                                      __ptext88 4E68                                        __ptext97 4C4E  
                                      __ptext89 4E96                                        __ptext98 0000  
                              __size_of_isupper 0038                               ?_InitialiseString 0001  
                   DATAEE_WriteByte@GIEBitValue 0008                                      strcpy@dest 0009  
                              __size_of_toupper 005E                     __size_of_EUSART2_Initialize 007E  
                       ClearEEAddRange@NumBytes 0091                              ??_InitialiseString 0055  
                                 __size_of_atoi 019A                                   __size_of_main 011C  
                                 __size_of_dtoa 02E0                                   __size_of_stoa 019A  
         fp__EUSART2_DefaultFramingErrorHandler 0000      __end_of_EUSART2_DefaultFramingErrorHandler 4E98  
   __size_of_EUSART2_DefaultFramingErrorHandler 0002            ??_EUSART2_DefaultFramingErrorHandler 0001  
           ?_EUSART2_DefaultFramingErrorHandler 0001              _EUSART2_DefaultFramingErrorHandler 4E96  
                                 __size_of_utoa 0202                                   __size_of_xtoa 02D6  
                             ??_DATAEE_ReadByte 0007                            __size_of_ValidateCmd 019C  
                          __CFG_WDTCWS$WDTCWS_7 000000                         ClearEEAddRange@StartAdd 008F  
                                  PrintModbus@i 0096                                    PrintModbus@j 0094  
          __size_of_EUSART2_DefaultErrorHandler 0006                                      _RC1STAbits 000F9D  
                                     stoa@F1139 0186                                      _RC2STAbits 000E9D  
EUSART1_SetOverrunErrorHandler@interruptHandler 0005  EUSART2_SetOverrunErrorHandler@interruptHandler 0005  
                               PrintModRespon@i 0094                                 PrintModRespon@j 0092  
                    ??_ADCC_GetSingleConversion 0007                                        _rxStatus 00DD  
                                      int$flags 005B                      CardConfigIni@dataeeAddrWrk 000E  
                                      _vfprintf 4452              __end_of_INTERRUPT_InterruptManager 0126  
                    _INTERRUPT_InterruptManager 0008                           _EUSART2_RxDataHandler 4C22  
                                     printf@fmt 007D                     _EUSART1_FramingErrorHandler 01DD  
                           _EUSART1_Receive_ISR 3EA6                                ___aomod@dividend 0005  
              ??_EUSART2_SetOverrunErrorHandler 0007                 ?_EUSART2_SetOverrunErrorHandler 0005  
                       InitialiseString@PartNum 008F                                  _vfpfcnvrt$1935 006D  
                       InitialiseString@Partial 00C0                                      _INTCONbits 000FF2  
                   __end_of_EUSART2_is_rx_ready 4D44                                     _NVMCON1bits 000F81  
                   __end_of_EUSART2_is_tx_ready 4D8C                                        isalpha@c 0005  
                    __end_of_UART1_Write_string 43EA                                        isdigit@c 0005  
                        ??_INTERRUPT_Initialize 0005                                        memmove@d 0011  
                                      memmove@n 000D                                        memmove@s 0013  
                     ??_EUSART2_SetErrorHandler 0007                            __size_of_PrintModbus 02CC  
                                      intlevel2 0000                                   ??_ClearRxBuff 0005  
                                     strcat@src 0015                            ?_EUSART1_Receive_ISR 0001  
                                      islower@c 0005                                        isspace@c 0005  
                       ?_PIN_MANAGER_Initialize 0001                               __CFG_CLKOUTEN$OFF 000000  
        __end_of_EUSART1_SetOverrunErrorHandler 4E4A         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 4E40                                       strcpy@src 000B  
                                      isupper@c 0005                    __end_of_EUSART1_Transmit_ISR 49D6  
                                      printf@ap 008D  EUSART1_SetFramingErrorHandler@interruptHandler 0005  
EUSART2_SetFramingErrorHandler@interruptHandler 0005                  ?_EUSART1_SetTxInterruptHandler 0005  
                ?_EUSART2_SetRxInterruptHandler 0005                                 ___aomod@divisor 000D  
                                   ??_vfpfcnvrt 004F                                        stoa@nuls 0015  
                               ___aomod@counter 0015                          __size_of_EUSART1_Write 005E  
                            _eusart1RxLastError 00E0                          __size_of_EUSART2_Write 005E  
                           _EUSART2_Receive_ISR 3C60                         __end_of_ClearModbusData 4878  
                                      toupper@c 000B                                      _TX1STAbits 000F9E  
                                    _TX2STAbits 000E9E                                    ___aodiv@sign 0016  
                               ModbusFC10@error 0095                           ??_EUSART1_Receive_ISR 0001  
                __end_of_PIN_MANAGER_Initialize 427E                               ??_ADCC_Initialize 0005  
                               ModbusFC03@error 0097                 ??_EUSART2_SetTxInterruptHandler 0007  
                          ?_EUSART2_Receive_ISR 0001                              _eusart2RxLastError 00E5  
                                  ?_generateCRC 0005                         ??_EUSART1_RxDataHandler 0001  
                                  ___aomod@sign 0016               _EUSART2_RxDefaultInterruptHandler 01E9  
                           __end_of_ClearRxBuff 48C2  
