

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Mar 26 23:39:39 2021

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F46K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
    10                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    13                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    14                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    22                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    23                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    24                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    25                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    26                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    27                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    28                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    29                           	psect	text0,global,reloc=2,class=CODE,delta=1
    30                           	psect	text1,global,reloc=2,class=CODE,delta=1
    31                           	psect	text2,global,reloc=2,class=CODE,delta=1
    32                           	psect	text3,global,reloc=2,class=CODE,delta=1
    33                           	psect	text4,global,reloc=2,class=CODE,delta=1
    34                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text8,global,reloc=2,class=CODE,delta=1
    38                           	psect	text9,global,reloc=2,class=CODE,delta=1
    39                           	psect	text10,global,reloc=2,class=CODE,delta=1
    40                           	psect	text11,global,reloc=2,class=CODE,delta=1
    41                           	psect	text12,global,reloc=2,class=CODE,delta=1
    42                           	psect	text13,global,reloc=2,class=CODE,delta=1
    43                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text15,global,reloc=2,class=CODE,delta=1
    45                           	psect	text16,global,reloc=2,class=CODE,delta=1
    46                           	psect	text17,global,reloc=2,class=CODE,delta=1
    47                           	psect	text18,global,reloc=2,class=CODE,delta=1
    48                           	psect	text19,global,reloc=2,class=CODE,delta=1
    49                           	psect	text20,global,reloc=2,class=CODE,delta=1
    50                           	psect	text21,global,reloc=2,class=CODE,delta=1
    51                           	psect	text22,global,reloc=2,class=CODE,delta=1
    52                           	psect	text23,global,reloc=2,class=CODE,delta=1
    53                           	psect	text24,global,reloc=2,class=CODE,delta=1
    54                           	psect	text25,global,reloc=2,class=CODE,delta=1
    55                           	psect	text26,global,reloc=2,class=CODE,delta=1
    56                           	psect	text27,global,reloc=2,class=CODE,delta=1
    57                           	psect	text28,global,reloc=2,class=CODE,delta=1
    58                           	psect	text29,global,reloc=2,class=CODE,delta=1
    59                           	psect	text30,global,reloc=2,class=CODE,delta=1
    60                           	psect	text31,global,reloc=2,class=CODE,delta=1
    61                           	psect	text32,global,reloc=2,class=CODE,delta=1
    62                           	psect	text33,global,reloc=2,class=CODE,delta=1
    63                           	psect	text34,global,reloc=2,class=CODE,delta=1
    64                           	psect	text35,global,reloc=2,class=CODE,delta=1
    65                           	psect	text36,global,reloc=2,class=CODE,delta=1
    66                           	psect	text37,global,reloc=2,class=CODE,delta=1
    67                           	psect	text38,global,reloc=2,class=CODE,delta=1
    68                           	psect	text39,global,reloc=2,class=CODE,delta=1
    69                           	psect	text40,global,reloc=2,class=CODE,delta=1
    70                           	psect	text41,global,reloc=2,class=CODE,delta=1
    71                           	psect	text42,global,reloc=2,class=CODE,delta=1
    72                           	psect	text43,global,reloc=2,class=CODE,delta=1
    73                           	psect	text44,global,reloc=2,class=CODE,delta=1
    74                           	psect	text45,global,reloc=2,class=CODE,delta=1
    75                           	psect	text46,global,reloc=2,class=CODE,delta=1
    76                           	psect	text47,global,reloc=2,class=CODE,delta=1
    77                           	psect	text48,global,reloc=2,class=CODE,delta=1
    78                           	psect	text49,global,reloc=2,class=CODE,delta=1
    79                           	psect	text50,global,reloc=2,class=CODE,delta=1
    80                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text52,global,reloc=2,class=CODE,delta=1
    82                           	psect	text53,global,reloc=2,class=CODE,delta=1
    83                           	psect	text54,global,reloc=2,class=CODE,delta=1
    84                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    88                           	psect	text59,global,reloc=2,class=CODE,delta=1
    89                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    90                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    91                           	psect	text62,global,reloc=2,class=CODE,delta=1
    92                           	psect	text63,global,reloc=2,class=CODE,delta=1
    93                           	psect	text64,global,reloc=2,class=CODE,delta=1
    94                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    96                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text68,global,reloc=2,class=CODE,delta=1
    98                           	psect	text69,global,reloc=2,class=CODE,delta=1
    99                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
   100                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
   101                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
   102                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
   103                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
   104                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=2
   105                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=1
   106                           	psect	text77,global,reloc=2,class=CODE,delta=1
   107                           	psect	text78,global,reloc=2,class=CODE,delta=1
   108                           	psect	text79,global,reloc=2,class=CODE,delta=1
   109                           	psect	text80,global,reloc=2,class=CODE,delta=1
   110                           	psect	text81,global,reloc=2,class=CODE,delta=1
   111                           	psect	text82,global,reloc=2,class=CODE,delta=1
   112                           	psect	text83,global,reloc=2,class=CODE,delta=1
   113                           	psect	text84,global,reloc=2,class=CODE,delta=1
   114                           	psect	text85,global,reloc=2,class=CODE,delta=1
   115                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   116                           	psect	text87,global,reloc=2,class=CODE,delta=1
   117                           	psect	text88,global,reloc=2,class=CODE,delta=1
   118                           	psect	text89,global,reloc=2,class=CODE,delta=1
   119                           	psect	text90,global,reloc=2,class=CODE,delta=1
   120                           	psect	text91,global,reloc=2,class=CODE,delta=1
   121                           	psect	text92,global,reloc=2,class=CODE,delta=1
   122                           	psect	text93,global,reloc=2,class=CODE,delta=1
   123                           	psect	text94,global,reloc=2,class=CODE,delta=1
   124                           	psect	text95,global,reloc=2,class=CODE,delta=1
   125                           	psect	text96,global,reloc=2,class=CODE,delta=1
   126                           	psect	text97,global,reloc=2,class=CODE,delta=1
   127                           	psect	text98,global,reloc=2,class=CODE,delta=1
   128                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   129                           	psect	text99,global,reloc=2,class=CODE,delta=1
   130                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   131                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   132  0000                     
   133                           ; Version 2.10
   134                           ; Generated 31/07/2019 GMT
   135                           ; 
   136                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   137                           ; All rights reserved.
   138                           ; 
   139                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   140                           ; 
   141                           ; Redistribution and use in source and binary forms, with or without modification, are
   142                           ; permitted provided that the following conditions are met:
   143                           ; 
   144                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   145                           ;        conditions and the following disclaimer.
   146                           ; 
   147                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   148                           ;        of conditions and the following disclaimer in the documentation and/or other
   149                           ;        materials provided with the distribution.
   150                           ; 
   151                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   152                           ;        software without specific prior written permission.
   153                           ; 
   154                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   155                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   156                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   157                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   158                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   159                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   160                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   161                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   162                           ; 
   163                           ; 
   164                           ; Code-generator required, PIC18F46K40 Definitions
   165                           ; 
   166                           ; SFR Addresses
   167  0000                     
   168                           	psect	idataBANK0
   169  00512E                     __pidataBANK0:
   170                           	opt callstack 0
   171                           
   172                           ;initializer for _MB303xx
   173  00512E  3132               	dw	12594
   174  005130  3334               	dw	13108
   175  005132  3536               	dw	13622
   176  005134  3738               	dw	14136
   177  005136  3930               	dw	14640
   178                           
   179                           ;initializer for ReadRX232@F10773
   180  005138  5A                 	db	90
   181  005139  00                 	db	0
   182                           
   183                           ;initializer for _ByteLo
   184  00513A  00FF               	dw	255
   185                           
   186                           ;initializer for _MBResCRC
   187  00513C  FFFF               	dw	65535
   188                           
   189                           ;initializer for _ExpectedBytes
   190  00513E  0008               	dw	8
   191                           
   192                           ;initializer for _MB302xx
   193  005140  0004               	dw	4
   194                           
   195                           	psect	idataBANK1
   196  0044BA                     __pidataBANK1:
   197                           	opt callstack 0
   198                           
   199                           ;initializer for _ModbusData
   200  0044BA  FF                 	db	255
   201  0044BB  00                 	db	0
   202  0044BC  00                 	db	0
   203  0044BD  00                 	db	0
   204  0044BE  00                 	db	0
   205  0044BF  00                 	db	0
   206  0044C0  00                 	db	0
   207  0044C1  00                 	db	0
   208  0044C2  00                 	db	0
   209  0044C3  00                 	db	0
   210  0044C4  00                 	db	0
   211  0044C5  00                 	db	0
   212  0044C6  00                 	db	0
   213  0044C7  00                 	db	0
   214  0044C8  00                 	db	0
   215  0044C9  00                 	db	0
   216  0044CA  00                 	db	0
   217  0044CB  00                 	db	0
   218  0044CC  00                 	db	0
   219  0044CD  00                 	db	0
   220  0044CE  00                 	db	0
   221  0044CF  00                 	db	0
   222  0044D0  00                 	db	0
   223  0044D1  00                 	db	0
   224  0044D2  00                 	db	0
   225  0044D3  00                 	db	0
   226  0044D4  00                 	db	0
   227  0044D5  00                 	db	0
   228  0044D6  00                 	db	0
   229  0044D7  00                 	db	0
   230  0044D8  00                 	db	0
   231  0044D9  00                 	db	0
   232  0044DA  00                 	db	0
   233  0044DB  00                 	db	0
   234  0044DC  00                 	db	0
   235  0044DD  00                 	db	0
   236  0044DE  00                 	db	0
   237  0044DF  00                 	db	0
   238  0044E0  00                 	db	0
   239  0044E1  00                 	db	0
   240  0044E2  00                 	db	0
   241  0044E3  00                 	db	0
   242  0044E4  00                 	db	0
   243  0044E5  00                 	db	0
   244  0044E6  00                 	db	0
   245  0044E7  00                 	db	0
   246  0044E8  00                 	db	0
   247  0044E9  00                 	db	0
   248  0044EA  00                 	db	0
   249  0044EB  00                 	db	0
   250  0044EC  00                 	db	0
   251  0044ED  00                 	db	0
   252  0044EE  00                 	db	0
   253  0044EF  00                 	db	0
   254  0044F0  00                 	db	0
   255  0044F1  00                 	db	0
   256  0044F2  00                 	db	0
   257  0044F3  00                 	db	0
   258  0044F4  00                 	db	0
   259  0044F5  00                 	db	0
   260  0044F6  00                 	db	0
   261  0044F7  00                 	db	0
   262  0044F8  00                 	db	0
   263  0044F9  00                 	db	0
   264  0044FA  00                 	db	0
   265  0044FB  00                 	db	0
   266  0044FC  00                 	db	0
   267  0044FD  00                 	db	0
   268  0044FE  00                 	db	0
   269  0044FF  00                 	db	0
   270  004500  00                 	db	0
   271  004501  00                 	db	0
   272  004502  00                 	db	0
   273  004503  00                 	db	0
   274  004504  00                 	db	0
   275  004505  00                 	db	0
   276  004506  00                 	db	0
   277  004507  00                 	db	0
   278  004508  00                 	db	0
   279  004509  00                 	db	0
   280  00450A  00                 	db	0
   281  00450B  00                 	db	0
   282  00450C  00                 	db	0
   283  00450D  00                 	db	0
   284  00450E  00                 	db	0
   285  00450F  00                 	db	0
   286  004510  00                 	db	0
   287  004511  00                 	db	0
   288  004512  00                 	db	0
   289  004513  00                 	db	0
   290  004514  00                 	db	0
   291  004515  00                 	db	0
   292  004516  00                 	db	0
   293  004517  00                 	db	0
   294  004518  00                 	db	0
   295  004519  00                 	db	0
   296  00451A  00                 	db	0
   297  00451B  00                 	db	0
   298  00451C  00                 	db	0
   299  00451D  00                 	db	0
   300                           
   301                           ;initializer for _MB301xx
   302  00451E  4150               	dw	16720
   303  004520  3030               	dw	12336
   304  004522  3036               	dw	12342
   305  004524  3033               	dw	12339
   306  004526  3033               	dw	12339
   307  004528  2D30               	dw	11568
   308  00452A  3200               	dw	12800
   309                           
   310                           ;initializer for _MB304xx
   311  00452C  00FF               	dw	255
   312  00452E  00                 	db	0
   313  00452F  00                 	db	0
   314  004530  00                 	db	0
   315  004531  00                 	db	0
   316  004532  00                 	db	0
   317  004533  00                 	db	0
   318  004534  00                 	db	0
   319  004535  00                 	db	0
   320  004536  00                 	db	0
   321  004537  00                 	db	0
   322                           
   323                           ;initializer for InitialiseString@F10767
   324  004538  32                 	db	50
   325  004539  33                 	db	51
   326  00453A  3A                 	db	58
   327  00453B  33                 	db	51
   328  00453C  39                 	db	57
   329  00453D  3A                 	db	58
   330  00453E  32                 	db	50
   331  00453F  38                 	db	56
   332                           
   333                           ;initializer for stoa@F1139
   334  004540  28                 	db	40
   335  004541  6E                 	db	110
   336  004542  75                 	db	117
   337  004543  6C                 	db	108
   338  004544  6C                 	db	108
   339  004545  29                 	db	41
   340  004546  00                 	db	0
   341                           
   342                           ;initializer for _MB306xx
   343  004547  00FF               	dw	255
   344  004549  00                 	db	0
   345  00454A  00                 	db	0
   346  00454B  00                 	db	0
   347  00454C  00                 	db	0
   348                           
   349                           	psect	idataBANK2
   350  004382                     __pidataBANK2:
   351                           	opt callstack 0
   352                           
   353                           ;initializer for ValidateCmd@F10797
   354  004382  52                 	db	82
   355  004383  65                 	db	101
   356  004384  76                 	db	118
   357  004385  69                 	db	105
   358  004386  73                 	db	115
   359  004387  69                 	db	105
   360  004388  6F                 	db	111
   361  004389  6E                 	db	110
   362  00438A  00                 	db	0
   363  00438B  00                 	db	0
   364  00438C  00                 	db	0
   365  00438D  00                 	db	0
   366  00438E  00                 	db	0
   367  00438F  00                 	db	0
   368  004390  00                 	db	0
   369  004391  00                 	db	0
   370  004392  00                 	db	0
   371  004393  00                 	db	0
   372  004394  00                 	db	0
   373  004395  00                 	db	0
   374                           
   375                           ;initializer for ValidateCmd@F10794
   376  004396  50                 	db	80
   377  004397  61                 	db	97
   378  004398  72                 	db	114
   379  004399  74                 	db	116
   380  00439A  20                 	db	32
   381  00439B  4E                 	db	78
   382  00439C  75                 	db	117
   383  00439D  6D                 	db	109
   384  00439E  62                 	db	98
   385  00439F  65                 	db	101
   386  0043A0  72                 	db	114
   387  0043A1  00                 	db	0
   388  0043A2  00                 	db	0
   389  0043A3  00                 	db	0
   390  0043A4  00                 	db	0
   391  0043A5  00                 	db	0
   392  0043A6  00                 	db	0
   393  0043A7  00                 	db	0
   394  0043A8  00                 	db	0
   395  0043A9  00                 	db	0
   396                           
   397                           ;initializer for ValidateCmd@F10791
   398  0043AA  53                 	db	83
   399  0043AB  65                 	db	101
   400  0043AC  72                 	db	114
   401  0043AD  69                 	db	105
   402  0043AE  61                 	db	97
   403  0043AF  6C                 	db	108
   404  0043B0  20                 	db	32
   405  0043B1  4E                 	db	78
   406  0043B2  75                 	db	117
   407  0043B3  6D                 	db	109
   408  0043B4  62                 	db	98
   409  0043B5  65                 	db	101
   410  0043B6  72                 	db	114
   411  0043B7  00                 	db	0
   412  0043B8  00                 	db	0
   413  0043B9  00                 	db	0
   414  0043BA  00                 	db	0
   415  0043BB  00                 	db	0
   416  0043BC  00                 	db	0
   417  0043BD  00                 	db	0
   418                           
   419                           ;initializer for _MB305xx
   420  0043BE  00FF               	dw	255
   421  0043C0  00                 	db	0
   422  0043C1  00                 	db	0
   423  0043C2  00                 	db	0
   424  0043C3  00                 	db	0
   425  0043C4  00                 	db	0
   426  0043C5  00                 	db	0
   427  0043C6  00                 	db	0
   428  0043C7  00                 	db	0
   429  0043C8  00                 	db	0
   430  0043C9  00                 	db	0
   431  0043CA  00                 	db	0
   432  0043CB  00                 	db	0
   433  0043CC  00                 	db	0
   434  0043CD  00                 	db	0
   435                           
   436                           ;initializer for InitialiseString@F10764
   437  0043CE  4D                 	db	77
   438  0043CF  61                 	db	97
   439  0043D0  72                 	db	114
   440  0043D1  20                 	db	32
   441  0043D2  32                 	db	50
   442  0043D3  36                 	db	54
   443  0043D4  20                 	db	32
   444  0043D5  32                 	db	50
   445  0043D6  30                 	db	48
   446  0043D7  32                 	db	50
   447  0043D8  31                 	db	49
   448                           
   449                           ;initializer for _MBRespon
   450  0043D9  FF                 	db	255
   451  0043DA  00                 	db	0
   452  0043DB  00                 	db	0
   453  0043DC  00                 	db	0
   454  0043DD  00                 	db	0
   455  0043DE  00                 	db	0
   456  0043DF  00                 	db	0
   457  0043E0  00                 	db	0
   458  0043E1  00                 	db	0
   459  0043E2  00                 	db	0
   460  0043E3  00                 	db	0
   461  0043E4  00                 	db	0
   462  0043E5  00                 	db	0
   463  0043E6  00                 	db	0
   464  0043E7  00                 	db	0
   465  0043E8  00                 	db	0
   466  0043E9  00                 	db	0
   467  0043EA  00                 	db	0
   468  0043EB  00                 	db	0
   469  0043EC  00                 	db	0
   470  0043ED  00                 	db	0
   471  0043EE  00                 	db	0
   472  0043EF  00                 	db	0
   473  0043F0  00                 	db	0
   474  0043F1  00                 	db	0
   475  0043F2  00                 	db	0
   476  0043F3  00                 	db	0
   477  0043F4  00                 	db	0
   478  0043F5  00                 	db	0
   479  0043F6  00                 	db	0
   480  0043F7  00                 	db	0
   481  0043F8  00                 	db	0
   482  0043F9  00                 	db	0
   483  0043FA  00                 	db	0
   484  0043FB  00                 	db	0
   485  0043FC  00                 	db	0
   486  0043FD  00                 	db	0
   487  0043FE  00                 	db	0
   488  0043FF  00                 	db	0
   489  004400  00                 	db	0
   490  004401  00                 	db	0
   491  004402  00                 	db	0
   492  004403  00                 	db	0
   493  004404  00                 	db	0
   494  004405  00                 	db	0
   495  004406  00                 	db	0
   496  004407  00                 	db	0
   497  004408  00                 	db	0
   498  004409  00                 	db	0
   499  00440A  00                 	db	0
   500  00440B  00                 	db	0
   501  00440C  00                 	db	0
   502  00440D  00                 	db	0
   503  00440E  00                 	db	0
   504  00440F  00                 	db	0
   505  004410  00                 	db	0
   506  004411  00                 	db	0
   507  004412  00                 	db	0
   508  004413  00                 	db	0
   509  004414  00                 	db	0
   510  004415  00                 	db	0
   511  004416  00                 	db	0
   512  004417  00                 	db	0
   513  004418  00                 	db	0
   514  004419  00                 	db	0
   515  00441A  00                 	db	0
   516  00441B  00                 	db	0
   517  00441C  00                 	db	0
   518  00441D  00                 	db	0
   519  00441E  00                 	db	0
   520  00441F  00                 	db	0
   521  004420  00                 	db	0
   522  004421  00                 	db	0
   523  004422  00                 	db	0
   524  004423  00                 	db	0
   525                           
   526                           	psect	idataBANK3
   527  004D74                     __pidataBANK3:
   528                           	opt callstack 0
   529                           
   530                           ;initializer for _MB400xx
   531  004D74  0020               	dw	32
   532  004D76  001F               	dw	31
   533  004D78  001E               	dw	30
   534  004D7A  001D               	dw	29
   535  004D7C  001C               	dw	28
   536  004D7E  001B               	dw	27
   537  004D80  001A               	dw	26
   538  004D82  0019               	dw	25
   539  004D84  0018               	dw	24
   540  004D86  0017               	dw	23
   541  004D88  0016               	dw	22
   542  004D8A  0015               	dw	21
   543  004D8C  0014               	dw	20
   544  004D8E  0013               	dw	19
   545  004D90  0012               	dw	18
   546  004D92  0011               	dw	17
   547  004D94  0010               	dw	16
   548  004D96  000F               	dw	15
   549  004D98  000E               	dw	14
   550  004D9A  000D               	dw	13
   551  004D9C  000C               	dw	12
   552  004D9E  000B               	dw	11
   553  004DA0  000A               	dw	10
   554  004DA2  0009               	dw	9
   555  004DA4  0008               	dw	8
   556  004DA6  0007               	dw	7
   557  004DA8  0006               	dw	6
   558  004DAA  0005               	dw	5
   559  004DAC  0004               	dw	4
   560  004DAE  0003               	dw	3
   561  004DB0  0002               	dw	2
   562  004DB2  0001               	dw	1
   563                           
   564                           	psect	idataBANK4
   565  004DB4                     __pidataBANK4:
   566                           	opt callstack 0
   567                           
   568                           ;initializer for _MB300xx
   569  004DB4  0001               	dw	1
   570  004DB6  0002               	dw	2
   571  004DB8  0003               	dw	3
   572  004DBA  0004               	dw	4
   573  004DBC  0005               	dw	5
   574  004DBE  0006               	dw	6
   575  004DC0  0007               	dw	7
   576  004DC2  0008               	dw	8
   577  004DC4  0009               	dw	9
   578  004DC6  000A               	dw	10
   579  004DC8  000B               	dw	11
   580  004DCA  000C               	dw	12
   581  004DCC  000D               	dw	13
   582  004DCE  000E               	dw	14
   583  004DD0  000F               	dw	15
   584  004DD2  0010               	dw	16
   585  004DD4  0011               	dw	17
   586  004DD6  0012               	dw	18
   587  004DD8  0013               	dw	19
   588  004DDA  0014               	dw	20
   589  004DDC  0015               	dw	21
   590  004DDE  0016               	dw	22
   591  004DE0  0017               	dw	23
   592  004DE2  0018               	dw	24
   593  004DE4  0019               	dw	25
   594  004DE6  001A               	dw	26
   595  004DE8  001B               	dw	27
   596  004DEA  001C               	dw	28
   597  004DEC  001D               	dw	29
   598  004DEE  001E               	dw	30
   599  004DF0  001F               	dw	31
   600  004DF2  0020               	dw	32
   601                           
   602                           	psect	nvBANK0
   603  0000FE                     __pnvBANK0:
   604                           	opt callstack 0
   605  0000FE                     _eusart1TxBufferRemaining:
   606                           	opt callstack 0
   607  0000FE                     	ds	1
   608  0000FF                     _eusart2TxBufferRemaining:
   609                           	opt callstack 0
   610  0000FF                     	ds	1
   611                           
   612                           	psect	nvBANK1
   613  0001D9                     __pnvBANK1:
   614                           	opt callstack 0
   615  0001D9                     _EUSART1_ErrorHandler:
   616                           	opt callstack 0
   617  0001D9                     	ds	2
   618  0001DB                     _EUSART1_OverrunErrorHandler:
   619                           	opt callstack 0
   620  0001DB                     	ds	2
   621  0001DD                     _EUSART1_FramingErrorHandler:
   622                           	opt callstack 0
   623  0001DD                     	ds	2
   624  0001DF                     _EUSART2_ErrorHandler:
   625                           	opt callstack 0
   626  0001DF                     	ds	2
   627  0001E1                     _EUSART2_OverrunErrorHandler:
   628                           	opt callstack 0
   629  0001E1                     	ds	2
   630  0001E3                     _EUSART2_FramingErrorHandler:
   631                           	opt callstack 0
   632  0001E3                     	ds	2
   633  0001E5                     _EUSART1_RxDefaultInterruptHandler:
   634                           	opt callstack 0
   635  0001E5                     	ds	2
   636  0001E7                     _EUSART1_TxDefaultInterruptHandler:
   637                           	opt callstack 0
   638  0001E7                     	ds	2
   639  0001E9                     _EUSART2_RxDefaultInterruptHandler:
   640                           	opt callstack 0
   641  0001E9                     	ds	2
   642  0001EB                     _EUSART2_TxDefaultInterruptHandler:
   643                           	opt callstack 0
   644  0001EB                     	ds	2
   645  0000                     _RC2REG	set	3737
   646  0000                     _RC2STAbits	set	3741
   647  0000                     _TX2REG	set	3738
   648  0000                     _TX2STAbits	set	3742
   649  0000                     _SP2BRGH	set	3740
   650  0000                     _SP2BRGL	set	3739
   651  0000                     _TX2STA	set	3742
   652  0000                     _RC2STA	set	3741
   653  0000                     _BAUD2CON	set	3743
   654  0000                     _PIR7bits	set	3793
   655  0000                     _PIR3bits	set	3789
   656  0000                     _PIE3bits	set	3781
   657  0000                     _PMD5	set	3814
   658  0000                     _PMD4	set	3813
   659  0000                     _PMD3	set	3812
   660  0000                     _PMD2	set	3811
   661  0000                     _PMD1	set	3810
   662  0000                     _PMD0	set	3809
   663  0000                     _OSCTUNE	set	3805
   664  0000                     _OSCFRQ	set	3806
   665  0000                     _OSCEN	set	3804
   666  0000                     _OSCCON3	set	3802
   667  0000                     _OSCCON1	set	3800
   668  0000                     _RX2PPS	set	3725
   669  0000                     _RC6PPS	set	3837
   670  0000                     _RB6PPS	set	3829
   671  0000                     _RX1PPS	set	3765
   672  0000                     _ADCON1bits	set	3929
   673  0000                     _ADCON2bits	set	3930
   674  0000                     _ADCON3bits	set	3931
   675  0000                     _ADACQ	set	3932
   676  0000                     _ADCLK	set	3927
   677  0000                     _ADACT	set	3926
   678  0000                     _ADREF	set	3928
   679  0000                     _ADCON3	set	3931
   680  0000                     _ADCON2	set	3930
   681  0000                     _ADCON1	set	3929
   682  0000                     _ADPRE	set	3934
   683  0000                     _ADCAP	set	3933
   684  0000                     _ADPCH	set	3935
   685  0000                     _INLVLE	set	3882
   686  0000                     _INLVLD	set	3874
   687  0000                     _INLVLC	set	3869
   688  0000                     _INLVLB	set	3861
   689  0000                     _INLVLA	set	3853
   690  0000                     _SLRCONE	set	3883
   691  0000                     _SLRCOND	set	3875
   692  0000                     _SLRCONC	set	3870
   693  0000                     _SLRCONB	set	3862
   694  0000                     _SLRCONA	set	3854
   695  0000                     _ODCOND	set	3876
   696  0000                     _ODCONC	set	3871
   697  0000                     _ODCONB	set	3863
   698  0000                     _ODCONA	set	3855
   699  0000                     _ODCONE	set	3884
   700  0000                     _WPUC	set	3872
   701  0000                     _WPUA	set	3856
   702  0000                     _WPUB	set	3864
   703  0000                     _WPUE	set	3885
   704  0000                     _WPUD	set	3877
   705  0000                     _ANSELA	set	3857
   706  0000                     _ANSELE	set	3886
   707  0000                     _ANSELB	set	3865
   708  0000                     _ANSELC	set	3873
   709  0000                     _ANSELD	set	3878
   710  0000                     _ADERRL	set	3950
   711  0000                     _ADERRH	set	3951
   712  0000                     _ADPREVL	set	3937
   713  0000                     _ADPREVH	set	3938
   714  0000                     _ADFLTRL	set	3954
   715  0000                     _ADFLTRH	set	3955
   716  0000                     _ADSTATbits	set	3941
   717  0000                     _ADACCL	set	3952
   718  0000                     _ADACCH	set	3953
   719  0000                     _ADCNT	set	3943
   720  0000                     _ADRESL	set	3939
   721  0000                     _ADRESH	set	3940
   722  0000                     _ADCON0bits	set	3936
   723  0000                     _ADCON0	set	3936
   724  0000                     _ADSTAT	set	3941
   725  0000                     _ADRPT	set	3942
   726  0000                     _ADSTPTH	set	3945
   727  0000                     _ADSTPTL	set	3944
   728  0000                     _ADUTHH	set	3949
   729  0000                     _ADUTHL	set	3948
   730  0000                     _ADLTHH	set	3947
   731  0000                     _ADLTHL	set	3946
   732  0000                     _LATDbits	set	3974
   733  0000                     _LATAbits	set	3971
   734  0000                     _RC1REG	set	3993
   735  0000                     _RC1STAbits	set	3997
   736  0000                     _TX1REG	set	3994
   737  0000                     _TX1STAbits	set	3998
   738  0000                     _SP1BRGH	set	3996
   739  0000                     _SP1BRGL	set	3995
   740  0000                     _TX1STA	set	3998
   741  0000                     _RC1STA	set	3997
   742  0000                     _BAUD1CON	set	3999
   743  0000                     _NVMDAT	set	3968
   744  0000                     _NVMADRL	set	3966
   745  0000                     _NVMADRH	set	3967
   746  0000                     _NVMCON2	set	3970
   747  0000                     _TABLAT	set	4085
   748  0000                     _TBLPTRL	set	4086
   749  0000                     _TBLPTRH	set	4087
   750  0000                     _TBLPTRU	set	4088
   751  0000                     _NVMCON1bits	set	3969
   752  0000                     _INTCONbits	set	4082
   753  0000                     _TRISD	set	3979
   754  0000                     _TRISC	set	3978
   755  0000                     _TRISB	set	3977
   756  0000                     _TRISA	set	3976
   757  0000                     _TRISE	set	3980
   758  0000                     _LATC	set	3973
   759  0000                     _LATB	set	3972
   760  0000                     _LATA	set	3971
   761  0000                     _LATD	set	3974
   762  0000                     _LATE	set	3975
   763                           
   764                           	psect	mediumconst
   765  00F302                     __pmediumconst:
   766                           	opt callstack 0
   767  00F302  00                 	db	0
   768  00F303                     STR_117:
   769                           
   770                           ; BSR set to: 0
   771  00F303  20                 	db	32
   772  00F304  20                 	db	32
   773  00F305  20                 	db	32
   774  00F306  64                 	db	100	;'d'
   775  00F307  65                 	db	101	;'e'
   776  00F308  62                 	db	98	;'b'
   777  00F309  75                 	db	117	;'u'
   778  00F30A  67                 	db	103	;'g'
   779  00F30B  20                 	db	32
   780  00F30C  2D                 	db	45
   781  00F30D  20                 	db	32
   782  00F30E  54                 	db	84	;'T'
   783  00F30F  6F                 	db	111	;'o'
   784  00F310  67                 	db	103	;'g'
   785  00F311  67                 	db	103	;'g'
   786  00F312  6C                 	db	108	;'l'
   787  00F313  65                 	db	101	;'e'
   788  00F314  73                 	db	115	;'s'
   789  00F315  20                 	db	32
   790  00F316  74                 	db	116	;'t'
   791  00F317  72                 	db	114	;'r'
   792  00F318  61                 	db	97	;'a'
   793  00F319  63                 	db	99	;'c'
   794  00F31A  65                 	db	101	;'e'
   795  00F31B  20                 	db	32
   796  00F31C  6F                 	db	111	;'o'
   797  00F31D  75                 	db	117	;'u'
   798  00F31E  74                 	db	116	;'t'
   799  00F31F  70                 	db	112	;'p'
   800  00F320  75                 	db	117	;'u'
   801  00F321  74                 	db	116	;'t'
   802  00F322  73                 	db	115	;'s'
   803  00F323  2E                 	db	46
   804  00F324  20                 	db	32
   805  00F325  53                 	db	83	;'S'
   806  00F326  6C                 	db	108	;'l'
   807  00F327  6F                 	db	111	;'o'
   808  00F328  77                 	db	119	;'w'
   809  00F329  73                 	db	115	;'s'
   810  00F32A  20                 	db	32
   811  00F32B  64                 	db	100	;'d'
   812  00F32C  6F                 	db	111	;'o'
   813  00F32D  77                 	db	119	;'w'
   814  00F32E  6E                 	db	110	;'n'
   815  00F32F  20                 	db	32
   816  00F330  74                 	db	116	;'t'
   817  00F331  69                 	db	105	;'i'
   818  00F332  6D                 	db	109	;'m'
   819  00F333  65                 	db	101	;'e'
   820  00F334  20                 	db	32
   821  00F335  64                 	db	100	;'d'
   822  00F336  65                 	db	101	;'e'
   823  00F337  76                 	db	118	;'v'
   824  00F338  69                 	db	105	;'i'
   825  00F339  63                 	db	99	;'c'
   826  00F33A  65                 	db	101	;'e'
   827  00F33B  20                 	db	32
   828  00F33C  63                 	db	99	;'c'
   829  00F33D  61                 	db	97	;'a'
   830  00F33E  6E                 	db	110	;'n'
   831  00F33F  20                 	db	32
   832  00F340  72                 	db	114	;'r'
   833  00F341  65                 	db	101	;'e'
   834  00F342  73                 	db	115	;'s'
   835  00F343  70                 	db	112	;'p'
   836  00F344  6F                 	db	111	;'o'
   837  00F345  6E                 	db	110	;'n'
   838  00F346  64                 	db	100	;'d'
   839  00F347  20                 	db	32
   840  00F348  62                 	db	98	;'b'
   841  00F349  65                 	db	101	;'e'
   842  00F34A  74                 	db	116	;'t'
   843  00F34B  77                 	db	119	;'w'
   844  00F34C  65                 	db	101	;'e'
   845  00F34D  65                 	db	101	;'e'
   846  00F34E  6E                 	db	110	;'n'
   847  00F34F  20                 	db	32
   848  00F350  63                 	db	99	;'c'
   849  00F351  6F                 	db	111	;'o'
   850  00F352  6D                 	db	109	;'m'
   851  00F353  6D                 	db	109	;'m'
   852  00F354  61                 	db	97	;'a'
   853  00F355  6E                 	db	110	;'n'
   854  00F356  64                 	db	100	;'d'
   855  00F357  73                 	db	115	;'s'
   856  00F358  2E                 	db	46
   857  00F359  20                 	db	32
   858  00F35A  44                 	db	68	;'D'
   859  00F35B  45                 	db	69	;'E'
   860  00F35C  46                 	db	70	;'F'
   861  00F35D  41                 	db	65	;'A'
   862  00F35E  55                 	db	85	;'U'
   863  00F35F  4C                 	db	76	;'L'
   864  00F360  54                 	db	84	;'T'
   865  00F361  20                 	db	32
   866  00F362  4F                 	db	79	;'O'
   867  00F363  4E                 	db	78	;'N'
   868  00F364  21                 	db	33
   869  00F365  0D                 	db	13
   870  00F366  0A                 	db	10
   871  00F367  0A                 	db	10
   872  00F368  00                 	db	0
   873  00F369                     STR_111:
   874                           
   875                           ; BSR set to: 0
   876  00F369  20                 	db	32
   877  00F36A  20                 	db	32
   878  00F36B  20                 	db	32
   879  00F36C  20                 	db	32
   880  00F36D  20                 	db	32
   881  00F36E  20                 	db	32
   882  00F36F  41                 	db	65	;'A'
   883  00F370  64                 	db	100	;'d'
   884  00F371  64                 	db	100	;'d'
   885  00F372  20                 	db	32
   886  00F373  30                 	db	48	;'0'
   887  00F374  78                 	db	120	;'x'
   888  00F375  30                 	db	48	;'0'
   889  00F376  30                 	db	48	;'0'
   890  00F377  30                 	db	48	;'0'
   891  00F378  30                 	db	48	;'0'
   892  00F379  20                 	db	32
   893  00F37A  74                 	db	116	;'t'
   894  00F37B  6F                 	db	111	;'o'
   895  00F37C  20                 	db	32
   896  00F37D  30                 	db	48	;'0'
   897  00F37E  78                 	db	120	;'x'
   898  00F37F  30                 	db	48	;'0'
   899  00F380  30                 	db	48	;'0'
   900  00F381  33                 	db	51	;'3'
   901  00F382  31                 	db	49	;'1'
   902  00F383  20                 	db	32
   903  00F384  2D                 	db	45
   904  00F385  20                 	db	32
   905  00F386  33                 	db	51	;'3'
   906  00F387  32                 	db	50	;'2'
   907  00F388  78                 	db	120	;'x'
   908  00F389  20                 	db	32
   909  00F38A  43                 	db	67	;'C'
   910  00F38B  69                 	db	105	;'i'
   911  00F38C  72                 	db	114	;'r'
   912  00F38D  63                 	db	99	;'c'
   913  00F38E  75                 	db	117	;'u'
   914  00F38F  69                 	db	105	;'i'
   915  00F390  74                 	db	116	;'t'
   916  00F391  20                 	db	32
   917  00F392  47                 	db	71	;'G'
   918  00F393  65                 	db	101	;'e'
   919  00F394  74                 	db	116	;'t'
   920  00F395  20                 	db	32
   921  00F396  53                 	db	83	;'S'
   922  00F397  74                 	db	116	;'t'
   923  00F398  61                 	db	97	;'a'
   924  00F399  74                 	db	116	;'t'
   925  00F39A  75                 	db	117	;'u'
   926  00F39B  73                 	db	115	;'s'
   927  00F39C  20                 	db	32
   928  00F39D  20                 	db	32
   929  00F39E  28                 	db	40
   930  00F39F  6C                 	db	108	;'l'
   931  00F3A0  6F                 	db	111	;'o'
   932  00F3A1  77                 	db	119	;'w'
   933  00F3A2  65                 	db	101	;'e'
   934  00F3A3  72                 	db	114	;'r'
   935  00F3A4  20                 	db	32
   936  00F3A5  38                 	db	56	;'8'
   937  00F3A6  62                 	db	98	;'b'
   938  00F3A7  69                 	db	105	;'i'
   939  00F3A8  74                 	db	116	;'t'
   940  00F3A9  73                 	db	115	;'s'
   941  00F3AA  20                 	db	32
   942  00F3AB  6F                 	db	111	;'o'
   943  00F3AC  6E                 	db	110	;'n'
   944  00F3AD  6C                 	db	108	;'l'
   945  00F3AE  79                 	db	121	;'y'
   946  00F3AF  29                 	db	41
   947  00F3B0  0D                 	db	13
   948  00F3B1  0A                 	db	10
   949  00F3B2  0A                 	db	10
   950  00F3B3  00                 	db	0
   951  00F3B4                     STR_109:
   952                           
   953                           ; BSR set to: 0
   954  00F3B4  20                 	db	32
   955  00F3B5  20                 	db	32
   956  00F3B6  20                 	db	32
   957  00F3B7  20                 	db	32
   958  00F3B8  20                 	db	32
   959  00F3B9  20                 	db	32
   960  00F3BA  41                 	db	65	;'A'
   961  00F3BB  64                 	db	100	;'d'
   962  00F3BC  64                 	db	100	;'d'
   963  00F3BD  20                 	db	32
   964  00F3BE  30                 	db	48	;'0'
   965  00F3BF  78                 	db	120	;'x'
   966  00F3C0  30                 	db	48	;'0'
   967  00F3C1  30                 	db	48	;'0'
   968  00F3C2  30                 	db	48	;'0'
   969  00F3C3  30                 	db	48	;'0'
   970  00F3C4  20                 	db	32
   971  00F3C5  74                 	db	116	;'t'
   972  00F3C6  6F                 	db	111	;'o'
   973  00F3C7  20                 	db	32
   974  00F3C8  30                 	db	48	;'0'
   975  00F3C9  78                 	db	120	;'x'
   976  00F3CA  30                 	db	48	;'0'
   977  00F3CB  30                 	db	48	;'0'
   978  00F3CC  33                 	db	51	;'3'
   979  00F3CD  31                 	db	49	;'1'
   980  00F3CE  20                 	db	32
   981  00F3CF  2D                 	db	45
   982  00F3D0  20                 	db	32
   983  00F3D1  33                 	db	51	;'3'
   984  00F3D2  32                 	db	50	;'2'
   985  00F3D3  78                 	db	120	;'x'
   986  00F3D4  20                 	db	32
   987  00F3D5  43                 	db	67	;'C'
   988  00F3D6  69                 	db	105	;'i'
   989  00F3D7  72                 	db	114	;'r'
   990  00F3D8  63                 	db	99	;'c'
   991  00F3D9  75                 	db	117	;'u'
   992  00F3DA  69                 	db	105	;'i'
   993  00F3DB  74                 	db	116	;'t'
   994  00F3DC  20                 	db	32
   995  00F3DD  53                 	db	83	;'S'
   996  00F3DE  65                 	db	101	;'e'
   997  00F3DF  74                 	db	116	;'t'
   998  00F3E0  20                 	db	32
   999  00F3E1  53                 	db	83	;'S'
  1000  00F3E2  74                 	db	116	;'t'
  1001  00F3E3  61                 	db	97	;'a'
  1002  00F3E4  74                 	db	116	;'t'
  1003  00F3E5  75                 	db	117	;'u'
  1004  00F3E6  73                 	db	115	;'s'
  1005  00F3E7  20                 	db	32
  1006  00F3E8  20                 	db	32
  1007  00F3E9  28                 	db	40
  1008  00F3EA  6C                 	db	108	;'l'
  1009  00F3EB  6F                 	db	111	;'o'
  1010  00F3EC  77                 	db	119	;'w'
  1011  00F3ED  65                 	db	101	;'e'
  1012  00F3EE  72                 	db	114	;'r'
  1013  00F3EF  20                 	db	32
  1014  00F3F0  38                 	db	56	;'8'
  1015  00F3F1  62                 	db	98	;'b'
  1016  00F3F2  69                 	db	105	;'i'
  1017  00F3F3  74                 	db	116	;'t'
  1018  00F3F4  73                 	db	115	;'s'
  1019  00F3F5  20                 	db	32
  1020  00F3F6  6F                 	db	111	;'o'
  1021  00F3F7  6E                 	db	110	;'n'
  1022  00F3F8  6C                 	db	108	;'l'
  1023  00F3F9  79                 	db	121	;'y'
  1024  00F3FA  29                 	db	41
  1025  00F3FB  0D                 	db	13
  1026  00F3FC  0A                 	db	10
  1027  00F3FD  0A                 	db	10
  1028  00F3FE  00                 	db	0
  1029  00F3FF                     STR_101:
  1030                           
  1031                           ; BSR set to: 0
  1032  00F3FF  20                 	db	32
  1033  00F400  20                 	db	32
  1034  00F401  20                 	db	32
  1035  00F402  20                 	db	32
  1036  00F403  20                 	db	32
  1037  00F404  20                 	db	32
  1038  00F405  41                 	db	65	;'A'
  1039  00F406  64                 	db	100	;'d'
  1040  00F407  64                 	db	100	;'d'
  1041  00F408  20                 	db	32
  1042  00F409  30                 	db	48	;'0'
  1043  00F40A  78                 	db	120	;'x'
  1044  00F40B  30                 	db	48	;'0'
  1045  00F40C  30                 	db	48	;'0'
  1046  00F40D  30                 	db	48	;'0'
  1047  00F40E  30                 	db	48	;'0'
  1048  00F40F  20                 	db	32
  1049  00F410  74                 	db	116	;'t'
  1050  00F411  6F                 	db	111	;'o'
  1051  00F412  20                 	db	32
  1052  00F413  30                 	db	48	;'0'
  1053  00F414  78                 	db	120	;'x'
  1054  00F415  30                 	db	48	;'0'
  1055  00F416  30                 	db	48	;'0'
  1056  00F417  33                 	db	51	;'3'
  1057  00F418  31                 	db	49	;'1'
  1058  00F419  20                 	db	32
  1059  00F41A  2D                 	db	45
  1060  00F41B  20                 	db	32
  1061  00F41C  33                 	db	51	;'3'
  1062  00F41D  32                 	db	50	;'2'
  1063  00F41E  78                 	db	120	;'x'
  1064  00F41F  20                 	db	32
  1065  00F420  43                 	db	67	;'C'
  1066  00F421  69                 	db	105	;'i'
  1067  00F422  72                 	db	114	;'r'
  1068  00F423  63                 	db	99	;'c'
  1069  00F424  75                 	db	117	;'u'
  1070  00F425  69                 	db	105	;'i'
  1071  00F426  74                 	db	116	;'t'
  1072  00F427  20                 	db	32
  1073  00F428  47                 	db	71	;'G'
  1074  00F429  65                 	db	101	;'e'
  1075  00F42A  74                 	db	116	;'t'
  1076  00F42B  20                 	db	32
  1077  00F42C  53                 	db	83	;'S'
  1078  00F42D  74                 	db	116	;'t'
  1079  00F42E  61                 	db	97	;'a'
  1080  00F42F  74                 	db	116	;'t'
  1081  00F430  75                 	db	117	;'u'
  1082  00F431  73                 	db	115	;'s'
  1083  00F432  20                 	db	32
  1084  00F433  28                 	db	40
  1085  00F434  6C                 	db	108	;'l'
  1086  00F435  6F                 	db	111	;'o'
  1087  00F436  77                 	db	119	;'w'
  1088  00F437  65                 	db	101	;'e'
  1089  00F438  72                 	db	114	;'r'
  1090  00F439  20                 	db	32
  1091  00F43A  38                 	db	56	;'8'
  1092  00F43B  62                 	db	98	;'b'
  1093  00F43C  69                 	db	105	;'i'
  1094  00F43D  74                 	db	116	;'t'
  1095  00F43E  73                 	db	115	;'s'
  1096  00F43F  20                 	db	32
  1097  00F440  6F                 	db	111	;'o'
  1098  00F441  6E                 	db	110	;'n'
  1099  00F442  6C                 	db	108	;'l'
  1100  00F443  79                 	db	121	;'y'
  1101  00F444  29                 	db	41
  1102  00F445  0D                 	db	13
  1103  00F446  0A                 	db	10
  1104  00F447  00                 	db	0
  1105  00F448                     STR_107:
  1106                           
  1107                           ; BSR set to: 0
  1108  00F448  20                 	db	32
  1109  00F449  20                 	db	32
  1110  00F44A  20                 	db	32
  1111  00F44B  20                 	db	32
  1112  00F44C  20                 	db	32
  1113  00F44D  20                 	db	32
  1114  00F44E  41                 	db	65	;'A'
  1115  00F44F  64                 	db	100	;'d'
  1116  00F450  64                 	db	100	;'d'
  1117  00F451  20                 	db	32
  1118  00F452  30                 	db	48	;'0'
  1119  00F453  78                 	db	120	;'x'
  1120  00F454  30                 	db	48	;'0'
  1121  00F455  36                 	db	54	;'6'
  1122  00F456  30                 	db	48	;'0'
  1123  00F457  30                 	db	48	;'0'
  1124  00F458  20                 	db	32
  1125  00F459  74                 	db	116	;'t'
  1126  00F45A  6F                 	db	111	;'o'
  1127  00F45B  20                 	db	32
  1128  00F45C  30                 	db	48	;'0'
  1129  00F45D  78                 	db	120	;'x'
  1130  00F45E  30                 	db	48	;'0'
  1131  00F45F  36                 	db	54	;'6'
  1132  00F460  30                 	db	48	;'0'
  1133  00F461  32                 	db	50	;'2'
  1134  00F462  20                 	db	32
  1135  00F463  2D                 	db	45
  1136  00F464  20                 	db	32
  1137  00F465  33                 	db	51	;'3'
  1138  00F466  78                 	db	120	;'x'
  1139  00F467  20                 	db	32
  1140  00F468  41                 	db	65	;'A'
  1141  00F469  6E                 	db	110	;'n'
  1142  00F46A  61                 	db	97	;'a'
  1143  00F46B  6C                 	db	108	;'l'
  1144  00F46C  6F                 	db	111	;'o'
  1145  00F46D  67                 	db	103	;'g'
  1146  00F46E  75                 	db	117	;'u'
  1147  00F46F  65                 	db	101	;'e'
  1148  00F470  20                 	db	32
  1149  00F471  49                 	db	73	;'I'
  1150  00F472  6E                 	db	110	;'n'
  1151  00F473  70                 	db	112	;'p'
  1152  00F474  75                 	db	117	;'u'
  1153  00F475  74                 	db	116	;'t'
  1154  00F476  73                 	db	115	;'s'
  1155  00F477  20                 	db	32
  1156  00F478  28                 	db	40
  1157  00F479  30                 	db	48	;'0'
  1158  00F47A  78                 	db	120	;'x'
  1159  00F47B  30                 	db	48	;'0'
  1160  00F47C  30                 	db	48	;'0'
  1161  00F47D  30                 	db	48	;'0'
  1162  00F47E  20                 	db	32
  1163  00F47F  74                 	db	116	;'t'
  1164  00F480  6F                 	db	111	;'o'
  1165  00F481  20                 	db	32
  1166  00F482  30                 	db	48	;'0'
  1167  00F483  78                 	db	120	;'x'
  1168  00F484  30                 	db	48	;'0'
  1169  00F485  33                 	db	51	;'3'
  1170  00F486  66                 	db	102	;'f'
  1171  00F487  66                 	db	102	;'f'
  1172  00F488  29                 	db	41
  1173  00F489  0D                 	db	13
  1174  00F48A  0A                 	db	10
  1175  00F48B  0A                 	db	10
  1176  00F48C  00                 	db	0
  1177  00F48D                     STR_108:
  1178                           
  1179                           ; BSR set to: 0
  1180  00F48D  20                 	db	32
  1181  00F48E  20                 	db	32
  1182  00F48F  20                 	db	32
  1183  00F490  30                 	db	48	;'0'
  1184  00F491  78                 	db	120	;'x'
  1185  00F492  31                 	db	49	;'1'
  1186  00F493  30                 	db	48	;'0'
  1187  00F494  20                 	db	32
  1188  00F495  2D                 	db	45
  1189  00F496  20                 	db	32
  1190  00F497  57                 	db	87	;'W'
  1191  00F498  72                 	db	114	;'r'
  1192  00F499  69                 	db	105	;'i'
  1193  00F49A  74                 	db	116	;'t'
  1194  00F49B  65                 	db	101	;'e'
  1195  00F49C  20                 	db	32
  1196  00F49D  4D                 	db	77	;'M'
  1197  00F49E  75                 	db	117	;'u'
  1198  00F49F  6C                 	db	108	;'l'
  1199  00F4A0  74                 	db	116	;'t'
  1200  00F4A1  69                 	db	105	;'i'
  1201  00F4A2  70                 	db	112	;'p'
  1202  00F4A3  6C                 	db	108	;'l'
  1203  00F4A4  65                 	db	101	;'e'
  1204  00F4A5  20                 	db	32
  1205  00F4A6  4F                 	db	79	;'O'
  1206  00F4A7  75                 	db	117	;'u'
  1207  00F4A8  74                 	db	116	;'t'
  1208  00F4A9  70                 	db	112	;'p'
  1209  00F4AA  75                 	db	117	;'u'
  1210  00F4AB  74                 	db	116	;'t'
  1211  00F4AC  20                 	db	32
  1212  00F4AD  48                 	db	72	;'H'
  1213  00F4AE  6F                 	db	111	;'o'
  1214  00F4AF  6C                 	db	108	;'l'
  1215  00F4B0  64                 	db	100	;'d'
  1216  00F4B1  69                 	db	105	;'i'
  1217  00F4B2  6E                 	db	110	;'n'
  1218  00F4B3  67                 	db	103	;'g'
  1219  00F4B4  20                 	db	32
  1220  00F4B5  52                 	db	82	;'R'
  1221  00F4B6  65                 	db	101	;'e'
  1222  00F4B7  67                 	db	103	;'g'
  1223  00F4B8  69                 	db	105	;'i'
  1224  00F4B9  73                 	db	115	;'s'
  1225  00F4BA  74                 	db	116	;'t'
  1226  00F4BB  65                 	db	101	;'e'
  1227  00F4BC  72                 	db	114	;'r'
  1228  00F4BD  73                 	db	115	;'s'
  1229  00F4BE  20                 	db	32
  1230  00F4BF  28                 	db	40
  1231  00F4C0  4D                 	db	77	;'M'
  1232  00F4C1  61                 	db	97	;'a'
  1233  00F4C2  78                 	db	120	;'x'
  1234  00F4C3  20                 	db	32
  1235  00F4C4  33                 	db	51	;'3'
  1236  00F4C5  32                 	db	50	;'2'
  1237  00F4C6  78                 	db	120	;'x'
  1238  00F4C7  20                 	db	32
  1239  00F4C8  31                 	db	49	;'1'
  1240  00F4C9  36                 	db	54	;'6'
  1241  00F4CA  62                 	db	98	;'b'
  1242  00F4CB  69                 	db	105	;'i'
  1243  00F4CC  74                 	db	116	;'t'
  1244  00F4CD  29                 	db	41
  1245  00F4CE  0D                 	db	13
  1246  00F4CF  0A                 	db	10
  1247  00F4D0  00                 	db	0
  1248  00F4D1                     STR_110:
  1249                           
  1250                           ; BSR set to: 0
  1251  00F4D1  20                 	db	32
  1252  00F4D2  20                 	db	32
  1253  00F4D3  20                 	db	32
  1254  00F4D4  30                 	db	48	;'0'
  1255  00F4D5  78                 	db	120	;'x'
  1256  00F4D6  30                 	db	48	;'0'
  1257  00F4D7  33                 	db	51	;'3'
  1258  00F4D8  20                 	db	32
  1259  00F4D9  2D                 	db	45
  1260  00F4DA  20                 	db	32
  1261  00F4DB  52                 	db	82	;'R'
  1262  00F4DC  65                 	db	101	;'e'
  1263  00F4DD  61                 	db	97	;'a'
  1264  00F4DE  64                 	db	100	;'d'
  1265  00F4DF  20                 	db	32
  1266  00F4E0  4D                 	db	77	;'M'
  1267  00F4E1  75                 	db	117	;'u'
  1268  00F4E2  6C                 	db	108	;'l'
  1269  00F4E3  74                 	db	116	;'t'
  1270  00F4E4  69                 	db	105	;'i'
  1271  00F4E5  70                 	db	112	;'p'
  1272  00F4E6  6C                 	db	108	;'l'
  1273  00F4E7  65                 	db	101	;'e'
  1274  00F4E8  20                 	db	32
  1275  00F4E9  4F                 	db	79	;'O'
  1276  00F4EA  75                 	db	117	;'u'
  1277  00F4EB  74                 	db	116	;'t'
  1278  00F4EC  70                 	db	112	;'p'
  1279  00F4ED  75                 	db	117	;'u'
  1280  00F4EE  74                 	db	116	;'t'
  1281  00F4EF  20                 	db	32
  1282  00F4F0  48                 	db	72	;'H'
  1283  00F4F1  6F                 	db	111	;'o'
  1284  00F4F2  6C                 	db	108	;'l'
  1285  00F4F3  64                 	db	100	;'d'
  1286  00F4F4  69                 	db	105	;'i'
  1287  00F4F5  6E                 	db	110	;'n'
  1288  00F4F6  67                 	db	103	;'g'
  1289  00F4F7  20                 	db	32
  1290  00F4F8  52                 	db	82	;'R'
  1291  00F4F9  65                 	db	101	;'e'
  1292  00F4FA  67                 	db	103	;'g'
  1293  00F4FB  69                 	db	105	;'i'
  1294  00F4FC  73                 	db	115	;'s'
  1295  00F4FD  74                 	db	116	;'t'
  1296  00F4FE  65                 	db	101	;'e'
  1297  00F4FF  72                 	db	114	;'r'
  1298  00F500  73                 	db	115	;'s'
  1299  00F501  20                 	db	32
  1300  00F502  28                 	db	40
  1301  00F503  4D                 	db	77	;'M'
  1302  00F504  61                 	db	97	;'a'
  1303  00F505  78                 	db	120	;'x'
  1304  00F506  20                 	db	32
  1305  00F507  33                 	db	51	;'3'
  1306  00F508  32                 	db	50	;'2'
  1307  00F509  78                 	db	120	;'x'
  1308  00F50A  20                 	db	32
  1309  00F50B  31                 	db	49	;'1'
  1310  00F50C  36                 	db	54	;'6'
  1311  00F50D  62                 	db	98	;'b'
  1312  00F50E  69                 	db	105	;'i'
  1313  00F50F  74                 	db	116	;'t'
  1314  00F510  29                 	db	41
  1315  00F511  0D                 	db	13
  1316  00F512  0A                 	db	10
  1317  00F513  00                 	db	0
  1318  00F514                     STR_27:
  1319                           
  1320                           ; BSR set to: 0
  1321  00F514  20                 	db	32
  1322  00F515  20                 	db	32
  1323  00F516  20                 	db	32
  1324  00F517  42                 	db	66	;'B'
  1325  00F518  79                 	db	121	;'y'
  1326  00F519  74                 	db	116	;'t'
  1327  00F51A  65                 	db	101	;'e'
  1328  00F51B  20                 	db	32
  1329  00F51C  25                 	db	37
  1330  00F51D  30                 	db	48	;'0'
  1331  00F51E  32                 	db	50	;'2'
  1332  00F51F  69                 	db	105	;'i'
  1333  00F520  3A                 	db	58	;':'
  1334  00F521  20                 	db	32
  1335  00F522  30                 	db	48	;'0'
  1336  00F523  78                 	db	120	;'x'
  1337  00F524  25                 	db	37
  1338  00F525  30                 	db	48	;'0'
  1339  00F526  32                 	db	50	;'2'
  1340  00F527  78                 	db	120	;'x'
  1341  00F528  20                 	db	32
  1342  00F529  2D                 	db	45
  1343  00F52A  20                 	db	32
  1344  00F52B  52                 	db	82	;'R'
  1345  00F52C  65                 	db	101	;'e'
  1346  00F52D  67                 	db	103	;'g'
  1347  00F52E  20                 	db	32
  1348  00F52F  25                 	db	37
  1349  00F530  69                 	db	105	;'i'
  1350  00F531  20                 	db	32
  1351  00F532  48                 	db	72	;'H'
  1352  00F533  69                 	db	105	;'i'
  1353  00F534  20                 	db	32
  1354  00F535  28                 	db	40
  1355  00F536  41                 	db	65	;'A'
  1356  00F537  64                 	db	100	;'d'
  1357  00F538  64                 	db	100	;'d'
  1358  00F539  2E                 	db	46
  1359  00F53A  20                 	db	32
  1360  00F53B  30                 	db	48	;'0'
  1361  00F53C  78                 	db	120	;'x'
  1362  00F53D  25                 	db	37
  1363  00F53E  30                 	db	48	;'0'
  1364  00F53F  32                 	db	50	;'2'
  1365  00F540  78                 	db	120	;'x'
  1366  00F541  25                 	db	37
  1367  00F542  30                 	db	48	;'0'
  1368  00F543  32                 	db	50	;'2'
  1369  00F544  78                 	db	120	;'x'
  1370  00F545  20                 	db	32
  1371  00F546  2F                 	db	47
  1372  00F547  20                 	db	32
  1373  00F548  43                 	db	67	;'C'
  1374  00F549  69                 	db	105	;'i'
  1375  00F54A  72                 	db	114	;'r'
  1376  00F54B  63                 	db	99	;'c'
  1377  00F54C  75                 	db	117	;'u'
  1378  00F54D  69                 	db	105	;'i'
  1379  00F54E  74                 	db	116	;'t'
  1380  00F54F  20                 	db	32
  1381  00F550  25                 	db	37
  1382  00F551  69                 	db	105	;'i'
  1383  00F552  29                 	db	41
  1384  00F553  0D                 	db	13
  1385  00F554  0A                 	db	10
  1386  00F555  00                 	db	0
  1387  00F556                     STR_123:
  1388                           
  1389                           ; BSR set to: 0
  1390  00F556  43                 	db	67	;'C'
  1391  00F557  6C                 	db	108	;'l'
  1392  00F558  65                 	db	101	;'e'
  1393  00F559  61                 	db	97	;'a'
  1394  00F55A  72                 	db	114	;'r'
  1395  00F55B  69                 	db	105	;'i'
  1396  00F55C  6E                 	db	110	;'n'
  1397  00F55D  67                 	db	103	;'g'
  1398  00F55E  20                 	db	32
  1399  00F55F  45                 	db	69	;'E'
  1400  00F560  45                 	db	69	;'E'
  1401  00F561  50                 	db	80	;'P'
  1402  00F562  52                 	db	82	;'R'
  1403  00F563  4F                 	db	79	;'O'
  1404  00F564  4D                 	db	77	;'M'
  1405  00F565  20                 	db	32
  1406  00F566  66                 	db	102	;'f'
  1407  00F567  72                 	db	114	;'r'
  1408  00F568  6F                 	db	111	;'o'
  1409  00F569  6D                 	db	109	;'m'
  1410  00F56A  20                 	db	32
  1411  00F56B  41                 	db	65	;'A'
  1412  00F56C  64                 	db	100	;'d'
  1413  00F56D  64                 	db	100	;'d'
  1414  00F56E  72                 	db	114	;'r'
  1415  00F56F  65                 	db	101	;'e'
  1416  00F570  73                 	db	115	;'s'
  1417  00F571  73                 	db	115	;'s'
  1418  00F572  3A                 	db	58	;':'
  1419  00F573  20                 	db	32
  1420  00F574  30                 	db	48	;'0'
  1421  00F575  78                 	db	120	;'x'
  1422  00F576  25                 	db	37
  1423  00F577  30                 	db	48	;'0'
  1424  00F578  34                 	db	52	;'4'
  1425  00F579  78                 	db	120	;'x'
  1426  00F57A  20                 	db	32
  1427  00F57B  66                 	db	102	;'f'
  1428  00F57C  6F                 	db	111	;'o'
  1429  00F57D  72                 	db	114	;'r'
  1430  00F57E  20                 	db	32
  1431  00F57F  6E                 	db	110	;'n'
  1432  00F580  75                 	db	117	;'u'
  1433  00F581  6D                 	db	109	;'m'
  1434  00F582  20                 	db	32
  1435  00F583  62                 	db	98	;'b'
  1436  00F584  79                 	db	121	;'y'
  1437  00F585  74                 	db	116	;'t'
  1438  00F586  65                 	db	101	;'e'
  1439  00F587  73                 	db	115	;'s'
  1440  00F588  3A                 	db	58	;':'
  1441  00F589  20                 	db	32
  1442  00F58A  25                 	db	37
  1443  00F58B  69                 	db	105	;'i'
  1444  00F58C  20                 	db	32
  1445  00F58D  0D                 	db	13
  1446  00F58E  0A                 	db	10
  1447  00F58F  00                 	db	0
  1448  00F590                     STR_21:
  1449                           
  1450                           ; BSR set to: 0
  1451  00F590  20                 	db	32
  1452  00F591  20                 	db	32
  1453  00F592  20                 	db	32
  1454  00F593  42                 	db	66	;'B'
  1455  00F594  79                 	db	121	;'y'
  1456  00F595  74                 	db	116	;'t'
  1457  00F596  65                 	db	101	;'e'
  1458  00F597  20                 	db	32
  1459  00F598  30                 	db	48	;'0'
  1460  00F599  31                 	db	49	;'1'
  1461  00F59A  3A                 	db	58	;':'
  1462  00F59B  20                 	db	32
  1463  00F59C  30                 	db	48	;'0'
  1464  00F59D  78                 	db	120	;'x'
  1465  00F59E  25                 	db	37
  1466  00F59F  30                 	db	48	;'0'
  1467  00F5A0  32                 	db	50	;'2'
  1468  00F5A1  78                 	db	120	;'x'
  1469  00F5A2  20                 	db	32
  1470  00F5A3  2D                 	db	45
  1471  00F5A4  20                 	db	32
  1472  00F5A5  46                 	db	70	;'F'
  1473  00F5A6  75                 	db	117	;'u'
  1474  00F5A7  6E                 	db	110	;'n'
  1475  00F5A8  63                 	db	99	;'c'
  1476  00F5A9  74                 	db	116	;'t'
  1477  00F5AA  69                 	db	105	;'i'
  1478  00F5AB  6F                 	db	111	;'o'
  1479  00F5AC  6E                 	db	110	;'n'
  1480  00F5AD  20                 	db	32
  1481  00F5AE  43                 	db	67	;'C'
  1482  00F5AF  6F                 	db	111	;'o'
  1483  00F5B0  64                 	db	100	;'d'
  1484  00F5B1  65                 	db	101	;'e'
  1485  00F5B2  20                 	db	32
  1486  00F5B3  28                 	db	40
  1487  00F5B4  57                 	db	87	;'W'
  1488  00F5B5  72                 	db	114	;'r'
  1489  00F5B6  69                 	db	105	;'i'
  1490  00F5B7  74                 	db	116	;'t'
  1491  00F5B8  65                 	db	101	;'e'
  1492  00F5B9  20                 	db	32
  1493  00F5BA  4D                 	db	77	;'M'
  1494  00F5BB  75                 	db	117	;'u'
  1495  00F5BC  6C                 	db	108	;'l'
  1496  00F5BD  74                 	db	116	;'t'
  1497  00F5BE  69                 	db	105	;'i'
  1498  00F5BF  20                 	db	32
  1499  00F5C0  52                 	db	82	;'R'
  1500  00F5C1  65                 	db	101	;'e'
  1501  00F5C2  67                 	db	103	;'g'
  1502  00F5C3  29                 	db	41
  1503  00F5C4  0D                 	db	13
  1504  00F5C5  0A                 	db	10
  1505  00F5C6  00                 	db	0
  1506  00F5C7                     STR_106:
  1507                           
  1508                           ; BSR set to: 0
  1509  00F5C7  20                 	db	32
  1510  00F5C8  20                 	db	32
  1511  00F5C9  20                 	db	32
  1512  00F5CA  20                 	db	32
  1513  00F5CB  20                 	db	32
  1514  00F5CC  20                 	db	32
  1515  00F5CD  41                 	db	65	;'A'
  1516  00F5CE  64                 	db	100	;'d'
  1517  00F5CF  64                 	db	100	;'d'
  1518  00F5D0  20                 	db	32
  1519  00F5D1  30                 	db	48	;'0'
  1520  00F5D2  78                 	db	120	;'x'
  1521  00F5D3  30                 	db	48	;'0'
  1522  00F5D4  35                 	db	53	;'5'
  1523  00F5D5  30                 	db	48	;'0'
  1524  00F5D6  30                 	db	48	;'0'
  1525  00F5D7  20                 	db	32
  1526  00F5D8  74                 	db	116	;'t'
  1527  00F5D9  6F                 	db	111	;'o'
  1528  00F5DA  20                 	db	32
  1529  00F5DB  30                 	db	48	;'0'
  1530  00F5DC  78                 	db	120	;'x'
  1531  00F5DD  30                 	db	48	;'0'
  1532  00F5DE  35                 	db	53	;'5'
  1533  00F5DF  30                 	db	48	;'0'
  1534  00F5E0  34                 	db	52	;'4'
  1535  00F5E1  20                 	db	32
  1536  00F5E2  2D                 	db	45
  1537  00F5E3  20                 	db	32
  1538  00F5E4  43                 	db	67	;'C'
  1539  00F5E5  6F                 	db	111	;'o'
  1540  00F5E6  6D                 	db	109	;'m'
  1541  00F5E7  70                 	db	112	;'p'
  1542  00F5E8  69                 	db	105	;'i'
  1543  00F5E9  6C                 	db	108	;'l'
  1544  00F5EA  65                 	db	101	;'e'
  1545  00F5EB  20                 	db	32
  1546  00F5EC  54                 	db	84	;'T'
  1547  00F5ED  69                 	db	105	;'i'
  1548  00F5EE  6D                 	db	109	;'m'
  1549  00F5EF  65                 	db	101	;'e'
  1550  00F5F0  20                 	db	32
  1551  00F5F1  2D                 	db	45
  1552  00F5F2  20                 	db	32
  1553  00F5F3  28                 	db	40
  1554  00F5F4  41                 	db	65	;'A'
  1555  00F5F5  53                 	db	83	;'S'
  1556  00F5F6  43                 	db	67	;'C'
  1557  00F5F7  49                 	db	73	;'I'
  1558  00F5F8  49                 	db	73	;'I'
  1559  00F5F9  29                 	db	41
  1560  00F5FA  0D                 	db	13
  1561  00F5FB  0A                 	db	10
  1562  00F5FC  00                 	db	0
  1563  00F5FD                     STR_9:
  1564                           
  1565                           ; BSR set to: 0
  1566  00F5FD  43                 	db	67	;'C'
  1567  00F5FE  6F                 	db	111	;'o'
  1568  00F5FF  6D                 	db	109	;'m'
  1569  00F600  70                 	db	112	;'p'
  1570  00F601  6C                 	db	108	;'l'
  1571  00F602  65                 	db	101	;'e'
  1572  00F603  74                 	db	116	;'t'
  1573  00F604  65                 	db	101	;'e'
  1574  00F605  64                 	db	100	;'d'
  1575  00F606  20                 	db	32
  1576  00F607  41                 	db	65	;'A'
  1577  00F608  64                 	db	100	;'d'
  1578  00F609  64                 	db	100	;'d'
  1579  00F60A  69                 	db	105	;'i'
  1580  00F60B  6E                 	db	110	;'n'
  1581  00F60C  67                 	db	103	;'g'
  1582  00F60D  20                 	db	32
  1583  00F60E  72                 	db	114	;'r'
  1584  00F60F  78                 	db	120	;'x'
  1585  00F610  44                 	db	68	;'D'
  1586  00F611  61                 	db	97	;'a'
  1587  00F612  74                 	db	116	;'t'
  1588  00F613  61                 	db	97	;'a'
  1589  00F614  20                 	db	32
  1590  00F615  42                 	db	66	;'B'
  1591  00F616  75                 	db	117	;'u'
  1592  00F617  66                 	db	102	;'f'
  1593  00F618  66                 	db	102	;'f'
  1594  00F619  65                 	db	101	;'e'
  1595  00F61A  72                 	db	114	;'r'
  1596  00F61B  20                 	db	32
  1597  00F61C  74                 	db	116	;'t'
  1598  00F61D  6F                 	db	111	;'o'
  1599  00F61E  20                 	db	32
  1600  00F61F  4D                 	db	77	;'M'
  1601  00F620  6F                 	db	111	;'o'
  1602  00F621  64                 	db	100	;'d'
  1603  00F622  62                 	db	98	;'b'
  1604  00F623  75                 	db	117	;'u'
  1605  00F624  73                 	db	115	;'s'
  1606  00F625  44                 	db	68	;'D'
  1607  00F626  61                 	db	97	;'a'
  1608  00F627  74                 	db	116	;'t'
  1609  00F628  61                 	db	97	;'a'
  1610  00F629  20                 	db	32
  1611  00F62A  41                 	db	65	;'A'
  1612  00F62B  72                 	db	114	;'r'
  1613  00F62C  72                 	db	114	;'r'
  1614  00F62D  61                 	db	97	;'a'
  1615  00F62E  79                 	db	121	;'y'
  1616  00F62F  0D                 	db	13
  1617  00F630  0A                 	db	10
  1618  00F631  0A                 	db	10
  1619  00F632  00                 	db	0
  1620  00F633                     STR_13:
  1621                           
  1622                           ; BSR set to: 0
  1623  00F633  20                 	db	32
  1624  00F634  20                 	db	32
  1625  00F635  20                 	db	32
  1626  00F636  42                 	db	66	;'B'
  1627  00F637  79                 	db	121	;'y'
  1628  00F638  74                 	db	116	;'t'
  1629  00F639  65                 	db	101	;'e'
  1630  00F63A  20                 	db	32
  1631  00F63B  30                 	db	48	;'0'
  1632  00F63C  31                 	db	49	;'1'
  1633  00F63D  3A                 	db	58	;':'
  1634  00F63E  20                 	db	32
  1635  00F63F  30                 	db	48	;'0'
  1636  00F640  78                 	db	120	;'x'
  1637  00F641  25                 	db	37
  1638  00F642  30                 	db	48	;'0'
  1639  00F643  32                 	db	50	;'2'
  1640  00F644  78                 	db	120	;'x'
  1641  00F645  20                 	db	32
  1642  00F646  2D                 	db	45
  1643  00F647  20                 	db	32
  1644  00F648  46                 	db	70	;'F'
  1645  00F649  75                 	db	117	;'u'
  1646  00F64A  6E                 	db	110	;'n'
  1647  00F64B  63                 	db	99	;'c'
  1648  00F64C  74                 	db	116	;'t'
  1649  00F64D  69                 	db	105	;'i'
  1650  00F64E  6F                 	db	111	;'o'
  1651  00F64F  6E                 	db	110	;'n'
  1652  00F650  20                 	db	32
  1653  00F651  43                 	db	67	;'C'
  1654  00F652  6F                 	db	111	;'o'
  1655  00F653  64                 	db	100	;'d'
  1656  00F654  65                 	db	101	;'e'
  1657  00F655  20                 	db	32
  1658  00F656  28                 	db	40
  1659  00F657  52                 	db	82	;'R'
  1660  00F658  65                 	db	101	;'e'
  1661  00F659  61                 	db	97	;'a'
  1662  00F65A  64                 	db	100	;'d'
  1663  00F65B  20                 	db	32
  1664  00F65C  4D                 	db	77	;'M'
  1665  00F65D  75                 	db	117	;'u'
  1666  00F65E  6C                 	db	108	;'l'
  1667  00F65F  74                 	db	116	;'t'
  1668  00F660  69                 	db	105	;'i'
  1669  00F661  20                 	db	32
  1670  00F662  52                 	db	82	;'R'
  1671  00F663  65                 	db	101	;'e'
  1672  00F664  67                 	db	103	;'g'
  1673  00F665  29                 	db	41
  1674  00F666  0D                 	db	13
  1675  00F667  0A                 	db	10
  1676  00F668  00                 	db	0
  1677  00F669                     STR_63:
  1678                           
  1679                           ; BSR set to: 0
  1680  00F669  20                 	db	32
  1681  00F66A  20                 	db	32
  1682  00F66B  20                 	db	32
  1683  00F66C  42                 	db	66	;'B'
  1684  00F66D  79                 	db	121	;'y'
  1685  00F66E  74                 	db	116	;'t'
  1686  00F66F  65                 	db	101	;'e'
  1687  00F670  20                 	db	32
  1688  00F671  25                 	db	37
  1689  00F672  30                 	db	48	;'0'
  1690  00F673  32                 	db	50	;'2'
  1691  00F674  69                 	db	105	;'i'
  1692  00F675  3A                 	db	58	;':'
  1693  00F676  20                 	db	32
  1694  00F677  30                 	db	48	;'0'
  1695  00F678  78                 	db	120	;'x'
  1696  00F679  25                 	db	37
  1697  00F67A  30                 	db	48	;'0'
  1698  00F67B  32                 	db	50	;'2'
  1699  00F67C  78                 	db	120	;'x'
  1700  00F67D  20                 	db	32
  1701  00F67E  2D                 	db	45
  1702  00F67F  20                 	db	32
  1703  00F680  52                 	db	82	;'R'
  1704  00F681  65                 	db	101	;'e'
  1705  00F682  67                 	db	103	;'g'
  1706  00F683  20                 	db	32
  1707  00F684  25                 	db	37
  1708  00F685  69                 	db	105	;'i'
  1709  00F686  20                 	db	32
  1710  00F687  48                 	db	72	;'H'
  1711  00F688  69                 	db	105	;'i'
  1712  00F689  20                 	db	32
  1713  00F68A  28                 	db	40
  1714  00F68B  41                 	db	65	;'A'
  1715  00F68C  64                 	db	100	;'d'
  1716  00F68D  64                 	db	100	;'d'
  1717  00F68E  2E                 	db	46
  1718  00F68F  20                 	db	32
  1719  00F690  30                 	db	48	;'0'
  1720  00F691  78                 	db	120	;'x'
  1721  00F692  25                 	db	37
  1722  00F693  30                 	db	48	;'0'
  1723  00F694  32                 	db	50	;'2'
  1724  00F695  78                 	db	120	;'x'
  1725  00F696  20                 	db	32
  1726  00F697  25                 	db	37
  1727  00F698  30                 	db	48	;'0'
  1728  00F699  32                 	db	50	;'2'
  1729  00F69A  78                 	db	120	;'x'
  1730  00F69B  29                 	db	41
  1731  00F69C  0D                 	db	13
  1732  00F69D  0A                 	db	10
  1733  00F69E  00                 	db	0
  1734  00F69F                     STR_58:
  1735                           
  1736                           ; BSR set to: 0
  1737  00F69F  52                 	db	82	;'R'
  1738  00F6A0  65                 	db	101	;'e'
  1739  00F6A1  71                 	db	113	;'q'
  1740  00F6A2  75                 	db	117	;'u'
  1741  00F6A3  65                 	db	101	;'e'
  1742  00F6A4  73                 	db	115	;'s'
  1743  00F6A5  74                 	db	116	;'t'
  1744  00F6A6  65                 	db	101	;'e'
  1745  00F6A7  64                 	db	100	;'d'
  1746  00F6A8  20                 	db	32
  1747  00F6A9  72                 	db	114	;'r'
  1748  00F6AA  65                 	db	101	;'e'
  1749  00F6AB  67                 	db	103	;'g'
  1750  00F6AC  69                 	db	105	;'i'
  1751  00F6AD  73                 	db	115	;'s'
  1752  00F6AE  74                 	db	116	;'t'
  1753  00F6AF  65                 	db	101	;'e'
  1754  00F6B0  72                 	db	114	;'r'
  1755  00F6B1  73                 	db	115	;'s'
  1756  00F6B2  20                 	db	32
  1757  00F6B3  6F                 	db	111	;'o'
  1758  00F6B4  75                 	db	117	;'u'
  1759  00F6B5  74                 	db	116	;'t'
  1760  00F6B6  20                 	db	32
  1761  00F6B7  6F                 	db	111	;'o'
  1762  00F6B8  66                 	db	102	;'f'
  1763  00F6B9  20                 	db	32
  1764  00F6BA  72                 	db	114	;'r'
  1765  00F6BB  61                 	db	97	;'a'
  1766  00F6BC  6E                 	db	110	;'n'
  1767  00F6BD  67                 	db	103	;'g'
  1768  00F6BE  65                 	db	101	;'e'
  1769  00F6BF  2E                 	db	46
  1770  00F6C0  20                 	db	32
  1771  00F6C1  20                 	db	32
  1772  00F6C2  30                 	db	48	;'0'
  1773  00F6C3  78                 	db	120	;'x'
  1774  00F6C4  30                 	db	48	;'0'
  1775  00F6C5  30                 	db	48	;'0'
  1776  00F6C6  30                 	db	48	;'0'
  1777  00F6C7  30                 	db	48	;'0'
  1778  00F6C8  20                 	db	32
  1779  00F6C9  74                 	db	116	;'t'
  1780  00F6CA  6F                 	db	111	;'o'
  1781  00F6CB  20                 	db	32
  1782  00F6CC  30                 	db	48	;'0'
  1783  00F6CD  78                 	db	120	;'x'
  1784  00F6CE  30                 	db	48	;'0'
  1785  00F6CF  32                 	db	50	;'2'
  1786  00F6D0  30                 	db	48	;'0'
  1787  00F6D1  2E                 	db	46
  1788  00F6D2  0D                 	db	13
  1789  00F6D3  0A                 	db	10
  1790  00F6D4  00                 	db	0
  1791  00F6D5                     STR_104:
  1792                           
  1793                           ; BSR set to: 0
  1794  00F6D5  20                 	db	32
  1795  00F6D6  20                 	db	32
  1796  00F6D7  20                 	db	32
  1797  00F6D8  20                 	db	32
  1798  00F6D9  20                 	db	32
  1799  00F6DA  20                 	db	32
  1800  00F6DB  41                 	db	65	;'A'
  1801  00F6DC  64                 	db	100	;'d'
  1802  00F6DD  64                 	db	100	;'d'
  1803  00F6DE  20                 	db	32
  1804  00F6DF  30                 	db	48	;'0'
  1805  00F6E0  78                 	db	120	;'x'
  1806  00F6E1  30                 	db	48	;'0'
  1807  00F6E2  33                 	db	51	;'3'
  1808  00F6E3  30                 	db	48	;'0'
  1809  00F6E4  30                 	db	48	;'0'
  1810  00F6E5  20                 	db	32
  1811  00F6E6  74                 	db	116	;'t'
  1812  00F6E7  6F                 	db	111	;'o'
  1813  00F6E8  20                 	db	32
  1814  00F6E9  30                 	db	48	;'0'
  1815  00F6EA  78                 	db	120	;'x'
  1816  00F6EB  30                 	db	48	;'0'
  1817  00F6EC  33                 	db	51	;'3'
  1818  00F6ED  30                 	db	48	;'0'
  1819  00F6EE  34                 	db	52	;'4'
  1820  00F6EF  20                 	db	32
  1821  00F6F0  2D                 	db	45
  1822  00F6F1  20                 	db	32
  1823  00F6F2  53                 	db	83	;'S'
  1824  00F6F3  65                 	db	101	;'e'
  1825  00F6F4  72                 	db	114	;'r'
  1826  00F6F5  69                 	db	105	;'i'
  1827  00F6F6  61                 	db	97	;'a'
  1828  00F6F7  6C                 	db	108	;'l'
  1829  00F6F8  20                 	db	32
  1830  00F6F9  4E                 	db	78	;'N'
  1831  00F6FA  75                 	db	117	;'u'
  1832  00F6FB  6D                 	db	109	;'m'
  1833  00F6FC  62                 	db	98	;'b'
  1834  00F6FD  65                 	db	101	;'e'
  1835  00F6FE  72                 	db	114	;'r'
  1836  00F6FF  20                 	db	32
  1837  00F700  28                 	db	40
  1838  00F701  41                 	db	65	;'A'
  1839  00F702  53                 	db	83	;'S'
  1840  00F703  43                 	db	67	;'C'
  1841  00F704  49                 	db	73	;'I'
  1842  00F705  49                 	db	73	;'I'
  1843  00F706  29                 	db	41
  1844  00F707  0D                 	db	13
  1845  00F708  0A                 	db	10
  1846  00F709  00                 	db	0
  1847  00F70A                     STR_105:
  1848                           
  1849                           ; BSR set to: 0
  1850  00F70A  20                 	db	32
  1851  00F70B  20                 	db	32
  1852  00F70C  20                 	db	32
  1853  00F70D  20                 	db	32
  1854  00F70E  20                 	db	32
  1855  00F70F  20                 	db	32
  1856  00F710  41                 	db	65	;'A'
  1857  00F711  64                 	db	100	;'d'
  1858  00F712  64                 	db	100	;'d'
  1859  00F713  20                 	db	32
  1860  00F714  30                 	db	48	;'0'
  1861  00F715  78                 	db	120	;'x'
  1862  00F716  30                 	db	48	;'0'
  1863  00F717  34                 	db	52	;'4'
  1864  00F718  30                 	db	48	;'0'
  1865  00F719  30                 	db	48	;'0'
  1866  00F71A  20                 	db	32
  1867  00F71B  74                 	db	116	;'t'
  1868  00F71C  6F                 	db	111	;'o'
  1869  00F71D  20                 	db	32
  1870  00F71E  30                 	db	48	;'0'
  1871  00F71F  78                 	db	120	;'x'
  1872  00F720  30                 	db	48	;'0'
  1873  00F721  34                 	db	52	;'4'
  1874  00F722  30                 	db	48	;'0'
  1875  00F723  35                 	db	53	;'5'
  1876  00F724  20                 	db	32
  1877  00F725  2D                 	db	45
  1878  00F726  20                 	db	32
  1879  00F727  43                 	db	67	;'C'
  1880  00F728  6F                 	db	111	;'o'
  1881  00F729  6D                 	db	109	;'m'
  1882  00F72A  70                 	db	112	;'p'
  1883  00F72B  69                 	db	105	;'i'
  1884  00F72C  6C                 	db	108	;'l'
  1885  00F72D  65                 	db	101	;'e'
  1886  00F72E  20                 	db	32
  1887  00F72F  44                 	db	68	;'D'
  1888  00F730  61                 	db	97	;'a'
  1889  00F731  74                 	db	116	;'t'
  1890  00F732  65                 	db	101	;'e'
  1891  00F733  20                 	db	32
  1892  00F734  28                 	db	40
  1893  00F735  41                 	db	65	;'A'
  1894  00F736  53                 	db	83	;'S'
  1895  00F737  43                 	db	67	;'C'
  1896  00F738  49                 	db	73	;'I'
  1897  00F739  49                 	db	73	;'I'
  1898  00F73A  29                 	db	41
  1899  00F73B  0D                 	db	13
  1900  00F73C  0A                 	db	10
  1901  00F73D  00                 	db	0
  1902  00F73E                     STR_34:
  1903                           
  1904                           ; BSR set to: 0
  1905  00F73E  52                 	db	82	;'R'
  1906  00F73F  65                 	db	101	;'e'
  1907  00F740  67                 	db	103	;'g'
  1908  00F741  69                 	db	105	;'i'
  1909  00F742  73                 	db	115	;'s'
  1910  00F743  74                 	db	116	;'t'
  1911  00F744  65                 	db	101	;'e'
  1912  00F745  72                 	db	114	;'r'
  1913  00F746  73                 	db	115	;'s'
  1914  00F747  20                 	db	32
  1915  00F748  6F                 	db	111	;'o'
  1916  00F749  75                 	db	117	;'u'
  1917  00F74A  74                 	db	116	;'t'
  1918  00F74B  20                 	db	32
  1919  00F74C  6F                 	db	111	;'o'
  1920  00F74D  66                 	db	102	;'f'
  1921  00F74E  20                 	db	32
  1922  00F74F  72                 	db	114	;'r'
  1923  00F750  61                 	db	97	;'a'
  1924  00F751  6E                 	db	110	;'n'
  1925  00F752  67                 	db	103	;'g'
  1926  00F753  65                 	db	101	;'e'
  1927  00F754  2E                 	db	46
  1928  00F755  0D                 	db	13
  1929  00F756  0A                 	db	10
  1930  00F757  56                 	db	86	;'V'
  1931  00F758  61                 	db	97	;'a'
  1932  00F759  6C                 	db	108	;'l'
  1933  00F75A  69                 	db	105	;'i'
  1934  00F75B  64                 	db	100	;'d'
  1935  00F75C  3A                 	db	58	;':'
  1936  00F75D  20                 	db	32
  1937  00F75E  30                 	db	48	;'0'
  1938  00F75F  78                 	db	120	;'x'
  1939  00F760  30                 	db	48	;'0'
  1940  00F761  30                 	db	48	;'0'
  1941  00F762  30                 	db	48	;'0'
  1942  00F763  30                 	db	48	;'0'
  1943  00F764  20                 	db	32
  1944  00F765  74                 	db	116	;'t'
  1945  00F766  6F                 	db	111	;'o'
  1946  00F767  20                 	db	32
  1947  00F768  30                 	db	48	;'0'
  1948  00F769  78                 	db	120	;'x'
  1949  00F76A  30                 	db	48	;'0'
  1950  00F76B  30                 	db	48	;'0'
  1951  00F76C  33                 	db	51	;'3'
  1952  00F76D  31                 	db	49	;'1'
  1953  00F76E  2E                 	db	46
  1954  00F76F  0D                 	db	13
  1955  00F770  0A                 	db	10
  1956  00F771  00                 	db	0
  1957  00F772                     STR_55:
  1958                           
  1959                           ; BSR set to: 0
  1960  00F772  52                 	db	82	;'R'
  1961  00F773  65                 	db	101	;'e'
  1962  00F774  67                 	db	103	;'g'
  1963  00F775  69                 	db	105	;'i'
  1964  00F776  73                 	db	115	;'s'
  1965  00F777  74                 	db	116	;'t'
  1966  00F778  65                 	db	101	;'e'
  1967  00F779  72                 	db	114	;'r'
  1968  00F77A  73                 	db	115	;'s'
  1969  00F77B  20                 	db	32
  1970  00F77C  6F                 	db	111	;'o'
  1971  00F77D  75                 	db	117	;'u'
  1972  00F77E  74                 	db	116	;'t'
  1973  00F77F  20                 	db	32
  1974  00F780  6F                 	db	111	;'o'
  1975  00F781  66                 	db	102	;'f'
  1976  00F782  20                 	db	32
  1977  00F783  72                 	db	114	;'r'
  1978  00F784  61                 	db	97	;'a'
  1979  00F785  6E                 	db	110	;'n'
  1980  00F786  67                 	db	103	;'g'
  1981  00F787  65                 	db	101	;'e'
  1982  00F788  2E                 	db	46
  1983  00F789  0D                 	db	13
  1984  00F78A  0A                 	db	10
  1985  00F78B  56                 	db	86	;'V'
  1986  00F78C  61                 	db	97	;'a'
  1987  00F78D  6C                 	db	108	;'l'
  1988  00F78E  69                 	db	105	;'i'
  1989  00F78F  64                 	db	100	;'d'
  1990  00F790  3A                 	db	58	;':'
  1991  00F791  20                 	db	32
  1992  00F792  30                 	db	48	;'0'
  1993  00F793  78                 	db	120	;'x'
  1994  00F794  30                 	db	48	;'0'
  1995  00F795  36                 	db	54	;'6'
  1996  00F796  30                 	db	48	;'0'
  1997  00F797  30                 	db	48	;'0'
  1998  00F798  20                 	db	32
  1999  00F799  74                 	db	116	;'t'
  2000  00F79A  6F                 	db	111	;'o'
  2001  00F79B  20                 	db	32
  2002  00F79C  30                 	db	48	;'0'
  2003  00F79D  78                 	db	120	;'x'
  2004  00F79E  30                 	db	48	;'0'
  2005  00F79F  36                 	db	54	;'6'
  2006  00F7A0  30                 	db	48	;'0'
  2007  00F7A1  32                 	db	50	;'2'
  2008  00F7A2  2E                 	db	46
  2009  00F7A3  0D                 	db	13
  2010  00F7A4  0A                 	db	10
  2011  00F7A5  00                 	db	0
  2012  00F7A6                     STR_52:
  2013                           
  2014                           ; BSR set to: 0
  2015  00F7A6  52                 	db	82	;'R'
  2016  00F7A7  65                 	db	101	;'e'
  2017  00F7A8  67                 	db	103	;'g'
  2018  00F7A9  69                 	db	105	;'i'
  2019  00F7AA  73                 	db	115	;'s'
  2020  00F7AB  74                 	db	116	;'t'
  2021  00F7AC  65                 	db	101	;'e'
  2022  00F7AD  72                 	db	114	;'r'
  2023  00F7AE  73                 	db	115	;'s'
  2024  00F7AF  20                 	db	32
  2025  00F7B0  6F                 	db	111	;'o'
  2026  00F7B1  75                 	db	117	;'u'
  2027  00F7B2  74                 	db	116	;'t'
  2028  00F7B3  20                 	db	32
  2029  00F7B4  6F                 	db	111	;'o'
  2030  00F7B5  66                 	db	102	;'f'
  2031  00F7B6  20                 	db	32
  2032  00F7B7  72                 	db	114	;'r'
  2033  00F7B8  61                 	db	97	;'a'
  2034  00F7B9  6E                 	db	110	;'n'
  2035  00F7BA  67                 	db	103	;'g'
  2036  00F7BB  65                 	db	101	;'e'
  2037  00F7BC  2E                 	db	46
  2038  00F7BD  0D                 	db	13
  2039  00F7BE  0A                 	db	10
  2040  00F7BF  56                 	db	86	;'V'
  2041  00F7C0  61                 	db	97	;'a'
  2042  00F7C1  6C                 	db	108	;'l'
  2043  00F7C2  69                 	db	105	;'i'
  2044  00F7C3  64                 	db	100	;'d'
  2045  00F7C4  3A                 	db	58	;':'
  2046  00F7C5  20                 	db	32
  2047  00F7C6  30                 	db	48	;'0'
  2048  00F7C7  78                 	db	120	;'x'
  2049  00F7C8  30                 	db	48	;'0'
  2050  00F7C9  35                 	db	53	;'5'
  2051  00F7CA  30                 	db	48	;'0'
  2052  00F7CB  30                 	db	48	;'0'
  2053  00F7CC  20                 	db	32
  2054  00F7CD  74                 	db	116	;'t'
  2055  00F7CE  6F                 	db	111	;'o'
  2056  00F7CF  20                 	db	32
  2057  00F7D0  30                 	db	48	;'0'
  2058  00F7D1  78                 	db	120	;'x'
  2059  00F7D2  30                 	db	48	;'0'
  2060  00F7D3  35                 	db	53	;'5'
  2061  00F7D4  30                 	db	48	;'0'
  2062  00F7D5  33                 	db	51	;'3'
  2063  00F7D6  2E                 	db	46
  2064  00F7D7  0D                 	db	13
  2065  00F7D8  0A                 	db	10
  2066  00F7D9  00                 	db	0
  2067  00F7DA                     STR_46:
  2068                           
  2069                           ; BSR set to: 0
  2070  00F7DA  52                 	db	82	;'R'
  2071  00F7DB  65                 	db	101	;'e'
  2072  00F7DC  67                 	db	103	;'g'
  2073  00F7DD  69                 	db	105	;'i'
  2074  00F7DE  73                 	db	115	;'s'
  2075  00F7DF  74                 	db	116	;'t'
  2076  00F7E0  65                 	db	101	;'e'
  2077  00F7E1  72                 	db	114	;'r'
  2078  00F7E2  73                 	db	115	;'s'
  2079  00F7E3  20                 	db	32
  2080  00F7E4  6F                 	db	111	;'o'
  2081  00F7E5  75                 	db	117	;'u'
  2082  00F7E6  74                 	db	116	;'t'
  2083  00F7E7  20                 	db	32
  2084  00F7E8  6F                 	db	111	;'o'
  2085  00F7E9  66                 	db	102	;'f'
  2086  00F7EA  20                 	db	32
  2087  00F7EB  72                 	db	114	;'r'
  2088  00F7EC  61                 	db	97	;'a'
  2089  00F7ED  6E                 	db	110	;'n'
  2090  00F7EE  67                 	db	103	;'g'
  2091  00F7EF  65                 	db	101	;'e'
  2092  00F7F0  2E                 	db	46
  2093  00F7F1  0D                 	db	13
  2094  00F7F2  0A                 	db	10
  2095  00F7F3  56                 	db	86	;'V'
  2096  00F7F4  61                 	db	97	;'a'
  2097  00F7F5  6C                 	db	108	;'l'
  2098  00F7F6  69                 	db	105	;'i'
  2099  00F7F7  64                 	db	100	;'d'
  2100  00F7F8  3A                 	db	58	;':'
  2101  00F7F9  20                 	db	32
  2102  00F7FA  30                 	db	48	;'0'
  2103  00F7FB  78                 	db	120	;'x'
  2104  00F7FC  30                 	db	48	;'0'
  2105  00F7FD  33                 	db	51	;'3'
  2106  00F7FE  30                 	db	48	;'0'
  2107  00F7FF  30                 	db	48	;'0'
  2108  00F800  20                 	db	32
  2109  00F801  74                 	db	116	;'t'
  2110  00F802  6F                 	db	111	;'o'
  2111  00F803  20                 	db	32
  2112  00F804  30                 	db	48	;'0'
  2113  00F805  78                 	db	120	;'x'
  2114  00F806  30                 	db	48	;'0'
  2115  00F807  33                 	db	51	;'3'
  2116  00F808  30                 	db	48	;'0'
  2117  00F809  34                 	db	52	;'4'
  2118  00F80A  2E                 	db	46
  2119  00F80B  0D                 	db	13
  2120  00F80C  0A                 	db	10
  2121  00F80D  00                 	db	0
  2122  00F80E                     STR_49:
  2123                           
  2124                           ; BSR set to: 0
  2125  00F80E  52                 	db	82	;'R'
  2126  00F80F  65                 	db	101	;'e'
  2127  00F810  67                 	db	103	;'g'
  2128  00F811  69                 	db	105	;'i'
  2129  00F812  73                 	db	115	;'s'
  2130  00F813  74                 	db	116	;'t'
  2131  00F814  65                 	db	101	;'e'
  2132  00F815  72                 	db	114	;'r'
  2133  00F816  73                 	db	115	;'s'
  2134  00F817  20                 	db	32
  2135  00F818  6F                 	db	111	;'o'
  2136  00F819  75                 	db	117	;'u'
  2137  00F81A  74                 	db	116	;'t'
  2138  00F81B  20                 	db	32
  2139  00F81C  6F                 	db	111	;'o'
  2140  00F81D  66                 	db	102	;'f'
  2141  00F81E  20                 	db	32
  2142  00F81F  72                 	db	114	;'r'
  2143  00F820  61                 	db	97	;'a'
  2144  00F821  6E                 	db	110	;'n'
  2145  00F822  67                 	db	103	;'g'
  2146  00F823  65                 	db	101	;'e'
  2147  00F824  2E                 	db	46
  2148  00F825  0D                 	db	13
  2149  00F826  0A                 	db	10
  2150  00F827  56                 	db	86	;'V'
  2151  00F828  61                 	db	97	;'a'
  2152  00F829  6C                 	db	108	;'l'
  2153  00F82A  69                 	db	105	;'i'
  2154  00F82B  64                 	db	100	;'d'
  2155  00F82C  3A                 	db	58	;':'
  2156  00F82D  20                 	db	32
  2157  00F82E  30                 	db	48	;'0'
  2158  00F82F  78                 	db	120	;'x'
  2159  00F830  30                 	db	48	;'0'
  2160  00F831  34                 	db	52	;'4'
  2161  00F832  30                 	db	48	;'0'
  2162  00F833  30                 	db	48	;'0'
  2163  00F834  20                 	db	32
  2164  00F835  74                 	db	116	;'t'
  2165  00F836  6F                 	db	111	;'o'
  2166  00F837  20                 	db	32
  2167  00F838  30                 	db	48	;'0'
  2168  00F839  78                 	db	120	;'x'
  2169  00F83A  30                 	db	48	;'0'
  2170  00F83B  34                 	db	52	;'4'
  2171  00F83C  30                 	db	48	;'0'
  2172  00F83D  35                 	db	53	;'5'
  2173  00F83E  2E                 	db	46
  2174  00F83F  0D                 	db	13
  2175  00F840  0A                 	db	10
  2176  00F841  00                 	db	0
  2177  00F842                     STR_40:
  2178                           
  2179                           ; BSR set to: 0
  2180  00F842  52                 	db	82	;'R'
  2181  00F843  65                 	db	101	;'e'
  2182  00F844  67                 	db	103	;'g'
  2183  00F845  69                 	db	105	;'i'
  2184  00F846  73                 	db	115	;'s'
  2185  00F847  74                 	db	116	;'t'
  2186  00F848  65                 	db	101	;'e'
  2187  00F849  72                 	db	114	;'r'
  2188  00F84A  73                 	db	115	;'s'
  2189  00F84B  20                 	db	32
  2190  00F84C  6F                 	db	111	;'o'
  2191  00F84D  75                 	db	117	;'u'
  2192  00F84E  74                 	db	116	;'t'
  2193  00F84F  20                 	db	32
  2194  00F850  6F                 	db	111	;'o'
  2195  00F851  66                 	db	102	;'f'
  2196  00F852  20                 	db	32
  2197  00F853  72                 	db	114	;'r'
  2198  00F854  61                 	db	97	;'a'
  2199  00F855  6E                 	db	110	;'n'
  2200  00F856  67                 	db	103	;'g'
  2201  00F857  65                 	db	101	;'e'
  2202  00F858  2E                 	db	46
  2203  00F859  0D                 	db	13
  2204  00F85A  0A                 	db	10
  2205  00F85B  56                 	db	86	;'V'
  2206  00F85C  61                 	db	97	;'a'
  2207  00F85D  6C                 	db	108	;'l'
  2208  00F85E  69                 	db	105	;'i'
  2209  00F85F  64                 	db	100	;'d'
  2210  00F860  3A                 	db	58	;':'
  2211  00F861  20                 	db	32
  2212  00F862  30                 	db	48	;'0'
  2213  00F863  78                 	db	120	;'x'
  2214  00F864  30                 	db	48	;'0'
  2215  00F865  31                 	db	49	;'1'
  2216  00F866  30                 	db	48	;'0'
  2217  00F867  30                 	db	48	;'0'
  2218  00F868  20                 	db	32
  2219  00F869  74                 	db	116	;'t'
  2220  00F86A  6F                 	db	111	;'o'
  2221  00F86B  20                 	db	32
  2222  00F86C  30                 	db	48	;'0'
  2223  00F86D  78                 	db	120	;'x'
  2224  00F86E  30                 	db	48	;'0'
  2225  00F86F  31                 	db	49	;'1'
  2226  00F870  30                 	db	48	;'0'
  2227  00F871  38                 	db	56	;'8'
  2228  00F872  2E                 	db	46
  2229  00F873  0D                 	db	13
  2230  00F874  0A                 	db	10
  2231  00F875  00                 	db	0
  2232  00F876                     STR_102:
  2233                           
  2234                           ; BSR set to: 0
  2235  00F876  20                 	db	32
  2236  00F877  20                 	db	32
  2237  00F878  20                 	db	32
  2238  00F879  20                 	db	32
  2239  00F87A  20                 	db	32
  2240  00F87B  20                 	db	32
  2241  00F87C  41                 	db	65	;'A'
  2242  00F87D  64                 	db	100	;'d'
  2243  00F87E  64                 	db	100	;'d'
  2244  00F87F  20                 	db	32
  2245  00F880  30                 	db	48	;'0'
  2246  00F881  78                 	db	120	;'x'
  2247  00F882  30                 	db	48	;'0'
  2248  00F883  31                 	db	49	;'1'
  2249  00F884  30                 	db	48	;'0'
  2250  00F885  30                 	db	48	;'0'
  2251  00F886  20                 	db	32
  2252  00F887  74                 	db	116	;'t'
  2253  00F888  6F                 	db	111	;'o'
  2254  00F889  20                 	db	32
  2255  00F88A  30                 	db	48	;'0'
  2256  00F88B  78                 	db	120	;'x'
  2257  00F88C  30                 	db	48	;'0'
  2258  00F88D  31                 	db	49	;'1'
  2259  00F88E  30                 	db	48	;'0'
  2260  00F88F  38                 	db	56	;'8'
  2261  00F890  20                 	db	32
  2262  00F891  2D                 	db	45
  2263  00F892  20                 	db	32
  2264  00F893  50                 	db	80	;'P'
  2265  00F894  61                 	db	97	;'a'
  2266  00F895  72                 	db	114	;'r'
  2267  00F896  74                 	db	116	;'t'
  2268  00F897  20                 	db	32
  2269  00F898  4E                 	db	78	;'N'
  2270  00F899  75                 	db	117	;'u'
  2271  00F89A  6D                 	db	109	;'m'
  2272  00F89B  62                 	db	98	;'b'
  2273  00F89C  65                 	db	101	;'e'
  2274  00F89D  72                 	db	114	;'r'
  2275  00F89E  20                 	db	32
  2276  00F89F  28                 	db	40
  2277  00F8A0  41                 	db	65	;'A'
  2278  00F8A1  53                 	db	83	;'S'
  2279  00F8A2  43                 	db	67	;'C'
  2280  00F8A3  49                 	db	73	;'I'
  2281  00F8A4  49                 	db	73	;'I'
  2282  00F8A5  29                 	db	41
  2283  00F8A6  0D                 	db	13
  2284  00F8A7  0A                 	db	10
  2285  00F8A8  00                 	db	0
  2286  00F8A9                     STR_113:
  2287                           
  2288                           ; BSR set to: 0
  2289  00F8A9  20                 	db	32
  2290  00F8AA  20                 	db	32
  2291  00F8AB  20                 	db	32
  2292  00F8AC  3F                 	db	63	;'?'
  2293  00F8AD  20                 	db	32
  2294  00F8AE  2D                 	db	45
  2295  00F8AF  20                 	db	32
  2296  00F8B0  49                 	db	73	;'I'
  2297  00F8B1  6E                 	db	110	;'n'
  2298  00F8B2  69                 	db	105	;'i'
  2299  00F8B3  74                 	db	116	;'t'
  2300  00F8B4  61                 	db	97	;'a'
  2301  00F8B5  6C                 	db	108	;'l'
  2302  00F8B6  69                 	db	105	;'i'
  2303  00F8B7  73                 	db	115	;'s'
  2304  00F8B8  65                 	db	101	;'e'
  2305  00F8B9  20                 	db	32
  2306  00F8BA  61                 	db	97	;'a'
  2307  00F8BB  6E                 	db	110	;'n'
  2308  00F8BC  64                 	db	100	;'d'
  2309  00F8BD  20                 	db	32
  2310  00F8BE  64                 	db	100	;'d'
  2311  00F8BF  69                 	db	105	;'i'
  2312  00F8C0  73                 	db	115	;'s'
  2313  00F8C1  70                 	db	112	;'p'
  2314  00F8C2  6C                 	db	108	;'l'
  2315  00F8C3  61                 	db	97	;'a'
  2316  00F8C4  79                 	db	121	;'y'
  2317  00F8C5  20                 	db	32
  2318  00F8C6  63                 	db	99	;'c'
  2319  00F8C7  61                 	db	97	;'a'
  2320  00F8C8  72                 	db	114	;'r'
  2321  00F8C9  64                 	db	100	;'d'
  2322  00F8CA  20                 	db	32
  2323  00F8CB  64                 	db	100	;'d'
  2324  00F8CC  65                 	db	101	;'e'
  2325  00F8CD  74                 	db	116	;'t'
  2326  00F8CE  61                 	db	97	;'a'
  2327  00F8CF  69                 	db	105	;'i'
  2328  00F8D0  6C                 	db	108	;'l'
  2329  00F8D1  73                 	db	115	;'s'
  2330  00F8D2  0D                 	db	13
  2331  00F8D3  0A                 	db	10
  2332  00F8D4  00                 	db	0
  2333  00F8D5                     STR_95:
  2334                           
  2335                           ; BSR set to: 0
  2336  00F8D5  43                 	db	67	;'C'
  2337  00F8D6  6F                 	db	111	;'o'
  2338  00F8D7  6D                 	db	109	;'m'
  2339  00F8D8  70                 	db	112	;'p'
  2340  00F8D9  69                 	db	105	;'i'
  2341  00F8DA  6C                 	db	108	;'l'
  2342  00F8DB  65                 	db	101	;'e'
  2343  00F8DC  64                 	db	100	;'d'
  2344  00F8DD  20                 	db	32
  2345  00F8DE  6F                 	db	111	;'o'
  2346  00F8DF  6E                 	db	110	;'n'
  2347  00F8E0  20                 	db	32
  2348  00F8E1  25                 	db	37
  2349  00F8E2  73                 	db	115	;'s'
  2350  00F8E3  20                 	db	32
  2351  00F8E4  61                 	db	97	;'a'
  2352  00F8E5  74                 	db	116	;'t'
  2353  00F8E6  20                 	db	32
  2354  00F8E7  25                 	db	37
  2355  00F8E8  73                 	db	115	;'s'
  2356  00F8E9  20                 	db	32
  2357  00F8EA  62                 	db	98	;'b'
  2358  00F8EB  79                 	db	121	;'y'
  2359  00F8EC  20                 	db	32
  2360  00F8ED  58                 	db	88	;'X'
  2361  00F8EE  43                 	db	67	;'C'
  2362  00F8EF  38                 	db	56	;'8'
  2363  00F8F0  20                 	db	32
  2364  00F8F1  76                 	db	118	;'v'
  2365  00F8F2  65                 	db	101	;'e'
  2366  00F8F3  72                 	db	114	;'r'
  2367  00F8F4  73                 	db	115	;'s'
  2368  00F8F5  69                 	db	105	;'i'
  2369  00F8F6  6F                 	db	111	;'o'
  2370  00F8F7  6E                 	db	110	;'n'
  2371  00F8F8  20                 	db	32
  2372  00F8F9  25                 	db	37
  2373  00F8FA  75                 	db	117	;'u'
  2374  00F8FB  0D                 	db	13
  2375  00F8FC  0A                 	db	10
  2376  00F8FD  0A                 	db	10
  2377  00F8FE  00                 	db	0
  2378  00F8FF                     STR_100:
  2379                           
  2380                           ; BSR set to: 0
  2381  00F8FF  20                 	db	32
  2382  00F900  20                 	db	32
  2383  00F901  20                 	db	32
  2384  00F902  30                 	db	48	;'0'
  2385  00F903  78                 	db	120	;'x'
  2386  00F904  30                 	db	48	;'0'
  2387  00F905  34                 	db	52	;'4'
  2388  00F906  20                 	db	32
  2389  00F907  2D                 	db	45
  2390  00F908  20                 	db	32
  2391  00F909  52                 	db	82	;'R'
  2392  00F90A  65                 	db	101	;'e'
  2393  00F90B  61                 	db	97	;'a'
  2394  00F90C  64                 	db	100	;'d'
  2395  00F90D  20                 	db	32
  2396  00F90E  4D                 	db	77	;'M'
  2397  00F90F  75                 	db	117	;'u'
  2398  00F910  6C                 	db	108	;'l'
  2399  00F911  74                 	db	116	;'t'
  2400  00F912  69                 	db	105	;'i'
  2401  00F913  70                 	db	112	;'p'
  2402  00F914  6C                 	db	108	;'l'
  2403  00F915  65                 	db	101	;'e'
  2404  00F916  20                 	db	32
  2405  00F917  31                 	db	49	;'1'
  2406  00F918  36                 	db	54	;'6'
  2407  00F919  62                 	db	98	;'b'
  2408  00F91A  69                 	db	105	;'i'
  2409  00F91B  74                 	db	116	;'t'
  2410  00F91C  20                 	db	32
  2411  00F91D  52                 	db	82	;'R'
  2412  00F91E  65                 	db	101	;'e'
  2413  00F91F  67                 	db	103	;'g'
  2414  00F920  69                 	db	105	;'i'
  2415  00F921  73                 	db	115	;'s'
  2416  00F922  74                 	db	116	;'t'
  2417  00F923  65                 	db	101	;'e'
  2418  00F924  72                 	db	114	;'r'
  2419  00F925  73                 	db	115	;'s'
  2420  00F926  0D                 	db	13
  2421  00F927  0A                 	db	10
  2422  00F928  00                 	db	0
  2423  00F929                     STR_43:
  2424                           
  2425                           ; BSR set to: 0
  2426  00F929  52                 	db	82	;'R'
  2427  00F92A  65                 	db	101	;'e'
  2428  00F92B  67                 	db	103	;'g'
  2429  00F92C  69                 	db	105	;'i'
  2430  00F92D  73                 	db	115	;'s'
  2431  00F92E  74                 	db	116	;'t'
  2432  00F92F  65                 	db	101	;'e'
  2433  00F930  72                 	db	114	;'r'
  2434  00F931  73                 	db	115	;'s'
  2435  00F932  20                 	db	32
  2436  00F933  6F                 	db	111	;'o'
  2437  00F934  75                 	db	117	;'u'
  2438  00F935  74                 	db	116	;'t'
  2439  00F936  20                 	db	32
  2440  00F937  6F                 	db	111	;'o'
  2441  00F938  66                 	db	102	;'f'
  2442  00F939  20                 	db	32
  2443  00F93A  72                 	db	114	;'r'
  2444  00F93B  61                 	db	97	;'a'
  2445  00F93C  6E                 	db	110	;'n'
  2446  00F93D  67                 	db	103	;'g'
  2447  00F93E  65                 	db	101	;'e'
  2448  00F93F  2E                 	db	46
  2449  00F940  0D                 	db	13
  2450  00F941  0A                 	db	10
  2451  00F942  56                 	db	86	;'V'
  2452  00F943  61                 	db	97	;'a'
  2453  00F944  6C                 	db	108	;'l'
  2454  00F945  69                 	db	105	;'i'
  2455  00F946  64                 	db	100	;'d'
  2456  00F947  3A                 	db	58	;':'
  2457  00F948  20                 	db	32
  2458  00F949  30                 	db	48	;'0'
  2459  00F94A  78                 	db	120	;'x'
  2460  00F94B  30                 	db	48	;'0'
  2461  00F94C  35                 	db	53	;'5'
  2462  00F94D  31                 	db	49	;'1'
  2463  00F94E  32                 	db	50	;'2'
  2464  00F94F  2E                 	db	46
  2465  00F950  0D                 	db	13
  2466  00F951  0A                 	db	10
  2467  00F952  00                 	db	0
  2468  00F953                     STR_90:
  2469                           
  2470                           ; BSR set to: 0
  2471  00F953  0D                 	db	13
  2472  00F954  0A                 	db	10
  2473  00F955  44                 	db	68	;'D'
  2474  00F956  61                 	db	97	;'a'
  2475  00F957  6E                 	db	110	;'n'
  2476  00F958  20                 	db	32
  2477  00F959  61                 	db	97	;'a'
  2478  00F95A  6E                 	db	110	;'n'
  2479  00F95B  64                 	db	100	;'d'
  2480  00F95C  20                 	db	32
  2481  00F95D  53                 	db	83	;'S'
  2482  00F95E  61                 	db	97	;'a'
  2483  00F95F  6D                 	db	109	;'m'
  2484  00F960  27                 	db	39
  2485  00F961  73                 	db	115	;'s'
  2486  00F962  20                 	db	32
  2487  00F963  4D                 	db	77	;'M'
  2488  00F964  6F                 	db	111	;'o'
  2489  00F965  64                 	db	100	;'d'
  2490  00F966  62                 	db	98	;'b'
  2491  00F967  75                 	db	117	;'u'
  2492  00F968  73                 	db	115	;'s'
  2493  00F969  20                 	db	32
  2494  00F96A  47                 	db	71	;'G'
  2495  00F96B  50                 	db	80	;'P'
  2496  00F96C  49                 	db	73	;'I'
  2497  00F96D  4F                 	db	79	;'O'
  2498  00F96E  20                 	db	32
  2499  00F96F  45                 	db	69	;'E'
  2500  00F970  78                 	db	120	;'x'
  2501  00F971  70                 	db	112	;'p'
  2502  00F972  61                 	db	97	;'a'
  2503  00F973  6E                 	db	110	;'n'
  2504  00F974  73                 	db	115	;'s'
  2505  00F975  69                 	db	105	;'i'
  2506  00F976  6F                 	db	111	;'o'
  2507  00F977  6E                 	db	110	;'n'
  2508  00F978  0D                 	db	13
  2509  00F979  0A                 	db	10
  2510  00F97A  00                 	db	0
  2511  00F97B                     STR_103:
  2512                           
  2513                           ; BSR set to: 0
  2514  00F97B  20                 	db	32
  2515  00F97C  20                 	db	32
  2516  00F97D  20                 	db	32
  2517  00F97E  20                 	db	32
  2518  00F97F  20                 	db	32
  2519  00F980  20                 	db	32
  2520  00F981  41                 	db	65	;'A'
  2521  00F982  64                 	db	100	;'d'
  2522  00F983  64                 	db	100	;'d'
  2523  00F984  20                 	db	32
  2524  00F985  30                 	db	48	;'0'
  2525  00F986  78                 	db	120	;'x'
  2526  00F987  30                 	db	48	;'0'
  2527  00F988  32                 	db	50	;'2'
  2528  00F989  30                 	db	48	;'0'
  2529  00F98A  30                 	db	48	;'0'
  2530  00F98B  20                 	db	32
  2531  00F98C  2D                 	db	45
  2532  00F98D  20                 	db	32
  2533  00F98E  52                 	db	82	;'R'
  2534  00F98F  65                 	db	101	;'e'
  2535  00F990  76                 	db	118	;'v'
  2536  00F991  69                 	db	105	;'i'
  2537  00F992  73                 	db	115	;'s'
  2538  00F993  69                 	db	105	;'i'
  2539  00F994  6F                 	db	111	;'o'
  2540  00F995  6E                 	db	110	;'n'
  2541  00F996  20                 	db	32
  2542  00F997  28                 	db	40
  2543  00F998  41                 	db	65	;'A'
  2544  00F999  53                 	db	83	;'S'
  2545  00F99A  43                 	db	67	;'C'
  2546  00F99B  49                 	db	73	;'I'
  2547  00F99C  49                 	db	73	;'I'
  2548  00F99D  29                 	db	41
  2549  00F99E  0D                 	db	13
  2550  00F99F  0A                 	db	10
  2551  00F9A0  00                 	db	0
  2552  00F9A1                     STR_124:
  2553                           
  2554                           ; BSR set to: 0
  2555  00F9A1  0D                 	db	13
  2556  00F9A2  0A                 	db	10
  2557  00F9A3  45                 	db	69	;'E'
  2558  00F9A4  6E                 	db	110	;'n'
  2559  00F9A5  74                 	db	116	;'t'
  2560  00F9A6  65                 	db	101	;'e'
  2561  00F9A7  72                 	db	114	;'r'
  2562  00F9A8  20                 	db	32
  2563  00F9A9  63                 	db	99	;'c'
  2564  00F9AA  61                 	db	97	;'a'
  2565  00F9AB  72                 	db	114	;'r'
  2566  00F9AC  64                 	db	100	;'d'
  2567  00F9AD  20                 	db	32
  2568  00F9AE  25                 	db	37
  2569  00F9AF  73                 	db	115	;'s'
  2570  00F9B0  20                 	db	32
  2571  00F9B1  28                 	db	40
  2572  00F9B2  6D                 	db	109	;'m'
  2573  00F9B3  61                 	db	97	;'a'
  2574  00F9B4  78                 	db	120	;'x'
  2575  00F9B5  20                 	db	32
  2576  00F9B6  25                 	db	37
  2577  00F9B7  69                 	db	105	;'i'
  2578  00F9B8  20                 	db	32
  2579  00F9B9  63                 	db	99	;'c'
  2580  00F9BA  68                 	db	104	;'h'
  2581  00F9BB  61                 	db	97	;'a'
  2582  00F9BC  72                 	db	114	;'r'
  2583  00F9BD  61                 	db	97	;'a'
  2584  00F9BE  63                 	db	99	;'c'
  2585  00F9BF  74                 	db	116	;'t'
  2586  00F9C0  65                 	db	101	;'e'
  2587  00F9C1  72                 	db	114	;'r'
  2588  00F9C2  73                 	db	115	;'s'
  2589  00F9C3  29                 	db	41
  2590  00F9C4  3A                 	db	58	;':'
  2591  00F9C5  20                 	db	32
  2592  00F9C6  00                 	db	0
  2593  00F9C7                     STR_62:
  2594                           
  2595                           ; BSR set to: 0
  2596  00F9C7  20                 	db	32
  2597  00F9C8  20                 	db	32
  2598  00F9C9  20                 	db	32
  2599  00F9CA  42                 	db	66	;'B'
  2600  00F9CB  79                 	db	121	;'y'
  2601  00F9CC  74                 	db	116	;'t'
  2602  00F9CD  65                 	db	101	;'e'
  2603  00F9CE  20                 	db	32
  2604  00F9CF  30                 	db	48	;'0'
  2605  00F9D0  32                 	db	50	;'2'
  2606  00F9D1  3A                 	db	58	;':'
  2607  00F9D2  20                 	db	32
  2608  00F9D3  30                 	db	48	;'0'
  2609  00F9D4  78                 	db	120	;'x'
  2610  00F9D5  25                 	db	37
  2611  00F9D6  30                 	db	48	;'0'
  2612  00F9D7  32                 	db	50	;'2'
  2613  00F9D8  78                 	db	120	;'x'
  2614  00F9D9  20                 	db	32
  2615  00F9DA  2D                 	db	45
  2616  00F9DB  20                 	db	32
  2617  00F9DC  4E                 	db	78	;'N'
  2618  00F9DD  75                 	db	117	;'u'
  2619  00F9DE  6D                 	db	109	;'m'
  2620  00F9DF  20                 	db	32
  2621  00F9E0  42                 	db	66	;'B'
  2622  00F9E1  79                 	db	121	;'y'
  2623  00F9E2  74                 	db	116	;'t'
  2624  00F9E3  65                 	db	101	;'e'
  2625  00F9E4  73                 	db	115	;'s'
  2626  00F9E5  20                 	db	32
  2627  00F9E6  4D                 	db	77	;'M'
  2628  00F9E7  6F                 	db	111	;'o'
  2629  00F9E8  72                 	db	114	;'r'
  2630  00F9E9  65                 	db	101	;'e'
  2631  00F9EA  0D                 	db	13
  2632  00F9EB  0A                 	db	10
  2633  00F9EC  00                 	db	0
  2634  00F9ED                     STR_26:
  2635                           
  2636                           ; BSR set to: 0
  2637  00F9ED  20                 	db	32
  2638  00F9EE  20                 	db	32
  2639  00F9EF  20                 	db	32
  2640  00F9F0  42                 	db	66	;'B'
  2641  00F9F1  79                 	db	121	;'y'
  2642  00F9F2  74                 	db	116	;'t'
  2643  00F9F3  65                 	db	101	;'e'
  2644  00F9F4  20                 	db	32
  2645  00F9F5  30                 	db	48	;'0'
  2646  00F9F6  36                 	db	54	;'6'
  2647  00F9F7  3A                 	db	58	;':'
  2648  00F9F8  20                 	db	32
  2649  00F9F9  30                 	db	48	;'0'
  2650  00F9FA  78                 	db	120	;'x'
  2651  00F9FB  25                 	db	37
  2652  00F9FC  30                 	db	48	;'0'
  2653  00F9FD  32                 	db	50	;'2'
  2654  00F9FE  78                 	db	120	;'x'
  2655  00F9FF  20                 	db	32
  2656  00FA00  2D                 	db	45
  2657  00FA01  20                 	db	32
  2658  00FA02  4E                 	db	78	;'N'
  2659  00FA03  75                 	db	117	;'u'
  2660  00FA04  6D                 	db	109	;'m'
  2661  00FA05  20                 	db	32
  2662  00FA06  42                 	db	66	;'B'
  2663  00FA07  79                 	db	121	;'y'
  2664  00FA08  74                 	db	116	;'t'
  2665  00FA09  65                 	db	101	;'e'
  2666  00FA0A  73                 	db	115	;'s'
  2667  00FA0B  20                 	db	32
  2668  00FA0C  4D                 	db	77	;'M'
  2669  00FA0D  6F                 	db	111	;'o'
  2670  00FA0E  72                 	db	114	;'r'
  2671  00FA0F  65                 	db	101	;'e'
  2672  00FA10  0D                 	db	13
  2673  00FA11  0A                 	db	10
  2674  00FA12  00                 	db	0
  2675  00FA13                     STR_14:
  2676                           
  2677                           ; BSR set to: 0
  2678  00FA13  20                 	db	32
  2679  00FA14  20                 	db	32
  2680  00FA15  20                 	db	32
  2681  00FA16  42                 	db	66	;'B'
  2682  00FA17  79                 	db	121	;'y'
  2683  00FA18  74                 	db	116	;'t'
  2684  00FA19  65                 	db	101	;'e'
  2685  00FA1A  20                 	db	32
  2686  00FA1B  30                 	db	48	;'0'
  2687  00FA1C  32                 	db	50	;'2'
  2688  00FA1D  3A                 	db	58	;':'
  2689  00FA1E  20                 	db	32
  2690  00FA1F  30                 	db	48	;'0'
  2691  00FA20  78                 	db	120	;'x'
  2692  00FA21  25                 	db	37
  2693  00FA22  30                 	db	48	;'0'
  2694  00FA23  32                 	db	50	;'2'
  2695  00FA24  78                 	db	120	;'x'
  2696  00FA25  20                 	db	32
  2697  00FA26  2D                 	db	45
  2698  00FA27  20                 	db	32
  2699  00FA28  31                 	db	49	;'1'
  2700  00FA29  73                 	db	115	;'s'
  2701  00FA2A  74                 	db	116	;'t'
  2702  00FA2B  20                 	db	32
  2703  00FA2C  52                 	db	82	;'R'
  2704  00FA2D  65                 	db	101	;'e'
  2705  00FA2E  67                 	db	103	;'g'
  2706  00FA2F  20                 	db	32
  2707  00FA30  41                 	db	65	;'A'
  2708  00FA31  64                 	db	100	;'d'
  2709  00FA32  64                 	db	100	;'d'
  2710  00FA33  20                 	db	32
  2711  00FA34  48                 	db	72	;'H'
  2712  00FA35  69                 	db	105	;'i'
  2713  00FA36  0D                 	db	13
  2714  00FA37  0A                 	db	10
  2715  00FA38  00                 	db	0
  2716  00FA39                     STR_15:
  2717                           
  2718                           ; BSR set to: 0
  2719  00FA39  20                 	db	32
  2720  00FA3A  20                 	db	32
  2721  00FA3B  20                 	db	32
  2722  00FA3C  42                 	db	66	;'B'
  2723  00FA3D  79                 	db	121	;'y'
  2724  00FA3E  74                 	db	116	;'t'
  2725  00FA3F  65                 	db	101	;'e'
  2726  00FA40  20                 	db	32
  2727  00FA41  30                 	db	48	;'0'
  2728  00FA42  33                 	db	51	;'3'
  2729  00FA43  3A                 	db	58	;':'
  2730  00FA44  20                 	db	32
  2731  00FA45  30                 	db	48	;'0'
  2732  00FA46  78                 	db	120	;'x'
  2733  00FA47  25                 	db	37
  2734  00FA48  30                 	db	48	;'0'
  2735  00FA49  32                 	db	50	;'2'
  2736  00FA4A  78                 	db	120	;'x'
  2737  00FA4B  20                 	db	32
  2738  00FA4C  2D                 	db	45
  2739  00FA4D  20                 	db	32
  2740  00FA4E  31                 	db	49	;'1'
  2741  00FA4F  73                 	db	115	;'s'
  2742  00FA50  74                 	db	116	;'t'
  2743  00FA51  20                 	db	32
  2744  00FA52  52                 	db	82	;'R'
  2745  00FA53  65                 	db	101	;'e'
  2746  00FA54  67                 	db	103	;'g'
  2747  00FA55  20                 	db	32
  2748  00FA56  41                 	db	65	;'A'
  2749  00FA57  64                 	db	100	;'d'
  2750  00FA58  64                 	db	100	;'d'
  2751  00FA59  20                 	db	32
  2752  00FA5A  4C                 	db	76	;'L'
  2753  00FA5B  6F                 	db	111	;'o'
  2754  00FA5C  0D                 	db	13
  2755  00FA5D  0A                 	db	10
  2756  00FA5E  00                 	db	0
  2757  00FA5F                     STR_114:
  2758                           
  2759                           ; BSR set to: 0
  2760  00FA5F  20                 	db	32
  2761  00FA60  20                 	db	32
  2762  00FA61  20                 	db	32
  2763  00FA62  73                 	db	115	;'s'
  2764  00FA63  65                 	db	101	;'e'
  2765  00FA64  72                 	db	114	;'r'
  2766  00FA65  69                 	db	105	;'i'
  2767  00FA66  61                 	db	97	;'a'
  2768  00FA67  6C                 	db	108	;'l'
  2769  00FA68  20                 	db	32
  2770  00FA69  2D                 	db	45
  2771  00FA6A  20                 	db	32
  2772  00FA6B  53                 	db	83	;'S'
  2773  00FA6C  65                 	db	101	;'e'
  2774  00FA6D  74                 	db	116	;'t'
  2775  00FA6E  20                 	db	32
  2776  00FA6F  63                 	db	99	;'c'
  2777  00FA70  61                 	db	97	;'a'
  2778  00FA71  72                 	db	114	;'r'
  2779  00FA72  64                 	db	100	;'d'
  2780  00FA73  20                 	db	32
  2781  00FA74  73                 	db	115	;'s'
  2782  00FA75  65                 	db	101	;'e'
  2783  00FA76  72                 	db	114	;'r'
  2784  00FA77  69                 	db	105	;'i'
  2785  00FA78  61                 	db	97	;'a'
  2786  00FA79  6C                 	db	108	;'l'
  2787  00FA7A  20                 	db	32
  2788  00FA7B  6E                 	db	110	;'n'
  2789  00FA7C  75                 	db	117	;'u'
  2790  00FA7D  6D                 	db	109	;'m'
  2791  00FA7E  62                 	db	98	;'b'
  2792  00FA7F  65                 	db	101	;'e'
  2793  00FA80  72                 	db	114	;'r'
  2794  00FA81  0D                 	db	13
  2795  00FA82  0A                 	db	10
  2796  00FA83  00                 	db	0
  2797  00FA84                     STR_79:
  2798                           
  2799                           ; BSR set to: 0
  2800  00FA84  0D                 	db	13
  2801  00FA85  0A                 	db	10
  2802  00FA86  52                 	db	82	;'R'
  2803  00FA87  65                 	db	101	;'e'
  2804  00FA88  63                 	db	99	;'c'
  2805  00FA89  65                 	db	101	;'e'
  2806  00FA8A  69                 	db	105	;'i'
  2807  00FA8B  76                 	db	118	;'v'
  2808  00FA8C  65                 	db	101	;'e'
  2809  00FA8D  64                 	db	100	;'d'
  2810  00FA8E  20                 	db	32
  2811  00FA8F  4D                 	db	77	;'M'
  2812  00FA90  6F                 	db	111	;'o'
  2813  00FA91  64                 	db	100	;'d'
  2814  00FA92  62                 	db	98	;'b'
  2815  00FA93  75                 	db	117	;'u'
  2816  00FA94  73                 	db	115	;'s'
  2817  00FA95  20                 	db	32
  2818  00FA96  43                 	db	67	;'C'
  2819  00FA97  52                 	db	82	;'R'
  2820  00FA98  43                 	db	67	;'C'
  2821  00FA99  20                 	db	32
  2822  00FA9A  63                 	db	99	;'c'
  2823  00FA9B  68                 	db	104	;'h'
  2824  00FA9C  65                 	db	101	;'e'
  2825  00FA9D  63                 	db	99	;'c'
  2826  00FA9E  6B                 	db	107	;'k'
  2827  00FA9F  65                 	db	101	;'e'
  2828  00FAA0  64                 	db	100	;'d'
  2829  00FAA1  20                 	db	32
  2830  00FAA2  6F                 	db	111	;'o'
  2831  00FAA3  75                 	db	117	;'u'
  2832  00FAA4  74                 	db	116	;'t'
  2833  00FAA5  2E                 	db	46
  2834  00FAA6  0D                 	db	13
  2835  00FAA7  0A                 	db	10
  2836  00FAA8  00                 	db	0
  2837  00FAA9                     STR_16:
  2838                           
  2839                           ; BSR set to: 0
  2840  00FAA9  20                 	db	32
  2841  00FAAA  20                 	db	32
  2842  00FAAB  20                 	db	32
  2843  00FAAC  42                 	db	66	;'B'
  2844  00FAAD  79                 	db	121	;'y'
  2845  00FAAE  74                 	db	116	;'t'
  2846  00FAAF  65                 	db	101	;'e'
  2847  00FAB0  20                 	db	32
  2848  00FAB1  30                 	db	48	;'0'
  2849  00FAB2  34                 	db	52	;'4'
  2850  00FAB3  3A                 	db	58	;':'
  2851  00FAB4  20                 	db	32
  2852  00FAB5  30                 	db	48	;'0'
  2853  00FAB6  78                 	db	120	;'x'
  2854  00FAB7  25                 	db	37
  2855  00FAB8  30                 	db	48	;'0'
  2856  00FAB9  32                 	db	50	;'2'
  2857  00FABA  78                 	db	120	;'x'
  2858  00FABB  20                 	db	32
  2859  00FABC  2D                 	db	45
  2860  00FABD  20                 	db	32
  2861  00FABE  4E                 	db	78	;'N'
  2862  00FABF  75                 	db	117	;'u'
  2863  00FAC0  6D                 	db	109	;'m'
  2864  00FAC1  20                 	db	32
  2865  00FAC2  6F                 	db	111	;'o'
  2866  00FAC3  66                 	db	102	;'f'
  2867  00FAC4  20                 	db	32
  2868  00FAC5  52                 	db	82	;'R'
  2869  00FAC6  65                 	db	101	;'e'
  2870  00FAC7  67                 	db	103	;'g'
  2871  00FAC8  20                 	db	32
  2872  00FAC9  48                 	db	72	;'H'
  2873  00FACA  69                 	db	105	;'i'
  2874  00FACB  0D                 	db	13
  2875  00FACC  0A                 	db	10
  2876  00FACD  00                 	db	0
  2877  00FACE                     STR_17:
  2878                           
  2879                           ; BSR set to: 0
  2880  00FACE  20                 	db	32
  2881  00FACF  20                 	db	32
  2882  00FAD0  20                 	db	32
  2883  00FAD1  42                 	db	66	;'B'
  2884  00FAD2  79                 	db	121	;'y'
  2885  00FAD3  74                 	db	116	;'t'
  2886  00FAD4  65                 	db	101	;'e'
  2887  00FAD5  20                 	db	32
  2888  00FAD6  30                 	db	48	;'0'
  2889  00FAD7  35                 	db	53	;'5'
  2890  00FAD8  3A                 	db	58	;':'
  2891  00FAD9  20                 	db	32
  2892  00FADA  30                 	db	48	;'0'
  2893  00FADB  78                 	db	120	;'x'
  2894  00FADC  25                 	db	37
  2895  00FADD  30                 	db	48	;'0'
  2896  00FADE  32                 	db	50	;'2'
  2897  00FADF  78                 	db	120	;'x'
  2898  00FAE0  20                 	db	32
  2899  00FAE1  2D                 	db	45
  2900  00FAE2  20                 	db	32
  2901  00FAE3  4E                 	db	78	;'N'
  2902  00FAE4  75                 	db	117	;'u'
  2903  00FAE5  6D                 	db	109	;'m'
  2904  00FAE6  20                 	db	32
  2905  00FAE7  6F                 	db	111	;'o'
  2906  00FAE8  66                 	db	102	;'f'
  2907  00FAE9  20                 	db	32
  2908  00FAEA  52                 	db	82	;'R'
  2909  00FAEB  65                 	db	101	;'e'
  2910  00FAEC  67                 	db	103	;'g'
  2911  00FAED  20                 	db	32
  2912  00FAEE  4C                 	db	76	;'L'
  2913  00FAEF  6F                 	db	111	;'o'
  2914  00FAF0  0D                 	db	13
  2915  00FAF1  0A                 	db	10
  2916  00FAF2  00                 	db	0
  2917  00FAF3                     STR_33:
  2918                           
  2919                           ; BSR set to: 0
  2920  00FAF3  52                 	db	82	;'R'
  2921  00FAF4  65                 	db	101	;'e'
  2922  00FAF5  71                 	db	113	;'q'
  2923  00FAF6  75                 	db	117	;'u'
  2924  00FAF7  65                 	db	101	;'e'
  2925  00FAF8  73                 	db	115	;'s'
  2926  00FAF9  74                 	db	116	;'t'
  2927  00FAFA  65                 	db	101	;'e'
  2928  00FAFB  64                 	db	100	;'d'
  2929  00FAFC  20                 	db	32
  2930  00FAFD  4F                 	db	79	;'O'
  2931  00FAFE  75                 	db	117	;'u'
  2932  00FAFF  74                 	db	116	;'t'
  2933  00FB00  70                 	db	112	;'p'
  2934  00FB01  75                 	db	117	;'u'
  2935  00FB02  74                 	db	116	;'t'
  2936  00FB03  20                 	db	32
  2937  00FB04  48                 	db	72	;'H'
  2938  00FB05  6F                 	db	111	;'o'
  2939  00FB06  6C                 	db	108	;'l'
  2940  00FB07  64                 	db	100	;'d'
  2941  00FB08  69                 	db	105	;'i'
  2942  00FB09  6E                 	db	110	;'n'
  2943  00FB0A  67                 	db	103	;'g'
  2944  00FB0B  20                 	db	32
  2945  00FB0C  52                 	db	82	;'R'
  2946  00FB0D  65                 	db	101	;'e'
  2947  00FB0E  67                 	db	103	;'g'
  2948  00FB0F  69                 	db	105	;'i'
  2949  00FB10  73                 	db	115	;'s'
  2950  00FB11  74                 	db	116	;'t'
  2951  00FB12  65                 	db	101	;'e'
  2952  00FB13  72                 	db	114	;'r'
  2953  00FB14  73                 	db	115	;'s'
  2954  00FB15  0D                 	db	13
  2955  00FB16  0A                 	db	10
  2956  00FB17  00                 	db	0
  2957  00FB18                     STR_99:
  2958                           
  2959                           ; BSR set to: 0
  2960  00FB18  4D                 	db	77	;'M'
  2961  00FB19  6F                 	db	111	;'o'
  2962  00FB1A  64                 	db	100	;'d'
  2963  00FB1B  62                 	db	98	;'b'
  2964  00FB1C  75                 	db	117	;'u'
  2965  00FB1D  73                 	db	115	;'s'
  2966  00FB1E  20                 	db	32
  2967  00FB1F  46                 	db	70	;'F'
  2968  00FB20  75                 	db	117	;'u'
  2969  00FB21  6E                 	db	110	;'n'
  2970  00FB22  63                 	db	99	;'c'
  2971  00FB23  74                 	db	116	;'t'
  2972  00FB24  69                 	db	105	;'i'
  2973  00FB25  6F                 	db	111	;'o'
  2974  00FB26  6E                 	db	110	;'n'
  2975  00FB27  20                 	db	32
  2976  00FB28  43                 	db	67	;'C'
  2977  00FB29  6F                 	db	111	;'o'
  2978  00FB2A  64                 	db	100	;'d'
  2979  00FB2B  65                 	db	101	;'e'
  2980  00FB2C  73                 	db	115	;'s'
  2981  00FB2D  20                 	db	32
  2982  00FB2E  53                 	db	83	;'S'
  2983  00FB2F  75                 	db	117	;'u'
  2984  00FB30  70                 	db	112	;'p'
  2985  00FB31  70                 	db	112	;'p'
  2986  00FB32  6F                 	db	111	;'o'
  2987  00FB33  72                 	db	114	;'r'
  2988  00FB34  74                 	db	116	;'t'
  2989  00FB35  65                 	db	101	;'e'
  2990  00FB36  64                 	db	100	;'d'
  2991  00FB37  3A                 	db	58	;':'
  2992  00FB38  0D                 	db	13
  2993  00FB39  0A                 	db	10
  2994  00FB3A  0A                 	db	10
  2995  00FB3B  00                 	db	0
  2996  00FB3C                     STR_32:
  2997                           
  2998                           ; BSR set to: 0
  2999  00FB3C  63                 	db	99	;'c'
  3000  00FB3D  72                 	db	114	;'r'
  3001  00FB3E  63                 	db	99	;'c'
  3002  00FB3F  48                 	db	72	;'H'
  3003  00FB40  69                 	db	105	;'i'
  3004  00FB41  67                 	db	103	;'g'
  3005  00FB42  68                 	db	104	;'h'
  3006  00FB43  3A                 	db	58	;':'
  3007  00FB44  20                 	db	32
  3008  00FB45  30                 	db	48	;'0'
  3009  00FB46  78                 	db	120	;'x'
  3010  00FB47  25                 	db	37
  3011  00FB48  30                 	db	48	;'0'
  3012  00FB49  32                 	db	50	;'2'
  3013  00FB4A  78                 	db	120	;'x'
  3014  00FB4B  20                 	db	32
  3015  00FB4C  20                 	db	32
  3016  00FB4D  63                 	db	99	;'c'
  3017  00FB4E  72                 	db	114	;'r'
  3018  00FB4F  63                 	db	99	;'c'
  3019  00FB50  4C                 	db	76	;'L'
  3020  00FB51  6F                 	db	111	;'o'
  3021  00FB52  77                 	db	119	;'w'
  3022  00FB53  3A                 	db	58	;':'
  3023  00FB54  20                 	db	32
  3024  00FB55  30                 	db	48	;'0'
  3025  00FB56  78                 	db	120	;'x'
  3026  00FB57  25                 	db	37
  3027  00FB58  30                 	db	48	;'0'
  3028  00FB59  32                 	db	50	;'2'
  3029  00FB5A  78                 	db	120	;'x'
  3030  00FB5B  20                 	db	32
  3031  00FB5C  20                 	db	32
  3032  00FB5D  0D                 	db	13
  3033  00FB5E  0A                 	db	10
  3034  00FB5F  00                 	db	0
  3035  00FB60                     STR_12:
  3036                           
  3037                           ; BSR set to: 0
  3038  00FB60  20                 	db	32
  3039  00FB61  20                 	db	32
  3040  00FB62  20                 	db	32
  3041  00FB63  42                 	db	66	;'B'
  3042  00FB64  79                 	db	121	;'y'
  3043  00FB65  74                 	db	116	;'t'
  3044  00FB66  65                 	db	101	;'e'
  3045  00FB67  20                 	db	32
  3046  00FB68  30                 	db	48	;'0'
  3047  00FB69  30                 	db	48	;'0'
  3048  00FB6A  3A                 	db	58	;':'
  3049  00FB6B  20                 	db	32
  3050  00FB6C  30                 	db	48	;'0'
  3051  00FB6D  78                 	db	120	;'x'
  3052  00FB6E  25                 	db	37
  3053  00FB6F  30                 	db	48	;'0'
  3054  00FB70  32                 	db	50	;'2'
  3055  00FB71  78                 	db	120	;'x'
  3056  00FB72  20                 	db	32
  3057  00FB73  2D                 	db	45
  3058  00FB74  20                 	db	32
  3059  00FB75  43                 	db	67	;'C'
  3060  00FB76  61                 	db	97	;'a'
  3061  00FB77  72                 	db	114	;'r'
  3062  00FB78  64                 	db	100	;'d'
  3063  00FB79  20                 	db	32
  3064  00FB7A  41                 	db	65	;'A'
  3065  00FB7B  64                 	db	100	;'d'
  3066  00FB7C  64                 	db	100	;'d'
  3067  00FB7D  72                 	db	114	;'r'
  3068  00FB7E  65                 	db	101	;'e'
  3069  00FB7F  73                 	db	115	;'s'
  3070  00FB80  73                 	db	115	;'s'
  3071  00FB81  0D                 	db	13
  3072  00FB82  0A                 	db	10
  3073  00FB83  00                 	db	0
  3074  00FB84                     STR_28:
  3075                           
  3076                           ; BSR set to: 0
  3077  00FB84  20                 	db	32
  3078  00FB85  20                 	db	32
  3079  00FB86  20                 	db	32
  3080  00FB87  42                 	db	66	;'B'
  3081  00FB88  79                 	db	121	;'y'
  3082  00FB89  74                 	db	116	;'t'
  3083  00FB8A  65                 	db	101	;'e'
  3084  00FB8B  20                 	db	32
  3085  00FB8C  25                 	db	37
  3086  00FB8D  30                 	db	48	;'0'
  3087  00FB8E  32                 	db	50	;'2'
  3088  00FB8F  69                 	db	105	;'i'
  3089  00FB90  3A                 	db	58	;':'
  3090  00FB91  20                 	db	32
  3091  00FB92  30                 	db	48	;'0'
  3092  00FB93  78                 	db	120	;'x'
  3093  00FB94  25                 	db	37
  3094  00FB95  30                 	db	48	;'0'
  3095  00FB96  32                 	db	50	;'2'
  3096  00FB97  78                 	db	120	;'x'
  3097  00FB98  20                 	db	32
  3098  00FB99  2D                 	db	45
  3099  00FB9A  20                 	db	32
  3100  00FB9B  52                 	db	82	;'R'
  3101  00FB9C  65                 	db	101	;'e'
  3102  00FB9D  67                 	db	103	;'g'
  3103  00FB9E  20                 	db	32
  3104  00FB9F  25                 	db	37
  3105  00FBA0  69                 	db	105	;'i'
  3106  00FBA1  20                 	db	32
  3107  00FBA2  4C                 	db	76	;'L'
  3108  00FBA3  6F                 	db	111	;'o'
  3109  00FBA4  0D                 	db	13
  3110  00FBA5  0A                 	db	10
  3111  00FBA6  00                 	db	0
  3112  00FBA7                     STR_98:
  3113                           
  3114                           ; BSR set to: 0
  3115  00FBA7  49                 	db	73	;'I'
  3116  00FBA8  6E                 	db	110	;'n'
  3117  00FBA9  69                 	db	105	;'i'
  3118  00FBAA  74                 	db	116	;'t'
  3119  00FBAB  61                 	db	97	;'a'
  3120  00FBAC  6C                 	db	108	;'l'
  3121  00FBAD  69                 	db	105	;'i'
  3122  00FBAE  73                 	db	115	;'s'
  3123  00FBAF  61                 	db	97	;'a'
  3124  00FBB0  74                 	db	116	;'t'
  3125  00FBB1  69                 	db	105	;'i'
  3126  00FBB2  6F                 	db	111	;'o'
  3127  00FBB3  6E                 	db	110	;'n'
  3128  00FBB4  20                 	db	32
  3129  00FBB5  43                 	db	67	;'C'
  3130  00FBB6  6F                 	db	111	;'o'
  3131  00FBB7  6D                 	db	109	;'m'
  3132  00FBB8  70                 	db	112	;'p'
  3133  00FBB9  6C                 	db	108	;'l'
  3134  00FBBA  65                 	db	101	;'e'
  3135  00FBBB  74                 	db	116	;'t'
  3136  00FBBC  65                 	db	101	;'e'
  3137  00FBBD  20                 	db	32
  3138  00FBBE  2D                 	db	45
  3139  00FBBF  20                 	db	32
  3140  00FBC0  52                 	db	82	;'R'
  3141  00FBC1  65                 	db	101	;'e'
  3142  00FBC2  61                 	db	97	;'a'
  3143  00FBC3  64                 	db	100	;'d'
  3144  00FBC4  79                 	db	121	;'y'
  3145  00FBC5  0D                 	db	13
  3146  00FBC6  0A                 	db	10
  3147  00FBC7  0A                 	db	10
  3148  00FBC8  00                 	db	0
  3149  00FBC9                     STR_115:
  3150                           
  3151                           ; BSR set to: 0
  3152  00FBC9  20                 	db	32
  3153  00FBCA  20                 	db	32
  3154  00FBCB  20                 	db	32
  3155  00FBCC  70                 	db	112	;'p'
  3156  00FBCD  61                 	db	97	;'a'
  3157  00FBCE  72                 	db	114	;'r'
  3158  00FBCF  74                 	db	116	;'t'
  3159  00FBD0  20                 	db	32
  3160  00FBD1  2D                 	db	45
  3161  00FBD2  20                 	db	32
  3162  00FBD3  53                 	db	83	;'S'
  3163  00FBD4  65                 	db	101	;'e'
  3164  00FBD5  74                 	db	116	;'t'
  3165  00FBD6  20                 	db	32
  3166  00FBD7  63                 	db	99	;'c'
  3167  00FBD8  61                 	db	97	;'a'
  3168  00FBD9  72                 	db	114	;'r'
  3169  00FBDA  64                 	db	100	;'d'
  3170  00FBDB  20                 	db	32
  3171  00FBDC  70                 	db	112	;'p'
  3172  00FBDD  61                 	db	97	;'a'
  3173  00FBDE  72                 	db	114	;'r'
  3174  00FBDF  74                 	db	116	;'t'
  3175  00FBE0  20                 	db	32
  3176  00FBE1  6E                 	db	110	;'n'
  3177  00FBE2  75                 	db	117	;'u'
  3178  00FBE3  6D                 	db	109	;'m'
  3179  00FBE4  62                 	db	98	;'b'
  3180  00FBE5  65                 	db	101	;'e'
  3181  00FBE6  72                 	db	114	;'r'
  3182  00FBE7  0D                 	db	13
  3183  00FBE8  0A                 	db	10
  3184  00FBE9  00                 	db	0
  3185  00FBEA                     STR_126:
  3186                           
  3187                           ; BSR set to: 0
  3188  00FBEA  0D                 	db	13
  3189  00FBEB  0A                 	db	10
  3190  00FBEC  45                 	db	69	;'E'
  3191  00FBED  6E                 	db	110	;'n'
  3192  00FBEE  74                 	db	116	;'t'
  3193  00FBEF  65                 	db	101	;'e'
  3194  00FBF0  72                 	db	114	;'r'
  3195  00FBF1  65                 	db	101	;'e'
  3196  00FBF2  64                 	db	100	;'d'
  3197  00FBF3  3A                 	db	58	;':'
  3198  00FBF4  20                 	db	32
  3199  00FBF5  25                 	db	37
  3200  00FBF6  73                 	db	115	;'s'
  3201  00FBF7  20                 	db	32
  3202  00FBF8  0D                 	db	13
  3203  00FBF9  0A                 	db	10
  3204  00FBFA  20                 	db	32
  3205  00FBFB  43                 	db	67	;'C'
  3206  00FBFC  6F                 	db	111	;'o'
  3207  00FBFD  6E                 	db	110	;'n'
  3208  00FBFE  66                 	db	102	;'f'
  3209  00FBFF  69                 	db	105	;'i'
  3210  00FC00  72                 	db	114	;'r'
  3211  00FC01  6D                 	db	109	;'m'
  3212  00FC02  20                 	db	32
  3213  00FC03  20                 	db	32
  3214  00FC04  59                 	db	89	;'Y'
  3215  00FC05  7C                 	db	124
  3216  00FC06  4E                 	db	78	;'N'
  3217  00FC07  3F                 	db	63	;'?'
  3218  00FC08  3A                 	db	58	;':'
  3219  00FC09  20                 	db	32
  3220  00FC0A  00                 	db	0
  3221  00FC0B                     STR_116:
  3222                           
  3223                           ; BSR set to: 0
  3224  00FC0B  20                 	db	32
  3225  00FC0C  20                 	db	32
  3226  00FC0D  20                 	db	32
  3227  00FC0E  72                 	db	114	;'r'
  3228  00FC0F  65                 	db	101	;'e'
  3229  00FC10  76                 	db	118	;'v'
  3230  00FC11  20                 	db	32
  3231  00FC12  2D                 	db	45
  3232  00FC13  20                 	db	32
  3233  00FC14  53                 	db	83	;'S'
  3234  00FC15  65                 	db	101	;'e'
  3235  00FC16  74                 	db	116	;'t'
  3236  00FC17  20                 	db	32
  3237  00FC18  63                 	db	99	;'c'
  3238  00FC19  61                 	db	97	;'a'
  3239  00FC1A  72                 	db	114	;'r'
  3240  00FC1B  64                 	db	100	;'d'
  3241  00FC1C  20                 	db	32
  3242  00FC1D  70                 	db	112	;'p'
  3243  00FC1E  61                 	db	97	;'a'
  3244  00FC1F  72                 	db	114	;'r'
  3245  00FC20  74                 	db	116	;'t'
  3246  00FC21  20                 	db	32
  3247  00FC22  6E                 	db	110	;'n'
  3248  00FC23  75                 	db	117	;'u'
  3249  00FC24  6D                 	db	109	;'m'
  3250  00FC25  62                 	db	98	;'b'
  3251  00FC26  65                 	db	101	;'e'
  3252  00FC27  72                 	db	114	;'r'
  3253  00FC28  0D                 	db	13
  3254  00FC29  0A                 	db	10
  3255  00FC2A  00                 	db	0
  3256  00FC2B                     STR_80:
  3257                           
  3258                           ; BSR set to: 0
  3259  00FC2B  0D                 	db	13
  3260  00FC2C  0A                 	db	10
  3261  00FC2D  52                 	db	82	;'R'
  3262  00FC2E  65                 	db	101	;'e'
  3263  00FC2F  63                 	db	99	;'c'
  3264  00FC30  65                 	db	101	;'e'
  3265  00FC31  69                 	db	105	;'i'
  3266  00FC32  76                 	db	118	;'v'
  3267  00FC33  65                 	db	101	;'e'
  3268  00FC34  64                 	db	100	;'d'
  3269  00FC35  20                 	db	32
  3270  00FC36  4D                 	db	77	;'M'
  3271  00FC37  6F                 	db	111	;'o'
  3272  00FC38  64                 	db	100	;'d'
  3273  00FC39  62                 	db	98	;'b'
  3274  00FC3A  75                 	db	117	;'u'
  3275  00FC3B  73                 	db	115	;'s'
  3276  00FC3C  20                 	db	32
  3277  00FC3D  43                 	db	67	;'C'
  3278  00FC3E  52                 	db	82	;'R'
  3279  00FC3F  43                 	db	67	;'C'
  3280  00FC40  20                 	db	32
  3281  00FC41  69                 	db	105	;'i'
  3282  00FC42  73                 	db	115	;'s'
  3283  00FC43  20                 	db	32
  3284  00FC44  62                 	db	98	;'b'
  3285  00FC45  61                 	db	97	;'a'
  3286  00FC46  64                 	db	100	;'d'
  3287  00FC47  2E                 	db	46
  3288  00FC48  0D                 	db	13
  3289  00FC49  0A                 	db	10
  3290  00FC4A  00                 	db	0
  3291  00FC4B                     STR_29:
  3292                           
  3293                           ; BSR set to: 0
  3294  00FC4B  20                 	db	32
  3295  00FC4C  20                 	db	32
  3296  00FC4D  20                 	db	32
  3297  00FC4E  42                 	db	66	;'B'
  3298  00FC4F  79                 	db	121	;'y'
  3299  00FC50  74                 	db	116	;'t'
  3300  00FC51  65                 	db	101	;'e'
  3301  00FC52  20                 	db	32
  3302  00FC53  25                 	db	37
  3303  00FC54  30                 	db	48	;'0'
  3304  00FC55  32                 	db	50	;'2'
  3305  00FC56  69                 	db	105	;'i'
  3306  00FC57  3A                 	db	58	;':'
  3307  00FC58  20                 	db	32
  3308  00FC59  30                 	db	48	;'0'
  3309  00FC5A  78                 	db	120	;'x'
  3310  00FC5B  25                 	db	37
  3311  00FC5C  30                 	db	48	;'0'
  3312  00FC5D  32                 	db	50	;'2'
  3313  00FC5E  78                 	db	120	;'x'
  3314  00FC5F  20                 	db	32
  3315  00FC60  2D                 	db	45
  3316  00FC61  20                 	db	32
  3317  00FC62  43                 	db	67	;'C'
  3318  00FC63  52                 	db	82	;'R'
  3319  00FC64  43                 	db	67	;'C'
  3320  00FC65  20                 	db	32
  3321  00FC66  48                 	db	72	;'H'
  3322  00FC67  69                 	db	105	;'i'
  3323  00FC68  0D                 	db	13
  3324  00FC69  0A                 	db	10
  3325  00FC6A  00                 	db	0
  3326  00FC6B                     STR_30:
  3327                           
  3328                           ; BSR set to: 0
  3329  00FC6B  20                 	db	32
  3330  00FC6C  20                 	db	32
  3331  00FC6D  20                 	db	32
  3332  00FC6E  42                 	db	66	;'B'
  3333  00FC6F  79                 	db	121	;'y'
  3334  00FC70  74                 	db	116	;'t'
  3335  00FC71  65                 	db	101	;'e'
  3336  00FC72  20                 	db	32
  3337  00FC73  25                 	db	37
  3338  00FC74  30                 	db	48	;'0'
  3339  00FC75  32                 	db	50	;'2'
  3340  00FC76  69                 	db	105	;'i'
  3341  00FC77  3A                 	db	58	;':'
  3342  00FC78  20                 	db	32
  3343  00FC79  30                 	db	48	;'0'
  3344  00FC7A  78                 	db	120	;'x'
  3345  00FC7B  25                 	db	37
  3346  00FC7C  30                 	db	48	;'0'
  3347  00FC7D  32                 	db	50	;'2'
  3348  00FC7E  78                 	db	120	;'x'
  3349  00FC7F  20                 	db	32
  3350  00FC80  2D                 	db	45
  3351  00FC81  20                 	db	32
  3352  00FC82  43                 	db	67	;'C'
  3353  00FC83  52                 	db	82	;'R'
  3354  00FC84  43                 	db	67	;'C'
  3355  00FC85  20                 	db	32
  3356  00FC86  4C                 	db	76	;'L'
  3357  00FC87  6F                 	db	111	;'o'
  3358  00FC88  0D                 	db	13
  3359  00FC89  0A                 	db	10
  3360  00FC8A  00                 	db	0
  3361  00FC8B                     STR_3:
  3362                           
  3363                           ; BSR set to: 0
  3364  00FC8B  4D                 	db	77	;'M'
  3365  00FC8C  6F                 	db	111	;'o'
  3366  00FC8D  64                 	db	100	;'d'
  3367  00FC8E  62                 	db	98	;'b'
  3368  00FC8F  75                 	db	117	;'u'
  3369  00FC90  73                 	db	115	;'s'
  3370  00FC91  20                 	db	32
  3371  00FC92  52                 	db	82	;'R'
  3372  00FC93  65                 	db	101	;'e'
  3373  00FC94  67                 	db	103	;'g'
  3374  00FC95  69                 	db	105	;'i'
  3375  00FC96  73                 	db	115	;'s'
  3376  00FC97  74                 	db	116	;'t'
  3377  00FC98  65                 	db	101	;'e'
  3378  00FC99  72                 	db	114	;'r'
  3379  00FC9A  20                 	db	32
  3380  00FC9B  42                 	db	66	;'B'
  3381  00FC9C  65                 	db	101	;'e'
  3382  00FC9D  66                 	db	102	;'f'
  3383  00FC9E  6F                 	db	111	;'o'
  3384  00FC9F  72                 	db	114	;'r'
  3385  00FCA0  65                 	db	101	;'e'
  3386  00FCA1  20                 	db	32
  3387  00FCA2  55                 	db	85	;'U'
  3388  00FCA3  70                 	db	112	;'p'
  3389  00FCA4  64                 	db	100	;'d'
  3390  00FCA5  61                 	db	97	;'a'
  3391  00FCA6  74                 	db	116	;'t'
  3392  00FCA7  65                 	db	101	;'e'
  3393  00FCA8  3A                 	db	58	;':'
  3394  00FCA9  00                 	db	0
  3395  00FCAA                     STR_18:
  3396                           
  3397                           ; BSR set to: 0
  3398  00FCAA  20                 	db	32
  3399  00FCAB  20                 	db	32
  3400  00FCAC  20                 	db	32
  3401  00FCAD  42                 	db	66	;'B'
  3402  00FCAE  79                 	db	121	;'y'
  3403  00FCAF  74                 	db	116	;'t'
  3404  00FCB0  65                 	db	101	;'e'
  3405  00FCB1  20                 	db	32
  3406  00FCB2  30                 	db	48	;'0'
  3407  00FCB3  36                 	db	54	;'6'
  3408  00FCB4  3A                 	db	58	;':'
  3409  00FCB5  20                 	db	32
  3410  00FCB6  30                 	db	48	;'0'
  3411  00FCB7  78                 	db	120	;'x'
  3412  00FCB8  25                 	db	37
  3413  00FCB9  30                 	db	48	;'0'
  3414  00FCBA  32                 	db	50	;'2'
  3415  00FCBB  78                 	db	120	;'x'
  3416  00FCBC  20                 	db	32
  3417  00FCBD  2D                 	db	45
  3418  00FCBE  20                 	db	32
  3419  00FCBF  43                 	db	67	;'C'
  3420  00FCC0  52                 	db	82	;'R'
  3421  00FCC1  43                 	db	67	;'C'
  3422  00FCC2  20                 	db	32
  3423  00FCC3  48                 	db	72	;'H'
  3424  00FCC4  69                 	db	105	;'i'
  3425  00FCC5  0D                 	db	13
  3426  00FCC6  0A                 	db	10
  3427  00FCC7  00                 	db	0
  3428  00FCC8                     STR_74:
  3429                           
  3430                           ; BSR set to: 0
  3431  00FCC8  20                 	db	32
  3432  00FCC9  20                 	db	32
  3433  00FCCA  20                 	db	32
  3434  00FCCB  42                 	db	66	;'B'
  3435  00FCCC  79                 	db	121	;'y'
  3436  00FCCD  74                 	db	116	;'t'
  3437  00FCCE  65                 	db	101	;'e'
  3438  00FCCF  20                 	db	32
  3439  00FCD0  30                 	db	48	;'0'
  3440  00FCD1  37                 	db	55	;'7'
  3441  00FCD2  3A                 	db	58	;':'
  3442  00FCD3  20                 	db	32
  3443  00FCD4  30                 	db	48	;'0'
  3444  00FCD5  78                 	db	120	;'x'
  3445  00FCD6  25                 	db	37
  3446  00FCD7  30                 	db	48	;'0'
  3447  00FCD8  32                 	db	50	;'2'
  3448  00FCD9  78                 	db	120	;'x'
  3449  00FCDA  20                 	db	32
  3450  00FCDB  2D                 	db	45
  3451  00FCDC  20                 	db	32
  3452  00FCDD  43                 	db	67	;'C'
  3453  00FCDE  52                 	db	82	;'R'
  3454  00FCDF  43                 	db	67	;'C'
  3455  00FCE0  20                 	db	32
  3456  00FCE1  48                 	db	72	;'H'
  3457  00FCE2  69                 	db	105	;'i'
  3458  00FCE3  0D                 	db	13
  3459  00FCE4  0A                 	db	10
  3460  00FCE5  00                 	db	0
  3461  00FCE6                     STR_19:
  3462                           
  3463                           ; BSR set to: 0
  3464  00FCE6  20                 	db	32
  3465  00FCE7  20                 	db	32
  3466  00FCE8  20                 	db	32
  3467  00FCE9  42                 	db	66	;'B'
  3468  00FCEA  79                 	db	121	;'y'
  3469  00FCEB  74                 	db	116	;'t'
  3470  00FCEC  65                 	db	101	;'e'
  3471  00FCED  20                 	db	32
  3472  00FCEE  30                 	db	48	;'0'
  3473  00FCEF  37                 	db	55	;'7'
  3474  00FCF0  3A                 	db	58	;':'
  3475  00FCF1  20                 	db	32
  3476  00FCF2  30                 	db	48	;'0'
  3477  00FCF3  78                 	db	120	;'x'
  3478  00FCF4  25                 	db	37
  3479  00FCF5  30                 	db	48	;'0'
  3480  00FCF6  32                 	db	50	;'2'
  3481  00FCF7  78                 	db	120	;'x'
  3482  00FCF8  20                 	db	32
  3483  00FCF9  2D                 	db	45
  3484  00FCFA  20                 	db	32
  3485  00FCFB  43                 	db	67	;'C'
  3486  00FCFC  52                 	db	82	;'R'
  3487  00FCFD  43                 	db	67	;'C'
  3488  00FCFE  20                 	db	32
  3489  00FCFF  4C                 	db	76	;'L'
  3490  00FD00  6F                 	db	111	;'o'
  3491  00FD01  0D                 	db	13
  3492  00FD02  0A                 	db	10
  3493  00FD03  00                 	db	0
  3494  00FD04                     STR_35:
  3495                           
  3496                           ; BSR set to: 0
  3497  00FD04  52                 	db	82	;'R'
  3498  00FD05  65                 	db	101	;'e'
  3499  00FD06  71                 	db	113	;'q'
  3500  00FD07  75                 	db	117	;'u'
  3501  00FD08  65                 	db	101	;'e'
  3502  00FD09  73                 	db	115	;'s'
  3503  00FD0A  74                 	db	116	;'t'
  3504  00FD0B  65                 	db	101	;'e'
  3505  00FD0C  64                 	db	100	;'d'
  3506  00FD0D  3A                 	db	58	;':'
  3507  00FD0E  20                 	db	32
  3508  00FD0F  30                 	db	48	;'0'
  3509  00FD10  78                 	db	120	;'x'
  3510  00FD11  25                 	db	37
  3511  00FD12  30                 	db	48	;'0'
  3512  00FD13  34                 	db	52	;'4'
  3513  00FD14  78                 	db	120	;'x'
  3514  00FD15  20                 	db	32
  3515  00FD16  74                 	db	116	;'t'
  3516  00FD17  6F                 	db	111	;'o'
  3517  00FD18  20                 	db	32
  3518  00FD19  30                 	db	48	;'0'
  3519  00FD1A  78                 	db	120	;'x'
  3520  00FD1B  25                 	db	37
  3521  00FD1C  30                 	db	48	;'0'
  3522  00FD1D  34                 	db	52	;'4'
  3523  00FD1E  78                 	db	120	;'x'
  3524  00FD1F  0D                 	db	13
  3525  00FD20  0A                 	db	10
  3526  00FD21  00                 	db	0
  3527  00FD22                     STR_4:
  3528                           
  3529                           ; BSR set to: 0
  3530  00FD22  4D                 	db	77	;'M'
  3531  00FD23  6F                 	db	111	;'o'
  3532  00FD24  64                 	db	100	;'d'
  3533  00FD25  62                 	db	98	;'b'
  3534  00FD26  75                 	db	117	;'u'
  3535  00FD27  73                 	db	115	;'s'
  3536  00FD28  20                 	db	32
  3537  00FD29  52                 	db	82	;'R'
  3538  00FD2A  65                 	db	101	;'e'
  3539  00FD2B  67                 	db	103	;'g'
  3540  00FD2C  69                 	db	105	;'i'
  3541  00FD2D  73                 	db	115	;'s'
  3542  00FD2E  74                 	db	116	;'t'
  3543  00FD2F  65                 	db	101	;'e'
  3544  00FD30  72                 	db	114	;'r'
  3545  00FD31  20                 	db	32
  3546  00FD32  41                 	db	65	;'A'
  3547  00FD33  66                 	db	102	;'f'
  3548  00FD34  74                 	db	116	;'t'
  3549  00FD35  65                 	db	101	;'e'
  3550  00FD36  72                 	db	114	;'r'
  3551  00FD37  20                 	db	32
  3552  00FD38  55                 	db	85	;'U'
  3553  00FD39  70                 	db	112	;'p'
  3554  00FD3A  64                 	db	100	;'d'
  3555  00FD3B  61                 	db	97	;'a'
  3556  00FD3C  74                 	db	116	;'t'
  3557  00FD3D  65                 	db	101	;'e'
  3558  00FD3E  3A                 	db	58	;':'
  3559  00FD3F  00                 	db	0
  3560  00FD40                     STR_10:
  3561                           
  3562                           ; BSR set to: 0
  3563  00FD40  4D                 	db	77	;'M'
  3564  00FD41  6F                 	db	111	;'o'
  3565  00FD42  64                 	db	100	;'d'
  3566  00FD43  44                 	db	68	;'D'
  3567  00FD44  61                 	db	97	;'a'
  3568  00FD45  74                 	db	116	;'t'
  3569  00FD46  61                 	db	97	;'a'
  3570  00FD47  43                 	db	67	;'C'
  3571  00FD48  6E                 	db	110	;'n'
  3572  00FD49  74                 	db	116	;'t'
  3573  00FD4A  20                 	db	32
  3574  00FD4B  73                 	db	115	;'s'
  3575  00FD4C  69                 	db	105	;'i'
  3576  00FD4D  74                 	db	116	;'t'
  3577  00FD4E  74                 	db	116	;'t'
  3578  00FD4F  69                 	db	105	;'i'
  3579  00FD50  6E                 	db	110	;'n'
  3580  00FD51  67                 	db	103	;'g'
  3581  00FD52  20                 	db	32
  3582  00FD53  61                 	db	97	;'a'
  3583  00FD54  74                 	db	116	;'t'
  3584  00FD55  20                 	db	32
  3585  00FD56  25                 	db	37
  3586  00FD57  69                 	db	105	;'i'
  3587  00FD58  0D                 	db	13
  3588  00FD59  0A                 	db	10
  3589  00FD5A  0A                 	db	10
  3590  00FD5B  00                 	db	0
  3591  00FD5C                     STR_54:
  3592                           
  3593                           ; BSR set to: 0
  3594  00FD5C  52                 	db	82	;'R'
  3595  00FD5D  65                 	db	101	;'e'
  3596  00FD5E  71                 	db	113	;'q'
  3597  00FD5F  75                 	db	117	;'u'
  3598  00FD60  65                 	db	101	;'e'
  3599  00FD61  73                 	db	115	;'s'
  3600  00FD62  74                 	db	116	;'t'
  3601  00FD63  65                 	db	101	;'e'
  3602  00FD64  64                 	db	100	;'d'
  3603  00FD65  20                 	db	32
  3604  00FD66  41                 	db	65	;'A'
  3605  00FD67  6E                 	db	110	;'n'
  3606  00FD68  61                 	db	97	;'a'
  3607  00FD69  6C                 	db	108	;'l'
  3608  00FD6A  6F                 	db	111	;'o'
  3609  00FD6B  67                 	db	103	;'g'
  3610  00FD6C  75                 	db	117	;'u'
  3611  00FD6D  65                 	db	101	;'e'
  3612  00FD6E  20                 	db	32
  3613  00FD6F  49                 	db	73	;'I'
  3614  00FD70  6E                 	db	110	;'n'
  3615  00FD71  70                 	db	112	;'p'
  3616  00FD72  75                 	db	117	;'u'
  3617  00FD73  74                 	db	116	;'t'
  3618  00FD74  73                 	db	115	;'s'
  3619  00FD75  0D                 	db	13
  3620  00FD76  0A                 	db	10
  3621  00FD77  00                 	db	0
  3622  00FD78                     STR_5:
  3623                           
  3624                           ; BSR set to: 0
  3625  00FD78  55                 	db	85	;'U'
  3626  00FD79  6E                 	db	110	;'n'
  3627  00FD7A  73                 	db	115	;'s'
  3628  00FD7B  75                 	db	117	;'u'
  3629  00FD7C  70                 	db	112	;'p'
  3630  00FD7D  70                 	db	112	;'p'
  3631  00FD7E  6F                 	db	111	;'o'
  3632  00FD7F  72                 	db	114	;'r'
  3633  00FD80  74                 	db	116	;'t'
  3634  00FD81  65                 	db	101	;'e'
  3635  00FD82  64                 	db	100	;'d'
  3636  00FD83  20                 	db	32
  3637  00FD84  46                 	db	70	;'F'
  3638  00FD85  75                 	db	117	;'u'
  3639  00FD86  6E                 	db	110	;'n'
  3640  00FD87  63                 	db	99	;'c'
  3641  00FD88  74                 	db	116	;'t'
  3642  00FD89  69                 	db	105	;'i'
  3643  00FD8A  6F                 	db	111	;'o'
  3644  00FD8B  6E                 	db	110	;'n'
  3645  00FD8C  20                 	db	32
  3646  00FD8D  43                 	db	67	;'C'
  3647  00FD8E  6F                 	db	111	;'o'
  3648  00FD8F  64                 	db	100	;'d'
  3649  00FD90  65                 	db	101	;'e'
  3650  00FD91  0D                 	db	13
  3651  00FD92  0A                 	db	10
  3652  00FD93  00                 	db	0
  3653  00FD94                     STR_8:
  3654                           
  3655                           ; BSR set to: 0
  3656  00FD94  20                 	db	32
  3657  00FD95  20                 	db	32
  3658  00FD96  20                 	db	32
  3659  00FD97  52                 	db	82	;'R'
  3660  00FD98  65                 	db	101	;'e'
  3661  00FD99  67                 	db	103	;'g'
  3662  00FD9A  3A                 	db	58	;':'
  3663  00FD9B  20                 	db	32
  3664  00FD9C  25                 	db	37
  3665  00FD9D  69                 	db	105	;'i'
  3666  00FD9E  20                 	db	32
  3667  00FD9F  44                 	db	68	;'D'
  3668  00FDA0  61                 	db	97	;'a'
  3669  00FDA1  74                 	db	116	;'t'
  3670  00FDA2  61                 	db	97	;'a'
  3671  00FDA3  3A                 	db	58	;':'
  3672  00FDA4  20                 	db	32
  3673  00FDA5  30                 	db	48	;'0'
  3674  00FDA6  78                 	db	120	;'x'
  3675  00FDA7  25                 	db	37
  3676  00FDA8  30                 	db	48	;'0'
  3677  00FDA9  34                 	db	52	;'4'
  3678  00FDAA  78                 	db	120	;'x'
  3679  00FDAB  20                 	db	32
  3680  00FDAC  0D                 	db	13
  3681  00FDAD  0A                 	db	10
  3682  00FDAE  00                 	db	0
  3683  00FDAF                     STR_36:
  3684                           
  3685                           ; BSR set to: 0
  3686  00FDAF  52                 	db	82	;'R'
  3687  00FDB0  65                 	db	101	;'e'
  3688  00FDB1  71                 	db	113	;'q'
  3689  00FDB2  75                 	db	117	;'u'
  3690  00FDB3  65                 	db	101	;'e'
  3691  00FDB4  73                 	db	115	;'s'
  3692  00FDB5  74                 	db	116	;'t'
  3693  00FDB6  65                 	db	101	;'e'
  3694  00FDB7  64                 	db	100	;'d'
  3695  00FDB8  20                 	db	32
  3696  00FDB9  43                 	db	67	;'C'
  3697  00FDBA  69                 	db	105	;'i'
  3698  00FDBB  72                 	db	114	;'r'
  3699  00FDBC  63                 	db	99	;'c'
  3700  00FDBD  75                 	db	117	;'u'
  3701  00FDBE  69                 	db	105	;'i'
  3702  00FDBF  74                 	db	116	;'t'
  3703  00FDC0  20                 	db	32
  3704  00FDC1  44                 	db	68	;'D'
  3705  00FDC2  61                 	db	97	;'a'
  3706  00FDC3  74                 	db	116	;'t'
  3707  00FDC4  61                 	db	97	;'a'
  3708  00FDC5  0D                 	db	13
  3709  00FDC6  0A                 	db	10
  3710  00FDC7  00                 	db	0
  3711  00FDC8                     STR_51:
  3712                           
  3713                           ; BSR set to: 0
  3714  00FDC8  52                 	db	82	;'R'
  3715  00FDC9  65                 	db	101	;'e'
  3716  00FDCA  71                 	db	113	;'q'
  3717  00FDCB  75                 	db	117	;'u'
  3718  00FDCC  65                 	db	101	;'e'
  3719  00FDCD  73                 	db	115	;'s'
  3720  00FDCE  74                 	db	116	;'t'
  3721  00FDCF  65                 	db	101	;'e'
  3722  00FDD0  64                 	db	100	;'d'
  3723  00FDD1  20                 	db	32
  3724  00FDD2  43                 	db	67	;'C'
  3725  00FDD3  6F                 	db	111	;'o'
  3726  00FDD4  6D                 	db	109	;'m'
  3727  00FDD5  70                 	db	112	;'p'
  3728  00FDD6  69                 	db	105	;'i'
  3729  00FDD7  6C                 	db	108	;'l'
  3730  00FDD8  65                 	db	101	;'e'
  3731  00FDD9  20                 	db	32
  3732  00FDDA  54                 	db	84	;'T'
  3733  00FDDB  69                 	db	105	;'i'
  3734  00FDDC  6D                 	db	109	;'m'
  3735  00FDDD  65                 	db	101	;'e'
  3736  00FDDE  0D                 	db	13
  3737  00FDDF  0A                 	db	10
  3738  00FDE0  00                 	db	0
  3739  00FDE1                     STR_48:
  3740                           
  3741                           ; BSR set to: 0
  3742  00FDE1  52                 	db	82	;'R'
  3743  00FDE2  65                 	db	101	;'e'
  3744  00FDE3  71                 	db	113	;'q'
  3745  00FDE4  75                 	db	117	;'u'
  3746  00FDE5  65                 	db	101	;'e'
  3747  00FDE6  73                 	db	115	;'s'
  3748  00FDE7  74                 	db	116	;'t'
  3749  00FDE8  65                 	db	101	;'e'
  3750  00FDE9  64                 	db	100	;'d'
  3751  00FDEA  20                 	db	32
  3752  00FDEB  43                 	db	67	;'C'
  3753  00FDEC  6F                 	db	111	;'o'
  3754  00FDED  6D                 	db	109	;'m'
  3755  00FDEE  70                 	db	112	;'p'
  3756  00FDEF  69                 	db	105	;'i'
  3757  00FDF0  6C                 	db	108	;'l'
  3758  00FDF1  65                 	db	101	;'e'
  3759  00FDF2  20                 	db	32
  3760  00FDF3  44                 	db	68	;'D'
  3761  00FDF4  61                 	db	97	;'a'
  3762  00FDF5  74                 	db	116	;'t'
  3763  00FDF6  65                 	db	101	;'e'
  3764  00FDF7  0D                 	db	13
  3765  00FDF8  0A                 	db	10
  3766  00FDF9  00                 	db	0
  3767  00FDFA                     STR_77:
  3768                           
  3769                           ; BSR set to: 0
  3770  00FDFA  53                 	db	83	;'S'
  3771  00FDFB  6F                 	db	111	;'o'
  3772  00FDFC  6D                 	db	109	;'m'
  3773  00FDFD  65                 	db	101	;'e'
  3774  00FDFE  74                 	db	116	;'t'
  3775  00FDFF  68                 	db	104	;'h'
  3776  00FE00  69                 	db	105	;'i'
  3777  00FE01  6E                 	db	110	;'n'
  3778  00FE02  67                 	db	103	;'g'
  3779  00FE03  20                 	db	32
  3780  00FE04  69                 	db	105	;'i'
  3781  00FE05  6E                 	db	110	;'n'
  3782  00FE06  20                 	db	32
  3783  00FE07  45                 	db	69	;'E'
  3784  00FE08  53                 	db	83	;'S'
  3785  00FE09  55                 	db	85	;'U'
  3786  00FE0A  41                 	db	65	;'A'
  3787  00FE0B  52                 	db	82	;'R'
  3788  00FE0C  54                 	db	84	;'T'
  3789  00FE0D  31                 	db	49	;'1'
  3790  00FE0E  20                 	db	32
  3791  00FE0F  0D                 	db	13
  3792  00FE10  0A                 	db	10
  3793  00FE11  00                 	db	0
  3794  00FE12                     STR_75:
  3795                           
  3796                           ; BSR set to: 0
  3797  00FE12  20                 	db	32
  3798  00FE13  20                 	db	32
  3799  00FE14  20                 	db	32
  3800  00FE15  42                 	db	66	;'B'
  3801  00FE16  79                 	db	121	;'y'
  3802  00FE17  74                 	db	116	;'t'
  3803  00FE18  65                 	db	101	;'e'
  3804  00FE19  20                 	db	32
  3805  00FE1A  25                 	db	37
  3806  00FE1B  30                 	db	48	;'0'
  3807  00FE1C  32                 	db	50	;'2'
  3808  00FE1D  69                 	db	105	;'i'
  3809  00FE1E  3A                 	db	58	;':'
  3810  00FE1F  20                 	db	32
  3811  00FE20  30                 	db	48	;'0'
  3812  00FE21  78                 	db	120	;'x'
  3813  00FE22  25                 	db	37
  3814  00FE23  30                 	db	48	;'0'
  3815  00FE24  32                 	db	50	;'2'
  3816  00FE25  78                 	db	120	;'x'
  3817  00FE26  20                 	db	32
  3818  00FE27  0D                 	db	13
  3819  00FE28  0A                 	db	10
  3820  00FE29  00                 	db	0
  3821  00FE2A                     STR_45:
  3822                           
  3823                           ; BSR set to: 0
  3824  00FE2A  52                 	db	82	;'R'
  3825  00FE2B  65                 	db	101	;'e'
  3826  00FE2C  71                 	db	113	;'q'
  3827  00FE2D  75                 	db	117	;'u'
  3828  00FE2E  65                 	db	101	;'e'
  3829  00FE2F  73                 	db	115	;'s'
  3830  00FE30  74                 	db	116	;'t'
  3831  00FE31  65                 	db	101	;'e'
  3832  00FE32  64                 	db	100	;'d'
  3833  00FE33  20                 	db	32
  3834  00FE34  53                 	db	83	;'S'
  3835  00FE35  65                 	db	101	;'e'
  3836  00FE36  72                 	db	114	;'r'
  3837  00FE37  69                 	db	105	;'i'
  3838  00FE38  61                 	db	97	;'a'
  3839  00FE39  6C                 	db	108	;'l'
  3840  00FE3A  20                 	db	32
  3841  00FE3B  4E                 	db	78	;'N'
  3842  00FE3C  6F                 	db	111	;'o'
  3843  00FE3D  2E                 	db	46
  3844  00FE3E  0D                 	db	13
  3845  00FE3F  0A                 	db	10
  3846  00FE40  00                 	db	0
  3847  00FE41                     STR_94:
  3848                           
  3849                           ; BSR set to: 0
  3850  00FE41  43                 	db	67	;'C'
  3851  00FE42  61                 	db	97	;'a'
  3852  00FE43  72                 	db	114	;'r'
  3853  00FE44  64                 	db	100	;'d'
  3854  00FE45  20                 	db	32
  3855  00FE46  41                 	db	65	;'A'
  3856  00FE47  64                 	db	100	;'d'
  3857  00FE48  64                 	db	100	;'d'
  3858  00FE49  72                 	db	114	;'r'
  3859  00FE4A  65                 	db	101	;'e'
  3860  00FE4B  73                 	db	115	;'s'
  3861  00FE4C  73                 	db	115	;'s'
  3862  00FE4D  2E                 	db	46
  3863  00FE4E  20                 	db	32
  3864  00FE4F  30                 	db	48	;'0'
  3865  00FE50  78                 	db	120	;'x'
  3866  00FE51  30                 	db	48	;'0'
  3867  00FE52  35                 	db	53	;'5'
  3868  00FE53  20                 	db	32
  3869  00FE54  0D                 	db	13
  3870  00FE55  0A                 	db	10
  3871  00FE56  00                 	db	0
  3872  00FE57                     STR_112:
  3873                           
  3874                           ; BSR set to: 0
  3875  00FE57  43                 	db	67	;'C'
  3876  00FE58  6F                 	db	111	;'o'
  3877  00FE59  6D                 	db	109	;'m'
  3878  00FE5A  6D                 	db	109	;'m'
  3879  00FE5B  61                 	db	97	;'a'
  3880  00FE5C  6E                 	db	110	;'n'
  3881  00FE5D  64                 	db	100	;'d'
  3882  00FE5E  73                 	db	115	;'s'
  3883  00FE5F  20                 	db	32
  3884  00FE60  53                 	db	83	;'S'
  3885  00FE61  75                 	db	117	;'u'
  3886  00FE62  70                 	db	112	;'p'
  3887  00FE63  70                 	db	112	;'p'
  3888  00FE64  6F                 	db	111	;'o'
  3889  00FE65  72                 	db	114	;'r'
  3890  00FE66  74                 	db	116	;'t'
  3891  00FE67  65                 	db	101	;'e'
  3892  00FE68  64                 	db	100	;'d'
  3893  00FE69  3A                 	db	58	;':'
  3894  00FE6A  0D                 	db	13
  3895  00FE6B  0A                 	db	10
  3896  00FE6C  00                 	db	0
  3897  00FE6D                     STR_93:
  3898                           
  3899                           ; BSR set to: 0
  3900  00FE6D  43                 	db	67	;'C'
  3901  00FE6E  61                 	db	97	;'a'
  3902  00FE6F  72                 	db	114	;'r'
  3903  00FE70  64                 	db	100	;'d'
  3904  00FE71  20                 	db	32
  3905  00FE72  52                 	db	82	;'R'
  3906  00FE73  65                 	db	101	;'e'
  3907  00FE74  76                 	db	118	;'v'
  3908  00FE75  69                 	db	105	;'i'
  3909  00FE76  73                 	db	115	;'s'
  3910  00FE77  69                 	db	105	;'i'
  3911  00FE78  6F                 	db	111	;'o'
  3912  00FE79  6E                 	db	110	;'n'
  3913  00FE7A  2E                 	db	46
  3914  00FE7B  20                 	db	32
  3915  00FE7C  25                 	db	37
  3916  00FE7D  73                 	db	115	;'s'
  3917  00FE7E  20                 	db	32
  3918  00FE7F  0D                 	db	13
  3919  00FE80  0A                 	db	10
  3920  00FE81  00                 	db	0
  3921  00FE82                     STR_39:
  3922                           
  3923                           ; BSR set to: 0
  3924  00FE82  52                 	db	82	;'R'
  3925  00FE83  65                 	db	101	;'e'
  3926  00FE84  71                 	db	113	;'q'
  3927  00FE85  75                 	db	117	;'u'
  3928  00FE86  65                 	db	101	;'e'
  3929  00FE87  73                 	db	115	;'s'
  3930  00FE88  74                 	db	116	;'t'
  3931  00FE89  65                 	db	101	;'e'
  3932  00FE8A  64                 	db	100	;'d'
  3933  00FE8B  20                 	db	32
  3934  00FE8C  50                 	db	80	;'P'
  3935  00FE8D  61                 	db	97	;'a'
  3936  00FE8E  72                 	db	114	;'r'
  3937  00FE8F  74                 	db	116	;'t'
  3938  00FE90  20                 	db	32
  3939  00FE91  4E                 	db	78	;'N'
  3940  00FE92  6F                 	db	111	;'o'
  3941  00FE93  2E                 	db	46
  3942  00FE94  0D                 	db	13
  3943  00FE95  0A                 	db	10
  3944  00FE96  00                 	db	0
  3945  00FE97                     STR_11:
  3946                           
  3947                           ; BSR set to: 0
  3948  00FE97  0D                 	db	13
  3949  00FE98  0A                 	db	10
  3950  00FE99  4D                 	db	77	;'M'
  3951  00FE9A  6F                 	db	111	;'o'
  3952  00FE9B  64                 	db	100	;'d'
  3953  00FE9C  62                 	db	98	;'b'
  3954  00FE9D  75                 	db	117	;'u'
  3955  00FE9E  73                 	db	115	;'s'
  3956  00FE9F  20                 	db	32
  3957  00FEA0  52                 	db	82	;'R'
  3958  00FEA1  65                 	db	101	;'e'
  3959  00FEA2  63                 	db	99	;'c'
  3960  00FEA3  65                 	db	101	;'e'
  3961  00FEA4  69                 	db	105	;'i'
  3962  00FEA5  76                 	db	118	;'v'
  3963  00FEA6  65                 	db	101	;'e'
  3964  00FEA7  64                 	db	100	;'d'
  3965  00FEA8  3A                 	db	58	;':'
  3966  00FEA9  0D                 	db	13
  3967  00FEAA  0A                 	db	10
  3968  00FEAB  00                 	db	0
  3969  00FEAC                     STR_42:
  3970                           
  3971                           ; BSR set to: 0
  3972  00FEAC  52                 	db	82	;'R'
  3973  00FEAD  65                 	db	101	;'e'
  3974  00FEAE  71                 	db	113	;'q'
  3975  00FEAF  75                 	db	117	;'u'
  3976  00FEB0  65                 	db	101	;'e'
  3977  00FEB1  73                 	db	115	;'s'
  3978  00FEB2  74                 	db	116	;'t'
  3979  00FEB3  65                 	db	101	;'e'
  3980  00FEB4  64                 	db	100	;'d'
  3981  00FEB5  20                 	db	32
  3982  00FEB6  52                 	db	82	;'R'
  3983  00FEB7  65                 	db	101	;'e'
  3984  00FEB8  76                 	db	118	;'v'
  3985  00FEB9  69                 	db	105	;'i'
  3986  00FEBA  73                 	db	115	;'s'
  3987  00FEBB  69                 	db	105	;'i'
  3988  00FEBC  6F                 	db	111	;'o'
  3989  00FEBD  6E                 	db	110	;'n'
  3990  00FEBE  0D                 	db	13
  3991  00FEBF  0A                 	db	10
  3992  00FEC0  00                 	db	0
  3993  00FEC1                     STR_2:
  3994                           
  3995                           ; BSR set to: 0
  3996  00FEC1  46                 	db	70	;'F'
  3997  00FEC2  75                 	db	117	;'u'
  3998  00FEC3  6E                 	db	110	;'n'
  3999  00FEC4  63                 	db	99	;'c'
  4000  00FEC5  74                 	db	116	;'t'
  4001  00FEC6  69                 	db	105	;'i'
  4002  00FEC7  6F                 	db	111	;'o'
  4003  00FEC8  6E                 	db	110	;'n'
  4004  00FEC9  20                 	db	32
  4005  00FECA  43                 	db	67	;'C'
  4006  00FECB  6F                 	db	111	;'o'
  4007  00FECC  64                 	db	100	;'d'
  4008  00FECD  65                 	db	101	;'e'
  4009  00FECE  20                 	db	32
  4010  00FECF  30                 	db	48	;'0'
  4011  00FED0  78                 	db	120	;'x'
  4012  00FED1  31                 	db	49	;'1'
  4013  00FED2  30                 	db	48	;'0'
  4014  00FED3  0D                 	db	13
  4015  00FED4  0A                 	db	10
  4016  00FED5  00                 	db	0
  4017  00FED6                     STR_1:
  4018                           
  4019                           ; BSR set to: 0
  4020  00FED6  46                 	db	70	;'F'
  4021  00FED7  75                 	db	117	;'u'
  4022  00FED8  6E                 	db	110	;'n'
  4023  00FED9  63                 	db	99	;'c'
  4024  00FEDA  74                 	db	116	;'t'
  4025  00FEDB  69                 	db	105	;'i'
  4026  00FEDC  6F                 	db	111	;'o'
  4027  00FEDD  6E                 	db	110	;'n'
  4028  00FEDE  20                 	db	32
  4029  00FEDF  43                 	db	67	;'C'
  4030  00FEE0  6F                 	db	111	;'o'
  4031  00FEE1  64                 	db	100	;'d'
  4032  00FEE2  65                 	db	101	;'e'
  4033  00FEE3  20                 	db	32
  4034  00FEE4  30                 	db	48	;'0'
  4035  00FEE5  78                 	db	120	;'x'
  4036  00FEE6  30                 	db	48	;'0'
  4037  00FEE7  33                 	db	51	;'3'
  4038  00FEE8  0D                 	db	13
  4039  00FEE9  0A                 	db	10
  4040  00FEEA  00                 	db	0
  4041  00FEEB                     STR_92:
  4042                           
  4043                           ; BSR set to: 0
  4044  00FEEB  43                 	db	67	;'C'
  4045  00FEEC  61                 	db	97	;'a'
  4046  00FEED  72                 	db	114	;'r'
  4047  00FEEE  64                 	db	100	;'d'
  4048  00FEEF  20                 	db	32
  4049  00FEF0  50                 	db	80	;'P'
  4050  00FEF1  61                 	db	97	;'a'
  4051  00FEF2  72                 	db	114	;'r'
  4052  00FEF3  74                 	db	116	;'t'
  4053  00FEF4  20                 	db	32
  4054  00FEF5  4E                 	db	78	;'N'
  4055  00FEF6  6F                 	db	111	;'o'
  4056  00FEF7  2E                 	db	46
  4057  00FEF8  20                 	db	32
  4058  00FEF9  25                 	db	37
  4059  00FEFA  73                 	db	115	;'s'
  4060  00FEFB  20                 	db	32
  4061  00FEFC  0D                 	db	13
  4062  00FEFD  0A                 	db	10
  4063  00FEFE  00                 	db	0
  4064  00FEFF                     STR_91:
  4065                           
  4066                           ; BSR set to: 0
  4067  00FEFF  43                 	db	67	;'C'
  4068  00FF00  61                 	db	97	;'a'
  4069  00FF01  72                 	db	114	;'r'
  4070  00FF02  64                 	db	100	;'d'
  4071  00FF03  20                 	db	32
  4072  00FF04  53                 	db	83	;'S'
  4073  00FF05  65                 	db	101	;'e'
  4074  00FF06  72                 	db	114	;'r'
  4075  00FF07  20                 	db	32
  4076  00FF08  4E                 	db	78	;'N'
  4077  00FF09  6F                 	db	111	;'o'
  4078  00FF0A  2E                 	db	46
  4079  00FF0B  20                 	db	32
  4080  00FF0C  25                 	db	37
  4081  00FF0D  73                 	db	115	;'s'
  4082  00FF0E  20                 	db	32
  4083  00FF0F  0D                 	db	13
  4084  00FF10  0A                 	db	10
  4085  00FF11  00                 	db	0
  4086  00FF12                     STR_59:
  4087                           
  4088                           ; BSR set to: 0
  4089  00FF12  4D                 	db	77	;'M'
  4090  00FF13  6F                 	db	111	;'o'
  4091  00FF14  64                 	db	100	;'d'
  4092  00FF15  62                 	db	98	;'b'
  4093  00FF16  75                 	db	117	;'u'
  4094  00FF17  73                 	db	115	;'s'
  4095  00FF18  20                 	db	32
  4096  00FF19  52                 	db	82	;'R'
  4097  00FF1A  65                 	db	101	;'e'
  4098  00FF1B  73                 	db	115	;'s'
  4099  00FF1C  70                 	db	112	;'p'
  4100  00FF1D  6F                 	db	111	;'o'
  4101  00FF1E  6E                 	db	110	;'n'
  4102  00FF1F  73                 	db	115	;'s'
  4103  00FF20  65                 	db	101	;'e'
  4104  00FF21  3A                 	db	58	;':'
  4105  00FF22  0D                 	db	13
  4106  00FF23  0A                 	db	10
  4107  00FF24  00                 	db	0
  4108  00FF25                     STR_6:
  4109                           
  4110                           ; BSR set to: 0
  4111  00FF25  0D                 	db	13
  4112  00FF26  0A                 	db	10
  4113  00FF27  45                 	db	69	;'E'
  4114  00FF28  6E                 	db	110	;'n'
  4115  00FF29  74                 	db	116	;'t'
  4116  00FF2A  65                 	db	101	;'e'
  4117  00FF2B  72                 	db	114	;'r'
  4118  00FF2C  20                 	db	32
  4119  00FF2D  43                 	db	67	;'C'
  4120  00FF2E  6F                 	db	111	;'o'
  4121  00FF2F  6D                 	db	109	;'m'
  4122  00FF30  6D                 	db	109	;'m'
  4123  00FF31  61                 	db	97	;'a'
  4124  00FF32  6E                 	db	110	;'n'
  4125  00FF33  64                 	db	100	;'d'
  4126  00FF34  20                 	db	32
  4127  00FF35  3A                 	db	58	;':'
  4128  00FF36  20                 	db	32
  4129  00FF37  00                 	db	0
  4130  00FF38                     STR_128:
  4131                           
  4132                           ; BSR set to: 0
  4133  00FF38  4E                 	db	78	;'N'
  4134  00FF39  75                 	db	117	;'u'
  4135  00FF3A  6D                 	db	109	;'m'
  4136  00FF3B  20                 	db	32
  4137  00FF3C  43                 	db	67	;'C'
  4138  00FF3D  68                 	db	104	;'h'
  4139  00FF3E  61                 	db	97	;'a'
  4140  00FF3F  72                 	db	114	;'r'
  4141  00FF40  73                 	db	115	;'s'
  4142  00FF41  3A                 	db	58	;':'
  4143  00FF42  20                 	db	32
  4144  00FF43  25                 	db	37
  4145  00FF44  69                 	db	105	;'i'
  4146  00FF45  20                 	db	32
  4147  00FF46  0D                 	db	13
  4148  00FF47  0A                 	db	10
  4149  00FF48  00                 	db	0
  4150  00FF49                     STR_122:
  4151                           
  4152                           ; BSR set to: 0
  4153  00FF49  44                 	db	68	;'D'
  4154  00FF4A  65                 	db	101	;'e'
  4155  00FF4B  62                 	db	98	;'b'
  4156  00FF4C  75                 	db	117	;'u'
  4157  00FF4D  67                 	db	103	;'g'
  4158  00FF4E  20                 	db	32
  4159  00FF4F  44                 	db	68	;'D'
  4160  00FF50  69                 	db	105	;'i'
  4161  00FF51  73                 	db	115	;'s'
  4162  00FF52  61                 	db	97	;'a'
  4163  00FF53  62                 	db	98	;'b'
  4164  00FF54  6C                 	db	108	;'l'
  4165  00FF55  65                 	db	101	;'e'
  4166  00FF56  64                 	db	100	;'d'
  4167  00FF57  0D                 	db	13
  4168  00FF58  0A                 	db	10
  4169  00FF59  00                 	db	0
  4170  00FF5A                     STR_118:
  4171                           
  4172                           ; BSR set to: 0
  4173  00FF5A  41                 	db	65	;'A'
  4174  00FF5B  44                 	db	68	;'D'
  4175  00FF5C  43                 	db	67	;'C'
  4176  00FF5D  30                 	db	48	;'0'
  4177  00FF5E  3A                 	db	58	;':'
  4178  00FF5F  20                 	db	32
  4179  00FF60  30                 	db	48	;'0'
  4180  00FF61  78                 	db	120	;'x'
  4181  00FF62  25                 	db	37
  4182  00FF63  30                 	db	48	;'0'
  4183  00FF64  34                 	db	52	;'4'
  4184  00FF65  78                 	db	120	;'x'
  4185  00FF66  20                 	db	32
  4186  00FF67  0D                 	db	13
  4187  00FF68  0A                 	db	10
  4188  00FF69  00                 	db	0
  4189  00FF6A                     STR_121:
  4190                           
  4191                           ; BSR set to: 0
  4192  00FF6A  44                 	db	68	;'D'
  4193  00FF6B  65                 	db	101	;'e'
  4194  00FF6C  62                 	db	98	;'b'
  4195  00FF6D  75                 	db	117	;'u'
  4196  00FF6E  67                 	db	103	;'g'
  4197  00FF6F  20                 	db	32
  4198  00FF70  45                 	db	69	;'E'
  4199  00FF71  6E                 	db	110	;'n'
  4200  00FF72  61                 	db	97	;'a'
  4201  00FF73  62                 	db	98	;'b'
  4202  00FF74  6C                 	db	108	;'l'
  4203  00FF75  65                 	db	101	;'e'
  4204  00FF76  64                 	db	100	;'d'
  4205  00FF77  0D                 	db	13
  4206  00FF78  0A                 	db	10
  4207  00FF79  00                 	db	0
  4208  00FF7A                     STR_78:
  4209                           
  4210                           ; BSR set to: 0
  4211  00FF7A  52                 	db	82	;'R'
  4212  00FF7B  65                 	db	101	;'e'
  4213  00FF7C  61                 	db	97	;'a'
  4214  00FF7D  64                 	db	100	;'d'
  4215  00FF7E  3A                 	db	58	;':'
  4216  00FF7F  20                 	db	32
  4217  00FF80  30                 	db	48	;'0'
  4218  00FF81  78                 	db	120	;'x'
  4219  00FF82  25                 	db	37
  4220  00FF83  30                 	db	48	;'0'
  4221  00FF84  32                 	db	50	;'2'
  4222  00FF85  78                 	db	120	;'x'
  4223  00FF86  20                 	db	32
  4224  00FF87  0D                 	db	13
  4225  00FF88  0A                 	db	10
  4226  00FF89  00                 	db	0
  4227  00FF8A                     STR_127:
  4228                           
  4229                           ; BSR set to: 0
  4230  00FF8A  59                 	db	89	;'Y'
  4231  00FF8B  0D                 	db	13
  4232  00FF8C  0A                 	db	10
  4233  00FF8D  53                 	db	83	;'S'
  4234  00FF8E  61                 	db	97	;'a'
  4235  00FF8F  76                 	db	118	;'v'
  4236  00FF90  69                 	db	105	;'i'
  4237  00FF91  6E                 	db	110	;'n'
  4238  00FF92  67                 	db	103	;'g'
  4239  00FF93  20                 	db	32
  4240  00FF94  25                 	db	37
  4241  00FF95  73                 	db	115	;'s'
  4242  00FF96  0D                 	db	13
  4243  00FF97  0A                 	db	10
  4244  00FF98  00                 	db	0
  4245  00FF99                     STR_57:
  4246                           
  4247                           ; BSR set to: 0
  4248  00FF99  41                 	db	65	;'A'
  4249  00FF9A  44                 	db	68	;'D'
  4250  00FF9B  43                 	db	67	;'C'
  4251  00FF9C  3A                 	db	58	;':'
  4252  00FF9D  20                 	db	32
  4253  00FF9E  30                 	db	48	;'0'
  4254  00FF9F  78                 	db	120	;'x'
  4255  00FFA0  25                 	db	37
  4256  00FFA1  30                 	db	48	;'0'
  4257  00FFA2  34                 	db	52	;'4'
  4258  00FFA3  78                 	db	120	;'x'
  4259  00FFA4  20                 	db	32
  4260  00FFA5  0D                 	db	13
  4261  00FFA6  0A                 	db	10
  4262  00FFA7  00                 	db	0
  4263  00FFA8                     STR_129:
  4264                           
  4265                           ; BSR set to: 0
  4266  00FFA8  25                 	db	37
  4267  00FFA9  73                 	db	115	;'s'
  4268  00FFAA  20                 	db	32
  4269  00FFAB  53                 	db	83	;'S'
  4270  00FFAC  61                 	db	97	;'a'
  4271  00FFAD  76                 	db	118	;'v'
  4272  00FFAE  65                 	db	101	;'e'
  4273  00FFAF  64                 	db	100	;'d'
  4274  00FFB0  2E                 	db	46
  4275  00FFB1  20                 	db	32
  4276  00FFB2  0D                 	db	13
  4277  00FFB3  0A                 	db	10
  4278  00FFB4  00                 	db	0
  4279  00FFB5                     STR_131:
  4280                           
  4281                           ; BSR set to: 0
  4282  00FFB5  4E                 	db	78	;'N'
  4283  00FFB6  6F                 	db	111	;'o'
  4284  00FFB7  74                 	db	116	;'t'
  4285  00FFB8  20                 	db	32
  4286  00FFB9  73                 	db	115	;'s'
  4287  00FFBA  61                 	db	97	;'a'
  4288  00FFBB  76                 	db	118	;'v'
  4289  00FFBC  65                 	db	101	;'e'
  4290  00FFBD  64                 	db	100	;'d'
  4291  00FFBE  0D                 	db	13
  4292  00FFBF  0A                 	db	10
  4293  00FFC0  00                 	db	0
  4294  00FFC1                     STR_96:
  4295                           
  4296                           ; BSR set to: 0
  4297  00FFC1  4D                 	db	77	;'M'
  4298  00FFC2  61                 	db	97	;'a'
  4299  00FFC3  72                 	db	114	;'r'
  4300  00FFC4  20                 	db	32
  4301  00FFC5  32                 	db	50	;'2'
  4302  00FFC6  36                 	db	54	;'6'
  4303  00FFC7  20                 	db	32
  4304  00FFC8  32                 	db	50	;'2'
  4305  00FFC9  30                 	db	48	;'0'
  4306  00FFCA  32                 	db	50	;'2'
  4307  00FFCB  31                 	db	49	;'1'
  4308  00FFCC  00                 	db	0
  4309  00FFCD                     STR_97:
  4310                           
  4311                           ; BSR set to: 0
  4312  00FFCD  32                 	db	50	;'2'
  4313  00FFCE  33                 	db	51	;'3'
  4314  00FFCF  3A                 	db	58	;':'
  4315  00FFD0  33                 	db	51	;'3'
  4316  00FFD1  39                 	db	57	;'9'
  4317  00FFD2  3A                 	db	58	;':'
  4318  00FFD3  32                 	db	50	;'2'
  4319  00FFD4  38                 	db	56	;'8'
  4320  00FFD5  00                 	db	0
  4321  00FFD6                     STR_81:
  4322                           
  4323                           ; BSR set to: 0
  4324  00FFD6  53                 	db	83	;'S'
  4325  00FFD7  65                 	db	101	;'e'
  4326  00FFD8  72                 	db	114	;'r'
  4327  00FFD9  69                 	db	105	;'i'
  4328  00FFDA  61                 	db	97	;'a'
  4329  00FFDB  6C                 	db	108	;'l'
  4330  00FFDC  00                 	db	0
  4331  00FFDD                     STR_136:
  4332                           
  4333                           ; BSR set to: 0
  4334  00FFDD  73                 	db	115	;'s'
  4335  00FFDE  65                 	db	101	;'e'
  4336  00FFDF  72                 	db	114	;'r'
  4337  00FFE0  69                 	db	105	;'i'
  4338  00FFE1  61                 	db	97	;'a'
  4339  00FFE2  6C                 	db	108	;'l'
  4340  00FFE3  00                 	db	0
  4341  00FFE4                     STR_132:
  4342                           
  4343                           ; BSR set to: 0
  4344  00FFE4  64                 	db	100	;'d'
  4345  00FFE5  65                 	db	101	;'e'
  4346  00FFE6  62                 	db	98	;'b'
  4347  00FFE7  75                 	db	117	;'u'
  4348  00FFE8  67                 	db	103	;'g'
  4349  00FFE9  00                 	db	0
  4350  00FFEA                     STR_83:
  4351                           
  4352                           ; BSR set to: 0
  4353  00FFEA  50                 	db	80	;'P'
  4354  00FFEB  61                 	db	97	;'a'
  4355  00FFEC  72                 	db	114	;'r'
  4356  00FFED  74                 	db	116	;'t'
  4357  00FFEE  00                 	db	0
  4358  00FFEF                     STR_138:
  4359                           
  4360                           ; BSR set to: 0
  4361  00FFEF  70                 	db	112	;'p'
  4362  00FFF0  61                 	db	97	;'a'
  4363  00FFF1  72                 	db	114	;'r'
  4364  00FFF2  74                 	db	116	;'t'
  4365  00FFF3  00                 	db	0
  4366  00FFF4                     STR_85:
  4367                           
  4368                           ; BSR set to: 0
  4369  00FFF4  52                 	db	82	;'R'
  4370  00FFF5  65                 	db	101	;'e'
  4371  00FFF6  76                 	db	118	;'v'
  4372  00FFF7  00                 	db	0
  4373  00FFF8                     STR_140:
  4374                           
  4375                           ; BSR set to: 0
  4376  00FFF8  72                 	db	114	;'r'
  4377  00FFF9  65                 	db	101	;'e'
  4378  00FFFA  76                 	db	118	;'v'
  4379  00FFFB  00                 	db	0
  4380  00FFFC                     STR_134:
  4381                           
  4382                           ; BSR set to: 0
  4383  00FFFC  3F                 	db	63	;'?'
  4384  00FFFD  00                 	db	0
  4385  0000                     
  4386                           ; #config settings
  4387  00FFFE  00                 	db	0	; dummy byte at the end
  4388  0000                     
  4389                           	psect	cinit
  4390  003A7A                     __pcinit:
  4391                           	opt callstack 0
  4392  003A7A                     start_initialization:
  4393                           	opt callstack 0
  4394  003A7A                     __initialization:
  4395                           	opt callstack 0
  4396                           
  4397                           ; Initialize objects allocated to BANK4 (64 bytes)
  4398                           ; load TBLPTR registers with __pidataBANK4
  4399  003A7A  0EB4               	movlw	low __pidataBANK4
  4400  003A7C  6EF6               	movwf	tblptrl,c
  4401  003A7E  0E4D               	movlw	high __pidataBANK4
  4402  003A80  6EF7               	movwf	tblptrh,c
  4403  003A82  0E00               	movlw	low (__pidataBANK4 shr (0+16))
  4404  003A84  6EF8               	movwf	tblptru,c
  4405  003A86  EE04  F064         	lfsr	0,__pdataBANK4
  4406  003A8A  EE10 F040          	lfsr	1,64
  4407  003A8E                     copy_data0:
  4408  003A8E  0009               	tblrd		*+
  4409  003A90  CFF5 FFEE          	movff	tablat,postinc0
  4410  003A94  50E5               	movf	postdec1,w,c
  4411  003A96  50E1               	movf	fsr1l,w,c
  4412  003A98  E1FA               	bnz	copy_data0
  4413                           
  4414                           ; Initialize objects allocated to BANK3 (64 bytes)
  4415                           ; load TBLPTR registers with __pidataBANK3
  4416  003A9A  0E74               	movlw	low __pidataBANK3
  4417  003A9C  6EF6               	movwf	tblptrl,c
  4418  003A9E  0E4D               	movlw	high __pidataBANK3
  4419  003AA0  6EF7               	movwf	tblptrh,c
  4420  003AA2  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  4421  003AA4  6EF8               	movwf	tblptru,c
  4422  003AA6  EE03  F0B7         	lfsr	0,__pdataBANK3
  4423  003AAA  EE10 F040          	lfsr	1,64
  4424  003AAE                     copy_data1:
  4425  003AAE  0009               	tblrd		*+
  4426  003AB0  CFF5 FFEE          	movff	tablat,postinc0
  4427  003AB4  50E5               	movf	postdec1,w,c
  4428  003AB6  50E1               	movf	fsr1l,w,c
  4429  003AB8  E1FA               	bnz	copy_data1
  4430                           
  4431                           ; Initialize objects allocated to BANK2 (162 bytes)
  4432                           ; load TBLPTR registers with __pidataBANK2
  4433  003ABA  0E82               	movlw	low __pidataBANK2
  4434  003ABC  6EF6               	movwf	tblptrl,c
  4435  003ABE  0E43               	movlw	high __pidataBANK2
  4436  003AC0  6EF7               	movwf	tblptrh,c
  4437  003AC2  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  4438  003AC4  6EF8               	movwf	tblptru,c
  4439  003AC6  EE02  F000         	lfsr	0,__pdataBANK2
  4440  003ACA  EE10 F0A2          	lfsr	1,162
  4441  003ACE                     copy_data2:
  4442  003ACE  0009               	tblrd		*+
  4443  003AD0  CFF5 FFEE          	movff	tablat,postinc0
  4444  003AD4  50E5               	movf	postdec1,w,c
  4445  003AD6  50E1               	movf	fsr1l,w,c
  4446  003AD8  E1FA               	bnz	copy_data2
  4447                           
  4448                           ; Initialize objects allocated to BANK1 (147 bytes)
  4449                           ; load TBLPTR registers with __pidataBANK1
  4450  003ADA  0EBA               	movlw	low __pidataBANK1
  4451  003ADC  6EF6               	movwf	tblptrl,c
  4452  003ADE  0E44               	movlw	high __pidataBANK1
  4453  003AE0  6EF7               	movwf	tblptrh,c
  4454  003AE2  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  4455  003AE4  6EF8               	movwf	tblptru,c
  4456  003AE6  EE01  F000         	lfsr	0,__pdataBANK1
  4457  003AEA  EE10 F093          	lfsr	1,147
  4458  003AEE                     copy_data3:
  4459  003AEE  0009               	tblrd		*+
  4460  003AF0  CFF5 FFEE          	movff	tablat,postinc0
  4461  003AF4  50E5               	movf	postdec1,w,c
  4462  003AF6  50E1               	movf	fsr1l,w,c
  4463  003AF8  E1FA               	bnz	copy_data3
  4464                           
  4465                           ; Initialize objects allocated to BANK0 (20 bytes)
  4466                           ; load TBLPTR registers with __pidataBANK0
  4467  003AFA  0E2E               	movlw	low __pidataBANK0
  4468  003AFC  6EF6               	movwf	tblptrl,c
  4469  003AFE  0E51               	movlw	high __pidataBANK0
  4470  003B00  6EF7               	movwf	tblptrh,c
  4471  003B02  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  4472  003B04  6EF8               	movwf	tblptru,c
  4473  003B06  EE00  F0EA         	lfsr	0,__pdataBANK0
  4474  003B0A  EE10 F014          	lfsr	1,20
  4475  003B0E                     copy_data4:
  4476  003B0E  0009               	tblrd		*+
  4477  003B10  CFF5 FFEE          	movff	tablat,postinc0
  4478  003B14  50E5               	movf	postdec1,w,c
  4479  003B16  50E1               	movf	fsr1l,w,c
  4480  003B18  E1FA               	bnz	copy_data4
  4481                           
  4482                           ; Clear objects allocated to BANK5 (100 bytes)
  4483  003B1A  EE05  F000         	lfsr	0,__pbssBANK5
  4484  003B1E  0E64               	movlw	100
  4485  003B20                     clear_0:
  4486  003B20  6AEE               	clrf	postinc0,c
  4487  003B22  06E8               	decf	wreg,f,c
  4488  003B24  E1FD               	bnz	clear_0
  4489                           
  4490                           ; Clear objects allocated to BANK4 (100 bytes)
  4491  003B26  EE04  F000         	lfsr	0,__pbssBANK4
  4492  003B2A  0E64               	movlw	100
  4493  003B2C                     clear_1:
  4494  003B2C  6AEE               	clrf	postinc0,c
  4495  003B2E  06E8               	decf	wreg,f,c
  4496  003B30  E1FD               	bnz	clear_1
  4497                           
  4498                           ; Clear objects allocated to BANK3 (183 bytes)
  4499  003B32  EE03  F000         	lfsr	0,__pbssBANK3
  4500  003B36  0EB7               	movlw	183
  4501  003B38                     clear_2:
  4502  003B38  6AEE               	clrf	postinc0,c
  4503  003B3A  06E8               	decf	wreg,f,c
  4504  003B3C  E1FD               	bnz	clear_2
  4505                           
  4506                           ; Clear objects allocated to BANK2 (91 bytes)
  4507  003B3E  EE02  F0A2         	lfsr	0,__pbssBANK2
  4508  003B42  0E5B               	movlw	91
  4509  003B44                     clear_3:
  4510  003B44  6AEE               	clrf	postinc0,c
  4511  003B46  06E8               	decf	wreg,f,c
  4512  003B48  E1FD               	bnz	clear_3
  4513                           
  4514                           ; Clear objects allocated to BANK1 (16 bytes)
  4515  003B4A  EE01  F0ED         	lfsr	0,__pbssBANK1
  4516  003B4E  0E10               	movlw	16
  4517  003B50                     clear_4:
  4518  003B50  6AEE               	clrf	postinc0,c
  4519  003B52  06E8               	decf	wreg,f,c
  4520  003B54  E1FD               	bnz	clear_4
  4521                           
  4522                           ; Clear objects allocated to BANK0 (29 bytes)
  4523  003B56  EE00  F0CD         	lfsr	0,__pbssBANK0
  4524  003B5A  0E1D               	movlw	29
  4525  003B5C                     clear_5:
  4526  003B5C  6AEE               	clrf	postinc0,c
  4527  003B5E  06E8               	decf	wreg,f,c
  4528  003B60  E1FD               	bnz	clear_5
  4529                           
  4530                           ; Clear objects allocated to COMRAM (4 bytes)
  4531  003B62  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
  4532  003B64  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
  4533  003B66  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
  4534  003B68  6A57               	clrf	__pbssCOMRAM& (0+255),c
  4535  003B6A                     end_of_initialization:
  4536                           	opt callstack 0
  4537  003B6A                     __end_of__initialization:
  4538                           	opt callstack 0
  4539  003B6A  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  4540  003B6C  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4541  003B6E  0100               	movlb	0
  4542  003B70  EF05  F01C         	goto	_main	;jump to C main() function
  4543                           
  4544                           	psect	bssCOMRAM
  4545  000057                     __pbssCOMRAM:
  4546                           	opt callstack 0
  4547  000057                     _flags:
  4548                           	opt callstack 0
  4549  000057                     	ds	2
  4550  000059                     _eusart1RxHead:
  4551                           	opt callstack 0
  4552  000059                     	ds	1
  4553  00005A                     _eusart2RxHead:
  4554                           	opt callstack 0
  4555  00005A                     	ds	1
  4556                           
  4557                           	psect	bssBANK0
  4558  0000CD                     __pbssBANK0:
  4559                           	opt callstack 0
  4560  0000CD                     _nout:
  4561                           	opt callstack 0
  4562  0000CD                     	ds	2
  4563  0000CF                     _width:
  4564                           	opt callstack 0
  4565  0000CF                     	ds	2
  4566  0000D1                     _prec:
  4567                           	opt callstack 0
  4568  0000D1                     	ds	2
  4569  0000D3                     	ds	2
  4570  0000D5                     _ByteHi:
  4571                           	opt callstack 0
  4572  0000D5                     	ds	2
  4573  0000D7                     _MBResCnt:
  4574                           	opt callstack 0
  4575  0000D7                     	ds	2
  4576  0000D9                     _ByteNum:
  4577                           	opt callstack 0
  4578  0000D9                     	ds	2
  4579  0000DB                     _ModDataCnt:
  4580                           	opt callstack 0
  4581  0000DB                     	ds	2
  4582  0000DD                     _rxStatus:
  4583                           	opt callstack 0
  4584  0000DD                     	ds	1
  4585  0000DE                     _RXStat:
  4586                           	opt callstack 0
  4587  0000DE                     	ds	1
  4588  0000DF                     _Debug:
  4589                           	opt callstack 0
  4590  0000DF                     	ds	1
  4591  0000E0                     _eusart1RxLastError:
  4592                           	opt callstack 0
  4593  0000E0                     	ds	1
  4594  0000E1                     _eusart1RxCount:
  4595                           	opt callstack 0
  4596  0000E1                     	ds	1
  4597  0000E2                     _eusart1RxTail:
  4598                           	opt callstack 0
  4599  0000E2                     	ds	1
  4600  0000E3                     _eusart1TxTail:
  4601                           	opt callstack 0
  4602  0000E3                     	ds	1
  4603  0000E4                     _eusart1TxHead:
  4604                           	opt callstack 0
  4605  0000E4                     	ds	1
  4606  0000E5                     _eusart2RxLastError:
  4607                           	opt callstack 0
  4608  0000E5                     	ds	1
  4609  0000E6                     _eusart2RxCount:
  4610                           	opt callstack 0
  4611  0000E6                     	ds	1
  4612  0000E7                     _eusart2RxTail:
  4613                           	opt callstack 0
  4614  0000E7                     	ds	1
  4615  0000E8                     _eusart2TxTail:
  4616                           	opt callstack 0
  4617  0000E8                     	ds	1
  4618  0000E9                     _eusart2TxHead:
  4619                           	opt callstack 0
  4620  0000E9                     	ds	1
  4621                           
  4622                           	psect	dataBANK0
  4623  0000EA                     __pdataBANK0:
  4624                           	opt callstack 0
  4625  0000EA                     _MB303xx:
  4626                           	opt callstack 0
  4627  0000EA                     	ds	10
  4628  0000F4                     ReadRX232@F10773:
  4629                           	opt callstack 0
  4630  0000F4                     	ds	2
  4631  0000F6                     _ByteLo:
  4632                           	opt callstack 0
  4633  0000F6                     	ds	2
  4634  0000F8                     _MBResCRC:
  4635                           	opt callstack 0
  4636  0000F8                     	ds	2
  4637  0000FA                     _ExpectedBytes:
  4638                           	opt callstack 0
  4639  0000FA                     	ds	2
  4640  0000FC                     _MB302xx:
  4641                           	opt callstack 0
  4642  0000FC                     	ds	2
  4643                           
  4644                           	psect	bssBANK1
  4645  0001ED                     __pbssBANK1:
  4646                           	opt callstack 0
  4647  0001ED                     _Command:
  4648                           	opt callstack 0
  4649  0001ED                     	ds	16
  4650                           
  4651                           	psect	dataBANK1
  4652  000100                     __pdataBANK1:
  4653                           	opt callstack 0
  4654  000100                     _ModbusData:
  4655                           	opt callstack 0
  4656  000100                     	ds	100
  4657  000164                     _MB301xx:
  4658                           	opt callstack 0
  4659  000164                     	ds	14
  4660  000172                     _MB304xx:
  4661                           	opt callstack 0
  4662  000172                     	ds	12
  4663  00017E                     InitialiseString@F10767:
  4664                           	opt callstack 0
  4665  00017E                     	ds	8
  4666  000186                     stoa@F1139:
  4667                           	opt callstack 0
  4668  000186                     	ds	7
  4669  00018D                     _MB306xx:
  4670                           	opt callstack 0
  4671  00018D                     	ds	6
  4672                           
  4673                           	psect	bssBANK2
  4674  0002A2                     __pbssBANK2:
  4675                           	opt callstack 0
  4676  0002A2                     _eusart2RxStatusBuffer:
  4677                           	opt callstack 0
  4678  0002A2                     	ds	32
  4679  0002C2                     _eusart1TxBuffer:
  4680                           	opt callstack 0
  4681  0002C2                     	ds	16
  4682  0002D2                     	ds	11
  4683  0002DD                     _dbuf:
  4684                           	opt callstack 0
  4685  0002DD                     	ds	32
  4686                           
  4687                           	psect	dataBANK2
  4688  000200                     __pdataBANK2:
  4689                           	opt callstack 0
  4690  000200                     ValidateCmd@F10797:
  4691                           	opt callstack 0
  4692  000200                     	ds	20
  4693  000214                     ValidateCmd@F10794:
  4694                           	opt callstack 0
  4695  000214                     	ds	20
  4696  000228                     ValidateCmd@F10791:
  4697                           	opt callstack 0
  4698  000228                     	ds	20
  4699  00023C                     _MB305xx:
  4700                           	opt callstack 0
  4701  00023C                     	ds	16
  4702  00024C                     InitialiseString@F10764:
  4703                           	opt callstack 0
  4704  00024C                     	ds	11
  4705  000257                     _MBRespon:
  4706                           	opt callstack 0
  4707  000257                     	ds	75
  4708                           
  4709                           	psect	bssBANK3
  4710  000300                     __pbssBANK3:
  4711                           	opt callstack 0
  4712  000300                     _eusart1RxStatusBuffer:
  4713                           	opt callstack 0
  4714  000300                     	ds	100
  4715  000364                     _eusart2RxBuffer:
  4716                           	opt callstack 0
  4717  000364                     	ds	32
  4718  000384                     _eusart2TxBuffer:
  4719                           	opt callstack 0
  4720  000384                     	ds	32
  4721  0003A4                     	ds	19
  4722                           
  4723                           	psect	dataBANK3
  4724  0003B7                     __pdataBANK3:
  4725                           	opt callstack 0
  4726  0003B7                     _MB400xx:
  4727                           	opt callstack 0
  4728  0003B7                     	ds	64
  4729                           
  4730                           	psect	bssBANK4
  4731  000400                     __pbssBANK4:
  4732                           	opt callstack 0
  4733  000400                     _eusart1RxBuffer:
  4734                           	opt callstack 0
  4735  000400                     	ds	100
  4736                           
  4737                           	psect	dataBANK4
  4738  000464                     __pdataBANK4:
  4739                           	opt callstack 0
  4740  000464                     _MB300xx:
  4741                           	opt callstack 0
  4742  000464                     	ds	64
  4743                           
  4744                           	psect	bssBANK5
  4745  000500                     __pbssBANK5:
  4746                           	opt callstack 0
  4747  000500                     _rxData:
  4748                           	opt callstack 0
  4749  000500                     	ds	100
  4750                           
  4751                           	psect	cstackBANK1
  4752  000193                     __pcstackBANK1:
  4753                           	opt callstack 0
  4754  000193                     ValidateCmd@ConfName:
  4755                           	opt callstack 0
  4756                           
  4757                           ; 20 bytes @ 0x0
  4758  000193                     	ds	20
  4759  0001A7                     ValidateCmd@ConfName_1575:
  4760                           	opt callstack 0
  4761                           
  4762                           ; 20 bytes @ 0x14
  4763  0001A7                     	ds	20
  4764  0001BB                     ValidateCmd@ConfName_1579:
  4765                           	opt callstack 0
  4766                           
  4767                           ; 20 bytes @ 0x28
  4768  0001BB                     	ds	28
  4769  0001D7                     ??_main:
  4770                           
  4771                           ; 1 bytes @ 0x44
  4772  0001D7                     	ds	2
  4773                           
  4774                           	psect	cstackBANK0
  4775  000060                     __pcstackBANK0:
  4776                           	opt callstack 0
  4777  000060                     vfpfcnvrt@ll:
  4778                           	opt callstack 0
  4779                           
  4780                           ; 8 bytes @ 0x0
  4781  000060                     	ds	8
  4782  000068                     vfpfcnvrt@cp:
  4783                           	opt callstack 0
  4784                           
  4785                           ; 2 bytes @ 0x8
  4786  000068                     	ds	2
  4787  00006A                     vfpfcnvrt@c:
  4788                           	opt callstack 0
  4789                           
  4790                           ; 1 bytes @ 0xA
  4791  00006A                     	ds	1
  4792  00006B                     vfpfcnvrt@done:
  4793                           	opt callstack 0
  4794                           
  4795                           ; 2 bytes @ 0xB
  4796  00006B                     	ds	2
  4797  00006D                     _vfpfcnvrt$1949:
  4798                           	opt callstack 0
  4799                           
  4800                           ; 2 bytes @ 0xD
  4801  00006D                     	ds	2
  4802  00006F                     vfpfcnvrt@llu:
  4803                           	opt callstack 0
  4804                           
  4805                           ; 8 bytes @ 0xF
  4806  00006F                     	ds	8
  4807  000077                     ?_vfprintf:
  4808                           	opt callstack 0
  4809  000077                     vfprintf@fp:
  4810                           	opt callstack 0
  4811                           
  4812                           ; 2 bytes @ 0x17
  4813  000077                     	ds	2
  4814  000079                     vfprintf@fmt:
  4815                           	opt callstack 0
  4816                           
  4817                           ; 2 bytes @ 0x19
  4818  000079                     	ds	2
  4819  00007B                     vfprintf@ap:
  4820                           	opt callstack 0
  4821                           
  4822                           ; 2 bytes @ 0x1B
  4823  00007B                     	ds	2
  4824  00007D                     ?_printf:
  4825                           	opt callstack 0
  4826  00007D                     printf@fmt:
  4827                           	opt callstack 0
  4828                           
  4829                           ; 2 bytes @ 0x1D
  4830  00007D                     	ds	16
  4831  00008D                     printf@ap:
  4832                           	opt callstack 0
  4833                           
  4834                           ; 2 bytes @ 0x2D
  4835  00008D                     	ds	2
  4836  00008F                     ??_ModbusFC03:
  4837  00008F                     ??_PrintMB400:
  4838  00008F                     ??_ModbusFC10:
  4839  00008F                     ??_ModbusFC04:
  4840  00008F                     ??_PrintModbus:
  4841  00008F                     ??_PrintModRespon:
  4842  00008F                     ??_checkCRC:
  4843  00008F                     ?_ReadRX232:
  4844                           	opt callstack 0
  4845  00008F                     AddRxBuffToModBus@i:
  4846                           	opt callstack 0
  4847  00008F                     ReadRX232@NumChars:
  4848                           	opt callstack 0
  4849  00008F                     ClearEEAddRange@StartAdd:
  4850                           	opt callstack 0
  4851  00008F                     InitialiseString@PartNum:
  4852                           	opt callstack 0
  4853                           
  4854                           ; 19 bytes @ 0x2F
  4855  00008F                     	ds	2
  4856  000091                     ClearEEAddRange@NumBytes:
  4857                           	opt callstack 0
  4858                           
  4859                           ; 2 bytes @ 0x31
  4860  000091                     	ds	1
  4861  000092                     PrintModRespon@j:
  4862                           	opt callstack 0
  4863                           
  4864                           ; 2 bytes @ 0x32
  4865  000092                     	ds	1
  4866  000093                     ModbusFC10@TempData:
  4867                           	opt callstack 0
  4868  000093                     SaveCardDat@Name:
  4869                           	opt callstack 0
  4870                           
  4871                           ; 2 bytes @ 0x33
  4872  000093                     	ds	1
  4873  000094                     PrintModbus@j:
  4874                           	opt callstack 0
  4875  000094                     checkCRC@crcHigh:
  4876                           	opt callstack 0
  4877  000094                     PrintModRespon@i:
  4878                           	opt callstack 0
  4879                           
  4880                           ; 2 bytes @ 0x34
  4881  000094                     	ds	1
  4882  000095                     ModbusFC03@error:
  4883                           	opt callstack 0
  4884  000095                     ModbusFC10@error:
  4885                           	opt callstack 0
  4886  000095                     ModbusFC04@convertedValue:
  4887                           	opt callstack 0
  4888  000095                     SaveCardDat@MBAddress:
  4889                           	opt callstack 0
  4890                           
  4891                           ; 2 bytes @ 0x35
  4892  000095                     	ds	1
  4893  000096                     PrintModbus@i:
  4894                           	opt callstack 0
  4895  000096                     checkCRC@crcLow:
  4896                           	opt callstack 0
  4897  000096                     ModbusFC03@i:
  4898                           	opt callstack 0
  4899  000096                     ModbusFC10@i:
  4900                           	opt callstack 0
  4901                           
  4902                           ; 2 bytes @ 0x36
  4903  000096                     	ds	1
  4904  000097                     ModbusFC04@error:
  4905                           	opt callstack 0
  4906  000097                     SaveCardDat@dataeeAddr:
  4907                           	opt callstack 0
  4908                           
  4909                           ; 2 bytes @ 0x37
  4910  000097                     	ds	1
  4911  000098                     checkCRC@j:
  4912                           	opt callstack 0
  4913  000098                     ModbusFC04@i:
  4914                           	opt callstack 0
  4915  000098                     ModbusFC10@j:
  4916                           	opt callstack 0
  4917                           
  4918                           ; 2 bytes @ 0x38
  4919  000098                     	ds	1
  4920  000099                     SaveCardDat@NumBytes:
  4921                           	opt callstack 0
  4922                           
  4923                           ; 2 bytes @ 0x39
  4924  000099                     	ds	1
  4925  00009A                     checkCRC@crc:
  4926                           	opt callstack 0
  4927                           
  4928                           ; 2 bytes @ 0x3A
  4929  00009A                     	ds	1
  4930  00009B                     ??_SaveCardDat:
  4931                           
  4932                           ; 1 bytes @ 0x3B
  4933  00009B                     	ds	1
  4934  00009C                     checkCRC@i:
  4935                           	opt callstack 0
  4936                           
  4937                           ; 2 bytes @ 0x3C
  4938  00009C                     	ds	1
  4939  00009D                     _SaveCardDat$2883:
  4940                           	opt callstack 0
  4941                           
  4942                           ; 2 bytes @ 0x3D
  4943  00009D                     	ds	2
  4944  00009F                     SaveCardDat@dataeeAddrWrk:
  4945                           	opt callstack 0
  4946                           
  4947                           ; 2 bytes @ 0x3F
  4948  00009F                     	ds	2
  4949  0000A1                     SaveCardDat@i:
  4950                           	opt callstack 0
  4951                           
  4952                           ; 2 bytes @ 0x41
  4953  0000A1                     	ds	1
  4954  0000A2                     InitialiseString@Date:
  4955                           	opt callstack 0
  4956                           
  4957                           ; 11 bytes @ 0x42
  4958  0000A2                     	ds	1
  4959  0000A3                     SaveCardDat@Conf:
  4960                           	opt callstack 0
  4961                           
  4962                           ; 1 bytes @ 0x43
  4963  0000A3                     	ds	10
  4964  0000AD                     InitialiseString@Time:
  4965                           	opt callstack 0
  4966                           
  4967                           ; 8 bytes @ 0x4D
  4968  0000AD                     	ds	8
  4969  0000B5                     InitialiseString@SerialNum:
  4970                           	opt callstack 0
  4971                           
  4972                           ; 11 bytes @ 0x55
  4973  0000B5                     	ds	11
  4974  0000C0                     InitialiseString@Partial:
  4975                           	opt callstack 0
  4976                           
  4977                           ; 1 bytes @ 0x60
  4978  0000C0                     	ds	1
  4979  0000C1                     InitialiseString@convertedValue:
  4980                           	opt callstack 0
  4981                           
  4982                           ; 2 bytes @ 0x61
  4983  0000C1                     	ds	2
  4984  0000C3                     InitialiseString@RevNum:
  4985                           	opt callstack 0
  4986                           
  4987                           ; 2 bytes @ 0x63
  4988  0000C3                     	ds	2
  4989  0000C5                     InitialiseString@readDataOdd:
  4990                           	opt callstack 0
  4991                           
  4992                           ; 1 bytes @ 0x65
  4993  0000C5                     	ds	1
  4994  0000C6                     InitialiseString@readDataEven:
  4995                           	opt callstack 0
  4996                           
  4997                           ; 1 bytes @ 0x66
  4998  0000C6                     	ds	1
  4999  0000C7                     InitialiseString@j:
  5000                           	opt callstack 0
  5001                           
  5002                           ; 2 bytes @ 0x67
  5003  0000C7                     	ds	2
  5004  0000C9                     InitialiseString@i:
  5005                           	opt callstack 0
  5006                           
  5007                           ; 2 bytes @ 0x69
  5008  0000C9                     	ds	2
  5009  0000CB                     InitialiseString@i_1506:
  5010                           	opt callstack 0
  5011                           
  5012                           ; 2 bytes @ 0x6B
  5013  0000CB                     	ds	2
  5014                           
  5015                           	psect	cstackCOMRAM
  5016  000001                     __pcstackCOMRAM:
  5017                           	opt callstack 0
  5018  000001                     ??_INTERRUPT_InterruptManager:
  5019  000001                     
  5020                           ; 1 bytes @ 0x0
  5021  000001                     	ds	4
  5022  000005                     ??_ClearRxBuff:
  5023  000005                     ?_generateCRC:
  5024                           	opt callstack 0
  5025  000005                     ?_ADCC_GetSingleConversion:
  5026                           	opt callstack 0
  5027  000005                     ?_strcmp:
  5028                           	opt callstack 0
  5029  000005                     ?_strlen:
  5030                           	opt callstack 0
  5031  000005                     ?_isupper:
  5032                           	opt callstack 0
  5033  000005                     ?_isalpha:
  5034                           	opt callstack 0
  5035  000005                     ?_isdigit:
  5036                           	opt callstack 0
  5037  000005                     ?_isspace:
  5038                           	opt callstack 0
  5039  000005                     ?_islower:
  5040                           	opt callstack 0
  5041  000005                     ?___wmul:
  5042                           	opt callstack 0
  5043  000005                     ?___aodiv:
  5044                           	opt callstack 0
  5045  000005                     ?___aomod:
  5046                           	opt callstack 0
  5047  000005                     ?___lodiv:
  5048                           	opt callstack 0
  5049  000005                     ?___lomod:
  5050                           	opt callstack 0
  5051  000005                     EUSART2_Read@readValue:
  5052                           	opt callstack 0
  5053  000005                     EUSART2_Write@txData:
  5054                           	opt callstack 0
  5055  000005                     EUSART1_Read@readValue:
  5056                           	opt callstack 0
  5057  000005                     EUSART1_Write@txData:
  5058                           	opt callstack 0
  5059  000005                     DATAEE_WriteByte@bAdd:
  5060                           	opt callstack 0
  5061  000005                     DATAEE_ReadByte@bAdd:
  5062                           	opt callstack 0
  5063  000005                     EUSART2_SetFramingErrorHandler@interruptHandler:
  5064                           	opt callstack 0
  5065  000005                     EUSART2_SetOverrunErrorHandler@interruptHandler:
  5066                           	opt callstack 0
  5067  000005                     EUSART2_SetErrorHandler@interruptHandler:
  5068                           	opt callstack 0
  5069  000005                     EUSART2_SetTxInterruptHandler@interruptHandler:
  5070                           	opt callstack 0
  5071  000005                     EUSART2_SetRxInterruptHandler@interruptHandler:
  5072                           	opt callstack 0
  5073  000005                     EUSART1_SetFramingErrorHandler@interruptHandler:
  5074                           	opt callstack 0
  5075  000005                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  5076                           	opt callstack 0
  5077  000005                     EUSART1_SetErrorHandler@interruptHandler:
  5078                           	opt callstack 0
  5079  000005                     EUSART1_SetTxInterruptHandler@interruptHandler:
  5080                           	opt callstack 0
  5081  000005                     EUSART1_SetRxInterruptHandler@interruptHandler:
  5082                           	opt callstack 0
  5083  000005                     ClearModbusData@i:
  5084                           	opt callstack 0
  5085  000005                     generateCRC@MessCnt:
  5086                           	opt callstack 0
  5087  000005                     ClearModbusRespon@i:
  5088                           	opt callstack 0
  5089  000005                     ___wmul@multiplier:
  5090                           	opt callstack 0
  5091  000005                     isalpha@c:
  5092                           	opt callstack 0
  5093  000005                     isdigit@c:
  5094                           	opt callstack 0
  5095  000005                     isspace@c:
  5096                           	opt callstack 0
  5097  000005                     isupper@c:
  5098                           	opt callstack 0
  5099  000005                     strcmp@l:
  5100                           	opt callstack 0
  5101  000005                     strlen@s:
  5102                           	opt callstack 0
  5103  000005                     islower@c:
  5104                           	opt callstack 0
  5105  000005                     ___aodiv@dividend:
  5106                           	opt callstack 0
  5107  000005                     ___aomod@dividend:
  5108                           	opt callstack 0
  5109  000005                     ___lodiv@dividend:
  5110                           	opt callstack 0
  5111  000005                     ___lomod@dividend:
  5112                           	opt callstack 0
  5113                           
  5114                           ; 8 bytes @ 0x4
  5115  000005                     	ds	1
  5116  000006                     putch@txData:
  5117                           	opt callstack 0
  5118  000006                     ClearRxBuff@i:
  5119                           	opt callstack 0
  5120  000006                     UART1_Write_string@data:
  5121                           	opt callstack 0
  5122                           
  5123                           ; 2 bytes @ 0x5
  5124  000006                     	ds	1
  5125  000007                     ??_ADCC_GetSingleConversion:
  5126  000007                     ??_isupper:
  5127  000007                     ??_isalpha:
  5128  000007                     ??_isdigit:
  5129  000007                     ??_isspace:
  5130  000007                     ??_islower:
  5131  000007                     DATAEE_WriteByte@bData:
  5132                           	opt callstack 0
  5133  000007                     generateCRC@HiOrLo:
  5134                           	opt callstack 0
  5135  000007                     ___wmul@multiplicand:
  5136                           	opt callstack 0
  5137  000007                     fputc@c:
  5138                           	opt callstack 0
  5139  000007                     strcmp@r:
  5140                           	opt callstack 0
  5141  000007                     strlen@a:
  5142                           	opt callstack 0
  5143                           
  5144                           ; 2 bytes @ 0x6
  5145  000007                     	ds	1
  5146  000008                     ??_generateCRC:
  5147  000008                     DATAEE_WriteByte@GIEBitValue:
  5148                           	opt callstack 0
  5149  000008                     UART1_Write_string@data_len:
  5150                           	opt callstack 0
  5151                           
  5152                           ; 2 bytes @ 0x7
  5153  000008                     	ds	1
  5154  000009                     ??_strcmp:
  5155  000009                     ADCC_GetSingleConversion@channel:
  5156                           	opt callstack 0
  5157  000009                     ___wmul@product:
  5158                           	opt callstack 0
  5159  000009                     memmove@d1:
  5160                           	opt callstack 0
  5161  000009                     fputc@fp:
  5162                           	opt callstack 0
  5163  000009                     strcpy@dest:
  5164                           	opt callstack 0
  5165                           
  5166                           ; 2 bytes @ 0x8
  5167  000009                     	ds	1
  5168  00000A                     ??_UART1_Write_string:
  5169  00000A                     generateCRC@crcHigh:
  5170                           	opt callstack 0
  5171  00000A                     CardConfigIni@Name:
  5172                           	opt callstack 0
  5173                           
  5174                           ; 2 bytes @ 0x9
  5175  00000A                     	ds	1
  5176  00000B                     ??_fputc:
  5177  00000B                     ?_toupper:
  5178                           	opt callstack 0
  5179  00000B                     _isspace$2436:
  5180                           	opt callstack 0
  5181  00000B                     UART1_Write_string@i:
  5182                           	opt callstack 0
  5183  00000B                     memmove@s1:
  5184                           	opt callstack 0
  5185  00000B                     strcpy@src:
  5186                           	opt callstack 0
  5187  00000B                     toupper@c:
  5188                           	opt callstack 0
  5189                           
  5190                           ; 2 bytes @ 0xA
  5191  00000B                     	ds	1
  5192  00000C                     ?_atoi:
  5193                           	opt callstack 0
  5194  00000C                     generateCRC@crcLow:
  5195                           	opt callstack 0
  5196  00000C                     CardConfigIni@RetNum:
  5197                           	opt callstack 0
  5198  00000C                     atoi@s:
  5199                           	opt callstack 0
  5200                           
  5201                           ; 2 bytes @ 0xB
  5202  00000C                     	ds	1
  5203  00000D                     ??_strcpy:
  5204  00000D                     ??_toupper:
  5205  00000D                     memmove@n:
  5206                           	opt callstack 0
  5207  00000D                     ___aodiv@divisor:
  5208                           	opt callstack 0
  5209  00000D                     ___aomod@divisor:
  5210                           	opt callstack 0
  5211  00000D                     ___lodiv@divisor:
  5212                           	opt callstack 0
  5213  00000D                     ___lomod@divisor:
  5214                           	opt callstack 0
  5215                           
  5216                           ; 8 bytes @ 0xC
  5217  00000D                     	ds	1
  5218  00000E                     ??_atoi:
  5219  00000E                     generateCRC@i:
  5220                           	opt callstack 0
  5221  00000E                     CardConfigIni@dataeeAddrWrk:
  5222                           	opt callstack 0
  5223                           
  5224                           ; 2 bytes @ 0xD
  5225  00000E                     	ds	1
  5226  00000F                     ??_memmove:
  5227  00000F                     strcpy@s:
  5228                           	opt callstack 0
  5229                           
  5230                           ; 2 bytes @ 0xE
  5231  00000F                     	ds	1
  5232  000010                     ?_stoa:
  5233                           	opt callstack 0
  5234  000010                     generateCRC@j:
  5235                           	opt callstack 0
  5236  000010                     CardConfigIni@NumBytes:
  5237                           	opt callstack 0
  5238  000010                     stoa@fp:
  5239                           	opt callstack 0
  5240  000010                     fputs@s:
  5241                           	opt callstack 0
  5242                           
  5243                           ; 2 bytes @ 0xF
  5244  000010                     	ds	1
  5245  000011                     memmove@d:
  5246                           	opt callstack 0
  5247  000011                     strcpy@d:
  5248                           	opt callstack 0
  5249  000011                     _toupper$2523:
  5250                           	opt callstack 0
  5251                           
  5252                           ; 2 bytes @ 0x10
  5253  000011                     	ds	1
  5254  000012                     ??_CardConfigIni:
  5255  000012                     generateCRC@crc:
  5256                           	opt callstack 0
  5257  000012                     stoa@s:
  5258                           	opt callstack 0
  5259  000012                     atoi@neg:
  5260                           	opt callstack 0
  5261  000012                     fputs@fp:
  5262                           	opt callstack 0
  5263                           
  5264                           ; 2 bytes @ 0x11
  5265  000012                     	ds	1
  5266  000013                     memmove@s:
  5267                           	opt callstack 0
  5268  000013                     strcat@dest:
  5269                           	opt callstack 0
  5270                           
  5271                           ; 2 bytes @ 0x12
  5272  000013                     	ds	1
  5273  000014                     ??_stoa:
  5274  000014                     fputs@c:
  5275                           	opt callstack 0
  5276  000014                     ModbusError@ErrorCode:
  5277                           	opt callstack 0
  5278  000014                     CardConfigIni@j:
  5279                           	opt callstack 0
  5280  000014                     _atoi$2409:
  5281                           	opt callstack 0
  5282                           
  5283                           ; 2 bytes @ 0x13
  5284  000014                     	ds	1
  5285  000015                     ___aodiv@counter:
  5286                           	opt callstack 0
  5287  000015                     ___aomod@counter:
  5288                           	opt callstack 0
  5289  000015                     ___lomod@counter:
  5290                           	opt callstack 0
  5291  000015                     fputs@i:
  5292                           	opt callstack 0
  5293  000015                     strcat@src:
  5294                           	opt callstack 0
  5295  000015                     stoa@nuls:
  5296                           	opt callstack 0
  5297  000015                     ___lodiv@quotient:
  5298                           	opt callstack 0
  5299                           
  5300                           ; 8 bytes @ 0x14
  5301  000015                     	ds	1
  5302  000016                     ___aodiv@sign:
  5303                           	opt callstack 0
  5304  000016                     ___aomod@sign:
  5305                           	opt callstack 0
  5306  000016                     CardConfigIni@i:
  5307                           	opt callstack 0
  5308  000016                     _atoi$2411:
  5309                           	opt callstack 0
  5310                           
  5311                           ; 2 bytes @ 0x15
  5312  000016                     	ds	1
  5313  000017                     ?_abs:
  5314                           	opt callstack 0
  5315  000017                     ?_pad:
  5316                           	opt callstack 0
  5317  000017                     pad@fp:
  5318                           	opt callstack 0
  5319  000017                     abs@a:
  5320                           	opt callstack 0
  5321  000017                     ___aodiv@quotient:
  5322                           	opt callstack 0
  5323                           
  5324                           ; 8 bytes @ 0x16
  5325  000017                     	ds	1
  5326  000018                     CardConfigIni@readDataOdd:
  5327                           	opt callstack 0
  5328  000018                     _atoi$2410:
  5329                           	opt callstack 0
  5330                           
  5331                           ; 1 bytes @ 0x17
  5332  000018                     	ds	1
  5333  000019                     ??_abs:
  5334  000019                     CardConfigIni@readDataEven:
  5335                           	opt callstack 0
  5336  000019                     pad@buf:
  5337                           	opt callstack 0
  5338  000019                     atoi@n:
  5339                           	opt callstack 0
  5340                           
  5341                           ; 2 bytes @ 0x18
  5342  000019                     	ds	2
  5343  00001B                     pad@p:
  5344                           	opt callstack 0
  5345                           
  5346                           ; 2 bytes @ 0x1A
  5347  00001B                     	ds	1
  5348  00001C                     stoa@i:
  5349                           	opt callstack 0
  5350                           
  5351                           ; 2 bytes @ 0x1B
  5352  00001C                     	ds	1
  5353  00001D                     ??_pad:
  5354  00001D                     ___lodiv@counter:
  5355                           	opt callstack 0
  5356                           
  5357                           ; 1 bytes @ 0x1C
  5358  00001D                     	ds	1
  5359  00001E                     pad@i:
  5360                           	opt callstack 0
  5361  00001E                     stoa@w:
  5362                           	opt callstack 0
  5363                           
  5364                           ; 2 bytes @ 0x1D
  5365  00001E                     	ds	2
  5366  000020                     pad@w:
  5367                           	opt callstack 0
  5368  000020                     stoa@cp:
  5369                           	opt callstack 0
  5370                           
  5371                           ; 2 bytes @ 0x1F
  5372  000020                     	ds	2
  5373  000022                     ?_dtoa:
  5374                           	opt callstack 0
  5375  000022                     ?_utoa:
  5376                           	opt callstack 0
  5377  000022                     ?_xtoa:
  5378                           	opt callstack 0
  5379  000022                     dtoa@fp:
  5380                           	opt callstack 0
  5381  000022                     stoa@p:
  5382                           	opt callstack 0
  5383  000022                     utoa@fp:
  5384                           	opt callstack 0
  5385  000022                     xtoa@fp:
  5386                           	opt callstack 0
  5387                           
  5388                           ; 2 bytes @ 0x21
  5389  000022                     	ds	2
  5390  000024                     stoa@l:
  5391                           	opt callstack 0
  5392  000024                     dtoa@d:
  5393                           	opt callstack 0
  5394  000024                     utoa@d:
  5395                           	opt callstack 0
  5396  000024                     xtoa@d:
  5397                           	opt callstack 0
  5398                           
  5399                           ; 8 bytes @ 0x23
  5400  000024                     	ds	8
  5401  00002C                     ??_dtoa:
  5402  00002C                     ??_utoa:
  5403  00002C                     xtoa@x:
  5404                           	opt callstack 0
  5405                           
  5406                           ; 1 bytes @ 0x2B
  5407  00002C                     	ds	1
  5408  00002D                     ??_xtoa:
  5409                           
  5410                           ; 1 bytes @ 0x2C
  5411  00002D                     	ds	7
  5412  000034                     _dtoa$1905:
  5413                           	opt callstack 0
  5414  000034                     utoa@p:
  5415                           	opt callstack 0
  5416                           
  5417                           ; 2 bytes @ 0x33
  5418  000034                     	ds	1
  5419  000035                     _xtoa$1934:
  5420                           	opt callstack 0
  5421                           
  5422                           ; 2 bytes @ 0x34
  5423  000035                     	ds	1
  5424  000036                     dtoa@p:
  5425                           	opt callstack 0
  5426  000036                     utoa@w:
  5427                           	opt callstack 0
  5428                           
  5429                           ; 2 bytes @ 0x35
  5430  000036                     	ds	1
  5431  000037                     _xtoa$1935:
  5432                           	opt callstack 0
  5433                           
  5434                           ; 2 bytes @ 0x36
  5435  000037                     	ds	1
  5436  000038                     dtoa@w:
  5437                           	opt callstack 0
  5438  000038                     utoa@n:
  5439                           	opt callstack 0
  5440                           
  5441                           ; 8 bytes @ 0x37
  5442  000038                     	ds	1
  5443  000039                     xtoa@p:
  5444                           	opt callstack 0
  5445                           
  5446                           ; 2 bytes @ 0x38
  5447  000039                     	ds	1
  5448  00003A                     dtoa@s:
  5449                           	opt callstack 0
  5450                           
  5451                           ; 2 bytes @ 0x39
  5452  00003A                     	ds	1
  5453  00003B                     xtoa@w:
  5454                           	opt callstack 0
  5455                           
  5456                           ; 2 bytes @ 0x3A
  5457  00003B                     	ds	1
  5458  00003C                     dtoa@n:
  5459                           	opt callstack 0
  5460                           
  5461                           ; 8 bytes @ 0x3B
  5462  00003C                     	ds	1
  5463  00003D                     xtoa@n:
  5464                           	opt callstack 0
  5465                           
  5466                           ; 8 bytes @ 0x3C
  5467  00003D                     	ds	3
  5468  000040                     utoa@i:
  5469                           	opt callstack 0
  5470                           
  5471                           ; 2 bytes @ 0x3F
  5472  000040                     	ds	4
  5473  000044                     dtoa@i:
  5474                           	opt callstack 0
  5475                           
  5476                           ; 2 bytes @ 0x43
  5477  000044                     	ds	1
  5478  000045                     xtoa@i:
  5479                           	opt callstack 0
  5480                           
  5481                           ; 2 bytes @ 0x44
  5482  000045                     	ds	2
  5483  000047                     xtoa@c:
  5484                           	opt callstack 0
  5485                           
  5486                           ; 2 bytes @ 0x46
  5487  000047                     	ds	2
  5488  000049                     ?_vfpfcnvrt:
  5489                           	opt callstack 0
  5490  000049                     vfpfcnvrt@fp:
  5491                           	opt callstack 0
  5492                           
  5493                           ; 2 bytes @ 0x48
  5494  000049                     	ds	2
  5495  00004B                     vfpfcnvrt@fmt:
  5496                           	opt callstack 0
  5497                           
  5498                           ; 2 bytes @ 0x4A
  5499  00004B                     	ds	2
  5500  00004D                     vfpfcnvrt@ap:
  5501                           	opt callstack 0
  5502                           
  5503                           ; 2 bytes @ 0x4C
  5504  00004D                     	ds	2
  5505  00004F                     ??_vfpfcnvrt:
  5506                           
  5507                           ; 1 bytes @ 0x4E
  5508  00004F                     	ds	4
  5509  000053                     vfprintf@cfmt:
  5510                           	opt callstack 0
  5511                           
  5512                           ; 2 bytes @ 0x52
  5513  000053                     	ds	2
  5514  000055                     ??_InitialiseString:
  5515  000055                     ??_AddRxBuffToModBus:
  5516  000055                     PrintMB400@i:
  5517                           	opt callstack 0
  5518  000055                     ReadRX232@temp:
  5519                           	opt callstack 0
  5520  000055                     ClearEEAddRange@i:
  5521                           	opt callstack 0
  5522                           
  5523                           ; 2 bytes @ 0x54
  5524  000055                     	ds	1
  5525  000056                     ??_ModbusRx:
  5526                           
  5527                           ; 1 bytes @ 0x55
  5528  000056                     	ds	1
  5529  000057                     
  5530                           ; 1 bytes @ 0x56
  5531 ;;
  5532 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  5533 ;;
  5534 ;; *************** function _main *****************
  5535 ;; Defined at:
  5536 ;;		line 23 in file "main.c"
  5537 ;; Parameters:    Size  Location     Type
  5538 ;;		None
  5539 ;; Auto vars:     Size  Location     Type
  5540 ;;  RXStat          1    0        _Bool 
  5541 ;; Return value:  Size  Location     Type
  5542 ;;                  1    wreg      void 
  5543 ;; Registers used:
  5544 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5545 ;; Tracked objects:
  5546 ;;		On entry : 0/0
  5547 ;;		On exit  : 0/0
  5548 ;;		Unchanged: 0/0
  5549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5551 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5552 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5553 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5554 ;;Total ram usage:        3 bytes
  5555 ;; Hardware stack levels required when called:   16
  5556 ;; This function calls:
  5557 ;;		_ClearModbusData
  5558 ;;		_ClearModbusRespon
  5559 ;;		_ClearRxBuff
  5560 ;;		_InitialiseString
  5561 ;;		_ModbusError
  5562 ;;		_ModbusFC03
  5563 ;;		_ModbusFC04
  5564 ;;		_ModbusFC10
  5565 ;;		_ModbusRx
  5566 ;;		_PrintMB400
  5567 ;;		_PrintModRespon
  5568 ;;		_PrintModbus
  5569 ;;		_RXMode
  5570 ;;		_ReadRX232
  5571 ;;		_SYSTEM_Initialize
  5572 ;;		_ValidateCmd
  5573 ;;		_printf
  5574 ;;		_strcpy
  5575 ;; This function is called by:
  5576 ;;		Startup code after reset
  5577 ;; This function uses a non-reentrant model
  5578 ;;
  5579                           
  5580                           	psect	text0
  5581  00380A                     __ptext0:
  5582                           	opt callstack 0
  5583  00380A                     _main:
  5584                           	opt callstack 15
  5585  00380A                     
  5586                           ;main.c: 26:     SYSTEM_Initialize();
  5587  00380A  EC25  F028         	call	_SYSTEM_Initialize	;wreg free
  5588  00380E                     
  5589                           ;main.c: 33:     (INTCONbits.GIE = 1);
  5590  00380E  8EF2               	bsf	242,7,c	;volatile
  5591  003810                     
  5592                           ;main.c: 39:     (INTCONbits.PEIE = 1);
  5593  003810  8CF2               	bsf	242,6,c	;volatile
  5594  003812  9883               	bcf	131,4,c	;volatile
  5595  003814  9A83               	bcf	131,5,c	;volatile
  5596  003816  9C83               	bcf	131,6,c	;volatile
  5597  003818  9E83               	bcf	131,7,c	;volatile
  5598  00381A                     
  5599                           ;main.c: 49:     InitialiseString(0);
  5600  00381A  0E00               	movlw	0
  5601  00381C  ECAB  F009         	call	_InitialiseString
  5602  003820                     
  5603                           ;main.c: 52:     RXMode();
  5604  003820  ECE6  F028         	call	_RXMode	;wreg free
  5605  003824                     
  5606                           ;main.c: 53:     ClearRxBuff();
  5607  003824  ECEA  F025         	call	_ClearRxBuff	;wreg free
  5608  003828                     
  5609                           ;main.c: 54:     ClearModbusRespon();
  5610  003828  EC99  F026         	call	_ClearModbusRespon	;wreg free
  5611  00382C                     l8376:
  5612                           
  5613                           ;main.c: 60:     {;main.c: 61:         if(ModbusRx() == 1){
  5614  00382C  ECE7  F019         	call	_ModbusRx	;wreg free
  5615  003830  06E8               	decf	wreg,f,c
  5616  003832  A4D8               	btfss	status,2,c
  5617  003834  EF1E  F01C         	goto	u8471
  5618  003838  EF20  F01C         	goto	u8470
  5619  00383C                     u8471:
  5620  00383C  EF81  F01C         	goto	l8400
  5621  003840                     u8470:
  5622  003840  EF5D  F01C         	goto	l8392
  5623  003844                     l8380:
  5624                           
  5625                           ; BSR set to: 1
  5626                           ;main.c: 67:                 {;main.c: 68:                     printf("Function Code 0x0
      +                          3\r\n");
  5627  003844  0ED6               	movlw	low STR_1
  5628  003846  0100               	movlb	0	; () banked
  5629  003848  6F7D               	movwf	printf@fmt& (0+255),b
  5630  00384A  0EFE               	movlw	high STR_1
  5631  00384C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5632  00384E  ECEB  F027         	call	_printf	;wreg free
  5633                           
  5634                           ;main.c: 70:                     ModbusFC03();
  5635  003852  EC8C  F00B         	call	_ModbusFC03	;wreg free
  5636                           
  5637                           ;main.c: 71:                     break;
  5638  003856  EF77  F01C         	goto	l8394
  5639  00385A                     l8382:
  5640                           
  5641                           ; BSR set to: 1
  5642                           ;main.c: 74:                 {;main.c: 75:                     printf("Function Code 0x1
      +                          0\r\n");
  5643  00385A  0EC1               	movlw	low STR_2
  5644  00385C  0100               	movlb	0	; () banked
  5645  00385E  6F7D               	movwf	printf@fmt& (0+255),b
  5646  003860  0EFE               	movlw	high STR_2
  5647  003862  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5648  003864  ECEB  F027         	call	_printf	;wreg free
  5649                           
  5650                           ;main.c: 77:                     printf("Modbus Register Before Update:");
  5651  003868  0E8B               	movlw	low STR_3
  5652  00386A  0100               	movlb	0	; () banked
  5653  00386C  6F7D               	movwf	printf@fmt& (0+255),b
  5654  00386E  0EFC               	movlw	high STR_3
  5655  003870  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5656  003872  ECEB  F027         	call	_printf	;wreg free
  5657                           
  5658                           ;main.c: 78:                     PrintMB400();
  5659  003876  ECA4  F023         	call	_PrintMB400	;wreg free
  5660                           
  5661                           ;main.c: 79:                     ModbusFC10();
  5662  00387A  ECC3  F012         	call	_ModbusFC10	;wreg free
  5663                           
  5664                           ;main.c: 81:                     printf("Modbus Register After Update:");
  5665  00387E  0E22               	movlw	low STR_4
  5666  003880  0100               	movlb	0	; () banked
  5667  003882  6F7D               	movwf	printf@fmt& (0+255),b
  5668  003884  0EFD               	movlw	high STR_4
  5669  003886  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5670  003888  ECEB  F027         	call	_printf	;wreg free
  5671                           
  5672                           ;main.c: 82:                     PrintMB400();
  5673  00388C  ECA4  F023         	call	_PrintMB400	;wreg free
  5674                           
  5675                           ;main.c: 83:                     break;
  5676  003890  EF77  F01C         	goto	l8394
  5677  003894                     l8384:
  5678                           
  5679                           ; BSR set to: 1
  5680                           ;main.c: 86:                 {;main.c: 90:                     ModbusFC04();
  5681  003894  EC95  F000         	call	_ModbusFC04	;wreg free
  5682                           
  5683                           ;main.c: 91:                     break;
  5684  003898  EF77  F01C         	goto	l8394
  5685  00389C                     l8386:
  5686                           
  5687                           ; BSR set to: 1
  5688                           ;main.c: 94:                 {;main.c: 95:                     printf("Unsupported Funct
      +                          ion Code\r\n");
  5689  00389C  0E78               	movlw	low STR_5
  5690  00389E  0100               	movlb	0	; () banked
  5691  0038A0  6F7D               	movwf	printf@fmt& (0+255),b
  5692  0038A2  0EFD               	movlw	high STR_5
  5693  0038A4  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5694  0038A6  ECEB  F027         	call	_printf	;wreg free
  5695  0038AA                     
  5696                           ;main.c: 97:                     ModbusError(0x01);
  5697  0038AA  0E00               	movlw	0
  5698  0038AC  6E15               	movwf	(ModbusError@ErrorCode+1)^0,c
  5699  0038AE  0E01               	movlw	1
  5700  0038B0  6E14               	movwf	ModbusError@ErrorCode^0,c
  5701  0038B2  ECA2  F020         	call	_ModbusError	;wreg free
  5702                           
  5703                           ;main.c: 98:                     break;
  5704  0038B6  EF77  F01C         	goto	l8394
  5705  0038BA                     l8392:
  5706  0038BA  0101               	movlb	1	; () banked
  5707  0038BC  5101               	movf	(_ModbusData+1)& (0+255),w,b
  5708  0038BE  6FD7               	movwf	??_main& (0+255),b
  5709  0038C0  6BD8               	clrf	(??_main+1)& (0+255),b
  5710                           
  5711                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5712                           ; Switch size 1, requested type "simple"
  5713                           ; Number of cases is 1, Range of values is 0 to 0
  5714                           ; switch strategies available:
  5715                           ; Name         Instructions Cycles
  5716                           ; simple_byte            4     3 (average)
  5717                           ;	Chosen strategy is simple_byte
  5718  0038C2  51D8               	movf	(??_main+1)& (0+255),w,b
  5719  0038C4  0A00               	xorlw	0	; case 0
  5720  0038C6  B4D8               	btfsc	status,2,c
  5721  0038C8  EF68  F01C         	goto	l8556
  5722  0038CC  EF4E  F01C         	goto	l8386
  5723  0038D0                     l8556:
  5724                           
  5725                           ; BSR set to: 1
  5726                           ; Switch size 1, requested type "simple"
  5727                           ; Number of cases is 3, Range of values is 3 to 16
  5728                           ; switch strategies available:
  5729                           ; Name         Instructions Cycles
  5730                           ; simple_byte           10     6 (average)
  5731                           ;	Chosen strategy is simple_byte
  5732  0038D0  51D7               	movf	??_main& (0+255),w,b
  5733  0038D2  0A03               	xorlw	3	; case 3
  5734  0038D4  B4D8               	btfsc	status,2,c
  5735  0038D6  EF22  F01C         	goto	l8380
  5736  0038DA  0A07               	xorlw	7	; case 4
  5737  0038DC  B4D8               	btfsc	status,2,c
  5738  0038DE  EF4A  F01C         	goto	l8384
  5739  0038E2  0A14               	xorlw	20	; case 16
  5740  0038E4  B4D8               	btfsc	status,2,c
  5741  0038E6  EF2D  F01C         	goto	l8382
  5742  0038EA  EF4E  F01C         	goto	l8386
  5743  0038EE                     l8394:
  5744                           
  5745                           ;main.c: 102:             PrintModbus();
  5746  0038EE  EC5D  F011         	call	_PrintModbus	;wreg free
  5747                           
  5748                           ;main.c: 103:             PrintModRespon();
  5749  0038F2  EC0E  F00D         	call	_PrintModRespon	;wreg free
  5750  0038F6                     
  5751                           ;main.c: 107:             ClearModbusData();
  5752  0038F6  ECC4  F025         	call	_ClearModbusData	;wreg free
  5753  0038FA                     
  5754                           ;main.c: 108:             ClearModbusRespon();
  5755  0038FA  EC99  F026         	call	_ClearModbusRespon	;wreg free
  5756                           
  5757                           ;main.c: 110:         }else if(ReadRX232(16) != 0){
  5758  0038FE  EF16  F01C         	goto	l8376
  5759  003902                     l8400:
  5760  003902  0E00               	movlw	0
  5761  003904  0100               	movlb	0	; () banked
  5762  003906  6F90               	movwf	(ReadRX232@NumChars+1)& (0+255),b
  5763  003908  0E10               	movlw	16
  5764  00390A  6F8F               	movwf	ReadRX232@NumChars& (0+255),b
  5765  00390C  ECAB  F01C         	call	_ReadRX232	;wreg free
  5766  003910  0100               	movlb	0	; () banked
  5767  003912  518F               	movf	?_ReadRX232& (0+255),w,b
  5768  003914  1190               	iorwf	(?_ReadRX232+1)& (0+255),w,b
  5769  003916  B4D8               	btfsc	status,2,c
  5770  003918  EF90  F01C         	goto	u8481
  5771  00391C  EF92  F01C         	goto	u8480
  5772  003920                     u8481:
  5773  003920  EFA7  F01C         	goto	l604
  5774  003924                     u8480:
  5775  003924                     
  5776                           ; BSR set to: 0
  5777                           ;main.c: 112:             if(ValidateCmd() ==1){
  5778  003924  ECBB  F016         	call	_ValidateCmd	;wreg free
  5779  003928                     
  5780                           ;main.c: 119:             printf("\r\nEnter Command : ");
  5781  003928  0E25               	movlw	low STR_6
  5782  00392A  0100               	movlb	0	; () banked
  5783  00392C  6F7D               	movwf	printf@fmt& (0+255),b
  5784  00392E  0EFF               	movlw	high STR_6
  5785  003930  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5786  003932  ECEB  F027         	call	_printf	;wreg free
  5787  003936                     
  5788                           ;main.c: 120:             strcpy(Command, "");
  5789  003936  0EED               	movlw	low _Command
  5790  003938  6E09               	movwf	strcpy@dest^0,c
  5791  00393A  0E01               	movlw	high _Command
  5792  00393C  6E0A               	movwf	(strcpy@dest+1)^0,c
  5793  00393E  0E68               	movlw	low (STR_117+101)
  5794  003940  6E0B               	movwf	strcpy@src^0,c
  5795  003942  0EF3               	movlw	high (STR_117+101)
  5796  003944  6E0C               	movwf	(strcpy@src+1)^0,c
  5797  003946  EC09  F024         	call	_strcpy	;wreg free
  5798                           
  5799                           ;main.c: 122:         }else{
  5800  00394A  EF16  F01C         	goto	l8376
  5801  00394E                     l604:
  5802                           
  5803                           ; BSR set to: 0
  5804  00394E  EF16  F01C         	goto	l8376
  5805  003952  EF93  F000         	goto	start
  5806  003956                     __end_of_main:
  5807                           	opt callstack 0
  5808                           
  5809 ;; *************** function _ValidateCmd *****************
  5810 ;; Defined at:
  5811 ;;		line 283 in file "RS232.c"
  5812 ;; Parameters:    Size  Location     Type
  5813 ;;		None
  5814 ;; Auto vars:     Size  Location     Type
  5815 ;;  ConfName       20   40[BANK1 ] unsigned char [20]
  5816 ;;  MaxChars        2    0        int 
  5817 ;;  ConfName       20   20[BANK1 ] unsigned char [20]
  5818 ;;  MaxChars        2    0        int 
  5819 ;;  ConfName       20    0[BANK1 ] unsigned char [20]
  5820 ;;  MaxChars        2    0        int 
  5821 ;;  i               2    0        int 
  5822 ;; Return value:  Size  Location     Type
  5823 ;;                  1    wreg      _Bool 
  5824 ;; Registers used:
  5825 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5826 ;; Tracked objects:
  5827 ;;		On entry : 0/0
  5828 ;;		On exit  : 0/0
  5829 ;;		Unchanged: 0/0
  5830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5832 ;;      Locals:         0       0      68       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5834 ;;      Totals:         0       0      68       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5835 ;;Total ram usage:       68 bytes
  5836 ;; Hardware stack levels used:    1
  5837 ;; Hardware stack levels required when called:   15
  5838 ;; This function calls:
  5839 ;;		_InitialiseString
  5840 ;;		_SaveCardDat
  5841 ;;		_TogDebug
  5842 ;;		_strcmp
  5843 ;; This function is called by:
  5844 ;;		_main
  5845 ;; This function uses a non-reentrant model
  5846 ;;
  5847                           
  5848                           	psect	text1
  5849  002D76                     __ptext1:
  5850                           	opt callstack 0
  5851  002D76                     _ValidateCmd:
  5852                           	opt callstack 15
  5853  002D76                     
  5854                           ;RS232.c: 289:     if(!strcmp(Command,"debug")){
  5855  002D76  0EED               	movlw	low _Command
  5856  002D78  6E05               	movwf	strcmp@l^0,c
  5857  002D7A  0E01               	movlw	high _Command
  5858  002D7C  6E06               	movwf	(strcmp@l+1)^0,c
  5859  002D7E  0EE4               	movlw	low STR_132
  5860  002D80  6E07               	movwf	strcmp@r^0,c
  5861  002D82  0EFF               	movlw	high STR_132
  5862  002D84  6E08               	movwf	(strcmp@r+1)^0,c
  5863  002D86  EC62  F021         	call	_strcmp	;wreg free
  5864  002D8A  5005               	movf	?_strcmp^0,w,c
  5865  002D8C  1006               	iorwf	(?_strcmp+1)^0,w,c
  5866  002D8E  A4D8               	btfss	status,2,c
  5867  002D90  EFCC  F016         	goto	u8391
  5868  002D94  EFCE  F016         	goto	u8390
  5869  002D98                     u8391:
  5870  002D98  EFD3  F016         	goto	l8282
  5871  002D9C                     u8390:
  5872  002D9C                     
  5873                           ;RS232.c: 290:         TogDebug();
  5874  002D9C  EC38  F027         	call	_TogDebug	;wreg free
  5875  002DA0                     l8276:
  5876                           
  5877                           ;RS232.c: 291:         return 1;
  5878  002DA0  0E01               	movlw	1
  5879  002DA2  EF88  F017         	goto	l1017
  5880  002DA6                     l8282:
  5881  002DA6  0EED               	movlw	low _Command
  5882  002DA8  6E05               	movwf	strcmp@l^0,c
  5883  002DAA  0E01               	movlw	high _Command
  5884  002DAC  6E06               	movwf	(strcmp@l+1)^0,c
  5885  002DAE  0EFC               	movlw	low STR_134
  5886  002DB0  6E07               	movwf	strcmp@r^0,c
  5887  002DB2  0EFF               	movlw	high STR_134
  5888  002DB4  6E08               	movwf	(strcmp@r+1)^0,c
  5889  002DB6  EC62  F021         	call	_strcmp	;wreg free
  5890  002DBA  5005               	movf	?_strcmp^0,w,c
  5891  002DBC  1006               	iorwf	(?_strcmp+1)^0,w,c
  5892  002DBE  A4D8               	btfss	status,2,c
  5893  002DC0  EFE4  F016         	goto	u8401
  5894  002DC4  EFE6  F016         	goto	u8400
  5895  002DC8                     u8401:
  5896  002DC8  EFEB  F016         	goto	l8292
  5897  002DCC                     u8400:
  5898  002DCC                     
  5899                           ;RS232.c: 293:         InitialiseString(0);
  5900  002DCC  0E00               	movlw	0
  5901  002DCE  ECAB  F009         	call	_InitialiseString
  5902  002DD2  EFD0  F016         	goto	l8276
  5903  002DD6                     l8292:
  5904  002DD6  0EED               	movlw	low _Command
  5905  002DD8  6E05               	movwf	strcmp@l^0,c
  5906  002DDA  0E01               	movlw	high _Command
  5907  002DDC  6E06               	movwf	(strcmp@l+1)^0,c
  5908  002DDE  0EDD               	movlw	low STR_136
  5909  002DE0  6E07               	movwf	strcmp@r^0,c
  5910  002DE2  0EFF               	movlw	high STR_136
  5911  002DE4  6E08               	movwf	(strcmp@r+1)^0,c
  5912  002DE6  EC62  F021         	call	_strcmp	;wreg free
  5913  002DEA  5005               	movf	?_strcmp^0,w,c
  5914  002DEC  1006               	iorwf	(?_strcmp+1)^0,w,c
  5915  002DEE  A4D8               	btfss	status,2,c
  5916  002DF0  EFFC  F016         	goto	u8411
  5917  002DF4  EFFE  F016         	goto	u8410
  5918  002DF8                     u8411:
  5919  002DF8  EF1F  F017         	goto	l8308
  5920  002DFC                     u8410:
  5921  002DFC                     
  5922                           ;RS232.c: 296:         char ConfName[20] = "Serial Number";
  5923  002DFC  EE22  F028         	lfsr	2,ValidateCmd@F10791
  5924  002E00  EE11  F093         	lfsr	1,ValidateCmd@ConfName
  5925  002E04  0E13               	movlw	19
  5926  002E06                     u8421:
  5927  002E06  CFDB FFE3          	movff	plusw2,plusw1
  5928  002E0A  06E8               	decf	wreg,f,c
  5929  002E0C  E2FC               	bc	u8421
  5930  002E0E                     
  5931                           ;RS232.c: 302:         SaveCardDat(ConfName,0x0300,0x0300,MaxChars);
  5932  002E0E  0E93               	movlw	low ValidateCmd@ConfName
  5933  002E10  0100               	movlb	0	; () banked
  5934  002E12  6F93               	movwf	SaveCardDat@Name& (0+255),b
  5935  002E14  0E01               	movlw	high ValidateCmd@ConfName
  5936  002E16  6F94               	movwf	(SaveCardDat@Name+1)& (0+255),b
  5937  002E18  0E03               	movlw	3
  5938  002E1A  6F96               	movwf	(SaveCardDat@MBAddress+1)& (0+255),b
  5939  002E1C  0E00               	movlw	0
  5940  002E1E  6F95               	movwf	SaveCardDat@MBAddress& (0+255),b
  5941  002E20  0E03               	movlw	3
  5942  002E22  6F98               	movwf	(SaveCardDat@dataeeAddr+1)& (0+255),b
  5943  002E24  0E00               	movlw	0
  5944  002E26  6F97               	movwf	SaveCardDat@dataeeAddr& (0+255),b
  5945  002E28  0E00               	movlw	0
  5946  002E2A  6F9A               	movwf	(SaveCardDat@NumBytes+1)& (0+255),b
  5947  002E2C  0E0A               	movlw	10
  5948  002E2E  6F99               	movwf	SaveCardDat@NumBytes& (0+255),b
  5949  002E30  ECD3  F015         	call	_SaveCardDat	;wreg free
  5950  002E34                     
  5951                           ;RS232.c: 303:         InitialiseString(1);
  5952  002E34  0E01               	movlw	1
  5953  002E36  ECAB  F009         	call	_InitialiseString
  5954  002E3A  EFD0  F016         	goto	l8276
  5955  002E3E                     l8308:
  5956  002E3E  0EED               	movlw	low _Command
  5957  002E40  6E05               	movwf	strcmp@l^0,c
  5958  002E42  0E01               	movlw	high _Command
  5959  002E44  6E06               	movwf	(strcmp@l+1)^0,c
  5960  002E46  0EEF               	movlw	low STR_138
  5961  002E48  6E07               	movwf	strcmp@r^0,c
  5962  002E4A  0EFF               	movlw	high STR_138
  5963  002E4C  6E08               	movwf	(strcmp@r+1)^0,c
  5964  002E4E  EC62  F021         	call	_strcmp	;wreg free
  5965  002E52  5005               	movf	?_strcmp^0,w,c
  5966  002E54  1006               	iorwf	(?_strcmp+1)^0,w,c
  5967  002E56  A4D8               	btfss	status,2,c
  5968  002E58  EF30  F017         	goto	u8431
  5969  002E5C  EF32  F017         	goto	u8430
  5970  002E60                     u8431:
  5971  002E60  EF53  F017         	goto	l8324
  5972  002E64                     u8430:
  5973  002E64                     
  5974                           ;RS232.c: 309:         char ConfName[20] = "Part Number";
  5975  002E64  EE22  F014         	lfsr	2,ValidateCmd@F10794
  5976  002E68  EE11  F0A7         	lfsr	1,ValidateCmd@ConfName_1575
  5977  002E6C  0E13               	movlw	19
  5978  002E6E                     u8441:
  5979  002E6E  CFDB FFE3          	movff	plusw2,plusw1
  5980  002E72  06E8               	decf	wreg,f,c
  5981  002E74  E2FC               	bc	u8441
  5982  002E76                     
  5983                           ;RS232.c: 311:         SaveCardDat(ConfName,0x0100,0x0100,MaxChars);
  5984  002E76  0EA7               	movlw	low ValidateCmd@ConfName_1575
  5985  002E78  0100               	movlb	0	; () banked
  5986  002E7A  6F93               	movwf	SaveCardDat@Name& (0+255),b
  5987  002E7C  0E01               	movlw	high ValidateCmd@ConfName_1575
  5988  002E7E  6F94               	movwf	(SaveCardDat@Name+1)& (0+255),b
  5989  002E80  0E01               	movlw	1
  5990  002E82  6F96               	movwf	(SaveCardDat@MBAddress+1)& (0+255),b
  5991  002E84  0E00               	movlw	0
  5992  002E86  6F95               	movwf	SaveCardDat@MBAddress& (0+255),b
  5993  002E88  0E01               	movlw	1
  5994  002E8A  6F98               	movwf	(SaveCardDat@dataeeAddr+1)& (0+255),b
  5995  002E8C  0E00               	movlw	0
  5996  002E8E  6F97               	movwf	SaveCardDat@dataeeAddr& (0+255),b
  5997  002E90  0E00               	movlw	0
  5998  002E92  6F9A               	movwf	(SaveCardDat@NumBytes+1)& (0+255),b
  5999  002E94  0E10               	movlw	16
  6000  002E96  6F99               	movwf	SaveCardDat@NumBytes& (0+255),b
  6001  002E98  ECD3  F015         	call	_SaveCardDat	;wreg free
  6002  002E9C                     
  6003                           ;RS232.c: 312:         InitialiseString(1);
  6004  002E9C  0E01               	movlw	1
  6005  002E9E  ECAB  F009         	call	_InitialiseString
  6006  002EA2  EFD0  F016         	goto	l8276
  6007  002EA6                     l8324:
  6008  002EA6  0EED               	movlw	low _Command
  6009  002EA8  6E05               	movwf	strcmp@l^0,c
  6010  002EAA  0E01               	movlw	high _Command
  6011  002EAC  6E06               	movwf	(strcmp@l+1)^0,c
  6012  002EAE  0EF8               	movlw	low STR_140
  6013  002EB0  6E07               	movwf	strcmp@r^0,c
  6014  002EB2  0EFF               	movlw	high STR_140
  6015  002EB4  6E08               	movwf	(strcmp@r+1)^0,c
  6016  002EB6  EC62  F021         	call	_strcmp	;wreg free
  6017  002EBA  5005               	movf	?_strcmp^0,w,c
  6018  002EBC  1006               	iorwf	(?_strcmp+1)^0,w,c
  6019  002EBE  A4D8               	btfss	status,2,c
  6020  002EC0  EF64  F017         	goto	u8451
  6021  002EC4  EF66  F017         	goto	u8450
  6022  002EC8                     u8451:
  6023  002EC8  EF87  F017         	goto	l8340
  6024  002ECC                     u8450:
  6025  002ECC                     
  6026                           ;RS232.c: 319:         char ConfName[20] = "Revision";
  6027  002ECC  EE22  F000         	lfsr	2,ValidateCmd@F10797
  6028  002ED0  EE11  F0BB         	lfsr	1,ValidateCmd@ConfName_1579
  6029  002ED4  0E13               	movlw	19
  6030  002ED6                     u8461:
  6031  002ED6  CFDB FFE3          	movff	plusw2,plusw1
  6032  002EDA  06E8               	decf	wreg,f,c
  6033  002EDC  E2FC               	bc	u8461
  6034  002EDE                     
  6035                           ;RS232.c: 322:         SaveCardDat(ConfName,0x0200,0x0200,MaxChars);
  6036  002EDE  0EBB               	movlw	low ValidateCmd@ConfName_1579
  6037  002EE0  0100               	movlb	0	; () banked
  6038  002EE2  6F93               	movwf	SaveCardDat@Name& (0+255),b
  6039  002EE4  0E01               	movlw	high ValidateCmd@ConfName_1579
  6040  002EE6  6F94               	movwf	(SaveCardDat@Name+1)& (0+255),b
  6041  002EE8  0E02               	movlw	2
  6042  002EEA  6F96               	movwf	(SaveCardDat@MBAddress+1)& (0+255),b
  6043  002EEC  0E00               	movlw	0
  6044  002EEE  6F95               	movwf	SaveCardDat@MBAddress& (0+255),b
  6045  002EF0  0E02               	movlw	2
  6046  002EF2  6F98               	movwf	(SaveCardDat@dataeeAddr+1)& (0+255),b
  6047  002EF4  0E00               	movlw	0
  6048  002EF6  6F97               	movwf	SaveCardDat@dataeeAddr& (0+255),b
  6049  002EF8  0E00               	movlw	0
  6050  002EFA  6F9A               	movwf	(SaveCardDat@NumBytes+1)& (0+255),b
  6051  002EFC  0E02               	movlw	2
  6052  002EFE  6F99               	movwf	SaveCardDat@NumBytes& (0+255),b
  6053  002F00  ECD3  F015         	call	_SaveCardDat	;wreg free
  6054  002F04                     
  6055                           ;RS232.c: 324:         InitialiseString(1);
  6056  002F04  0E01               	movlw	1
  6057  002F06  ECAB  F009         	call	_InitialiseString
  6058  002F0A  EFD0  F016         	goto	l8276
  6059  002F0E                     l8340:
  6060                           
  6061                           ;RS232.c: 328:         return 0;
  6062  002F0E  0E00               	movlw	0
  6063  002F10                     l1017:
  6064  002F10  0012               	return		;funcret
  6065  002F12                     __end_of_ValidateCmd:
  6066                           	opt callstack 0
  6067                           
  6068 ;; *************** function _TogDebug *****************
  6069 ;; Defined at:
  6070 ;;		line 198 in file "RS232.c"
  6071 ;; Parameters:    Size  Location     Type
  6072 ;;		None
  6073 ;; Auto vars:     Size  Location     Type
  6074 ;;		None
  6075 ;; Return value:  Size  Location     Type
  6076 ;;                  1    wreg      void 
  6077 ;; Registers used:
  6078 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6079 ;; Tracked objects:
  6080 ;;		On entry : 0/0
  6081 ;;		On exit  : 0/0
  6082 ;;		Unchanged: 0/0
  6083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6088 ;;Total ram usage:        0 bytes
  6089 ;; Hardware stack levels used:    1
  6090 ;; Hardware stack levels required when called:   13
  6091 ;; This function calls:
  6092 ;;		_printf
  6093 ;; This function is called by:
  6094 ;;		_ValidateCmd
  6095 ;; This function uses a non-reentrant model
  6096 ;;
  6097                           
  6098                           	psect	text2
  6099  004E70                     __ptext2:
  6100                           	opt callstack 0
  6101  004E70                     _TogDebug:
  6102                           	opt callstack 16
  6103  004E70                     
  6104                           ;RS232.c: 200:     if(Debug==0){
  6105  004E70  0100               	movlb	0	; () banked
  6106  004E72  51DF               	movf	_Debug& (0+255),w,b
  6107  004E74  A4D8               	btfss	status,2,c
  6108  004E76  EF3F  F027         	goto	u7781
  6109  004E7A  EF41  F027         	goto	u7780
  6110  004E7E                     u7781:
  6111  004E7E  EF4B  F027         	goto	l7778
  6112  004E82                     u7780:
  6113  004E82                     
  6114                           ; BSR set to: 0
  6115                           ;RS232.c: 201:         Debug =1;
  6116  004E82  0E01               	movlw	1
  6117  004E84  6FDF               	movwf	_Debug& (0+255),b
  6118  004E86                     
  6119                           ; BSR set to: 0
  6120                           ;RS232.c: 202:         printf("Debug Enabled\r\n");
  6121  004E86  0E6A               	movlw	low STR_121
  6122  004E88  6F7D               	movwf	printf@fmt& (0+255),b
  6123  004E8A  0EFF               	movlw	high STR_121
  6124  004E8C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6125  004E8E  ECEB  F027         	call	_printf	;wreg free
  6126                           
  6127                           ;RS232.c: 203:     }else{
  6128  004E92  EF53  F027         	goto	l988
  6129  004E96                     l7778:
  6130                           
  6131                           ; BSR set to: 0
  6132                           ;RS232.c: 204:         Debug =0;
  6133  004E96  0E00               	movlw	0
  6134  004E98  6FDF               	movwf	_Debug& (0+255),b
  6135  004E9A                     
  6136                           ; BSR set to: 0
  6137                           ;RS232.c: 205:         printf("Debug Disabled\r\n");
  6138  004E9A  0E49               	movlw	low STR_122
  6139  004E9C  6F7D               	movwf	printf@fmt& (0+255),b
  6140  004E9E  0EFF               	movlw	high STR_122
  6141  004EA0  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6142  004EA2  ECEB  F027         	call	_printf	;wreg free
  6143  004EA6                     l988:
  6144  004EA6  0012               	return		;funcret
  6145  004EA8                     __end_of_TogDebug:
  6146                           	opt callstack 0
  6147                           
  6148 ;; *************** function _SaveCardDat *****************
  6149 ;; Defined at:
  6150 ;;		line 223 in file "RS232.c"
  6151 ;; Parameters:    Size  Location     Type
  6152 ;;  Name            2   51[BANK0 ] PTR unsigned char 
  6153 ;;		 -> ValidateCmd@ConfName_1579(20), ValidateCmd@ConfName_1575(20), ValidateCmd@ConfName(20), 
  6154 ;;  MBAddress       2   53[BANK0 ] unsigned int 
  6155 ;;  dataeeAddr      2   55[BANK0 ] unsigned short 
  6156 ;;  NumBytes        2   57[BANK0 ] int 
  6157 ;; Auto vars:     Size  Location     Type
  6158 ;;  i               2   65[BANK0 ] int 
  6159 ;;  dataeeAddrWr    2   63[BANK0 ] unsigned short 
  6160 ;;  Conf            1   67[BANK0 ] unsigned char 
  6161 ;;  readData        1    0        unsigned char 
  6162 ;; Return value:  Size  Location     Type
  6163 ;;                  1    wreg      void 
  6164 ;; Registers used:
  6165 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6166 ;; Tracked objects:
  6167 ;;		On entry : 0/0
  6168 ;;		On exit  : 0/0
  6169 ;;		Unchanged: 0/0
  6170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6171 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6172 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6173 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6174 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6175 ;;Total ram usage:       17 bytes
  6176 ;; Hardware stack levels used:    1
  6177 ;; Hardware stack levels required when called:   14
  6178 ;; This function calls:
  6179 ;;		_ClearEEAddRange
  6180 ;;		_DATAEE_WriteByte
  6181 ;;		_EUSART2_Read
  6182 ;;		_EUSART2_is_rx_ready
  6183 ;;		_ReadRX232
  6184 ;;		_printf
  6185 ;;		_strcpy
  6186 ;;		_strlen
  6187 ;; This function is called by:
  6188 ;;		_ValidateCmd
  6189 ;; This function uses a non-reentrant model
  6190 ;;
  6191                           
  6192                           	psect	text3
  6193  002BA6                     __ptext3:
  6194                           	opt callstack 0
  6195  002BA6                     _SaveCardDat:
  6196                           	opt callstack 15
  6197  002BA6                     
  6198                           ;RS232.c: 226:     unsigned char Conf, readData;;RS232.c: 227:     uint16_t dataeeAddrWr
      +                          k = dataeeAddr;
  6199  002BA6  C097  F09F         	movff	SaveCardDat@dataeeAddr,SaveCardDat@dataeeAddrWrk
  6200  002BAA  C098  F0A0         	movff	SaveCardDat@dataeeAddr+1,SaveCardDat@dataeeAddrWrk+1
  6201  002BAE                     
  6202                           ;RS232.c: 229:     printf("\r\nEnter card %s (max %i characters): ", Name, NumBytes);
  6203  002BAE  0EA1               	movlw	low STR_124
  6204  002BB0  0100               	movlb	0	; () banked
  6205  002BB2  6F7D               	movwf	printf@fmt& (0+255),b
  6206  002BB4  0EF9               	movlw	high STR_124
  6207  002BB6  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6208  002BB8  C093  F07F         	movff	SaveCardDat@Name,?_printf+2
  6209  002BBC  C094  F080         	movff	SaveCardDat@Name+1,?_printf+3
  6210  002BC0  C099  F081         	movff	SaveCardDat@NumBytes,?_printf+4
  6211  002BC4  C09A  F082         	movff	SaveCardDat@NumBytes+1,?_printf+5
  6212  002BC8  ECEB  F027         	call	_printf	;wreg free
  6213  002BCC                     
  6214                           ;RS232.c: 231:     strcpy(Command, "");
  6215  002BCC  0EED               	movlw	low _Command
  6216  002BCE  6E09               	movwf	strcpy@dest^0,c
  6217  002BD0  0E01               	movlw	high _Command
  6218  002BD2  6E0A               	movwf	(strcpy@dest+1)^0,c
  6219  002BD4  0E68               	movlw	low (STR_117+101)
  6220  002BD6  6E0B               	movwf	strcpy@src^0,c
  6221  002BD8  0EF3               	movlw	high (STR_117+101)
  6222  002BDA  6E0C               	movwf	(strcpy@src+1)^0,c
  6223  002BDC  EC09  F024         	call	_strcpy	;wreg free
  6224  002BE0                     l7790:
  6225  002BE0  C099  F08F         	movff	SaveCardDat@NumBytes,ReadRX232@NumChars
  6226  002BE4  C09A  F090         	movff	SaveCardDat@NumBytes+1,ReadRX232@NumChars+1
  6227  002BE8  ECAB  F01C         	call	_ReadRX232	;wreg free
  6228  002BEC  0100               	movlb	0	; () banked
  6229  002BEE  518F               	movf	?_ReadRX232& (0+255),w,b
  6230  002BF0  1190               	iorwf	(?_ReadRX232+1)& (0+255),w,b
  6231  002BF2  B4D8               	btfsc	status,2,c
  6232  002BF4  EFFE  F015         	goto	u7791
  6233  002BF8  EF00  F016         	goto	u7790
  6234  002BFC                     u7791:
  6235  002BFC  EFF0  F015         	goto	l7790
  6236  002C00                     u7790:
  6237  002C00                     
  6238                           ; BSR set to: 0
  6239                           ;RS232.c: 234:     printf("\r\nEntered: %s \r\n Confirm  Y|N?: ", Command);
  6240  002C00  0EEA               	movlw	low STR_126
  6241  002C02  6F7D               	movwf	printf@fmt& (0+255),b
  6242  002C04  0EFB               	movlw	high STR_126
  6243  002C06  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6244  002C08  0EED               	movlw	low _Command
  6245  002C0A  6F7F               	movwf	(?_printf+2)& (0+255),b
  6246  002C0C  0E01               	movlw	high _Command
  6247  002C0E  6F80               	movwf	(?_printf+3)& (0+255),b
  6248  002C10  ECEB  F027         	call	_printf	;wreg free
  6249  002C14                     l7794:
  6250  002C14  EC44  F028         	call	_EUSART2_is_rx_ready	;wreg free
  6251  002C18  0900               	iorlw	0
  6252  002C1A  B4D8               	btfsc	status,2,c
  6253  002C1C  EF12  F016         	goto	u7801
  6254  002C20  EF14  F016         	goto	u7800
  6255  002C24                     u7801:
  6256  002C24  EF0A  F016         	goto	l7794
  6257  002C28                     u7800:
  6258  002C28                     
  6259                           ;RS232.c: 239:     Conf = EUSART2_Read();
  6260  002C28  ECF3  F024         	call	_EUSART2_Read	;wreg free
  6261  002C2C  0100               	movlb	0	; () banked
  6262  002C2E  6FA3               	movwf	SaveCardDat@Conf& (0+255),b
  6263  002C30                     
  6264                           ; BSR set to: 0
  6265                           ;RS232.c: 242:     if(Conf == 0x79 || Conf == 0x59){
  6266  002C30  0E79               	movlw	121
  6267  002C32  19A3               	xorwf	SaveCardDat@Conf& (0+255),w,b
  6268  002C34  B4D8               	btfsc	status,2,c
  6269  002C36  EF1F  F016         	goto	u7811
  6270  002C3A  EF21  F016         	goto	u7810
  6271  002C3E                     u7811:
  6272  002C3E  EF2A  F016         	goto	l1005
  6273  002C42                     u7810:
  6274  002C42                     
  6275                           ; BSR set to: 0
  6276  002C42  0E59               	movlw	89
  6277  002C44  19A3               	xorwf	SaveCardDat@Conf& (0+255),w,b
  6278  002C46  A4D8               	btfss	status,2,c
  6279  002C48  EF28  F016         	goto	u7821
  6280  002C4C  EF2A  F016         	goto	u7820
  6281  002C50                     u7821:
  6282  002C50  EFA2  F016         	goto	l7826
  6283  002C54                     u7820:
  6284  002C54                     l1005:
  6285  002C54                     
  6286                           ; BSR set to: 0
  6287                           ;RS232.c: 244:         printf("Y\r\nSaving %s\r\n", Name);
  6288  002C54  0E8A               	movlw	low STR_127
  6289  002C56  6F7D               	movwf	printf@fmt& (0+255),b
  6290  002C58  0EFF               	movlw	high STR_127
  6291  002C5A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6292  002C5C  C093  F07F         	movff	SaveCardDat@Name,?_printf+2
  6293  002C60  C094  F080         	movff	SaveCardDat@Name+1,?_printf+3
  6294  002C64  ECEB  F027         	call	_printf	;wreg free
  6295  002C68                     
  6296                           ;RS232.c: 245:         printf("Num Chars: %i \r\n", strlen(Command));
  6297  002C68  0EED               	movlw	low _Command
  6298  002C6A  6E05               	movwf	strlen@s^0,c
  6299  002C6C  0E01               	movlw	high _Command
  6300  002C6E  6E06               	movwf	(strlen@s+1)^0,c
  6301  002C70  EC9C  F025         	call	_strlen	;wreg free
  6302  002C74  C005  F09D         	movff	?_strlen,_SaveCardDat$2883
  6303  002C78  C006  F09E         	movff	?_strlen+1,_SaveCardDat$2883+1
  6304  002C7C                     
  6305                           ;RS232.c: 245:         printf("Num Chars: %i \r\n", strlen(Command));
  6306  002C7C  0E38               	movlw	low STR_128
  6307  002C7E  0100               	movlb	0	; () banked
  6308  002C80  6F7D               	movwf	printf@fmt& (0+255),b
  6309  002C82  0EFF               	movlw	high STR_128
  6310  002C84  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6311  002C86  C09D  F07F         	movff	_SaveCardDat$2883,?_printf+2
  6312  002C8A  C09E  F080         	movff	_SaveCardDat$2883+1,?_printf+3
  6313  002C8E  ECEB  F027         	call	_printf	;wreg free
  6314  002C92                     
  6315                           ;RS232.c: 249:         ClearEEAddRange(dataeeAddr,NumBytes);
  6316  002C92  C097  F08F         	movff	SaveCardDat@dataeeAddr,ClearEEAddRange@StartAdd
  6317  002C96  C098  F090         	movff	SaveCardDat@dataeeAddr+1,ClearEEAddRange@StartAdd+1
  6318  002C9A  C099  F091         	movff	SaveCardDat@NumBytes,ClearEEAddRange@NumBytes
  6319  002C9E  C09A  F092         	movff	SaveCardDat@NumBytes+1,ClearEEAddRange@NumBytes+1
  6320  002CA2  ECC5  F024         	call	_ClearEEAddRange	;wreg free
  6321  002CA6                     
  6322                           ;RS232.c: 252:         for (i = 0; i < strlen(Command); i++){
  6323  002CA6  0E00               	movlw	0
  6324  002CA8  0100               	movlb	0	; () banked
  6325  002CAA  6FA2               	movwf	(SaveCardDat@i+1)& (0+255),b
  6326  002CAC  0E00               	movlw	0
  6327  002CAE  6FA1               	movwf	SaveCardDat@i& (0+255),b
  6328  002CB0  EF7A  F016         	goto	l7820
  6329  002CB4                     l7812:
  6330                           
  6331                           ; BSR set to: 0
  6332                           ;RS232.c: 253:             DATAEE_WriteByte(dataeeAddrWrk, Command[i]);
  6333  002CB4  C09F  F005         	movff	SaveCardDat@dataeeAddrWrk,DATAEE_WriteByte@bAdd
  6334  002CB8  C0A0  F006         	movff	SaveCardDat@dataeeAddrWrk+1,DATAEE_WriteByte@bAdd+1
  6335  002CBC  0EED               	movlw	low _Command
  6336  002CBE  25A1               	addwf	SaveCardDat@i& (0+255),w,b
  6337  002CC0  6ED9               	movwf	fsr2l,c
  6338  002CC2  0E01               	movlw	high _Command
  6339  002CC4  21A2               	addwfc	(SaveCardDat@i+1)& (0+255),w,b
  6340  002CC6  6EDA               	movwf	fsr2h,c
  6341  002CC8  50DF               	movf	indf2,w,c
  6342  002CCA  6E07               	movwf	DATAEE_WriteByte@bData^0,c
  6343  002CCC  EC33  F026         	call	_DATAEE_WriteByte	;wreg free
  6344  002CD0                     
  6345                           ;RS232.c: 254:             dataeeAddrWrk++;
  6346  002CD0  0100               	movlb	0	; () banked
  6347  002CD2  4B9F               	infsnz	SaveCardDat@dataeeAddrWrk& (0+255),f,b
  6348  002CD4  2BA0               	incf	(SaveCardDat@dataeeAddrWrk+1)& (0+255),f,b
  6349  002CD6                     
  6350                           ; BSR set to: 0
  6351                           ;RS232.c: 255:             _delay((unsigned long)((50)*(32000000/4000.0)));
  6352  002CD6  0E03               	movlw	3
  6353  002CD8  0100               	movlb	0	; () banked
  6354  002CDA  6F9C               	movwf	(??_SaveCardDat+1)& (0+255),b
  6355  002CDC  0E08               	movlw	8
  6356  002CDE  6F9B               	movwf	??_SaveCardDat& (0+255),b
  6357  002CE0  0E77               	movlw	119
  6358  002CE2                     u8497:
  6359  002CE2  2EE8               	decfsz	wreg,f,c
  6360  002CE4  D7FE               	bra	u8497
  6361  002CE6  2F9B               	decfsz	??_SaveCardDat& (0+255),f,b
  6362  002CE8  D7FC               	bra	u8497
  6363  002CEA  2F9C               	decfsz	(??_SaveCardDat+1)& (0+255),f,b
  6364  002CEC  D7FA               	bra	u8497
  6365  002CEE                     
  6366                           ;RS232.c: 256:         }
  6367  002CEE  0100               	movlb	0	; () banked
  6368  002CF0  4BA1               	infsnz	SaveCardDat@i& (0+255),f,b
  6369  002CF2  2BA2               	incf	(SaveCardDat@i+1)& (0+255),f,b
  6370  002CF4                     l7820:
  6371                           
  6372                           ; BSR set to: 0
  6373  002CF4  0EED               	movlw	low _Command
  6374  002CF6  6E05               	movwf	strlen@s^0,c
  6375  002CF8  0E01               	movlw	high _Command
  6376  002CFA  6E06               	movwf	(strlen@s+1)^0,c
  6377  002CFC  EC9C  F025         	call	_strlen	;wreg free
  6378  002D00  5005               	movf	?_strlen^0,w,c
  6379  002D02  0100               	movlb	0	; () banked
  6380  002D04  5DA1               	subwf	SaveCardDat@i& (0+255),w,b
  6381  002D06  5006               	movf	(?_strlen+1)^0,w,c
  6382  002D08  59A2               	subwfb	(SaveCardDat@i+1)& (0+255),w,b
  6383  002D0A  A0D8               	btfss	status,0,c
  6384  002D0C  EF8A  F016         	goto	u7831
  6385  002D10  EF8C  F016         	goto	u7830
  6386  002D14                     u7831:
  6387  002D14  EF5A  F016         	goto	l7812
  6388  002D18                     u7830:
  6389  002D18                     
  6390                           ; BSR set to: 0
  6391                           ;RS232.c: 258:         printf("%s Saved. \r\n",Name);
  6392  002D18  0EA8               	movlw	low STR_129
  6393  002D1A  6F7D               	movwf	printf@fmt& (0+255),b
  6394  002D1C  0EFF               	movlw	high STR_129
  6395  002D1E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6396  002D20  C093  F07F         	movff	SaveCardDat@Name,?_printf+2
  6397  002D24  C094  F080         	movff	SaveCardDat@Name+1,?_printf+3
  6398  002D28  ECEB  F027         	call	_printf	;wreg free
  6399  002D2C                     
  6400                           ;RS232.c: 273:         strcpy(Command, "");
  6401  002D2C  0EED               	movlw	low _Command
  6402  002D2E  6E09               	movwf	strcpy@dest^0,c
  6403  002D30  0E01               	movlw	high _Command
  6404  002D32  6E0A               	movwf	(strcpy@dest+1)^0,c
  6405  002D34  0E68               	movlw	low (STR_117+101)
  6406  002D36  6E0B               	movwf	strcpy@src^0,c
  6407  002D38  0EF3               	movlw	high (STR_117+101)
  6408  002D3A  6E0C               	movwf	(strcpy@src+1)^0,c
  6409  002D3C  EC09  F024         	call	_strcpy	;wreg free
  6410                           
  6411                           ;RS232.c: 275:     }else if(Conf == 0x4e || Conf == 0x6e){
  6412  002D40  EFBA  F016         	goto	l1013
  6413  002D44                     l7826:
  6414                           
  6415                           ; BSR set to: 0
  6416  002D44  0E4E               	movlw	78
  6417  002D46  19A3               	xorwf	SaveCardDat@Conf& (0+255),w,b
  6418  002D48  B4D8               	btfsc	status,2,c
  6419  002D4A  EFA9  F016         	goto	u7841
  6420  002D4E  EFAB  F016         	goto	u7840
  6421  002D52                     u7841:
  6422  002D52  EFB4  F016         	goto	l7830
  6423  002D56                     u7840:
  6424  002D56                     
  6425                           ; BSR set to: 0
  6426  002D56  0E6E               	movlw	110
  6427  002D58  19A3               	xorwf	SaveCardDat@Conf& (0+255),w,b
  6428  002D5A  A4D8               	btfss	status,2,c
  6429  002D5C  EFB2  F016         	goto	u7851
  6430  002D60  EFB4  F016         	goto	u7850
  6431  002D64                     u7851:
  6432  002D64  EFBA  F016         	goto	l1013
  6433  002D68                     u7850:
  6434  002D68                     l7830:
  6435                           
  6436                           ; BSR set to: 0
  6437                           ;RS232.c: 276:         printf("Not saved\r\n");
  6438  002D68  0EB5               	movlw	low STR_131
  6439  002D6A  6F7D               	movwf	printf@fmt& (0+255),b
  6440  002D6C  0EFF               	movlw	high STR_131
  6441  002D6E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6442  002D70  ECEB  F027         	call	_printf	;wreg free
  6443  002D74                     l1013:
  6444  002D74  0012               	return		;funcret
  6445  002D76                     __end_of_SaveCardDat:
  6446                           	opt callstack 0
  6447                           
  6448 ;; *************** function _ReadRX232 *****************
  6449 ;; Defined at:
  6450 ;;		line 143 in file "RS232.c"
  6451 ;; Parameters:    Size  Location     Type
  6452 ;;  NumChars        2   47[BANK0 ] int 
  6453 ;; Auto vars:     Size  Location     Type
  6454 ;;  temp            2   84[COMRAM] unsigned char [2]
  6455 ;; Return value:  Size  Location     Type
  6456 ;;                  2   47[BANK0 ] int 
  6457 ;; Registers used:
  6458 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6459 ;; Tracked objects:
  6460 ;;		On entry : 0/0
  6461 ;;		On exit  : 0/0
  6462 ;;		Unchanged: 0/0
  6463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6464 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6465 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6467 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6468 ;;Total ram usage:        4 bytes
  6469 ;; Hardware stack levels used:    1
  6470 ;; Hardware stack levels required when called:   13
  6471 ;; This function calls:
  6472 ;;		_EUSART2_Read
  6473 ;;		_EUSART2_Write
  6474 ;;		_EUSART2_is_rx_ready
  6475 ;;		_memmove
  6476 ;;		_printf
  6477 ;;		_strcat
  6478 ;;		_strlen
  6479 ;; This function is called by:
  6480 ;;		_main
  6481 ;;		_SaveCardDat
  6482 ;; This function uses a non-reentrant model
  6483 ;;
  6484                           
  6485                           	psect	text4
  6486  003956                     __ptext4:
  6487                           	opt callstack 0
  6488  003956                     _ReadRX232:
  6489                           	opt callstack 15
  6490  003956                     
  6491                           ;RS232.c: 143: int ReadRX232(int NumChars);RS232.c: 144: {;RS232.c: 149:     char temp[2
      +                          ] = {'Z','\0'};
  6492  003956  C0F4  F055         	movff	ReadRX232@F10773,ReadRX232@temp
  6493  00395A  C0F5  F056         	movff	ReadRX232@F10773+1,ReadRX232@temp+1
  6494  00395E                     
  6495                           ;RS232.c: 152:     if(EUSART2_is_rx_ready())
  6496  00395E  EC44  F028         	call	_EUSART2_is_rx_ready	;wreg free
  6497  003962  0900               	iorlw	0
  6498  003964  B4D8               	btfsc	status,2,c
  6499  003966  EFB7  F01C         	goto	u7321
  6500  00396A  EFB9  F01C         	goto	u7320
  6501  00396E                     u7321:
  6502  00396E  EF37  F01D         	goto	l7364
  6503  003972                     u7320:
  6504  003972                     l7336:
  6505                           
  6506                           ;RS232.c: 158:              if(EUSART2_is_rx_ready())
  6507  003972  EC44  F028         	call	_EUSART2_is_rx_ready	;wreg free
  6508  003976  0900               	iorlw	0
  6509  003978  B4D8               	btfsc	status,2,c
  6510  00397A  EFC1  F01C         	goto	u7331
  6511  00397E  EFC3  F01C         	goto	u7330
  6512  003982                     u7331:
  6513  003982  EF13  F01D         	goto	l7356
  6514  003986                     u7330:
  6515  003986                     
  6516                           ;RS232.c: 159:              {;RS232.c: 161:                 temp[0]=EUSART2_Read();
  6517  003986  ECF3  F024         	call	_EUSART2_Read	;wreg free
  6518  00398A  6E55               	movwf	ReadRX232@temp^0,c
  6519                           
  6520                           ;RS232.c: 164:                 EUSART2_Write(temp[0]);
  6521  00398C  5055               	movf	ReadRX232@temp^0,w,c
  6522  00398E  EC67  F024         	call	_EUSART2_Write
  6523  003992                     
  6524                           ;RS232.c: 166:                 if(temp[0]!='\r'){
  6525  003992  0E0D               	movlw	13
  6526  003994  1855               	xorwf	ReadRX232@temp^0,w,c
  6527  003996  B4D8               	btfsc	status,2,c
  6528  003998  EFD0  F01C         	goto	u7341
  6529  00399C  EFD2  F01C         	goto	u7340
  6530  0039A0                     u7341:
  6531  0039A0  EFDC  F01C         	goto	l7344
  6532  0039A4                     u7340:
  6533  0039A4                     
  6534                           ;RS232.c: 167:                     strcat(Command, temp);
  6535  0039A4  0EED               	movlw	low _Command
  6536  0039A6  6E13               	movwf	strcat@dest^0,c
  6537  0039A8  0E01               	movlw	high _Command
  6538  0039AA  6E14               	movwf	(strcat@dest+1)^0,c
  6539  0039AC  0E55               	movlw	low ReadRX232@temp
  6540  0039AE  6E15               	movwf	strcat@src^0,c
  6541  0039B0  0E00               	movlw	high ReadRX232@temp
  6542  0039B2  6E16               	movwf	(strcat@src+1)^0,c
  6543  0039B4  ECFF  F027         	call	_strcat	;wreg free
  6544  0039B8                     l7344:
  6545                           
  6546                           ;RS232.c: 170:                 if(strlen(Command)>NumChars)
  6547  0039B8  0EED               	movlw	low _Command
  6548  0039BA  6E05               	movwf	strlen@s^0,c
  6549  0039BC  0E01               	movlw	high _Command
  6550  0039BE  6E06               	movwf	(strlen@s+1)^0,c
  6551  0039C0  EC9C  F025         	call	_strlen	;wreg free
  6552  0039C4  5005               	movf	?_strlen^0,w,c
  6553  0039C6  0100               	movlb	0	; () banked
  6554  0039C8  5D8F               	subwf	ReadRX232@NumChars& (0+255),w,b
  6555  0039CA  5006               	movf	(?_strlen+1)^0,w,c
  6556  0039CC  5990               	subwfb	(ReadRX232@NumChars+1)& (0+255),w,b
  6557  0039CE  B0D8               	btfsc	status,0,c
  6558  0039D0  EFEC  F01C         	goto	u7351
  6559  0039D4  EFEE  F01C         	goto	u7350
  6560  0039D8                     u7351:
  6561  0039D8  EF02  F01D         	goto	l7348
  6562  0039DC                     u7350:
  6563  0039DC                     
  6564                           ; BSR set to: 0
  6565                           ;RS232.c: 171:                 {;RS232.c: 173:                     memmove(Command, Comm
      +                          and+1, strlen(Command));
  6566  0039DC  0EED               	movlw	low _Command
  6567  0039DE  6E09               	movwf	memmove@d1^0,c
  6568  0039E0  0E01               	movlw	high _Command
  6569  0039E2  6E0A               	movwf	(memmove@d1+1)^0,c
  6570  0039E4  0EEE               	movlw	low (_Command+1)
  6571  0039E6  6E0B               	movwf	memmove@s1^0,c
  6572  0039E8  0E01               	movlw	high (_Command+1)
  6573  0039EA  6E0C               	movwf	(memmove@s1+1)^0,c
  6574  0039EC  0EED               	movlw	low _Command
  6575  0039EE  6E05               	movwf	strlen@s^0,c
  6576  0039F0  0E01               	movlw	high _Command
  6577  0039F2  6E06               	movwf	(strlen@s+1)^0,c
  6578  0039F4  EC9C  F025         	call	_strlen	;wreg free
  6579  0039F8  C005  F00D         	movff	?_strlen,memmove@n
  6580  0039FC  C006  F00E         	movff	?_strlen+1,memmove@n+1
  6581  003A00  EC32  F01E         	call	_memmove	;wreg free
  6582  003A04                     l7348:
  6583                           
  6584                           ;RS232.c: 177:                 if(temp[0]=='\r'){
  6585  003A04  0E0D               	movlw	13
  6586  003A06  1855               	xorwf	ReadRX232@temp^0,w,c
  6587  003A08  A4D8               	btfss	status,2,c
  6588  003A0A  EF09  F01D         	goto	u7361
  6589  003A0E  EF0B  F01D         	goto	u7360
  6590  003A12                     u7361:
  6591  003A12  EF13  F01D         	goto	l7356
  6592  003A16                     u7360:
  6593  003A16                     
  6594                           ;RS232.c: 179:                     temp[0]='z';
  6595  003A16  0E7A               	movlw	122
  6596  003A18  6E55               	movwf	ReadRX232@temp^0,c
  6597  003A1A                     
  6598                           ;RS232.c: 180:                     return NumChars;
  6599  003A1A  C08F  F08F         	movff	ReadRX232@NumChars,?_ReadRX232
  6600  003A1E  C090  F090         	movff	ReadRX232@NumChars+1,?_ReadRX232+1
  6601  003A22  EF3C  F01D         	goto	l982
  6602  003A26                     l7356:
  6603                           
  6604                           ;RS232.c: 183:         }while( temp[0] !='\r' );
  6605  003A26  0E0D               	movlw	13
  6606  003A28  1855               	xorwf	ReadRX232@temp^0,w,c
  6607  003A2A  A4D8               	btfss	status,2,c
  6608  003A2C  EF1A  F01D         	goto	u7371
  6609  003A30  EF1C  F01D         	goto	u7370
  6610  003A34                     u7371:
  6611  003A34  EFB9  F01C         	goto	l7336
  6612  003A38                     u7370:
  6613  003A38                     
  6614                           ;RS232.c: 185:         Command[strlen(Command)-1] = '\0';
  6615  003A38  0EED               	movlw	low _Command
  6616  003A3A  6E05               	movwf	strlen@s^0,c
  6617  003A3C  0E01               	movlw	high _Command
  6618  003A3E  6E06               	movwf	(strlen@s+1)^0,c
  6619  003A40  EC9C  F025         	call	_strlen	;wreg free
  6620  003A44  0EEC               	movlw	low (_Command+65535)
  6621  003A46  2405               	addwf	?_strlen^0,w,c
  6622  003A48  6ED9               	movwf	fsr2l,c
  6623  003A4A  0E01               	movlw	high (_Command+65535)
  6624  003A4C  2006               	addwfc	(?_strlen+1)^0,w,c
  6625  003A4E  6EDA               	movwf	fsr2h,c
  6626  003A50  0E00               	movlw	0
  6627  003A52  6EDF               	movwf	indf2,c
  6628  003A54                     
  6629                           ;RS232.c: 187:         printf("\r\n\n");
  6630  003A54  0E65               	movlw	low (STR_117+98)
  6631  003A56  0100               	movlb	0	; () banked
  6632  003A58  6F7D               	movwf	printf@fmt& (0+255),b
  6633  003A5A  0EF3               	movlw	high (STR_117+98)
  6634  003A5C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6635  003A5E  ECEB  F027         	call	_printf	;wreg free
  6636  003A62                     
  6637                           ;RS232.c: 189:         strlen(Command);
  6638  003A62  0EED               	movlw	low _Command
  6639  003A64  6E05               	movwf	strlen@s^0,c
  6640  003A66  0E01               	movlw	high _Command
  6641  003A68  6E06               	movwf	(strlen@s+1)^0,c
  6642  003A6A  EC9C  F025         	call	_strlen	;wreg free
  6643  003A6E                     l7364:
  6644                           
  6645                           ;RS232.c: 192:     return 0;
  6646  003A6E  0E00               	movlw	0
  6647  003A70  0100               	movlb	0	; () banked
  6648  003A72  6F90               	movwf	(?_ReadRX232+1)& (0+255),b
  6649  003A74  0E00               	movlw	0
  6650  003A76  6F8F               	movwf	?_ReadRX232& (0+255),b
  6651  003A78                     l982:
  6652  003A78  0012               	return		;funcret
  6653  003A7A                     __end_of_ReadRX232:
  6654                           	opt callstack 0
  6655                           
  6656 ;; *************** function _strcat *****************
  6657 ;; Defined at:
  6658 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcat.c"
  6659 ;; Parameters:    Size  Location     Type
  6660 ;;  dest            2   18[COMRAM] PTR unsigned char 
  6661 ;;		 -> Command(16), 
  6662 ;;  src             2   20[COMRAM] PTR const unsigned char 
  6663 ;;		 -> ReadRX232@temp(2), 
  6664 ;; Auto vars:     Size  Location     Type
  6665 ;;		None
  6666 ;; Return value:  Size  Location     Type
  6667 ;;                  2   18[COMRAM] PTR unsigned char 
  6668 ;; Registers used:
  6669 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6670 ;; Tracked objects:
  6671 ;;		On entry : 0/0
  6672 ;;		On exit  : 0/0
  6673 ;;		Unchanged: 0/0
  6674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6675 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6678 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6679 ;;Total ram usage:        4 bytes
  6680 ;; Hardware stack levels used:    1
  6681 ;; Hardware stack levels required when called:    5
  6682 ;; This function calls:
  6683 ;;		_strcpy
  6684 ;;		_strlen
  6685 ;; This function is called by:
  6686 ;;		_ReadRX232
  6687 ;; This function uses a non-reentrant model
  6688 ;;
  6689                           
  6690                           	psect	text5
  6691  004FFE                     __ptext5:
  6692                           	opt callstack 0
  6693  004FFE                     _strcat:
  6694                           	opt callstack 22
  6695  004FFE  C013  F005         	movff	strcat@dest,strlen@s
  6696  005002  C014  F006         	movff	strcat@dest+1,strlen@s+1
  6697  005006  EC9C  F025         	call	_strlen	;wreg free
  6698  00500A  5005               	movf	?_strlen^0,w,c
  6699  00500C  2413               	addwf	strcat@dest^0,w,c
  6700  00500E  6E09               	movwf	strcpy@dest^0,c
  6701  005010  5006               	movf	(?_strlen+1)^0,w,c
  6702  005012  2014               	addwfc	(strcat@dest+1)^0,w,c
  6703  005014  6E0A               	movwf	(strcpy@dest+1)^0,c
  6704  005016  C015  F00B         	movff	strcat@src,strcpy@src
  6705  00501A  C016  F00C         	movff	strcat@src+1,strcpy@src+1
  6706  00501E  EC09  F024         	call	_strcpy	;wreg free
  6707  005022  0012               	return		;funcret
  6708  005024                     __end_of_strcat:
  6709                           	opt callstack 0
  6710                           
  6711 ;; *************** function _strcpy *****************
  6712 ;; Defined at:
  6713 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  6714 ;; Parameters:    Size  Location     Type
  6715 ;;  dest            2    8[COMRAM] PTR unsigned char 
  6716 ;;		 -> Command(16), 
  6717 ;;  src             2   10[COMRAM] PTR const unsigned char 
  6718 ;;		 -> STR_130(1), STR_125(1), ReadRX232@temp(2), STR_7(1), 
  6719 ;; Auto vars:     Size  Location     Type
  6720 ;;  d               2   16[COMRAM] PTR unsigned char 
  6721 ;;		 -> Command(16), 
  6722 ;;  s               2   14[COMRAM] PTR const unsigned char 
  6723 ;;		 -> STR_130(1), STR_125(1), ReadRX232@temp(2), STR_7(1), 
  6724 ;; Return value:  Size  Location     Type
  6725 ;;                  2    8[COMRAM] PTR unsigned char 
  6726 ;; Registers used:
  6727 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6728 ;; Tracked objects:
  6729 ;;		On entry : 0/0
  6730 ;;		On exit  : 0/0
  6731 ;;		Unchanged: 0/0
  6732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6733 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6734 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6735 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6736 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6737 ;;Total ram usage:       10 bytes
  6738 ;; Hardware stack levels used:    1
  6739 ;; Hardware stack levels required when called:    4
  6740 ;; This function calls:
  6741 ;;		Nothing
  6742 ;; This function is called by:
  6743 ;;		_main
  6744 ;;		_SaveCardDat
  6745 ;;		_strcat
  6746 ;; This function uses a non-reentrant model
  6747 ;;
  6748                           
  6749                           	psect	text6
  6750  004812                     __ptext6:
  6751                           	opt callstack 0
  6752  004812                     _strcpy:
  6753                           	opt callstack 26
  6754  004812  C00B  F00F         	movff	strcpy@src,strcpy@s
  6755  004816  C00C  F010         	movff	strcpy@src+1,strcpy@s+1
  6756  00481A  C009  F011         	movff	strcpy@dest,strcpy@d
  6757  00481E  C00A  F012         	movff	strcpy@dest+1,strcpy@d+1
  6758  004822                     l7172:
  6759  004822  500F               	movf	strcpy@s^0,w,c
  6760  004824  6E0D               	movwf	??_strcpy^0,c
  6761  004826  5010               	movf	(strcpy@s+1)^0,w,c
  6762  004828  6E0E               	movwf	(??_strcpy+1)^0,c
  6763  00482A  4A0F               	infsnz	strcpy@s^0,f,c
  6764  00482C  2A10               	incf	(strcpy@s+1)^0,f,c
  6765  00482E  C00D  FFF6         	movff	??_strcpy,tblptrl
  6766  004832  C00E  FFF7         	movff	??_strcpy+1,tblptrh
  6767  004836  0E00               	movlw	low (__mediumconst shr (0+16))
  6768  004838  6EF8               	movwf	tblptru,c
  6769  00483A  C011  FFD9         	movff	strcpy@d,fsr2l
  6770  00483E  C012  FFDA         	movff	strcpy@d+1,fsr2h
  6771  004842  4A11               	infsnz	strcpy@d^0,f,c
  6772  004844  2A12               	incf	(strcpy@d+1)^0,f,c
  6773  004846  0E0E               	movlw	(high __ramtop+-1)
  6774  004848  64F7               	cpfsgt	tblptrh,c
  6775  00484A  D003               	bra	u7087
  6776  00484C  0008               	tblrd		*
  6777  00484E  50F5               	movf	tablat,w,c
  6778  004850  D005               	bra	u7080
  6779  004852                     u7087:
  6780  004852  CFF6 FFE9          	movff	tblptrl,fsr0l
  6781  004856  CFF7 FFEA          	movff	tblptrh,fsr0h
  6782  00485A  50EF               	movf	indf0,w,c
  6783  00485C                     u7080:
  6784  00485C  6EDF               	movwf	indf2,c
  6785  00485E  50DF               	movf	indf2,w,c
  6786  004860  A4D8               	btfss	status,2,c
  6787  004862  EF35  F024         	goto	u7091
  6788  004866  EF37  F024         	goto	u7090
  6789  00486A                     u7091:
  6790  00486A  EF11  F024         	goto	l7172
  6791  00486E                     u7090:
  6792  00486E  0012               	return		;funcret
  6793  004870                     __end_of_strcpy:
  6794                           	opt callstack 0
  6795                           
  6796 ;; *************** function _memmove *****************
  6797 ;; Defined at:
  6798 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\memmove.c"
  6799 ;; Parameters:    Size  Location     Type
  6800 ;;  d1              2    8[COMRAM] PTR void 
  6801 ;;		 -> Command(16), 
  6802 ;;  s1              2   10[COMRAM] PTR const void 
  6803 ;;		 -> Command(16), 
  6804 ;;  n               2   12[COMRAM] unsigned int 
  6805 ;; Auto vars:     Size  Location     Type
  6806 ;;  s               2   18[COMRAM] PTR const unsigned char 
  6807 ;;		 -> Command(16), 
  6808 ;;  d               2   16[COMRAM] PTR unsigned char 
  6809 ;;		 -> Command(16), 
  6810 ;; Return value:  Size  Location     Type
  6811 ;;                  2    8[COMRAM] PTR void 
  6812 ;; Registers used:
  6813 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6814 ;; Tracked objects:
  6815 ;;		On entry : 0/0
  6816 ;;		On exit  : 0/0
  6817 ;;		Unchanged: 0/0
  6818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6819 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6820 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6821 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6822 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6823 ;;Total ram usage:       12 bytes
  6824 ;; Hardware stack levels used:    1
  6825 ;; Hardware stack levels required when called:    4
  6826 ;; This function calls:
  6827 ;;		Nothing
  6828 ;; This function is called by:
  6829 ;;		_ReadRX232
  6830 ;; This function uses a non-reentrant model
  6831 ;;
  6832                           
  6833                           	psect	text7
  6834  003C64                     __ptext7:
  6835                           	opt callstack 0
  6836  003C64                     _memmove:
  6837                           	opt callstack 23
  6838  003C64  C00B  F013         	movff	memmove@s1,memmove@s
  6839  003C68  C00C  F014         	movff	memmove@s1+1,memmove@s+1
  6840  003C6C  C009  F011         	movff	memmove@d1,memmove@d
  6841  003C70  C00A  F012         	movff	memmove@d1+1,memmove@d+1
  6842  003C74  5011               	movf	memmove@d^0,w,c
  6843  003C76  5C13               	subwf	memmove@s^0,w,c
  6844  003C78  5012               	movf	(memmove@d+1)^0,w,c
  6845  003C7A  5814               	subwfb	(memmove@s+1)^0,w,c
  6846  003C7C  B0D8               	btfsc	status,0,c
  6847  003C7E  EF43  F01E         	goto	u7271
  6848  003C82  EF45  F01E         	goto	u7270
  6849  003C86                     u7271:
  6850  003C86  EF7C  F01E         	goto	l7302
  6851  003C8A                     u7270:
  6852  003C8A  500D               	movf	memmove@n^0,w,c
  6853  003C8C  2413               	addwf	memmove@s^0,w,c
  6854  003C8E  6E0F               	movwf	??_memmove^0,c
  6855  003C90  500E               	movf	(memmove@n+1)^0,w,c
  6856  003C92  2014               	addwfc	(memmove@s+1)^0,w,c
  6857  003C94  6E10               	movwf	(??_memmove+1)^0,c
  6858  003C96  500F               	movf	??_memmove^0,w,c
  6859  003C98  5C11               	subwf	memmove@d^0,w,c
  6860  003C9A  5010               	movf	(??_memmove+1)^0,w,c
  6861  003C9C  5812               	subwfb	(memmove@d+1)^0,w,c
  6862  003C9E  B0D8               	btfsc	status,0,c
  6863  003CA0  EF54  F01E         	goto	u7281
  6864  003CA4  EF56  F01E         	goto	u7280
  6865  003CA8                     u7281:
  6866  003CA8  EF7C  F01E         	goto	l7302
  6867  003CAC                     u7280:
  6868  003CAC  500D               	movf	memmove@n^0,w,c
  6869  003CAE  2613               	addwf	memmove@s^0,f,c
  6870  003CB0  500E               	movf	(memmove@n+1)^0,w,c
  6871  003CB2  2214               	addwfc	(memmove@s+1)^0,f,c
  6872  003CB4  500D               	movf	memmove@n^0,w,c
  6873  003CB6  2611               	addwf	memmove@d^0,f,c
  6874  003CB8  500E               	movf	(memmove@n+1)^0,w,c
  6875  003CBA  2212               	addwfc	(memmove@d+1)^0,f,c
  6876  003CBC                     l7298:
  6877  003CBC  0613               	decf	memmove@s^0,f,c
  6878  003CBE  A0D8               	btfss	status,0,c
  6879  003CC0  0614               	decf	(memmove@s+1)^0,f,c
  6880  003CC2  C013  FFD9         	movff	memmove@s,fsr2l
  6881  003CC6  C014  FFDA         	movff	memmove@s+1,fsr2h
  6882  003CCA  0611               	decf	memmove@d^0,f,c
  6883  003CCC  A0D8               	btfss	status,0,c
  6884  003CCE  0612               	decf	(memmove@d+1)^0,f,c
  6885  003CD0  C011  FFE1         	movff	memmove@d,fsr1l
  6886  003CD4  C012  FFE2         	movff	memmove@d+1,fsr1h
  6887  003CD8  CFDF FFE7          	movff	indf2,indf1
  6888  003CDC  060D               	decf	memmove@n^0,f,c
  6889  003CDE  A0D8               	btfss	status,0,c
  6890  003CE0  060E               	decf	(memmove@n+1)^0,f,c
  6891  003CE2  500D               	movf	memmove@n^0,w,c
  6892  003CE4  100E               	iorwf	(memmove@n+1)^0,w,c
  6893  003CE6  A4D8               	btfss	status,2,c
  6894  003CE8  EF78  F01E         	goto	u7291
  6895  003CEC  EF7A  F01E         	goto	u7290
  6896  003CF0                     u7291:
  6897  003CF0  EF5E  F01E         	goto	l7298
  6898  003CF4                     u7290:
  6899  003CF4  EF9F  F01E         	goto	l2111
  6900  003CF8                     l7302:
  6901  003CF8  500D               	movf	memmove@n^0,w,c
  6902  003CFA  100E               	iorwf	(memmove@n+1)^0,w,c
  6903  003CFC  B4D8               	btfsc	status,2,c
  6904  003CFE  EF83  F01E         	goto	u7301
  6905  003D02  EF85  F01E         	goto	u7300
  6906  003D06                     u7301:
  6907  003D06  EF9F  F01E         	goto	l2111
  6908  003D0A                     u7300:
  6909  003D0A                     l7304:
  6910  003D0A  C013  FFD9         	movff	memmove@s,fsr2l
  6911  003D0E  C014  FFDA         	movff	memmove@s+1,fsr2h
  6912  003D12  C011  FFE1         	movff	memmove@d,fsr1l
  6913  003D16  C012  FFE2         	movff	memmove@d+1,fsr1h
  6914  003D1A  CFDF FFE7          	movff	indf2,indf1
  6915  003D1E  4A13               	infsnz	memmove@s^0,f,c
  6916  003D20  2A14               	incf	(memmove@s+1)^0,f,c
  6917  003D22  4A11               	infsnz	memmove@d^0,f,c
  6918  003D24  2A12               	incf	(memmove@d+1)^0,f,c
  6919  003D26  060D               	decf	memmove@n^0,f,c
  6920  003D28  A0D8               	btfss	status,0,c
  6921  003D2A  060E               	decf	(memmove@n+1)^0,f,c
  6922  003D2C  500D               	movf	memmove@n^0,w,c
  6923  003D2E  100E               	iorwf	(memmove@n+1)^0,w,c
  6924  003D30  A4D8               	btfss	status,2,c
  6925  003D32  EF9D  F01E         	goto	u7311
  6926  003D36  EF9F  F01E         	goto	u7310
  6927  003D3A                     u7311:
  6928  003D3A  EF85  F01E         	goto	l7304
  6929  003D3E                     u7310:
  6930  003D3E                     l2111:
  6931  003D3E  0012               	return		;funcret
  6932  003D40                     __end_of_memmove:
  6933                           	opt callstack 0
  6934                           
  6935 ;; *************** function _EUSART2_is_rx_ready *****************
  6936 ;; Defined at:
  6937 ;;		line 139 in file "mcc_generated_files/eusart2.c"
  6938 ;; Parameters:    Size  Location     Type
  6939 ;;		None
  6940 ;; Auto vars:     Size  Location     Type
  6941 ;;		None
  6942 ;; Return value:  Size  Location     Type
  6943 ;;                  1    wreg      _Bool 
  6944 ;; Registers used:
  6945 ;;		wreg, status,2
  6946 ;; Tracked objects:
  6947 ;;		On entry : 0/0
  6948 ;;		On exit  : 0/0
  6949 ;;		Unchanged: 0/0
  6950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6955 ;;Total ram usage:        0 bytes
  6956 ;; Hardware stack levels used:    1
  6957 ;; Hardware stack levels required when called:    4
  6958 ;; This function calls:
  6959 ;;		Nothing
  6960 ;; This function is called by:
  6961 ;;		_ReadRX232
  6962 ;;		_SaveCardDat
  6963 ;; This function uses a non-reentrant model
  6964 ;;
  6965                           
  6966                           	psect	text8
  6967  005088                     __ptext8:
  6968                           	opt callstack 0
  6969  005088                     _EUSART2_is_rx_ready:
  6970                           	opt callstack 23
  6971  005088                     
  6972                           ;mcc_generated_files/eusart2.c: 141:     return (eusart2RxCount ? 1 : 0);
  6973  005088  0100               	movlb	0	; () banked
  6974  00508A  51E6               	movf	_eusart2RxCount& (0+255),w,b	;volatile
  6975  00508C  A4D8               	btfss	status,2,c
  6976  00508E  EF4B  F028         	goto	u7131
  6977  005092  EF4E  F028         	goto	u7130
  6978  005096                     u7131:
  6979  005096  0E01               	movlw	1
  6980  005098  EF4F  F028         	goto	u7140
  6981  00509C                     u7130:
  6982  00509C  0E00               	movlw	0
  6983  00509E                     u7140:
  6984  00509E                     
  6985                           ; BSR set to: 0
  6986  00509E  0012               	return		;funcret
  6987  0050A0                     __end_of_EUSART2_is_rx_ready:
  6988                           	opt callstack 0
  6989                           
  6990 ;; *************** function _EUSART2_Read *****************
  6991 ;; Defined at:
  6992 ;;		line 153 in file "mcc_generated_files/eusart2.c"
  6993 ;; Parameters:    Size  Location     Type
  6994 ;;		None
  6995 ;; Auto vars:     Size  Location     Type
  6996 ;;  readValue       1    4[COMRAM] unsigned char 
  6997 ;; Return value:  Size  Location     Type
  6998 ;;                  1    wreg      unsigned char 
  6999 ;; Registers used:
  7000 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7001 ;; Tracked objects:
  7002 ;;		On entry : 0/0
  7003 ;;		On exit  : 0/0
  7004 ;;		Unchanged: 0/0
  7005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7007 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7009 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7010 ;;Total ram usage:        1 bytes
  7011 ;; Hardware stack levels used:    1
  7012 ;; Hardware stack levels required when called:    4
  7013 ;; This function calls:
  7014 ;;		Nothing
  7015 ;; This function is called by:
  7016 ;;		_ReadRX232
  7017 ;;		_SaveCardDat
  7018 ;;		_getch
  7019 ;; This function uses a non-reentrant model
  7020 ;;
  7021                           
  7022                           	psect	text9
  7023  0049E6                     __ptext9:
  7024                           	opt callstack 0
  7025  0049E6                     _EUSART2_Read:
  7026                           	opt callstack 23
  7027  0049E6                     l7224:
  7028                           
  7029                           ;mcc_generated_files/eusart2.c: 157:     while(0 == eusart2RxCount)
  7030  0049E6  0100               	movlb	0	; () banked
  7031  0049E8  51E6               	movf	_eusart2RxCount& (0+255),w,b	;volatile
  7032  0049EA  B4D8               	btfsc	status,2,c
  7033  0049EC  EFFA  F024         	goto	u7151
  7034  0049F0  EFFC  F024         	goto	u7150
  7035  0049F4                     u7151:
  7036  0049F4  EFF3  F024         	goto	l7224
  7037  0049F8                     u7150:
  7038  0049F8                     
  7039                           ; BSR set to: 0
  7040                           ;mcc_generated_files/eusart2.c: 161:     eusart2RxLastError = eusart2RxStatusBuffer[eusa
      +                          rt2RxTail];
  7041  0049F8  0EA2               	movlw	low _eusart2RxStatusBuffer
  7042  0049FA  25E7               	addwf	_eusart2RxTail& (0+255),w,b	;volatile
  7043  0049FC  6ED9               	movwf	fsr2l,c
  7044  0049FE  6ADA               	clrf	fsr2h,c
  7045  004A00  0E02               	movlw	high _eusart2RxStatusBuffer
  7046  004A02  22DA               	addwfc	fsr2h,f,c
  7047  004A04  50DF               	movf	indf2,w,c
  7048  004A06  6FE5               	movwf	_eusart2RxLastError& (0+255),b	;volatile
  7049                           
  7050                           ;mcc_generated_files/eusart2.c: 163:     readValue = eusart2RxBuffer[eusart2RxTail++];
  7051  004A08  0E64               	movlw	low _eusart2RxBuffer
  7052  004A0A  25E7               	addwf	_eusart2RxTail& (0+255),w,b	;volatile
  7053  004A0C  6ED9               	movwf	fsr2l,c
  7054  004A0E  6ADA               	clrf	fsr2h,c
  7055  004A10  0E03               	movlw	high _eusart2RxBuffer
  7056  004A12  22DA               	addwfc	fsr2h,f,c
  7057  004A14  50DF               	movf	indf2,w,c
  7058  004A16  6E05               	movwf	EUSART2_Read@readValue^0,c
  7059  004A18                     
  7060                           ; BSR set to: 0
  7061  004A18  2BE7               	incf	_eusart2RxTail& (0+255),f,b	;volatile
  7062  004A1A                     
  7063                           ; BSR set to: 0
  7064                           ;mcc_generated_files/eusart2.c: 164:     if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
  7065  004A1A  0E1F               	movlw	31
  7066  004A1C  65E7               	cpfsgt	_eusart2RxTail& (0+255),b	;volatile
  7067  004A1E  EF13  F025         	goto	u7161
  7068  004A22  EF15  F025         	goto	u7160
  7069  004A26                     u7161:
  7070  004A26  EF17  F025         	goto	l7234
  7071  004A2A                     u7160:
  7072  004A2A                     
  7073                           ; BSR set to: 0
  7074                           ;mcc_generated_files/eusart2.c: 165:     {;mcc_generated_files/eusart2.c: 166:         e
      +                          usart2RxTail = 0;
  7075  004A2A  0E00               	movlw	0
  7076  004A2C  6FE7               	movwf	_eusart2RxTail& (0+255),b	;volatile
  7077  004A2E                     l7234:
  7078                           
  7079                           ; BSR set to: 0
  7080                           ;mcc_generated_files/eusart2.c: 168:     PIE3bits.RC2IE = 0;
  7081  004A2E  010E               	movlb	14	; () banked
  7082  004A30  9FC5               	bcf	197,7,b	;volatile
  7083  004A32                     
  7084                           ; BSR set to: 14
  7085                           ;mcc_generated_files/eusart2.c: 169:     eusart2RxCount--;
  7086  004A32  0100               	movlb	0	; () banked
  7087  004A34  07E6               	decf	_eusart2RxCount& (0+255),f,b	;volatile
  7088  004A36                     
  7089                           ; BSR set to: 0
  7090                           ;mcc_generated_files/eusart2.c: 170:     PIE3bits.RC2IE = 1;
  7091  004A36  010E               	movlb	14	; () banked
  7092  004A38  8FC5               	bsf	197,7,b	;volatile
  7093  004A3A                     
  7094                           ; BSR set to: 14
  7095                           ;mcc_generated_files/eusart2.c: 172:     return readValue;
  7096  004A3A  5005               	movf	EUSART2_Read@readValue^0,w,c
  7097  004A3C                     
  7098                           ; BSR set to: 14
  7099  004A3C  0012               	return		;funcret
  7100  004A3E                     __end_of_EUSART2_Read:
  7101                           	opt callstack 0
  7102                           
  7103 ;; *************** function _ClearEEAddRange *****************
  7104 ;; Defined at:
  7105 ;;		line 211 in file "RS232.c"
  7106 ;; Parameters:    Size  Location     Type
  7107 ;;  StartAdd        2   47[BANK0 ] unsigned int 
  7108 ;;  NumBytes        2   49[BANK0 ] unsigned int 
  7109 ;; Auto vars:     Size  Location     Type
  7110 ;;  i               2   84[COMRAM] int 
  7111 ;; Return value:  Size  Location     Type
  7112 ;;                  1    wreg      void 
  7113 ;; Registers used:
  7114 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7115 ;; Tracked objects:
  7116 ;;		On entry : 0/0
  7117 ;;		On exit  : 0/0
  7118 ;;		Unchanged: 0/0
  7119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7120 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7121 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7123 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7124 ;;Total ram usage:        6 bytes
  7125 ;; Hardware stack levels used:    1
  7126 ;; Hardware stack levels required when called:   13
  7127 ;; This function calls:
  7128 ;;		_DATAEE_WriteByte
  7129 ;;		_printf
  7130 ;; This function is called by:
  7131 ;;		_SaveCardDat
  7132 ;; This function uses a non-reentrant model
  7133 ;;
  7134                           
  7135                           	psect	text10
  7136  00498A                     __ptext10:
  7137                           	opt callstack 0
  7138  00498A                     _ClearEEAddRange:
  7139                           	opt callstack 15
  7140  00498A                     
  7141                           ;RS232.c: 214:     printf("Clearing EEPROM from Address: 0x%04x for num bytes: %i \r\n",
      +                           StartAdd, NumBytes);
  7142  00498A  0E56               	movlw	low STR_123
  7143  00498C  0100               	movlb	0	; () banked
  7144  00498E  6F7D               	movwf	printf@fmt& (0+255),b
  7145  004990  0EF5               	movlw	high STR_123
  7146  004992  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7147  004994  C08F  F07F         	movff	ClearEEAddRange@StartAdd,?_printf+2
  7148  004998  C090  F080         	movff	ClearEEAddRange@StartAdd+1,?_printf+3
  7149  00499C  C091  F081         	movff	ClearEEAddRange@NumBytes,?_printf+4
  7150  0049A0  C092  F082         	movff	ClearEEAddRange@NumBytes+1,?_printf+5
  7151  0049A4  ECEB  F027         	call	_printf	;wreg free
  7152  0049A8                     
  7153                           ;RS232.c: 216:     for(int i = 0; i<NumBytes; i++){
  7154  0049A8  0E00               	movlw	0
  7155  0049AA  6E56               	movwf	(ClearEEAddRange@i+1)^0,c
  7156  0049AC  0E00               	movlw	0
  7157  0049AE  6E55               	movwf	ClearEEAddRange@i^0,c
  7158  0049B0  EFE6  F024         	goto	l7478
  7159  0049B4                     l7474:
  7160                           
  7161                           ; BSR set to: 0
  7162                           ;RS232.c: 217:         DATAEE_WriteByte(StartAdd +i, 0xFF);
  7163  0049B4  518F               	movf	ClearEEAddRange@StartAdd& (0+255),w,b
  7164  0049B6  2455               	addwf	ClearEEAddRange@i^0,w,c
  7165  0049B8  6E05               	movwf	DATAEE_WriteByte@bAdd^0,c
  7166  0049BA  5190               	movf	(ClearEEAddRange@StartAdd+1)& (0+255),w,b
  7167  0049BC  2056               	addwfc	(ClearEEAddRange@i+1)^0,w,c
  7168  0049BE  6E06               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
  7169  0049C0  0EFF               	movlw	255
  7170  0049C2  6E07               	movwf	DATAEE_WriteByte@bData^0,c
  7171  0049C4  EC33  F026         	call	_DATAEE_WriteByte	;wreg free
  7172  0049C8                     
  7173                           ;RS232.c: 218:     }
  7174  0049C8  4A55               	infsnz	ClearEEAddRange@i^0,f,c
  7175  0049CA  2A56               	incf	(ClearEEAddRange@i+1)^0,f,c
  7176  0049CC                     l7478:
  7177  0049CC  0100               	movlb	0	; () banked
  7178  0049CE  5191               	movf	ClearEEAddRange@NumBytes& (0+255),w,b
  7179  0049D0  5C55               	subwf	ClearEEAddRange@i^0,w,c
  7180  0049D2  5192               	movf	(ClearEEAddRange@NumBytes+1)& (0+255),w,b
  7181  0049D4  5856               	subwfb	(ClearEEAddRange@i+1)^0,w,c
  7182  0049D6  A0D8               	btfss	status,0,c
  7183  0049D8  EFF0  F024         	goto	u7521
  7184  0049DC  EFF2  F024         	goto	u7520
  7185  0049E0                     u7521:
  7186  0049E0  EFDA  F024         	goto	l7474
  7187  0049E4                     u7520:
  7188  0049E4                     
  7189                           ; BSR set to: 0
  7190  0049E4  0012               	return		;funcret
  7191  0049E6                     __end_of_ClearEEAddRange:
  7192                           	opt callstack 0
  7193                           
  7194 ;; *************** function _DATAEE_WriteByte *****************
  7195 ;; Defined at:
  7196 ;;		line 165 in file "mcc_generated_files/memory.c"
  7197 ;; Parameters:    Size  Location     Type
  7198 ;;  bAdd            2    4[COMRAM] unsigned short 
  7199 ;;  bData           1    6[COMRAM] unsigned char 
  7200 ;; Auto vars:     Size  Location     Type
  7201 ;;  GIEBitValue     1    7[COMRAM] unsigned char 
  7202 ;; Return value:  Size  Location     Type
  7203 ;;                  1    wreg      void 
  7204 ;; Registers used:
  7205 ;;		wreg, status,2, status,0
  7206 ;; Tracked objects:
  7207 ;;		On entry : 0/0
  7208 ;;		On exit  : 0/0
  7209 ;;		Unchanged: 0/0
  7210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7211 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7212 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7214 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7215 ;;Total ram usage:        4 bytes
  7216 ;; Hardware stack levels used:    1
  7217 ;; Hardware stack levels required when called:    4
  7218 ;; This function calls:
  7219 ;;		Nothing
  7220 ;; This function is called by:
  7221 ;;		_ClearEEAddRange
  7222 ;;		_SaveCardDat
  7223 ;; This function uses a non-reentrant model
  7224 ;;
  7225                           
  7226                           	psect	text11
  7227  004C66                     __ptext11:
  7228                           	opt callstack 0
  7229  004C66                     _DATAEE_WriteByte:
  7230                           	opt callstack 24
  7231  004C66                     
  7232                           ;mcc_generated_files/memory.c: 165: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 166: {;mcc_generated_files/memory.c: 167:  uint8_t GIEBitV
      +                          alue = INTCONbits.GIE;
  7233  004C66  0E00               	movlw	0
  7234  004C68  BEF2               	btfsc	242,7,c	;volatile
  7235  004C6A  0E01               	movlw	1
  7236  004C6C  6E08               	movwf	DATAEE_WriteByte@GIEBitValue^0,c
  7237  004C6E                     
  7238                           ;mcc_generated_files/memory.c: 169:     NVMADRH = ((bAdd >> 8) & 0x03);
  7239  004C6E  5006               	movf	(DATAEE_WriteByte@bAdd+1)^0,w,c
  7240  004C70  0B03               	andlw	3
  7241  004C72  6E7F               	movwf	127,c	;volatile
  7242  004C74                     
  7243                           ;mcc_generated_files/memory.c: 170:     NVMADRL = (bAdd & 0xFF);
  7244  004C74  C005  FF7E         	movff	DATAEE_WriteByte@bAdd,3966	;volatile
  7245  004C78                     
  7246                           ;mcc_generated_files/memory.c: 171:     NVMDAT = bData;
  7247  004C78  C007  FF80         	movff	DATAEE_WriteByte@bData,3968	;volatile
  7248  004C7C                     
  7249                           ;mcc_generated_files/memory.c: 172:     NVMCON1bits.NVMREG = 0;
  7250  004C7C  0E3F               	movlw	-193
  7251  004C7E  1681               	andwf	129,f,c	;volsfr
  7252  004C80                     
  7253                           ;mcc_generated_files/memory.c: 173:     NVMCON1bits.WREN = 1;
  7254  004C80  8481               	bsf	129,2,c	;volsfr
  7255  004C82                     
  7256                           ;mcc_generated_files/memory.c: 174:  INTCONbits.GIE = 0;
  7257  004C82  9EF2               	bcf	242,7,c	;volatile
  7258  004C84                     
  7259                           ;mcc_generated_files/memory.c: 175:     NVMCON2 = 0x55;
  7260  004C84  0E55               	movlw	85
  7261  004C86  6E82               	movwf	130,c	;volsfr
  7262  004C88                     
  7263                           ;mcc_generated_files/memory.c: 176:     NVMCON2 = 0xAA;
  7264  004C88  0EAA               	movlw	170
  7265  004C8A  6E82               	movwf	130,c	;volsfr
  7266  004C8C                     
  7267                           ;mcc_generated_files/memory.c: 177:     NVMCON1bits.WR = 1;
  7268  004C8C  8281               	bsf	129,1,c	;volsfr
  7269  004C8E                     l216:
  7270                           
  7271                           ;mcc_generated_files/memory.c: 179:     while (NVMCON1bits.WR)
  7272  004C8E  B281               	btfsc	129,1,c	;volsfr
  7273  004C90  EF4C  F026         	goto	u7111
  7274  004C94  EF4E  F026         	goto	u7110
  7275  004C98                     u7111:
  7276  004C98  EF47  F026         	goto	l216
  7277  004C9C                     u7110:
  7278  004C9C                     
  7279                           ;mcc_generated_files/memory.c: 183:     NVMCON1bits.WREN = 0;
  7280  004C9C  9481               	bcf	129,2,c	;volsfr
  7281                           
  7282                           ;mcc_generated_files/memory.c: 184:  INTCONbits.GIE = GIEBitValue;
  7283  004C9E  B008               	btfsc	DATAEE_WriteByte@GIEBitValue^0,0,c
  7284  004CA0  D002               	bra	u7125
  7285  004CA2  9EF2               	bcf	242,7,c	;volatile
  7286  004CA4  D001               	bra	u7126
  7287  004CA6                     u7125:
  7288  004CA6  8EF2               	bsf	242,7,c	;volatile
  7289  004CA8                     u7126:
  7290  004CA8  0012               	return		;funcret
  7291  004CAA                     __end_of_DATAEE_WriteByte:
  7292                           	opt callstack 0
  7293                           
  7294 ;; *************** function _InitialiseString *****************
  7295 ;; Defined at:
  7296 ;;		line 59 in file "RS232.c"
  7297 ;; Parameters:    Size  Location     Type
  7298 ;;  Partial         1    wreg     _Bool 
  7299 ;; Auto vars:     Size  Location     Type
  7300 ;;  Partial         1   96[BANK0 ] _Bool 
  7301 ;;  convertedVal    2   97[BANK0 ] unsigned short 
  7302 ;;  i               2  107[BANK0 ] int 
  7303 ;;  i               2  105[BANK0 ] int 
  7304 ;;  PartNum        19   47[BANK0 ] unsigned char [19]
  7305 ;;  SerialNum      11   85[BANK0 ] unsigned char [11]
  7306 ;;  Date           11   66[BANK0 ] unsigned char [11]
  7307 ;;  Time            8   77[BANK0 ] unsigned char [8]
  7308 ;;  RevNum          2   99[BANK0 ] unsigned char [2]
  7309 ;;  j               2  103[BANK0 ] int 
  7310 ;;  readDataEven    1  102[BANK0 ] unsigned char 
  7311 ;;  readDataOdd     1  101[BANK0 ] unsigned char 
  7312 ;; Return value:  Size  Location     Type
  7313 ;;                  1    wreg      void 
  7314 ;; Registers used:
  7315 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7316 ;; Tracked objects:
  7317 ;;		On entry : 0/0
  7318 ;;		On exit  : 0/0
  7319 ;;		Unchanged: 0/0
  7320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7322 ;;      Locals:         0      62       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7323 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7324 ;;      Totals:         2      62       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7325 ;;Total ram usage:       64 bytes
  7326 ;; Hardware stack levels used:    1
  7327 ;; Hardware stack levels required when called:   13
  7328 ;; This function calls:
  7329 ;;		_ADCC_GetSingleConversion
  7330 ;;		_CardConfigIni
  7331 ;;		_printf
  7332 ;; This function is called by:
  7333 ;;		_main
  7334 ;;		_ValidateCmd
  7335 ;; This function uses a non-reentrant model
  7336 ;;
  7337                           
  7338                           	psect	text12
  7339  001356                     __ptext12:
  7340                           	opt callstack 0
  7341  001356                     _InitialiseString:
  7342                           	opt callstack 16
  7343                           
  7344                           ;incstack = 0
  7345                           ;InitialiseString@Partial stored from wreg
  7346  001356  0100               	movlb	0	; () banked
  7347  001358  6FC0               	movwf	InitialiseString@Partial& (0+255),b
  7348  00135A                     
  7349                           ;RS232.c: 61:     char readDataOdd, readDataEven;;RS232.c: 63:     char SerialNum[11] = 
      +                          { '\0' };
  7350  00135A  EE20  F0B5         	lfsr	2,InitialiseString@SerialNum
  7351  00135E  0E0A               	movlw	10
  7352  001360                     u7601:
  7353  001360  6ADE               	clrf	postinc2,c
  7354  001362  06E8               	decf	wreg,f,c
  7355  001364  E2FD               	bc	u7601
  7356  001366                     
  7357                           ;RS232.c: 65:     CardConfigIni("Serial", SerialNum,0x0300,5);
  7358  001366  0ED6               	movlw	low STR_81
  7359  001368  6E0A               	movwf	CardConfigIni@Name^0,c
  7360  00136A  0EFF               	movlw	high STR_81
  7361  00136C  6E0B               	movwf	(CardConfigIni@Name+1)^0,c
  7362  00136E  0EB5               	movlw	low InitialiseString@SerialNum
  7363  001370  6E0C               	movwf	CardConfigIni@RetNum^0,c
  7364  001372  0E00               	movlw	high InitialiseString@SerialNum
  7365  001374  6E0D               	movwf	(CardConfigIni@RetNum+1)^0,c
  7366  001376  0E03               	movlw	3
  7367  001378  6E0F               	movwf	(CardConfigIni@dataeeAddrWrk+1)^0,c
  7368  00137A  0E00               	movlw	0
  7369  00137C  6E0E               	movwf	CardConfigIni@dataeeAddrWrk^0,c
  7370  00137E  0E00               	movlw	0
  7371  001380  6E11               	movwf	(CardConfigIni@NumBytes+1)^0,c
  7372  001382  0E05               	movlw	5
  7373  001384  6E10               	movwf	CardConfigIni@NumBytes^0,c
  7374  001386  ECDB  F014         	call	_CardConfigIni	;wreg free
  7375  00138A                     
  7376                           ;RS232.c: 67:     char PartNum[19] = { '\0' };
  7377  00138A  EE20  F08F         	lfsr	2,InitialiseString@PartNum
  7378  00138E  0E12               	movlw	18
  7379  001390                     u7611:
  7380  001390  6ADE               	clrf	postinc2,c
  7381  001392  06E8               	decf	wreg,f,c
  7382  001394  E2FD               	bc	u7611
  7383                           
  7384                           ;RS232.c: 68:     CardConfigIni("Part", PartNum,0x0100,8);
  7385  001396  0EEA               	movlw	low STR_83
  7386  001398  6E0A               	movwf	CardConfigIni@Name^0,c
  7387  00139A  0EFF               	movlw	high STR_83
  7388  00139C  6E0B               	movwf	(CardConfigIni@Name+1)^0,c
  7389  00139E  0E8F               	movlw	low InitialiseString@PartNum
  7390  0013A0  6E0C               	movwf	CardConfigIni@RetNum^0,c
  7391  0013A2  0E00               	movlw	high InitialiseString@PartNum
  7392  0013A4  6E0D               	movwf	(CardConfigIni@RetNum+1)^0,c
  7393  0013A6  0E01               	movlw	1
  7394  0013A8  6E0F               	movwf	(CardConfigIni@dataeeAddrWrk+1)^0,c
  7395  0013AA  0E00               	movlw	0
  7396  0013AC  6E0E               	movwf	CardConfigIni@dataeeAddrWrk^0,c
  7397  0013AE  0E00               	movlw	0
  7398  0013B0  6E11               	movwf	(CardConfigIni@NumBytes+1)^0,c
  7399  0013B2  0E08               	movlw	8
  7400  0013B4  6E10               	movwf	CardConfigIni@NumBytes^0,c
  7401  0013B6  ECDB  F014         	call	_CardConfigIni	;wreg free
  7402  0013BA                     
  7403                           ;RS232.c: 70:     char RevNum[2] = { '\0' };
  7404  0013BA  0E00               	movlw	0
  7405  0013BC  0100               	movlb	0	; () banked
  7406  0013BE  6FC4               	movwf	(InitialiseString@RevNum+1)& (0+255),b
  7407  0013C0  0E00               	movlw	0
  7408  0013C2  6FC3               	movwf	InitialiseString@RevNum& (0+255),b
  7409  0013C4                     
  7410                           ; BSR set to: 0
  7411                           ;RS232.c: 71:     CardConfigIni("Rev", RevNum,0x0200,1);
  7412  0013C4  0EF4               	movlw	low STR_85
  7413  0013C6  6E0A               	movwf	CardConfigIni@Name^0,c
  7414  0013C8  0EFF               	movlw	high STR_85
  7415  0013CA  6E0B               	movwf	(CardConfigIni@Name+1)^0,c
  7416  0013CC  0EC3               	movlw	low InitialiseString@RevNum
  7417  0013CE  6E0C               	movwf	CardConfigIni@RetNum^0,c
  7418  0013D0  0E00               	movlw	high InitialiseString@RevNum
  7419  0013D2  6E0D               	movwf	(CardConfigIni@RetNum+1)^0,c
  7420  0013D4  0E02               	movlw	2
  7421  0013D6  6E0F               	movwf	(CardConfigIni@dataeeAddrWrk+1)^0,c
  7422  0013D8  0E00               	movlw	0
  7423  0013DA  6E0E               	movwf	CardConfigIni@dataeeAddrWrk^0,c
  7424  0013DC  0E00               	movlw	0
  7425  0013DE  6E11               	movwf	(CardConfigIni@NumBytes+1)^0,c
  7426  0013E0  0E01               	movlw	1
  7427  0013E2  6E10               	movwf	CardConfigIni@NumBytes^0,c
  7428  0013E4  ECDB  F014         	call	_CardConfigIni	;wreg free
  7429  0013E8                     
  7430                           ;RS232.c: 75:     printf("\r\nDan and Sam's Modbus GPIO Expansion\r\n");
  7431  0013E8  0E53               	movlw	low STR_90
  7432  0013EA  0100               	movlb	0	; () banked
  7433  0013EC  6F7D               	movwf	printf@fmt& (0+255),b
  7434  0013EE  0EF9               	movlw	high STR_90
  7435  0013F0  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7436  0013F2  ECEB  F027         	call	_printf	;wreg free
  7437  0013F6                     
  7438                           ;RS232.c: 79:     printf("Card Ser No. %s \r\n",SerialNum);
  7439  0013F6  0EFF               	movlw	low STR_91
  7440  0013F8  0100               	movlb	0	; () banked
  7441  0013FA  6F7D               	movwf	printf@fmt& (0+255),b
  7442  0013FC  0EFE               	movlw	high STR_91
  7443  0013FE  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7444  001400  0EB5               	movlw	low InitialiseString@SerialNum
  7445  001402  6F7F               	movwf	(?_printf+2)& (0+255),b
  7446  001404  0E00               	movlw	high InitialiseString@SerialNum
  7447  001406  6F80               	movwf	(?_printf+3)& (0+255),b
  7448  001408  ECEB  F027         	call	_printf	;wreg free
  7449  00140C                     
  7450                           ;RS232.c: 80:     printf("Card Part No. %s \r\n",PartNum);
  7451  00140C  0EEB               	movlw	low STR_92
  7452  00140E  0100               	movlb	0	; () banked
  7453  001410  6F7D               	movwf	printf@fmt& (0+255),b
  7454  001412  0EFE               	movlw	high STR_92
  7455  001414  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7456  001416  0E8F               	movlw	low InitialiseString@PartNum
  7457  001418  6F7F               	movwf	(?_printf+2)& (0+255),b
  7458  00141A  0E00               	movlw	high InitialiseString@PartNum
  7459  00141C  6F80               	movwf	(?_printf+3)& (0+255),b
  7460  00141E  ECEB  F027         	call	_printf	;wreg free
  7461  001422                     
  7462                           ;RS232.c: 81:     printf("Card Revision. %s \r\n",RevNum);
  7463  001422  0E6D               	movlw	low STR_93
  7464  001424  0100               	movlb	0	; () banked
  7465  001426  6F7D               	movwf	printf@fmt& (0+255),b
  7466  001428  0EFE               	movlw	high STR_93
  7467  00142A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7468  00142C  0EC3               	movlw	low InitialiseString@RevNum
  7469  00142E  6F7F               	movwf	(?_printf+2)& (0+255),b
  7470  001430  0E00               	movlw	high InitialiseString@RevNum
  7471  001432  6F80               	movwf	(?_printf+3)& (0+255),b
  7472  001434  ECEB  F027         	call	_printf	;wreg free
  7473  001438                     
  7474                           ;RS232.c: 82:     printf("Card Address. 0x05 \r\n");
  7475  001438  0E41               	movlw	low STR_94
  7476  00143A  0100               	movlb	0	; () banked
  7477  00143C  6F7D               	movwf	printf@fmt& (0+255),b
  7478  00143E  0EFE               	movlw	high STR_94
  7479  001440  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7480  001442  ECEB  F027         	call	_printf	;wreg free
  7481  001446                     
  7482                           ;RS232.c: 83:     printf("Compiled on %s at %s by XC8 version %u\r\n\n",
  7483  001446  0ED5               	movlw	low STR_95
  7484  001448  0100               	movlb	0	; () banked
  7485  00144A  6F7D               	movwf	printf@fmt& (0+255),b
  7486  00144C  0EF8               	movlw	high STR_95
  7487  00144E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7488  001450  0EC1               	movlw	low STR_96
  7489  001452  6F7F               	movwf	(?_printf+2)& (0+255),b
  7490  001454  0EFF               	movlw	high STR_96
  7491  001456  6F80               	movwf	(?_printf+3)& (0+255),b
  7492  001458  0ECD               	movlw	low STR_97
  7493  00145A  6F81               	movwf	(?_printf+4)& (0+255),b
  7494  00145C  0EFF               	movlw	high STR_97
  7495  00145E  6F82               	movwf	(?_printf+5)& (0+255),b
  7496  001460  0E08               	movlw	8
  7497  001462  6F84               	movwf	(?_printf+7)& (0+255),b
  7498  001464  0E34               	movlw	52
  7499  001466  6F83               	movwf	(?_printf+6)& (0+255),b
  7500  001468  ECEB  F027         	call	_printf	;wreg free
  7501                           
  7502                           ;RS232.c: 86:     int j = 0;
  7503  00146C  0E00               	movlw	0
  7504  00146E  0100               	movlb	0	; () banked
  7505  001470  6FC8               	movwf	(InitialiseString@j+1)& (0+255),b
  7506  001472  0E00               	movlw	0
  7507  001474  6FC7               	movwf	InitialiseString@j& (0+255),b
  7508  001476                     
  7509                           ; BSR set to: 0
  7510                           ;RS232.c: 89:     char Date[11] = "Mar 26 2021";
  7511  001476  EE22  F04C         	lfsr	2,InitialiseString@F10764
  7512  00147A  EE10  F0A2         	lfsr	1,InitialiseString@Date
  7513  00147E  0E0A               	movlw	10
  7514  001480                     u7621:
  7515  001480  CFDB FFE3          	movff	plusw2,plusw1
  7516  001484  06E8               	decf	wreg,f,c
  7517  001486  E2FC               	bc	u7621
  7518  001488                     
  7519                           ; BSR set to: 0
  7520                           ;RS232.c: 90:     for(int i=0; i<12; i = i+2){
  7521  001488  0E00               	movlw	0
  7522  00148A  6FCA               	movwf	(InitialiseString@i+1)& (0+255),b
  7523  00148C  0E00               	movlw	0
  7524  00148E  6FC9               	movwf	InitialiseString@i& (0+255),b
  7525  001490                     l7634:
  7526                           
  7527                           ; BSR set to: 0
  7528                           ;RS232.c: 91:         readDataOdd = Date[i];
  7529  001490  0EA2               	movlw	low InitialiseString@Date
  7530  001492  25C9               	addwf	InitialiseString@i& (0+255),w,b
  7531  001494  6ED9               	movwf	fsr2l,c
  7532  001496  0E00               	movlw	high InitialiseString@Date
  7533  001498  21CA               	addwfc	(InitialiseString@i+1)& (0+255),w,b
  7534  00149A  6EDA               	movwf	fsr2h,c
  7535  00149C  50DF               	movf	indf2,w,c
  7536  00149E  6FC5               	movwf	InitialiseString@readDataOdd& (0+255),b
  7537                           
  7538                           ;RS232.c: 92:         readDataEven = Date[i +1];
  7539  0014A0  0E01               	movlw	1
  7540  0014A2  25C9               	addwf	InitialiseString@i& (0+255),w,b
  7541  0014A4  6E55               	movwf	??_InitialiseString^0,c
  7542  0014A6  0E00               	movlw	0
  7543  0014A8  21CA               	addwfc	(InitialiseString@i+1)& (0+255),w,b
  7544  0014AA  6E56               	movwf	(??_InitialiseString+1)^0,c
  7545  0014AC  0EA2               	movlw	low InitialiseString@Date
  7546  0014AE  2455               	addwf	??_InitialiseString^0,w,c
  7547  0014B0  6ED9               	movwf	fsr2l,c
  7548  0014B2  0E00               	movlw	high InitialiseString@Date
  7549  0014B4  2056               	addwfc	(??_InitialiseString+1)^0,w,c
  7550  0014B6  6EDA               	movwf	fsr2h,c
  7551  0014B8  50DF               	movf	indf2,w,c
  7552  0014BA  6FC6               	movwf	InitialiseString@readDataEven& (0+255),b
  7553                           
  7554                           ;RS232.c: 93:         MB304xx[j] = readDataOdd *256 + readDataEven;
  7555  0014BC  51C6               	movf	InitialiseString@readDataEven& (0+255),w,b
  7556  0014BE  C0C5  F055         	movff	InitialiseString@readDataOdd,??_InitialiseString
  7557  0014C2  6A56               	clrf	(??_InitialiseString+1)^0,c
  7558  0014C4  C055  F056         	movff	??_InitialiseString,??_InitialiseString+1
  7559  0014C8  6A55               	clrf	??_InitialiseString^0,c
  7560  0014CA  2655               	addwf	??_InitialiseString^0,f,c
  7561  0014CC  0E00               	movlw	0
  7562  0014CE  2256               	addwfc	(??_InitialiseString+1)^0,f,c
  7563  0014D0  90D8               	bcf	status,0,c
  7564  0014D2  35C7               	rlcf	InitialiseString@j& (0+255),w,b
  7565  0014D4  6ED9               	movwf	fsr2l,c
  7566  0014D6  35C8               	rlcf	(InitialiseString@j+1)& (0+255),w,b
  7567  0014D8  6EDA               	movwf	fsr2h,c
  7568  0014DA  0E72               	movlw	low _MB304xx
  7569  0014DC  26D9               	addwf	fsr2l,f,c
  7570  0014DE  0E01               	movlw	high _MB304xx
  7571  0014E0  22DA               	addwfc	fsr2h,f,c
  7572  0014E2  C055  FFDE         	movff	??_InitialiseString,postinc2
  7573  0014E6  C056  FFDD         	movff	??_InitialiseString+1,postdec2
  7574  0014EA                     
  7575                           ; BSR set to: 0
  7576                           ;RS232.c: 94:         j++;
  7577  0014EA  4BC7               	infsnz	InitialiseString@j& (0+255),f,b
  7578  0014EC  2BC8               	incf	(InitialiseString@j+1)& (0+255),f,b
  7579  0014EE                     
  7580                           ; BSR set to: 0
  7581                           ;RS232.c: 95:     }
  7582  0014EE  0E02               	movlw	2
  7583  0014F0  25C9               	addwf	InitialiseString@i& (0+255),w,b
  7584  0014F2  6FC9               	movwf	InitialiseString@i& (0+255),b
  7585  0014F4  0E00               	movlw	0
  7586  0014F6  21CA               	addwfc	(InitialiseString@i+1)& (0+255),w,b
  7587  0014F8  6FCA               	movwf	(InitialiseString@i+1)& (0+255),b
  7588  0014FA                     
  7589                           ; BSR set to: 0
  7590  0014FA  BFCA               	btfsc	(InitialiseString@i+1)& (0+255),7,b
  7591  0014FC  EF89  F00A         	goto	u7631
  7592  001500  51CA               	movf	(InitialiseString@i+1)& (0+255),w,b
  7593  001502  E109               	bnz	u7630
  7594  001504  0E0C               	movlw	12
  7595  001506  5DC9               	subwf	InitialiseString@i& (0+255),w,b
  7596  001508  A0D8               	btfss	status,0,c
  7597  00150A  EF89  F00A         	goto	u7631
  7598  00150E  EF8B  F00A         	goto	u7630
  7599  001512                     u7631:
  7600  001512  EF48  F00A         	goto	l7634
  7601  001516                     u7630:
  7602  001516                     
  7603                           ; BSR set to: 0
  7604                           ;RS232.c: 98:     j = 0;
  7605  001516  0E00               	movlw	0
  7606  001518  6FC8               	movwf	(InitialiseString@j+1)& (0+255),b
  7607  00151A  0E00               	movlw	0
  7608  00151C  6FC7               	movwf	InitialiseString@j& (0+255),b
  7609  00151E                     
  7610                           ; BSR set to: 0
  7611                           ;RS232.c: 99:     char Time[8] = "23:39:27";
  7612  00151E  EE21  F07E         	lfsr	2,InitialiseString@F10767
  7613  001522  EE10  F0AD         	lfsr	1,InitialiseString@Time
  7614  001526  0E07               	movlw	7
  7615  001528                     u7641:
  7616  001528  CFDB FFE3          	movff	plusw2,plusw1
  7617  00152C  06E8               	decf	wreg,f,c
  7618  00152E  E2FC               	bc	u7641
  7619  001530                     
  7620                           ; BSR set to: 0
  7621                           ;RS232.c: 100:     for(int i=0; i<8; i = i+2){
  7622  001530  0E00               	movlw	0
  7623  001532  6FCC               	movwf	(InitialiseString@i_1506+1)& (0+255),b
  7624  001534  0E00               	movlw	0
  7625  001536  6FCB               	movwf	InitialiseString@i_1506& (0+255),b
  7626  001538                     l7652:
  7627                           
  7628                           ; BSR set to: 0
  7629                           ;RS232.c: 101:         readDataOdd = Time[i];
  7630  001538  0EAD               	movlw	low InitialiseString@Time
  7631  00153A  25CB               	addwf	InitialiseString@i_1506& (0+255),w,b
  7632  00153C  6ED9               	movwf	fsr2l,c
  7633  00153E  0E00               	movlw	high InitialiseString@Time
  7634  001540  21CC               	addwfc	(InitialiseString@i_1506+1)& (0+255),w,b
  7635  001542  6EDA               	movwf	fsr2h,c
  7636  001544  50DF               	movf	indf2,w,c
  7637  001546  6FC5               	movwf	InitialiseString@readDataOdd& (0+255),b
  7638                           
  7639                           ;RS232.c: 102:         readDataEven = Time[i +1];
  7640  001548  0E01               	movlw	1
  7641  00154A  25CB               	addwf	InitialiseString@i_1506& (0+255),w,b
  7642  00154C  6E55               	movwf	??_InitialiseString^0,c
  7643  00154E  0E00               	movlw	0
  7644  001550  21CC               	addwfc	(InitialiseString@i_1506+1)& (0+255),w,b
  7645  001552  6E56               	movwf	(??_InitialiseString+1)^0,c
  7646  001554  0EAD               	movlw	low InitialiseString@Time
  7647  001556  2455               	addwf	??_InitialiseString^0,w,c
  7648  001558  6ED9               	movwf	fsr2l,c
  7649  00155A  0E00               	movlw	high InitialiseString@Time
  7650  00155C  2056               	addwfc	(??_InitialiseString+1)^0,w,c
  7651  00155E  6EDA               	movwf	fsr2h,c
  7652  001560  50DF               	movf	indf2,w,c
  7653  001562  6FC6               	movwf	InitialiseString@readDataEven& (0+255),b
  7654                           
  7655                           ;RS232.c: 103:         MB305xx[j] = readDataOdd *256 + readDataEven;
  7656  001564  51C6               	movf	InitialiseString@readDataEven& (0+255),w,b
  7657  001566  C0C5  F055         	movff	InitialiseString@readDataOdd,??_InitialiseString
  7658  00156A  6A56               	clrf	(??_InitialiseString+1)^0,c
  7659  00156C  C055  F056         	movff	??_InitialiseString,??_InitialiseString+1
  7660  001570  6A55               	clrf	??_InitialiseString^0,c
  7661  001572  2655               	addwf	??_InitialiseString^0,f,c
  7662  001574  0E00               	movlw	0
  7663  001576  2256               	addwfc	(??_InitialiseString+1)^0,f,c
  7664  001578  90D8               	bcf	status,0,c
  7665  00157A  35C7               	rlcf	InitialiseString@j& (0+255),w,b
  7666  00157C  6ED9               	movwf	fsr2l,c
  7667  00157E  35C8               	rlcf	(InitialiseString@j+1)& (0+255),w,b
  7668  001580  6EDA               	movwf	fsr2h,c
  7669  001582  0E3C               	movlw	low _MB305xx
  7670  001584  26D9               	addwf	fsr2l,f,c
  7671  001586  0E02               	movlw	high _MB305xx
  7672  001588  22DA               	addwfc	fsr2h,f,c
  7673  00158A  C055  FFDE         	movff	??_InitialiseString,postinc2
  7674  00158E  C056  FFDD         	movff	??_InitialiseString+1,postdec2
  7675  001592                     
  7676                           ; BSR set to: 0
  7677                           ;RS232.c: 104:         j++;
  7678  001592  4BC7               	infsnz	InitialiseString@j& (0+255),f,b
  7679  001594  2BC8               	incf	(InitialiseString@j+1)& (0+255),f,b
  7680  001596                     
  7681                           ; BSR set to: 0
  7682                           ;RS232.c: 105:     }
  7683  001596  0E02               	movlw	2
  7684  001598  25CB               	addwf	InitialiseString@i_1506& (0+255),w,b
  7685  00159A  6FCB               	movwf	InitialiseString@i_1506& (0+255),b
  7686  00159C  0E00               	movlw	0
  7687  00159E  21CC               	addwfc	(InitialiseString@i_1506+1)& (0+255),w,b
  7688  0015A0  6FCC               	movwf	(InitialiseString@i_1506+1)& (0+255),b
  7689  0015A2                     
  7690                           ; BSR set to: 0
  7691  0015A2  BFCC               	btfsc	(InitialiseString@i_1506+1)& (0+255),7,b
  7692  0015A4  EFDD  F00A         	goto	u7651
  7693  0015A8  51CC               	movf	(InitialiseString@i_1506+1)& (0+255),w,b
  7694  0015AA  E109               	bnz	u7650
  7695  0015AC  0E08               	movlw	8
  7696  0015AE  5DCB               	subwf	InitialiseString@i_1506& (0+255),w,b
  7697  0015B0  A0D8               	btfss	status,0,c
  7698  0015B2  EFDD  F00A         	goto	u7651
  7699  0015B6  EFDF  F00A         	goto	u7650
  7700  0015BA                     u7651:
  7701  0015BA  EF9C  F00A         	goto	l7652
  7702  0015BE                     u7650:
  7703  0015BE                     
  7704                           ; BSR set to: 0
  7705                           ;RS232.c: 108:     if(Partial != 1){
  7706  0015BE  05C0               	decf	InitialiseString@Partial& (0+255),w,b
  7707  0015C0  B4D8               	btfsc	status,2,c
  7708  0015C2  EFE5  F00A         	goto	u7661
  7709  0015C6  EFE7  F00A         	goto	u7660
  7710  0015CA                     u7661:
  7711  0015CA  EF8B  F00B         	goto	l971
  7712  0015CE                     u7660:
  7713  0015CE                     
  7714                           ; BSR set to: 0
  7715                           ;RS232.c: 109:         printf("Initalisation Complete - Ready\r\n\n");
  7716  0015CE  0EA7               	movlw	low STR_98
  7717  0015D0  6F7D               	movwf	printf@fmt& (0+255),b
  7718  0015D2  0EFB               	movlw	high STR_98
  7719  0015D4  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7720  0015D6  ECEB  F027         	call	_printf	;wreg free
  7721                           
  7722                           ;RS232.c: 110:         printf("Modbus Function Codes Supported:\r\n\n");
  7723  0015DA  0E18               	movlw	low STR_99
  7724  0015DC  0100               	movlb	0	; () banked
  7725  0015DE  6F7D               	movwf	printf@fmt& (0+255),b
  7726  0015E0  0EFB               	movlw	high STR_99
  7727  0015E2  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7728  0015E4  ECEB  F027         	call	_printf	;wreg free
  7729                           
  7730                           ;RS232.c: 111:         printf("   0x04 - Read Multiple 16bit Registers\r\n");
  7731  0015E8  0EFF               	movlw	low STR_100
  7732  0015EA  0100               	movlb	0	; () banked
  7733  0015EC  6F7D               	movwf	printf@fmt& (0+255),b
  7734  0015EE  0EF8               	movlw	high STR_100
  7735  0015F0  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7736  0015F2  ECEB  F027         	call	_printf	;wreg free
  7737                           
  7738                           ;RS232.c: 112:         printf("      Add 0x0000 to 0x0031 - 32x Circuit Get Status (lowe
      +                          r 8bits only)\r\n");
  7739  0015F6  0EFF               	movlw	low STR_101
  7740  0015F8  0100               	movlb	0	; () banked
  7741  0015FA  6F7D               	movwf	printf@fmt& (0+255),b
  7742  0015FC  0EF3               	movlw	high STR_101
  7743  0015FE  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7744  001600  ECEB  F027         	call	_printf	;wreg free
  7745                           
  7746                           ;RS232.c: 113:         printf("      Add 0x0100 to 0x0108 - Part Number (ASCII)\r\n");
  7747  001604  0E76               	movlw	low STR_102
  7748  001606  0100               	movlb	0	; () banked
  7749  001608  6F7D               	movwf	printf@fmt& (0+255),b
  7750  00160A  0EF8               	movlw	high STR_102
  7751  00160C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7752  00160E  ECEB  F027         	call	_printf	;wreg free
  7753                           
  7754                           ;RS232.c: 114:         printf("      Add 0x0200 - Revision (ASCII)\r\n");
  7755  001612  0E7B               	movlw	low STR_103
  7756  001614  0100               	movlb	0	; () banked
  7757  001616  6F7D               	movwf	printf@fmt& (0+255),b
  7758  001618  0EF9               	movlw	high STR_103
  7759  00161A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7760  00161C  ECEB  F027         	call	_printf	;wreg free
  7761                           
  7762                           ;RS232.c: 115:         printf("      Add 0x0300 to 0x0304 - Serial Number (ASCII)\r\n");
  7763  001620  0ED5               	movlw	low STR_104
  7764  001622  0100               	movlb	0	; () banked
  7765  001624  6F7D               	movwf	printf@fmt& (0+255),b
  7766  001626  0EF6               	movlw	high STR_104
  7767  001628  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7768  00162A  ECEB  F027         	call	_printf	;wreg free
  7769                           
  7770                           ;RS232.c: 116:         printf("      Add 0x0400 to 0x0405 - Compile Date (ASCII)\r\n");
  7771  00162E  0E0A               	movlw	low STR_105
  7772  001630  0100               	movlb	0	; () banked
  7773  001632  6F7D               	movwf	printf@fmt& (0+255),b
  7774  001634  0EF7               	movlw	high STR_105
  7775  001636  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7776  001638  ECEB  F027         	call	_printf	;wreg free
  7777                           
  7778                           ;RS232.c: 117:         printf("      Add 0x0500 to 0x0504 - Compile Time - (ASCII)\r\n")
      +                          ;
  7779  00163C  0EC7               	movlw	low STR_106
  7780  00163E  0100               	movlb	0	; () banked
  7781  001640  6F7D               	movwf	printf@fmt& (0+255),b
  7782  001642  0EF5               	movlw	high STR_106
  7783  001644  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7784  001646  ECEB  F027         	call	_printf	;wreg free
  7785                           
  7786                           ;RS232.c: 118:         printf("      Add 0x0600 to 0x0602 - 3x Analogue Inputs (0x000 to
      +                           0x03ff)\r\n\n");
  7787  00164A  0E48               	movlw	low STR_107
  7788  00164C  0100               	movlb	0	; () banked
  7789  00164E  6F7D               	movwf	printf@fmt& (0+255),b
  7790  001650  0EF4               	movlw	high STR_107
  7791  001652  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7792  001654  ECEB  F027         	call	_printf	;wreg free
  7793                           
  7794                           ;RS232.c: 119:         printf("   0x10 - Write Multiple Output Holding Registers (Max 32
      +                          x 16bit)\r\n");
  7795  001658  0E8D               	movlw	low STR_108
  7796  00165A  0100               	movlb	0	; () banked
  7797  00165C  6F7D               	movwf	printf@fmt& (0+255),b
  7798  00165E  0EF4               	movlw	high STR_108
  7799  001660  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7800  001662  ECEB  F027         	call	_printf	;wreg free
  7801                           
  7802                           ;RS232.c: 120:         printf("      Add 0x0000 to 0x0031 - 32x Circuit Set Status  (low
      +                          er 8bits only)\r\n\n");
  7803  001666  0EB4               	movlw	low STR_109
  7804  001668  0100               	movlb	0	; () banked
  7805  00166A  6F7D               	movwf	printf@fmt& (0+255),b
  7806  00166C  0EF3               	movlw	high STR_109
  7807  00166E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7808  001670  ECEB  F027         	call	_printf	;wreg free
  7809                           
  7810                           ;RS232.c: 121:         printf("   0x03 - Read Multiple Output Holding Registers (Max 32x
      +                           16bit)\r\n");
  7811  001674  0ED1               	movlw	low STR_110
  7812  001676  0100               	movlb	0	; () banked
  7813  001678  6F7D               	movwf	printf@fmt& (0+255),b
  7814  00167A  0EF4               	movlw	high STR_110
  7815  00167C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7816  00167E  ECEB  F027         	call	_printf	;wreg free
  7817                           
  7818                           ;RS232.c: 122:         printf("      Add 0x0000 to 0x0031 - 32x Circuit Get Status  (low
      +                          er 8bits only)\r\n\n");
  7819  001682  0E69               	movlw	low STR_111
  7820  001684  0100               	movlb	0	; () banked
  7821  001686  6F7D               	movwf	printf@fmt& (0+255),b
  7822  001688  0EF3               	movlw	high STR_111
  7823  00168A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7824  00168C  ECEB  F027         	call	_printf	;wreg free
  7825                           
  7826                           ;RS232.c: 125:         printf("Commands Supported:\r\n");
  7827  001690  0E57               	movlw	low STR_112
  7828  001692  0100               	movlb	0	; () banked
  7829  001694  6F7D               	movwf	printf@fmt& (0+255),b
  7830  001696  0EFE               	movlw	high STR_112
  7831  001698  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7832  00169A  ECEB  F027         	call	_printf	;wreg free
  7833                           
  7834                           ;RS232.c: 126:         printf("   ? - Initalise and display card details\r\n");
  7835  00169E  0EA9               	movlw	low STR_113
  7836  0016A0  0100               	movlb	0	; () banked
  7837  0016A2  6F7D               	movwf	printf@fmt& (0+255),b
  7838  0016A4  0EF8               	movlw	high STR_113
  7839  0016A6  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7840  0016A8  ECEB  F027         	call	_printf	;wreg free
  7841                           
  7842                           ;RS232.c: 127:         printf("   serial - Set card serial number\r\n");
  7843  0016AC  0E5F               	movlw	low STR_114
  7844  0016AE  0100               	movlb	0	; () banked
  7845  0016B0  6F7D               	movwf	printf@fmt& (0+255),b
  7846  0016B2  0EFA               	movlw	high STR_114
  7847  0016B4  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7848  0016B6  ECEB  F027         	call	_printf	;wreg free
  7849                           
  7850                           ;RS232.c: 128:         printf("   part - Set card part number\r\n");
  7851  0016BA  0EC9               	movlw	low STR_115
  7852  0016BC  0100               	movlb	0	; () banked
  7853  0016BE  6F7D               	movwf	printf@fmt& (0+255),b
  7854  0016C0  0EFB               	movlw	high STR_115
  7855  0016C2  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7856  0016C4  ECEB  F027         	call	_printf	;wreg free
  7857                           
  7858                           ;RS232.c: 129:         printf("   rev - Set card part number\r\n");
  7859  0016C8  0E0B               	movlw	low STR_116
  7860  0016CA  0100               	movlb	0	; () banked
  7861  0016CC  6F7D               	movwf	printf@fmt& (0+255),b
  7862  0016CE  0EFC               	movlw	high STR_116
  7863  0016D0  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7864  0016D2  ECEB  F027         	call	_printf	;wreg free
  7865                           
  7866                           ;RS232.c: 130:         printf("   debug - Toggles trace outputs. Slows down time device 
      +                          can respond between commands. DEFAULT ON!\r\n\n");
  7867  0016D6  0E03               	movlw	low STR_117
  7868  0016D8  0100               	movlb	0	; () banked
  7869  0016DA  6F7D               	movwf	printf@fmt& (0+255),b
  7870  0016DC  0EF3               	movlw	high STR_117
  7871  0016DE  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7872  0016E0  ECEB  F027         	call	_printf	;wreg free
  7873  0016E4                     
  7874                           ;RS232.c: 132:         uint16_t convertedValue;;RS232.c: 133:         convertedValue = A
      +                          DCC_GetSingleConversion(AIP_0);
  7875  0016E4  0E00               	movlw	0
  7876  0016E6  ECA8  F027         	call	_ADCC_GetSingleConversion
  7877  0016EA  C005  F0C1         	movff	?_ADCC_GetSingleConversion,InitialiseString@convertedValue
  7878  0016EE  C006  F0C2         	movff	?_ADCC_GetSingleConversion+1,InitialiseString@convertedValue+1
  7879  0016F2                     
  7880                           ;RS232.c: 134:         printf("ADC0: 0x%04x \r\n", convertedValue);
  7881  0016F2  0E5A               	movlw	low STR_118
  7882  0016F4  0100               	movlb	0	; () banked
  7883  0016F6  6F7D               	movwf	printf@fmt& (0+255),b
  7884  0016F8  0EFF               	movlw	high STR_118
  7885  0016FA  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7886  0016FC  C0C1  F07F         	movff	InitialiseString@convertedValue,?_printf+2
  7887  001700  C0C2  F080         	movff	InitialiseString@convertedValue+1,?_printf+3
  7888  001704  ECEB  F027         	call	_printf	;wreg free
  7889  001708                     
  7890                           ;RS232.c: 136:         printf("\r\nEnter Command : ");
  7891  001708  0E25               	movlw	low STR_6
  7892  00170A  0100               	movlb	0	; () banked
  7893  00170C  6F7D               	movwf	printf@fmt& (0+255),b
  7894  00170E  0EFF               	movlw	high STR_6
  7895  001710  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7896  001712  ECEB  F027         	call	_printf	;wreg free
  7897  001716                     l971:
  7898  001716  0012               	return		;funcret
  7899  001718                     __end_of_InitialiseString:
  7900                           	opt callstack 0
  7901                           
  7902 ;; *************** function _CardConfigIni *****************
  7903 ;; Defined at:
  7904 ;;		line 10 in file "RS232.c"
  7905 ;; Parameters:    Size  Location     Type
  7906 ;;  Name            2    9[COMRAM] PTR unsigned char 
  7907 ;;		 -> STR_89(4), STR_88(5), STR_87(7), 
  7908 ;;  RetNum          2   11[COMRAM] PTR unsigned char 
  7909 ;;		 -> InitialiseString@RevNum(2), InitialiseString@PartNum(19), InitialiseString@SerialNum(11), 
  7910 ;;  dataeeAddrWr    2   13[COMRAM] unsigned short 
  7911 ;;  NumBytes        2   15[COMRAM] int 
  7912 ;; Auto vars:     Size  Location     Type
  7913 ;;  i               2   21[COMRAM] int 
  7914 ;;  j               2   19[COMRAM] int 
  7915 ;;  readDataEven    1   24[COMRAM] unsigned char 
  7916 ;;  readDataOdd     1   23[COMRAM] unsigned char 
  7917 ;; Return value:  Size  Location     Type
  7918 ;;                  1    wreg      void 
  7919 ;; Registers used:
  7920 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7921 ;; Tracked objects:
  7922 ;;		On entry : 0/0
  7923 ;;		On exit  : 0/0
  7924 ;;		Unchanged: 0/0
  7925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7926 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7927 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7928 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7929 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7930 ;;Total ram usage:       16 bytes
  7931 ;; Hardware stack levels used:    1
  7932 ;; Hardware stack levels required when called:    5
  7933 ;; This function calls:
  7934 ;;		_DATAEE_ReadByte
  7935 ;;		_strcmp
  7936 ;; This function is called by:
  7937 ;;		_InitialiseString
  7938 ;; This function uses a non-reentrant model
  7939 ;;
  7940                           
  7941                           	psect	text13
  7942  0029B6                     __ptext13:
  7943                           	opt callstack 0
  7944  0029B6                     _CardConfigIni:
  7945                           	opt callstack 23
  7946  0029B6                     
  7947                           ;RS232.c: 14:     char readDataOdd, readDataEven;;RS232.c: 15:     int i=0, j=0;
  7948  0029B6  0E00               	movlw	0
  7949  0029B8  6E17               	movwf	(CardConfigIni@i+1)^0,c
  7950  0029BA  0E00               	movlw	0
  7951  0029BC  6E16               	movwf	CardConfigIni@i^0,c
  7952  0029BE  0E00               	movlw	0
  7953  0029C0  6E15               	movwf	(CardConfigIni@j+1)^0,c
  7954  0029C2  0E00               	movlw	0
  7955  0029C4  6E14               	movwf	CardConfigIni@j^0,c
  7956                           
  7957                           ;RS232.c: 19:     for(i = 0; i < NumBytes; i++){
  7958  0029C6  0E00               	movlw	0
  7959  0029C8  6E17               	movwf	(CardConfigIni@i+1)^0,c
  7960  0029CA  0E00               	movlw	0
  7961  0029CC  6E16               	movwf	CardConfigIni@i^0,c
  7962  0029CE  EFBB  F015         	goto	l7466
  7963  0029D2                     l7428:
  7964                           
  7965                           ;RS232.c: 20:         readDataOdd = DATAEE_ReadByte(dataeeAddrWrk);
  7966  0029D2  C00E  F005         	movff	CardConfigIni@dataeeAddrWrk,DATAEE_ReadByte@bAdd
  7967  0029D6  C00F  F006         	movff	CardConfigIni@dataeeAddrWrk+1,DATAEE_ReadByte@bAdd+1
  7968  0029DA  EC50  F028         	call	_DATAEE_ReadByte	;wreg free
  7969  0029DE  6E18               	movwf	CardConfigIni@readDataOdd^0,c
  7970  0029E0                     
  7971                           ;RS232.c: 22:         _delay((unsigned long)((50)*(32000000/4000.0)));
  7972  0029E0  0E03               	movlw	3
  7973  0029E2  6E13               	movwf	(??_CardConfigIni+1)^0,c
  7974  0029E4  0E08               	movlw	8
  7975  0029E6  6E12               	movwf	??_CardConfigIni^0,c
  7976  0029E8  0E77               	movlw	119
  7977  0029EA                     u8507:
  7978  0029EA  2EE8               	decfsz	wreg,f,c
  7979  0029EC  D7FE               	bra	u8507
  7980  0029EE  2E12               	decfsz	??_CardConfigIni^0,f,c
  7981  0029F0  D7FC               	bra	u8507
  7982  0029F2  2E13               	decfsz	(??_CardConfigIni+1)^0,f,c
  7983  0029F4  D7FA               	bra	u8507
  7984  0029F6  F000               	nop	
  7985  0029F8                     
  7986                           ;RS232.c: 25:         if(readDataOdd != 0xFF){
  7987  0029F8  2818               	incf	CardConfigIni@readDataOdd^0,w,c
  7988  0029FA  B4D8               	btfsc	status,2,c
  7989  0029FC  EF02  F015         	goto	u7461
  7990  002A00  EF04  F015         	goto	u7460
  7991  002A04                     u7461:
  7992  002A04  EF0E  F015         	goto	l7438
  7993  002A08                     u7460:
  7994  002A08                     
  7995                           ;RS232.c: 26:             RetNum[j] = readDataOdd;
  7996  002A08  5014               	movf	CardConfigIni@j^0,w,c
  7997  002A0A  240C               	addwf	CardConfigIni@RetNum^0,w,c
  7998  002A0C  6ED9               	movwf	fsr2l,c
  7999  002A0E  5015               	movf	(CardConfigIni@j+1)^0,w,c
  8000  002A10  200D               	addwfc	(CardConfigIni@RetNum+1)^0,w,c
  8001  002A12  6EDA               	movwf	fsr2h,c
  8002  002A14  C018  FFDF         	movff	CardConfigIni@readDataOdd,indf2
  8003  002A18                     
  8004                           ;RS232.c: 27:             j++;
  8005  002A18  4A14               	infsnz	CardConfigIni@j^0,f,c
  8006  002A1A  2A15               	incf	(CardConfigIni@j+1)^0,f,c
  8007  002A1C                     l7438:
  8008                           
  8009                           ;RS232.c: 30:         dataeeAddrWrk++;
  8010  002A1C  4A0E               	infsnz	CardConfigIni@dataeeAddrWrk^0,f,c
  8011  002A1E  2A0F               	incf	(CardConfigIni@dataeeAddrWrk+1)^0,f,c
  8012  002A20                     
  8013                           ;RS232.c: 31:         readDataEven = DATAEE_ReadByte(dataeeAddrWrk);
  8014  002A20  C00E  F005         	movff	CardConfigIni@dataeeAddrWrk,DATAEE_ReadByte@bAdd
  8015  002A24  C00F  F006         	movff	CardConfigIni@dataeeAddrWrk+1,DATAEE_ReadByte@bAdd+1
  8016  002A28  EC50  F028         	call	_DATAEE_ReadByte	;wreg free
  8017  002A2C  6E19               	movwf	CardConfigIni@readDataEven^0,c
  8018  002A2E                     
  8019                           ;RS232.c: 33:         dataeeAddrWrk++;
  8020  002A2E  4A0E               	infsnz	CardConfigIni@dataeeAddrWrk^0,f,c
  8021  002A30  2A0F               	incf	(CardConfigIni@dataeeAddrWrk+1)^0,f,c
  8022  002A32                     
  8023                           ;RS232.c: 34:         _delay((unsigned long)((50)*(32000000/4000.0)));
  8024  002A32  0E03               	movlw	3
  8025  002A34  6E13               	movwf	(??_CardConfigIni+1)^0,c
  8026  002A36  0E08               	movlw	8
  8027  002A38  6E12               	movwf	??_CardConfigIni^0,c
  8028  002A3A  0E77               	movlw	119
  8029  002A3C                     u8517:
  8030  002A3C  2EE8               	decfsz	wreg,f,c
  8031  002A3E  D7FE               	bra	u8517
  8032  002A40  2E12               	decfsz	??_CardConfigIni^0,f,c
  8033  002A42  D7FC               	bra	u8517
  8034  002A44  2E13               	decfsz	(??_CardConfigIni+1)^0,f,c
  8035  002A46  D7FA               	bra	u8517
  8036  002A48  F000               	nop	
  8037  002A4A                     
  8038                           ;RS232.c: 37:         if(readDataEven != 0xFF){
  8039  002A4A  2819               	incf	CardConfigIni@readDataEven^0,w,c
  8040  002A4C  B4D8               	btfsc	status,2,c
  8041  002A4E  EF2B  F015         	goto	u7471
  8042  002A52  EF2D  F015         	goto	u7470
  8043  002A56                     u7471:
  8044  002A56  EF37  F015         	goto	l7452
  8045  002A5A                     u7470:
  8046  002A5A                     
  8047                           ;RS232.c: 38:             RetNum[j] = readDataEven;
  8048  002A5A  5014               	movf	CardConfigIni@j^0,w,c
  8049  002A5C  240C               	addwf	CardConfigIni@RetNum^0,w,c
  8050  002A5E  6ED9               	movwf	fsr2l,c
  8051  002A60  5015               	movf	(CardConfigIni@j+1)^0,w,c
  8052  002A62  200D               	addwfc	(CardConfigIni@RetNum+1)^0,w,c
  8053  002A64  6EDA               	movwf	fsr2h,c
  8054  002A66  C019  FFDF         	movff	CardConfigIni@readDataEven,indf2
  8055  002A6A                     
  8056                           ;RS232.c: 39:             j++;
  8057  002A6A  4A14               	infsnz	CardConfigIni@j^0,f,c
  8058  002A6C  2A15               	incf	(CardConfigIni@j+1)^0,f,c
  8059  002A6E                     l7452:
  8060                           
  8061                           ;RS232.c: 42:         if(!strcmp("Serial",Name)){
  8062  002A6E  0ED6               	movlw	low STR_81
  8063  002A70  6E05               	movwf	strcmp@l^0,c
  8064  002A72  0EFF               	movlw	high STR_81
  8065  002A74  6E06               	movwf	(strcmp@l+1)^0,c
  8066  002A76  C00A  F007         	movff	CardConfigIni@Name,strcmp@r
  8067  002A7A  C00B  F008         	movff	CardConfigIni@Name+1,strcmp@r+1
  8068  002A7E  EC62  F021         	call	_strcmp	;wreg free
  8069  002A82  5005               	movf	?_strcmp^0,w,c
  8070  002A84  1006               	iorwf	(?_strcmp+1)^0,w,c
  8071  002A86  A4D8               	btfss	status,2,c
  8072  002A88  EF48  F015         	goto	u7481
  8073  002A8C  EF4A  F015         	goto	u7480
  8074  002A90                     u7481:
  8075  002A90  EF63  F015         	goto	l7456
  8076  002A94                     u7480:
  8077  002A94                     
  8078                           ;RS232.c: 43:             MB303xx[i] = readDataOdd *256 + readDataEven;
  8079  002A94  5019               	movf	CardConfigIni@readDataEven^0,w,c
  8080  002A96  C018  F012         	movff	CardConfigIni@readDataOdd,??_CardConfigIni
  8081  002A9A  6A13               	clrf	(??_CardConfigIni+1)^0,c
  8082  002A9C  C012  F013         	movff	??_CardConfigIni,??_CardConfigIni+1
  8083  002AA0  6A12               	clrf	??_CardConfigIni^0,c
  8084  002AA2  2612               	addwf	??_CardConfigIni^0,f,c
  8085  002AA4  0E00               	movlw	0
  8086  002AA6  2213               	addwfc	(??_CardConfigIni+1)^0,f,c
  8087  002AA8  90D8               	bcf	status,0,c
  8088  002AAA  3416               	rlcf	CardConfigIni@i^0,w,c
  8089  002AAC  6ED9               	movwf	fsr2l,c
  8090  002AAE  3417               	rlcf	(CardConfigIni@i+1)^0,w,c
  8091  002AB0  6EDA               	movwf	fsr2h,c
  8092  002AB2  0EEA               	movlw	low _MB303xx
  8093  002AB4  26D9               	addwf	fsr2l,f,c
  8094  002AB6  0E00               	movlw	high _MB303xx
  8095  002AB8  22DA               	addwfc	fsr2h,f,c
  8096  002ABA  C012  FFDE         	movff	??_CardConfigIni,postinc2
  8097  002ABE  C013  FFDD         	movff	??_CardConfigIni+1,postdec2
  8098                           
  8099                           ;RS232.c: 44:         }else if(!strcmp("Part",Name)){
  8100  002AC2  EFB9  F015         	goto	l7464
  8101  002AC6                     l7456:
  8102  002AC6  0EEA               	movlw	low STR_83
  8103  002AC8  6E05               	movwf	strcmp@l^0,c
  8104  002ACA  0EFF               	movlw	high STR_83
  8105  002ACC  6E06               	movwf	(strcmp@l+1)^0,c
  8106  002ACE  C00A  F007         	movff	CardConfigIni@Name,strcmp@r
  8107  002AD2  C00B  F008         	movff	CardConfigIni@Name+1,strcmp@r+1
  8108  002AD6  EC62  F021         	call	_strcmp	;wreg free
  8109  002ADA  5005               	movf	?_strcmp^0,w,c
  8110  002ADC  1006               	iorwf	(?_strcmp+1)^0,w,c
  8111  002ADE  A4D8               	btfss	status,2,c
  8112  002AE0  EF74  F015         	goto	u7491
  8113  002AE4  EF76  F015         	goto	u7490
  8114  002AE8                     u7491:
  8115  002AE8  EF8F  F015         	goto	l7460
  8116  002AEC                     u7490:
  8117  002AEC                     
  8118                           ;RS232.c: 45:             MB301xx[i] = readDataOdd *256 + readDataEven;
  8119  002AEC  5019               	movf	CardConfigIni@readDataEven^0,w,c
  8120  002AEE  C018  F012         	movff	CardConfigIni@readDataOdd,??_CardConfigIni
  8121  002AF2  6A13               	clrf	(??_CardConfigIni+1)^0,c
  8122  002AF4  C012  F013         	movff	??_CardConfigIni,??_CardConfigIni+1
  8123  002AF8  6A12               	clrf	??_CardConfigIni^0,c
  8124  002AFA  2612               	addwf	??_CardConfigIni^0,f,c
  8125  002AFC  0E00               	movlw	0
  8126  002AFE  2213               	addwfc	(??_CardConfigIni+1)^0,f,c
  8127  002B00  90D8               	bcf	status,0,c
  8128  002B02  3416               	rlcf	CardConfigIni@i^0,w,c
  8129  002B04  6ED9               	movwf	fsr2l,c
  8130  002B06  3417               	rlcf	(CardConfigIni@i+1)^0,w,c
  8131  002B08  6EDA               	movwf	fsr2h,c
  8132  002B0A  0E64               	movlw	low _MB301xx
  8133  002B0C  26D9               	addwf	fsr2l,f,c
  8134  002B0E  0E01               	movlw	high _MB301xx
  8135  002B10  22DA               	addwfc	fsr2h,f,c
  8136  002B12  C012  FFDE         	movff	??_CardConfigIni,postinc2
  8137  002B16  C013  FFDD         	movff	??_CardConfigIni+1,postdec2
  8138                           
  8139                           ;RS232.c: 46:         }else if(!strcmp("Rev",Name)){
  8140  002B1A  EFB9  F015         	goto	l7464
  8141  002B1E                     l7460:
  8142  002B1E  0EF4               	movlw	low STR_85
  8143  002B20  6E05               	movwf	strcmp@l^0,c
  8144  002B22  0EFF               	movlw	high STR_85
  8145  002B24  6E06               	movwf	(strcmp@l+1)^0,c
  8146  002B26  C00A  F007         	movff	CardConfigIni@Name,strcmp@r
  8147  002B2A  C00B  F008         	movff	CardConfigIni@Name+1,strcmp@r+1
  8148  002B2E  EC62  F021         	call	_strcmp	;wreg free
  8149  002B32  5005               	movf	?_strcmp^0,w,c
  8150  002B34  1006               	iorwf	(?_strcmp+1)^0,w,c
  8151  002B36  A4D8               	btfss	status,2,c
  8152  002B38  EFA0  F015         	goto	u7501
  8153  002B3C  EFA2  F015         	goto	u7500
  8154  002B40                     u7501:
  8155  002B40  EFB9  F015         	goto	l7464
  8156  002B44                     u7500:
  8157  002B44                     
  8158                           ;RS232.c: 47:             MB302xx[i] = readDataOdd *256 + readDataEven;
  8159  002B44  5019               	movf	CardConfigIni@readDataEven^0,w,c
  8160  002B46  C018  F012         	movff	CardConfigIni@readDataOdd,??_CardConfigIni
  8161  002B4A  6A13               	clrf	(??_CardConfigIni+1)^0,c
  8162  002B4C  C012  F013         	movff	??_CardConfigIni,??_CardConfigIni+1
  8163  002B50  6A12               	clrf	??_CardConfigIni^0,c
  8164  002B52  2612               	addwf	??_CardConfigIni^0,f,c
  8165  002B54  0E00               	movlw	0
  8166  002B56  2213               	addwfc	(??_CardConfigIni+1)^0,f,c
  8167  002B58  90D8               	bcf	status,0,c
  8168  002B5A  3416               	rlcf	CardConfigIni@i^0,w,c
  8169  002B5C  6ED9               	movwf	fsr2l,c
  8170  002B5E  3417               	rlcf	(CardConfigIni@i+1)^0,w,c
  8171  002B60  6EDA               	movwf	fsr2h,c
  8172  002B62  0EFC               	movlw	low _MB302xx
  8173  002B64  26D9               	addwf	fsr2l,f,c
  8174  002B66  0E00               	movlw	high _MB302xx
  8175  002B68  22DA               	addwfc	fsr2h,f,c
  8176  002B6A  C012  FFDE         	movff	??_CardConfigIni,postinc2
  8177  002B6E  C013  FFDD         	movff	??_CardConfigIni+1,postdec2
  8178  002B72                     l7464:
  8179                           
  8180                           ;RS232.c: 51:     }
  8181  002B72  4A16               	infsnz	CardConfigIni@i^0,f,c
  8182  002B74  2A17               	incf	(CardConfigIni@i+1)^0,f,c
  8183  002B76                     l7466:
  8184  002B76  5010               	movf	CardConfigIni@NumBytes^0,w,c
  8185  002B78  5C16               	subwf	CardConfigIni@i^0,w,c
  8186  002B7A  5017               	movf	(CardConfigIni@i+1)^0,w,c
  8187  002B7C  0A80               	xorlw	128
  8188  002B7E  6E12               	movwf	??_CardConfigIni^0,c
  8189  002B80  5011               	movf	(CardConfigIni@NumBytes+1)^0,w,c
  8190  002B82  0A80               	xorlw	128
  8191  002B84  5812               	subwfb	??_CardConfigIni^0,w,c
  8192  002B86  A0D8               	btfss	status,0,c
  8193  002B88  EFC8  F015         	goto	u7511
  8194  002B8C  EFCA  F015         	goto	u7510
  8195  002B90                     u7511:
  8196  002B90  EFE9  F014         	goto	l7428
  8197  002B94                     u7510:
  8198  002B94                     
  8199                           ;RS232.c: 53:     RetNum[j] = '\0';
  8200  002B94  5014               	movf	CardConfigIni@j^0,w,c
  8201  002B96  240C               	addwf	CardConfigIni@RetNum^0,w,c
  8202  002B98  6ED9               	movwf	fsr2l,c
  8203  002B9A  5015               	movf	(CardConfigIni@j+1)^0,w,c
  8204  002B9C  200D               	addwfc	(CardConfigIni@RetNum+1)^0,w,c
  8205  002B9E  6EDA               	movwf	fsr2h,c
  8206  002BA0  0E00               	movlw	0
  8207  002BA2  6EDF               	movwf	indf2,c
  8208  002BA4  0012               	return		;funcret
  8209  002BA6                     __end_of_CardConfigIni:
  8210                           	opt callstack 0
  8211                           
  8212 ;; *************** function _strcmp *****************
  8213 ;; Defined at:
  8214 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcmp.c"
  8215 ;; Parameters:    Size  Location     Type
  8216 ;;  l               2    4[COMRAM] PTR const unsigned char 
  8217 ;;		 -> STR_86(4), STR_84(5), STR_82(7), Command(16), 
  8218 ;;  r               2    6[COMRAM] PTR const unsigned char 
  8219 ;;		 -> STR_141(4), STR_139(5), STR_137(7), STR_135(2), 
  8220 ;;		 -> STR_133(6), STR_89(4), STR_88(5), STR_87(7), 
  8221 ;; Auto vars:     Size  Location     Type
  8222 ;;		None
  8223 ;; Return value:  Size  Location     Type
  8224 ;;                  2    4[COMRAM] int 
  8225 ;; Registers used:
  8226 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  8227 ;; Tracked objects:
  8228 ;;		On entry : 0/0
  8229 ;;		On exit  : 0/0
  8230 ;;		Unchanged: 0/0
  8231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8232 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8234 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8235 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8236 ;;Total ram usage:        5 bytes
  8237 ;; Hardware stack levels used:    1
  8238 ;; Hardware stack levels required when called:    4
  8239 ;; This function calls:
  8240 ;;		Nothing
  8241 ;; This function is called by:
  8242 ;;		_CardConfigIni
  8243 ;;		_ValidateCmd
  8244 ;; This function uses a non-reentrant model
  8245 ;;
  8246                           
  8247                           	psect	text14
  8248  0042C4                     __ptext14:
  8249                           	opt callstack 0
  8250  0042C4                     _strcmp:
  8251                           	opt callstack 25
  8252  0042C4  EF68  F021         	goto	l7280
  8253  0042C8                     l7278:
  8254  0042C8  4A05               	infsnz	strcmp@l^0,f,c
  8255  0042CA  2A06               	incf	(strcmp@l+1)^0,f,c
  8256  0042CC  4A07               	infsnz	strcmp@r^0,f,c
  8257  0042CE  2A08               	incf	(strcmp@r+1)^0,f,c
  8258  0042D0                     l7280:
  8259  0042D0  C007  FFF6         	movff	strcmp@r,tblptrl
  8260  0042D4  C008  FFF7         	movff	strcmp@r+1,tblptrh
  8261  0042D8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8262  0042D8  6AF8               	clrf	tblptru,c
  8263  0042DA                     	endif
  8264  0042DA                     	if	0	;tblptru may be non-zero
  8265  0042DA                     	endif
  8266  0042DA  0008               	tblrd		*
  8267  0042DC  CFF5 F009          	movff	tablat,??_strcmp
  8268  0042E0  C005  FFF6         	movff	strcmp@l,tblptrl
  8269  0042E4  C006  FFF7         	movff	strcmp@l+1,tblptrh
  8270  0042E8  0E00               	movlw	low (__mediumconst shr (0+16))
  8271  0042EA  6EF8               	movwf	tblptru,c
  8272  0042EC  0E0E               	movlw	(high __ramtop+-1)
  8273  0042EE  64F7               	cpfsgt	tblptrh,c
  8274  0042F0  D003               	bra	u7237
  8275  0042F2  0008               	tblrd		*
  8276  0042F4  50F5               	movf	tablat,w,c
  8277  0042F6  D005               	bra	u7235
  8278  0042F8                     u7237:
  8279  0042F8  CFF6 FFE9          	movff	tblptrl,fsr0l
  8280  0042FC  CFF7 FFEA          	movff	tblptrh,fsr0h
  8281  004300  50EF               	movf	indf0,w,c
  8282  004302                     u7235:
  8283  004302  1809               	xorwf	??_strcmp^0,w,c
  8284  004304  A4D8               	btfss	status,2,c
  8285  004306  EF87  F021         	goto	u7231
  8286  00430A  EF89  F021         	goto	u7230
  8287  00430E                     u7231:
  8288  00430E  EFA2  F021         	goto	l7284
  8289  004312                     u7230:
  8290  004312  C005  FFF6         	movff	strcmp@l,tblptrl
  8291  004316  C006  FFF7         	movff	strcmp@l+1,tblptrh
  8292  00431A  0E00               	movlw	low (__mediumconst shr (0+16))
  8293  00431C  6EF8               	movwf	tblptru,c
  8294  00431E  0E0E               	movlw	(high __ramtop+-1)
  8295  004320  64F7               	cpfsgt	tblptrh,c
  8296  004322  D003               	bra	u7247
  8297  004324  0008               	tblrd		*
  8298  004326  50F5               	movf	tablat,w,c
  8299  004328  D005               	bra	u7240
  8300  00432A                     u7247:
  8301  00432A  CFF6 FFE9          	movff	tblptrl,fsr0l
  8302  00432E  CFF7 FFEA          	movff	tblptrh,fsr0h
  8303  004332  50EF               	movf	indf0,w,c
  8304  004334                     u7240:
  8305  004334  0900               	iorlw	0
  8306  004336  A4D8               	btfss	status,2,c
  8307  004338  EFA0  F021         	goto	u7251
  8308  00433C  EFA2  F021         	goto	u7250
  8309  004340                     u7251:
  8310  004340  EF64  F021         	goto	l7278
  8311  004344                     u7250:
  8312  004344                     l7284:
  8313  004344  C005  FFF6         	movff	strcmp@l,tblptrl
  8314  004348  C006  FFF7         	movff	strcmp@l+1,tblptrh
  8315  00434C  0E00               	movlw	low (__mediumconst shr (0+16))
  8316  00434E  6EF8               	movwf	tblptru,c
  8317  004350  0E0E               	movlw	(high __ramtop+-1)
  8318  004352  64F7               	cpfsgt	tblptrh,c
  8319  004354  D003               	bra	u7267
  8320  004356  0008               	tblrd		*
  8321  004358  50F5               	movf	tablat,w,c
  8322  00435A  D005               	bra	u7260
  8323  00435C                     u7267:
  8324  00435C  CFF6 FFE9          	movff	tblptrl,fsr0l
  8325  004360  CFF7 FFEA          	movff	tblptrh,fsr0h
  8326  004364  50EF               	movf	indf0,w,c
  8327  004366                     u7260:
  8328  004366  6E09               	movwf	??_strcmp^0,c
  8329  004368  C007  FFF6         	movff	strcmp@r,tblptrl
  8330  00436C  C008  FFF7         	movff	strcmp@r+1,tblptrh
  8331  004370                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8332  004370  6AF8               	clrf	tblptru,c
  8333  004372                     	endif
  8334  004372                     	if	0	;tblptru may be non-zero
  8335  004372                     	endif
  8336  004372  0008               	tblrd		*
  8337  004374  50F5               	movf	tablat,w,c
  8338  004376  5C09               	subwf	??_strcmp^0,w,c
  8339  004378  6E05               	movwf	?_strcmp^0,c
  8340  00437A  6A06               	clrf	(?_strcmp+1)^0,c
  8341  00437C  A0D8               	btfss	status,0,c
  8342  00437E  0606               	decf	(?_strcmp+1)^0,f,c
  8343  004380  0012               	return		;funcret
  8344  004382                     __end_of_strcmp:
  8345                           	opt callstack 0
  8346                           
  8347 ;; *************** function _DATAEE_ReadByte *****************
  8348 ;; Defined at:
  8349 ;;		line 187 in file "mcc_generated_files/memory.c"
  8350 ;; Parameters:    Size  Location     Type
  8351 ;;  bAdd            2    4[COMRAM] unsigned short 
  8352 ;; Auto vars:     Size  Location     Type
  8353 ;;		None
  8354 ;; Return value:  Size  Location     Type
  8355 ;;                  1    wreg      unsigned char 
  8356 ;; Registers used:
  8357 ;;		wreg, status,2, status,0
  8358 ;; Tracked objects:
  8359 ;;		On entry : 0/0
  8360 ;;		On exit  : 0/0
  8361 ;;		Unchanged: 0/0
  8362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8363 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8366 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8367 ;;Total ram usage:        2 bytes
  8368 ;; Hardware stack levels used:    1
  8369 ;; Hardware stack levels required when called:    4
  8370 ;; This function calls:
  8371 ;;		Nothing
  8372 ;; This function is called by:
  8373 ;;		_CardConfigIni
  8374 ;; This function uses a non-reentrant model
  8375 ;;
  8376                           
  8377                           	psect	text15
  8378  0050A0                     __ptext15:
  8379                           	opt callstack 0
  8380  0050A0                     _DATAEE_ReadByte:
  8381                           	opt callstack 23
  8382  0050A0                     
  8383                           ;mcc_generated_files/memory.c: 187: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 188: {;mcc_generated_files/memory.c: 189:     NVMADRH = ((bAdd >> 8) & 
      +                          0x03);
  8384  0050A0  5006               	movf	(DATAEE_ReadByte@bAdd+1)^0,w,c
  8385  0050A2  0B03               	andlw	3
  8386  0050A4  6E7F               	movwf	127,c	;volatile
  8387  0050A6                     
  8388                           ;mcc_generated_files/memory.c: 190:     NVMADRL = (bAdd & 0xFF);
  8389  0050A6  C005  FF7E         	movff	DATAEE_ReadByte@bAdd,3966	;volatile
  8390  0050AA                     
  8391                           ;mcc_generated_files/memory.c: 191:     NVMCON1bits.NVMREG = 0;
  8392  0050AA  0E3F               	movlw	-193
  8393  0050AC  1681               	andwf	129,f,c	;volsfr
  8394  0050AE                     
  8395                           ;mcc_generated_files/memory.c: 192:     NVMCON1bits.RD = 1;
  8396  0050AE  8081               	bsf	129,0,c	;volsfr
  8397  0050B0                     
  8398                           ;mcc_generated_files/memory.c: 193:     __nop();
  8399  0050B0  F000               	nop	
  8400  0050B2                     
  8401                           ;mcc_generated_files/memory.c: 194:     __nop();
  8402  0050B2  F000               	nop	
  8403  0050B4                     
  8404                           ;mcc_generated_files/memory.c: 196:     return (NVMDAT);
  8405  0050B4  5080               	movf	128,w,c	;volatile
  8406  0050B6  0012               	return		;funcret
  8407  0050B8                     __end_of_DATAEE_ReadByte:
  8408                           	opt callstack 0
  8409                           
  8410 ;; *************** function _SYSTEM_Initialize *****************
  8411 ;; Defined at:
  8412 ;;		line 50 in file "mcc_generated_files/mcc.c"
  8413 ;; Parameters:    Size  Location     Type
  8414 ;;		None
  8415 ;; Auto vars:     Size  Location     Type
  8416 ;;		None
  8417 ;; Return value:  Size  Location     Type
  8418 ;;                  1    wreg      void 
  8419 ;; Registers used:
  8420 ;;		wreg, status,2, status,0, cstack
  8421 ;; Tracked objects:
  8422 ;;		On entry : 0/0
  8423 ;;		On exit  : 0/0
  8424 ;;		Unchanged: 0/0
  8425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8430 ;;Total ram usage:        0 bytes
  8431 ;; Hardware stack levels used:    1
  8432 ;; Hardware stack levels required when called:    6
  8433 ;; This function calls:
  8434 ;;		_ADCC_DisableContinuousConversion
  8435 ;;		_ADCC_Initialize
  8436 ;;		_EUSART1_Initialize
  8437 ;;		_EUSART2_Initialize
  8438 ;;		_INTERRUPT_Initialize
  8439 ;;		_OSCILLATOR_Initialize
  8440 ;;		_PIN_MANAGER_Initialize
  8441 ;;		_PMD_Initialize
  8442 ;; This function is called by:
  8443 ;;		_main
  8444 ;; This function uses a non-reentrant model
  8445 ;;
  8446                           
  8447                           	psect	text16
  8448  00504A                     __ptext16:
  8449                           	opt callstack 0
  8450  00504A                     _SYSTEM_Initialize:
  8451                           	opt callstack 24
  8452  00504A                     
  8453                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  8454  00504A  ECF5  F028         	call	_INTERRUPT_Initialize	;wreg free
  8455  00504E                     
  8456                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  8457  00504E  EC36  F028         	call	_PMD_Initialize	;wreg free
  8458  005052                     
  8459                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  8460  005052  ECA7  F022         	call	_PIN_MANAGER_Initialize	;wreg free
  8461  005056                     
  8462                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  8463  005056  EC5C  F028         	call	_OSCILLATOR_Initialize	;wreg free
  8464  00505A                     
  8465                           ;mcc_generated_files/mcc.c: 56:     EUSART1_Initialize();
  8466  00505A  ECEE  F022         	call	_EUSART1_Initialize	;wreg free
  8467  00505E                     
  8468                           ;mcc_generated_files/mcc.c: 57:     EUSART2_Initialize();
  8469  00505E  EC2E  F023         	call	_EUSART2_Initialize	;wreg free
  8470  005062                     
  8471                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
  8472  005062  EC74  F025         	call	_ADCC_Initialize	;wreg free
  8473                           
  8474                           ;mcc_generated_files/mcc.c: 59:     ADCC_DisableContinuousConversion();
  8475  005066  ECF7  F028         	call	_ADCC_DisableContinuousConversion	;wreg free
  8476  00506A  0012               	return		;funcret
  8477  00506C                     __end_of_SYSTEM_Initialize:
  8478                           	opt callstack 0
  8479                           
  8480 ;; *************** function _PMD_Initialize *****************
  8481 ;; Defined at:
  8482 ;;		line 76 in file "mcc_generated_files/mcc.c"
  8483 ;; Parameters:    Size  Location     Type
  8484 ;;		None
  8485 ;; Auto vars:     Size  Location     Type
  8486 ;;		None
  8487 ;; Return value:  Size  Location     Type
  8488 ;;                  1    wreg      void 
  8489 ;; Registers used:
  8490 ;;		wreg, status,2
  8491 ;; Tracked objects:
  8492 ;;		On entry : 0/0
  8493 ;;		On exit  : 0/0
  8494 ;;		Unchanged: 0/0
  8495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8500 ;;Total ram usage:        0 bytes
  8501 ;; Hardware stack levels used:    1
  8502 ;; Hardware stack levels required when called:    4
  8503 ;; This function calls:
  8504 ;;		Nothing
  8505 ;; This function is called by:
  8506 ;;		_SYSTEM_Initialize
  8507 ;; This function uses a non-reentrant model
  8508 ;;
  8509                           
  8510                           	psect	text17
  8511  00506C                     __ptext17:
  8512                           	opt callstack 0
  8513  00506C                     _PMD_Initialize:
  8514                           	opt callstack 25
  8515  00506C                     
  8516                           ;mcc_generated_files/mcc.c: 79:     PMD0 = 0x00;
  8517  00506C  0E00               	movlw	0
  8518  00506E  010E               	movlb	14	; () banked
  8519  005070  6FE1               	movwf	225,b	;volatile
  8520                           
  8521                           ;mcc_generated_files/mcc.c: 81:     PMD1 = 0x00;
  8522  005072  0E00               	movlw	0
  8523  005074  6FE2               	movwf	226,b	;volatile
  8524                           
  8525                           ;mcc_generated_files/mcc.c: 83:     PMD2 = 0x00;
  8526  005076  0E00               	movlw	0
  8527  005078  6FE3               	movwf	227,b	;volatile
  8528                           
  8529                           ;mcc_generated_files/mcc.c: 85:     PMD3 = 0x00;
  8530  00507A  0E00               	movlw	0
  8531  00507C  6FE4               	movwf	228,b	;volatile
  8532                           
  8533                           ;mcc_generated_files/mcc.c: 87:     PMD4 = 0x00;
  8534  00507E  0E00               	movlw	0
  8535  005080  6FE5               	movwf	229,b	;volatile
  8536                           
  8537                           ;mcc_generated_files/mcc.c: 89:     PMD5 = 0x00;
  8538  005082  0E00               	movlw	0
  8539  005084  6FE6               	movwf	230,b	;volatile
  8540  005086                     
  8541                           ; BSR set to: 14
  8542  005086  0012               	return		;funcret
  8543  005088                     __end_of_PMD_Initialize:
  8544                           	opt callstack 0
  8545                           
  8546 ;; *************** function _PIN_MANAGER_Initialize *****************
  8547 ;; Defined at:
  8548 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  8549 ;; Parameters:    Size  Location     Type
  8550 ;;		None
  8551 ;; Auto vars:     Size  Location     Type
  8552 ;;		None
  8553 ;; Return value:  Size  Location     Type
  8554 ;;                  1    wreg      void 
  8555 ;; Registers used:
  8556 ;;		wreg, status,2
  8557 ;; Tracked objects:
  8558 ;;		On entry : 0/0
  8559 ;;		On exit  : 0/0
  8560 ;;		Unchanged: 0/0
  8561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8566 ;;Total ram usage:        0 bytes
  8567 ;; Hardware stack levels used:    1
  8568 ;; Hardware stack levels required when called:    4
  8569 ;; This function calls:
  8570 ;;		Nothing
  8571 ;; This function is called by:
  8572 ;;		_SYSTEM_Initialize
  8573 ;; This function uses a non-reentrant model
  8574 ;;
  8575                           
  8576                           	psect	text18
  8577  00454E                     __ptext18:
  8578                           	opt callstack 0
  8579  00454E                     _PIN_MANAGER_Initialize:
  8580                           	opt callstack 25
  8581  00454E                     
  8582                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  8583  00454E  0E00               	movlw	0
  8584  004550  6E87               	movwf	135,c	;volatile
  8585                           
  8586                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  8587  004552  0E00               	movlw	0
  8588  004554  6E86               	movwf	134,c	;volatile
  8589                           
  8590                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  8591  004556  0E00               	movlw	0
  8592  004558  6E83               	movwf	131,c	;volatile
  8593                           
  8594                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  8595  00455A  0E00               	movlw	0
  8596  00455C  6E84               	movwf	132,c	;volatile
  8597                           
  8598                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  8599  00455E  0E00               	movlw	0
  8600  004560  6E85               	movwf	133,c	;volatile
  8601                           
  8602                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  8603  004562  0E07               	movlw	7
  8604  004564  6E8C               	movwf	140,c	;volatile
  8605                           
  8606                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x07;
  8607  004566  0E07               	movlw	7
  8608  004568  6E88               	movwf	136,c	;volatile
  8609                           
  8610                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xBF;
  8611  00456A  0EBF               	movlw	191
  8612  00456C  6E89               	movwf	137,c	;volatile
  8613                           
  8614                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  8615  00456E  0EBF               	movlw	191
  8616  004570  6E8A               	movwf	138,c	;volatile
  8617                           
  8618                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFE;
  8619  004572  0EFE               	movlw	254
  8620  004574  6E8B               	movwf	139,c	;volatile
  8621  004576                     
  8622                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
  8623  004576  010F               	movlb	15	; () banked
  8624  004578  6926               	setf	38,b	;volatile
  8625                           
  8626                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x3B;
  8627  00457A  0E3B               	movlw	59
  8628  00457C  6F21               	movwf	33,b	;volatile
  8629                           
  8630                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x37;
  8631  00457E  0E37               	movlw	55
  8632  004580  6F19               	movwf	25,b	;volatile
  8633                           
  8634                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  8635  004582  0E07               	movlw	7
  8636  004584  6F2E               	movwf	46,b	;volatile
  8637  004586                     
  8638                           ; BSR set to: 15
  8639                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
  8640  004586  6911               	setf	17,b	;volatile
  8641                           
  8642                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  8643  004588  0E00               	movlw	0
  8644  00458A  6F25               	movwf	37,b	;volatile
  8645                           
  8646                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  8647  00458C  0E00               	movlw	0
  8648  00458E  6F2D               	movwf	45,b	;volatile
  8649                           
  8650                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  8651  004590  0E00               	movlw	0
  8652  004592  6F18               	movwf	24,b	;volatile
  8653                           
  8654                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  8655  004594  0E00               	movlw	0
  8656  004596  6F10               	movwf	16,b	;volatile
  8657                           
  8658                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  8659  004598  0E00               	movlw	0
  8660  00459A  6F20               	movwf	32,b	;volatile
  8661                           
  8662                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
  8663  00459C  0E00               	movlw	0
  8664  00459E  6F2C               	movwf	44,b	;volatile
  8665                           
  8666                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
  8667  0045A0  0E00               	movlw	0
  8668  0045A2  6F0F               	movwf	15,b	;volatile
  8669                           
  8670                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
  8671  0045A4  0E00               	movlw	0
  8672  0045A6  6F17               	movwf	23,b	;volatile
  8673                           
  8674                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
  8675  0045A8  0E00               	movlw	0
  8676  0045AA  6F1F               	movwf	31,b	;volatile
  8677                           
  8678                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
  8679  0045AC  0E00               	movlw	0
  8680  0045AE  6F24               	movwf	36,b	;volatile
  8681  0045B0                     
  8682                           ; BSR set to: 15
  8683                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
  8684  0045B0  690E               	setf	14,b	;volatile
  8685  0045B2                     
  8686                           ; BSR set to: 15
  8687                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
  8688  0045B2  6916               	setf	22,b	;volatile
  8689  0045B4                     
  8690                           ; BSR set to: 15
  8691                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
  8692  0045B4  691E               	setf	30,b	;volatile
  8693  0045B6                     
  8694                           ; BSR set to: 15
  8695                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
  8696  0045B6  6923               	setf	35,b	;volatile
  8697                           
  8698                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
  8699  0045B8  0E07               	movlw	7
  8700  0045BA  6F2B               	movwf	43,b	;volatile
  8701  0045BC                     
  8702                           ; BSR set to: 15
  8703                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
  8704  0045BC  690D               	setf	13,b	;volatile
  8705  0045BE                     
  8706                           ; BSR set to: 15
  8707                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
  8708  0045BE  6915               	setf	21,b	;volatile
  8709  0045C0                     
  8710                           ; BSR set to: 15
  8711                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
  8712  0045C0  691D               	setf	29,b	;volatile
  8713  0045C2                     
  8714                           ; BSR set to: 15
  8715                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
  8716  0045C2  6922               	setf	34,b	;volatile
  8717                           
  8718                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x0F;
  8719  0045C4  0E0F               	movlw	15
  8720  0045C6  6F2A               	movwf	42,b	;volatile
  8721                           
  8722                           ;mcc_generated_files/pin_manager.c: 127:     RX1PPS = 0x17;
  8723  0045C8  0E17               	movlw	23
  8724  0045CA  010E               	movlb	14	; () banked
  8725  0045CC  6FB5               	movwf	181,b	;volatile
  8726                           
  8727                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x0B;
  8728  0045CE  0E0B               	movlw	11
  8729  0045D0  6FF5               	movwf	245,b	;volatile
  8730                           
  8731                           ;mcc_generated_files/pin_manager.c: 129:     RC6PPS = 0x09;
  8732  0045D2  0E09               	movlw	9
  8733  0045D4  6FFD               	movwf	253,b	;volatile
  8734                           
  8735                           ;mcc_generated_files/pin_manager.c: 130:     RX2PPS = 0x0F;
  8736  0045D6  0E0F               	movlw	15
  8737  0045D8  6F8D               	movwf	141,b	;volatile
  8738  0045DA                     
  8739                           ; BSR set to: 14
  8740  0045DA  0012               	return		;funcret
  8741  0045DC                     __end_of_PIN_MANAGER_Initialize:
  8742                           	opt callstack 0
  8743                           
  8744 ;; *************** function _OSCILLATOR_Initialize *****************
  8745 ;; Defined at:
  8746 ;;		line 62 in file "mcc_generated_files/mcc.c"
  8747 ;; Parameters:    Size  Location     Type
  8748 ;;		None
  8749 ;; Auto vars:     Size  Location     Type
  8750 ;;		None
  8751 ;; Return value:  Size  Location     Type
  8752 ;;                  1    wreg      void 
  8753 ;; Registers used:
  8754 ;;		wreg, status,2
  8755 ;; Tracked objects:
  8756 ;;		On entry : 0/0
  8757 ;;		On exit  : 0/0
  8758 ;;		Unchanged: 0/0
  8759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8764 ;;Total ram usage:        0 bytes
  8765 ;; Hardware stack levels used:    1
  8766 ;; Hardware stack levels required when called:    4
  8767 ;; This function calls:
  8768 ;;		Nothing
  8769 ;; This function is called by:
  8770 ;;		_SYSTEM_Initialize
  8771 ;; This function uses a non-reentrant model
  8772 ;;
  8773                           
  8774                           	psect	text19
  8775  0050B8                     __ptext19:
  8776                           	opt callstack 0
  8777  0050B8                     _OSCILLATOR_Initialize:
  8778                           	opt callstack 25
  8779  0050B8                     
  8780                           ;mcc_generated_files/mcc.c: 65:     OSCCON1 = 0x60;
  8781  0050B8  0E60               	movlw	96
  8782  0050BA  010E               	movlb	14	; () banked
  8783  0050BC  6FD8               	movwf	216,b	;volatile
  8784                           
  8785                           ;mcc_generated_files/mcc.c: 67:     OSCCON3 = 0x00;
  8786  0050BE  0E00               	movlw	0
  8787  0050C0  6FDA               	movwf	218,b	;volatile
  8788                           
  8789                           ;mcc_generated_files/mcc.c: 69:     OSCEN = 0x00;
  8790  0050C2  0E00               	movlw	0
  8791  0050C4  6FDC               	movwf	220,b	;volatile
  8792                           
  8793                           ;mcc_generated_files/mcc.c: 71:     OSCFRQ = 0x06;
  8794  0050C6  0E06               	movlw	6
  8795  0050C8  6FDE               	movwf	222,b	;volatile
  8796                           
  8797                           ;mcc_generated_files/mcc.c: 73:     OSCTUNE = 0x00;
  8798  0050CA  0E00               	movlw	0
  8799  0050CC  6FDD               	movwf	221,b	;volatile
  8800  0050CE                     
  8801                           ; BSR set to: 14
  8802  0050CE  0012               	return		;funcret
  8803  0050D0                     __end_of_OSCILLATOR_Initialize:
  8804                           	opt callstack 0
  8805                           
  8806 ;; *************** function _INTERRUPT_Initialize *****************
  8807 ;; Defined at:
  8808 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  8809 ;; Parameters:    Size  Location     Type
  8810 ;;		None
  8811 ;; Auto vars:     Size  Location     Type
  8812 ;;		None
  8813 ;; Return value:  Size  Location     Type
  8814 ;;                  1    wreg      void 
  8815 ;; Registers used:
  8816 ;;		None
  8817 ;; Tracked objects:
  8818 ;;		On entry : 0/0
  8819 ;;		On exit  : 0/0
  8820 ;;		Unchanged: 0/0
  8821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8826 ;;Total ram usage:        0 bytes
  8827 ;; Hardware stack levels used:    1
  8828 ;; Hardware stack levels required when called:    4
  8829 ;; This function calls:
  8830 ;;		Nothing
  8831 ;; This function is called by:
  8832 ;;		_SYSTEM_Initialize
  8833 ;; This function uses a non-reentrant model
  8834 ;;
  8835                           
  8836                           	psect	text20
  8837  0051EA                     __ptext20:
  8838                           	opt callstack 0
  8839  0051EA                     _INTERRUPT_Initialize:
  8840                           	opt callstack 25
  8841  0051EA                     
  8842                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
  8843  0051EA  9AF2               	bcf	242,5,c	;volatile
  8844  0051EC  0012               	return		;funcret
  8845  0051EE                     __end_of_INTERRUPT_Initialize:
  8846                           	opt callstack 0
  8847                           
  8848 ;; *************** function _EUSART2_Initialize *****************
  8849 ;; Defined at:
  8850 ;;		line 88 in file "mcc_generated_files/eusart2.c"
  8851 ;; Parameters:    Size  Location     Type
  8852 ;;		None
  8853 ;; Auto vars:     Size  Location     Type
  8854 ;;		None
  8855 ;; Return value:  Size  Location     Type
  8856 ;;                  1    wreg      void 
  8857 ;; Registers used:
  8858 ;;		wreg, status,2, status,0, cstack
  8859 ;; Tracked objects:
  8860 ;;		On entry : 0/0
  8861 ;;		On exit  : 0/0
  8862 ;;		Unchanged: 0/0
  8863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8868 ;;Total ram usage:        0 bytes
  8869 ;; Hardware stack levels used:    1
  8870 ;; Hardware stack levels required when called:    5
  8871 ;; This function calls:
  8872 ;;		_EUSART2_SetErrorHandler
  8873 ;;		_EUSART2_SetFramingErrorHandler
  8874 ;;		_EUSART2_SetOverrunErrorHandler
  8875 ;;		_EUSART2_SetRxInterruptHandler
  8876 ;;		_EUSART2_SetTxInterruptHandler
  8877 ;; This function is called by:
  8878 ;;		_SYSTEM_Initialize
  8879 ;; This function uses a non-reentrant model
  8880 ;;
  8881                           
  8882                           	psect	text21
  8883  00465C                     __ptext21:
  8884                           	opt callstack 0
  8885  00465C                     _EUSART2_Initialize:
  8886                           	opt callstack 24
  8887  00465C                     
  8888                           ;mcc_generated_files/eusart2.c: 91:     PIE3bits.RC2IE = 0;
  8889  00465C  010E               	movlb	14	; () banked
  8890  00465E  9FC5               	bcf	197,7,b	;volatile
  8891  004660                     
  8892                           ; BSR set to: 14
  8893                           ;mcc_generated_files/eusart2.c: 92:     EUSART2_SetRxInterruptHandler(EUSART2_Receive_IS
      +                          R);
  8894  004660  0EBE               	movlw	low _EUSART2_Receive_ISR
  8895  004662  6E05               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler^0,c
  8896  004664  0E3F               	movlw	high _EUSART2_Receive_ISR
  8897  004666  6E06               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)^0,c
  8898  004668  ECB0  F028         	call	_EUSART2_SetRxInterruptHandler	;wreg free
  8899  00466C                     
  8900                           ;mcc_generated_files/eusart2.c: 93:     PIE3bits.TX2IE = 0;
  8901  00466C  010E               	movlb	14	; () banked
  8902  00466E  9DC5               	bcf	197,6,b	;volatile
  8903                           
  8904                           ;mcc_generated_files/eusart2.c: 94:     EUSART2_SetTxInterruptHandler(EUSART2_Transmit_I
      +                          SR);
  8905  004670  0E1E               	movlw	low _EUSART2_Transmit_ISR
  8906  004672  6E05               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler^0,c
  8907  004674  0E4C               	movlw	high _EUSART2_Transmit_ISR
  8908  004676  6E06               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)^0,c
  8909  004678  ECAB  F028         	call	_EUSART2_SetTxInterruptHandler	;wreg free
  8910  00467C                     
  8911                           ;mcc_generated_files/eusart2.c: 98:     BAUD2CON = 0x08;
  8912  00467C  0E08               	movlw	8
  8913  00467E  010E               	movlb	14	; () banked
  8914  004680  6F9F               	movwf	159,b	;volatile
  8915  004682                     
  8916                           ; BSR set to: 14
  8917                           ;mcc_generated_files/eusart2.c: 101:     RC2STA = 0x90;
  8918  004682  0E90               	movlw	144
  8919  004684  6F9D               	movwf	157,b	;volatile
  8920  004686                     
  8921                           ; BSR set to: 14
  8922                           ;mcc_generated_files/eusart2.c: 104:     TX2STA = 0x24;
  8923  004686  0E24               	movlw	36
  8924  004688  6F9E               	movwf	158,b	;volatile
  8925  00468A                     
  8926                           ; BSR set to: 14
  8927                           ;mcc_generated_files/eusart2.c: 108:     SP2BRGL = 0xA0;
  8928  00468A  0EA0               	movlw	160
  8929  00468C  6F9B               	movwf	155,b	;volatile
  8930  00468E                     
  8931                           ; BSR set to: 14
  8932                           ;mcc_generated_files/eusart2.c: 112:     SP2BRGH = 0x01;
  8933  00468E  0E01               	movlw	1
  8934  004690  6F9C               	movwf	156,b	;volatile
  8935  004692                     
  8936                           ; BSR set to: 14
  8937                           ;mcc_generated_files/eusart2.c: 115:     EUSART2_SetFramingErrorHandler(EUSART2_DefaultF
      +                          ramingErrorHandler);
  8938  004692  0EF2               	movlw	low _EUSART2_DefaultFramingErrorHandler
  8939  004694  6E05               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler^0,c
  8940  004696  0E51               	movlw	high _EUSART2_DefaultFramingErrorHandler
  8941  004698  6E06               	movwf	(EUSART2_SetFramingErrorHandler@interruptHandler+1)^0,c
  8942  00469A  ECBA  F028         	call	_EUSART2_SetFramingErrorHandler	;wreg free
  8943  00469E                     
  8944                           ;mcc_generated_files/eusart2.c: 116:     EUSART2_SetOverrunErrorHandler(EUSART2_DefaultO
      +                          verrunErrorHandler);
  8945  00469E  0EC4               	movlw	low _EUSART2_DefaultOverrunErrorHandler
  8946  0046A0  6E05               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler^0,c
  8947  0046A2  0E51               	movlw	high _EUSART2_DefaultOverrunErrorHandler
  8948  0046A4  6E06               	movwf	(EUSART2_SetOverrunErrorHandler@interruptHandler+1)^0,c
  8949  0046A6  ECB5  F028         	call	_EUSART2_SetOverrunErrorHandler	;wreg free
  8950  0046AA                     
  8951                           ;mcc_generated_files/eusart2.c: 117:     EUSART2_SetErrorHandler(EUSART2_DefaultErrorHan
      +                          dler);
  8952  0046AA  0ED8               	movlw	low _EUSART2_DefaultErrorHandler
  8953  0046AC  6E05               	movwf	EUSART2_SetErrorHandler@interruptHandler^0,c
  8954  0046AE  0E51               	movlw	high _EUSART2_DefaultErrorHandler
  8955  0046B0  6E06               	movwf	(EUSART2_SetErrorHandler@interruptHandler+1)^0,c
  8956  0046B2  ECBF  F028         	call	_EUSART2_SetErrorHandler	;wreg free
  8957                           
  8958                           ;mcc_generated_files/eusart2.c: 119:     eusart2RxLastError.status = 0;
  8959  0046B6  0E00               	movlw	0
  8960  0046B8  0100               	movlb	0	; () banked
  8961  0046BA  6FE5               	movwf	_eusart2RxLastError& (0+255),b	;volatile
  8962                           
  8963                           ;mcc_generated_files/eusart2.c: 122:     eusart2TxHead = 0;
  8964  0046BC  0E00               	movlw	0
  8965  0046BE  6FE9               	movwf	_eusart2TxHead& (0+255),b	;volatile
  8966                           
  8967                           ;mcc_generated_files/eusart2.c: 123:     eusart2TxTail = 0;
  8968  0046C0  0E00               	movlw	0
  8969  0046C2  6FE8               	movwf	_eusart2TxTail& (0+255),b	;volatile
  8970                           
  8971                           ;mcc_generated_files/eusart2.c: 124:     eusart2TxBufferRemaining = sizeof(eusart2TxBuff
      +                          er);
  8972  0046C4  0E20               	movlw	32
  8973  0046C6  6FFF               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
  8974                           
  8975                           ;mcc_generated_files/eusart2.c: 126:     eusart2RxHead = 0;
  8976  0046C8  0E00               	movlw	0
  8977  0046CA  6E5A               	movwf	_eusart2RxHead^0,c	;volatile
  8978                           
  8979                           ;mcc_generated_files/eusart2.c: 127:     eusart2RxTail = 0;
  8980  0046CC  0E00               	movlw	0
  8981  0046CE  6FE7               	movwf	_eusart2RxTail& (0+255),b	;volatile
  8982                           
  8983                           ;mcc_generated_files/eusart2.c: 128:     eusart2RxCount = 0;
  8984  0046D0  0E00               	movlw	0
  8985  0046D2  6FE6               	movwf	_eusart2RxCount& (0+255),b	;volatile
  8986  0046D4                     
  8987                           ; BSR set to: 0
  8988                           ;mcc_generated_files/eusart2.c: 131:     PIE3bits.RC2IE = 1;
  8989  0046D4  010E               	movlb	14	; () banked
  8990  0046D6  8FC5               	bsf	197,7,b	;volatile
  8991  0046D8                     
  8992                           ; BSR set to: 14
  8993  0046D8  0012               	return		;funcret
  8994  0046DA                     __end_of_EUSART2_Initialize:
  8995                           	opt callstack 0
  8996                           
  8997 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
  8998 ;; Defined at:
  8999 ;;		line 287 in file "mcc_generated_files/eusart2.c"
  9000 ;; Parameters:    Size  Location     Type
  9001 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  9002 ;;		 -> EUSART2_Transmit_ISR(1), 
  9003 ;; Auto vars:     Size  Location     Type
  9004 ;;		None
  9005 ;; Return value:  Size  Location     Type
  9006 ;;                  1    wreg      void 
  9007 ;; Registers used:
  9008 ;;		wreg, status,2, status,0
  9009 ;; Tracked objects:
  9010 ;;		On entry : 0/0
  9011 ;;		On exit  : 0/0
  9012 ;;		Unchanged: 0/0
  9013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9014 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9017 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9018 ;;Total ram usage:        2 bytes
  9019 ;; Hardware stack levels used:    1
  9020 ;; Hardware stack levels required when called:    4
  9021 ;; This function calls:
  9022 ;;		Nothing
  9023 ;; This function is called by:
  9024 ;;		_EUSART2_Initialize
  9025 ;; This function uses a non-reentrant model
  9026 ;;
  9027                           
  9028                           	psect	text22
  9029  005156                     __ptext22:
  9030                           	opt callstack 0
  9031  005156                     _EUSART2_SetTxInterruptHandler:
  9032                           	opt callstack 24
  9033  005156                     
  9034                           ;mcc_generated_files/eusart2.c: 288:     EUSART2_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  9035  005156  C005  F1EB         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
  9036  00515A  C006  F1EC         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
  9037  00515E  0012               	return		;funcret
  9038  005160                     __end_of_EUSART2_SetTxInterruptHandler:
  9039                           	opt callstack 0
  9040                           
  9041 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
  9042 ;; Defined at:
  9043 ;;		line 291 in file "mcc_generated_files/eusart2.c"
  9044 ;; Parameters:    Size  Location     Type
  9045 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  9046 ;;		 -> EUSART2_Receive_ISR(1), 
  9047 ;; Auto vars:     Size  Location     Type
  9048 ;;		None
  9049 ;; Return value:  Size  Location     Type
  9050 ;;                  1    wreg      void 
  9051 ;; Registers used:
  9052 ;;		wreg, status,2, status,0
  9053 ;; Tracked objects:
  9054 ;;		On entry : 0/0
  9055 ;;		On exit  : 0/0
  9056 ;;		Unchanged: 0/0
  9057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9058 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9061 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9062 ;;Total ram usage:        2 bytes
  9063 ;; Hardware stack levels used:    1
  9064 ;; Hardware stack levels required when called:    4
  9065 ;; This function calls:
  9066 ;;		Nothing
  9067 ;; This function is called by:
  9068 ;;		_EUSART2_Initialize
  9069 ;; This function uses a non-reentrant model
  9070 ;;
  9071                           
  9072                           	psect	text23
  9073  005160                     __ptext23:
  9074                           	opt callstack 0
  9075  005160                     _EUSART2_SetRxInterruptHandler:
  9076                           	opt callstack 24
  9077  005160                     
  9078                           ;mcc_generated_files/eusart2.c: 292:     EUSART2_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  9079  005160  C005  F1E9         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
  9080  005164  C006  F1EA         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
  9081  005168  0012               	return		;funcret
  9082  00516A                     __end_of_EUSART2_SetRxInterruptHandler:
  9083                           	opt callstack 0
  9084                           
  9085 ;; *************** function _EUSART2_SetOverrunErrorHandler *****************
  9086 ;; Defined at:
  9087 ;;		line 279 in file "mcc_generated_files/eusart2.c"
  9088 ;; Parameters:    Size  Location     Type
  9089 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  9090 ;;		 -> EUSART2_DefaultOverrunErrorHandler(1), 
  9091 ;; Auto vars:     Size  Location     Type
  9092 ;;		None
  9093 ;; Return value:  Size  Location     Type
  9094 ;;                  1    wreg      void 
  9095 ;; Registers used:
  9096 ;;		wreg, status,2, status,0
  9097 ;; Tracked objects:
  9098 ;;		On entry : 0/0
  9099 ;;		On exit  : 0/0
  9100 ;;		Unchanged: 0/0
  9101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9102 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9105 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9106 ;;Total ram usage:        2 bytes
  9107 ;; Hardware stack levels used:    1
  9108 ;; Hardware stack levels required when called:    4
  9109 ;; This function calls:
  9110 ;;		Nothing
  9111 ;; This function is called by:
  9112 ;;		_EUSART2_Initialize
  9113 ;; This function uses a non-reentrant model
  9114 ;;
  9115                           
  9116                           	psect	text24
  9117  00516A                     __ptext24:
  9118                           	opt callstack 0
  9119  00516A                     _EUSART2_SetOverrunErrorHandler:
  9120                           	opt callstack 24
  9121  00516A                     
  9122                           ;mcc_generated_files/eusart2.c: 280:     EUSART2_OverrunErrorHandler = interruptHandler;
  9123  00516A  C005  F1E1         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler,_EUSART2_OverrunErrorHandler
  9124  00516E  C006  F1E2         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler+1,_EUSART2_OverrunErrorHandler+1
  9125  005172  0012               	return		;funcret
  9126  005174                     __end_of_EUSART2_SetOverrunErrorHandler:
  9127                           	opt callstack 0
  9128                           
  9129 ;; *************** function _EUSART2_SetFramingErrorHandler *****************
  9130 ;; Defined at:
  9131 ;;		line 275 in file "mcc_generated_files/eusart2.c"
  9132 ;; Parameters:    Size  Location     Type
  9133 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  9134 ;;		 -> EUSART2_DefaultFramingErrorHandler(1), 
  9135 ;; Auto vars:     Size  Location     Type
  9136 ;;		None
  9137 ;; Return value:  Size  Location     Type
  9138 ;;                  1    wreg      void 
  9139 ;; Registers used:
  9140 ;;		wreg, status,2, status,0
  9141 ;; Tracked objects:
  9142 ;;		On entry : 0/0
  9143 ;;		On exit  : 0/0
  9144 ;;		Unchanged: 0/0
  9145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9146 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9149 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9150 ;;Total ram usage:        2 bytes
  9151 ;; Hardware stack levels used:    1
  9152 ;; Hardware stack levels required when called:    4
  9153 ;; This function calls:
  9154 ;;		Nothing
  9155 ;; This function is called by:
  9156 ;;		_EUSART2_Initialize
  9157 ;; This function uses a non-reentrant model
  9158 ;;
  9159                           
  9160                           	psect	text25
  9161  005174                     __ptext25:
  9162                           	opt callstack 0
  9163  005174                     _EUSART2_SetFramingErrorHandler:
  9164                           	opt callstack 24
  9165  005174                     
  9166                           ;mcc_generated_files/eusart2.c: 276:     EUSART2_FramingErrorHandler = interruptHandler;
  9167  005174  C005  F1E3         	movff	EUSART2_SetFramingErrorHandler@interruptHandler,_EUSART2_FramingErrorHandler
  9168  005178  C006  F1E4         	movff	EUSART2_SetFramingErrorHandler@interruptHandler+1,_EUSART2_FramingErrorHandler+1
  9169  00517C  0012               	return		;funcret
  9170  00517E                     __end_of_EUSART2_SetFramingErrorHandler:
  9171                           	opt callstack 0
  9172                           
  9173 ;; *************** function _EUSART2_SetErrorHandler *****************
  9174 ;; Defined at:
  9175 ;;		line 283 in file "mcc_generated_files/eusart2.c"
  9176 ;; Parameters:    Size  Location     Type
  9177 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  9178 ;;		 -> EUSART2_DefaultErrorHandler(1), 
  9179 ;; Auto vars:     Size  Location     Type
  9180 ;;		None
  9181 ;; Return value:  Size  Location     Type
  9182 ;;                  1    wreg      void 
  9183 ;; Registers used:
  9184 ;;		wreg, status,2, status,0
  9185 ;; Tracked objects:
  9186 ;;		On entry : 0/0
  9187 ;;		On exit  : 0/0
  9188 ;;		Unchanged: 0/0
  9189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9190 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9193 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9194 ;;Total ram usage:        2 bytes
  9195 ;; Hardware stack levels used:    1
  9196 ;; Hardware stack levels required when called:    4
  9197 ;; This function calls:
  9198 ;;		Nothing
  9199 ;; This function is called by:
  9200 ;;		_EUSART2_Initialize
  9201 ;; This function uses a non-reentrant model
  9202 ;;
  9203                           
  9204                           	psect	text26
  9205  00517E                     __ptext26:
  9206                           	opt callstack 0
  9207  00517E                     _EUSART2_SetErrorHandler:
  9208                           	opt callstack 24
  9209  00517E                     
  9210                           ;mcc_generated_files/eusart2.c: 284:     EUSART2_ErrorHandler = interruptHandler;
  9211  00517E  C005  F1DF         	movff	EUSART2_SetErrorHandler@interruptHandler,_EUSART2_ErrorHandler
  9212  005182  C006  F1E0         	movff	EUSART2_SetErrorHandler@interruptHandler+1,_EUSART2_ErrorHandler+1
  9213  005186  0012               	return		;funcret
  9214  005188                     __end_of_EUSART2_SetErrorHandler:
  9215                           	opt callstack 0
  9216                           
  9217 ;; *************** function _EUSART1_Initialize *****************
  9218 ;; Defined at:
  9219 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  9220 ;; Parameters:    Size  Location     Type
  9221 ;;		None
  9222 ;; Auto vars:     Size  Location     Type
  9223 ;;		None
  9224 ;; Return value:  Size  Location     Type
  9225 ;;                  1    wreg      void 
  9226 ;; Registers used:
  9227 ;;		wreg, status,2, status,0, cstack
  9228 ;; Tracked objects:
  9229 ;;		On entry : 0/0
  9230 ;;		On exit  : 0/0
  9231 ;;		Unchanged: 0/0
  9232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9237 ;;Total ram usage:        0 bytes
  9238 ;; Hardware stack levels used:    1
  9239 ;; Hardware stack levels required when called:    5
  9240 ;; This function calls:
  9241 ;;		_EUSART1_SetErrorHandler
  9242 ;;		_EUSART1_SetFramingErrorHandler
  9243 ;;		_EUSART1_SetOverrunErrorHandler
  9244 ;;		_EUSART1_SetRxInterruptHandler
  9245 ;;		_EUSART1_SetTxInterruptHandler
  9246 ;; This function is called by:
  9247 ;;		_SYSTEM_Initialize
  9248 ;; This function uses a non-reentrant model
  9249 ;;
  9250                           
  9251                           	psect	text27
  9252  0045DC                     __ptext27:
  9253                           	opt callstack 0
  9254  0045DC                     _EUSART1_Initialize:
  9255                           	opt callstack 24
  9256  0045DC                     
  9257                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
  9258  0045DC  010E               	movlb	14	; () banked
  9259  0045DE  9BC5               	bcf	197,5,b	;volatile
  9260  0045E0                     
  9261                           ; BSR set to: 14
  9262                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  9263  0045E0  0E04               	movlw	low _EUSART1_Receive_ISR
  9264  0045E2  6E05               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
  9265  0045E4  0E42               	movlw	high _EUSART1_Receive_ISR
  9266  0045E6  6E06               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
  9267  0045E8  ECC9  F028         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  9268  0045EC                     
  9269                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
  9270  0045EC  010E               	movlb	14	; () banked
  9271  0045EE  99C5               	bcf	197,4,b	;volatile
  9272                           
  9273                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  9274  0045F0  0EEE               	movlw	low _EUSART1_Transmit_ISR
  9275  0045F2  6E05               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
  9276  0045F4  0E4C               	movlw	high _EUSART1_Transmit_ISR
  9277  0045F6  6E06               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
  9278  0045F8  ECC4  F028         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  9279  0045FC                     
  9280                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
  9281  0045FC  0E08               	movlw	8
  9282  0045FE  6E9F               	movwf	159,c	;volatile
  9283  004600                     
  9284                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
  9285  004600  0E90               	movlw	144
  9286  004602  6E9D               	movwf	157,c	;volatile
  9287  004604                     
  9288                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
  9289  004604  0E24               	movlw	36
  9290  004606  6E9E               	movwf	158,c	;volatile
  9291  004608                     
  9292                           ;mcc_generated_files/eusart1.c: 108:     SP1BRGL = 0xA0;
  9293  004608  0EA0               	movlw	160
  9294  00460A  6E9B               	movwf	155,c	;volatile
  9295  00460C                     
  9296                           ;mcc_generated_files/eusart1.c: 111:     SP1BRGH = 0x03;
  9297  00460C  0E03               	movlw	3
  9298  00460E  6E9C               	movwf	156,c	;volatile
  9299  004610                     
  9300                           ;mcc_generated_files/eusart1.c: 112:     SP1BRGH = 0x01;
  9301  004610  0E01               	movlw	1
  9302  004612  6E9C               	movwf	156,c	;volatile
  9303                           
  9304                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  9305  004614  0EF4               	movlw	low _EUSART1_DefaultFramingErrorHandler
  9306  004616  6E05               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  9307  004618  0E51               	movlw	high _EUSART1_DefaultFramingErrorHandler
  9308  00461A  6E06               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  9309  00461C  ECD3  F028         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  9310                           
  9311                           ;mcc_generated_files/eusart1.c: 116:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  9312  004620  0EDE               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  9313  004622  6E05               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  9314  004624  0E51               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  9315  004626  6E06               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  9316  004628  ECCE  F028         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  9317                           
  9318                           ;mcc_generated_files/eusart1.c: 117:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  9319  00462C  0EE4               	movlw	low _EUSART1_DefaultErrorHandler
  9320  00462E  6E05               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  9321  004630  0E51               	movlw	high _EUSART1_DefaultErrorHandler
  9322  004632  6E06               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  9323  004634  ECD8  F028         	call	_EUSART1_SetErrorHandler	;wreg free
  9324  004638                     
  9325                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  9326  004638  0E00               	movlw	0
  9327  00463A  0100               	movlb	0	; () banked
  9328  00463C  6FE0               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  9329  00463E                     
  9330                           ; BSR set to: 0
  9331                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxHead = 0;
  9332  00463E  0E00               	movlw	0
  9333  004640  6FE4               	movwf	_eusart1TxHead& (0+255),b	;volatile
  9334  004642                     
  9335                           ; BSR set to: 0
  9336                           ;mcc_generated_files/eusart1.c: 123:     eusart1TxTail = 0;
  9337  004642  0E00               	movlw	0
  9338  004644  6FE3               	movwf	_eusart1TxTail& (0+255),b	;volatile
  9339  004646                     
  9340                           ; BSR set to: 0
  9341                           ;mcc_generated_files/eusart1.c: 124:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  9342  004646  0E10               	movlw	16
  9343  004648  6FFE               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
  9344  00464A                     
  9345                           ; BSR set to: 0
  9346                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxHead = 0;
  9347  00464A  0E00               	movlw	0
  9348  00464C  6E59               	movwf	_eusart1RxHead^0,c	;volatile
  9349  00464E                     
  9350                           ; BSR set to: 0
  9351                           ;mcc_generated_files/eusart1.c: 127:     eusart1RxTail = 0;
  9352  00464E  0E00               	movlw	0
  9353  004650  6FE2               	movwf	_eusart1RxTail& (0+255),b	;volatile
  9354  004652                     
  9355                           ; BSR set to: 0
  9356                           ;mcc_generated_files/eusart1.c: 128:     eusart1RxCount = 0;
  9357  004652  0E00               	movlw	0
  9358  004654  6FE1               	movwf	_eusart1RxCount& (0+255),b	;volatile
  9359  004656                     
  9360                           ; BSR set to: 0
  9361                           ;mcc_generated_files/eusart1.c: 131:     PIE3bits.RC1IE = 1;
  9362  004656  010E               	movlb	14	; () banked
  9363  004658  8BC5               	bsf	197,5,b	;volatile
  9364  00465A                     
  9365                           ; BSR set to: 14
  9366  00465A  0012               	return		;funcret
  9367  00465C                     __end_of_EUSART1_Initialize:
  9368                           	opt callstack 0
  9369                           
  9370 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  9371 ;; Defined at:
  9372 ;;		line 278 in file "mcc_generated_files/eusart1.c"
  9373 ;; Parameters:    Size  Location     Type
  9374 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  9375 ;;		 -> EUSART1_Transmit_ISR(1), 
  9376 ;; Auto vars:     Size  Location     Type
  9377 ;;		None
  9378 ;; Return value:  Size  Location     Type
  9379 ;;                  1    wreg      void 
  9380 ;; Registers used:
  9381 ;;		wreg, status,2, status,0
  9382 ;; Tracked objects:
  9383 ;;		On entry : 0/0
  9384 ;;		On exit  : 0/0
  9385 ;;		Unchanged: 0/0
  9386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9387 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9390 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9391 ;;Total ram usage:        2 bytes
  9392 ;; Hardware stack levels used:    1
  9393 ;; Hardware stack levels required when called:    4
  9394 ;; This function calls:
  9395 ;;		Nothing
  9396 ;; This function is called by:
  9397 ;;		_EUSART1_Initialize
  9398 ;; This function uses a non-reentrant model
  9399 ;;
  9400                           
  9401                           	psect	text28
  9402  005188                     __ptext28:
  9403                           	opt callstack 0
  9404  005188                     _EUSART1_SetTxInterruptHandler:
  9405                           	opt callstack 24
  9406  005188                     
  9407                           ;mcc_generated_files/eusart1.c: 279:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  9408  005188  C005  F1E7         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  9409  00518C  C006  F1E8         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  9410  005190  0012               	return		;funcret
  9411  005192                     __end_of_EUSART1_SetTxInterruptHandler:
  9412                           	opt callstack 0
  9413                           
  9414 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  9415 ;; Defined at:
  9416 ;;		line 282 in file "mcc_generated_files/eusart1.c"
  9417 ;; Parameters:    Size  Location     Type
  9418 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  9419 ;;		 -> EUSART1_Receive_ISR(1), 
  9420 ;; Auto vars:     Size  Location     Type
  9421 ;;		None
  9422 ;; Return value:  Size  Location     Type
  9423 ;;                  1    wreg      void 
  9424 ;; Registers used:
  9425 ;;		wreg, status,2, status,0
  9426 ;; Tracked objects:
  9427 ;;		On entry : 0/0
  9428 ;;		On exit  : 0/0
  9429 ;;		Unchanged: 0/0
  9430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9431 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9434 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9435 ;;Total ram usage:        2 bytes
  9436 ;; Hardware stack levels used:    1
  9437 ;; Hardware stack levels required when called:    4
  9438 ;; This function calls:
  9439 ;;		Nothing
  9440 ;; This function is called by:
  9441 ;;		_EUSART1_Initialize
  9442 ;; This function uses a non-reentrant model
  9443 ;;
  9444                           
  9445                           	psect	text29
  9446  005192                     __ptext29:
  9447                           	opt callstack 0
  9448  005192                     _EUSART1_SetRxInterruptHandler:
  9449                           	opt callstack 24
  9450  005192                     
  9451                           ;mcc_generated_files/eusart1.c: 283:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  9452  005192  C005  F1E5         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  9453  005196  C006  F1E6         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  9454  00519A  0012               	return		;funcret
  9455  00519C                     __end_of_EUSART1_SetRxInterruptHandler:
  9456                           	opt callstack 0
  9457                           
  9458 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  9459 ;; Defined at:
  9460 ;;		line 270 in file "mcc_generated_files/eusart1.c"
  9461 ;; Parameters:    Size  Location     Type
  9462 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  9463 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  9464 ;; Auto vars:     Size  Location     Type
  9465 ;;		None
  9466 ;; Return value:  Size  Location     Type
  9467 ;;                  1    wreg      void 
  9468 ;; Registers used:
  9469 ;;		wreg, status,2, status,0
  9470 ;; Tracked objects:
  9471 ;;		On entry : 0/0
  9472 ;;		On exit  : 0/0
  9473 ;;		Unchanged: 0/0
  9474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9475 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9478 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9479 ;;Total ram usage:        2 bytes
  9480 ;; Hardware stack levels used:    1
  9481 ;; Hardware stack levels required when called:    4
  9482 ;; This function calls:
  9483 ;;		Nothing
  9484 ;; This function is called by:
  9485 ;;		_EUSART1_Initialize
  9486 ;; This function uses a non-reentrant model
  9487 ;;
  9488                           
  9489                           	psect	text30
  9490  00519C                     __ptext30:
  9491                           	opt callstack 0
  9492  00519C                     _EUSART1_SetOverrunErrorHandler:
  9493                           	opt callstack 24
  9494  00519C                     
  9495                           ;mcc_generated_files/eusart1.c: 271:     EUSART1_OverrunErrorHandler = interruptHandler;
  9496  00519C  C005  F1DB         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  9497  0051A0  C006  F1DC         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  9498  0051A4  0012               	return		;funcret
  9499  0051A6                     __end_of_EUSART1_SetOverrunErrorHandler:
  9500                           	opt callstack 0
  9501                           
  9502 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  9503 ;; Defined at:
  9504 ;;		line 266 in file "mcc_generated_files/eusart1.c"
  9505 ;; Parameters:    Size  Location     Type
  9506 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  9507 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  9508 ;; Auto vars:     Size  Location     Type
  9509 ;;		None
  9510 ;; Return value:  Size  Location     Type
  9511 ;;                  1    wreg      void 
  9512 ;; Registers used:
  9513 ;;		wreg, status,2, status,0
  9514 ;; Tracked objects:
  9515 ;;		On entry : 0/0
  9516 ;;		On exit  : 0/0
  9517 ;;		Unchanged: 0/0
  9518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9519 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9522 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9523 ;;Total ram usage:        2 bytes
  9524 ;; Hardware stack levels used:    1
  9525 ;; Hardware stack levels required when called:    4
  9526 ;; This function calls:
  9527 ;;		Nothing
  9528 ;; This function is called by:
  9529 ;;		_EUSART1_Initialize
  9530 ;; This function uses a non-reentrant model
  9531 ;;
  9532                           
  9533                           	psect	text31
  9534  0051A6                     __ptext31:
  9535                           	opt callstack 0
  9536  0051A6                     _EUSART1_SetFramingErrorHandler:
  9537                           	opt callstack 24
  9538  0051A6                     
  9539                           ;mcc_generated_files/eusart1.c: 267:     EUSART1_FramingErrorHandler = interruptHandler;
  9540  0051A6  C005  F1DD         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  9541  0051AA  C006  F1DE         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  9542  0051AE  0012               	return		;funcret
  9543  0051B0                     __end_of_EUSART1_SetFramingErrorHandler:
  9544                           	opt callstack 0
  9545                           
  9546 ;; *************** function _EUSART1_SetErrorHandler *****************
  9547 ;; Defined at:
  9548 ;;		line 274 in file "mcc_generated_files/eusart1.c"
  9549 ;; Parameters:    Size  Location     Type
  9550 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  9551 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  9552 ;; Auto vars:     Size  Location     Type
  9553 ;;		None
  9554 ;; Return value:  Size  Location     Type
  9555 ;;                  1    wreg      void 
  9556 ;; Registers used:
  9557 ;;		wreg, status,2, status,0
  9558 ;; Tracked objects:
  9559 ;;		On entry : 0/0
  9560 ;;		On exit  : 0/0
  9561 ;;		Unchanged: 0/0
  9562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9563 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9566 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9567 ;;Total ram usage:        2 bytes
  9568 ;; Hardware stack levels used:    1
  9569 ;; Hardware stack levels required when called:    4
  9570 ;; This function calls:
  9571 ;;		Nothing
  9572 ;; This function is called by:
  9573 ;;		_EUSART1_Initialize
  9574 ;; This function uses a non-reentrant model
  9575 ;;
  9576                           
  9577                           	psect	text32
  9578  0051B0                     __ptext32:
  9579                           	opt callstack 0
  9580  0051B0                     _EUSART1_SetErrorHandler:
  9581                           	opt callstack 24
  9582  0051B0                     
  9583                           ;mcc_generated_files/eusart1.c: 275:     EUSART1_ErrorHandler = interruptHandler;
  9584  0051B0  C005  F1D9         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  9585  0051B4  C006  F1DA         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  9586  0051B8  0012               	return		;funcret
  9587  0051BA                     __end_of_EUSART1_SetErrorHandler:
  9588                           	opt callstack 0
  9589                           
  9590 ;; *************** function _ADCC_Initialize *****************
  9591 ;; Defined at:
  9592 ;;		line 62 in file "mcc_generated_files/adcc.c"
  9593 ;; Parameters:    Size  Location     Type
  9594 ;;		None
  9595 ;; Auto vars:     Size  Location     Type
  9596 ;;		None
  9597 ;; Return value:  Size  Location     Type
  9598 ;;                  1    wreg      void 
  9599 ;; Registers used:
  9600 ;;		wreg, status,2
  9601 ;; Tracked objects:
  9602 ;;		On entry : 0/0
  9603 ;;		On exit  : 0/0
  9604 ;;		Unchanged: 0/0
  9605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9610 ;;Total ram usage:        0 bytes
  9611 ;; Hardware stack levels used:    1
  9612 ;; Hardware stack levels required when called:    4
  9613 ;; This function calls:
  9614 ;;		Nothing
  9615 ;; This function is called by:
  9616 ;;		_SYSTEM_Initialize
  9617 ;; This function uses a non-reentrant model
  9618 ;;
  9619                           
  9620                           	psect	text33
  9621  004AE8                     __ptext33:
  9622                           	opt callstack 0
  9623  004AE8                     _ADCC_Initialize:
  9624                           	opt callstack 25
  9625  004AE8                     
  9626                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
  9627  004AE8  0E00               	movlw	0
  9628  004AEA  6E6A               	movwf	106,c	;volatile
  9629                           
  9630                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
  9631  004AEC  0E00               	movlw	0
  9632  004AEE  6E6B               	movwf	107,c	;volatile
  9633                           
  9634                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
  9635  004AF0  0E00               	movlw	0
  9636  004AF2  6E6C               	movwf	108,c	;volatile
  9637                           
  9638                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
  9639  004AF4  0E00               	movlw	0
  9640  004AF6  6E6D               	movwf	109,c	;volatile
  9641                           
  9642                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
  9643  004AF8  0E00               	movlw	0
  9644  004AFA  6E68               	movwf	104,c	;volatile
  9645                           
  9646                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
  9647  004AFC  0E00               	movlw	0
  9648  004AFE  6E69               	movwf	105,c	;volatile
  9649                           
  9650                           ;mcc_generated_files/adcc.c: 78:     ADRPT = 0x00;
  9651  004B00  0E00               	movlw	0
  9652  004B02  6E66               	movwf	102,c	;volatile
  9653                           
  9654                           ;mcc_generated_files/adcc.c: 80:     ADPCH = 0x00;
  9655  004B04  0E00               	movlw	0
  9656  004B06  010F               	movlb	15	; () banked
  9657  004B08  6F5F               	movwf	95,b	;volatile
  9658                           
  9659                           ;mcc_generated_files/adcc.c: 82:     ADCAP = 0x00;
  9660  004B0A  0E00               	movlw	0
  9661  004B0C  6F5D               	movwf	93,b	;volatile
  9662                           
  9663                           ;mcc_generated_files/adcc.c: 84:     ADPRE = 0x00;
  9664  004B0E  0E00               	movlw	0
  9665  004B10  6F5E               	movwf	94,b	;volatile
  9666                           
  9667                           ;mcc_generated_files/adcc.c: 86:     ADCON1 = 0x00;
  9668  004B12  0E00               	movlw	0
  9669  004B14  6F59               	movwf	89,b	;volatile
  9670                           
  9671                           ;mcc_generated_files/adcc.c: 88:     ADCON2 = 0x00;
  9672  004B16  0E00               	movlw	0
  9673  004B18  6F5A               	movwf	90,b	;volatile
  9674                           
  9675                           ;mcc_generated_files/adcc.c: 90:     ADCON3 = 0x00;
  9676  004B1A  0E00               	movlw	0
  9677  004B1C  6F5B               	movwf	91,b	;volatile
  9678                           
  9679                           ;mcc_generated_files/adcc.c: 92:     ADSTAT = 0x00;
  9680  004B1E  0E00               	movlw	0
  9681  004B20  6E65               	movwf	101,c	;volatile
  9682                           
  9683                           ;mcc_generated_files/adcc.c: 94:     ADREF = 0x00;
  9684  004B22  0E00               	movlw	0
  9685  004B24  6F58               	movwf	88,b	;volatile
  9686                           
  9687                           ;mcc_generated_files/adcc.c: 96:     ADACT = 0x00;
  9688  004B26  0E00               	movlw	0
  9689  004B28  6F56               	movwf	86,b	;volatile
  9690                           
  9691                           ;mcc_generated_files/adcc.c: 98:     ADCLK = 0x00;
  9692  004B2A  0E00               	movlw	0
  9693  004B2C  6F57               	movwf	87,b	;volatile
  9694                           
  9695                           ;mcc_generated_files/adcc.c: 100:     ADCON0 = 0x94;
  9696  004B2E  0E94               	movlw	148
  9697  004B30  6E60               	movwf	96,c	;volatile
  9698                           
  9699                           ;mcc_generated_files/adcc.c: 102:     ADACQ = 0x0A;
  9700  004B32  0E0A               	movlw	10
  9701  004B34  6F5C               	movwf	92,b	;volatile
  9702  004B36                     
  9703                           ; BSR set to: 15
  9704  004B36  0012               	return		;funcret
  9705  004B38                     __end_of_ADCC_Initialize:
  9706                           	opt callstack 0
  9707                           
  9708 ;; *************** function _ADCC_DisableContinuousConversion *****************
  9709 ;; Defined at:
  9710 ;;		line 267 in file "mcc_generated_files/adcc.c"
  9711 ;; Parameters:    Size  Location     Type
  9712 ;;		None
  9713 ;; Auto vars:     Size  Location     Type
  9714 ;;		None
  9715 ;; Return value:  Size  Location     Type
  9716 ;;                  1    wreg      void 
  9717 ;; Registers used:
  9718 ;;		None
  9719 ;; Tracked objects:
  9720 ;;		On entry : 0/0
  9721 ;;		On exit  : 0/0
  9722 ;;		Unchanged: 0/0
  9723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9728 ;;Total ram usage:        0 bytes
  9729 ;; Hardware stack levels used:    1
  9730 ;; Hardware stack levels required when called:    4
  9731 ;; This function calls:
  9732 ;;		Nothing
  9733 ;; This function is called by:
  9734 ;;		_SYSTEM_Initialize
  9735 ;; This function uses a non-reentrant model
  9736 ;;
  9737                           
  9738                           	psect	text34
  9739  0051EE                     __ptext34:
  9740                           	opt callstack 0
  9741  0051EE                     _ADCC_DisableContinuousConversion:
  9742                           	opt callstack 25
  9743  0051EE                     
  9744                           ;mcc_generated_files/adcc.c: 270:     ADCON0bits.ADCONT = 0;
  9745  0051EE  9C60               	bcf	96,6,c	;volatile
  9746  0051F0  0012               	return		;funcret
  9747  0051F2                     __end_of_ADCC_DisableContinuousConversion:
  9748                           	opt callstack 0
  9749                           
  9750 ;; *************** function _PrintModbus *****************
  9751 ;; Defined at:
  9752 ;;		line 101 in file "Modbus.c"
  9753 ;; Parameters:    Size  Location     Type
  9754 ;;		None
  9755 ;; Auto vars:     Size  Location     Type
  9756 ;;  j               2   52[BANK0 ] int 
  9757 ;;  i               2   54[BANK0 ] int 
  9758 ;; Return value:  Size  Location     Type
  9759 ;;                  1    wreg      void 
  9760 ;; Registers used:
  9761 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9762 ;; Tracked objects:
  9763 ;;		On entry : 0/0
  9764 ;;		On exit  : 0/0
  9765 ;;		Unchanged: 0/0
  9766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9768 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9769 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9770 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9771 ;;Total ram usage:        9 bytes
  9772 ;; Hardware stack levels used:    1
  9773 ;; Hardware stack levels required when called:   13
  9774 ;; This function calls:
  9775 ;;		_printf
  9776 ;; This function is called by:
  9777 ;;		_main
  9778 ;; This function uses a non-reentrant model
  9779 ;;
  9780                           
  9781                           	psect	text35
  9782  0022BA                     __ptext35:
  9783                           	opt callstack 0
  9784  0022BA                     _PrintModbus:
  9785                           	opt callstack 17
  9786  0022BA                     
  9787                           ;Modbus.c: 106:     printf("\r\nModbus Received:\r\n");
  9788  0022BA  0E97               	movlw	low STR_11
  9789  0022BC  0100               	movlb	0	; () banked
  9790  0022BE  6F7D               	movwf	printf@fmt& (0+255),b
  9791  0022C0  0EFE               	movlw	high STR_11
  9792  0022C2  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9793  0022C4  ECEB  F027         	call	_printf	;wreg free
  9794  0022C8                     
  9795                           ;Modbus.c: 108:     if(ModbusData[1] == 0x03){
  9796  0022C8  0E03               	movlw	3
  9797  0022CA  0101               	movlb	1	; () banked
  9798  0022CC  1901               	xorwf	(_ModbusData+1)& (0+255),w,b
  9799  0022CE  A4D8               	btfss	status,2,c
  9800  0022D0  EF6C  F011         	goto	u8291
  9801  0022D4  EF6E  F011         	goto	u8290
  9802  0022D8                     u8291:
  9803  0022D8  EFC0  F011         	goto	l8198
  9804  0022DC                     u8290:
  9805  0022DC                     
  9806                           ; BSR set to: 1
  9807                           ;Modbus.c: 110:         printf("   Byte 00: 0x%02x - Card Address\r\n",ModbusData[0]);
  9808  0022DC  0E60               	movlw	low STR_12
  9809  0022DE  0100               	movlb	0	; () banked
  9810  0022E0  6F7D               	movwf	printf@fmt& (0+255),b
  9811  0022E2  0EFB               	movlw	high STR_12
  9812  0022E4  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9813  0022E6  C100  F07F         	movff	_ModbusData,?_printf+2
  9814  0022EA  6B80               	clrf	(?_printf+3)& (0+255),b
  9815  0022EC  ECEB  F027         	call	_printf	;wreg free
  9816                           
  9817                           ;Modbus.c: 111:         printf("   Byte 01: 0x%02x - Function Code (Read Multi Reg)\r\n"
      +                          ,ModbusData[1]);
  9818  0022F0  0E33               	movlw	low STR_13
  9819  0022F2  0100               	movlb	0	; () banked
  9820  0022F4  6F7D               	movwf	printf@fmt& (0+255),b
  9821  0022F6  0EF6               	movlw	high STR_13
  9822  0022F8  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9823  0022FA  C101  F07F         	movff	_ModbusData+1,?_printf+2
  9824  0022FE  6B80               	clrf	(?_printf+3)& (0+255),b
  9825  002300  ECEB  F027         	call	_printf	;wreg free
  9826                           
  9827                           ;Modbus.c: 112:         printf("   Byte 02: 0x%02x - 1st Reg Add Hi\r\n",ModbusData[2]);
  9828  002304  0E13               	movlw	low STR_14
  9829  002306  0100               	movlb	0	; () banked
  9830  002308  6F7D               	movwf	printf@fmt& (0+255),b
  9831  00230A  0EFA               	movlw	high STR_14
  9832  00230C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9833  00230E  C102  F07F         	movff	_ModbusData+2,?_printf+2
  9834  002312  6B80               	clrf	(?_printf+3)& (0+255),b
  9835  002314  ECEB  F027         	call	_printf	;wreg free
  9836                           
  9837                           ;Modbus.c: 113:         printf("   Byte 03: 0x%02x - 1st Reg Add Lo\r\n",ModbusData[3]);
  9838  002318  0E39               	movlw	low STR_15
  9839  00231A  0100               	movlb	0	; () banked
  9840  00231C  6F7D               	movwf	printf@fmt& (0+255),b
  9841  00231E  0EFA               	movlw	high STR_15
  9842  002320  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9843  002322  C103  F07F         	movff	_ModbusData+3,?_printf+2
  9844  002326  6B80               	clrf	(?_printf+3)& (0+255),b
  9845  002328  ECEB  F027         	call	_printf	;wreg free
  9846                           
  9847                           ;Modbus.c: 114:         printf("   Byte 04: 0x%02x - Num of Reg Hi\r\n",ModbusData[4]);
  9848  00232C  0EA9               	movlw	low STR_16
  9849  00232E  0100               	movlb	0	; () banked
  9850  002330  6F7D               	movwf	printf@fmt& (0+255),b
  9851  002332  0EFA               	movlw	high STR_16
  9852  002334  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9853  002336  C104  F07F         	movff	_ModbusData+4,?_printf+2
  9854  00233A  6B80               	clrf	(?_printf+3)& (0+255),b
  9855  00233C  ECEB  F027         	call	_printf	;wreg free
  9856                           
  9857                           ;Modbus.c: 115:         printf("   Byte 05: 0x%02x - Num of Reg Lo\r\n",ModbusData[5]);
  9858  002340  0ECE               	movlw	low STR_17
  9859  002342  0100               	movlb	0	; () banked
  9860  002344  6F7D               	movwf	printf@fmt& (0+255),b
  9861  002346  0EFA               	movlw	high STR_17
  9862  002348  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9863  00234A  C105  F07F         	movff	_ModbusData+5,?_printf+2
  9864  00234E  6B80               	clrf	(?_printf+3)& (0+255),b
  9865  002350  ECEB  F027         	call	_printf	;wreg free
  9866                           
  9867                           ;Modbus.c: 116:         printf("   Byte 06: 0x%02x - CRC Hi\r\n",ModbusData[6]);
  9868  002354  0EAA               	movlw	low STR_18
  9869  002356  0100               	movlb	0	; () banked
  9870  002358  6F7D               	movwf	printf@fmt& (0+255),b
  9871  00235A  0EFC               	movlw	high STR_18
  9872  00235C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9873  00235E  C106  F07F         	movff	_ModbusData+6,?_printf+2
  9874  002362  6B80               	clrf	(?_printf+3)& (0+255),b
  9875  002364  ECEB  F027         	call	_printf	;wreg free
  9876                           
  9877                           ;Modbus.c: 117:         printf("   Byte 07: 0x%02x - CRC Lo\r\n",ModbusData[7]);
  9878  002368  0EE6               	movlw	low STR_19
  9879  00236A  0100               	movlb	0	; () banked
  9880  00236C  6F7D               	movwf	printf@fmt& (0+255),b
  9881  00236E  0EFC               	movlw	high STR_19
  9882  002370  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9883  002372  C107  F07F         	movff	_ModbusData+7,?_printf+2
  9884  002376  6B80               	clrf	(?_printf+3)& (0+255),b
  9885  002378  ECEB  F027         	call	_printf	;wreg free
  9886                           
  9887                           ;Modbus.c: 119:     }else if(ModbusData[1] == 0x10){
  9888  00237C  EFBB  F012         	goto	l727
  9889  002380                     l8198:
  9890                           
  9891                           ; BSR set to: 1
  9892  002380  0E10               	movlw	16
  9893  002382  1901               	xorwf	(_ModbusData+1)& (0+255),w,b
  9894  002384  A4D8               	btfss	status,2,c
  9895  002386  EFC7  F011         	goto	u8301
  9896  00238A  EFC9  F011         	goto	u8300
  9897  00238E                     u8301:
  9898  00238E  EFBB  F012         	goto	l727
  9899  002392                     u8300:
  9900  002392                     
  9901                           ; BSR set to: 1
  9902                           ;Modbus.c: 121:         printf("   Byte 00: 0x%02x - Card Address\r\n",ModbusData[0]);
  9903  002392  0E60               	movlw	low STR_12
  9904  002394  0100               	movlb	0	; () banked
  9905  002396  6F7D               	movwf	printf@fmt& (0+255),b
  9906  002398  0EFB               	movlw	high STR_12
  9907  00239A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9908  00239C  C100  F07F         	movff	_ModbusData,?_printf+2
  9909  0023A0  6B80               	clrf	(?_printf+3)& (0+255),b
  9910  0023A2  ECEB  F027         	call	_printf	;wreg free
  9911                           
  9912                           ;Modbus.c: 122:         printf("   Byte 01: 0x%02x - Function Code (Write Multi Reg)\r\n
      +                          ",ModbusData[1]);
  9913  0023A6  0E90               	movlw	low STR_21
  9914  0023A8  0100               	movlb	0	; () banked
  9915  0023AA  6F7D               	movwf	printf@fmt& (0+255),b
  9916  0023AC  0EF5               	movlw	high STR_21
  9917  0023AE  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9918  0023B0  C101  F07F         	movff	_ModbusData+1,?_printf+2
  9919  0023B4  6B80               	clrf	(?_printf+3)& (0+255),b
  9920  0023B6  ECEB  F027         	call	_printf	;wreg free
  9921                           
  9922                           ;Modbus.c: 123:         printf("   Byte 02: 0x%02x - 1st Reg Add Hi\r\n",ModbusData[2]);
  9923  0023BA  0E13               	movlw	low STR_14
  9924  0023BC  0100               	movlb	0	; () banked
  9925  0023BE  6F7D               	movwf	printf@fmt& (0+255),b
  9926  0023C0  0EFA               	movlw	high STR_14
  9927  0023C2  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9928  0023C4  C102  F07F         	movff	_ModbusData+2,?_printf+2
  9929  0023C8  6B80               	clrf	(?_printf+3)& (0+255),b
  9930  0023CA  ECEB  F027         	call	_printf	;wreg free
  9931                           
  9932                           ;Modbus.c: 124:         printf("   Byte 03: 0x%02x - 1st Reg Add Lo\r\n",ModbusData[3]);
  9933  0023CE  0E39               	movlw	low STR_15
  9934  0023D0  0100               	movlb	0	; () banked
  9935  0023D2  6F7D               	movwf	printf@fmt& (0+255),b
  9936  0023D4  0EFA               	movlw	high STR_15
  9937  0023D6  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9938  0023D8  C103  F07F         	movff	_ModbusData+3,?_printf+2
  9939  0023DC  6B80               	clrf	(?_printf+3)& (0+255),b
  9940  0023DE  ECEB  F027         	call	_printf	;wreg free
  9941                           
  9942                           ;Modbus.c: 125:         printf("   Byte 04: 0x%02x - Num of Reg Hi\r\n",ModbusData[4]);
  9943  0023E2  0EA9               	movlw	low STR_16
  9944  0023E4  0100               	movlb	0	; () banked
  9945  0023E6  6F7D               	movwf	printf@fmt& (0+255),b
  9946  0023E8  0EFA               	movlw	high STR_16
  9947  0023EA  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9948  0023EC  C104  F07F         	movff	_ModbusData+4,?_printf+2
  9949  0023F0  6B80               	clrf	(?_printf+3)& (0+255),b
  9950  0023F2  ECEB  F027         	call	_printf	;wreg free
  9951                           
  9952                           ;Modbus.c: 126:         printf("   Byte 05: 0x%02x - Num of Reg Lo\r\n",ModbusData[5]);
  9953  0023F6  0ECE               	movlw	low STR_17
  9954  0023F8  0100               	movlb	0	; () banked
  9955  0023FA  6F7D               	movwf	printf@fmt& (0+255),b
  9956  0023FC  0EFA               	movlw	high STR_17
  9957  0023FE  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9958  002400  C105  F07F         	movff	_ModbusData+5,?_printf+2
  9959  002404  6B80               	clrf	(?_printf+3)& (0+255),b
  9960  002406  ECEB  F027         	call	_printf	;wreg free
  9961                           
  9962                           ;Modbus.c: 127:         printf("   Byte 06: 0x%02x - Num Bytes More\r\n",ModbusData[6]);
  9963  00240A  0EED               	movlw	low STR_26
  9964  00240C  0100               	movlb	0	; () banked
  9965  00240E  6F7D               	movwf	printf@fmt& (0+255),b
  9966  002410  0EF9               	movlw	high STR_26
  9967  002412  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9968  002414  C106  F07F         	movff	_ModbusData+6,?_printf+2
  9969  002418  6B80               	clrf	(?_printf+3)& (0+255),b
  9970  00241A  ECEB  F027         	call	_printf	;wreg free
  9971  00241E                     
  9972                           ;Modbus.c: 130:         int j = 1;
  9973  00241E  0E00               	movlw	0
  9974  002420  0100               	movlb	0	; () banked
  9975  002422  6F95               	movwf	(PrintModbus@j+1)& (0+255),b
  9976  002424  0E01               	movlw	1
  9977  002426  6F94               	movwf	PrintModbus@j& (0+255),b
  9978  002428                     
  9979                           ; BSR set to: 0
  9980                           ;Modbus.c: 131:         for(i=7; i< ModDataCnt -2 ; i++ ){
  9981  002428  0E00               	movlw	0
  9982  00242A  6F97               	movwf	(PrintModbus@i+1)& (0+255),b
  9983  00242C  0E07               	movlw	7
  9984  00242E  6F96               	movwf	PrintModbus@i& (0+255),b
  9985  002430  EF73  F012         	goto	l8212
  9986  002434                     l8206:
  9987                           
  9988                           ; BSR set to: 0
  9989                           ;Modbus.c: 132:             printf("   Byte %02i: 0x%02x - Reg %i Hi (Add. 0x%02x%02x / 
      +                          Circuit %i)\r\n", i, ModbusData[i],j, ModbusData[2], ModbusData[3] + j-1,ModbusData[3] +
      +                           j-1);
  9990  002434  0E14               	movlw	low STR_27
  9991  002436  6F7D               	movwf	printf@fmt& (0+255),b
  9992  002438  0EF5               	movlw	high STR_27
  9993  00243A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9994  00243C  C096  F07F         	movff	PrintModbus@i,?_printf+2
  9995  002440  C097  F080         	movff	PrintModbus@i+1,?_printf+3
  9996  002444  0E00               	movlw	low _ModbusData
  9997  002446  2596               	addwf	PrintModbus@i& (0+255),w,b
  9998  002448  6ED9               	movwf	fsr2l,c
  9999  00244A  0E01               	movlw	high _ModbusData
 10000  00244C  2197               	addwfc	(PrintModbus@i+1)& (0+255),w,b
 10001  00244E  6EDA               	movwf	fsr2h,c
 10002  002450  50DF               	movf	indf2,w,c
 10003  002452  6F8F               	movwf	??_PrintModbus& (0+255),b
 10004  002454  518F               	movf	??_PrintModbus& (0+255),w,b
 10005  002456  6F81               	movwf	(?_printf+4)& (0+255),b
 10006  002458  6B82               	clrf	(?_printf+5)& (0+255),b
 10007  00245A  C094  F083         	movff	PrintModbus@j,?_printf+6
 10008  00245E  C095  F084         	movff	PrintModbus@j+1,?_printf+7
 10009  002462  C102  F085         	movff	_ModbusData+2,?_printf+8
 10010  002466  6B86               	clrf	(?_printf+9)& (0+255),b
 10011  002468  0101               	movlb	1	; () banked
 10012  00246A  5103               	movf	(_ModbusData+3)& (0+255),w,b
 10013  00246C  0100               	movlb	0	; () banked
 10014  00246E  2594               	addwf	PrintModbus@j& (0+255),w,b
 10015  002470  6F90               	movwf	(??_PrintModbus+1)& (0+255),b
 10016  002472  0E00               	movlw	0
 10017  002474  2195               	addwfc	(PrintModbus@j+1)& (0+255),w,b
 10018  002476  6F91               	movwf	(??_PrintModbus+2)& (0+255),b
 10019  002478  0EFF               	movlw	255
 10020  00247A  2590               	addwf	(??_PrintModbus+1)& (0+255),w,b
 10021  00247C  6F87               	movwf	(?_printf+10)& (0+255),b
 10022  00247E  0EFF               	movlw	255
 10023  002480  2191               	addwfc	(??_PrintModbus+2)& (0+255),w,b
 10024  002482  6F88               	movwf	(?_printf+11)& (0+255),b
 10025  002484  0101               	movlb	1	; () banked
 10026  002486  5103               	movf	(_ModbusData+3)& (0+255),w,b
 10027  002488  0100               	movlb	0	; () banked
 10028  00248A  2594               	addwf	PrintModbus@j& (0+255),w,b
 10029  00248C  6F92               	movwf	(??_PrintModbus+3)& (0+255),b
 10030  00248E  0E00               	movlw	0
 10031  002490  2195               	addwfc	(PrintModbus@j+1)& (0+255),w,b
 10032  002492  6F93               	movwf	(??_PrintModbus+4)& (0+255),b
 10033  002494  0EFF               	movlw	255
 10034  002496  2592               	addwf	(??_PrintModbus+3)& (0+255),w,b
 10035  002498  6F89               	movwf	(?_printf+12)& (0+255),b
 10036  00249A  0EFF               	movlw	255
 10037  00249C  2193               	addwfc	(??_PrintModbus+4)& (0+255),w,b
 10038  00249E  6F8A               	movwf	(?_printf+13)& (0+255),b
 10039  0024A0  ECEB  F027         	call	_printf	;wreg free
 10040  0024A4                     
 10041                           ;Modbus.c: 133:             i++;
 10042  0024A4  0100               	movlb	0	; () banked
 10043  0024A6  4B96               	infsnz	PrintModbus@i& (0+255),f,b
 10044  0024A8  2B97               	incf	(PrintModbus@i+1)& (0+255),f,b
 10045  0024AA                     
 10046                           ; BSR set to: 0
 10047                           ;Modbus.c: 134:             printf("   Byte %02i: 0x%02x - Reg %i Lo\r\n", i, ModbusData
      +                          [i],j);
 10048  0024AA  0E84               	movlw	low STR_28
 10049  0024AC  6F7D               	movwf	printf@fmt& (0+255),b
 10050  0024AE  0EFB               	movlw	high STR_28
 10051  0024B0  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10052  0024B2  C096  F07F         	movff	PrintModbus@i,?_printf+2
 10053  0024B6  C097  F080         	movff	PrintModbus@i+1,?_printf+3
 10054  0024BA  0E00               	movlw	low _ModbusData
 10055  0024BC  2596               	addwf	PrintModbus@i& (0+255),w,b
 10056  0024BE  6ED9               	movwf	fsr2l,c
 10057  0024C0  0E01               	movlw	high _ModbusData
 10058  0024C2  2197               	addwfc	(PrintModbus@i+1)& (0+255),w,b
 10059  0024C4  6EDA               	movwf	fsr2h,c
 10060  0024C6  50DF               	movf	indf2,w,c
 10061  0024C8  6F8F               	movwf	??_PrintModbus& (0+255),b
 10062  0024CA  518F               	movf	??_PrintModbus& (0+255),w,b
 10063  0024CC  6F81               	movwf	(?_printf+4)& (0+255),b
 10064  0024CE  6B82               	clrf	(?_printf+5)& (0+255),b
 10065  0024D0  C094  F083         	movff	PrintModbus@j,?_printf+6
 10066  0024D4  C095  F084         	movff	PrintModbus@j+1,?_printf+7
 10067  0024D8  ECEB  F027         	call	_printf	;wreg free
 10068                           
 10069                           ;Modbus.c: 135:             j++;
 10070  0024DC  0100               	movlb	0	; () banked
 10071  0024DE  4B94               	infsnz	PrintModbus@j& (0+255),f,b
 10072  0024E0  2B95               	incf	(PrintModbus@j+1)& (0+255),f,b
 10073                           
 10074                           ;Modbus.c: 136:         }
 10075  0024E2  4B96               	infsnz	PrintModbus@i& (0+255),f,b
 10076  0024E4  2B97               	incf	(PrintModbus@i+1)& (0+255),f,b
 10077  0024E6                     l8212:
 10078                           
 10079                           ; BSR set to: 0
 10080  0024E6  0EFE               	movlw	254
 10081  0024E8  6F8F               	movwf	??_PrintModbus& (0+255),b
 10082  0024EA  0EFF               	movlw	255
 10083  0024EC  6F90               	movwf	(??_PrintModbus+1)& (0+255),b
 10084  0024EE  C0DB  F091         	movff	_ModDataCnt,??_PrintModbus+2
 10085  0024F2  C0DC  F092         	movff	_ModDataCnt+1,??_PrintModbus+3
 10086  0024F6  518F               	movf	??_PrintModbus& (0+255),w,b
 10087  0024F8  2791               	addwf	(??_PrintModbus+2)& (0+255),f,b
 10088  0024FA  5190               	movf	(??_PrintModbus+1)& (0+255),w,b
 10089  0024FC  2392               	addwfc	(??_PrintModbus+3)& (0+255),f,b
 10090  0024FE  5191               	movf	(??_PrintModbus+2)& (0+255),w,b
 10091  002500  5D96               	subwf	PrintModbus@i& (0+255),w,b
 10092  002502  5197               	movf	(PrintModbus@i+1)& (0+255),w,b
 10093  002504  0A80               	xorlw	128
 10094  002506  6F93               	movwf	(??_PrintModbus+4)& (0+255),b
 10095  002508  5192               	movf	(??_PrintModbus+3)& (0+255),w,b
 10096  00250A  0A80               	xorlw	128
 10097  00250C  5993               	subwfb	(??_PrintModbus+4)& (0+255),w,b
 10098  00250E  A0D8               	btfss	status,0,c
 10099  002510  EF8C  F012         	goto	u8311
 10100  002514  EF8E  F012         	goto	u8310
 10101  002518                     u8311:
 10102  002518  EF1A  F012         	goto	l8206
 10103  00251C                     u8310:
 10104  00251C                     
 10105                           ; BSR set to: 0
 10106                           ;Modbus.c: 138:         printf("   Byte %02i: 0x%02x - CRC Hi\r\n",i, ModbusData[i]);
 10107  00251C  0E4B               	movlw	low STR_29
 10108  00251E  6F7D               	movwf	printf@fmt& (0+255),b
 10109  002520  0EFC               	movlw	high STR_29
 10110  002522  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10111  002524  C096  F07F         	movff	PrintModbus@i,?_printf+2
 10112  002528  C097  F080         	movff	PrintModbus@i+1,?_printf+3
 10113  00252C  0E00               	movlw	low _ModbusData
 10114  00252E  2596               	addwf	PrintModbus@i& (0+255),w,b
 10115  002530  6ED9               	movwf	fsr2l,c
 10116  002532  0E01               	movlw	high _ModbusData
 10117  002534  2197               	addwfc	(PrintModbus@i+1)& (0+255),w,b
 10118  002536  6EDA               	movwf	fsr2h,c
 10119  002538  50DF               	movf	indf2,w,c
 10120  00253A  6F8F               	movwf	??_PrintModbus& (0+255),b
 10121  00253C  518F               	movf	??_PrintModbus& (0+255),w,b
 10122  00253E  6F81               	movwf	(?_printf+4)& (0+255),b
 10123  002540  6B82               	clrf	(?_printf+5)& (0+255),b
 10124  002542  ECEB  F027         	call	_printf	;wreg free
 10125                           
 10126                           ;Modbus.c: 139:         printf("   Byte %02i: 0x%02x - CRC Lo\r\n",i + 1, ModbusData[i +
      +                           1]);
 10127  002546  0E6B               	movlw	low STR_30
 10128  002548  0100               	movlb	0	; () banked
 10129  00254A  6F7D               	movwf	printf@fmt& (0+255),b
 10130  00254C  0EFC               	movlw	high STR_30
 10131  00254E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10132  002550  0E01               	movlw	1
 10133  002552  2596               	addwf	PrintModbus@i& (0+255),w,b
 10134  002554  6F7F               	movwf	(?_printf+2)& (0+255),b
 10135  002556  0E00               	movlw	0
 10136  002558  2197               	addwfc	(PrintModbus@i+1)& (0+255),w,b
 10137  00255A  6F80               	movwf	(?_printf+3)& (0+255),b
 10138  00255C  0E01               	movlw	low (_ModbusData+1)
 10139  00255E  2596               	addwf	PrintModbus@i& (0+255),w,b
 10140  002560  6ED9               	movwf	fsr2l,c
 10141  002562  0E01               	movlw	high (_ModbusData+1)
 10142  002564  2197               	addwfc	(PrintModbus@i+1)& (0+255),w,b
 10143  002566  6EDA               	movwf	fsr2h,c
 10144  002568  50DF               	movf	indf2,w,c
 10145  00256A  6F8F               	movwf	??_PrintModbus& (0+255),b
 10146  00256C  518F               	movf	??_PrintModbus& (0+255),w,b
 10147  00256E  6F81               	movwf	(?_printf+4)& (0+255),b
 10148  002570  6B82               	clrf	(?_printf+5)& (0+255),b
 10149  002572  ECEB  F027         	call	_printf	;wreg free
 10150  002576                     l727:
 10151                           
 10152                           ;Modbus.c: 143:     printf("\r\n");
 10153  002576  0E5D               	movlw	low (STR_32+33)
 10154  002578  0100               	movlb	0	; () banked
 10155  00257A  6F7D               	movwf	printf@fmt& (0+255),b
 10156  00257C  0EFB               	movlw	high (STR_32+33)
 10157  00257E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10158  002580  ECEB  F027         	call	_printf	;wreg free
 10159  002584  0012               	return		;funcret
 10160  002586                     __end_of_PrintModbus:
 10161                           	opt callstack 0
 10162                           
 10163 ;; *************** function _PrintModRespon *****************
 10164 ;; Defined at:
 10165 ;;		line 556 in file "Modbus.c"
 10166 ;; Parameters:    Size  Location     Type
 10167 ;;		None
 10168 ;; Auto vars:     Size  Location     Type
 10169 ;;  j               2   50[BANK0 ] int 
 10170 ;;  i               2   52[BANK0 ] int 
 10171 ;; Return value:  Size  Location     Type
 10172 ;;                  1    wreg      void 
 10173 ;; Registers used:
 10174 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10175 ;; Tracked objects:
 10176 ;;		On entry : 0/0
 10177 ;;		On exit  : 0/0
 10178 ;;		Unchanged: 0/0
 10179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10181 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10182 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10183 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10184 ;;Total ram usage:        7 bytes
 10185 ;; Hardware stack levels used:    1
 10186 ;; Hardware stack levels required when called:   13
 10187 ;; This function calls:
 10188 ;;		_EUSART2_is_tx_done
 10189 ;;		_EUSART2_is_tx_ready
 10190 ;;		_printf
 10191 ;; This function is called by:
 10192 ;;		_main
 10193 ;; This function uses a non-reentrant model
 10194 ;;
 10195                           
 10196                           	psect	text36
 10197  001A1C                     __ptext36:
 10198                           	opt callstack 0
 10199  001A1C                     _PrintModRespon:
 10200                           	opt callstack 17
 10201  001A1C                     
 10202                           ;Modbus.c: 560:     printf("Modbus Response:\r\n");
 10203  001A1C  0E12               	movlw	low STR_59
 10204  001A1E  0100               	movlb	0	; () banked
 10205  001A20  6F7D               	movwf	printf@fmt& (0+255),b
 10206  001A22  0EFF               	movlw	high STR_59
 10207  001A24  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10208  001A26  ECEB  F027         	call	_printf	;wreg free
 10209  001A2A                     
 10210                           ;Modbus.c: 563:     if(MBRespon[1] == 0x03){
 10211  001A2A  0E03               	movlw	3
 10212  001A2C  0102               	movlb	2	; () banked
 10213  001A2E  1958               	xorwf	(_MBRespon+1)& (0+255),w,b
 10214  001A30  A4D8               	btfss	status,2,c
 10215  001A32  EF1D  F00D         	goto	u8321
 10216  001A36  EF1F  F00D         	goto	u8320
 10217  001A3A                     u8321:
 10218  001A3A  EFDC  F00D         	goto	l8238
 10219  001A3E                     u8320:
 10220  001A3E                     
 10221                           ; BSR set to: 2
 10222                           ;Modbus.c: 566:         printf("   Byte 00: 0x%02x - Card Address\r\n", MBRespon[0]);
 10223  001A3E  0E60               	movlw	low STR_12
 10224  001A40  0100               	movlb	0	; () banked
 10225  001A42  6F7D               	movwf	printf@fmt& (0+255),b
 10226  001A44  0EFB               	movlw	high STR_12
 10227  001A46  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10228  001A48  C257  F07F         	movff	_MBRespon,?_printf+2
 10229  001A4C  6B80               	clrf	(?_printf+3)& (0+255),b
 10230  001A4E  ECEB  F027         	call	_printf	;wreg free
 10231                           
 10232                           ;Modbus.c: 567:         printf("   Byte 01: 0x%02x - Function Code (Read Multi Reg)\r\n"
      +                          , MBRespon[1]);
 10233  001A52  0E33               	movlw	low STR_13
 10234  001A54  0100               	movlb	0	; () banked
 10235  001A56  6F7D               	movwf	printf@fmt& (0+255),b
 10236  001A58  0EF6               	movlw	high STR_13
 10237  001A5A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10238  001A5C  C258  F07F         	movff	_MBRespon+1,?_printf+2
 10239  001A60  6B80               	clrf	(?_printf+3)& (0+255),b
 10240  001A62  ECEB  F027         	call	_printf	;wreg free
 10241                           
 10242                           ;Modbus.c: 568:         printf("   Byte 02: 0x%02x - Num Bytes More\r\n", MBRespon[2]);
 10243  001A66  0EC7               	movlw	low STR_62
 10244  001A68  0100               	movlb	0	; () banked
 10245  001A6A  6F7D               	movwf	printf@fmt& (0+255),b
 10246  001A6C  0EF9               	movlw	high STR_62
 10247  001A6E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10248  001A70  C259  F07F         	movff	_MBRespon+2,?_printf+2
 10249  001A74  6B80               	clrf	(?_printf+3)& (0+255),b
 10250  001A76  ECEB  F027         	call	_printf	;wreg free
 10251  001A7A                     
 10252                           ;Modbus.c: 572:         int j = 1;
 10253  001A7A  0E00               	movlw	0
 10254  001A7C  0100               	movlb	0	; () banked
 10255  001A7E  6F93               	movwf	(PrintModRespon@j+1)& (0+255),b
 10256  001A80  0E01               	movlw	1
 10257  001A82  6F92               	movwf	PrintModRespon@j& (0+255),b
 10258  001A84                     
 10259                           ; BSR set to: 0
 10260                           ;Modbus.c: 573:         for(i=0; i< MBRespon[2] ; i++ ){
 10261  001A84  0E00               	movlw	0
 10262  001A86  6F95               	movwf	(PrintModRespon@i+1)& (0+255),b
 10263  001A88  0E00               	movlw	0
 10264  001A8A  6F94               	movwf	PrintModRespon@i& (0+255),b
 10265  001A8C  EF97  F00D         	goto	l8234
 10266  001A90                     l8228:
 10267                           
 10268                           ; BSR set to: 0
 10269                           ;Modbus.c: 574:             printf("   Byte %02i: 0x%02x - Reg %i Hi (Add. 0x%02x %02x)\
      +                          r\n", i+1, MBRespon[i+3],j, ModbusData[2], ModbusData[3] +j-1);
 10270  001A90  0E69               	movlw	low STR_63
 10271  001A92  6F7D               	movwf	printf@fmt& (0+255),b
 10272  001A94  0EF6               	movlw	high STR_63
 10273  001A96  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10274  001A98  0E01               	movlw	1
 10275  001A9A  2594               	addwf	PrintModRespon@i& (0+255),w,b
 10276  001A9C  6F7F               	movwf	(?_printf+2)& (0+255),b
 10277  001A9E  0E00               	movlw	0
 10278  001AA0  2195               	addwfc	(PrintModRespon@i+1)& (0+255),w,b
 10279  001AA2  6F80               	movwf	(?_printf+3)& (0+255),b
 10280  001AA4  0E5A               	movlw	low (_MBRespon+3)
 10281  001AA6  2594               	addwf	PrintModRespon@i& (0+255),w,b
 10282  001AA8  6ED9               	movwf	fsr2l,c
 10283  001AAA  0E02               	movlw	high (_MBRespon+3)
 10284  001AAC  2195               	addwfc	(PrintModRespon@i+1)& (0+255),w,b
 10285  001AAE  6EDA               	movwf	fsr2h,c
 10286  001AB0  50DF               	movf	indf2,w,c
 10287  001AB2  6F8F               	movwf	??_PrintModRespon& (0+255),b
 10288  001AB4  518F               	movf	??_PrintModRespon& (0+255),w,b
 10289  001AB6  6F81               	movwf	(?_printf+4)& (0+255),b
 10290  001AB8  6B82               	clrf	(?_printf+5)& (0+255),b
 10291  001ABA  C092  F083         	movff	PrintModRespon@j,?_printf+6
 10292  001ABE  C093  F084         	movff	PrintModRespon@j+1,?_printf+7
 10293  001AC2  C102  F085         	movff	_ModbusData+2,?_printf+8
 10294  001AC6  6B86               	clrf	(?_printf+9)& (0+255),b
 10295  001AC8  0101               	movlb	1	; () banked
 10296  001ACA  5103               	movf	(_ModbusData+3)& (0+255),w,b
 10297  001ACC  0100               	movlb	0	; () banked
 10298  001ACE  2592               	addwf	PrintModRespon@j& (0+255),w,b
 10299  001AD0  6F90               	movwf	(??_PrintModRespon+1)& (0+255),b
 10300  001AD2  0E00               	movlw	0
 10301  001AD4  2193               	addwfc	(PrintModRespon@j+1)& (0+255),w,b
 10302  001AD6  6F91               	movwf	(??_PrintModRespon+2)& (0+255),b
 10303  001AD8  0EFF               	movlw	255
 10304  001ADA  2590               	addwf	(??_PrintModRespon+1)& (0+255),w,b
 10305  001ADC  6F87               	movwf	(?_printf+10)& (0+255),b
 10306  001ADE  0EFF               	movlw	255
 10307  001AE0  2191               	addwfc	(??_PrintModRespon+2)& (0+255),w,b
 10308  001AE2  6F88               	movwf	(?_printf+11)& (0+255),b
 10309  001AE4  ECEB  F027         	call	_printf	;wreg free
 10310  001AE8                     
 10311                           ;Modbus.c: 575:             i++;
 10312  001AE8  0100               	movlb	0	; () banked
 10313  001AEA  4B94               	infsnz	PrintModRespon@i& (0+255),f,b
 10314  001AEC  2B95               	incf	(PrintModRespon@i+1)& (0+255),f,b
 10315  001AEE                     
 10316                           ; BSR set to: 0
 10317                           ;Modbus.c: 576:             printf("   Byte %02i: 0x%02x - Reg %i Lo\r\n", i+1, MBRespon
      +                          [i+3],j);
 10318  001AEE  0E84               	movlw	low STR_28
 10319  001AF0  6F7D               	movwf	printf@fmt& (0+255),b
 10320  001AF2  0EFB               	movlw	high STR_28
 10321  001AF4  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10322  001AF6  0E01               	movlw	1
 10323  001AF8  2594               	addwf	PrintModRespon@i& (0+255),w,b
 10324  001AFA  6F7F               	movwf	(?_printf+2)& (0+255),b
 10325  001AFC  0E00               	movlw	0
 10326  001AFE  2195               	addwfc	(PrintModRespon@i+1)& (0+255),w,b
 10327  001B00  6F80               	movwf	(?_printf+3)& (0+255),b
 10328  001B02  0E5A               	movlw	low (_MBRespon+3)
 10329  001B04  2594               	addwf	PrintModRespon@i& (0+255),w,b
 10330  001B06  6ED9               	movwf	fsr2l,c
 10331  001B08  0E02               	movlw	high (_MBRespon+3)
 10332  001B0A  2195               	addwfc	(PrintModRespon@i+1)& (0+255),w,b
 10333  001B0C  6EDA               	movwf	fsr2h,c
 10334  001B0E  50DF               	movf	indf2,w,c
 10335  001B10  6F8F               	movwf	??_PrintModRespon& (0+255),b
 10336  001B12  518F               	movf	??_PrintModRespon& (0+255),w,b
 10337  001B14  6F81               	movwf	(?_printf+4)& (0+255),b
 10338  001B16  6B82               	clrf	(?_printf+5)& (0+255),b
 10339  001B18  C092  F083         	movff	PrintModRespon@j,?_printf+6
 10340  001B1C  C093  F084         	movff	PrintModRespon@j+1,?_printf+7
 10341  001B20  ECEB  F027         	call	_printf	;wreg free
 10342                           
 10343                           ;Modbus.c: 577:             j++;
 10344  001B24  0100               	movlb	0	; () banked
 10345  001B26  4B92               	infsnz	PrintModRespon@j& (0+255),f,b
 10346  001B28  2B93               	incf	(PrintModRespon@j+1)& (0+255),f,b
 10347                           
 10348                           ;Modbus.c: 578:         }
 10349  001B2A  4B94               	infsnz	PrintModRespon@i& (0+255),f,b
 10350  001B2C  2B95               	incf	(PrintModRespon@i+1)& (0+255),f,b
 10351  001B2E                     l8234:
 10352                           
 10353                           ; BSR set to: 0
 10354  001B2E  0102               	movlb	2	; () banked
 10355  001B30  5159               	movf	(_MBRespon+2)& (0+255),w,b
 10356  001B32  0100               	movlb	0	; () banked
 10357  001B34  6F8F               	movwf	??_PrintModRespon& (0+255),b
 10358  001B36  6B90               	clrf	(??_PrintModRespon+1)& (0+255),b
 10359  001B38  518F               	movf	??_PrintModRespon& (0+255),w,b
 10360  001B3A  5D94               	subwf	PrintModRespon@i& (0+255),w,b
 10361  001B3C  5195               	movf	(PrintModRespon@i+1)& (0+255),w,b
 10362  001B3E  0A80               	xorlw	128
 10363  001B40  6F91               	movwf	(??_PrintModRespon+2)& (0+255),b
 10364  001B42  5190               	movf	(??_PrintModRespon+1)& (0+255),w,b
 10365  001B44  0A80               	xorlw	128
 10366  001B46  5991               	subwfb	(??_PrintModRespon+2)& (0+255),w,b
 10367  001B48  A0D8               	btfss	status,0,c
 10368  001B4A  EFA9  F00D         	goto	u8331
 10369  001B4E  EFAB  F00D         	goto	u8330
 10370  001B52                     u8331:
 10371  001B52  EF48  F00D         	goto	l8228
 10372  001B56                     u8330:
 10373  001B56                     
 10374                           ; BSR set to: 0
 10375                           ;Modbus.c: 581:         printf("   Byte %02i: 0x%02x - CRC Hi\r\n", i +1 , MBRespon[i + 
      +                          2 + 1] );
 10376  001B56  0E4B               	movlw	low STR_29
 10377  001B58  6F7D               	movwf	printf@fmt& (0+255),b
 10378  001B5A  0EFC               	movlw	high STR_29
 10379  001B5C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10380  001B5E  0E01               	movlw	1
 10381  001B60  2594               	addwf	PrintModRespon@i& (0+255),w,b
 10382  001B62  6F7F               	movwf	(?_printf+2)& (0+255),b
 10383  001B64  0E00               	movlw	0
 10384  001B66  2195               	addwfc	(PrintModRespon@i+1)& (0+255),w,b
 10385  001B68  6F80               	movwf	(?_printf+3)& (0+255),b
 10386  001B6A  0E5A               	movlw	low (_MBRespon+3)
 10387  001B6C  2594               	addwf	PrintModRespon@i& (0+255),w,b
 10388  001B6E  6ED9               	movwf	fsr2l,c
 10389  001B70  0E02               	movlw	high (_MBRespon+3)
 10390  001B72  2195               	addwfc	(PrintModRespon@i+1)& (0+255),w,b
 10391  001B74  6EDA               	movwf	fsr2h,c
 10392  001B76  50DF               	movf	indf2,w,c
 10393  001B78  6F8F               	movwf	??_PrintModRespon& (0+255),b
 10394  001B7A  518F               	movf	??_PrintModRespon& (0+255),w,b
 10395  001B7C  6F81               	movwf	(?_printf+4)& (0+255),b
 10396  001B7E  6B82               	clrf	(?_printf+5)& (0+255),b
 10397  001B80  ECEB  F027         	call	_printf	;wreg free
 10398                           
 10399                           ;Modbus.c: 582:         printf("   Byte %02i: 0x%02x - CRC Lo\r\n", i +2 , MBRespon[i + 
      +                          2 + 2] );
 10400  001B84  0E6B               	movlw	low STR_30
 10401  001B86  0100               	movlb	0	; () banked
 10402  001B88  6F7D               	movwf	printf@fmt& (0+255),b
 10403  001B8A  0EFC               	movlw	high STR_30
 10404  001B8C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10405  001B8E  0E02               	movlw	2
 10406  001B90  2594               	addwf	PrintModRespon@i& (0+255),w,b
 10407  001B92  6F7F               	movwf	(?_printf+2)& (0+255),b
 10408  001B94  0E00               	movlw	0
 10409  001B96  2195               	addwfc	(PrintModRespon@i+1)& (0+255),w,b
 10410  001B98  6F80               	movwf	(?_printf+3)& (0+255),b
 10411  001B9A  0E5B               	movlw	low (_MBRespon+4)
 10412  001B9C  2594               	addwf	PrintModRespon@i& (0+255),w,b
 10413  001B9E  6ED9               	movwf	fsr2l,c
 10414  001BA0  0E02               	movlw	high (_MBRespon+4)
 10415  001BA2  2195               	addwfc	(PrintModRespon@i+1)& (0+255),w,b
 10416  001BA4  6EDA               	movwf	fsr2h,c
 10417  001BA6  50DF               	movf	indf2,w,c
 10418  001BA8  6F8F               	movwf	??_PrintModRespon& (0+255),b
 10419  001BAA  518F               	movf	??_PrintModRespon& (0+255),w,b
 10420  001BAC  6F81               	movwf	(?_printf+4)& (0+255),b
 10421  001BAE  6B82               	clrf	(?_printf+5)& (0+255),b
 10422  001BB0  ECEB  F027         	call	_printf	;wreg free
 10423                           
 10424                           ;Modbus.c: 584:     }else if(MBRespon[1] == 0x10){
 10425  001BB4  EF7A  F00E         	goto	l8254
 10426  001BB8                     l8238:
 10427                           
 10428                           ; BSR set to: 2
 10429  001BB8  0E10               	movlw	16
 10430  001BBA  1958               	xorwf	(_MBRespon+1)& (0+255),w,b
 10431  001BBC  A4D8               	btfss	status,2,c
 10432  001BBE  EFE3  F00D         	goto	u8341
 10433  001BC2  EFE5  F00D         	goto	u8340
 10434  001BC6                     u8341:
 10435  001BC6  EF37  F00E         	goto	l8242
 10436  001BCA                     u8340:
 10437  001BCA                     
 10438                           ; BSR set to: 2
 10439                           ;Modbus.c: 587:         printf("   Byte 00: 0x%02x - Card Address\r\n", MBRespon[0]);
 10440  001BCA  0E60               	movlw	low STR_12
 10441  001BCC  0100               	movlb	0	; () banked
 10442  001BCE  6F7D               	movwf	printf@fmt& (0+255),b
 10443  001BD0  0EFB               	movlw	high STR_12
 10444  001BD2  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10445  001BD4  C257  F07F         	movff	_MBRespon,?_printf+2
 10446  001BD8  6B80               	clrf	(?_printf+3)& (0+255),b
 10447  001BDA  ECEB  F027         	call	_printf	;wreg free
 10448                           
 10449                           ;Modbus.c: 588:         printf("   Byte 01: 0x%02x - Function Code (Read Multi Reg)\r\n"
      +                          , MBRespon[1]);
 10450  001BDE  0E33               	movlw	low STR_13
 10451  001BE0  0100               	movlb	0	; () banked
 10452  001BE2  6F7D               	movwf	printf@fmt& (0+255),b
 10453  001BE4  0EF6               	movlw	high STR_13
 10454  001BE6  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10455  001BE8  C258  F07F         	movff	_MBRespon+1,?_printf+2
 10456  001BEC  6B80               	clrf	(?_printf+3)& (0+255),b
 10457  001BEE  ECEB  F027         	call	_printf	;wreg free
 10458                           
 10459                           ;Modbus.c: 589:         printf("   Byte 02: 0x%02x - 1st Reg Add Hi\r\n", MBRespon[2]);
 10460  001BF2  0E13               	movlw	low STR_14
 10461  001BF4  0100               	movlb	0	; () banked
 10462  001BF6  6F7D               	movwf	printf@fmt& (0+255),b
 10463  001BF8  0EFA               	movlw	high STR_14
 10464  001BFA  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10465  001BFC  C259  F07F         	movff	_MBRespon+2,?_printf+2
 10466  001C00  6B80               	clrf	(?_printf+3)& (0+255),b
 10467  001C02  ECEB  F027         	call	_printf	;wreg free
 10468                           
 10469                           ;Modbus.c: 590:         printf("   Byte 03: 0x%02x - 1st Reg Add Lo\r\n", MBRespon[3]);
 10470  001C06  0E39               	movlw	low STR_15
 10471  001C08  0100               	movlb	0	; () banked
 10472  001C0A  6F7D               	movwf	printf@fmt& (0+255),b
 10473  001C0C  0EFA               	movlw	high STR_15
 10474  001C0E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10475  001C10  C25A  F07F         	movff	_MBRespon+3,?_printf+2
 10476  001C14  6B80               	clrf	(?_printf+3)& (0+255),b
 10477  001C16  ECEB  F027         	call	_printf	;wreg free
 10478                           
 10479                           ;Modbus.c: 591:         printf("   Byte 04: 0x%02x - Num of Reg Hi\r\n", MBRespon[4]);
 10480  001C1A  0EA9               	movlw	low STR_16
 10481  001C1C  0100               	movlb	0	; () banked
 10482  001C1E  6F7D               	movwf	printf@fmt& (0+255),b
 10483  001C20  0EFA               	movlw	high STR_16
 10484  001C22  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10485  001C24  C25B  F07F         	movff	_MBRespon+4,?_printf+2
 10486  001C28  6B80               	clrf	(?_printf+3)& (0+255),b
 10487  001C2A  ECEB  F027         	call	_printf	;wreg free
 10488                           
 10489                           ;Modbus.c: 592:         printf("   Byte 05: 0x%02x - Num of Reg Lo\r\n", MBRespon[5]);
 10490  001C2E  0ECE               	movlw	low STR_17
 10491  001C30  0100               	movlb	0	; () banked
 10492  001C32  6F7D               	movwf	printf@fmt& (0+255),b
 10493  001C34  0EFA               	movlw	high STR_17
 10494  001C36  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10495  001C38  C25C  F07F         	movff	_MBRespon+5,?_printf+2
 10496  001C3C  6B80               	clrf	(?_printf+3)& (0+255),b
 10497  001C3E  ECEB  F027         	call	_printf	;wreg free
 10498                           
 10499                           ;Modbus.c: 596:         printf("   Byte 06: 0x%02x - CRC Hi\r\n", MBRespon[6]);
 10500  001C42  0EAA               	movlw	low STR_18
 10501  001C44  0100               	movlb	0	; () banked
 10502  001C46  6F7D               	movwf	printf@fmt& (0+255),b
 10503  001C48  0EFC               	movlw	high STR_18
 10504  001C4A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10505  001C4C  C25D  F07F         	movff	_MBRespon+6,?_printf+2
 10506  001C50  6B80               	clrf	(?_printf+3)& (0+255),b
 10507  001C52  ECEB  F027         	call	_printf	;wreg free
 10508                           
 10509                           ;Modbus.c: 597:         printf("   Byte 07: 0x%02x - CRC Hi\r\n", MBRespon[7]);
 10510  001C56  0EC8               	movlw	low STR_74
 10511  001C58  0100               	movlb	0	; () banked
 10512  001C5A  6F7D               	movwf	printf@fmt& (0+255),b
 10513  001C5C  0EFC               	movlw	high STR_74
 10514  001C5E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10515  001C60  C25E  F07F         	movff	_MBRespon+7,?_printf+2
 10516  001C64  6B80               	clrf	(?_printf+3)& (0+255),b
 10517  001C66  ECEB  F027         	call	_printf	;wreg free
 10518                           
 10519                           ;Modbus.c: 599:     }else{
 10520  001C6A  EF7A  F00E         	goto	l8254
 10521  001C6E                     l8242:
 10522                           
 10523                           ; BSR set to: 2
 10524                           ;Modbus.c: 600:         for(i=0; i< MBResCnt ; i++ ){
 10525  001C6E  0E00               	movlw	0
 10526  001C70  0100               	movlb	0	; () banked
 10527  001C72  6F95               	movwf	(PrintModRespon@i+1)& (0+255),b
 10528  001C74  0E00               	movlw	0
 10529  001C76  6F94               	movwf	PrintModRespon@i& (0+255),b
 10530  001C78  EF6B  F00E         	goto	l8252
 10531  001C7C                     l8244:
 10532  001C7C  EC68  F028         	call	_EUSART2_is_tx_ready	;wreg free
 10533  001C80  0900               	iorlw	0
 10534  001C82  B4D8               	btfsc	status,2,c
 10535  001C84  EF46  F00E         	goto	u8351
 10536  001C88  EF48  F00E         	goto	u8350
 10537  001C8C                     u8351:
 10538  001C8C  EF3E  F00E         	goto	l8244
 10539  001C90                     u8350:
 10540  001C90                     
 10541                           ;Modbus.c: 602:             printf("   Byte %02i: 0x%02x \r\n", i, MBRespon[i]);
 10542  001C90  0E12               	movlw	low STR_75
 10543  001C92  0100               	movlb	0	; () banked
 10544  001C94  6F7D               	movwf	printf@fmt& (0+255),b
 10545  001C96  0EFE               	movlw	high STR_75
 10546  001C98  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10547  001C9A  C094  F07F         	movff	PrintModRespon@i,?_printf+2
 10548  001C9E  C095  F080         	movff	PrintModRespon@i+1,?_printf+3
 10549  001CA2  0E57               	movlw	low _MBRespon
 10550  001CA4  2594               	addwf	PrintModRespon@i& (0+255),w,b
 10551  001CA6  6ED9               	movwf	fsr2l,c
 10552  001CA8  0E02               	movlw	high _MBRespon
 10553  001CAA  2195               	addwfc	(PrintModRespon@i+1)& (0+255),w,b
 10554  001CAC  6EDA               	movwf	fsr2h,c
 10555  001CAE  50DF               	movf	indf2,w,c
 10556  001CB0  6F8F               	movwf	??_PrintModRespon& (0+255),b
 10557  001CB2  518F               	movf	??_PrintModRespon& (0+255),w,b
 10558  001CB4  6F81               	movwf	(?_printf+4)& (0+255),b
 10559  001CB6  6B82               	clrf	(?_printf+5)& (0+255),b
 10560  001CB8  ECEB  F027         	call	_printf	;wreg free
 10561  001CBC                     l8248:
 10562  001CBC  EC8C  F028         	call	_EUSART2_is_tx_done	;wreg free
 10563  001CC0  0900               	iorlw	0
 10564  001CC2  B4D8               	btfsc	status,2,c
 10565  001CC4  EF66  F00E         	goto	u8361
 10566  001CC8  EF68  F00E         	goto	u8360
 10567  001CCC                     u8361:
 10568  001CCC  EF5E  F00E         	goto	l8248
 10569  001CD0                     u8360:
 10570  001CD0                     
 10571                           ;Modbus.c: 604:         }
 10572  001CD0  0100               	movlb	0	; () banked
 10573  001CD2  4B94               	infsnz	PrintModRespon@i& (0+255),f,b
 10574  001CD4  2B95               	incf	(PrintModRespon@i+1)& (0+255),f,b
 10575  001CD6                     l8252:
 10576                           
 10577                           ; BSR set to: 0
 10578  001CD6  51D7               	movf	_MBResCnt& (0+255),w,b
 10579  001CD8  5D94               	subwf	PrintModRespon@i& (0+255),w,b
 10580  001CDA  5195               	movf	(PrintModRespon@i+1)& (0+255),w,b
 10581  001CDC  0A80               	xorlw	128
 10582  001CDE  6F8F               	movwf	??_PrintModRespon& (0+255),b
 10583  001CE0  51D8               	movf	(_MBResCnt+1)& (0+255),w,b
 10584  001CE2  0A80               	xorlw	128
 10585  001CE4  598F               	subwfb	??_PrintModRespon& (0+255),w,b
 10586  001CE6  A0D8               	btfss	status,0,c
 10587  001CE8  EF78  F00E         	goto	u8371
 10588  001CEC  EF7A  F00E         	goto	u8370
 10589  001CF0                     u8371:
 10590  001CF0  EF3E  F00E         	goto	l8244
 10591  001CF4                     u8370:
 10592  001CF4                     l8254:
 10593                           
 10594                           ;Modbus.c: 606:     printf("\r\n\n");
 10595  001CF4  0E65               	movlw	low (STR_117+98)
 10596  001CF6  0100               	movlb	0	; () banked
 10597  001CF8  6F7D               	movwf	printf@fmt& (0+255),b
 10598  001CFA  0EF3               	movlw	high (STR_117+98)
 10599  001CFC  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10600  001CFE  ECEB  F027         	call	_printf	;wreg free
 10601  001D02  0012               	return		;funcret
 10602  001D04                     __end_of_PrintModRespon:
 10603                           	opt callstack 0
 10604                           
 10605 ;; *************** function _EUSART2_is_tx_ready *****************
 10606 ;; Defined at:
 10607 ;;		line 134 in file "mcc_generated_files/eusart2.c"
 10608 ;; Parameters:    Size  Location     Type
 10609 ;;		None
 10610 ;; Auto vars:     Size  Location     Type
 10611 ;;		None
 10612 ;; Return value:  Size  Location     Type
 10613 ;;                  1    wreg      _Bool 
 10614 ;; Registers used:
 10615 ;;		wreg, status,2
 10616 ;; Tracked objects:
 10617 ;;		On entry : 0/0
 10618 ;;		On exit  : 0/0
 10619 ;;		Unchanged: 0/0
 10620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10625 ;;Total ram usage:        0 bytes
 10626 ;; Hardware stack levels used:    1
 10627 ;; Hardware stack levels required when called:    4
 10628 ;; This function calls:
 10629 ;;		Nothing
 10630 ;; This function is called by:
 10631 ;;		_PrintModRespon
 10632 ;; This function uses a non-reentrant model
 10633 ;;
 10634                           
 10635                           	psect	text37
 10636  0050D0                     __ptext37:
 10637                           	opt callstack 0
 10638  0050D0                     _EUSART2_is_tx_ready:
 10639                           	opt callstack 25
 10640  0050D0                     
 10641                           ;mcc_generated_files/eusart2.c: 136:     return (eusart2TxBufferRemaining ? 1 : 0);
 10642  0050D0  0100               	movlb	0	; () banked
 10643  0050D2  51FF               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 10644  0050D4  A4D8               	btfss	status,2,c
 10645  0050D6  EF6F  F028         	goto	u7531
 10646  0050DA  EF72  F028         	goto	u7530
 10647  0050DE                     u7531:
 10648  0050DE  0E01               	movlw	1
 10649  0050E0  EF73  F028         	goto	u7540
 10650  0050E4                     u7530:
 10651  0050E4  0E00               	movlw	0
 10652  0050E6                     u7540:
 10653  0050E6                     
 10654                           ; BSR set to: 0
 10655  0050E6  0012               	return		;funcret
 10656  0050E8                     __end_of_EUSART2_is_tx_ready:
 10657                           	opt callstack 0
 10658                           
 10659 ;; *************** function _EUSART2_is_tx_done *****************
 10660 ;; Defined at:
 10661 ;;		line 144 in file "mcc_generated_files/eusart2.c"
 10662 ;; Parameters:    Size  Location     Type
 10663 ;;		None
 10664 ;; Auto vars:     Size  Location     Type
 10665 ;;		None
 10666 ;; Return value:  Size  Location     Type
 10667 ;;                  1    wreg      _Bool 
 10668 ;; Registers used:
 10669 ;;		wreg
 10670 ;; Tracked objects:
 10671 ;;		On entry : 0/0
 10672 ;;		On exit  : 0/0
 10673 ;;		Unchanged: 0/0
 10674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10679 ;;Total ram usage:        0 bytes
 10680 ;; Hardware stack levels used:    1
 10681 ;; Hardware stack levels required when called:    4
 10682 ;; This function calls:
 10683 ;;		Nothing
 10684 ;; This function is called by:
 10685 ;;		_PrintModRespon
 10686 ;; This function uses a non-reentrant model
 10687 ;;
 10688                           
 10689                           	psect	text38
 10690  005118                     __ptext38:
 10691                           	opt callstack 0
 10692  005118                     _EUSART2_is_tx_done:
 10693                           	opt callstack 25
 10694  005118                     
 10695                           ;mcc_generated_files/eusart2.c: 146:     return TX2STAbits.TRMT;
 10696  005118  010E               	movlb	14	; () banked
 10697  00511A  B39E               	btfsc	158,1,b	;volatile
 10698  00511C  EF92  F028         	goto	u7551
 10699  005120  EF95  F028         	goto	u7550
 10700  005124                     u7551:
 10701  005124  0E01               	movlw	1
 10702  005126  EF96  F028         	goto	u7556
 10703  00512A                     u7550:
 10704  00512A  0E00               	movlw	0
 10705  00512C                     u7556:
 10706  00512C                     
 10707                           ; BSR set to: 14
 10708  00512C  0012               	return		;funcret
 10709  00512E                     __end_of_EUSART2_is_tx_done:
 10710                           	opt callstack 0
 10711                           
 10712 ;; *************** function _PrintMB400 *****************
 10713 ;; Defined at:
 10714 ;;		line 36 in file "Modbus.c"
 10715 ;; Parameters:    Size  Location     Type
 10716 ;;		None
 10717 ;; Auto vars:     Size  Location     Type
 10718 ;;  i               2   84[COMRAM] int 
 10719 ;; Return value:  Size  Location     Type
 10720 ;;                  1    wreg      void 
 10721 ;; Registers used:
 10722 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10723 ;; Tracked objects:
 10724 ;;		On entry : 0/0
 10725 ;;		On exit  : 0/0
 10726 ;;		Unchanged: 0/0
 10727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10729 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10730 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10731 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10732 ;;Total ram usage:        5 bytes
 10733 ;; Hardware stack levels used:    1
 10734 ;; Hardware stack levels required when called:   13
 10735 ;; This function calls:
 10736 ;;		_printf
 10737 ;; This function is called by:
 10738 ;;		_main
 10739 ;; This function uses a non-reentrant model
 10740 ;;
 10741                           
 10742                           	psect	text39
 10743  004748                     __ptext39:
 10744                           	opt callstack 0
 10745  004748                     _PrintMB400:
 10746                           	opt callstack 17
 10747  004748                     
 10748                           ;Modbus.c: 40:     for(int i = ModbusData[3]; i<ModbusData[6]; i++ ){
 10749  004748  C103  F055         	movff	_ModbusData+3,PrintMB400@i
 10750  00474C  6A56               	clrf	(PrintMB400@i+1)^0,c
 10751  00474E  EFC2  F023         	goto	l7976
 10752  004752                     l7972:
 10753                           
 10754                           ; BSR set to: 0
 10755                           ;Modbus.c: 41:         printf("   Reg: %i Data: 0x%04x \r\n", i, MB400xx[i]);
 10756  004752  0E94               	movlw	low STR_8
 10757  004754  6F7D               	movwf	printf@fmt& (0+255),b
 10758  004756  0EFD               	movlw	high STR_8
 10759  004758  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10760  00475A  C055  F07F         	movff	PrintMB400@i,?_printf+2
 10761  00475E  C056  F080         	movff	PrintMB400@i+1,?_printf+3
 10762  004762  90D8               	bcf	status,0,c
 10763  004764  3455               	rlcf	PrintMB400@i^0,w,c
 10764  004766  6ED9               	movwf	fsr2l,c
 10765  004768  3456               	rlcf	(PrintMB400@i+1)^0,w,c
 10766  00476A  6EDA               	movwf	fsr2h,c
 10767  00476C  0EB7               	movlw	low _MB400xx
 10768  00476E  26D9               	addwf	fsr2l,f,c
 10769  004770  0E03               	movlw	high _MB400xx
 10770  004772  22DA               	addwfc	fsr2h,f,c
 10771  004774  CFDE F081          	movff	postinc2,?_printf+4
 10772  004778  CFDD F082          	movff	postdec2,?_printf+5
 10773  00477C  ECEB  F027         	call	_printf	;wreg free
 10774  004780                     
 10775                           ;Modbus.c: 42:     }
 10776  004780  4A55               	infsnz	PrintMB400@i^0,f,c
 10777  004782  2A56               	incf	(PrintMB400@i+1)^0,f,c
 10778  004784                     l7976:
 10779  004784  0101               	movlb	1	; () banked
 10780  004786  5106               	movf	(_ModbusData+6)& (0+255),w,b
 10781  004788  0100               	movlb	0	; () banked
 10782  00478A  6F8F               	movwf	??_PrintMB400& (0+255),b
 10783  00478C  6B90               	clrf	(??_PrintMB400+1)& (0+255),b
 10784  00478E  518F               	movf	??_PrintMB400& (0+255),w,b
 10785  004790  5C55               	subwf	PrintMB400@i^0,w,c
 10786  004792  5056               	movf	(PrintMB400@i+1)^0,w,c
 10787  004794  0A80               	xorlw	128
 10788  004796  6F91               	movwf	(??_PrintMB400+2)& (0+255),b
 10789  004798  5190               	movf	(??_PrintMB400+1)& (0+255),w,b
 10790  00479A  0A80               	xorlw	128
 10791  00479C  5991               	subwfb	(??_PrintMB400+2)& (0+255),w,b
 10792  00479E  A0D8               	btfss	status,0,c
 10793  0047A0  EFD4  F023         	goto	u8021
 10794  0047A4  EFD6  F023         	goto	u8020
 10795  0047A8                     u8021:
 10796  0047A8  EFA9  F023         	goto	l7972
 10797  0047AC                     u8020:
 10798  0047AC                     
 10799                           ; BSR set to: 0
 10800  0047AC  0012               	return		;funcret
 10801  0047AE                     __end_of_PrintMB400:
 10802                           	opt callstack 0
 10803                           
 10804 ;; *************** function _ModbusRx *****************
 10805 ;; Defined at:
 10806 ;;		line 648 in file "Modbus.c"
 10807 ;; Parameters:    Size  Location     Type
 10808 ;;		None
 10809 ;; Auto vars:     Size  Location     Type
 10810 ;;		None
 10811 ;; Return value:  Size  Location     Type
 10812 ;;                  1    wreg      _Bool 
 10813 ;; Registers used:
 10814 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10815 ;; Tracked objects:
 10816 ;;		On entry : 0/0
 10817 ;;		On exit  : 0/0
 10818 ;;		Unchanged: 0/0
 10819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10822 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10823 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10824 ;;Total ram usage:        1 bytes
 10825 ;; Hardware stack levels used:    1
 10826 ;; Hardware stack levels required when called:   14
 10827 ;; This function calls:
 10828 ;;		_AddRxBuffToModBus
 10829 ;;		_ClearRxBuff
 10830 ;;		_EUSART1_Read
 10831 ;;		_EUSART1_is_rx_ready
 10832 ;;		_RXMode
 10833 ;;		_checkCRC
 10834 ;;		_printf
 10835 ;; This function is called by:
 10836 ;;		_main
 10837 ;; This function uses a non-reentrant model
 10838 ;;
 10839                           
 10840                           	psect	text40
 10841  0033CE                     __ptext40:
 10842                           	opt callstack 0
 10843  0033CE                     _ModbusRx:
 10844                           	opt callstack 16
 10845  0033CE                     
 10846                           ;Modbus.c: 649:     RXMode();
 10847  0033CE  ECE6  F028         	call	_RXMode	;wreg free
 10848  0033D2                     
 10849                           ;Modbus.c: 650:     if(EUSART1_is_rx_ready()){
 10850  0033D2  EC74  F028         	call	_EUSART1_is_rx_ready	;wreg free
 10851  0033D6  0900               	iorlw	0
 10852  0033D8  B4D8               	btfsc	status,2,c
 10853  0033DA  EFF1  F019         	goto	u7871
 10854  0033DE  EFF3  F019         	goto	u7870
 10855  0033E2                     u7871:
 10856  0033E2  EFA3  F01A         	goto	l7908
 10857  0033E6                     u7870:
 10858  0033E6                     
 10859                           ;Modbus.c: 651:         if(Debug ==1){
 10860  0033E6  0100               	movlb	0	; () banked
 10861  0033E8  05DF               	decf	_Debug& (0+255),w,b
 10862  0033EA  A4D8               	btfss	status,2,c
 10863  0033EC  EFFA  F019         	goto	u7881
 10864  0033F0  EFFC  F019         	goto	u7880
 10865  0033F4                     u7881:
 10866  0033F4  EF02  F01A         	goto	l7866
 10867  0033F8                     u7880:
 10868  0033F8                     
 10869                           ; BSR set to: 0
 10870                           ;Modbus.c: 652:             printf("Something in ESUART1 \r\n");
 10871  0033F8  0EFA               	movlw	low STR_77
 10872  0033FA  6F7D               	movwf	printf@fmt& (0+255),b
 10873  0033FC  0EFD               	movlw	high STR_77
 10874  0033FE  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10875  003400  ECEB  F027         	call	_printf	;wreg free
 10876  003404                     l7866:
 10877                           
 10878                           ;Modbus.c: 655:             if(EUSART1_is_rx_ready()){
 10879  003404  EC74  F028         	call	_EUSART1_is_rx_ready	;wreg free
 10880  003408  0900               	iorlw	0
 10881  00340A  B4D8               	btfsc	status,2,c
 10882  00340C  EF0A  F01A         	goto	u7891
 10883  003410  EF0C  F01A         	goto	u7890
 10884  003414                     u7891:
 10885  003414  EF43  F01A         	goto	l7882
 10886  003418                     u7890:
 10887  003418  EF36  F01A         	goto	l7878
 10888  00341C                     l7870:
 10889                           
 10890                           ;Modbus.c: 659:                     rxData[ByteNum] = EUSART1_Read();
 10891  00341C  EC1F  F025         	call	_EUSART1_Read	;wreg free
 10892  003420  6E56               	movwf	??_ModbusRx^0,c
 10893  003422  0E00               	movlw	low _rxData
 10894  003424  0100               	movlb	0	; () banked
 10895  003426  25D9               	addwf	_ByteNum& (0+255),w,b
 10896  003428  6ED9               	movwf	fsr2l,c
 10897  00342A  0E05               	movlw	high _rxData
 10898  00342C  21DA               	addwfc	(_ByteNum+1)& (0+255),w,b
 10899  00342E  6EDA               	movwf	fsr2h,c
 10900  003430  C056  FFDF         	movff	??_ModbusRx,indf2
 10901  003434                     
 10902                           ; BSR set to: 0
 10903                           ;Modbus.c: 661:                     if(Debug == 1){
 10904  003434  05DF               	decf	_Debug& (0+255),w,b
 10905  003436  A4D8               	btfss	status,2,c
 10906  003438  EF20  F01A         	goto	u7901
 10907  00343C  EF22  F01A         	goto	u7900
 10908  003440                     u7901:
 10909  003440  EF33  F01A         	goto	l7876
 10910  003444                     u7900:
 10911  003444                     
 10912                           ; BSR set to: 0
 10913                           ;Modbus.c: 662:                         printf("Read: 0x%02x \r\n",rxData[ByteNum]);
 10914  003444  0E7A               	movlw	low STR_78
 10915  003446  6F7D               	movwf	printf@fmt& (0+255),b
 10916  003448  0EFF               	movlw	high STR_78
 10917  00344A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10918  00344C  0E00               	movlw	low _rxData
 10919  00344E  25D9               	addwf	_ByteNum& (0+255),w,b
 10920  003450  6ED9               	movwf	fsr2l,c
 10921  003452  0E05               	movlw	high _rxData
 10922  003454  21DA               	addwfc	(_ByteNum+1)& (0+255),w,b
 10923  003456  6EDA               	movwf	fsr2h,c
 10924  003458  50DF               	movf	indf2,w,c
 10925  00345A  6E56               	movwf	??_ModbusRx^0,c
 10926  00345C  5056               	movf	??_ModbusRx^0,w,c
 10927  00345E  6F7F               	movwf	(?_printf+2)& (0+255),b
 10928  003460  6B80               	clrf	(?_printf+3)& (0+255),b
 10929  003462  ECEB  F027         	call	_printf	;wreg free
 10930  003466                     l7876:
 10931                           
 10932                           ;Modbus.c: 664:                     ByteNum++;
 10933  003466  0100               	movlb	0	; () banked
 10934  003468  4BD9               	infsnz	_ByteNum& (0+255),f,b
 10935  00346A  2BDA               	incf	(_ByteNum+1)& (0+255),f,b
 10936  00346C                     l7878:
 10937                           
 10938                           ;Modbus.c: 657:                 while(EUSART1_is_rx_ready()){
 10939  00346C  EC74  F028         	call	_EUSART1_is_rx_ready	;wreg free
 10940  003470  0900               	iorlw	0
 10941  003472  A4D8               	btfss	status,2,c
 10942  003474  EF3E  F01A         	goto	u7911
 10943  003478  EF40  F01A         	goto	u7910
 10944  00347C                     u7911:
 10945  00347C  EF0E  F01A         	goto	l7870
 10946  003480                     u7910:
 10947  003480                     
 10948                           ;Modbus.c: 667:                 RXStat = 1;
 10949  003480  0E01               	movlw	1
 10950  003482  0100               	movlb	0	; () banked
 10951  003484  6FDE               	movwf	_RXStat& (0+255),b
 10952  003486                     l7882:
 10953                           
 10954                           ;Modbus.c: 670:             if(RXStat ==1){
 10955  003486  0100               	movlb	0	; () banked
 10956  003488  05DE               	decf	_RXStat& (0+255),w,b
 10957  00348A  A4D8               	btfss	status,2,c
 10958  00348C  EF4A  F01A         	goto	u7921
 10959  003490  EF4C  F01A         	goto	u7920
 10960  003494                     u7921:
 10961  003494  EF68  F01A         	goto	l7894
 10962  003498                     u7920:
 10963  003498                     
 10964                           ; BSR set to: 0
 10965                           ;Modbus.c: 673:                 AddRxBuffToModBus();
 10966  003498  EC0E  F01F         	call	_AddRxBuffToModBus	;wreg free
 10967  00349C                     
 10968                           ;Modbus.c: 674:                 ClearRxBuff();
 10969  00349C  ECEA  F025         	call	_ClearRxBuff	;wreg free
 10970  0034A0                     
 10971                           ;Modbus.c: 675:                 RXStat = 0;
 10972  0034A0  0E00               	movlw	0
 10973  0034A2  0100               	movlb	0	; () banked
 10974  0034A4  6FDE               	movwf	_RXStat& (0+255),b
 10975  0034A6                     
 10976                           ; BSR set to: 0
 10977                           ;Modbus.c: 676:                 ByteNum = 0;
 10978  0034A6  0E00               	movlw	0
 10979  0034A8  6FDA               	movwf	(_ByteNum+1)& (0+255),b
 10980  0034AA  0E00               	movlw	0
 10981  0034AC  6FD9               	movwf	_ByteNum& (0+255),b
 10982  0034AE                     
 10983                           ; BSR set to: 0
 10984  0034AE  B883               	btfsc	131,4,c	;volatile
 10985  0034B0  EF5C  F01A         	goto	u7931
 10986  0034B4  EF5F  F01A         	goto	u7930
 10987  0034B8                     u7931:
 10988  0034B8  0E01               	movlw	1
 10989  0034BA  EF60  F01A         	goto	u7936
 10990  0034BE                     u7930:
 10991  0034BE  0E00               	movlw	0
 10992  0034C0                     u7936:
 10993  0034C0  0AFF               	xorlw	255
 10994  0034C2  6E56               	movwf	??_ModbusRx^0,c
 10995  0034C4  3A56               	swapf	??_ModbusRx^0,f,c
 10996  0034C6  5083               	movf	131,w,c	;volatile
 10997  0034C8  1856               	xorwf	??_ModbusRx^0,w,c
 10998  0034CA  0BEF               	andlw	-17
 10999  0034CC  1856               	xorwf	??_ModbusRx^0,w,c
 11000  0034CE  6E83               	movwf	131,c	;volatile
 11001  0034D0                     l7894:
 11002                           
 11003                           ; BSR set to: 0
 11004                           ;Modbus.c: 681:         }while(ModDataCnt != ExpectedBytes);
 11005  0034D0  51FA               	movf	_ExpectedBytes& (0+255),w,b
 11006  0034D2  19DB               	xorwf	_ModDataCnt& (0+255),w,b
 11007  0034D4  E107               	bnz	u7941
 11008  0034D6  51FB               	movf	(_ExpectedBytes+1)& (0+255),w,b
 11009  0034D8  19DC               	xorwf	(_ModDataCnt+1)& (0+255),w,b
 11010  0034DA  A4D8               	btfss	status,2,c
 11011  0034DC  EF72  F01A         	goto	u7941
 11012  0034E0  EF74  F01A         	goto	u7940
 11013  0034E4                     u7941:
 11014  0034E4  EF02  F01A         	goto	l7866
 11015  0034E8                     u7940:
 11016  0034E8                     
 11017                           ; BSR set to: 0
 11018  0034E8  BA83               	btfsc	131,5,c	;volatile
 11019  0034EA  EF79  F01A         	goto	u7951
 11020  0034EE  EF7C  F01A         	goto	u7950
 11021  0034F2                     u7951:
 11022  0034F2  0E01               	movlw	1
 11023  0034F4  EF7D  F01A         	goto	u7956
 11024  0034F8                     u7950:
 11025  0034F8  0E00               	movlw	0
 11026  0034FA                     u7956:
 11027  0034FA  0AFF               	xorlw	255
 11028  0034FC  6E56               	movwf	??_ModbusRx^0,c
 11029  0034FE  3A56               	swapf	??_ModbusRx^0,f,c
 11030  003500  4656               	rlncf	??_ModbusRx^0,f,c
 11031  003502  5083               	movf	131,w,c	;volatile
 11032  003504  1856               	xorwf	??_ModbusRx^0,w,c
 11033  003506  0BDF               	andlw	-33
 11034  003508  1856               	xorwf	??_ModbusRx^0,w,c
 11035  00350A  6E83               	movwf	131,c	;volatile
 11036  00350C                     
 11037                           ; BSR set to: 0
 11038                           ;Modbus.c: 686:         if(checkCRC() == 1)
 11039  00350C  EC57  F01B         	call	_checkCRC	;wreg free
 11040  003510  06E8               	decf	wreg,f,c
 11041  003512  A4D8               	btfss	status,2,c
 11042  003514  EF8E  F01A         	goto	u7961
 11043  003518  EF90  F01A         	goto	u7960
 11044  00351C                     u7961:
 11045  00351C  EF99  F01A         	goto	l7902
 11046  003520                     u7960:
 11047  003520                     
 11048                           ;Modbus.c: 687:         {;Modbus.c: 688:             printf("\r\nReceived Modbus CRC che
      +                          cked out.\r\n");
 11049  003520  0E84               	movlw	low STR_79
 11050  003522  0100               	movlb	0	; () banked
 11051  003524  6F7D               	movwf	printf@fmt& (0+255),b
 11052  003526  0EFA               	movlw	high STR_79
 11053  003528  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 11054  00352A  ECEB  F027         	call	_printf	;wreg free
 11055                           
 11056                           ;Modbus.c: 689:         }else{
 11057  00352E  EFA0  F01A         	goto	l7904
 11058  003532                     l7902:
 11059                           
 11060                           ;Modbus.c: 690:             printf("\r\nReceived Modbus CRC is bad.\r\n");
 11061  003532  0E2B               	movlw	low STR_80
 11062  003534  0100               	movlb	0	; () banked
 11063  003536  6F7D               	movwf	printf@fmt& (0+255),b
 11064  003538  0EFC               	movlw	high STR_80
 11065  00353A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 11066  00353C  ECEB  F027         	call	_printf	;wreg free
 11067  003540                     l7904:
 11068                           
 11069                           ;Modbus.c: 694:         return 1;
 11070  003540  0E01               	movlw	1
 11071  003542  EFA4  F01A         	goto	l890
 11072  003546                     l7908:
 11073                           
 11074                           ;Modbus.c: 696:     return 0;
 11075  003546  0E00               	movlw	0
 11076  003548                     l890:
 11077  003548  0012               	return		;funcret
 11078  00354A                     __end_of_ModbusRx:
 11079                           	opt callstack 0
 11080                           
 11081 ;; *************** function _checkCRC *****************
 11082 ;; Defined at:
 11083 ;;		line 147 in file "Modbus.c"
 11084 ;; Parameters:    Size  Location     Type
 11085 ;;		None
 11086 ;; Auto vars:     Size  Location     Type
 11087 ;;  i               2   60[BANK0 ] int 
 11088 ;;  crc             2   58[BANK0 ] unsigned int 
 11089 ;;  j               2   56[BANK0 ] int 
 11090 ;;  crcLow          2   54[BANK0 ] unsigned int 
 11091 ;;  crcHigh         2   52[BANK0 ] unsigned int 
 11092 ;; Return value:  Size  Location     Type
 11093 ;;                  1    wreg      _Bool 
 11094 ;; Registers used:
 11095 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11096 ;; Tracked objects:
 11097 ;;		On entry : 0/0
 11098 ;;		On exit  : 0/0
 11099 ;;		Unchanged: 0/0
 11100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11102 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11103 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11104 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11105 ;;Total ram usage:       15 bytes
 11106 ;; Hardware stack levels used:    1
 11107 ;; Hardware stack levels required when called:   13
 11108 ;; This function calls:
 11109 ;;		_printf
 11110 ;; This function is called by:
 11111 ;;		_ModbusRx
 11112 ;; This function uses a non-reentrant model
 11113 ;;
 11114                           
 11115                           	psect	text41
 11116  0036AE                     __ptext41:
 11117                           	opt callstack 0
 11118  0036AE                     _checkCRC:
 11119                           	opt callstack 16
 11120  0036AE                     
 11121                           ;Modbus.c: 148:   unsigned int crc = 0xFFFF;
 11122  0036AE  0100               	movlb	0	; () banked
 11123  0036B0  699A               	setf	checkCRC@crc& (0+255),b
 11124  0036B2  699B               	setf	(checkCRC@crc+1)& (0+255),b
 11125  0036B4                     
 11126                           ; BSR set to: 0
 11127                           ;Modbus.c: 150:   unsigned int crcLow = 0;
 11128  0036B4  0E00               	movlw	0
 11129  0036B6  6F97               	movwf	(checkCRC@crcLow+1)& (0+255),b
 11130  0036B8  0E00               	movlw	0
 11131  0036BA  6F96               	movwf	checkCRC@crcLow& (0+255),b
 11132                           
 11133                           ;Modbus.c: 151:   int i,j = 0;
 11134  0036BC  0E00               	movlw	0
 11135  0036BE  6F99               	movwf	(checkCRC@j+1)& (0+255),b
 11136  0036C0  0E00               	movlw	0
 11137  0036C2  6F98               	movwf	checkCRC@j& (0+255),b
 11138                           
 11139                           ;Modbus.c: 153:     for(i=0;i<ModDataCnt-2;i++){
 11140  0036C4  0E00               	movlw	0
 11141  0036C6  6F9D               	movwf	(checkCRC@i+1)& (0+255),b
 11142  0036C8  0E00               	movlw	0
 11143  0036CA  6F9C               	movwf	checkCRC@i& (0+255),b
 11144  0036CC  EF97  F01B         	goto	l7750
 11145  0036D0                     l7732:
 11146                           
 11147                           ; BSR set to: 0
 11148                           ;Modbus.c: 154:       crc ^= ModbusData[i];
 11149  0036D0  0E00               	movlw	low _ModbusData
 11150  0036D2  259C               	addwf	checkCRC@i& (0+255),w,b
 11151  0036D4  6ED9               	movwf	fsr2l,c
 11152  0036D6  0E01               	movlw	high _ModbusData
 11153  0036D8  219D               	addwfc	(checkCRC@i+1)& (0+255),w,b
 11154  0036DA  6EDA               	movwf	fsr2h,c
 11155  0036DC  50DF               	movf	indf2,w,c
 11156  0036DE  6F8F               	movwf	??_checkCRC& (0+255),b
 11157  0036E0  518F               	movf	??_checkCRC& (0+255),w,b
 11158  0036E2  1B9A               	xorwf	checkCRC@crc& (0+255),f,b
 11159  0036E4                     
 11160                           ; BSR set to: 0
 11161                           ;Modbus.c: 155:       for(j=8; j!=0; j--){
 11162  0036E4  0E00               	movlw	0
 11163  0036E6  6F99               	movwf	(checkCRC@j+1)& (0+255),b
 11164  0036E8  0E08               	movlw	8
 11165  0036EA  6F98               	movwf	checkCRC@j& (0+255),b
 11166  0036EC                     l737:
 11167                           
 11168                           ; BSR set to: 0
 11169                           ;Modbus.c: 156:         if((crc & 0x0001) != 0){
 11170  0036EC  A19A               	btfss	checkCRC@crc& (0+255),0,b
 11171  0036EE  EF7B  F01B         	goto	u7721
 11172  0036F2  EF7D  F01B         	goto	u7720
 11173  0036F6                     u7721:
 11174  0036F6  EF86  F01B         	goto	l7744
 11175  0036FA                     u7720:
 11176  0036FA                     
 11177                           ; BSR set to: 0
 11178                           ;Modbus.c: 157:           crc >>= 1;
 11179  0036FA  90D8               	bcf	status,0,c
 11180  0036FC  339B               	rrcf	(checkCRC@crc+1)& (0+255),f,b
 11181  0036FE  339A               	rrcf	checkCRC@crc& (0+255),f,b
 11182  003700                     
 11183                           ; BSR set to: 0
 11184                           ;Modbus.c: 158:           crc ^= 0xA001;
 11185  003700  0E01               	movlw	1
 11186  003702  1B9A               	xorwf	checkCRC@crc& (0+255),f,b
 11187  003704  0EA0               	movlw	160
 11188  003706  1B9B               	xorwf	(checkCRC@crc+1)& (0+255),f,b
 11189                           
 11190                           ;Modbus.c: 159:         }
 11191  003708  EF89  F01B         	goto	l740
 11192  00370C                     l7744:
 11193                           
 11194                           ; BSR set to: 0
 11195                           ;Modbus.c: 161:           crc >>= 1;
 11196  00370C  90D8               	bcf	status,0,c
 11197  00370E  339B               	rrcf	(checkCRC@crc+1)& (0+255),f,b
 11198  003710  339A               	rrcf	checkCRC@crc& (0+255),f,b
 11199  003712                     l740:
 11200                           
 11201                           ; BSR set to: 0
 11202                           ;Modbus.c: 163:       }
 11203  003712  0798               	decf	checkCRC@j& (0+255),f,b
 11204  003714  A0D8               	btfss	status,0,c
 11205  003716  0799               	decf	(checkCRC@j+1)& (0+255),f,b
 11206  003718                     
 11207                           ; BSR set to: 0
 11208  003718  5198               	movf	checkCRC@j& (0+255),w,b
 11209  00371A  1199               	iorwf	(checkCRC@j+1)& (0+255),w,b
 11210  00371C  A4D8               	btfss	status,2,c
 11211  00371E  EF93  F01B         	goto	u7731
 11212  003722  EF95  F01B         	goto	u7730
 11213  003726                     u7731:
 11214  003726  EF76  F01B         	goto	l737
 11215  00372A                     u7730:
 11216  00372A                     
 11217                           ; BSR set to: 0
 11218                           ;Modbus.c: 164:     }
 11219  00372A  4B9C               	infsnz	checkCRC@i& (0+255),f,b
 11220  00372C  2B9D               	incf	(checkCRC@i+1)& (0+255),f,b
 11221  00372E                     l7750:
 11222                           
 11223                           ; BSR set to: 0
 11224  00372E  0EFE               	movlw	254
 11225  003730  6F8F               	movwf	??_checkCRC& (0+255),b
 11226  003732  0EFF               	movlw	255
 11227  003734  6F90               	movwf	(??_checkCRC+1)& (0+255),b
 11228  003736  C0DB  F091         	movff	_ModDataCnt,??_checkCRC+2
 11229  00373A  C0DC  F092         	movff	_ModDataCnt+1,??_checkCRC+3
 11230  00373E  518F               	movf	??_checkCRC& (0+255),w,b
 11231  003740  2791               	addwf	(??_checkCRC+2)& (0+255),f,b
 11232  003742  5190               	movf	(??_checkCRC+1)& (0+255),w,b
 11233  003744  2392               	addwfc	(??_checkCRC+3)& (0+255),f,b
 11234  003746  5191               	movf	(??_checkCRC+2)& (0+255),w,b
 11235  003748  5D9C               	subwf	checkCRC@i& (0+255),w,b
 11236  00374A  519D               	movf	(checkCRC@i+1)& (0+255),w,b
 11237  00374C  0A80               	xorlw	128
 11238  00374E  6F93               	movwf	(??_checkCRC+4)& (0+255),b
 11239  003750  5192               	movf	(??_checkCRC+3)& (0+255),w,b
 11240  003752  0A80               	xorlw	128
 11241  003754  5993               	subwfb	(??_checkCRC+4)& (0+255),w,b
 11242  003756  A0D8               	btfss	status,0,c
 11243  003758  EFB0  F01B         	goto	u7741
 11244  00375C  EFB2  F01B         	goto	u7740
 11245  003760                     u7741:
 11246  003760  EF68  F01B         	goto	l7732
 11247  003764                     u7740:
 11248  003764                     
 11249                           ; BSR set to: 0
 11250                           ;Modbus.c: 166:   crcHigh = (crc & 0x00FF);
 11251  003764  519A               	movf	checkCRC@crc& (0+255),w,b
 11252  003766  6F94               	movwf	checkCRC@crcHigh& (0+255),b
 11253  003768  6B95               	clrf	(checkCRC@crcHigh+1)& (0+255),b
 11254                           
 11255                           ;Modbus.c: 167:   crcLow = (crc & 0xFF00) >>8;
 11256  00376A  C09A  F08F         	movff	checkCRC@crc,??_checkCRC
 11257  00376E  C09B  F090         	movff	checkCRC@crc+1,??_checkCRC+1
 11258  003772  C090  F08F         	movff	??_checkCRC+1,??_checkCRC
 11259  003776  6B90               	clrf	(??_checkCRC+1)& (0+255),b
 11260  003778  518F               	movf	??_checkCRC& (0+255),w,b
 11261  00377A  6F96               	movwf	checkCRC@crcLow& (0+255),b
 11262  00377C  6B97               	clrf	(checkCRC@crcLow+1)& (0+255),b
 11263  00377E                     
 11264                           ; BSR set to: 0
 11265                           ;Modbus.c: 169:   if(Debug == 1){
 11266  00377E  05DF               	decf	_Debug& (0+255),w,b
 11267  003780  A4D8               	btfss	status,2,c
 11268  003782  EFC5  F01B         	goto	u7751
 11269  003786  EFC7  F01B         	goto	u7750
 11270  00378A                     u7751:
 11271  00378A  EFD5  F01B         	goto	l7758
 11272  00378E                     u7750:
 11273  00378E                     
 11274                           ; BSR set to: 0
 11275                           ;Modbus.c: 170:     printf("crcHigh: 0x%02x  crcLow: 0x%02x  \r\n", crcHigh, crcLow);
 11276  00378E  0E3C               	movlw	low STR_32
 11277  003790  6F7D               	movwf	printf@fmt& (0+255),b
 11278  003792  0EFB               	movlw	high STR_32
 11279  003794  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 11280  003796  C094  F07F         	movff	checkCRC@crcHigh,?_printf+2
 11281  00379A  C095  F080         	movff	checkCRC@crcHigh+1,?_printf+3
 11282  00379E  C096  F081         	movff	checkCRC@crcLow,?_printf+4
 11283  0037A2  C097  F082         	movff	checkCRC@crcLow+1,?_printf+5
 11284  0037A6  ECEB  F027         	call	_printf	;wreg free
 11285  0037AA                     l7758:
 11286                           
 11287                           ;Modbus.c: 174:   if((crcHigh == ModbusData[i])&&(crcLow == ModbusData[i+1]))
 11288  0037AA  0E00               	movlw	low _ModbusData
 11289  0037AC  0100               	movlb	0	; () banked
 11290  0037AE  259C               	addwf	checkCRC@i& (0+255),w,b
 11291  0037B0  6ED9               	movwf	fsr2l,c
 11292  0037B2  0E01               	movlw	high _ModbusData
 11293  0037B4  219D               	addwfc	(checkCRC@i+1)& (0+255),w,b
 11294  0037B6  6EDA               	movwf	fsr2h,c
 11295  0037B8  50DF               	movf	indf2,w,c
 11296  0037BA  6F8F               	movwf	??_checkCRC& (0+255),b
 11297  0037BC  6B90               	clrf	(??_checkCRC+1)& (0+255),b
 11298  0037BE  5194               	movf	checkCRC@crcHigh& (0+255),w,b
 11299  0037C0  198F               	xorwf	??_checkCRC& (0+255),w,b
 11300  0037C2  E107               	bnz	u7761
 11301  0037C4  5195               	movf	(checkCRC@crcHigh+1)& (0+255),w,b
 11302  0037C6  1990               	xorwf	(??_checkCRC+1)& (0+255),w,b
 11303  0037C8  A4D8               	btfss	status,2,c
 11304  0037CA  EFE9  F01B         	goto	u7761
 11305  0037CE  EFEB  F01B         	goto	u7760
 11306  0037D2                     u7761:
 11307  0037D2  EF03  F01C         	goto	l7768
 11308  0037D6                     u7760:
 11309  0037D6                     
 11310                           ; BSR set to: 0
 11311  0037D6  0E01               	movlw	low (_ModbusData+1)
 11312  0037D8  259C               	addwf	checkCRC@i& (0+255),w,b
 11313  0037DA  6ED9               	movwf	fsr2l,c
 11314  0037DC  0E01               	movlw	high (_ModbusData+1)
 11315  0037DE  219D               	addwfc	(checkCRC@i+1)& (0+255),w,b
 11316  0037E0  6EDA               	movwf	fsr2h,c
 11317  0037E2  50DF               	movf	indf2,w,c
 11318  0037E4  6F8F               	movwf	??_checkCRC& (0+255),b
 11319  0037E6  6B90               	clrf	(??_checkCRC+1)& (0+255),b
 11320  0037E8  5196               	movf	checkCRC@crcLow& (0+255),w,b
 11321  0037EA  198F               	xorwf	??_checkCRC& (0+255),w,b
 11322  0037EC  E107               	bnz	u7771
 11323  0037EE  5197               	movf	(checkCRC@crcLow+1)& (0+255),w,b
 11324  0037F0  1990               	xorwf	(??_checkCRC+1)& (0+255),w,b
 11325  0037F2  A4D8               	btfss	status,2,c
 11326  0037F4  EFFE  F01B         	goto	u7771
 11327  0037F8  EF00  F01C         	goto	u7770
 11328  0037FC                     u7771:
 11329  0037FC  EF03  F01C         	goto	l7768
 11330  003800                     u7770:
 11331  003800                     
 11332                           ; BSR set to: 0
 11333                           ;Modbus.c: 175:   {;Modbus.c: 176:     return 1;
 11334  003800  0E01               	movlw	1
 11335  003802  EF04  F01C         	goto	l744
 11336  003806                     l7768:
 11337                           
 11338                           ; BSR set to: 0
 11339                           ;Modbus.c: 179:     return 0;
 11340  003806  0E00               	movlw	0
 11341  003808                     l744:
 11342                           
 11343                           ; BSR set to: 0
 11344  003808  0012               	return		;funcret
 11345  00380A                     __end_of_checkCRC:
 11346                           	opt callstack 0
 11347                           
 11348 ;; *************** function _RXMode *****************
 11349 ;; Defined at:
 11350 ;;		line 53 in file "Modbus.c"
 11351 ;; Parameters:    Size  Location     Type
 11352 ;;		None
 11353 ;; Auto vars:     Size  Location     Type
 11354 ;;		None
 11355 ;; Return value:  Size  Location     Type
 11356 ;;                  1    wreg      void 
 11357 ;; Registers used:
 11358 ;;		None
 11359 ;; Tracked objects:
 11360 ;;		On entry : 0/0
 11361 ;;		On exit  : 0/0
 11362 ;;		Unchanged: 0/0
 11363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11368 ;;Total ram usage:        0 bytes
 11369 ;; Hardware stack levels used:    1
 11370 ;; Hardware stack levels required when called:    4
 11371 ;; This function calls:
 11372 ;;		Nothing
 11373 ;; This function is called by:
 11374 ;;		_main
 11375 ;;		_ModbusRx
 11376 ;; This function uses a non-reentrant model
 11377 ;;
 11378                           
 11379                           	psect	text42
 11380  0051CC                     __ptext42:
 11381                           	opt callstack 0
 11382  0051CC                     _RXMode:
 11383                           	opt callstack 26
 11384  0051CC  9086               	bcf	134,0,c	;volatile
 11385  0051CE  9683               	bcf	131,3,c	;volatile
 11386  0051D0  0012               	return		;funcret
 11387  0051D2                     __end_of_RXMode:
 11388                           	opt callstack 0
 11389                           
 11390 ;; *************** function _EUSART1_is_rx_ready *****************
 11391 ;; Defined at:
 11392 ;;		line 139 in file "mcc_generated_files/eusart1.c"
 11393 ;; Parameters:    Size  Location     Type
 11394 ;;		None
 11395 ;; Auto vars:     Size  Location     Type
 11396 ;;		None
 11397 ;; Return value:  Size  Location     Type
 11398 ;;                  1    wreg      _Bool 
 11399 ;; Registers used:
 11400 ;;		wreg, status,2
 11401 ;; Tracked objects:
 11402 ;;		On entry : 0/0
 11403 ;;		On exit  : 0/0
 11404 ;;		Unchanged: 0/0
 11405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11410 ;;Total ram usage:        0 bytes
 11411 ;; Hardware stack levels used:    1
 11412 ;; Hardware stack levels required when called:    4
 11413 ;; This function calls:
 11414 ;;		Nothing
 11415 ;; This function is called by:
 11416 ;;		_ModbusRx
 11417 ;; This function uses a non-reentrant model
 11418 ;;
 11419                           
 11420                           	psect	text43
 11421  0050E8                     __ptext43:
 11422                           	opt callstack 0
 11423  0050E8                     _EUSART1_is_rx_ready:
 11424                           	opt callstack 25
 11425  0050E8                     
 11426                           ;mcc_generated_files/eusart1.c: 141:     return (eusart1RxCount ? 1 : 0);
 11427  0050E8  0100               	movlb	0	; () banked
 11428  0050EA  51E1               	movf	_eusart1RxCount& (0+255),w,b	;volatile
 11429  0050EC  A4D8               	btfss	status,2,c
 11430  0050EE  EF7B  F028         	goto	u7561
 11431  0050F2  EF7E  F028         	goto	u7560
 11432  0050F6                     u7561:
 11433  0050F6  0E01               	movlw	1
 11434  0050F8  EF7F  F028         	goto	u7570
 11435  0050FC                     u7560:
 11436  0050FC  0E00               	movlw	0
 11437  0050FE                     u7570:
 11438  0050FE                     
 11439                           ; BSR set to: 0
 11440  0050FE  0012               	return		;funcret
 11441  005100                     __end_of_EUSART1_is_rx_ready:
 11442                           	opt callstack 0
 11443                           
 11444 ;; *************** function _EUSART1_Read *****************
 11445 ;; Defined at:
 11446 ;;		line 153 in file "mcc_generated_files/eusart1.c"
 11447 ;; Parameters:    Size  Location     Type
 11448 ;;		None
 11449 ;; Auto vars:     Size  Location     Type
 11450 ;;  readValue       1    4[COMRAM] unsigned char 
 11451 ;; Return value:  Size  Location     Type
 11452 ;;                  1    wreg      unsigned char 
 11453 ;; Registers used:
 11454 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11455 ;; Tracked objects:
 11456 ;;		On entry : 0/0
 11457 ;;		On exit  : 0/0
 11458 ;;		Unchanged: 0/0
 11459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11461 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11463 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11464 ;;Total ram usage:        1 bytes
 11465 ;; Hardware stack levels used:    1
 11466 ;; Hardware stack levels required when called:    4
 11467 ;; This function calls:
 11468 ;;		Nothing
 11469 ;; This function is called by:
 11470 ;;		_ModbusRx
 11471 ;; This function uses a non-reentrant model
 11472 ;;
 11473                           
 11474                           	psect	text44
 11475  004A3E                     __ptext44:
 11476                           	opt callstack 0
 11477  004A3E                     _EUSART1_Read:
 11478                           	opt callstack 25
 11479  004A3E                     l7584:
 11480                           
 11481                           ;mcc_generated_files/eusart1.c: 157:     while(0 == eusart1RxCount)
 11482  004A3E  0100               	movlb	0	; () banked
 11483  004A40  51E1               	movf	_eusart1RxCount& (0+255),w,b	;volatile
 11484  004A42  B4D8               	btfsc	status,2,c
 11485  004A44  EF26  F025         	goto	u7581
 11486  004A48  EF28  F025         	goto	u7580
 11487  004A4C                     u7581:
 11488  004A4C  EF1F  F025         	goto	l7584
 11489  004A50                     u7580:
 11490  004A50                     
 11491                           ; BSR set to: 0
 11492                           ;mcc_generated_files/eusart1.c: 161:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
 11493  004A50  0E00               	movlw	low _eusart1RxStatusBuffer
 11494  004A52  25E2               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
 11495  004A54  6ED9               	movwf	fsr2l,c
 11496  004A56  6ADA               	clrf	fsr2h,c
 11497  004A58  0E03               	movlw	high _eusart1RxStatusBuffer
 11498  004A5A  22DA               	addwfc	fsr2h,f,c
 11499  004A5C  50DF               	movf	indf2,w,c
 11500  004A5E  6FE0               	movwf	_eusart1RxLastError& (0+255),b	;volatile
 11501                           
 11502                           ;mcc_generated_files/eusart1.c: 163:     readValue = eusart1RxBuffer[eusart1RxTail++];
 11503  004A60  0E00               	movlw	low _eusart1RxBuffer
 11504  004A62  25E2               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
 11505  004A64  6ED9               	movwf	fsr2l,c
 11506  004A66  6ADA               	clrf	fsr2h,c
 11507  004A68  0E04               	movlw	high _eusart1RxBuffer
 11508  004A6A  22DA               	addwfc	fsr2h,f,c
 11509  004A6C  50DF               	movf	indf2,w,c
 11510  004A6E  6E05               	movwf	EUSART1_Read@readValue^0,c
 11511  004A70                     
 11512                           ; BSR set to: 0
 11513  004A70  2BE2               	incf	_eusart1RxTail& (0+255),f,b	;volatile
 11514  004A72                     
 11515                           ; BSR set to: 0
 11516                           ;mcc_generated_files/eusart1.c: 164:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
 11517  004A72  0E63               	movlw	99
 11518  004A74  65E2               	cpfsgt	_eusart1RxTail& (0+255),b	;volatile
 11519  004A76  EF3F  F025         	goto	u7591
 11520  004A7A  EF41  F025         	goto	u7590
 11521  004A7E                     u7591:
 11522  004A7E  EF43  F025         	goto	l7594
 11523  004A82                     u7590:
 11524  004A82                     
 11525                           ; BSR set to: 0
 11526                           ;mcc_generated_files/eusart1.c: 165:     {;mcc_generated_files/eusart1.c: 166:         e
      +                          usart1RxTail = 0;
 11527  004A82  0E00               	movlw	0
 11528  004A84  6FE2               	movwf	_eusart1RxTail& (0+255),b	;volatile
 11529  004A86                     l7594:
 11530                           
 11531                           ; BSR set to: 0
 11532                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 0;
 11533  004A86  010E               	movlb	14	; () banked
 11534  004A88  9BC5               	bcf	197,5,b	;volatile
 11535  004A8A                     
 11536                           ; BSR set to: 14
 11537                           ;mcc_generated_files/eusart1.c: 169:     eusart1RxCount--;
 11538  004A8A  0100               	movlb	0	; () banked
 11539  004A8C  07E1               	decf	_eusart1RxCount& (0+255),f,b	;volatile
 11540  004A8E                     
 11541                           ; BSR set to: 0
 11542                           ;mcc_generated_files/eusart1.c: 170:     PIE3bits.RC1IE = 1;
 11543  004A8E  010E               	movlb	14	; () banked
 11544  004A90  8BC5               	bsf	197,5,b	;volatile
 11545  004A92                     
 11546                           ; BSR set to: 14
 11547                           ;mcc_generated_files/eusart1.c: 172:     return readValue;
 11548  004A92  5005               	movf	EUSART1_Read@readValue^0,w,c
 11549  004A94                     
 11550                           ; BSR set to: 14
 11551  004A94  0012               	return		;funcret
 11552  004A96                     __end_of_EUSART1_Read:
 11553                           	opt callstack 0
 11554                           
 11555 ;; *************** function _ClearRxBuff *****************
 11556 ;; Defined at:
 11557 ;;		line 69 in file "Modbus.c"
 11558 ;; Parameters:    Size  Location     Type
 11559 ;;		None
 11560 ;; Auto vars:     Size  Location     Type
 11561 ;;  i               2    5[COMRAM] int 
 11562 ;; Return value:  Size  Location     Type
 11563 ;;                  1    wreg      void 
 11564 ;; Registers used:
 11565 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11566 ;; Tracked objects:
 11567 ;;		On entry : 0/0
 11568 ;;		On exit  : 0/0
 11569 ;;		Unchanged: 0/0
 11570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11572 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11573 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11574 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11575 ;;Total ram usage:        3 bytes
 11576 ;; Hardware stack levels used:    1
 11577 ;; Hardware stack levels required when called:    4
 11578 ;; This function calls:
 11579 ;;		Nothing
 11580 ;; This function is called by:
 11581 ;;		_main
 11582 ;;		_ModbusRx
 11583 ;; This function uses a non-reentrant model
 11584 ;;
 11585                           
 11586                           	psect	text45
 11587  004BD4                     __ptext45:
 11588                           	opt callstack 0
 11589  004BD4                     _ClearRxBuff:
 11590                           	opt callstack 25
 11591  004BD4                     
 11592                           ;Modbus.c: 71:     int i = 0;
 11593  004BD4  0E00               	movlw	0
 11594  004BD6  6E07               	movwf	(ClearRxBuff@i+1)^0,c
 11595  004BD8  0E00               	movlw	0
 11596  004BDA  6E06               	movwf	ClearRxBuff@i^0,c
 11597                           
 11598                           ;Modbus.c: 72:     for(i=0; i<ByteNum; i++ ){
 11599  004BDC  0E00               	movlw	0
 11600  004BDE  6E07               	movwf	(ClearRxBuff@i+1)^0,c
 11601  004BE0  0E00               	movlw	0
 11602  004BE2  6E06               	movwf	ClearRxBuff@i^0,c
 11603  004BE4  EFFE  F025         	goto	l7676
 11604  004BE8                     l7672:
 11605                           
 11606                           ; BSR set to: 0
 11607                           ;Modbus.c: 73:         rxData[i] = 0xFF;
 11608  004BE8  0E00               	movlw	low _rxData
 11609  004BEA  2406               	addwf	ClearRxBuff@i^0,w,c
 11610  004BEC  6ED9               	movwf	fsr2l,c
 11611  004BEE  0E05               	movlw	high _rxData
 11612  004BF0  2007               	addwfc	(ClearRxBuff@i+1)^0,w,c
 11613  004BF2  6EDA               	movwf	fsr2h,c
 11614  004BF4  0EFF               	movlw	255
 11615  004BF6  6EDF               	movwf	indf2,c
 11616  004BF8                     
 11617                           ; BSR set to: 0
 11618                           ;Modbus.c: 74:     }
 11619  004BF8  4A06               	infsnz	ClearRxBuff@i^0,f,c
 11620  004BFA  2A07               	incf	(ClearRxBuff@i+1)^0,f,c
 11621  004BFC                     l7676:
 11622  004BFC  0100               	movlb	0	; () banked
 11623  004BFE  51D9               	movf	_ByteNum& (0+255),w,b
 11624  004C00  5C06               	subwf	ClearRxBuff@i^0,w,c
 11625  004C02  5007               	movf	(ClearRxBuff@i+1)^0,w,c
 11626  004C04  0A80               	xorlw	128
 11627  004C06  6E05               	movwf	??_ClearRxBuff^0,c
 11628  004C08  51DA               	movf	(_ByteNum+1)& (0+255),w,b
 11629  004C0A  0A80               	xorlw	128
 11630  004C0C  5805               	subwfb	??_ClearRxBuff^0,w,c
 11631  004C0E  A0D8               	btfss	status,0,c
 11632  004C10  EF0C  F026         	goto	u7671
 11633  004C14  EF0E  F026         	goto	u7670
 11634  004C18                     u7671:
 11635  004C18  EFF4  F025         	goto	l7672
 11636  004C1C                     u7670:
 11637  004C1C                     
 11638                           ; BSR set to: 0
 11639  004C1C  0012               	return		;funcret
 11640  004C1E                     __end_of_ClearRxBuff:
 11641                           	opt callstack 0
 11642                           
 11643 ;; *************** function _AddRxBuffToModBus *****************
 11644 ;; Defined at:
 11645 ;;		line 78 in file "Modbus.c"
 11646 ;; Parameters:    Size  Location     Type
 11647 ;;		None
 11648 ;; Auto vars:     Size  Location     Type
 11649 ;;  i               2   47[BANK0 ] int 
 11650 ;; Return value:  Size  Location     Type
 11651 ;;                  1    wreg      void 
 11652 ;; Registers used:
 11653 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11654 ;; Tracked objects:
 11655 ;;		On entry : 0/0
 11656 ;;		On exit  : 0/0
 11657 ;;		Unchanged: 0/0
 11658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11660 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11661 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11662 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11663 ;;Total ram usage:        3 bytes
 11664 ;; Hardware stack levels used:    1
 11665 ;; Hardware stack levels required when called:   13
 11666 ;; This function calls:
 11667 ;;		_printf
 11668 ;; This function is called by:
 11669 ;;		_ModbusRx
 11670 ;; This function uses a non-reentrant model
 11671 ;;
 11672                           
 11673                           	psect	text46
 11674  003E1C                     __ptext46:
 11675                           	opt callstack 0
 11676  003E1C                     _AddRxBuffToModBus:
 11677                           	opt callstack 16
 11678  003E1C                     
 11679                           ;Modbus.c: 79:     int i = 0;
 11680  003E1C  0E00               	movlw	0
 11681  003E1E  0100               	movlb	0	; () banked
 11682  003E20  6F90               	movwf	(AddRxBuffToModBus@i+1)& (0+255),b
 11683  003E22  0E00               	movlw	0
 11684  003E24  6F8F               	movwf	AddRxBuffToModBus@i& (0+255),b
 11685                           
 11686                           ;Modbus.c: 81:     for(i=0l; i<ByteNum; i++){
 11687  003E26  0E00               	movlw	0
 11688  003E28  6F90               	movwf	(AddRxBuffToModBus@i+1)& (0+255),b
 11689  003E2A  0E00               	movlw	0
 11690  003E2C  6F8F               	movwf	AddRxBuffToModBus@i& (0+255),b
 11691  003E2E  EF2B  F01F         	goto	l7712
 11692  003E32                     l7706:
 11693                           
 11694                           ; BSR set to: 0
 11695                           ;Modbus.c: 82:         ModbusData[ModDataCnt] = rxData[i];
 11696  003E32  0E00               	movlw	low _rxData
 11697  003E34  258F               	addwf	AddRxBuffToModBus@i& (0+255),w,b
 11698  003E36  6ED9               	movwf	fsr2l,c
 11699  003E38  0E05               	movlw	high _rxData
 11700  003E3A  2190               	addwfc	(AddRxBuffToModBus@i+1)& (0+255),w,b
 11701  003E3C  6EDA               	movwf	fsr2h,c
 11702  003E3E  0E00               	movlw	low _ModbusData
 11703  003E40  25DB               	addwf	_ModDataCnt& (0+255),w,b
 11704  003E42  6EE1               	movwf	fsr1l,c
 11705  003E44  0E01               	movlw	high _ModbusData
 11706  003E46  21DC               	addwfc	(_ModDataCnt+1)& (0+255),w,b
 11707  003E48  6EE2               	movwf	fsr1h,c
 11708  003E4A  CFDF FFE7          	movff	indf2,indf1
 11709  003E4E                     
 11710                           ; BSR set to: 0
 11711                           ;Modbus.c: 83:         ModDataCnt++;
 11712  003E4E  4BDB               	infsnz	_ModDataCnt& (0+255),f,b
 11713  003E50  2BDC               	incf	(_ModDataCnt+1)& (0+255),f,b
 11714  003E52                     
 11715                           ; BSR set to: 0
 11716                           ;Modbus.c: 84:     }
 11717  003E52  4B8F               	infsnz	AddRxBuffToModBus@i& (0+255),f,b
 11718  003E54  2B90               	incf	(AddRxBuffToModBus@i+1)& (0+255),f,b
 11719  003E56                     l7712:
 11720                           
 11721                           ; BSR set to: 0
 11722  003E56  51D9               	movf	_ByteNum& (0+255),w,b
 11723  003E58  5D8F               	subwf	AddRxBuffToModBus@i& (0+255),w,b
 11724  003E5A  5190               	movf	(AddRxBuffToModBus@i+1)& (0+255),w,b
 11725  003E5C  0A80               	xorlw	128
 11726  003E5E  6E55               	movwf	??_AddRxBuffToModBus^0,c
 11727  003E60  51DA               	movf	(_ByteNum+1)& (0+255),w,b
 11728  003E62  0A80               	xorlw	128
 11729  003E64  5855               	subwfb	??_AddRxBuffToModBus^0,w,c
 11730  003E66  A0D8               	btfss	status,0,c
 11731  003E68  EF38  F01F         	goto	u7681
 11732  003E6C  EF3A  F01F         	goto	u7680
 11733  003E70                     u7681:
 11734  003E70  EF19  F01F         	goto	l7706
 11735  003E74                     u7680:
 11736  003E74                     
 11737                           ; BSR set to: 0
 11738                           ;Modbus.c: 86:     if(Debug ==1){
 11739  003E74  05DF               	decf	_Debug& (0+255),w,b
 11740  003E76  A4D8               	btfss	status,2,c
 11741  003E78  EF40  F01F         	goto	u7691
 11742  003E7C  EF42  F01F         	goto	u7690
 11743  003E80                     u7691:
 11744  003E80  EF53  F01F         	goto	l7718
 11745  003E84                     u7690:
 11746  003E84                     
 11747                           ; BSR set to: 0
 11748                           ;Modbus.c: 87:         printf("Completed Adding rxData Buffer to ModbusData Array\r\n\n"
      +                          );
 11749  003E84  0EFD               	movlw	low STR_9
 11750  003E86  6F7D               	movwf	printf@fmt& (0+255),b
 11751  003E88  0EF5               	movlw	high STR_9
 11752  003E8A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 11753  003E8C  ECEB  F027         	call	_printf	;wreg free
 11754                           
 11755                           ;Modbus.c: 88:         printf("ModDataCnt sitting at %i\r\n\n", ModDataCnt);
 11756  003E90  0E40               	movlw	low STR_10
 11757  003E92  0100               	movlb	0	; () banked
 11758  003E94  6F7D               	movwf	printf@fmt& (0+255),b
 11759  003E96  0EFD               	movlw	high STR_10
 11760  003E98  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 11761  003E9A  C0DB  F07F         	movff	_ModDataCnt,?_printf+2
 11762  003E9E  C0DC  F080         	movff	_ModDataCnt+1,?_printf+3
 11763  003EA2  ECEB  F027         	call	_printf	;wreg free
 11764  003EA6                     l7718:
 11765                           
 11766                           ;Modbus.c: 91:     if(ModbusData[1] == 0x0F){
 11767  003EA6  0E0F               	movlw	15
 11768  003EA8  0101               	movlb	1	; () banked
 11769  003EAA  1901               	xorwf	(_ModbusData+1)& (0+255),w,b
 11770  003EAC  A4D8               	btfss	status,2,c
 11771  003EAE  EF5B  F01F         	goto	u7701
 11772  003EB2  EF5D  F01F         	goto	u7700
 11773  003EB6                     u7701:
 11774  003EB6  EF66  F01F         	goto	l7722
 11775  003EBA                     u7700:
 11776  003EBA                     l7720:
 11777                           
 11778                           ; BSR set to: 1
 11779                           ;Modbus.c: 92:         ExpectedBytes = ModbusData[6] + 9;
 11780  003EBA  0E09               	movlw	9
 11781  003EBC  2506               	addwf	(_ModbusData+6)& (0+255),w,b
 11782  003EBE  0100               	movlb	0	; () banked
 11783  003EC0  6FFA               	movwf	_ExpectedBytes& (0+255),b
 11784  003EC2  6BFB               	clrf	(_ExpectedBytes+1)& (0+255),b
 11785  003EC4  0E00               	movlw	0
 11786  003EC6  23FB               	addwfc	(_ExpectedBytes+1)& (0+255),f,b
 11787                           
 11788                           ;Modbus.c: 93:     }else if (ModbusData[1] == 0x10){
 11789  003EC8  EF76  F01F         	goto	l723
 11790  003ECC                     l7722:
 11791                           
 11792                           ; BSR set to: 1
 11793  003ECC  0E10               	movlw	16
 11794  003ECE  1901               	xorwf	(_ModbusData+1)& (0+255),w,b
 11795  003ED0  A4D8               	btfss	status,2,c
 11796  003ED2  EF6D  F01F         	goto	u7711
 11797  003ED6  EF6F  F01F         	goto	u7710
 11798  003EDA                     u7711:
 11799  003EDA  EF71  F01F         	goto	l7726
 11800  003EDE                     u7710:
 11801  003EDE  EF5D  F01F         	goto	l7720
 11802  003EE2                     l7726:
 11803                           
 11804                           ; BSR set to: 1
 11805                           ;Modbus.c: 96:         ExpectedBytes = 8;
 11806  003EE2  0E00               	movlw	0
 11807  003EE4  0100               	movlb	0	; () banked
 11808  003EE6  6FFB               	movwf	(_ExpectedBytes+1)& (0+255),b
 11809  003EE8  0E08               	movlw	8
 11810  003EEA  6FFA               	movwf	_ExpectedBytes& (0+255),b
 11811  003EEC                     l723:
 11812                           
 11813                           ; BSR set to: 0
 11814  003EEC  0012               	return		;funcret
 11815  003EEE                     __end_of_AddRxBuffToModBus:
 11816                           	opt callstack 0
 11817                           
 11818 ;; *************** function _ModbusFC10 *****************
 11819 ;; Defined at:
 11820 ;;		line 457 in file "Modbus.c"
 11821 ;; Parameters:    Size  Location     Type
 11822 ;;		None
 11823 ;; Auto vars:     Size  Location     Type
 11824 ;;  j               2   56[BANK0 ] int 
 11825 ;;  i               2   54[BANK0 ] int 
 11826 ;;  TempData        2   51[BANK0 ] unsigned int 
 11827 ;;  error           1   53[BANK0 ] _Bool 
 11828 ;; Return value:  Size  Location     Type
 11829 ;;                  1    wreg      void 
 11830 ;; Registers used:
 11831 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11832 ;; Tracked objects:
 11833 ;;		On entry : 0/0
 11834 ;;		On exit  : 0/0
 11835 ;;		Unchanged: 0/0
 11836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11838 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11839 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11840 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11841 ;;Total ram usage:       11 bytes
 11842 ;; Hardware stack levels used:    1
 11843 ;; Hardware stack levels required when called:   13
 11844 ;; This function calls:
 11845 ;;		_ModbusError
 11846 ;;		_UART1_Write_string
 11847 ;;		_generateCRC
 11848 ;;		_printf
 11849 ;; This function is called by:
 11850 ;;		_main
 11851 ;; This function uses a non-reentrant model
 11852 ;;
 11853                           
 11854                           	psect	text47
 11855  002586                     __ptext47:
 11856                           	opt callstack 0
 11857  002586                     _ModbusFC10:
 11858                           	opt callstack 17
 11859  002586                     
 11860                           ;Modbus.c: 462:     int j = 0;
 11861  002586  0E00               	movlw	0
 11862  002588  0100               	movlb	0	; () banked
 11863  00258A  6F99               	movwf	(ModbusFC10@j+1)& (0+255),b
 11864  00258C  0E00               	movlw	0
 11865  00258E  6F98               	movwf	ModbusFC10@j& (0+255),b
 11866                           
 11867                           ;Modbus.c: 463:     unsigned int TempData = 0x0000;
 11868  002590  0E00               	movlw	0
 11869  002592  6F94               	movwf	(ModbusFC10@TempData+1)& (0+255),b
 11870  002594  0E00               	movlw	0
 11871  002596  6F93               	movwf	ModbusFC10@TempData& (0+255),b
 11872                           
 11873                           ;Modbus.c: 464:     _Bool error = 0;
 11874  002598  0E00               	movlw	0
 11875  00259A  6F95               	movwf	ModbusFC10@error& (0+255),b
 11876  00259C                     
 11877                           ; BSR set to: 0
 11878                           ;Modbus.c: 466:     if(((ModbusData[2] * 256) + ModbusData[3]) + ((ModbusData[4] * 256) 
      +                          + ModbusData[5]) > 32){
 11879  00259C  0101               	movlb	1	; () banked
 11880  00259E  5102               	movf	(_ModbusData+2)& (0+255),w,b
 11881  0025A0  0100               	movlb	0	; () banked
 11882  0025A2  6F90               	movwf	(??_ModbusFC10+1)& (0+255),b
 11883  0025A4  6B8F               	clrf	??_ModbusFC10& (0+255),b
 11884  0025A6  0101               	movlb	1	; () banked
 11885  0025A8  5105               	movf	(_ModbusData+5)& (0+255),w,b
 11886  0025AA  C104  F091         	movff	_ModbusData+4,??_ModbusFC10+2
 11887  0025AE  0100               	movlb	0	; () banked
 11888  0025B0  6B92               	clrf	(??_ModbusFC10+3)& (0+255),b
 11889  0025B2  C091  F092         	movff	??_ModbusFC10+2,??_ModbusFC10+3
 11890  0025B6  6B91               	clrf	(??_ModbusFC10+2)& (0+255),b
 11891  0025B8  2791               	addwf	(??_ModbusFC10+2)& (0+255),f,b
 11892  0025BA  0E00               	movlw	0
 11893  0025BC  2392               	addwfc	(??_ModbusFC10+3)& (0+255),f,b
 11894  0025BE  518F               	movf	??_ModbusFC10& (0+255),w,b
 11895  0025C0  2791               	addwf	(??_ModbusFC10+2)& (0+255),f,b
 11896  0025C2  5190               	movf	(??_ModbusFC10+1)& (0+255),w,b
 11897  0025C4  2392               	addwfc	(??_ModbusFC10+3)& (0+255),f,b
 11898  0025C6  0101               	movlb	1	; () banked
 11899  0025C8  5103               	movf	(_ModbusData+3)& (0+255),w,b
 11900  0025CA  0100               	movlb	0	; () banked
 11901  0025CC  2791               	addwf	(??_ModbusFC10+2)& (0+255),f,b
 11902  0025CE  0E00               	movlw	0
 11903  0025D0  2392               	addwfc	(??_ModbusFC10+3)& (0+255),f,b
 11904  0025D2  BF92               	btfsc	(??_ModbusFC10+3)& (0+255),7,b
 11905  0025D4  EFF5  F012         	goto	u8031
 11906  0025D8  5192               	movf	(??_ModbusFC10+3)& (0+255),w,b
 11907  0025DA  E109               	bnz	u8030
 11908  0025DC  0E21               	movlw	33
 11909  0025DE  5D91               	subwf	(??_ModbusFC10+2)& (0+255),w,b
 11910  0025E0  A0D8               	btfss	status,0,c
 11911  0025E2  EFF5  F012         	goto	u8031
 11912  0025E6  EFF7  F012         	goto	u8030
 11913  0025EA                     u8031:
 11914  0025EA  EF00  F013         	goto	l7986
 11915  0025EE                     u8030:
 11916  0025EE                     
 11917                           ; BSR set to: 0
 11918                           ;Modbus.c: 467:          printf("Requested registers out of range.  0x0000 to 0x020.\r\n
      +                          ");
 11919  0025EE  0E9F               	movlw	low STR_58
 11920  0025F0  6F7D               	movwf	printf@fmt& (0+255),b
 11921  0025F2  0EF6               	movlw	high STR_58
 11922  0025F4  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 11923  0025F6  ECEB  F027         	call	_printf	;wreg free
 11924  0025FA                     
 11925                           ;Modbus.c: 468:          error = 1;
 11926  0025FA  0E01               	movlw	1
 11927  0025FC  0100               	movlb	0	; () banked
 11928  0025FE  6F95               	movwf	ModbusFC10@error& (0+255),b
 11929  002600                     l7986:
 11930                           
 11931                           ; BSR set to: 0
 11932                           ;Modbus.c: 471:     if(error == 0){
 11933  002600  5195               	movf	ModbusFC10@error& (0+255),w,b
 11934  002602  A4D8               	btfss	status,2,c
 11935  002604  EF06  F013         	goto	u8041
 11936  002608  EF08  F013         	goto	u8040
 11937  00260C                     u8041:
 11938  00260C  EFD3  F013         	goto	l8034
 11939  002610                     u8040:
 11940  002610                     
 11941                           ; BSR set to: 0
 11942                           ;Modbus.c: 473:         MBResCnt = 0;
 11943  002610  0E00               	movlw	0
 11944  002612  6FD8               	movwf	(_MBResCnt+1)& (0+255),b
 11945  002614  0E00               	movlw	0
 11946  002616  6FD7               	movwf	_MBResCnt& (0+255),b
 11947  002618                     
 11948                           ; BSR set to: 0
 11949                           ;Modbus.c: 474:         MBRespon[MBResCnt] = ModbusData[0];
 11950  002618  0E57               	movlw	low _MBRespon
 11951  00261A  25D7               	addwf	_MBResCnt& (0+255),w,b
 11952  00261C  6ED9               	movwf	fsr2l,c
 11953  00261E  0E02               	movlw	high _MBRespon
 11954  002620  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 11955  002622  6EDA               	movwf	fsr2h,c
 11956  002624  C100  FFDF         	movff	_ModbusData,indf2
 11957  002628                     
 11958                           ; BSR set to: 0
 11959                           ;Modbus.c: 475:         MBResCnt++;
 11960  002628  4BD7               	infsnz	_MBResCnt& (0+255),f,b
 11961  00262A  2BD8               	incf	(_MBResCnt+1)& (0+255),f,b
 11962  00262C                     
 11963                           ; BSR set to: 0
 11964                           ;Modbus.c: 476:         MBRespon[MBResCnt] = ModbusData[1];
 11965  00262C  0E57               	movlw	low _MBRespon
 11966  00262E  25D7               	addwf	_MBResCnt& (0+255),w,b
 11967  002630  6ED9               	movwf	fsr2l,c
 11968  002632  0E02               	movlw	high _MBRespon
 11969  002634  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 11970  002636  6EDA               	movwf	fsr2h,c
 11971  002638  C101  FFDF         	movff	_ModbusData+1,indf2
 11972  00263C                     
 11973                           ; BSR set to: 0
 11974                           ;Modbus.c: 477:         MBResCnt++;
 11975  00263C  4BD7               	infsnz	_MBResCnt& (0+255),f,b
 11976  00263E  2BD8               	incf	(_MBResCnt+1)& (0+255),f,b
 11977  002640                     
 11978                           ; BSR set to: 0
 11979                           ;Modbus.c: 478:         MBRespon[MBResCnt] = ModbusData[2];
 11980  002640  0E57               	movlw	low _MBRespon
 11981  002642  25D7               	addwf	_MBResCnt& (0+255),w,b
 11982  002644  6ED9               	movwf	fsr2l,c
 11983  002646  0E02               	movlw	high _MBRespon
 11984  002648  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 11985  00264A  6EDA               	movwf	fsr2h,c
 11986  00264C  C102  FFDF         	movff	_ModbusData+2,indf2
 11987  002650                     
 11988                           ; BSR set to: 0
 11989                           ;Modbus.c: 479:         MBResCnt++;
 11990  002650  4BD7               	infsnz	_MBResCnt& (0+255),f,b
 11991  002652  2BD8               	incf	(_MBResCnt+1)& (0+255),f,b
 11992  002654                     
 11993                           ; BSR set to: 0
 11994                           ;Modbus.c: 480:         MBRespon[MBResCnt] = ModbusData[3];
 11995  002654  0E57               	movlw	low _MBRespon
 11996  002656  25D7               	addwf	_MBResCnt& (0+255),w,b
 11997  002658  6ED9               	movwf	fsr2l,c
 11998  00265A  0E02               	movlw	high _MBRespon
 11999  00265C  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 12000  00265E  6EDA               	movwf	fsr2h,c
 12001  002660  C103  FFDF         	movff	_ModbusData+3,indf2
 12002  002664                     
 12003                           ; BSR set to: 0
 12004                           ;Modbus.c: 481:         MBResCnt++;
 12005  002664  4BD7               	infsnz	_MBResCnt& (0+255),f,b
 12006  002666  2BD8               	incf	(_MBResCnt+1)& (0+255),f,b
 12007  002668                     
 12008                           ; BSR set to: 0
 12009                           ;Modbus.c: 482:         MBRespon[MBResCnt] = ModbusData[4];
 12010  002668  0E57               	movlw	low _MBRespon
 12011  00266A  25D7               	addwf	_MBResCnt& (0+255),w,b
 12012  00266C  6ED9               	movwf	fsr2l,c
 12013  00266E  0E02               	movlw	high _MBRespon
 12014  002670  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 12015  002672  6EDA               	movwf	fsr2h,c
 12016  002674  C104  FFDF         	movff	_ModbusData+4,indf2
 12017  002678                     
 12018                           ; BSR set to: 0
 12019                           ;Modbus.c: 483:         MBResCnt++;
 12020  002678  4BD7               	infsnz	_MBResCnt& (0+255),f,b
 12021  00267A  2BD8               	incf	(_MBResCnt+1)& (0+255),f,b
 12022  00267C                     
 12023                           ; BSR set to: 0
 12024                           ;Modbus.c: 484:         MBRespon[MBResCnt] = ModbusData[5];
 12025  00267C  0E57               	movlw	low _MBRespon
 12026  00267E  25D7               	addwf	_MBResCnt& (0+255),w,b
 12027  002680  6ED9               	movwf	fsr2l,c
 12028  002682  0E02               	movlw	high _MBRespon
 12029  002684  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 12030  002686  6EDA               	movwf	fsr2h,c
 12031  002688  C105  FFDF         	movff	_ModbusData+5,indf2
 12032  00268C                     
 12033                           ; BSR set to: 0
 12034                           ;Modbus.c: 485:         MBResCnt++;
 12035  00268C  4BD7               	infsnz	_MBResCnt& (0+255),f,b
 12036  00268E  2BD8               	incf	(_MBResCnt+1)& (0+255),f,b
 12037                           
 12038                           ;Modbus.c: 487:         for(i=0; i< (ModbusData[5]) ; i++ ){
 12039  002690  0E00               	movlw	0
 12040  002692  6F97               	movwf	(ModbusFC10@i+1)& (0+255),b
 12041  002694  0E00               	movlw	0
 12042  002696  6F96               	movwf	ModbusFC10@i& (0+255),b
 12043  002698  EF84  F013         	goto	l8022
 12044  00269C                     l8014:
 12045                           
 12046                           ; BSR set to: 0
 12047                           ;Modbus.c: 494:             TempData = ModbusData[7 +j] *256 + ModbusData[8 +j];
 12048  00269C  0E08               	movlw	low (_ModbusData+8)
 12049  00269E  2598               	addwf	ModbusFC10@j& (0+255),w,b
 12050  0026A0  6ED9               	movwf	fsr2l,c
 12051  0026A2  0E01               	movlw	high (_ModbusData+8)
 12052  0026A4  2199               	addwfc	(ModbusFC10@j+1)& (0+255),w,b
 12053  0026A6  6EDA               	movwf	fsr2h,c
 12054  0026A8  50DF               	movf	indf2,w,c
 12055  0026AA  6F8F               	movwf	??_ModbusFC10& (0+255),b
 12056  0026AC  0E07               	movlw	low (_ModbusData+7)
 12057  0026AE  2598               	addwf	ModbusFC10@j& (0+255),w,b
 12058  0026B0  6ED9               	movwf	fsr2l,c
 12059  0026B2  0E01               	movlw	high (_ModbusData+7)
 12060  0026B4  2199               	addwfc	(ModbusFC10@j+1)& (0+255),w,b
 12061  0026B6  6EDA               	movwf	fsr2h,c
 12062  0026B8  50DF               	movf	indf2,w,c
 12063  0026BA  6F90               	movwf	(??_ModbusFC10+1)& (0+255),b
 12064  0026BC  5190               	movf	(??_ModbusFC10+1)& (0+255),w,b
 12065  0026BE  6F92               	movwf	(??_ModbusFC10+3)& (0+255),b
 12066  0026C0  6B91               	clrf	(??_ModbusFC10+2)& (0+255),b
 12067  0026C2  518F               	movf	??_ModbusFC10& (0+255),w,b
 12068  0026C4  2591               	addwf	(??_ModbusFC10+2)& (0+255),w,b
 12069  0026C6  6F93               	movwf	ModbusFC10@TempData& (0+255),b
 12070  0026C8  0E00               	movlw	0
 12071  0026CA  2192               	addwfc	(??_ModbusFC10+3)& (0+255),w,b
 12072  0026CC  6F94               	movwf	(ModbusFC10@TempData+1)& (0+255),b
 12073  0026CE                     
 12074                           ; BSR set to: 0
 12075                           ;Modbus.c: 495:             j = j+2;
 12076  0026CE  0E02               	movlw	2
 12077  0026D0  2598               	addwf	ModbusFC10@j& (0+255),w,b
 12078  0026D2  6F98               	movwf	ModbusFC10@j& (0+255),b
 12079  0026D4  0E00               	movlw	0
 12080  0026D6  2199               	addwfc	(ModbusFC10@j+1)& (0+255),w,b
 12081  0026D8  6F99               	movwf	(ModbusFC10@j+1)& (0+255),b
 12082  0026DA                     
 12083                           ; BSR set to: 0
 12084                           ;Modbus.c: 496:             MB400xx[ModbusData[3] +i] = TempData;
 12085  0026DA  0101               	movlb	1	; () banked
 12086  0026DC  5103               	movf	(_ModbusData+3)& (0+255),w,b
 12087  0026DE  0100               	movlb	0	; () banked
 12088  0026E0  2596               	addwf	ModbusFC10@i& (0+255),w,b
 12089  0026E2  6F8F               	movwf	??_ModbusFC10& (0+255),b
 12090  0026E4  0E00               	movlw	0
 12091  0026E6  2197               	addwfc	(ModbusFC10@i+1)& (0+255),w,b
 12092  0026E8  6F90               	movwf	(??_ModbusFC10+1)& (0+255),b
 12093  0026EA  90D8               	bcf	status,0,c
 12094  0026EC  378F               	rlcf	??_ModbusFC10& (0+255),f,b
 12095  0026EE  3790               	rlcf	(??_ModbusFC10+1)& (0+255),f,b
 12096  0026F0  0EB7               	movlw	low _MB400xx
 12097  0026F2  258F               	addwf	??_ModbusFC10& (0+255),w,b
 12098  0026F4  6ED9               	movwf	fsr2l,c
 12099  0026F6  0E03               	movlw	high _MB400xx
 12100  0026F8  2190               	addwfc	(??_ModbusFC10+1)& (0+255),w,b
 12101  0026FA  6EDA               	movwf	fsr2h,c
 12102  0026FC  C093  FFDE         	movff	ModbusFC10@TempData,postinc2
 12103  002700  C094  FFDD         	movff	ModbusFC10@TempData+1,postdec2
 12104  002704                     
 12105                           ; BSR set to: 0
 12106                           ;Modbus.c: 497:         }
 12107  002704  4B96               	infsnz	ModbusFC10@i& (0+255),f,b
 12108  002706  2B97               	incf	(ModbusFC10@i+1)& (0+255),f,b
 12109  002708                     l8022:
 12110                           
 12111                           ; BSR set to: 0
 12112  002708  0101               	movlb	1	; () banked
 12113  00270A  5105               	movf	(_ModbusData+5)& (0+255),w,b
 12114  00270C  0100               	movlb	0	; () banked
 12115  00270E  6F8F               	movwf	??_ModbusFC10& (0+255),b
 12116  002710  6B90               	clrf	(??_ModbusFC10+1)& (0+255),b
 12117  002712  518F               	movf	??_ModbusFC10& (0+255),w,b
 12118  002714  5D96               	subwf	ModbusFC10@i& (0+255),w,b
 12119  002716  5197               	movf	(ModbusFC10@i+1)& (0+255),w,b
 12120  002718  0A80               	xorlw	128
 12121  00271A  6F91               	movwf	(??_ModbusFC10+2)& (0+255),b
 12122  00271C  5190               	movf	(??_ModbusFC10+1)& (0+255),w,b
 12123  00271E  0A80               	xorlw	128
 12124  002720  5991               	subwfb	(??_ModbusFC10+2)& (0+255),w,b
 12125  002722  A0D8               	btfss	status,0,c
 12126  002724  EF96  F013         	goto	u8051
 12127  002728  EF98  F013         	goto	u8050
 12128  00272C                     u8051:
 12129  00272C  EF4E  F013         	goto	l8014
 12130  002730                     u8050:
 12131  002730                     
 12132                           ; BSR set to: 0
 12133                           ;Modbus.c: 499:         ByteHi = generateCRC(MBResCnt, 1);
 12134  002730  C0D7  F005         	movff	_MBResCnt,generateCRC@MessCnt
 12135  002734  C0D8  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
 12136  002738  0E01               	movlw	1
 12137  00273A  6E07               	movwf	generateCRC@HiOrLo^0,c
 12138  00273C  ECA0  F01E         	call	_generateCRC	;wreg free
 12139  002740  C005  F0D5         	movff	?_generateCRC,_ByteHi
 12140  002744  C006  F0D6         	movff	?_generateCRC+1,_ByteHi+1
 12141                           
 12142                           ;Modbus.c: 500:         ByteLo = generateCRC(MBResCnt, 0);
 12143  002748  C0D7  F005         	movff	_MBResCnt,generateCRC@MessCnt
 12144  00274C  C0D8  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
 12145  002750  0E00               	movlw	0
 12146  002752  6E07               	movwf	generateCRC@HiOrLo^0,c
 12147  002754  ECA0  F01E         	call	_generateCRC	;wreg free
 12148  002758  C005  F0F6         	movff	?_generateCRC,_ByteLo
 12149  00275C  C006  F0F7         	movff	?_generateCRC+1,_ByteLo+1
 12150  002760                     
 12151                           ;Modbus.c: 502:         MBRespon[MBResCnt] = ByteHi;
 12152  002760  0E57               	movlw	low _MBRespon
 12153  002762  0100               	movlb	0	; () banked
 12154  002764  25D7               	addwf	_MBResCnt& (0+255),w,b
 12155  002766  6ED9               	movwf	fsr2l,c
 12156  002768  0E02               	movlw	high _MBRespon
 12157  00276A  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 12158  00276C  6EDA               	movwf	fsr2h,c
 12159  00276E  C0D5  FFDF         	movff	_ByteHi,indf2
 12160  002772                     
 12161                           ; BSR set to: 0
 12162                           ;Modbus.c: 503:         MBRespon[MBResCnt +1] = ByteLo;
 12163  002772  0E58               	movlw	low (_MBRespon+1)
 12164  002774  25D7               	addwf	_MBResCnt& (0+255),w,b
 12165  002776  6ED9               	movwf	fsr2l,c
 12166  002778  0E02               	movlw	high (_MBRespon+1)
 12167  00277A  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 12168  00277C  6EDA               	movwf	fsr2h,c
 12169  00277E  C0F6  FFDF         	movff	_ByteLo,indf2
 12170  002782                     
 12171                           ; BSR set to: 0
 12172                           ;Modbus.c: 504:         MBResCnt = MBResCnt +2;
 12173  002782  0E02               	movlw	2
 12174  002784  25D7               	addwf	_MBResCnt& (0+255),w,b
 12175  002786  6FD7               	movwf	_MBResCnt& (0+255),b
 12176  002788  0E00               	movlw	0
 12177  00278A  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 12178  00278C  6FD8               	movwf	(_MBResCnt+1)& (0+255),b
 12179  00278E                     
 12180                           ; BSR set to: 0
 12181                           ;Modbus.c: 506:         UART1_Write_string(MBRespon,MBResCnt);
 12182  00278E  0E57               	movlw	low _MBRespon
 12183  002790  6E06               	movwf	UART1_Write_string@data^0,c
 12184  002792  0E02               	movlw	high _MBRespon
 12185  002794  6E07               	movwf	(UART1_Write_string@data+1)^0,c
 12186  002796  C0D7  F008         	movff	_MBResCnt,UART1_Write_string@data_len
 12187  00279A  C0D8  F009         	movff	_MBResCnt+1,UART1_Write_string@data_len+1
 12188  00279E  EC6D  F023         	call	_UART1_Write_string	;wreg free
 12189                           
 12190                           ;Modbus.c: 507:     }else{
 12191  0027A2  EFD9  F013         	goto	l820
 12192  0027A6                     l8034:
 12193                           
 12194                           ; BSR set to: 0
 12195                           ;Modbus.c: 508:         ModbusError(0x02);
 12196  0027A6  0E00               	movlw	0
 12197  0027A8  6E15               	movwf	(ModbusError@ErrorCode+1)^0,c
 12198  0027AA  0E02               	movlw	2
 12199  0027AC  6E14               	movwf	ModbusError@ErrorCode^0,c
 12200  0027AE  ECA2  F020         	call	_ModbusError	;wreg free
 12201  0027B2                     l820:
 12202  0027B2  0012               	return		;funcret
 12203  0027B4                     __end_of_ModbusFC10:
 12204                           	opt callstack 0
 12205                           
 12206 ;; *************** function _ModbusFC04 *****************
 12207 ;; Defined at:
 12208 ;;		line 253 in file "Modbus.c"
 12209 ;; Parameters:    Size  Location     Type
 12210 ;;		None
 12211 ;; Auto vars:     Size  Location     Type
 12212 ;;  convertedVal    2   53[BANK0 ] unsigned short 
 12213 ;;  i               2   56[BANK0 ] int 
 12214 ;;  error           1   55[BANK0 ] _Bool 
 12215 ;; Return value:  Size  Location     Type
 12216 ;;                  1    wreg      void 
 12217 ;; Registers used:
 12218 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12219 ;; Tracked objects:
 12220 ;;		On entry : 0/0
 12221 ;;		On exit  : 0/0
 12222 ;;		Unchanged: 0/0
 12223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12225 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12226 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12227 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12228 ;;Total ram usage:       11 bytes
 12229 ;; Hardware stack levels used:    1
 12230 ;; Hardware stack levels required when called:   13
 12231 ;; This function calls:
 12232 ;;		_ADCC_GetSingleConversion
 12233 ;;		_ModbusError
 12234 ;;		_UART1_Write_string
 12235 ;;		_generateCRC
 12236 ;;		_printf
 12237 ;; This function is called by:
 12238 ;;		_main
 12239 ;; This function uses a non-reentrant model
 12240 ;;
 12241                           
 12242                           	psect	text48
 12243  00012A                     __ptext48:
 12244                           	opt callstack 0
 12245  00012A                     _ModbusFC04:
 12246                           	opt callstack 17
 12247  00012A                     
 12248                           ;Modbus.c: 257:     _Bool error = 0;
 12249  00012A  0E00               	movlw	0
 12250  00012C  0100               	movlb	0	; () banked
 12251  00012E  6F97               	movwf	ModbusFC04@error& (0+255),b
 12252                           
 12253                           ;Modbus.c: 259:     MBResCnt = 0;
 12254  000130  0E00               	movlw	0
 12255  000132  6FD8               	movwf	(_MBResCnt+1)& (0+255),b
 12256  000134  0E00               	movlw	0
 12257  000136  6FD7               	movwf	_MBResCnt& (0+255),b
 12258  000138                     
 12259                           ; BSR set to: 0
 12260                           ;Modbus.c: 260:     MBRespon[MBResCnt] = ModbusData[0];
 12261  000138  0E57               	movlw	low _MBRespon
 12262  00013A  25D7               	addwf	_MBResCnt& (0+255),w,b
 12263  00013C  6ED9               	movwf	fsr2l,c
 12264  00013E  0E02               	movlw	high _MBRespon
 12265  000140  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 12266  000142  6EDA               	movwf	fsr2h,c
 12267  000144  C100  FFDF         	movff	_ModbusData,indf2
 12268  000148                     
 12269                           ; BSR set to: 0
 12270                           ;Modbus.c: 261:     MBResCnt++;
 12271  000148  4BD7               	infsnz	_MBResCnt& (0+255),f,b
 12272  00014A  2BD8               	incf	(_MBResCnt+1)& (0+255),f,b
 12273  00014C                     
 12274                           ; BSR set to: 0
 12275                           ;Modbus.c: 262:     MBRespon[MBResCnt] = ModbusData[1];
 12276  00014C  0E57               	movlw	low _MBRespon
 12277  00014E  25D7               	addwf	_MBResCnt& (0+255),w,b
 12278  000150  6ED9               	movwf	fsr2l,c
 12279  000152  0E02               	movlw	high _MBRespon
 12280  000154  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 12281  000156  6EDA               	movwf	fsr2h,c
 12282  000158  C101  FFDF         	movff	_ModbusData+1,indf2
 12283  00015C                     
 12284                           ; BSR set to: 0
 12285                           ;Modbus.c: 263:     MBResCnt++;
 12286  00015C  4BD7               	infsnz	_MBResCnt& (0+255),f,b
 12287  00015E  2BD8               	incf	(_MBResCnt+1)& (0+255),f,b
 12288  000160                     
 12289                           ; BSR set to: 0
 12290                           ;Modbus.c: 264:     MBRespon[MBResCnt] = ModbusData[5] *2;
 12291  000160  0101               	movlb	1	; () banked
 12292  000162  5105               	movf	(_ModbusData+5)& (0+255),w,b
 12293  000164  0D02               	mullw	2
 12294  000166  0E57               	movlw	low _MBRespon
 12295  000168  0100               	movlb	0	; () banked
 12296  00016A  25D7               	addwf	_MBResCnt& (0+255),w,b
 12297  00016C  6ED9               	movwf	fsr2l,c
 12298  00016E  0E02               	movlw	high _MBRespon
 12299  000170  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 12300  000172  6EDA               	movwf	fsr2h,c
 12301  000174  CFF3 FFDF          	movff	prodl,indf2
 12302  000178                     
 12303                           ; BSR set to: 0
 12304                           ;Modbus.c: 265:     MBResCnt++;
 12305  000178  4BD7               	infsnz	_MBResCnt& (0+255),f,b
 12306  00017A  2BD8               	incf	(_MBResCnt+1)& (0+255),f,b
 12307                           
 12308                           ;Modbus.c: 268:     switch(ModbusData[2]){
 12309  00017C  EFC1  F004         	goto	l8122
 12310  000180                     l8050:
 12311                           
 12312                           ; BSR set to: 0
 12313                           ;Modbus.c: 271:         {;Modbus.c: 272:             printf("Requested Circuit Data\r\n"
      +                          );
 12314  000180  0EAF               	movlw	low STR_36
 12315  000182  6F7D               	movwf	printf@fmt& (0+255),b
 12316  000184  0EFD               	movlw	high STR_36
 12317  000186  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 12318  000188  ECEB  F027         	call	_printf	;wreg free
 12319  00018C                     
 12320                           ;Modbus.c: 274:             if(
 12321  00018C  0101               	movlb	1	; () banked
 12322  00018E  5102               	movf	(_ModbusData+2)& (0+255),w,b
 12323  000190  0100               	movlb	0	; () banked
 12324  000192  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 12325  000194  6B8F               	clrf	??_ModbusFC04& (0+255),b
 12326  000196  0101               	movlb	1	; () banked
 12327  000198  5105               	movf	(_ModbusData+5)& (0+255),w,b
 12328  00019A  C104  F091         	movff	_ModbusData+4,??_ModbusFC04+2
 12329  00019E  0100               	movlb	0	; () banked
 12330  0001A0  6B92               	clrf	(??_ModbusFC04+3)& (0+255),b
 12331  0001A2  C091  F092         	movff	??_ModbusFC04+2,??_ModbusFC04+3
 12332  0001A6  6B91               	clrf	(??_ModbusFC04+2)& (0+255),b
 12333  0001A8  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 12334  0001AA  0E00               	movlw	0
 12335  0001AC  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 12336  0001AE  518F               	movf	??_ModbusFC04& (0+255),w,b
 12337  0001B0  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 12338  0001B2  5190               	movf	(??_ModbusFC04+1)& (0+255),w,b
 12339  0001B4  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 12340  0001B6  0101               	movlb	1	; () banked
 12341  0001B8  5103               	movf	(_ModbusData+3)& (0+255),w,b
 12342  0001BA  0100               	movlb	0	; () banked
 12343  0001BC  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 12344  0001BE  0E00               	movlw	0
 12345  0001C0  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 12346  0001C2  BF92               	btfsc	(??_ModbusFC04+3)& (0+255),7,b
 12347  0001C4  EFE6  F000         	goto	u8061
 12348  0001C8  EFE8  F000         	goto	u8060
 12349  0001CC                     u8061:
 12350  0001CC  EF11  F001         	goto	l8056
 12351  0001D0                     u8060:
 12352  0001D0                     
 12353                           ; BSR set to: 0
 12354  0001D0  0101               	movlb	1	; () banked
 12355  0001D2  5102               	movf	(_ModbusData+2)& (0+255),w,b
 12356  0001D4  0100               	movlb	0	; () banked
 12357  0001D6  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 12358  0001D8  6B8F               	clrf	??_ModbusFC04& (0+255),b
 12359  0001DA  0101               	movlb	1	; () banked
 12360  0001DC  5105               	movf	(_ModbusData+5)& (0+255),w,b
 12361  0001DE  C104  F091         	movff	_ModbusData+4,??_ModbusFC04+2
 12362  0001E2  0100               	movlb	0	; () banked
 12363  0001E4  6B92               	clrf	(??_ModbusFC04+3)& (0+255),b
 12364  0001E6  C091  F092         	movff	??_ModbusFC04+2,??_ModbusFC04+3
 12365  0001EA  6B91               	clrf	(??_ModbusFC04+2)& (0+255),b
 12366  0001EC  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 12367  0001EE  0E00               	movlw	0
 12368  0001F0  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 12369  0001F2  518F               	movf	??_ModbusFC04& (0+255),w,b
 12370  0001F4  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 12371  0001F6  5190               	movf	(??_ModbusFC04+1)& (0+255),w,b
 12372  0001F8  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 12373  0001FA  0101               	movlb	1	; () banked
 12374  0001FC  5103               	movf	(_ModbusData+3)& (0+255),w,b
 12375  0001FE  0100               	movlb	0	; () banked
 12376  000200  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 12377  000202  0E00               	movlw	0
 12378  000204  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 12379  000206  BF92               	btfsc	(??_ModbusFC04+3)& (0+255),7,b
 12380  000208  EF0F  F001         	goto	u8071
 12381  00020C  5192               	movf	(??_ModbusFC04+3)& (0+255),w,b
 12382  00020E  E109               	bnz	u8070
 12383  000210  0E21               	movlw	33
 12384  000212  5D91               	subwf	(??_ModbusFC04+2)& (0+255),w,b
 12385  000214  A0D8               	btfss	status,0,c
 12386  000216  EF0F  F001         	goto	u8071
 12387  00021A  EF11  F001         	goto	u8070
 12388  00021E                     u8071:
 12389  00021E  EFEC  F004         	goto	l8124
 12390  000222                     u8070:
 12391  000222                     l8056:
 12392                           
 12393                           ; BSR set to: 0
 12394                           ;Modbus.c: 276:                 (((ModbusData[2] * 256) + ModbusData[3]) + ((ModbusData[
      +                          4] * 256) + ModbusData[5]) > 32)){;Modbus.c: 278:                 printf("Registers out 
      +                          of range.\r\nValid: 0x0000 to 0x0031.\r\n");
 12395  000222  0E3E               	movlw	low STR_34
 12396  000224  6F7D               	movwf	printf@fmt& (0+255),b
 12397  000226  0EF7               	movlw	high STR_34
 12398  000228  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 12399  00022A  ECEB  F027         	call	_printf	;wreg free
 12400                           
 12401                           ;Modbus.c: 280:                 printf("Requested: 0x%04x to 0x%04x\r\n", ModbusData[2] 
      +                          * 256 + ModbusData[3],
 12402  00022E  0E04               	movlw	low STR_35
 12403  000230  0100               	movlb	0	; () banked
 12404  000232  6F7D               	movwf	printf@fmt& (0+255),b
 12405  000234  0EFD               	movlw	high STR_35
 12406  000236  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 12407  000238  0101               	movlb	1	; () banked
 12408  00023A  5102               	movf	(_ModbusData+2)& (0+255),w,b
 12409  00023C  0100               	movlb	0	; () banked
 12410  00023E  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 12411  000240  6B8F               	clrf	??_ModbusFC04& (0+255),b
 12412  000242  0101               	movlb	1	; () banked
 12413  000244  5103               	movf	(_ModbusData+3)& (0+255),w,b
 12414  000246  0100               	movlb	0	; () banked
 12415  000248  258F               	addwf	??_ModbusFC04& (0+255),w,b
 12416  00024A  6F7F               	movwf	(?_printf+2)& (0+255),b
 12417  00024C  0101               	movlb	1	; () banked
 12418  00024E  0E00               	movlw	0
 12419  000250  0100               	movlb	0	; () banked
 12420  000252  2190               	addwfc	(??_ModbusFC04+1)& (0+255),w,b
 12421  000254  6F80               	movwf	(?_printf+3)& (0+255),b
 12422  000256  0101               	movlb	1	; () banked
 12423  000258  5104               	movf	(_ModbusData+4)& (0+255),w,b
 12424  00025A  0100               	movlb	0	; () banked
 12425  00025C  6F92               	movwf	(??_ModbusFC04+3)& (0+255),b
 12426  00025E  6B91               	clrf	(??_ModbusFC04+2)& (0+255),b
 12427  000260  0101               	movlb	1	; () banked
 12428  000262  5103               	movf	(_ModbusData+3)& (0+255),w,b
 12429  000264  C102  F093         	movff	_ModbusData+2,??_ModbusFC04+4
 12430  000268  0100               	movlb	0	; () banked
 12431  00026A  6B94               	clrf	(??_ModbusFC04+5)& (0+255),b
 12432  00026C  C093  F094         	movff	??_ModbusFC04+4,??_ModbusFC04+5
 12433  000270  6B93               	clrf	(??_ModbusFC04+4)& (0+255),b
 12434  000272  2793               	addwf	(??_ModbusFC04+4)& (0+255),f,b
 12435  000274  0E00               	movlw	0
 12436  000276  2394               	addwfc	(??_ModbusFC04+5)& (0+255),f,b
 12437  000278  5191               	movf	(??_ModbusFC04+2)& (0+255),w,b
 12438  00027A  2793               	addwf	(??_ModbusFC04+4)& (0+255),f,b
 12439  00027C  5192               	movf	(??_ModbusFC04+3)& (0+255),w,b
 12440  00027E  2394               	addwfc	(??_ModbusFC04+5)& (0+255),f,b
 12441  000280  0101               	movlb	1	; () banked
 12442  000282  5105               	movf	(_ModbusData+5)& (0+255),w,b
 12443  000284  0100               	movlb	0	; () banked
 12444  000286  2593               	addwf	(??_ModbusFC04+4)& (0+255),w,b
 12445  000288  6F81               	movwf	(?_printf+4)& (0+255),b
 12446  00028A  0101               	movlb	1	; () banked
 12447  00028C  0E00               	movlw	0
 12448  00028E  0100               	movlb	0	; () banked
 12449  000290  2194               	addwfc	(??_ModbusFC04+5)& (0+255),w,b
 12450  000292  6F82               	movwf	(?_printf+5)& (0+255),b
 12451  000294  ECEB  F027         	call	_printf	;wreg free
 12452  000298                     l8058:
 12453                           
 12454                           ;Modbus.c: 282:                 error = 1;
 12455  000298  0E01               	movlw	1
 12456  00029A  0100               	movlb	0	; () banked
 12457  00029C  6F97               	movwf	ModbusFC04@error& (0+255),b
 12458  00029E  EFEC  F004         	goto	l8124
 12459  0002A2                     l8060:
 12460                           
 12461                           ; BSR set to: 0
 12462                           ;Modbus.c: 287:         {;Modbus.c: 288:             printf("Requested Part No.\r\n");
 12463  0002A2  0E82               	movlw	low STR_39
 12464  0002A4  6F7D               	movwf	printf@fmt& (0+255),b
 12465  0002A6  0EFE               	movlw	high STR_39
 12466  0002A8  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 12467  0002AA  ECEB  F027         	call	_printf	;wreg free
 12468  0002AE                     
 12469                           ;Modbus.c: 290:             if(
 12470  0002AE  0101               	movlb	1	; () banked
 12471  0002B0  5102               	movf	(_ModbusData+2)& (0+255),w,b
 12472  0002B2  0100               	movlb	0	; () banked
 12473  0002B4  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 12474  0002B6  6B8F               	clrf	??_ModbusFC04& (0+255),b
 12475  0002B8  0101               	movlb	1	; () banked
 12476  0002BA  5105               	movf	(_ModbusData+5)& (0+255),w,b
 12477  0002BC  C104  F091         	movff	_ModbusData+4,??_ModbusFC04+2
 12478  0002C0  0100               	movlb	0	; () banked
 12479  0002C2  6B92               	clrf	(??_ModbusFC04+3)& (0+255),b
 12480  0002C4  C091  F092         	movff	??_ModbusFC04+2,??_ModbusFC04+3
 12481  0002C8  6B91               	clrf	(??_ModbusFC04+2)& (0+255),b
 12482  0002CA  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 12483  0002CC  0E00               	movlw	0
 12484  0002CE  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 12485  0002D0  518F               	movf	??_ModbusFC04& (0+255),w,b
 12486  0002D2  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 12487  0002D4  5190               	movf	(??_ModbusFC04+1)& (0+255),w,b
 12488  0002D6  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 12489  0002D8  0101               	movlb	1	; () banked
 12490  0002DA  5103               	movf	(_ModbusData+3)& (0+255),w,b
 12491  0002DC  0100               	movlb	0	; () banked
 12492  0002DE  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 12493  0002E0  0E00               	movlw	0
 12494  0002E2  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 12495  0002E4  BF92               	btfsc	(??_ModbusFC04+3)& (0+255),7,b
 12496  0002E6  EF7B  F001         	goto	u8081
 12497  0002EA  0592               	decf	(??_ModbusFC04+3)& (0+255),w,b
 12498  0002EC  A0D8               	btfss	status,0,c
 12499  0002EE  EF7B  F001         	goto	u8081
 12500  0002F2  EF7D  F001         	goto	u8080
 12501  0002F6                     u8081:
 12502  0002F6  EFA6  F001         	goto	l8066
 12503  0002FA                     u8080:
 12504  0002FA                     
 12505                           ; BSR set to: 0
 12506  0002FA  0101               	movlb	1	; () banked
 12507  0002FC  5102               	movf	(_ModbusData+2)& (0+255),w,b
 12508  0002FE  0100               	movlb	0	; () banked
 12509  000300  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 12510  000302  6B8F               	clrf	??_ModbusFC04& (0+255),b
 12511  000304  0101               	movlb	1	; () banked
 12512  000306  5105               	movf	(_ModbusData+5)& (0+255),w,b
 12513  000308  C104  F091         	movff	_ModbusData+4,??_ModbusFC04+2
 12514  00030C  0100               	movlb	0	; () banked
 12515  00030E  6B92               	clrf	(??_ModbusFC04+3)& (0+255),b
 12516  000310  C091  F092         	movff	??_ModbusFC04+2,??_ModbusFC04+3
 12517  000314  6B91               	clrf	(??_ModbusFC04+2)& (0+255),b
 12518  000316  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 12519  000318  0E00               	movlw	0
 12520  00031A  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 12521  00031C  518F               	movf	??_ModbusFC04& (0+255),w,b
 12522  00031E  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 12523  000320  5190               	movf	(??_ModbusFC04+1)& (0+255),w,b
 12524  000322  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 12525  000324  0101               	movlb	1	; () banked
 12526  000326  5103               	movf	(_ModbusData+3)& (0+255),w,b
 12527  000328  0100               	movlb	0	; () banked
 12528  00032A  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 12529  00032C  0E00               	movlw	0
 12530  00032E  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 12531  000330  BF92               	btfsc	(??_ModbusFC04+3)& (0+255),7,b
 12532  000332  EFA4  F001         	goto	u8091
 12533  000336  0E09               	movlw	9
 12534  000338  5D91               	subwf	(??_ModbusFC04+2)& (0+255),w,b
 12535  00033A  0E01               	movlw	1
 12536  00033C  5992               	subwfb	(??_ModbusFC04+3)& (0+255),w,b
 12537  00033E  A0D8               	btfss	status,0,c
 12538  000340  EFA4  F001         	goto	u8091
 12539  000344  EFA6  F001         	goto	u8090
 12540  000348                     u8091:
 12541  000348  EFEC  F004         	goto	l8124
 12542  00034C                     u8090:
 12543  00034C                     l8066:
 12544                           
 12545                           ; BSR set to: 0
 12546                           ;Modbus.c: 292:                 (((ModbusData[2] * 256) + ModbusData[3]) + ((ModbusData[
      +                          4] * 256) + ModbusData[5]) > 264)){;Modbus.c: 294:                 printf("Registers out
      +                           of range.\r\nValid: 0x0100 to 0x0108.\r\n");
 12547  00034C  0E42               	movlw	low STR_40
 12548  00034E  6F7D               	movwf	printf@fmt& (0+255),b
 12549  000350  0EF8               	movlw	high STR_40
 12550  000352  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 12551  000354  ECEB  F027         	call	_printf	;wreg free
 12552                           
 12553                           ;Modbus.c: 296:                 printf("Requested: 0x%04x to 0x%04x\r\n", ModbusData[2] 
      +                          * 256 + ModbusData[3],
 12554  000358  0E04               	movlw	low STR_35
 12555  00035A  0100               	movlb	0	; () banked
 12556  00035C  6F7D               	movwf	printf@fmt& (0+255),b
 12557  00035E  0EFD               	movlw	high STR_35
 12558  000360  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 12559  000362  0101               	movlb	1	; () banked
 12560  000364  5102               	movf	(_ModbusData+2)& (0+255),w,b
 12561  000366  0100               	movlb	0	; () banked
 12562  000368  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 12563  00036A  6B8F               	clrf	??_ModbusFC04& (0+255),b
 12564  00036C  0101               	movlb	1	; () banked
 12565  00036E  5103               	movf	(_ModbusData+3)& (0+255),w,b
 12566  000370  0100               	movlb	0	; () banked
 12567  000372  258F               	addwf	??_ModbusFC04& (0+255),w,b
 12568  000374  6F7F               	movwf	(?_printf+2)& (0+255),b
 12569  000376  0101               	movlb	1	; () banked
 12570  000378  0E00               	movlw	0
 12571  00037A  0100               	movlb	0	; () banked
 12572  00037C  2190               	addwfc	(??_ModbusFC04+1)& (0+255),w,b
 12573  00037E  6F80               	movwf	(?_printf+3)& (0+255),b
 12574  000380  0101               	movlb	1	; () banked
 12575  000382  5104               	movf	(_ModbusData+4)& (0+255),w,b
 12576  000384  0100               	movlb	0	; () banked
 12577  000386  6F92               	movwf	(??_ModbusFC04+3)& (0+255),b
 12578  000388  6B91               	clrf	(??_ModbusFC04+2)& (0+255),b
 12579  00038A  0101               	movlb	1	; () banked
 12580  00038C  5103               	movf	(_ModbusData+3)& (0+255),w,b
 12581  00038E  C102  F093         	movff	_ModbusData+2,??_ModbusFC04+4
 12582  000392  0100               	movlb	0	; () banked
 12583  000394  6B94               	clrf	(??_ModbusFC04+5)& (0+255),b
 12584  000396  C093  F094         	movff	??_ModbusFC04+4,??_ModbusFC04+5
 12585  00039A  6B93               	clrf	(??_ModbusFC04+4)& (0+255),b
 12586  00039C  2793               	addwf	(??_ModbusFC04+4)& (0+255),f,b
 12587  00039E  0E00               	movlw	0
 12588  0003A0  2394               	addwfc	(??_ModbusFC04+5)& (0+255),f,b
 12589  0003A2  5191               	movf	(??_ModbusFC04+2)& (0+255),w,b
 12590  0003A4  2793               	addwf	(??_ModbusFC04+4)& (0+255),f,b
 12591  0003A6  5192               	movf	(??_ModbusFC04+3)& (0+255),w,b
 12592  0003A8  2394               	addwfc	(??_ModbusFC04+5)& (0+255),f,b
 12593  0003AA  0101               	movlb	1	; () banked
 12594  0003AC  5105               	movf	(_ModbusData+5)& (0+255),w,b
 12595  0003AE  0100               	movlb	0	; () banked
 12596  0003B0  2593               	addwf	(??_ModbusFC04+4)& (0+255),w,b
 12597  0003B2  6F81               	movwf	(?_printf+4)& (0+255),b
 12598  0003B4  0101               	movlb	1	; () banked
 12599  0003B6  0E00               	movlw	0
 12600  0003B8  0100               	movlb	0	; () banked
 12601  0003BA  2194               	addwfc	(??_ModbusFC04+5)& (0+255),w,b
 12602  0003BC  6F82               	movwf	(?_printf+5)& (0+255),b
 12603  0003BE  ECEB  F027         	call	_printf	;wreg free
 12604  0003C2  EF4C  F001         	goto	l8058
 12605  0003C6                     l8070:
 12606                           
 12607                           ; BSR set to: 0
 12608                           ;Modbus.c: 303:         {;Modbus.c: 304:             printf("Requested Revision\r\n");
 12609  0003C6  0EAC               	movlw	low STR_42
 12610  0003C8  6F7D               	movwf	printf@fmt& (0+255),b
 12611  0003CA  0EFE               	movlw	high STR_42
 12612  0003CC  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 12613  0003CE  ECEB  F027         	call	_printf	;wreg free
 12614  0003D2                     
 12615                           ;Modbus.c: 305:             if(
 12616  0003D2  0101               	movlb	1	; () banked
 12617  0003D4  5102               	movf	(_ModbusData+2)& (0+255),w,b
 12618  0003D6  0100               	movlb	0	; () banked
 12619  0003D8  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 12620  0003DA  6B8F               	clrf	??_ModbusFC04& (0+255),b
 12621  0003DC  0101               	movlb	1	; () banked
 12622  0003DE  5105               	movf	(_ModbusData+5)& (0+255),w,b
 12623  0003E0  C104  F091         	movff	_ModbusData+4,??_ModbusFC04+2
 12624  0003E4  0100               	movlb	0	; () banked
 12625  0003E6  6B92               	clrf	(??_ModbusFC04+3)& (0+255),b
 12626  0003E8  C091  F092         	movff	??_ModbusFC04+2,??_ModbusFC04+3
 12627  0003EC  6B91               	clrf	(??_ModbusFC04+2)& (0+255),b
 12628  0003EE  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 12629  0003F0  0E00               	movlw	0
 12630  0003F2  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 12631  0003F4  518F               	movf	??_ModbusFC04& (0+255),w,b
 12632  0003F6  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 12633  0003F8  5190               	movf	(??_ModbusFC04+1)& (0+255),w,b
 12634  0003FA  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 12635  0003FC  0101               	movlb	1	; () banked
 12636  0003FE  5103               	movf	(_ModbusData+3)& (0+255),w,b
 12637  000400  0100               	movlb	0	; () banked
 12638  000402  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 12639  000404  0E00               	movlw	0
 12640  000406  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 12641  000408  BF92               	btfsc	(??_ModbusFC04+3)& (0+255),7,b
 12642  00040A  EF0E  F002         	goto	u8101
 12643  00040E  0E02               	movlw	2
 12644  000410  5D92               	subwf	(??_ModbusFC04+3)& (0+255),w,b
 12645  000412  A0D8               	btfss	status,0,c
 12646  000414  EF0E  F002         	goto	u8101
 12647  000418  EF10  F002         	goto	u8100
 12648  00041C                     u8101:
 12649  00041C  EF38  F002         	goto	l8076
 12650  000420                     u8100:
 12651  000420                     
 12652                           ; BSR set to: 0
 12653  000420  0101               	movlb	1	; () banked
 12654  000422  5102               	movf	(_ModbusData+2)& (0+255),w,b
 12655  000424  0100               	movlb	0	; () banked
 12656  000426  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 12657  000428  6B8F               	clrf	??_ModbusFC04& (0+255),b
 12658  00042A  0101               	movlb	1	; () banked
 12659  00042C  5105               	movf	(_ModbusData+5)& (0+255),w,b
 12660  00042E  C104  F091         	movff	_ModbusData+4,??_ModbusFC04+2
 12661  000432  0100               	movlb	0	; () banked
 12662  000434  6B92               	clrf	(??_ModbusFC04+3)& (0+255),b
 12663  000436  C091  F092         	movff	??_ModbusFC04+2,??_ModbusFC04+3
 12664  00043A  6B91               	clrf	(??_ModbusFC04+2)& (0+255),b
 12665  00043C  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 12666  00043E  0E00               	movlw	0
 12667  000440  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 12668  000442  518F               	movf	??_ModbusFC04& (0+255),w,b
 12669  000444  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 12670  000446  5190               	movf	(??_ModbusFC04+1)& (0+255),w,b
 12671  000448  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 12672  00044A  0101               	movlb	1	; () banked
 12673  00044C  5103               	movf	(_ModbusData+3)& (0+255),w,b
 12674  00044E  0100               	movlb	0	; () banked
 12675  000450  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 12676  000452  0E00               	movlw	0
 12677  000454  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 12678  000456  BF92               	btfsc	(??_ModbusFC04+3)& (0+255),7,b
 12679  000458  EF36  F002         	goto	u8111
 12680  00045C  0591               	decf	(??_ModbusFC04+2)& (0+255),w,b
 12681  00045E  0E02               	movlw	2
 12682  000460  5992               	subwfb	(??_ModbusFC04+3)& (0+255),w,b
 12683  000462  A0D8               	btfss	status,0,c
 12684  000464  EF36  F002         	goto	u8111
 12685  000468  EF38  F002         	goto	u8110
 12686  00046C                     u8111:
 12687  00046C  EFEC  F004         	goto	l8124
 12688  000470                     u8110:
 12689  000470                     l8076:
 12690                           
 12691                           ; BSR set to: 0
 12692                           ;Modbus.c: 307:                 (((ModbusData[2] * 256) + ModbusData[3]) + ((ModbusData[
      +                          4] * 256) + ModbusData[5]) > 512)){;Modbus.c: 309:                 printf("Registers out
      +                           of range.\r\nValid: 0x0512.\r\n");
 12693  000470  0E29               	movlw	low STR_43
 12694  000472  6F7D               	movwf	printf@fmt& (0+255),b
 12695  000474  0EF9               	movlw	high STR_43
 12696  000476  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 12697  000478  ECEB  F027         	call	_printf	;wreg free
 12698                           
 12699                           ;Modbus.c: 310:                 printf("Requested: 0x%04x to 0x%04x\r\n", ModbusData[2] 
      +                          * 256 + ModbusData[3],
 12700  00047C  0E04               	movlw	low STR_35
 12701  00047E  0100               	movlb	0	; () banked
 12702  000480  6F7D               	movwf	printf@fmt& (0+255),b
 12703  000482  0EFD               	movlw	high STR_35
 12704  000484  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 12705  000486  0101               	movlb	1	; () banked
 12706  000488  5102               	movf	(_ModbusData+2)& (0+255),w,b
 12707  00048A  0100               	movlb	0	; () banked
 12708  00048C  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 12709  00048E  6B8F               	clrf	??_ModbusFC04& (0+255),b
 12710  000490  0101               	movlb	1	; () banked
 12711  000492  5103               	movf	(_ModbusData+3)& (0+255),w,b
 12712  000494  0100               	movlb	0	; () banked
 12713  000496  258F               	addwf	??_ModbusFC04& (0+255),w,b
 12714  000498  6F7F               	movwf	(?_printf+2)& (0+255),b
 12715  00049A  0101               	movlb	1	; () banked
 12716  00049C  0E00               	movlw	0
 12717  00049E  0100               	movlb	0	; () banked
 12718  0004A0  2190               	addwfc	(??_ModbusFC04+1)& (0+255),w,b
 12719  0004A2  6F80               	movwf	(?_printf+3)& (0+255),b
 12720  0004A4  0101               	movlb	1	; () banked
 12721  0004A6  5104               	movf	(_ModbusData+4)& (0+255),w,b
 12722  0004A8  0100               	movlb	0	; () banked
 12723  0004AA  6F92               	movwf	(??_ModbusFC04+3)& (0+255),b
 12724  0004AC  6B91               	clrf	(??_ModbusFC04+2)& (0+255),b
 12725  0004AE  0101               	movlb	1	; () banked
 12726  0004B0  5103               	movf	(_ModbusData+3)& (0+255),w,b
 12727  0004B2  C102  F093         	movff	_ModbusData+2,??_ModbusFC04+4
 12728  0004B6  0100               	movlb	0	; () banked
 12729  0004B8  6B94               	clrf	(??_ModbusFC04+5)& (0+255),b
 12730  0004BA  C093  F094         	movff	??_ModbusFC04+4,??_ModbusFC04+5
 12731  0004BE  6B93               	clrf	(??_ModbusFC04+4)& (0+255),b
 12732  0004C0  2793               	addwf	(??_ModbusFC04+4)& (0+255),f,b
 12733  0004C2  0E00               	movlw	0
 12734  0004C4  2394               	addwfc	(??_ModbusFC04+5)& (0+255),f,b
 12735  0004C6  5191               	movf	(??_ModbusFC04+2)& (0+255),w,b
 12736  0004C8  2793               	addwf	(??_ModbusFC04+4)& (0+255),f,b
 12737  0004CA  5192               	movf	(??_ModbusFC04+3)& (0+255),w,b
 12738  0004CC  2394               	addwfc	(??_ModbusFC04+5)& (0+255),f,b
 12739  0004CE  0101               	movlb	1	; () banked
 12740  0004D0  5105               	movf	(_ModbusData+5)& (0+255),w,b
 12741  0004D2  0100               	movlb	0	; () banked
 12742  0004D4  2593               	addwf	(??_ModbusFC04+4)& (0+255),w,b
 12743  0004D6  6F81               	movwf	(?_printf+4)& (0+255),b
 12744  0004D8  0101               	movlb	1	; () banked
 12745  0004DA  0E00               	movlw	0
 12746  0004DC  0100               	movlb	0	; () banked
 12747  0004DE  2194               	addwfc	(??_ModbusFC04+5)& (0+255),w,b
 12748  0004E0  6F82               	movwf	(?_printf+5)& (0+255),b
 12749  0004E2  ECEB  F027         	call	_printf	;wreg free
 12750  0004E6  EF4C  F001         	goto	l8058
 12751  0004EA                     l8080:
 12752                           
 12753                           ; BSR set to: 0
 12754                           ;Modbus.c: 317:         {;Modbus.c: 318:             printf("Requested Serial No.\r\n");
 12755  0004EA  0E2A               	movlw	low STR_45
 12756  0004EC  6F7D               	movwf	printf@fmt& (0+255),b
 12757  0004EE  0EFE               	movlw	high STR_45
 12758  0004F0  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 12759  0004F2  ECEB  F027         	call	_printf	;wreg free
 12760  0004F6                     
 12761                           ;Modbus.c: 319:             if(
 12762  0004F6  0101               	movlb	1	; () banked
 12763  0004F8  5102               	movf	(_ModbusData+2)& (0+255),w,b
 12764  0004FA  0100               	movlb	0	; () banked
 12765  0004FC  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 12766  0004FE  6B8F               	clrf	??_ModbusFC04& (0+255),b
 12767  000500  0101               	movlb	1	; () banked
 12768  000502  5105               	movf	(_ModbusData+5)& (0+255),w,b
 12769  000504  C104  F091         	movff	_ModbusData+4,??_ModbusFC04+2
 12770  000508  0100               	movlb	0	; () banked
 12771  00050A  6B92               	clrf	(??_ModbusFC04+3)& (0+255),b
 12772  00050C  C091  F092         	movff	??_ModbusFC04+2,??_ModbusFC04+3
 12773  000510  6B91               	clrf	(??_ModbusFC04+2)& (0+255),b
 12774  000512  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 12775  000514  0E00               	movlw	0
 12776  000516  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 12777  000518  518F               	movf	??_ModbusFC04& (0+255),w,b
 12778  00051A  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 12779  00051C  5190               	movf	(??_ModbusFC04+1)& (0+255),w,b
 12780  00051E  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 12781  000520  0101               	movlb	1	; () banked
 12782  000522  5103               	movf	(_ModbusData+3)& (0+255),w,b
 12783  000524  0100               	movlb	0	; () banked
 12784  000526  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 12785  000528  0E00               	movlw	0
 12786  00052A  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 12787  00052C  BF92               	btfsc	(??_ModbusFC04+3)& (0+255),7,b
 12788  00052E  EFA0  F002         	goto	u8121
 12789  000532  0E03               	movlw	3
 12790  000534  5D92               	subwf	(??_ModbusFC04+3)& (0+255),w,b
 12791  000536  A0D8               	btfss	status,0,c
 12792  000538  EFA0  F002         	goto	u8121
 12793  00053C  EFA2  F002         	goto	u8120
 12794  000540                     u8121:
 12795  000540  EFCB  F002         	goto	l8086
 12796  000544                     u8120:
 12797  000544                     
 12798                           ; BSR set to: 0
 12799  000544  0101               	movlb	1	; () banked
 12800  000546  5102               	movf	(_ModbusData+2)& (0+255),w,b
 12801  000548  0100               	movlb	0	; () banked
 12802  00054A  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 12803  00054C  6B8F               	clrf	??_ModbusFC04& (0+255),b
 12804  00054E  0101               	movlb	1	; () banked
 12805  000550  5105               	movf	(_ModbusData+5)& (0+255),w,b
 12806  000552  C104  F091         	movff	_ModbusData+4,??_ModbusFC04+2
 12807  000556  0100               	movlb	0	; () banked
 12808  000558  6B92               	clrf	(??_ModbusFC04+3)& (0+255),b
 12809  00055A  C091  F092         	movff	??_ModbusFC04+2,??_ModbusFC04+3
 12810  00055E  6B91               	clrf	(??_ModbusFC04+2)& (0+255),b
 12811  000560  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 12812  000562  0E00               	movlw	0
 12813  000564  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 12814  000566  518F               	movf	??_ModbusFC04& (0+255),w,b
 12815  000568  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 12816  00056A  5190               	movf	(??_ModbusFC04+1)& (0+255),w,b
 12817  00056C  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 12818  00056E  0101               	movlb	1	; () banked
 12819  000570  5103               	movf	(_ModbusData+3)& (0+255),w,b
 12820  000572  0100               	movlb	0	; () banked
 12821  000574  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 12822  000576  0E00               	movlw	0
 12823  000578  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 12824  00057A  BF92               	btfsc	(??_ModbusFC04+3)& (0+255),7,b
 12825  00057C  EFC9  F002         	goto	u8131
 12826  000580  0E05               	movlw	5
 12827  000582  5D91               	subwf	(??_ModbusFC04+2)& (0+255),w,b
 12828  000584  0E03               	movlw	3
 12829  000586  5992               	subwfb	(??_ModbusFC04+3)& (0+255),w,b
 12830  000588  A0D8               	btfss	status,0,c
 12831  00058A  EFC9  F002         	goto	u8131
 12832  00058E  EFCB  F002         	goto	u8130
 12833  000592                     u8131:
 12834  000592  EFEC  F004         	goto	l8124
 12835  000596                     u8130:
 12836  000596                     l8086:
 12837                           
 12838                           ; BSR set to: 0
 12839                           ;Modbus.c: 321:                 (((ModbusData[2] * 256) + ModbusData[3]) + ((ModbusData[
      +                          4] * 256) + ModbusData[5]) > 772)){;Modbus.c: 323:                 printf("Registers out
      +                           of range.\r\nValid: 0x0300 to 0x0304.\r\n");
 12840  000596  0EDA               	movlw	low STR_46
 12841  000598  6F7D               	movwf	printf@fmt& (0+255),b
 12842  00059A  0EF7               	movlw	high STR_46
 12843  00059C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 12844  00059E  ECEB  F027         	call	_printf	;wreg free
 12845                           
 12846                           ;Modbus.c: 324:                 printf("Requested: 0x%04x to 0x%04x\r\n", ModbusData[2] 
      +                          * 256 + ModbusData[3],
 12847  0005A2  0E04               	movlw	low STR_35
 12848  0005A4  0100               	movlb	0	; () banked
 12849  0005A6  6F7D               	movwf	printf@fmt& (0+255),b
 12850  0005A8  0EFD               	movlw	high STR_35
 12851  0005AA  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 12852  0005AC  0101               	movlb	1	; () banked
 12853  0005AE  5102               	movf	(_ModbusData+2)& (0+255),w,b
 12854  0005B0  0100               	movlb	0	; () banked
 12855  0005B2  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 12856  0005B4  6B8F               	clrf	??_ModbusFC04& (0+255),b
 12857  0005B6  0101               	movlb	1	; () banked
 12858  0005B8  5103               	movf	(_ModbusData+3)& (0+255),w,b
 12859  0005BA  0100               	movlb	0	; () banked
 12860  0005BC  258F               	addwf	??_ModbusFC04& (0+255),w,b
 12861  0005BE  6F7F               	movwf	(?_printf+2)& (0+255),b
 12862  0005C0  0101               	movlb	1	; () banked
 12863  0005C2  0E00               	movlw	0
 12864  0005C4  0100               	movlb	0	; () banked
 12865  0005C6  2190               	addwfc	(??_ModbusFC04+1)& (0+255),w,b
 12866  0005C8  6F80               	movwf	(?_printf+3)& (0+255),b
 12867  0005CA  0101               	movlb	1	; () banked
 12868  0005CC  5104               	movf	(_ModbusData+4)& (0+255),w,b
 12869  0005CE  0100               	movlb	0	; () banked
 12870  0005D0  6F92               	movwf	(??_ModbusFC04+3)& (0+255),b
 12871  0005D2  6B91               	clrf	(??_ModbusFC04+2)& (0+255),b
 12872  0005D4  0101               	movlb	1	; () banked
 12873  0005D6  5103               	movf	(_ModbusData+3)& (0+255),w,b
 12874  0005D8  C102  F093         	movff	_ModbusData+2,??_ModbusFC04+4
 12875  0005DC  0100               	movlb	0	; () banked
 12876  0005DE  6B94               	clrf	(??_ModbusFC04+5)& (0+255),b
 12877  0005E0  C093  F094         	movff	??_ModbusFC04+4,??_ModbusFC04+5
 12878  0005E4  6B93               	clrf	(??_ModbusFC04+4)& (0+255),b
 12879  0005E6  2793               	addwf	(??_ModbusFC04+4)& (0+255),f,b
 12880  0005E8  0E00               	movlw	0
 12881  0005EA  2394               	addwfc	(??_ModbusFC04+5)& (0+255),f,b
 12882  0005EC  5191               	movf	(??_ModbusFC04+2)& (0+255),w,b
 12883  0005EE  2793               	addwf	(??_ModbusFC04+4)& (0+255),f,b
 12884  0005F0  5192               	movf	(??_ModbusFC04+3)& (0+255),w,b
 12885  0005F2  2394               	addwfc	(??_ModbusFC04+5)& (0+255),f,b
 12886  0005F4  0101               	movlb	1	; () banked
 12887  0005F6  5105               	movf	(_ModbusData+5)& (0+255),w,b
 12888  0005F8  0100               	movlb	0	; () banked
 12889  0005FA  2593               	addwf	(??_ModbusFC04+4)& (0+255),w,b
 12890  0005FC  6F81               	movwf	(?_printf+4)& (0+255),b
 12891  0005FE  0101               	movlb	1	; () banked
 12892  000600  0E00               	movlw	0
 12893  000602  0100               	movlb	0	; () banked
 12894  000604  2194               	addwfc	(??_ModbusFC04+5)& (0+255),w,b
 12895  000606  6F82               	movwf	(?_printf+5)& (0+255),b
 12896  000608  ECEB  F027         	call	_printf	;wreg free
 12897  00060C  EF4C  F001         	goto	l8058
 12898  000610                     l8090:
 12899                           
 12900                           ; BSR set to: 0
 12901                           ;Modbus.c: 331:         {;Modbus.c: 332:             printf("Requested Compile Date\r\n"
      +                          );
 12902  000610  0EE1               	movlw	low STR_48
 12903  000612  6F7D               	movwf	printf@fmt& (0+255),b
 12904  000614  0EFD               	movlw	high STR_48
 12905  000616  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 12906  000618  ECEB  F027         	call	_printf	;wreg free
 12907  00061C                     
 12908                           ;Modbus.c: 333:             if(
 12909  00061C  0101               	movlb	1	; () banked
 12910  00061E  5102               	movf	(_ModbusData+2)& (0+255),w,b
 12911  000620  0100               	movlb	0	; () banked
 12912  000622  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 12913  000624  6B8F               	clrf	??_ModbusFC04& (0+255),b
 12914  000626  0101               	movlb	1	; () banked
 12915  000628  5105               	movf	(_ModbusData+5)& (0+255),w,b
 12916  00062A  C104  F091         	movff	_ModbusData+4,??_ModbusFC04+2
 12917  00062E  0100               	movlb	0	; () banked
 12918  000630  6B92               	clrf	(??_ModbusFC04+3)& (0+255),b
 12919  000632  C091  F092         	movff	??_ModbusFC04+2,??_ModbusFC04+3
 12920  000636  6B91               	clrf	(??_ModbusFC04+2)& (0+255),b
 12921  000638  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 12922  00063A  0E00               	movlw	0
 12923  00063C  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 12924  00063E  518F               	movf	??_ModbusFC04& (0+255),w,b
 12925  000640  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 12926  000642  5190               	movf	(??_ModbusFC04+1)& (0+255),w,b
 12927  000644  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 12928  000646  0101               	movlb	1	; () banked
 12929  000648  5103               	movf	(_ModbusData+3)& (0+255),w,b
 12930  00064A  0100               	movlb	0	; () banked
 12931  00064C  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 12932  00064E  0E00               	movlw	0
 12933  000650  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 12934  000652  BF92               	btfsc	(??_ModbusFC04+3)& (0+255),7,b
 12935  000654  EF33  F003         	goto	u8141
 12936  000658  0E04               	movlw	4
 12937  00065A  5D92               	subwf	(??_ModbusFC04+3)& (0+255),w,b
 12938  00065C  A0D8               	btfss	status,0,c
 12939  00065E  EF33  F003         	goto	u8141
 12940  000662  EF35  F003         	goto	u8140
 12941  000666                     u8141:
 12942  000666  EF5E  F003         	goto	l8096
 12943  00066A                     u8140:
 12944  00066A                     
 12945                           ; BSR set to: 0
 12946  00066A  0101               	movlb	1	; () banked
 12947  00066C  5102               	movf	(_ModbusData+2)& (0+255),w,b
 12948  00066E  0100               	movlb	0	; () banked
 12949  000670  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 12950  000672  6B8F               	clrf	??_ModbusFC04& (0+255),b
 12951  000674  0101               	movlb	1	; () banked
 12952  000676  5105               	movf	(_ModbusData+5)& (0+255),w,b
 12953  000678  C104  F091         	movff	_ModbusData+4,??_ModbusFC04+2
 12954  00067C  0100               	movlb	0	; () banked
 12955  00067E  6B92               	clrf	(??_ModbusFC04+3)& (0+255),b
 12956  000680  C091  F092         	movff	??_ModbusFC04+2,??_ModbusFC04+3
 12957  000684  6B91               	clrf	(??_ModbusFC04+2)& (0+255),b
 12958  000686  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 12959  000688  0E00               	movlw	0
 12960  00068A  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 12961  00068C  518F               	movf	??_ModbusFC04& (0+255),w,b
 12962  00068E  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 12963  000690  5190               	movf	(??_ModbusFC04+1)& (0+255),w,b
 12964  000692  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 12965  000694  0101               	movlb	1	; () banked
 12966  000696  5103               	movf	(_ModbusData+3)& (0+255),w,b
 12967  000698  0100               	movlb	0	; () banked
 12968  00069A  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 12969  00069C  0E00               	movlw	0
 12970  00069E  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 12971  0006A0  BF92               	btfsc	(??_ModbusFC04+3)& (0+255),7,b
 12972  0006A2  EF5C  F003         	goto	u8151
 12973  0006A6  0E06               	movlw	6
 12974  0006A8  5D91               	subwf	(??_ModbusFC04+2)& (0+255),w,b
 12975  0006AA  0E04               	movlw	4
 12976  0006AC  5992               	subwfb	(??_ModbusFC04+3)& (0+255),w,b
 12977  0006AE  A0D8               	btfss	status,0,c
 12978  0006B0  EF5C  F003         	goto	u8151
 12979  0006B4  EF5E  F003         	goto	u8150
 12980  0006B8                     u8151:
 12981  0006B8  EFEC  F004         	goto	l8124
 12982  0006BC                     u8150:
 12983  0006BC                     l8096:
 12984                           
 12985                           ; BSR set to: 0
 12986                           ;Modbus.c: 335:                 (((ModbusData[2] * 256) + ModbusData[3]) + ((ModbusData[
      +                          4] * 256) + ModbusData[5]) > 1029)){;Modbus.c: 337:                 printf("Registers ou
      +                          t of range.\r\nValid: 0x0400 to 0x0405.\r\n");
 12987  0006BC  0E0E               	movlw	low STR_49
 12988  0006BE  6F7D               	movwf	printf@fmt& (0+255),b
 12989  0006C0  0EF8               	movlw	high STR_49
 12990  0006C2  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 12991  0006C4  ECEB  F027         	call	_printf	;wreg free
 12992                           
 12993                           ;Modbus.c: 339:                 printf("Requested: 0x%04x to 0x%04x\r\n", ModbusData[2] 
      +                          * 256 + ModbusData[3],
 12994  0006C8  0E04               	movlw	low STR_35
 12995  0006CA  0100               	movlb	0	; () banked
 12996  0006CC  6F7D               	movwf	printf@fmt& (0+255),b
 12997  0006CE  0EFD               	movlw	high STR_35
 12998  0006D0  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 12999  0006D2  0101               	movlb	1	; () banked
 13000  0006D4  5102               	movf	(_ModbusData+2)& (0+255),w,b
 13001  0006D6  0100               	movlb	0	; () banked
 13002  0006D8  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 13003  0006DA  6B8F               	clrf	??_ModbusFC04& (0+255),b
 13004  0006DC  0101               	movlb	1	; () banked
 13005  0006DE  5103               	movf	(_ModbusData+3)& (0+255),w,b
 13006  0006E0  0100               	movlb	0	; () banked
 13007  0006E2  258F               	addwf	??_ModbusFC04& (0+255),w,b
 13008  0006E4  6F7F               	movwf	(?_printf+2)& (0+255),b
 13009  0006E6  0101               	movlb	1	; () banked
 13010  0006E8  0E00               	movlw	0
 13011  0006EA  0100               	movlb	0	; () banked
 13012  0006EC  2190               	addwfc	(??_ModbusFC04+1)& (0+255),w,b
 13013  0006EE  6F80               	movwf	(?_printf+3)& (0+255),b
 13014  0006F0  0101               	movlb	1	; () banked
 13015  0006F2  5104               	movf	(_ModbusData+4)& (0+255),w,b
 13016  0006F4  0100               	movlb	0	; () banked
 13017  0006F6  6F92               	movwf	(??_ModbusFC04+3)& (0+255),b
 13018  0006F8  6B91               	clrf	(??_ModbusFC04+2)& (0+255),b
 13019  0006FA  0101               	movlb	1	; () banked
 13020  0006FC  5103               	movf	(_ModbusData+3)& (0+255),w,b
 13021  0006FE  C102  F093         	movff	_ModbusData+2,??_ModbusFC04+4
 13022  000702  0100               	movlb	0	; () banked
 13023  000704  6B94               	clrf	(??_ModbusFC04+5)& (0+255),b
 13024  000706  C093  F094         	movff	??_ModbusFC04+4,??_ModbusFC04+5
 13025  00070A  6B93               	clrf	(??_ModbusFC04+4)& (0+255),b
 13026  00070C  2793               	addwf	(??_ModbusFC04+4)& (0+255),f,b
 13027  00070E  0E00               	movlw	0
 13028  000710  2394               	addwfc	(??_ModbusFC04+5)& (0+255),f,b
 13029  000712  5191               	movf	(??_ModbusFC04+2)& (0+255),w,b
 13030  000714  2793               	addwf	(??_ModbusFC04+4)& (0+255),f,b
 13031  000716  5192               	movf	(??_ModbusFC04+3)& (0+255),w,b
 13032  000718  2394               	addwfc	(??_ModbusFC04+5)& (0+255),f,b
 13033  00071A  0101               	movlb	1	; () banked
 13034  00071C  5105               	movf	(_ModbusData+5)& (0+255),w,b
 13035  00071E  0100               	movlb	0	; () banked
 13036  000720  2593               	addwf	(??_ModbusFC04+4)& (0+255),w,b
 13037  000722  6F81               	movwf	(?_printf+4)& (0+255),b
 13038  000724  0101               	movlb	1	; () banked
 13039  000726  0E00               	movlw	0
 13040  000728  0100               	movlb	0	; () banked
 13041  00072A  2194               	addwfc	(??_ModbusFC04+5)& (0+255),w,b
 13042  00072C  6F82               	movwf	(?_printf+5)& (0+255),b
 13043  00072E  ECEB  F027         	call	_printf	;wreg free
 13044  000732  EF4C  F001         	goto	l8058
 13045  000736                     l8100:
 13046                           
 13047                           ; BSR set to: 0
 13048                           ;Modbus.c: 346:         {;Modbus.c: 347:             printf("Requested Compile Time\r\n"
      +                          );
 13049  000736  0EC8               	movlw	low STR_51
 13050  000738  6F7D               	movwf	printf@fmt& (0+255),b
 13051  00073A  0EFD               	movlw	high STR_51
 13052  00073C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 13053  00073E  ECEB  F027         	call	_printf	;wreg free
 13054  000742                     
 13055                           ;Modbus.c: 349:             if(
 13056  000742  0101               	movlb	1	; () banked
 13057  000744  5102               	movf	(_ModbusData+2)& (0+255),w,b
 13058  000746  0100               	movlb	0	; () banked
 13059  000748  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 13060  00074A  6B8F               	clrf	??_ModbusFC04& (0+255),b
 13061  00074C  0101               	movlb	1	; () banked
 13062  00074E  5105               	movf	(_ModbusData+5)& (0+255),w,b
 13063  000750  C104  F091         	movff	_ModbusData+4,??_ModbusFC04+2
 13064  000754  0100               	movlb	0	; () banked
 13065  000756  6B92               	clrf	(??_ModbusFC04+3)& (0+255),b
 13066  000758  C091  F092         	movff	??_ModbusFC04+2,??_ModbusFC04+3
 13067  00075C  6B91               	clrf	(??_ModbusFC04+2)& (0+255),b
 13068  00075E  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 13069  000760  0E00               	movlw	0
 13070  000762  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 13071  000764  518F               	movf	??_ModbusFC04& (0+255),w,b
 13072  000766  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 13073  000768  5190               	movf	(??_ModbusFC04+1)& (0+255),w,b
 13074  00076A  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 13075  00076C  0101               	movlb	1	; () banked
 13076  00076E  5103               	movf	(_ModbusData+3)& (0+255),w,b
 13077  000770  0100               	movlb	0	; () banked
 13078  000772  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 13079  000774  0E00               	movlw	0
 13080  000776  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 13081  000778  BF92               	btfsc	(??_ModbusFC04+3)& (0+255),7,b
 13082  00077A  EFC6  F003         	goto	u8161
 13083  00077E  0E05               	movlw	5
 13084  000780  5D92               	subwf	(??_ModbusFC04+3)& (0+255),w,b
 13085  000782  A0D8               	btfss	status,0,c
 13086  000784  EFC6  F003         	goto	u8161
 13087  000788  EFC8  F003         	goto	u8160
 13088  00078C                     u8161:
 13089  00078C  EFF1  F003         	goto	l8106
 13090  000790                     u8160:
 13091  000790                     
 13092                           ; BSR set to: 0
 13093  000790  0101               	movlb	1	; () banked
 13094  000792  5102               	movf	(_ModbusData+2)& (0+255),w,b
 13095  000794  0100               	movlb	0	; () banked
 13096  000796  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 13097  000798  6B8F               	clrf	??_ModbusFC04& (0+255),b
 13098  00079A  0101               	movlb	1	; () banked
 13099  00079C  5105               	movf	(_ModbusData+5)& (0+255),w,b
 13100  00079E  C104  F091         	movff	_ModbusData+4,??_ModbusFC04+2
 13101  0007A2  0100               	movlb	0	; () banked
 13102  0007A4  6B92               	clrf	(??_ModbusFC04+3)& (0+255),b
 13103  0007A6  C091  F092         	movff	??_ModbusFC04+2,??_ModbusFC04+3
 13104  0007AA  6B91               	clrf	(??_ModbusFC04+2)& (0+255),b
 13105  0007AC  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 13106  0007AE  0E00               	movlw	0
 13107  0007B0  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 13108  0007B2  518F               	movf	??_ModbusFC04& (0+255),w,b
 13109  0007B4  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 13110  0007B6  5190               	movf	(??_ModbusFC04+1)& (0+255),w,b
 13111  0007B8  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 13112  0007BA  0101               	movlb	1	; () banked
 13113  0007BC  5103               	movf	(_ModbusData+3)& (0+255),w,b
 13114  0007BE  0100               	movlb	0	; () banked
 13115  0007C0  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 13116  0007C2  0E00               	movlw	0
 13117  0007C4  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 13118  0007C6  BF92               	btfsc	(??_ModbusFC04+3)& (0+255),7,b
 13119  0007C8  EFEF  F003         	goto	u8171
 13120  0007CC  0E04               	movlw	4
 13121  0007CE  5D91               	subwf	(??_ModbusFC04+2)& (0+255),w,b
 13122  0007D0  0E05               	movlw	5
 13123  0007D2  5992               	subwfb	(??_ModbusFC04+3)& (0+255),w,b
 13124  0007D4  A0D8               	btfss	status,0,c
 13125  0007D6  EFEF  F003         	goto	u8171
 13126  0007DA  EFF1  F003         	goto	u8170
 13127  0007DE                     u8171:
 13128  0007DE  EFEC  F004         	goto	l8124
 13129  0007E2                     u8170:
 13130  0007E2                     l8106:
 13131                           
 13132                           ; BSR set to: 0
 13133                           ;Modbus.c: 351:                 (((ModbusData[2] * 256) + ModbusData[3]) + ((ModbusData[
      +                          4] * 256) + ModbusData[5]) > 1283)){;Modbus.c: 353:                 printf("Registers ou
      +                          t of range.\r\nValid: 0x0500 to 0x0503.\r\n");
 13134  0007E2  0EA6               	movlw	low STR_52
 13135  0007E4  6F7D               	movwf	printf@fmt& (0+255),b
 13136  0007E6  0EF7               	movlw	high STR_52
 13137  0007E8  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 13138  0007EA  ECEB  F027         	call	_printf	;wreg free
 13139                           
 13140                           ;Modbus.c: 355:                 printf("Requested: 0x%04x to 0x%04x\r\n", ModbusData[2] 
      +                          * 256 + ModbusData[3],
 13141  0007EE  0E04               	movlw	low STR_35
 13142  0007F0  0100               	movlb	0	; () banked
 13143  0007F2  6F7D               	movwf	printf@fmt& (0+255),b
 13144  0007F4  0EFD               	movlw	high STR_35
 13145  0007F6  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 13146  0007F8  0101               	movlb	1	; () banked
 13147  0007FA  5102               	movf	(_ModbusData+2)& (0+255),w,b
 13148  0007FC  0100               	movlb	0	; () banked
 13149  0007FE  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 13150  000800  6B8F               	clrf	??_ModbusFC04& (0+255),b
 13151  000802  0101               	movlb	1	; () banked
 13152  000804  5103               	movf	(_ModbusData+3)& (0+255),w,b
 13153  000806  0100               	movlb	0	; () banked
 13154  000808  258F               	addwf	??_ModbusFC04& (0+255),w,b
 13155  00080A  6F7F               	movwf	(?_printf+2)& (0+255),b
 13156  00080C  0101               	movlb	1	; () banked
 13157  00080E  0E00               	movlw	0
 13158  000810  0100               	movlb	0	; () banked
 13159  000812  2190               	addwfc	(??_ModbusFC04+1)& (0+255),w,b
 13160  000814  6F80               	movwf	(?_printf+3)& (0+255),b
 13161  000816  0101               	movlb	1	; () banked
 13162  000818  5104               	movf	(_ModbusData+4)& (0+255),w,b
 13163  00081A  0100               	movlb	0	; () banked
 13164  00081C  6F92               	movwf	(??_ModbusFC04+3)& (0+255),b
 13165  00081E  6B91               	clrf	(??_ModbusFC04+2)& (0+255),b
 13166  000820  0101               	movlb	1	; () banked
 13167  000822  5103               	movf	(_ModbusData+3)& (0+255),w,b
 13168  000824  C102  F093         	movff	_ModbusData+2,??_ModbusFC04+4
 13169  000828  0100               	movlb	0	; () banked
 13170  00082A  6B94               	clrf	(??_ModbusFC04+5)& (0+255),b
 13171  00082C  C093  F094         	movff	??_ModbusFC04+4,??_ModbusFC04+5
 13172  000830  6B93               	clrf	(??_ModbusFC04+4)& (0+255),b
 13173  000832  2793               	addwf	(??_ModbusFC04+4)& (0+255),f,b
 13174  000834  0E00               	movlw	0
 13175  000836  2394               	addwfc	(??_ModbusFC04+5)& (0+255),f,b
 13176  000838  5191               	movf	(??_ModbusFC04+2)& (0+255),w,b
 13177  00083A  2793               	addwf	(??_ModbusFC04+4)& (0+255),f,b
 13178  00083C  5192               	movf	(??_ModbusFC04+3)& (0+255),w,b
 13179  00083E  2394               	addwfc	(??_ModbusFC04+5)& (0+255),f,b
 13180  000840  0101               	movlb	1	; () banked
 13181  000842  5105               	movf	(_ModbusData+5)& (0+255),w,b
 13182  000844  0100               	movlb	0	; () banked
 13183  000846  2593               	addwf	(??_ModbusFC04+4)& (0+255),w,b
 13184  000848  6F81               	movwf	(?_printf+4)& (0+255),b
 13185  00084A  0101               	movlb	1	; () banked
 13186  00084C  0E00               	movlw	0
 13187  00084E  0100               	movlb	0	; () banked
 13188  000850  2194               	addwfc	(??_ModbusFC04+5)& (0+255),w,b
 13189  000852  6F82               	movwf	(?_printf+5)& (0+255),b
 13190  000854  ECEB  F027         	call	_printf	;wreg free
 13191  000858  EF4C  F001         	goto	l8058
 13192  00085C                     l8110:
 13193                           
 13194                           ; BSR set to: 0
 13195                           ;Modbus.c: 362:         {;Modbus.c: 363:             printf("Requested Analogue Inputs\r
      +                          \n");
 13196  00085C  0E5C               	movlw	low STR_54
 13197  00085E  6F7D               	movwf	printf@fmt& (0+255),b
 13198  000860  0EFD               	movlw	high STR_54
 13199  000862  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 13200  000864  ECEB  F027         	call	_printf	;wreg free
 13201  000868                     
 13202                           ;Modbus.c: 364:             if(
 13203  000868  0101               	movlb	1	; () banked
 13204  00086A  5102               	movf	(_ModbusData+2)& (0+255),w,b
 13205  00086C  0100               	movlb	0	; () banked
 13206  00086E  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 13207  000870  6B8F               	clrf	??_ModbusFC04& (0+255),b
 13208  000872  0101               	movlb	1	; () banked
 13209  000874  5105               	movf	(_ModbusData+5)& (0+255),w,b
 13210  000876  C104  F091         	movff	_ModbusData+4,??_ModbusFC04+2
 13211  00087A  0100               	movlb	0	; () banked
 13212  00087C  6B92               	clrf	(??_ModbusFC04+3)& (0+255),b
 13213  00087E  C091  F092         	movff	??_ModbusFC04+2,??_ModbusFC04+3
 13214  000882  6B91               	clrf	(??_ModbusFC04+2)& (0+255),b
 13215  000884  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 13216  000886  0E00               	movlw	0
 13217  000888  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 13218  00088A  518F               	movf	??_ModbusFC04& (0+255),w,b
 13219  00088C  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 13220  00088E  5190               	movf	(??_ModbusFC04+1)& (0+255),w,b
 13221  000890  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 13222  000892  0101               	movlb	1	; () banked
 13223  000894  5103               	movf	(_ModbusData+3)& (0+255),w,b
 13224  000896  0100               	movlb	0	; () banked
 13225  000898  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 13226  00089A  0E00               	movlw	0
 13227  00089C  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 13228  00089E  BF92               	btfsc	(??_ModbusFC04+3)& (0+255),7,b
 13229  0008A0  EF59  F004         	goto	u8181
 13230  0008A4  0E06               	movlw	6
 13231  0008A6  5D92               	subwf	(??_ModbusFC04+3)& (0+255),w,b
 13232  0008A8  A0D8               	btfss	status,0,c
 13233  0008AA  EF59  F004         	goto	u8181
 13234  0008AE  EF5B  F004         	goto	u8180
 13235  0008B2                     u8181:
 13236  0008B2  EF84  F004         	goto	l8116
 13237  0008B6                     u8180:
 13238  0008B6                     
 13239                           ; BSR set to: 0
 13240  0008B6  0101               	movlb	1	; () banked
 13241  0008B8  5102               	movf	(_ModbusData+2)& (0+255),w,b
 13242  0008BA  0100               	movlb	0	; () banked
 13243  0008BC  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 13244  0008BE  6B8F               	clrf	??_ModbusFC04& (0+255),b
 13245  0008C0  0101               	movlb	1	; () banked
 13246  0008C2  5105               	movf	(_ModbusData+5)& (0+255),w,b
 13247  0008C4  C104  F091         	movff	_ModbusData+4,??_ModbusFC04+2
 13248  0008C8  0100               	movlb	0	; () banked
 13249  0008CA  6B92               	clrf	(??_ModbusFC04+3)& (0+255),b
 13250  0008CC  C091  F092         	movff	??_ModbusFC04+2,??_ModbusFC04+3
 13251  0008D0  6B91               	clrf	(??_ModbusFC04+2)& (0+255),b
 13252  0008D2  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 13253  0008D4  0E00               	movlw	0
 13254  0008D6  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 13255  0008D8  518F               	movf	??_ModbusFC04& (0+255),w,b
 13256  0008DA  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 13257  0008DC  5190               	movf	(??_ModbusFC04+1)& (0+255),w,b
 13258  0008DE  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 13259  0008E0  0101               	movlb	1	; () banked
 13260  0008E2  5103               	movf	(_ModbusData+3)& (0+255),w,b
 13261  0008E4  0100               	movlb	0	; () banked
 13262  0008E6  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 13263  0008E8  0E00               	movlw	0
 13264  0008EA  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 13265  0008EC  BF92               	btfsc	(??_ModbusFC04+3)& (0+255),7,b
 13266  0008EE  EF82  F004         	goto	u8191
 13267  0008F2  0E03               	movlw	3
 13268  0008F4  5D91               	subwf	(??_ModbusFC04+2)& (0+255),w,b
 13269  0008F6  0E06               	movlw	6
 13270  0008F8  5992               	subwfb	(??_ModbusFC04+3)& (0+255),w,b
 13271  0008FA  A0D8               	btfss	status,0,c
 13272  0008FC  EF82  F004         	goto	u8191
 13273  000900  EF84  F004         	goto	u8190
 13274  000904                     u8191:
 13275  000904  EFEC  F004         	goto	l8124
 13276  000908                     u8190:
 13277  000908                     l8116:
 13278                           
 13279                           ; BSR set to: 0
 13280                           ;Modbus.c: 366:                 (((ModbusData[2] * 256) + ModbusData[3]) + ((ModbusData[
      +                          4] * 256) + ModbusData[5]) > 1538)){;Modbus.c: 368:                 printf("Registers ou
      +                          t of range.\r\nValid: 0x0600 to 0x0602.\r\n");
 13281  000908  0E72               	movlw	low STR_55
 13282  00090A  6F7D               	movwf	printf@fmt& (0+255),b
 13283  00090C  0EF7               	movlw	high STR_55
 13284  00090E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 13285  000910  ECEB  F027         	call	_printf	;wreg free
 13286                           
 13287                           ;Modbus.c: 369:                 printf("Requested: 0x%04x to 0x%04x\r\n", ModbusData[2] 
      +                          * 256 + ModbusData[3],
 13288  000914  0E04               	movlw	low STR_35
 13289  000916  0100               	movlb	0	; () banked
 13290  000918  6F7D               	movwf	printf@fmt& (0+255),b
 13291  00091A  0EFD               	movlw	high STR_35
 13292  00091C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 13293  00091E  0101               	movlb	1	; () banked
 13294  000920  5102               	movf	(_ModbusData+2)& (0+255),w,b
 13295  000922  0100               	movlb	0	; () banked
 13296  000924  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 13297  000926  6B8F               	clrf	??_ModbusFC04& (0+255),b
 13298  000928  0101               	movlb	1	; () banked
 13299  00092A  5103               	movf	(_ModbusData+3)& (0+255),w,b
 13300  00092C  0100               	movlb	0	; () banked
 13301  00092E  258F               	addwf	??_ModbusFC04& (0+255),w,b
 13302  000930  6F7F               	movwf	(?_printf+2)& (0+255),b
 13303  000932  0101               	movlb	1	; () banked
 13304  000934  0E00               	movlw	0
 13305  000936  0100               	movlb	0	; () banked
 13306  000938  2190               	addwfc	(??_ModbusFC04+1)& (0+255),w,b
 13307  00093A  6F80               	movwf	(?_printf+3)& (0+255),b
 13308  00093C  0101               	movlb	1	; () banked
 13309  00093E  5104               	movf	(_ModbusData+4)& (0+255),w,b
 13310  000940  0100               	movlb	0	; () banked
 13311  000942  6F92               	movwf	(??_ModbusFC04+3)& (0+255),b
 13312  000944  6B91               	clrf	(??_ModbusFC04+2)& (0+255),b
 13313  000946  0101               	movlb	1	; () banked
 13314  000948  5103               	movf	(_ModbusData+3)& (0+255),w,b
 13315  00094A  C102  F093         	movff	_ModbusData+2,??_ModbusFC04+4
 13316  00094E  0100               	movlb	0	; () banked
 13317  000950  6B94               	clrf	(??_ModbusFC04+5)& (0+255),b
 13318  000952  C093  F094         	movff	??_ModbusFC04+4,??_ModbusFC04+5
 13319  000956  6B93               	clrf	(??_ModbusFC04+4)& (0+255),b
 13320  000958  2793               	addwf	(??_ModbusFC04+4)& (0+255),f,b
 13321  00095A  0E00               	movlw	0
 13322  00095C  2394               	addwfc	(??_ModbusFC04+5)& (0+255),f,b
 13323  00095E  5191               	movf	(??_ModbusFC04+2)& (0+255),w,b
 13324  000960  2793               	addwf	(??_ModbusFC04+4)& (0+255),f,b
 13325  000962  5192               	movf	(??_ModbusFC04+3)& (0+255),w,b
 13326  000964  2394               	addwfc	(??_ModbusFC04+5)& (0+255),f,b
 13327  000966  0101               	movlb	1	; () banked
 13328  000968  5105               	movf	(_ModbusData+5)& (0+255),w,b
 13329  00096A  0100               	movlb	0	; () banked
 13330  00096C  2593               	addwf	(??_ModbusFC04+4)& (0+255),w,b
 13331  00096E  6F81               	movwf	(?_printf+4)& (0+255),b
 13332  000970  0101               	movlb	1	; () banked
 13333  000972  0E00               	movlw	0
 13334  000974  0100               	movlb	0	; () banked
 13335  000976  2194               	addwfc	(??_ModbusFC04+5)& (0+255),w,b
 13336  000978  6F82               	movwf	(?_printf+5)& (0+255),b
 13337  00097A  ECEB  F027         	call	_printf	;wreg free
 13338  00097E  EF4C  F001         	goto	l8058
 13339  000982                     l8122:
 13340                           
 13341                           ; BSR set to: 0
 13342  000982  0101               	movlb	1	; () banked
 13343  000984  5102               	movf	(_ModbusData+2)& (0+255),w,b
 13344  000986  0100               	movlb	0	; () banked
 13345  000988  6F8F               	movwf	??_ModbusFC04& (0+255),b
 13346  00098A  6B90               	clrf	(??_ModbusFC04+1)& (0+255),b
 13347                           
 13348                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13349                           ; Switch size 1, requested type "simple"
 13350                           ; Number of cases is 1, Range of values is 0 to 0
 13351                           ; switch strategies available:
 13352                           ; Name         Instructions Cycles
 13353                           ; simple_byte            4     3 (average)
 13354                           ;	Chosen strategy is simple_byte
 13355  00098C  5190               	movf	(??_ModbusFC04+1)& (0+255),w,b
 13356  00098E  0A00               	xorlw	0	; case 0
 13357  000990  B4D8               	btfsc	status,2,c
 13358  000992  EFCD  F004         	goto	l8558
 13359  000996  EFEC  F004         	goto	l8124
 13360  00099A                     l8558:
 13361                           
 13362                           ; BSR set to: 0
 13363                           ; Switch size 1, requested type "simple"
 13364                           ; Number of cases is 7, Range of values is 0 to 6
 13365                           ; switch strategies available:
 13366                           ; Name         Instructions Cycles
 13367                           ; simple_byte           22    12 (average)
 13368                           ;	Chosen strategy is simple_byte
 13369  00099A  518F               	movf	??_ModbusFC04& (0+255),w,b
 13370  00099C  0A00               	xorlw	0	; case 0
 13371  00099E  B4D8               	btfsc	status,2,c
 13372  0009A0  EFC0  F000         	goto	l8050
 13373  0009A4  0A01               	xorlw	1	; case 1
 13374  0009A6  B4D8               	btfsc	status,2,c
 13375  0009A8  EF51  F001         	goto	l8060
 13376  0009AC  0A03               	xorlw	3	; case 2
 13377  0009AE  B4D8               	btfsc	status,2,c
 13378  0009B0  EFE3  F001         	goto	l8070
 13379  0009B4  0A01               	xorlw	1	; case 3
 13380  0009B6  B4D8               	btfsc	status,2,c
 13381  0009B8  EF75  F002         	goto	l8080
 13382  0009BC  0A07               	xorlw	7	; case 4
 13383  0009BE  B4D8               	btfsc	status,2,c
 13384  0009C0  EF08  F003         	goto	l8090
 13385  0009C4  0A01               	xorlw	1	; case 5
 13386  0009C6  B4D8               	btfsc	status,2,c
 13387  0009C8  EF9B  F003         	goto	l8100
 13388  0009CC  0A03               	xorlw	3	; case 6
 13389  0009CE  B4D8               	btfsc	status,2,c
 13390  0009D0  EF2E  F004         	goto	l8110
 13391  0009D4  EFEC  F004         	goto	l8124
 13392  0009D8                     l8124:
 13393                           
 13394                           ; BSR set to: 0
 13395                           ;Modbus.c: 377:     if(error == 0){
 13396  0009D8  5197               	movf	ModbusFC04@error& (0+255),w,b
 13397  0009DA  A4D8               	btfss	status,2,c
 13398  0009DC  EFF2  F004         	goto	u8201
 13399  0009E0  EFF4  F004         	goto	u8200
 13400  0009E4                     u8201:
 13401  0009E4  EFDF  F006         	goto	l8184
 13402  0009E8                     u8200:
 13403  0009E8                     
 13404                           ; BSR set to: 0
 13405                           ;Modbus.c: 378:         for(i=0; i< (ModbusData[5]) ; i++ ){
 13406  0009E8  0E00               	movlw	0
 13407  0009EA  6F99               	movwf	(ModbusFC04@i+1)& (0+255),b
 13408  0009EC  0E00               	movlw	0
 13409  0009EE  6F98               	movwf	ModbusFC04@i& (0+255),b
 13410  0009F0  EF90  F006         	goto	l8172
 13411  0009F4                     l8128:
 13412                           
 13413                           ; BSR set to: 0
 13414                           ;Modbus.c: 383:             if(ModbusData[2] == 0x03){
 13415  0009F4  0E03               	movlw	3
 13416  0009F6  0101               	movlb	1	; () banked
 13417  0009F8  1902               	xorwf	(_ModbusData+2)& (0+255),w,b
 13418  0009FA  A4D8               	btfss	status,2,c
 13419  0009FC  EF02  F005         	goto	u8211
 13420  000A00  EF04  F005         	goto	u8210
 13421  000A04                     u8211:
 13422  000A04  EF35  F005         	goto	l8132
 13423  000A08                     u8210:
 13424  000A08                     
 13425                           ; BSR set to: 1
 13426                           ;Modbus.c: 385:                 ByteLo = MB303xx[ModbusData[3] +i] & 0x00FF;
 13427  000A08  5103               	movf	(_ModbusData+3)& (0+255),w,b
 13428  000A0A  0100               	movlb	0	; () banked
 13429  000A0C  2598               	addwf	ModbusFC04@i& (0+255),w,b
 13430  000A0E  6F8F               	movwf	??_ModbusFC04& (0+255),b
 13431  000A10  0E00               	movlw	0
 13432  000A12  2199               	addwfc	(ModbusFC04@i+1)& (0+255),w,b
 13433  000A14  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 13434  000A16  90D8               	bcf	status,0,c
 13435  000A18  378F               	rlcf	??_ModbusFC04& (0+255),f,b
 13436  000A1A  3790               	rlcf	(??_ModbusFC04+1)& (0+255),f,b
 13437  000A1C  0EEA               	movlw	low _MB303xx
 13438  000A1E  258F               	addwf	??_ModbusFC04& (0+255),w,b
 13439  000A20  6ED9               	movwf	fsr2l,c
 13440  000A22  0E00               	movlw	high _MB303xx
 13441  000A24  2190               	addwfc	(??_ModbusFC04+1)& (0+255),w,b
 13442  000A26  6EDA               	movwf	fsr2h,c
 13443  000A28  CFDE F091          	movff	postinc2,??_ModbusFC04+2
 13444  000A2C  CFDD F092          	movff	postdec2,??_ModbusFC04+3
 13445  000A30  5191               	movf	(??_ModbusFC04+2)& (0+255),w,b
 13446  000A32  6FF6               	movwf	_ByteLo& (0+255),b
 13447  000A34  6BF7               	clrf	(_ByteLo+1)& (0+255),b
 13448                           
 13449                           ;Modbus.c: 386:                 ByteHi = MB303xx[ModbusData[3] +i] >> 8;
 13450  000A36  0101               	movlb	1	; () banked
 13451  000A38  5103               	movf	(_ModbusData+3)& (0+255),w,b
 13452  000A3A  0100               	movlb	0	; () banked
 13453  000A3C  2598               	addwf	ModbusFC04@i& (0+255),w,b
 13454  000A3E  6F8F               	movwf	??_ModbusFC04& (0+255),b
 13455  000A40  0E00               	movlw	0
 13456  000A42  2199               	addwfc	(ModbusFC04@i+1)& (0+255),w,b
 13457  000A44  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 13458  000A46  90D8               	bcf	status,0,c
 13459  000A48  378F               	rlcf	??_ModbusFC04& (0+255),f,b
 13460  000A4A  3790               	rlcf	(??_ModbusFC04+1)& (0+255),f,b
 13461  000A4C  0EEA               	movlw	low _MB303xx
 13462  000A4E  258F               	addwf	??_ModbusFC04& (0+255),w,b
 13463  000A50  6ED9               	movwf	fsr2l,c
 13464  000A52  0E00               	movlw	high _MB303xx
 13465  000A54  2190               	addwfc	(??_ModbusFC04+1)& (0+255),w,b
 13466  000A56  6EDA               	movwf	fsr2h,c
 13467  000A58  CFDE F091          	movff	postinc2,??_ModbusFC04+2
 13468  000A5C  CFDD F092          	movff	postdec2,??_ModbusFC04+3
 13469  000A60  5192               	movf	(??_ModbusFC04+3)& (0+255),w,b
 13470  000A62  6FD5               	movwf	_ByteHi& (0+255),b
 13471  000A64  6BD6               	clrf	(_ByteHi+1)& (0+255),b
 13472                           
 13473                           ;Modbus.c: 389:             }else if(ModbusData[2] == 0x01){
 13474  000A66  EF79  F006         	goto	l8162
 13475  000A6A                     l8132:
 13476                           
 13477                           ; BSR set to: 1
 13478  000A6A  0502               	decf	(_ModbusData+2)& (0+255),w,b
 13479  000A6C  A4D8               	btfss	status,2,c
 13480  000A6E  EF3B  F005         	goto	u8221
 13481  000A72  EF3D  F005         	goto	u8220
 13482  000A76                     u8221:
 13483  000A76  EF6E  F005         	goto	l8136
 13484  000A7A                     u8220:
 13485  000A7A                     
 13486                           ; BSR set to: 1
 13487                           ;Modbus.c: 396:                 ByteLo = MB301xx[ModbusData[3] +i] & 0x00FF;
 13488  000A7A  5103               	movf	(_ModbusData+3)& (0+255),w,b
 13489  000A7C  0100               	movlb	0	; () banked
 13490  000A7E  2598               	addwf	ModbusFC04@i& (0+255),w,b
 13491  000A80  6F8F               	movwf	??_ModbusFC04& (0+255),b
 13492  000A82  0E00               	movlw	0
 13493  000A84  2199               	addwfc	(ModbusFC04@i+1)& (0+255),w,b
 13494  000A86  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 13495  000A88  90D8               	bcf	status,0,c
 13496  000A8A  378F               	rlcf	??_ModbusFC04& (0+255),f,b
 13497  000A8C  3790               	rlcf	(??_ModbusFC04+1)& (0+255),f,b
 13498  000A8E  0E64               	movlw	low _MB301xx
 13499  000A90  258F               	addwf	??_ModbusFC04& (0+255),w,b
 13500  000A92  6ED9               	movwf	fsr2l,c
 13501  000A94  0E01               	movlw	high _MB301xx
 13502  000A96  2190               	addwfc	(??_ModbusFC04+1)& (0+255),w,b
 13503  000A98  6EDA               	movwf	fsr2h,c
 13504  000A9A  CFDE F091          	movff	postinc2,??_ModbusFC04+2
 13505  000A9E  CFDD F092          	movff	postdec2,??_ModbusFC04+3
 13506  000AA2  5191               	movf	(??_ModbusFC04+2)& (0+255),w,b
 13507  000AA4  6FF6               	movwf	_ByteLo& (0+255),b
 13508  000AA6  6BF7               	clrf	(_ByteLo+1)& (0+255),b
 13509                           
 13510                           ;Modbus.c: 397:                 ByteHi = MB301xx[ModbusData[3] +i] >> 8;
 13511  000AA8  0101               	movlb	1	; () banked
 13512  000AAA  5103               	movf	(_ModbusData+3)& (0+255),w,b
 13513  000AAC  0100               	movlb	0	; () banked
 13514  000AAE  2598               	addwf	ModbusFC04@i& (0+255),w,b
 13515  000AB0  6F8F               	movwf	??_ModbusFC04& (0+255),b
 13516  000AB2  0E00               	movlw	0
 13517  000AB4  2199               	addwfc	(ModbusFC04@i+1)& (0+255),w,b
 13518  000AB6  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 13519  000AB8  90D8               	bcf	status,0,c
 13520  000ABA  378F               	rlcf	??_ModbusFC04& (0+255),f,b
 13521  000ABC  3790               	rlcf	(??_ModbusFC04+1)& (0+255),f,b
 13522  000ABE  0E64               	movlw	low _MB301xx
 13523  000AC0  258F               	addwf	??_ModbusFC04& (0+255),w,b
 13524  000AC2  6ED9               	movwf	fsr2l,c
 13525  000AC4  0E01               	movlw	high _MB301xx
 13526  000AC6  2190               	addwfc	(??_ModbusFC04+1)& (0+255),w,b
 13527  000AC8  6EDA               	movwf	fsr2h,c
 13528  000ACA  CFDE F091          	movff	postinc2,??_ModbusFC04+2
 13529  000ACE  CFDD F092          	movff	postdec2,??_ModbusFC04+3
 13530  000AD2  5192               	movf	(??_ModbusFC04+3)& (0+255),w,b
 13531  000AD4  6FD5               	movwf	_ByteHi& (0+255),b
 13532  000AD6  6BD6               	clrf	(_ByteHi+1)& (0+255),b
 13533                           
 13534                           ;Modbus.c: 399:             }
 13535  000AD8  EF79  F006         	goto	l8162
 13536  000ADC                     l8136:
 13537                           
 13538                           ; BSR set to: 1
 13539  000ADC  0E02               	movlw	2
 13540  000ADE  1902               	xorwf	(_ModbusData+2)& (0+255),w,b
 13541  000AE0  A4D8               	btfss	status,2,c
 13542  000AE2  EF75  F005         	goto	u8231
 13543  000AE6  EF77  F005         	goto	u8230
 13544  000AEA                     u8231:
 13545  000AEA  EFA8  F005         	goto	l8140
 13546  000AEE                     u8230:
 13547  000AEE                     
 13548                           ; BSR set to: 1
 13549                           ;Modbus.c: 406:                 ByteLo = MB302xx[ModbusData[3] +i] & 0x00FF;
 13550  000AEE  5103               	movf	(_ModbusData+3)& (0+255),w,b
 13551  000AF0  0100               	movlb	0	; () banked
 13552  000AF2  2598               	addwf	ModbusFC04@i& (0+255),w,b
 13553  000AF4  6F8F               	movwf	??_ModbusFC04& (0+255),b
 13554  000AF6  0E00               	movlw	0
 13555  000AF8  2199               	addwfc	(ModbusFC04@i+1)& (0+255),w,b
 13556  000AFA  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 13557  000AFC  90D8               	bcf	status,0,c
 13558  000AFE  378F               	rlcf	??_ModbusFC04& (0+255),f,b
 13559  000B00  3790               	rlcf	(??_ModbusFC04+1)& (0+255),f,b
 13560  000B02  0EFC               	movlw	low _MB302xx
 13561  000B04  258F               	addwf	??_ModbusFC04& (0+255),w,b
 13562  000B06  6ED9               	movwf	fsr2l,c
 13563  000B08  0E00               	movlw	high _MB302xx
 13564  000B0A  2190               	addwfc	(??_ModbusFC04+1)& (0+255),w,b
 13565  000B0C  6EDA               	movwf	fsr2h,c
 13566  000B0E  CFDE F091          	movff	postinc2,??_ModbusFC04+2
 13567  000B12  CFDD F092          	movff	postdec2,??_ModbusFC04+3
 13568  000B16  5191               	movf	(??_ModbusFC04+2)& (0+255),w,b
 13569  000B18  6FF6               	movwf	_ByteLo& (0+255),b
 13570  000B1A  6BF7               	clrf	(_ByteLo+1)& (0+255),b
 13571                           
 13572                           ;Modbus.c: 407:                 ByteHi = MB302xx[ModbusData[3] +i] >> 8;
 13573  000B1C  0101               	movlb	1	; () banked
 13574  000B1E  5103               	movf	(_ModbusData+3)& (0+255),w,b
 13575  000B20  0100               	movlb	0	; () banked
 13576  000B22  2598               	addwf	ModbusFC04@i& (0+255),w,b
 13577  000B24  6F8F               	movwf	??_ModbusFC04& (0+255),b
 13578  000B26  0E00               	movlw	0
 13579  000B28  2199               	addwfc	(ModbusFC04@i+1)& (0+255),w,b
 13580  000B2A  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 13581  000B2C  90D8               	bcf	status,0,c
 13582  000B2E  378F               	rlcf	??_ModbusFC04& (0+255),f,b
 13583  000B30  3790               	rlcf	(??_ModbusFC04+1)& (0+255),f,b
 13584  000B32  0EFC               	movlw	low _MB302xx
 13585  000B34  258F               	addwf	??_ModbusFC04& (0+255),w,b
 13586  000B36  6ED9               	movwf	fsr2l,c
 13587  000B38  0E00               	movlw	high _MB302xx
 13588  000B3A  2190               	addwfc	(??_ModbusFC04+1)& (0+255),w,b
 13589  000B3C  6EDA               	movwf	fsr2h,c
 13590  000B3E  CFDE F091          	movff	postinc2,??_ModbusFC04+2
 13591  000B42  CFDD F092          	movff	postdec2,??_ModbusFC04+3
 13592  000B46  5192               	movf	(??_ModbusFC04+3)& (0+255),w,b
 13593  000B48  6FD5               	movwf	_ByteHi& (0+255),b
 13594  000B4A  6BD6               	clrf	(_ByteHi+1)& (0+255),b
 13595                           
 13596                           ;Modbus.c: 409:             }else if(ModbusData[2] == 0x04){
 13597  000B4C  EF79  F006         	goto	l8162
 13598  000B50                     l8140:
 13599                           
 13600                           ; BSR set to: 1
 13601  000B50  0E04               	movlw	4
 13602  000B52  1902               	xorwf	(_ModbusData+2)& (0+255),w,b
 13603  000B54  A4D8               	btfss	status,2,c
 13604  000B56  EFAF  F005         	goto	u8241
 13605  000B5A  EFB1  F005         	goto	u8240
 13606  000B5E                     u8241:
 13607  000B5E  EFE2  F005         	goto	l8144
 13608  000B62                     u8240:
 13609  000B62                     
 13610                           ; BSR set to: 1
 13611                           ;Modbus.c: 411:                 ByteLo = MB304xx[ModbusData[3] +i] & 0x00FF;
 13612  000B62  5103               	movf	(_ModbusData+3)& (0+255),w,b
 13613  000B64  0100               	movlb	0	; () banked
 13614  000B66  2598               	addwf	ModbusFC04@i& (0+255),w,b
 13615  000B68  6F8F               	movwf	??_ModbusFC04& (0+255),b
 13616  000B6A  0E00               	movlw	0
 13617  000B6C  2199               	addwfc	(ModbusFC04@i+1)& (0+255),w,b
 13618  000B6E  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 13619  000B70  90D8               	bcf	status,0,c
 13620  000B72  378F               	rlcf	??_ModbusFC04& (0+255),f,b
 13621  000B74  3790               	rlcf	(??_ModbusFC04+1)& (0+255),f,b
 13622  000B76  0E72               	movlw	low _MB304xx
 13623  000B78  258F               	addwf	??_ModbusFC04& (0+255),w,b
 13624  000B7A  6ED9               	movwf	fsr2l,c
 13625  000B7C  0E01               	movlw	high _MB304xx
 13626  000B7E  2190               	addwfc	(??_ModbusFC04+1)& (0+255),w,b
 13627  000B80  6EDA               	movwf	fsr2h,c
 13628  000B82  CFDE F091          	movff	postinc2,??_ModbusFC04+2
 13629  000B86  CFDD F092          	movff	postdec2,??_ModbusFC04+3
 13630  000B8A  5191               	movf	(??_ModbusFC04+2)& (0+255),w,b
 13631  000B8C  6FF6               	movwf	_ByteLo& (0+255),b
 13632  000B8E  6BF7               	clrf	(_ByteLo+1)& (0+255),b
 13633                           
 13634                           ;Modbus.c: 412:                 ByteHi = MB304xx[ModbusData[3] +i] >> 8;
 13635  000B90  0101               	movlb	1	; () banked
 13636  000B92  5103               	movf	(_ModbusData+3)& (0+255),w,b
 13637  000B94  0100               	movlb	0	; () banked
 13638  000B96  2598               	addwf	ModbusFC04@i& (0+255),w,b
 13639  000B98  6F8F               	movwf	??_ModbusFC04& (0+255),b
 13640  000B9A  0E00               	movlw	0
 13641  000B9C  2199               	addwfc	(ModbusFC04@i+1)& (0+255),w,b
 13642  000B9E  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 13643  000BA0  90D8               	bcf	status,0,c
 13644  000BA2  378F               	rlcf	??_ModbusFC04& (0+255),f,b
 13645  000BA4  3790               	rlcf	(??_ModbusFC04+1)& (0+255),f,b
 13646  000BA6  0E72               	movlw	low _MB304xx
 13647  000BA8  258F               	addwf	??_ModbusFC04& (0+255),w,b
 13648  000BAA  6ED9               	movwf	fsr2l,c
 13649  000BAC  0E01               	movlw	high _MB304xx
 13650  000BAE  2190               	addwfc	(??_ModbusFC04+1)& (0+255),w,b
 13651  000BB0  6EDA               	movwf	fsr2h,c
 13652  000BB2  CFDE F091          	movff	postinc2,??_ModbusFC04+2
 13653  000BB6  CFDD F092          	movff	postdec2,??_ModbusFC04+3
 13654  000BBA  5192               	movf	(??_ModbusFC04+3)& (0+255),w,b
 13655  000BBC  6FD5               	movwf	_ByteHi& (0+255),b
 13656  000BBE  6BD6               	clrf	(_ByteHi+1)& (0+255),b
 13657                           
 13658                           ;Modbus.c: 414:             }else if(ModbusData[2] == 0x05){
 13659  000BC0  EF79  F006         	goto	l8162
 13660  000BC4                     l8144:
 13661                           
 13662                           ; BSR set to: 1
 13663  000BC4  0E05               	movlw	5
 13664  000BC6  1902               	xorwf	(_ModbusData+2)& (0+255),w,b
 13665  000BC8  A4D8               	btfss	status,2,c
 13666  000BCA  EFE9  F005         	goto	u8251
 13667  000BCE  EFEB  F005         	goto	u8250
 13668  000BD2                     u8251:
 13669  000BD2  EF1C  F006         	goto	l8148
 13670  000BD6                     u8250:
 13671  000BD6                     
 13672                           ; BSR set to: 1
 13673                           ;Modbus.c: 416:                 ByteLo = MB305xx[ModbusData[3] +i] & 0x00FF;
 13674  000BD6  5103               	movf	(_ModbusData+3)& (0+255),w,b
 13675  000BD8  0100               	movlb	0	; () banked
 13676  000BDA  2598               	addwf	ModbusFC04@i& (0+255),w,b
 13677  000BDC  6F8F               	movwf	??_ModbusFC04& (0+255),b
 13678  000BDE  0E00               	movlw	0
 13679  000BE0  2199               	addwfc	(ModbusFC04@i+1)& (0+255),w,b
 13680  000BE2  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 13681  000BE4  90D8               	bcf	status,0,c
 13682  000BE6  378F               	rlcf	??_ModbusFC04& (0+255),f,b
 13683  000BE8  3790               	rlcf	(??_ModbusFC04+1)& (0+255),f,b
 13684  000BEA  0E3C               	movlw	low _MB305xx
 13685  000BEC  258F               	addwf	??_ModbusFC04& (0+255),w,b
 13686  000BEE  6ED9               	movwf	fsr2l,c
 13687  000BF0  0E02               	movlw	high _MB305xx
 13688  000BF2  2190               	addwfc	(??_ModbusFC04+1)& (0+255),w,b
 13689  000BF4  6EDA               	movwf	fsr2h,c
 13690  000BF6  CFDE F091          	movff	postinc2,??_ModbusFC04+2
 13691  000BFA  CFDD F092          	movff	postdec2,??_ModbusFC04+3
 13692  000BFE  5191               	movf	(??_ModbusFC04+2)& (0+255),w,b
 13693  000C00  6FF6               	movwf	_ByteLo& (0+255),b
 13694  000C02  6BF7               	clrf	(_ByteLo+1)& (0+255),b
 13695                           
 13696                           ;Modbus.c: 417:                 ByteHi = MB305xx[ModbusData[3] +i] >> 8;
 13697  000C04  0101               	movlb	1	; () banked
 13698  000C06  5103               	movf	(_ModbusData+3)& (0+255),w,b
 13699  000C08  0100               	movlb	0	; () banked
 13700  000C0A  2598               	addwf	ModbusFC04@i& (0+255),w,b
 13701  000C0C  6F8F               	movwf	??_ModbusFC04& (0+255),b
 13702  000C0E  0E00               	movlw	0
 13703  000C10  2199               	addwfc	(ModbusFC04@i+1)& (0+255),w,b
 13704  000C12  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 13705  000C14  90D8               	bcf	status,0,c
 13706  000C16  378F               	rlcf	??_ModbusFC04& (0+255),f,b
 13707  000C18  3790               	rlcf	(??_ModbusFC04+1)& (0+255),f,b
 13708  000C1A  0E3C               	movlw	low _MB305xx
 13709  000C1C  258F               	addwf	??_ModbusFC04& (0+255),w,b
 13710  000C1E  6ED9               	movwf	fsr2l,c
 13711  000C20  0E02               	movlw	high _MB305xx
 13712  000C22  2190               	addwfc	(??_ModbusFC04+1)& (0+255),w,b
 13713  000C24  6EDA               	movwf	fsr2h,c
 13714  000C26  CFDE F091          	movff	postinc2,??_ModbusFC04+2
 13715  000C2A  CFDD F092          	movff	postdec2,??_ModbusFC04+3
 13716  000C2E  5192               	movf	(??_ModbusFC04+3)& (0+255),w,b
 13717  000C30  6FD5               	movwf	_ByteHi& (0+255),b
 13718  000C32  6BD6               	clrf	(_ByteHi+1)& (0+255),b
 13719                           
 13720                           ;Modbus.c: 419:             }
 13721  000C34  EF79  F006         	goto	l8162
 13722  000C38                     l8148:
 13723                           
 13724                           ; BSR set to: 1
 13725  000C38  5102               	movf	(_ModbusData+2)& (0+255),w,b
 13726  000C3A  A4D8               	btfss	status,2,c
 13727  000C3C  EF22  F006         	goto	u8261
 13728  000C40  EF24  F006         	goto	u8260
 13729  000C44                     u8261:
 13730  000C44  EF55  F006         	goto	l8152
 13731  000C48                     u8260:
 13732  000C48                     
 13733                           ; BSR set to: 1
 13734                           ;Modbus.c: 422:                 ByteLo = MB300xx[ModbusData[3] +i] & 0x00FF;
 13735  000C48  5103               	movf	(_ModbusData+3)& (0+255),w,b
 13736  000C4A  0100               	movlb	0	; () banked
 13737  000C4C  2598               	addwf	ModbusFC04@i& (0+255),w,b
 13738  000C4E  6F8F               	movwf	??_ModbusFC04& (0+255),b
 13739  000C50  0E00               	movlw	0
 13740  000C52  2199               	addwfc	(ModbusFC04@i+1)& (0+255),w,b
 13741  000C54  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 13742  000C56  90D8               	bcf	status,0,c
 13743  000C58  378F               	rlcf	??_ModbusFC04& (0+255),f,b
 13744  000C5A  3790               	rlcf	(??_ModbusFC04+1)& (0+255),f,b
 13745  000C5C  0E64               	movlw	low _MB300xx
 13746  000C5E  258F               	addwf	??_ModbusFC04& (0+255),w,b
 13747  000C60  6ED9               	movwf	fsr2l,c
 13748  000C62  0E04               	movlw	high _MB300xx
 13749  000C64  2190               	addwfc	(??_ModbusFC04+1)& (0+255),w,b
 13750  000C66  6EDA               	movwf	fsr2h,c
 13751  000C68  CFDE F091          	movff	postinc2,??_ModbusFC04+2
 13752  000C6C  CFDD F092          	movff	postdec2,??_ModbusFC04+3
 13753  000C70  5191               	movf	(??_ModbusFC04+2)& (0+255),w,b
 13754  000C72  6FF6               	movwf	_ByteLo& (0+255),b
 13755  000C74  6BF7               	clrf	(_ByteLo+1)& (0+255),b
 13756                           
 13757                           ;Modbus.c: 423:                 ByteHi = MB300xx[ModbusData[3] +i] >> 8;
 13758  000C76  0101               	movlb	1	; () banked
 13759  000C78  5103               	movf	(_ModbusData+3)& (0+255),w,b
 13760  000C7A  0100               	movlb	0	; () banked
 13761  000C7C  2598               	addwf	ModbusFC04@i& (0+255),w,b
 13762  000C7E  6F8F               	movwf	??_ModbusFC04& (0+255),b
 13763  000C80  0E00               	movlw	0
 13764  000C82  2199               	addwfc	(ModbusFC04@i+1)& (0+255),w,b
 13765  000C84  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 13766  000C86  90D8               	bcf	status,0,c
 13767  000C88  378F               	rlcf	??_ModbusFC04& (0+255),f,b
 13768  000C8A  3790               	rlcf	(??_ModbusFC04+1)& (0+255),f,b
 13769  000C8C  0E64               	movlw	low _MB300xx
 13770  000C8E  258F               	addwf	??_ModbusFC04& (0+255),w,b
 13771  000C90  6ED9               	movwf	fsr2l,c
 13772  000C92  0E04               	movlw	high _MB300xx
 13773  000C94  2190               	addwfc	(??_ModbusFC04+1)& (0+255),w,b
 13774  000C96  6EDA               	movwf	fsr2h,c
 13775  000C98  CFDE F091          	movff	postinc2,??_ModbusFC04+2
 13776  000C9C  CFDD F092          	movff	postdec2,??_ModbusFC04+3
 13777  000CA0  5192               	movf	(??_ModbusFC04+3)& (0+255),w,b
 13778  000CA2  6FD5               	movwf	_ByteHi& (0+255),b
 13779  000CA4  6BD6               	clrf	(_ByteHi+1)& (0+255),b
 13780                           
 13781                           ;Modbus.c: 425:             }else if(ModbusData[2] == 0x06){
 13782  000CA6  EF79  F006         	goto	l8162
 13783  000CAA                     l8152:
 13784                           
 13785                           ; BSR set to: 1
 13786  000CAA  0E06               	movlw	6
 13787  000CAC  1902               	xorwf	(_ModbusData+2)& (0+255),w,b
 13788  000CAE  A4D8               	btfss	status,2,c
 13789  000CB0  EF5C  F006         	goto	u8271
 13790  000CB4  EF5E  F006         	goto	u8270
 13791  000CB8                     u8271:
 13792  000CB8  EF79  F006         	goto	l803
 13793  000CBC                     u8270:
 13794  000CBC                     
 13795                           ; BSR set to: 1
 13796                           ;Modbus.c: 427:                 uint16_t convertedValue;;Modbus.c: 428:                 
      +                          convertedValue = ADCC_GetSingleConversion(AIP_0);
 13797  000CBC  0E00               	movlw	0
 13798  000CBE  ECA8  F027         	call	_ADCC_GetSingleConversion
 13799  000CC2  C005  F095         	movff	?_ADCC_GetSingleConversion,ModbusFC04@convertedValue
 13800  000CC6  C006  F096         	movff	?_ADCC_GetSingleConversion+1,ModbusFC04@convertedValue+1
 13801  000CCA                     
 13802                           ;Modbus.c: 429:                 printf("ADC: 0x%04x \r\n", convertedValue);
 13803  000CCA  0E99               	movlw	low STR_57
 13804  000CCC  0100               	movlb	0	; () banked
 13805  000CCE  6F7D               	movwf	printf@fmt& (0+255),b
 13806  000CD0  0EFF               	movlw	high STR_57
 13807  000CD2  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 13808  000CD4  C095  F07F         	movff	ModbusFC04@convertedValue,?_printf+2
 13809  000CD8  C096  F080         	movff	ModbusFC04@convertedValue+1,?_printf+3
 13810  000CDC  ECEB  F027         	call	_printf	;wreg free
 13811  000CE0                     
 13812                           ;Modbus.c: 431:                 ByteLo = convertedValue & 0x00FF;
 13813  000CE0  0100               	movlb	0	; () banked
 13814  000CE2  5195               	movf	ModbusFC04@convertedValue& (0+255),w,b
 13815  000CE4  6FF6               	movwf	_ByteLo& (0+255),b
 13816  000CE6  6BF7               	clrf	(_ByteLo+1)& (0+255),b
 13817  000CE8                     
 13818                           ; BSR set to: 0
 13819                           ;Modbus.c: 432:                 ByteHi = convertedValue >> 8;
 13820  000CE8  5196               	movf	(ModbusFC04@convertedValue+1)& (0+255),w,b
 13821  000CEA  6FD5               	movwf	_ByteHi& (0+255),b
 13822  000CEC  6BD6               	clrf	(_ByteHi+1)& (0+255),b
 13823  000CEE  EF79  F006         	goto	l8162
 13824  000CF2                     l803:
 13825  000CF2                     l8162:
 13826                           
 13827                           ;Modbus.c: 435:             MBRespon[MBResCnt] = ByteHi;
 13828  000CF2  0E57               	movlw	low _MBRespon
 13829  000CF4  0100               	movlb	0	; () banked
 13830  000CF6  25D7               	addwf	_MBResCnt& (0+255),w,b
 13831  000CF8  6ED9               	movwf	fsr2l,c
 13832  000CFA  0E02               	movlw	high _MBRespon
 13833  000CFC  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 13834  000CFE  6EDA               	movwf	fsr2h,c
 13835  000D00  C0D5  FFDF         	movff	_ByteHi,indf2
 13836  000D04                     
 13837                           ; BSR set to: 0
 13838                           ;Modbus.c: 436:             MBResCnt++;
 13839  000D04  4BD7               	infsnz	_MBResCnt& (0+255),f,b
 13840  000D06  2BD8               	incf	(_MBResCnt+1)& (0+255),f,b
 13841  000D08                     
 13842                           ; BSR set to: 0
 13843                           ;Modbus.c: 437:             MBRespon[MBResCnt] = ByteLo;
 13844  000D08  0E57               	movlw	low _MBRespon
 13845  000D0A  25D7               	addwf	_MBResCnt& (0+255),w,b
 13846  000D0C  6ED9               	movwf	fsr2l,c
 13847  000D0E  0E02               	movlw	high _MBRespon
 13848  000D10  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 13849  000D12  6EDA               	movwf	fsr2h,c
 13850  000D14  C0F6  FFDF         	movff	_ByteLo,indf2
 13851  000D18                     
 13852                           ; BSR set to: 0
 13853                           ;Modbus.c: 438:             MBResCnt++;
 13854  000D18  4BD7               	infsnz	_MBResCnt& (0+255),f,b
 13855  000D1A  2BD8               	incf	(_MBResCnt+1)& (0+255),f,b
 13856  000D1C                     
 13857                           ; BSR set to: 0
 13858                           ;Modbus.c: 440:         }
 13859  000D1C  4B98               	infsnz	ModbusFC04@i& (0+255),f,b
 13860  000D1E  2B99               	incf	(ModbusFC04@i+1)& (0+255),f,b
 13861  000D20                     l8172:
 13862                           
 13863                           ; BSR set to: 0
 13864  000D20  0101               	movlb	1	; () banked
 13865  000D22  5105               	movf	(_ModbusData+5)& (0+255),w,b
 13866  000D24  0100               	movlb	0	; () banked
 13867  000D26  6F8F               	movwf	??_ModbusFC04& (0+255),b
 13868  000D28  6B90               	clrf	(??_ModbusFC04+1)& (0+255),b
 13869  000D2A  518F               	movf	??_ModbusFC04& (0+255),w,b
 13870  000D2C  5D98               	subwf	ModbusFC04@i& (0+255),w,b
 13871  000D2E  5199               	movf	(ModbusFC04@i+1)& (0+255),w,b
 13872  000D30  0A80               	xorlw	128
 13873  000D32  6F91               	movwf	(??_ModbusFC04+2)& (0+255),b
 13874  000D34  5190               	movf	(??_ModbusFC04+1)& (0+255),w,b
 13875  000D36  0A80               	xorlw	128
 13876  000D38  5991               	subwfb	(??_ModbusFC04+2)& (0+255),w,b
 13877  000D3A  A0D8               	btfss	status,0,c
 13878  000D3C  EFA2  F006         	goto	u8281
 13879  000D40  EFA4  F006         	goto	u8280
 13880  000D44                     u8281:
 13881  000D44  EFFA  F004         	goto	l8128
 13882  000D48                     u8280:
 13883  000D48                     
 13884                           ; BSR set to: 0
 13885                           ;Modbus.c: 442:         ByteHi = generateCRC(MBResCnt, 1);
 13886  000D48  C0D7  F005         	movff	_MBResCnt,generateCRC@MessCnt
 13887  000D4C  C0D8  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
 13888  000D50  0E01               	movlw	1
 13889  000D52  6E07               	movwf	generateCRC@HiOrLo^0,c
 13890  000D54  ECA0  F01E         	call	_generateCRC	;wreg free
 13891  000D58  C005  F0D5         	movff	?_generateCRC,_ByteHi
 13892  000D5C  C006  F0D6         	movff	?_generateCRC+1,_ByteHi+1
 13893                           
 13894                           ;Modbus.c: 443:         ByteLo = generateCRC(MBResCnt, 0);
 13895  000D60  C0D7  F005         	movff	_MBResCnt,generateCRC@MessCnt
 13896  000D64  C0D8  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
 13897  000D68  0E00               	movlw	0
 13898  000D6A  6E07               	movwf	generateCRC@HiOrLo^0,c
 13899  000D6C  ECA0  F01E         	call	_generateCRC	;wreg free
 13900  000D70  C005  F0F6         	movff	?_generateCRC,_ByteLo
 13901  000D74  C006  F0F7         	movff	?_generateCRC+1,_ByteLo+1
 13902  000D78                     
 13903                           ;Modbus.c: 445:         MBRespon[MBResCnt] = ByteHi;
 13904  000D78  0E57               	movlw	low _MBRespon
 13905  000D7A  0100               	movlb	0	; () banked
 13906  000D7C  25D7               	addwf	_MBResCnt& (0+255),w,b
 13907  000D7E  6ED9               	movwf	fsr2l,c
 13908  000D80  0E02               	movlw	high _MBRespon
 13909  000D82  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 13910  000D84  6EDA               	movwf	fsr2h,c
 13911  000D86  C0D5  FFDF         	movff	_ByteHi,indf2
 13912  000D8A                     
 13913                           ; BSR set to: 0
 13914                           ;Modbus.c: 446:         MBRespon[MBResCnt +1] = ByteLo;
 13915  000D8A  0E58               	movlw	low (_MBRespon+1)
 13916  000D8C  25D7               	addwf	_MBResCnt& (0+255),w,b
 13917  000D8E  6ED9               	movwf	fsr2l,c
 13918  000D90  0E02               	movlw	high (_MBRespon+1)
 13919  000D92  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 13920  000D94  6EDA               	movwf	fsr2h,c
 13921  000D96  C0F6  FFDF         	movff	_ByteLo,indf2
 13922  000D9A                     
 13923                           ; BSR set to: 0
 13924                           ;Modbus.c: 447:         MBResCnt = MBResCnt +2;
 13925  000D9A  0E02               	movlw	2
 13926  000D9C  25D7               	addwf	_MBResCnt& (0+255),w,b
 13927  000D9E  6FD7               	movwf	_MBResCnt& (0+255),b
 13928  000DA0  0E00               	movlw	0
 13929  000DA2  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 13930  000DA4  6FD8               	movwf	(_MBResCnt+1)& (0+255),b
 13931  000DA6                     
 13932                           ; BSR set to: 0
 13933                           ;Modbus.c: 450:         UART1_Write_string(MBRespon,MBResCnt);
 13934  000DA6  0E57               	movlw	low _MBRespon
 13935  000DA8  6E06               	movwf	UART1_Write_string@data^0,c
 13936  000DAA  0E02               	movlw	high _MBRespon
 13937  000DAC  6E07               	movwf	(UART1_Write_string@data+1)^0,c
 13938  000DAE  C0D7  F008         	movff	_MBResCnt,UART1_Write_string@data_len
 13939  000DB2  C0D8  F009         	movff	_MBResCnt+1,UART1_Write_string@data_len+1
 13940  000DB6  EC6D  F023         	call	_UART1_Write_string	;wreg free
 13941                           
 13942                           ;Modbus.c: 451:     }else{
 13943  000DBA  EFE5  F006         	goto	l811
 13944  000DBE                     l8184:
 13945                           
 13946                           ; BSR set to: 0
 13947                           ;Modbus.c: 452:         ModbusError(0x02);
 13948  000DBE  0E00               	movlw	0
 13949  000DC0  6E15               	movwf	(ModbusError@ErrorCode+1)^0,c
 13950  000DC2  0E02               	movlw	2
 13951  000DC4  6E14               	movwf	ModbusError@ErrorCode^0,c
 13952  000DC6  ECA2  F020         	call	_ModbusError	;wreg free
 13953  000DCA                     l811:
 13954  000DCA  0012               	return		;funcret
 13955  000DCC                     __end_of_ModbusFC04:
 13956                           	opt callstack 0
 13957                           
 13958 ;; *************** function _ADCC_GetSingleConversion *****************
 13959 ;; Defined at:
 13960 ;;		line 131 in file "mcc_generated_files/adcc.c"
 13961 ;; Parameters:    Size  Location     Type
 13962 ;;  channel         1    wreg     enum E10046
 13963 ;; Auto vars:     Size  Location     Type
 13964 ;;  channel         1    8[COMRAM] enum E10046
 13965 ;; Return value:  Size  Location     Type
 13966 ;;                  2    4[COMRAM] unsigned short 
 13967 ;; Registers used:
 13968 ;;		wreg, status,2, status,0
 13969 ;; Tracked objects:
 13970 ;;		On entry : 0/0
 13971 ;;		On exit  : 0/0
 13972 ;;		Unchanged: 0/0
 13973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13974 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13975 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13976 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13977 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13978 ;;Total ram usage:        5 bytes
 13979 ;; Hardware stack levels used:    1
 13980 ;; Hardware stack levels required when called:    4
 13981 ;; This function calls:
 13982 ;;		Nothing
 13983 ;; This function is called by:
 13984 ;;		_ModbusFC04
 13985 ;;		_InitialiseString
 13986 ;; This function uses a non-reentrant model
 13987 ;;
 13988                           
 13989                           	psect	text49
 13990  004F50                     __ptext49:
 13991                           	opt callstack 0
 13992  004F50                     _ADCC_GetSingleConversion:
 13993                           	opt callstack 24
 13994                           
 13995                           ;incstack = 0
 13996                           ;ADCC_GetSingleConversion@channel stored from wreg
 13997  004F50  6E09               	movwf	ADCC_GetSingleConversion@channel^0,c
 13998  004F52                     
 13999                           ;mcc_generated_files/adcc.c: 131: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 132: {;mcc_generated_files/adcc.c: 134:     ADPCH = 
      +                          channel;
 14000  004F52  C009  FF5F         	movff	ADCC_GetSingleConversion@channel,3935	;volatile
 14001  004F56                     
 14002                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADON = 1;
 14003  004F56  8E60               	bsf	96,7,c	;volatile
 14004  004F58                     
 14005                           ;mcc_generated_files/adcc.c: 140:     ADCON0bits.ADCONT = 0;
 14006  004F58  9C60               	bcf	96,6,c	;volatile
 14007  004F5A                     
 14008                           ;mcc_generated_files/adcc.c: 143:     ADCON0bits.ADGO = 1;
 14009  004F5A  8060               	bsf	96,0,c	;volatile
 14010  004F5C                     l1117:
 14011                           
 14012                           ;mcc_generated_files/adcc.c: 147:     while (ADCON0bits.ADGO)
 14013  004F5C  B060               	btfsc	96,0,c	;volatile
 14014  004F5E  EFB3  F027         	goto	u7451
 14015  004F62  EFB5  F027         	goto	u7450
 14016  004F66                     u7451:
 14017  004F66  EFAE  F027         	goto	l1117
 14018  004F6A                     u7450:
 14019  004F6A                     
 14020                           ;mcc_generated_files/adcc.c: 153:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 14021  004F6A  5064               	movf	100,w,c	;volatile
 14022  004F6C  6E08               	movwf	(??_ADCC_GetSingleConversion+1)^0,c
 14023  004F6E  6A07               	clrf	??_ADCC_GetSingleConversion^0,c
 14024  004F70  5063               	movf	99,w,c	;volatile
 14025  004F72  2407               	addwf	??_ADCC_GetSingleConversion^0,w,c
 14026  004F74  6E05               	movwf	?_ADCC_GetSingleConversion^0,c
 14027  004F76  0E00               	movlw	0
 14028  004F78  2008               	addwfc	(??_ADCC_GetSingleConversion+1)^0,w,c
 14029  004F7A  6E06               	movwf	(?_ADCC_GetSingleConversion+1)^0,c
 14030  004F7C  0012               	return		;funcret
 14031  004F7E                     __end_of_ADCC_GetSingleConversion:
 14032                           	opt callstack 0
 14033                           
 14034 ;; *************** function _ModbusFC03 *****************
 14035 ;; Defined at:
 14036 ;;		line 184 in file "Modbus.c"
 14037 ;; Parameters:    Size  Location     Type
 14038 ;;		None
 14039 ;; Auto vars:     Size  Location     Type
 14040 ;;  i               2   54[BANK0 ] int 
 14041 ;;  error           1   53[BANK0 ] _Bool 
 14042 ;; Return value:  Size  Location     Type
 14043 ;;                  1    wreg      void 
 14044 ;; Registers used:
 14045 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14046 ;; Tracked objects:
 14047 ;;		On entry : 0/0
 14048 ;;		On exit  : 0/0
 14049 ;;		Unchanged: 0/0
 14050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14052 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14053 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14054 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14055 ;;Total ram usage:        9 bytes
 14056 ;; Hardware stack levels used:    1
 14057 ;; Hardware stack levels required when called:   13
 14058 ;; This function calls:
 14059 ;;		_ModbusError
 14060 ;;		_UART1_Write_string
 14061 ;;		_generateCRC
 14062 ;;		_printf
 14063 ;; This function is called by:
 14064 ;;		_main
 14065 ;; This function uses a non-reentrant model
 14066 ;;
 14067                           
 14068                           	psect	text50
 14069  001718                     __ptext50:
 14070                           	opt callstack 0
 14071  001718                     _ModbusFC03:
 14072                           	opt callstack 17
 14073  001718                     
 14074                           ;Modbus.c: 189:     _Bool error = 0;
 14075  001718  0E00               	movlw	0
 14076  00171A  0100               	movlb	0	; () banked
 14077  00171C  6F95               	movwf	ModbusFC03@error& (0+255),b
 14078                           
 14079                           ;Modbus.c: 191:     MBResCnt = 0;
 14080  00171E  0E00               	movlw	0
 14081  001720  6FD8               	movwf	(_MBResCnt+1)& (0+255),b
 14082  001722  0E00               	movlw	0
 14083  001724  6FD7               	movwf	_MBResCnt& (0+255),b
 14084  001726                     
 14085                           ; BSR set to: 0
 14086                           ;Modbus.c: 192:     MBRespon[MBResCnt] = ModbusData[0];
 14087  001726  0E57               	movlw	low _MBRespon
 14088  001728  25D7               	addwf	_MBResCnt& (0+255),w,b
 14089  00172A  6ED9               	movwf	fsr2l,c
 14090  00172C  0E02               	movlw	high _MBRespon
 14091  00172E  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 14092  001730  6EDA               	movwf	fsr2h,c
 14093  001732  C100  FFDF         	movff	_ModbusData,indf2
 14094  001736                     
 14095                           ; BSR set to: 0
 14096                           ;Modbus.c: 193:     MBResCnt++;
 14097  001736  4BD7               	infsnz	_MBResCnt& (0+255),f,b
 14098  001738  2BD8               	incf	(_MBResCnt+1)& (0+255),f,b
 14099  00173A                     
 14100                           ; BSR set to: 0
 14101                           ;Modbus.c: 194:     MBRespon[MBResCnt] = ModbusData[1];
 14102  00173A  0E57               	movlw	low _MBRespon
 14103  00173C  25D7               	addwf	_MBResCnt& (0+255),w,b
 14104  00173E  6ED9               	movwf	fsr2l,c
 14105  001740  0E02               	movlw	high _MBRespon
 14106  001742  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 14107  001744  6EDA               	movwf	fsr2h,c
 14108  001746  C101  FFDF         	movff	_ModbusData+1,indf2
 14109  00174A                     
 14110                           ; BSR set to: 0
 14111                           ;Modbus.c: 195:     MBResCnt++;
 14112  00174A  4BD7               	infsnz	_MBResCnt& (0+255),f,b
 14113  00174C  2BD8               	incf	(_MBResCnt+1)& (0+255),f,b
 14114  00174E                     
 14115                           ; BSR set to: 0
 14116                           ;Modbus.c: 196:     MBRespon[MBResCnt] = ModbusData[5] *2;
 14117  00174E  0101               	movlb	1	; () banked
 14118  001750  5105               	movf	(_ModbusData+5)& (0+255),w,b
 14119  001752  0D02               	mullw	2
 14120  001754  0E57               	movlw	low _MBRespon
 14121  001756  0100               	movlb	0	; () banked
 14122  001758  25D7               	addwf	_MBResCnt& (0+255),w,b
 14123  00175A  6ED9               	movwf	fsr2l,c
 14124  00175C  0E02               	movlw	high _MBRespon
 14125  00175E  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 14126  001760  6EDA               	movwf	fsr2h,c
 14127  001762  CFF3 FFDF          	movff	prodl,indf2
 14128  001766                     
 14129                           ; BSR set to: 0
 14130                           ;Modbus.c: 197:     MBResCnt++;
 14131  001766  4BD7               	infsnz	_MBResCnt& (0+255),f,b
 14132  001768  2BD8               	incf	(_MBResCnt+1)& (0+255),f,b
 14133                           
 14134                           ;Modbus.c: 200:     switch(ModbusData[2]){
 14135  00176A  EF48  F00C         	goto	l7938
 14136  00176E                     l7926:
 14137                           
 14138                           ; BSR set to: 0
 14139                           ;Modbus.c: 203:         {;Modbus.c: 204:             printf("Requested Output Holding Re
      +                          gisters\r\n");
 14140  00176E  0EF3               	movlw	low STR_33
 14141  001770  6F7D               	movwf	printf@fmt& (0+255),b
 14142  001772  0EFA               	movlw	high STR_33
 14143  001774  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 14144  001776  ECEB  F027         	call	_printf	;wreg free
 14145  00177A                     
 14146                           ;Modbus.c: 206:             if(
 14147  00177A  0101               	movlb	1	; () banked
 14148  00177C  5102               	movf	(_ModbusData+2)& (0+255),w,b
 14149  00177E  0100               	movlb	0	; () banked
 14150  001780  6F90               	movwf	(??_ModbusFC03+1)& (0+255),b
 14151  001782  6B8F               	clrf	??_ModbusFC03& (0+255),b
 14152  001784  0101               	movlb	1	; () banked
 14153  001786  5105               	movf	(_ModbusData+5)& (0+255),w,b
 14154  001788  C104  F091         	movff	_ModbusData+4,??_ModbusFC03+2
 14155  00178C  0100               	movlb	0	; () banked
 14156  00178E  6B92               	clrf	(??_ModbusFC03+3)& (0+255),b
 14157  001790  C091  F092         	movff	??_ModbusFC03+2,??_ModbusFC03+3
 14158  001794  6B91               	clrf	(??_ModbusFC03+2)& (0+255),b
 14159  001796  2791               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 14160  001798  0E00               	movlw	0
 14161  00179A  2392               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 14162  00179C  518F               	movf	??_ModbusFC03& (0+255),w,b
 14163  00179E  2791               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 14164  0017A0  5190               	movf	(??_ModbusFC03+1)& (0+255),w,b
 14165  0017A2  2392               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 14166  0017A4  0101               	movlb	1	; () banked
 14167  0017A6  5103               	movf	(_ModbusData+3)& (0+255),w,b
 14168  0017A8  0100               	movlb	0	; () banked
 14169  0017AA  2791               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 14170  0017AC  0E00               	movlw	0
 14171  0017AE  2392               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 14172  0017B0  BF92               	btfsc	(??_ModbusFC03+3)& (0+255),7,b
 14173  0017B2  EFDD  F00B         	goto	u7971
 14174  0017B6  EFDF  F00B         	goto	u7970
 14175  0017BA                     u7971:
 14176  0017BA  EF08  F00C         	goto	l7932
 14177  0017BE                     u7970:
 14178  0017BE                     
 14179                           ; BSR set to: 0
 14180  0017BE  0101               	movlb	1	; () banked
 14181  0017C0  5102               	movf	(_ModbusData+2)& (0+255),w,b
 14182  0017C2  0100               	movlb	0	; () banked
 14183  0017C4  6F90               	movwf	(??_ModbusFC03+1)& (0+255),b
 14184  0017C6  6B8F               	clrf	??_ModbusFC03& (0+255),b
 14185  0017C8  0101               	movlb	1	; () banked
 14186  0017CA  5105               	movf	(_ModbusData+5)& (0+255),w,b
 14187  0017CC  C104  F091         	movff	_ModbusData+4,??_ModbusFC03+2
 14188  0017D0  0100               	movlb	0	; () banked
 14189  0017D2  6B92               	clrf	(??_ModbusFC03+3)& (0+255),b
 14190  0017D4  C091  F092         	movff	??_ModbusFC03+2,??_ModbusFC03+3
 14191  0017D8  6B91               	clrf	(??_ModbusFC03+2)& (0+255),b
 14192  0017DA  2791               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 14193  0017DC  0E00               	movlw	0
 14194  0017DE  2392               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 14195  0017E0  518F               	movf	??_ModbusFC03& (0+255),w,b
 14196  0017E2  2791               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 14197  0017E4  5190               	movf	(??_ModbusFC03+1)& (0+255),w,b
 14198  0017E6  2392               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 14199  0017E8  0101               	movlb	1	; () banked
 14200  0017EA  5103               	movf	(_ModbusData+3)& (0+255),w,b
 14201  0017EC  0100               	movlb	0	; () banked
 14202  0017EE  2791               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 14203  0017F0  0E00               	movlw	0
 14204  0017F2  2392               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 14205  0017F4  BF92               	btfsc	(??_ModbusFC03+3)& (0+255),7,b
 14206  0017F6  EF06  F00C         	goto	u7981
 14207  0017FA  5192               	movf	(??_ModbusFC03+3)& (0+255),w,b
 14208  0017FC  E109               	bnz	u7980
 14209  0017FE  0E21               	movlw	33
 14210  001800  5D91               	subwf	(??_ModbusFC03+2)& (0+255),w,b
 14211  001802  A0D8               	btfss	status,0,c
 14212  001804  EF06  F00C         	goto	u7981
 14213  001808  EF08  F00C         	goto	u7980
 14214  00180C                     u7981:
 14215  00180C  EF5B  F00C         	goto	l7940
 14216  001810                     u7980:
 14217  001810                     l7932:
 14218                           
 14219                           ; BSR set to: 0
 14220                           ;Modbus.c: 208:                 (((ModbusData[2] * 256) + ModbusData[3]) + ((ModbusData[
      +                          4] * 256) + ModbusData[5]) > 32)){;Modbus.c: 210:                 printf("Registers out 
      +                          of range.\r\nValid: 0x0000 to 0x0031.\r\n");
 14221  001810  0E3E               	movlw	low STR_34
 14222  001812  6F7D               	movwf	printf@fmt& (0+255),b
 14223  001814  0EF7               	movlw	high STR_34
 14224  001816  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 14225  001818  ECEB  F027         	call	_printf	;wreg free
 14226                           
 14227                           ;Modbus.c: 212:                 printf("Requested: 0x%04x to 0x%04x\r\n", ModbusData[2] 
      +                          * 256 + ModbusData[3],
 14228  00181C  0E04               	movlw	low STR_35
 14229  00181E  0100               	movlb	0	; () banked
 14230  001820  6F7D               	movwf	printf@fmt& (0+255),b
 14231  001822  0EFD               	movlw	high STR_35
 14232  001824  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 14233  001826  0101               	movlb	1	; () banked
 14234  001828  5102               	movf	(_ModbusData+2)& (0+255),w,b
 14235  00182A  0100               	movlb	0	; () banked
 14236  00182C  6F90               	movwf	(??_ModbusFC03+1)& (0+255),b
 14237  00182E  6B8F               	clrf	??_ModbusFC03& (0+255),b
 14238  001830  0101               	movlb	1	; () banked
 14239  001832  5103               	movf	(_ModbusData+3)& (0+255),w,b
 14240  001834  0100               	movlb	0	; () banked
 14241  001836  258F               	addwf	??_ModbusFC03& (0+255),w,b
 14242  001838  6F7F               	movwf	(?_printf+2)& (0+255),b
 14243  00183A  0101               	movlb	1	; () banked
 14244  00183C  0E00               	movlw	0
 14245  00183E  0100               	movlb	0	; () banked
 14246  001840  2190               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
 14247  001842  6F80               	movwf	(?_printf+3)& (0+255),b
 14248  001844  0101               	movlb	1	; () banked
 14249  001846  5104               	movf	(_ModbusData+4)& (0+255),w,b
 14250  001848  0100               	movlb	0	; () banked
 14251  00184A  6F92               	movwf	(??_ModbusFC03+3)& (0+255),b
 14252  00184C  6B91               	clrf	(??_ModbusFC03+2)& (0+255),b
 14253  00184E  0101               	movlb	1	; () banked
 14254  001850  5103               	movf	(_ModbusData+3)& (0+255),w,b
 14255  001852  C102  F093         	movff	_ModbusData+2,??_ModbusFC03+4
 14256  001856  0100               	movlb	0	; () banked
 14257  001858  6B94               	clrf	(??_ModbusFC03+5)& (0+255),b
 14258  00185A  C093  F094         	movff	??_ModbusFC03+4,??_ModbusFC03+5
 14259  00185E  6B93               	clrf	(??_ModbusFC03+4)& (0+255),b
 14260  001860  2793               	addwf	(??_ModbusFC03+4)& (0+255),f,b
 14261  001862  0E00               	movlw	0
 14262  001864  2394               	addwfc	(??_ModbusFC03+5)& (0+255),f,b
 14263  001866  5191               	movf	(??_ModbusFC03+2)& (0+255),w,b
 14264  001868  2793               	addwf	(??_ModbusFC03+4)& (0+255),f,b
 14265  00186A  5192               	movf	(??_ModbusFC03+3)& (0+255),w,b
 14266  00186C  2394               	addwfc	(??_ModbusFC03+5)& (0+255),f,b
 14267  00186E  0101               	movlb	1	; () banked
 14268  001870  5105               	movf	(_ModbusData+5)& (0+255),w,b
 14269  001872  0100               	movlb	0	; () banked
 14270  001874  2593               	addwf	(??_ModbusFC03+4)& (0+255),w,b
 14271  001876  6F81               	movwf	(?_printf+4)& (0+255),b
 14272  001878  0101               	movlb	1	; () banked
 14273  00187A  0E00               	movlw	0
 14274  00187C  0100               	movlb	0	; () banked
 14275  00187E  2194               	addwfc	(??_ModbusFC03+5)& (0+255),w,b
 14276  001880  6F82               	movwf	(?_printf+5)& (0+255),b
 14277  001882  ECEB  F027         	call	_printf	;wreg free
 14278  001886                     
 14279                           ;Modbus.c: 214:                 error = 1;
 14280  001886  0E01               	movlw	1
 14281  001888  0100               	movlb	0	; () banked
 14282  00188A  6F95               	movwf	ModbusFC03@error& (0+255),b
 14283  00188C  EF5B  F00C         	goto	l7940
 14284  001890                     l7938:
 14285                           
 14286                           ; BSR set to: 0
 14287  001890  0101               	movlb	1	; () banked
 14288  001892  5102               	movf	(_ModbusData+2)& (0+255),w,b
 14289  001894  0100               	movlb	0	; () banked
 14290  001896  6F8F               	movwf	??_ModbusFC03& (0+255),b
 14291  001898  6B90               	clrf	(??_ModbusFC03+1)& (0+255),b
 14292                           
 14293                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14294                           ; Switch size 1, requested type "simple"
 14295                           ; Number of cases is 1, Range of values is 0 to 0
 14296                           ; switch strategies available:
 14297                           ; Name         Instructions Cycles
 14298                           ; simple_byte            4     3 (average)
 14299                           ;	Chosen strategy is simple_byte
 14300  00189A  5190               	movf	(??_ModbusFC03+1)& (0+255),w,b
 14301  00189C  0A00               	xorlw	0	; case 0
 14302  00189E  B4D8               	btfsc	status,2,c
 14303  0018A0  EF54  F00C         	goto	l8560
 14304  0018A4  EF5B  F00C         	goto	l7940
 14305  0018A8                     l8560:
 14306                           
 14307                           ; BSR set to: 0
 14308                           ; Switch size 1, requested type "simple"
 14309                           ; Number of cases is 1, Range of values is 0 to 0
 14310                           ; switch strategies available:
 14311                           ; Name         Instructions Cycles
 14312                           ; simple_byte            4     3 (average)
 14313                           ;	Chosen strategy is simple_byte
 14314  0018A8  518F               	movf	??_ModbusFC03& (0+255),w,b
 14315  0018AA  0A00               	xorlw	0	; case 0
 14316  0018AC  B4D8               	btfsc	status,2,c
 14317  0018AE  EFB7  F00B         	goto	l7926
 14318  0018B2  EF5B  F00C         	goto	l7940
 14319  0018B6                     l7940:
 14320                           
 14321                           ; BSR set to: 0
 14322                           ;Modbus.c: 221:     if(error == 0){
 14323  0018B6  5195               	movf	ModbusFC03@error& (0+255),w,b
 14324  0018B8  A4D8               	btfss	status,2,c
 14325  0018BA  EF61  F00C         	goto	u7991
 14326  0018BE  EF63  F00C         	goto	u7990
 14327  0018C2                     u7991:
 14328  0018C2  EF07  F00D         	goto	l7964
 14329  0018C6                     u7990:
 14330  0018C6                     
 14331                           ; BSR set to: 0
 14332                           ;Modbus.c: 222:         for(i=0; i< (ModbusData[5]) ; i++ ){
 14333  0018C6  0E00               	movlw	0
 14334  0018C8  6F97               	movwf	(ModbusFC03@i+1)& (0+255),b
 14335  0018CA  0E00               	movlw	0
 14336  0018CC  6F96               	movwf	ModbusFC03@i& (0+255),b
 14337  0018CE  EFB8  F00C         	goto	l7952
 14338  0018D2                     l7944:
 14339                           
 14340                           ; BSR set to: 0
 14341                           ;Modbus.c: 224:              if(ModbusData[2] == 0x00){
 14342  0018D2  0101               	movlb	1	; () banked
 14343  0018D4  5102               	movf	(_ModbusData+2)& (0+255),w,b
 14344  0018D6  A4D8               	btfss	status,2,c
 14345  0018D8  EF70  F00C         	goto	u8001
 14346  0018DC  EF72  F00C         	goto	u8000
 14347  0018E0                     u8001:
 14348  0018E0  EFA1  F00C         	goto	l757
 14349  0018E4                     u8000:
 14350  0018E4                     
 14351                           ; BSR set to: 1
 14352                           ;Modbus.c: 226:                 ByteLo = MB400xx[ModbusData[3] +i] & 0x00FF;
 14353  0018E4  5103               	movf	(_ModbusData+3)& (0+255),w,b
 14354  0018E6  0100               	movlb	0	; () banked
 14355  0018E8  2596               	addwf	ModbusFC03@i& (0+255),w,b
 14356  0018EA  6F8F               	movwf	??_ModbusFC03& (0+255),b
 14357  0018EC  0E00               	movlw	0
 14358  0018EE  2197               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
 14359  0018F0  6F90               	movwf	(??_ModbusFC03+1)& (0+255),b
 14360  0018F2  90D8               	bcf	status,0,c
 14361  0018F4  378F               	rlcf	??_ModbusFC03& (0+255),f,b
 14362  0018F6  3790               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
 14363  0018F8  0EB7               	movlw	low _MB400xx
 14364  0018FA  258F               	addwf	??_ModbusFC03& (0+255),w,b
 14365  0018FC  6ED9               	movwf	fsr2l,c
 14366  0018FE  0E03               	movlw	high _MB400xx
 14367  001900  2190               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
 14368  001902  6EDA               	movwf	fsr2h,c
 14369  001904  CFDE F091          	movff	postinc2,??_ModbusFC03+2
 14370  001908  CFDD F092          	movff	postdec2,??_ModbusFC03+3
 14371  00190C  5191               	movf	(??_ModbusFC03+2)& (0+255),w,b
 14372  00190E  6FF6               	movwf	_ByteLo& (0+255),b
 14373  001910  6BF7               	clrf	(_ByteLo+1)& (0+255),b
 14374                           
 14375                           ;Modbus.c: 227:                 ByteHi = MB400xx[ModbusData[3] +i] >> 8;
 14376  001912  0101               	movlb	1	; () banked
 14377  001914  5103               	movf	(_ModbusData+3)& (0+255),w,b
 14378  001916  0100               	movlb	0	; () banked
 14379  001918  2596               	addwf	ModbusFC03@i& (0+255),w,b
 14380  00191A  6F8F               	movwf	??_ModbusFC03& (0+255),b
 14381  00191C  0E00               	movlw	0
 14382  00191E  2197               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
 14383  001920  6F90               	movwf	(??_ModbusFC03+1)& (0+255),b
 14384  001922  90D8               	bcf	status,0,c
 14385  001924  378F               	rlcf	??_ModbusFC03& (0+255),f,b
 14386  001926  3790               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
 14387  001928  0EB7               	movlw	low _MB400xx
 14388  00192A  258F               	addwf	??_ModbusFC03& (0+255),w,b
 14389  00192C  6ED9               	movwf	fsr2l,c
 14390  00192E  0E03               	movlw	high _MB400xx
 14391  001930  2190               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
 14392  001932  6EDA               	movwf	fsr2h,c
 14393  001934  CFDE F091          	movff	postinc2,??_ModbusFC03+2
 14394  001938  CFDD F092          	movff	postdec2,??_ModbusFC03+3
 14395  00193C  5192               	movf	(??_ModbusFC03+3)& (0+255),w,b
 14396  00193E  6FD5               	movwf	_ByteHi& (0+255),b
 14397  001940  6BD6               	clrf	(_ByteHi+1)& (0+255),b
 14398  001942                     l757:
 14399                           
 14400                           ;Modbus.c: 231:             MBRespon[MBResCnt] = ByteHi;
 14401  001942  0E57               	movlw	low _MBRespon
 14402  001944  0100               	movlb	0	; () banked
 14403  001946  25D7               	addwf	_MBResCnt& (0+255),w,b
 14404  001948  6ED9               	movwf	fsr2l,c
 14405  00194A  0E02               	movlw	high _MBRespon
 14406  00194C  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 14407  00194E  6EDA               	movwf	fsr2h,c
 14408  001950  C0D5  FFDF         	movff	_ByteHi,indf2
 14409  001954                     
 14410                           ; BSR set to: 0
 14411                           ;Modbus.c: 232:             MBResCnt++;
 14412  001954  4BD7               	infsnz	_MBResCnt& (0+255),f,b
 14413  001956  2BD8               	incf	(_MBResCnt+1)& (0+255),f,b
 14414  001958                     
 14415                           ; BSR set to: 0
 14416                           ;Modbus.c: 233:             MBRespon[MBResCnt] = ByteLo;
 14417  001958  0E57               	movlw	low _MBRespon
 14418  00195A  25D7               	addwf	_MBResCnt& (0+255),w,b
 14419  00195C  6ED9               	movwf	fsr2l,c
 14420  00195E  0E02               	movlw	high _MBRespon
 14421  001960  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 14422  001962  6EDA               	movwf	fsr2h,c
 14423  001964  C0F6  FFDF         	movff	_ByteLo,indf2
 14424                           
 14425                           ;Modbus.c: 234:             MBResCnt++;
 14426  001968  4BD7               	infsnz	_MBResCnt& (0+255),f,b
 14427  00196A  2BD8               	incf	(_MBResCnt+1)& (0+255),f,b
 14428                           
 14429                           ;Modbus.c: 236:         }
 14430  00196C  4B96               	infsnz	ModbusFC03@i& (0+255),f,b
 14431  00196E  2B97               	incf	(ModbusFC03@i+1)& (0+255),f,b
 14432  001970                     l7952:
 14433                           
 14434                           ; BSR set to: 0
 14435  001970  0101               	movlb	1	; () banked
 14436  001972  5105               	movf	(_ModbusData+5)& (0+255),w,b
 14437  001974  0100               	movlb	0	; () banked
 14438  001976  6F8F               	movwf	??_ModbusFC03& (0+255),b
 14439  001978  6B90               	clrf	(??_ModbusFC03+1)& (0+255),b
 14440  00197A  518F               	movf	??_ModbusFC03& (0+255),w,b
 14441  00197C  5D96               	subwf	ModbusFC03@i& (0+255),w,b
 14442  00197E  5197               	movf	(ModbusFC03@i+1)& (0+255),w,b
 14443  001980  0A80               	xorlw	128
 14444  001982  6F91               	movwf	(??_ModbusFC03+2)& (0+255),b
 14445  001984  5190               	movf	(??_ModbusFC03+1)& (0+255),w,b
 14446  001986  0A80               	xorlw	128
 14447  001988  5991               	subwfb	(??_ModbusFC03+2)& (0+255),w,b
 14448  00198A  A0D8               	btfss	status,0,c
 14449  00198C  EFCA  F00C         	goto	u8011
 14450  001990  EFCC  F00C         	goto	u8010
 14451  001994                     u8011:
 14452  001994  EF69  F00C         	goto	l7944
 14453  001998                     u8010:
 14454  001998                     
 14455                           ; BSR set to: 0
 14456                           ;Modbus.c: 238:         ByteHi = generateCRC(MBResCnt, 1);
 14457  001998  C0D7  F005         	movff	_MBResCnt,generateCRC@MessCnt
 14458  00199C  C0D8  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
 14459  0019A0  0E01               	movlw	1
 14460  0019A2  6E07               	movwf	generateCRC@HiOrLo^0,c
 14461  0019A4  ECA0  F01E         	call	_generateCRC	;wreg free
 14462  0019A8  C005  F0D5         	movff	?_generateCRC,_ByteHi
 14463  0019AC  C006  F0D6         	movff	?_generateCRC+1,_ByteHi+1
 14464                           
 14465                           ;Modbus.c: 239:         ByteLo = generateCRC(MBResCnt, 0);
 14466  0019B0  C0D7  F005         	movff	_MBResCnt,generateCRC@MessCnt
 14467  0019B4  C0D8  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
 14468  0019B8  0E00               	movlw	0
 14469  0019BA  6E07               	movwf	generateCRC@HiOrLo^0,c
 14470  0019BC  ECA0  F01E         	call	_generateCRC	;wreg free
 14471  0019C0  C005  F0F6         	movff	?_generateCRC,_ByteLo
 14472  0019C4  C006  F0F7         	movff	?_generateCRC+1,_ByteLo+1
 14473  0019C8                     
 14474                           ;Modbus.c: 241:         MBRespon[MBResCnt] = ByteHi;
 14475  0019C8  0E57               	movlw	low _MBRespon
 14476  0019CA  0100               	movlb	0	; () banked
 14477  0019CC  25D7               	addwf	_MBResCnt& (0+255),w,b
 14478  0019CE  6ED9               	movwf	fsr2l,c
 14479  0019D0  0E02               	movlw	high _MBRespon
 14480  0019D2  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 14481  0019D4  6EDA               	movwf	fsr2h,c
 14482  0019D6  C0D5  FFDF         	movff	_ByteHi,indf2
 14483  0019DA                     
 14484                           ; BSR set to: 0
 14485                           ;Modbus.c: 242:         MBRespon[MBResCnt +1] = ByteLo;
 14486  0019DA  0E58               	movlw	low (_MBRespon+1)
 14487  0019DC  25D7               	addwf	_MBResCnt& (0+255),w,b
 14488  0019DE  6ED9               	movwf	fsr2l,c
 14489  0019E0  0E02               	movlw	high (_MBRespon+1)
 14490  0019E2  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 14491  0019E4  6EDA               	movwf	fsr2h,c
 14492  0019E6  C0F6  FFDF         	movff	_ByteLo,indf2
 14493  0019EA                     
 14494                           ; BSR set to: 0
 14495                           ;Modbus.c: 243:         MBResCnt = MBResCnt +2;
 14496  0019EA  0E02               	movlw	2
 14497  0019EC  25D7               	addwf	_MBResCnt& (0+255),w,b
 14498  0019EE  6FD7               	movwf	_MBResCnt& (0+255),b
 14499  0019F0  0E00               	movlw	0
 14500  0019F2  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 14501  0019F4  6FD8               	movwf	(_MBResCnt+1)& (0+255),b
 14502  0019F6                     
 14503                           ; BSR set to: 0
 14504                           ;Modbus.c: 246:         UART1_Write_string(MBRespon,MBResCnt);
 14505  0019F6  0E57               	movlw	low _MBRespon
 14506  0019F8  6E06               	movwf	UART1_Write_string@data^0,c
 14507  0019FA  0E02               	movlw	high _MBRespon
 14508  0019FC  6E07               	movwf	(UART1_Write_string@data+1)^0,c
 14509  0019FE  C0D7  F008         	movff	_MBResCnt,UART1_Write_string@data_len
 14510  001A02  C0D8  F009         	movff	_MBResCnt+1,UART1_Write_string@data_len+1
 14511  001A06  EC6D  F023         	call	_UART1_Write_string	;wreg free
 14512                           
 14513                           ;Modbus.c: 247:     }else{
 14514  001A0A  EF0D  F00D         	goto	l760
 14515  001A0E                     l7964:
 14516                           
 14517                           ; BSR set to: 0
 14518                           ;Modbus.c: 248:         ModbusError(0x02);
 14519  001A0E  0E00               	movlw	0
 14520  001A10  6E15               	movwf	(ModbusError@ErrorCode+1)^0,c
 14521  001A12  0E02               	movlw	2
 14522  001A14  6E14               	movwf	ModbusError@ErrorCode^0,c
 14523  001A16  ECA2  F020         	call	_ModbusError	;wreg free
 14524  001A1A                     l760:
 14525  001A1A  0012               	return		;funcret
 14526  001A1C                     __end_of_ModbusFC03:
 14527                           	opt callstack 0
 14528                           
 14529 ;; *************** function _printf *****************
 14530 ;; Defined at:
 14531 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
 14532 ;; Parameters:    Size  Location     Type
 14533 ;;  fmt             2   29[BANK0 ] PTR const unsigned char 
 14534 ;;		 -> STR_131(12), STR_129(13), STR_128(17), STR_127(15), 
 14535 ;;		 -> STR_126(33), STR_124(38), STR_123(58), STR_122(17), 
 14536 ;;		 -> STR_121(16), STR_120(4), STR_119(19), STR_118(16), 
 14537 ;;		 -> STR_117(102), STR_116(32), STR_115(33), STR_114(37), 
 14538 ;;		 -> STR_113(44), STR_112(22), STR_111(75), STR_110(67), 
 14539 ;;		 -> STR_109(75), STR_108(68), STR_107(69), STR_106(54), 
 14540 ;;		 -> STR_105(52), STR_104(53), STR_103(38), STR_102(51), 
 14541 ;;		 -> STR_101(73), STR_100(42), STR_99(36), STR_98(34), 
 14542 ;;		 -> STR_95(42), STR_94(22), STR_93(21), STR_92(20), 
 14543 ;;		 -> STR_91(19), STR_90(40), STR_80(32), STR_79(37), 
 14544 ;;		 -> STR_78(16), STR_77(24), STR_76(4), STR_75(24), 
 14545 ;;		 -> STR_74(30), STR_73(30), STR_72(37), STR_71(37), 
 14546 ;;		 -> STR_70(38), STR_69(38), STR_68(54), STR_67(36), 
 14547 ;;		 -> STR_66(32), STR_65(32), STR_64(35), STR_63(54), 
 14548 ;;		 -> STR_62(38), STR_61(54), STR_60(36), STR_59(19), 
 14549 ;;		 -> STR_58(54), STR_57(15), STR_56(30), STR_55(52), 
 14550 ;;		 -> STR_54(28), STR_53(30), STR_52(52), STR_51(25), 
 14551 ;;		 -> STR_50(30), STR_49(52), STR_48(25), STR_47(30), 
 14552 ;;		 -> STR_46(52), STR_45(23), STR_44(30), STR_43(42), 
 14553 ;;		 -> STR_42(21), STR_41(30), STR_40(52), STR_39(21), 
 14554 ;;		 -> STR_38(30), STR_37(52), STR_36(25), STR_35(30), 
 14555 ;;		 -> STR_34(52), STR_33(37), STR_32(36), STR_31(3), 
 14556 ;;		 -> STR_30(32), STR_29(32), STR_28(35), STR_27(66), 
 14557 ;;		 -> STR_26(38), STR_25(37), STR_24(37), STR_23(38), 
 14558 ;;		 -> STR_22(38), STR_21(55), STR_20(36), STR_19(30), 
 14559 ;;		 -> STR_18(30), STR_17(37), STR_16(37), STR_15(38), 
 14560 ;;		 -> STR_14(38), STR_13(54), STR_12(36), STR_11(21), 
 14561 ;;		 -> STR_10(28), STR_9(54), STR_8(27), STR_6(19), 
 14562 ;;		 -> STR_5(28), STR_4(30), STR_3(31), STR_2(21), 
 14563 ;;		 -> STR_1(21), 
 14564 ;; Auto vars:     Size  Location     Type
 14565 ;;  ap              2   45[BANK0 ] PTR void [1]
 14566 ;;		 -> ?_printf(2), 
 14567 ;;  ret             2    0        int 
 14568 ;; Return value:  Size  Location     Type
 14569 ;;                  2   29[BANK0 ] int 
 14570 ;; Registers used:
 14571 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14572 ;; Tracked objects:
 14573 ;;		On entry : 0/0
 14574 ;;		On exit  : 0/0
 14575 ;;		Unchanged: 0/0
 14576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14577 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14578 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14580 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14581 ;;Total ram usage:       18 bytes
 14582 ;; Hardware stack levels used:    1
 14583 ;; Hardware stack levels required when called:   12
 14584 ;; This function calls:
 14585 ;;		_vfprintf
 14586 ;; This function is called by:
 14587 ;;		_main
 14588 ;;		_PrintMB400
 14589 ;;		_AddRxBuffToModBus
 14590 ;;		_PrintModbus
 14591 ;;		_checkCRC
 14592 ;;		_ModbusFC03
 14593 ;;		_ModbusFC04
 14594 ;;		_ModbusFC10
 14595 ;;		_PrintModRespon
 14596 ;;		_ModbusRx
 14597 ;;		_InitialiseString
 14598 ;;		_ReadRX232
 14599 ;;		_TogDebug
 14600 ;;		_ClearEEAddRange
 14601 ;;		_SaveCardDat
 14602 ;; This function uses a non-reentrant model
 14603 ;;
 14604                           
 14605                           	psect	text51
 14606  004FD6                     __ptext51:
 14607                           	opt callstack 0
 14608  004FD6                     _printf:
 14609                           	opt callstack 18
 14610  004FD6  0E7F               	movlw	low (?_printf+2)
 14611  004FD8  0100               	movlb	0	; () banked
 14612  004FDA  6F8D               	movwf	printf@ap& (0+255),b
 14613  004FDC  0E00               	movlw	high (?_printf+2)
 14614  004FDE  6F8E               	movwf	(printf@ap+1)& (0+255),b
 14615  004FE0                     
 14616                           ; BSR set to: 0
 14617  004FE0  0E00               	movlw	0
 14618  004FE2  6F77               	movwf	vfprintf@fp& (0+255),b
 14619  004FE4  0E00               	movlw	0
 14620  004FE6  6F78               	movwf	(vfprintf@fp+1)& (0+255),b
 14621  004FE8  C07D  F079         	movff	printf@fmt,vfprintf@fmt
 14622  004FEC  C07E  F07A         	movff	printf@fmt+1,vfprintf@fmt+1
 14623  004FF0  0E8D               	movlw	low printf@ap
 14624  004FF2  6F7B               	movwf	vfprintf@ap& (0+255),b
 14625  004FF4  0E00               	movlw	high printf@ap
 14626  004FF6  6F7C               	movwf	(vfprintf@ap+1)& (0+255),b
 14627  004FF8  ECD7  F023         	call	_vfprintf	;wreg free
 14628  004FFC  0012               	return		;funcret
 14629  004FFE                     __end_of_printf:
 14630                           	opt callstack 0
 14631                           
 14632 ;; *************** function _vfprintf *****************
 14633 ;; Defined at:
 14634 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 14635 ;; Parameters:    Size  Location     Type
 14636 ;;  fp              2   23[BANK0 ] PTR struct _IO_FILE
 14637 ;;		 -> NULL(0), 
 14638 ;;  fmt             2   25[BANK0 ] PTR const unsigned char 
 14639 ;;		 -> STR_131(12), STR_129(13), STR_128(17), STR_127(15), 
 14640 ;;		 -> STR_126(33), STR_124(38), STR_123(58), STR_122(17), 
 14641 ;;		 -> STR_121(16), STR_120(4), STR_119(19), STR_118(16), 
 14642 ;;		 -> STR_117(102), STR_116(32), STR_115(33), STR_114(37), 
 14643 ;;		 -> STR_113(44), STR_112(22), STR_111(75), STR_110(67), 
 14644 ;;		 -> STR_109(75), STR_108(68), STR_107(69), STR_106(54), 
 14645 ;;		 -> STR_105(52), STR_104(53), STR_103(38), STR_102(51), 
 14646 ;;		 -> STR_101(73), STR_100(42), STR_99(36), STR_98(34), 
 14647 ;;		 -> STR_95(42), STR_94(22), STR_93(21), STR_92(20), 
 14648 ;;		 -> STR_91(19), STR_90(40), STR_80(32), STR_79(37), 
 14649 ;;		 -> STR_78(16), STR_77(24), STR_76(4), STR_75(24), 
 14650 ;;		 -> STR_74(30), STR_73(30), STR_72(37), STR_71(37), 
 14651 ;;		 -> STR_70(38), STR_69(38), STR_68(54), STR_67(36), 
 14652 ;;		 -> STR_66(32), STR_65(32), STR_64(35), STR_63(54), 
 14653 ;;		 -> STR_62(38), STR_61(54), STR_60(36), STR_59(19), 
 14654 ;;		 -> STR_58(54), STR_57(15), STR_56(30), STR_55(52), 
 14655 ;;		 -> STR_54(28), STR_53(30), STR_52(52), STR_51(25), 
 14656 ;;		 -> STR_50(30), STR_49(52), STR_48(25), STR_47(30), 
 14657 ;;		 -> STR_46(52), STR_45(23), STR_44(30), STR_43(42), 
 14658 ;;		 -> STR_42(21), STR_41(30), STR_40(52), STR_39(21), 
 14659 ;;		 -> STR_38(30), STR_37(52), STR_36(25), STR_35(30), 
 14660 ;;		 -> STR_34(52), STR_33(37), STR_32(36), STR_31(3), 
 14661 ;;		 -> STR_30(32), STR_29(32), STR_28(35), STR_27(66), 
 14662 ;;		 -> STR_26(38), STR_25(37), STR_24(37), STR_23(38), 
 14663 ;;		 -> STR_22(38), STR_21(55), STR_20(36), STR_19(30), 
 14664 ;;		 -> STR_18(30), STR_17(37), STR_16(37), STR_15(38), 
 14665 ;;		 -> STR_14(38), STR_13(54), STR_12(36), STR_11(21), 
 14666 ;;		 -> STR_10(28), STR_9(54), STR_8(27), STR_6(19), 
 14667 ;;		 -> STR_5(28), STR_4(30), STR_3(31), STR_2(21), 
 14668 ;;		 -> STR_1(21), 
 14669 ;;  ap              2   27[BANK0 ] PTR PTR void 
 14670 ;;		 -> printf@ap(2), 
 14671 ;; Auto vars:     Size  Location     Type
 14672 ;;  cfmt            2   82[COMRAM] PTR unsigned char 
 14673 ;;		 -> STR_131(12), STR_129(13), STR_128(17), STR_127(15), 
 14674 ;;		 -> STR_126(33), STR_124(38), STR_123(58), STR_122(17), 
 14675 ;;		 -> STR_121(16), STR_120(4), STR_119(19), STR_118(16), 
 14676 ;;		 -> STR_117(102), STR_116(32), STR_115(33), STR_114(37), 
 14677 ;;		 -> STR_113(44), STR_112(22), STR_111(75), STR_110(67), 
 14678 ;;		 -> STR_109(75), STR_108(68), STR_107(69), STR_106(54), 
 14679 ;;		 -> STR_105(52), STR_104(53), STR_103(38), STR_102(51), 
 14680 ;;		 -> STR_101(73), STR_100(42), STR_99(36), STR_98(34), 
 14681 ;;		 -> STR_95(42), STR_94(22), STR_93(21), STR_92(20), 
 14682 ;;		 -> STR_91(19), STR_90(40), STR_80(32), STR_79(37), 
 14683 ;;		 -> STR_78(16), STR_77(24), STR_76(4), STR_75(24), 
 14684 ;;		 -> STR_74(30), STR_73(30), STR_72(37), STR_71(37), 
 14685 ;;		 -> STR_70(38), STR_69(38), STR_68(54), STR_67(36), 
 14686 ;;		 -> STR_66(32), STR_65(32), STR_64(35), STR_63(54), 
 14687 ;;		 -> STR_62(38), STR_61(54), STR_60(36), STR_59(19), 
 14688 ;;		 -> STR_58(54), STR_57(15), STR_56(30), STR_55(52), 
 14689 ;;		 -> STR_54(28), STR_53(30), STR_52(52), STR_51(25), 
 14690 ;;		 -> STR_50(30), STR_49(52), STR_48(25), STR_47(30), 
 14691 ;;		 -> STR_46(52), STR_45(23), STR_44(30), STR_43(42), 
 14692 ;;		 -> STR_42(21), STR_41(30), STR_40(52), STR_39(21), 
 14693 ;;		 -> STR_38(30), STR_37(52), STR_36(25), STR_35(30), 
 14694 ;;		 -> STR_34(52), STR_33(37), STR_32(36), STR_31(3), 
 14695 ;;		 -> STR_30(32), STR_29(32), STR_28(35), STR_27(66), 
 14696 ;;		 -> STR_26(38), STR_25(37), STR_24(37), STR_23(38), 
 14697 ;;		 -> STR_22(38), STR_21(55), STR_20(36), STR_19(30), 
 14698 ;;		 -> STR_18(30), STR_17(37), STR_16(37), STR_15(38), 
 14699 ;;		 -> STR_14(38), STR_13(54), STR_12(36), STR_11(21), 
 14700 ;;		 -> STR_10(28), STR_9(54), STR_8(27), STR_6(19), 
 14701 ;;		 -> STR_5(28), STR_4(30), STR_3(31), STR_2(21), 
 14702 ;;		 -> STR_1(21), 
 14703 ;; Return value:  Size  Location     Type
 14704 ;;                  2   23[BANK0 ] int 
 14705 ;; Registers used:
 14706 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14707 ;; Tracked objects:
 14708 ;;		On entry : 0/0
 14709 ;;		On exit  : 0/0
 14710 ;;		Unchanged: 0/0
 14711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14712 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14713 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14715 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14716 ;;Total ram usage:        8 bytes
 14717 ;; Hardware stack levels used:    1
 14718 ;; Hardware stack levels required when called:   11
 14719 ;; This function calls:
 14720 ;;		_vfpfcnvrt
 14721 ;; This function is called by:
 14722 ;;		_printf
 14723 ;; This function uses a non-reentrant model
 14724 ;;
 14725                           
 14726                           	psect	text52
 14727  0047AE                     __ptext52:
 14728                           	opt callstack 0
 14729  0047AE                     _vfprintf:
 14730                           	opt callstack 18
 14731  0047AE                     
 14732                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
 14733  0047AE  C079  F053         	movff	vfprintf@fmt,vfprintf@cfmt
 14734  0047B2  C07A  F054         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 14735  0047B6                     
 14736                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
 14737  0047B6  0E00               	movlw	0
 14738  0047B8  0100               	movlb	0	; () banked
 14739  0047BA  6FCE               	movwf	(_nout+1)& (0+255),b
 14740  0047BC  0E00               	movlw	0
 14741  0047BE  6FCD               	movwf	_nout& (0+255),b
 14742                           
 14743                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 14744  0047C0  EFF5  F023         	goto	l7180
 14745  0047C4                     l7178:
 14746                           
 14747                           ; BSR set to: 0
 14748                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
 14749  0047C4  C077  F049         	movff	vfprintf@fp,vfpfcnvrt@fp
 14750  0047C8  C078  F04A         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 14751  0047CC  0E53               	movlw	low vfprintf@cfmt
 14752  0047CE  6E4B               	movwf	vfpfcnvrt@fmt^0,c
 14753  0047D0  0E00               	movlw	high vfprintf@cfmt
 14754  0047D2  6E4C               	movwf	(vfpfcnvrt@fmt+1)^0,c
 14755  0047D4  C07B  F04D         	movff	vfprintf@ap,vfpfcnvrt@ap
 14756  0047D8  C07C  F04E         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
 14757  0047DC  ECE6  F006         	call	_vfpfcnvrt	;wreg free
 14758  0047E0  5049               	movf	?_vfpfcnvrt^0,w,c
 14759  0047E2  0100               	movlb	0	; () banked
 14760  0047E4  27CD               	addwf	_nout& (0+255),f,b
 14761  0047E6  504A               	movf	(?_vfpfcnvrt+1)^0,w,c
 14762  0047E8  23CE               	addwfc	(_nout+1)& (0+255),f,b
 14763  0047EA                     l7180:
 14764                           
 14765                           ; BSR set to: 0
 14766                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 14767  0047EA  C053  FFF6         	movff	vfprintf@cfmt,tblptrl
 14768  0047EE  C054  FFF7         	movff	vfprintf@cfmt+1,tblptrh
 14769  0047F2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14770  0047F2  6AF8               	clrf	tblptru,c
 14771  0047F4                     	endif
 14772  0047F4                     	if	0	;tblptru may be non-zero
 14773  0047F4                     	endif
 14774  0047F4  0008               	tblrd		*
 14775  0047F6  50F5               	movf	tablat,w,c
 14776  0047F8  0900               	iorlw	0
 14777  0047FA  A4D8               	btfss	status,2,c
 14778  0047FC  EF02  F024         	goto	u7101
 14779  004800  EF04  F024         	goto	u7100
 14780  004804                     u7101:
 14781  004804  EFE2  F023         	goto	l7178
 14782  004808                     u7100:
 14783  004808                     
 14784                           ; BSR set to: 0
 14785                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
 14786  004808  C0CD  F077         	movff	_nout,?_vfprintf
 14787  00480C  C0CE  F078         	movff	_nout+1,?_vfprintf+1
 14788  004810                     
 14789                           ; BSR set to: 0
 14790  004810  0012               	return		;funcret
 14791  004812                     __end_of_vfprintf:
 14792                           	opt callstack 0
 14793                           
 14794 ;; *************** function _vfpfcnvrt *****************
 14795 ;; Defined at:
 14796 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 14797 ;; Parameters:    Size  Location     Type
 14798 ;;  fp              2   72[COMRAM] PTR struct _IO_FILE
 14799 ;;		 -> NULL(0), 
 14800 ;;  fmt             2   74[COMRAM] PTR PTR unsigned char 
 14801 ;;		 -> vfprintf@cfmt(2), 
 14802 ;;  ap              2   76[COMRAM] PTR PTR void 
 14803 ;;		 -> printf@ap(2), 
 14804 ;; Auto vars:     Size  Location     Type
 14805 ;;  llu             8   15[BANK0 ] unsigned long long 
 14806 ;;  ll              8    0[BANK0 ] long long 
 14807 ;;  f               4    0        long long 
 14808 ;;  vp              3    0        PTR void 
 14809 ;;  ct              3    0        unsigned char [3]
 14810 ;;  done            2   11[BANK0 ] int 
 14811 ;;  cp              2    8[BANK0 ] PTR unsigned char 
 14812 ;;		 -> ?_printf(2), ValidateCmd@ConfName_1579(20), ValidateCmd@ConfName_1575(20), ValidateCmd@ConfName(20), 
 14813 ;;		 -> STR_97(9), STR_96(12), InitialiseString@RevNum(2), InitialiseString@PartNum(19), 
 14814 ;;		 -> InitialiseString@SerialNum(11), Command(16), 
 14815 ;;  i               2    0        int 
 14816 ;;  c               1   10[BANK0 ] unsigned char 
 14817 ;; Return value:  Size  Location     Type
 14818 ;;                  2   72[COMRAM] int 
 14819 ;; Registers used:
 14820 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14821 ;; Tracked objects:
 14822 ;;		On entry : 0/0
 14823 ;;		On exit  : 0/0
 14824 ;;		Unchanged: 0/0
 14825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14826 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14827 ;;      Locals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14828 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14829 ;;      Totals:        10      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14830 ;;Total ram usage:       33 bytes
 14831 ;; Hardware stack levels used:    1
 14832 ;; Hardware stack levels required when called:   10
 14833 ;; This function calls:
 14834 ;;		_atoi
 14835 ;;		_dtoa
 14836 ;;		_fputc
 14837 ;;		_isdigit
 14838 ;;		_stoa
 14839 ;;		_utoa
 14840 ;;		_xtoa
 14841 ;; This function is called by:
 14842 ;;		_vfprintf
 14843 ;; This function uses a non-reentrant model
 14844 ;;
 14845                           
 14846                           	psect	text53
 14847  000DCC                     __ptext53:
 14848                           	opt callstack 0
 14849  000DCC                     _vfpfcnvrt:
 14850                           	opt callstack 18
 14851  000DCC                     
 14852                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
 14853  000DCC  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14854  000DD0  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14855  000DD4  CFDE FFF6          	movff	postinc2,tblptrl
 14856  000DD8  CFDD FFF7          	movff	postdec2,tblptrh
 14857  000DDC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14858  000DDC  6AF8               	clrf	tblptru,c
 14859  000DDE                     	endif
 14860  000DDE                     	if	0	;tblptru may be non-zero
 14861  000DDE                     	endif
 14862  000DDE  0008               	tblrd		*
 14863  000DE0  50F5               	movf	tablat,w,c
 14864  000DE2  0A25               	xorlw	37
 14865  000DE4  A4D8               	btfss	status,2,c
 14866  000DE6  EFF7  F006         	goto	u6931
 14867  000DEA  EFF9  F006         	goto	u6930
 14868  000DEE                     u6931:
 14869  000DEE  EF8E  F009         	goto	l7152
 14870  000DF2                     u6930:
 14871  000DF2                     
 14872                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
 14873  000DF2  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14874  000DF6  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14875  000DFA  2ADE               	incf	postinc2,f,c
 14876  000DFC  0E00               	movlw	0
 14877  000DFE  22DD               	addwfc	postdec2,f,c
 14878  000E00                     
 14879                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
 14880  000E00  0E00               	movlw	0
 14881  000E02  0100               	movlb	0	; () banked
 14882  000E04  6FD0               	movwf	(_width+1)& (0+255),b
 14883  000E06  0E00               	movlw	0
 14884  000E08  6FCF               	movwf	_width& (0+255),b
 14885  000E0A  C0CF  F057         	movff	_width,_flags
 14886  000E0E  C0D0  F058         	movff	_width+1,_flags+1
 14887  000E12                     
 14888                           ; BSR set to: 0
 14889                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
 14890  000E12  69D1               	setf	_prec& (0+255),b
 14891  000E14  69D2               	setf	(_prec+1)& (0+255),b
 14892  000E16                     
 14893                           ; BSR set to: 0
 14894                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
 14895  000E16  0E00               	movlw	0
 14896  000E18  6F6C               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 14897  000E1A  0E00               	movlw	0
 14898  000E1C  6F6B               	movwf	vfpfcnvrt@done& (0+255),b
 14899                           
 14900                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
 14901  000E1E  EF58  F007         	goto	l7074
 14902  000E22                     l7048:
 14903                           
 14904                           ; BSR set to: 0
 14905                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
 14906  000E22  8057               	bsf	_flags^0,0,c
 14907  000E24                     l7050:
 14908                           
 14909                           ; BSR set to: 0
 14910                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
 14911  000E24  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14912  000E28  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14913  000E2C  2ADE               	incf	postinc2,f,c
 14914  000E2E  0E00               	movlw	0
 14915  000E30  22DD               	addwfc	postdec2,f,c
 14916                           
 14917                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
 14918  000E32  EF58  F007         	goto	l7074
 14919  000E36                     l7052:
 14920                           
 14921                           ; BSR set to: 0
 14922                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
 14923  000E36  8257               	bsf	_flags^0,1,c
 14924  000E38  EF12  F007         	goto	l7050
 14925  000E3C                     l7056:
 14926                           
 14927                           ; BSR set to: 0
 14928                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
 14929  000E3C  8457               	bsf	_flags^0,2,c
 14930  000E3E  EF12  F007         	goto	l7050
 14931  000E42                     l7060:
 14932                           
 14933                           ; BSR set to: 0
 14934                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
 14935  000E42  8657               	bsf	_flags^0,3,c
 14936  000E44  EF12  F007         	goto	l7050
 14937  000E48                     l7064:
 14938                           
 14939                           ; BSR set to: 0
 14940                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
 14941  000E48  8857               	bsf	_flags^0,4,c
 14942  000E4A  EF12  F007         	goto	l7050
 14943  000E4E                     l7068:
 14944                           
 14945                           ; BSR set to: 0
 14946                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
 14947  000E4E  0E00               	movlw	0
 14948  000E50  6F6C               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 14949  000E52  0E01               	movlw	1
 14950  000E54  6F6B               	movwf	vfpfcnvrt@done& (0+255),b
 14951                           
 14952                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
 14953  000E56  EF58  F007         	goto	l7074
 14954  000E5A                     l7072:
 14955                           
 14956                           ; BSR set to: 0
 14957  000E5A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14958  000E5E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14959  000E62  CFDE FFF6          	movff	postinc2,tblptrl
 14960  000E66  CFDD FFF7          	movff	postdec2,tblptrh
 14961  000E6A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14962  000E6A  6AF8               	clrf	tblptru,c
 14963  000E6C                     	endif
 14964  000E6C                     	if	0	;tblptru may be non-zero
 14965  000E6C                     	endif
 14966  000E6C  0008               	tblrd		*
 14967  000E6E  50F5               	movf	tablat,w,c
 14968  000E70  6E4F               	movwf	??_vfpfcnvrt^0,c
 14969  000E72  6A50               	clrf	(??_vfpfcnvrt+1)^0,c
 14970                           
 14971                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14972                           ; Switch size 1, requested type "simple"
 14973                           ; Number of cases is 1, Range of values is 0 to 0
 14974                           ; switch strategies available:
 14975                           ; Name         Instructions Cycles
 14976                           ; simple_byte            4     3 (average)
 14977                           ;	Chosen strategy is simple_byte
 14978  000E74  5050               	movf	(??_vfpfcnvrt+1)^0,w,c
 14979  000E76  0A00               	xorlw	0	; case 0
 14980  000E78  B4D8               	btfsc	status,2,c
 14981  000E7A  EF41  F007         	goto	l8562
 14982  000E7E  EF27  F007         	goto	l7068
 14983  000E82                     l8562:
 14984                           
 14985                           ; BSR set to: 0
 14986                           ; Switch size 1, requested type "simple"
 14987                           ; Number of cases is 5, Range of values is 32 to 48
 14988                           ; switch strategies available:
 14989                           ; Name         Instructions Cycles
 14990                           ; simple_byte           16     9 (average)
 14991                           ;	Chosen strategy is simple_byte
 14992  000E82  504F               	movf	??_vfpfcnvrt^0,w,c
 14993  000E84  0A20               	xorlw	32	; case 32
 14994  000E86  B4D8               	btfsc	status,2,c
 14995  000E88  EF21  F007         	goto	l7060
 14996  000E8C  0A03               	xorlw	3	; case 35
 14997  000E8E  B4D8               	btfsc	status,2,c
 14998  000E90  EF24  F007         	goto	l7064
 14999  000E94  0A08               	xorlw	8	; case 43
 15000  000E96  B4D8               	btfsc	status,2,c
 15001  000E98  EF1E  F007         	goto	l7056
 15002  000E9C  0A06               	xorlw	6	; case 45
 15003  000E9E  B4D8               	btfsc	status,2,c
 15004  000EA0  EF11  F007         	goto	l7048
 15005  000EA4  0A1D               	xorlw	29	; case 48
 15006  000EA6  B4D8               	btfsc	status,2,c
 15007  000EA8  EF1B  F007         	goto	l7052
 15008  000EAC  EF27  F007         	goto	l7068
 15009  000EB0                     l7074:
 15010                           
 15011                           ; BSR set to: 0
 15012                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
 15013  000EB0  516B               	movf	vfpfcnvrt@done& (0+255),w,b
 15014  000EB2  116C               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
 15015  000EB4  B4D8               	btfsc	status,2,c
 15016  000EB6  EF5F  F007         	goto	u6941
 15017  000EBA  EF61  F007         	goto	u6940
 15018  000EBE                     u6941:
 15019  000EBE  EF2D  F007         	goto	l7072
 15020  000EC2                     u6940:
 15021  000EC2                     
 15022                           ; BSR set to: 0
 15023                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
 15024  000EC2  A057               	btfss	_flags^0,0,c
 15025  000EC4  EF66  F007         	goto	u6951
 15026  000EC8  EF68  F007         	goto	u6950
 15027  000ECC                     u6951:
 15028  000ECC  EF69  F007         	goto	l7078
 15029  000ED0                     u6950:
 15030  000ED0                     
 15031                           ; BSR set to: 0
 15032                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
 15033  000ED0  9257               	bcf	_flags^0,1,c
 15034  000ED2                     l7078:
 15035                           
 15036                           ; BSR set to: 0
 15037                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
 15038  000ED2  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15039  000ED6  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15040  000EDA  CFDE FFF6          	movff	postinc2,tblptrl
 15041  000EDE  CFDD FFF7          	movff	postdec2,tblptrh
 15042  000EE2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15043  000EE2  6AF8               	clrf	tblptru,c
 15044  000EE4                     	endif
 15045  000EE4                     	if	0	;tblptru may be non-zero
 15046  000EE4                     	endif
 15047  000EE4  0008               	tblrd		*
 15048  000EE6  50F5               	movf	tablat,w,c
 15049  000EE8  0A2A               	xorlw	42
 15050  000EEA  A4D8               	btfss	status,2,c
 15051  000EEC  EF7A  F007         	goto	u6961
 15052  000EF0  EF7C  F007         	goto	u6960
 15053  000EF4                     u6961:
 15054  000EF4  EFA5  F007         	goto	l7086
 15055  000EF8                     u6960:
 15056  000EF8                     
 15057                           ; BSR set to: 0
 15058                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
 15059  000EF8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15060  000EFC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15061  000F00  2ADE               	incf	postinc2,f,c
 15062  000F02  0E00               	movlw	0
 15063  000F04  22DD               	addwfc	postdec2,f,c
 15064                           
 15065                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
 15066  000F06  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 15067  000F0A  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 15068  000F0E  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 15069  000F12  0E02               	movlw	2
 15070  000F14  26DE               	addwf	postinc2,f,c
 15071  000F16  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 15072  000F1A  0E00               	movlw	0
 15073  000F1C  22DD               	addwfc	postdec2,f,c
 15074  000F1E  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 15075  000F22  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 15076  000F26  CFDE F0CF          	movff	postinc2,_width
 15077  000F2A  CFDD F0D0          	movff	postdec2,_width+1
 15078  000F2E                     
 15079                           ; BSR set to: 0
 15080                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
 15081  000F2E  BFD0               	btfsc	(_width+1)& (0+255),7,b
 15082  000F30  EF9E  F007         	goto	u6970
 15083  000F34  EF9C  F007         	goto	u6971
 15084  000F38                     u6971:
 15085  000F38  EFEA  F007         	goto	l7096
 15086  000F3C                     u6970:
 15087  000F3C                     
 15088                           ; BSR set to: 0
 15089                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
 15090  000F3C  8057               	bsf	_flags^0,0,c
 15091                           
 15092                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
 15093  000F3E  6DCF               	negf	_width& (0+255),b
 15094  000F40  1FD0               	comf	(_width+1)& (0+255),f,b
 15095  000F42  B0D8               	btfsc	status,0,c
 15096  000F44  2BD0               	incf	(_width+1)& (0+255),f,b
 15097  000F46  EFEA  F007         	goto	l7096
 15098  000F4A                     l7086:
 15099                           
 15100                           ; BSR set to: 0
 15101                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
 15102  000F4A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15103  000F4E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15104  000F52  CFDE F00C          	movff	postinc2,atoi@s
 15105  000F56  CFDD F00D          	movff	postdec2,atoi@s+1
 15106  000F5A  EC56  F018         	call	_atoi	;wreg free
 15107  000F5E  C00C  F0CF         	movff	?_atoi,_width
 15108  000F62  C00D  F0D0         	movff	?_atoi+1,_width+1
 15109                           
 15110                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 15111  000F66  EFBC  F007         	goto	l7090
 15112  000F6A                     l7088:
 15113                           
 15114                           ; BSR set to: 0
 15115                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
 15116  000F6A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15117  000F6E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15118  000F72  2ADE               	incf	postinc2,f,c
 15119  000F74  0E00               	movlw	0
 15120  000F76  22DD               	addwfc	postdec2,f,c
 15121  000F78                     l7090:
 15122  000F78  0ED0               	movlw	208
 15123  000F7A  6E4F               	movwf	??_vfpfcnvrt^0,c
 15124  000F7C  0EFF               	movlw	255
 15125  000F7E  6E50               	movwf	(??_vfpfcnvrt+1)^0,c
 15126  000F80  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15127  000F84  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15128  000F88  CFDE FFF6          	movff	postinc2,tblptrl
 15129  000F8C  CFDD FFF7          	movff	postdec2,tblptrh
 15130  000F90                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15131  000F90  6AF8               	clrf	tblptru,c
 15132  000F92                     	endif
 15133  000F92                     	if	0	;tblptru may be non-zero
 15134  000F92                     	endif
 15135  000F92  0008               	tblrd		*
 15136  000F94  50F5               	movf	tablat,w,c
 15137  000F96  6E51               	movwf	(??_vfpfcnvrt+2)^0,c
 15138  000F98  6A52               	clrf	(??_vfpfcnvrt+3)^0,c
 15139  000F9A  504F               	movf	??_vfpfcnvrt^0,w,c
 15140  000F9C  2651               	addwf	(??_vfpfcnvrt+2)^0,f,c
 15141  000F9E  5050               	movf	(??_vfpfcnvrt+1)^0,w,c
 15142  000FA0  2252               	addwfc	(??_vfpfcnvrt+3)^0,f,c
 15143  000FA2  5052               	movf	(??_vfpfcnvrt+3)^0,w,c
 15144  000FA4  E10A               	bnz	u6980
 15145  000FA6  0E0A               	movlw	10
 15146  000FA8  5C51               	subwf	(??_vfpfcnvrt+2)^0,w,c
 15147  000FAA  A0D8               	btfss	status,0,c
 15148  000FAC  EFDA  F007         	goto	u6981
 15149  000FB0  EFDD  F007         	goto	u6980
 15150  000FB4                     u6981:
 15151  000FB4  0E01               	movlw	1
 15152  000FB6  EFDE  F007         	goto	u6990
 15153  000FBA                     u6980:
 15154  000FBA  0E00               	movlw	0
 15155  000FBC                     u6990:
 15156  000FBC  0100               	movlb	0	; () banked
 15157  000FBE  6F6D               	movwf	_vfpfcnvrt$1949& (0+255),b
 15158  000FC0  6B6E               	clrf	(_vfpfcnvrt$1949+1)& (0+255),b
 15159  000FC2                     
 15160                           ; BSR set to: 0
 15161  000FC2  516D               	movf	_vfpfcnvrt$1949& (0+255),w,b
 15162  000FC4  116E               	iorwf	(_vfpfcnvrt$1949+1)& (0+255),w,b
 15163  000FC6  A4D8               	btfss	status,2,c
 15164  000FC8  EFE8  F007         	goto	u7001
 15165  000FCC  EFEA  F007         	goto	u7000
 15166  000FD0                     u7001:
 15167  000FD0  EFB5  F007         	goto	l7088
 15168  000FD4                     u7000:
 15169  000FD4                     l7096:
 15170                           
 15171                           ; BSR set to: 0
 15172                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 15173  000FD4  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15174  000FD8  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15175  000FDC  CFDE FFF6          	movff	postinc2,tblptrl
 15176  000FE0  CFDD FFF7          	movff	postdec2,tblptrh
 15177  000FE4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15178  000FE4  6AF8               	clrf	tblptru,c
 15179  000FE6                     	endif
 15180  000FE6                     	if	0	;tblptru may be non-zero
 15181  000FE6                     	endif
 15182  000FE6  0008               	tblrd		*
 15183  000FE8  50F5               	movf	tablat,w,c
 15184  000FEA  0A64               	xorlw	100
 15185  000FEC  B4D8               	btfsc	status,2,c
 15186  000FEE  EFFB  F007         	goto	u7011
 15187  000FF2  EFFD  F007         	goto	u7010
 15188  000FF6                     u7011:
 15189  000FF6  EF10  F008         	goto	l7100
 15190  000FFA                     u7010:
 15191  000FFA                     
 15192                           ; BSR set to: 0
 15193  000FFA  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15194  000FFE  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15195  001002  CFDE FFF6          	movff	postinc2,tblptrl
 15196  001006  CFDD FFF7          	movff	postdec2,tblptrh
 15197  00100A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15198  00100A  6AF8               	clrf	tblptru,c
 15199  00100C                     	endif
 15200  00100C                     	if	0	;tblptru may be non-zero
 15201  00100C                     	endif
 15202  00100C  0008               	tblrd		*
 15203  00100E  50F5               	movf	tablat,w,c
 15204  001010  0A69               	xorlw	105
 15205  001012  A4D8               	btfss	status,2,c
 15206  001014  EF0E  F008         	goto	u7021
 15207  001018  EF10  F008         	goto	u7020
 15208  00101C                     u7021:
 15209  00101C  EF50  F008         	goto	l7106
 15210  001020                     u7020:
 15211  001020                     l7100:
 15212                           
 15213                           ; BSR set to: 0
 15214                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
 15215  001020  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15216  001024  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15217  001028  2ADE               	incf	postinc2,f,c
 15218  00102A  0E00               	movlw	0
 15219  00102C  22DD               	addwfc	postdec2,f,c
 15220                           
 15221                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 15222  00102E  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 15223  001032  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 15224  001036  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 15225  00103A  0E02               	movlw	2
 15226  00103C  26DE               	addwf	postinc2,f,c
 15227  00103E  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 15228  001042  0E00               	movlw	0
 15229  001044  22DD               	addwfc	postdec2,f,c
 15230  001046  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 15231  00104A  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 15232  00104E  CFDE F060          	movff	postinc2,vfpfcnvrt@ll
 15233  001052  CFDD F061          	movff	postdec2,vfpfcnvrt@ll+1
 15234  001056  0E00               	movlw	0
 15235  001058  BF61               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
 15236  00105A  0EFF               	movlw	-1
 15237  00105C  6F62               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
 15238  00105E  6F63               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
 15239  001060  6F64               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
 15240  001062  6F65               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
 15241  001064  6F66               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
 15242  001066  6F67               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
 15243  001068                     
 15244                           ; BSR set to: 0
 15245                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
 15246  001068  C049  F022         	movff	vfpfcnvrt@fp,dtoa@fp
 15247  00106C  C04A  F023         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 15248  001070  C060  F024         	movff	vfpfcnvrt@ll,dtoa@d
 15249  001074  C061  F025         	movff	vfpfcnvrt@ll+1,dtoa@d+1
 15250  001078  C062  F026         	movff	vfpfcnvrt@ll+2,dtoa@d+2
 15251  00107C  C063  F027         	movff	vfpfcnvrt@ll+3,dtoa@d+3
 15252  001080  C064  F028         	movff	vfpfcnvrt@ll+4,dtoa@d+4
 15253  001084  C065  F029         	movff	vfpfcnvrt@ll+5,dtoa@d+5
 15254  001088  C066  F02A         	movff	vfpfcnvrt@ll+6,dtoa@d+6
 15255  00108C  C067  F02B         	movff	vfpfcnvrt@ll+7,dtoa@d+7
 15256  001090  EC82  F00E         	call	_dtoa	;wreg free
 15257  001094  C022  F049         	movff	?_dtoa,?_vfpfcnvrt
 15258  001098  C023  F04A         	movff	?_dtoa+1,?_vfpfcnvrt+1
 15259  00109C  EFAA  F009         	goto	l1351
 15260  0010A0                     l7106:
 15261                           
 15262                           ; BSR set to: 0
 15263                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
 15264  0010A0  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15265  0010A4  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15266  0010A8  CFDE FFF6          	movff	postinc2,tblptrl
 15267  0010AC  CFDD FFF7          	movff	postdec2,tblptrh
 15268  0010B0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15269  0010B0  6AF8               	clrf	tblptru,c
 15270  0010B2                     	endif
 15271  0010B2                     	if	0	;tblptru may be non-zero
 15272  0010B2                     	endif
 15273  0010B2  0008               	tblrd		*
 15274  0010B4  50F5               	movf	tablat,w,c
 15275  0010B6  0A73               	xorlw	115
 15276  0010B8  A4D8               	btfss	status,2,c
 15277  0010BA  EF61  F008         	goto	u7031
 15278  0010BE  EF63  F008         	goto	u7030
 15279  0010C2                     u7031:
 15280  0010C2  EF8E  F008         	goto	l7114
 15281  0010C6                     u7030:
 15282  0010C6                     
 15283                           ; BSR set to: 0
 15284                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
 15285  0010C6  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15286  0010CA  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15287  0010CE  2ADE               	incf	postinc2,f,c
 15288  0010D0  0E00               	movlw	0
 15289  0010D2  22DD               	addwfc	postdec2,f,c
 15290                           
 15291                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 15292  0010D4  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 15293  0010D8  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 15294  0010DC  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 15295  0010E0  0E02               	movlw	2
 15296  0010E2  26DE               	addwf	postinc2,f,c
 15297  0010E4  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 15298  0010E8  0E00               	movlw	0
 15299  0010EA  22DD               	addwfc	postdec2,f,c
 15300  0010EC  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 15301  0010F0  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 15302  0010F4  CFDE F068          	movff	postinc2,vfpfcnvrt@cp
 15303  0010F8  CFDD F069          	movff	postdec2,vfpfcnvrt@cp+1
 15304  0010FC                     
 15305                           ; BSR set to: 0
 15306                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
 15307  0010FC  C049  F010         	movff	vfpfcnvrt@fp,stoa@fp
 15308  001100  C04A  F011         	movff	vfpfcnvrt@fp+1,stoa@fp+1
 15309  001104  C068  F012         	movff	vfpfcnvrt@cp,stoa@s
 15310  001108  C069  F013         	movff	vfpfcnvrt@cp+1,stoa@s+1
 15311  00110C  EC89  F017         	call	_stoa	;wreg free
 15312  001110  C010  F049         	movff	?_stoa,?_vfpfcnvrt
 15313  001114  C011  F04A         	movff	?_stoa+1,?_vfpfcnvrt+1
 15314  001118  EFAA  F009         	goto	l1351
 15315  00111C                     l7114:
 15316                           
 15317                           ; BSR set to: 0
 15318                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
 15319  00111C  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15320  001120  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15321  001124  CFDE FFF6          	movff	postinc2,tblptrl
 15322  001128  CFDD FFF7          	movff	postdec2,tblptrh
 15323  00112C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15324  00112C  6AF8               	clrf	tblptru,c
 15325  00112E                     	endif
 15326  00112E                     	if	0	;tblptru may be non-zero
 15327  00112E                     	endif
 15328  00112E  0008               	tblrd		*
 15329  001130  50F5               	movf	tablat,w,c
 15330  001132  0A75               	xorlw	117
 15331  001134  A4D8               	btfss	status,2,c
 15332  001136  EF9F  F008         	goto	u7041
 15333  00113A  EFA1  F008         	goto	u7040
 15334  00113E                     u7041:
 15335  00113E  EFE2  F008         	goto	l7122
 15336  001142                     u7040:
 15337  001142                     
 15338                           ; BSR set to: 0
 15339                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
 15340  001142  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15341  001146  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15342  00114A  2ADE               	incf	postinc2,f,c
 15343  00114C  0E00               	movlw	0
 15344  00114E  22DD               	addwfc	postdec2,f,c
 15345                           
 15346                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 15347  001150  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 15348  001154  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 15349  001158  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 15350  00115C  0E02               	movlw	2
 15351  00115E  26DE               	addwf	postinc2,f,c
 15352  001160  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 15353  001164  0E00               	movlw	0
 15354  001166  22DD               	addwfc	postdec2,f,c
 15355  001168  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 15356  00116C  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 15357  001170  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
 15358  001174  CFDD F052          	movff	postdec2,??_vfpfcnvrt+3
 15359  001178  C051  F06F         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
 15360  00117C  C052  F070         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
 15361  001180  6B71               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 15362  001182  6B72               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 15363  001184  6B73               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 15364  001186  6B74               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 15365  001188  6B75               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 15366  00118A  6B76               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 15367  00118C                     
 15368                           ; BSR set to: 0
 15369                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
 15370  00118C  C049  F022         	movff	vfpfcnvrt@fp,utoa@fp
 15371  001190  C04A  F023         	movff	vfpfcnvrt@fp+1,utoa@fp+1
 15372  001194  C06F  F024         	movff	vfpfcnvrt@llu,utoa@d
 15373  001198  C070  F025         	movff	vfpfcnvrt@llu+1,utoa@d+1
 15374  00119C  C071  F026         	movff	vfpfcnvrt@llu+2,utoa@d+2
 15375  0011A0  C072  F027         	movff	vfpfcnvrt@llu+3,utoa@d+3
 15376  0011A4  C073  F028         	movff	vfpfcnvrt@llu+4,utoa@d+4
 15377  0011A8  C074  F029         	movff	vfpfcnvrt@llu+5,utoa@d+5
 15378  0011AC  C075  F02A         	movff	vfpfcnvrt@llu+6,utoa@d+6
 15379  0011B0  C076  F02B         	movff	vfpfcnvrt@llu+7,utoa@d+7
 15380  0011B4  ECDA  F013         	call	_utoa	;wreg free
 15381  0011B8  C022  F049         	movff	?_utoa,?_vfpfcnvrt
 15382  0011BC  C023  F04A         	movff	?_utoa+1,?_vfpfcnvrt+1
 15383  0011C0  EFAA  F009         	goto	l1351
 15384  0011C4                     l7122:
 15385                           
 15386                           ; BSR set to: 0
 15387                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 15388  0011C4  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15389  0011C8  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15390  0011CC  CFDE FFF6          	movff	postinc2,tblptrl
 15391  0011D0  CFDD FFF7          	movff	postdec2,tblptrh
 15392  0011D4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15393  0011D4  6AF8               	clrf	tblptru,c
 15394  0011D6                     	endif
 15395  0011D6                     	if	0	;tblptru may be non-zero
 15396  0011D6                     	endif
 15397  0011D6  0008               	tblrd		*
 15398  0011D8  50F5               	movf	tablat,w,c
 15399  0011DA  0A78               	xorlw	120
 15400  0011DC  B4D8               	btfsc	status,2,c
 15401  0011DE  EFF3  F008         	goto	u7051
 15402  0011E2  EFF5  F008         	goto	u7050
 15403  0011E6                     u7051:
 15404  0011E6  EF08  F009         	goto	l7126
 15405  0011EA                     u7050:
 15406  0011EA                     
 15407                           ; BSR set to: 0
 15408  0011EA  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15409  0011EE  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15410  0011F2  CFDE FFF6          	movff	postinc2,tblptrl
 15411  0011F6  CFDD FFF7          	movff	postdec2,tblptrh
 15412  0011FA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15413  0011FA  6AF8               	clrf	tblptru,c
 15414  0011FC                     	endif
 15415  0011FC                     	if	0	;tblptru may be non-zero
 15416  0011FC                     	endif
 15417  0011FC  0008               	tblrd		*
 15418  0011FE  50F5               	movf	tablat,w,c
 15419  001200  0A58               	xorlw	88
 15420  001202  A4D8               	btfss	status,2,c
 15421  001204  EF06  F009         	goto	u7061
 15422  001208  EF08  F009         	goto	u7060
 15423  00120C                     u7061:
 15424  00120C  EF57  F009         	goto	l7136
 15425  001210                     u7060:
 15426  001210                     l7126:
 15427                           
 15428                           ; BSR set to: 0
 15429                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
 15430  001210  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15431  001214  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15432  001218  CFDE FFF6          	movff	postinc2,tblptrl
 15433  00121C  CFDD FFF7          	movff	postdec2,tblptrh
 15434  001220                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15435  001220  6AF8               	clrf	tblptru,c
 15436  001222                     	endif
 15437  001222                     	if	0	;tblptru may be non-zero
 15438  001222                     	endif
 15439  001222  0008               	tblrd		*
 15440  001224  CFF5 F06A          	movff	tablat,vfpfcnvrt@c
 15441  001228                     
 15442                           ; BSR set to: 0
 15443                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
 15444  001228  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15445  00122C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15446  001230  2ADE               	incf	postinc2,f,c
 15447  001232  0E00               	movlw	0
 15448  001234  22DD               	addwfc	postdec2,f,c
 15449  001236                     
 15450                           ; BSR set to: 0
 15451                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 15452  001236  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 15453  00123A  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 15454  00123E  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 15455  001242  0E02               	movlw	2
 15456  001244  26DE               	addwf	postinc2,f,c
 15457  001246  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 15458  00124A  0E00               	movlw	0
 15459  00124C  22DD               	addwfc	postdec2,f,c
 15460  00124E  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 15461  001252  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 15462  001256  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
 15463  00125A  CFDD F052          	movff	postdec2,??_vfpfcnvrt+3
 15464  00125E  C051  F06F         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
 15465  001262  C052  F070         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
 15466  001266  6B71               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 15467  001268  6B72               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 15468  00126A  6B73               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 15469  00126C  6B74               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 15470  00126E  6B75               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 15471  001270  6B76               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 15472  001272                     
 15473                           ; BSR set to: 0
 15474                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
 15475  001272  C049  F022         	movff	vfpfcnvrt@fp,xtoa@fp
 15476  001276  C04A  F023         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
 15477  00127A  C06F  F024         	movff	vfpfcnvrt@llu,xtoa@d
 15478  00127E  C070  F025         	movff	vfpfcnvrt@llu+1,xtoa@d+1
 15479  001282  C071  F026         	movff	vfpfcnvrt@llu+2,xtoa@d+2
 15480  001286  C072  F027         	movff	vfpfcnvrt@llu+3,xtoa@d+3
 15481  00128A  C073  F028         	movff	vfpfcnvrt@llu+4,xtoa@d+4
 15482  00128E  C074  F029         	movff	vfpfcnvrt@llu+5,xtoa@d+5
 15483  001292  C075  F02A         	movff	vfpfcnvrt@llu+6,xtoa@d+6
 15484  001296  C076  F02B         	movff	vfpfcnvrt@llu+7,xtoa@d+7
 15485  00129A  C06A  F02C         	movff	vfpfcnvrt@c,xtoa@x
 15486  00129E  ECF2  F00F         	call	_xtoa	;wreg free
 15487  0012A2  C022  F049         	movff	?_xtoa,?_vfpfcnvrt
 15488  0012A6  C023  F04A         	movff	?_xtoa+1,?_vfpfcnvrt+1
 15489  0012AA  EFAA  F009         	goto	l1351
 15490  0012AE                     l7136:
 15491                           
 15492                           ; BSR set to: 0
 15493                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 15494  0012AE  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15495  0012B2  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15496  0012B6  CFDE FFF6          	movff	postinc2,tblptrl
 15497  0012BA  CFDD FFF7          	movff	postdec2,tblptrh
 15498  0012BE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15499  0012BE  6AF8               	clrf	tblptru,c
 15500  0012C0                     	endif
 15501  0012C0                     	if	0	;tblptru may be non-zero
 15502  0012C0                     	endif
 15503  0012C0  0008               	tblrd		*
 15504  0012C2  50F5               	movf	tablat,w,c
 15505  0012C4  0A25               	xorlw	37
 15506  0012C6  A4D8               	btfss	status,2,c
 15507  0012C8  EF68  F009         	goto	u7071
 15508  0012CC  EF6A  F009         	goto	u7070
 15509  0012D0                     u7071:
 15510  0012D0  EF81  F009         	goto	l7146
 15511  0012D4                     u7070:
 15512  0012D4                     
 15513                           ; BSR set to: 0
 15514                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 15515  0012D4  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15516  0012D8  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15517  0012DC  2ADE               	incf	postinc2,f,c
 15518  0012DE  0E00               	movlw	0
 15519  0012E0  22DD               	addwfc	postdec2,f,c
 15520  0012E2                     
 15521                           ; BSR set to: 0
 15522                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 15523  0012E2  0E00               	movlw	0
 15524  0012E4  6E08               	movwf	(fputc@c+1)^0,c
 15525  0012E6  0E25               	movlw	37
 15526  0012E8  6E07               	movwf	fputc@c^0,c
 15527  0012EA  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
 15528  0012EE  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 15529  0012F2  EC12  F022         	call	_fputc	;wreg free
 15530  0012F6                     l7142:
 15531                           
 15532                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 15533  0012F6  0E00               	movlw	0
 15534  0012F8  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
 15535  0012FA  0E01               	movlw	1
 15536  0012FC  6E49               	movwf	?_vfpfcnvrt^0,c
 15537  0012FE  EFAA  F009         	goto	l1351
 15538  001302                     l7146:
 15539                           
 15540                           ; BSR set to: 0
 15541                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 15542  001302  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15543  001306  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15544  00130A  2ADE               	incf	postinc2,f,c
 15545  00130C  0E00               	movlw	0
 15546  00130E  22DD               	addwfc	postdec2,f,c
 15547  001310                     
 15548                           ; BSR set to: 0
 15549                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
 15550  001310  0E00               	movlw	0
 15551  001312  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
 15552  001314  0E00               	movlw	0
 15553  001316  6E49               	movwf	?_vfpfcnvrt^0,c
 15554  001318  EFAA  F009         	goto	l1351
 15555  00131C                     l7152:
 15556                           
 15557                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 15558  00131C  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15559  001320  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15560  001324  CFDE FFF6          	movff	postinc2,tblptrl
 15561  001328  CFDD FFF7          	movff	postdec2,tblptrh
 15562  00132C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15563  00132C  6AF8               	clrf	tblptru,c
 15564  00132E                     	endif
 15565  00132E                     	if	0	;tblptru may be non-zero
 15566  00132E                     	endif
 15567  00132E  0008               	tblrd		*
 15568  001330  50F5               	movf	tablat,w,c
 15569  001332  6E07               	movwf	fputc@c^0,c
 15570  001334  6A08               	clrf	(fputc@c+1)^0,c
 15571  001336  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
 15572  00133A  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 15573  00133E  EC12  F022         	call	_fputc	;wreg free
 15574  001342                     
 15575                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 15576  001342  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15577  001346  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15578  00134A  2ADE               	incf	postinc2,f,c
 15579  00134C  0E00               	movlw	0
 15580  00134E  22DD               	addwfc	postdec2,f,c
 15581  001350  EF7B  F009         	goto	l7142
 15582  001354                     l1351:
 15583  001354  0012               	return		;funcret
 15584  001356                     __end_of_vfpfcnvrt:
 15585                           	opt callstack 0
 15586                           
 15587 ;; *************** function _xtoa *****************
 15588 ;; Defined at:
 15589 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 15590 ;; Parameters:    Size  Location     Type
 15591 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
 15592 ;;		 -> NULL(0), 
 15593 ;;  d               8   35[COMRAM] unsigned long long 
 15594 ;;  x               1   43[COMRAM] unsigned char 
 15595 ;; Auto vars:     Size  Location     Type
 15596 ;;  n               8   60[COMRAM] unsigned long long 
 15597 ;;  c               2   70[COMRAM] int 
 15598 ;;  i               2   68[COMRAM] int 
 15599 ;;  w               2   58[COMRAM] int 
 15600 ;;  p               2   56[COMRAM] int 
 15601 ;; Return value:  Size  Location     Type
 15602 ;;                  2   33[COMRAM] int 
 15603 ;; Registers used:
 15604 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15605 ;; Tracked objects:
 15606 ;;		On entry : 0/0
 15607 ;;		On exit  : 0/0
 15608 ;;		Unchanged: 0/0
 15609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15610 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15611 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15612 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15613 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15614 ;;Total ram usage:       39 bytes
 15615 ;; Hardware stack levels used:    1
 15616 ;; Hardware stack levels required when called:    9
 15617 ;; This function calls:
 15618 ;;		_isalpha
 15619 ;;		_isupper
 15620 ;;		_pad
 15621 ;;		_toupper
 15622 ;; This function is called by:
 15623 ;;		_vfpfcnvrt
 15624 ;; This function uses a non-reentrant model
 15625 ;;
 15626                           
 15627                           	psect	text54
 15628  001FE4                     __ptext54:
 15629                           	opt callstack 0
 15630  001FE4                     _xtoa:
 15631                           	opt callstack 18
 15632  001FE4                     
 15633                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
 15634  001FE4  0100               	movlb	0	; () banked
 15635  001FE6  BFD2               	btfsc	(_prec+1)& (0+255),7,b
 15636  001FE8  EFF8  F00F         	goto	u6691
 15637  001FEC  EFFA  F00F         	goto	u6690
 15638  001FF0                     u6691:
 15639  001FF0  EFFB  F00F         	goto	l6934
 15640  001FF4                     u6690:
 15641  001FF4                     
 15642                           ; BSR set to: 0
 15643                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
 15644  001FF4  9257               	bcf	_flags^0,1,c
 15645  001FF6                     l6934:
 15646                           
 15647                           ; BSR set to: 0
 15648                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
 15649  001FF6  BFD2               	btfsc	(_prec+1)& (0+255),7,b
 15650  001FF8  EF08  F010         	goto	u6700
 15651  001FFC  51D2               	movf	(_prec+1)& (0+255),w,b
 15652  001FFE  E106               	bnz	u6701
 15653  002000  05D1               	decf	_prec& (0+255),w,b
 15654  002002  B0D8               	btfsc	status,0,c
 15655  002004  EF06  F010         	goto	u6701
 15656  002008  EF08  F010         	goto	u6700
 15657  00200C                     u6701:
 15658  00200C  EF0E  F010         	goto	l1297
 15659  002010                     u6700:
 15660  002010                     
 15661                           ; BSR set to: 0
 15662  002010  0E00               	movlw	0
 15663  002012  6E3A               	movwf	(xtoa@p+1)^0,c
 15664  002014  0E01               	movlw	1
 15665  002016  6E39               	movwf	xtoa@p^0,c
 15666  002018  EF12  F010         	goto	l1299
 15667  00201C                     l1297:
 15668                           
 15669                           ; BSR set to: 0
 15670  00201C  C0D1  F039         	movff	_prec,xtoa@p
 15671  002020  C0D2  F03A         	movff	_prec+1,xtoa@p+1
 15672  002024                     l1299:
 15673                           
 15674                           ; BSR set to: 0
 15675                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
 15676  002024  C0CF  F03B         	movff	_width,xtoa@w
 15677  002028  C0D0  F03C         	movff	_width+1,xtoa@w+1
 15678                           
 15679                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
 15680  00202C  A857               	btfss	_flags^0,4,c
 15681  00202E  EF1B  F010         	goto	u6711
 15682  002032  EF1D  F010         	goto	u6710
 15683  002036                     u6711:
 15684  002036  EF21  F010         	goto	l6940
 15685  00203A                     u6710:
 15686  00203A                     
 15687                           ; BSR set to: 0
 15688                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
 15689  00203A  0EFE               	movlw	254
 15690  00203C  263B               	addwf	xtoa@w^0,f,c
 15691  00203E  0EFF               	movlw	255
 15692  002040  223C               	addwfc	(xtoa@w+1)^0,f,c
 15693  002042                     l6940:
 15694                           
 15695                           ; BSR set to: 0
 15696                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
 15697  002042  C024  F03D         	movff	xtoa@d,xtoa@n
 15698  002046  C025  F03E         	movff	xtoa@d+1,xtoa@n+1
 15699  00204A  C026  F03F         	movff	xtoa@d+2,xtoa@n+2
 15700  00204E  C027  F040         	movff	xtoa@d+3,xtoa@n+3
 15701  002052  C028  F041         	movff	xtoa@d+4,xtoa@n+4
 15702  002056  C029  F042         	movff	xtoa@d+5,xtoa@n+5
 15703  00205A  C02A  F043         	movff	xtoa@d+6,xtoa@n+6
 15704  00205E  C02B  F044         	movff	xtoa@d+7,xtoa@n+7
 15705  002062                     
 15706                           ; BSR set to: 0
 15707                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
 15708  002062  0E00               	movlw	0
 15709  002064  6E46               	movwf	(xtoa@i+1)^0,c
 15710  002066  0E1F               	movlw	31
 15711  002068  6E45               	movwf	xtoa@i^0,c
 15712  00206A                     
 15713                           ; BSR set to: 0
 15714                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
 15715  00206A  0E00               	movlw	0
 15716  00206C  0102               	movlb	2	; () banked
 15717  00206E  6FFC               	movwf	(_dbuf+31)& (0+255),b
 15718                           
 15719                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 15720  002070  EFED  F010         	goto	l6976
 15721  002074                     l6946:
 15722                           
 15723                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
 15724  002074  0645               	decf	xtoa@i^0,f,c
 15725  002076  A0D8               	btfss	status,0,c
 15726  002078  0646               	decf	(xtoa@i+1)^0,f,c
 15727  00207A                     
 15728                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
 15729  00207A  0E0F               	movlw	15
 15730  00207C  143D               	andwf	xtoa@n^0,w,c
 15731  00207E  6E47               	movwf	xtoa@c^0,c
 15732  002080  6A48               	clrf	(xtoa@c+1)^0,c
 15733  002082                     
 15734                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
 15735  002082  BE48               	btfsc	(xtoa@c+1)^0,7,c
 15736  002084  EF4D  F010         	goto	u6721
 15737  002088  5048               	movf	(xtoa@c+1)^0,w,c
 15738  00208A  E109               	bnz	u6720
 15739  00208C  0E0A               	movlw	10
 15740  00208E  5C47               	subwf	xtoa@c^0,w,c
 15741  002090  A0D8               	btfss	status,0,c
 15742  002092  EF4D  F010         	goto	u6721
 15743  002096  EF4F  F010         	goto	u6720
 15744  00209A                     u6721:
 15745  00209A  EF57  F010         	goto	l6954
 15746  00209E                     u6720:
 15747  00209E  0E57               	movlw	87
 15748  0020A0  2447               	addwf	xtoa@c^0,w,c
 15749  0020A2  6E47               	movwf	xtoa@c^0,c
 15750  0020A4  0E00               	movlw	0
 15751  0020A6  2048               	addwfc	(xtoa@c+1)^0,w,c
 15752  0020A8  6E48               	movwf	(xtoa@c+1)^0,c
 15753  0020AA  EF5D  F010         	goto	l1306
 15754  0020AE                     l6954:
 15755  0020AE  0E30               	movlw	48
 15756  0020B0  2447               	addwf	xtoa@c^0,w,c
 15757  0020B2  6E47               	movwf	xtoa@c^0,c
 15758  0020B4  0E00               	movlw	0
 15759  0020B6  2048               	addwfc	(xtoa@c+1)^0,w,c
 15760  0020B8  6E48               	movwf	(xtoa@c+1)^0,c
 15761  0020BA                     l1306:
 15762  0020BA  0EBF               	movlw	191
 15763  0020BC  6E2D               	movwf	??_xtoa^0,c
 15764  0020BE  0EFF               	movlw	255
 15765  0020C0  6E2E               	movwf	(??_xtoa+1)^0,c
 15766  0020C2  502C               	movf	xtoa@x^0,w,c
 15767  0020C4  6E2F               	movwf	(??_xtoa+2)^0,c
 15768  0020C6  6A30               	clrf	(??_xtoa+3)^0,c
 15769  0020C8  502D               	movf	??_xtoa^0,w,c
 15770  0020CA  262F               	addwf	(??_xtoa+2)^0,f,c
 15771  0020CC  502E               	movf	(??_xtoa+1)^0,w,c
 15772  0020CE  2230               	addwfc	(??_xtoa+3)^0,f,c
 15773  0020D0  5030               	movf	(??_xtoa+3)^0,w,c
 15774  0020D2  E10A               	bnz	u6730
 15775  0020D4  0E1A               	movlw	26
 15776  0020D6  5C2F               	subwf	(??_xtoa+2)^0,w,c
 15777  0020D8  A0D8               	btfss	status,0,c
 15778  0020DA  EF71  F010         	goto	u6731
 15779  0020DE  EF74  F010         	goto	u6730
 15780  0020E2                     u6731:
 15781  0020E2  0E01               	movlw	1
 15782  0020E4  EF75  F010         	goto	u6740
 15783  0020E8                     u6730:
 15784  0020E8  0E00               	movlw	0
 15785  0020EA                     u6740:
 15786  0020EA  6E35               	movwf	_xtoa$1934^0,c
 15787  0020EC  6A36               	clrf	(_xtoa$1934+1)^0,c
 15788  0020EE  5035               	movf	_xtoa$1934^0,w,c
 15789  0020F0  1036               	iorwf	(_xtoa$1934+1)^0,w,c
 15790  0020F2  B4D8               	btfsc	status,2,c
 15791  0020F4  EF7E  F010         	goto	u6751
 15792  0020F8  EF80  F010         	goto	u6750
 15793  0020FC                     u6751:
 15794  0020FC  EFB0  F010         	goto	l6968
 15795  002100                     u6750:
 15796  002100  0E9F               	movlw	159
 15797  002102  6E2D               	movwf	??_xtoa^0,c
 15798  002104  0EFF               	movlw	255
 15799  002106  6E2E               	movwf	(??_xtoa+1)^0,c
 15800  002108  0E20               	movlw	32
 15801  00210A  1047               	iorwf	xtoa@c^0,w,c
 15802  00210C  6E2F               	movwf	(??_xtoa+2)^0,c
 15803  00210E  0E00               	movlw	0
 15804  002110  1048               	iorwf	(xtoa@c+1)^0,w,c
 15805  002112  6E30               	movwf	(??_xtoa+3)^0,c
 15806  002114  502D               	movf	??_xtoa^0,w,c
 15807  002116  262F               	addwf	(??_xtoa+2)^0,f,c
 15808  002118  502E               	movf	(??_xtoa+1)^0,w,c
 15809  00211A  2230               	addwfc	(??_xtoa+3)^0,f,c
 15810  00211C  5030               	movf	(??_xtoa+3)^0,w,c
 15811  00211E  E10A               	bnz	u6760
 15812  002120  0E1A               	movlw	26
 15813  002122  5C2F               	subwf	(??_xtoa+2)^0,w,c
 15814  002124  A0D8               	btfss	status,0,c
 15815  002126  EF97  F010         	goto	u6761
 15816  00212A  EF9A  F010         	goto	u6760
 15817  00212E                     u6761:
 15818  00212E  0E01               	movlw	1
 15819  002130  EF9B  F010         	goto	u6770
 15820  002134                     u6760:
 15821  002134  0E00               	movlw	0
 15822  002136                     u6770:
 15823  002136  6E37               	movwf	_xtoa$1935^0,c
 15824  002138  6A38               	clrf	(_xtoa$1935+1)^0,c
 15825  00213A  5037               	movf	_xtoa$1935^0,w,c
 15826  00213C  1038               	iorwf	(_xtoa$1935+1)^0,w,c
 15827  00213E  B4D8               	btfsc	status,2,c
 15828  002140  EFA4  F010         	goto	u6781
 15829  002144  EFA6  F010         	goto	u6780
 15830  002148                     u6781:
 15831  002148  EFB0  F010         	goto	l6968
 15832  00214C                     u6780:
 15833  00214C                     
 15834                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
 15835  00214C  C047  F00B         	movff	xtoa@c,toupper@c
 15836  002150  C048  F00C         	movff	xtoa@c+1,toupper@c+1
 15837  002154  EC38  F024         	call	_toupper	;wreg free
 15838  002158  C00B  F047         	movff	?_toupper,xtoa@c
 15839  00215C  C00C  F048         	movff	?_toupper+1,xtoa@c+1
 15840  002160                     l6968:
 15841                           
 15842                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
 15843  002160  0EDD               	movlw	low _dbuf
 15844  002162  2445               	addwf	xtoa@i^0,w,c
 15845  002164  6ED9               	movwf	fsr2l,c
 15846  002166  0E02               	movlw	high _dbuf
 15847  002168  2046               	addwfc	(xtoa@i+1)^0,w,c
 15848  00216A  6EDA               	movwf	fsr2h,c
 15849  00216C  C047  FFDF         	movff	xtoa@c,indf2
 15850  002170                     
 15851                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
 15852  002170  0639               	decf	xtoa@p^0,f,c
 15853  002172  A0D8               	btfss	status,0,c
 15854  002174  063A               	decf	(xtoa@p+1)^0,f,c
 15855  002176                     
 15856                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
 15857  002176  063B               	decf	xtoa@w^0,f,c
 15858  002178  A0D8               	btfss	status,0,c
 15859  00217A  063C               	decf	(xtoa@w+1)^0,f,c
 15860  00217C                     
 15861                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
 15862  00217C  C03D  F02D         	movff	xtoa@n,??_xtoa
 15863  002180  C03E  F02E         	movff	xtoa@n+1,??_xtoa+1
 15864  002184  C03F  F02F         	movff	xtoa@n+2,??_xtoa+2
 15865  002188  C040  F030         	movff	xtoa@n+3,??_xtoa+3
 15866  00218C  C041  F031         	movff	xtoa@n+4,??_xtoa+4
 15867  002190  C042  F032         	movff	xtoa@n+5,??_xtoa+5
 15868  002194  C043  F033         	movff	xtoa@n+6,??_xtoa+6
 15869  002198  C044  F034         	movff	xtoa@n+7,??_xtoa+7
 15870  00219C  0E05               	movlw	5
 15871  00219E  EFDA  F010         	goto	u6790
 15872  0021A2                     u6795:
 15873  0021A2  90D8               	bcf	status,0,c
 15874  0021A4  3234               	rrcf	(??_xtoa+7)^0,f,c
 15875  0021A6  3233               	rrcf	(??_xtoa+6)^0,f,c
 15876  0021A8  3232               	rrcf	(??_xtoa+5)^0,f,c
 15877  0021AA  3231               	rrcf	(??_xtoa+4)^0,f,c
 15878  0021AC  3230               	rrcf	(??_xtoa+3)^0,f,c
 15879  0021AE  322F               	rrcf	(??_xtoa+2)^0,f,c
 15880  0021B0  322E               	rrcf	(??_xtoa+1)^0,f,c
 15881  0021B2  322D               	rrcf	??_xtoa^0,f,c
 15882  0021B4                     u6790:
 15883  0021B4  2EE8               	decfsz	wreg,f,c
 15884  0021B6  EFD1  F010         	goto	u6795
 15885  0021BA  C02D  F03D         	movff	??_xtoa,xtoa@n
 15886  0021BE  C02E  F03E         	movff	??_xtoa+1,xtoa@n+1
 15887  0021C2  C02F  F03F         	movff	??_xtoa+2,xtoa@n+2
 15888  0021C6  C030  F040         	movff	??_xtoa+3,xtoa@n+3
 15889  0021CA  C031  F041         	movff	??_xtoa+4,xtoa@n+4
 15890  0021CE  C032  F042         	movff	??_xtoa+5,xtoa@n+5
 15891  0021D2  C033  F043         	movff	??_xtoa+6,xtoa@n+6
 15892  0021D6  C034  F044         	movff	??_xtoa+7,xtoa@n+7
 15893  0021DA                     l6976:
 15894                           
 15895                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 15896  0021DA  BE46               	btfsc	(xtoa@i+1)^0,7,c
 15897  0021DC  EFF9  F010         	goto	u6801
 15898  0021E0  5046               	movf	(xtoa@i+1)^0,w,c
 15899  0021E2  E109               	bnz	u6800
 15900  0021E4  0E02               	movlw	2
 15901  0021E6  5C45               	subwf	xtoa@i^0,w,c
 15902  0021E8  A0D8               	btfss	status,0,c
 15903  0021EA  EFF9  F010         	goto	u6801
 15904  0021EE  EFFB  F010         	goto	u6800
 15905  0021F2                     u6801:
 15906  0021F2  EF2B  F011         	goto	l1320
 15907  0021F6                     u6800:
 15908  0021F6  503D               	movf	xtoa@n^0,w,c
 15909  0021F8  103E               	iorwf	(xtoa@n+1)^0,w,c
 15910  0021FA  103F               	iorwf	(xtoa@n+2)^0,w,c
 15911  0021FC  1040               	iorwf	(xtoa@n+3)^0,w,c
 15912  0021FE  1041               	iorwf	(xtoa@n+4)^0,w,c
 15913  002200  1042               	iorwf	(xtoa@n+5)^0,w,c
 15914  002202  1043               	iorwf	(xtoa@n+6)^0,w,c
 15915  002204  1044               	iorwf	(xtoa@n+7)^0,w,c
 15916  002206  A4D8               	btfss	status,2,c
 15917  002208  EF08  F011         	goto	u6811
 15918  00220C  EF0A  F011         	goto	u6810
 15919  002210                     u6811:
 15920  002210  EF3A  F010         	goto	l6946
 15921  002214                     u6810:
 15922  002214  BE3A               	btfsc	(xtoa@p+1)^0,7,c
 15923  002216  EF17  F011         	goto	u6820
 15924  00221A  503A               	movf	(xtoa@p+1)^0,w,c
 15925  00221C  E106               	bnz	u6821
 15926  00221E  0439               	decf	xtoa@p^0,w,c
 15927  002220  B0D8               	btfsc	status,0,c
 15928  002222  EF15  F011         	goto	u6821
 15929  002226  EF17  F011         	goto	u6820
 15930  00222A                     u6821:
 15931  00222A  EF3A  F010         	goto	l6946
 15932  00222E                     u6820:
 15933  00222E  BE3C               	btfsc	(xtoa@w+1)^0,7,c
 15934  002230  EF22  F011         	goto	u6831
 15935  002234  503C               	movf	(xtoa@w+1)^0,w,c
 15936  002236  E108               	bnz	u6830
 15937  002238  043B               	decf	xtoa@w^0,w,c
 15938  00223A  A0D8               	btfss	status,0,c
 15939  00223C  EF22  F011         	goto	u6831
 15940  002240  EF24  F011         	goto	u6830
 15941  002244                     u6831:
 15942  002244  EF2B  F011         	goto	l1320
 15943  002248                     u6830:
 15944  002248  B257               	btfsc	_flags^0,1,c
 15945  00224A  EF29  F011         	goto	u6841
 15946  00224E  EF2B  F011         	goto	u6840
 15947  002252                     u6841:
 15948  002252  EF3A  F010         	goto	l6946
 15949  002256                     u6840:
 15950  002256                     l1320:
 15951                           
 15952                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
 15953  002256  A857               	btfss	_flags^0,4,c
 15954  002258  EF30  F011         	goto	u6851
 15955  00225C  EF32  F011         	goto	u6850
 15956  002260                     u6851:
 15957  002260  EF48  F011         	goto	l6992
 15958  002264                     u6850:
 15959  002264                     
 15960                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
 15961  002264  0645               	decf	xtoa@i^0,f,c
 15962  002266  A0D8               	btfss	status,0,c
 15963  002268  0646               	decf	(xtoa@i+1)^0,f,c
 15964  00226A                     
 15965                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
 15966  00226A  0EDD               	movlw	low _dbuf
 15967  00226C  2445               	addwf	xtoa@i^0,w,c
 15968  00226E  6ED9               	movwf	fsr2l,c
 15969  002270  0E02               	movlw	high _dbuf
 15970  002272  2046               	addwfc	(xtoa@i+1)^0,w,c
 15971  002274  6EDA               	movwf	fsr2h,c
 15972  002276  C02C  FFDF         	movff	xtoa@x,indf2
 15973  00227A                     
 15974                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
 15975  00227A  0645               	decf	xtoa@i^0,f,c
 15976  00227C  A0D8               	btfss	status,0,c
 15977  00227E  0646               	decf	(xtoa@i+1)^0,f,c
 15978                           
 15979                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
 15980  002280  0EDD               	movlw	low _dbuf
 15981  002282  2445               	addwf	xtoa@i^0,w,c
 15982  002284  6ED9               	movwf	fsr2l,c
 15983  002286  0E02               	movlw	high _dbuf
 15984  002288  2046               	addwfc	(xtoa@i+1)^0,w,c
 15985  00228A  6EDA               	movwf	fsr2h,c
 15986  00228C  0E30               	movlw	48
 15987  00228E  6EDF               	movwf	indf2,c
 15988  002290                     l6992:
 15989                           
 15990                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
 15991  002290  C022  F017         	movff	xtoa@fp,pad@fp
 15992  002294  C023  F018         	movff	xtoa@fp+1,pad@fp+1
 15993  002298  0EDD               	movlw	low _dbuf
 15994  00229A  2445               	addwf	xtoa@i^0,w,c
 15995  00229C  6E19               	movwf	pad@buf^0,c
 15996  00229E  0E02               	movlw	high _dbuf
 15997  0022A0  2046               	addwfc	(xtoa@i+1)^0,w,c
 15998  0022A2  6E1A               	movwf	(pad@buf+1)^0,c
 15999  0022A4  C03B  F01B         	movff	xtoa@w,pad@p
 16000  0022A8  C03C  F01C         	movff	xtoa@w+1,pad@p+1
 16001  0022AC  EC41  F020         	call	_pad	;wreg free
 16002  0022B0  C017  F022         	movff	?_pad,?_xtoa
 16003  0022B4  C018  F023         	movff	?_pad+1,?_xtoa+1
 16004  0022B8  0012               	return		;funcret
 16005  0022BA                     __end_of_xtoa:
 16006                           	opt callstack 0
 16007                           
 16008 ;; *************** function _toupper *****************
 16009 ;; Defined at:
 16010 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
 16011 ;; Parameters:    Size  Location     Type
 16012 ;;  c               2   10[COMRAM] int 
 16013 ;; Auto vars:     Size  Location     Type
 16014 ;;		None
 16015 ;; Return value:  Size  Location     Type
 16016 ;;                  2   10[COMRAM] int 
 16017 ;; Registers used:
 16018 ;;		wreg, status,2, status,0
 16019 ;; Tracked objects:
 16020 ;;		On entry : 0/0
 16021 ;;		On exit  : 0/0
 16022 ;;		Unchanged: 0/0
 16023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16024 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16025 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16026 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16027 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16028 ;;Total ram usage:        8 bytes
 16029 ;; Hardware stack levels used:    1
 16030 ;; Hardware stack levels required when called:    5
 16031 ;; This function calls:
 16032 ;;		_islower
 16033 ;; This function is called by:
 16034 ;;		_xtoa
 16035 ;; This function uses a non-reentrant model
 16036 ;;
 16037                           
 16038                           	psect	text55
 16039  004870                     __ptext55:
 16040                           	opt callstack 0
 16041  004870                     _toupper:
 16042                           	opt callstack 21
 16043  004870  0E9F               	movlw	159
 16044  004872  6E0D               	movwf	??_toupper^0,c
 16045  004874  0EFF               	movlw	255
 16046  004876  6E0E               	movwf	(??_toupper+1)^0,c
 16047  004878  C00B  F00F         	movff	toupper@c,??_toupper+2
 16048  00487C  C00C  F010         	movff	toupper@c+1,??_toupper+3
 16049  004880  500D               	movf	??_toupper^0,w,c
 16050  004882  260F               	addwf	(??_toupper+2)^0,f,c
 16051  004884  500E               	movf	(??_toupper+1)^0,w,c
 16052  004886  2210               	addwfc	(??_toupper+3)^0,f,c
 16053  004888  5010               	movf	(??_toupper+3)^0,w,c
 16054  00488A  E10A               	bnz	u6100
 16055  00488C  0E1A               	movlw	26
 16056  00488E  5C0F               	subwf	(??_toupper+2)^0,w,c
 16057  004890  A0D8               	btfss	status,0,c
 16058  004892  EF4D  F024         	goto	u6101
 16059  004896  EF50  F024         	goto	u6100
 16060  00489A                     u6101:
 16061  00489A  0E01               	movlw	1
 16062  00489C  EF51  F024         	goto	u6110
 16063  0048A0                     u6100:
 16064  0048A0  0E00               	movlw	0
 16065  0048A2                     u6110:
 16066  0048A2  6E11               	movwf	_toupper$2523^0,c
 16067  0048A4  6A12               	clrf	(_toupper$2523+1)^0,c
 16068  0048A6  5011               	movf	_toupper$2523^0,w,c
 16069  0048A8  1012               	iorwf	(_toupper$2523+1)^0,w,c
 16070  0048AA  B4D8               	btfsc	status,2,c
 16071  0048AC  EF5A  F024         	goto	u6121
 16072  0048B0  EF5C  F024         	goto	u6120
 16073  0048B4                     u6121:
 16074  0048B4  EF62  F024         	goto	l2170
 16075  0048B8                     u6120:
 16076  0048B8  0E5F               	movlw	95
 16077  0048BA  140B               	andwf	toupper@c^0,w,c
 16078  0048BC  6E0B               	movwf	?_toupper^0,c
 16079  0048BE  6A0C               	clrf	(?_toupper+1)^0,c
 16080  0048C0  EF66  F024         	goto	l2175
 16081  0048C4                     l2170:
 16082  0048C4  C00B  F00B         	movff	toupper@c,?_toupper
 16083  0048C8  C00C  F00C         	movff	toupper@c+1,?_toupper+1
 16084  0048CC                     l2175:
 16085  0048CC  0012               	return		;funcret
 16086  0048CE                     __end_of_toupper:
 16087                           	opt callstack 0
 16088                           
 16089 ;; *************** function _islower *****************
 16090 ;; Defined at:
 16091 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
 16092 ;; Parameters:    Size  Location     Type
 16093 ;;  c               2    4[COMRAM] int 
 16094 ;; Auto vars:     Size  Location     Type
 16095 ;;		None
 16096 ;; Return value:  Size  Location     Type
 16097 ;;                  2    4[COMRAM] int 
 16098 ;; Registers used:
 16099 ;;		wreg, status,2, status,0
 16100 ;; Tracked objects:
 16101 ;;		On entry : 0/0
 16102 ;;		On exit  : 0/0
 16103 ;;		Unchanged: 0/0
 16104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16105 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16107 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16108 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16109 ;;Total ram usage:        6 bytes
 16110 ;; Hardware stack levels used:    1
 16111 ;; Hardware stack levels required when called:    4
 16112 ;; This function calls:
 16113 ;;		Nothing
 16114 ;; This function is called by:
 16115 ;;		_toupper
 16116 ;; This function uses a non-reentrant model
 16117 ;;
 16118                           
 16119                           	psect	text56
 16120  004EA8                     __ptext56:
 16121                           	opt callstack 0
 16122  004EA8                     _islower:
 16123                           	opt callstack 21
 16124  004EA8  0E9F               	movlw	159
 16125  004EAA  6E07               	movwf	??_islower^0,c
 16126  004EAC  0EFF               	movlw	255
 16127  004EAE  6E08               	movwf	(??_islower+1)^0,c
 16128  004EB0  C005  F009         	movff	islower@c,??_islower+2
 16129  004EB4  C006  F00A         	movff	islower@c+1,??_islower+3
 16130  004EB8  5007               	movf	??_islower^0,w,c
 16131  004EBA  2609               	addwf	(??_islower+2)^0,f,c
 16132  004EBC  5008               	movf	(??_islower+1)^0,w,c
 16133  004EBE  220A               	addwfc	(??_islower+3)^0,f,c
 16134  004EC0  500A               	movf	(??_islower+3)^0,w,c
 16135  004EC2  E10A               	bnz	u5990
 16136  004EC4  0E1A               	movlw	26
 16137  004EC6  5C09               	subwf	(??_islower+2)^0,w,c
 16138  004EC8  A0D8               	btfss	status,0,c
 16139  004ECA  EF69  F027         	goto	u5991
 16140  004ECE  EF6C  F027         	goto	u5990
 16141  004ED2                     u5991:
 16142  004ED2  0E01               	movlw	1
 16143  004ED4  EF6D  F027         	goto	u6000
 16144  004ED8                     u5990:
 16145  004ED8  0E00               	movlw	0
 16146  004EDA                     u6000:
 16147  004EDA  6E05               	movwf	?_islower^0,c
 16148  004EDC  6A06               	clrf	(?_islower+1)^0,c
 16149  004EDE  0012               	return		;funcret
 16150  004EE0                     __end_of_islower:
 16151                           	opt callstack 0
 16152                           
 16153 ;; *************** function _isupper *****************
 16154 ;; Defined at:
 16155 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
 16156 ;; Parameters:    Size  Location     Type
 16157 ;;  c               2    4[COMRAM] int 
 16158 ;; Auto vars:     Size  Location     Type
 16159 ;;		None
 16160 ;; Return value:  Size  Location     Type
 16161 ;;                  2    4[COMRAM] int 
 16162 ;; Registers used:
 16163 ;;		wreg, status,2, status,0
 16164 ;; Tracked objects:
 16165 ;;		On entry : 0/0
 16166 ;;		On exit  : 0/0
 16167 ;;		Unchanged: 0/0
 16168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16169 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16171 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16172 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16173 ;;Total ram usage:        6 bytes
 16174 ;; Hardware stack levels used:    1
 16175 ;; Hardware stack levels required when called:    4
 16176 ;; This function calls:
 16177 ;;		Nothing
 16178 ;; This function is called by:
 16179 ;;		_xtoa
 16180 ;; This function uses a non-reentrant model
 16181 ;;
 16182                           
 16183                           	psect	text57
 16184  004EE0                     __ptext57:
 16185                           	opt callstack 0
 16186  004EE0                     _isupper:
 16187                           	opt callstack 22
 16188  004EE0  0EBF               	movlw	191
 16189  004EE2  6E07               	movwf	??_isupper^0,c
 16190  004EE4  0EFF               	movlw	255
 16191  004EE6  6E08               	movwf	(??_isupper+1)^0,c
 16192  004EE8  C005  F009         	movff	isupper@c,??_isupper+2
 16193  004EEC  C006  F00A         	movff	isupper@c+1,??_isupper+3
 16194  004EF0  5007               	movf	??_isupper^0,w,c
 16195  004EF2  2609               	addwf	(??_isupper+2)^0,f,c
 16196  004EF4  5008               	movf	(??_isupper+1)^0,w,c
 16197  004EF6  220A               	addwfc	(??_isupper+3)^0,f,c
 16198  004EF8  500A               	movf	(??_isupper+3)^0,w,c
 16199  004EFA  E10A               	bnz	u6060
 16200  004EFC  0E1A               	movlw	26
 16201  004EFE  5C09               	subwf	(??_isupper+2)^0,w,c
 16202  004F00  A0D8               	btfss	status,0,c
 16203  004F02  EF85  F027         	goto	u6061
 16204  004F06  EF88  F027         	goto	u6060
 16205  004F0A                     u6061:
 16206  004F0A  0E01               	movlw	1
 16207  004F0C  EF89  F027         	goto	u6070
 16208  004F10                     u6060:
 16209  004F10  0E00               	movlw	0
 16210  004F12                     u6070:
 16211  004F12  6E05               	movwf	?_isupper^0,c
 16212  004F14  6A06               	clrf	(?_isupper+1)^0,c
 16213  004F16  0012               	return		;funcret
 16214  004F18                     __end_of_isupper:
 16215                           	opt callstack 0
 16216                           
 16217 ;; *************** function _isalpha *****************
 16218 ;; Defined at:
 16219 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
 16220 ;; Parameters:    Size  Location     Type
 16221 ;;  c               2    4[COMRAM] int 
 16222 ;; Auto vars:     Size  Location     Type
 16223 ;;		None
 16224 ;; Return value:  Size  Location     Type
 16225 ;;                  2    4[COMRAM] int 
 16226 ;; Registers used:
 16227 ;;		wreg, status,2, status,0
 16228 ;; Tracked objects:
 16229 ;;		On entry : 0/0
 16230 ;;		On exit  : 0/0
 16231 ;;		Unchanged: 0/0
 16232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16233 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16235 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16236 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16237 ;;Total ram usage:        6 bytes
 16238 ;; Hardware stack levels used:    1
 16239 ;; Hardware stack levels required when called:    4
 16240 ;; This function calls:
 16241 ;;		Nothing
 16242 ;; This function is called by:
 16243 ;;		_xtoa
 16244 ;; This function uses a non-reentrant model
 16245 ;;
 16246                           
 16247                           	psect	text58
 16248  004E34                     __ptext58:
 16249                           	opt callstack 0
 16250  004E34                     _isalpha:
 16251                           	opt callstack 22
 16252  004E34  0E9F               	movlw	159
 16253  004E36  6E07               	movwf	??_isalpha^0,c
 16254  004E38  0EFF               	movlw	255
 16255  004E3A  6E08               	movwf	(??_isalpha+1)^0,c
 16256  004E3C  0E20               	movlw	32
 16257  004E3E  1005               	iorwf	isalpha@c^0,w,c
 16258  004E40  6E09               	movwf	(??_isalpha+2)^0,c
 16259  004E42  0E00               	movlw	0
 16260  004E44  1006               	iorwf	(isalpha@c+1)^0,w,c
 16261  004E46  6E0A               	movwf	(??_isalpha+3)^0,c
 16262  004E48  5007               	movf	??_isalpha^0,w,c
 16263  004E4A  2609               	addwf	(??_isalpha+2)^0,f,c
 16264  004E4C  5008               	movf	(??_isalpha+1)^0,w,c
 16265  004E4E  220A               	addwfc	(??_isalpha+3)^0,f,c
 16266  004E50  500A               	movf	(??_isalpha+3)^0,w,c
 16267  004E52  E10A               	bnz	u6080
 16268  004E54  0E1A               	movlw	26
 16269  004E56  5C09               	subwf	(??_isalpha+2)^0,w,c
 16270  004E58  A0D8               	btfss	status,0,c
 16271  004E5A  EF31  F027         	goto	u6081
 16272  004E5E  EF34  F027         	goto	u6080
 16273  004E62                     u6081:
 16274  004E62  0E01               	movlw	1
 16275  004E64  EF35  F027         	goto	u6090
 16276  004E68                     u6080:
 16277  004E68  0E00               	movlw	0
 16278  004E6A                     u6090:
 16279  004E6A  6E05               	movwf	?_isalpha^0,c
 16280  004E6C  6A06               	clrf	(?_isalpha+1)^0,c
 16281  004E6E  0012               	return		;funcret
 16282  004E70                     __end_of_isalpha:
 16283                           	opt callstack 0
 16284                           
 16285 ;; *************** function _utoa *****************
 16286 ;; Defined at:
 16287 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 16288 ;; Parameters:    Size  Location     Type
 16289 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
 16290 ;;		 -> NULL(0), 
 16291 ;;  d               8   35[COMRAM] unsigned long long 
 16292 ;; Auto vars:     Size  Location     Type
 16293 ;;  n               8   55[COMRAM] unsigned long long 
 16294 ;;  i               2   63[COMRAM] int 
 16295 ;;  w               2   53[COMRAM] int 
 16296 ;;  p               2   51[COMRAM] int 
 16297 ;; Return value:  Size  Location     Type
 16298 ;;                  2   33[COMRAM] int 
 16299 ;; Registers used:
 16300 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16301 ;; Tracked objects:
 16302 ;;		On entry : 0/0
 16303 ;;		On exit  : 0/0
 16304 ;;		Unchanged: 0/0
 16305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16306 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16307 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16308 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16309 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16310 ;;Total ram usage:       32 bytes
 16311 ;; Hardware stack levels used:    1
 16312 ;; Hardware stack levels required when called:    9
 16313 ;; This function calls:
 16314 ;;		___lodiv
 16315 ;;		___lomod
 16316 ;;		_pad
 16317 ;; This function is called by:
 16318 ;;		_vfpfcnvrt
 16319 ;; This function uses a non-reentrant model
 16320 ;;
 16321                           
 16322                           	psect	text59
 16323  0027B4                     __ptext59:
 16324                           	opt callstack 0
 16325  0027B4                     _utoa:
 16326                           	opt callstack 18
 16327  0027B4                     
 16328                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
 16329  0027B4  0100               	movlb	0	; () banked
 16330  0027B6  BFD2               	btfsc	(_prec+1)& (0+255),7,b
 16331  0027B8  EFE0  F013         	goto	u6621
 16332  0027BC  EFE2  F013         	goto	u6620
 16333  0027C0                     u6621:
 16334  0027C0  EFE3  F013         	goto	l6898
 16335  0027C4                     u6620:
 16336  0027C4                     
 16337                           ; BSR set to: 0
 16338                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
 16339  0027C4  9257               	bcf	_flags^0,1,c
 16340  0027C6                     l6898:
 16341                           
 16342                           ; BSR set to: 0
 16343                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
 16344  0027C6  BFD2               	btfsc	(_prec+1)& (0+255),7,b
 16345  0027C8  EFF0  F013         	goto	u6630
 16346  0027CC  51D2               	movf	(_prec+1)& (0+255),w,b
 16347  0027CE  E106               	bnz	u6631
 16348  0027D0  05D1               	decf	_prec& (0+255),w,b
 16349  0027D2  B0D8               	btfsc	status,0,c
 16350  0027D4  EFEE  F013         	goto	u6631
 16351  0027D8  EFF0  F013         	goto	u6630
 16352  0027DC                     u6631:
 16353  0027DC  EFF6  F013         	goto	l1282
 16354  0027E0                     u6630:
 16355  0027E0                     
 16356                           ; BSR set to: 0
 16357  0027E0  0E00               	movlw	0
 16358  0027E2  6E35               	movwf	(utoa@p+1)^0,c
 16359  0027E4  0E01               	movlw	1
 16360  0027E6  6E34               	movwf	utoa@p^0,c
 16361  0027E8  EFFA  F013         	goto	l1284
 16362  0027EC                     l1282:
 16363                           
 16364                           ; BSR set to: 0
 16365  0027EC  C0D1  F034         	movff	_prec,utoa@p
 16366  0027F0  C0D2  F035         	movff	_prec+1,utoa@p+1
 16367  0027F4                     l1284:
 16368                           
 16369                           ; BSR set to: 0
 16370                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
 16371  0027F4  C0CF  F036         	movff	_width,utoa@w
 16372  0027F8  C0D0  F037         	movff	_width+1,utoa@w+1
 16373                           
 16374                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
 16375  0027FC  C024  F038         	movff	utoa@d,utoa@n
 16376  002800  C025  F039         	movff	utoa@d+1,utoa@n+1
 16377  002804  C026  F03A         	movff	utoa@d+2,utoa@n+2
 16378  002808  C027  F03B         	movff	utoa@d+3,utoa@n+3
 16379  00280C  C028  F03C         	movff	utoa@d+4,utoa@n+4
 16380  002810  C029  F03D         	movff	utoa@d+5,utoa@n+5
 16381  002814  C02A  F03E         	movff	utoa@d+6,utoa@n+6
 16382  002818  C02B  F03F         	movff	utoa@d+7,utoa@n+7
 16383  00281C                     
 16384                           ; BSR set to: 0
 16385                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
 16386  00281C  0E00               	movlw	0
 16387  00281E  6E41               	movwf	(utoa@i+1)^0,c
 16388  002820  0E1F               	movlw	31
 16389  002822  6E40               	movwf	utoa@i^0,c
 16390  002824                     
 16391                           ; BSR set to: 0
 16392                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
 16393  002824  0E00               	movlw	0
 16394  002826  0102               	movlb	2	; () banked
 16395  002828  6FFC               	movwf	(_dbuf+31)& (0+255),b
 16396                           
 16397                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16398  00282A  EF8D  F014         	goto	l6916
 16399  00282E                     l6906:
 16400                           
 16401                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
 16402  00282E  0640               	decf	utoa@i^0,f,c
 16403  002830  A0D8               	btfss	status,0,c
 16404  002832  0641               	decf	(utoa@i+1)^0,f,c
 16405  002834                     
 16406                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
 16407  002834  0EDD               	movlw	low _dbuf
 16408  002836  2440               	addwf	utoa@i^0,w,c
 16409  002838  6ED9               	movwf	fsr2l,c
 16410  00283A  0E02               	movlw	high _dbuf
 16411  00283C  2041               	addwfc	(utoa@i+1)^0,w,c
 16412  00283E  6EDA               	movwf	fsr2h,c
 16413  002840  C038  F005         	movff	utoa@n,___lomod@dividend
 16414  002844  C039  F006         	movff	utoa@n+1,___lomod@dividend+1
 16415  002848  C03A  F007         	movff	utoa@n+2,___lomod@dividend+2
 16416  00284C  C03B  F008         	movff	utoa@n+3,___lomod@dividend+3
 16417  002850  C03C  F009         	movff	utoa@n+4,___lomod@dividend+4
 16418  002854  C03D  F00A         	movff	utoa@n+5,___lomod@dividend+5
 16419  002858  C03E  F00B         	movff	utoa@n+6,___lomod@dividend+6
 16420  00285C  C03F  F00C         	movff	utoa@n+7,___lomod@dividend+7
 16421  002860  0E0A               	movlw	10
 16422  002862  6E0D               	movwf	___lomod@divisor^0,c
 16423  002864  0E00               	movlw	0
 16424  002866  6E0E               	movwf	(___lomod@divisor+1)^0,c
 16425  002868  0E00               	movlw	0
 16426  00286A  6E0F               	movwf	(___lomod@divisor+2)^0,c
 16427  00286C  0E00               	movlw	0
 16428  00286E  6E10               	movwf	(___lomod@divisor+3)^0,c
 16429  002870  0E00               	movlw	0
 16430  002872  6E11               	movwf	(___lomod@divisor+4)^0,c
 16431  002874  0E00               	movlw	0
 16432  002876  6E12               	movwf	(___lomod@divisor+5)^0,c
 16433  002878  0E00               	movlw	0
 16434  00287A  6E13               	movwf	(___lomod@divisor+6)^0,c
 16435  00287C  0E00               	movlw	0
 16436  00287E  6E14               	movwf	(___lomod@divisor+7)^0,c
 16437  002880  EC77  F01F         	call	___lomod	;wreg free
 16438  002884  C005  F02C         	movff	?___lomod,??_utoa
 16439  002888  C006  F02D         	movff	?___lomod+1,??_utoa+1
 16440  00288C  C007  F02E         	movff	?___lomod+2,??_utoa+2
 16441  002890  C008  F02F         	movff	?___lomod+3,??_utoa+3
 16442  002894  C009  F030         	movff	?___lomod+4,??_utoa+4
 16443  002898  C00A  F031         	movff	?___lomod+5,??_utoa+5
 16444  00289C  C00B  F032         	movff	?___lomod+6,??_utoa+6
 16445  0028A0  C00C  F033         	movff	?___lomod+7,??_utoa+7
 16446  0028A4  502C               	movf	??_utoa^0,w,c
 16447  0028A6  0F30               	addlw	48
 16448  0028A8  6EDF               	movwf	indf2,c
 16449  0028AA                     
 16450                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
 16451  0028AA  0634               	decf	utoa@p^0,f,c
 16452  0028AC  A0D8               	btfss	status,0,c
 16453  0028AE  0635               	decf	(utoa@p+1)^0,f,c
 16454  0028B0                     
 16455                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
 16456  0028B0  0636               	decf	utoa@w^0,f,c
 16457  0028B2  A0D8               	btfss	status,0,c
 16458  0028B4  0637               	decf	(utoa@w+1)^0,f,c
 16459  0028B6                     
 16460                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
 16461  0028B6  C038  F005         	movff	utoa@n,___lodiv@dividend
 16462  0028BA  C039  F006         	movff	utoa@n+1,___lodiv@dividend+1
 16463  0028BE  C03A  F007         	movff	utoa@n+2,___lodiv@dividend+2
 16464  0028C2  C03B  F008         	movff	utoa@n+3,___lodiv@dividend+3
 16465  0028C6  C03C  F009         	movff	utoa@n+4,___lodiv@dividend+4
 16466  0028CA  C03D  F00A         	movff	utoa@n+5,___lodiv@dividend+5
 16467  0028CE  C03E  F00B         	movff	utoa@n+6,___lodiv@dividend+6
 16468  0028D2  C03F  F00C         	movff	utoa@n+7,___lodiv@dividend+7
 16469  0028D6  0E0A               	movlw	10
 16470  0028D8  6E0D               	movwf	___lodiv@divisor^0,c
 16471  0028DA  0E00               	movlw	0
 16472  0028DC  6E0E               	movwf	(___lodiv@divisor+1)^0,c
 16473  0028DE  0E00               	movlw	0
 16474  0028E0  6E0F               	movwf	(___lodiv@divisor+2)^0,c
 16475  0028E2  0E00               	movlw	0
 16476  0028E4  6E10               	movwf	(___lodiv@divisor+3)^0,c
 16477  0028E6  0E00               	movlw	0
 16478  0028E8  6E11               	movwf	(___lodiv@divisor+4)^0,c
 16479  0028EA  0E00               	movlw	0
 16480  0028EC  6E12               	movwf	(___lodiv@divisor+5)^0,c
 16481  0028EE  0E00               	movlw	0
 16482  0028F0  6E13               	movwf	(___lodiv@divisor+6)^0,c
 16483  0028F2  0E00               	movlw	0
 16484  0028F4  6E14               	movwf	(___lodiv@divisor+7)^0,c
 16485  0028F6  ECBA  F01D         	call	___lodiv	;wreg free
 16486  0028FA  C005  F038         	movff	?___lodiv,utoa@n
 16487  0028FE  C006  F039         	movff	?___lodiv+1,utoa@n+1
 16488  002902  C007  F03A         	movff	?___lodiv+2,utoa@n+2
 16489  002906  C008  F03B         	movff	?___lodiv+3,utoa@n+3
 16490  00290A  C009  F03C         	movff	?___lodiv+4,utoa@n+4
 16491  00290E  C00A  F03D         	movff	?___lodiv+5,utoa@n+5
 16492  002912  C00B  F03E         	movff	?___lodiv+6,utoa@n+6
 16493  002916  C00C  F03F         	movff	?___lodiv+7,utoa@n+7
 16494  00291A                     l6916:
 16495                           
 16496                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16497  00291A  5040               	movf	utoa@i^0,w,c
 16498  00291C  1041               	iorwf	(utoa@i+1)^0,w,c
 16499  00291E  B4D8               	btfsc	status,2,c
 16500  002920  EF94  F014         	goto	u6641
 16501  002924  EF96  F014         	goto	u6640
 16502  002928                     u6641:
 16503  002928  EFC6  F014         	goto	l6926
 16504  00292C                     u6640:
 16505  00292C  5038               	movf	utoa@n^0,w,c
 16506  00292E  1039               	iorwf	(utoa@n+1)^0,w,c
 16507  002930  103A               	iorwf	(utoa@n+2)^0,w,c
 16508  002932  103B               	iorwf	(utoa@n+3)^0,w,c
 16509  002934  103C               	iorwf	(utoa@n+4)^0,w,c
 16510  002936  103D               	iorwf	(utoa@n+5)^0,w,c
 16511  002938  103E               	iorwf	(utoa@n+6)^0,w,c
 16512  00293A  103F               	iorwf	(utoa@n+7)^0,w,c
 16513  00293C  A4D8               	btfss	status,2,c
 16514  00293E  EFA3  F014         	goto	u6651
 16515  002942  EFA5  F014         	goto	u6650
 16516  002946                     u6651:
 16517  002946  EF17  F014         	goto	l6906
 16518  00294A                     u6650:
 16519  00294A  BE35               	btfsc	(utoa@p+1)^0,7,c
 16520  00294C  EFB2  F014         	goto	u6660
 16521  002950  5035               	movf	(utoa@p+1)^0,w,c
 16522  002952  E106               	bnz	u6661
 16523  002954  0434               	decf	utoa@p^0,w,c
 16524  002956  B0D8               	btfsc	status,0,c
 16525  002958  EFB0  F014         	goto	u6661
 16526  00295C  EFB2  F014         	goto	u6660
 16527  002960                     u6661:
 16528  002960  EF17  F014         	goto	l6906
 16529  002964                     u6660:
 16530  002964  BE37               	btfsc	(utoa@w+1)^0,7,c
 16531  002966  EFBD  F014         	goto	u6671
 16532  00296A  5037               	movf	(utoa@w+1)^0,w,c
 16533  00296C  E108               	bnz	u6670
 16534  00296E  0436               	decf	utoa@w^0,w,c
 16535  002970  A0D8               	btfss	status,0,c
 16536  002972  EFBD  F014         	goto	u6671
 16537  002976  EFBF  F014         	goto	u6670
 16538  00297A                     u6671:
 16539  00297A  EFC6  F014         	goto	l6926
 16540  00297E                     u6670:
 16541  00297E  B257               	btfsc	_flags^0,1,c
 16542  002980  EFC4  F014         	goto	u6681
 16543  002984  EFC6  F014         	goto	u6680
 16544  002988                     u6681:
 16545  002988  EF17  F014         	goto	l6906
 16546  00298C                     u6680:
 16547  00298C                     l6926:
 16548                           
 16549                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
 16550  00298C  C022  F017         	movff	utoa@fp,pad@fp
 16551  002990  C023  F018         	movff	utoa@fp+1,pad@fp+1
 16552  002994  0EDD               	movlw	low _dbuf
 16553  002996  2440               	addwf	utoa@i^0,w,c
 16554  002998  6E19               	movwf	pad@buf^0,c
 16555  00299A  0E02               	movlw	high _dbuf
 16556  00299C  2041               	addwfc	(utoa@i+1)^0,w,c
 16557  00299E  6E1A               	movwf	(pad@buf+1)^0,c
 16558  0029A0  C036  F01B         	movff	utoa@w,pad@p
 16559  0029A4  C037  F01C         	movff	utoa@w+1,pad@p+1
 16560  0029A8  EC41  F020         	call	_pad	;wreg free
 16561  0029AC  C017  F022         	movff	?_pad,?_utoa
 16562  0029B0  C018  F023         	movff	?_pad+1,?_utoa+1
 16563  0029B4  0012               	return		;funcret
 16564  0029B6                     __end_of_utoa:
 16565                           	opt callstack 0
 16566                           
 16567 ;; *************** function ___lomod *****************
 16568 ;; Defined at:
 16569 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
 16570 ;; Parameters:    Size  Location     Type
 16571 ;;  dividend        8    4[COMRAM] unsigned long long 
 16572 ;;  divisor         8   12[COMRAM] unsigned long long 
 16573 ;; Auto vars:     Size  Location     Type
 16574 ;;  counter         1   20[COMRAM] unsigned char 
 16575 ;; Return value:  Size  Location     Type
 16576 ;;                  8    4[COMRAM] unsigned long long 
 16577 ;; Registers used:
 16578 ;;		wreg, status,2, status,0
 16579 ;; Tracked objects:
 16580 ;;		On entry : 0/0
 16581 ;;		On exit  : 0/0
 16582 ;;		Unchanged: 0/0
 16583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16584 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16585 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16587 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16588 ;;Total ram usage:       17 bytes
 16589 ;; Hardware stack levels used:    1
 16590 ;; Hardware stack levels required when called:    4
 16591 ;; This function calls:
 16592 ;;		Nothing
 16593 ;; This function is called by:
 16594 ;;		_utoa
 16595 ;; This function uses a non-reentrant model
 16596 ;;
 16597                           
 16598                           	psect	text60
 16599  003EEE                     __ptext60:
 16600                           	opt callstack 0
 16601  003EEE                     ___lomod:
 16602                           	opt callstack 22
 16603  003EEE  500D               	movf	___lomod@divisor^0,w,c
 16604  003EF0  100E               	iorwf	(___lomod@divisor+1)^0,w,c
 16605  003EF2  100F               	iorwf	(___lomod@divisor+2)^0,w,c
 16606  003EF4  1010               	iorwf	(___lomod@divisor+3)^0,w,c
 16607  003EF6  1011               	iorwf	(___lomod@divisor+4)^0,w,c
 16608  003EF8  1012               	iorwf	(___lomod@divisor+5)^0,w,c
 16609  003EFA  1013               	iorwf	(___lomod@divisor+6)^0,w,c
 16610  003EFC  1014               	iorwf	(___lomod@divisor+7)^0,w,c
 16611  003EFE  B4D8               	btfsc	status,2,c
 16612  003F00  EF84  F01F         	goto	u6321
 16613  003F04  EF86  F01F         	goto	u6320
 16614  003F08                     u6321:
 16615  003F08  EFCE  F01F         	goto	l1814
 16616  003F0C                     u6320:
 16617  003F0C  0E01               	movlw	1
 16618  003F0E  6E15               	movwf	___lomod@counter^0,c
 16619  003F10  EF94  F01F         	goto	l6768
 16620  003F14                     l6766:
 16621  003F14  90D8               	bcf	status,0,c
 16622  003F16  360D               	rlcf	___lomod@divisor^0,f,c
 16623  003F18  360E               	rlcf	(___lomod@divisor+1)^0,f,c
 16624  003F1A  360F               	rlcf	(___lomod@divisor+2)^0,f,c
 16625  003F1C  3610               	rlcf	(___lomod@divisor+3)^0,f,c
 16626  003F1E  3611               	rlcf	(___lomod@divisor+4)^0,f,c
 16627  003F20  3612               	rlcf	(___lomod@divisor+5)^0,f,c
 16628  003F22  3613               	rlcf	(___lomod@divisor+6)^0,f,c
 16629  003F24  3614               	rlcf	(___lomod@divisor+7)^0,f,c
 16630  003F26  2A15               	incf	___lomod@counter^0,f,c
 16631  003F28                     l6768:
 16632  003F28  AE14               	btfss	(___lomod@divisor+7)^0,7,c
 16633  003F2A  EF99  F01F         	goto	u6331
 16634  003F2E  EF9B  F01F         	goto	u6330
 16635  003F32                     u6331:
 16636  003F32  EF8A  F01F         	goto	l6766
 16637  003F36                     u6330:
 16638  003F36                     l6770:
 16639  003F36  500D               	movf	___lomod@divisor^0,w,c
 16640  003F38  5C05               	subwf	___lomod@dividend^0,w,c
 16641  003F3A  500E               	movf	(___lomod@divisor+1)^0,w,c
 16642  003F3C  5806               	subwfb	(___lomod@dividend+1)^0,w,c
 16643  003F3E  500F               	movf	(___lomod@divisor+2)^0,w,c
 16644  003F40  5807               	subwfb	(___lomod@dividend+2)^0,w,c
 16645  003F42  5010               	movf	(___lomod@divisor+3)^0,w,c
 16646  003F44  5808               	subwfb	(___lomod@dividend+3)^0,w,c
 16647  003F46  5011               	movf	(___lomod@divisor+4)^0,w,c
 16648  003F48  5809               	subwfb	(___lomod@dividend+4)^0,w,c
 16649  003F4A  5012               	movf	(___lomod@divisor+5)^0,w,c
 16650  003F4C  580A               	subwfb	(___lomod@dividend+5)^0,w,c
 16651  003F4E  5013               	movf	(___lomod@divisor+6)^0,w,c
 16652  003F50  580B               	subwfb	(___lomod@dividend+6)^0,w,c
 16653  003F52  5014               	movf	(___lomod@divisor+7)^0,w,c
 16654  003F54  580C               	subwfb	(___lomod@dividend+7)^0,w,c
 16655  003F56  A0D8               	btfss	status,0,c
 16656  003F58  EFB0  F01F         	goto	u6341
 16657  003F5C  EFB2  F01F         	goto	u6340
 16658  003F60                     u6341:
 16659  003F60  EFC2  F01F         	goto	l6774
 16660  003F64                     u6340:
 16661  003F64  500D               	movf	___lomod@divisor^0,w,c
 16662  003F66  5E05               	subwf	___lomod@dividend^0,f,c
 16663  003F68  500E               	movf	(___lomod@divisor+1)^0,w,c
 16664  003F6A  5A06               	subwfb	(___lomod@dividend+1)^0,f,c
 16665  003F6C  500F               	movf	(___lomod@divisor+2)^0,w,c
 16666  003F6E  5A07               	subwfb	(___lomod@dividend+2)^0,f,c
 16667  003F70  5010               	movf	(___lomod@divisor+3)^0,w,c
 16668  003F72  5A08               	subwfb	(___lomod@dividend+3)^0,f,c
 16669  003F74  5011               	movf	(___lomod@divisor+4)^0,w,c
 16670  003F76  5A09               	subwfb	(___lomod@dividend+4)^0,f,c
 16671  003F78  5012               	movf	(___lomod@divisor+5)^0,w,c
 16672  003F7A  5A0A               	subwfb	(___lomod@dividend+5)^0,f,c
 16673  003F7C  5013               	movf	(___lomod@divisor+6)^0,w,c
 16674  003F7E  5A0B               	subwfb	(___lomod@dividend+6)^0,f,c
 16675  003F80  5014               	movf	(___lomod@divisor+7)^0,w,c
 16676  003F82  5A0C               	subwfb	(___lomod@dividend+7)^0,f,c
 16677  003F84                     l6774:
 16678  003F84  90D8               	bcf	status,0,c
 16679  003F86  3214               	rrcf	(___lomod@divisor+7)^0,f,c
 16680  003F88  3213               	rrcf	(___lomod@divisor+6)^0,f,c
 16681  003F8A  3212               	rrcf	(___lomod@divisor+5)^0,f,c
 16682  003F8C  3211               	rrcf	(___lomod@divisor+4)^0,f,c
 16683  003F8E  3210               	rrcf	(___lomod@divisor+3)^0,f,c
 16684  003F90  320F               	rrcf	(___lomod@divisor+2)^0,f,c
 16685  003F92  320E               	rrcf	(___lomod@divisor+1)^0,f,c
 16686  003F94  320D               	rrcf	___lomod@divisor^0,f,c
 16687  003F96  2E15               	decfsz	___lomod@counter^0,f,c
 16688  003F98  EF9B  F01F         	goto	l6770
 16689  003F9C                     l1814:
 16690  003F9C  C005  F005         	movff	___lomod@dividend,?___lomod
 16691  003FA0  C006  F006         	movff	___lomod@dividend+1,?___lomod+1
 16692  003FA4  C007  F007         	movff	___lomod@dividend+2,?___lomod+2
 16693  003FA8  C008  F008         	movff	___lomod@dividend+3,?___lomod+3
 16694  003FAC  C009  F009         	movff	___lomod@dividend+4,?___lomod+4
 16695  003FB0  C00A  F00A         	movff	___lomod@dividend+5,?___lomod+5
 16696  003FB4  C00B  F00B         	movff	___lomod@dividend+6,?___lomod+6
 16697  003FB8  C00C  F00C         	movff	___lomod@dividend+7,?___lomod+7
 16698  003FBC  0012               	return		;funcret
 16699  003FBE                     __end_of___lomod:
 16700                           	opt callstack 0
 16701                           
 16702 ;; *************** function ___lodiv *****************
 16703 ;; Defined at:
 16704 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
 16705 ;; Parameters:    Size  Location     Type
 16706 ;;  dividend        8    4[COMRAM] unsigned long long 
 16707 ;;  divisor         8   12[COMRAM] unsigned long long 
 16708 ;; Auto vars:     Size  Location     Type
 16709 ;;  quotient        8   20[COMRAM] unsigned long long 
 16710 ;;  counter         1   28[COMRAM] unsigned char 
 16711 ;; Return value:  Size  Location     Type
 16712 ;;                  8    4[COMRAM] unsigned long long 
 16713 ;; Registers used:
 16714 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16715 ;; Tracked objects:
 16716 ;;		On entry : 0/0
 16717 ;;		On exit  : 0/0
 16718 ;;		Unchanged: 0/0
 16719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16720 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16721 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16723 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16724 ;;Total ram usage:       25 bytes
 16725 ;; Hardware stack levels used:    1
 16726 ;; Hardware stack levels required when called:    4
 16727 ;; This function calls:
 16728 ;;		Nothing
 16729 ;; This function is called by:
 16730 ;;		_utoa
 16731 ;; This function uses a non-reentrant model
 16732 ;;
 16733                           
 16734                           	psect	text61
 16735  003B74                     __ptext61:
 16736                           	opt callstack 0
 16737  003B74                     ___lodiv:
 16738                           	opt callstack 22
 16739  003B74  EE20  F015         	lfsr	2,___lodiv@quotient
 16740  003B78  0E07               	movlw	7
 16741  003B7A                     u6281:
 16742  003B7A  6ADE               	clrf	postinc2,c
 16743  003B7C  06E8               	decf	wreg,f,c
 16744  003B7E  E2FD               	bc	u6281
 16745  003B80  500D               	movf	___lodiv@divisor^0,w,c
 16746  003B82  100E               	iorwf	(___lodiv@divisor+1)^0,w,c
 16747  003B84  100F               	iorwf	(___lodiv@divisor+2)^0,w,c
 16748  003B86  1010               	iorwf	(___lodiv@divisor+3)^0,w,c
 16749  003B88  1011               	iorwf	(___lodiv@divisor+4)^0,w,c
 16750  003B8A  1012               	iorwf	(___lodiv@divisor+5)^0,w,c
 16751  003B8C  1013               	iorwf	(___lodiv@divisor+6)^0,w,c
 16752  003B8E  1014               	iorwf	(___lodiv@divisor+7)^0,w,c
 16753  003B90  B4D8               	btfsc	status,2,c
 16754  003B92  EFCD  F01D         	goto	u6291
 16755  003B96  EFCF  F01D         	goto	u6290
 16756  003B9A                     u6291:
 16757  003B9A  EF21  F01E         	goto	l1804
 16758  003B9E                     u6290:
 16759  003B9E  0E01               	movlw	1
 16760  003BA0  6E1D               	movwf	___lodiv@counter^0,c
 16761  003BA2  EFDD  F01D         	goto	l6748
 16762  003BA6                     l6746:
 16763  003BA6  90D8               	bcf	status,0,c
 16764  003BA8  360D               	rlcf	___lodiv@divisor^0,f,c
 16765  003BAA  360E               	rlcf	(___lodiv@divisor+1)^0,f,c
 16766  003BAC  360F               	rlcf	(___lodiv@divisor+2)^0,f,c
 16767  003BAE  3610               	rlcf	(___lodiv@divisor+3)^0,f,c
 16768  003BB0  3611               	rlcf	(___lodiv@divisor+4)^0,f,c
 16769  003BB2  3612               	rlcf	(___lodiv@divisor+5)^0,f,c
 16770  003BB4  3613               	rlcf	(___lodiv@divisor+6)^0,f,c
 16771  003BB6  3614               	rlcf	(___lodiv@divisor+7)^0,f,c
 16772  003BB8  2A1D               	incf	___lodiv@counter^0,f,c
 16773  003BBA                     l6748:
 16774  003BBA  AE14               	btfss	(___lodiv@divisor+7)^0,7,c
 16775  003BBC  EFE2  F01D         	goto	u6301
 16776  003BC0  EFE4  F01D         	goto	u6300
 16777  003BC4                     u6301:
 16778  003BC4  EFD3  F01D         	goto	l6746
 16779  003BC8                     u6300:
 16780  003BC8                     l6750:
 16781  003BC8  90D8               	bcf	status,0,c
 16782  003BCA  3615               	rlcf	___lodiv@quotient^0,f,c
 16783  003BCC  3616               	rlcf	(___lodiv@quotient+1)^0,f,c
 16784  003BCE  3617               	rlcf	(___lodiv@quotient+2)^0,f,c
 16785  003BD0  3618               	rlcf	(___lodiv@quotient+3)^0,f,c
 16786  003BD2  3619               	rlcf	(___lodiv@quotient+4)^0,f,c
 16787  003BD4  361A               	rlcf	(___lodiv@quotient+5)^0,f,c
 16788  003BD6  361B               	rlcf	(___lodiv@quotient+6)^0,f,c
 16789  003BD8  361C               	rlcf	(___lodiv@quotient+7)^0,f,c
 16790  003BDA  500D               	movf	___lodiv@divisor^0,w,c
 16791  003BDC  5C05               	subwf	___lodiv@dividend^0,w,c
 16792  003BDE  500E               	movf	(___lodiv@divisor+1)^0,w,c
 16793  003BE0  5806               	subwfb	(___lodiv@dividend+1)^0,w,c
 16794  003BE2  500F               	movf	(___lodiv@divisor+2)^0,w,c
 16795  003BE4  5807               	subwfb	(___lodiv@dividend+2)^0,w,c
 16796  003BE6  5010               	movf	(___lodiv@divisor+3)^0,w,c
 16797  003BE8  5808               	subwfb	(___lodiv@dividend+3)^0,w,c
 16798  003BEA  5011               	movf	(___lodiv@divisor+4)^0,w,c
 16799  003BEC  5809               	subwfb	(___lodiv@dividend+4)^0,w,c
 16800  003BEE  5012               	movf	(___lodiv@divisor+5)^0,w,c
 16801  003BF0  580A               	subwfb	(___lodiv@dividend+5)^0,w,c
 16802  003BF2  5013               	movf	(___lodiv@divisor+6)^0,w,c
 16803  003BF4  580B               	subwfb	(___lodiv@dividend+6)^0,w,c
 16804  003BF6  5014               	movf	(___lodiv@divisor+7)^0,w,c
 16805  003BF8  580C               	subwfb	(___lodiv@dividend+7)^0,w,c
 16806  003BFA  A0D8               	btfss	status,0,c
 16807  003BFC  EF02  F01E         	goto	u6311
 16808  003C00  EF04  F01E         	goto	u6310
 16809  003C04                     u6311:
 16810  003C04  EF15  F01E         	goto	l6758
 16811  003C08                     u6310:
 16812  003C08  500D               	movf	___lodiv@divisor^0,w,c
 16813  003C0A  5E05               	subwf	___lodiv@dividend^0,f,c
 16814  003C0C  500E               	movf	(___lodiv@divisor+1)^0,w,c
 16815  003C0E  5A06               	subwfb	(___lodiv@dividend+1)^0,f,c
 16816  003C10  500F               	movf	(___lodiv@divisor+2)^0,w,c
 16817  003C12  5A07               	subwfb	(___lodiv@dividend+2)^0,f,c
 16818  003C14  5010               	movf	(___lodiv@divisor+3)^0,w,c
 16819  003C16  5A08               	subwfb	(___lodiv@dividend+3)^0,f,c
 16820  003C18  5011               	movf	(___lodiv@divisor+4)^0,w,c
 16821  003C1A  5A09               	subwfb	(___lodiv@dividend+4)^0,f,c
 16822  003C1C  5012               	movf	(___lodiv@divisor+5)^0,w,c
 16823  003C1E  5A0A               	subwfb	(___lodiv@dividend+5)^0,f,c
 16824  003C20  5013               	movf	(___lodiv@divisor+6)^0,w,c
 16825  003C22  5A0B               	subwfb	(___lodiv@dividend+6)^0,f,c
 16826  003C24  5014               	movf	(___lodiv@divisor+7)^0,w,c
 16827  003C26  5A0C               	subwfb	(___lodiv@dividend+7)^0,f,c
 16828  003C28  8015               	bsf	___lodiv@quotient^0,0,c
 16829  003C2A                     l6758:
 16830  003C2A  90D8               	bcf	status,0,c
 16831  003C2C  3214               	rrcf	(___lodiv@divisor+7)^0,f,c
 16832  003C2E  3213               	rrcf	(___lodiv@divisor+6)^0,f,c
 16833  003C30  3212               	rrcf	(___lodiv@divisor+5)^0,f,c
 16834  003C32  3211               	rrcf	(___lodiv@divisor+4)^0,f,c
 16835  003C34  3210               	rrcf	(___lodiv@divisor+3)^0,f,c
 16836  003C36  320F               	rrcf	(___lodiv@divisor+2)^0,f,c
 16837  003C38  320E               	rrcf	(___lodiv@divisor+1)^0,f,c
 16838  003C3A  320D               	rrcf	___lodiv@divisor^0,f,c
 16839  003C3C  2E1D               	decfsz	___lodiv@counter^0,f,c
 16840  003C3E  EFE4  F01D         	goto	l6750
 16841  003C42                     l1804:
 16842  003C42  C015  F005         	movff	___lodiv@quotient,?___lodiv
 16843  003C46  C016  F006         	movff	___lodiv@quotient+1,?___lodiv+1
 16844  003C4A  C017  F007         	movff	___lodiv@quotient+2,?___lodiv+2
 16845  003C4E  C018  F008         	movff	___lodiv@quotient+3,?___lodiv+3
 16846  003C52  C019  F009         	movff	___lodiv@quotient+4,?___lodiv+4
 16847  003C56  C01A  F00A         	movff	___lodiv@quotient+5,?___lodiv+5
 16848  003C5A  C01B  F00B         	movff	___lodiv@quotient+6,?___lodiv+6
 16849  003C5E  C01C  F00C         	movff	___lodiv@quotient+7,?___lodiv+7
 16850  003C62  0012               	return		;funcret
 16851  003C64                     __end_of___lodiv:
 16852                           	opt callstack 0
 16853                           
 16854 ;; *************** function _stoa *****************
 16855 ;; Defined at:
 16856 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 16857 ;; Parameters:    Size  Location     Type
 16858 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
 16859 ;;		 -> NULL(0), 
 16860 ;;  s               2   17[COMRAM] PTR unsigned char 
 16861 ;;		 -> ?_printf(2), ValidateCmd@ConfName_1579(20), ValidateCmd@ConfName_1575(20), ValidateCmd@ConfName(20), 
 16862 ;;		 -> STR_97(9), STR_96(12), InitialiseString@RevNum(2), InitialiseString@PartNum(19), 
 16863 ;;		 -> InitialiseString@SerialNum(11), Command(16), 
 16864 ;; Auto vars:     Size  Location     Type
 16865 ;;  nuls            7   20[COMRAM] unsigned char [7]
 16866 ;;  l               2   35[COMRAM] int 
 16867 ;;  p               2   33[COMRAM] int 
 16868 ;;  cp              2   31[COMRAM] PTR unsigned char 
 16869 ;;		 -> ?_printf(2), stoa@nuls(7), ValidateCmd@ConfName_1579(20), ValidateCmd@ConfName_1575(20), 
 16870 ;;		 -> ValidateCmd@ConfName(20), STR_97(9), STR_96(12), InitialiseString@RevNum(2), 
 16871 ;;		 -> InitialiseString@PartNum(19), InitialiseString@SerialNum(11), Command(16), 
 16872 ;;  w               2   29[COMRAM] int 
 16873 ;;  i               2   27[COMRAM] int 
 16874 ;; Return value:  Size  Location     Type
 16875 ;;                  2   15[COMRAM] int 
 16876 ;; Registers used:
 16877 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16878 ;; Tracked objects:
 16879 ;;		On entry : 0/0
 16880 ;;		On exit  : 0/0
 16881 ;;		Unchanged: 0/0
 16882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16883 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16884 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16885 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16886 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16887 ;;Total ram usage:       22 bytes
 16888 ;; Hardware stack levels used:    1
 16889 ;; Hardware stack levels required when called:    7
 16890 ;; This function calls:
 16891 ;;		_fputc
 16892 ;;		_strlen
 16893 ;; This function is called by:
 16894 ;;		_vfpfcnvrt
 16895 ;; This function uses a non-reentrant model
 16896 ;;
 16897                           
 16898                           	psect	text62
 16899  002F12                     __ptext62:
 16900                           	opt callstack 0
 16901  002F12                     _stoa:
 16902                           	opt callstack 20
 16903  002F12                     
 16904                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
 16905  002F12  EE21  F086         	lfsr	2,stoa@F1139
 16906  002F16  EE10  F015         	lfsr	1,stoa@nuls
 16907  002F1A  0E06               	movlw	6
 16908  002F1C                     u6521:
 16909  002F1C  CFDB FFE3          	movff	plusw2,plusw1
 16910  002F20  06E8               	decf	wreg,f,c
 16911  002F22  E2FC               	bc	u6521
 16912  002F24                     
 16913                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
 16914  002F24  C012  F020         	movff	stoa@s,stoa@cp
 16915  002F28  C013  F021         	movff	stoa@s+1,stoa@cp+1
 16916  002F2C                     
 16917                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
 16918  002F2C  5020               	movf	stoa@cp^0,w,c
 16919  002F2E  1021               	iorwf	(stoa@cp+1)^0,w,c
 16920  002F30  A4D8               	btfss	status,2,c
 16921  002F32  EF9D  F017         	goto	u6531
 16922  002F36  EF9F  F017         	goto	u6530
 16923  002F3A                     u6531:
 16924  002F3A  EFA3  F017         	goto	l6860
 16925  002F3E                     u6530:
 16926  002F3E                     
 16927                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
 16928  002F3E  0E15               	movlw	low stoa@nuls
 16929  002F40  6E20               	movwf	stoa@cp^0,c
 16930  002F42  0E00               	movlw	high stoa@nuls
 16931  002F44  6E21               	movwf	(stoa@cp+1)^0,c
 16932  002F46                     l6860:
 16933                           
 16934                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
 16935  002F46  C020  F005         	movff	stoa@cp,strlen@s
 16936  002F4A  C021  F006         	movff	stoa@cp+1,strlen@s+1
 16937  002F4E  EC9C  F025         	call	_strlen	;wreg free
 16938  002F52  C005  F024         	movff	?_strlen,stoa@l
 16939  002F56  C006  F025         	movff	?_strlen+1,stoa@l+1
 16940  002F5A                     
 16941                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
 16942  002F5A  C0D1  F022         	movff	_prec,stoa@p
 16943  002F5E  C0D2  F023         	movff	_prec+1,stoa@p+1
 16944  002F62                     
 16945                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
 16946  002F62  BE23               	btfsc	(stoa@p+1)^0,7,c
 16947  002F64  EFB6  F017         	goto	u6541
 16948  002F68  EFB8  F017         	goto	u6540
 16949  002F6C                     u6541:
 16950  002F6C  EFCD  F017         	goto	l1263
 16951  002F70                     u6540:
 16952  002F70  5024               	movf	stoa@l^0,w,c
 16953  002F72  5C22               	subwf	stoa@p^0,w,c
 16954  002F74  5023               	movf	(stoa@p+1)^0,w,c
 16955  002F76  0A80               	xorlw	128
 16956  002F78  6E14               	movwf	??_stoa^0,c
 16957  002F7A  5025               	movf	(stoa@l+1)^0,w,c
 16958  002F7C  0A80               	xorlw	128
 16959  002F7E  5814               	subwfb	??_stoa^0,w,c
 16960  002F80  A0D8               	btfss	status,0,c
 16961  002F82  EFC5  F017         	goto	u6551
 16962  002F86  EFC7  F017         	goto	u6550
 16963  002F8A                     u6551:
 16964  002F8A  EFC9  F017         	goto	l1261
 16965  002F8E                     u6550:
 16966  002F8E  EFCD  F017         	goto	l1263
 16967  002F92                     l1261:
 16968  002F92  C022  F024         	movff	stoa@p,stoa@l
 16969  002F96  C023  F025         	movff	stoa@p+1,stoa@l+1
 16970  002F9A                     l1263:
 16971                           
 16972                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
 16973  002F9A  C024  F022         	movff	stoa@l,stoa@p
 16974  002F9E  C025  F023         	movff	stoa@l+1,stoa@p+1
 16975                           
 16976                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
 16977  002FA2  C0CF  F01E         	movff	_width,stoa@w
 16978  002FA6  C0D0  F01F         	movff	_width+1,stoa@w+1
 16979                           
 16980                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
 16981  002FAA  B057               	btfsc	_flags^0,0,c
 16982  002FAC  EFDA  F017         	goto	u6561
 16983  002FB0  EFDC  F017         	goto	u6560
 16984  002FB4                     u6561:
 16985  002FB4  EFF9  F017         	goto	l6876
 16986  002FB8                     u6560:
 16987  002FB8  EFEA  F017         	goto	l6874
 16988  002FBC                     l6870:
 16989                           
 16990                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
 16991  002FBC  0E00               	movlw	0
 16992  002FBE  6E08               	movwf	(fputc@c+1)^0,c
 16993  002FC0  0E20               	movlw	32
 16994  002FC2  6E07               	movwf	fputc@c^0,c
 16995  002FC4  C010  F009         	movff	stoa@fp,fputc@fp
 16996  002FC8  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
 16997  002FCC  EC12  F022         	call	_fputc	;wreg free
 16998  002FD0                     
 16999                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
 17000  002FD0  4A24               	infsnz	stoa@l^0,f,c
 17001  002FD2  2A25               	incf	(stoa@l+1)^0,f,c
 17002  002FD4                     l6874:
 17003                           
 17004                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
 17005  002FD4  501E               	movf	stoa@w^0,w,c
 17006  002FD6  5C24               	subwf	stoa@l^0,w,c
 17007  002FD8  5025               	movf	(stoa@l+1)^0,w,c
 17008  002FDA  0A80               	xorlw	128
 17009  002FDC  6E14               	movwf	??_stoa^0,c
 17010  002FDE  501F               	movf	(stoa@w+1)^0,w,c
 17011  002FE0  0A80               	xorlw	128
 17012  002FE2  5814               	subwfb	??_stoa^0,w,c
 17013  002FE4  A0D8               	btfss	status,0,c
 17014  002FE6  EFF7  F017         	goto	u6571
 17015  002FEA  EFF9  F017         	goto	u6570
 17016  002FEE                     u6571:
 17017  002FEE  EFDE  F017         	goto	l6870
 17018  002FF2                     u6570:
 17019  002FF2                     l6876:
 17020                           
 17021                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
 17022  002FF2  0E00               	movlw	0
 17023  002FF4  6E1D               	movwf	(stoa@i+1)^0,c
 17024  002FF6  0E00               	movlw	0
 17025  002FF8  6E1C               	movwf	stoa@i^0,c
 17026                           
 17027                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 17028  002FFA  EF1E  F018         	goto	l6884
 17029  002FFE                     l6878:
 17030                           
 17031                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
 17032  002FFE  C020  FFF6         	movff	stoa@cp,tblptrl
 17033  003002  C021  FFF7         	movff	stoa@cp+1,tblptrh
 17034  003006  0E00               	movlw	low (__mediumconst shr (0+16))
 17035  003008  6EF8               	movwf	tblptru,c
 17036  00300A  0E0E               	movlw	(high __ramtop+-1)
 17037  00300C  64F7               	cpfsgt	tblptrh,c
 17038  00300E  D003               	bra	u6587
 17039  003010  0008               	tblrd		*
 17040  003012  50F5               	movf	tablat,w,c
 17041  003014  D005               	bra	u6580
 17042  003016                     u6587:
 17043  003016  CFF6 FFE9          	movff	tblptrl,fsr0l
 17044  00301A  CFF7 FFEA          	movff	tblptrh,fsr0h
 17045  00301E  50EF               	movf	indf0,w,c
 17046  003020                     u6580:
 17047  003020  6E14               	movwf	??_stoa^0,c
 17048  003022  5014               	movf	??_stoa^0,w,c
 17049  003024  6E07               	movwf	fputc@c^0,c
 17050  003026  6A08               	clrf	(fputc@c+1)^0,c
 17051  003028  C010  F009         	movff	stoa@fp,fputc@fp
 17052  00302C  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
 17053  003030  EC12  F022         	call	_fputc	;wreg free
 17054  003034                     
 17055                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
 17056  003034  4A20               	infsnz	stoa@cp^0,f,c
 17057  003036  2A21               	incf	(stoa@cp+1)^0,f,c
 17058  003038                     
 17059                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
 17060  003038  4A1C               	infsnz	stoa@i^0,f,c
 17061  00303A  2A1D               	incf	(stoa@i+1)^0,f,c
 17062  00303C                     l6884:
 17063                           
 17064                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 17065  00303C  5022               	movf	stoa@p^0,w,c
 17066  00303E  5C1C               	subwf	stoa@i^0,w,c
 17067  003040  501D               	movf	(stoa@i+1)^0,w,c
 17068  003042  0A80               	xorlw	128
 17069  003044  6E14               	movwf	??_stoa^0,c
 17070  003046  5023               	movf	(stoa@p+1)^0,w,c
 17071  003048  0A80               	xorlw	128
 17072  00304A  5814               	subwfb	??_stoa^0,w,c
 17073  00304C  A0D8               	btfss	status,0,c
 17074  00304E  EF2B  F018         	goto	u6591
 17075  003052  EF2D  F018         	goto	u6590
 17076  003056                     u6591:
 17077  003056  EFFF  F017         	goto	l6878
 17078  00305A                     u6590:
 17079  00305A                     
 17080                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
 17081  00305A  A057               	btfss	_flags^0,0,c
 17082  00305C  EF32  F018         	goto	u6601
 17083  003060  EF34  F018         	goto	u6600
 17084  003064                     u6601:
 17085  003064  EF51  F018         	goto	l1273
 17086  003068                     u6600:
 17087  003068  EF42  F018         	goto	l6892
 17088  00306C                     l6888:
 17089                           
 17090                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
 17091  00306C  0E00               	movlw	0
 17092  00306E  6E08               	movwf	(fputc@c+1)^0,c
 17093  003070  0E20               	movlw	32
 17094  003072  6E07               	movwf	fputc@c^0,c
 17095  003074  C010  F009         	movff	stoa@fp,fputc@fp
 17096  003078  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
 17097  00307C  EC12  F022         	call	_fputc	;wreg free
 17098  003080                     
 17099                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
 17100  003080  4A24               	infsnz	stoa@l^0,f,c
 17101  003082  2A25               	incf	(stoa@l+1)^0,f,c
 17102  003084                     l6892:
 17103                           
 17104                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
 17105  003084  501E               	movf	stoa@w^0,w,c
 17106  003086  5C24               	subwf	stoa@l^0,w,c
 17107  003088  5025               	movf	(stoa@l+1)^0,w,c
 17108  00308A  0A80               	xorlw	128
 17109  00308C  6E14               	movwf	??_stoa^0,c
 17110  00308E  501F               	movf	(stoa@w+1)^0,w,c
 17111  003090  0A80               	xorlw	128
 17112  003092  5814               	subwfb	??_stoa^0,w,c
 17113  003094  A0D8               	btfss	status,0,c
 17114  003096  EF4F  F018         	goto	u6611
 17115  00309A  EF51  F018         	goto	u6610
 17116  00309E                     u6611:
 17117  00309E  EF36  F018         	goto	l6888
 17118  0030A2                     u6610:
 17119  0030A2                     l1273:
 17120                           
 17121                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
 17122  0030A2  C024  F010         	movff	stoa@l,?_stoa
 17123  0030A6  C025  F011         	movff	stoa@l+1,?_stoa+1
 17124  0030AA  0012               	return		;funcret
 17125  0030AC                     __end_of_stoa:
 17126                           	opt callstack 0
 17127                           
 17128 ;; *************** function _dtoa *****************
 17129 ;; Defined at:
 17130 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 17131 ;; Parameters:    Size  Location     Type
 17132 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
 17133 ;;		 -> NULL(0), 
 17134 ;;  d               8   35[COMRAM] long long 
 17135 ;; Auto vars:     Size  Location     Type
 17136 ;;  n               8   59[COMRAM] long long 
 17137 ;;  i               2   67[COMRAM] int 
 17138 ;;  s               2   57[COMRAM] int 
 17139 ;;  w               2   55[COMRAM] int 
 17140 ;;  p               2   53[COMRAM] int 
 17141 ;; Return value:  Size  Location     Type
 17142 ;;                  2   33[COMRAM] int 
 17143 ;; Registers used:
 17144 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17145 ;; Tracked objects:
 17146 ;;		On entry : 0/0
 17147 ;;		On exit  : 0/0
 17148 ;;		Unchanged: 0/0
 17149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17150 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17151 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17152 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17153 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17154 ;;Total ram usage:       36 bytes
 17155 ;; Hardware stack levels used:    1
 17156 ;; Hardware stack levels required when called:    9
 17157 ;; This function calls:
 17158 ;;		___aodiv
 17159 ;;		___aomod
 17160 ;;		_abs
 17161 ;;		_pad
 17162 ;; This function is called by:
 17163 ;;		_vfpfcnvrt
 17164 ;; This function uses a non-reentrant model
 17165 ;;
 17166                           
 17167                           	psect	text63
 17168  001D04                     __ptext63:
 17169                           	opt callstack 0
 17170  001D04                     _dtoa:
 17171                           	opt callstack 18
 17172  001D04                     
 17173                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
 17174  001D04  C024  F03C         	movff	dtoa@d,dtoa@n
 17175  001D08  C025  F03D         	movff	dtoa@d+1,dtoa@n+1
 17176  001D0C  C026  F03E         	movff	dtoa@d+2,dtoa@n+2
 17177  001D10  C027  F03F         	movff	dtoa@d+3,dtoa@n+3
 17178  001D14  C028  F040         	movff	dtoa@d+4,dtoa@n+4
 17179  001D18  C029  F041         	movff	dtoa@d+5,dtoa@n+5
 17180  001D1C  C02A  F042         	movff	dtoa@d+6,dtoa@n+6
 17181  001D20  C02B  F043         	movff	dtoa@d+7,dtoa@n+7
 17182  001D24                     
 17183                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 17184  001D24  BE43               	btfsc	(dtoa@n+7)^0,7,c
 17185  001D26  EF97  F00E         	goto	u6371
 17186  001D2A  EF9A  F00E         	goto	u6370
 17187  001D2E                     u6371:
 17188  001D2E  0E01               	movlw	1
 17189  001D30  EF9B  F00E         	goto	u6380
 17190  001D34                     u6370:
 17191  001D34  0E00               	movlw	0
 17192  001D36                     u6380:
 17193  001D36  6E3A               	movwf	dtoa@s^0,c
 17194  001D38  6A3B               	clrf	(dtoa@s+1)^0,c
 17195                           
 17196                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 17197  001D3A  503A               	movf	dtoa@s^0,w,c
 17198  001D3C  103B               	iorwf	(dtoa@s+1)^0,w,c
 17199  001D3E  B4D8               	btfsc	status,2,c
 17200  001D40  EFA4  F00E         	goto	u6391
 17201  001D44  EFA6  F00E         	goto	u6390
 17202  001D48                     u6391:
 17203  001D48  EFB6  F00E         	goto	l6796
 17204  001D4C                     u6390:
 17205  001D4C                     
 17206                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 17207  001D4C  1E43               	comf	(dtoa@n+7)^0,f,c
 17208  001D4E  1E42               	comf	(dtoa@n+6)^0,f,c
 17209  001D50  1E41               	comf	(dtoa@n+5)^0,f,c
 17210  001D52  1E40               	comf	(dtoa@n+4)^0,f,c
 17211  001D54  1E3F               	comf	(dtoa@n+3)^0,f,c
 17212  001D56  1E3E               	comf	(dtoa@n+2)^0,f,c
 17213  001D58  1E3D               	comf	(dtoa@n+1)^0,f,c
 17214  001D5A  6C3C               	negf	dtoa@n^0,c
 17215  001D5C  0E00               	movlw	0
 17216  001D5E  223D               	addwfc	(dtoa@n+1)^0,f,c
 17217  001D60  223E               	addwfc	(dtoa@n+2)^0,f,c
 17218  001D62  223F               	addwfc	(dtoa@n+3)^0,f,c
 17219  001D64  2240               	addwfc	(dtoa@n+4)^0,f,c
 17220  001D66  2241               	addwfc	(dtoa@n+5)^0,f,c
 17221  001D68  2242               	addwfc	(dtoa@n+6)^0,f,c
 17222  001D6A  2243               	addwfc	(dtoa@n+7)^0,f,c
 17223  001D6C                     l6796:
 17224                           
 17225                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 17226  001D6C  0100               	movlb	0	; () banked
 17227  001D6E  BFD2               	btfsc	(_prec+1)& (0+255),7,b
 17228  001D70  EFBC  F00E         	goto	u6401
 17229  001D74  EFBE  F00E         	goto	u6400
 17230  001D78                     u6401:
 17231  001D78  EFBF  F00E         	goto	l6800
 17232  001D7C                     u6400:
 17233  001D7C                     
 17234                           ; BSR set to: 0
 17235                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 17236  001D7C  9257               	bcf	_flags^0,1,c
 17237  001D7E                     l6800:
 17238                           
 17239                           ; BSR set to: 0
 17240                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 17241  001D7E  BFD2               	btfsc	(_prec+1)& (0+255),7,b
 17242  001D80  EFCC  F00E         	goto	u6410
 17243  001D84  51D2               	movf	(_prec+1)& (0+255),w,b
 17244  001D86  E106               	bnz	u6411
 17245  001D88  05D1               	decf	_prec& (0+255),w,b
 17246  001D8A  B0D8               	btfsc	status,0,c
 17247  001D8C  EFCA  F00E         	goto	u6411
 17248  001D90  EFCC  F00E         	goto	u6410
 17249  001D94                     u6411:
 17250  001D94  EFD2  F00E         	goto	l1234
 17251  001D98                     u6410:
 17252  001D98                     
 17253                           ; BSR set to: 0
 17254  001D98  0E00               	movlw	0
 17255  001D9A  6E37               	movwf	(dtoa@p+1)^0,c
 17256  001D9C  0E01               	movlw	1
 17257  001D9E  6E36               	movwf	dtoa@p^0,c
 17258  001DA0  EFD6  F00E         	goto	l1236
 17259  001DA4                     l1234:
 17260                           
 17261                           ; BSR set to: 0
 17262  001DA4  C0D1  F036         	movff	_prec,dtoa@p
 17263  001DA8  C0D2  F037         	movff	_prec+1,dtoa@p+1
 17264  001DAC                     l1236:
 17265                           
 17266                           ; BSR set to: 0
 17267                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 17268  001DAC  C0CF  F038         	movff	_width,dtoa@w
 17269  001DB0  C0D0  F039         	movff	_width+1,dtoa@w+1
 17270  001DB4                     
 17271                           ; BSR set to: 0
 17272                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 17273  001DB4  503A               	movf	dtoa@s^0,w,c
 17274  001DB6  103B               	iorwf	(dtoa@s+1)^0,w,c
 17275  001DB8  A4D8               	btfss	status,2,c
 17276  001DBA  EFE1  F00E         	goto	u6421
 17277  001DBE  EFE3  F00E         	goto	u6420
 17278  001DC2                     u6421:
 17279  001DC2  EFEA  F00E         	goto	l6808
 17280  001DC6                     u6420:
 17281  001DC6                     
 17282                           ; BSR set to: 0
 17283  001DC6  A457               	btfss	_flags^0,2,c
 17284  001DC8  EFE8  F00E         	goto	u6431
 17285  001DCC  EFEA  F00E         	goto	u6430
 17286  001DD0                     u6431:
 17287  001DD0  EFED  F00E         	goto	l6810
 17288  001DD4                     u6430:
 17289  001DD4                     l6808:
 17290                           
 17291                           ; BSR set to: 0
 17292                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 17293  001DD4  0638               	decf	dtoa@w^0,f,c
 17294  001DD6  A0D8               	btfss	status,0,c
 17295  001DD8  0639               	decf	(dtoa@w+1)^0,f,c
 17296  001DDA                     l6810:
 17297                           
 17298                           ; BSR set to: 0
 17299                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 17300  001DDA  0E00               	movlw	0
 17301  001DDC  6E45               	movwf	(dtoa@i+1)^0,c
 17302  001DDE  0E1F               	movlw	31
 17303  001DE0  6E44               	movwf	dtoa@i^0,c
 17304  001DE2                     
 17305                           ; BSR set to: 0
 17306                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 17307  001DE2  0E00               	movlw	0
 17308  001DE4  0102               	movlb	2	; () banked
 17309  001DE6  6FFC               	movwf	(_dbuf+31)& (0+255),b
 17310                           
 17311                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 17312  001DE8  EF72  F00F         	goto	l6824
 17313  001DEC                     l6814:
 17314                           
 17315                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 17316  001DEC  0644               	decf	dtoa@i^0,f,c
 17317  001DEE  A0D8               	btfss	status,0,c
 17318  001DF0  0645               	decf	(dtoa@i+1)^0,f,c
 17319  001DF2                     
 17320                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 17321  001DF2  0EDD               	movlw	low _dbuf
 17322  001DF4  2444               	addwf	dtoa@i^0,w,c
 17323  001DF6  6ED9               	movwf	fsr2l,c
 17324  001DF8  0E02               	movlw	high _dbuf
 17325  001DFA  2045               	addwfc	(dtoa@i+1)^0,w,c
 17326  001DFC  6EDA               	movwf	fsr2h,c
 17327  001DFE  C03C  F005         	movff	dtoa@n,___aomod@dividend
 17328  001E02  C03D  F006         	movff	dtoa@n+1,___aomod@dividend+1
 17329  001E06  C03E  F007         	movff	dtoa@n+2,___aomod@dividend+2
 17330  001E0A  C03F  F008         	movff	dtoa@n+3,___aomod@dividend+3
 17331  001E0E  C040  F009         	movff	dtoa@n+4,___aomod@dividend+4
 17332  001E12  C041  F00A         	movff	dtoa@n+5,___aomod@dividend+5
 17333  001E16  C042  F00B         	movff	dtoa@n+6,___aomod@dividend+6
 17334  001E1A  C043  F00C         	movff	dtoa@n+7,___aomod@dividend+7
 17335  001E1E  0E0A               	movlw	10
 17336  001E20  6E0D               	movwf	___aomod@divisor^0,c
 17337  001E22  0E00               	movlw	0
 17338  001E24  6E0E               	movwf	(___aomod@divisor+1)^0,c
 17339  001E26  0E00               	movlw	0
 17340  001E28  6E0F               	movwf	(___aomod@divisor+2)^0,c
 17341  001E2A  0E00               	movlw	0
 17342  001E2C  6E10               	movwf	(___aomod@divisor+3)^0,c
 17343  001E2E  0E00               	movlw	0
 17344  001E30  6E11               	movwf	(___aomod@divisor+4)^0,c
 17345  001E32  0E00               	movlw	0
 17346  001E34  6E12               	movwf	(___aomod@divisor+5)^0,c
 17347  001E36  0E00               	movlw	0
 17348  001E38  6E13               	movwf	(___aomod@divisor+6)^0,c
 17349  001E3A  0E00               	movlw	0
 17350  001E3C  6E14               	movwf	(___aomod@divisor+7)^0,c
 17351  001E3E  ECA5  F01A         	call	___aomod	;wreg free
 17352  001E42  C005  F02C         	movff	?___aomod,??_dtoa
 17353  001E46  C006  F02D         	movff	?___aomod+1,??_dtoa+1
 17354  001E4A  C007  F02E         	movff	?___aomod+2,??_dtoa+2
 17355  001E4E  C008  F02F         	movff	?___aomod+3,??_dtoa+3
 17356  001E52  C009  F030         	movff	?___aomod+4,??_dtoa+4
 17357  001E56  C00A  F031         	movff	?___aomod+5,??_dtoa+5
 17358  001E5A  C00B  F032         	movff	?___aomod+6,??_dtoa+6
 17359  001E5E  C00C  F033         	movff	?___aomod+7,??_dtoa+7
 17360  001E62  C02C  F017         	movff	??_dtoa,abs@a
 17361  001E66  C02E  F018         	movff	??_dtoa+2,abs@a+1
 17362  001E6A  ECFA  F026         	call	_abs	;wreg free
 17363  001E6E  5017               	movf	?_abs^0,w,c
 17364  001E70  0F30               	addlw	48
 17365  001E72  6EDF               	movwf	indf2,c
 17366  001E74                     
 17367                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 17368  001E74  0636               	decf	dtoa@p^0,f,c
 17369  001E76  A0D8               	btfss	status,0,c
 17370  001E78  0637               	decf	(dtoa@p+1)^0,f,c
 17371  001E7A                     
 17372                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 17373  001E7A  0638               	decf	dtoa@w^0,f,c
 17374  001E7C  A0D8               	btfss	status,0,c
 17375  001E7E  0639               	decf	(dtoa@w+1)^0,f,c
 17376  001E80                     
 17377                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 17378  001E80  C03C  F005         	movff	dtoa@n,___aodiv@dividend
 17379  001E84  C03D  F006         	movff	dtoa@n+1,___aodiv@dividend+1
 17380  001E88  C03E  F007         	movff	dtoa@n+2,___aodiv@dividend+2
 17381  001E8C  C03F  F008         	movff	dtoa@n+3,___aodiv@dividend+3
 17382  001E90  C040  F009         	movff	dtoa@n+4,___aodiv@dividend+4
 17383  001E94  C041  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
 17384  001E98  C042  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
 17385  001E9C  C043  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
 17386  001EA0  0E0A               	movlw	10
 17387  001EA2  6E0D               	movwf	___aodiv@divisor^0,c
 17388  001EA4  0E00               	movlw	0
 17389  001EA6  6E0E               	movwf	(___aodiv@divisor+1)^0,c
 17390  001EA8  0E00               	movlw	0
 17391  001EAA  6E0F               	movwf	(___aodiv@divisor+2)^0,c
 17392  001EAC  0E00               	movlw	0
 17393  001EAE  6E10               	movwf	(___aodiv@divisor+3)^0,c
 17394  001EB0  0E00               	movlw	0
 17395  001EB2  6E11               	movwf	(___aodiv@divisor+4)^0,c
 17396  001EB4  0E00               	movlw	0
 17397  001EB6  6E12               	movwf	(___aodiv@divisor+5)^0,c
 17398  001EB8  0E00               	movlw	0
 17399  001EBA  6E13               	movwf	(___aodiv@divisor+6)^0,c
 17400  001EBC  0E00               	movlw	0
 17401  001EBE  6E14               	movwf	(___aodiv@divisor+7)^0,c
 17402  001EC0  EC23  F019         	call	___aodiv	;wreg free
 17403  001EC4  C005  F03C         	movff	?___aodiv,dtoa@n
 17404  001EC8  C006  F03D         	movff	?___aodiv+1,dtoa@n+1
 17405  001ECC  C007  F03E         	movff	?___aodiv+2,dtoa@n+2
 17406  001ED0  C008  F03F         	movff	?___aodiv+3,dtoa@n+3
 17407  001ED4  C009  F040         	movff	?___aodiv+4,dtoa@n+4
 17408  001ED8  C00A  F041         	movff	?___aodiv+5,dtoa@n+5
 17409  001EDC  C00B  F042         	movff	?___aodiv+6,dtoa@n+6
 17410  001EE0  C00C  F043         	movff	?___aodiv+7,dtoa@n+7
 17411  001EE4                     l6824:
 17412                           
 17413                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 17414  001EE4  BE45               	btfsc	(dtoa@i+1)^0,7,c
 17415  001EE6  EF7D  F00F         	goto	u6441
 17416  001EEA  5045               	movf	(dtoa@i+1)^0,w,c
 17417  001EEC  E108               	bnz	u6440
 17418  001EEE  0444               	decf	dtoa@i^0,w,c
 17419  001EF0  A0D8               	btfss	status,0,c
 17420  001EF2  EF7D  F00F         	goto	u6441
 17421  001EF6  EF7F  F00F         	goto	u6440
 17422  001EFA                     u6441:
 17423  001EFA  EFAF  F00F         	goto	l6834
 17424  001EFE                     u6440:
 17425  001EFE  503C               	movf	dtoa@n^0,w,c
 17426  001F00  103D               	iorwf	(dtoa@n+1)^0,w,c
 17427  001F02  103E               	iorwf	(dtoa@n+2)^0,w,c
 17428  001F04  103F               	iorwf	(dtoa@n+3)^0,w,c
 17429  001F06  1040               	iorwf	(dtoa@n+4)^0,w,c
 17430  001F08  1041               	iorwf	(dtoa@n+5)^0,w,c
 17431  001F0A  1042               	iorwf	(dtoa@n+6)^0,w,c
 17432  001F0C  1043               	iorwf	(dtoa@n+7)^0,w,c
 17433  001F0E  A4D8               	btfss	status,2,c
 17434  001F10  EF8C  F00F         	goto	u6451
 17435  001F14  EF8E  F00F         	goto	u6450
 17436  001F18                     u6451:
 17437  001F18  EFF6  F00E         	goto	l6814
 17438  001F1C                     u6450:
 17439  001F1C  BE37               	btfsc	(dtoa@p+1)^0,7,c
 17440  001F1E  EF9B  F00F         	goto	u6460
 17441  001F22  5037               	movf	(dtoa@p+1)^0,w,c
 17442  001F24  E106               	bnz	u6461
 17443  001F26  0436               	decf	dtoa@p^0,w,c
 17444  001F28  B0D8               	btfsc	status,0,c
 17445  001F2A  EF99  F00F         	goto	u6461
 17446  001F2E  EF9B  F00F         	goto	u6460
 17447  001F32                     u6461:
 17448  001F32  EFF6  F00E         	goto	l6814
 17449  001F36                     u6460:
 17450  001F36  BE39               	btfsc	(dtoa@w+1)^0,7,c
 17451  001F38  EFA6  F00F         	goto	u6471
 17452  001F3C  5039               	movf	(dtoa@w+1)^0,w,c
 17453  001F3E  E108               	bnz	u6470
 17454  001F40  0438               	decf	dtoa@w^0,w,c
 17455  001F42  A0D8               	btfss	status,0,c
 17456  001F44  EFA6  F00F         	goto	u6471
 17457  001F48  EFA8  F00F         	goto	u6470
 17458  001F4C                     u6471:
 17459  001F4C  EFAF  F00F         	goto	l6834
 17460  001F50                     u6470:
 17461  001F50  B257               	btfsc	_flags^0,1,c
 17462  001F52  EFAD  F00F         	goto	u6481
 17463  001F56  EFAF  F00F         	goto	u6480
 17464  001F5A                     u6481:
 17465  001F5A  EFF6  F00E         	goto	l6814
 17466  001F5E                     u6480:
 17467  001F5E                     l6834:
 17468                           
 17469                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 17470  001F5E  503A               	movf	dtoa@s^0,w,c
 17471  001F60  103B               	iorwf	(dtoa@s+1)^0,w,c
 17472  001F62  A4D8               	btfss	status,2,c
 17473  001F64  EFB6  F00F         	goto	u6491
 17474  001F68  EFB8  F00F         	goto	u6490
 17475  001F6C                     u6491:
 17476  001F6C  EFBF  F00F         	goto	l6838
 17477  001F70                     u6490:
 17478  001F70  A457               	btfss	_flags^0,2,c
 17479  001F72  EFBD  F00F         	goto	u6501
 17480  001F76  EFBF  F00F         	goto	u6500
 17481  001F7A                     u6501:
 17482  001F7A  EFDD  F00F         	goto	l6848
 17483  001F7E                     u6500:
 17484  001F7E                     l6838:
 17485                           
 17486                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 17487  001F7E  0644               	decf	dtoa@i^0,f,c
 17488  001F80  A0D8               	btfss	status,0,c
 17489  001F82  0645               	decf	(dtoa@i+1)^0,f,c
 17490  001F84                     
 17491                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 17492  001F84  503A               	movf	dtoa@s^0,w,c
 17493  001F86  103B               	iorwf	(dtoa@s+1)^0,w,c
 17494  001F88  A4D8               	btfss	status,2,c
 17495  001F8A  EFC9  F00F         	goto	u6511
 17496  001F8E  EFCB  F00F         	goto	u6510
 17497  001F92                     u6511:
 17498  001F92  EFD1  F00F         	goto	l6844
 17499  001F96                     u6510:
 17500  001F96  0E00               	movlw	0
 17501  001F98  6E35               	movwf	(_dtoa$1905+1)^0,c
 17502  001F9A  0E2B               	movlw	43
 17503  001F9C  6E34               	movwf	_dtoa$1905^0,c
 17504  001F9E  EFD5  F00F         	goto	l6846
 17505  001FA2                     l6844:
 17506  001FA2  0E00               	movlw	0
 17507  001FA4  6E35               	movwf	(_dtoa$1905+1)^0,c
 17508  001FA6  0E2D               	movlw	45
 17509  001FA8  6E34               	movwf	_dtoa$1905^0,c
 17510  001FAA                     l6846:
 17511  001FAA  0EDD               	movlw	low _dbuf
 17512  001FAC  2444               	addwf	dtoa@i^0,w,c
 17513  001FAE  6ED9               	movwf	fsr2l,c
 17514  001FB0  0E02               	movlw	high _dbuf
 17515  001FB2  2045               	addwfc	(dtoa@i+1)^0,w,c
 17516  001FB4  6EDA               	movwf	fsr2h,c
 17517  001FB6  C034  FFDF         	movff	_dtoa$1905,indf2
 17518  001FBA                     l6848:
 17519                           
 17520                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 17521  001FBA  C022  F017         	movff	dtoa@fp,pad@fp
 17522  001FBE  C023  F018         	movff	dtoa@fp+1,pad@fp+1
 17523  001FC2  0EDD               	movlw	low _dbuf
 17524  001FC4  2444               	addwf	dtoa@i^0,w,c
 17525  001FC6  6E19               	movwf	pad@buf^0,c
 17526  001FC8  0E02               	movlw	high _dbuf
 17527  001FCA  2045               	addwfc	(dtoa@i+1)^0,w,c
 17528  001FCC  6E1A               	movwf	(pad@buf+1)^0,c
 17529  001FCE  C038  F01B         	movff	dtoa@w,pad@p
 17530  001FD2  C039  F01C         	movff	dtoa@w+1,pad@p+1
 17531  001FD6  EC41  F020         	call	_pad	;wreg free
 17532  001FDA  C017  F022         	movff	?_pad,?_dtoa
 17533  001FDE  C018  F023         	movff	?_pad+1,?_dtoa+1
 17534  001FE2  0012               	return		;funcret
 17535  001FE4                     __end_of_dtoa:
 17536                           	opt callstack 0
 17537                           
 17538 ;; *************** function _pad *****************
 17539 ;; Defined at:
 17540 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 17541 ;; Parameters:    Size  Location     Type
 17542 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
 17543 ;;		 -> NULL(0), 
 17544 ;;  buf             2   24[COMRAM] PTR unsigned char 
 17545 ;;		 -> dbuf(32), 
 17546 ;;  p               2   26[COMRAM] int 
 17547 ;; Auto vars:     Size  Location     Type
 17548 ;;  w               2   31[COMRAM] int 
 17549 ;;  i               2   29[COMRAM] int 
 17550 ;; Return value:  Size  Location     Type
 17551 ;;                  2   22[COMRAM] int 
 17552 ;; Registers used:
 17553 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17554 ;; Tracked objects:
 17555 ;;		On entry : 0/0
 17556 ;;		On exit  : 0/0
 17557 ;;		Unchanged: 0/0
 17558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17559 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17560 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17561 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17562 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17563 ;;Total ram usage:       11 bytes
 17564 ;; Hardware stack levels used:    1
 17565 ;; Hardware stack levels required when called:    8
 17566 ;; This function calls:
 17567 ;;		_fputc
 17568 ;;		_fputs
 17569 ;;		_strlen
 17570 ;; This function is called by:
 17571 ;;		_dtoa
 17572 ;;		_utoa
 17573 ;;		_xtoa
 17574 ;; This function uses a non-reentrant model
 17575 ;;
 17576                           
 17577                           	psect	text64
 17578  004082                     __ptext64:
 17579                           	opt callstack 0
 17580  004082                     _pad:
 17581                           	opt callstack 18
 17582  004082                     
 17583                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 17584  004082  A057               	btfss	_flags^0,0,c
 17585  004084  EF46  F020         	goto	u6011
 17586  004088  EF48  F020         	goto	u6010
 17587  00408C                     u6011:
 17588  00408C  EF52  F020         	goto	l6610
 17589  004090                     u6010:
 17590  004090                     
 17591                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 17592  004090  C019  F010         	movff	pad@buf,fputs@s
 17593  004094  C01A  F011         	movff	pad@buf+1,fputs@s+1
 17594  004098  C017  F012         	movff	pad@fp,fputs@fp
 17595  00409C  C018  F013         	movff	pad@fp+1,fputs@fp+1
 17596  0040A0  EC55  F026         	call	_fputs	;wreg free
 17597  0040A4                     l6610:
 17598                           
 17599                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 17600  0040A4  BE1C               	btfsc	(pad@p+1)^0,7,c
 17601  0040A6  EF57  F020         	goto	u6021
 17602  0040AA  EF59  F020         	goto	u6020
 17603  0040AE                     u6021:
 17604  0040AE  EF5F  F020         	goto	l6614
 17605  0040B2                     u6020:
 17606  0040B2  C01B  F020         	movff	pad@p,pad@w
 17607  0040B6  C01C  F021         	movff	pad@p+1,pad@w+1
 17608  0040BA  EF63  F020         	goto	l1223
 17609  0040BE                     l6614:
 17610  0040BE  0E00               	movlw	0
 17611  0040C0  6E21               	movwf	(pad@w+1)^0,c
 17612  0040C2  0E00               	movlw	0
 17613  0040C4  6E20               	movwf	pad@w^0,c
 17614  0040C6                     l1223:
 17615                           
 17616                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 17617  0040C6  0E00               	movlw	0
 17618  0040C8  6E1F               	movwf	(pad@i+1)^0,c
 17619  0040CA  0E00               	movlw	0
 17620  0040CC  6E1E               	movwf	pad@i^0,c
 17621                           
 17622                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 17623  0040CE  EF75  F020         	goto	l6620
 17624  0040D2                     l6616:
 17625                           
 17626                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 17627  0040D2  0E00               	movlw	0
 17628  0040D4  6E08               	movwf	(fputc@c+1)^0,c
 17629  0040D6  0E20               	movlw	32
 17630  0040D8  6E07               	movwf	fputc@c^0,c
 17631  0040DA  C017  F009         	movff	pad@fp,fputc@fp
 17632  0040DE  C018  F00A         	movff	pad@fp+1,fputc@fp+1
 17633  0040E2  EC12  F022         	call	_fputc	;wreg free
 17634  0040E6                     
 17635                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 17636  0040E6  4A1E               	infsnz	pad@i^0,f,c
 17637  0040E8  2A1F               	incf	(pad@i+1)^0,f,c
 17638  0040EA                     l6620:
 17639                           
 17640                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 17641  0040EA  5020               	movf	pad@w^0,w,c
 17642  0040EC  5C1E               	subwf	pad@i^0,w,c
 17643  0040EE  501F               	movf	(pad@i+1)^0,w,c
 17644  0040F0  0A80               	xorlw	128
 17645  0040F2  6E1D               	movwf	??_pad^0,c
 17646  0040F4  5021               	movf	(pad@w+1)^0,w,c
 17647  0040F6  0A80               	xorlw	128
 17648  0040F8  581D               	subwfb	??_pad^0,w,c
 17649  0040FA  A0D8               	btfss	status,0,c
 17650  0040FC  EF82  F020         	goto	u6031
 17651  004100  EF84  F020         	goto	u6030
 17652  004104                     u6031:
 17653  004104  EF69  F020         	goto	l6616
 17654  004108                     u6030:
 17655  004108                     
 17656                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 17657  004108  B057               	btfsc	_flags^0,0,c
 17658  00410A  EF89  F020         	goto	u6041
 17659  00410E  EF8B  F020         	goto	u6040
 17660  004112                     u6041:
 17661  004112  EF95  F020         	goto	l6624
 17662  004116                     u6040:
 17663  004116                     
 17664                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 17665  004116  C019  F010         	movff	pad@buf,fputs@s
 17666  00411A  C01A  F011         	movff	pad@buf+1,fputs@s+1
 17667  00411E  C017  F012         	movff	pad@fp,fputs@fp
 17668  004122  C018  F013         	movff	pad@fp+1,fputs@fp+1
 17669  004126  EC55  F026         	call	_fputs	;wreg free
 17670  00412A                     l6624:
 17671                           
 17672                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 17673  00412A  C019  F005         	movff	pad@buf,strlen@s
 17674  00412E  C01A  F006         	movff	pad@buf+1,strlen@s+1
 17675  004132  EC9C  F025         	call	_strlen	;wreg free
 17676  004136  5020               	movf	pad@w^0,w,c
 17677  004138  2405               	addwf	?_strlen^0,w,c
 17678  00413A  6E17               	movwf	?_pad^0,c
 17679  00413C  5021               	movf	(pad@w+1)^0,w,c
 17680  00413E  2006               	addwfc	(?_strlen+1)^0,w,c
 17681  004140  6E18               	movwf	(?_pad+1)^0,c
 17682  004142  0012               	return		;funcret
 17683  004144                     __end_of_pad:
 17684                           	opt callstack 0
 17685                           
 17686 ;; *************** function _strlen *****************
 17687 ;; Defined at:
 17688 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 17689 ;; Parameters:    Size  Location     Type
 17690 ;;  s               2    4[COMRAM] PTR const unsigned char 
 17691 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), ValidateCmd@ConfName_1579(20), 
 17692 ;;		 -> ValidateCmd@ConfName_1575(20), ValidateCmd@ConfName(20), STR_97(9), STR_96(12), 
 17693 ;;		 -> InitialiseString@RevNum(2), InitialiseString@PartNum(19), InitialiseString@SerialNum(11), Command(16), 
 17694 ;; Auto vars:     Size  Location     Type
 17695 ;;  a               2    6[COMRAM] PTR const unsigned char 
 17696 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), ValidateCmd@ConfName_1579(20), 
 17697 ;;		 -> ValidateCmd@ConfName_1575(20), ValidateCmd@ConfName(20), STR_97(9), STR_96(12), 
 17698 ;;		 -> InitialiseString@RevNum(2), InitialiseString@PartNum(19), InitialiseString@SerialNum(11), Command(16), 
 17699 ;; Return value:  Size  Location     Type
 17700 ;;                  2    4[COMRAM] unsigned int 
 17701 ;; Registers used:
 17702 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 17703 ;; Tracked objects:
 17704 ;;		On entry : 0/0
 17705 ;;		On exit  : 0/0
 17706 ;;		Unchanged: 0/0
 17707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17708 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17709 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17711 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17712 ;;Total ram usage:        4 bytes
 17713 ;; Hardware stack levels used:    1
 17714 ;; Hardware stack levels required when called:    4
 17715 ;; This function calls:
 17716 ;;		Nothing
 17717 ;; This function is called by:
 17718 ;;		_ReadRX232
 17719 ;;		_SaveCardDat
 17720 ;;		_pad
 17721 ;;		_stoa
 17722 ;;		_strcat
 17723 ;; This function uses a non-reentrant model
 17724 ;;
 17725                           
 17726                           	psect	text65
 17727  004B38                     __ptext65:
 17728                           	opt callstack 0
 17729  004B38                     _strlen:
 17730                           	opt callstack 21
 17731  004B38  C005  F007         	movff	strlen@s,strlen@a
 17732  004B3C  C006  F008         	movff	strlen@s+1,strlen@a+1
 17733  004B40  EFA4  F025         	goto	l6588
 17734  004B44                     l6586:
 17735  004B44  4A05               	infsnz	strlen@s^0,f,c
 17736  004B46  2A06               	incf	(strlen@s+1)^0,f,c
 17737  004B48                     l6588:
 17738  004B48  C005  FFF6         	movff	strlen@s,tblptrl
 17739  004B4C  C006  FFF7         	movff	strlen@s+1,tblptrh
 17740  004B50  0E00               	movlw	low (__mediumconst shr (0+16))
 17741  004B52  6EF8               	movwf	tblptru,c
 17742  004B54  0E0E               	movlw	(high __ramtop+-1)
 17743  004B56  64F7               	cpfsgt	tblptrh,c
 17744  004B58  D003               	bra	u5967
 17745  004B5A  0008               	tblrd		*
 17746  004B5C  50F5               	movf	tablat,w,c
 17747  004B5E  D005               	bra	u5960
 17748  004B60                     u5967:
 17749  004B60  CFF6 FFE9          	movff	tblptrl,fsr0l
 17750  004B64  CFF7 FFEA          	movff	tblptrh,fsr0h
 17751  004B68  50EF               	movf	indf0,w,c
 17752  004B6A                     u5960:
 17753  004B6A  0900               	iorlw	0
 17754  004B6C  A4D8               	btfss	status,2,c
 17755  004B6E  EFBB  F025         	goto	u5971
 17756  004B72  EFBD  F025         	goto	u5970
 17757  004B76                     u5971:
 17758  004B76  EFA2  F025         	goto	l6586
 17759  004B7A                     u5970:
 17760  004B7A  5007               	movf	strlen@a^0,w,c
 17761  004B7C  5C05               	subwf	strlen@s^0,w,c
 17762  004B7E  6E05               	movwf	?_strlen^0,c
 17763  004B80  5008               	movf	(strlen@a+1)^0,w,c
 17764  004B82  5806               	subwfb	(strlen@s+1)^0,w,c
 17765  004B84  6E06               	movwf	(?_strlen+1)^0,c
 17766  004B86  0012               	return		;funcret
 17767  004B88                     __end_of_strlen:
 17768                           	opt callstack 0
 17769                           
 17770 ;; *************** function _fputs *****************
 17771 ;; Defined at:
 17772 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
 17773 ;; Parameters:    Size  Location     Type
 17774 ;;  s               2   15[COMRAM] PTR const unsigned char 
 17775 ;;		 -> dbuf(32), 
 17776 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
 17777 ;;		 -> NULL(0), 
 17778 ;; Auto vars:     Size  Location     Type
 17779 ;;  i               2   20[COMRAM] int 
 17780 ;;  c               1   19[COMRAM] unsigned char 
 17781 ;; Return value:  Size  Location     Type
 17782 ;;                  2   15[COMRAM] int 
 17783 ;; Registers used:
 17784 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17785 ;; Tracked objects:
 17786 ;;		On entry : 0/0
 17787 ;;		On exit  : 0/0
 17788 ;;		Unchanged: 0/0
 17789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17790 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17791 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17793 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17794 ;;Total ram usage:        7 bytes
 17795 ;; Hardware stack levels used:    1
 17796 ;; Hardware stack levels required when called:    7
 17797 ;; This function calls:
 17798 ;;		_fputc
 17799 ;; This function is called by:
 17800 ;;		_pad
 17801 ;; This function uses a non-reentrant model
 17802 ;;
 17803                           
 17804                           	psect	text66
 17805  004CAA                     __ptext66:
 17806                           	opt callstack 0
 17807  004CAA                     _fputs:
 17808                           	opt callstack 18
 17809  004CAA  0E00               	movlw	0
 17810  004CAC  6E16               	movwf	(fputs@i+1)^0,c
 17811  004CAE  0E00               	movlw	0
 17812  004CB0  6E15               	movwf	fputs@i^0,c
 17813  004CB2  EF66  F026         	goto	l6600
 17814  004CB6                     l6596:
 17815  004CB6  C014  F007         	movff	fputs@c,fputc@c
 17816  004CBA  6A08               	clrf	(fputc@c+1)^0,c
 17817  004CBC  C012  F009         	movff	fputs@fp,fputc@fp
 17818  004CC0  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
 17819  004CC4  EC12  F022         	call	_fputc	;wreg free
 17820  004CC8  4A15               	infsnz	fputs@i^0,f,c
 17821  004CCA  2A16               	incf	(fputs@i+1)^0,f,c
 17822  004CCC                     l6600:
 17823  004CCC  5015               	movf	fputs@i^0,w,c
 17824  004CCE  2410               	addwf	fputs@s^0,w,c
 17825  004CD0  6ED9               	movwf	fsr2l,c
 17826  004CD2  5016               	movf	(fputs@i+1)^0,w,c
 17827  004CD4  2011               	addwfc	(fputs@s+1)^0,w,c
 17828  004CD6  6EDA               	movwf	fsr2h,c
 17829  004CD8  50DF               	movf	indf2,w,c
 17830  004CDA  6E14               	movwf	fputs@c^0,c
 17831  004CDC  5014               	movf	fputs@c^0,w,c
 17832  004CDE  A4D8               	btfss	status,2,c
 17833  004CE0  EF74  F026         	goto	u5981
 17834  004CE4  EF76  F026         	goto	u5980
 17835  004CE8                     u5981:
 17836  004CE8  EF5B  F026         	goto	l6596
 17837  004CEC                     u5980:
 17838  004CEC  0012               	return		;funcret
 17839  004CEE                     __end_of_fputs:
 17840                           	opt callstack 0
 17841                           
 17842 ;; *************** function _fputc *****************
 17843 ;; Defined at:
 17844 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
 17845 ;; Parameters:    Size  Location     Type
 17846 ;;  c               2    6[COMRAM] int 
 17847 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
 17848 ;;		 -> NULL(0), 
 17849 ;; Auto vars:     Size  Location     Type
 17850 ;;		None
 17851 ;; Return value:  Size  Location     Type
 17852 ;;                  2    6[COMRAM] int 
 17853 ;; Registers used:
 17854 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17855 ;; Tracked objects:
 17856 ;;		On entry : 0/0
 17857 ;;		On exit  : 0/0
 17858 ;;		Unchanged: 0/0
 17859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17860 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17862 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17863 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17864 ;;Total ram usage:        9 bytes
 17865 ;; Hardware stack levels used:    1
 17866 ;; Hardware stack levels required when called:    6
 17867 ;; This function calls:
 17868 ;;		_putch
 17869 ;; This function is called by:
 17870 ;;		_pad
 17871 ;;		_stoa
 17872 ;;		_vfpfcnvrt
 17873 ;;		_fputs
 17874 ;; This function uses a non-reentrant model
 17875 ;;
 17876                           
 17877                           	psect	text67
 17878  004424                     __ptext67:
 17879                           	opt callstack 0
 17880  004424                     _fputc:
 17881                           	opt callstack 18
 17882  004424  5009               	movf	fputc@fp^0,w,c
 17883  004426  100A               	iorwf	(fputc@fp+1)^0,w,c
 17884  004428  B4D8               	btfsc	status,2,c
 17885  00442A  EF19  F022         	goto	u5921
 17886  00442E  EF1B  F022         	goto	u5920
 17887  004432                     u5921:
 17888  004432  EF24  F022         	goto	l6574
 17889  004436                     u5920:
 17890  004436  5009               	movf	fputc@fp^0,w,c
 17891  004438  100A               	iorwf	(fputc@fp+1)^0,w,c
 17892  00443A  A4D8               	btfss	status,2,c
 17893  00443C  EF22  F022         	goto	u5931
 17894  004440  EF24  F022         	goto	u5930
 17895  004444                     u5931:
 17896  004444  EF29  F022         	goto	l6576
 17897  004448                     u5930:
 17898  004448                     l6574:
 17899  004448  5007               	movf	fputc@c^0,w,c
 17900  00444A  ECDD  F028         	call	_putch
 17901  00444E  EF5C  F022         	goto	l2123
 17902  004452                     l6576:
 17903  004452  EE20 F004          	lfsr	2,4
 17904  004456  5009               	movf	fputc@fp^0,w,c
 17905  004458  26D9               	addwf	fsr2l,f,c
 17906  00445A  500A               	movf	(fputc@fp+1)^0,w,c
 17907  00445C  22DA               	addwfc	fsr2h,f,c
 17908  00445E  50DE               	movf	postinc2,w,c
 17909  004460  10DE               	iorwf	postinc2,w,c
 17910  004462  B4D8               	btfsc	status,2,c
 17911  004464  EF36  F022         	goto	u5941
 17912  004468  EF38  F022         	goto	u5940
 17913  00446C                     u5941:
 17914  00446C  EF53  F022         	goto	l6580
 17915  004470                     u5940:
 17916  004470  EE20 F004          	lfsr	2,4
 17917  004474  5009               	movf	fputc@fp^0,w,c
 17918  004476  26D9               	addwf	fsr2l,f,c
 17919  004478  500A               	movf	(fputc@fp+1)^0,w,c
 17920  00447A  22DA               	addwfc	fsr2h,f,c
 17921  00447C  EE10 F002          	lfsr	1,2
 17922  004480  5009               	movf	fputc@fp^0,w,c
 17923  004482  26E1               	addwf	fsr1l,f,c
 17924  004484  500A               	movf	(fputc@fp+1)^0,w,c
 17925  004486  22E2               	addwfc	fsr1h,f,c
 17926  004488  50DE               	movf	postinc2,w,c
 17927  00448A  5CE6               	subwf	postinc1,w,c
 17928  00448C  50E6               	movf	postinc1,w,c
 17929  00448E  0A80               	xorlw	128
 17930  004490  6E0F               	movwf	(??_fputc+4)^0,c
 17931  004492  50DE               	movf	postinc2,w,c
 17932  004494  0A80               	xorlw	128
 17933  004496  580F               	subwfb	(??_fputc+4)^0,w,c
 17934  004498  B0D8               	btfsc	status,0,c
 17935  00449A  EF51  F022         	goto	u5951
 17936  00449E  EF53  F022         	goto	u5950
 17937  0044A2                     u5951:
 17938  0044A2  EF5C  F022         	goto	l2123
 17939  0044A6                     u5950:
 17940  0044A6                     l6580:
 17941  0044A6  EE20 F002          	lfsr	2,2
 17942  0044AA  5009               	movf	fputc@fp^0,w,c
 17943  0044AC  26D9               	addwf	fsr2l,f,c
 17944  0044AE  500A               	movf	(fputc@fp+1)^0,w,c
 17945  0044B0  22DA               	addwfc	fsr2h,f,c
 17946  0044B2  2ADE               	incf	postinc2,f,c
 17947  0044B4  0E00               	movlw	0
 17948  0044B6  22DD               	addwfc	postdec2,f,c
 17949  0044B8                     l2123:
 17950  0044B8  0012               	return		;funcret
 17951  0044BA                     __end_of_fputc:
 17952                           	opt callstack 0
 17953                           
 17954 ;; *************** function _putch *****************
 17955 ;; Defined at:
 17956 ;;		line 203 in file "mcc_generated_files/eusart2.c"
 17957 ;; Parameters:    Size  Location     Type
 17958 ;;  txData          1    wreg     unsigned char 
 17959 ;; Auto vars:     Size  Location     Type
 17960 ;;  txData          1    5[COMRAM] unsigned char 
 17961 ;; Return value:  Size  Location     Type
 17962 ;;                  1    wreg      void 
 17963 ;; Registers used:
 17964 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17965 ;; Tracked objects:
 17966 ;;		On entry : 0/0
 17967 ;;		On exit  : 0/0
 17968 ;;		Unchanged: 0/0
 17969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17971 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17973 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17974 ;;Total ram usage:        1 bytes
 17975 ;; Hardware stack levels used:    1
 17976 ;; Hardware stack levels required when called:    5
 17977 ;; This function calls:
 17978 ;;		_EUSART2_Write
 17979 ;; This function is called by:
 17980 ;;		_fputc
 17981 ;; This function uses a non-reentrant model
 17982 ;;
 17983                           
 17984                           	psect	text68
 17985  0051BA                     __ptext68:
 17986                           	opt callstack 0
 17987  0051BA                     _putch:
 17988                           	opt callstack 18
 17989                           
 17990                           ;incstack = 0
 17991                           ;putch@txData stored from wreg
 17992  0051BA  6E06               	movwf	putch@txData^0,c
 17993  0051BC                     
 17994                           ;mcc_generated_files/eusart2.c: 203: void putch(char txData);mcc_generated_files/eusart2
      +                          .c: 204: {;mcc_generated_files/eusart2.c: 205:     EUSART2_Write(txData);
 17995  0051BC  5006               	movf	putch@txData^0,w,c
 17996  0051BE  EC67  F024         	call	_EUSART2_Write
 17997  0051C2  0012               	return		;funcret
 17998  0051C4                     __end_of_putch:
 17999                           	opt callstack 0
 18000                           
 18001 ;; *************** function _EUSART2_Write *****************
 18002 ;; Defined at:
 18003 ;;		line 175 in file "mcc_generated_files/eusart2.c"
 18004 ;; Parameters:    Size  Location     Type
 18005 ;;  txData          1    wreg     unsigned char 
 18006 ;; Auto vars:     Size  Location     Type
 18007 ;;  txData          1    4[COMRAM] unsigned char 
 18008 ;; Return value:  Size  Location     Type
 18009 ;;                  1    wreg      void 
 18010 ;; Registers used:
 18011 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18012 ;; Tracked objects:
 18013 ;;		On entry : 0/0
 18014 ;;		On exit  : 0/0
 18015 ;;		Unchanged: 0/0
 18016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18018 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18020 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18021 ;;Total ram usage:        1 bytes
 18022 ;; Hardware stack levels used:    1
 18023 ;; Hardware stack levels required when called:    4
 18024 ;; This function calls:
 18025 ;;		Nothing
 18026 ;; This function is called by:
 18027 ;;		_putch
 18028 ;;		_ReadRX232
 18029 ;; This function uses a non-reentrant model
 18030 ;;
 18031                           
 18032                           	psect	text69
 18033  0048CE                     __ptext69:
 18034                           	opt callstack 0
 18035  0048CE                     _EUSART2_Write:
 18036                           	opt callstack 18
 18037                           
 18038                           ;incstack = 0
 18039                           ;EUSART2_Write@txData stored from wreg
 18040  0048CE  6E05               	movwf	EUSART2_Write@txData^0,c
 18041  0048D0                     l6552:
 18042                           
 18043                           ;mcc_generated_files/eusart2.c: 177:     while(0 == eusart2TxBufferRemaining)
 18044  0048D0  0100               	movlb	0	; () banked
 18045  0048D2  51FF               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 18046  0048D4  B4D8               	btfsc	status,2,c
 18047  0048D6  EF6F  F024         	goto	u5891
 18048  0048DA  EF71  F024         	goto	u5890
 18049  0048DE                     u5891:
 18050  0048DE  EF68  F024         	goto	l6552
 18051  0048E2                     u5890:
 18052  0048E2                     
 18053                           ; BSR set to: 0
 18054                           ;mcc_generated_files/eusart2.c: 181:     if(0 == PIE3bits.TX2IE)
 18055  0048E2  010E               	movlb	14	; () banked
 18056  0048E4  BDC5               	btfsc	197,6,b	;volatile
 18057  0048E6  EF77  F024         	goto	u5901
 18058  0048EA  EF79  F024         	goto	u5900
 18059  0048EE                     u5901:
 18060  0048EE  EF7D  F024         	goto	l325
 18061  0048F2                     u5900:
 18062  0048F2                     
 18063                           ; BSR set to: 14
 18064                           ;mcc_generated_files/eusart2.c: 182:     {;mcc_generated_files/eusart2.c: 183:         T
      +                          X2REG = txData;
 18065  0048F2  C005  FE9A         	movff	EUSART2_Write@txData,3738	;volatile
 18066                           
 18067                           ;mcc_generated_files/eusart2.c: 184:     }
 18068  0048F6  EF93  F024         	goto	l6566
 18069  0048FA                     l325:
 18070                           
 18071                           ; BSR set to: 14
 18072                           ;mcc_generated_files/eusart2.c: 186:     {;mcc_generated_files/eusart2.c: 187:         P
      +                          IE3bits.TX2IE = 0;
 18073  0048FA  9DC5               	bcf	197,6,b	;volatile
 18074  0048FC                     
 18075                           ; BSR set to: 14
 18076                           ;mcc_generated_files/eusart2.c: 188:         eusart2TxBuffer[eusart2TxHead++] = txData;
 18077  0048FC  0E84               	movlw	low _eusart2TxBuffer
 18078  0048FE  0100               	movlb	0	; () banked
 18079  004900  25E9               	addwf	_eusart2TxHead& (0+255),w,b	;volatile
 18080  004902  6ED9               	movwf	fsr2l,c
 18081  004904  6ADA               	clrf	fsr2h,c
 18082  004906  0E03               	movlw	high _eusart2TxBuffer
 18083  004908  22DA               	addwfc	fsr2h,f,c
 18084  00490A  C005  FFDF         	movff	EUSART2_Write@txData,indf2
 18085  00490E                     
 18086                           ; BSR set to: 0
 18087  00490E  2BE9               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 18088  004910                     
 18089                           ; BSR set to: 0
 18090                           ;mcc_generated_files/eusart2.c: 189:         if(sizeof(eusart2TxBuffer) <= eusart2TxHead
      +                          )
 18091  004910  0E1F               	movlw	31
 18092  004912  65E9               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 18093  004914  EF8E  F024         	goto	u5911
 18094  004918  EF90  F024         	goto	u5910
 18095  00491C                     u5911:
 18096  00491C  EF92  F024         	goto	l6564
 18097  004920                     u5910:
 18098  004920                     
 18099                           ; BSR set to: 0
 18100                           ;mcc_generated_files/eusart2.c: 190:         {;mcc_generated_files/eusart2.c: 191:      
      +                                 eusart2TxHead = 0;
 18101  004920  0E00               	movlw	0
 18102  004922  6FE9               	movwf	_eusart2TxHead& (0+255),b	;volatile
 18103  004924                     l6564:
 18104                           
 18105                           ; BSR set to: 0
 18106                           ;mcc_generated_files/eusart2.c: 193:         eusart2TxBufferRemaining--;
 18107  004924  07FF               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 18108  004926                     l6566:
 18109                           
 18110                           ;mcc_generated_files/eusart2.c: 195:     PIE3bits.TX2IE = 1;
 18111  004926  010E               	movlb	14	; () banked
 18112  004928  8DC5               	bsf	197,6,b	;volatile
 18113  00492A                     
 18114                           ; BSR set to: 14
 18115  00492A  0012               	return		;funcret
 18116  00492C                     __end_of_EUSART2_Write:
 18117                           	opt callstack 0
 18118                           
 18119 ;; *************** function _abs *****************
 18120 ;; Defined at:
 18121 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
 18122 ;; Parameters:    Size  Location     Type
 18123 ;;  a               2   22[COMRAM] int 
 18124 ;; Auto vars:     Size  Location     Type
 18125 ;;		None
 18126 ;; Return value:  Size  Location     Type
 18127 ;;                  2   22[COMRAM] int 
 18128 ;; Registers used:
 18129 ;;		wreg, status,2, status,0
 18130 ;; Tracked objects:
 18131 ;;		On entry : 0/0
 18132 ;;		On exit  : 0/0
 18133 ;;		Unchanged: 0/0
 18134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18135 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18137 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18138 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18139 ;;Total ram usage:        4 bytes
 18140 ;; Hardware stack levels used:    1
 18141 ;; Hardware stack levels required when called:    4
 18142 ;; This function calls:
 18143 ;;		Nothing
 18144 ;; This function is called by:
 18145 ;;		_dtoa
 18146 ;; This function uses a non-reentrant model
 18147 ;;
 18148                           
 18149                           	psect	text70
 18150  004DF4                     __ptext70:
 18151                           	opt callstack 0
 18152  004DF4                     _abs:
 18153                           	opt callstack 22
 18154  004DF4  BE18               	btfsc	(abs@a+1)^0,7,c
 18155  004DF6  EF07  F027         	goto	u6050
 18156  004DFA  5018               	movf	(abs@a+1)^0,w,c
 18157  004DFC  E106               	bnz	u6051
 18158  004DFE  0417               	decf	abs@a^0,w,c
 18159  004E00  B0D8               	btfsc	status,0,c
 18160  004E02  EF05  F027         	goto	u6051
 18161  004E06  EF07  F027         	goto	u6050
 18162  004E0A                     u6051:
 18163  004E0A  EF15  F027         	goto	l2041
 18164  004E0E                     u6050:
 18165  004E0E  C017  F019         	movff	abs@a,??_abs
 18166  004E12  C018  F01A         	movff	abs@a+1,??_abs+1
 18167  004E16  1E19               	comf	??_abs^0,f,c
 18168  004E18  1E1A               	comf	(??_abs+1)^0,f,c
 18169  004E1A  4A19               	infsnz	??_abs^0,f,c
 18170  004E1C  2A1A               	incf	(??_abs+1)^0,f,c
 18171  004E1E  C019  F017         	movff	??_abs,?_abs
 18172  004E22  C01A  F018         	movff	??_abs+1,?_abs+1
 18173  004E26  EF19  F027         	goto	l2044
 18174  004E2A                     l2041:
 18175  004E2A  C017  F017         	movff	abs@a,?_abs
 18176  004E2E  C018  F018         	movff	abs@a+1,?_abs+1
 18177  004E32                     l2044:
 18178  004E32  0012               	return		;funcret
 18179  004E34                     __end_of_abs:
 18180                           	opt callstack 0
 18181                           
 18182 ;; *************** function ___aomod *****************
 18183 ;; Defined at:
 18184 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
 18185 ;; Parameters:    Size  Location     Type
 18186 ;;  dividend        8    4[COMRAM] long long 
 18187 ;;  divisor         8   12[COMRAM] long long 
 18188 ;; Auto vars:     Size  Location     Type
 18189 ;;  sign            1   21[COMRAM] unsigned char 
 18190 ;;  counter         1   20[COMRAM] unsigned char 
 18191 ;; Return value:  Size  Location     Type
 18192 ;;                  8    4[COMRAM] long long 
 18193 ;; Registers used:
 18194 ;;		wreg, status,2, status,0
 18195 ;; Tracked objects:
 18196 ;;		On entry : 0/0
 18197 ;;		On exit  : 0/0
 18198 ;;		Unchanged: 0/0
 18199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18200 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18201 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18203 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18204 ;;Total ram usage:       18 bytes
 18205 ;; Hardware stack levels used:    1
 18206 ;; Hardware stack levels required when called:    4
 18207 ;; This function calls:
 18208 ;;		Nothing
 18209 ;; This function is called by:
 18210 ;;		_dtoa
 18211 ;; This function uses a non-reentrant model
 18212 ;;
 18213                           
 18214                           	psect	text71
 18215  00354A                     __ptext71:
 18216                           	opt callstack 0
 18217  00354A                     ___aomod:
 18218                           	opt callstack 22
 18219  00354A  0E00               	movlw	0
 18220  00354C  6E16               	movwf	___aomod@sign^0,c
 18221  00354E  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
 18222  003550  EFAE  F01A         	goto	u6220
 18223  003554  EFAC  F01A         	goto	u6221
 18224  003558                     u6221:
 18225  003558  EFC0  F01A         	goto	l6712
 18226  00355C                     u6220:
 18227  00355C  1E0C               	comf	(___aomod@dividend+7)^0,f,c
 18228  00355E  1E0B               	comf	(___aomod@dividend+6)^0,f,c
 18229  003560  1E0A               	comf	(___aomod@dividend+5)^0,f,c
 18230  003562  1E09               	comf	(___aomod@dividend+4)^0,f,c
 18231  003564  1E08               	comf	(___aomod@dividend+3)^0,f,c
 18232  003566  1E07               	comf	(___aomod@dividend+2)^0,f,c
 18233  003568  1E06               	comf	(___aomod@dividend+1)^0,f,c
 18234  00356A  6C05               	negf	___aomod@dividend^0,c
 18235  00356C  0E00               	movlw	0
 18236  00356E  2206               	addwfc	(___aomod@dividend+1)^0,f,c
 18237  003570  2207               	addwfc	(___aomod@dividend+2)^0,f,c
 18238  003572  2208               	addwfc	(___aomod@dividend+3)^0,f,c
 18239  003574  2209               	addwfc	(___aomod@dividend+4)^0,f,c
 18240  003576  220A               	addwfc	(___aomod@dividend+5)^0,f,c
 18241  003578  220B               	addwfc	(___aomod@dividend+6)^0,f,c
 18242  00357A  220C               	addwfc	(___aomod@dividend+7)^0,f,c
 18243  00357C  0E01               	movlw	1
 18244  00357E  6E16               	movwf	___aomod@sign^0,c
 18245  003580                     l6712:
 18246  003580  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
 18247  003582  EFC7  F01A         	goto	u6230
 18248  003586  EFC5  F01A         	goto	u6231
 18249  00358A                     u6231:
 18250  00358A  EFD7  F01A         	goto	l6716
 18251  00358E                     u6230:
 18252  00358E  1E14               	comf	(___aomod@divisor+7)^0,f,c
 18253  003590  1E13               	comf	(___aomod@divisor+6)^0,f,c
 18254  003592  1E12               	comf	(___aomod@divisor+5)^0,f,c
 18255  003594  1E11               	comf	(___aomod@divisor+4)^0,f,c
 18256  003596  1E10               	comf	(___aomod@divisor+3)^0,f,c
 18257  003598  1E0F               	comf	(___aomod@divisor+2)^0,f,c
 18258  00359A  1E0E               	comf	(___aomod@divisor+1)^0,f,c
 18259  00359C  6C0D               	negf	___aomod@divisor^0,c
 18260  00359E  0E00               	movlw	0
 18261  0035A0  220E               	addwfc	(___aomod@divisor+1)^0,f,c
 18262  0035A2  220F               	addwfc	(___aomod@divisor+2)^0,f,c
 18263  0035A4  2210               	addwfc	(___aomod@divisor+3)^0,f,c
 18264  0035A6  2211               	addwfc	(___aomod@divisor+4)^0,f,c
 18265  0035A8  2212               	addwfc	(___aomod@divisor+5)^0,f,c
 18266  0035AA  2213               	addwfc	(___aomod@divisor+6)^0,f,c
 18267  0035AC  2214               	addwfc	(___aomod@divisor+7)^0,f,c
 18268  0035AE                     l6716:
 18269  0035AE  500D               	movf	___aomod@divisor^0,w,c
 18270  0035B0  100E               	iorwf	(___aomod@divisor+1)^0,w,c
 18271  0035B2  100F               	iorwf	(___aomod@divisor+2)^0,w,c
 18272  0035B4  1010               	iorwf	(___aomod@divisor+3)^0,w,c
 18273  0035B6  1011               	iorwf	(___aomod@divisor+4)^0,w,c
 18274  0035B8  1012               	iorwf	(___aomod@divisor+5)^0,w,c
 18275  0035BA  1013               	iorwf	(___aomod@divisor+6)^0,w,c
 18276  0035BC  1014               	iorwf	(___aomod@divisor+7)^0,w,c
 18277  0035BE  B4D8               	btfsc	status,2,c
 18278  0035C0  EFE4  F01A         	goto	u6241
 18279  0035C4  EFE6  F01A         	goto	u6240
 18280  0035C8                     u6241:
 18281  0035C8  EF2E  F01B         	goto	l6732
 18282  0035CC                     u6240:
 18283  0035CC  0E01               	movlw	1
 18284  0035CE  6E15               	movwf	___aomod@counter^0,c
 18285  0035D0  EFF4  F01A         	goto	l6722
 18286  0035D4                     l6720:
 18287  0035D4  90D8               	bcf	status,0,c
 18288  0035D6  360D               	rlcf	___aomod@divisor^0,f,c
 18289  0035D8  360E               	rlcf	(___aomod@divisor+1)^0,f,c
 18290  0035DA  360F               	rlcf	(___aomod@divisor+2)^0,f,c
 18291  0035DC  3610               	rlcf	(___aomod@divisor+3)^0,f,c
 18292  0035DE  3611               	rlcf	(___aomod@divisor+4)^0,f,c
 18293  0035E0  3612               	rlcf	(___aomod@divisor+5)^0,f,c
 18294  0035E2  3613               	rlcf	(___aomod@divisor+6)^0,f,c
 18295  0035E4  3614               	rlcf	(___aomod@divisor+7)^0,f,c
 18296  0035E6  2A15               	incf	___aomod@counter^0,f,c
 18297  0035E8                     l6722:
 18298  0035E8  AE14               	btfss	(___aomod@divisor+7)^0,7,c
 18299  0035EA  EFF9  F01A         	goto	u6251
 18300  0035EE  EFFB  F01A         	goto	u6250
 18301  0035F2                     u6251:
 18302  0035F2  EFEA  F01A         	goto	l6720
 18303  0035F6                     u6250:
 18304  0035F6                     l6724:
 18305  0035F6  500D               	movf	___aomod@divisor^0,w,c
 18306  0035F8  5C05               	subwf	___aomod@dividend^0,w,c
 18307  0035FA  500E               	movf	(___aomod@divisor+1)^0,w,c
 18308  0035FC  5806               	subwfb	(___aomod@dividend+1)^0,w,c
 18309  0035FE  500F               	movf	(___aomod@divisor+2)^0,w,c
 18310  003600  5807               	subwfb	(___aomod@dividend+2)^0,w,c
 18311  003602  5010               	movf	(___aomod@divisor+3)^0,w,c
 18312  003604  5808               	subwfb	(___aomod@dividend+3)^0,w,c
 18313  003606  5011               	movf	(___aomod@divisor+4)^0,w,c
 18314  003608  5809               	subwfb	(___aomod@dividend+4)^0,w,c
 18315  00360A  5012               	movf	(___aomod@divisor+5)^0,w,c
 18316  00360C  580A               	subwfb	(___aomod@dividend+5)^0,w,c
 18317  00360E  5013               	movf	(___aomod@divisor+6)^0,w,c
 18318  003610  580B               	subwfb	(___aomod@dividend+6)^0,w,c
 18319  003612  5014               	movf	(___aomod@divisor+7)^0,w,c
 18320  003614  580C               	subwfb	(___aomod@dividend+7)^0,w,c
 18321  003616  A0D8               	btfss	status,0,c
 18322  003618  EF10  F01B         	goto	u6261
 18323  00361C  EF12  F01B         	goto	u6260
 18324  003620                     u6261:
 18325  003620  EF22  F01B         	goto	l6728
 18326  003624                     u6260:
 18327  003624  500D               	movf	___aomod@divisor^0,w,c
 18328  003626  5E05               	subwf	___aomod@dividend^0,f,c
 18329  003628  500E               	movf	(___aomod@divisor+1)^0,w,c
 18330  00362A  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
 18331  00362C  500F               	movf	(___aomod@divisor+2)^0,w,c
 18332  00362E  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
 18333  003630  5010               	movf	(___aomod@divisor+3)^0,w,c
 18334  003632  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
 18335  003634  5011               	movf	(___aomod@divisor+4)^0,w,c
 18336  003636  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
 18337  003638  5012               	movf	(___aomod@divisor+5)^0,w,c
 18338  00363A  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
 18339  00363C  5013               	movf	(___aomod@divisor+6)^0,w,c
 18340  00363E  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
 18341  003640  5014               	movf	(___aomod@divisor+7)^0,w,c
 18342  003642  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
 18343  003644                     l6728:
 18344  003644  90D8               	bcf	status,0,c
 18345  003646  3214               	rrcf	(___aomod@divisor+7)^0,f,c
 18346  003648  3213               	rrcf	(___aomod@divisor+6)^0,f,c
 18347  00364A  3212               	rrcf	(___aomod@divisor+5)^0,f,c
 18348  00364C  3211               	rrcf	(___aomod@divisor+4)^0,f,c
 18349  00364E  3210               	rrcf	(___aomod@divisor+3)^0,f,c
 18350  003650  320F               	rrcf	(___aomod@divisor+2)^0,f,c
 18351  003652  320E               	rrcf	(___aomod@divisor+1)^0,f,c
 18352  003654  320D               	rrcf	___aomod@divisor^0,f,c
 18353  003656  2E15               	decfsz	___aomod@counter^0,f,c
 18354  003658  EFFB  F01A         	goto	l6724
 18355  00365C                     l6732:
 18356  00365C  5016               	movf	___aomod@sign^0,w,c
 18357  00365E  B4D8               	btfsc	status,2,c
 18358  003660  EF34  F01B         	goto	u6271
 18359  003664  EF36  F01B         	goto	u6270
 18360  003668                     u6271:
 18361  003668  EF46  F01B         	goto	l6736
 18362  00366C                     u6270:
 18363  00366C  1E0C               	comf	(___aomod@dividend+7)^0,f,c
 18364  00366E  1E0B               	comf	(___aomod@dividend+6)^0,f,c
 18365  003670  1E0A               	comf	(___aomod@dividend+5)^0,f,c
 18366  003672  1E09               	comf	(___aomod@dividend+4)^0,f,c
 18367  003674  1E08               	comf	(___aomod@dividend+3)^0,f,c
 18368  003676  1E07               	comf	(___aomod@dividend+2)^0,f,c
 18369  003678  1E06               	comf	(___aomod@dividend+1)^0,f,c
 18370  00367A  6C05               	negf	___aomod@dividend^0,c
 18371  00367C  0E00               	movlw	0
 18372  00367E  2206               	addwfc	(___aomod@dividend+1)^0,f,c
 18373  003680  2207               	addwfc	(___aomod@dividend+2)^0,f,c
 18374  003682  2208               	addwfc	(___aomod@dividend+3)^0,f,c
 18375  003684  2209               	addwfc	(___aomod@dividend+4)^0,f,c
 18376  003686  220A               	addwfc	(___aomod@dividend+5)^0,f,c
 18377  003688  220B               	addwfc	(___aomod@dividend+6)^0,f,c
 18378  00368A  220C               	addwfc	(___aomod@dividend+7)^0,f,c
 18379  00368C                     l6736:
 18380  00368C  C005  F005         	movff	___aomod@dividend,?___aomod
 18381  003690  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
 18382  003694  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
 18383  003698  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
 18384  00369C  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
 18385  0036A0  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
 18386  0036A4  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
 18387  0036A8  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
 18388  0036AC  0012               	return		;funcret
 18389  0036AE                     __end_of___aomod:
 18390                           	opt callstack 0
 18391                           
 18392 ;; *************** function ___aodiv *****************
 18393 ;; Defined at:
 18394 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
 18395 ;; Parameters:    Size  Location     Type
 18396 ;;  dividend        8    4[COMRAM] long long 
 18397 ;;  divisor         8   12[COMRAM] long long 
 18398 ;; Auto vars:     Size  Location     Type
 18399 ;;  quotient        8   22[COMRAM] long long 
 18400 ;;  sign            1   21[COMRAM] unsigned char 
 18401 ;;  counter         1   20[COMRAM] unsigned char 
 18402 ;; Return value:  Size  Location     Type
 18403 ;;                  8    4[COMRAM] long long 
 18404 ;; Registers used:
 18405 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18406 ;; Tracked objects:
 18407 ;;		On entry : 0/0
 18408 ;;		On exit  : 0/0
 18409 ;;		Unchanged: 0/0
 18410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18411 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18412 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18414 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18415 ;;Total ram usage:       26 bytes
 18416 ;; Hardware stack levels used:    1
 18417 ;; Hardware stack levels required when called:    4
 18418 ;; This function calls:
 18419 ;;		Nothing
 18420 ;; This function is called by:
 18421 ;;		_dtoa
 18422 ;; This function uses a non-reentrant model
 18423 ;;
 18424                           
 18425                           	psect	text72
 18426  003246                     __ptext72:
 18427                           	opt callstack 0
 18428  003246                     ___aodiv:
 18429                           	opt callstack 22
 18430  003246  0E00               	movlw	0
 18431  003248  6E16               	movwf	___aodiv@sign^0,c
 18432  00324A  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
 18433  00324C  EF2C  F019         	goto	u6150
 18434  003250  EF2A  F019         	goto	u6151
 18435  003254                     u6151:
 18436  003254  EF3E  F019         	goto	l6668
 18437  003258                     u6150:
 18438  003258  1E14               	comf	(___aodiv@divisor+7)^0,f,c
 18439  00325A  1E13               	comf	(___aodiv@divisor+6)^0,f,c
 18440  00325C  1E12               	comf	(___aodiv@divisor+5)^0,f,c
 18441  00325E  1E11               	comf	(___aodiv@divisor+4)^0,f,c
 18442  003260  1E10               	comf	(___aodiv@divisor+3)^0,f,c
 18443  003262  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
 18444  003264  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
 18445  003266  6C0D               	negf	___aodiv@divisor^0,c
 18446  003268  0E00               	movlw	0
 18447  00326A  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
 18448  00326C  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
 18449  00326E  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
 18450  003270  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
 18451  003272  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
 18452  003274  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
 18453  003276  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
 18454  003278  0E01               	movlw	1
 18455  00327A  6E16               	movwf	___aodiv@sign^0,c
 18456  00327C                     l6668:
 18457  00327C  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
 18458  00327E  EF45  F019         	goto	u6160
 18459  003282  EF43  F019         	goto	u6161
 18460  003286                     u6161:
 18461  003286  EF57  F019         	goto	l6674
 18462  00328A                     u6160:
 18463  00328A  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
 18464  00328C  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
 18465  00328E  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
 18466  003290  1E09               	comf	(___aodiv@dividend+4)^0,f,c
 18467  003292  1E08               	comf	(___aodiv@dividend+3)^0,f,c
 18468  003294  1E07               	comf	(___aodiv@dividend+2)^0,f,c
 18469  003296  1E06               	comf	(___aodiv@dividend+1)^0,f,c
 18470  003298  6C05               	negf	___aodiv@dividend^0,c
 18471  00329A  0E00               	movlw	0
 18472  00329C  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
 18473  00329E  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
 18474  0032A0  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
 18475  0032A2  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
 18476  0032A4  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
 18477  0032A6  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
 18478  0032A8  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
 18479  0032AA  0E01               	movlw	1
 18480  0032AC  1A16               	xorwf	___aodiv@sign^0,f,c
 18481  0032AE                     l6674:
 18482  0032AE  EE20  F017         	lfsr	2,___aodiv@quotient
 18483  0032B2  0E07               	movlw	7
 18484  0032B4                     u6171:
 18485  0032B4  6ADE               	clrf	postinc2,c
 18486  0032B6  06E8               	decf	wreg,f,c
 18487  0032B8  E2FD               	bc	u6171
 18488  0032BA  500D               	movf	___aodiv@divisor^0,w,c
 18489  0032BC  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
 18490  0032BE  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
 18491  0032C0  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
 18492  0032C2  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
 18493  0032C4  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
 18494  0032C6  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
 18495  0032C8  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
 18496  0032CA  B4D8               	btfsc	status,2,c
 18497  0032CC  EF6A  F019         	goto	u6181
 18498  0032D0  EF6C  F019         	goto	u6180
 18499  0032D4                     u6181:
 18500  0032D4  EFBE  F019         	goto	l6696
 18501  0032D8                     u6180:
 18502  0032D8  0E01               	movlw	1
 18503  0032DA  6E15               	movwf	___aodiv@counter^0,c
 18504  0032DC  EF7A  F019         	goto	l6682
 18505  0032E0                     l6680:
 18506  0032E0  90D8               	bcf	status,0,c
 18507  0032E2  360D               	rlcf	___aodiv@divisor^0,f,c
 18508  0032E4  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
 18509  0032E6  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
 18510  0032E8  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
 18511  0032EA  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
 18512  0032EC  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
 18513  0032EE  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
 18514  0032F0  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
 18515  0032F2  2A15               	incf	___aodiv@counter^0,f,c
 18516  0032F4                     l6682:
 18517  0032F4  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
 18518  0032F6  EF7F  F019         	goto	u6191
 18519  0032FA  EF81  F019         	goto	u6190
 18520  0032FE                     u6191:
 18521  0032FE  EF70  F019         	goto	l6680
 18522  003302                     u6190:
 18523  003302                     l6684:
 18524  003302  90D8               	bcf	status,0,c
 18525  003304  3617               	rlcf	___aodiv@quotient^0,f,c
 18526  003306  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
 18527  003308  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
 18528  00330A  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
 18529  00330C  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
 18530  00330E  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
 18531  003310  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
 18532  003312  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
 18533  003314  500D               	movf	___aodiv@divisor^0,w,c
 18534  003316  5C05               	subwf	___aodiv@dividend^0,w,c
 18535  003318  500E               	movf	(___aodiv@divisor+1)^0,w,c
 18536  00331A  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
 18537  00331C  500F               	movf	(___aodiv@divisor+2)^0,w,c
 18538  00331E  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
 18539  003320  5010               	movf	(___aodiv@divisor+3)^0,w,c
 18540  003322  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
 18541  003324  5011               	movf	(___aodiv@divisor+4)^0,w,c
 18542  003326  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
 18543  003328  5012               	movf	(___aodiv@divisor+5)^0,w,c
 18544  00332A  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
 18545  00332C  5013               	movf	(___aodiv@divisor+6)^0,w,c
 18546  00332E  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
 18547  003330  5014               	movf	(___aodiv@divisor+7)^0,w,c
 18548  003332  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
 18549  003334  A0D8               	btfss	status,0,c
 18550  003336  EF9F  F019         	goto	u6201
 18551  00333A  EFA1  F019         	goto	u6200
 18552  00333E                     u6201:
 18553  00333E  EFB2  F019         	goto	l6692
 18554  003342                     u6200:
 18555  003342  500D               	movf	___aodiv@divisor^0,w,c
 18556  003344  5E05               	subwf	___aodiv@dividend^0,f,c
 18557  003346  500E               	movf	(___aodiv@divisor+1)^0,w,c
 18558  003348  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
 18559  00334A  500F               	movf	(___aodiv@divisor+2)^0,w,c
 18560  00334C  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
 18561  00334E  5010               	movf	(___aodiv@divisor+3)^0,w,c
 18562  003350  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
 18563  003352  5011               	movf	(___aodiv@divisor+4)^0,w,c
 18564  003354  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
 18565  003356  5012               	movf	(___aodiv@divisor+5)^0,w,c
 18566  003358  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
 18567  00335A  5013               	movf	(___aodiv@divisor+6)^0,w,c
 18568  00335C  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
 18569  00335E  5014               	movf	(___aodiv@divisor+7)^0,w,c
 18570  003360  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
 18571  003362  8017               	bsf	___aodiv@quotient^0,0,c
 18572  003364                     l6692:
 18573  003364  90D8               	bcf	status,0,c
 18574  003366  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
 18575  003368  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
 18576  00336A  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
 18577  00336C  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
 18578  00336E  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
 18579  003370  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
 18580  003372  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
 18581  003374  320D               	rrcf	___aodiv@divisor^0,f,c
 18582  003376  2E15               	decfsz	___aodiv@counter^0,f,c
 18583  003378  EF81  F019         	goto	l6684
 18584  00337C                     l6696:
 18585  00337C  5016               	movf	___aodiv@sign^0,w,c
 18586  00337E  B4D8               	btfsc	status,2,c
 18587  003380  EFC4  F019         	goto	u6211
 18588  003384  EFC6  F019         	goto	u6210
 18589  003388                     u6211:
 18590  003388  EFD6  F019         	goto	l6700
 18591  00338C                     u6210:
 18592  00338C  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
 18593  00338E  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
 18594  003390  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
 18595  003392  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
 18596  003394  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
 18597  003396  1E19               	comf	(___aodiv@quotient+2)^0,f,c
 18598  003398  1E18               	comf	(___aodiv@quotient+1)^0,f,c
 18599  00339A  6C17               	negf	___aodiv@quotient^0,c
 18600  00339C  0E00               	movlw	0
 18601  00339E  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
 18602  0033A0  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
 18603  0033A2  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
 18604  0033A4  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
 18605  0033A6  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
 18606  0033A8  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
 18607  0033AA  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
 18608  0033AC                     l6700:
 18609  0033AC  C017  F005         	movff	___aodiv@quotient,?___aodiv
 18610  0033B0  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
 18611  0033B4  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
 18612  0033B8  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
 18613  0033BC  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
 18614  0033C0  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
 18615  0033C4  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
 18616  0033C8  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
 18617  0033CC  0012               	return		;funcret
 18618  0033CE                     __end_of___aodiv:
 18619                           	opt callstack 0
 18620                           
 18621 ;; *************** function _atoi *****************
 18622 ;; Defined at:
 18623 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 18624 ;; Parameters:    Size  Location     Type
 18625 ;;  s               2   11[COMRAM] PTR const unsigned char 
 18626 ;;		 -> STR_131(12), STR_129(13), STR_128(17), STR_127(15), 
 18627 ;;		 -> STR_126(33), STR_124(38), STR_123(58), STR_122(17), 
 18628 ;;		 -> STR_121(16), STR_120(4), STR_119(19), STR_118(16), 
 18629 ;;		 -> STR_117(102), STR_116(32), STR_115(33), STR_114(37), 
 18630 ;;		 -> STR_113(44), STR_112(22), STR_111(75), STR_110(67), 
 18631 ;;		 -> STR_109(75), STR_108(68), STR_107(69), STR_106(54), 
 18632 ;;		 -> STR_105(52), STR_104(53), STR_103(38), STR_102(51), 
 18633 ;;		 -> STR_101(73), STR_100(42), STR_99(36), STR_98(34), 
 18634 ;;		 -> STR_95(42), STR_94(22), STR_93(21), STR_92(20), 
 18635 ;;		 -> STR_91(19), STR_90(40), STR_80(32), STR_79(37), 
 18636 ;;		 -> STR_78(16), STR_77(24), STR_76(4), STR_75(24), 
 18637 ;;		 -> STR_74(30), STR_73(30), STR_72(37), STR_71(37), 
 18638 ;;		 -> STR_70(38), STR_69(38), STR_68(54), STR_67(36), 
 18639 ;;		 -> STR_66(32), STR_65(32), STR_64(35), STR_63(54), 
 18640 ;;		 -> STR_62(38), STR_61(54), STR_60(36), STR_59(19), 
 18641 ;;		 -> STR_58(54), STR_57(15), STR_56(30), STR_55(52), 
 18642 ;;		 -> STR_54(28), STR_53(30), STR_52(52), STR_51(25), 
 18643 ;;		 -> STR_50(30), STR_49(52), STR_48(25), STR_47(30), 
 18644 ;;		 -> STR_46(52), STR_45(23), STR_44(30), STR_43(42), 
 18645 ;;		 -> STR_42(21), STR_41(30), STR_40(52), STR_39(21), 
 18646 ;;		 -> STR_38(30), STR_37(52), STR_36(25), STR_35(30), 
 18647 ;;		 -> STR_34(52), STR_33(37), STR_32(36), STR_31(3), 
 18648 ;;		 -> STR_30(32), STR_29(32), STR_28(35), STR_27(66), 
 18649 ;;		 -> STR_26(38), STR_25(37), STR_24(37), STR_23(38), 
 18650 ;;		 -> STR_22(38), STR_21(55), STR_20(36), STR_19(30), 
 18651 ;;		 -> STR_18(30), STR_17(37), STR_16(37), STR_15(38), 
 18652 ;;		 -> STR_14(38), STR_13(54), STR_12(36), STR_11(21), 
 18653 ;;		 -> STR_10(28), STR_9(54), STR_8(27), STR_6(19), 
 18654 ;;		 -> STR_5(28), STR_4(30), STR_3(31), STR_2(21), 
 18655 ;;		 -> STR_1(21), 
 18656 ;; Auto vars:     Size  Location     Type
 18657 ;;  n               2   24[COMRAM] int 
 18658 ;;  neg             2   17[COMRAM] int 
 18659 ;; Return value:  Size  Location     Type
 18660 ;;                  2   11[COMRAM] int 
 18661 ;; Registers used:
 18662 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18663 ;; Tracked objects:
 18664 ;;		On entry : 0/0
 18665 ;;		On exit  : 0/0
 18666 ;;		Unchanged: 0/0
 18667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18668 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18669 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18670 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18671 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18672 ;;Total ram usage:       15 bytes
 18673 ;; Hardware stack levels used:    1
 18674 ;; Hardware stack levels required when called:    5
 18675 ;; This function calls:
 18676 ;;		___wmul
 18677 ;;		_isdigit
 18678 ;;		_isspace
 18679 ;; This function is called by:
 18680 ;;		_vfpfcnvrt
 18681 ;; This function uses a non-reentrant model
 18682 ;;
 18683                           
 18684                           	psect	text73
 18685  0030AC                     __ptext73:
 18686                           	opt callstack 0
 18687  0030AC                     _atoi:
 18688                           	opt callstack 22
 18689  0030AC  0E00               	movlw	0
 18690  0030AE  6E1A               	movwf	(atoi@n+1)^0,c
 18691  0030B0  0E00               	movlw	0
 18692  0030B2  6E19               	movwf	atoi@n^0,c
 18693  0030B4  0E00               	movlw	0
 18694  0030B6  6E13               	movwf	(atoi@neg+1)^0,c
 18695  0030B8  0E00               	movlw	0
 18696  0030BA  6E12               	movwf	atoi@neg^0,c
 18697  0030BC  EF62  F018         	goto	l7000
 18698  0030C0                     l6998:
 18699  0030C0  4A0C               	infsnz	atoi@s^0,f,c
 18700  0030C2  2A0D               	incf	(atoi@s+1)^0,f,c
 18701  0030C4                     l7000:
 18702  0030C4  0E01               	movlw	1
 18703  0030C6  6E18               	movwf	_atoi$2410^0,c
 18704  0030C8  C00C  FFF6         	movff	atoi@s,tblptrl
 18705  0030CC  C00D  FFF7         	movff	atoi@s+1,tblptrh
 18706  0030D0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 18707  0030D0  6AF8               	clrf	tblptru,c
 18708  0030D2                     	endif
 18709  0030D2                     	if	0	;tblptru may be non-zero
 18710  0030D2                     	endif
 18711  0030D2  0008               	tblrd		*
 18712  0030D4  50F5               	movf	tablat,w,c
 18713  0030D6  0A20               	xorlw	32
 18714  0030D8  B4D8               	btfsc	status,2,c
 18715  0030DA  EF71  F018         	goto	u6861
 18716  0030DE  EF73  F018         	goto	u6860
 18717  0030E2                     u6861:
 18718  0030E2  EF91  F018         	goto	l7008
 18719  0030E6                     u6860:
 18720  0030E6  0EF7               	movlw	247
 18721  0030E8  6E0E               	movwf	??_atoi^0,c
 18722  0030EA  0EFF               	movlw	255
 18723  0030EC  6E0F               	movwf	(??_atoi+1)^0,c
 18724  0030EE  C00C  FFF6         	movff	atoi@s,tblptrl
 18725  0030F2  C00D  FFF7         	movff	atoi@s+1,tblptrh
 18726  0030F6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 18727  0030F6  6AF8               	clrf	tblptru,c
 18728  0030F8                     	endif
 18729  0030F8                     	if	0	;tblptru may be non-zero
 18730  0030F8                     	endif
 18731  0030F8  0008               	tblrd		*
 18732  0030FA  50F5               	movf	tablat,w,c
 18733  0030FC  6E10               	movwf	(??_atoi+2)^0,c
 18734  0030FE  6A11               	clrf	(??_atoi+3)^0,c
 18735  003100  500E               	movf	??_atoi^0,w,c
 18736  003102  2610               	addwf	(??_atoi+2)^0,f,c
 18737  003104  500F               	movf	(??_atoi+1)^0,w,c
 18738  003106  2211               	addwfc	(??_atoi+3)^0,f,c
 18739  003108  5011               	movf	(??_atoi+3)^0,w,c
 18740  00310A  E109               	bnz	u6870
 18741  00310C  0E05               	movlw	5
 18742  00310E  5C10               	subwf	(??_atoi+2)^0,w,c
 18743  003110  A0D8               	btfss	status,0,c
 18744  003112  EF8D  F018         	goto	u6871
 18745  003116  EF8F  F018         	goto	u6870
 18746  00311A                     u6871:
 18747  00311A  EF91  F018         	goto	l7008
 18748  00311E                     u6870:
 18749  00311E  0E00               	movlw	0
 18750  003120  6E18               	movwf	_atoi$2410^0,c
 18751  003122                     l7008:
 18752  003122  C018  F014         	movff	_atoi$2410,_atoi$2409
 18753  003126  6A15               	clrf	(_atoi$2409+1)^0,c
 18754  003128  5014               	movf	_atoi$2409^0,w,c
 18755  00312A  1015               	iorwf	(_atoi$2409+1)^0,w,c
 18756  00312C  A4D8               	btfss	status,2,c
 18757  00312E  EF9B  F018         	goto	u6881
 18758  003132  EF9D  F018         	goto	u6880
 18759  003136                     u6881:
 18760  003136  EF60  F018         	goto	l6998
 18761  00313A                     u6880:
 18762  00313A  EFA7  F018         	goto	l7018
 18763  00313E                     l7014:
 18764  00313E  0E00               	movlw	0
 18765  003140  6E13               	movwf	(atoi@neg+1)^0,c
 18766  003142  0E01               	movlw	1
 18767  003144  6E12               	movwf	atoi@neg^0,c
 18768  003146                     l7016:
 18769  003146  4A0C               	infsnz	atoi@s^0,f,c
 18770  003148  2A0D               	incf	(atoi@s+1)^0,f,c
 18771  00314A  EFDE  F018         	goto	l7024
 18772  00314E                     l7018:
 18773  00314E  C00C  FFF6         	movff	atoi@s,tblptrl
 18774  003152  C00D  FFF7         	movff	atoi@s+1,tblptrh
 18775  003156                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 18776  003156  6AF8               	clrf	tblptru,c
 18777  003158                     	endif
 18778  003158                     	if	0	;tblptru may be non-zero
 18779  003158                     	endif
 18780  003158  0008               	tblrd		*
 18781  00315A  50F5               	movf	tablat,w,c
 18782  00315C  6E0E               	movwf	??_atoi^0,c
 18783  00315E  6A0F               	clrf	(??_atoi+1)^0,c
 18784                           
 18785                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18786                           ; Switch size 1, requested type "simple"
 18787                           ; Number of cases is 1, Range of values is 0 to 0
 18788                           ; switch strategies available:
 18789                           ; Name         Instructions Cycles
 18790                           ; simple_byte            4     3 (average)
 18791                           ;	Chosen strategy is simple_byte
 18792  003160  500F               	movf	(??_atoi+1)^0,w,c
 18793  003162  0A00               	xorlw	0	; case 0
 18794  003164  B4D8               	btfsc	status,2,c
 18795  003166  EFB7  F018         	goto	l8564
 18796  00316A  EFDE  F018         	goto	l7024
 18797  00316E                     l8564:
 18798                           
 18799                           ; Switch size 1, requested type "simple"
 18800                           ; Number of cases is 2, Range of values is 43 to 45
 18801                           ; switch strategies available:
 18802                           ; Name         Instructions Cycles
 18803                           ; simple_byte            7     4 (average)
 18804                           ;	Chosen strategy is simple_byte
 18805  00316E  500E               	movf	??_atoi^0,w,c
 18806  003170  0A2B               	xorlw	43	; case 43
 18807  003172  B4D8               	btfsc	status,2,c
 18808  003174  EFA3  F018         	goto	l7016
 18809  003178  0A06               	xorlw	6	; case 45
 18810  00317A  B4D8               	btfsc	status,2,c
 18811  00317C  EF9F  F018         	goto	l7014
 18812  003180  EFDE  F018         	goto	l7024
 18813  003184                     l7020:
 18814  003184  C019  F005         	movff	atoi@n,___wmul@multiplier
 18815  003188  C01A  F006         	movff	atoi@n+1,___wmul@multiplier+1
 18816  00318C  0E00               	movlw	0
 18817  00318E  6E08               	movwf	(___wmul@multiplicand+1)^0,c
 18818  003190  0E0A               	movlw	10
 18819  003192  6E07               	movwf	___wmul@multiplicand^0,c
 18820  003194  EC12  F028         	call	___wmul	;wreg free
 18821  003198  C00C  FFF6         	movff	atoi@s,tblptrl
 18822  00319C  C00D  FFF7         	movff	atoi@s+1,tblptrh
 18823  0031A0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 18824  0031A0  6AF8               	clrf	tblptru,c
 18825  0031A2                     	endif
 18826  0031A2                     	if	0	;tblptru may be non-zero
 18827  0031A2                     	endif
 18828  0031A2  0008               	tblrd		*
 18829  0031A4  50F5               	movf	tablat,w,c
 18830  0031A6  5E05               	subwf	?___wmul^0,f,c
 18831  0031A8  0E00               	movlw	0
 18832  0031AA  5A06               	subwfb	(?___wmul+1)^0,f,c
 18833  0031AC  0E30               	movlw	48
 18834  0031AE  2405               	addwf	?___wmul^0,w,c
 18835  0031B0  6E19               	movwf	atoi@n^0,c
 18836  0031B2  0E00               	movlw	0
 18837  0031B4  2006               	addwfc	(?___wmul+1)^0,w,c
 18838  0031B6  6E1A               	movwf	(atoi@n+1)^0,c
 18839  0031B8  EFA3  F018         	goto	l7016
 18840  0031BC                     l7024:
 18841  0031BC  0ED0               	movlw	208
 18842  0031BE  6E0E               	movwf	??_atoi^0,c
 18843  0031C0  0EFF               	movlw	255
 18844  0031C2  6E0F               	movwf	(??_atoi+1)^0,c
 18845  0031C4  C00C  FFF6         	movff	atoi@s,tblptrl
 18846  0031C8  C00D  FFF7         	movff	atoi@s+1,tblptrh
 18847  0031CC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 18848  0031CC  6AF8               	clrf	tblptru,c
 18849  0031CE                     	endif
 18850  0031CE                     	if	0	;tblptru may be non-zero
 18851  0031CE                     	endif
 18852  0031CE  0008               	tblrd		*
 18853  0031D0  50F5               	movf	tablat,w,c
 18854  0031D2  6E10               	movwf	(??_atoi+2)^0,c
 18855  0031D4  6A11               	clrf	(??_atoi+3)^0,c
 18856  0031D6  500E               	movf	??_atoi^0,w,c
 18857  0031D8  2610               	addwf	(??_atoi+2)^0,f,c
 18858  0031DA  500F               	movf	(??_atoi+1)^0,w,c
 18859  0031DC  2211               	addwfc	(??_atoi+3)^0,f,c
 18860  0031DE  5011               	movf	(??_atoi+3)^0,w,c
 18861  0031E0  E10A               	bnz	u6890
 18862  0031E2  0E0A               	movlw	10
 18863  0031E4  5C10               	subwf	(??_atoi+2)^0,w,c
 18864  0031E6  A0D8               	btfss	status,0,c
 18865  0031E8  EFF8  F018         	goto	u6891
 18866  0031EC  EFFB  F018         	goto	u6890
 18867  0031F0                     u6891:
 18868  0031F0  0E01               	movlw	1
 18869  0031F2  EFFC  F018         	goto	u6900
 18870  0031F6                     u6890:
 18871  0031F6  0E00               	movlw	0
 18872  0031F8                     u6900:
 18873  0031F8  6E16               	movwf	_atoi$2411^0,c
 18874  0031FA  6A17               	clrf	(_atoi$2411+1)^0,c
 18875  0031FC  5016               	movf	_atoi$2411^0,w,c
 18876  0031FE  1017               	iorwf	(_atoi$2411+1)^0,w,c
 18877  003200  A4D8               	btfss	status,2,c
 18878  003202  EF05  F019         	goto	u6911
 18879  003206  EF07  F019         	goto	u6910
 18880  00320A                     u6911:
 18881  00320A  EFC2  F018         	goto	l7020
 18882  00320E                     u6910:
 18883  00320E  5012               	movf	atoi@neg^0,w,c
 18884  003210  1013               	iorwf	(atoi@neg+1)^0,w,c
 18885  003212  A4D8               	btfss	status,2,c
 18886  003214  EF0E  F019         	goto	u6921
 18887  003218  EF10  F019         	goto	u6920
 18888  00321C                     u6921:
 18889  00321C  EF1E  F019         	goto	l2072
 18890  003220                     u6920:
 18891  003220  C019  F00E         	movff	atoi@n,??_atoi
 18892  003224  C01A  F00F         	movff	atoi@n+1,??_atoi+1
 18893  003228  1E0E               	comf	??_atoi^0,f,c
 18894  00322A  1E0F               	comf	(??_atoi+1)^0,f,c
 18895  00322C  4A0E               	infsnz	??_atoi^0,f,c
 18896  00322E  2A0F               	incf	(??_atoi+1)^0,f,c
 18897  003230  C00E  F00C         	movff	??_atoi,?_atoi
 18898  003234  C00F  F00D         	movff	??_atoi+1,?_atoi+1
 18899  003238  EF22  F019         	goto	l2075
 18900  00323C                     l2072:
 18901  00323C  C019  F00C         	movff	atoi@n,?_atoi
 18902  003240  C01A  F00D         	movff	atoi@n+1,?_atoi+1
 18903  003244                     l2075:
 18904  003244  0012               	return		;funcret
 18905  003246                     __end_of_atoi:
 18906                           	opt callstack 0
 18907                           
 18908 ;; *************** function _isspace *****************
 18909 ;; Defined at:
 18910 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 18911 ;; Parameters:    Size  Location     Type
 18912 ;;  c               2    4[COMRAM] int 
 18913 ;; Auto vars:     Size  Location     Type
 18914 ;;		None
 18915 ;; Return value:  Size  Location     Type
 18916 ;;                  2    4[COMRAM] int 
 18917 ;; Registers used:
 18918 ;;		wreg, status,2, status,0
 18919 ;; Tracked objects:
 18920 ;;		On entry : 0/0
 18921 ;;		On exit  : 0/0
 18922 ;;		Unchanged: 0/0
 18923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18924 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18925 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18926 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18927 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18928 ;;Total ram usage:        7 bytes
 18929 ;; Hardware stack levels used:    1
 18930 ;; Hardware stack levels required when called:    4
 18931 ;; This function calls:
 18932 ;;		Nothing
 18933 ;; This function is called by:
 18934 ;;		_atoi
 18935 ;; This function uses a non-reentrant model
 18936 ;;
 18937                           
 18938                           	psect	text74
 18939  004A96                     __ptext74:
 18940                           	opt callstack 0
 18941  004A96                     _isspace:
 18942                           	opt callstack 22
 18943  004A96  0E01               	movlw	1
 18944  004A98  6E0B               	movwf	_isspace$2436^0,c
 18945  004A9A  0E20               	movlw	32
 18946  004A9C  1805               	xorwf	isspace@c^0,w,c
 18947  004A9E  1006               	iorwf	(isspace@c+1)^0,w,c
 18948  004AA0  B4D8               	btfsc	status,2,c
 18949  004AA2  EF55  F025         	goto	u6351
 18950  004AA6  EF57  F025         	goto	u6350
 18951  004AAA                     u6351:
 18952  004AAA  EF70  F025         	goto	l6786
 18953  004AAE                     u6350:
 18954  004AAE  0EF7               	movlw	247
 18955  004AB0  6E07               	movwf	??_isspace^0,c
 18956  004AB2  0EFF               	movlw	255
 18957  004AB4  6E08               	movwf	(??_isspace+1)^0,c
 18958  004AB6  C005  F009         	movff	isspace@c,??_isspace+2
 18959  004ABA  C006  F00A         	movff	isspace@c+1,??_isspace+3
 18960  004ABE  5007               	movf	??_isspace^0,w,c
 18961  004AC0  2609               	addwf	(??_isspace+2)^0,f,c
 18962  004AC2  5008               	movf	(??_isspace+1)^0,w,c
 18963  004AC4  220A               	addwfc	(??_isspace+3)^0,f,c
 18964  004AC6  500A               	movf	(??_isspace+3)^0,w,c
 18965  004AC8  E109               	bnz	u6360
 18966  004ACA  0E05               	movlw	5
 18967  004ACC  5C09               	subwf	(??_isspace+2)^0,w,c
 18968  004ACE  A0D8               	btfss	status,0,c
 18969  004AD0  EF6C  F025         	goto	u6361
 18970  004AD4  EF6E  F025         	goto	u6360
 18971  004AD8                     u6361:
 18972  004AD8  EF70  F025         	goto	l6786
 18973  004ADC                     u6360:
 18974  004ADC  0E00               	movlw	0
 18975  004ADE  6E0B               	movwf	_isspace$2436^0,c
 18976  004AE0                     l6786:
 18977  004AE0  C00B  F005         	movff	_isspace$2436,?_isspace
 18978  004AE4  6A06               	clrf	(?_isspace+1)^0,c
 18979  004AE6  0012               	return		;funcret
 18980  004AE8                     __end_of_isspace:
 18981                           	opt callstack 0
 18982                           
 18983 ;; *************** function _isdigit *****************
 18984 ;; Defined at:
 18985 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 18986 ;; Parameters:    Size  Location     Type
 18987 ;;  c               2    4[COMRAM] int 
 18988 ;; Auto vars:     Size  Location     Type
 18989 ;;		None
 18990 ;; Return value:  Size  Location     Type
 18991 ;;                  2    4[COMRAM] int 
 18992 ;; Registers used:
 18993 ;;		wreg, status,2, status,0
 18994 ;; Tracked objects:
 18995 ;;		On entry : 0/0
 18996 ;;		On exit  : 0/0
 18997 ;;		Unchanged: 0/0
 18998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18999 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19001 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19002 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19003 ;;Total ram usage:        6 bytes
 19004 ;; Hardware stack levels used:    1
 19005 ;; Hardware stack levels required when called:    4
 19006 ;; This function calls:
 19007 ;;		Nothing
 19008 ;; This function is called by:
 19009 ;;		_vfpfcnvrt
 19010 ;;		_atoi
 19011 ;; This function uses a non-reentrant model
 19012 ;;
 19013                           
 19014                           	psect	text75
 19015  004F18                     __ptext75:
 19016                           	opt callstack 0
 19017  004F18                     _isdigit:
 19018                           	opt callstack 23
 19019  004F18  0ED0               	movlw	208
 19020  004F1A  6E07               	movwf	??_isdigit^0,c
 19021  004F1C  0EFF               	movlw	255
 19022  004F1E  6E08               	movwf	(??_isdigit+1)^0,c
 19023  004F20  C005  F009         	movff	isdigit@c,??_isdigit+2
 19024  004F24  C006  F00A         	movff	isdigit@c+1,??_isdigit+3
 19025  004F28  5007               	movf	??_isdigit^0,w,c
 19026  004F2A  2609               	addwf	(??_isdigit+2)^0,f,c
 19027  004F2C  5008               	movf	(??_isdigit+1)^0,w,c
 19028  004F2E  220A               	addwfc	(??_isdigit+3)^0,f,c
 19029  004F30  500A               	movf	(??_isdigit+3)^0,w,c
 19030  004F32  E10A               	bnz	u6130
 19031  004F34  0E0A               	movlw	10
 19032  004F36  5C09               	subwf	(??_isdigit+2)^0,w,c
 19033  004F38  A0D8               	btfss	status,0,c
 19034  004F3A  EFA1  F027         	goto	u6131
 19035  004F3E  EFA4  F027         	goto	u6130
 19036  004F42                     u6131:
 19037  004F42  0E01               	movlw	1
 19038  004F44  EFA5  F027         	goto	u6140
 19039  004F48                     u6130:
 19040  004F48  0E00               	movlw	0
 19041  004F4A                     u6140:
 19042  004F4A  6E05               	movwf	?_isdigit^0,c
 19043  004F4C  6A06               	clrf	(?_isdigit+1)^0,c
 19044  004F4E  0012               	return		;funcret
 19045  004F50                     __end_of_isdigit:
 19046                           	opt callstack 0
 19047                           
 19048 ;; *************** function ___wmul *****************
 19049 ;; Defined at:
 19050 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 19051 ;; Parameters:    Size  Location     Type
 19052 ;;  multiplier      2    4[COMRAM] unsigned int 
 19053 ;;  multiplicand    2    6[COMRAM] unsigned int 
 19054 ;; Auto vars:     Size  Location     Type
 19055 ;;  product         2    8[COMRAM] unsigned int 
 19056 ;; Return value:  Size  Location     Type
 19057 ;;                  2    4[COMRAM] unsigned int 
 19058 ;; Registers used:
 19059 ;;		wreg, status,2, status,0, prodl, prodh
 19060 ;; Tracked objects:
 19061 ;;		On entry : 0/0
 19062 ;;		On exit  : 0/0
 19063 ;;		Unchanged: 0/0
 19064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19065 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19066 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19068 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19069 ;;Total ram usage:        6 bytes
 19070 ;; Hardware stack levels used:    1
 19071 ;; Hardware stack levels required when called:    4
 19072 ;; This function calls:
 19073 ;;		Nothing
 19074 ;; This function is called by:
 19075 ;;		_atoi
 19076 ;; This function uses a non-reentrant model
 19077 ;;
 19078                           
 19079                           	psect	text76
 19080  005024                     __ptext76:
 19081                           	opt callstack 0
 19082  005024                     ___wmul:
 19083                           	opt callstack 22
 19084  005024  5005               	movf	___wmul@multiplier^0,w,c
 19085  005026  0207               	mulwf	___wmul@multiplicand^0,c
 19086  005028  CFF3 F009          	movff	prodl,___wmul@product
 19087  00502C  CFF4 F00A          	movff	prodh,___wmul@product+1
 19088  005030  5005               	movf	___wmul@multiplier^0,w,c
 19089  005032  0208               	mulwf	(___wmul@multiplicand+1)^0,c
 19090  005034  50F3               	movf	243,w,c
 19091  005036  260A               	addwf	(___wmul@product+1)^0,f,c
 19092  005038  5006               	movf	(___wmul@multiplier+1)^0,w,c
 19093  00503A  0207               	mulwf	___wmul@multiplicand^0,c
 19094  00503C  50F3               	movf	243,w,c
 19095  00503E  260A               	addwf	(___wmul@product+1)^0,f,c
 19096  005040  C009  F005         	movff	___wmul@product,?___wmul
 19097  005044  C00A  F006         	movff	___wmul@product+1,?___wmul+1
 19098  005048  0012               	return		;funcret
 19099  00504A                     __end_of___wmul:
 19100                           	opt callstack 0
 19101                           
 19102 ;; *************** function _ModbusError *****************
 19103 ;; Defined at:
 19104 ;;		line 622 in file "Modbus.c"
 19105 ;; Parameters:    Size  Location     Type
 19106 ;;  ErrorCode       2   19[COMRAM] int 
 19107 ;; Auto vars:     Size  Location     Type
 19108 ;;  i               2    0        int 
 19109 ;; Return value:  Size  Location     Type
 19110 ;;                  1    wreg      void 
 19111 ;; Registers used:
 19112 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19113 ;; Tracked objects:
 19114 ;;		On entry : 0/0
 19115 ;;		On exit  : 0/0
 19116 ;;		Unchanged: 0/0
 19117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19118 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19119 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19121 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19122 ;;Total ram usage:        4 bytes
 19123 ;; Hardware stack levels used:    1
 19124 ;; Hardware stack levels required when called:    6
 19125 ;; This function calls:
 19126 ;;		_UART1_Write_string
 19127 ;;		_generateCRC
 19128 ;; This function is called by:
 19129 ;;		_main
 19130 ;;		_ModbusFC03
 19131 ;;		_ModbusFC04
 19132 ;;		_ModbusFC10
 19133 ;; This function uses a non-reentrant model
 19134 ;;
 19135                           
 19136                           	psect	text77
 19137  004144                     __ptext77:
 19138                           	opt callstack 0
 19139  004144                     _ModbusError:
 19140                           	opt callstack 23
 19141  004144                     
 19142                           ;Modbus.c: 627:     MBResCnt = 0;
 19143  004144  0E00               	movlw	0
 19144  004146  0100               	movlb	0	; () banked
 19145  004148  6FD8               	movwf	(_MBResCnt+1)& (0+255),b
 19146  00414A  0E00               	movlw	0
 19147  00414C  6FD7               	movwf	_MBResCnt& (0+255),b
 19148  00414E                     
 19149                           ; BSR set to: 0
 19150                           ;Modbus.c: 628:     MBRespon[MBResCnt] = ModbusData[0];
 19151  00414E  0E57               	movlw	low _MBRespon
 19152  004150  25D7               	addwf	_MBResCnt& (0+255),w,b
 19153  004152  6ED9               	movwf	fsr2l,c
 19154  004154  0E02               	movlw	high _MBRespon
 19155  004156  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 19156  004158  6EDA               	movwf	fsr2h,c
 19157  00415A  C100  FFDF         	movff	_ModbusData,indf2
 19158  00415E                     
 19159                           ; BSR set to: 0
 19160                           ;Modbus.c: 629:     MBResCnt++;
 19161  00415E  4BD7               	infsnz	_MBResCnt& (0+255),f,b
 19162  004160  2BD8               	incf	(_MBResCnt+1)& (0+255),f,b
 19163  004162                     
 19164                           ; BSR set to: 0
 19165                           ;Modbus.c: 630:     MBRespon[MBResCnt] = ModbusData[1] + 128;
 19166  004162  0E57               	movlw	low _MBRespon
 19167  004164  25D7               	addwf	_MBResCnt& (0+255),w,b
 19168  004166  6ED9               	movwf	fsr2l,c
 19169  004168  0E02               	movlw	high _MBRespon
 19170  00416A  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 19171  00416C  6EDA               	movwf	fsr2h,c
 19172  00416E  0101               	movlb	1	; () banked
 19173  004170  5101               	movf	(_ModbusData+1)& (0+255),w,b
 19174  004172  0F80               	addlw	128
 19175  004174  6EDF               	movwf	indf2,c
 19176  004176                     
 19177                           ; BSR set to: 1
 19178                           ;Modbus.c: 631:     MBResCnt++;
 19179  004176  0100               	movlb	0	; () banked
 19180  004178  4BD7               	infsnz	_MBResCnt& (0+255),f,b
 19181  00417A  2BD8               	incf	(_MBResCnt+1)& (0+255),f,b
 19182  00417C                     
 19183                           ; BSR set to: 0
 19184                           ;Modbus.c: 632:     MBRespon[MBResCnt] = ErrorCode;
 19185  00417C  0E57               	movlw	low _MBRespon
 19186  00417E  25D7               	addwf	_MBResCnt& (0+255),w,b
 19187  004180  6ED9               	movwf	fsr2l,c
 19188  004182  0E02               	movlw	high _MBRespon
 19189  004184  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 19190  004186  6EDA               	movwf	fsr2h,c
 19191  004188  C014  FFDF         	movff	ModbusError@ErrorCode,indf2
 19192  00418C                     
 19193                           ; BSR set to: 0
 19194                           ;Modbus.c: 633:     MBResCnt++;
 19195  00418C  4BD7               	infsnz	_MBResCnt& (0+255),f,b
 19196  00418E  2BD8               	incf	(_MBResCnt+1)& (0+255),f,b
 19197  004190                     
 19198                           ; BSR set to: 0
 19199                           ;Modbus.c: 635:     ByteHi = generateCRC(MBResCnt, 1);
 19200  004190  C0D7  F005         	movff	_MBResCnt,generateCRC@MessCnt
 19201  004194  C0D8  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
 19202  004198  0E01               	movlw	1
 19203  00419A  6E07               	movwf	generateCRC@HiOrLo^0,c
 19204  00419C  ECA0  F01E         	call	_generateCRC	;wreg free
 19205  0041A0  C005  F0D5         	movff	?_generateCRC,_ByteHi
 19206  0041A4  C006  F0D6         	movff	?_generateCRC+1,_ByteHi+1
 19207  0041A8                     
 19208                           ;Modbus.c: 636:     ByteLo = generateCRC(MBResCnt, 0);
 19209  0041A8  C0D7  F005         	movff	_MBResCnt,generateCRC@MessCnt
 19210  0041AC  C0D8  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
 19211  0041B0  0E00               	movlw	0
 19212  0041B2  6E07               	movwf	generateCRC@HiOrLo^0,c
 19213  0041B4  ECA0  F01E         	call	_generateCRC	;wreg free
 19214  0041B8  C005  F0F6         	movff	?_generateCRC,_ByteLo
 19215  0041BC  C006  F0F7         	movff	?_generateCRC+1,_ByteLo+1
 19216  0041C0                     
 19217                           ;Modbus.c: 638:     MBRespon[MBResCnt] = ByteHi;
 19218  0041C0  0E57               	movlw	low _MBRespon
 19219  0041C2  0100               	movlb	0	; () banked
 19220  0041C4  25D7               	addwf	_MBResCnt& (0+255),w,b
 19221  0041C6  6ED9               	movwf	fsr2l,c
 19222  0041C8  0E02               	movlw	high _MBRespon
 19223  0041CA  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 19224  0041CC  6EDA               	movwf	fsr2h,c
 19225  0041CE  C0D5  FFDF         	movff	_ByteHi,indf2
 19226  0041D2                     
 19227                           ; BSR set to: 0
 19228                           ;Modbus.c: 639:     MBRespon[MBResCnt +1] = ByteLo;
 19229  0041D2  0E58               	movlw	low (_MBRespon+1)
 19230  0041D4  25D7               	addwf	_MBResCnt& (0+255),w,b
 19231  0041D6  6ED9               	movwf	fsr2l,c
 19232  0041D8  0E02               	movlw	high (_MBRespon+1)
 19233  0041DA  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 19234  0041DC  6EDA               	movwf	fsr2h,c
 19235  0041DE  C0F6  FFDF         	movff	_ByteLo,indf2
 19236  0041E2                     
 19237                           ; BSR set to: 0
 19238                           ;Modbus.c: 640:     MBResCnt = MBResCnt +2;
 19239  0041E2  0E02               	movlw	2
 19240  0041E4  25D7               	addwf	_MBResCnt& (0+255),w,b
 19241  0041E6  6FD7               	movwf	_MBResCnt& (0+255),b
 19242  0041E8  0E00               	movlw	0
 19243  0041EA  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 19244  0041EC  6FD8               	movwf	(_MBResCnt+1)& (0+255),b
 19245  0041EE                     
 19246                           ; BSR set to: 0
 19247                           ;Modbus.c: 642:     UART1_Write_string(MBRespon,MBResCnt);
 19248  0041EE  0E57               	movlw	low _MBRespon
 19249  0041F0  6E06               	movwf	UART1_Write_string@data^0,c
 19250  0041F2  0E02               	movlw	high _MBRespon
 19251  0041F4  6E07               	movwf	(UART1_Write_string@data+1)^0,c
 19252  0041F6  C0D7  F008         	movff	_MBResCnt,UART1_Write_string@data_len
 19253  0041FA  C0D8  F009         	movff	_MBResCnt+1,UART1_Write_string@data_len+1
 19254  0041FE  EC6D  F023         	call	_UART1_Write_string	;wreg free
 19255  004202  0012               	return		;funcret
 19256  004204                     __end_of_ModbusError:
 19257                           	opt callstack 0
 19258                           
 19259 ;; *************** function _generateCRC *****************
 19260 ;; Defined at:
 19261 ;;		line 514 in file "Modbus.c"
 19262 ;; Parameters:    Size  Location     Type
 19263 ;;  MessCnt         2    4[COMRAM] int 
 19264 ;;  HiOrLo          1    6[COMRAM] _Bool 
 19265 ;; Auto vars:     Size  Location     Type
 19266 ;;  crc             2   17[COMRAM] unsigned int 
 19267 ;;  j               2   15[COMRAM] int 
 19268 ;;  i               2   13[COMRAM] int 
 19269 ;;  crcLow          2   11[COMRAM] unsigned int 
 19270 ;;  crcHigh         2    9[COMRAM] unsigned int 
 19271 ;; Return value:  Size  Location     Type
 19272 ;;                  2    4[COMRAM] unsigned int 
 19273 ;; Registers used:
 19274 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19275 ;; Tracked objects:
 19276 ;;		On entry : 0/0
 19277 ;;		On exit  : 0/0
 19278 ;;		Unchanged: 0/0
 19279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19280 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19281 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19282 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19283 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19284 ;;Total ram usage:       15 bytes
 19285 ;; Hardware stack levels used:    1
 19286 ;; Hardware stack levels required when called:    4
 19287 ;; This function calls:
 19288 ;;		Nothing
 19289 ;; This function is called by:
 19290 ;;		_ModbusFC03
 19291 ;;		_ModbusFC04
 19292 ;;		_ModbusFC10
 19293 ;;		_ModbusError
 19294 ;; This function uses a non-reentrant model
 19295 ;;
 19296                           
 19297                           	psect	text78
 19298  003D40                     __ptext78:
 19299                           	opt callstack 0
 19300  003D40                     _generateCRC:
 19301                           	opt callstack 25
 19302  003D40                     
 19303                           ;Modbus.c: 515:   unsigned int crc = 0xFFFF;
 19304  003D40  6812               	setf	generateCRC@crc^0,c
 19305  003D42  6813               	setf	(generateCRC@crc+1)^0,c
 19306  003D44                     
 19307                           ;Modbus.c: 517:   unsigned int crcLow = 0;
 19308  003D44  0E00               	movlw	0
 19309  003D46  6E0D               	movwf	(generateCRC@crcLow+1)^0,c
 19310  003D48  0E00               	movlw	0
 19311  003D4A  6E0C               	movwf	generateCRC@crcLow^0,c
 19312                           
 19313                           ;Modbus.c: 518:   int i,j = 0;
 19314  003D4C  0E00               	movlw	0
 19315  003D4E  6E11               	movwf	(generateCRC@j+1)^0,c
 19316  003D50  0E00               	movlw	0
 19317  003D52  6E10               	movwf	generateCRC@j^0,c
 19318                           
 19319                           ;Modbus.c: 520:     for(i=0;i<MessCnt;i++){
 19320  003D54  0E00               	movlw	0
 19321  003D56  6E0F               	movwf	(generateCRC@i+1)^0,c
 19322  003D58  0E00               	movlw	0
 19323  003D5A  6E0E               	movwf	generateCRC@i^0,c
 19324  003D5C  EFDF  F01E         	goto	l7390
 19325  003D60                     l7372:
 19326                           
 19327                           ;Modbus.c: 521:       crc ^= MBRespon[i];
 19328  003D60  0E57               	movlw	low _MBRespon
 19329  003D62  240E               	addwf	generateCRC@i^0,w,c
 19330  003D64  6ED9               	movwf	fsr2l,c
 19331  003D66  0E02               	movlw	high _MBRespon
 19332  003D68  200F               	addwfc	(generateCRC@i+1)^0,w,c
 19333  003D6A  6EDA               	movwf	fsr2h,c
 19334  003D6C  50DF               	movf	indf2,w,c
 19335  003D6E  6E08               	movwf	??_generateCRC^0,c
 19336  003D70  5008               	movf	??_generateCRC^0,w,c
 19337  003D72  1A12               	xorwf	generateCRC@crc^0,f,c
 19338  003D74                     
 19339                           ;Modbus.c: 522:       for(j=8; j!=0; j--){
 19340  003D74  0E00               	movlw	0
 19341  003D76  6E11               	movwf	(generateCRC@j+1)^0,c
 19342  003D78  0E08               	movlw	8
 19343  003D7A  6E10               	movwf	generateCRC@j^0,c
 19344  003D7C                     l825:
 19345                           
 19346                           ;Modbus.c: 523:         if((crc & 0x0001) != 0){
 19347  003D7C  A012               	btfss	generateCRC@crc^0,0,c
 19348  003D7E  EFC3  F01E         	goto	u7381
 19349  003D82  EFC5  F01E         	goto	u7380
 19350  003D86                     u7381:
 19351  003D86  EFCE  F01E         	goto	l7384
 19352  003D8A                     u7380:
 19353  003D8A                     
 19354                           ;Modbus.c: 524:           crc >>= 1;
 19355  003D8A  90D8               	bcf	status,0,c
 19356  003D8C  3213               	rrcf	(generateCRC@crc+1)^0,f,c
 19357  003D8E  3212               	rrcf	generateCRC@crc^0,f,c
 19358  003D90                     
 19359                           ;Modbus.c: 525:           crc ^= 0xA001;
 19360  003D90  0E01               	movlw	1
 19361  003D92  1A12               	xorwf	generateCRC@crc^0,f,c
 19362  003D94  0EA0               	movlw	160
 19363  003D96  1A13               	xorwf	(generateCRC@crc+1)^0,f,c
 19364                           
 19365                           ;Modbus.c: 526:         }
 19366  003D98  EFD1  F01E         	goto	l828
 19367  003D9C                     l7384:
 19368                           
 19369                           ;Modbus.c: 528:           crc >>= 1;
 19370  003D9C  90D8               	bcf	status,0,c
 19371  003D9E  3213               	rrcf	(generateCRC@crc+1)^0,f,c
 19372  003DA0  3212               	rrcf	generateCRC@crc^0,f,c
 19373  003DA2                     l828:
 19374                           
 19375                           ;Modbus.c: 530:       }
 19376  003DA2  0610               	decf	generateCRC@j^0,f,c
 19377  003DA4  A0D8               	btfss	status,0,c
 19378  003DA6  0611               	decf	(generateCRC@j+1)^0,f,c
 19379  003DA8  5010               	movf	generateCRC@j^0,w,c
 19380  003DAA  1011               	iorwf	(generateCRC@j+1)^0,w,c
 19381  003DAC  A4D8               	btfss	status,2,c
 19382  003DAE  EFDB  F01E         	goto	u7391
 19383  003DB2  EFDD  F01E         	goto	u7390
 19384  003DB6                     u7391:
 19385  003DB6  EFBE  F01E         	goto	l825
 19386  003DBA                     u7390:
 19387  003DBA                     
 19388                           ;Modbus.c: 531:     }
 19389  003DBA  4A0E               	infsnz	generateCRC@i^0,f,c
 19390  003DBC  2A0F               	incf	(generateCRC@i+1)^0,f,c
 19391  003DBE                     l7390:
 19392  003DBE  5005               	movf	generateCRC@MessCnt^0,w,c
 19393  003DC0  5C0E               	subwf	generateCRC@i^0,w,c
 19394  003DC2  500F               	movf	(generateCRC@i+1)^0,w,c
 19395  003DC4  0A80               	xorlw	128
 19396  003DC6  6E08               	movwf	??_generateCRC^0,c
 19397  003DC8  5006               	movf	(generateCRC@MessCnt+1)^0,w,c
 19398  003DCA  0A80               	xorlw	128
 19399  003DCC  5808               	subwfb	??_generateCRC^0,w,c
 19400  003DCE  A0D8               	btfss	status,0,c
 19401  003DD0  EFEC  F01E         	goto	u7401
 19402  003DD4  EFEE  F01E         	goto	u7400
 19403  003DD8                     u7401:
 19404  003DD8  EFB0  F01E         	goto	l7372
 19405  003DDC                     u7400:
 19406  003DDC                     
 19407                           ;Modbus.c: 533:     crcHigh = (crc & 0x00FF);
 19408  003DDC  5012               	movf	generateCRC@crc^0,w,c
 19409  003DDE  6E0A               	movwf	generateCRC@crcHigh^0,c
 19410  003DE0  6A0B               	clrf	(generateCRC@crcHigh+1)^0,c
 19411                           
 19412                           ;Modbus.c: 534:     crcLow = (crc & 0xFF00) >>8;
 19413  003DE2  C012  F008         	movff	generateCRC@crc,??_generateCRC
 19414  003DE6  C013  F009         	movff	generateCRC@crc+1,??_generateCRC+1
 19415  003DEA  C009  F008         	movff	??_generateCRC+1,??_generateCRC
 19416  003DEE  6A09               	clrf	(??_generateCRC+1)^0,c
 19417  003DF0  5008               	movf	??_generateCRC^0,w,c
 19418  003DF2  6E0C               	movwf	generateCRC@crcLow^0,c
 19419  003DF4  6A0D               	clrf	(generateCRC@crcLow+1)^0,c
 19420  003DF6                     
 19421                           ;Modbus.c: 536:     if(HiOrLo == 1){
 19422  003DF6  0407               	decf	generateCRC@HiOrLo^0,w,c
 19423  003DF8  A4D8               	btfss	status,2,c
 19424  003DFA  EF01  F01F         	goto	u7411
 19425  003DFE  EF03  F01F         	goto	u7410
 19426  003E02                     u7411:
 19427  003E02  EF09  F01F         	goto	l830
 19428  003E06                     u7410:
 19429  003E06                     
 19430                           ;Modbus.c: 537:         return crcHigh;
 19431  003E06  C00A  F005         	movff	generateCRC@crcHigh,?_generateCRC
 19432  003E0A  C00B  F006         	movff	generateCRC@crcHigh+1,?_generateCRC+1
 19433  003E0E  EF0D  F01F         	goto	l831
 19434  003E12                     l830:
 19435                           
 19436                           ;Modbus.c: 539:         return crcLow;
 19437  003E12  C00C  F005         	movff	generateCRC@crcLow,?_generateCRC
 19438  003E16  C00D  F006         	movff	generateCRC@crcLow+1,?_generateCRC+1
 19439  003E1A                     l831:
 19440  003E1A  0012               	return		;funcret
 19441  003E1C                     __end_of_generateCRC:
 19442                           	opt callstack 0
 19443                           
 19444 ;; *************** function _UART1_Write_string *****************
 19445 ;; Defined at:
 19446 ;;		line 544 in file "Modbus.c"
 19447 ;; Parameters:    Size  Location     Type
 19448 ;;  data            2    5[COMRAM] PTR unsigned char 
 19449 ;;		 -> MBRespon(75), 
 19450 ;;  data_len        2    7[COMRAM] int 
 19451 ;; Auto vars:     Size  Location     Type
 19452 ;;  i               2   10[COMRAM] int 
 19453 ;; Return value:  Size  Location     Type
 19454 ;;                  1    wreg      void 
 19455 ;; Registers used:
 19456 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19457 ;; Tracked objects:
 19458 ;;		On entry : 0/0
 19459 ;;		On exit  : 0/0
 19460 ;;		Unchanged: 0/0
 19461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19462 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19463 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19464 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19465 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19466 ;;Total ram usage:        7 bytes
 19467 ;; Hardware stack levels used:    1
 19468 ;; Hardware stack levels required when called:    5
 19469 ;; This function calls:
 19470 ;;		_EUSART1_Write
 19471 ;;		_EUSART1_is_tx_done
 19472 ;;		_EUSART1_is_tx_ready
 19473 ;;		_TXMode
 19474 ;; This function is called by:
 19475 ;;		_ModbusFC03
 19476 ;;		_ModbusFC04
 19477 ;;		_ModbusFC10
 19478 ;;		_ModbusError
 19479 ;; This function uses a non-reentrant model
 19480 ;;
 19481                           
 19482                           	psect	text79
 19483  0046DA                     __ptext79:
 19484                           	opt callstack 0
 19485  0046DA                     _UART1_Write_string:
 19486                           	opt callstack 24
 19487  0046DA                     
 19488                           ;Modbus.c: 544: void UART1_Write_string(unsigned char * data, int data_len);Modbus.c: 54
      +                          5: {;Modbus.c: 546:     TXMode();
 19489  0046DA  ECE9  F028         	call	_TXMode	;wreg free
 19490  0046DE                     l7402:
 19491  0046DE  EC80  F028         	call	_EUSART1_is_tx_ready	;wreg free
 19492  0046E2  0900               	iorlw	0
 19493  0046E4  B4D8               	btfsc	status,2,c
 19494  0046E6  EF77  F023         	goto	u7421
 19495  0046EA  EF79  F023         	goto	u7420
 19496  0046EE                     u7421:
 19497  0046EE  EF6F  F023         	goto	l7402
 19498  0046F2                     u7420:
 19499  0046F2                     
 19500                           ;Modbus.c: 548:     for (int i = 0; i < data_len; i++) {
 19501  0046F2  0E00               	movlw	0
 19502  0046F4  6E0C               	movwf	(UART1_Write_string@i+1)^0,c
 19503  0046F6  0E00               	movlw	0
 19504  0046F8  6E0B               	movwf	UART1_Write_string@i^0,c
 19505  0046FA  EF94  F023         	goto	l7412
 19506  0046FE                     l7406:
 19507                           
 19508                           ;Modbus.c: 549:         EUSART1_Write(data[i]);
 19509  0046FE  500B               	movf	UART1_Write_string@i^0,w,c
 19510  004700  2406               	addwf	UART1_Write_string@data^0,w,c
 19511  004702  6ED9               	movwf	fsr2l,c
 19512  004704  500C               	movf	(UART1_Write_string@i+1)^0,w,c
 19513  004706  2007               	addwfc	(UART1_Write_string@data+1)^0,w,c
 19514  004708  6EDA               	movwf	fsr2h,c
 19515  00470A  50DF               	movf	indf2,w,c
 19516  00470C  EC96  F024         	call	_EUSART1_Write
 19517  004710                     l7408:
 19518  004710  ECA1  F028         	call	_EUSART1_is_tx_done	;wreg free
 19519  004714  0900               	iorlw	0
 19520  004716  B4D8               	btfsc	status,2,c
 19521  004718  EF90  F023         	goto	u7431
 19522  00471C  EF92  F023         	goto	u7430
 19523  004720                     u7431:
 19524  004720  EF88  F023         	goto	l7408
 19525  004724                     u7430:
 19526  004724                     
 19527                           ;Modbus.c: 551:     }
 19528  004724  4A0B               	infsnz	UART1_Write_string@i^0,f,c
 19529  004726  2A0C               	incf	(UART1_Write_string@i+1)^0,f,c
 19530  004728                     l7412:
 19531  004728  5008               	movf	UART1_Write_string@data_len^0,w,c
 19532  00472A  5C0B               	subwf	UART1_Write_string@i^0,w,c
 19533  00472C  500C               	movf	(UART1_Write_string@i+1)^0,w,c
 19534  00472E  0A80               	xorlw	128
 19535  004730  6E0A               	movwf	??_UART1_Write_string^0,c
 19536  004732  5009               	movf	(UART1_Write_string@data_len+1)^0,w,c
 19537  004734  0A80               	xorlw	128
 19538  004736  580A               	subwfb	??_UART1_Write_string^0,w,c
 19539  004738  A0D8               	btfss	status,0,c
 19540  00473A  EFA1  F023         	goto	u7441
 19541  00473E  EFA3  F023         	goto	u7440
 19542  004742                     u7441:
 19543  004742  EF7F  F023         	goto	l7406
 19544  004746                     u7440:
 19545  004746  0012               	return		;funcret
 19546  004748                     __end_of_UART1_Write_string:
 19547                           	opt callstack 0
 19548                           
 19549 ;; *************** function _TXMode *****************
 19550 ;; Defined at:
 19551 ;;		line 47 in file "Modbus.c"
 19552 ;; Parameters:    Size  Location     Type
 19553 ;;		None
 19554 ;; Auto vars:     Size  Location     Type
 19555 ;;		None
 19556 ;; Return value:  Size  Location     Type
 19557 ;;                  1    wreg      void 
 19558 ;; Registers used:
 19559 ;;		None
 19560 ;; Tracked objects:
 19561 ;;		On entry : 0/0
 19562 ;;		On exit  : 0/0
 19563 ;;		Unchanged: 0/0
 19564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19569 ;;Total ram usage:        0 bytes
 19570 ;; Hardware stack levels used:    1
 19571 ;; Hardware stack levels required when called:    4
 19572 ;; This function calls:
 19573 ;;		Nothing
 19574 ;; This function is called by:
 19575 ;;		_UART1_Write_string
 19576 ;; This function uses a non-reentrant model
 19577 ;;
 19578                           
 19579                           	psect	text80
 19580  0051D2                     __ptext80:
 19581                           	opt callstack 0
 19582  0051D2                     _TXMode:
 19583                           	opt callstack 24
 19584  0051D2  8086               	bsf	134,0,c	;volatile
 19585  0051D4  8683               	bsf	131,3,c	;volatile
 19586  0051D6  0012               	return		;funcret
 19587  0051D8                     __end_of_TXMode:
 19588                           	opt callstack 0
 19589                           
 19590 ;; *************** function _EUSART1_is_tx_ready *****************
 19591 ;; Defined at:
 19592 ;;		line 134 in file "mcc_generated_files/eusart1.c"
 19593 ;; Parameters:    Size  Location     Type
 19594 ;;		None
 19595 ;; Auto vars:     Size  Location     Type
 19596 ;;		None
 19597 ;; Return value:  Size  Location     Type
 19598 ;;                  1    wreg      _Bool 
 19599 ;; Registers used:
 19600 ;;		wreg, status,2
 19601 ;; Tracked objects:
 19602 ;;		On entry : 0/0
 19603 ;;		On exit  : 0/0
 19604 ;;		Unchanged: 0/0
 19605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19610 ;;Total ram usage:        0 bytes
 19611 ;; Hardware stack levels used:    1
 19612 ;; Hardware stack levels required when called:    4
 19613 ;; This function calls:
 19614 ;;		Nothing
 19615 ;; This function is called by:
 19616 ;;		_UART1_Write_string
 19617 ;; This function uses a non-reentrant model
 19618 ;;
 19619                           
 19620                           	psect	text81
 19621  005100                     __ptext81:
 19622                           	opt callstack 0
 19623  005100                     _EUSART1_is_tx_ready:
 19624                           	opt callstack 24
 19625  005100                     
 19626                           ;mcc_generated_files/eusart1.c: 136:     return (eusart1TxBufferRemaining ? 1 : 0);
 19627  005100  0100               	movlb	0	; () banked
 19628  005102  51FE               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
 19629  005104  A4D8               	btfss	status,2,c
 19630  005106  EF87  F028         	goto	u7171
 19631  00510A  EF8A  F028         	goto	u7170
 19632  00510E                     u7171:
 19633  00510E  0E01               	movlw	1
 19634  005110  EF8B  F028         	goto	u7180
 19635  005114                     u7170:
 19636  005114  0E00               	movlw	0
 19637  005116                     u7180:
 19638  005116                     
 19639                           ; BSR set to: 0
 19640  005116  0012               	return		;funcret
 19641  005118                     __end_of_EUSART1_is_tx_ready:
 19642                           	opt callstack 0
 19643                           
 19644 ;; *************** function _EUSART1_is_tx_done *****************
 19645 ;; Defined at:
 19646 ;;		line 144 in file "mcc_generated_files/eusart1.c"
 19647 ;; Parameters:    Size  Location     Type
 19648 ;;		None
 19649 ;; Auto vars:     Size  Location     Type
 19650 ;;		None
 19651 ;; Return value:  Size  Location     Type
 19652 ;;                  1    wreg      _Bool 
 19653 ;; Registers used:
 19654 ;;		wreg
 19655 ;; Tracked objects:
 19656 ;;		On entry : 0/0
 19657 ;;		On exit  : 0/0
 19658 ;;		Unchanged: 0/0
 19659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19664 ;;Total ram usage:        0 bytes
 19665 ;; Hardware stack levels used:    1
 19666 ;; Hardware stack levels required when called:    4
 19667 ;; This function calls:
 19668 ;;		Nothing
 19669 ;; This function is called by:
 19670 ;;		_UART1_Write_string
 19671 ;; This function uses a non-reentrant model
 19672 ;;
 19673                           
 19674                           	psect	text82
 19675  005142                     __ptext82:
 19676                           	opt callstack 0
 19677  005142                     _EUSART1_is_tx_done:
 19678                           	opt callstack 24
 19679  005142                     
 19680                           ;mcc_generated_files/eusart1.c: 146:     return TX1STAbits.TRMT;
 19681  005142  B29E               	btfsc	158,1,c	;volatile
 19682  005144  EFA6  F028         	goto	u7191
 19683  005148  EFA9  F028         	goto	u7190
 19684  00514C                     u7191:
 19685  00514C  0E01               	movlw	1
 19686  00514E  EFAA  F028         	goto	u7196
 19687  005152                     u7190:
 19688  005152  0E00               	movlw	0
 19689  005154                     u7196:
 19690  005154  0012               	return		;funcret
 19691  005156                     __end_of_EUSART1_is_tx_done:
 19692                           	opt callstack 0
 19693                           
 19694 ;; *************** function _EUSART1_Write *****************
 19695 ;; Defined at:
 19696 ;;		line 175 in file "mcc_generated_files/eusart1.c"
 19697 ;; Parameters:    Size  Location     Type
 19698 ;;  txData          1    wreg     unsigned char 
 19699 ;; Auto vars:     Size  Location     Type
 19700 ;;  txData          1    4[COMRAM] unsigned char 
 19701 ;; Return value:  Size  Location     Type
 19702 ;;                  1    wreg      void 
 19703 ;; Registers used:
 19704 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19705 ;; Tracked objects:
 19706 ;;		On entry : 0/0
 19707 ;;		On exit  : 0/0
 19708 ;;		Unchanged: 0/0
 19709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19711 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19713 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19714 ;;Total ram usage:        1 bytes
 19715 ;; Hardware stack levels used:    1
 19716 ;; Hardware stack levels required when called:    4
 19717 ;; This function calls:
 19718 ;;		Nothing
 19719 ;; This function is called by:
 19720 ;;		_UART1_Write_string
 19721 ;; This function uses a non-reentrant model
 19722 ;;
 19723                           
 19724                           	psect	text83
 19725  00492C                     __ptext83:
 19726                           	opt callstack 0
 19727  00492C                     _EUSART1_Write:
 19728                           	opt callstack 24
 19729                           
 19730                           ;incstack = 0
 19731                           ;EUSART1_Write@txData stored from wreg
 19732  00492C  6E05               	movwf	EUSART1_Write@txData^0,c
 19733  00492E                     l7254:
 19734                           
 19735                           ;mcc_generated_files/eusart1.c: 177:     while(0 == eusart1TxBufferRemaining)
 19736  00492E  0100               	movlb	0	; () banked
 19737  004930  51FE               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
 19738  004932  B4D8               	btfsc	status,2,c
 19739  004934  EF9E  F024         	goto	u7201
 19740  004938  EFA0  F024         	goto	u7200
 19741  00493C                     u7201:
 19742  00493C  EF97  F024         	goto	l7254
 19743  004940                     u7200:
 19744  004940                     
 19745                           ; BSR set to: 0
 19746                           ;mcc_generated_files/eusart1.c: 181:     if(0 == PIE3bits.TX1IE)
 19747  004940  010E               	movlb	14	; () banked
 19748  004942  B9C5               	btfsc	197,4,b	;volatile
 19749  004944  EFA6  F024         	goto	u7211
 19750  004948  EFA8  F024         	goto	u7210
 19751  00494C                     u7211:
 19752  00494C  EFAC  F024         	goto	l475
 19753  004950                     u7210:
 19754  004950                     
 19755                           ; BSR set to: 14
 19756                           ;mcc_generated_files/eusart1.c: 182:     {;mcc_generated_files/eusart1.c: 183:         T
      +                          X1REG = txData;
 19757  004950  C005  FF9A         	movff	EUSART1_Write@txData,3994	;volatile
 19758                           
 19759                           ;mcc_generated_files/eusart1.c: 184:     }
 19760  004954  EFC2  F024         	goto	l7268
 19761  004958                     l475:
 19762                           
 19763                           ; BSR set to: 14
 19764                           ;mcc_generated_files/eusart1.c: 186:     {;mcc_generated_files/eusart1.c: 187:         P
      +                          IE3bits.TX1IE = 0;
 19765  004958  99C5               	bcf	197,4,b	;volatile
 19766  00495A                     
 19767                           ; BSR set to: 14
 19768                           ;mcc_generated_files/eusart1.c: 188:         eusart1TxBuffer[eusart1TxHead++] = txData;
 19769  00495A  0EC2               	movlw	low _eusart1TxBuffer
 19770  00495C  0100               	movlb	0	; () banked
 19771  00495E  25E4               	addwf	_eusart1TxHead& (0+255),w,b	;volatile
 19772  004960  6ED9               	movwf	fsr2l,c
 19773  004962  6ADA               	clrf	fsr2h,c
 19774  004964  0E02               	movlw	high _eusart1TxBuffer
 19775  004966  22DA               	addwfc	fsr2h,f,c
 19776  004968  C005  FFDF         	movff	EUSART1_Write@txData,indf2
 19777  00496C                     
 19778                           ; BSR set to: 0
 19779  00496C  2BE4               	incf	_eusart1TxHead& (0+255),f,b	;volatile
 19780  00496E                     
 19781                           ; BSR set to: 0
 19782                           ;mcc_generated_files/eusart1.c: 189:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
 19783  00496E  0E0F               	movlw	15
 19784  004970  65E4               	cpfsgt	_eusart1TxHead& (0+255),b	;volatile
 19785  004972  EFBD  F024         	goto	u7221
 19786  004976  EFBF  F024         	goto	u7220
 19787  00497A                     u7221:
 19788  00497A  EFC1  F024         	goto	l7266
 19789  00497E                     u7220:
 19790  00497E                     
 19791                           ; BSR set to: 0
 19792                           ;mcc_generated_files/eusart1.c: 190:         {;mcc_generated_files/eusart1.c: 191:      
      +                                 eusart1TxHead = 0;
 19793  00497E  0E00               	movlw	0
 19794  004980  6FE4               	movwf	_eusart1TxHead& (0+255),b	;volatile
 19795  004982                     l7266:
 19796                           
 19797                           ; BSR set to: 0
 19798                           ;mcc_generated_files/eusart1.c: 193:         eusart1TxBufferRemaining--;
 19799  004982  07FE               	decf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 19800  004984                     l7268:
 19801                           
 19802                           ;mcc_generated_files/eusart1.c: 195:     PIE3bits.TX1IE = 1;
 19803  004984  010E               	movlb	14	; () banked
 19804  004986  89C5               	bsf	197,4,b	;volatile
 19805  004988                     
 19806                           ; BSR set to: 14
 19807  004988  0012               	return		;funcret
 19808  00498A                     __end_of_EUSART1_Write:
 19809                           	opt callstack 0
 19810                           
 19811 ;; *************** function _ClearModbusRespon *****************
 19812 ;; Defined at:
 19813 ;;		line 612 in file "Modbus.c"
 19814 ;; Parameters:    Size  Location     Type
 19815 ;;		None
 19816 ;; Auto vars:     Size  Location     Type
 19817 ;;  i               2    4[COMRAM] int 
 19818 ;; Return value:  Size  Location     Type
 19819 ;;                  1    wreg      void 
 19820 ;; Registers used:
 19821 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19822 ;; Tracked objects:
 19823 ;;		On entry : 0/0
 19824 ;;		On exit  : 0/0
 19825 ;;		Unchanged: 0/0
 19826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19828 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19830 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19831 ;;Total ram usage:        2 bytes
 19832 ;; Hardware stack levels used:    1
 19833 ;; Hardware stack levels required when called:    4
 19834 ;; This function calls:
 19835 ;;		Nothing
 19836 ;; This function is called by:
 19837 ;;		_main
 19838 ;; This function uses a non-reentrant model
 19839 ;;
 19840                           
 19841                           	psect	text84
 19842  004D32                     __ptext84:
 19843                           	opt callstack 0
 19844  004D32                     _ClearModbusRespon:
 19845                           	opt callstack 26
 19846  004D32                     
 19847                           ;Modbus.c: 613:     int i = 0;
 19848  004D32  0E00               	movlw	0
 19849  004D34  6E06               	movwf	(ClearModbusRespon@i+1)^0,c
 19850  004D36  0E00               	movlw	0
 19851  004D38  6E05               	movwf	ClearModbusRespon@i^0,c
 19852                           
 19853                           ;Modbus.c: 614:     for(i=0; i<32; i++ ){
 19854  004D3A  0E00               	movlw	0
 19855  004D3C  6E06               	movwf	(ClearModbusRespon@i+1)^0,c
 19856  004D3E  0E00               	movlw	0
 19857  004D40  6E05               	movwf	ClearModbusRespon@i^0,c
 19858  004D42                     l7852:
 19859                           
 19860                           ;Modbus.c: 615:         MBRespon[i] = 0xFF;
 19861  004D42  0E57               	movlw	low _MBRespon
 19862  004D44  2405               	addwf	ClearModbusRespon@i^0,w,c
 19863  004D46  6ED9               	movwf	fsr2l,c
 19864  004D48  0E02               	movlw	high _MBRespon
 19865  004D4A  2006               	addwfc	(ClearModbusRespon@i+1)^0,w,c
 19866  004D4C  6EDA               	movwf	fsr2h,c
 19867  004D4E  0EFF               	movlw	255
 19868  004D50  6EDF               	movwf	indf2,c
 19869  004D52                     
 19870                           ;Modbus.c: 616:     }
 19871  004D52  4A05               	infsnz	ClearModbusRespon@i^0,f,c
 19872  004D54  2A06               	incf	(ClearModbusRespon@i+1)^0,f,c
 19873  004D56  BE06               	btfsc	(ClearModbusRespon@i+1)^0,7,c
 19874  004D58  EFB7  F026         	goto	u7861
 19875  004D5C  5006               	movf	(ClearModbusRespon@i+1)^0,w,c
 19876  004D5E  E109               	bnz	u7860
 19877  004D60  0E20               	movlw	32
 19878  004D62  5C05               	subwf	ClearModbusRespon@i^0,w,c
 19879  004D64  A0D8               	btfss	status,0,c
 19880  004D66  EFB7  F026         	goto	u7861
 19881  004D6A  EFB9  F026         	goto	u7860
 19882  004D6E                     u7861:
 19883  004D6E  EFA1  F026         	goto	l7852
 19884  004D72                     u7860:
 19885  004D72  0012               	return		;funcret
 19886  004D74                     __end_of_ClearModbusRespon:
 19887                           	opt callstack 0
 19888                           
 19889 ;; *************** function _ClearModbusData *****************
 19890 ;; Defined at:
 19891 ;;		line 59 in file "Modbus.c"
 19892 ;; Parameters:    Size  Location     Type
 19893 ;;		None
 19894 ;; Auto vars:     Size  Location     Type
 19895 ;;  i               2    4[COMRAM] int 
 19896 ;; Return value:  Size  Location     Type
 19897 ;;                  1    wreg      void 
 19898 ;; Registers used:
 19899 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19900 ;; Tracked objects:
 19901 ;;		On entry : 0/0
 19902 ;;		On exit  : 0/0
 19903 ;;		Unchanged: 0/0
 19904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19906 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19908 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19909 ;;Total ram usage:        2 bytes
 19910 ;; Hardware stack levels used:    1
 19911 ;; Hardware stack levels required when called:    4
 19912 ;; This function calls:
 19913 ;;		Nothing
 19914 ;; This function is called by:
 19915 ;;		_main
 19916 ;; This function uses a non-reentrant model
 19917 ;;
 19918                           
 19919                           	psect	text85
 19920  004B88                     __ptext85:
 19921                           	opt callstack 0
 19922  004B88                     _ClearModbusData:
 19923                           	opt callstack 26
 19924  004B88                     
 19925                           ;Modbus.c: 60:     int i = 0;
 19926  004B88  0E00               	movlw	0
 19927  004B8A  6E06               	movwf	(ClearModbusData@i+1)^0,c
 19928  004B8C  0E00               	movlw	0
 19929  004B8E  6E05               	movwf	ClearModbusData@i^0,c
 19930                           
 19931                           ;Modbus.c: 61:     for(i=0; i<99; i++ ){
 19932  004B90  0E00               	movlw	0
 19933  004B92  6E06               	movwf	(ClearModbusData@i+1)^0,c
 19934  004B94  0E00               	movlw	0
 19935  004B96  6E05               	movwf	ClearModbusData@i^0,c
 19936  004B98                     l8262:
 19937                           
 19938                           ;Modbus.c: 62:         ModbusData[i] = 0xFF;
 19939  004B98  0E00               	movlw	low _ModbusData
 19940  004B9A  2405               	addwf	ClearModbusData@i^0,w,c
 19941  004B9C  6ED9               	movwf	fsr2l,c
 19942  004B9E  0E01               	movlw	high _ModbusData
 19943  004BA0  2006               	addwfc	(ClearModbusData@i+1)^0,w,c
 19944  004BA2  6EDA               	movwf	fsr2h,c
 19945  004BA4  0EFF               	movlw	255
 19946  004BA6  6EDF               	movwf	indf2,c
 19947  004BA8                     
 19948                           ;Modbus.c: 63:     }
 19949  004BA8  4A05               	infsnz	ClearModbusData@i^0,f,c
 19950  004BAA  2A06               	incf	(ClearModbusData@i+1)^0,f,c
 19951  004BAC  BE06               	btfsc	(ClearModbusData@i+1)^0,7,c
 19952  004BAE  EFE2  F025         	goto	u8381
 19953  004BB2  5006               	movf	(ClearModbusData@i+1)^0,w,c
 19954  004BB4  E109               	bnz	u8380
 19955  004BB6  0E63               	movlw	99
 19956  004BB8  5C05               	subwf	ClearModbusData@i^0,w,c
 19957  004BBA  A0D8               	btfss	status,0,c
 19958  004BBC  EFE2  F025         	goto	u8381
 19959  004BC0  EFE4  F025         	goto	u8380
 19960  004BC4                     u8381:
 19961  004BC4  EFCC  F025         	goto	l8262
 19962  004BC8                     u8380:
 19963  004BC8                     
 19964                           ;Modbus.c: 65:     ModDataCnt = 0;
 19965  004BC8  0E00               	movlw	0
 19966  004BCA  0100               	movlb	0	; () banked
 19967  004BCC  6FDC               	movwf	(_ModDataCnt+1)& (0+255),b
 19968  004BCE  0E00               	movlw	0
 19969  004BD0  6FDB               	movwf	_ModDataCnt& (0+255),b
 19970  004BD2                     
 19971                           ; BSR set to: 0
 19972  004BD2  0012               	return		;funcret
 19973  004BD4                     __end_of_ClearModbusData:
 19974                           	opt callstack 0
 19975                           
 19976 ;; *************** function _INTERRUPT_InterruptManager *****************
 19977 ;; Defined at:
 19978 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 19979 ;; Parameters:    Size  Location     Type
 19980 ;;		None
 19981 ;; Auto vars:     Size  Location     Type
 19982 ;;		None
 19983 ;; Return value:  Size  Location     Type
 19984 ;;                  1    wreg      void 
 19985 ;; Registers used:
 19986 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 19987 ;; Tracked objects:
 19988 ;;		On entry : 0/0
 19989 ;;		On exit  : 0/0
 19990 ;;		Unchanged: 0/0
 19991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19994 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19995 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19996 ;;Total ram usage:        4 bytes
 19997 ;; Hardware stack levels used:    1
 19998 ;; Hardware stack levels required when called:    3
 19999 ;; This function calls:
 20000 ;;		Absolute function
 20001 ;;		_EUSART1_Receive_ISR
 20002 ;;		_EUSART1_Transmit_ISR
 20003 ;;		_EUSART2_Receive_ISR
 20004 ;;		_EUSART2_Transmit_ISR
 20005 ;; This function is called by:
 20006 ;;		Interrupt level 2
 20007 ;; This function uses a non-reentrant model
 20008 ;;
 20009                           
 20010                           	psect	intcode
 20011  000008                     __pintcode:
 20012                           	opt callstack 0
 20013  000008                     _INTERRUPT_InterruptManager:
 20014                           	opt callstack 15
 20015                           
 20016                           ; BSR set to: 0
 20017                           ;incstack = 0
 20018  000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 20019  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
 20020  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 20021  000012  CFD9 F003          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
 20022  000016  CFDA F004          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
 20023  00001A                     
 20024                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
 20025  00001A  ACF2               	btfss	242,6,c	;volatile
 20026  00001C  EF12  F000         	goto	i2u574_41
 20027  000020  EF14  F000         	goto	i2u574_40
 20028  000024                     i2u574_41:
 20029  000024  EF89  F000         	goto	i2l163
 20030  000028                     i2u574_40:
 20031  000028                     
 20032                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
 20033  000028  010E               	movlb	14	; () banked
 20034  00002A  ADC5               	btfss	197,6,b	;volatile
 20035  00002C  EF1A  F000         	goto	i2u575_41
 20036  000030  EF1C  F000         	goto	i2u575_40
 20037  000034                     i2u575_41:
 20038  000034  EF32  F000         	goto	i2l154
 20039  000038                     i2u575_40:
 20040  000038                     
 20041                           ; BSR set to: 14
 20042  000038  ADCD               	btfss	205,6,b	;volatile
 20043  00003A  EF21  F000         	goto	i2u576_41
 20044  00003E  EF23  F000         	goto	i2u576_40
 20045  000042                     i2u576_41:
 20046  000042  EF32  F000         	goto	i2l154
 20047  000046                     i2u576_40:
 20048  000046                     
 20049                           ; BSR set to: 14
 20050                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART2_TxDefaultInterruptHandler();
 20051  000046  D802               	call	i2u577_48
 20052  000048  EF30  F000         	goto	i2u577_49
 20053  00004C                     i2u577_48:
 20054  00004C  0005               	push	
 20055  00004E  6EFA               	movwf	pclath,c
 20056  000050  0101               	movlb	1	; () banked
 20057  000052  51EB               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
 20058  000054  6EFD               	movwf	tosl,c
 20059  000056  51EC               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
 20060  000058  6EFE               	movwf	tosh,c
 20061  00005A  6AFF               	clrf	tosu,c
 20062  00005C  50FA               	movf	pclath,w,c
 20063  00005E  0012               	return		;indir
 20064  000060                     i2u577_49:
 20065                           
 20066                           ;mcc_generated_files/interrupt_manager.c: 66:         }
 20067  000060  EF89  F000         	goto	i2l163
 20068  000064                     i2l154:
 20069                           
 20070                           ; BSR set to: 14
 20071  000064  AFC5               	btfss	197,7,b	;volatile
 20072  000066  EF37  F000         	goto	i2u578_41
 20073  00006A  EF39  F000         	goto	i2u578_40
 20074  00006E                     i2u578_41:
 20075  00006E  EF4F  F000         	goto	i2l156
 20076  000072                     i2u578_40:
 20077  000072                     
 20078                           ; BSR set to: 14
 20079  000072  AFCD               	btfss	205,7,b	;volatile
 20080  000074  EF3E  F000         	goto	i2u579_41
 20081  000078  EF40  F000         	goto	i2u579_40
 20082  00007C                     i2u579_41:
 20083  00007C  EF4F  F000         	goto	i2l156
 20084  000080                     i2u579_40:
 20085  000080                     
 20086                           ; BSR set to: 14
 20087                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART2_RxDefaultInterruptHandler();
 20088  000080  D802               	call	i2u580_48
 20089  000082  EF4D  F000         	goto	i2u580_49
 20090  000086                     i2u580_48:
 20091  000086  0005               	push	
 20092  000088  6EFA               	movwf	pclath,c
 20093  00008A  0101               	movlb	1	; () banked
 20094  00008C  51E9               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
 20095  00008E  6EFD               	movwf	tosl,c
 20096  000090  51EA               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
 20097  000092  6EFE               	movwf	tosh,c
 20098  000094  6AFF               	clrf	tosu,c
 20099  000096  50FA               	movf	pclath,w,c
 20100  000098  0012               	return		;indir
 20101  00009A                     i2u580_49:
 20102                           
 20103                           ;mcc_generated_files/interrupt_manager.c: 70:         }
 20104  00009A  EF89  F000         	goto	i2l163
 20105  00009E                     i2l156:
 20106                           
 20107                           ; BSR set to: 14
 20108  00009E  A9C5               	btfss	197,4,b	;volatile
 20109  0000A0  EF54  F000         	goto	i2u581_41
 20110  0000A4  EF56  F000         	goto	i2u581_40
 20111  0000A8                     i2u581_41:
 20112  0000A8  EF6C  F000         	goto	i2l158
 20113  0000AC                     i2u581_40:
 20114  0000AC                     
 20115                           ; BSR set to: 14
 20116  0000AC  A9CD               	btfss	205,4,b	;volatile
 20117  0000AE  EF5B  F000         	goto	i2u582_41
 20118  0000B2  EF5D  F000         	goto	i2u582_40
 20119  0000B6                     i2u582_41:
 20120  0000B6  EF6C  F000         	goto	i2l158
 20121  0000BA                     i2u582_40:
 20122  0000BA                     
 20123                           ; BSR set to: 14
 20124                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART1_TxDefaultInterruptHandler();
 20125  0000BA  D802               	call	i2u583_48
 20126  0000BC  EF6A  F000         	goto	i2u583_49
 20127  0000C0                     i2u583_48:
 20128  0000C0  0005               	push	
 20129  0000C2  6EFA               	movwf	pclath,c
 20130  0000C4  0101               	movlb	1	; () banked
 20131  0000C6  51E7               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
 20132  0000C8  6EFD               	movwf	tosl,c
 20133  0000CA  51E8               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
 20134  0000CC  6EFE               	movwf	tosh,c
 20135  0000CE  6AFF               	clrf	tosu,c
 20136  0000D0  50FA               	movf	pclath,w,c
 20137  0000D2  0012               	return		;indir
 20138  0000D4                     i2u583_49:
 20139                           
 20140                           ;mcc_generated_files/interrupt_manager.c: 74:         }
 20141  0000D4  EF89  F000         	goto	i2l163
 20142  0000D8                     i2l158:
 20143                           
 20144                           ; BSR set to: 14
 20145  0000D8  ABC5               	btfss	197,5,b	;volatile
 20146  0000DA  EF71  F000         	goto	i2u584_41
 20147  0000DE  EF73  F000         	goto	i2u584_40
 20148  0000E2                     i2u584_41:
 20149  0000E2  EF89  F000         	goto	i2l157
 20150  0000E6                     i2u584_40:
 20151  0000E6                     
 20152                           ; BSR set to: 14
 20153  0000E6  ABCD               	btfss	205,5,b	;volatile
 20154  0000E8  EF78  F000         	goto	i2u585_41
 20155  0000EC  EF7A  F000         	goto	i2u585_40
 20156  0000F0                     i2u585_41:
 20157  0000F0  EF89  F000         	goto	i2l157
 20158  0000F4                     i2u585_40:
 20159  0000F4                     
 20160                           ; BSR set to: 14
 20161                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             EUSART1_RxDefaultInterruptHandler();
 20162  0000F4  D802               	call	i2u586_48
 20163  0000F6  EF87  F000         	goto	i2u586_49
 20164  0000FA                     i2u586_48:
 20165  0000FA  0005               	push	
 20166  0000FC  6EFA               	movwf	pclath,c
 20167  0000FE  0101               	movlb	1	; () banked
 20168  000100  51E5               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
 20169  000102  6EFD               	movwf	tosl,c
 20170  000104  51E6               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
 20171  000106  6EFE               	movwf	tosh,c
 20172  000108  6AFF               	clrf	tosu,c
 20173  00010A  50FA               	movf	pclath,w,c
 20174  00010C  0012               	return		;indir
 20175  00010E                     i2u586_49:
 20176                           
 20177                           ;mcc_generated_files/interrupt_manager.c: 78:         }
 20178  00010E  EF89  F000         	goto	i2l163
 20179  000112                     i2l157:
 20180  000112                     i2l163:
 20181  000112  C004  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
 20182  000116  C003  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
 20183  00011A  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 20184  00011E  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 20185  000122  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 20186  000124  0011               	retfie		f
 20187  000126                     __end_of_INTERRUPT_InterruptManager:
 20188                           	opt callstack 0
 20189                           
 20190 ;; *************** function _EUSART2_Transmit_ISR *****************
 20191 ;; Defined at:
 20192 ;;		line 208 in file "mcc_generated_files/eusart2.c"
 20193 ;; Parameters:    Size  Location     Type
 20194 ;;		None
 20195 ;; Auto vars:     Size  Location     Type
 20196 ;;		None
 20197 ;; Return value:  Size  Location     Type
 20198 ;;                  1    wreg      void 
 20199 ;; Registers used:
 20200 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20201 ;; Tracked objects:
 20202 ;;		On entry : 0/0
 20203 ;;		On exit  : 0/0
 20204 ;;		Unchanged: 0/0
 20205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20210 ;;Total ram usage:        0 bytes
 20211 ;; Hardware stack levels used:    1
 20212 ;; This function calls:
 20213 ;;		Nothing
 20214 ;; This function is called by:
 20215 ;;		_EUSART2_Initialize
 20216 ;;		_INTERRUPT_InterruptManager
 20217 ;; This function uses a non-reentrant model
 20218 ;;
 20219                           
 20220                           	psect	text87
 20221  004C1E                     __ptext87:
 20222                           	opt callstack 0
 20223  004C1E                     _EUSART2_Transmit_ISR:
 20224                           	opt callstack 17
 20225  004C1E                     
 20226                           ;mcc_generated_files/eusart2.c: 212:     if(sizeof(eusart2TxBuffer) > eusart2TxBufferRem
      +                          aining)
 20227  004C1E  0E20               	movlw	32
 20228  004C20  0100               	movlb	0	; () banked
 20229  004C22  61FF               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
 20230  004C24  EF16  F026         	goto	i2u497_41
 20231  004C28  EF18  F026         	goto	i2u497_40
 20232  004C2C                     i2u497_41:
 20233  004C2C  EF30  F026         	goto	i2l337
 20234  004C30                     i2u497_40:
 20235  004C30                     
 20236                           ; BSR set to: 0
 20237                           ;mcc_generated_files/eusart2.c: 213:     {;mcc_generated_files/eusart2.c: 214:         T
      +                          X2REG = eusart2TxBuffer[eusart2TxTail++];
 20238  004C30  0E84               	movlw	low _eusart2TxBuffer
 20239  004C32  25E8               	addwf	_eusart2TxTail& (0+255),w,b	;volatile
 20240  004C34  6ED9               	movwf	fsr2l,c
 20241  004C36  6ADA               	clrf	fsr2h,c
 20242  004C38  0E03               	movlw	high _eusart2TxBuffer
 20243  004C3A  22DA               	addwfc	fsr2h,f,c
 20244  004C3C  50DF               	movf	indf2,w,c
 20245  004C3E  010E               	movlb	14	; () banked
 20246  004C40  6F9A               	movwf	154,b	;volatile
 20247  004C42                     
 20248                           ; BSR set to: 14
 20249  004C42  0100               	movlb	0	; () banked
 20250  004C44  2BE8               	incf	_eusart2TxTail& (0+255),f,b	;volatile
 20251  004C46                     
 20252                           ; BSR set to: 0
 20253                           ;mcc_generated_files/eusart2.c: 215:         if(sizeof(eusart2TxBuffer) <= eusart2TxTail
      +                          )
 20254  004C46  0E1F               	movlw	31
 20255  004C48  65E8               	cpfsgt	_eusart2TxTail& (0+255),b	;volatile
 20256  004C4A  EF29  F026         	goto	i2u498_41
 20257  004C4E  EF2B  F026         	goto	i2u498_40
 20258  004C52                     i2u498_41:
 20259  004C52  EF2D  F026         	goto	i2l5778
 20260  004C56                     i2u498_40:
 20261  004C56                     
 20262                           ; BSR set to: 0
 20263                           ;mcc_generated_files/eusart2.c: 216:         {;mcc_generated_files/eusart2.c: 217:      
      +                                 eusart2TxTail = 0;
 20264  004C56  0E00               	movlw	0
 20265  004C58  6FE8               	movwf	_eusart2TxTail& (0+255),b	;volatile
 20266  004C5A                     i2l5778:
 20267                           
 20268                           ; BSR set to: 0
 20269                           ;mcc_generated_files/eusart2.c: 219:         eusart2TxBufferRemaining++;
 20270  004C5A  2BFF               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 20271                           
 20272                           ;mcc_generated_files/eusart2.c: 220:     }
 20273  004C5C  EF32  F026         	goto	i2l340
 20274  004C60                     i2l337:
 20275                           
 20276                           ; BSR set to: 0
 20277                           ;mcc_generated_files/eusart2.c: 222:     {;mcc_generated_files/eusart2.c: 223:         P
      +                          IE3bits.TX2IE = 0;
 20278  004C60  010E               	movlb	14	; () banked
 20279  004C62  9DC5               	bcf	197,6,b	;volatile
 20280  004C64                     i2l340:
 20281  004C64  0012               	return		;funcret
 20282  004C66                     __end_of_EUSART2_Transmit_ISR:
 20283                           	opt callstack 0
 20284                           
 20285 ;; *************** function _EUSART2_Receive_ISR *****************
 20286 ;; Defined at:
 20287 ;;		line 227 in file "mcc_generated_files/eusart2.c"
 20288 ;; Parameters:    Size  Location     Type
 20289 ;;		None
 20290 ;; Auto vars:     Size  Location     Type
 20291 ;;		None
 20292 ;; Return value:  Size  Location     Type
 20293 ;;                  1    wreg      void 
 20294 ;; Registers used:
 20295 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 20296 ;; Tracked objects:
 20297 ;;		On entry : 0/0
 20298 ;;		On exit  : 0/0
 20299 ;;		Unchanged: 0/0
 20300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20305 ;;Total ram usage:        0 bytes
 20306 ;; Hardware stack levels used:    1
 20307 ;; Hardware stack levels required when called:    2
 20308 ;; This function calls:
 20309 ;;		Absolute function
 20310 ;;		_EUSART2_DefaultErrorHandler
 20311 ;;		_EUSART2_DefaultFramingErrorHandler
 20312 ;;		_EUSART2_DefaultOverrunErrorHandler
 20313 ;;		_EUSART2_RxDataHandler
 20314 ;; This function is called by:
 20315 ;;		_EUSART2_Initialize
 20316 ;;		_INTERRUPT_InterruptManager
 20317 ;; This function uses a non-reentrant model
 20318 ;;
 20319                           
 20320                           	psect	text88
 20321  003FBE                     __ptext88:
 20322                           	opt callstack 0
 20323  003FBE                     _EUSART2_Receive_ISR:
 20324                           	opt callstack 15
 20325  003FBE                     
 20326                           ;mcc_generated_files/eusart2.c: 230:     eusart2RxStatusBuffer[eusart2RxHead].status = 0
      +                          ;
 20327  003FBE  0EA2               	movlw	low _eusart2RxStatusBuffer
 20328  003FC0  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
 20329  003FC2  6ED9               	movwf	fsr2l,c
 20330  003FC4  6ADA               	clrf	fsr2h,c
 20331  003FC6  0E02               	movlw	high _eusart2RxStatusBuffer
 20332  003FC8  22DA               	addwfc	fsr2h,f,c
 20333  003FCA  0E00               	movlw	0
 20334  003FCC  6EDF               	movwf	indf2,c
 20335  003FCE                     
 20336                           ;mcc_generated_files/eusart2.c: 232:     if(RC2STAbits.FERR){
 20337  003FCE  010E               	movlb	14	; () banked
 20338  003FD0  A59D               	btfss	157,2,b	;volatile
 20339  003FD2  EFED  F01F         	goto	i2u499_41
 20340  003FD6  EFEF  F01F         	goto	i2u499_40
 20341  003FDA                     i2u499_41:
 20342  003FDA  EF04  F020         	goto	i2l5788
 20343  003FDE                     i2u499_40:
 20344  003FDE                     
 20345                           ; BSR set to: 14
 20346                           ;mcc_generated_files/eusart2.c: 233:         eusart2RxStatusBuffer[eusart2RxHead].ferr =
      +                           1;
 20347  003FDE  0EA2               	movlw	low _eusart2RxStatusBuffer
 20348  003FE0  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
 20349  003FE2  6ED9               	movwf	fsr2l,c
 20350  003FE4  6ADA               	clrf	fsr2h,c
 20351  003FE6  0E02               	movlw	high _eusart2RxStatusBuffer
 20352  003FE8  22DA               	addwfc	fsr2h,f,c
 20353  003FEA  0102               	movlb	2	; () banked
 20354  003FEC  82DF               	bsf	indf2,1,c
 20355  003FEE                     
 20356                           ; BSR set to: 2
 20357                           ;mcc_generated_files/eusart2.c: 234:         EUSART2_FramingErrorHandler();
 20358  003FEE  D802               	call	i2u500_48
 20359  003FF0  EF04  F020         	goto	i2u500_49
 20360  003FF4                     i2u500_48:
 20361  003FF4  0005               	push	
 20362  003FF6  6EFA               	movwf	pclath,c
 20363  003FF8  0101               	movlb	1	; () banked
 20364  003FFA  51E3               	movf	_EUSART2_FramingErrorHandler& (0+255),w,b
 20365  003FFC  6EFD               	movwf	tosl,c
 20366  003FFE  51E4               	movf	(_EUSART2_FramingErrorHandler+1)& (0+255),w,b
 20367  004000  6EFE               	movwf	tosh,c
 20368  004002  6AFF               	clrf	tosu,c
 20369  004004  50FA               	movf	pclath,w,c
 20370  004006  0012               	return		;indir
 20371  004008                     i2u500_49:
 20372  004008                     i2l5788:
 20373                           
 20374                           ;mcc_generated_files/eusart2.c: 237:     if(RC2STAbits.OERR){
 20375  004008  010E               	movlb	14	; () banked
 20376  00400A  A39D               	btfss	157,1,b	;volatile
 20377  00400C  EF0A  F020         	goto	i2u501_41
 20378  004010  EF0C  F020         	goto	i2u501_40
 20379  004014                     i2u501_41:
 20380  004014  EF21  F020         	goto	i2l5794
 20381  004018                     i2u501_40:
 20382  004018                     
 20383                           ; BSR set to: 14
 20384                           ;mcc_generated_files/eusart2.c: 238:         eusart2RxStatusBuffer[eusart2RxHead].oerr =
      +                           1;
 20385  004018  0EA2               	movlw	low _eusart2RxStatusBuffer
 20386  00401A  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
 20387  00401C  6ED9               	movwf	fsr2l,c
 20388  00401E  6ADA               	clrf	fsr2h,c
 20389  004020  0E02               	movlw	high _eusart2RxStatusBuffer
 20390  004022  22DA               	addwfc	fsr2h,f,c
 20391  004024  0102               	movlb	2	; () banked
 20392  004026  84DF               	bsf	indf2,2,c
 20393  004028                     
 20394                           ; BSR set to: 2
 20395                           ;mcc_generated_files/eusart2.c: 239:         EUSART2_OverrunErrorHandler();
 20396  004028  D802               	call	i2u502_48
 20397  00402A  EF21  F020         	goto	i2u502_49
 20398  00402E                     i2u502_48:
 20399  00402E  0005               	push	
 20400  004030  6EFA               	movwf	pclath,c
 20401  004032  0101               	movlb	1	; () banked
 20402  004034  51E1               	movf	_EUSART2_OverrunErrorHandler& (0+255),w,b
 20403  004036  6EFD               	movwf	tosl,c
 20404  004038  51E2               	movf	(_EUSART2_OverrunErrorHandler+1)& (0+255),w,b
 20405  00403A  6EFE               	movwf	tosh,c
 20406  00403C  6AFF               	clrf	tosu,c
 20407  00403E  50FA               	movf	pclath,w,c
 20408  004040  0012               	return		;indir
 20409  004042                     i2u502_49:
 20410  004042                     i2l5794:
 20411                           
 20412                           ;mcc_generated_files/eusart2.c: 242:     if(eusart2RxStatusBuffer[eusart2RxHead].status)
      +                          {
 20413  004042  0EA2               	movlw	low _eusart2RxStatusBuffer
 20414  004044  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
 20415  004046  6ED9               	movwf	fsr2l,c
 20416  004048  6ADA               	clrf	fsr2h,c
 20417  00404A  0E02               	movlw	high _eusart2RxStatusBuffer
 20418  00404C  22DA               	addwfc	fsr2h,f,c
 20419  00404E  50DF               	movf	indf2,w,c
 20420  004050  B4D8               	btfsc	status,2,c
 20421  004052  EF2D  F020         	goto	i2u503_41
 20422  004056  EF2F  F020         	goto	i2u503_40
 20423  00405A                     i2u503_41:
 20424  00405A  EF3E  F020         	goto	i2l5798
 20425  00405E                     i2u503_40:
 20426  00405E                     
 20427                           ;mcc_generated_files/eusart2.c: 243:         EUSART2_ErrorHandler();
 20428  00405E  D802               	call	i2u504_48
 20429  004060  EF3C  F020         	goto	i2u504_49
 20430  004064                     i2u504_48:
 20431  004064  0005               	push	
 20432  004066  6EFA               	movwf	pclath,c
 20433  004068  0101               	movlb	1	; () banked
 20434  00406A  51DF               	movf	_EUSART2_ErrorHandler& (0+255),w,b
 20435  00406C  6EFD               	movwf	tosl,c
 20436  00406E  51E0               	movf	(_EUSART2_ErrorHandler+1)& (0+255),w,b
 20437  004070  6EFE               	movwf	tosh,c
 20438  004072  6AFF               	clrf	tosu,c
 20439  004074  50FA               	movf	pclath,w,c
 20440  004076  0012               	return		;indir
 20441  004078                     i2u504_49:
 20442                           
 20443                           ;mcc_generated_files/eusart2.c: 244:     } else {
 20444  004078  EF40  F020         	goto	i2l347
 20445  00407C                     i2l5798:
 20446                           
 20447                           ;mcc_generated_files/eusart2.c: 245:         EUSART2_RxDataHandler();
 20448  00407C  ECBF  F027         	call	_EUSART2_RxDataHandler	;wreg free
 20449  004080                     i2l347:
 20450  004080  0012               	return		;funcret
 20451  004082                     __end_of_EUSART2_Receive_ISR:
 20452                           	opt callstack 0
 20453                           
 20454 ;; *************** function _EUSART2_DefaultOverrunErrorHandler *****************
 20455 ;; Defined at:
 20456 ;;		line 263 in file "mcc_generated_files/eusart2.c"
 20457 ;; Parameters:    Size  Location     Type
 20458 ;;		None
 20459 ;; Auto vars:     Size  Location     Type
 20460 ;;		None
 20461 ;; Return value:  Size  Location     Type
 20462 ;;                  1    wreg      void 
 20463 ;; Registers used:
 20464 ;;		None
 20465 ;; Tracked objects:
 20466 ;;		On entry : 0/0
 20467 ;;		On exit  : 0/0
 20468 ;;		Unchanged: 0/0
 20469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20474 ;;Total ram usage:        0 bytes
 20475 ;; Hardware stack levels used:    1
 20476 ;; This function calls:
 20477 ;;		Nothing
 20478 ;; This function is called by:
 20479 ;;		_EUSART2_Initialize
 20480 ;;		_EUSART2_Receive_ISR
 20481 ;; This function uses a non-reentrant model
 20482 ;;
 20483                           
 20484                           	psect	text89
 20485  0051C4                     __ptext89:
 20486                           	opt callstack 0
 20487  0051C4                     _EUSART2_DefaultOverrunErrorHandler:
 20488                           	opt callstack 16
 20489  0051C4                     
 20490                           ;mcc_generated_files/eusart2.c: 266:     RC2STAbits.CREN = 0;
 20491  0051C4  010E               	movlb	14	; () banked
 20492  0051C6  999D               	bcf	157,4,b	;volatile
 20493                           
 20494                           ;mcc_generated_files/eusart2.c: 267:     RC2STAbits.CREN = 1;
 20495  0051C8  899D               	bsf	157,4,b	;volatile
 20496  0051CA                     
 20497                           ; BSR set to: 14
 20498  0051CA  0012               	return		;funcret
 20499  0051CC                     __end_of_EUSART2_DefaultOverrunErrorHandler:
 20500                           	opt callstack 0
 20501                           
 20502 ;; *************** function _EUSART2_DefaultFramingErrorHandler *****************
 20503 ;; Defined at:
 20504 ;;		line 261 in file "mcc_generated_files/eusart2.c"
 20505 ;; Parameters:    Size  Location     Type
 20506 ;;		None
 20507 ;; Auto vars:     Size  Location     Type
 20508 ;;		None
 20509 ;; Return value:  Size  Location     Type
 20510 ;;                  1    wreg      void 
 20511 ;; Registers used:
 20512 ;;		None
 20513 ;; Tracked objects:
 20514 ;;		On entry : 0/0
 20515 ;;		On exit  : 0/0
 20516 ;;		Unchanged: 0/0
 20517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20522 ;;Total ram usage:        0 bytes
 20523 ;; Hardware stack levels used:    1
 20524 ;; This function calls:
 20525 ;;		Nothing
 20526 ;; This function is called by:
 20527 ;;		_EUSART2_Initialize
 20528 ;;		_EUSART2_Receive_ISR
 20529 ;; This function uses a non-reentrant model
 20530 ;;
 20531                           
 20532                           	psect	text90
 20533  0051F2                     __ptext90:
 20534                           	opt callstack 0
 20535  0051F2                     _EUSART2_DefaultFramingErrorHandler:
 20536                           	opt callstack 16
 20537  0051F2  0012               	return		;funcret
 20538  0051F4                     __end_of_EUSART2_DefaultFramingErrorHandler:
 20539                           	opt callstack 0
 20540                           
 20541 ;; *************** function _EUSART2_DefaultErrorHandler *****************
 20542 ;; Defined at:
 20543 ;;		line 271 in file "mcc_generated_files/eusart2.c"
 20544 ;; Parameters:    Size  Location     Type
 20545 ;;		None
 20546 ;; Auto vars:     Size  Location     Type
 20547 ;;		None
 20548 ;; Return value:  Size  Location     Type
 20549 ;;                  1    wreg      void 
 20550 ;; Registers used:
 20551 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20552 ;; Tracked objects:
 20553 ;;		On entry : 0/0
 20554 ;;		On exit  : 0/0
 20555 ;;		Unchanged: 0/0
 20556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20561 ;;Total ram usage:        0 bytes
 20562 ;; Hardware stack levels used:    1
 20563 ;; Hardware stack levels required when called:    1
 20564 ;; This function calls:
 20565 ;;		_EUSART2_RxDataHandler
 20566 ;; This function is called by:
 20567 ;;		_EUSART2_Initialize
 20568 ;;		_EUSART2_Receive_ISR
 20569 ;; This function uses a non-reentrant model
 20570 ;;
 20571                           
 20572                           	psect	text91
 20573  0051D8                     __ptext91:
 20574                           	opt callstack 0
 20575  0051D8                     _EUSART2_DefaultErrorHandler:
 20576                           	opt callstack 15
 20577  0051D8                     
 20578                           ;mcc_generated_files/eusart2.c: 272:     EUSART2_RxDataHandler();
 20579  0051D8  ECBF  F027         	call	_EUSART2_RxDataHandler	;wreg free
 20580  0051DC  0012               	return		;funcret
 20581  0051DE                     __end_of_EUSART2_DefaultErrorHandler:
 20582                           	opt callstack 0
 20583                           
 20584 ;; *************** function _EUSART2_RxDataHandler *****************
 20585 ;; Defined at:
 20586 ;;		line 251 in file "mcc_generated_files/eusart2.c"
 20587 ;; Parameters:    Size  Location     Type
 20588 ;;		None
 20589 ;; Auto vars:     Size  Location     Type
 20590 ;;		None
 20591 ;; Return value:  Size  Location     Type
 20592 ;;                  1    wreg      void 
 20593 ;; Registers used:
 20594 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20595 ;; Tracked objects:
 20596 ;;		On entry : 0/0
 20597 ;;		On exit  : 0/0
 20598 ;;		Unchanged: 0/0
 20599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20604 ;;Total ram usage:        0 bytes
 20605 ;; Hardware stack levels used:    1
 20606 ;; This function calls:
 20607 ;;		Nothing
 20608 ;; This function is called by:
 20609 ;;		_EUSART2_Receive_ISR
 20610 ;;		_EUSART2_DefaultErrorHandler
 20611 ;; This function uses a non-reentrant model
 20612 ;;
 20613                           
 20614                           	psect	text92
 20615  004F7E                     __ptext92:
 20616                           	opt callstack 0
 20617  004F7E                     _EUSART2_RxDataHandler:
 20618                           	opt callstack 16
 20619  004F7E                     
 20620                           ;mcc_generated_files/eusart2.c: 253:     eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 20621  004F7E  0E64               	movlw	low _eusart2RxBuffer
 20622  004F80  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
 20623  004F82  6ED9               	movwf	fsr2l,c
 20624  004F84  6ADA               	clrf	fsr2h,c
 20625  004F86  0E03               	movlw	high _eusart2RxBuffer
 20626  004F88  22DA               	addwfc	fsr2h,f,c
 20627  004F8A  CE99 FFDF          	movff	3737,indf2	;volatile
 20628  004F8E  2A5A               	incf	_eusart2RxHead^0,f,c	;volatile
 20629  004F90                     
 20630                           ;mcc_generated_files/eusart2.c: 254:     if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 20631  004F90  0E1F               	movlw	31
 20632  004F92  645A               	cpfsgt	_eusart2RxHead^0,c	;volatile
 20633  004F94  EFCE  F027         	goto	i2u441_41
 20634  004F98  EFD0  F027         	goto	i2u441_40
 20635  004F9C                     i2u441_41:
 20636  004F9C  EFD2  F027         	goto	i2l5224
 20637  004FA0                     i2u441_40:
 20638  004FA0                     
 20639                           ;mcc_generated_files/eusart2.c: 255:     {;mcc_generated_files/eusart2.c: 256:         e
      +                          usart2RxHead = 0;
 20640  004FA0  0E00               	movlw	0
 20641  004FA2  6E5A               	movwf	_eusart2RxHead^0,c	;volatile
 20642  004FA4                     i2l5224:
 20643                           
 20644                           ;mcc_generated_files/eusart2.c: 258:     eusart2RxCount++;
 20645  004FA4  0100               	movlb	0	; () banked
 20646  004FA6  2BE6               	incf	_eusart2RxCount& (0+255),f,b	;volatile
 20647  004FA8                     
 20648                           ; BSR set to: 0
 20649  004FA8  0012               	return		;funcret
 20650  004FAA                     __end_of_EUSART2_RxDataHandler:
 20651                           	opt callstack 0
 20652                           
 20653 ;; *************** function _EUSART1_Transmit_ISR *****************
 20654 ;; Defined at:
 20655 ;;		line 199 in file "mcc_generated_files/eusart1.c"
 20656 ;; Parameters:    Size  Location     Type
 20657 ;;		None
 20658 ;; Auto vars:     Size  Location     Type
 20659 ;;		None
 20660 ;; Return value:  Size  Location     Type
 20661 ;;                  1    wreg      void 
 20662 ;; Registers used:
 20663 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20664 ;; Tracked objects:
 20665 ;;		On entry : 0/0
 20666 ;;		On exit  : 0/0
 20667 ;;		Unchanged: 0/0
 20668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20673 ;;Total ram usage:        0 bytes
 20674 ;; Hardware stack levels used:    1
 20675 ;; This function calls:
 20676 ;;		Nothing
 20677 ;; This function is called by:
 20678 ;;		_EUSART1_Initialize
 20679 ;;		_INTERRUPT_InterruptManager
 20680 ;; This function uses a non-reentrant model
 20681 ;;
 20682                           
 20683                           	psect	text93
 20684  004CEE                     __ptext93:
 20685                           	opt callstack 0
 20686  004CEE                     _EUSART1_Transmit_ISR:
 20687                           	opt callstack 17
 20688  004CEE                     
 20689                           ;mcc_generated_files/eusart1.c: 203:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 20690  004CEE  0E10               	movlw	16
 20691  004CF0  0100               	movlb	0	; () banked
 20692  004CF2  61FE               	cpfslt	_eusart1TxBufferRemaining& (0+255),b	;volatile
 20693  004CF4  EF7E  F026         	goto	i2u505_41
 20694  004CF8  EF80  F026         	goto	i2u505_40
 20695  004CFC                     i2u505_41:
 20696  004CFC  EF96  F026         	goto	i2l481
 20697  004D00                     i2u505_40:
 20698  004D00                     
 20699                           ; BSR set to: 0
 20700                           ;mcc_generated_files/eusart1.c: 204:     {;mcc_generated_files/eusart1.c: 205:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 20701  004D00  0EC2               	movlw	low _eusart1TxBuffer
 20702  004D02  25E3               	addwf	_eusart1TxTail& (0+255),w,b	;volatile
 20703  004D04  6ED9               	movwf	fsr2l,c
 20704  004D06  6ADA               	clrf	fsr2h,c
 20705  004D08  0E02               	movlw	high _eusart1TxBuffer
 20706  004D0A  22DA               	addwfc	fsr2h,f,c
 20707  004D0C  50DF               	movf	indf2,w,c
 20708  004D0E  6E9A               	movwf	154,c	;volatile
 20709  004D10                     
 20710                           ; BSR set to: 0
 20711  004D10  2BE3               	incf	_eusart1TxTail& (0+255),f,b	;volatile
 20712  004D12                     
 20713                           ; BSR set to: 0
 20714                           ;mcc_generated_files/eusart1.c: 206:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 20715  004D12  0E0F               	movlw	15
 20716  004D14  65E3               	cpfsgt	_eusart1TxTail& (0+255),b	;volatile
 20717  004D16  EF8F  F026         	goto	i2u506_41
 20718  004D1A  EF91  F026         	goto	i2u506_40
 20719  004D1E                     i2u506_41:
 20720  004D1E  EF93  F026         	goto	i2l5810
 20721  004D22                     i2u506_40:
 20722  004D22                     
 20723                           ; BSR set to: 0
 20724                           ;mcc_generated_files/eusart1.c: 207:         {;mcc_generated_files/eusart1.c: 208:      
      +                                 eusart1TxTail = 0;
 20725  004D22  0E00               	movlw	0
 20726  004D24  6FE3               	movwf	_eusart1TxTail& (0+255),b	;volatile
 20727  004D26                     i2l5810:
 20728                           
 20729                           ; BSR set to: 0
 20730                           ;mcc_generated_files/eusart1.c: 210:         eusart1TxBufferRemaining++;
 20731  004D26  2BFE               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 20732                           
 20733                           ;mcc_generated_files/eusart1.c: 211:     }
 20734  004D28  EF98  F026         	goto	i2l484
 20735  004D2C                     i2l481:
 20736                           
 20737                           ; BSR set to: 0
 20738                           ;mcc_generated_files/eusart1.c: 213:     {;mcc_generated_files/eusart1.c: 214:         P
      +                          IE3bits.TX1IE = 0;
 20739  004D2C  010E               	movlb	14	; () banked
 20740  004D2E  99C5               	bcf	197,4,b	;volatile
 20741  004D30                     i2l484:
 20742  004D30  0012               	return		;funcret
 20743  004D32                     __end_of_EUSART1_Transmit_ISR:
 20744                           	opt callstack 0
 20745                           
 20746 ;; *************** function _EUSART1_Receive_ISR *****************
 20747 ;; Defined at:
 20748 ;;		line 218 in file "mcc_generated_files/eusart1.c"
 20749 ;; Parameters:    Size  Location     Type
 20750 ;;		None
 20751 ;; Auto vars:     Size  Location     Type
 20752 ;;		None
 20753 ;; Return value:  Size  Location     Type
 20754 ;;                  1    wreg      void 
 20755 ;; Registers used:
 20756 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 20757 ;; Tracked objects:
 20758 ;;		On entry : 0/0
 20759 ;;		On exit  : 0/0
 20760 ;;		Unchanged: 0/0
 20761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20766 ;;Total ram usage:        0 bytes
 20767 ;; Hardware stack levels used:    1
 20768 ;; Hardware stack levels required when called:    2
 20769 ;; This function calls:
 20770 ;;		Absolute function
 20771 ;;		_EUSART1_DefaultErrorHandler
 20772 ;;		_EUSART1_DefaultFramingErrorHandler
 20773 ;;		_EUSART1_DefaultOverrunErrorHandler
 20774 ;;		_EUSART1_RxDataHandler
 20775 ;; This function is called by:
 20776 ;;		_EUSART1_Initialize
 20777 ;;		_INTERRUPT_InterruptManager
 20778 ;; This function uses a non-reentrant model
 20779 ;;
 20780                           
 20781                           	psect	text94
 20782  004204                     __ptext94:
 20783                           	opt callstack 0
 20784  004204                     _EUSART1_Receive_ISR:
 20785                           	opt callstack 15
 20786  004204                     
 20787                           ;mcc_generated_files/eusart1.c: 221:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 20788  004204  0E00               	movlw	low _eusart1RxStatusBuffer
 20789  004206  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
 20790  004208  6ED9               	movwf	fsr2l,c
 20791  00420A  6ADA               	clrf	fsr2h,c
 20792  00420C  0E03               	movlw	high _eusart1RxStatusBuffer
 20793  00420E  22DA               	addwfc	fsr2h,f,c
 20794  004210  0E00               	movlw	0
 20795  004212  6EDF               	movwf	indf2,c
 20796  004214                     
 20797                           ;mcc_generated_files/eusart1.c: 223:     if(RC1STAbits.FERR){
 20798  004214  A49D               	btfss	157,2,c	;volatile
 20799  004216  EF0F  F021         	goto	i2u507_41
 20800  00421A  EF11  F021         	goto	i2u507_40
 20801  00421E                     i2u507_41:
 20802  00421E  EF26  F021         	goto	i2l5820
 20803  004222                     i2u507_40:
 20804  004222                     
 20805                           ;mcc_generated_files/eusart1.c: 224:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 20806  004222  0E00               	movlw	low _eusart1RxStatusBuffer
 20807  004224  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
 20808  004226  6ED9               	movwf	fsr2l,c
 20809  004228  6ADA               	clrf	fsr2h,c
 20810  00422A  0E03               	movlw	high _eusart1RxStatusBuffer
 20811  00422C  22DA               	addwfc	fsr2h,f,c
 20812  00422E  0103               	movlb	3	; () banked
 20813  004230  82DF               	bsf	indf2,1,c
 20814  004232                     
 20815                           ; BSR set to: 3
 20816                           ;mcc_generated_files/eusart1.c: 225:         EUSART1_FramingErrorHandler();
 20817  004232  D802               	call	i2u508_48
 20818  004234  EF26  F021         	goto	i2u508_49
 20819  004238                     i2u508_48:
 20820  004238  0005               	push	
 20821  00423A  6EFA               	movwf	pclath,c
 20822  00423C  0101               	movlb	1	; () banked
 20823  00423E  51DD               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
 20824  004240  6EFD               	movwf	tosl,c
 20825  004242  51DE               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
 20826  004244  6EFE               	movwf	tosh,c
 20827  004246  6AFF               	clrf	tosu,c
 20828  004248  50FA               	movf	pclath,w,c
 20829  00424A  0012               	return		;indir
 20830  00424C                     i2u508_49:
 20831  00424C                     i2l5820:
 20832                           
 20833                           ;mcc_generated_files/eusart1.c: 228:     if(RC1STAbits.OERR){
 20834  00424C  A29D               	btfss	157,1,c	;volatile
 20835  00424E  EF2B  F021         	goto	i2u509_41
 20836  004252  EF2D  F021         	goto	i2u509_40
 20837  004256                     i2u509_41:
 20838  004256  EF42  F021         	goto	i2l5826
 20839  00425A                     i2u509_40:
 20840  00425A                     
 20841                           ;mcc_generated_files/eusart1.c: 229:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 20842  00425A  0E00               	movlw	low _eusart1RxStatusBuffer
 20843  00425C  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
 20844  00425E  6ED9               	movwf	fsr2l,c
 20845  004260  6ADA               	clrf	fsr2h,c
 20846  004262  0E03               	movlw	high _eusart1RxStatusBuffer
 20847  004264  22DA               	addwfc	fsr2h,f,c
 20848  004266  0103               	movlb	3	; () banked
 20849  004268  84DF               	bsf	indf2,2,c
 20850  00426A                     
 20851                           ; BSR set to: 3
 20852                           ;mcc_generated_files/eusart1.c: 230:         EUSART1_OverrunErrorHandler();
 20853  00426A  D802               	call	i2u510_48
 20854  00426C  EF42  F021         	goto	i2u510_49
 20855  004270                     i2u510_48:
 20856  004270  0005               	push	
 20857  004272  6EFA               	movwf	pclath,c
 20858  004274  0101               	movlb	1	; () banked
 20859  004276  51DB               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
 20860  004278  6EFD               	movwf	tosl,c
 20861  00427A  51DC               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
 20862  00427C  6EFE               	movwf	tosh,c
 20863  00427E  6AFF               	clrf	tosu,c
 20864  004280  50FA               	movf	pclath,w,c
 20865  004282  0012               	return		;indir
 20866  004284                     i2u510_49:
 20867  004284                     i2l5826:
 20868                           
 20869                           ;mcc_generated_files/eusart1.c: 233:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 20870  004284  0E00               	movlw	low _eusart1RxStatusBuffer
 20871  004286  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
 20872  004288  6ED9               	movwf	fsr2l,c
 20873  00428A  6ADA               	clrf	fsr2h,c
 20874  00428C  0E03               	movlw	high _eusart1RxStatusBuffer
 20875  00428E  22DA               	addwfc	fsr2h,f,c
 20876  004290  50DF               	movf	indf2,w,c
 20877  004292  B4D8               	btfsc	status,2,c
 20878  004294  EF4E  F021         	goto	i2u511_41
 20879  004298  EF50  F021         	goto	i2u511_40
 20880  00429C                     i2u511_41:
 20881  00429C  EF5F  F021         	goto	i2l5830
 20882  0042A0                     i2u511_40:
 20883  0042A0                     
 20884                           ;mcc_generated_files/eusart1.c: 234:         EUSART1_ErrorHandler();
 20885  0042A0  D802               	call	i2u512_48
 20886  0042A2  EF5D  F021         	goto	i2u512_49
 20887  0042A6                     i2u512_48:
 20888  0042A6  0005               	push	
 20889  0042A8  6EFA               	movwf	pclath,c
 20890  0042AA  0101               	movlb	1	; () banked
 20891  0042AC  51D9               	movf	_EUSART1_ErrorHandler& (0+255),w,b
 20892  0042AE  6EFD               	movwf	tosl,c
 20893  0042B0  51DA               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
 20894  0042B2  6EFE               	movwf	tosh,c
 20895  0042B4  6AFF               	clrf	tosu,c
 20896  0042B6  50FA               	movf	pclath,w,c
 20897  0042B8  0012               	return		;indir
 20898  0042BA                     i2u512_49:
 20899                           
 20900                           ;mcc_generated_files/eusart1.c: 235:     } else {
 20901  0042BA  EF61  F021         	goto	i2l491
 20902  0042BE                     i2l5830:
 20903                           
 20904                           ;mcc_generated_files/eusart1.c: 236:         EUSART1_RxDataHandler();
 20905  0042BE  ECD5  F027         	call	_EUSART1_RxDataHandler	;wreg free
 20906  0042C2                     i2l491:
 20907  0042C2  0012               	return		;funcret
 20908  0042C4                     __end_of_EUSART1_Receive_ISR:
 20909                           	opt callstack 0
 20910                           
 20911 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 20912 ;; Defined at:
 20913 ;;		line 254 in file "mcc_generated_files/eusart1.c"
 20914 ;; Parameters:    Size  Location     Type
 20915 ;;		None
 20916 ;; Auto vars:     Size  Location     Type
 20917 ;;		None
 20918 ;; Return value:  Size  Location     Type
 20919 ;;                  1    wreg      void 
 20920 ;; Registers used:
 20921 ;;		None
 20922 ;; Tracked objects:
 20923 ;;		On entry : 0/0
 20924 ;;		On exit  : 0/0
 20925 ;;		Unchanged: 0/0
 20926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20931 ;;Total ram usage:        0 bytes
 20932 ;; Hardware stack levels used:    1
 20933 ;; This function calls:
 20934 ;;		Nothing
 20935 ;; This function is called by:
 20936 ;;		_EUSART1_Initialize
 20937 ;;		_EUSART1_Receive_ISR
 20938 ;; This function uses a non-reentrant model
 20939 ;;
 20940                           
 20941                           	psect	text95
 20942  0051DE                     __ptext95:
 20943                           	opt callstack 0
 20944  0051DE                     _EUSART1_DefaultOverrunErrorHandler:
 20945                           	opt callstack 16
 20946  0051DE                     
 20947                           ;mcc_generated_files/eusart1.c: 257:     RC1STAbits.CREN = 0;
 20948  0051DE  989D               	bcf	157,4,c	;volatile
 20949                           
 20950                           ;mcc_generated_files/eusart1.c: 258:     RC1STAbits.CREN = 1;
 20951  0051E0  889D               	bsf	157,4,c	;volatile
 20952  0051E2  0012               	return		;funcret
 20953  0051E4                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 20954                           	opt callstack 0
 20955                           
 20956 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 20957 ;; Defined at:
 20958 ;;		line 252 in file "mcc_generated_files/eusart1.c"
 20959 ;; Parameters:    Size  Location     Type
 20960 ;;		None
 20961 ;; Auto vars:     Size  Location     Type
 20962 ;;		None
 20963 ;; Return value:  Size  Location     Type
 20964 ;;                  1    wreg      void 
 20965 ;; Registers used:
 20966 ;;		None
 20967 ;; Tracked objects:
 20968 ;;		On entry : 0/0
 20969 ;;		On exit  : 0/0
 20970 ;;		Unchanged: 0/0
 20971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20976 ;;Total ram usage:        0 bytes
 20977 ;; Hardware stack levels used:    1
 20978 ;; This function calls:
 20979 ;;		Nothing
 20980 ;; This function is called by:
 20981 ;;		_EUSART1_Initialize
 20982 ;;		_EUSART1_Receive_ISR
 20983 ;; This function uses a non-reentrant model
 20984 ;;
 20985                           
 20986                           	psect	text96
 20987  0051F4                     __ptext96:
 20988                           	opt callstack 0
 20989  0051F4                     _EUSART1_DefaultFramingErrorHandler:
 20990                           	opt callstack 16
 20991  0051F4  0012               	return		;funcret
 20992  0051F6                     __end_of_EUSART1_DefaultFramingErrorHandler:
 20993                           	opt callstack 0
 20994                           
 20995 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 20996 ;; Defined at:
 20997 ;;		line 262 in file "mcc_generated_files/eusart1.c"
 20998 ;; Parameters:    Size  Location     Type
 20999 ;;		None
 21000 ;; Auto vars:     Size  Location     Type
 21001 ;;		None
 21002 ;; Return value:  Size  Location     Type
 21003 ;;                  1    wreg      void 
 21004 ;; Registers used:
 21005 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21006 ;; Tracked objects:
 21007 ;;		On entry : 0/0
 21008 ;;		On exit  : 0/0
 21009 ;;		Unchanged: 0/0
 21010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21015 ;;Total ram usage:        0 bytes
 21016 ;; Hardware stack levels used:    1
 21017 ;; Hardware stack levels required when called:    1
 21018 ;; This function calls:
 21019 ;;		_EUSART1_RxDataHandler
 21020 ;; This function is called by:
 21021 ;;		_EUSART1_Initialize
 21022 ;;		_EUSART1_Receive_ISR
 21023 ;; This function uses a non-reentrant model
 21024 ;;
 21025                           
 21026                           	psect	text97
 21027  0051E4                     __ptext97:
 21028                           	opt callstack 0
 21029  0051E4                     _EUSART1_DefaultErrorHandler:
 21030                           	opt callstack 15
 21031  0051E4                     
 21032                           ;mcc_generated_files/eusart1.c: 263:     EUSART1_RxDataHandler();
 21033  0051E4  ECD5  F027         	call	_EUSART1_RxDataHandler	;wreg free
 21034  0051E8  0012               	return		;funcret
 21035  0051EA                     __end_of_EUSART1_DefaultErrorHandler:
 21036                           	opt callstack 0
 21037                           
 21038 ;; *************** function _EUSART1_RxDataHandler *****************
 21039 ;; Defined at:
 21040 ;;		line 242 in file "mcc_generated_files/eusart1.c"
 21041 ;; Parameters:    Size  Location     Type
 21042 ;;		None
 21043 ;; Auto vars:     Size  Location     Type
 21044 ;;		None
 21045 ;; Return value:  Size  Location     Type
 21046 ;;                  1    wreg      void 
 21047 ;; Registers used:
 21048 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21049 ;; Tracked objects:
 21050 ;;		On entry : 0/0
 21051 ;;		On exit  : 0/0
 21052 ;;		Unchanged: 0/0
 21053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21058 ;;Total ram usage:        0 bytes
 21059 ;; Hardware stack levels used:    1
 21060 ;; This function calls:
 21061 ;;		Nothing
 21062 ;; This function is called by:
 21063 ;;		_EUSART1_Receive_ISR
 21064 ;;		_EUSART1_DefaultErrorHandler
 21065 ;; This function uses a non-reentrant model
 21066 ;;
 21067                           
 21068                           	psect	text98
 21069  004FAA                     __ptext98:
 21070                           	opt callstack 0
 21071  004FAA                     _EUSART1_RxDataHandler:
 21072                           	opt callstack 16
 21073  004FAA                     
 21074                           ;mcc_generated_files/eusart1.c: 244:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 21075  004FAA  0E00               	movlw	low _eusart1RxBuffer
 21076  004FAC  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
 21077  004FAE  6ED9               	movwf	fsr2l,c
 21078  004FB0  6ADA               	clrf	fsr2h,c
 21079  004FB2  0E04               	movlw	high _eusart1RxBuffer
 21080  004FB4  22DA               	addwfc	fsr2h,f,c
 21081  004FB6  CF99 FFDF          	movff	3993,indf2	;volatile
 21082  004FBA  2A59               	incf	_eusart1RxHead^0,f,c	;volatile
 21083  004FBC                     
 21084                           ;mcc_generated_files/eusart1.c: 245:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 21085  004FBC  0E63               	movlw	99
 21086  004FBE  6459               	cpfsgt	_eusart1RxHead^0,c	;volatile
 21087  004FC0  EFE4  F027         	goto	i2u442_41
 21088  004FC4  EFE6  F027         	goto	i2u442_40
 21089  004FC8                     i2u442_41:
 21090  004FC8  EFE8  F027         	goto	i2l5244
 21091  004FCC                     i2u442_40:
 21092  004FCC                     
 21093                           ;mcc_generated_files/eusart1.c: 246:     {;mcc_generated_files/eusart1.c: 247:         e
      +                          usart1RxHead = 0;
 21094  004FCC  0E00               	movlw	0
 21095  004FCE  6E59               	movwf	_eusart1RxHead^0,c	;volatile
 21096  004FD0                     i2l5244:
 21097                           
 21098                           ;mcc_generated_files/eusart1.c: 249:     eusart1RxCount++;
 21099  004FD0  0100               	movlb	0	; () banked
 21100  004FD2  2BE1               	incf	_eusart1RxCount& (0+255),f,b	;volatile
 21101  004FD4                     
 21102                           ; BSR set to: 0
 21103  004FD4  0012               	return		;funcret
 21104  004FD6                     __end_of_EUSART1_RxDataHandler:
 21105                           	opt callstack 0
 21106                           
 21107                           	psect	text99
 21108  000000                     __ptext99:
 21109                           	opt callstack 0
 21110  000000                     
 21111                           	psect	rparam
 21112  0000                     
 21113                           	psect	temp
 21114  00005B                     btemp:
 21115                           	opt callstack 0
 21116  00005B                     	ds	1
 21117  0000                     int$flags	set	btemp
 21118  0000                     wtemp8	set	btemp+1
 21119  0000                     ttemp5	set	btemp+1
 21120  0000                     ttemp6	set	btemp+4
 21121  0000                     ttemp7	set	btemp+8
 21122                           tosu	equ	0xFFF
 21123                           tosh	equ	0xFFE
 21124                           tosl	equ	0xFFD
 21125                           stkptr	equ	0xFFC
 21126                           pclatu	equ	0xFFB
 21127                           pclath	equ	0xFFA
 21128                           pcl	equ	0xFF9
 21129                           tblptru	equ	0xFF8
 21130                           tblptrh	equ	0xFF7
 21131                           tblptrl	equ	0xFF6
 21132                           tablat	equ	0xFF5
 21133                           prodh	equ	0xFF4
 21134                           prodl	equ	0xFF3
 21135                           indf0	equ	0xFEF
 21136                           postinc0	equ	0xFEE
 21137                           postdec0	equ	0xFED
 21138                           preinc0	equ	0xFEC
 21139                           plusw0	equ	0xFEB
 21140                           fsr0h	equ	0xFEA
 21141                           fsr0l	equ	0xFE9
 21142                           wreg	equ	0xFE8
 21143                           indf1	equ	0xFE7
 21144                           postinc1	equ	0xFE6
 21145                           postdec1	equ	0xFE5
 21146                           preinc1	equ	0xFE4
 21147                           plusw1	equ	0xFE3
 21148                           fsr1h	equ	0xFE2
 21149                           fsr1l	equ	0xFE1
 21150                           bsr	equ	0xFE0
 21151                           indf2	equ	0xFDF
 21152                           postinc2	equ	0xFDE
 21153                           postdec2	equ	0xFDD
 21154                           preinc2	equ	0xFDC
 21155                           plusw2	equ	0xFDB
 21156                           fsr2h	equ	0xFDA
 21157                           fsr2l	equ	0xFD9
 21158                           status	equ	0xFD8


Data Sizes:
    Strings     3323
    Constant    0
    Data        457
    BSS         523
    Persistent  22
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      90
    BANK0           160    109     160
    BANK1           256     71     254
    BANK2           256      0     253
    BANK3           256      0     247
    BANK4           256      0     164
    BANK5           256      0     100
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK2[32]), ValidateCmd@ConfName_1579(BANK1[20]), 
		 -> ValidateCmd@ConfName_1575(BANK1[20]), ValidateCmd@ConfName(BANK1[20]), STR_97(CODE[9]), STR_96(CODE[12]), 
		 -> InitialiseString@RevNum(BANK0[2]), InitialiseString@PartNum(BANK0[19]), InitialiseString@SerialNum(BANK0[11]), Command(BANK1[16]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK2[32]), ValidateCmd@ConfName_1579(BANK1[20]), 
		 -> ValidateCmd@ConfName_1575(BANK1[20]), ValidateCmd@ConfName(BANK1[20]), STR_97(CODE[9]), STR_96(CODE[12]), 
		 -> InitialiseString@RevNum(BANK0[2]), InitialiseString@PartNum(BANK0[19]), InitialiseString@SerialNum(BANK0[11]), Command(BANK1[16]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_130(CODE[1]), STR_125(CODE[1]), ReadRX232@temp(COMRAM[2]), STR_7(CODE[1]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_130(CODE[1]), STR_125(CODE[1]), ReadRX232@temp(COMRAM[2]), STR_7(CODE[1]), 

    strcmp@r	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_141(CODE[4]), STR_139(CODE[5]), STR_137(CODE[7]), STR_135(CODE[2]), 
		 -> STR_133(CODE[6]), STR_89(CODE[4]), STR_88(CODE[5]), STR_87(CODE[7]), 

    strcmp@l	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_86(CODE[4]), STR_84(CODE[5]), STR_82(CODE[7]), Command(BANK1[16]), 

    strcat@src	PTR const unsigned char  size(2) Largest target is 2
		 -> ReadRX232@temp(COMRAM[2]), 

    strcat@dest	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 102
		 -> STR_131(CODE[12]), STR_129(CODE[13]), STR_128(CODE[17]), STR_127(CODE[15]), 
		 -> STR_126(CODE[33]), STR_124(CODE[38]), STR_123(CODE[58]), STR_122(CODE[17]), 
		 -> STR_121(CODE[16]), STR_120(CODE[4]), STR_119(CODE[19]), STR_118(CODE[16]), 
		 -> STR_117(CODE[102]), STR_116(CODE[32]), STR_115(CODE[33]), STR_114(CODE[37]), 
		 -> STR_113(CODE[44]), STR_112(CODE[22]), STR_111(CODE[75]), STR_110(CODE[67]), 
		 -> STR_109(CODE[75]), STR_108(CODE[68]), STR_107(CODE[69]), STR_106(CODE[54]), 
		 -> STR_105(CODE[52]), STR_104(CODE[53]), STR_103(CODE[38]), STR_102(CODE[51]), 
		 -> STR_101(CODE[73]), STR_100(CODE[42]), STR_99(CODE[36]), STR_98(CODE[34]), 
		 -> STR_95(CODE[42]), STR_94(CODE[22]), STR_93(CODE[21]), STR_92(CODE[20]), 
		 -> STR_91(CODE[19]), STR_90(CODE[40]), STR_80(CODE[32]), STR_79(CODE[37]), 
		 -> STR_78(CODE[16]), STR_77(CODE[24]), STR_76(CODE[4]), STR_75(CODE[24]), 
		 -> STR_74(CODE[30]), STR_73(CODE[30]), STR_72(CODE[37]), STR_71(CODE[37]), 
		 -> STR_70(CODE[38]), STR_69(CODE[38]), STR_68(CODE[54]), STR_67(CODE[36]), 
		 -> STR_66(CODE[32]), STR_65(CODE[32]), STR_64(CODE[35]), STR_63(CODE[54]), 
		 -> STR_62(CODE[38]), STR_61(CODE[54]), STR_60(CODE[36]), STR_59(CODE[19]), 
		 -> STR_58(CODE[54]), STR_57(CODE[15]), STR_56(CODE[30]), STR_55(CODE[52]), 
		 -> STR_54(CODE[28]), STR_53(CODE[30]), STR_52(CODE[52]), STR_51(CODE[25]), 
		 -> STR_50(CODE[30]), STR_49(CODE[52]), STR_48(CODE[25]), STR_47(CODE[30]), 
		 -> STR_46(CODE[52]), STR_45(CODE[23]), STR_44(CODE[30]), STR_43(CODE[42]), 
		 -> STR_42(CODE[21]), STR_41(CODE[30]), STR_40(CODE[52]), STR_39(CODE[21]), 
		 -> STR_38(CODE[30]), STR_37(CODE[52]), STR_36(CODE[25]), STR_35(CODE[30]), 
		 -> STR_34(CODE[52]), STR_33(CODE[37]), STR_32(CODE[36]), STR_31(CODE[3]), 
		 -> STR_30(CODE[32]), STR_29(CODE[32]), STR_28(CODE[35]), STR_27(CODE[66]), 
		 -> STR_26(CODE[38]), STR_25(CODE[37]), STR_24(CODE[37]), STR_23(CODE[38]), 
		 -> STR_22(CODE[38]), STR_21(CODE[55]), STR_20(CODE[36]), STR_19(CODE[30]), 
		 -> STR_18(CODE[30]), STR_17(CODE[37]), STR_16(CODE[37]), STR_15(CODE[38]), 
		 -> STR_14(CODE[38]), STR_13(CODE[54]), STR_12(CODE[36]), STR_11(CODE[21]), 
		 -> STR_10(CODE[28]), STR_9(CODE[54]), STR_8(CODE[27]), STR_6(CODE[19]), 
		 -> STR_5(CODE[28]), STR_4(CODE[30]), STR_3(CODE[31]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2455_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    memmove@d1	PTR void  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    memmove@d	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    memmove@s1	PTR const void  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    memmove@s	PTR const unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 102
		 -> STR_131(CODE[12]), STR_129(CODE[13]), STR_128(CODE[17]), STR_127(CODE[15]), 
		 -> STR_126(CODE[33]), STR_124(CODE[38]), STR_123(CODE[58]), STR_122(CODE[17]), 
		 -> STR_121(CODE[16]), STR_120(CODE[4]), STR_119(CODE[19]), STR_118(CODE[16]), 
		 -> STR_117(CODE[102]), STR_116(CODE[32]), STR_115(CODE[33]), STR_114(CODE[37]), 
		 -> STR_113(CODE[44]), STR_112(CODE[22]), STR_111(CODE[75]), STR_110(CODE[67]), 
		 -> STR_109(CODE[75]), STR_108(CODE[68]), STR_107(CODE[69]), STR_106(CODE[54]), 
		 -> STR_105(CODE[52]), STR_104(CODE[53]), STR_103(CODE[38]), STR_102(CODE[51]), 
		 -> STR_101(CODE[73]), STR_100(CODE[42]), STR_99(CODE[36]), STR_98(CODE[34]), 
		 -> STR_95(CODE[42]), STR_94(CODE[22]), STR_93(CODE[21]), STR_92(CODE[20]), 
		 -> STR_91(CODE[19]), STR_90(CODE[40]), STR_80(CODE[32]), STR_79(CODE[37]), 
		 -> STR_78(CODE[16]), STR_77(CODE[24]), STR_76(CODE[4]), STR_75(CODE[24]), 
		 -> STR_74(CODE[30]), STR_73(CODE[30]), STR_72(CODE[37]), STR_71(CODE[37]), 
		 -> STR_70(CODE[38]), STR_69(CODE[38]), STR_68(CODE[54]), STR_67(CODE[36]), 
		 -> STR_66(CODE[32]), STR_65(CODE[32]), STR_64(CODE[35]), STR_63(CODE[54]), 
		 -> STR_62(CODE[38]), STR_61(CODE[54]), STR_60(CODE[36]), STR_59(CODE[19]), 
		 -> STR_58(CODE[54]), STR_57(CODE[15]), STR_56(CODE[30]), STR_55(CODE[52]), 
		 -> STR_54(CODE[28]), STR_53(CODE[30]), STR_52(CODE[52]), STR_51(CODE[25]), 
		 -> STR_50(CODE[30]), STR_49(CODE[52]), STR_48(CODE[25]), STR_47(CODE[30]), 
		 -> STR_46(CODE[52]), STR_45(CODE[23]), STR_44(CODE[30]), STR_43(CODE[42]), 
		 -> STR_42(CODE[21]), STR_41(CODE[30]), STR_40(CODE[52]), STR_39(CODE[21]), 
		 -> STR_38(CODE[30]), STR_37(CODE[52]), STR_36(CODE[25]), STR_35(CODE[30]), 
		 -> STR_34(CODE[52]), STR_33(CODE[37]), STR_32(CODE[36]), STR_31(CODE[3]), 
		 -> STR_30(CODE[32]), STR_29(CODE[32]), STR_28(CODE[35]), STR_27(CODE[66]), 
		 -> STR_26(CODE[38]), STR_25(CODE[37]), STR_24(CODE[37]), STR_23(CODE[38]), 
		 -> STR_22(CODE[38]), STR_21(CODE[55]), STR_20(CODE[36]), STR_19(CODE[30]), 
		 -> STR_18(CODE[30]), STR_17(CODE[37]), STR_16(CODE[37]), STR_15(CODE[38]), 
		 -> STR_14(CODE[38]), STR_13(CODE[54]), STR_12(CODE[36]), STR_11(CODE[21]), 
		 -> STR_10(CODE[28]), STR_9(CODE[54]), STR_8(CODE[27]), STR_6(CODE[19]), 
		 -> STR_5(CODE[28]), STR_4(CODE[30]), STR_3(CODE[31]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 102
		 -> STR_131(CODE[12]), STR_129(CODE[13]), STR_128(CODE[17]), STR_127(CODE[15]), 
		 -> STR_126(CODE[33]), STR_124(CODE[38]), STR_123(CODE[58]), STR_122(CODE[17]), 
		 -> STR_121(CODE[16]), STR_120(CODE[4]), STR_119(CODE[19]), STR_118(CODE[16]), 
		 -> STR_117(CODE[102]), STR_116(CODE[32]), STR_115(CODE[33]), STR_114(CODE[37]), 
		 -> STR_113(CODE[44]), STR_112(CODE[22]), STR_111(CODE[75]), STR_110(CODE[67]), 
		 -> STR_109(CODE[75]), STR_108(CODE[68]), STR_107(CODE[69]), STR_106(CODE[54]), 
		 -> STR_105(CODE[52]), STR_104(CODE[53]), STR_103(CODE[38]), STR_102(CODE[51]), 
		 -> STR_101(CODE[73]), STR_100(CODE[42]), STR_99(CODE[36]), STR_98(CODE[34]), 
		 -> STR_95(CODE[42]), STR_94(CODE[22]), STR_93(CODE[21]), STR_92(CODE[20]), 
		 -> STR_91(CODE[19]), STR_90(CODE[40]), STR_80(CODE[32]), STR_79(CODE[37]), 
		 -> STR_78(CODE[16]), STR_77(CODE[24]), STR_76(CODE[4]), STR_75(CODE[24]), 
		 -> STR_74(CODE[30]), STR_73(CODE[30]), STR_72(CODE[37]), STR_71(CODE[37]), 
		 -> STR_70(CODE[38]), STR_69(CODE[38]), STR_68(CODE[54]), STR_67(CODE[36]), 
		 -> STR_66(CODE[32]), STR_65(CODE[32]), STR_64(CODE[35]), STR_63(CODE[54]), 
		 -> STR_62(CODE[38]), STR_61(CODE[54]), STR_60(CODE[36]), STR_59(CODE[19]), 
		 -> STR_58(CODE[54]), STR_57(CODE[15]), STR_56(CODE[30]), STR_55(CODE[52]), 
		 -> STR_54(CODE[28]), STR_53(CODE[30]), STR_52(CODE[52]), STR_51(CODE[25]), 
		 -> STR_50(CODE[30]), STR_49(CODE[52]), STR_48(CODE[25]), STR_47(CODE[30]), 
		 -> STR_46(CODE[52]), STR_45(CODE[23]), STR_44(CODE[30]), STR_43(CODE[42]), 
		 -> STR_42(CODE[21]), STR_41(CODE[30]), STR_40(CODE[52]), STR_39(CODE[21]), 
		 -> STR_38(CODE[30]), STR_37(CODE[52]), STR_36(CODE[25]), STR_35(CODE[30]), 
		 -> STR_34(CODE[52]), STR_33(CODE[37]), STR_32(CODE[36]), STR_31(CODE[3]), 
		 -> STR_30(CODE[32]), STR_29(CODE[32]), STR_28(CODE[35]), STR_27(CODE[66]), 
		 -> STR_26(CODE[38]), STR_25(CODE[37]), STR_24(CODE[37]), STR_23(CODE[38]), 
		 -> STR_22(CODE[38]), STR_21(CODE[55]), STR_20(CODE[36]), STR_19(CODE[30]), 
		 -> STR_18(CODE[30]), STR_17(CODE[37]), STR_16(CODE[37]), STR_15(CODE[38]), 
		 -> STR_14(CODE[38]), STR_13(CODE[54]), STR_12(CODE[36]), STR_11(CODE[21]), 
		 -> STR_10(CODE[28]), STR_9(CODE[54]), STR_8(CODE[27]), STR_6(CODE[19]), 
		 -> STR_5(CODE[28]), STR_4(CODE[30]), STR_3(CODE[31]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 102
		 -> STR_131(CODE[12]), STR_129(CODE[13]), STR_128(CODE[17]), STR_127(CODE[15]), 
		 -> STR_126(CODE[33]), STR_124(CODE[38]), STR_123(CODE[58]), STR_122(CODE[17]), 
		 -> STR_121(CODE[16]), STR_120(CODE[4]), STR_119(CODE[19]), STR_118(CODE[16]), 
		 -> STR_117(CODE[102]), STR_116(CODE[32]), STR_115(CODE[33]), STR_114(CODE[37]), 
		 -> STR_113(CODE[44]), STR_112(CODE[22]), STR_111(CODE[75]), STR_110(CODE[67]), 
		 -> STR_109(CODE[75]), STR_108(CODE[68]), STR_107(CODE[69]), STR_106(CODE[54]), 
		 -> STR_105(CODE[52]), STR_104(CODE[53]), STR_103(CODE[38]), STR_102(CODE[51]), 
		 -> STR_101(CODE[73]), STR_100(CODE[42]), STR_99(CODE[36]), STR_98(CODE[34]), 
		 -> STR_95(CODE[42]), STR_94(CODE[22]), STR_93(CODE[21]), STR_92(CODE[20]), 
		 -> STR_91(CODE[19]), STR_90(CODE[40]), STR_80(CODE[32]), STR_79(CODE[37]), 
		 -> STR_78(CODE[16]), STR_77(CODE[24]), STR_76(CODE[4]), STR_75(CODE[24]), 
		 -> STR_74(CODE[30]), STR_73(CODE[30]), STR_72(CODE[37]), STR_71(CODE[37]), 
		 -> STR_70(CODE[38]), STR_69(CODE[38]), STR_68(CODE[54]), STR_67(CODE[36]), 
		 -> STR_66(CODE[32]), STR_65(CODE[32]), STR_64(CODE[35]), STR_63(CODE[54]), 
		 -> STR_62(CODE[38]), STR_61(CODE[54]), STR_60(CODE[36]), STR_59(CODE[19]), 
		 -> STR_58(CODE[54]), STR_57(CODE[15]), STR_56(CODE[30]), STR_55(CODE[52]), 
		 -> STR_54(CODE[28]), STR_53(CODE[30]), STR_52(CODE[52]), STR_51(CODE[25]), 
		 -> STR_50(CODE[30]), STR_49(CODE[52]), STR_48(CODE[25]), STR_47(CODE[30]), 
		 -> STR_46(CODE[52]), STR_45(CODE[23]), STR_44(CODE[30]), STR_43(CODE[42]), 
		 -> STR_42(CODE[21]), STR_41(CODE[30]), STR_40(CODE[52]), STR_39(CODE[21]), 
		 -> STR_38(CODE[30]), STR_37(CODE[52]), STR_36(CODE[25]), STR_35(CODE[30]), 
		 -> STR_34(CODE[52]), STR_33(CODE[37]), STR_32(CODE[36]), STR_31(CODE[3]), 
		 -> STR_30(CODE[32]), STR_29(CODE[32]), STR_28(CODE[35]), STR_27(CODE[66]), 
		 -> STR_26(CODE[38]), STR_25(CODE[37]), STR_24(CODE[37]), STR_23(CODE[38]), 
		 -> STR_22(CODE[38]), STR_21(CODE[55]), STR_20(CODE[36]), STR_19(CODE[30]), 
		 -> STR_18(CODE[30]), STR_17(CODE[37]), STR_16(CODE[37]), STR_15(CODE[38]), 
		 -> STR_14(CODE[38]), STR_13(CODE[54]), STR_12(CODE[36]), STR_11(CODE[21]), 
		 -> STR_10(CODE[28]), STR_9(CODE[54]), STR_8(CODE[27]), STR_6(CODE[19]), 
		 -> STR_5(CODE[28]), STR_4(CODE[30]), STR_3(CODE[31]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ValidateCmd@ConfName_1579(BANK1[20]), ValidateCmd@ConfName_1575(BANK1[20]), ValidateCmd@ConfName(BANK1[20]), 
		 -> STR_97(CODE[9]), STR_96(CODE[12]), InitialiseString@RevNum(BANK0[2]), InitialiseString@PartNum(BANK0[19]), 
		 -> InitialiseString@SerialNum(BANK0[11]), Command(BANK1[16]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ValidateCmd@ConfName_1579(BANK1[20]), ValidateCmd@ConfName_1575(BANK1[20]), ValidateCmd@ConfName(BANK1[20]), 
		 -> STR_97(CODE[9]), STR_96(CODE[12]), InitialiseString@RevNum(BANK0[2]), InitialiseString@PartNum(BANK0[19]), 
		 -> InitialiseString@SerialNum(BANK0[11]), Command(BANK1[16]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), ValidateCmd@ConfName_1579(BANK1[20]), ValidateCmd@ConfName_1575(BANK1[20]), 
		 -> ValidateCmd@ConfName(BANK1[20]), STR_97(CODE[9]), STR_96(CODE[12]), InitialiseString@RevNum(BANK0[2]), 
		 -> InitialiseString@PartNum(BANK0[19]), InitialiseString@SerialNum(BANK0[11]), Command(BANK1[16]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    SaveCardDat@Name	PTR unsigned char  size(2) Largest target is 20
		 -> ValidateCmd@ConfName_1579(BANK1[20]), ValidateCmd@ConfName_1575(BANK1[20]), ValidateCmd@ConfName(BANK1[20]), 

    sp__memmove	PTR void  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    CardConfigIni@Name	PTR unsigned char  size(2) Largest target is 7
		 -> STR_89(CODE[4]), STR_88(CODE[5]), STR_87(CODE[7]), 

    CardConfigIni@RetNum	PTR unsigned char  size(2) Largest target is 19
		 -> InitialiseString@RevNum(BANK0[2]), InitialiseString@PartNum(BANK0[19]), InitialiseString@SerialNum(BANK0[11]), 

    UART1_Write_string@data	PTR unsigned char  size(2) Largest target is 75
		 -> MBRespon(BANK2[75]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    EUSART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), 

    EUSART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), 

    EUSART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultErrorHandler(), 

    EUSART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultFramingErrorHandler(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_Receive_ISR(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _main->_InitialiseString
    _main->_ModbusRx
    _main->_PrintMB400
    _main->_ReadRX232
    _ValidateCmd->_InitialiseString
    _SaveCardDat->_ClearEEAddRange
    _SaveCardDat->_ReadRX232
    _strcat->_strcpy
    _strcpy->_strlen
    _memmove->_strlen
    _CardConfigIni->_strcmp
    _EUSART2_Initialize->_EUSART2_SetErrorHandler
    _EUSART2_Initialize->_EUSART2_SetFramingErrorHandler
    _EUSART2_Initialize->_EUSART2_SetOverrunErrorHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _ModbusRx->_AddRxBuffToModBus
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART2_Write
    _abs->___aomod
    _atoi->_isspace
    _ModbusError->_generateCRC
    _UART1_Write_string->_EUSART1_Write

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_InitialiseString
    _ValidateCmd->_InitialiseString
    _TogDebug->_printf
    _SaveCardDat->_ClearEEAddRange
    _ReadRX232->_printf
    _ClearEEAddRange->_printf
    _InitialiseString->_printf
    _PrintModbus->_printf
    _PrintModRespon->_printf
    _PrintMB400->_printf
    _ModbusRx->_checkCRC
    _checkCRC->_printf
    _AddRxBuffToModBus->_printf
    _ModbusFC10->_printf
    _ModbusFC04->_printf
    _ModbusFC03->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_ValidateCmd

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  781455
                                             68 BANK1      3     3      0
                    _ClearModbusData
                  _ClearModbusRespon
                        _ClearRxBuff
                   _InitialiseString
                        _ModbusError
                         _ModbusFC03
                         _ModbusFC04
                         _ModbusFC10
                           _ModbusRx
                         _PrintMB400
                     _PrintModRespon
                        _PrintModbus
                             _RXMode
                          _ReadRX232
                  _SYSTEM_Initialize
                        _ValidateCmd
                             _printf
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _ValidateCmd                                         68    68      0  230703
                                              0 BANK1     68    68      0
                   _InitialiseString
                        _SaveCardDat
                           _TogDebug
                             _strcmp
 ---------------------------------------------------------------------------------
 (2) _TogDebug                                             0     0      0   42997
                             _printf
 ---------------------------------------------------------------------------------
 (2) _SaveCardDat                                         18    10      8  138087
                                             51 BANK0     17     9      8
                    _ClearEEAddRange
                   _DATAEE_WriteByte
                       _EUSART2_Read
                _EUSART2_is_rx_ready
                          _ReadRX232
                             _printf
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _ReadRX232                                            4     2      2   47313
                                             84 COMRAM     2     2      0
                                             47 BANK0      2     0      2
                       _EUSART2_Read
                      _EUSART2_Write
                _EUSART2_is_rx_ready
                            _memmove
                             _printf
                             _strcat
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strcat                                               4     0      4    2077
                                             18 COMRAM     4     0      4
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strcpy                                              10     6      4     857
                                              8 COMRAM    10     6      4
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (4) _memmove                                             12     6      6     791
                                              8 COMRAM    12     6      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (4) _EUSART2_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EUSART2_Read                                         1     1      0      37
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ClearEEAddRange                                      6     2      4   43856
                                             84 COMRAM     2     2      0
                                             47 BANK0      4     0      4
                   _DATAEE_WriteByte
                             _printf
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     4     1      3     487
                                              4 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (2) _InitialiseString                                    64    64      0   47793
                                             84 COMRAM     2     2      0
                                             47 BANK0     62    62      0
           _ADCC_GetSingleConversion
                      _CardConfigIni
                             _printf
 ---------------------------------------------------------------------------------
 (3) _CardConfigIni                                       16     8      8    3759
                                              9 COMRAM    16     8      8
                    _DATAEE_ReadByte
                             _strcmp
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               5     1      4    1601
                                              4 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) _DATAEE_ReadByte                                      2     0      2     242
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1210
   _ADCC_DisableContinuousConversion
                    _ADCC_Initialize
                 _EUSART1_Initialize
                 _EUSART2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     605
            _EUSART2_SetErrorHandler
     _EUSART2_SetFramingErrorHandler
     _EUSART2_SetOverrunErrorHandler
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetOverrunErrorHandler                       2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetFramingErrorHandler                       2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetErrorHandler                              2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     605
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_DisableContinuousConversion                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PrintModbus                                          9     9      0   43418
                                             47 BANK0      9     9      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _PrintModRespon                                       7     7      0   43486
                                             47 BANK0      7     7      0
                 _EUSART2_is_tx_done
                _EUSART2_is_tx_ready
                             _printf
 ---------------------------------------------------------------------------------
 (2) _EUSART2_is_tx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_is_tx_done                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PrintMB400                                           5     5      0   43096
                                             84 COMRAM     2     2      0
                                             47 BANK0      3     3      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _ModbusRx                                             1     1      0  129615
                                             85 COMRAM     1     1      0
                  _AddRxBuffToModBus
                        _ClearRxBuff
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                             _RXMode
                           _checkCRC
                             _printf
 ---------------------------------------------------------------------------------
 (2) _checkCRC                                            15    15      0   43442
                                             47 BANK0     15    15      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _RXMode                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         1     1      0      37
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ClearRxBuff                                          3     3      0      71
                                              4 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _AddRxBuffToModBus                                    3     3      0   43068
                                             84 COMRAM     1     1      0
                                             47 BANK0      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _ModbusFC10                                          11    11      0   49105
                                             47 BANK0     11    11      0
                        _ModbusError
                 _UART1_Write_string
                        _generateCRC
                             _printf
 ---------------------------------------------------------------------------------
 (1) _ModbusFC04                                          11    11      0   49455
                                             47 BANK0     11    11      0
           _ADCC_GetSingleConversion
                        _ModbusError
                 _UART1_Write_string
                        _generateCRC
                             _printf
 ---------------------------------------------------------------------------------
 (3) _ADCC_GetSingleConversion                             5     3      2      31
                                              4 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ModbusFC03                                           9     9      0   49000
                                             47 BANK0      9     9      0
                        _ModbusError
                 _UART1_Write_string
                        _generateCRC
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              18     4     14   42997
                                             29 BANK0     18     4     14
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   32362
                                             82 COMRAM     2     2      0
                                             23 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           45    39      6   31799
                                             72 COMRAM    10     4      6
                                              0 BANK0     23    23      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    7787
                                             33 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     512
                                             10 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    7169
                                             33 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     412
                                              4 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     421
                                              4 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _stoa                                                22    18      4    3362
                                             15 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    8023
                                             33 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    5757
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     940
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    2077
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1577
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      93
                                              5 COMRAM     1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART2_Write                                        1     1      0      62
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1815
                                             11 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     712
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _ModbusError                                          4     2      2    3129
                                             19 COMRAM     4     2      2
                 _UART1_Write_string
                        _generateCRC
 ---------------------------------------------------------------------------------
 (2) _generateCRC                                         15    12      3    1823
                                              4 COMRAM    15    12      3
 ---------------------------------------------------------------------------------
 (2) _UART1_Write_string                                   7     3      4     912
                                              5 COMRAM     7     3      4
                      _EUSART1_Write
                 _EUSART1_is_tx_done
                _EUSART1_is_tx_ready
                             _TXMode
 ---------------------------------------------------------------------------------
 (3) _TXMode                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART1_is_tx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART1_is_tx_done                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      62
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ClearModbusRespon                                    2     2      0     102
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ClearModbusData                                      2     2      0     102
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManager                          4     4      0       0
                                              0 COMRAM     4     4      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                _EUSART2_Receive_ISR *
               _EUSART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (14) _EUSART2_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART2_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART2_DefaultErrorHandler *
 _EUSART2_DefaultFramingErrorHandler *
 _EUSART2_DefaultOverrunErrorHandler *
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART2_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART2_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART2_DefaultErrorHandler                         0     0      0       0
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART2_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearModbusData
   _ClearModbusRespon
   _ClearRxBuff
   _InitialiseString
     _ADCC_GetSingleConversion
     _CardConfigIni
       _DATAEE_ReadByte
       _strcmp
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _ModbusError
     _UART1_Write_string
       _EUSART1_Write
       _EUSART1_is_tx_done
       _EUSART1_is_tx_ready
       _TXMode
     _generateCRC
   _ModbusFC03
     _ModbusError
       _UART1_Write_string
         _EUSART1_Write
         _EUSART1_is_tx_done
         _EUSART1_is_tx_ready
         _TXMode
       _generateCRC
     _UART1_Write_string
       _EUSART1_Write
       _EUSART1_is_tx_done
       _EUSART1_is_tx_ready
       _TXMode
     _generateCRC
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _ModbusFC04
     _ADCC_GetSingleConversion
     _ModbusError
       _UART1_Write_string
         _EUSART1_Write
         _EUSART1_is_tx_done
         _EUSART1_is_tx_ready
         _TXMode
       _generateCRC
     _UART1_Write_string
       _EUSART1_Write
       _EUSART1_is_tx_done
       _EUSART1_is_tx_ready
       _TXMode
     _generateCRC
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _ModbusFC10
     _ModbusError
       _UART1_Write_string
         _EUSART1_Write
         _EUSART1_is_tx_done
         _EUSART1_is_tx_ready
         _TXMode
       _generateCRC
     _UART1_Write_string
       _EUSART1_Write
       _EUSART1_is_tx_done
       _EUSART1_is_tx_ready
       _TXMode
     _generateCRC
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _ModbusRx
     _AddRxBuffToModBus
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _ClearRxBuff
     _EUSART1_Read
     _EUSART1_is_rx_ready
     _RXMode
     _checkCRC
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _PrintMB400
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _PrintModRespon
     _EUSART2_is_tx_done
     _EUSART2_is_tx_ready
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _PrintModbus
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _RXMode
   _ReadRX232
     _EUSART2_Read
     _EUSART2_Write
     _EUSART2_is_rx_ready
     _memmove
       _strlen (ARG)
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
     _strcat
       _strcpy
         _strlen (ARG)
       _strlen
     _strlen
   _SYSTEM_Initialize
     _ADCC_DisableContinuousConversion
     _ADCC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetErrorHandler
       _EUSART2_SetFramingErrorHandler
       _EUSART2_SetOverrunErrorHandler
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _ValidateCmd
     _InitialiseString
       _ADCC_GetSingleConversion
       _CardConfigIni
         _DATAEE_ReadByte
         _strcmp
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _SaveCardDat
       _ClearEEAddRange
         _DATAEE_WriteByte
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
               _fputc
                 _putch
                   _EUSART2_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _EUSART2_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
                 _toupper
                   _islower
       _DATAEE_WriteByte
       _EUSART2_Read
       _EUSART2_is_rx_ready
       _ReadRX232
         _EUSART2_Read
         _EUSART2_Write
         _EUSART2_is_rx_ready
         _memmove
           _strlen (ARG)
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
               _fputc
                 _putch
                   _EUSART2_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _EUSART2_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
                 _toupper
                   _islower
         _strcat
           _strcpy
             _strlen (ARG)
           _strlen
         _strlen
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
       _strcpy
         _strlen (ARG)
       _strlen
     _TogDebug
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _strcmp
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART2_Write
             _fputs
               _fputc
                 _putch
                   _EUSART2_Write
             _strlen
         _fputc
           _putch
             _EUSART2_Write
         _isdigit
         _stoa
           _fputc
             _putch
               _EUSART2_Write
           _strlen
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _EUSART2_Write
             _fputs
               _fputc
                 _putch
                   _EUSART2_Write
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART2_Write
             _fputs
               _fputc
                 _putch
                   _EUSART2_Write
             _strlen
           _toupper
             _islower
   _strcpy
     _strlen (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _EUSART2_Receive_ISR *
     Absolute function(Fake) *
     _EUSART2_DefaultErrorHandler *
       _EUSART2_RxDataHandler
     _EUSART2_DefaultFramingErrorHandler *
     _EUSART2_DefaultOverrunErrorHandler *
     _EUSART2_RxDataHandler *
   _EUSART2_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      64      16       39.1%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      A4      14       64.1%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      F7      12       96.5%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      FD      10       98.8%
BITBANK1           100      0       0       7        0.0%
BANK1              100     47      FE       8       99.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6D      A0       5      100.0%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     4F4       6        0.0%
DATA                 0      0     4F4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Mar 26 23:39:39 2021

                      _eusart1TxBufferRemaining 00FE                          ?_EUSART2_RxDataHandler 0001  
                                   __CFG_CP$OFF 000000                                              l81 45DA  
                                  generateCRC@i 000E                                    generateCRC@j 0010  
                           ___wmul@multiplicand 0007                                     __CFG_LVP$ON 000000  
                                           l131 5086                                             l300 46D8  
                                           l125 506A                                             l222 50B6  
                                           l303 50E6                                             l128 50CE  
                                           l216 4C8E                                             l218 4C9C  
                                           l306 509E                                             l219 4CA8  
                                           l324 48E2                                             l148 51EC  
                                           l325 48FA                                             l309 512C  
                                           l334 51C2                                             l510 51A4  
                                           l319 4A3C                                             l328 492A  
                                           l513 51B8                                             l450 465A  
                                           l507 51AE                                             l363 517C  
                                           l516 5190                                             l372 515E  
                                           l604 394E                                             l453 5116  
                                           l701 51D0                                             l366 5172  
                                           l519 519A                                             l375 5168  
                                           l712 4C1C                                             l456 50FE  
                                           l369 5186                                             l706 4BD2  
                                           l474 4940                                             l475 4958  
                                           l459 5154                                             l811 0DCA  
                                           l803 0CF2                                             l723 3EEC  
                                           l820 27B2                                             l740 3712  
                                           l732 2584                                             l469 4A94  
                                           l478 4988                                             l830 3E12  
                                           l831 3E1A                                             l727 2576  
                                           l760 1A1A                                             l744 3808  
                                           l825 3D7C                                             l737 36EC  
                                           l690 51D2                                             l692 51D4  
                                           l844 4746                                             l828 3DA2  
                                           l757 1942                                             l694 51D6  
                                           l871 4202                                             l687 47AC  
                                           l863 1D02                                             l697 51CC  
                                           l953 2BA4                                             l890 3548  
                                           l699 51CE                                             l971 1716  
                                           l868 4D72                                             l982 3A78  
                                           l994 49E4                                             l988 4EA6  
                                  __CFG_CPD$OFF 000000                    InitialiseString@readDataEven 00C6  
        __end_of_EUSART2_SetFramingErrorHandler 517E         __size_of_EUSART2_SetFramingErrorHandler 000A  
                _EUSART2_SetFramingErrorHandler 5174                                             _abs 4DF4  
                                           _pad 4082                         __size_of_PMD_Initialize 001C  
                                           tosl 000FFD                                             wreg 000FE8  
                                  __CFG_ZCD$OFF 000000                                            l1013 2D74  
                                          l1005 2C54                                            l1120 4F7C  
                                          l1105 4B36                                            l1017 2F10  
                                          ?_abs 0017                                            l1117 4F5C  
                                          l1223 40C6                                            l2111 3D3E  
                                          l1320 2256                                            l2041 4E2A  
                                          l1226 4108                                            l1234 1DA4  
                                          l1322 22B8                                            l1306 20BA  
                                          l2123 44B8                                            l2131 4CEC  
                                          l2044 4E32                                            l1228 4142  
                                          l1236 1DAC                                            l1261 2F92  
                                          l1254 1FE2                                            l1263 2F9A  
                                          l1351 1354                                            l2072 323C  
                                          l1272 305A                                            l1336 0EC2  
                                          l1273 30A2                                            l1177 51F0  
                                          l2153 4380                                            l2145 5022  
                                          l1282 27EC                                            l2170 48C4  
                                          l1362 4808                                            l2138 4FFC  
                                          l2075 3244                                            l1363 4810  
                                          l2084 4F4E                                            l2092 4AE6  
                                          l1292 29B4                                            l1284 27F4  
                                          l2165 4B86                                            l1277 30AA  
                                          l2181 4EDE                                            l1366 5048  
                                          l2078 4E6E                                            l2175 48CC  
                                          l2159 486E                                            l1480 33CC  
                                          l1297 201C                                            l2098 4F16  
                                          l1811 3C62                                            l1299 2024  
                                          l1804 3C42                                            l1493 36AC  
                                          l1821 3FBC                                            l1814 3F9C  
                                          l7000 30C4                                            l7002 30C8  
                                          l7020 3184                                            l7012 3128  
                                          l7004 30E6                                            l7100 1020  
                                          l7030 320E                                            l7014 313E  
                                          l7006 311E                                            l7110 10FC  
                                          l7102 1068                                            ?_pad 0017  
                                          l7032 3220                                            l7024 31BC  
                                          l7016 3146                                            l7008 3122  
                                          l7040 0DF2                                            l8000 2650  
                                          l7200 4C8C                                            l7018 314E  
                                          l7130 1236                                            l7122 11C4  
                                          l7114 111C                                            l7106 10A0  
                                          l7050 0E24                                            l7042 0E00  
                                          l8010 267C                                            l8002 2654  
                                          l7210 50B0                                            l7202 50A0  
                                          l7028 31FC                                            l7140 12E2  
                                          l7132 1272                                            l7124 11EA  
                                          l7116 1142                                            l7108 10C6  
                                          l7060 0E42                                            l7052 0E36  
                                          l7044 0E12                                            l8100 0736  
                                          l8020 2704                                            l8012 268C  
                                          l8004 2664                                            l7212 50B2  
                                          l7204 50A6                                            l7300 3CDC  
                                          l7142 12F6                                            l7126 1210  
                                          l7118 118C                                            l7046 0E16  
                                          l7038 0DCC                                            l8110 085C  
                                          l8102 0742                                            l8030 2782  
                                          l8014 269C                                            l8022 2708  
                                          l8006 2668                                            l7214 50B4  
                                          l7206 50AA                                            l7230 4A1A  
                                          l7222 49E6                                            l7310 3D26  
                                          l7302 3CF8                                            l7400 46DA  
                                          l6600 4CCC                                            l7128 1228  
                                          l7136 12AE                                            l7080 0EF8  
                                          l7072 0E5A                                            l7064 0E48  
                                          l7056 0E3C                                            l7048 0E22  
                                          l7152 131C                                            l8112 0868  
                                          l8104 0790                                            l8040 0148  
                                          l8032 278E                                            l8024 2730  
                                          l8016 26CE                                            l8008 2678  
                                          l8200 2392                                            l7320 517E  
                                          l7312 5160                                            l7208 50AE  
                                          l7240 4A3A                                            l7232 4A2A  
                                          l7224 49E6                                            l7304 3D0A  
                                          l7410 4724                                            l7402 46DE  
                                          l6610 40A4                                            l6602 4EA8  
                                          l7154 1342                                            l7138 12D4  
                                          l7146 1302                                            l7090 0F78  
                                          l7082 0F2E                                            l7074 0EB0  
                                          l8130 0A08                                            l8114 08B6  
                                          l8106 07E2                                            l8050 0180  
                                          l8122 0982                                            l8042 014C  
                                          l8026 2760                                            l8018 26DA  
                                          l8034 27A6                                            l8210 24AA  
                                          l8202 241E                                            l7330 51B0  
                                          l7322 5192                                            l7314 5156  
                                          l7234 4A2E                                            l7226 49F8  
                                          l7218 5088                                            l7306 3D1E  
                                          l7170 4812                                            l7260 496C  
                                          l7252 492E                                            l7244 5100  
                                          l7412 4728                                            l7404 46F2  
                                          l6700 33AC                                            l6620 40EA  
                                          l6612 40B2                                            l7148 1310  
                                          l7084 0F3C                                            l7076 0ED0  
                                          l7068 0E4E                                            l7180 47EA  
                                          l7420 4F5A                                            l8140 0B50  
                                          l8132 0A6A                                            l8116 0908  
                                          l8060 02A2                                            l8124 09D8  
                                          l8052 018C                                            l8044 015C  
                                          l8036 012A                                            l8028 2772  
                                          l8220 1A2A                                            l8212 24E6  
                                          l8204 2428                                            l7324 5188  
                                          l7316 5174                                            l7500 45C2  
                                          l7236 4A32                                            l7228 4A18  
                                          l7308 3D22                                            l7172 4822  
                                          l7340 3992                                            l7332 3956  
                                          l8300 2E34                                            l7262 496E  
                                          l7254 492E                                            l7406 46FE  
                                          l6710 357C                                            l6630 4E0E  
                                          l6550 48D0                                            l6622 4116  
                                          l6614 40BE                                            l6606 4082  
                                          l7094 0FC2                                            l7086 0F4A  
                                          l7078 0ED2                                            l7174 47AE  
                                          l7270 4FD6                                            l7422 4F6A  
                                          l7414 4F52                                            l8150 0C48  
                                          l8142 0B62                                            l8134 0A7A  
                                          l8126 09E8                                            l8070 03C6  
                                          l8062 02AE                                            l8054 01D0  
                                          l8046 0160                                            l8038 0138  
                                          l8230 1AE8                                            l8222 1A3E  
                                          l8214 251C                                            l8206 2434  
                                          l7326 51A6                                            l7510 45E0  
                                          l7318 516A                                            l7502 51EA  
                                          l7430 29E0                                            l7190 4C7C  
                                          l7182 4C66                                            l7238 4A36  
                                          l7350 3A16                                            l7342 39A4  
                                          l7334 395E                                            l8310 2E64  
                                          l7264 497E                                            l7256 4950  
                                          l7248 5142                                            l7408 4710  
                                          l6720 35D4                                            l6712 3580  
                                          l6704 354A                                            l6560 4910  
                                          l6552 48D0                                            l6624 412A  
                                          l6616 40D2                                            l6608 4090  
                                          l6800 1D7E                                            l6632 4EE0  
                                          l6640 4870                                            l7088 0F6A  
                                          l7096 0FD4                                            l7176 47B6  
                                          l7272 4FE0                                            l7416 4F56  
                                          l8160 0CE8                                            l8152 0CAA  
                                          l8144 0BC4                                            l8136 0ADC  
                                          l8128 09F4                                            l8080 04EA  
                                          l8072 03D2                                            l8064 02FA  
                                          l8056 0222                                            l8048 0178  
                                          l7600 4A92                                            l8240 1BCA  
                                          l8232 1AEE                                            l8224 1A7A  
                                          l8216 1A1C                                            l8208 24A4  
                                          l7328 519C                                            l7520 4608  
                                          l7512 45EC                                            l7504 506C  
                                          l7280 42D0                                            l7440 2A20  
                                          l7432 29F8                                            l7192 4C80  
                                          l7184 4C6E                                            l7360 3A54  
                                          l7352 3A1A                                            l7344 39B8  
                                          l7336 3972                                            l8312 2E76  
                                          l8400 3902                                            l7266 4982  
                                          l7258 495A                                            l7370 3D44  
                                          l6650 4F18                                            l6730 3656  
                                          l6722 35E8                                            l6714 358E  
                                          l6706 354E                                            l6562 4920  
                                          l6554 48F2                                            l6570 4424  
                                          l6618 40E6                                            l6810 1DDA  
                                          l6802 1D98                                            l7098 0FFA  
                                          l7178 47C4                                            l7418 4F58  
                                          l8170 0D1C                                            l8154 0CBC  
                                          l8146 0BD6                                            l8138 0AEE  
                                          l8162 0CF2                                            l8090 0610  
                                          l8082 04F6                                            l8074 0420  
                                          l8066 034C                                            l8058 0298  
                                          l8250 1CD0                                            l8242 1C6E  
                                          l8234 1B2E                                            l8226 1A84  
                                          l8218 1A1C                                            l7530 4642  
                                          l7522 460C                                            l7514 45FC  
                                          l7506 50B8                                            l7282 4312  
                                          l7450 2A6A                                            l7442 2A2E  
                                          l7434 2A08                                            l7426 29B6  
                                          l7610 13BA                                            l7194 4C82  
                                          l7186 4C74                                            l7362 3A62  
                                          l7346 39DC                                            l7338 3986  
                                          l8330 2EDE                                            l8314 2E76  
                                          l8402 3924                                            l7268 4984  
                                          l7380 3D8A                                            l7372 3D60  
                                          l7700 41E2                                            l6660 3246  
                                          l6724 35F6                                            l6732 365C  
                                          l6716 35AE                                            l6708 355C  
                                          l6628 4DF4                                            l6564 4924  
                                          l6556 48FC                                            l6580 44A6  
                                          l6572 4436                                            l6820 1E7A  
                                          l6812 1DE2                                            l6804 1DB4  
                                          l6740 3B74                                            l6900 27E0  
                                          l6636 4E34                                            l6644 48A6  
                                          l8180 0D9A                                            l8164 0D04  
                                          l8156 0CCA                                            l8148 0C38  
                                          l8172 0D20                                            l8092 061C  
                                          l8084 0544                                            l8076 0470  
                                          l8244 1C7C                                            l8252 1CD6  
                                          l8236 1B56                                            l8228 1A90  
                                          l7540 4656                                            l7532 4646  
                                          l7524 4610                                            l7516 4600  
                                          l7508 45DC                                            l7284 4344  
                                          l7276 42C4                                            l7460 2B1E  
                                          l7452 2A6E                                            l7444 2A32  
                                          l7436 2A18                                            l7428 29D2  
                                          l7620 1422                                            l7612 13C4  
                                          l7604 135A                                            l7196 4C84  
                                          l7188 4C78                                            l7292 3C64  
                                          l7348 3A04                                            l7356 3A26  
                                          l7364 3A6E                                            l8332 2F04  
                                          l8340 2F0E                                            l8316 2E9C  
                                          l8324 2EA6                                            l8308 2E3E  
                                          l8262 4B98                                            l7382 3D90  
                                          l7374 3D74                                            l7390 3DBE  
                                          l7702 41EE                                            l6654 5024  
                                          l6670 328A                                            l6662 324A  
                                          l6734 366C                                            l6726 3624  
                                          l6718 35CC                                            l6558 490E  
                                          l6566 4926                                            l6574 4448  
                                          l6590 4B7A                                            l6830 1F36  
                                          l6822 1E80                                            l6814 1DEC  
                                          l6806 1DC6                                            l6750 3BC8  
                                          l6742 3B80                                            l6910 28AA  
                                          l6902 281C                                            l6646 48B8  
                                          l8182 0DA6                                            l8174 0D48  
                                          l8166 0D08                                            l8158 0CE0  
                                          l8094 066A                                            l8086 0596  
                                          l7710 3E52                                            l8246 1C90  
                                          l8254 1CF4                                            l8238 1BB8  
                                          l8190 22BA                                            l7534 464A  
                                          l7526 4638                                            l7518 4604  
                                          l7550 4682                                            l7542 465C  
                                          l7278 42C8                                            l7462 2B44  
                                          l7454 2A94                                            l7446 2A4A  
                                          l7438 2A1C                                            l7622 1438  
                                          l7614 13E8                                            l7606 1366  
                                          l7198 4C88                                            l7470 498A  
                                          l7294 3C8A                                            l7358 3A38  
                                          l8326 2ECC                                            l8270 2D76  
                                          l8406 3928                                            l8264 4BA8  
                                          l8256 4B88                                            l7392 3DDC  
                                          l7384 3D9C                                            l7368 3D40  
                                          l6656 5040                                            l6680 32E0  
                                          l6672 32AA                                            l6664 3258  
                                          l6736 368C                                            l6728 3644  
                                          l6568 51BC                                            l6576 4452  
                                          l6584 4B38                                            l6840 1F84  
                                          l6832 1F50                                            l6816 1DF2  
                                          l6824 1EE4                                            l6808 1DD4  
                                          l6760 3C3C                                            l6752 3BDA  
                                          l6744 3B9E                                            l6920 294A  
                                          l6912 28B0                                            l6904 2824  
                                          l8176 0D78                                            l8168 0D18  
                                          l8184 0DBE                                            l8096 06BC  
                                          l7720 3EBA                                            l7712 3E56  
                                          l7704 3E1C                                            l8248 1CBC  
                                          l8192 22BA                                            l7536 464E  
                                          l7528 463E                                            l7560 469E  
                                          l7552 4686                                            l7544 4660  
                                          l7480 454E                                            l7464 2B72  
                                          l7456 2AC6                                            l7448 2A5A  
                                          l7640 14FA                                            l7624 1446  
                                          l7616 13F6                                            l7608 138A  
                                          l7472 49A8                                            l7296 3CAC  
                                          l7288 4FFE                                            l7800 2C42  
                                          l8328 2EDE                                            l8272 2D76  
                                          l8408 3936                                            l8360 3814  
                                          l8352 380A                                            l8266 4BAC  
                                          l7394 3DF6                                            l7386 3DA8  
                                          l6690 3362                                            l6682 32F4  
                                          l6674 32AE                                            l6666 3278  
                                          l6578 4470                                            l6594 4CAA  
                                          l6586 4B44                                            l6842 1F96  
                                          l6826 1EFE                                            l6834 1F5E  
                                          l6818 1E74                                            l6754 3C08  
                                          l6746 3BA6                                            l6770 3F36  
                                          l6762 3EEE                                            l6922 2964  
                                          l6914 28B6                                            l6906 282E  
                                          l6930 1FE4                                            l8178 0D8A  
                                          l7722 3ECC                                            l7714 3E74  
                                          l7706 3E32                                            l7730 36B4  
                                          l7570 50D0                                            l8194 22C8  
                                          l7538 4652                                            l7562 46AA  
                                          l7554 468A                                            l7546 466C  
                                          l7490 45B4                                            l7482 4576  
                                          l7458 2AEC                                            l7466 2B76  
                                          l7642 1516                                            l7634 1490  
                                          l7626 1476                                            l7618 140C  
                                          l7474 49B4                                            l7298 3CBC  
                                          l7810 2CA6                                            l7802 2C54  
                                          l8274 2D9C                                            l8282 2DA6  
                                          l8370 3824                                            l8362 3816  
                                          l8354 380E                                            l8268 4BC8  
                                          l7396 3E06                                            l7388 3DBA  
                                          l6780 4A9A                                            l6692 3364  
                                          l6684 3302                                            l6676 32BA  
                                          l6668 327C                                            l6596 4CB6  
                                          l6588 4B48                                            l6844 1FA2  
                                          l6836 1F70                                            l6828 1F1C  
                                          l6860 2F46                                            l6852 2F12  
                                          l6756 3C28                                            l6748 3BBA  
                                          l6772 3F64                                            l6764 3F0C  
                                          l6924 297E                                            l6908 2834  
                                          l6916 291A                                            l6940 2042  
                                          l6932 1FF4                                            l7716 3E84  
                                          l7708 3E4E                                            l7740 36FA  
                                          l7732 36D0                                            l7900 3520  
                                          l8196 22DC                                            l7564 46D4  
                                          l7556 468E                                            l7548 467C  
                                          l7492 45B6                                            l7484 4586  
                                          l7468 2B94                                            l7660 15BE  
                                          l7652 1538                                            l7644 151E  
                                          l7636 14EA                                            l7628 1488  
                                          l7476 49C8                                            l7812 2CB4  
                                          l7820 2CF4                                            l7804 2C68  
                                          l8284 2DCC                                            l8292 2DD6  
                                          l8276 2DA0                                            l8380 3844  
                                          l8372 3828                                            l8364 3818  
                                          l8356 3810                                            l6782 4AAE  
                                          l6694 3376                                            l6686 3314  
                                          l6678 32D8                                            l6598 4CC8  
                                          l6846 1FAA                                            l6838 1F7E  
                                          l6790 1D04                                            l6870 2FBC  
                                          l6862 2F5A                                            l6854 2F24  
                                          l6758 3C2A                                            l6774 3F84  
                                          l6766 3F14                                            l6918 292C  
                                          l6926 298C                                            l6950 2082  
                                          l6942 2062                                            l6934 1FF6  
                                          l7726 3EE2                                            l7718 3EA6  
                                          l7670 4BD4                                            l7590 4A72  
                                          l7582 4A3E                                            l7742 3700  
                                          l7734 36E4                                            l7750 372E  
                                          l7902 3532                                            l7574 5118  
                                          l8198 2380                                            l7566 4AE8  
                                          l7558 4692                                            l7494 45BC  
                                          l7486 45B0                                            l7662 15CE  
                                          l7654 1592                                            l7646 1530  
                                          l7638 14EE                                            l7478 49CC  
                                          l7830 2D68                                            l7822 2D18  
                                          l7814 2CD0                                            l7806 2C7C  
                                          l8294 2DFC                                            l8382 385A  
                                          l8374 382C                                            l8366 381A  
                                          l8358 3812                                            l7680 414E  
                                          l6784 4ADC                                            l6688 3342  
                                          l6696 337C                                            l6848 1FBA  
                                          l6792 1D24                                            l6880 3034  
                                          l6872 2FD0                                            l6864 2F62  
                                          l6856 2F2C                                            l6776 3F96  
                                          l6768 3F28                                            l6960 2100  
                                          l6952 209E                                            l6944 206A  
                                          l6936 2010                                            l8560 18A8  
                                          l7920 174A                                            l7912 1718  
                                          l7672 4BE8                                            l7592 4A82  
                                          l7584 4A3E                                            l7760 37D6  
                                          l7752 3764                                            l7744 370C  
                                          l7728 36AE                                            l7904 3540  
                                          l7568 51EE                                            l7496 45BE  
                                          l7488 45B2                                            l7840 505A  
                                          l7832 504A                                            l7664 16E4  
                                          l7656 1596                                            l7824 2D2C  
                                          l7816 2CD6                                            l7808 2C92  
                                          l8296 2E0E                                            l8384 3894  
                                          l8392 38BA                                            l8376 382C  
                                          l8368 3820                                            l7690 418C  
                                          l7682 415E                                            l6786 4AE0  
                                          l6778 4A96                                            l6698 338C  
                                          l6794 1D4C                                            l6890 3080  
                                          l6882 3038                                            l6874 2FD4  
                                          l6866 2F70                                            l6858 2F3E  
                                          l6970 2170                                            l6954 20AE  
                                          l6946 2074                                            l6938 203A  
                                          l8562 0E82                                            l7930 17BE  
                                          l7922 174E                                            l7914 1726  
                                          l7674 4BF8                                            l7594 4A86  
                                          l7586 4A50                                            l7578 50E8  
                                          l7762 3800                                            l7754 377E  
                                          l7746 3718                                            l7498 45C0  
                                          l7842 505E                                            l7834 504E  
                                          l7666 16F2                                            l7658 15A2  
                                          l7818 2CEE                                            l7826 2D44  
                                          l8298 2E0E                                            l8386 389C  
                                          l8394 38EE                                            l7852 4D42  
                                          l7692 4190                                            l7684 4162  
                                          l8564 316E                                            l6796 1D6C  
                                          l6892 3084                                            l6884 303C  
                                          l6876 2FF2                                            l6980 2214  
                                          l6972 2176                                            l6964 213A  
                                          l6948 207A                                            l7940 18B6  
                                          l7932 1810                                            l7924 1766  
                                          l7916 1736                                            l7676 4BFC  
                                          l7596 4A8A                                            l7588 4A70  
                                          l7756 378E                                            l7748 372A  
                                          l7908 3546                                            l7860 33D2  
                                          l7844 5062                                            l7836 5052  
                                          l7668 1708                                            l7828 2D56  
                                          l7780 4E9A                                            l7772 4E70  
                                          l8396 38F6                                            l8556 38D0  
                                          l8388 38AA                                            l7854 4D52  
                                          l7846 4D32                                            l7694 41A8  
                                          l7686 4176                                            l7678 4144  
                                          l6798 1D7C                                            l6878 2FFE  
                                          l6894 27B4                                            l6990 227A  
                                          l6982 222E                                            l6974 217C  
                                          l6966 214C                                            l6958 20EE  
                                          l7950 1958                                            l7942 18C6  
                                          l7934 1886                                            l7926 176E  
                                          l7918 173A                                            l8558 099A  
                                          l7598 4A8E                                            l7758 37AA  
                                          l7870 341C                                            l7862 33E6  
                                          l7838 5056                                            l7790 2BE0  
                                          l7782 2BA6                                            l7774 4E82  
                                          l8398 38FA                                            l7856 4D56  
                                          l7696 41C0                                            l7688 417C  
                                          l6888 306C                                            l6896 27C4  
                                          l6992 2290                                            l6984 2248  
                                          l6968 2160                                            l6976 21DA  
                                          l7960 19EA                                            l7944 18D2  
                                          l7952 1970                                            l7928 177A  
                                          l7768 3806                                            l7880 3480  
                                          l7872 3434                                            l7864 33F8  
                                          l7792 2C00                                            l7784 2BA6  
                                          l7776 4E86                                            l7698 41D2  
                                          l6898 27C6                                            l6986 2264  
                                          l6978 21F6                                            l7962 19F6  
                                          l7954 1998                                            l7946 18E4  
                                          l7938 1890                                            l7890 34A6  
                                          l7874 3444                                            l7882 3486  
                                          l7866 3404                                            l7858 33CE  
                                          l7970 4748                                            l7794 2C14  
                                          l7786 2BAE                                            l7778 4E96  
                                          l6996 30AC                                            l6988 226A  
                                          l7956 19C8                                            l7948 1954  
                                          l7964 1A0E                                            l7980 259C  
                                          l7892 34AE                                            l7884 3498  
                                          l7876 3466                                            l7972 4752  
                                          l7796 2C28                                            l7788 2BCC  
                                          l6998 30C0                                            l7958 19DA  
                                          l7990 2618                                            l7982 25EE  
                                          l7886 349C                                            l7894 34D0  
                                          l7878 346C                                            l7974 4780  
                                          l7798 2C30                                            l7992 2628  
                                          l7984 25FA                                            l7896 34E8  
                                          l7888 34A0                                            l7976 4784  
                                          l7994 262C                                            l7986 2600  
                                          l7978 2586                                            l7898 350C  
                                          l7996 263C                                            l7988 2610  
                                          l7998 2640                                            STR_1 FED6  
                                          STR_2 FEC1                                            STR_3 FC8B  
                                          STR_4 FD22                                            STR_5 FD78  
                                          STR_6 FF25                                            STR_7 F368  
                                          STR_8 FD94                                            STR_9 F5FD  
                                          _LATA 000F83                                            _LATB 000F84  
                                          _LATC 000F85                                            _LATD 000F86  
                                          _LATE 000F87                                            u6000 4EDA  
                                          u6010 4090                                            u6011 408C  
                                          u6020 40B2                                            u6100 48A0  
                                          u6021 40AE                                            u6101 489A  
                                          u6030 4108                                            u6110 48A2  
                                          u6031 4104                                            u6200 3342  
                                          u6040 4116                                            u6120 48B8  
                                          u7000 0FD4                                            u6201 333E  
                                          u6041 4112                                            u6121 48B4  
                                          u7001 0FD0                                            u6130 4F48  
                                          u6210 338C                                            u6050 4E0E  
                                          u7010 0FFA                                            u6131 4F42  
                                          u6211 3388                                            u6051 4E0A  
                                          u7011 0FF6                                            u6140 4F4A  
                                          u6220 355C                                            u6300 3BC8  
                                          u6060 4F10                                            u7020 1020  
                                          u7100 4808                                            _PMD0 000EE1  
                                          u6221 3558                                            u6301 3BC4  
                                          u6061 4F0A                                            u7021 101C  
                                          u7101 4804                                            _PMD1 000EE2  
                                          u6150 3258                                            u6230 358E  
                                          u6310 3C08                                            u6070 4F12  
                                          u7030 10C6                                            u7110 4C9C  
                                          _PMD2 000EE3                                            u6151 3254  
                                          u6231 358A                                            u6311 3C04  
                                          u7031 10C2                                            u7111 4C98  
                                          _PMD3 000EE4                                            u7200 4940  
                                          u6160 328A                                            u6240 35CC  
                                          u6400 1D7C                                            u6320 3F0C  
                                          u6080 4E68                                            u7040 1142  
                                          u8000 18E4                                            _PMD4 000EE5  
                                          u7201 493C                                            u6161 3286  
                                          u6241 35C8                                            u6401 1D78  
                                          u6321 3F08                                            u6081 4E62  
                                          u7041 113E                                            u8001 18E0  
                                          _PMD5 000EE6                                            u7210 4950  
                                          u6250 35F6                                            u6410 1D98  
                                          u6330 3F36                                            u6090 4E6A  
                                          u7050 11EA                                            u8010 1998  
                                          u7130 509C                                            u7211 494C  
                                          u6171 32B4                                            u6251 35F2  
                                          u6411 1D94                                            u6331 3F32  
                                          u7051 11E6                                            u8011 1994  
                                          u7131 5096                                            u7220 497E  
                                          u6180 32D8                                            u6260 3624  
                                          u6500 1F7E                                            u6420 1DC6  
                                          u6340 3F64                                            u7060 1210  
                                          u8100 0420                                            u8020 47AC  
                                          u7140 509E                                            u7300 3D0A  
                                          u7221 497A                                            u6181 32D4  
                                          u6261 3620                                            u6501 1F7A  
                                          u6421 1DC2                                            u6341 3F60  
                                          u7061 120C                                            u8101 041C  
                                          u8021 47A8                                            u7125 4CA6  
                                          u7301 3D06                                            u6350 4AAE  
                                          u6190 3302                                            u6270 366C  
                                          u6510 1F96                                            u6430 1DD4  
                                          u7070 12D4                                            u8110 0470  
                                          u8030 25EE                                            u7230 4312  
                                          u7126 4CA8                                            u7150 49F8  
                                          u7310 3D3E                                            u6351 4AAA  
                                          u6191 32FE                                            u6271 3668  
                                          u6511 1F92                                            u6431 1DD0  
                                          u7071 12D0                                            u8111 046C  
                                          u8031 25EA                                            u7231 430E  
                                          u7151 49F4                                            u7311 3D3A  
                                          u7400 3DDC                                            u6360 4ADC  
                                          u6440 1EFE                                            u6600 3068  
                                          u8200 09E8                                            u8120 0544  
                                          u8040 2610                                            u7240 4334  
                                          u7160 4A2A                                            u7080 485C  
                                          u7320 3972                                            u7401 3DD8  
                                          u6361 4AD8                                            u6441 1EFA  
                                          u6601 3064                                            u6521 2F1C  
                                          u6281 3B7A                                            u8201 09E4  
                                          u8121 0540                                            u8041 260C  
                                          u7161 4A26                                            u7321 396E  
                                          u7170 5114                                            u7410 3E06  
                                          u6450 1F1C                                            u6370 1D34  
                                          u6610 30A2                                            u6530 2F3E  
                                          u6290 3B9E                                            u8210 0A08  
                                          u8130 0596                                            u8050 2730  
                                          u7250 4344                                            u7090 486E  
                                          u7330 3986                                            u7171 510E  
                                          u7411 3E02                                            u6451 1F18  
                                          u6371 1D2E                                            u6611 309E  
                                          u6531 2F3A                                            u6291 3B9A  
                                          u8211 0A04                                            u8131 0592  
                                          u8051 272C                                            u7251 4340  
                                          u7235 4302                                            u7091 486A  
                                          u7331 3982                                            u7180 5116  
                                          u7420 46F2                                            u5900 48F2  
                                          u6460 1F36                                            u6380 1D36  
                                          u6540 2F70                                            u6620 27C4  
                                          u6700 2010                                            u8220 0A7A  
                                          u8140 066A                                            u8060 01D0  
                                          u8300 2392                                            u7260 4366  
                                          u7500 2B44                                            u7340 39A4  
                                          u7421 46EE                                            u5901 48EE  
                                          u6461 1F32                                            u6541 2F6C  
                                          u6621 27C0                                            u6701 200C  
                                          u8221 0A76                                            u8141 0666  
                                          u8061 01CC                                            u8301 238E  
                                          u7237 42F8                                            u7501 2B40  
                                          u7341 39A0                                            u7190 5152  
                                          u7430 4724                                            u5910 4920  
                                          u6470 1F50                                            u6390 1D4C  
                                          u6550 2F8E                                            u6630 27E0  
                                          u6710 203A                                            u8230 0AEE  
                                          u8150 06BC                                            u8070 0222  
                                          u8310 251C                                            u7510 2B94  
                                          u7270 3C8A                                            u7350 39DC  
                                          u7191 514C                                            u7431 4720  
                                          u5911 491C                                            u6471 1F4C  
                                          u6391 1D48                                            u6551 2F8A  
                                          u6631 27DC                                            u6711 2036  
                                          u8231 0AEA                                            u8151 06B8  
                                          u8071 021E                                            u8311 2518  
                                          u7247 432A                                            u7511 2B90  
                                          u7271 3C86                                            u7087 4852  
                                          u7351 39D8                                            u7440 4746  
                                          u5920 4436                                            u6480 1F5E  
                                          u6560 2FB8                                            u6640 292C  
                                          u6800 21F6                                            u6720 209E  
                                          u8240 0B62                                            u8160 0790  
                                          u8080 02FA                                            u8320 1A3E  
                                          u7520 49E4                                            u7280 3CAC  
                                          u7360 3A16                                            u8400 2DCC  
                                          u7441 4742                                            u5921 4432  
                                          u6481 1F5A                                            u6561 2FB4  
                                          u6641 2928                                            u6801 21F2  
                                          u6721 209A                                            u8241 0B5E  
                                          u8161 078C                                            u8081 02F6  
                                          u8321 1A3A                                            u7601 1360  
                                          u7521 49E0                                            u7281 3CA8  
                                          u7361 3A12                                            u8401 2DC8  
                                          u5930 4448                                            u6490 1F70  
                                          u6570 2FF2                                            u6650 294A  
                                          u6810 2214                                            u6730 20E8  
                                          u7450 4F6A                                            u8250 0BD6  
                                          u8170 07E2                                            u8090 034C  
                                          u7530 50E4                                            u8330 1B56  
                                          u7290 3CF4                                            u7370 3A38  
                                          u8410 2DFC                                            u5931 4444  
                                          u6491 1F6C                                            u6571 2FEE  
                                          u6651 2946                                            u6811 2210  
                                          u6731 20E2                                            u7451 4F66  
                                          u8251 0BD2                                            u8171 07DE  
                                          u8091 0348                                            u7531 50DE  
                                          u8331 1B52                                            u7267 435C  
                                          u7611 1390                                            u7291 3CF0  
                                          u7371 3A34                                            u8411 2DF8  
                                          u7196 5154                                            u7380 3D8A  
                                          u6900 31F8                                            u5940 4470  
                                          u6580 3020                                            u6660 2964  
                                          u6820 222E                                            u6740 20EA  
                                          u8260 0C48                                            u8180 08B6  
                                          u7700 3EBA                                            u7540 50E6  
                                          u8340 1BCA                                            u7460 2A08  
                                          u7381 3D86                                            u5941 446C  
                                          u6661 2960                                            u6821 222A  
                                          u8261 0C44                                            u8181 08B2  
                                          u7701 3EB6                                            u8341 1BC6  
                                          u7461 2A04                                            u7621 1480  
                                          u8421 2E06                                            u7390 3DBA  
                                          u6910 320E                                            u5950 44A6  
                                          u6590 305A                                            u6670 297E  
                                          u6830 2248                                            u6750 2100  
                                          u8270 0CBC                                            u8190 0908  
                                          u7710 3EDE                                            u7550 512A  
                                          u8350 1C90                                            u7470 2A5A  
                                          u7630 1516                                            u8430 2E64  
                                          u7391 3DB6                                            u6911 320A  
                                          u5951 44A2                                            u6591 3056  
                                          u6671 297A                                            u6831 2244  
                                          u6751 20FC                                            u8271 0CB8  
                                          u8191 0904                                            u7711 3EDA  
                                          u7551 5124                                            u8351 1C8C  
                                          u7471 2A56                                            u7631 1512  
                                          u8431 2E60                                            u6920 3220  
                                          u5960 4B6A                                            u6680 298C  
                                          u6840 2256                                            u6760 2134  
                                          u8280 0D48                                            u7560 50FC  
                                          u7720 36FA                                            u8360 1CD0  
                                          u7480 2A94                                            u7800 2C28  
                                          u6921 321C                                            u6681 2988  
                                          u6841 2252                                            u6761 212E  
                                          u8281 0D44                                            u7561 50F6  
                                          u7721 36F6                                            u8361 1CCC  
                                          u7481 2A90                                            u7641 1528  
                                          u7801 2C24                                            u8441 2E6E  
                                          u5890 48E2                                            u5970 4B7A  
                                          u6850 2264                                            u6770 2136  
                                          u6690 1FF4                                            u6930 0DF2  
                                          u7570 50FE                                            u7730 372A  
                                          u8370 1CF4                                            u8290 22DC  
                                          u7490 2AEC                                            u7650 15BE  
                                          u7810 2C42                                            u8450 2ECC  
                                          u5891 48DE                                            u5971 4B76  
                                          u6587 3016                                            u6851 2260  
                                          u6691 1FF0                                            u6931 0DEE  
                                          u7731 3726                                            u8371 1CF0  
                                          u8291 22D8                                            u7491 2AE8  
                                          u8507 29EA                                            u7651 15BA  
                                          u7811 2C3E                                            u8451 2EC8  
                                          u8380 4BC8                                            u6860 30E6  
                                          u5980 4CEC                                            u6780 214C  
                                          u6940 0EC2                                            u7580 4A50  
                                          u7740 3764                                            u7900 3444  
                                          u7556 512C                                            u7660 15CE  
                                          u7820 2C54                                            u8381 4BC4  
                                          u6861 30E2                                            u5981 4CE8  
                                          u6781 2148                                            u6941 0EBE  
                                          u7581 4A4C                                            u7741 3760  
                                          u7901 3440                                            u8517 2A3C  
                                          u7661 15CA                                            u7821 2C50  
                                          u8461 2ED6                                            u6870 311E  
                                          u5990 4ED8                                            u6790 21B4  
                                          u6950 0ED0                                            u7670 4C1C  
                                          u7590 4A82                                            u7750 378E  
                                          u7910 3480                                            u7830 2D18  
                                          u8390 2D9C                                            u8470 3840  
                                          u6871 311A                                            u5967 4B60  
                                          u5991 4ED2                                            u6951 0ECC  
                                          u7671 4C18                                            u7591 4A7E  
                                          u7751 378A                                            u7911 347C  
                                          u7831 2D14                                            u8391 2D98  
                                          u8471 383C                                            u6880 313A  
                                          u6960 0EF8                                            u7680 3E74  
                                          u7760 37D6                                            u7920 3498  
                                          u7840 2D56                                            u8480 3924  
                                          u6881 3136                                            u6961 0EF4  
                                          u7681 3E70                                            u7761 37D2  
                                          u7921 3494                                            u7841 2D52  
                                          u8481 3920                                            u6890 31F6  
                                          u6970 0F3C                                            u7690 3E84  
                                          u7770 3800                                            u7930 34BE  
                                          u7850 2D68                                            u6891 31F0  
                                          u6795 21A2                                            u6971 0F38  
                                          u7691 3E80                                            u7771 37FC  
                                          u7931 34B8                                            u7851 2D64  
                                          u7860 4D72                                            u6980 0FBA  
                                          u7940 34E8                                            u7780 4E82  
                                          u7861 4D6E                                            u6981 0FB4  
                                          u7941 34E4                                            u7781 4E7E  
                                          u6990 0FBC                                            u7950 34F8  
                                          u7870 33E6                                            u7790 2C00  
                                          u7951 34F2                                            u7871 33E2  
                                          u7791 2BFC                                            u7960 3520  
                                          u7936 34C0                                            u7880 33F8  
                                          u7961 351C                                            u7881 33F4  
                                          u8497 2CE2                                            u7970 17BE  
                                          u7890 3418                                            u7971 17BA  
                                          u7891 3414                                            u7980 1810  
                                          u7956 34FA                                            u7981 180C  
                                          u7990 18C6                                            u7991 18C2  
                           ValidateCmd@ConfName 0193                                            _WPUA 000F10  
                                          _WPUB 000F18                                            _WPUC 000F20  
                                          _WPUD 000F25                                            _WPUE 000F2D  
                         ??_EUSART2_Receive_ISR 0001                                   _EUSART1_Write 492C  
                                 __CFG_FCMEN$ON 000000                                   _EUSART2_Write 48CE  
                            ClearModbusRespon@i 0005                                  generateCRC@crc 0012  
                                          abs@a 0017                                            _dbuf 02DD  
                                          _atoi 30AC                                            _main 380A  
                                          _dtoa 1D04                                   ?_EUSART1_Read 0001  
                                          _prec 00D1                                   ?_EUSART2_Read 0001  
                                          _nout 00CD                                            pad@i 001E  
                                          pad@p 001B                                            fsr0h 000FEA  
                                          fsr1h 000FE2                                            indf0 000FEF  
                                          fsr2h 000FDA                                            fsr0l 000FE9  
                                          indf1 000FE7                                            indf2 000FDF  
                                          fsr1l 000FE1                                            pad@w 0020  
                                          fsr2l 000FD9                                            _stoa 2F12  
                                          btemp 005B                                            _utoa 27B4  
                                          _xtoa 1FE4                                            prodh 000FF4  
                                          prodl 000FF3                                            start 0126  
                  __end_of_EUSART2_Transmit_ISR 4C66                                   __CFG_CSWEN$ON 000000  
                           UART1_Write_string@i 000B                  fp__EUSART1_DefaultErrorHandler 0000  
                                  ___param_bank 000000                                   __CFG_SCANE$ON 000000  
                                         ??_abs 0019                                           ??_pad 001D  
                     __size_of_DATAEE_WriteByte 0044                  __size_of_OSCILLATOR_Initialize 0018  
                 __end_of_OSCILLATOR_Initialize 50D0                           _eusart1RxStatusBuffer 0300  
                               __end_of___aodiv 33CE                                           _ADACQ 000F5C  
                                         _ADCAP 000F5D                                           _ADACT 000F56  
                                         ?_atoi 000C                                           ?_main 0001  
                                         ?_dtoa 0022                                           _ADCLK 000F57  
                               __end_of___aomod 36AE                                           _ADCNT 000F67  
                                         _ADPCH 000F5F                                           _ADREF 000F58  
                                         _ADPRE 000F5E                                           STR_10 FD40  
                                         STR_11 FE97                                           STR_20 FB60  
                                         STR_12 FB60                                           STR_13 F633  
                                         STR_21 F590                                           STR_22 FA13  
                                         STR_30 FC6B                                           STR_14 FA13  
                                         STR_31 FB5D                                           STR_23 FA39  
                                         STR_15 FA39                                           STR_24 FAA9  
                                         STR_32 FB3C                                           STR_16 FAA9  
                                         STR_40 F842                                           STR_25 FACE  
                                         STR_41 FD04                                           STR_33 FAF3  
                                         STR_17 FACE                                   __CFG_WDTE$OFF 000000  
                                         STR_50 FD04                                           STR_42 FEAC  
                                         STR_18 FCAA                                           STR_26 F9ED  
                                         STR_34 F73E                                           STR_51 FDC8  
                                         STR_35 FD04                                           STR_19 FCE6  
                                         STR_43 F929                                           STR_27 F514  
                                         STR_60 FB60                                           STR_44 FD04  
                                         STR_36 FDAF                                           STR_28 FB84  
                                         STR_52 F7A6                                           STR_61 F633  
                                         STR_37 F73E                                           STR_53 FD04  
                                         STR_45 FE2A                                           STR_29 FC4B  
                                         STR_70 FA39                                           STR_38 FD04  
                                         STR_54 FD5C                                           STR_62 F9C7  
                                         STR_46 F7DA                                           STR_71 FAA9  
                                         STR_47 FD04                                           STR_39 FE82  
                                         STR_55 F772                                           STR_63 F669  
                                         STR_72 FACE                                           STR_64 FB84  
                                         STR_56 FD04                                           STR_48 FDE1  
                                         STR_80 FC2B                                           _ADRPT 000F66  
                                         STR_73 FCAA                                           STR_65 FC4B  
                                         STR_81 FFD6                                           STR_57 FF99  
                                         STR_49 F80E                                           STR_66 FC6B  
                                         STR_82 FFD6                                           STR_74 FCC8  
                                         STR_90 F953                                           STR_58 F69F  
                              ?_ClearModbusData 0001                                           STR_67 FB60  
                                         STR_83 FFEA                                           STR_59 FF12  
                                         STR_91 FEFF                                           STR_75 FE12  
                                         STR_76 F365                                           STR_68 F633  
                                         STR_84 FFEA                                           STR_92 FEEB  
                                         STR_69 FA13                                           STR_85 FFF4  
                                         STR_93 FE6D                                           STR_77 FDFA  
                                         STR_86 FFF4                                           STR_78 FF7A  
                                         STR_94 FE41                                           STR_87 FFD6  
                                         STR_79 FA84                                           STR_95 F8D5  
                                         STR_88 FFEA                                           STR_96 FFC1  
                                         STR_89 FFF4                                           STR_97 FFCD  
                                         STR_98 FBA7                                           STR_99 FB18  
                                         ?_stoa 0010                                           ?_utoa 0022  
                               __end_of___lodiv 3C64                                           ?_xtoa 0022  
                               __end_of___lomod 3FBE                                  __CFG_DEBUG$OFF 000000  
                                         i2l154 0064                                           i2l163 0112  
                                         i2l340 4C64                                           i2l156 009E  
                                         i2l501 51E2                                           i2l157 0112  
                                         i2l158 00D8                                           i2l351 4FA8  
                                         i2l504 51E8                                           i2l360 51DC  
                                         i2l337 4C60                                           i2l354 51F2  
                                         i2l347 4080                                           i2l357 51CA  
                                         i2l481 4D2C                                           i2l491 42C2  
                                         i2l484 4D30                                           i2l495 4FD4  
                                         i2l498 51F4                     __size_of_EUSART1_is_tx_done 0014  
                                         _OSCEN 000EDC                                    vfpfcnvrt@fmt 004B  
                                  vfpfcnvrt@llu 006F                                           _TRISA 000F88  
                                         _TRISB 000F89                                           _TRISC 000F8A  
                                         _TRISD 000F8B                                           _TRISE 000F8C  
                      CardConfigIni@readDataOdd 0018                                           _Debug 00DF  
                                 __CFG_WRT0$OFF 000000                                   __CFG_WRT1$OFF 000000  
                                 __CFG_WRT2$OFF 000000                                   __CFG_WRT3$OFF 000000  
                          _EUSART1_Transmit_ISR 4CEE                                  __CFG_EBTR0$OFF 000000  
                                __CFG_EBTR1$OFF 000000                                  __CFG_EBTR2$OFF 000000  
                                __CFG_EBTR3$OFF 000000                                   __CFG_WRTB$OFF 000000  
                                 __CFG_WRTC$OFF 000000                                   __CFG_WRTD$OFF 000000  
                               _DATAEE_ReadByte 50A0                                  __CFG_EBTRB$OFF 000000  
                                         _flags 0057                          __size_of_CardConfigIni 01F0  
                                         _fputc 4424                                 __end_of_isalpha 4E70  
                                         _fputs 4CAA                                 __end_of_isdigit 4F50  
                      SaveCardDat@dataeeAddrWrk 009F                                 __end_of_memmove 3D40  
                            __CFG_MCLRE$EXTMCLR 000000                                           atoi@n 0019  
                                         pad@fp 0017                                           atoi@s 000C  
                                         _width 00CF                                           _putch 51BA  
                      __size_of_ClearEEAddRange 005C                                           dtoa@d 0024  
                                         dtoa@i 0044                                           dtoa@n 003C  
                                         dtoa@p 0036                                           dtoa@s 003A  
                                         dtoa@w 0038                                 __end_of_islower 4EE0  
                               __end_of_isspace 4AE8                                  ?_EUSART1_Write 0001  
                                ?_EUSART2_Write 0001                                 __end_of_isupper 4F18  
                                         pclath 000FFA                                           tablat 000FF5  
                                   _ClearRxBuff 4BD4                                  ??_EUSART1_Read 0005  
                                         plusw1 000FE3                                           plusw2 000FDB  
                                ??_EUSART2_Read 0005                                           stoa@i 001C  
                                         stoa@l 0024                                           stoa@p 0022  
                                         stoa@s 0012                                           stoa@w 001E  
                                         ttemp5 005C                                           ttemp6 005F  
                                         ttemp7 0063                                           utoa@d 0024  
                                         utoa@i 0040                                           utoa@n 0038  
                                         utoa@p 0034                                           utoa@w 0036  
                                         status 000FD8                                      _ModDataCnt 00DB  
                                 ??_ModbusError 0016                                           wtemp8 005C  
                                         xtoa@c 0047                                           xtoa@d 0024  
                                         xtoa@i 0045                                           xtoa@n 003D  
                                         xtoa@p 0039                                           xtoa@w 003B  
                                         xtoa@x 002C                                 __end_of_toupper 48CE  
                              ___lodiv@dividend 0005           fp__EUSART1_DefaultFramingErrorHandler 0000  
    __end_of_EUSART1_DefaultFramingErrorHandler 51F6     __size_of_EUSART1_DefaultFramingErrorHandler 0002  
          ??_EUSART1_DefaultFramingErrorHandler 0001             ?_EUSART1_DefaultFramingErrorHandler 0001  
            _EUSART1_DefaultFramingErrorHandler 51F4                     __size_of_EUSART2_is_tx_done 0016  
                                 ??_SaveCardDat 009B                                  checkCRC@crcLow 0096  
         __end_of_EUSART2_SetTxInterruptHandler 5160          __size_of_EUSART2_SetTxInterruptHandler 000A  
                 _EUSART2_SetTxInterruptHandler 5156                                    _toupper$2523 0011  
                               __initialization 3A7A                                    __end_of_atoi 3246  
                    __end_of_EUSART1_Initialize 465C                                    __end_of_main 3956  
                                  __end_of_dtoa 1FE4                       __size_of_InitialiseString 03C2  
                                  __end_of_stoa 30AC                                    __end_of_utoa 29B6  
                                  __end_of_xtoa 22BA                     ?_INTERRUPT_InterruptManager 0001  
                              __end_of_ModbusRx 354A                                          ??_atoi 000E  
                                        ??_main 01D7                                          ??_dtoa 002C  
                                        ??_stoa 0014                                      _ModbusFC10 2586  
                                    _ModbusFC03 1718                                      _ModbusFC04 012A  
                                        ??_utoa 002C                                          ??_xtoa 002D  
                                 __activetblptr 000003                                __end_of_TogDebug 4EA8  
                           SaveCardDat@NumBytes 0099             __end_of_EUSART2_DefaultErrorHandler 51DE  
                   _EUSART2_DefaultErrorHandler 51D8                                      _ModbusData 0100  
                         ?_EUSART1_Transmit_ISR 0001                                ___lodiv@quotient 0015  
                          SaveCardDat@MBAddress 0095                                          _ADACCH 000F71  
                                        _ADACCL 000F70                      __end_of_EUSART2_Initialize 46DA  
                                        _ADCON0 000F60                                          _ADCON1 000F59  
                                        _ADCON2 000F5A                                          _ADCON3 000F5B  
                      _eusart2TxBufferRemaining 00FF                                          _ADERRH 000F6F  
                                        _ADERRL 000F6E                                          ?_fputc 0007  
                                        _ADLTHH 000F6B                                          STR_100 F8FF  
                                        _ADLTHL 000F6A                                          STR_101 F3FF  
                                        STR_102 F876                                          STR_110 F4D1  
                                        ?_fputs 0010                                          STR_103 F97B  
                                        STR_111 F369                                          STR_120 F365  
                                        STR_112 FE57                                          STR_104 F6D5  
                                        STR_121 FF6A                                          STR_113 F8A9  
                                        STR_105 F70A                                          STR_130 F368  
                                        STR_122 FF49                                          STR_114 FA5F  
                                        STR_106 F5C7                                          _ADRESH 000F64  
                                        STR_131 FFB5                                          STR_115 FBC9  
                                        STR_123 F556                                          STR_107 F448  
                                        STR_140 FFF8                                          STR_132 FFE4  
                                        STR_116 FC0B                                          STR_124 F9A1  
                                        STR_108 F48D                                          STR_125 F368  
                                        STR_133 FFE4                                          STR_141 FFF8  
                                        STR_109 F3B4                                          STR_117 F303  
                                        STR_134 FFFC                                          STR_118 FF5A  
                                        STR_126 FBEA                                          _ADRESL 000F63  
                                        STR_119 FF25                                          STR_135 FFFC  
                                        STR_127 FF8A                                          STR_136 FFDD  
                                        STR_128 FF38                                          STR_137 FFDD  
                                        STR_129 FFA8                                          STR_138 FFEF  
                                        STR_139 FFEF                                          _ADSTAT 000F65  
                                        _ADUTHH 000F6D                                          _ADUTHL 000F6C  
                                        _ANSELA 000F11                                          ?_putch 0001  
                                        _ANSELB 000F19                                          _ANSELC 000F21  
                                        _ANSELD 000F26                                          _ANSELE 000F2E  
                                        _RC1REG 000F99                                          _RC2REG 000E99  
                     InitialiseString@SerialNum 00B5                                ClearEEAddRange@i 0055  
                                        _RC1STA 000F9D                                          _RC2STA 000E9D  
                                        _RB6PPS 000EF5                                          _ODCONA 000F0F  
                                        _ODCONB 000F17                                          _ODCONC 000F1F  
                                        _RC6PPS 000EFD                                          _ODCOND 000F24  
                                        _ODCONE 000F2C                    __size_of_EUSART1_is_rx_ready 0018  
                            __size_of_ReadRX232 0124                                  __CFG_WDTCCS$SC 000000  
                                        i2l5220 4F90                                          i2l5222 4FA0  
                                        i2l5240 4FBC                                          i2l5224 4FA4  
                                        i2l5216 4F7E                                          i2l5242 4FCC  
                                        i2l5218 4F8E                                          i2l5244 4FD0  
                                        i2l5236 4FAA                                          i2l5238 4FBA  
                                        _INLVLA 000F0D                                          i2l5522 51DE  
                                        _INLVLB 000F15                                          _INLVLC 000F1D  
                                        i2l5524 51E4                                          i2l6340 0046  
                                        _INLVLD 000F22                                          _INLVLE 000F2A  
                                        i2l6350 00E6                                          i2l6342 0072  
                                        i2l6334 001A                                          i2l5800 4CEE  
                                        i2l6352 00F4                                          i2l6344 0080  
                                        i2l6336 0028                                          i2l5810 4D26  
                                        i2l5802 4D00                                          i2l6346 00AC  
                                        i2l6338 0038                                          i2l5820 424C  
                                        i2l5812 4204                                          i2l5804 4D10  
                                        i2l5492 51C4                                          i2l6348 00BA  
                                        i2l5830 42BE                                          i2l5822 425A  
                                        i2l5814 4214                                          i2l5806 4D12  
                                        i2l5494 51D8                                          i2l5824 426A  
                                        i2l5816 4222                                          i2l5808 4D22  
                                        i2l5826 4284                                          i2l5818 4232  
                                        i2l5770 4C30                                          i2l5828 42A0  
                                        i2l5780 3FBE                                          i2l5772 4C42  
                                        i2l5790 4018                                          i2l5782 3FCE  
                                        i2l5774 4C46                                          _TABLAT 000FF5  
                                        i2l5792 4028                                          i2l5784 3FDE  
                                        i2l5776 4C56                                          i2l5768 4C1E  
                                        i2l5794 4042                                          i2l5786 3FEE  
                                        i2l5778 4C5A                                          i2l5796 405E  
                                        i2l5788 4008                                          i2l5798 407C  
                                 ??_ValidateCmd 0057                                          _OSCFRQ 000EDE  
                                 vfpfcnvrt@done 006B                    __size_of_EUSART1_is_tx_ready 0018  
                                        _NVMDAT 000F80                                          _RX1PPS 000EB5  
                                        _RX2PPS 000E8D                                          _TX1REG 000F9A  
                                        _TX2REG 000E9A                                __end_of_checkCRC 380A  
                                        _TX1STA 000F9E                                          _TX2STA 000E9E  
                                   ModbusFC10@i 0096                                     ModbusFC10@j 0098  
                                   ModbusFC03@i 0096                                     ModbusFC04@i 0098  
                                        _RXMode 51CC                                          _TXMode 51D2  
                                        _RXStat 00DE                                  __CFG_PWRTE$OFF 000000  
                          __size_of_generateCRC 00DC                                          _ByteHi 00D5  
                                        _ByteLo 00F6                              _UART1_Write_string 46DA  
                                __CFG_XINST$OFF 000000                                    vfprintf@cfmt 0053  
                     __CFG_RSTOSC$HFINTOSC_1MHZ 000000                              AddRxBuffToModBus@i 008F  
                                 _CardConfigIni 29B6                                      _PrintMB400 4748  
                           __end_of_ModbusError 4204                                       ??___aodiv 0015  
                                     ??___aomod 0015                                          ___wmul 5024  
                                __CFG_STVREN$ON 000000                           CardConfigIni@NumBytes 0010  
                                     ??___lodiv 0015                                       ??___lomod 0015  
                           ?_UART1_Write_string 0006                        ?_EUSART1_SetErrorHandler 0005  
                           __end_of_SaveCardDat 2D76                                          clear_0 3B20  
                                        clear_1 3B2C                                          clear_2 3B38  
                                        clear_3 3B44                                          clear_4 3B50  
                                        clear_5 3B5C                                          _rxData 0500  
                   _EUSART2_FramingErrorHandler 01E3                                          _printf 4FD6  
                                        pad@buf 0019                                   ReadRX232@temp 0055  
              ??_EUSART1_SetOverrunErrorHandler 0007                 ?_EUSART1_SetOverrunErrorHandler 0005  
                                        _strcat 4FFE                                          dtoa@fp 0022  
                       __end_of_DATAEE_ReadByte 50B8                                          _strcmp 42C4  
                                        _strcpy 4812                                          _strlen 4B38  
                                 _ExpectedBytes 00FA                                 _ADCC_Initialize 4AE8  
                                        fputc@c 0007                                  _PMD_Initialize 506C  
                                        fputs@c 0014                                          fputs@i 0015  
                                        fputs@s 0010                                       ??_isalpha 0007  
                                     ??_isdigit 0007                                       ??_memmove 000F  
                                 ??_PrintModbus 008F                                       ??_islower 0007  
                                  __mediumconst F302                                       ??_isspace 0007  
                                        tblptrh 000FF7                                       ??_isupper 0007  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                          _EUSART2_Transmit_ISR 4C1E               __size_of_ADCC_GetSingleConversion 002E  
                                        stoa@cp 0020                                          stoa@fp 0010  
                              __end_of_vfprintf 4812                       ?_ADCC_GetSingleConversion 0005  
                               ??_EUSART1_Write 0005                                          utoa@fp 0022  
                               ??_EUSART2_Write 0005                                          xtoa@fp 0022  
                               _eusart1RxBuffer 0400                                       ??_toupper 000D  
                          ??_UART1_Write_string 000A                   __size_of_INTERRUPT_Initialize 0004  
                               _eusart2RxBuffer 0364                                 _eusart1TxBuffer 02C2  
                  __size_of_EUSART2_is_rx_ready 0018                               _SYSTEM_Initialize 504A  
                       __size_of_PrintModRespon 02E8                                 _eusart2TxBuffer 0384  
                                    __accesstop 0060                         __end_of__initialization 3B6A  
                  __size_of_EUSART2_is_tx_ready 0018                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                                 checkCRC@crcHigh 0094  
                             ??_ClearEEAddRange 0055                         ??_EUSART2_RxDataHandler 0001  
                __size_of_EUSART1_RxDataHandler 002C                   __end_of_EUSART1_RxDataHandler 4FD6  
                                ?_CardConfigIni 000A                             __end_of_ValidateCmd 2F12  
                                __pcstackCOMRAM 0001                                    __pidataBANK0 512E  
                                  __pidataBANK1 44BA                                    __pidataBANK2 4382  
                                  __pidataBANK3 4D74                                    __pidataBANK4 4DB4  
                           ??_SYSTEM_Initialize 0007                                _DATAEE_WriteByte 4C66  
                                 __end_of_fputc 44BA                                   __end_of_fputs 4CEE  
                ?_EUSART2_SetTxInterruptHandler 0005                                   __end_of_putch 51C4  
                             __end_of_ReadRX232 3A7A                          __end_of_PMD_Initialize 5088  
                          __end_of_EUSART1_Read 4A96                            __end_of_EUSART2_Read 4A3E  
                                   ?_ModbusFC10 0001                                     ?_ModbusFC03 0001  
                                   ?_ModbusFC04 0001                          ??_EUSART1_Transmit_ISR 0001  
                      ?_EUSART2_SetErrorHandler 0005                           ?_EUSART2_Transmit_ISR 0001  
                   __end_of_EUSART1_Receive_ISR 42C4                             CardConfigIni@RetNum 000C  
                          ModbusError@ErrorCode 0014                                         ??_fputc 000B  
                     __end_of_SYSTEM_Initialize 506C                                         ??_fputs 0014  
                                       ??_putch 0006                                   _eusart1RxHead 0059  
                                 _eusart1TxHead 00E4                                   _eusart2RxHead 005A  
                                 _eusart1RxTail 00E2                                   _eusart2TxHead 00E9  
                                    __pbssBANK0 00CD                                      __pbssBANK1 01ED  
                                    __pbssBANK2 02A2                                      __pbssBANK3 0300  
                                    __pbssBANK4 0400                                      __pbssBANK5 0500  
                                 _eusart2RxTail 00E7                                   _eusart1TxTail 00E3  
             _EUSART1_TxDefaultInterruptHandler 01E7                                   _eusart2TxTail 00E8  
               ??_EUSART1_SetRxInterruptHandler 0007                             __end_of_PrintModbus 2586  
              ??_EUSART2_SetFramingErrorHandler 0007                 ?_EUSART2_SetFramingErrorHandler 0005  
                                   _ModbusError 4144                                       ?_ModbusRx 0001  
                                       ?_RXMode 0001                                         ?_TXMode 0001  
                         EUSART2_Read@readValue 0005                                       ?_TogDebug 0001  
               __end_of_EUSART1_SetErrorHandler 51BA                                     _SaveCardDat 2BA6  
                                   ?_PrintMB400 0001                                _InitialiseString 1356  
                                       ?___wmul 0005                                 __CFG_PPS1WAY$ON 000000  
                       __end_of_ADCC_Initialize 4B38                                         _ADFLTRH 000F73  
                                       _ADFLTRL 000F72                                         _ADPREVH 000F62  
                                       _MB300xx 0464                                         _ADPREVL 000F61  
                                       _MB301xx 0164                                         _MB302xx 00FC  
                                       _MB303xx 00EA                                         _MB400xx 03B7  
                                       _MB304xx 0172                                         _MB305xx 023C  
                                       _MB306xx 018D                                         _ADSTPTH 000F69  
                                       _ADSTPTL 000F68                                         ?_printf 007D  
                               ?_PMD_Initialize 0001                               _ClearModbusRespon 4D32  
                                CardConfigIni@i 0016                                  CardConfigIni@j 0014  
                                       ?_strcat 0013                                         ?_strcmp 0005  
                                       ?_strcpy 0009                                         ?_strlen 0005  
        __end_of_EUSART1_SetFramingErrorHandler 51B0         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler 51A6                                ?_DATAEE_ReadByte 0005  
                         _eusart2RxStatusBuffer 02A2                                       ?_checkCRC 0001  
                          InitialiseString@Date 00A2                              ?_ClearModbusRespon 0001  
                  ?_EUSART1_DefaultErrorHandler 0001                            InitialiseString@Time 00AD  
                                       _SP1BRGH 000F9C                                         _SP1BRGL 000F9B  
                                       _SP2BRGH 000E9C                                         _SP2BRGL 000E9B  
                                       _OSCCON1 000ED8                                         _OSCCON3 000EDA  
                   __end_of_EUSART2_Receive_ISR 4082                              __size_of_vfpfcnvrt 058A  
                                       _TBLPTRH 000FF7                                         _TBLPTRL 000FF6  
                                       _TBLPTRU 000FF8                                         _NVMADRH 000F7F  
                                       _NVMADRL 000F7E                                         _OSCTUNE 000EDD  
                                       _NVMCON2 000F82                                         _SLRCONA 000F0E  
                                       _SLRCONB 000F16                                         _SLRCONC 000F1E  
                                       _SLRCOND 000F23                                         _SLRCONE 000F2B  
                           ??_ClearModbusRespon 0005                                ___lomod@dividend 0005  
                                  ?_ClearRxBuff 0001                                     PrintMB400@i 0055  
                          DATAEE_WriteByte@bAdd 0005                                     _ValidateCmd 2D76  
                                       _Command 01ED                               generateCRC@HiOrLo 0007  
                                    ??_ModbusRx 0056                                         _ByteNum 00D9  
                           __size_of_ModbusFC10 022E                             __size_of_ModbusFC03 0304  
                           __size_of_ModbusFC04 0CA2                                 ??_CardConfigIni 0012  
                               __size_of_RXMode 0006                                 __size_of_TXMode 0006  
                                       __Hparam 0000                                      ??_TogDebug 0055  
                                       __Lparam 0000                  fp__EUSART2_DefaultErrorHandler 0000  
                                       ___aodiv 3246                                         ___aomod 354A  
                             generateCRC@crcLow 000C                                 __size_of___wmul 0026  
                                       ___lodiv 3B74                                         ___lomod 3EEE  
                                     ?_vfprintf 0077                       __end_of_ClearModbusRespon 4D74  
                           _EUSART1_is_rx_ready 50E8                          InitialiseString@F10761 00D3  
                        InitialiseString@F10764 024C                          InitialiseString@F10757 02D2  
                        InitialiseString@F10759 03A4                          InitialiseString@F10767 017E  
                    __end_of_EUSART1_is_tx_done 5156                                         __pcinit 3A7A  
               __end_of_EUSART2_SetErrorHandler 5188                                         __ramtop 0F00  
                           _EUSART1_is_tx_ready 5100                                         __ptext0 380A  
                                       __ptext1 2D76                                         __ptext2 4E70  
                                       __ptext3 2BA6                                         __ptext4 3956  
                                       __ptext5 4FFE                                         __ptext6 4812  
                                       __ptext7 3C64                                         __ptext8 5088  
                                       __ptext9 49E6                                 __size_of_printf 0028  
                               __size_of_strcat 0026                                 __size_of_strcmp 00BE  
                               __size_of_strcpy 005E                                 __size_of_strlen 0050  
                             ReadRX232@NumChars 008F                                      ??_checkCRC 008F  
         fp__EUSART2_DefaultOverrunErrorHandler 0000      __end_of_EUSART2_DefaultOverrunErrorHandler 51CC  
   __size_of_EUSART2_DefaultOverrunErrorHandler 0008            ??_EUSART2_DefaultOverrunErrorHandler 0001  
           ?_EUSART2_DefaultOverrunErrorHandler 0001              _EUSART2_DefaultOverrunErrorHandler 51C4  
                         _OSCILLATOR_Initialize 50B8                          ??_EUSART2_Transmit_ISR 0001  
                                  __size_of_abs 0040                                    __size_of_pad 00C2  
                                       _isalpha 4E34                                         _isdigit 4F18  
                                       _memmove 3C64                              _EUSART1_Initialize 45DC  
                                       _islower 4EA8                        ??_PIN_MANAGER_Initialize 0005  
                                       _isspace 4A96                                     _PrintModbus 22BA  
                                       _isupper 4EE0                   ??_EUSART1_DefaultErrorHandler 0001  
                                       atoi@neg 0012                  InitialiseString@convertedValue 00C1  
                    __size_of_SYSTEM_Initialize 0022                        __size_of_ClearModbusData 004C  
                           __size_of_PrintMB400 0066                                         _toupper 4870  
                          end_of_initialization 3B6A                          InitialiseString@i_1506 00CB  
                          ?_EUSART1_is_rx_ready 0001                             ?_EUSART1_Initialize 0001  
                                _PrintModRespon 1A1C                          InitialiseString@RevNum 00C3  
                    __end_of_EUSART2_is_tx_done 512E                            ?_EUSART1_is_tx_ready 0001  
                                       fputc@fp 0009                     _EUSART1_OverrunErrorHandler 01DB  
                                       fputs@fp 0012           __end_of_EUSART1_SetRxInterruptHandler 519C  
        __size_of_EUSART1_SetRxInterruptHandler 000A                   _EUSART1_SetRxInterruptHandler 5192  
                                  SaveCardDat@i 00A1                              _EUSART2_Initialize 465C  
                             __end_of_vfpfcnvrt 1356                                         postdec1 000FE5  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                         __size_of_EUSART1_Read 0058                           __size_of_EUSART2_Read 0058  
                              ?_ADCC_Initialize 0001                                      ??_vfprintf 0053  
              __end_of_ADCC_GetSingleConversion 4F7E                            ??_EUSART1_Initialize 0007  
                                       strcmp@l 0005                                         strcmp@r 0007  
                         __CFG_WDTCPS$WDTCPS_31 000000                             ?_EUSART2_Initialize 0001  
                                       strcpy@d 0011                                         strlen@a 0007  
                           _EUSART2_is_rx_ready 5088                                         strcpy@s 000F  
                                       strlen@s 0005                               ValidateCmd@F10791 0228  
                             ValidateCmd@F10794 0214                               ValidateCmd@F10797 0200  
                           _EUSART2_is_tx_ready 50D0                        ValidateCmd@ConfName_1575 01A7  
                      ValidateCmd@ConfName_1579 01BB                                ClearModbusData@i 0005  
                       fp__EUSART1_Transmit_ISR 0000                                 _ClearEEAddRange 498A  
                        __end_of_PrintModRespon 1D04                __size_of_EUSART1_SetErrorHandler 000A  
                           EUSART1_Write@txData 0005                                __CFG_FEXTOSC$OFF 000000  
                         ??_EUSART1_is_rx_ready 0005                        __end_of_DATAEE_WriteByte 4CAA  
                          ??_EUSART2_Initialize 0007                            ?_EUSART2_is_rx_ready 0001  
                         ??_EUSART1_is_tx_ready 0005                                   ??_generateCRC 0008  
                          ?_EUSART2_is_tx_ready 0001                                    _EUSART1_Read 4A3E  
                                  _EUSART2_Read 49E6            __size_of_EUSART1_DefaultErrorHandler 0006  
                                __end_of_RXMode 51D2                                  __end_of_TXMode 51D8  
                        UART1_Write_string@data 0006                  __size_of_EUSART2_RxDataHandler 002C  
                 __end_of_EUSART2_RxDataHandler 4FAA                    __end_of_INTERRUPT_Initialize 51EE  
                    __size_of_ClearModbusRespon 0042                                     vfpfcnvrt@ap 004D  
                                   vfpfcnvrt@cp 0068                                     vfpfcnvrt@fp 0049  
                                   vfpfcnvrt@ll 0060                                  __end_of___wmul 504A  
                        ?_OSCILLATOR_Initialize 0001                                    ??_ModbusFC10 008F  
                                  ??_ModbusFC03 008F                                    ??_ModbusFC04 008F  
                                __end_of_printf 4FFE                                  __end_of_strcat 5024  
                                __end_of_strcmp 4382                                  __end_of_strcpy 4870  
                                     _ReadRX232 3956                                  __end_of_strlen 4B88  
                           start_initialization 3A7A                                 ___lodiv@divisor 000D  
                               ___lodiv@counter 001D                 __size_of_PIN_MANAGER_Initialize 008E  
                                   __end_of_abs 4E34                                     __end_of_pad 4144  
                      __end_of_InitialiseString 1718   EUSART1_SetRxInterruptHandler@interruptHandler 0005  
 EUSART1_SetTxInterruptHandler@interruptHandler 0005   EUSART2_SetRxInterruptHandler@interruptHandler 0005  
 EUSART2_SetTxInterruptHandler@interruptHandler 0005                                 ?_PrintModRespon 0001  
                                   putch@txData 0006                           ??_EUSART2_is_rx_ready 0005  
                         __end_of_EUSART1_Write 498A                     __size_of_UART1_Write_string 006E  
                         __end_of_EUSART2_Write 492C                           ??_EUSART2_is_tx_ready 0005  
                        fp__EUSART1_Receive_ISR 0000                                    ?_ModbusError 0014  
              __size_of_EUSART2_SetErrorHandler 000A                             DATAEE_ReadByte@bAdd 0005  
                                      ??_RXMode 0005                            __size_of_ClearRxBuff 004A  
                             ??_ClearModbusData 0005                                        ??_TXMode 0005  
        __end_of_EUSART2_SetOverrunErrorHandler 5174         __size_of_EUSART2_SetOverrunErrorHandler 000A  
                _EUSART2_SetOverrunErrorHandler 516A                              __end_of_ModbusFC10 27B4  
                            __end_of_ModbusFC03 1A1C                              __end_of_ModbusFC04 0DCC  
                                  ?_SaveCardDat 0093                                __CFG_LPBOREN$OFF 000000  
                                  ClearRxBuff@i 0006                                _SaveCardDat$2883 009D  
                             __size_of_ModbusRx 017C                                     vfprintf@fmt 0079  
                           __end_of_generateCRC 3E1C                                    ??_PrintMB400 008F  
                              ??_PMD_Initialize 0005                                        ??___wmul 0009  
                             __size_of_TogDebug 0038                           _EUSART1_RxDataHandler 4FAA  
                ?_EUSART1_SetRxInterruptHandler 0005                                     __pdataBANK0 00EA  
                                   __pdataBANK1 0100                                     __pdataBANK2 0200  
                                   __pdataBANK3 03B7                                     __pdataBANK4 0464  
                                      ??_printf 0055                                        ??_strcat 0017  
                                      ??_strcmp 0009                                        ??_strcpy 000D  
                                      ??_strlen 0007                                  _eusart1RxCount 00E1  
                       __end_of_ClearEEAddRange 49E6                                  _eusart2RxCount 00E6  
                      _ADCC_GetSingleConversion 4F50                                      ?_ReadRX232 008F  
                                   __pbssCOMRAM 0057               _EUSART1_RxDefaultInterruptHandler 01E5  
                 __size_of_EUSART1_Transmit_ISR 0044                                   __pcstackBANK0 0060  
                                 __pcstackBANK1 0193                                ___aodiv@dividend 0005  
                             __size_of_checkCRC 015C                         fp__EUSART2_Transmit_ISR 0000  
                             _AddRxBuffToModBus 3E1C                             EUSART2_Write@txData 0005  
                            __end_of_PrintMB400 47AE                 ??_EUSART1_SetTxInterruptHandler 0007  
                            ?_AddRxBuffToModBus 0001                ??_EUSART1_SetFramingErrorHandler 0007  
               ?_EUSART1_SetFramingErrorHandler 0005                 ??_EUSART2_SetRxInterruptHandler 0007  
                                  ?_ValidateCmd 0001                    __size_of_EUSART1_Receive_ISR 00C0  
                        fp__EUSART2_Receive_ISR 0000                                       _atoi$2410 0018  
                                     _atoi$2411 0016                                       _atoi$2409 0014  
                                     __pnvBANK0 00FE                                       __pnvBANK1 01D9  
      __end_of_ADCC_DisableContinuousConversion 51F2       __size_of_ADCC_DisableContinuousConversion 0004  
            ??_ADCC_DisableContinuousConversion 0005               ?_ADCC_DisableContinuousConversion 0001  
              _ADCC_DisableContinuousConversion 51EE                             ??_AddRxBuffToModBus 0055  
                        _PIN_MANAGER_Initialize 454E                                       _dtoa$1905 0034  
                                     __pintcode 0008                               InitialiseString@i 00C9  
                             InitialiseString@j 00C7                                   __pmediumconst F302  
               ADCC_GetSingleConversion@channel 0009                                        ?___aodiv 0005  
                                      ?___aomod 0005                                ___aodiv@quotient 0017  
                                      ?___lodiv 0005                                        ?___lomod 0005  
             _EUSART2_TxDefaultInterruptHandler 01EB                    ??_INTERRUPT_InterruptManager 0001  
                             __size_of_vfprintf 0064                                 ___lomod@divisor 000D  
                                      _BAUD1CON 000F9F                                        _BAUD2CON 000E9F  
                                     checkCRC@i 009C                                       checkCRC@j 0098  
                               ___lomod@counter 0015           fp__EUSART1_DefaultOverrunErrorHandler 0000  
    __end_of_EUSART1_DefaultOverrunErrorHandler 51E4     __size_of_EUSART1_DefaultOverrunErrorHandler 0006  
          ??_EUSART1_DefaultOverrunErrorHandler 0001             ?_EUSART1_DefaultOverrunErrorHandler 0001  
            _EUSART1_DefaultOverrunErrorHandler 51DE                                        ?_isalpha 0005  
                                      ?_isdigit 0005                                        ?_memmove 0009  
                          _EUSART1_ErrorHandler 01D9                                 SaveCardDat@Conf 00A3  
                  ?_EUSART2_DefaultErrorHandler 0001                                 SaveCardDat@Name 0093  
                                      ?_islower 0005                                        ?_isspace 0005  
                                  ?_PrintModbus 0001                       __end_of_AddRxBuffToModBus 3EEE  
                                      ?_isupper 0005                         _EUSART1_SetErrorHandler 51B0  
                            _EUSART1_is_tx_done 5142                                  __size_of_fputc 0096  
                                __size_of_fputs 0044                        __size_of_DATAEE_ReadByte 0018  
                                      ?_toupper 000B                                  __size_of_putch 000A  
                          _INTERRUPT_Initialize 51EA                     InitialiseString@readDataOdd 00C5  
                  __size_of_EUSART2_Receive_ISR 00C4                                     _generateCRC 3D40  
                                ___wmul@product 0009                                        _LATAbits 000F83  
       EUSART1_SetErrorHandler@interruptHandler 0005         EUSART2_SetErrorHandler@interruptHandler 0005  
                                      _LATDbits 000F86                             ?_EUSART1_is_tx_done 0001  
                                      _PIE3bits 000EC5                             __CFG_BORV$VBOR_2P45 000000  
                    UART1_Write_string@data_len 0008                                        _MBResCRC 00F8  
           __size_of_INTERRUPT_InterruptManager 011E                                        i2u501_40 4018  
                                      i2u500_48 3FF4                                        i2u501_41 4014  
                                      i2u500_49 4008                                        _MBResCnt 00D7  
                                      i2u511_40 42A0                                        i2u510_48 4270  
                                      i2u503_40 405E                                        i2u502_48 402E  
                                      i2u511_41 429C                                        i2u510_49 4284  
                                      i2u503_41 405A                                        i2u502_49 4042  
                                      i2u512_48 42A6                                        i2u505_40 4D00  
                                      i2u441_40 4FA0                                        i2u504_48 4064  
                                      i2u512_49 42BA                                        i2u505_41 4CFC  
                                      i2u441_41 4F9C                                        i2u504_49 4078  
                                      i2u442_40 4FCC                                        i2u506_40 4D22  
                                      i2u442_41 4FC8                                        i2u506_41 4D1E  
                                      i2u507_40 4222                                        i2u507_41 421E  
                                      i2u509_40 425A                                        i2u508_48 4238  
                                      i2u509_41 4256                                        i2u508_49 424C  
                                      _PIR3bits 000ECD                           __end_of_CardConfigIni 2BA6  
                                      i2u581_40 00AC                                        i2u580_48 0086  
                                      i2u581_41 00A8                                        i2u580_49 009A  
                                      _PIR7bits 000ED1                                        i2u582_40 00BA  
                                      i2u574_40 0028                                        i2u582_41 00B6  
                                      i2u574_41 0024                                        i2u575_40 0038  
                                      i2u575_41 0034                                        i2u584_40 00E6  
                                      i2u583_48 00C0                                        i2u576_40 0046  
                                      i2u584_41 00E2                                        i2u583_49 00D4  
                                      i2u576_41 0042                                        i2u497_40 4C30  
                                      i2u585_40 00F4                                        i2u497_41 4C2C  
                                      i2u585_41 00F0                                        i2u498_40 4C56  
                                      i2u578_40 0072                                        i2u577_48 004C  
                                      i2u498_41 4C52                                        i2u578_41 006E  
                                      i2u577_49 0060                                        i2u499_40 3FDE  
                                      i2u586_48 00FA                                        i2u579_40 0080  
                                      i2u499_41 3FDA                                        i2u586_49 010E  
                                      i2u579_41 007C                                        _MBRespon 0257  
                        ?_EUSART1_RxDataHandler 0001                              _EUSART2_is_tx_done 5118  
                                     _vfpfcnvrt 0DCC                                       _xtoa$1934 0035  
                                     _xtoa$1935 0037                                      _ADCON0bits 000F60  
                                    _ADCON1bits 000F59                                      _ADCON2bits 000F5A  
                                    _ADCON3bits 000F5B                               ___wmul@multiplier 0005  
                          ??_EUSART1_is_tx_done 0005                                ?_ClearEEAddRange 008F  
                           ?_EUSART2_is_tx_done 0001                                     ??_ReadRX232 0055  
                         SaveCardDat@dataeeAddr 0097                                     checkCRC@crc 009A  
                 __size_of_EUSART2_Transmit_ISR 0048                           DATAEE_WriteByte@bData 0007  
                                  _isspace$2436 000B                   ??_EUSART2_DefaultErrorHandler 0001  
                                    vfpfcnvrt@c 006A                                       copy_data0 3A8E  
                                     copy_data1 3AAE                                       copy_data2 3ACE  
                                     copy_data3 3AEE                                       copy_data4 3B0E  
                            ModbusFC10@TempData 0093                           ?_INTERRUPT_Initialize 0001  
                     CardConfigIni@readDataEven 0019                               ?_DATAEE_WriteByte 0005  
                       _EUSART2_SetErrorHandler 517E                           EUSART1_Read@readValue 0005  
                   _EUSART2_OverrunErrorHandler 01E1                              ??_DATAEE_WriteByte 0008  
                          ??_EUSART2_is_tx_done 0005                                        _ModbusRx 33CE  
                            generateCRC@MessCnt 0005                                      _ADSTATbits 000F65  
         __end_of_EUSART1_SetTxInterruptHandler 5192          __size_of_EUSART1_SetTxInterruptHandler 000A  
                 _EUSART1_SetTxInterruptHandler 5188                                        __Hrparam 0000  
                                      _TogDebug 4E70           __end_of_EUSART2_SetRxInterruptHandler 516A  
        __size_of_EUSART2_SetRxInterruptHandler 000A                   _EUSART2_SetRxInterruptHandler 5160  
                          __size_of_ModbusError 00C0                                      vfprintf@ap 007B  
                                      __Lrparam 0000                                      vfprintf@fp 0077  
                            __CFG_BOREN$SBORDIS 000000                            __size_of_SaveCardDat 01D0  
                       ??_OSCILLATOR_Initialize 0005                                       memmove@d1 0009  
                                     memmove@s1 000B                                __size_of___aodiv 0188  
                              __size_of___aomod 0164                              generateCRC@crcHigh 000A  
                              __size_of___lodiv 00F0                                __size_of___lomod 00D0  
                   __size_of_EUSART1_Initialize 0080                                      ?_vfpfcnvrt 0049  
                               ___aodiv@divisor 000D                                 ___aodiv@counter 0015  
                               ReadRX232@F10773 00F4                       ??_EUSART1_SetErrorHandler 0007  
                             CardConfigIni@Name 000A                                        _checkCRC 36AE  
           __end_of_EUSART1_DefaultErrorHandler 51EA                     _EUSART1_DefaultErrorHandler 51E4  
                              ??_PrintModRespon 008F                     __end_of_EUSART1_is_rx_ready 5100  
                                    strcat@dest 0013                        __size_of_ADCC_Initialize 0050  
                          _EUSART2_ErrorHandler 01DF                                __size_of_isalpha 003C  
                              __size_of_isdigit 0038                     __end_of_EUSART1_is_tx_ready 5118  
                    __size_of_AddRxBuffToModBus 00D2                                __size_of_memmove 00DC  
                               _ClearModbusData 4B88                                __size_of_islower 0038  
                              __size_of_isspace 0052                                        __ptext10 498A  
                                      __ptext11 4C66                                        __ptext20 51EA  
                                      __ptext12 1356                                        __ptext21 465C  
                                      __ptext13 29B6                                        __ptext30 519C  
                                      __ptext22 5156                                        __ptext14 42C4  
                                      __ptext31 51A6                                        __ptext23 5160  
                                      __ptext15 50A0                                        __ptext40 33CE  
                                      __ptext32 51B0                                        __ptext24 516A  
                                      __ptext16 504A                                        __ptext41 36AE  
                                      __ptext33 4AE8                                        __ptext25 5174  
                                      __ptext17 506C                                        __ptext50 1718  
                                      __ptext42 51CC                                        __ptext34 51EE  
                                      __ptext26 517E                                        __ptext18 454E  
                                      __ptext51 4FD6                                        __ptext43 50E8  
                                      __ptext35 22BA                                        __ptext27 45DC  
                                      __ptext19 50B8                                        __ptext60 3EEE  
                                      __ptext52 47AE                                        __ptext44 4A3E  
                                      __ptext36 1A1C                                        __ptext28 5188  
                                      __ptext61 3B74                                        __ptext53 0DCC  
                                      __ptext45 4BD4                                        __ptext37 50D0  
                                      __ptext29 5192                                        __ptext70 4DF4  
                                      __ptext62 2F12                                        __ptext54 1FE4  
                                      __ptext46 3E1C                                        __ptext38 5118  
                                      __ptext71 354A                                        __ptext63 1D04  
                                      __ptext55 4870                                        __ptext47 2586  
                                      __ptext39 4748                                        __ptext80 51D2  
                                      __ptext72 3246                                        __ptext64 4082  
                                      __ptext56 4EA8                                        __ptext48 012A  
                                      __ptext81 5100                                        __ptext73 30AC  
                                      __ptext65 4B38                                        __ptext57 4EE0  
                                      __ptext49 4F50                                        __ptext90 51F2  
                                      __ptext82 5142                                        __ptext74 4A96  
                                      __ptext66 4CAA                                        __ptext58 4E34  
                                      __ptext91 51D8                                        __ptext83 492C  
                                      __ptext75 4F18                                        __ptext67 4424  
                                      __ptext59 27B4                                        __ptext92 4F7E  
                                      __ptext84 4D32                                        __ptext76 5024  
                                      __ptext68 51BA                                        __ptext93 4CEE  
                                      __ptext85 4B88                                        __ptext77 4144  
                                      __ptext69 48CE                                        __ptext94 4204  
                                      __ptext78 3D40                                        __ptext95 51DE  
                                      __ptext87 4C1E                                        __ptext79 46DA  
                                      __ptext96 51F4                                        __ptext88 3FBE  
                                      __ptext97 51E4                                        __ptext89 51C4  
                                      __ptext98 4FAA                                        __ptext99 0000  
                              __size_of_isupper 0038                               ?_InitialiseString 0001  
                   DATAEE_WriteByte@GIEBitValue 0008                                      strcpy@dest 0009  
                              __size_of_toupper 005E                     __size_of_EUSART2_Initialize 007E  
                       ClearEEAddRange@NumBytes 0091                              ??_InitialiseString 0055  
                                 __size_of_atoi 019A                                   __size_of_main 014C  
                                 __size_of_dtoa 02E0                                   __size_of_stoa 019A  
         fp__EUSART2_DefaultFramingErrorHandler 0000      __end_of_EUSART2_DefaultFramingErrorHandler 51F4  
   __size_of_EUSART2_DefaultFramingErrorHandler 0002            ??_EUSART2_DefaultFramingErrorHandler 0001  
           ?_EUSART2_DefaultFramingErrorHandler 0001              _EUSART2_DefaultFramingErrorHandler 51F2  
                                 __size_of_utoa 0202                                   __size_of_xtoa 02D6  
                             ??_DATAEE_ReadByte 0007                            __size_of_ValidateCmd 019C  
                          __CFG_WDTCWS$WDTCWS_7 000000                         ClearEEAddRange@StartAdd 008F  
                                  PrintModbus@i 0096                                    PrintModbus@j 0094  
          __size_of_EUSART2_DefaultErrorHandler 0006                                      _RC1STAbits 000F9D  
                                     stoa@F1139 0186                                      _RC2STAbits 000E9D  
EUSART1_SetOverrunErrorHandler@interruptHandler 0005  EUSART2_SetOverrunErrorHandler@interruptHandler 0005  
                               PrintModRespon@i 0094                                 PrintModRespon@j 0092  
                    ??_ADCC_GetSingleConversion 0007                                        _rxStatus 00DD  
                                      int$flags 005B                      CardConfigIni@dataeeAddrWrk 000E  
                                      _vfprintf 47AE              __end_of_INTERRUPT_InterruptManager 0126  
                    _INTERRUPT_InterruptManager 0008                           _EUSART2_RxDataHandler 4F7E  
                                     printf@fmt 007D                     _EUSART1_FramingErrorHandler 01DD  
                           _EUSART1_Receive_ISR 4204                                ___aomod@dividend 0005  
              ??_EUSART2_SetOverrunErrorHandler 0007                 ?_EUSART2_SetOverrunErrorHandler 0005  
                       InitialiseString@PartNum 008F                                  _vfpfcnvrt$1949 006D  
                       InitialiseString@Partial 00C0                                      _INTCONbits 000FF2  
                   __end_of_EUSART2_is_rx_ready 50A0                                     _NVMCON1bits 000F81  
                   __end_of_EUSART2_is_tx_ready 50E8                                        isalpha@c 0005  
                    __end_of_UART1_Write_string 4748                                        isdigit@c 0005  
                        ??_INTERRUPT_Initialize 0005                                        memmove@d 0011  
                                      memmove@n 000D                                        memmove@s 0013  
                     ??_EUSART2_SetErrorHandler 0007                            __size_of_PrintModbus 02CC  
                                      intlevel2 0000                                   ??_ClearRxBuff 0005  
                                     strcat@src 0015                            ?_EUSART1_Receive_ISR 0001  
                      ModbusFC04@convertedValue 0095                                        islower@c 0005  
                                      isspace@c 0005                         ?_PIN_MANAGER_Initialize 0001  
                             __CFG_CLKOUTEN$OFF 000000          __end_of_EUSART1_SetOverrunErrorHandler 51A6  
       __size_of_EUSART1_SetOverrunErrorHandler 000A                  _EUSART1_SetOverrunErrorHandler 519C  
                                     strcpy@src 000B                                        isupper@c 0005  
                  __end_of_EUSART1_Transmit_ISR 4D32                                        printf@ap 008D  
EUSART1_SetFramingErrorHandler@interruptHandler 0005  EUSART2_SetFramingErrorHandler@interruptHandler 0005  
                ?_EUSART1_SetTxInterruptHandler 0005                  ?_EUSART2_SetRxInterruptHandler 0005  
                               ___aomod@divisor 000D                                     ??_vfpfcnvrt 004F  
                                      stoa@nuls 0015                                 ___aomod@counter 0015  
                        __size_of_EUSART1_Write 005E                              _eusart1RxLastError 00E0  
                        __size_of_EUSART2_Write 005E                             _EUSART2_Receive_ISR 3FBE  
                       __end_of_ClearModbusData 4BD4                                        toupper@c 000B  
                                    _TX1STAbits 000F9E                                      _TX2STAbits 000E9E  
                                  ___aodiv@sign 0016                                 ModbusFC10@error 0095  
                         ??_EUSART1_Receive_ISR 0001                  __end_of_PIN_MANAGER_Initialize 45DC  
                             ??_ADCC_Initialize 0005                                 ModbusFC03@error 0095  
                               ModbusFC04@error 0097                 ??_EUSART2_SetTxInterruptHandler 0007  
                          ?_EUSART2_Receive_ISR 0001                              _eusart2RxLastError 00E5  
                                  ?_generateCRC 0005                         ??_EUSART1_RxDataHandler 0001  
                                  ___aomod@sign 0016               _EUSART2_RxDefaultInterruptHandler 01E9  
                           __end_of_ClearRxBuff 4C1E  
