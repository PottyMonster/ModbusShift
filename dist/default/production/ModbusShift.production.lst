

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Mar 06 13:31:09 2021

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F46K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    90                           	psect	text72,global,reloc=2,class=CODE,delta=1
    91                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    92                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    93  0000                     
    94                           ; Version 2.10
    95                           ; Generated 31/07/2019 GMT
    96                           ; 
    97                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    98                           ; All rights reserved.
    99                           ; 
   100                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   101                           ; 
   102                           ; Redistribution and use in source and binary forms, with or without modification, are
   103                           ; permitted provided that the following conditions are met:
   104                           ; 
   105                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   106                           ;        conditions and the following disclaimer.
   107                           ; 
   108                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   109                           ;        of conditions and the following disclaimer in the documentation and/or other
   110                           ;        materials provided with the distribution.
   111                           ; 
   112                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   113                           ;        software without specific prior written permission.
   114                           ; 
   115                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   116                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   117                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   118                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   119                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   120                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   121                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   122                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   123                           ; 
   124                           ; 
   125                           ; Code-generator required, PIC18F46K40 Definitions
   126                           ; 
   127                           ; SFR Addresses
   128  0000                     
   129                           	psect	idataBANK0
   130  00264A                     __pidataBANK0:
   131                           	opt callstack 0
   132                           
   133                           ;initializer for stoa@F1139
   134  00264A  28                 	db	40
   135  00264B  6E                 	db	110
   136  00264C  75                 	db	117
   137  00264D  6C                 	db	108
   138  00264E  6C                 	db	108
   139  00264F  29                 	db	41
   140  002650  00                 	db	0
   141                           
   142                           ;initializer for _ExpectedBytes
   143  002651  0008               	dw	8
   144                           
   145                           ;initializer for _MBRespon
   146  002653  11                 	db	17
   147  002654  03                 	db	3
   148  002655  06                 	db	6
   149  002656  AE                 	db	174
   150  002657  41                 	db	65
   151  002658  56                 	db	86
   152  002659  52                 	db	82
   153  00265A  43                 	db	67
   154  00265B  40                 	db	64
   155  00265C  49                 	db	73
   156  00265D  AD                 	db	173
   157                           
   158                           	psect	nvBANK0
   159  0000CD                     __pnvBANK0:
   160                           	opt callstack 0
   161  0000CD                     _EUSART1_ErrorHandler:
   162                           	opt callstack 0
   163  0000CD                     	ds	2
   164  0000CF                     _EUSART1_OverrunErrorHandler:
   165                           	opt callstack 0
   166  0000CF                     	ds	2
   167  0000D1                     _EUSART1_FramingErrorHandler:
   168                           	opt callstack 0
   169  0000D1                     	ds	2
   170  0000D3                     _EUSART2_ErrorHandler:
   171                           	opt callstack 0
   172  0000D3                     	ds	2
   173  0000D5                     _EUSART2_OverrunErrorHandler:
   174                           	opt callstack 0
   175  0000D5                     	ds	2
   176  0000D7                     _EUSART2_FramingErrorHandler:
   177                           	opt callstack 0
   178  0000D7                     	ds	2
   179  0000D9                     _EUSART1_RxDefaultInterruptHandler:
   180                           	opt callstack 0
   181  0000D9                     	ds	2
   182  0000DB                     _EUSART1_TxDefaultInterruptHandler:
   183                           	opt callstack 0
   184  0000DB                     	ds	2
   185  0000DD                     _EUSART2_RxDefaultInterruptHandler:
   186                           	opt callstack 0
   187  0000DD                     	ds	2
   188  0000DF                     _EUSART2_TxDefaultInterruptHandler:
   189                           	opt callstack 0
   190  0000DF                     	ds	2
   191  0000E1                     _eusart1TxBufferRemaining:
   192                           	opt callstack 0
   193  0000E1                     	ds	1
   194  0000E2                     _eusart2TxBufferRemaining:
   195                           	opt callstack 0
   196  0000E2                     	ds	1
   197  0000                     _RC2REG	set	3737
   198  0000                     _RC2STAbits	set	3741
   199  0000                     _TX2REG	set	3738
   200  0000                     _TX2STAbits	set	3742
   201  0000                     _SP2BRGH	set	3740
   202  0000                     _SP2BRGL	set	3739
   203  0000                     _TX2STA	set	3742
   204  0000                     _RC2STA	set	3741
   205  0000                     _BAUD2CON	set	3743
   206  0000                     _PIR7bits	set	3793
   207  0000                     _PIR3bits	set	3789
   208  0000                     _PIE3bits	set	3781
   209  0000                     _PMD5	set	3814
   210  0000                     _PMD4	set	3813
   211  0000                     _PMD3	set	3812
   212  0000                     _PMD2	set	3811
   213  0000                     _PMD1	set	3810
   214  0000                     _PMD0	set	3809
   215  0000                     _OSCTUNE	set	3805
   216  0000                     _OSCFRQ	set	3806
   217  0000                     _OSCEN	set	3804
   218  0000                     _OSCCON3	set	3802
   219  0000                     _OSCCON1	set	3800
   220  0000                     _RX2PPS	set	3725
   221  0000                     _RC6PPS	set	3837
   222  0000                     _RB6PPS	set	3829
   223  0000                     _RX1PPS	set	3765
   224  0000                     _INLVLE	set	3882
   225  0000                     _INLVLD	set	3874
   226  0000                     _INLVLC	set	3869
   227  0000                     _INLVLB	set	3861
   228  0000                     _INLVLA	set	3853
   229  0000                     _SLRCONE	set	3883
   230  0000                     _SLRCOND	set	3875
   231  0000                     _SLRCONC	set	3870
   232  0000                     _SLRCONB	set	3862
   233  0000                     _SLRCONA	set	3854
   234  0000                     _ODCOND	set	3876
   235  0000                     _ODCONC	set	3871
   236  0000                     _ODCONB	set	3863
   237  0000                     _ODCONA	set	3855
   238  0000                     _ODCONE	set	3884
   239  0000                     _WPUC	set	3872
   240  0000                     _WPUA	set	3856
   241  0000                     _WPUB	set	3864
   242  0000                     _WPUE	set	3885
   243  0000                     _WPUD	set	3877
   244  0000                     _ANSELA	set	3857
   245  0000                     _ANSELE	set	3886
   246  0000                     _ANSELB	set	3865
   247  0000                     _ANSELC	set	3873
   248  0000                     _ANSELD	set	3878
   249  0000                     _LATDbits	set	3974
   250  0000                     _LATAbits	set	3971
   251  0000                     _RC1REG	set	3993
   252  0000                     _RC1STAbits	set	3997
   253  0000                     _TX1REG	set	3994
   254  0000                     _TX1STAbits	set	3998
   255  0000                     _SP1BRGH	set	3996
   256  0000                     _SP1BRGL	set	3995
   257  0000                     _TX1STA	set	3998
   258  0000                     _RC1STA	set	3997
   259  0000                     _BAUD1CON	set	3999
   260  0000                     _NVMDAT	set	3968
   261  0000                     _NVMADRL	set	3966
   262  0000                     _NVMADRH	set	3967
   263  0000                     _NVMCON2	set	3970
   264  0000                     _TABLAT	set	4085
   265  0000                     _TBLPTRL	set	4086
   266  0000                     _TBLPTRH	set	4087
   267  0000                     _TBLPTRU	set	4088
   268  0000                     _NVMCON1bits	set	3969
   269  0000                     _INTCONbits	set	4082
   270  0000                     _TRISD	set	3979
   271  0000                     _TRISC	set	3978
   272  0000                     _TRISB	set	3977
   273  0000                     _TRISA	set	3976
   274  0000                     _TRISE	set	3980
   275  0000                     _LATC	set	3973
   276  0000                     _LATB	set	3972
   277  0000                     _LATA	set	3971
   278  0000                     _LATD	set	3974
   279  0000                     _LATE	set	3975
   280                           
   281                           	psect	mediumconst
   282  00FE10                     __pmediumconst:
   283                           	opt callstack 0
   284  00FE10  00                 	db	0
   285  00FE11                     STR_1:
   286                           
   287                           ; BSR set to: 0
   288  00FE11  0D                 	db	13
   289  00FE12  44                 	db	68	;'D'
   290  00FE13  61                 	db	97	;'a'
   291  00FE14  6E                 	db	110	;'n'
   292  00FE15  20                 	db	32
   293  00FE16  61                 	db	97	;'a'
   294  00FE17  6E                 	db	110	;'n'
   295  00FE18  64                 	db	100	;'d'
   296  00FE19  20                 	db	32
   297  00FE1A  53                 	db	83	;'S'
   298  00FE1B  61                 	db	97	;'a'
   299  00FE1C  6D                 	db	109	;'m'
   300  00FE1D  27                 	db	39
   301  00FE1E  73                 	db	115	;'s'
   302  00FE1F  20                 	db	32
   303  00FE20  4D                 	db	77	;'M'
   304  00FE21  6F                 	db	111	;'o'
   305  00FE22  64                 	db	100	;'d'
   306  00FE23  62                 	db	98	;'b'
   307  00FE24  75                 	db	117	;'u'
   308  00FE25  73                 	db	115	;'s'
   309  00FE26  20                 	db	32
   310  00FE27  47                 	db	71	;'G'
   311  00FE28  50                 	db	80	;'P'
   312  00FE29  49                 	db	73	;'I'
   313  00FE2A  4F                 	db	79	;'O'
   314  00FE2B  20                 	db	32
   315  00FE2C  45                 	db	69	;'E'
   316  00FE2D  78                 	db	120	;'x'
   317  00FE2E  70                 	db	112	;'p'
   318  00FE2F  61                 	db	97	;'a'
   319  00FE30  6E                 	db	110	;'n'
   320  00FE31  73                 	db	115	;'s'
   321  00FE32  69                 	db	105	;'i'
   322  00FE33  6F                 	db	111	;'o'
   323  00FE34  6E                 	db	110	;'n'
   324  00FE35  20                 	db	32
   325  00FE36  2D                 	db	45
   326  00FE37  20                 	db	32
   327  00FE38  41                 	db	65	;'A'
   328  00FE39  50                 	db	80	;'P'
   329  00FE3A  30                 	db	48	;'0'
   330  00FE3B  30                 	db	48	;'0'
   331  00FE3C  30                 	db	48	;'0'
   332  00FE3D  78                 	db	120	;'x'
   333  00FE3E  78                 	db	120	;'x'
   334  00FE3F  78                 	db	120	;'x'
   335  00FE40  78                 	db	120	;'x'
   336  00FE41  78                 	db	120	;'x'
   337  00FE42  20                 	db	32
   338  00FE43  56                 	db	86	;'V'
   339  00FE44  30                 	db	48	;'0'
   340  00FE45  2E                 	db	46
   341  00FE46  31                 	db	49	;'1'
   342  00FE47  0D                 	db	13
   343  00FE48  0A                 	db	10
   344  00FE49  00                 	db	0
   345  00FE4A                     STR_8:
   346                           
   347                           ; BSR set to: 0
   348  00FE4A  0D                 	db	13
   349  00FE4B  20                 	db	32
   350  00FE4C  20                 	db	32
   351  00FE4D  20                 	db	32
   352  00FE4E  30                 	db	48	;'0'
   353  00FE4F  78                 	db	120	;'x'
   354  00FE50  31                 	db	49	;'1'
   355  00FE51  30                 	db	48	;'0'
   356  00FE52  20                 	db	32
   357  00FE53  2D                 	db	45
   358  00FE54  20                 	db	32
   359  00FE55  57                 	db	87	;'W'
   360  00FE56  72                 	db	114	;'r'
   361  00FE57  69                 	db	105	;'i'
   362  00FE58  74                 	db	116	;'t'
   363  00FE59  65                 	db	101	;'e'
   364  00FE5A  20                 	db	32
   365  00FE5B  4D                 	db	77	;'M'
   366  00FE5C  75                 	db	117	;'u'
   367  00FE5D  6C                 	db	108	;'l'
   368  00FE5E  74                 	db	116	;'t'
   369  00FE5F  69                 	db	105	;'i'
   370  00FE60  70                 	db	112	;'p'
   371  00FE61  6C                 	db	108	;'l'
   372  00FE62  65                 	db	101	;'e'
   373  00FE63  20                 	db	32
   374  00FE64  52                 	db	82	;'R'
   375  00FE65  65                 	db	101	;'e'
   376  00FE66  67                 	db	103	;'g'
   377  00FE67  69                 	db	105	;'i'
   378  00FE68  73                 	db	115	;'s'
   379  00FE69  74                 	db	116	;'t'
   380  00FE6A  65                 	db	101	;'e'
   381  00FE6B  72                 	db	114	;'r'
   382  00FE6C  73                 	db	115	;'s'
   383  00FE6D  20                 	db	32
   384  00FE6E  28                 	db	40
   385  00FE6F  4D                 	db	77	;'M'
   386  00FE70  61                 	db	97	;'a'
   387  00FE71  78                 	db	120	;'x'
   388  00FE72  20                 	db	32
   389  00FE73  33                 	db	51	;'3'
   390  00FE74  32                 	db	50	;'2'
   391  00FE75  78                 	db	120	;'x'
   392  00FE76  20                 	db	32
   393  00FE77  31                 	db	49	;'1'
   394  00FE78  36                 	db	54	;'6'
   395  00FE79  62                 	db	98	;'b'
   396  00FE7A  69                 	db	105	;'i'
   397  00FE7B  74                 	db	116	;'t'
   398  00FE7C  29                 	db	41
   399  00FE7D  0D                 	db	13
   400  00FE7E  0A                 	db	10
   401  00FE7F  0A                 	db	10
   402  00FE80  00                 	db	0
   403  00FE81                     STR_7:
   404                           
   405                           ; BSR set to: 0
   406  00FE81  0D                 	db	13
   407  00FE82  20                 	db	32
   408  00FE83  20                 	db	32
   409  00FE84  20                 	db	32
   410  00FE85  30                 	db	48	;'0'
   411  00FE86  78                 	db	120	;'x'
   412  00FE87  30                 	db	48	;'0'
   413  00FE88  33                 	db	51	;'3'
   414  00FE89  20                 	db	32
   415  00FE8A  2D                 	db	45
   416  00FE8B  20                 	db	32
   417  00FE8C  52                 	db	82	;'R'
   418  00FE8D  65                 	db	101	;'e'
   419  00FE8E  61                 	db	97	;'a'
   420  00FE8F  64                 	db	100	;'d'
   421  00FE90  20                 	db	32
   422  00FE91  4D                 	db	77	;'M'
   423  00FE92  75                 	db	117	;'u'
   424  00FE93  6C                 	db	108	;'l'
   425  00FE94  74                 	db	116	;'t'
   426  00FE95  69                 	db	105	;'i'
   427  00FE96  70                 	db	112	;'p'
   428  00FE97  6C                 	db	108	;'l'
   429  00FE98  65                 	db	101	;'e'
   430  00FE99  20                 	db	32
   431  00FE9A  52                 	db	82	;'R'
   432  00FE9B  65                 	db	101	;'e'
   433  00FE9C  67                 	db	103	;'g'
   434  00FE9D  69                 	db	105	;'i'
   435  00FE9E  73                 	db	115	;'s'
   436  00FE9F  74                 	db	116	;'t'
   437  00FEA0  65                 	db	101	;'e'
   438  00FEA1  72                 	db	114	;'r'
   439  00FEA2  73                 	db	115	;'s'
   440  00FEA3  20                 	db	32
   441  00FEA4  28                 	db	40
   442  00FEA5  4D                 	db	77	;'M'
   443  00FEA6  61                 	db	97	;'a'
   444  00FEA7  78                 	db	120	;'x'
   445  00FEA8  20                 	db	32
   446  00FEA9  33                 	db	51	;'3'
   447  00FEAA  32                 	db	50	;'2'
   448  00FEAB  78                 	db	120	;'x'
   449  00FEAC  20                 	db	32
   450  00FEAD  31                 	db	49	;'1'
   451  00FEAE  36                 	db	54	;'6'
   452  00FEAF  62                 	db	98	;'b'
   453  00FEB0  69                 	db	105	;'i'
   454  00FEB1  74                 	db	116	;'t'
   455  00FEB2  29                 	db	41
   456  00FEB3  0D                 	db	13
   457  00FEB4  0A                 	db	10
   458  00FEB5  00                 	db	0
   459  00FEB6                     STR_3:
   460                           
   461                           ; BSR set to: 0
   462  00FEB6  0D                 	db	13
   463  00FEB7  43                 	db	67	;'C'
   464  00FEB8  6F                 	db	111	;'o'
   465  00FEB9  6D                 	db	109	;'m'
   466  00FEBA  70                 	db	112	;'p'
   467  00FEBB  69                 	db	105	;'i'
   468  00FEBC  6C                 	db	108	;'l'
   469  00FEBD  65                 	db	101	;'e'
   470  00FEBE  64                 	db	100	;'d'
   471  00FEBF  20                 	db	32
   472  00FEC0  6F                 	db	111	;'o'
   473  00FEC1  6E                 	db	110	;'n'
   474  00FEC2  20                 	db	32
   475  00FEC3  25                 	db	37
   476  00FEC4  73                 	db	115	;'s'
   477  00FEC5  20                 	db	32
   478  00FEC6  61                 	db	97	;'a'
   479  00FEC7  74                 	db	116	;'t'
   480  00FEC8  20                 	db	32
   481  00FEC9  25                 	db	37
   482  00FECA  73                 	db	115	;'s'
   483  00FECB  20                 	db	32
   484  00FECC  62                 	db	98	;'b'
   485  00FECD  79                 	db	121	;'y'
   486  00FECE  20                 	db	32
   487  00FECF  58                 	db	88	;'X'
   488  00FED0  43                 	db	67	;'C'
   489  00FED1  38                 	db	56	;'8'
   490  00FED2  20                 	db	32
   491  00FED3  76                 	db	118	;'v'
   492  00FED4  65                 	db	101	;'e'
   493  00FED5  72                 	db	114	;'r'
   494  00FED6  73                 	db	115	;'s'
   495  00FED7  69                 	db	105	;'i'
   496  00FED8  6F                 	db	111	;'o'
   497  00FED9  6E                 	db	110	;'n'
   498  00FEDA  20                 	db	32
   499  00FEDB  25                 	db	37
   500  00FEDC  75                 	db	117	;'u'
   501  00FEDD  0D                 	db	13
   502  00FEDE  0A                 	db	10
   503  00FEDF  0A                 	db	10
   504  00FEE0  00                 	db	0
   505  00FEE1                     STR_15:
   506                           
   507                           ; BSR set to: 0
   508  00FEE1  63                 	db	99	;'c'
   509  00FEE2  72                 	db	114	;'r'
   510  00FEE3  63                 	db	99	;'c'
   511  00FEE4  48                 	db	72	;'H'
   512  00FEE5  69                 	db	105	;'i'
   513  00FEE6  67                 	db	103	;'g'
   514  00FEE7  68                 	db	104	;'h'
   515  00FEE8  3A                 	db	58	;':'
   516  00FEE9  20                 	db	32
   517  00FEEA  30                 	db	48	;'0'
   518  00FEEB  78                 	db	120	;'x'
   519  00FEEC  25                 	db	37
   520  00FEED  30                 	db	48	;'0'
   521  00FEEE  32                 	db	50	;'2'
   522  00FEEF  78                 	db	120	;'x'
   523  00FEF0  20                 	db	32
   524  00FEF1  20                 	db	32
   525  00FEF2  63                 	db	99	;'c'
   526  00FEF3  72                 	db	114	;'r'
   527  00FEF4  63                 	db	99	;'c'
   528  00FEF5  4C                 	db	76	;'L'
   529  00FEF6  6F                 	db	111	;'o'
   530  00FEF7  77                 	db	119	;'w'
   531  00FEF8  3A                 	db	58	;':'
   532  00FEF9  20                 	db	32
   533  00FEFA  30                 	db	48	;'0'
   534  00FEFB  78                 	db	120	;'x'
   535  00FEFC  25                 	db	37
   536  00FEFD  30                 	db	48	;'0'
   537  00FEFE  32                 	db	50	;'2'
   538  00FEFF  78                 	db	120	;'x'
   539  00FF00  20                 	db	32
   540  00FF01  20                 	db	32
   541  00FF02  0D                 	db	13
   542  00FF03  0A                 	db	10
   543  00FF04  00                 	db	0
   544  00FF05                     STR_9:
   545                           
   546                           ; BSR set to: 0
   547  00FF05  0D                 	db	13
   548  00FF06  49                 	db	73	;'I'
   549  00FF07  6E                 	db	110	;'n'
   550  00FF08  69                 	db	105	;'i'
   551  00FF09  74                 	db	116	;'t'
   552  00FF0A  61                 	db	97	;'a'
   553  00FF0B  6C                 	db	108	;'l'
   554  00FF0C  69                 	db	105	;'i'
   555  00FF0D  73                 	db	115	;'s'
   556  00FF0E  61                 	db	97	;'a'
   557  00FF0F  74                 	db	116	;'t'
   558  00FF10  69                 	db	105	;'i'
   559  00FF11  6F                 	db	111	;'o'
   560  00FF12  6E                 	db	110	;'n'
   561  00FF13  20                 	db	32
   562  00FF14  43                 	db	67	;'C'
   563  00FF15  6F                 	db	111	;'o'
   564  00FF16  6D                 	db	109	;'m'
   565  00FF17  70                 	db	112	;'p'
   566  00FF18  6C                 	db	108	;'l'
   567  00FF19  65                 	db	101	;'e'
   568  00FF1A  74                 	db	116	;'t'
   569  00FF1B  65                 	db	101	;'e'
   570  00FF1C  20                 	db	32
   571  00FF1D  2D                 	db	45
   572  00FF1E  20                 	db	32
   573  00FF1F  52                 	db	82	;'R'
   574  00FF20  65                 	db	101	;'e'
   575  00FF21  61                 	db	97	;'a'
   576  00FF22  64                 	db	100	;'d'
   577  00FF23  79                 	db	121	;'y'
   578  00FF24  0D                 	db	13
   579  00FF25  0A                 	db	10
   580  00FF26  0A                 	db	10
   581  00FF27  00                 	db	0
   582  00FF28                     STR_10:
   583                           
   584                           ; BSR set to: 0
   585  00FF28  4D                 	db	77	;'M'
   586  00FF29  6F                 	db	111	;'o'
   587  00FF2A  64                 	db	100	;'d'
   588  00FF2B  62                 	db	98	;'b'
   589  00FF2C  75                 	db	117	;'u'
   590  00FF2D  73                 	db	115	;'s'
   591  00FF2E  20                 	db	32
   592  00FF2F  44                 	db	68	;'D'
   593  00FF30  61                 	db	97	;'a'
   594  00FF31  74                 	db	116	;'t'
   595  00FF32  61                 	db	97	;'a'
   596  00FF33  20                 	db	32
   597  00FF34  43                 	db	67	;'C'
   598  00FF35  61                 	db	97	;'a'
   599  00FF36  70                 	db	112	;'p'
   600  00FF37  74                 	db	116	;'t'
   601  00FF38  75                 	db	117	;'u'
   602  00FF39  72                 	db	114	;'r'
   603  00FF3A  65                 	db	101	;'e'
   604  00FF3B  20                 	db	32
   605  00FF3C  43                 	db	67	;'C'
   606  00FF3D  6F                 	db	111	;'o'
   607  00FF3E  6D                 	db	109	;'m'
   608  00FF3F  70                 	db	112	;'p'
   609  00FF40  6C                 	db	108	;'l'
   610  00FF41  65                 	db	101	;'e'
   611  00FF42  74                 	db	116	;'t'
   612  00FF43  65                 	db	101	;'e'
   613  00FF44  3A                 	db	58	;':'
   614  00FF45  0D                 	db	13
   615  00FF46  0A                 	db	10
   616  00FF47  00                 	db	0
   617  00FF48                     STR_6:
   618                           
   619                           ; BSR set to: 0
   620  00FF48  0D                 	db	13
   621  00FF49  46                 	db	70	;'F'
   622  00FF4A  75                 	db	117	;'u'
   623  00FF4B  6E                 	db	110	;'n'
   624  00FF4C  63                 	db	99	;'c'
   625  00FF4D  74                 	db	116	;'t'
   626  00FF4E  69                 	db	105	;'i'
   627  00FF4F  6F                 	db	111	;'o'
   628  00FF50  6E                 	db	110	;'n'
   629  00FF51  20                 	db	32
   630  00FF52  43                 	db	67	;'C'
   631  00FF53  6F                 	db	111	;'o'
   632  00FF54  64                 	db	100	;'d'
   633  00FF55  65                 	db	101	;'e'
   634  00FF56  73                 	db	115	;'s'
   635  00FF57  20                 	db	32
   636  00FF58  53                 	db	83	;'S'
   637  00FF59  75                 	db	117	;'u'
   638  00FF5A  70                 	db	112	;'p'
   639  00FF5B  70                 	db	112	;'p'
   640  00FF5C  6F                 	db	111	;'o'
   641  00FF5D  72                 	db	114	;'r'
   642  00FF5E  74                 	db	116	;'t'
   643  00FF5F  65                 	db	101	;'e'
   644  00FF60  64                 	db	100	;'d'
   645  00FF61  3A                 	db	58	;':'
   646  00FF62  0D                 	db	13
   647  00FF63  0A                 	db	10
   648  00FF64  00                 	db	0
   649  00FF65                     STR_13:
   650                           
   651                           ; BSR set to: 0
   652  00FF65  46                 	db	70	;'F'
   653  00FF66  75                 	db	117	;'u'
   654  00FF67  6E                 	db	110	;'n'
   655  00FF68  63                 	db	99	;'c'
   656  00FF69  74                 	db	116	;'t'
   657  00FF6A  69                 	db	105	;'i'
   658  00FF6B  6F                 	db	111	;'o'
   659  00FF6C  6E                 	db	110	;'n'
   660  00FF6D  20                 	db	32
   661  00FF6E  43                 	db	67	;'C'
   662  00FF6F  6F                 	db	111	;'o'
   663  00FF70  64                 	db	100	;'d'
   664  00FF71  65                 	db	101	;'e'
   665  00FF72  20                 	db	32
   666  00FF73  69                 	db	105	;'i'
   667  00FF74  73                 	db	115	;'s'
   668  00FF75  3A                 	db	58	;':'
   669  00FF76  20                 	db	32
   670  00FF77  30                 	db	48	;'0'
   671  00FF78  78                 	db	120	;'x'
   672  00FF79  25                 	db	37
   673  00FF7A  30                 	db	48	;'0'
   674  00FF7B  32                 	db	50	;'2'
   675  00FF7C  78                 	db	120	;'x'
   676  00FF7D  20                 	db	32
   677  00FF7E  0D                 	db	13
   678  00FF7F  0A                 	db	10
   679  00FF80  00                 	db	0
   680  00FF81                     STR_17:
   681                           
   682                           ; BSR set to: 0
   683  00FF81  43                 	db	67	;'C'
   684  00FF82  52                 	db	82	;'R'
   685  00FF83  43                 	db	67	;'C'
   686  00FF84  20                 	db	32
   687  00FF85  64                 	db	100	;'d'
   688  00FF86  69                 	db	105	;'i'
   689  00FF87  64                 	db	100	;'d'
   690  00FF88  20                 	db	32
   691  00FF89  4E                 	db	78	;'N'
   692  00FF8A  4F                 	db	79	;'O'
   693  00FF8B  54                 	db	84	;'T'
   694  00FF8C  20                 	db	32
   695  00FF8D  63                 	db	99	;'c'
   696  00FF8E  68                 	db	104	;'h'
   697  00FF8F  65                 	db	101	;'e'
   698  00FF90  63                 	db	99	;'c'
   699  00FF91  6B                 	db	107	;'k'
   700  00FF92  20                 	db	32
   701  00FF93  6F                 	db	111	;'o'
   702  00FF94  75                 	db	117	;'u'
   703  00FF95  74                 	db	116	;'t'
   704  00FF96  2E                 	db	46
   705  00FF97  20                 	db	32
   706  00FF98  0D                 	db	13
   707  00FF99  0A                 	db	10
   708  00FF9A  0A                 	db	10
   709  00FF9B  00                 	db	0
   710  00FF9C                     STR_2:
   711                           
   712                           ; BSR set to: 0
   713  00FF9C  0D                 	db	13
   714  00FF9D  43                 	db	67	;'C'
   715  00FF9E  61                 	db	97	;'a'
   716  00FF9F  72                 	db	114	;'r'
   717  00FFA0  64                 	db	100	;'d'
   718  00FFA1  20                 	db	32
   719  00FFA2  53                 	db	83	;'S'
   720  00FFA3  65                 	db	101	;'e'
   721  00FFA4  72                 	db	114	;'r'
   722  00FFA5  20                 	db	32
   723  00FFA6  4E                 	db	78	;'N'
   724  00FFA7  6F                 	db	111	;'o'
   725  00FFA8  2E                 	db	46
   726  00FFA9  20                 	db	32
   727  00FFAA  78                 	db	120	;'x'
   728  00FFAB  78                 	db	120	;'x'
   729  00FFAC  78                 	db	120	;'x'
   730  00FFAD  78                 	db	120	;'x'
   731  00FFAE  78                 	db	120	;'x'
   732  00FFAF  78                 	db	120	;'x'
   733  00FFB0  78                 	db	120	;'x'
   734  00FFB1  20                 	db	32
   735  00FFB2  0D                 	db	13
   736  00FFB3  0A                 	db	10
   737  00FFB4  00                 	db	0
   738  00FFB5                     STR_11:
   739                           
   740                           ; BSR set to: 0
   741  00FFB5  20                 	db	32
   742  00FFB6  20                 	db	32
   743  00FFB7  20                 	db	32
   744  00FFB8  42                 	db	66	;'B'
   745  00FFB9  79                 	db	121	;'y'
   746  00FFBA  74                 	db	116	;'t'
   747  00FFBB  65                 	db	101	;'e'
   748  00FFBC  20                 	db	32
   749  00FFBD  25                 	db	37
   750  00FFBE  69                 	db	105	;'i'
   751  00FFBF  20                 	db	32
   752  00FFC0  3A                 	db	58	;':'
   753  00FFC1  20                 	db	32
   754  00FFC2  30                 	db	48	;'0'
   755  00FFC3  78                 	db	120	;'x'
   756  00FFC4  25                 	db	37
   757  00FFC5  30                 	db	48	;'0'
   758  00FFC6  32                 	db	50	;'2'
   759  00FFC7  78                 	db	120	;'x'
   760  00FFC8  20                 	db	32
   761  00FFC9  0D                 	db	13
   762  00FFCA  0A                 	db	10
   763  00FFCB  00                 	db	0
   764  00FFCC                     STR_16:
   765                           
   766                           ; BSR set to: 0
   767  00FFCC  43                 	db	67	;'C'
   768  00FFCD  52                 	db	82	;'R'
   769  00FFCE  43                 	db	67	;'C'
   770  00FFCF  20                 	db	32
   771  00FFD0  43                 	db	67	;'C'
   772  00FFD1  68                 	db	104	;'h'
   773  00FFD2  65                 	db	101	;'e'
   774  00FFD3  63                 	db	99	;'c'
   775  00FFD4  6B                 	db	107	;'k'
   776  00FFD5  65                 	db	101	;'e'
   777  00FFD6  64                 	db	100	;'d'
   778  00FFD7  20                 	db	32
   779  00FFD8  4F                 	db	79	;'O'
   780  00FFD9  75                 	db	117	;'u'
   781  00FFDA  74                 	db	116	;'t'
   782  00FFDB  2E                 	db	46
   783  00FFDC  20                 	db	32
   784  00FFDD  0D                 	db	13
   785  00FFDE  0A                 	db	10
   786  00FFDF  0A                 	db	10
   787  00FFE0  00                 	db	0
   788  00FFE1                     STR_4:
   789                           
   790                           ; BSR set to: 0
   791  00FFE1  4D                 	db	77	;'M'
   792  00FFE2  61                 	db	97	;'a'
   793  00FFE3  72                 	db	114	;'r'
   794  00FFE4  20                 	db	32
   795  00FFE5  20                 	db	32
   796  00FFE6  36                 	db	54	;'6'
   797  00FFE7  20                 	db	32
   798  00FFE8  32                 	db	50	;'2'
   799  00FFE9  30                 	db	48	;'0'
   800  00FFEA  32                 	db	50	;'2'
   801  00FFEB  31                 	db	49	;'1'
   802  00FFEC  00                 	db	0
   803  00FFED                     STR_5:
   804                           
   805                           ; BSR set to: 0
   806  00FFED  31                 	db	49	;'1'
   807  00FFEE  33                 	db	51	;'3'
   808  00FFEF  3A                 	db	58	;':'
   809  00FFF0  33                 	db	51	;'3'
   810  00FFF1  31                 	db	49	;'1'
   811  00FFF2  3A                 	db	58	;':'
   812  00FFF3  30                 	db	48	;'0'
   813  00FFF4  32                 	db	50	;'2'
   814  00FFF5  00                 	db	0
   815  00FFF6                     
   816                           ; BSR set to: 0
   817  00FFF6  43                 	db	67	;'C'
   818  00FFF7  52                 	db	82	;'R'
   819  00FFF8  43                 	db	67	;'C'
   820  00FFF9  3A                 	db	58	;':'
   821  00FFFA  20                 	db	32
   822  00FFFB  25                 	db	37
   823  00FFFC  69                 	db	105	;'i'
   824  00FFFD  00                 	db	0
   825  0000                     
   826                           ; #config settings
   827  00FFFE  00                 	db	0	; dummy byte at the end
   828  0000                     
   829                           	psect	cinit
   830  0021A4                     __pcinit:
   831                           	opt callstack 0
   832  0021A4                     start_initialization:
   833                           	opt callstack 0
   834  0021A4                     __initialization:
   835                           	opt callstack 0
   836                           
   837                           ; Initialize objects allocated to BANK0 (20 bytes)
   838                           ; load TBLPTR registers with __pidataBANK0
   839  0021A4  0E4A               	movlw	low __pidataBANK0
   840  0021A6  6EF6               	movwf	tblptrl,c
   841  0021A8  0E26               	movlw	high __pidataBANK0
   842  0021AA  6EF7               	movwf	tblptrh,c
   843  0021AC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   844  0021AE  6EF8               	movwf	tblptru,c
   845  0021B0  EE00  F0E3         	lfsr	0,__pdataBANK0
   846  0021B4  EE10 F014          	lfsr	1,20
   847  0021B8                     copy_data0:
   848  0021B8  0009               	tblrd		*+
   849  0021BA  CFF5 FFEE          	movff	tablat,postinc0
   850  0021BE  50E5               	movf	postdec1,w,c
   851  0021C0  50E1               	movf	fsr1l,w,c
   852  0021C2  E1FA               	bnz	copy_data0
   853                           
   854                           ; Clear objects allocated to BANK2 (200 bytes)
   855  0021C4  EE02  F000         	lfsr	0,__pbssBANK2
   856  0021C8  0EC8               	movlw	200
   857  0021CA                     clear_0:
   858  0021CA  6AEE               	clrf	postinc0,c
   859  0021CC  06E8               	decf	wreg,f,c
   860  0021CE  E1FD               	bnz	clear_0
   861                           
   862                           ; Clear objects allocated to BANK1 (232 bytes)
   863  0021D0  EE01  F000         	lfsr	0,__pbssBANK1
   864  0021D4  0EE8               	movlw	232
   865  0021D6                     clear_1:
   866  0021D6  6AEE               	clrf	postinc0,c
   867  0021D8  06E8               	decf	wreg,f,c
   868  0021DA  E1FD               	bnz	clear_1
   869                           
   870                           ; Clear objects allocated to BANK0 (63 bytes)
   871  0021DC  EE00  F060         	lfsr	0,__pbssBANK0
   872  0021E0  0E3F               	movlw	63
   873  0021E2                     clear_2:
   874  0021E2  6AEE               	clrf	postinc0,c
   875  0021E4  06E8               	decf	wreg,f,c
   876  0021E6  E1FD               	bnz	clear_2
   877                           
   878                           ; Clear objects allocated to COMRAM (4 bytes)
   879  0021E8  6A59               	clrf	(__pbssCOMRAM+3)& (0+255),c
   880  0021EA  6A58               	clrf	(__pbssCOMRAM+2)& (0+255),c
   881  0021EC  6A57               	clrf	(__pbssCOMRAM+1)& (0+255),c
   882  0021EE  6A56               	clrf	__pbssCOMRAM& (0+255),c
   883  0021F0                     end_of_initialization:
   884                           	opt callstack 0
   885  0021F0                     __end_of__initialization:
   886                           	opt callstack 0
   887  0021F0  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   888  0021F2  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   889  0021F4  0100               	movlb	0
   890  0021F6  EF79  F00E         	goto	_main	;jump to C main() function
   891                           
   892                           	psect	bssCOMRAM
   893  000056                     __pbssCOMRAM:
   894                           	opt callstack 0
   895  000056                     _flags:
   896                           	opt callstack 0
   897  000056                     	ds	2
   898  000058                     _eusart1RxHead:
   899                           	opt callstack 0
   900  000058                     	ds	1
   901  000059                     _eusart2RxHead:
   902                           	opt callstack 0
   903  000059                     	ds	1
   904                           
   905                           	psect	bssBANK0
   906  000060                     __pbssBANK0:
   907                           	opt callstack 0
   908  000060                     _eusart1TxBuffer:
   909                           	opt callstack 0
   910  000060                     	ds	16
   911  000070                     _eusart2RxStatusBuffer:
   912                           	opt callstack 0
   913  000070                     	ds	8
   914  000078                     _eusart2RxBuffer:
   915                           	opt callstack 0
   916  000078                     	ds	8
   917  000080                     _eusart2TxBuffer:
   918                           	opt callstack 0
   919  000080                     	ds	8
   920  000088                     _nout:
   921                           	opt callstack 0
   922  000088                     	ds	2
   923  00008A                     _width:
   924                           	opt callstack 0
   925  00008A                     	ds	2
   926  00008C                     _prec:
   927                           	opt callstack 0
   928  00008C                     	ds	2
   929  00008E                     _ByteNum:
   930                           	opt callstack 0
   931  00008E                     	ds	2
   932  000090                     _ModDataCnt:
   933                           	opt callstack 0
   934  000090                     	ds	2
   935  000092                     _rxStatus:
   936                           	opt callstack 0
   937  000092                     	ds	1
   938  000093                     _RXStat:
   939                           	opt callstack 0
   940  000093                     	ds	1
   941  000094                     _Debug:
   942                           	opt callstack 0
   943  000094                     	ds	1
   944  000095                     _eusart1RxLastError:
   945                           	opt callstack 0
   946  000095                     	ds	1
   947  000096                     _eusart1RxCount:
   948                           	opt callstack 0
   949  000096                     	ds	1
   950  000097                     _eusart1RxTail:
   951                           	opt callstack 0
   952  000097                     	ds	1
   953  000098                     _eusart1TxTail:
   954                           	opt callstack 0
   955  000098                     	ds	1
   956  000099                     _eusart1TxHead:
   957                           	opt callstack 0
   958  000099                     	ds	1
   959  00009A                     _eusart2RxLastError:
   960                           	opt callstack 0
   961  00009A                     	ds	1
   962  00009B                     _eusart2RxCount:
   963                           	opt callstack 0
   964  00009B                     	ds	1
   965  00009C                     _eusart2RxTail:
   966                           	opt callstack 0
   967  00009C                     	ds	1
   968  00009D                     _eusart2TxTail:
   969                           	opt callstack 0
   970  00009D                     	ds	1
   971  00009E                     _eusart2TxHead:
   972                           	opt callstack 0
   973  00009E                     	ds	1
   974                           
   975                           	psect	dataBANK0
   976  0000E3                     __pdataBANK0:
   977                           	opt callstack 0
   978  0000E3                     stoa@F1139:
   979                           	opt callstack 0
   980  0000E3                     	ds	7
   981  0000EA                     _ExpectedBytes:
   982                           	opt callstack 0
   983  0000EA                     	ds	2
   984  0000EC                     _MBRespon:
   985                           	opt callstack 0
   986  0000EC                     	ds	11
   987                           
   988                           	psect	bssBANK1
   989  000100                     __pbssBANK1:
   990                           	opt callstack 0
   991  000100                     _ModbusData:
   992                           	opt callstack 0
   993  000100                     	ds	100
   994  000164                     _eusart1RxStatusBuffer:
   995                           	opt callstack 0
   996  000164                     	ds	100
   997  0001C8                     _dbuf:
   998                           	opt callstack 0
   999  0001C8                     	ds	32
  1000                           
  1001                           	psect	bssBANK2
  1002  000200                     __pbssBANK2:
  1003                           	opt callstack 0
  1004  000200                     _rxData:
  1005                           	opt callstack 0
  1006  000200                     	ds	100
  1007  000264                     _eusart1RxBuffer:
  1008                           	opt callstack 0
  1009  000264                     	ds	100
  1010                           
  1011                           	psect	cstackBANK1
  1012  0001E8                     __pcstackBANK1:
  1013                           	opt callstack 0
  1014  0001E8                     checkCRC@crcHigh:
  1015                           	opt callstack 0
  1016                           
  1017                           ; 2 bytes @ 0x0
  1018  0001E8                     	ds	2
  1019  0001EA                     checkCRC@crcLow:
  1020                           	opt callstack 0
  1021                           
  1022                           ; 2 bytes @ 0x2
  1023  0001EA                     	ds	2
  1024  0001EC                     checkCRC@j:
  1025                           	opt callstack 0
  1026                           
  1027                           ; 2 bytes @ 0x4
  1028  0001EC                     	ds	2
  1029  0001EE                     checkCRC@crc:
  1030                           	opt callstack 0
  1031                           
  1032                           ; 2 bytes @ 0x6
  1033  0001EE                     	ds	2
  1034  0001F0                     checkCRC@i:
  1035                           	opt callstack 0
  1036                           
  1037                           ; 2 bytes @ 0x8
  1038  0001F0                     	ds	2
  1039                           
  1040                           	psect	cstackBANK0
  1041  00009F                     __pcstackBANK0:
  1042                           	opt callstack 0
  1043  00009F                     vfpfcnvrt@ll:
  1044                           	opt callstack 0
  1045                           
  1046                           ; 8 bytes @ 0x0
  1047  00009F                     	ds	8
  1048  0000A7                     vfpfcnvrt@cp:
  1049                           	opt callstack 0
  1050                           
  1051                           ; 2 bytes @ 0x8
  1052  0000A7                     	ds	2
  1053  0000A9                     vfpfcnvrt@c:
  1054                           	opt callstack 0
  1055                           
  1056                           ; 1 bytes @ 0xA
  1057  0000A9                     	ds	1
  1058  0000AA                     vfpfcnvrt@done:
  1059                           	opt callstack 0
  1060                           
  1061                           ; 2 bytes @ 0xB
  1062  0000AA                     	ds	2
  1063  0000AC                     _vfpfcnvrt$1334:
  1064                           	opt callstack 0
  1065                           
  1066                           ; 2 bytes @ 0xD
  1067  0000AC                     	ds	2
  1068  0000AE                     vfpfcnvrt@llu:
  1069                           	opt callstack 0
  1070                           
  1071                           ; 8 bytes @ 0xF
  1072  0000AE                     	ds	8
  1073  0000B6                     ?_vfprintf:
  1074                           	opt callstack 0
  1075  0000B6                     vfprintf@fp:
  1076                           	opt callstack 0
  1077                           
  1078                           ; 2 bytes @ 0x17
  1079  0000B6                     	ds	2
  1080  0000B8                     vfprintf@fmt:
  1081                           	opt callstack 0
  1082                           
  1083                           ; 2 bytes @ 0x19
  1084  0000B8                     	ds	2
  1085  0000BA                     vfprintf@ap:
  1086                           	opt callstack 0
  1087                           
  1088                           ; 2 bytes @ 0x1B
  1089  0000BA                     	ds	2
  1090  0000BC                     ?_printf:
  1091                           	opt callstack 0
  1092  0000BC                     printf@fmt:
  1093                           	opt callstack 0
  1094                           
  1095                           ; 2 bytes @ 0x1D
  1096  0000BC                     	ds	10
  1097  0000C6                     printf@ap:
  1098                           	opt callstack 0
  1099                           
  1100                           ; 2 bytes @ 0x27
  1101  0000C6                     	ds	2
  1102  0000C8                     ??_checkCRC:
  1103  0000C8                     PrintModbus@i:
  1104                           	opt callstack 0
  1105                           
  1106                           ; 2 bytes @ 0x29
  1107  0000C8                     	ds	5
  1108                           
  1109                           	psect	cstackCOMRAM
  1110  000001                     __pcstackCOMRAM:
  1111                           	opt callstack 0
  1112  000001                     ??_INTERRUPT_InterruptManager:
  1113  000001                     
  1114                           ; 1 bytes @ 0x0
  1115  000001                     	ds	4
  1116  000005                     ??_ClearRxBuff:
  1117  000005                     ??_AddRxBuffToModBus:
  1118  000005                     ?_strlen:
  1119                           	opt callstack 0
  1120  000005                     ?_isupper:
  1121                           	opt callstack 0
  1122  000005                     ?_isalpha:
  1123                           	opt callstack 0
  1124  000005                     ?_isdigit:
  1125                           	opt callstack 0
  1126  000005                     ?_isspace:
  1127                           	opt callstack 0
  1128  000005                     ?_islower:
  1129                           	opt callstack 0
  1130  000005                     ?___wmul:
  1131                           	opt callstack 0
  1132  000005                     ?___aodiv:
  1133                           	opt callstack 0
  1134  000005                     ?___aomod:
  1135                           	opt callstack 0
  1136  000005                     ?___lodiv:
  1137                           	opt callstack 0
  1138  000005                     ?___lomod:
  1139                           	opt callstack 0
  1140  000005                     EUSART2_Write@txData:
  1141                           	opt callstack 0
  1142  000005                     EUSART1_Read@readValue:
  1143                           	opt callstack 0
  1144  000005                     EUSART1_Write@txData:
  1145                           	opt callstack 0
  1146  000005                     EUSART2_SetFramingErrorHandler@interruptHandler:
  1147                           	opt callstack 0
  1148  000005                     EUSART2_SetOverrunErrorHandler@interruptHandler:
  1149                           	opt callstack 0
  1150  000005                     EUSART2_SetErrorHandler@interruptHandler:
  1151                           	opt callstack 0
  1152  000005                     EUSART2_SetTxInterruptHandler@interruptHandler:
  1153                           	opt callstack 0
  1154  000005                     EUSART2_SetRxInterruptHandler@interruptHandler:
  1155                           	opt callstack 0
  1156  000005                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1157                           	opt callstack 0
  1158  000005                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1159                           	opt callstack 0
  1160  000005                     EUSART1_SetErrorHandler@interruptHandler:
  1161                           	opt callstack 0
  1162  000005                     EUSART1_SetTxInterruptHandler@interruptHandler:
  1163                           	opt callstack 0
  1164  000005                     EUSART1_SetRxInterruptHandler@interruptHandler:
  1165                           	opt callstack 0
  1166  000005                     ClearModbusData@i:
  1167                           	opt callstack 0
  1168  000005                     ___wmul@multiplier:
  1169                           	opt callstack 0
  1170  000005                     isalpha@c:
  1171                           	opt callstack 0
  1172  000005                     isdigit@c:
  1173                           	opt callstack 0
  1174  000005                     isspace@c:
  1175                           	opt callstack 0
  1176  000005                     isupper@c:
  1177                           	opt callstack 0
  1178  000005                     strlen@s:
  1179                           	opt callstack 0
  1180  000005                     islower@c:
  1181                           	opt callstack 0
  1182  000005                     ___aodiv@dividend:
  1183                           	opt callstack 0
  1184  000005                     ___aomod@dividend:
  1185                           	opt callstack 0
  1186  000005                     ___lodiv@dividend:
  1187                           	opt callstack 0
  1188  000005                     ___lomod@dividend:
  1189                           	opt callstack 0
  1190                           
  1191                           ; 8 bytes @ 0x4
  1192  000005                     	ds	1
  1193  000006                     putch@txData:
  1194                           	opt callstack 0
  1195  000006                     UART1_Write_string@data:
  1196                           	opt callstack 0
  1197  000006                     ClearRxBuff@i:
  1198                           	opt callstack 0
  1199  000006                     AddRxBuffToModBus@i:
  1200                           	opt callstack 0
  1201                           
  1202                           ; 2 bytes @ 0x5
  1203  000006                     	ds	1
  1204  000007                     ??_isupper:
  1205  000007                     ??_isalpha:
  1206  000007                     ??_isdigit:
  1207  000007                     ??_isspace:
  1208  000007                     ??_islower:
  1209  000007                     ___wmul@multiplicand:
  1210                           	opt callstack 0
  1211  000007                     fputc@c:
  1212                           	opt callstack 0
  1213  000007                     strlen@a:
  1214                           	opt callstack 0
  1215                           
  1216                           ; 2 bytes @ 0x6
  1217  000007                     	ds	1
  1218  000008                     UART1_Write_string@data_len:
  1219                           	opt callstack 0
  1220                           
  1221                           ; 2 bytes @ 0x7
  1222  000008                     	ds	1
  1223  000009                     ___wmul@product:
  1224                           	opt callstack 0
  1225  000009                     fputc@fp:
  1226                           	opt callstack 0
  1227                           
  1228                           ; 2 bytes @ 0x8
  1229  000009                     	ds	1
  1230  00000A                     ??_UART1_Write_string:
  1231                           
  1232                           ; 1 bytes @ 0x9
  1233  00000A                     	ds	1
  1234  00000B                     ??_fputc:
  1235  00000B                     ?_toupper:
  1236                           	opt callstack 0
  1237  00000B                     _isspace$1821:
  1238                           	opt callstack 0
  1239  00000B                     UART1_Write_string@i:
  1240                           	opt callstack 0
  1241  00000B                     toupper@c:
  1242                           	opt callstack 0
  1243                           
  1244                           ; 2 bytes @ 0xA
  1245  00000B                     	ds	1
  1246  00000C                     ?_atoi:
  1247                           	opt callstack 0
  1248  00000C                     atoi@s:
  1249                           	opt callstack 0
  1250                           
  1251                           ; 2 bytes @ 0xB
  1252  00000C                     	ds	1
  1253  00000D                     ??_toupper:
  1254  00000D                     ___aodiv@divisor:
  1255                           	opt callstack 0
  1256  00000D                     ___aomod@divisor:
  1257                           	opt callstack 0
  1258  00000D                     ___lodiv@divisor:
  1259                           	opt callstack 0
  1260  00000D                     ___lomod@divisor:
  1261                           	opt callstack 0
  1262                           
  1263                           ; 8 bytes @ 0xC
  1264  00000D                     	ds	1
  1265  00000E                     ??_atoi:
  1266                           
  1267                           ; 1 bytes @ 0xD
  1268  00000E                     	ds	2
  1269  000010                     ?_stoa:
  1270                           	opt callstack 0
  1271  000010                     stoa@fp:
  1272                           	opt callstack 0
  1273  000010                     fputs@s:
  1274                           	opt callstack 0
  1275                           
  1276                           ; 2 bytes @ 0xF
  1277  000010                     	ds	1
  1278  000011                     _toupper$1885:
  1279                           	opt callstack 0
  1280                           
  1281                           ; 2 bytes @ 0x10
  1282  000011                     	ds	1
  1283  000012                     stoa@s:
  1284                           	opt callstack 0
  1285  000012                     atoi@neg:
  1286                           	opt callstack 0
  1287  000012                     fputs@fp:
  1288                           	opt callstack 0
  1289                           
  1290                           ; 2 bytes @ 0x11
  1291  000012                     	ds	2
  1292  000014                     ??_stoa:
  1293  000014                     fputs@c:
  1294                           	opt callstack 0
  1295  000014                     _atoi$1794:
  1296                           	opt callstack 0
  1297                           
  1298                           ; 2 bytes @ 0x13
  1299  000014                     	ds	1
  1300  000015                     ___aodiv@counter:
  1301                           	opt callstack 0
  1302  000015                     ___aomod@counter:
  1303                           	opt callstack 0
  1304  000015                     ___lomod@counter:
  1305                           	opt callstack 0
  1306  000015                     fputs@i:
  1307                           	opt callstack 0
  1308  000015                     stoa@nuls:
  1309                           	opt callstack 0
  1310  000015                     ___lodiv@quotient:
  1311                           	opt callstack 0
  1312                           
  1313                           ; 8 bytes @ 0x14
  1314  000015                     	ds	1
  1315  000016                     ___aodiv@sign:
  1316                           	opt callstack 0
  1317  000016                     ___aomod@sign:
  1318                           	opt callstack 0
  1319  000016                     _atoi$1796:
  1320                           	opt callstack 0
  1321                           
  1322                           ; 2 bytes @ 0x15
  1323  000016                     	ds	1
  1324  000017                     ?_abs:
  1325                           	opt callstack 0
  1326  000017                     ?_pad:
  1327                           	opt callstack 0
  1328  000017                     pad@fp:
  1329                           	opt callstack 0
  1330  000017                     abs@a:
  1331                           	opt callstack 0
  1332  000017                     ___aodiv@quotient:
  1333                           	opt callstack 0
  1334                           
  1335                           ; 8 bytes @ 0x16
  1336  000017                     	ds	1
  1337  000018                     _atoi$1795:
  1338                           	opt callstack 0
  1339                           
  1340                           ; 1 bytes @ 0x17
  1341  000018                     	ds	1
  1342  000019                     ??_abs:
  1343  000019                     pad@buf:
  1344                           	opt callstack 0
  1345  000019                     atoi@n:
  1346                           	opt callstack 0
  1347                           
  1348                           ; 2 bytes @ 0x18
  1349  000019                     	ds	2
  1350  00001B                     pad@p:
  1351                           	opt callstack 0
  1352                           
  1353                           ; 2 bytes @ 0x1A
  1354  00001B                     	ds	1
  1355  00001C                     stoa@i:
  1356                           	opt callstack 0
  1357                           
  1358                           ; 2 bytes @ 0x1B
  1359  00001C                     	ds	1
  1360  00001D                     ??_pad:
  1361  00001D                     ___lodiv@counter:
  1362                           	opt callstack 0
  1363                           
  1364                           ; 1 bytes @ 0x1C
  1365  00001D                     	ds	1
  1366  00001E                     pad@i:
  1367                           	opt callstack 0
  1368  00001E                     stoa@w:
  1369                           	opt callstack 0
  1370                           
  1371                           ; 2 bytes @ 0x1D
  1372  00001E                     	ds	2
  1373  000020                     pad@w:
  1374                           	opt callstack 0
  1375  000020                     stoa@cp:
  1376                           	opt callstack 0
  1377                           
  1378                           ; 2 bytes @ 0x1F
  1379  000020                     	ds	2
  1380  000022                     ?_dtoa:
  1381                           	opt callstack 0
  1382  000022                     ?_utoa:
  1383                           	opt callstack 0
  1384  000022                     ?_xtoa:
  1385                           	opt callstack 0
  1386  000022                     dtoa@fp:
  1387                           	opt callstack 0
  1388  000022                     stoa@p:
  1389                           	opt callstack 0
  1390  000022                     utoa@fp:
  1391                           	opt callstack 0
  1392  000022                     xtoa@fp:
  1393                           	opt callstack 0
  1394                           
  1395                           ; 2 bytes @ 0x21
  1396  000022                     	ds	2
  1397  000024                     stoa@l:
  1398                           	opt callstack 0
  1399  000024                     dtoa@d:
  1400                           	opt callstack 0
  1401  000024                     utoa@d:
  1402                           	opt callstack 0
  1403  000024                     xtoa@d:
  1404                           	opt callstack 0
  1405                           
  1406                           ; 8 bytes @ 0x23
  1407  000024                     	ds	8
  1408  00002C                     ??_dtoa:
  1409  00002C                     ??_utoa:
  1410  00002C                     xtoa@x:
  1411                           	opt callstack 0
  1412                           
  1413                           ; 1 bytes @ 0x2B
  1414  00002C                     	ds	1
  1415  00002D                     ??_xtoa:
  1416                           
  1417                           ; 1 bytes @ 0x2C
  1418  00002D                     	ds	7
  1419  000034                     _dtoa$1290:
  1420                           	opt callstack 0
  1421  000034                     utoa@p:
  1422                           	opt callstack 0
  1423                           
  1424                           ; 2 bytes @ 0x33
  1425  000034                     	ds	1
  1426  000035                     _xtoa$1319:
  1427                           	opt callstack 0
  1428                           
  1429                           ; 2 bytes @ 0x34
  1430  000035                     	ds	1
  1431  000036                     dtoa@p:
  1432                           	opt callstack 0
  1433  000036                     utoa@w:
  1434                           	opt callstack 0
  1435                           
  1436                           ; 2 bytes @ 0x35
  1437  000036                     	ds	1
  1438  000037                     _xtoa$1320:
  1439                           	opt callstack 0
  1440                           
  1441                           ; 2 bytes @ 0x36
  1442  000037                     	ds	1
  1443  000038                     dtoa@w:
  1444                           	opt callstack 0
  1445  000038                     utoa@n:
  1446                           	opt callstack 0
  1447                           
  1448                           ; 8 bytes @ 0x37
  1449  000038                     	ds	1
  1450  000039                     xtoa@p:
  1451                           	opt callstack 0
  1452                           
  1453                           ; 2 bytes @ 0x38
  1454  000039                     	ds	1
  1455  00003A                     dtoa@s:
  1456                           	opt callstack 0
  1457                           
  1458                           ; 2 bytes @ 0x39
  1459  00003A                     	ds	1
  1460  00003B                     xtoa@w:
  1461                           	opt callstack 0
  1462                           
  1463                           ; 2 bytes @ 0x3A
  1464  00003B                     	ds	1
  1465  00003C                     dtoa@n:
  1466                           	opt callstack 0
  1467                           
  1468                           ; 8 bytes @ 0x3B
  1469  00003C                     	ds	1
  1470  00003D                     xtoa@n:
  1471                           	opt callstack 0
  1472                           
  1473                           ; 8 bytes @ 0x3C
  1474  00003D                     	ds	3
  1475  000040                     utoa@i:
  1476                           	opt callstack 0
  1477                           
  1478                           ; 2 bytes @ 0x3F
  1479  000040                     	ds	4
  1480  000044                     dtoa@i:
  1481                           	opt callstack 0
  1482                           
  1483                           ; 2 bytes @ 0x43
  1484  000044                     	ds	1
  1485  000045                     xtoa@i:
  1486                           	opt callstack 0
  1487                           
  1488                           ; 2 bytes @ 0x44
  1489  000045                     	ds	2
  1490  000047                     xtoa@c:
  1491                           	opt callstack 0
  1492                           
  1493                           ; 2 bytes @ 0x46
  1494  000047                     	ds	2
  1495  000049                     ?_vfpfcnvrt:
  1496                           	opt callstack 0
  1497  000049                     vfpfcnvrt@fp:
  1498                           	opt callstack 0
  1499                           
  1500                           ; 2 bytes @ 0x48
  1501  000049                     	ds	2
  1502  00004B                     vfpfcnvrt@fmt:
  1503                           	opt callstack 0
  1504                           
  1505                           ; 2 bytes @ 0x4A
  1506  00004B                     	ds	2
  1507  00004D                     vfpfcnvrt@ap:
  1508                           	opt callstack 0
  1509                           
  1510                           ; 2 bytes @ 0x4C
  1511  00004D                     	ds	2
  1512  00004F                     ??_vfpfcnvrt:
  1513                           
  1514                           ; 1 bytes @ 0x4E
  1515  00004F                     	ds	4
  1516  000053                     vfprintf@cfmt:
  1517                           	opt callstack 0
  1518                           
  1519                           ; 2 bytes @ 0x52
  1520  000053                     	ds	2
  1521  000055                     ??_ModbusRx:
  1522  000055                     ??_PrintModbus:
  1523                           
  1524                           ; 1 bytes @ 0x54
  1525  000055                     	ds	1
  1526  000056                     
  1527                           ; 1 bytes @ 0x55
  1528 ;;
  1529 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1530 ;;
  1531 ;; *************** function _main *****************
  1532 ;; Defined at:
  1533 ;;		line 78 in file "main.c"
  1534 ;; Parameters:    Size  Location     Type
  1535 ;;		None
  1536 ;; Auto vars:     Size  Location     Type
  1537 ;;  RXStat          1    0        _Bool 
  1538 ;; Return value:  Size  Location     Type
  1539 ;;                  1    wreg      void 
  1540 ;; Registers used:
  1541 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1542 ;; Tracked objects:
  1543 ;;		On entry : 0/0
  1544 ;;		On exit  : 0/0
  1545 ;;		Unchanged: 0/0
  1546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1548 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1550 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1551 ;;Total ram usage:        1 bytes
  1552 ;; Hardware stack levels required when called:   15
  1553 ;; This function calls:
  1554 ;;		_ClearModbusData
  1555 ;;		_ClearRxBuff
  1556 ;;		_InitialiseString
  1557 ;;		_ModbusRx
  1558 ;;		_PrintModbus
  1559 ;;		_RXMode
  1560 ;;		_SYSTEM_Initialize
  1561 ;;		_UART1_Write_string
  1562 ;;		_printf
  1563 ;; This function is called by:
  1564 ;;		Startup code after reset
  1565 ;; This function uses a non-reentrant model
  1566 ;;
  1567                           
  1568                           	psect	text0
  1569  001CF2                     __ptext0:
  1570                           	opt callstack 0
  1571  001CF2                     _main:
  1572                           	opt callstack 16
  1573  001CF2                     
  1574                           ;main.c: 81:     SYSTEM_Initialize();
  1575  001CF2  ECF4  F012         	call	_SYSTEM_Initialize	;wreg free
  1576  001CF6                     
  1577                           ;main.c: 88:     (INTCONbits.GIE = 1);
  1578  001CF6  8EF2               	bsf	242,7,c	;volatile
  1579  001CF8                     
  1580                           ;main.c: 94:     (INTCONbits.PEIE = 1);
  1581  001CF8  8CF2               	bsf	242,6,c	;volatile
  1582  001CFA  9883               	bcf	131,4,c	;volatile
  1583  001CFC  9A83               	bcf	131,5,c	;volatile
  1584  001CFE  9C83               	bcf	131,6,c	;volatile
  1585  001D00  9E83               	bcf	131,7,c	;volatile
  1586  001D02                     
  1587                           ;main.c: 104:     InitialiseString();
  1588  001D02  EC36  F00F         	call	_InitialiseString	;wreg free
  1589  001D06                     
  1590                           ;main.c: 107:     RXMode();
  1591  001D06  EC77  F013         	call	_RXMode	;wreg free
  1592  001D0A                     
  1593                           ;main.c: 108:     ClearRxBuff();
  1594  001D0A  EC74  F011         	call	_ClearRxBuff	;wreg free
  1595  001D0E                     l5206:
  1596                           
  1597                           ;main.c: 113:     {;main.c: 114:         if(ModbusRx() == 1){
  1598  001D0E  EC01  F00B         	call	_ModbusRx	;wreg free
  1599  001D12  06E8               	decf	wreg,f,c
  1600  001D14  A4D8               	btfss	status,2,c
  1601  001D16  EF8F  F00E         	goto	u5411
  1602  001D1A  EF91  F00E         	goto	u5410
  1603  001D1E                     u5411:
  1604  001D1E  EF87  F00E         	goto	l5206
  1605  001D22                     u5410:
  1606  001D22                     
  1607                           ;main.c: 116:             PrintModbus();
  1608  001D22  EC74  F00F         	call	_PrintModbus	;wreg free
  1609  001D26                     
  1610                           ;main.c: 118:             if(ModbusData[1] == 0x03)
  1611  001D26  0E03               	movlw	3
  1612  001D28  0101               	movlb	1	; () banked
  1613  001D2A  1901               	xorwf	(_ModbusData+1)& (0+255),w,b
  1614  001D2C  A4D8               	btfss	status,2,c
  1615  001D2E  EF9B  F00E         	goto	u5421
  1616  001D32  EF9D  F00E         	goto	u5420
  1617  001D36                     u5421:
  1618  001D36  EFA9  F00E         	goto	l5214
  1619  001D3A                     u5420:
  1620  001D3A                     
  1621                           ; BSR set to: 1
  1622                           ;main.c: 119:             {;main.c: 120:                 UART1_Write_string(MBRespon,siz
      +                          eof(MBRespon));
  1623  001D3A  0EEC               	movlw	low _MBRespon
  1624  001D3C  6E06               	movwf	UART1_Write_string@data^0,c
  1625  001D3E  0E00               	movlw	high _MBRespon
  1626  001D40  6E07               	movwf	(UART1_Write_string@data+1)^0,c
  1627  001D42  0E00               	movlw	0
  1628  001D44  6E09               	movwf	(UART1_Write_string@data_len+1)^0,c
  1629  001D46  0E0B               	movlw	11
  1630  001D48  6E08               	movwf	UART1_Write_string@data_len^0,c
  1631  001D4A  ECB0  F00F         	call	_UART1_Write_string	;wreg free
  1632                           
  1633                           ;main.c: 122:             }else{
  1634  001D4E  EFB3  F00E         	goto	l5216
  1635  001D52                     l5214:
  1636                           
  1637                           ; BSR set to: 1
  1638                           ;main.c: 123:                 printf("Function Code is: 0x%02x \r\n", ModbusData[1]);
  1639  001D52  0E65               	movlw	low STR_13
  1640  001D54  0100               	movlb	0	; () banked
  1641  001D56  6FBC               	movwf	printf@fmt& (0+255),b
  1642  001D58  0EFF               	movlw	high STR_13
  1643  001D5A  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  1644  001D5C  C101  F0BE         	movff	_ModbusData+1,?_printf+2
  1645  001D60  6BBF               	clrf	(?_printf+3)& (0+255),b
  1646  001D62  ECBF  F012         	call	_printf	;wreg free
  1647  001D66                     l5216:
  1648                           
  1649                           ;main.c: 127:             ClearModbusData();
  1650  001D66  EC4E  F011         	call	_ClearModbusData	;wreg free
  1651  001D6A  EF87  F00E         	goto	l5206
  1652  001D6E  EF93  F000         	goto	start
  1653  001D72                     __end_of_main:
  1654                           	opt callstack 0
  1655                           
  1656 ;; *************** function _UART1_Write_string *****************
  1657 ;; Defined at:
  1658 ;;		line 49 in file "main.c"
  1659 ;; Parameters:    Size  Location     Type
  1660 ;;  data            2    5[COMRAM] PTR unsigned char 
  1661 ;;		 -> MBRespon(11), 
  1662 ;;  data_len        2    7[COMRAM] int 
  1663 ;; Auto vars:     Size  Location     Type
  1664 ;;  i               2   10[COMRAM] int 
  1665 ;; Return value:  Size  Location     Type
  1666 ;;                  1    wreg      void 
  1667 ;; Registers used:
  1668 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1669 ;; Tracked objects:
  1670 ;;		On entry : 0/0
  1671 ;;		On exit  : 0/0
  1672 ;;		Unchanged: 0/0
  1673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1674 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1675 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1676 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1677 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1678 ;;Total ram usage:        7 bytes
  1679 ;; Hardware stack levels used:    1
  1680 ;; Hardware stack levels required when called:    5
  1681 ;; This function calls:
  1682 ;;		_EUSART1_Write
  1683 ;;		_EUSART1_is_tx_done
  1684 ;;		_EUSART1_is_tx_ready
  1685 ;;		_TXMode
  1686 ;; This function is called by:
  1687 ;;		_main
  1688 ;; This function uses a non-reentrant model
  1689 ;;
  1690                           
  1691                           	psect	text1
  1692  001F60                     __ptext1:
  1693                           	opt callstack 0
  1694  001F60                     _UART1_Write_string:
  1695                           	opt callstack 25
  1696  001F60                     
  1697                           ;main.c: 49:  void UART1_Write_string(unsigned char * data, int data_len);main.c: 50: {;
      +                          main.c: 51:      TXMode();
  1698  001F60  EC74  F013         	call	_TXMode	;wreg free
  1699  001F64                     l5098:
  1700  001F64  EC01  F013         	call	_EUSART1_is_tx_ready	;wreg free
  1701  001F68  0900               	iorlw	0
  1702  001F6A  B4D8               	btfsc	status,2,c
  1703  001F6C  EFBA  F00F         	goto	u5281
  1704  001F70  EFBC  F00F         	goto	u5280
  1705  001F74                     u5281:
  1706  001F74  EFB2  F00F         	goto	l5098
  1707  001F78                     u5280:
  1708  001F78                     
  1709                           ;main.c: 53:     for (int i = 0; i < data_len; i++) {
  1710  001F78  0E00               	movlw	0
  1711  001F7A  6E0C               	movwf	(UART1_Write_string@i+1)^0,c
  1712  001F7C  0E00               	movlw	0
  1713  001F7E  6E0B               	movwf	UART1_Write_string@i^0,c
  1714  001F80  EFD7  F00F         	goto	l5108
  1715  001F84                     l5102:
  1716                           
  1717                           ;main.c: 54:         EUSART1_Write(data[i]);
  1718  001F84  500B               	movf	UART1_Write_string@i^0,w,c
  1719  001F86  2406               	addwf	UART1_Write_string@data^0,w,c
  1720  001F88  6ED9               	movwf	fsr2l,c
  1721  001F8A  500C               	movf	(UART1_Write_string@i+1)^0,w,c
  1722  001F8C  2007               	addwfc	(UART1_Write_string@data+1)^0,w,c
  1723  001F8E  6EDA               	movwf	fsr2h,c
  1724  001F90  50DF               	movf	indf2,w,c
  1725  001F92  EC19  F010         	call	_EUSART1_Write
  1726  001F96                     l5104:
  1727  001F96  EC2F  F013         	call	_EUSART1_is_tx_done	;wreg free
  1728  001F9A  0900               	iorlw	0
  1729  001F9C  B4D8               	btfsc	status,2,c
  1730  001F9E  EFD3  F00F         	goto	u5291
  1731  001FA2  EFD5  F00F         	goto	u5290
  1732  001FA6                     u5291:
  1733  001FA6  EFCB  F00F         	goto	l5104
  1734  001FAA                     u5290:
  1735  001FAA                     
  1736                           ;main.c: 56:     }
  1737  001FAA  4A0B               	infsnz	UART1_Write_string@i^0,f,c
  1738  001FAC  2A0C               	incf	(UART1_Write_string@i+1)^0,f,c
  1739  001FAE                     l5108:
  1740  001FAE  5008               	movf	UART1_Write_string@data_len^0,w,c
  1741  001FB0  5C0B               	subwf	UART1_Write_string@i^0,w,c
  1742  001FB2  500C               	movf	(UART1_Write_string@i+1)^0,w,c
  1743  001FB4  0A80               	xorlw	128
  1744  001FB6  6E0A               	movwf	??_UART1_Write_string^0,c
  1745  001FB8  5009               	movf	(UART1_Write_string@data_len+1)^0,w,c
  1746  001FBA  0A80               	xorlw	128
  1747  001FBC  580A               	subwfb	??_UART1_Write_string^0,w,c
  1748  001FBE  A0D8               	btfss	status,0,c
  1749  001FC0  EFE4  F00F         	goto	u5301
  1750  001FC4  EFE6  F00F         	goto	u5300
  1751  001FC8                     u5301:
  1752  001FC8  EFC2  F00F         	goto	l5102
  1753  001FCC                     u5300:
  1754  001FCC  0012               	return		;funcret
  1755  001FCE                     __end_of_UART1_Write_string:
  1756                           	opt callstack 0
  1757                           
  1758 ;; *************** function _TXMode *****************
  1759 ;; Defined at:
  1760 ;;		line 15 in file "Modbus.c"
  1761 ;; Parameters:    Size  Location     Type
  1762 ;;		None
  1763 ;; Auto vars:     Size  Location     Type
  1764 ;;		None
  1765 ;; Return value:  Size  Location     Type
  1766 ;;                  1    wreg      void 
  1767 ;; Registers used:
  1768 ;;		None
  1769 ;; Tracked objects:
  1770 ;;		On entry : 0/0
  1771 ;;		On exit  : 0/0
  1772 ;;		Unchanged: 0/0
  1773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1778 ;;Total ram usage:        0 bytes
  1779 ;; Hardware stack levels used:    1
  1780 ;; Hardware stack levels required when called:    4
  1781 ;; This function calls:
  1782 ;;		Nothing
  1783 ;; This function is called by:
  1784 ;;		_UART1_Write_string
  1785 ;; This function uses a non-reentrant model
  1786 ;;
  1787                           
  1788                           	psect	text2
  1789  0026E8                     __ptext2:
  1790                           	opt callstack 0
  1791  0026E8                     _TXMode:
  1792                           	opt callstack 25
  1793  0026E8  8086               	bsf	134,0,c	;volatile
  1794  0026EA  8683               	bsf	131,3,c	;volatile
  1795  0026EC  0012               	return		;funcret
  1796  0026EE                     __end_of_TXMode:
  1797                           	opt callstack 0
  1798                           
  1799 ;; *************** function _EUSART1_is_tx_ready *****************
  1800 ;; Defined at:
  1801 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  1802 ;; Parameters:    Size  Location     Type
  1803 ;;		None
  1804 ;; Auto vars:     Size  Location     Type
  1805 ;;		None
  1806 ;; Return value:  Size  Location     Type
  1807 ;;                  1    wreg      _Bool 
  1808 ;; Registers used:
  1809 ;;		wreg, status,2
  1810 ;; Tracked objects:
  1811 ;;		On entry : 0/0
  1812 ;;		On exit  : 0/0
  1813 ;;		Unchanged: 0/0
  1814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1819 ;;Total ram usage:        0 bytes
  1820 ;; Hardware stack levels used:    1
  1821 ;; Hardware stack levels required when called:    4
  1822 ;; This function calls:
  1823 ;;		Nothing
  1824 ;; This function is called by:
  1825 ;;		_UART1_Write_string
  1826 ;; This function uses a non-reentrant model
  1827 ;;
  1828                           
  1829                           	psect	text3
  1830  002602                     __ptext3:
  1831                           	opt callstack 0
  1832  002602                     _EUSART1_is_tx_ready:
  1833                           	opt callstack 25
  1834  002602                     
  1835                           ;mcc_generated_files/eusart1.c: 134:     return (eusart1TxBufferRemaining ? 1 : 0);
  1836  002602  0100               	movlb	0	; () banked
  1837  002604  51E1               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
  1838  002606  A4D8               	btfss	status,2,c
  1839  002608  EF08  F013         	goto	u5091
  1840  00260C  EF0B  F013         	goto	u5090
  1841  002610                     u5091:
  1842  002610  0E01               	movlw	1
  1843  002612  EF0C  F013         	goto	u5100
  1844  002616                     u5090:
  1845  002616  0E00               	movlw	0
  1846  002618                     u5100:
  1847  002618                     
  1848                           ; BSR set to: 0
  1849  002618  0012               	return		;funcret
  1850  00261A                     __end_of_EUSART1_is_tx_ready:
  1851                           	opt callstack 0
  1852                           
  1853 ;; *************** function _EUSART1_is_tx_done *****************
  1854 ;; Defined at:
  1855 ;;		line 142 in file "mcc_generated_files/eusart1.c"
  1856 ;; Parameters:    Size  Location     Type
  1857 ;;		None
  1858 ;; Auto vars:     Size  Location     Type
  1859 ;;		None
  1860 ;; Return value:  Size  Location     Type
  1861 ;;                  1    wreg      _Bool 
  1862 ;; Registers used:
  1863 ;;		wreg
  1864 ;; Tracked objects:
  1865 ;;		On entry : 0/0
  1866 ;;		On exit  : 0/0
  1867 ;;		Unchanged: 0/0
  1868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1873 ;;Total ram usage:        0 bytes
  1874 ;; Hardware stack levels used:    1
  1875 ;; Hardware stack levels required when called:    4
  1876 ;; This function calls:
  1877 ;;		Nothing
  1878 ;; This function is called by:
  1879 ;;		_UART1_Write_string
  1880 ;; This function uses a non-reentrant model
  1881 ;;
  1882                           
  1883                           	psect	text4
  1884  00265E                     __ptext4:
  1885                           	opt callstack 0
  1886  00265E                     _EUSART1_is_tx_done:
  1887                           	opt callstack 25
  1888  00265E                     
  1889                           ;mcc_generated_files/eusart1.c: 144:     return TX1STAbits.TRMT;
  1890  00265E  B29E               	btfsc	158,1,c	;volatile
  1891  002660  EF34  F013         	goto	u5131
  1892  002664  EF37  F013         	goto	u5130
  1893  002668                     u5131:
  1894  002668  0E01               	movlw	1
  1895  00266A  EF38  F013         	goto	u5136
  1896  00266E                     u5130:
  1897  00266E  0E00               	movlw	0
  1898  002670                     u5136:
  1899  002670  0012               	return		;funcret
  1900  002672                     __end_of_EUSART1_is_tx_done:
  1901                           	opt callstack 0
  1902                           
  1903 ;; *************** function _EUSART1_Write *****************
  1904 ;; Defined at:
  1905 ;;		line 173 in file "mcc_generated_files/eusart1.c"
  1906 ;; Parameters:    Size  Location     Type
  1907 ;;  txData          1    wreg     unsigned char 
  1908 ;; Auto vars:     Size  Location     Type
  1909 ;;  txData          1    4[COMRAM] unsigned char 
  1910 ;; Return value:  Size  Location     Type
  1911 ;;                  1    wreg      void 
  1912 ;; Registers used:
  1913 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1914 ;; Tracked objects:
  1915 ;;		On entry : 0/0
  1916 ;;		On exit  : 0/0
  1917 ;;		Unchanged: 0/0
  1918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1920 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1922 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1923 ;;Total ram usage:        1 bytes
  1924 ;; Hardware stack levels used:    1
  1925 ;; Hardware stack levels required when called:    4
  1926 ;; This function calls:
  1927 ;;		Nothing
  1928 ;; This function is called by:
  1929 ;;		_UART1_Write_string
  1930 ;; This function uses a non-reentrant model
  1931 ;;
  1932                           
  1933                           	psect	text5
  1934  002032                     __ptext5:
  1935                           	opt callstack 0
  1936  002032                     _EUSART1_Write:
  1937                           	opt callstack 25
  1938                           
  1939                           ;incstack = 0
  1940                           ;EUSART1_Write@txData stored from wreg
  1941  002032  6E05               	movwf	EUSART1_Write@txData^0,c
  1942  002034                     l4996:
  1943                           
  1944                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
  1945  002034  0100               	movlb	0	; () banked
  1946  002036  51E1               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
  1947  002038  B4D8               	btfsc	status,2,c
  1948  00203A  EF21  F010         	goto	u5161
  1949  00203E  EF23  F010         	goto	u5160
  1950  002042                     u5161:
  1951  002042  EF1A  F010         	goto	l4996
  1952  002046                     u5160:
  1953  002046                     
  1954                           ; BSR set to: 0
  1955                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE3bits.TX1IE)
  1956  002046  010E               	movlb	14	; () banked
  1957  002048  B9C5               	btfsc	197,4,b	;volatile
  1958  00204A  EF29  F010         	goto	u5171
  1959  00204E  EF2B  F010         	goto	u5170
  1960  002052                     u5171:
  1961  002052  EF2F  F010         	goto	l471
  1962  002056                     u5170:
  1963  002056                     
  1964                           ; BSR set to: 14
  1965                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          X1REG = txData;
  1966  002056  C005  FF9A         	movff	EUSART1_Write@txData,3994	;volatile
  1967                           
  1968                           ;mcc_generated_files/eusart1.c: 182:     }
  1969  00205A  EF45  F010         	goto	l5010
  1970  00205E                     l471:
  1971                           
  1972                           ; BSR set to: 14
  1973                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE3bits.TX1IE = 0;
  1974  00205E  99C5               	bcf	197,4,b	;volatile
  1975  002060                     
  1976                           ; BSR set to: 14
  1977                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
  1978  002060  0E60               	movlw	low _eusart1TxBuffer
  1979  002062  0100               	movlb	0	; () banked
  1980  002064  2599               	addwf	_eusart1TxHead& (0+255),w,b	;volatile
  1981  002066  6ED9               	movwf	fsr2l,c
  1982  002068  6ADA               	clrf	fsr2h,c
  1983  00206A  0E00               	movlw	high _eusart1TxBuffer
  1984  00206C  22DA               	addwfc	fsr2h,f,c
  1985  00206E  C005  FFDF         	movff	EUSART1_Write@txData,indf2
  1986  002072                     
  1987                           ; BSR set to: 0
  1988  002072  2B99               	incf	_eusart1TxHead& (0+255),f,b	;volatile
  1989  002074                     
  1990                           ; BSR set to: 0
  1991                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
  1992  002074  0E0F               	movlw	15
  1993  002076  6599               	cpfsgt	_eusart1TxHead& (0+255),b	;volatile
  1994  002078  EF40  F010         	goto	u5181
  1995  00207C  EF42  F010         	goto	u5180
  1996  002080                     u5181:
  1997  002080  EF44  F010         	goto	l5008
  1998  002084                     u5180:
  1999  002084                     
  2000                           ; BSR set to: 0
  2001                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
  2002  002084  0E00               	movlw	0
  2003  002086  6F99               	movwf	_eusart1TxHead& (0+255),b	;volatile
  2004  002088                     l5008:
  2005                           
  2006                           ; BSR set to: 0
  2007                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
  2008  002088  07E1               	decf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
  2009  00208A                     l5010:
  2010                           
  2011                           ;mcc_generated_files/eusart1.c: 193:     PIE3bits.TX1IE = 1;
  2012  00208A  010E               	movlb	14	; () banked
  2013  00208C  89C5               	bsf	197,4,b	;volatile
  2014  00208E                     
  2015                           ; BSR set to: 14
  2016  00208E  0012               	return		;funcret
  2017  002090                     __end_of_EUSART1_Write:
  2018                           	opt callstack 0
  2019                           
  2020 ;; *************** function _SYSTEM_Initialize *****************
  2021 ;; Defined at:
  2022 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2023 ;; Parameters:    Size  Location     Type
  2024 ;;		None
  2025 ;; Auto vars:     Size  Location     Type
  2026 ;;		None
  2027 ;; Return value:  Size  Location     Type
  2028 ;;                  1    wreg      void 
  2029 ;; Registers used:
  2030 ;;		wreg, status,2, status,0, cstack
  2031 ;; Tracked objects:
  2032 ;;		On entry : 0/0
  2033 ;;		On exit  : 0/0
  2034 ;;		Unchanged: 0/0
  2035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2040 ;;Total ram usage:        0 bytes
  2041 ;; Hardware stack levels used:    1
  2042 ;; Hardware stack levels required when called:    6
  2043 ;; This function calls:
  2044 ;;		_EUSART1_Initialize
  2045 ;;		_EUSART2_Initialize
  2046 ;;		_INTERRUPT_Initialize
  2047 ;;		_OSCILLATOR_Initialize
  2048 ;;		_PIN_MANAGER_Initialize
  2049 ;;		_PMD_Initialize
  2050 ;; This function is called by:
  2051 ;;		_main
  2052 ;; This function uses a non-reentrant model
  2053 ;;
  2054                           
  2055                           	psect	text6
  2056  0025E8                     __ptext6:
  2057                           	opt callstack 0
  2058  0025E8                     _SYSTEM_Initialize:
  2059                           	opt callstack 24
  2060  0025E8                     
  2061                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  2062  0025E8  EC83  F013         	call	_INTERRUPT_Initialize	;wreg free
  2063  0025EC                     
  2064                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  2065  0025EC  ECE6  F012         	call	_PMD_Initialize	;wreg free
  2066  0025F0                     
  2067                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  2068  0025F0  EC32  F00E         	call	_PIN_MANAGER_Initialize	;wreg free
  2069  0025F4                     
  2070                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  2071  0025F4  EC0D  F013         	call	_OSCILLATOR_Initialize	;wreg free
  2072  0025F8                     
  2073                           ;mcc_generated_files/mcc.c: 56:     EUSART1_Initialize();
  2074  0025F8  ECF8  F00E         	call	_EUSART1_Initialize	;wreg free
  2075  0025FC                     
  2076                           ;mcc_generated_files/mcc.c: 57:     EUSART2_Initialize();
  2077  0025FC  ECB9  F00E         	call	_EUSART2_Initialize	;wreg free
  2078  002600  0012               	return		;funcret
  2079  002602                     __end_of_SYSTEM_Initialize:
  2080                           	opt callstack 0
  2081                           
  2082 ;; *************** function _PMD_Initialize *****************
  2083 ;; Defined at:
  2084 ;;		line 74 in file "mcc_generated_files/mcc.c"
  2085 ;; Parameters:    Size  Location     Type
  2086 ;;		None
  2087 ;; Auto vars:     Size  Location     Type
  2088 ;;		None
  2089 ;; Return value:  Size  Location     Type
  2090 ;;                  1    wreg      void 
  2091 ;; Registers used:
  2092 ;;		wreg, status,2
  2093 ;; Tracked objects:
  2094 ;;		On entry : 0/0
  2095 ;;		On exit  : 0/0
  2096 ;;		Unchanged: 0/0
  2097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2102 ;;Total ram usage:        0 bytes
  2103 ;; Hardware stack levels used:    1
  2104 ;; Hardware stack levels required when called:    4
  2105 ;; This function calls:
  2106 ;;		Nothing
  2107 ;; This function is called by:
  2108 ;;		_SYSTEM_Initialize
  2109 ;; This function uses a non-reentrant model
  2110 ;;
  2111                           
  2112                           	psect	text7
  2113  0025CC                     __ptext7:
  2114                           	opt callstack 0
  2115  0025CC                     _PMD_Initialize:
  2116                           	opt callstack 25
  2117  0025CC                     
  2118                           ;mcc_generated_files/mcc.c: 77:     PMD0 = 0x00;
  2119  0025CC  0E00               	movlw	0
  2120  0025CE  010E               	movlb	14	; () banked
  2121  0025D0  6FE1               	movwf	225,b	;volatile
  2122                           
  2123                           ;mcc_generated_files/mcc.c: 79:     PMD1 = 0x00;
  2124  0025D2  0E00               	movlw	0
  2125  0025D4  6FE2               	movwf	226,b	;volatile
  2126                           
  2127                           ;mcc_generated_files/mcc.c: 81:     PMD2 = 0x00;
  2128  0025D6  0E00               	movlw	0
  2129  0025D8  6FE3               	movwf	227,b	;volatile
  2130                           
  2131                           ;mcc_generated_files/mcc.c: 83:     PMD3 = 0x00;
  2132  0025DA  0E00               	movlw	0
  2133  0025DC  6FE4               	movwf	228,b	;volatile
  2134                           
  2135                           ;mcc_generated_files/mcc.c: 85:     PMD4 = 0x00;
  2136  0025DE  0E00               	movlw	0
  2137  0025E0  6FE5               	movwf	229,b	;volatile
  2138                           
  2139                           ;mcc_generated_files/mcc.c: 87:     PMD5 = 0x00;
  2140  0025E2  0E00               	movlw	0
  2141  0025E4  6FE6               	movwf	230,b	;volatile
  2142  0025E6                     
  2143                           ; BSR set to: 14
  2144  0025E6  0012               	return		;funcret
  2145  0025E8                     __end_of_PMD_Initialize:
  2146                           	opt callstack 0
  2147                           
  2148 ;; *************** function _PIN_MANAGER_Initialize *****************
  2149 ;; Defined at:
  2150 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2151 ;; Parameters:    Size  Location     Type
  2152 ;;		None
  2153 ;; Auto vars:     Size  Location     Type
  2154 ;;		None
  2155 ;; Return value:  Size  Location     Type
  2156 ;;                  1    wreg      void 
  2157 ;; Registers used:
  2158 ;;		wreg, status,2
  2159 ;; Tracked objects:
  2160 ;;		On entry : 0/0
  2161 ;;		On exit  : 0/0
  2162 ;;		Unchanged: 0/0
  2163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2168 ;;Total ram usage:        0 bytes
  2169 ;; Hardware stack levels used:    1
  2170 ;; Hardware stack levels required when called:    4
  2171 ;; This function calls:
  2172 ;;		Nothing
  2173 ;; This function is called by:
  2174 ;;		_SYSTEM_Initialize
  2175 ;; This function uses a non-reentrant model
  2176 ;;
  2177                           
  2178                           	psect	text8
  2179  001C64                     __ptext8:
  2180                           	opt callstack 0
  2181  001C64                     _PIN_MANAGER_Initialize:
  2182                           	opt callstack 25
  2183  001C64                     
  2184                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  2185  001C64  0E00               	movlw	0
  2186  001C66  6E87               	movwf	135,c	;volatile
  2187                           
  2188                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  2189  001C68  0E00               	movlw	0
  2190  001C6A  6E86               	movwf	134,c	;volatile
  2191                           
  2192                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  2193  001C6C  0E00               	movlw	0
  2194  001C6E  6E83               	movwf	131,c	;volatile
  2195                           
  2196                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  2197  001C70  0E00               	movlw	0
  2198  001C72  6E84               	movwf	132,c	;volatile
  2199                           
  2200                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  2201  001C74  0E00               	movlw	0
  2202  001C76  6E85               	movwf	133,c	;volatile
  2203                           
  2204                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  2205  001C78  0E07               	movlw	7
  2206  001C7A  6E8C               	movwf	140,c	;volatile
  2207                           
  2208                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x07;
  2209  001C7C  0E07               	movlw	7
  2210  001C7E  6E88               	movwf	136,c	;volatile
  2211                           
  2212                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xBF;
  2213  001C80  0EBF               	movlw	191
  2214  001C82  6E89               	movwf	137,c	;volatile
  2215                           
  2216                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  2217  001C84  0EBF               	movlw	191
  2218  001C86  6E8A               	movwf	138,c	;volatile
  2219                           
  2220                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFE;
  2221  001C88  0EFE               	movlw	254
  2222  001C8A  6E8B               	movwf	139,c	;volatile
  2223  001C8C                     
  2224                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
  2225  001C8C  010F               	movlb	15	; () banked
  2226  001C8E  6926               	setf	38,b	;volatile
  2227                           
  2228                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x3B;
  2229  001C90  0E3B               	movlw	59
  2230  001C92  6F21               	movwf	33,b	;volatile
  2231                           
  2232                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x37;
  2233  001C94  0E37               	movlw	55
  2234  001C96  6F19               	movwf	25,b	;volatile
  2235                           
  2236                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  2237  001C98  0E07               	movlw	7
  2238  001C9A  6F2E               	movwf	46,b	;volatile
  2239  001C9C                     
  2240                           ; BSR set to: 15
  2241                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
  2242  001C9C  6911               	setf	17,b	;volatile
  2243                           
  2244                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  2245  001C9E  0E00               	movlw	0
  2246  001CA0  6F25               	movwf	37,b	;volatile
  2247                           
  2248                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  2249  001CA2  0E00               	movlw	0
  2250  001CA4  6F2D               	movwf	45,b	;volatile
  2251                           
  2252                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  2253  001CA6  0E00               	movlw	0
  2254  001CA8  6F18               	movwf	24,b	;volatile
  2255                           
  2256                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  2257  001CAA  0E00               	movlw	0
  2258  001CAC  6F10               	movwf	16,b	;volatile
  2259                           
  2260                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  2261  001CAE  0E00               	movlw	0
  2262  001CB0  6F20               	movwf	32,b	;volatile
  2263                           
  2264                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
  2265  001CB2  0E00               	movlw	0
  2266  001CB4  6F2C               	movwf	44,b	;volatile
  2267                           
  2268                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
  2269  001CB6  0E00               	movlw	0
  2270  001CB8  6F0F               	movwf	15,b	;volatile
  2271                           
  2272                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
  2273  001CBA  0E00               	movlw	0
  2274  001CBC  6F17               	movwf	23,b	;volatile
  2275                           
  2276                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
  2277  001CBE  0E00               	movlw	0
  2278  001CC0  6F1F               	movwf	31,b	;volatile
  2279                           
  2280                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
  2281  001CC2  0E00               	movlw	0
  2282  001CC4  6F24               	movwf	36,b	;volatile
  2283  001CC6                     
  2284                           ; BSR set to: 15
  2285                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
  2286  001CC6  690E               	setf	14,b	;volatile
  2287  001CC8                     
  2288                           ; BSR set to: 15
  2289                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
  2290  001CC8  6916               	setf	22,b	;volatile
  2291  001CCA                     
  2292                           ; BSR set to: 15
  2293                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
  2294  001CCA  691E               	setf	30,b	;volatile
  2295  001CCC                     
  2296                           ; BSR set to: 15
  2297                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
  2298  001CCC  6923               	setf	35,b	;volatile
  2299                           
  2300                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
  2301  001CCE  0E07               	movlw	7
  2302  001CD0  6F2B               	movwf	43,b	;volatile
  2303  001CD2                     
  2304                           ; BSR set to: 15
  2305                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
  2306  001CD2  690D               	setf	13,b	;volatile
  2307  001CD4                     
  2308                           ; BSR set to: 15
  2309                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
  2310  001CD4  6915               	setf	21,b	;volatile
  2311  001CD6                     
  2312                           ; BSR set to: 15
  2313                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
  2314  001CD6  691D               	setf	29,b	;volatile
  2315  001CD8                     
  2316                           ; BSR set to: 15
  2317                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
  2318  001CD8  6922               	setf	34,b	;volatile
  2319                           
  2320                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x0F;
  2321  001CDA  0E0F               	movlw	15
  2322  001CDC  6F2A               	movwf	42,b	;volatile
  2323                           
  2324                           ;mcc_generated_files/pin_manager.c: 127:     RX1PPS = 0x17;
  2325  001CDE  0E17               	movlw	23
  2326  001CE0  010E               	movlb	14	; () banked
  2327  001CE2  6FB5               	movwf	181,b	;volatile
  2328                           
  2329                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x0B;
  2330  001CE4  0E0B               	movlw	11
  2331  001CE6  6FF5               	movwf	245,b	;volatile
  2332                           
  2333                           ;mcc_generated_files/pin_manager.c: 129:     RC6PPS = 0x09;
  2334  001CE8  0E09               	movlw	9
  2335  001CEA  6FFD               	movwf	253,b	;volatile
  2336                           
  2337                           ;mcc_generated_files/pin_manager.c: 130:     RX2PPS = 0x0F;
  2338  001CEC  0E0F               	movlw	15
  2339  001CEE  6F8D               	movwf	141,b	;volatile
  2340  001CF0                     
  2341                           ; BSR set to: 14
  2342  001CF0  0012               	return		;funcret
  2343  001CF2                     __end_of_PIN_MANAGER_Initialize:
  2344                           	opt callstack 0
  2345                           
  2346 ;; *************** function _OSCILLATOR_Initialize *****************
  2347 ;; Defined at:
  2348 ;;		line 60 in file "mcc_generated_files/mcc.c"
  2349 ;; Parameters:    Size  Location     Type
  2350 ;;		None
  2351 ;; Auto vars:     Size  Location     Type
  2352 ;;		None
  2353 ;; Return value:  Size  Location     Type
  2354 ;;                  1    wreg      void 
  2355 ;; Registers used:
  2356 ;;		wreg, status,2
  2357 ;; Tracked objects:
  2358 ;;		On entry : 0/0
  2359 ;;		On exit  : 0/0
  2360 ;;		Unchanged: 0/0
  2361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2366 ;;Total ram usage:        0 bytes
  2367 ;; Hardware stack levels used:    1
  2368 ;; Hardware stack levels required when called:    4
  2369 ;; This function calls:
  2370 ;;		Nothing
  2371 ;; This function is called by:
  2372 ;;		_SYSTEM_Initialize
  2373 ;; This function uses a non-reentrant model
  2374 ;;
  2375                           
  2376                           	psect	text9
  2377  00261A                     __ptext9:
  2378                           	opt callstack 0
  2379  00261A                     _OSCILLATOR_Initialize:
  2380                           	opt callstack 25
  2381  00261A                     
  2382                           ;mcc_generated_files/mcc.c: 63:     OSCCON1 = 0x60;
  2383  00261A  0E60               	movlw	96
  2384  00261C  010E               	movlb	14	; () banked
  2385  00261E  6FD8               	movwf	216,b	;volatile
  2386                           
  2387                           ;mcc_generated_files/mcc.c: 65:     OSCCON3 = 0x00;
  2388  002620  0E00               	movlw	0
  2389  002622  6FDA               	movwf	218,b	;volatile
  2390                           
  2391                           ;mcc_generated_files/mcc.c: 67:     OSCEN = 0x00;
  2392  002624  0E00               	movlw	0
  2393  002626  6FDC               	movwf	220,b	;volatile
  2394                           
  2395                           ;mcc_generated_files/mcc.c: 69:     OSCFRQ = 0x06;
  2396  002628  0E06               	movlw	6
  2397  00262A  6FDE               	movwf	222,b	;volatile
  2398                           
  2399                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  2400  00262C  0E00               	movlw	0
  2401  00262E  6FDD               	movwf	221,b	;volatile
  2402  002630                     
  2403                           ; BSR set to: 14
  2404  002630  0012               	return		;funcret
  2405  002632                     __end_of_OSCILLATOR_Initialize:
  2406                           	opt callstack 0
  2407                           
  2408 ;; *************** function _INTERRUPT_Initialize *****************
  2409 ;; Defined at:
  2410 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2411 ;; Parameters:    Size  Location     Type
  2412 ;;		None
  2413 ;; Auto vars:     Size  Location     Type
  2414 ;;		None
  2415 ;; Return value:  Size  Location     Type
  2416 ;;                  1    wreg      void 
  2417 ;; Registers used:
  2418 ;;		None
  2419 ;; Tracked objects:
  2420 ;;		On entry : 0/0
  2421 ;;		On exit  : 0/0
  2422 ;;		Unchanged: 0/0
  2423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2428 ;;Total ram usage:        0 bytes
  2429 ;; Hardware stack levels used:    1
  2430 ;; Hardware stack levels required when called:    4
  2431 ;; This function calls:
  2432 ;;		Nothing
  2433 ;; This function is called by:
  2434 ;;		_SYSTEM_Initialize
  2435 ;; This function uses a non-reentrant model
  2436 ;;
  2437                           
  2438                           	psect	text10
  2439  002706                     __ptext10:
  2440                           	opt callstack 0
  2441  002706                     _INTERRUPT_Initialize:
  2442                           	opt callstack 25
  2443  002706                     
  2444                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
  2445  002706  9AF2               	bcf	242,5,c	;volatile
  2446  002708  0012               	return		;funcret
  2447  00270A                     __end_of_INTERRUPT_Initialize:
  2448                           	opt callstack 0
  2449                           
  2450 ;; *************** function _EUSART2_Initialize *****************
  2451 ;; Defined at:
  2452 ;;		line 88 in file "mcc_generated_files/eusart2.c"
  2453 ;; Parameters:    Size  Location     Type
  2454 ;;		None
  2455 ;; Auto vars:     Size  Location     Type
  2456 ;;		None
  2457 ;; Return value:  Size  Location     Type
  2458 ;;                  1    wreg      void 
  2459 ;; Registers used:
  2460 ;;		wreg, status,2, status,0, cstack
  2461 ;; Tracked objects:
  2462 ;;		On entry : 0/0
  2463 ;;		On exit  : 0/0
  2464 ;;		Unchanged: 0/0
  2465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2470 ;;Total ram usage:        0 bytes
  2471 ;; Hardware stack levels used:    1
  2472 ;; Hardware stack levels required when called:    5
  2473 ;; This function calls:
  2474 ;;		_EUSART2_SetErrorHandler
  2475 ;;		_EUSART2_SetFramingErrorHandler
  2476 ;;		_EUSART2_SetOverrunErrorHandler
  2477 ;;		_EUSART2_SetRxInterruptHandler
  2478 ;;		_EUSART2_SetTxInterruptHandler
  2479 ;; This function is called by:
  2480 ;;		_SYSTEM_Initialize
  2481 ;; This function uses a non-reentrant model
  2482 ;;
  2483                           
  2484                           	psect	text11
  2485  001D72                     __ptext11:
  2486                           	opt callstack 0
  2487  001D72                     _EUSART2_Initialize:
  2488                           	opt callstack 24
  2489  001D72                     
  2490                           ;mcc_generated_files/eusart2.c: 91:     PIE3bits.RC2IE = 0;
  2491  001D72  010E               	movlb	14	; () banked
  2492  001D74  9FC5               	bcf	197,7,b	;volatile
  2493  001D76                     
  2494                           ; BSR set to: 14
  2495                           ;mcc_generated_files/eusart2.c: 92:     EUSART2_SetRxInterruptHandler(EUSART2_Receive_IS
      +                          R);
  2496  001D76  0EAE               	movlw	low _EUSART2_Receive_ISR
  2497  001D78  6E05               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler^0,c
  2498  001D7A  0E19               	movlw	high _EUSART2_Receive_ISR
  2499  001D7C  6E06               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)^0,c
  2500  001D7E  EC3E  F013         	call	_EUSART2_SetRxInterruptHandler	;wreg free
  2501  001D82                     
  2502                           ;mcc_generated_files/eusart2.c: 93:     PIE3bits.TX2IE = 0;
  2503  001D82  010E               	movlb	14	; () banked
  2504  001D84  9DC5               	bcf	197,6,b	;volatile
  2505                           
  2506                           ;mcc_generated_files/eusart2.c: 94:     EUSART2_SetTxInterruptHandler(EUSART2_Transmit_I
      +                          SR);
  2507  001D86  0E32               	movlw	low _EUSART2_Transmit_ISR
  2508  001D88  6E05               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler^0,c
  2509  001D8A  0E23               	movlw	high _EUSART2_Transmit_ISR
  2510  001D8C  6E06               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)^0,c
  2511  001D8E  EC39  F013         	call	_EUSART2_SetTxInterruptHandler	;wreg free
  2512  001D92                     
  2513                           ;mcc_generated_files/eusart2.c: 98:     BAUD2CON = 0x08;
  2514  001D92  0E08               	movlw	8
  2515  001D94  010E               	movlb	14	; () banked
  2516  001D96  6F9F               	movwf	159,b	;volatile
  2517  001D98                     
  2518                           ; BSR set to: 14
  2519                           ;mcc_generated_files/eusart2.c: 101:     RC2STA = 0x90;
  2520  001D98  0E90               	movlw	144
  2521  001D9A  6F9D               	movwf	157,b	;volatile
  2522  001D9C                     
  2523                           ; BSR set to: 14
  2524                           ;mcc_generated_files/eusart2.c: 104:     TX2STA = 0x24;
  2525  001D9C  0E24               	movlw	36
  2526  001D9E  6F9E               	movwf	158,b	;volatile
  2527  001DA0                     
  2528                           ; BSR set to: 14
  2529                           ;mcc_generated_files/eusart2.c: 107:     SP2BRGL = 0x40;
  2530  001DA0  0E40               	movlw	64
  2531  001DA2  6F9B               	movwf	155,b	;volatile
  2532  001DA4                     
  2533                           ; BSR set to: 14
  2534                           ;mcc_generated_files/eusart2.c: 110:     SP2BRGH = 0x03;
  2535  001DA4  0E03               	movlw	3
  2536  001DA6  6F9C               	movwf	156,b	;volatile
  2537  001DA8                     
  2538                           ; BSR set to: 14
  2539                           ;mcc_generated_files/eusart2.c: 113:     EUSART2_SetFramingErrorHandler(EUSART2_DefaultF
      +                          ramingErrorHandler);
  2540  001DA8  0E0A               	movlw	low _EUSART2_DefaultFramingErrorHandler
  2541  001DAA  6E05               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler^0,c
  2542  001DAC  0E27               	movlw	high _EUSART2_DefaultFramingErrorHandler
  2543  001DAE  6E06               	movwf	(EUSART2_SetFramingErrorHandler@interruptHandler+1)^0,c
  2544  001DB0  EC48  F013         	call	_EUSART2_SetFramingErrorHandler	;wreg free
  2545  001DB4                     
  2546                           ;mcc_generated_files/eusart2.c: 114:     EUSART2_SetOverrunErrorHandler(EUSART2_DefaultO
      +                          verrunErrorHandler);
  2547  001DB4  0EE0               	movlw	low _EUSART2_DefaultOverrunErrorHandler
  2548  001DB6  6E05               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler^0,c
  2549  001DB8  0E26               	movlw	high _EUSART2_DefaultOverrunErrorHandler
  2550  001DBA  6E06               	movwf	(EUSART2_SetOverrunErrorHandler@interruptHandler+1)^0,c
  2551  001DBC  EC43  F013         	call	_EUSART2_SetOverrunErrorHandler	;wreg free
  2552  001DC0                     
  2553                           ;mcc_generated_files/eusart2.c: 115:     EUSART2_SetErrorHandler(EUSART2_DefaultErrorHan
      +                          dler);
  2554  001DC0  0EF4               	movlw	low _EUSART2_DefaultErrorHandler
  2555  001DC2  6E05               	movwf	EUSART2_SetErrorHandler@interruptHandler^0,c
  2556  001DC4  0E26               	movlw	high _EUSART2_DefaultErrorHandler
  2557  001DC6  6E06               	movwf	(EUSART2_SetErrorHandler@interruptHandler+1)^0,c
  2558  001DC8  EC4D  F013         	call	_EUSART2_SetErrorHandler	;wreg free
  2559                           
  2560                           ;mcc_generated_files/eusart2.c: 117:     eusart2RxLastError.status = 0;
  2561  001DCC  0E00               	movlw	0
  2562  001DCE  0100               	movlb	0	; () banked
  2563  001DD0  6F9A               	movwf	_eusart2RxLastError& (0+255),b	;volatile
  2564                           
  2565                           ;mcc_generated_files/eusart2.c: 120:     eusart2TxHead = 0;
  2566  001DD2  0E00               	movlw	0
  2567  001DD4  6F9E               	movwf	_eusart2TxHead& (0+255),b	;volatile
  2568                           
  2569                           ;mcc_generated_files/eusart2.c: 121:     eusart2TxTail = 0;
  2570  001DD6  0E00               	movlw	0
  2571  001DD8  6F9D               	movwf	_eusart2TxTail& (0+255),b	;volatile
  2572                           
  2573                           ;mcc_generated_files/eusart2.c: 122:     eusart2TxBufferRemaining = sizeof(eusart2TxBuff
      +                          er);
  2574  001DDA  0E08               	movlw	8
  2575  001DDC  6FE2               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
  2576                           
  2577                           ;mcc_generated_files/eusart2.c: 124:     eusart2RxHead = 0;
  2578  001DDE  0E00               	movlw	0
  2579  001DE0  6E59               	movwf	_eusart2RxHead^0,c	;volatile
  2580                           
  2581                           ;mcc_generated_files/eusart2.c: 125:     eusart2RxTail = 0;
  2582  001DE2  0E00               	movlw	0
  2583  001DE4  6F9C               	movwf	_eusart2RxTail& (0+255),b	;volatile
  2584                           
  2585                           ;mcc_generated_files/eusart2.c: 126:     eusart2RxCount = 0;
  2586  001DE6  0E00               	movlw	0
  2587  001DE8  6F9B               	movwf	_eusart2RxCount& (0+255),b	;volatile
  2588  001DEA                     
  2589                           ; BSR set to: 0
  2590                           ;mcc_generated_files/eusart2.c: 129:     PIE3bits.RC2IE = 1;
  2591  001DEA  010E               	movlb	14	; () banked
  2592  001DEC  8FC5               	bsf	197,7,b	;volatile
  2593  001DEE                     
  2594                           ; BSR set to: 14
  2595  001DEE  0012               	return		;funcret
  2596  001DF0                     __end_of_EUSART2_Initialize:
  2597                           	opt callstack 0
  2598                           
  2599 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
  2600 ;; Defined at:
  2601 ;;		line 285 in file "mcc_generated_files/eusart2.c"
  2602 ;; Parameters:    Size  Location     Type
  2603 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2604 ;;		 -> EUSART2_Transmit_ISR(1), 
  2605 ;; Auto vars:     Size  Location     Type
  2606 ;;		None
  2607 ;; Return value:  Size  Location     Type
  2608 ;;                  1    wreg      void 
  2609 ;; Registers used:
  2610 ;;		wreg, status,2, status,0
  2611 ;; Tracked objects:
  2612 ;;		On entry : 0/0
  2613 ;;		On exit  : 0/0
  2614 ;;		Unchanged: 0/0
  2615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2616 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2619 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2620 ;;Total ram usage:        2 bytes
  2621 ;; Hardware stack levels used:    1
  2622 ;; Hardware stack levels required when called:    4
  2623 ;; This function calls:
  2624 ;;		Nothing
  2625 ;; This function is called by:
  2626 ;;		_EUSART2_Initialize
  2627 ;; This function uses a non-reentrant model
  2628 ;;
  2629                           
  2630                           	psect	text12
  2631  002672                     __ptext12:
  2632                           	opt callstack 0
  2633  002672                     _EUSART2_SetTxInterruptHandler:
  2634                           	opt callstack 24
  2635  002672                     
  2636                           ;mcc_generated_files/eusart2.c: 286:     EUSART2_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  2637  002672  C005  F0DF         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
  2638  002676  C006  F0E0         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
  2639  00267A  0012               	return		;funcret
  2640  00267C                     __end_of_EUSART2_SetTxInterruptHandler:
  2641                           	opt callstack 0
  2642                           
  2643 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
  2644 ;; Defined at:
  2645 ;;		line 289 in file "mcc_generated_files/eusart2.c"
  2646 ;; Parameters:    Size  Location     Type
  2647 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2648 ;;		 -> EUSART2_Receive_ISR(1), 
  2649 ;; Auto vars:     Size  Location     Type
  2650 ;;		None
  2651 ;; Return value:  Size  Location     Type
  2652 ;;                  1    wreg      void 
  2653 ;; Registers used:
  2654 ;;		wreg, status,2, status,0
  2655 ;; Tracked objects:
  2656 ;;		On entry : 0/0
  2657 ;;		On exit  : 0/0
  2658 ;;		Unchanged: 0/0
  2659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2660 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2663 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2664 ;;Total ram usage:        2 bytes
  2665 ;; Hardware stack levels used:    1
  2666 ;; Hardware stack levels required when called:    4
  2667 ;; This function calls:
  2668 ;;		Nothing
  2669 ;; This function is called by:
  2670 ;;		_EUSART2_Initialize
  2671 ;; This function uses a non-reentrant model
  2672 ;;
  2673                           
  2674                           	psect	text13
  2675  00267C                     __ptext13:
  2676                           	opt callstack 0
  2677  00267C                     _EUSART2_SetRxInterruptHandler:
  2678                           	opt callstack 24
  2679  00267C                     
  2680                           ;mcc_generated_files/eusart2.c: 290:     EUSART2_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  2681  00267C  C005  F0DD         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
  2682  002680  C006  F0DE         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
  2683  002684  0012               	return		;funcret
  2684  002686                     __end_of_EUSART2_SetRxInterruptHandler:
  2685                           	opt callstack 0
  2686                           
  2687 ;; *************** function _EUSART2_SetOverrunErrorHandler *****************
  2688 ;; Defined at:
  2689 ;;		line 277 in file "mcc_generated_files/eusart2.c"
  2690 ;; Parameters:    Size  Location     Type
  2691 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2692 ;;		 -> EUSART2_DefaultOverrunErrorHandler(1), 
  2693 ;; Auto vars:     Size  Location     Type
  2694 ;;		None
  2695 ;; Return value:  Size  Location     Type
  2696 ;;                  1    wreg      void 
  2697 ;; Registers used:
  2698 ;;		wreg, status,2, status,0
  2699 ;; Tracked objects:
  2700 ;;		On entry : 0/0
  2701 ;;		On exit  : 0/0
  2702 ;;		Unchanged: 0/0
  2703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2704 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2707 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2708 ;;Total ram usage:        2 bytes
  2709 ;; Hardware stack levels used:    1
  2710 ;; Hardware stack levels required when called:    4
  2711 ;; This function calls:
  2712 ;;		Nothing
  2713 ;; This function is called by:
  2714 ;;		_EUSART2_Initialize
  2715 ;; This function uses a non-reentrant model
  2716 ;;
  2717                           
  2718                           	psect	text14
  2719  002686                     __ptext14:
  2720                           	opt callstack 0
  2721  002686                     _EUSART2_SetOverrunErrorHandler:
  2722                           	opt callstack 24
  2723  002686                     
  2724                           ;mcc_generated_files/eusart2.c: 278:     EUSART2_OverrunErrorHandler = interruptHandler;
  2725  002686  C005  F0D5         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler,_EUSART2_OverrunErrorHandler
  2726  00268A  C006  F0D6         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler+1,_EUSART2_OverrunErrorHandler+1
  2727  00268E  0012               	return		;funcret
  2728  002690                     __end_of_EUSART2_SetOverrunErrorHandler:
  2729                           	opt callstack 0
  2730                           
  2731 ;; *************** function _EUSART2_SetFramingErrorHandler *****************
  2732 ;; Defined at:
  2733 ;;		line 273 in file "mcc_generated_files/eusart2.c"
  2734 ;; Parameters:    Size  Location     Type
  2735 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2736 ;;		 -> EUSART2_DefaultFramingErrorHandler(1), 
  2737 ;; Auto vars:     Size  Location     Type
  2738 ;;		None
  2739 ;; Return value:  Size  Location     Type
  2740 ;;                  1    wreg      void 
  2741 ;; Registers used:
  2742 ;;		wreg, status,2, status,0
  2743 ;; Tracked objects:
  2744 ;;		On entry : 0/0
  2745 ;;		On exit  : 0/0
  2746 ;;		Unchanged: 0/0
  2747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2748 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2751 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2752 ;;Total ram usage:        2 bytes
  2753 ;; Hardware stack levels used:    1
  2754 ;; Hardware stack levels required when called:    4
  2755 ;; This function calls:
  2756 ;;		Nothing
  2757 ;; This function is called by:
  2758 ;;		_EUSART2_Initialize
  2759 ;; This function uses a non-reentrant model
  2760 ;;
  2761                           
  2762                           	psect	text15
  2763  002690                     __ptext15:
  2764                           	opt callstack 0
  2765  002690                     _EUSART2_SetFramingErrorHandler:
  2766                           	opt callstack 24
  2767  002690                     
  2768                           ;mcc_generated_files/eusart2.c: 274:     EUSART2_FramingErrorHandler = interruptHandler;
  2769  002690  C005  F0D7         	movff	EUSART2_SetFramingErrorHandler@interruptHandler,_EUSART2_FramingErrorHandler
  2770  002694  C006  F0D8         	movff	EUSART2_SetFramingErrorHandler@interruptHandler+1,_EUSART2_FramingErrorHandler+1
  2771  002698  0012               	return		;funcret
  2772  00269A                     __end_of_EUSART2_SetFramingErrorHandler:
  2773                           	opt callstack 0
  2774                           
  2775 ;; *************** function _EUSART2_SetErrorHandler *****************
  2776 ;; Defined at:
  2777 ;;		line 281 in file "mcc_generated_files/eusart2.c"
  2778 ;; Parameters:    Size  Location     Type
  2779 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2780 ;;		 -> EUSART2_DefaultErrorHandler(1), 
  2781 ;; Auto vars:     Size  Location     Type
  2782 ;;		None
  2783 ;; Return value:  Size  Location     Type
  2784 ;;                  1    wreg      void 
  2785 ;; Registers used:
  2786 ;;		wreg, status,2, status,0
  2787 ;; Tracked objects:
  2788 ;;		On entry : 0/0
  2789 ;;		On exit  : 0/0
  2790 ;;		Unchanged: 0/0
  2791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2792 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2795 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2796 ;;Total ram usage:        2 bytes
  2797 ;; Hardware stack levels used:    1
  2798 ;; Hardware stack levels required when called:    4
  2799 ;; This function calls:
  2800 ;;		Nothing
  2801 ;; This function is called by:
  2802 ;;		_EUSART2_Initialize
  2803 ;; This function uses a non-reentrant model
  2804 ;;
  2805                           
  2806                           	psect	text16
  2807  00269A                     __ptext16:
  2808                           	opt callstack 0
  2809  00269A                     _EUSART2_SetErrorHandler:
  2810                           	opt callstack 24
  2811  00269A                     
  2812                           ;mcc_generated_files/eusart2.c: 282:     EUSART2_ErrorHandler = interruptHandler;
  2813  00269A  C005  F0D3         	movff	EUSART2_SetErrorHandler@interruptHandler,_EUSART2_ErrorHandler
  2814  00269E  C006  F0D4         	movff	EUSART2_SetErrorHandler@interruptHandler+1,_EUSART2_ErrorHandler+1
  2815  0026A2  0012               	return		;funcret
  2816  0026A4                     __end_of_EUSART2_SetErrorHandler:
  2817                           	opt callstack 0
  2818                           
  2819 ;; *************** function _EUSART1_Initialize *****************
  2820 ;; Defined at:
  2821 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  2822 ;; Parameters:    Size  Location     Type
  2823 ;;		None
  2824 ;; Auto vars:     Size  Location     Type
  2825 ;;		None
  2826 ;; Return value:  Size  Location     Type
  2827 ;;                  1    wreg      void 
  2828 ;; Registers used:
  2829 ;;		wreg, status,2, status,0, cstack
  2830 ;; Tracked objects:
  2831 ;;		On entry : 0/0
  2832 ;;		On exit  : 0/0
  2833 ;;		Unchanged: 0/0
  2834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2839 ;;Total ram usage:        0 bytes
  2840 ;; Hardware stack levels used:    1
  2841 ;; Hardware stack levels required when called:    5
  2842 ;; This function calls:
  2843 ;;		_EUSART1_SetErrorHandler
  2844 ;;		_EUSART1_SetFramingErrorHandler
  2845 ;;		_EUSART1_SetOverrunErrorHandler
  2846 ;;		_EUSART1_SetRxInterruptHandler
  2847 ;;		_EUSART1_SetTxInterruptHandler
  2848 ;; This function is called by:
  2849 ;;		_SYSTEM_Initialize
  2850 ;; This function uses a non-reentrant model
  2851 ;;
  2852                           
  2853                           	psect	text17
  2854  001DF0                     __ptext17:
  2855                           	opt callstack 0
  2856  001DF0                     _EUSART1_Initialize:
  2857                           	opt callstack 24
  2858  001DF0                     
  2859                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
  2860  001DF0  010E               	movlb	14	; () banked
  2861  001DF2  9BC5               	bcf	197,5,b	;volatile
  2862  001DF4                     
  2863                           ; BSR set to: 14
  2864                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  2865  001DF4  0E6E               	movlw	low _EUSART1_Receive_ISR
  2866  001DF6  6E05               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
  2867  001DF8  0E1A               	movlw	high _EUSART1_Receive_ISR
  2868  001DFA  6E06               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
  2869  001DFC  EC57  F013         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  2870  001E00                     
  2871                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
  2872  001E00  010E               	movlb	14	; () banked
  2873  001E02  99C5               	bcf	197,4,b	;volatile
  2874                           
  2875                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  2876  001E04  0EBE               	movlw	low _EUSART1_Transmit_ISR
  2877  001E06  6E05               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
  2878  001E08  0E23               	movlw	high _EUSART1_Transmit_ISR
  2879  001E0A  6E06               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
  2880  001E0C  EC52  F013         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  2881  001E10                     
  2882                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
  2883  001E10  0E08               	movlw	8
  2884  001E12  6E9F               	movwf	159,c	;volatile
  2885  001E14                     
  2886                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
  2887  001E14  0E90               	movlw	144
  2888  001E16  6E9D               	movwf	157,c	;volatile
  2889  001E18                     
  2890                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
  2891  001E18  0E24               	movlw	36
  2892  001E1A  6E9E               	movwf	158,c	;volatile
  2893  001E1C                     
  2894                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x40;
  2895  001E1C  0E40               	movlw	64
  2896  001E1E  6E9B               	movwf	155,c	;volatile
  2897  001E20                     
  2898                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x03;
  2899  001E20  0E03               	movlw	3
  2900  001E22  6E9C               	movwf	156,c	;volatile
  2901  001E24                     
  2902                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  2903  001E24  0E0C               	movlw	low _EUSART1_DefaultFramingErrorHandler
  2904  001E26  6E05               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  2905  001E28  0E27               	movlw	high _EUSART1_DefaultFramingErrorHandler
  2906  001E2A  6E06               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  2907  001E2C  EC61  F013         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  2908  001E30                     
  2909                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  2910  001E30  0EFA               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  2911  001E32  6E05               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  2912  001E34  0E26               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  2913  001E36  6E06               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  2914  001E38  EC5C  F013         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  2915  001E3C                     
  2916                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  2917  001E3C  0E00               	movlw	low _EUSART1_DefaultErrorHandler
  2918  001E3E  6E05               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  2919  001E40  0E27               	movlw	high _EUSART1_DefaultErrorHandler
  2920  001E42  6E06               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  2921  001E44  EC66  F013         	call	_EUSART1_SetErrorHandler	;wreg free
  2922                           
  2923                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
  2924  001E48  0E00               	movlw	0
  2925  001E4A  0100               	movlb	0	; () banked
  2926  001E4C  6F95               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  2927                           
  2928                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
  2929  001E4E  0E00               	movlw	0
  2930  001E50  6F99               	movwf	_eusart1TxHead& (0+255),b	;volatile
  2931                           
  2932                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
  2933  001E52  0E00               	movlw	0
  2934  001E54  6F98               	movwf	_eusart1TxTail& (0+255),b	;volatile
  2935                           
  2936                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  2937  001E56  0E10               	movlw	16
  2938  001E58  6FE1               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
  2939                           
  2940                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
  2941  001E5A  0E00               	movlw	0
  2942  001E5C  6E58               	movwf	_eusart1RxHead^0,c	;volatile
  2943                           
  2944                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
  2945  001E5E  0E00               	movlw	0
  2946  001E60  6F97               	movwf	_eusart1RxTail& (0+255),b	;volatile
  2947                           
  2948                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
  2949  001E62  0E00               	movlw	0
  2950  001E64  6F96               	movwf	_eusart1RxCount& (0+255),b	;volatile
  2951  001E66                     
  2952                           ; BSR set to: 0
  2953                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
  2954  001E66  010E               	movlb	14	; () banked
  2955  001E68  8BC5               	bsf	197,5,b	;volatile
  2956  001E6A                     
  2957                           ; BSR set to: 14
  2958  001E6A  0012               	return		;funcret
  2959  001E6C                     __end_of_EUSART1_Initialize:
  2960                           	opt callstack 0
  2961                           
  2962 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  2963 ;; Defined at:
  2964 ;;		line 276 in file "mcc_generated_files/eusart1.c"
  2965 ;; Parameters:    Size  Location     Type
  2966 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2967 ;;		 -> EUSART1_Transmit_ISR(1), 
  2968 ;; Auto vars:     Size  Location     Type
  2969 ;;		None
  2970 ;; Return value:  Size  Location     Type
  2971 ;;                  1    wreg      void 
  2972 ;; Registers used:
  2973 ;;		wreg, status,2, status,0
  2974 ;; Tracked objects:
  2975 ;;		On entry : 0/0
  2976 ;;		On exit  : 0/0
  2977 ;;		Unchanged: 0/0
  2978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2979 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2982 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2983 ;;Total ram usage:        2 bytes
  2984 ;; Hardware stack levels used:    1
  2985 ;; Hardware stack levels required when called:    4
  2986 ;; This function calls:
  2987 ;;		Nothing
  2988 ;; This function is called by:
  2989 ;;		_EUSART1_Initialize
  2990 ;; This function uses a non-reentrant model
  2991 ;;
  2992                           
  2993                           	psect	text18
  2994  0026A4                     __ptext18:
  2995                           	opt callstack 0
  2996  0026A4                     _EUSART1_SetTxInterruptHandler:
  2997                           	opt callstack 24
  2998  0026A4                     
  2999                           ;mcc_generated_files/eusart1.c: 277:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  3000  0026A4  C005  F0DB         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  3001  0026A8  C006  F0DC         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  3002  0026AC  0012               	return		;funcret
  3003  0026AE                     __end_of_EUSART1_SetTxInterruptHandler:
  3004                           	opt callstack 0
  3005                           
  3006 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  3007 ;; Defined at:
  3008 ;;		line 280 in file "mcc_generated_files/eusart1.c"
  3009 ;; Parameters:    Size  Location     Type
  3010 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3011 ;;		 -> EUSART1_Receive_ISR(1), 
  3012 ;; Auto vars:     Size  Location     Type
  3013 ;;		None
  3014 ;; Return value:  Size  Location     Type
  3015 ;;                  1    wreg      void 
  3016 ;; Registers used:
  3017 ;;		wreg, status,2, status,0
  3018 ;; Tracked objects:
  3019 ;;		On entry : 0/0
  3020 ;;		On exit  : 0/0
  3021 ;;		Unchanged: 0/0
  3022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3023 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3026 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3027 ;;Total ram usage:        2 bytes
  3028 ;; Hardware stack levels used:    1
  3029 ;; Hardware stack levels required when called:    4
  3030 ;; This function calls:
  3031 ;;		Nothing
  3032 ;; This function is called by:
  3033 ;;		_EUSART1_Initialize
  3034 ;; This function uses a non-reentrant model
  3035 ;;
  3036                           
  3037                           	psect	text19
  3038  0026AE                     __ptext19:
  3039                           	opt callstack 0
  3040  0026AE                     _EUSART1_SetRxInterruptHandler:
  3041                           	opt callstack 24
  3042  0026AE                     
  3043                           ;mcc_generated_files/eusart1.c: 281:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  3044  0026AE  C005  F0D9         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  3045  0026B2  C006  F0DA         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  3046  0026B6  0012               	return		;funcret
  3047  0026B8                     __end_of_EUSART1_SetRxInterruptHandler:
  3048                           	opt callstack 0
  3049                           
  3050 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  3051 ;; Defined at:
  3052 ;;		line 268 in file "mcc_generated_files/eusart1.c"
  3053 ;; Parameters:    Size  Location     Type
  3054 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3055 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  3056 ;; Auto vars:     Size  Location     Type
  3057 ;;		None
  3058 ;; Return value:  Size  Location     Type
  3059 ;;                  1    wreg      void 
  3060 ;; Registers used:
  3061 ;;		wreg, status,2, status,0
  3062 ;; Tracked objects:
  3063 ;;		On entry : 0/0
  3064 ;;		On exit  : 0/0
  3065 ;;		Unchanged: 0/0
  3066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3067 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3070 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3071 ;;Total ram usage:        2 bytes
  3072 ;; Hardware stack levels used:    1
  3073 ;; Hardware stack levels required when called:    4
  3074 ;; This function calls:
  3075 ;;		Nothing
  3076 ;; This function is called by:
  3077 ;;		_EUSART1_Initialize
  3078 ;; This function uses a non-reentrant model
  3079 ;;
  3080                           
  3081                           	psect	text20
  3082  0026B8                     __ptext20:
  3083                           	opt callstack 0
  3084  0026B8                     _EUSART1_SetOverrunErrorHandler:
  3085                           	opt callstack 24
  3086  0026B8                     
  3087                           ;mcc_generated_files/eusart1.c: 269:     EUSART1_OverrunErrorHandler = interruptHandler;
  3088  0026B8  C005  F0CF         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  3089  0026BC  C006  F0D0         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  3090  0026C0  0012               	return		;funcret
  3091  0026C2                     __end_of_EUSART1_SetOverrunErrorHandler:
  3092                           	opt callstack 0
  3093                           
  3094 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  3095 ;; Defined at:
  3096 ;;		line 264 in file "mcc_generated_files/eusart1.c"
  3097 ;; Parameters:    Size  Location     Type
  3098 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3099 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  3100 ;; Auto vars:     Size  Location     Type
  3101 ;;		None
  3102 ;; Return value:  Size  Location     Type
  3103 ;;                  1    wreg      void 
  3104 ;; Registers used:
  3105 ;;		wreg, status,2, status,0
  3106 ;; Tracked objects:
  3107 ;;		On entry : 0/0
  3108 ;;		On exit  : 0/0
  3109 ;;		Unchanged: 0/0
  3110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3111 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3114 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3115 ;;Total ram usage:        2 bytes
  3116 ;; Hardware stack levels used:    1
  3117 ;; Hardware stack levels required when called:    4
  3118 ;; This function calls:
  3119 ;;		Nothing
  3120 ;; This function is called by:
  3121 ;;		_EUSART1_Initialize
  3122 ;; This function uses a non-reentrant model
  3123 ;;
  3124                           
  3125                           	psect	text21
  3126  0026C2                     __ptext21:
  3127                           	opt callstack 0
  3128  0026C2                     _EUSART1_SetFramingErrorHandler:
  3129                           	opt callstack 24
  3130  0026C2                     
  3131                           ;mcc_generated_files/eusart1.c: 265:     EUSART1_FramingErrorHandler = interruptHandler;
  3132  0026C2  C005  F0D1         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  3133  0026C6  C006  F0D2         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  3134  0026CA  0012               	return		;funcret
  3135  0026CC                     __end_of_EUSART1_SetFramingErrorHandler:
  3136                           	opt callstack 0
  3137                           
  3138 ;; *************** function _EUSART1_SetErrorHandler *****************
  3139 ;; Defined at:
  3140 ;;		line 272 in file "mcc_generated_files/eusart1.c"
  3141 ;; Parameters:    Size  Location     Type
  3142 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3143 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  3144 ;; Auto vars:     Size  Location     Type
  3145 ;;		None
  3146 ;; Return value:  Size  Location     Type
  3147 ;;                  1    wreg      void 
  3148 ;; Registers used:
  3149 ;;		wreg, status,2, status,0
  3150 ;; Tracked objects:
  3151 ;;		On entry : 0/0
  3152 ;;		On exit  : 0/0
  3153 ;;		Unchanged: 0/0
  3154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3155 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3158 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3159 ;;Total ram usage:        2 bytes
  3160 ;; Hardware stack levels used:    1
  3161 ;; Hardware stack levels required when called:    4
  3162 ;; This function calls:
  3163 ;;		Nothing
  3164 ;; This function is called by:
  3165 ;;		_EUSART1_Initialize
  3166 ;; This function uses a non-reentrant model
  3167 ;;
  3168                           
  3169                           	psect	text22
  3170  0026CC                     __ptext22:
  3171                           	opt callstack 0
  3172  0026CC                     _EUSART1_SetErrorHandler:
  3173                           	opt callstack 24
  3174  0026CC                     
  3175                           ;mcc_generated_files/eusart1.c: 273:     EUSART1_ErrorHandler = interruptHandler;
  3176  0026CC  C005  F0CD         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  3177  0026D0  C006  F0CE         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  3178  0026D4  0012               	return		;funcret
  3179  0026D6                     __end_of_EUSART1_SetErrorHandler:
  3180                           	opt callstack 0
  3181                           
  3182 ;; *************** function _PrintModbus *****************
  3183 ;; Defined at:
  3184 ;;		line 64 in file "main.c"
  3185 ;; Parameters:    Size  Location     Type
  3186 ;;		None
  3187 ;; Auto vars:     Size  Location     Type
  3188 ;;  i               2   41[BANK0 ] int 
  3189 ;; Return value:  Size  Location     Type
  3190 ;;                  1    wreg      void 
  3191 ;; Registers used:
  3192 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3193 ;; Tracked objects:
  3194 ;;		On entry : 0/0
  3195 ;;		On exit  : 0/0
  3196 ;;		Unchanged: 0/0
  3197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3199 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3200 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3201 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3202 ;;Total ram usage:        3 bytes
  3203 ;; Hardware stack levels used:    1
  3204 ;; Hardware stack levels required when called:   13
  3205 ;; This function calls:
  3206 ;;		_printf
  3207 ;; This function is called by:
  3208 ;;		_main
  3209 ;; This function uses a non-reentrant model
  3210 ;;
  3211                           
  3212                           	psect	text23
  3213  001EE8                     __ptext23:
  3214                           	opt callstack 0
  3215  001EE8                     _PrintModbus:
  3216                           	opt callstack 17
  3217  001EE8                     
  3218                           ;main.c: 69:     printf("Modbus Data Capture Complete:\r\n");
  3219  001EE8  0E28               	movlw	low STR_10
  3220  001EEA  0100               	movlb	0	; () banked
  3221  001EEC  6FBC               	movwf	printf@fmt& (0+255),b
  3222  001EEE  0EFF               	movlw	high STR_10
  3223  001EF0  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  3224  001EF2  ECBF  F012         	call	_printf	;wreg free
  3225  001EF6                     
  3226                           ;main.c: 70:     for(i=0; i< ModDataCnt ; i++ ){
  3227  001EF6  0E00               	movlw	0
  3228  001EF8  0100               	movlb	0	; () banked
  3229  001EFA  6FC9               	movwf	(PrintModbus@i+1)& (0+255),b
  3230  001EFC  0E00               	movlw	0
  3231  001EFE  6FC8               	movwf	PrintModbus@i& (0+255),b
  3232  001F00  EF9A  F00F         	goto	l5120
  3233  001F04                     l5116:
  3234                           
  3235                           ; BSR set to: 0
  3236                           ;main.c: 71:         printf("   Byte %i : 0x%02x \r\n", i, ModbusData[i]);
  3237  001F04  0EB5               	movlw	low STR_11
  3238  001F06  6FBC               	movwf	printf@fmt& (0+255),b
  3239  001F08  0EFF               	movlw	high STR_11
  3240  001F0A  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  3241  001F0C  C0C8  F0BE         	movff	PrintModbus@i,?_printf+2
  3242  001F10  C0C9  F0BF         	movff	PrintModbus@i+1,?_printf+3
  3243  001F14  0E00               	movlw	low _ModbusData
  3244  001F16  25C8               	addwf	PrintModbus@i& (0+255),w,b
  3245  001F18  6ED9               	movwf	fsr2l,c
  3246  001F1A  0E01               	movlw	high _ModbusData
  3247  001F1C  21C9               	addwfc	(PrintModbus@i+1)& (0+255),w,b
  3248  001F1E  6EDA               	movwf	fsr2h,c
  3249  001F20  50DF               	movf	indf2,w,c
  3250  001F22  6E55               	movwf	??_PrintModbus^0,c
  3251  001F24  5055               	movf	??_PrintModbus^0,w,c
  3252  001F26  6FC0               	movwf	(?_printf+4)& (0+255),b
  3253  001F28  6BC1               	clrf	(?_printf+5)& (0+255),b
  3254  001F2A  ECBF  F012         	call	_printf	;wreg free
  3255  001F2E                     
  3256                           ;main.c: 72:     }
  3257  001F2E  0100               	movlb	0	; () banked
  3258  001F30  4BC8               	infsnz	PrintModbus@i& (0+255),f,b
  3259  001F32  2BC9               	incf	(PrintModbus@i+1)& (0+255),f,b
  3260  001F34                     l5120:
  3261                           
  3262                           ; BSR set to: 0
  3263  001F34  5190               	movf	_ModDataCnt& (0+255),w,b
  3264  001F36  5DC8               	subwf	PrintModbus@i& (0+255),w,b
  3265  001F38  51C9               	movf	(PrintModbus@i+1)& (0+255),w,b
  3266  001F3A  0A80               	xorlw	128
  3267  001F3C  6E55               	movwf	??_PrintModbus^0,c
  3268  001F3E  5191               	movf	(_ModDataCnt+1)& (0+255),w,b
  3269  001F40  0A80               	xorlw	128
  3270  001F42  5855               	subwfb	??_PrintModbus^0,w,c
  3271  001F44  A0D8               	btfss	status,0,c
  3272  001F46  EFA7  F00F         	goto	u5311
  3273  001F4A  EFA9  F00F         	goto	u5310
  3274  001F4E                     u5311:
  3275  001F4E  EF82  F00F         	goto	l5116
  3276  001F52                     u5310:
  3277  001F52                     
  3278                           ; BSR set to: 0
  3279                           ;main.c: 73:     printf("\r\n\n");
  3280  001F52  0EDD               	movlw	low (STR_16+17)
  3281  001F54  6FBC               	movwf	printf@fmt& (0+255),b
  3282  001F56  0EFF               	movlw	high (STR_16+17)
  3283  001F58  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  3284  001F5A  ECBF  F012         	call	_printf	;wreg free
  3285  001F5E  0012               	return		;funcret
  3286  001F60                     __end_of_PrintModbus:
  3287                           	opt callstack 0
  3288                           
  3289 ;; *************** function _ModbusRx *****************
  3290 ;; Defined at:
  3291 ;;		line 142 in file "Modbus.c"
  3292 ;; Parameters:    Size  Location     Type
  3293 ;;		None
  3294 ;; Auto vars:     Size  Location     Type
  3295 ;;		None
  3296 ;; Return value:  Size  Location     Type
  3297 ;;                  1    wreg      _Bool 
  3298 ;; Registers used:
  3299 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3300 ;; Tracked objects:
  3301 ;;		On entry : 0/0
  3302 ;;		On exit  : 0/0
  3303 ;;		Unchanged: 0/0
  3304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3307 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3308 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3309 ;;Total ram usage:        1 bytes
  3310 ;; Hardware stack levels used:    1
  3311 ;; Hardware stack levels required when called:   14
  3312 ;; This function calls:
  3313 ;;		_AddRxBuffToModBus
  3314 ;;		_ClearRxBuff
  3315 ;;		_EUSART1_Read
  3316 ;;		_EUSART1_is_rx_ready
  3317 ;;		_RXMode
  3318 ;;		_checkCRC
  3319 ;;		_printf
  3320 ;; This function is called by:
  3321 ;;		_main
  3322 ;; This function uses a non-reentrant model
  3323 ;;
  3324                           
  3325                           	psect	text24
  3326  001602                     __ptext24:
  3327                           	opt callstack 0
  3328  001602                     _ModbusRx:
  3329                           	opt callstack 16
  3330  001602                     
  3331                           ;Modbus.c: 143:     RXMode();
  3332  001602  EC77  F013         	call	_RXMode	;wreg free
  3333  001606                     
  3334                           ;Modbus.c: 144:     if(EUSART1_is_rx_ready()){
  3335  001606  EC19  F013         	call	_EUSART1_is_rx_ready	;wreg free
  3336  00160A  0900               	iorlw	0
  3337  00160C  B4D8               	btfsc	status,2,c
  3338  00160E  EF0B  F00B         	goto	u5321
  3339  001612  EF0D  F00B         	goto	u5320
  3340  001616                     u5321:
  3341  001616  EF94  F00B         	goto	l5166
  3342  00161A                     u5320:
  3343  00161A                     l5128:
  3344                           
  3345                           ;Modbus.c: 146:             if(EUSART1_is_rx_ready()){
  3346  00161A  EC19  F013         	call	_EUSART1_is_rx_ready	;wreg free
  3347  00161E  0900               	iorlw	0
  3348  001620  B4D8               	btfsc	status,2,c
  3349  001622  EF15  F00B         	goto	u5331
  3350  001626  EF17  F00B         	goto	u5330
  3351  00162A                     u5331:
  3352  00162A  EF34  F00B         	goto	l5140
  3353  00162E                     u5330:
  3354  00162E  EF27  F00B         	goto	l5136
  3355  001632                     l5132:
  3356                           
  3357                           ;Modbus.c: 150:                     rxData[ByteNum] = EUSART1_Read();
  3358  001632  ECA6  F010         	call	_EUSART1_Read	;wreg free
  3359  001636  6E55               	movwf	??_ModbusRx^0,c
  3360  001638  0E00               	movlw	low _rxData
  3361  00163A  0100               	movlb	0	; () banked
  3362  00163C  258E               	addwf	_ByteNum& (0+255),w,b
  3363  00163E  6ED9               	movwf	fsr2l,c
  3364  001640  0E02               	movlw	high _rxData
  3365  001642  218F               	addwfc	(_ByteNum+1)& (0+255),w,b
  3366  001644  6EDA               	movwf	fsr2h,c
  3367  001646  C055  FFDF         	movff	??_ModbusRx,indf2
  3368  00164A                     
  3369                           ; BSR set to: 0
  3370                           ;Modbus.c: 151:                     ByteNum++;
  3371  00164A  4B8E               	infsnz	_ByteNum& (0+255),f,b
  3372  00164C  2B8F               	incf	(_ByteNum+1)& (0+255),f,b
  3373  00164E                     l5136:
  3374                           
  3375                           ;Modbus.c: 148:                 while(EUSART1_is_rx_ready()){
  3376  00164E  EC19  F013         	call	_EUSART1_is_rx_ready	;wreg free
  3377  001652  0900               	iorlw	0
  3378  001654  A4D8               	btfss	status,2,c
  3379  001656  EF2F  F00B         	goto	u5341
  3380  00165A  EF31  F00B         	goto	u5340
  3381  00165E                     u5341:
  3382  00165E  EF19  F00B         	goto	l5132
  3383  001662                     u5340:
  3384  001662                     
  3385                           ;Modbus.c: 154:                 RXStat = 1;
  3386  001662  0E01               	movlw	1
  3387  001664  0100               	movlb	0	; () banked
  3388  001666  6F93               	movwf	_RXStat& (0+255),b
  3389  001668                     l5140:
  3390                           
  3391                           ;Modbus.c: 157:             if(RXStat ==1){
  3392  001668  0100               	movlb	0	; () banked
  3393  00166A  0593               	decf	_RXStat& (0+255),w,b
  3394  00166C  A4D8               	btfss	status,2,c
  3395  00166E  EF3B  F00B         	goto	u5351
  3396  001672  EF3D  F00B         	goto	u5350
  3397  001676                     u5351:
  3398  001676  EF59  F00B         	goto	l5152
  3399  00167A                     u5350:
  3400  00167A                     
  3401                           ; BSR set to: 0
  3402                           ;Modbus.c: 160:                 AddRxBuffToModBus();
  3403  00167A  EC97  F00D         	call	_AddRxBuffToModBus	;wreg free
  3404  00167E                     
  3405                           ;Modbus.c: 161:                 ClearRxBuff();
  3406  00167E  EC74  F011         	call	_ClearRxBuff	;wreg free
  3407  001682                     
  3408                           ;Modbus.c: 162:                 RXStat = 0;
  3409  001682  0E00               	movlw	0
  3410  001684  0100               	movlb	0	; () banked
  3411  001686  6F93               	movwf	_RXStat& (0+255),b
  3412  001688                     
  3413                           ; BSR set to: 0
  3414                           ;Modbus.c: 163:                 ByteNum = 0;
  3415  001688  0E00               	movlw	0
  3416  00168A  6F8F               	movwf	(_ByteNum+1)& (0+255),b
  3417  00168C  0E00               	movlw	0
  3418  00168E  6F8E               	movwf	_ByteNum& (0+255),b
  3419  001690                     
  3420                           ; BSR set to: 0
  3421  001690  B883               	btfsc	131,4,c	;volatile
  3422  001692  EF4D  F00B         	goto	u5361
  3423  001696  EF50  F00B         	goto	u5360
  3424  00169A                     u5361:
  3425  00169A  0E01               	movlw	1
  3426  00169C  EF51  F00B         	goto	u5366
  3427  0016A0                     u5360:
  3428  0016A0  0E00               	movlw	0
  3429  0016A2                     u5366:
  3430  0016A2  0AFF               	xorlw	255
  3431  0016A4  6E55               	movwf	??_ModbusRx^0,c
  3432  0016A6  3A55               	swapf	??_ModbusRx^0,f,c
  3433  0016A8  5083               	movf	131,w,c	;volatile
  3434  0016AA  1855               	xorwf	??_ModbusRx^0,w,c
  3435  0016AC  0BEF               	andlw	-17
  3436  0016AE  1855               	xorwf	??_ModbusRx^0,w,c
  3437  0016B0  6E83               	movwf	131,c	;volatile
  3438  0016B2                     l5152:
  3439                           
  3440                           ; BSR set to: 0
  3441                           ;Modbus.c: 166:         }while(ModDataCnt != ExpectedBytes);
  3442  0016B2  51EA               	movf	_ExpectedBytes& (0+255),w,b
  3443  0016B4  1990               	xorwf	_ModDataCnt& (0+255),w,b
  3444  0016B6  E107               	bnz	u5371
  3445  0016B8  51EB               	movf	(_ExpectedBytes+1)& (0+255),w,b
  3446  0016BA  1991               	xorwf	(_ModDataCnt+1)& (0+255),w,b
  3447  0016BC  A4D8               	btfss	status,2,c
  3448  0016BE  EF63  F00B         	goto	u5371
  3449  0016C2  EF65  F00B         	goto	u5370
  3450  0016C6                     u5371:
  3451  0016C6  EF0D  F00B         	goto	l5128
  3452  0016CA                     u5370:
  3453  0016CA                     
  3454                           ; BSR set to: 0
  3455  0016CA  BA83               	btfsc	131,5,c	;volatile
  3456  0016CC  EF6A  F00B         	goto	u5381
  3457  0016D0  EF6D  F00B         	goto	u5380
  3458  0016D4                     u5381:
  3459  0016D4  0E01               	movlw	1
  3460  0016D6  EF6E  F00B         	goto	u5386
  3461  0016DA                     u5380:
  3462  0016DA  0E00               	movlw	0
  3463  0016DC                     u5386:
  3464  0016DC  0AFF               	xorlw	255
  3465  0016DE  6E55               	movwf	??_ModbusRx^0,c
  3466  0016E0  3A55               	swapf	??_ModbusRx^0,f,c
  3467  0016E2  4655               	rlncf	??_ModbusRx^0,f,c
  3468  0016E4  5083               	movf	131,w,c	;volatile
  3469  0016E6  1855               	xorwf	??_ModbusRx^0,w,c
  3470  0016E8  0BDF               	andlw	-33
  3471  0016EA  1855               	xorwf	??_ModbusRx^0,w,c
  3472  0016EC  6E83               	movwf	131,c	;volatile
  3473  0016EE                     
  3474                           ; BSR set to: 0
  3475                           ;Modbus.c: 171:         if(checkCRC() == 1)
  3476  0016EE  EC94  F009         	call	_checkCRC	;wreg free
  3477  0016F2  06E8               	decf	wreg,f,c
  3478  0016F4  A4D8               	btfss	status,2,c
  3479  0016F6  EF7F  F00B         	goto	u5391
  3480  0016FA  EF81  F00B         	goto	u5390
  3481  0016FE                     u5391:
  3482  0016FE  EF8A  F00B         	goto	l5160
  3483  001702                     u5390:
  3484  001702                     
  3485                           ;Modbus.c: 172:         {;Modbus.c: 173:             printf("CRC Checked Out. \r\n\n");
  3486  001702  0ECC               	movlw	low STR_16
  3487  001704  0100               	movlb	0	; () banked
  3488  001706  6FBC               	movwf	printf@fmt& (0+255),b
  3489  001708  0EFF               	movlw	high STR_16
  3490  00170A  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  3491  00170C  ECBF  F012         	call	_printf	;wreg free
  3492                           
  3493                           ;Modbus.c: 174:         }else{
  3494  001710  EF91  F00B         	goto	l5162
  3495  001714                     l5160:
  3496                           
  3497                           ;Modbus.c: 175:             printf("CRC did NOT check out. \r\n\n");
  3498  001714  0E81               	movlw	low STR_17
  3499  001716  0100               	movlb	0	; () banked
  3500  001718  6FBC               	movwf	printf@fmt& (0+255),b
  3501  00171A  0EFF               	movlw	high STR_17
  3502  00171C  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  3503  00171E  ECBF  F012         	call	_printf	;wreg free
  3504  001722                     l5162:
  3505                           
  3506                           ;Modbus.c: 181:         return 1;
  3507  001722  0E01               	movlw	1
  3508  001724  EF95  F00B         	goto	l685
  3509  001728                     l5166:
  3510                           
  3511                           ;Modbus.c: 183:     return 0;
  3512  001728  0E00               	movlw	0
  3513  00172A                     l685:
  3514  00172A  0012               	return		;funcret
  3515  00172C                     __end_of_ModbusRx:
  3516                           	opt callstack 0
  3517                           
  3518 ;; *************** function _checkCRC *****************
  3519 ;; Defined at:
  3520 ;;		line 110 in file "Modbus.c"
  3521 ;; Parameters:    Size  Location     Type
  3522 ;;		None
  3523 ;; Auto vars:     Size  Location     Type
  3524 ;;  i               2    8[BANK1 ] int 
  3525 ;;  crc             2    6[BANK1 ] unsigned int 
  3526 ;;  j               2    4[BANK1 ] int 
  3527 ;;  crcLow          2    2[BANK1 ] unsigned int 
  3528 ;;  crcHigh         2    0[BANK1 ] unsigned int 
  3529 ;; Return value:  Size  Location     Type
  3530 ;;                  1    wreg      _Bool 
  3531 ;; Registers used:
  3532 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3533 ;; Tracked objects:
  3534 ;;		On entry : 0/0
  3535 ;;		On exit  : 0/0
  3536 ;;		Unchanged: 0/0
  3537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3539 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3540 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3541 ;;      Totals:         0       5      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3542 ;;Total ram usage:       15 bytes
  3543 ;; Hardware stack levels used:    1
  3544 ;; Hardware stack levels required when called:   13
  3545 ;; This function calls:
  3546 ;;		_printf
  3547 ;; This function is called by:
  3548 ;;		_ModbusRx
  3549 ;; This function uses a non-reentrant model
  3550 ;;
  3551                           
  3552                           	psect	text25
  3553  001328                     __ptext25:
  3554                           	opt callstack 0
  3555  001328                     _checkCRC:
  3556                           	opt callstack 16
  3557  001328                     
  3558                           ;Modbus.c: 111:   unsigned int crc = 0xFFFF;
  3559  001328  0101               	movlb	1	; () banked
  3560  00132A  69EE               	setf	checkCRC@crc& (0+255),b
  3561  00132C  69EF               	setf	(checkCRC@crc+1)& (0+255),b
  3562  00132E                     
  3563                           ; BSR set to: 1
  3564                           ;Modbus.c: 113:   unsigned int crcLow = 0;
  3565  00132E  0E00               	movlw	0
  3566  001330  6FEB               	movwf	(checkCRC@crcLow+1)& (0+255),b
  3567  001332  0E00               	movlw	0
  3568  001334  6FEA               	movwf	checkCRC@crcLow& (0+255),b
  3569                           
  3570                           ;Modbus.c: 114:   int i,j = 0;
  3571  001336  0E00               	movlw	0
  3572  001338  6FED               	movwf	(checkCRC@j+1)& (0+255),b
  3573  00133A  0E00               	movlw	0
  3574  00133C  6FEC               	movwf	checkCRC@j& (0+255),b
  3575                           
  3576                           ;Modbus.c: 116:     for(i=0;i<ModDataCnt-2;i++){
  3577  00133E  0E00               	movlw	0
  3578  001340  6FF1               	movwf	(checkCRC@i+1)& (0+255),b
  3579  001342  0E00               	movlw	0
  3580  001344  6FF0               	movwf	checkCRC@i& (0+255),b
  3581  001346  EFD7  F009         	goto	l5062
  3582  00134A                     l5044:
  3583                           
  3584                           ; BSR set to: 0
  3585                           ;Modbus.c: 117:       crc ^= ModbusData[i];
  3586  00134A  0E00               	movlw	low _ModbusData
  3587  00134C  0101               	movlb	1	; () banked
  3588  00134E  25F0               	addwf	checkCRC@i& (0+255),w,b
  3589  001350  6ED9               	movwf	fsr2l,c
  3590  001352  0E01               	movlw	high _ModbusData
  3591  001354  21F1               	addwfc	(checkCRC@i+1)& (0+255),w,b
  3592  001356  6EDA               	movwf	fsr2h,c
  3593  001358  50DF               	movf	indf2,w,c
  3594  00135A  0100               	movlb	0	; () banked
  3595  00135C  6FC8               	movwf	??_checkCRC& (0+255),b
  3596  00135E  51C8               	movf	??_checkCRC& (0+255),w,b
  3597  001360  0101               	movlb	1	; () banked
  3598  001362  1BEE               	xorwf	checkCRC@crc& (0+255),f,b
  3599  001364                     
  3600                           ; BSR set to: 1
  3601                           ;Modbus.c: 118:       for(j=8; j!=0; j--){
  3602  001364  0E00               	movlw	0
  3603  001366  6FED               	movwf	(checkCRC@j+1)& (0+255),b
  3604  001368  0E08               	movlw	8
  3605  00136A  6FEC               	movwf	checkCRC@j& (0+255),b
  3606  00136C                     l661:
  3607                           
  3608                           ; BSR set to: 1
  3609                           ;Modbus.c: 119:         if((crc & 0x0001) != 0){
  3610  00136C  A1EE               	btfss	checkCRC@crc& (0+255),0,b
  3611  00136E  EFBB  F009         	goto	u5231
  3612  001372  EFBD  F009         	goto	u5230
  3613  001376                     u5231:
  3614  001376  EFC6  F009         	goto	l5056
  3615  00137A                     u5230:
  3616  00137A                     
  3617                           ; BSR set to: 1
  3618                           ;Modbus.c: 120:           crc >>= 1;
  3619  00137A  90D8               	bcf	status,0,c
  3620  00137C  33EF               	rrcf	(checkCRC@crc+1)& (0+255),f,b
  3621  00137E  33EE               	rrcf	checkCRC@crc& (0+255),f,b
  3622  001380                     
  3623                           ; BSR set to: 1
  3624                           ;Modbus.c: 121:           crc ^= 0xA001;
  3625  001380  0E01               	movlw	1
  3626  001382  1BEE               	xorwf	checkCRC@crc& (0+255),f,b
  3627  001384  0EA0               	movlw	160
  3628  001386  1BEF               	xorwf	(checkCRC@crc+1)& (0+255),f,b
  3629                           
  3630                           ;Modbus.c: 122:         }
  3631  001388  EFC9  F009         	goto	l664
  3632  00138C                     l5056:
  3633                           
  3634                           ; BSR set to: 1
  3635                           ;Modbus.c: 124:           crc >>= 1;
  3636  00138C  90D8               	bcf	status,0,c
  3637  00138E  33EF               	rrcf	(checkCRC@crc+1)& (0+255),f,b
  3638  001390  33EE               	rrcf	checkCRC@crc& (0+255),f,b
  3639  001392                     l664:
  3640                           
  3641                           ; BSR set to: 1
  3642                           ;Modbus.c: 126:       }
  3643  001392  07EC               	decf	checkCRC@j& (0+255),f,b
  3644  001394  A0D8               	btfss	status,0,c
  3645  001396  07ED               	decf	(checkCRC@j+1)& (0+255),f,b
  3646  001398                     
  3647                           ; BSR set to: 1
  3648  001398  51EC               	movf	checkCRC@j& (0+255),w,b
  3649  00139A  11ED               	iorwf	(checkCRC@j+1)& (0+255),w,b
  3650  00139C  A4D8               	btfss	status,2,c
  3651  00139E  EFD3  F009         	goto	u5241
  3652  0013A2  EFD5  F009         	goto	u5240
  3653  0013A6                     u5241:
  3654  0013A6  EFB6  F009         	goto	l661
  3655  0013AA                     u5240:
  3656  0013AA                     
  3657                           ; BSR set to: 1
  3658                           ;Modbus.c: 127:     }
  3659  0013AA  4BF0               	infsnz	checkCRC@i& (0+255),f,b
  3660  0013AC  2BF1               	incf	(checkCRC@i+1)& (0+255),f,b
  3661  0013AE                     l5062:
  3662                           
  3663                           ; BSR set to: 1
  3664  0013AE  0EFE               	movlw	254
  3665  0013B0  0100               	movlb	0	; () banked
  3666  0013B2  6FC8               	movwf	??_checkCRC& (0+255),b
  3667  0013B4  0EFF               	movlw	255
  3668  0013B6  6FC9               	movwf	(??_checkCRC+1)& (0+255),b
  3669  0013B8  C090  F0CA         	movff	_ModDataCnt,??_checkCRC+2
  3670  0013BC  C091  F0CB         	movff	_ModDataCnt+1,??_checkCRC+3
  3671  0013C0  51C8               	movf	??_checkCRC& (0+255),w,b
  3672  0013C2  27CA               	addwf	(??_checkCRC+2)& (0+255),f,b
  3673  0013C4  51C9               	movf	(??_checkCRC+1)& (0+255),w,b
  3674  0013C6  23CB               	addwfc	(??_checkCRC+3)& (0+255),f,b
  3675  0013C8  51CA               	movf	(??_checkCRC+2)& (0+255),w,b
  3676  0013CA  0101               	movlb	1	; () banked
  3677  0013CC  5DF0               	subwf	checkCRC@i& (0+255),w,b
  3678  0013CE  51F1               	movf	(checkCRC@i+1)& (0+255),w,b
  3679  0013D0  0A80               	xorlw	128
  3680  0013D2  0100               	movlb	0	; () banked
  3681  0013D4  6FCC               	movwf	(??_checkCRC+4)& (0+255),b
  3682  0013D6  51CB               	movf	(??_checkCRC+3)& (0+255),w,b
  3683  0013D8  0A80               	xorlw	128
  3684  0013DA  59CC               	subwfb	(??_checkCRC+4)& (0+255),w,b
  3685  0013DC  A0D8               	btfss	status,0,c
  3686  0013DE  EFF3  F009         	goto	u5251
  3687  0013E2  EFF5  F009         	goto	u5250
  3688  0013E6                     u5251:
  3689  0013E6  EFA5  F009         	goto	l5044
  3690  0013EA                     u5250:
  3691  0013EA                     
  3692                           ; BSR set to: 0
  3693                           ;Modbus.c: 129:   crcHigh = (crc & 0x00FF);
  3694  0013EA  0101               	movlb	1	; () banked
  3695  0013EC  51EE               	movf	checkCRC@crc& (0+255),w,b
  3696  0013EE  6FE8               	movwf	checkCRC@crcHigh& (0+255),b
  3697  0013F0  6BE9               	clrf	(checkCRC@crcHigh+1)& (0+255),b
  3698                           
  3699                           ;Modbus.c: 130:   crcLow = (crc & 0xFF00) >>8;
  3700  0013F2  C1EE  F0C8         	movff	checkCRC@crc,??_checkCRC
  3701  0013F6  C1EF  F0C9         	movff	checkCRC@crc+1,??_checkCRC+1
  3702  0013FA  C0C9  F0C8         	movff	??_checkCRC+1,??_checkCRC
  3703  0013FE  0100               	movlb	0	; () banked
  3704  001400  6BC9               	clrf	(??_checkCRC+1)& (0+255),b
  3705  001402  51C8               	movf	??_checkCRC& (0+255),w,b
  3706  001404  0101               	movlb	1	; () banked
  3707  001406  6FEA               	movwf	checkCRC@crcLow& (0+255),b
  3708  001408  6BEB               	clrf	(checkCRC@crcLow+1)& (0+255),b
  3709  00140A                     
  3710                           ; BSR set to: 1
  3711                           ;Modbus.c: 131:   printf("crcHigh: 0x%02x  crcLow: 0x%02x  \r\n", crcHigh, crcLow);
  3712  00140A  0EE1               	movlw	low STR_15
  3713  00140C  0100               	movlb	0	; () banked
  3714  00140E  6FBC               	movwf	printf@fmt& (0+255),b
  3715  001410  0EFE               	movlw	high STR_15
  3716  001412  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  3717  001414  C1E8  F0BE         	movff	checkCRC@crcHigh,?_printf+2
  3718  001418  C1E9  F0BF         	movff	checkCRC@crcHigh+1,?_printf+3
  3719  00141C  C1EA  F0C0         	movff	checkCRC@crcLow,?_printf+4
  3720  001420  C1EB  F0C1         	movff	checkCRC@crcLow+1,?_printf+5
  3721  001424  ECBF  F012         	call	_printf	;wreg free
  3722  001428                     
  3723                           ;Modbus.c: 132:   if((crcHigh == ModbusData[i])&&(crcLow == ModbusData[i+1]))
  3724  001428  0E00               	movlw	low _ModbusData
  3725  00142A  0101               	movlb	1	; () banked
  3726  00142C  25F0               	addwf	checkCRC@i& (0+255),w,b
  3727  00142E  6ED9               	movwf	fsr2l,c
  3728  001430  0E01               	movlw	high _ModbusData
  3729  001432  21F1               	addwfc	(checkCRC@i+1)& (0+255),w,b
  3730  001434  6EDA               	movwf	fsr2h,c
  3731  001436  50DF               	movf	indf2,w,c
  3732  001438  0100               	movlb	0	; () banked
  3733  00143A  6FC8               	movwf	??_checkCRC& (0+255),b
  3734  00143C  6BC9               	clrf	(??_checkCRC+1)& (0+255),b
  3735  00143E  0101               	movlb	1	; () banked
  3736  001440  51E8               	movf	checkCRC@crcHigh& (0+255),w,b
  3737  001442  0100               	movlb	0	; () banked
  3738  001444  19C8               	xorwf	??_checkCRC& (0+255),w,b
  3739  001446  E109               	bnz	u5261
  3740  001448  0101               	movlb	1	; () banked
  3741  00144A  51E9               	movf	(checkCRC@crcHigh+1)& (0+255),w,b
  3742  00144C  0100               	movlb	0	; () banked
  3743  00144E  19C9               	xorwf	(??_checkCRC+1)& (0+255),w,b
  3744  001450  A4D8               	btfss	status,2,c
  3745  001452  EF2D  F00A         	goto	u5261
  3746  001456  EF2F  F00A         	goto	u5260
  3747  00145A                     u5261:
  3748  00145A  EF4D  F00A         	goto	l5078
  3749  00145E                     u5260:
  3750  00145E                     
  3751                           ; BSR set to: 0
  3752  00145E  0E01               	movlw	low (_ModbusData+1)
  3753  001460  0101               	movlb	1	; () banked
  3754  001462  25F0               	addwf	checkCRC@i& (0+255),w,b
  3755  001464  6ED9               	movwf	fsr2l,c
  3756  001466  0E01               	movlw	high (_ModbusData+1)
  3757  001468  21F1               	addwfc	(checkCRC@i+1)& (0+255),w,b
  3758  00146A  6EDA               	movwf	fsr2h,c
  3759  00146C  50DF               	movf	indf2,w,c
  3760  00146E  0100               	movlb	0	; () banked
  3761  001470  6FC8               	movwf	??_checkCRC& (0+255),b
  3762  001472  6BC9               	clrf	(??_checkCRC+1)& (0+255),b
  3763  001474  0101               	movlb	1	; () banked
  3764  001476  51EA               	movf	checkCRC@crcLow& (0+255),w,b
  3765  001478  0100               	movlb	0	; () banked
  3766  00147A  19C8               	xorwf	??_checkCRC& (0+255),w,b
  3767  00147C  E109               	bnz	u5271
  3768  00147E  0101               	movlb	1	; () banked
  3769  001480  51EB               	movf	(checkCRC@crcLow+1)& (0+255),w,b
  3770  001482  0100               	movlb	0	; () banked
  3771  001484  19C9               	xorwf	(??_checkCRC+1)& (0+255),w,b
  3772  001486  A4D8               	btfss	status,2,c
  3773  001488  EF48  F00A         	goto	u5271
  3774  00148C  EF4A  F00A         	goto	u5270
  3775  001490                     u5271:
  3776  001490  EF4D  F00A         	goto	l5078
  3777  001494                     u5270:
  3778  001494                     
  3779                           ; BSR set to: 0
  3780                           ;Modbus.c: 133:   {;Modbus.c: 134:     return 1;
  3781  001494  0E01               	movlw	1
  3782  001496  EF4E  F00A         	goto	l667
  3783  00149A                     l5078:
  3784                           
  3785                           ; BSR set to: 0
  3786                           ;Modbus.c: 137:     return 0;
  3787  00149A  0E00               	movlw	0
  3788  00149C                     l667:
  3789                           
  3790                           ; BSR set to: 0
  3791  00149C  0012               	return		;funcret
  3792  00149E                     __end_of_checkCRC:
  3793                           	opt callstack 0
  3794                           
  3795 ;; *************** function _RXMode *****************
  3796 ;; Defined at:
  3797 ;;		line 21 in file "Modbus.c"
  3798 ;; Parameters:    Size  Location     Type
  3799 ;;		None
  3800 ;; Auto vars:     Size  Location     Type
  3801 ;;		None
  3802 ;; Return value:  Size  Location     Type
  3803 ;;                  1    wreg      void 
  3804 ;; Registers used:
  3805 ;;		None
  3806 ;; Tracked objects:
  3807 ;;		On entry : 0/0
  3808 ;;		On exit  : 0/0
  3809 ;;		Unchanged: 0/0
  3810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3815 ;;Total ram usage:        0 bytes
  3816 ;; Hardware stack levels used:    1
  3817 ;; Hardware stack levels required when called:    4
  3818 ;; This function calls:
  3819 ;;		Nothing
  3820 ;; This function is called by:
  3821 ;;		_main
  3822 ;;		_ModbusRx
  3823 ;; This function uses a non-reentrant model
  3824 ;;
  3825                           
  3826                           	psect	text26
  3827  0026EE                     __ptext26:
  3828                           	opt callstack 0
  3829  0026EE                     _RXMode:
  3830                           	opt callstack 26
  3831  0026EE  9086               	bcf	134,0,c	;volatile
  3832  0026F0  9683               	bcf	131,3,c	;volatile
  3833  0026F2  0012               	return		;funcret
  3834  0026F4                     __end_of_RXMode:
  3835                           	opt callstack 0
  3836                           
  3837 ;; *************** function _EUSART1_is_rx_ready *****************
  3838 ;; Defined at:
  3839 ;;		line 137 in file "mcc_generated_files/eusart1.c"
  3840 ;; Parameters:    Size  Location     Type
  3841 ;;		None
  3842 ;; Auto vars:     Size  Location     Type
  3843 ;;		None
  3844 ;; Return value:  Size  Location     Type
  3845 ;;                  1    wreg      _Bool 
  3846 ;; Registers used:
  3847 ;;		wreg, status,2
  3848 ;; Tracked objects:
  3849 ;;		On entry : 0/0
  3850 ;;		On exit  : 0/0
  3851 ;;		Unchanged: 0/0
  3852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3857 ;;Total ram usage:        0 bytes
  3858 ;; Hardware stack levels used:    1
  3859 ;; Hardware stack levels required when called:    4
  3860 ;; This function calls:
  3861 ;;		Nothing
  3862 ;; This function is called by:
  3863 ;;		_ModbusRx
  3864 ;; This function uses a non-reentrant model
  3865 ;;
  3866                           
  3867                           	psect	text27
  3868  002632                     __ptext27:
  3869                           	opt callstack 0
  3870  002632                     _EUSART1_is_rx_ready:
  3871                           	opt callstack 25
  3872  002632                     
  3873                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
  3874  002632  0100               	movlb	0	; () banked
  3875  002634  5196               	movf	_eusart1RxCount& (0+255),w,b	;volatile
  3876  002636  A4D8               	btfss	status,2,c
  3877  002638  EF20  F013         	goto	u5111
  3878  00263C  EF23  F013         	goto	u5110
  3879  002640                     u5111:
  3880  002640  0E01               	movlw	1
  3881  002642  EF24  F013         	goto	u5120
  3882  002646                     u5110:
  3883  002646  0E00               	movlw	0
  3884  002648                     u5120:
  3885  002648                     
  3886                           ; BSR set to: 0
  3887  002648  0012               	return		;funcret
  3888  00264A                     __end_of_EUSART1_is_rx_ready:
  3889                           	opt callstack 0
  3890                           
  3891 ;; *************** function _EUSART1_Read *****************
  3892 ;; Defined at:
  3893 ;;		line 151 in file "mcc_generated_files/eusart1.c"
  3894 ;; Parameters:    Size  Location     Type
  3895 ;;		None
  3896 ;; Auto vars:     Size  Location     Type
  3897 ;;  readValue       1    4[COMRAM] unsigned char 
  3898 ;; Return value:  Size  Location     Type
  3899 ;;                  1    wreg      unsigned char 
  3900 ;; Registers used:
  3901 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3902 ;; Tracked objects:
  3903 ;;		On entry : 0/0
  3904 ;;		On exit  : 0/0
  3905 ;;		Unchanged: 0/0
  3906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3908 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3910 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3911 ;;Total ram usage:        1 bytes
  3912 ;; Hardware stack levels used:    1
  3913 ;; Hardware stack levels required when called:    4
  3914 ;; This function calls:
  3915 ;;		Nothing
  3916 ;; This function is called by:
  3917 ;;		_ModbusRx
  3918 ;; This function uses a non-reentrant model
  3919 ;;
  3920                           
  3921                           	psect	text28
  3922  00214C                     __ptext28:
  3923                           	opt callstack 0
  3924  00214C                     _EUSART1_Read:
  3925                           	opt callstack 25
  3926  00214C                     l4974:
  3927                           
  3928                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
  3929  00214C  0100               	movlb	0	; () banked
  3930  00214E  5196               	movf	_eusart1RxCount& (0+255),w,b	;volatile
  3931  002150  B4D8               	btfsc	status,2,c
  3932  002152  EFAD  F010         	goto	u5141
  3933  002156  EFAF  F010         	goto	u5140
  3934  00215A                     u5141:
  3935  00215A  EFA6  F010         	goto	l4974
  3936  00215E                     u5140:
  3937  00215E                     
  3938                           ; BSR set to: 0
  3939                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
  3940  00215E  0E64               	movlw	low _eusart1RxStatusBuffer
  3941  002160  2597               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
  3942  002162  6ED9               	movwf	fsr2l,c
  3943  002164  6ADA               	clrf	fsr2h,c
  3944  002166  0E01               	movlw	high _eusart1RxStatusBuffer
  3945  002168  22DA               	addwfc	fsr2h,f,c
  3946  00216A  50DF               	movf	indf2,w,c
  3947  00216C  6F95               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  3948                           
  3949                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
  3950  00216E  0E64               	movlw	low _eusart1RxBuffer
  3951  002170  2597               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
  3952  002172  6ED9               	movwf	fsr2l,c
  3953  002174  6ADA               	clrf	fsr2h,c
  3954  002176  0E02               	movlw	high _eusart1RxBuffer
  3955  002178  22DA               	addwfc	fsr2h,f,c
  3956  00217A  50DF               	movf	indf2,w,c
  3957  00217C  6E05               	movwf	EUSART1_Read@readValue^0,c
  3958  00217E                     
  3959                           ; BSR set to: 0
  3960  00217E  2B97               	incf	_eusart1RxTail& (0+255),f,b	;volatile
  3961  002180                     
  3962                           ; BSR set to: 0
  3963                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
  3964  002180  0E63               	movlw	99
  3965  002182  6597               	cpfsgt	_eusart1RxTail& (0+255),b	;volatile
  3966  002184  EFC6  F010         	goto	u5151
  3967  002188  EFC8  F010         	goto	u5150
  3968  00218C                     u5151:
  3969  00218C  EFCA  F010         	goto	l4984
  3970  002190                     u5150:
  3971  002190                     
  3972                           ; BSR set to: 0
  3973                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
  3974  002190  0E00               	movlw	0
  3975  002192  6F97               	movwf	_eusart1RxTail& (0+255),b	;volatile
  3976  002194                     l4984:
  3977                           
  3978                           ; BSR set to: 0
  3979                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
  3980  002194  010E               	movlb	14	; () banked
  3981  002196  9BC5               	bcf	197,5,b	;volatile
  3982  002198                     
  3983                           ; BSR set to: 14
  3984                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
  3985  002198  0100               	movlb	0	; () banked
  3986  00219A  0796               	decf	_eusart1RxCount& (0+255),f,b	;volatile
  3987  00219C                     
  3988                           ; BSR set to: 0
  3989                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
  3990  00219C  010E               	movlb	14	; () banked
  3991  00219E  8BC5               	bsf	197,5,b	;volatile
  3992  0021A0                     
  3993                           ; BSR set to: 14
  3994                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
  3995  0021A0  5005               	movf	EUSART1_Read@readValue^0,w,c
  3996  0021A2                     
  3997                           ; BSR set to: 14
  3998  0021A2  0012               	return		;funcret
  3999  0021A4                     __end_of_EUSART1_Read:
  4000                           	opt callstack 0
  4001                           
  4002 ;; *************** function _ClearRxBuff *****************
  4003 ;; Defined at:
  4004 ;;		line 37 in file "Modbus.c"
  4005 ;; Parameters:    Size  Location     Type
  4006 ;;		None
  4007 ;; Auto vars:     Size  Location     Type
  4008 ;;  i               2    5[COMRAM] int 
  4009 ;; Return value:  Size  Location     Type
  4010 ;;                  1    wreg      void 
  4011 ;; Registers used:
  4012 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4013 ;; Tracked objects:
  4014 ;;		On entry : 0/0
  4015 ;;		On exit  : 0/0
  4016 ;;		Unchanged: 0/0
  4017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4019 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4020 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4021 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4022 ;;Total ram usage:        3 bytes
  4023 ;; Hardware stack levels used:    1
  4024 ;; Hardware stack levels required when called:    4
  4025 ;; This function calls:
  4026 ;;		Nothing
  4027 ;; This function is called by:
  4028 ;;		_main
  4029 ;;		_ModbusRx
  4030 ;; This function uses a non-reentrant model
  4031 ;;
  4032                           
  4033                           	psect	text29
  4034  0022E8                     __ptext29:
  4035                           	opt callstack 0
  4036  0022E8                     _ClearRxBuff:
  4037                           	opt callstack 25
  4038  0022E8                     
  4039                           ;Modbus.c: 39:     int i = 0;
  4040  0022E8  0E00               	movlw	0
  4041  0022EA  6E07               	movwf	(ClearRxBuff@i+1)^0,c
  4042  0022EC  0E00               	movlw	0
  4043  0022EE  6E06               	movwf	ClearRxBuff@i^0,c
  4044                           
  4045                           ;Modbus.c: 40:     for(i=0; i<ByteNum; i++ ){
  4046  0022F0  0E00               	movlw	0
  4047  0022F2  6E07               	movwf	(ClearRxBuff@i+1)^0,c
  4048  0022F4  0E00               	movlw	0
  4049  0022F6  6E06               	movwf	ClearRxBuff@i^0,c
  4050  0022F8  EF88  F011         	goto	l5018
  4051  0022FC                     l5014:
  4052                           
  4053                           ; BSR set to: 0
  4054                           ;Modbus.c: 41:         rxData[i] = 0xFF;
  4055  0022FC  0E00               	movlw	low _rxData
  4056  0022FE  2406               	addwf	ClearRxBuff@i^0,w,c
  4057  002300  6ED9               	movwf	fsr2l,c
  4058  002302  0E02               	movlw	high _rxData
  4059  002304  2007               	addwfc	(ClearRxBuff@i+1)^0,w,c
  4060  002306  6EDA               	movwf	fsr2h,c
  4061  002308  0EFF               	movlw	255
  4062  00230A  6EDF               	movwf	indf2,c
  4063  00230C                     
  4064                           ; BSR set to: 0
  4065                           ;Modbus.c: 42:     }
  4066  00230C  4A06               	infsnz	ClearRxBuff@i^0,f,c
  4067  00230E  2A07               	incf	(ClearRxBuff@i+1)^0,f,c
  4068  002310                     l5018:
  4069  002310  0100               	movlb	0	; () banked
  4070  002312  518E               	movf	_ByteNum& (0+255),w,b
  4071  002314  5C06               	subwf	ClearRxBuff@i^0,w,c
  4072  002316  5007               	movf	(ClearRxBuff@i+1)^0,w,c
  4073  002318  0A80               	xorlw	128
  4074  00231A  6E05               	movwf	??_ClearRxBuff^0,c
  4075  00231C  518F               	movf	(_ByteNum+1)& (0+255),w,b
  4076  00231E  0A80               	xorlw	128
  4077  002320  5805               	subwfb	??_ClearRxBuff^0,w,c
  4078  002322  A0D8               	btfss	status,0,c
  4079  002324  EF96  F011         	goto	u5191
  4080  002328  EF98  F011         	goto	u5190
  4081  00232C                     u5191:
  4082  00232C  EF7E  F011         	goto	l5014
  4083  002330                     u5190:
  4084  002330                     
  4085                           ; BSR set to: 0
  4086  002330  0012               	return		;funcret
  4087  002332                     __end_of_ClearRxBuff:
  4088                           	opt callstack 0
  4089                           
  4090 ;; *************** function _AddRxBuffToModBus *****************
  4091 ;; Defined at:
  4092 ;;		line 46 in file "Modbus.c"
  4093 ;; Parameters:    Size  Location     Type
  4094 ;;		None
  4095 ;; Auto vars:     Size  Location     Type
  4096 ;;  i               2    5[COMRAM] int 
  4097 ;; Return value:  Size  Location     Type
  4098 ;;                  1    wreg      void 
  4099 ;; Registers used:
  4100 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4101 ;; Tracked objects:
  4102 ;;		On entry : 0/0
  4103 ;;		On exit  : 0/0
  4104 ;;		Unchanged: 0/0
  4105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4107 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4108 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4109 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4110 ;;Total ram usage:        3 bytes
  4111 ;; Hardware stack levels used:    1
  4112 ;; Hardware stack levels required when called:    4
  4113 ;; This function calls:
  4114 ;;		Nothing
  4115 ;; This function is called by:
  4116 ;;		_ModbusRx
  4117 ;; This function uses a non-reentrant model
  4118 ;;
  4119                           
  4120                           	psect	text30
  4121  001B2E                     __ptext30:
  4122                           	opt callstack 0
  4123  001B2E                     _AddRxBuffToModBus:
  4124                           	opt callstack 25
  4125  001B2E                     
  4126                           ;Modbus.c: 50:     int i = 0;
  4127  001B2E  0E00               	movlw	0
  4128  001B30  6E07               	movwf	(AddRxBuffToModBus@i+1)^0,c
  4129  001B32  0E00               	movlw	0
  4130  001B34  6E06               	movwf	AddRxBuffToModBus@i^0,c
  4131                           
  4132                           ;Modbus.c: 52:     for(i=0l; i<ByteNum; i++){
  4133  001B36  0E00               	movlw	0
  4134  001B38  6E07               	movwf	(AddRxBuffToModBus@i+1)^0,c
  4135  001B3A  0E00               	movlw	0
  4136  001B3C  6E06               	movwf	AddRxBuffToModBus@i^0,c
  4137  001B3E  EFB3  F00D         	goto	l5028
  4138  001B42                     l5022:
  4139                           
  4140                           ; BSR set to: 0
  4141                           ;Modbus.c: 53:         ModbusData[ModDataCnt] = rxData[i];
  4142  001B42  0E00               	movlw	low _rxData
  4143  001B44  2406               	addwf	AddRxBuffToModBus@i^0,w,c
  4144  001B46  6ED9               	movwf	fsr2l,c
  4145  001B48  0E02               	movlw	high _rxData
  4146  001B4A  2007               	addwfc	(AddRxBuffToModBus@i+1)^0,w,c
  4147  001B4C  6EDA               	movwf	fsr2h,c
  4148  001B4E  0E00               	movlw	low _ModbusData
  4149  001B50  2590               	addwf	_ModDataCnt& (0+255),w,b
  4150  001B52  6EE1               	movwf	fsr1l,c
  4151  001B54  0E01               	movlw	high _ModbusData
  4152  001B56  2191               	addwfc	(_ModDataCnt+1)& (0+255),w,b
  4153  001B58  6EE2               	movwf	fsr1h,c
  4154  001B5A  CFDF FFE7          	movff	indf2,indf1
  4155  001B5E                     
  4156                           ; BSR set to: 0
  4157                           ;Modbus.c: 54:         ModDataCnt++;
  4158  001B5E  4B90               	infsnz	_ModDataCnt& (0+255),f,b
  4159  001B60  2B91               	incf	(_ModDataCnt+1)& (0+255),f,b
  4160  001B62                     
  4161                           ; BSR set to: 0
  4162                           ;Modbus.c: 55:     }
  4163  001B62  4A06               	infsnz	AddRxBuffToModBus@i^0,f,c
  4164  001B64  2A07               	incf	(AddRxBuffToModBus@i+1)^0,f,c
  4165  001B66                     l5028:
  4166  001B66  0100               	movlb	0	; () banked
  4167  001B68  518E               	movf	_ByteNum& (0+255),w,b
  4168  001B6A  5C06               	subwf	AddRxBuffToModBus@i^0,w,c
  4169  001B6C  5007               	movf	(AddRxBuffToModBus@i+1)^0,w,c
  4170  001B6E  0A80               	xorlw	128
  4171  001B70  6E05               	movwf	??_AddRxBuffToModBus^0,c
  4172  001B72  518F               	movf	(_ByteNum+1)& (0+255),w,b
  4173  001B74  0A80               	xorlw	128
  4174  001B76  5805               	subwfb	??_AddRxBuffToModBus^0,w,c
  4175  001B78  A0D8               	btfss	status,0,c
  4176  001B7A  EFC1  F00D         	goto	u5201
  4177  001B7E  EFC3  F00D         	goto	u5200
  4178  001B82                     u5201:
  4179  001B82  EFA1  F00D         	goto	l5022
  4180  001B86                     u5200:
  4181  001B86                     
  4182                           ; BSR set to: 0
  4183                           ;Modbus.c: 60:     if(ModbusData[1] == 0x0F){
  4184  001B86  0E0F               	movlw	15
  4185  001B88  0101               	movlb	1	; () banked
  4186  001B8A  1901               	xorwf	(_ModbusData+1)& (0+255),w,b
  4187  001B8C  A4D8               	btfss	status,2,c
  4188  001B8E  EFCB  F00D         	goto	u5211
  4189  001B92  EFCD  F00D         	goto	u5210
  4190  001B96                     u5211:
  4191  001B96  EFD6  F00D         	goto	l5034
  4192  001B9A                     u5210:
  4193  001B9A                     l5032:
  4194                           
  4195                           ; BSR set to: 1
  4196                           ;Modbus.c: 61:         ExpectedBytes = ModbusData[6] + 9;
  4197  001B9A  0E09               	movlw	9
  4198  001B9C  2506               	addwf	(_ModbusData+6)& (0+255),w,b
  4199  001B9E  0100               	movlb	0	; () banked
  4200  001BA0  6FEA               	movwf	_ExpectedBytes& (0+255),b
  4201  001BA2  6BEB               	clrf	(_ExpectedBytes+1)& (0+255),b
  4202  001BA4  0E00               	movlw	0
  4203  001BA6  23EB               	addwfc	(_ExpectedBytes+1)& (0+255),f,b
  4204                           
  4205                           ;Modbus.c: 62:     }else if (ModbusData[1] == 0x10){
  4206  001BA8  EFE6  F00D         	goto	l646
  4207  001BAC                     l5034:
  4208                           
  4209                           ; BSR set to: 1
  4210  001BAC  0E10               	movlw	16
  4211  001BAE  1901               	xorwf	(_ModbusData+1)& (0+255),w,b
  4212  001BB0  A4D8               	btfss	status,2,c
  4213  001BB2  EFDD  F00D         	goto	u5221
  4214  001BB6  EFDF  F00D         	goto	u5220
  4215  001BBA                     u5221:
  4216  001BBA  EFE1  F00D         	goto	l5038
  4217  001BBE                     u5220:
  4218  001BBE  EFCD  F00D         	goto	l5032
  4219  001BC2                     l5038:
  4220                           
  4221                           ; BSR set to: 1
  4222                           ;Modbus.c: 65:         ExpectedBytes = 8;
  4223  001BC2  0E00               	movlw	0
  4224  001BC4  0100               	movlb	0	; () banked
  4225  001BC6  6FEB               	movwf	(_ExpectedBytes+1)& (0+255),b
  4226  001BC8  0E08               	movlw	8
  4227  001BCA  6FEA               	movwf	_ExpectedBytes& (0+255),b
  4228  001BCC                     l646:
  4229                           
  4230                           ; BSR set to: 0
  4231  001BCC  0012               	return		;funcret
  4232  001BCE                     __end_of_AddRxBuffToModBus:
  4233                           	opt callstack 0
  4234                           
  4235 ;; *************** function _InitialiseString *****************
  4236 ;; Defined at:
  4237 ;;		line 22 in file "main.c"
  4238 ;; Parameters:    Size  Location     Type
  4239 ;;		None
  4240 ;; Auto vars:     Size  Location     Type
  4241 ;;		None
  4242 ;; Return value:  Size  Location     Type
  4243 ;;                  1    wreg      void 
  4244 ;; Registers used:
  4245 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4246 ;; Tracked objects:
  4247 ;;		On entry : 0/0
  4248 ;;		On exit  : 0/0
  4249 ;;		Unchanged: 0/0
  4250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4255 ;;Total ram usage:        0 bytes
  4256 ;; Hardware stack levels used:    1
  4257 ;; Hardware stack levels required when called:   13
  4258 ;; This function calls:
  4259 ;;		_printf
  4260 ;; This function is called by:
  4261 ;;		_main
  4262 ;; This function uses a non-reentrant model
  4263 ;;
  4264                           
  4265                           	psect	text31
  4266  001E6C                     __ptext31:
  4267                           	opt callstack 0
  4268  001E6C                     _InitialiseString:
  4269                           	opt callstack 17
  4270  001E6C                     
  4271                           ;main.c: 25:     printf("\rDan and Sam's Modbus GPIO Expansion - AP000xxxxx V0.1\r\n");
  4272  001E6C  0E11               	movlw	low STR_1
  4273  001E6E  0100               	movlb	0	; () banked
  4274  001E70  6FBC               	movwf	printf@fmt& (0+255),b
  4275  001E72  0EFE               	movlw	high STR_1
  4276  001E74  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  4277  001E76  ECBF  F012         	call	_printf	;wreg free
  4278                           
  4279                           ;main.c: 26:     printf("\rCard Ser No. xxxxxxx \r\n");
  4280  001E7A  0E9C               	movlw	low STR_2
  4281  001E7C  0100               	movlb	0	; () banked
  4282  001E7E  6FBC               	movwf	printf@fmt& (0+255),b
  4283  001E80  0EFF               	movlw	high STR_2
  4284  001E82  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  4285  001E84  ECBF  F012         	call	_printf	;wreg free
  4286                           
  4287                           ;main.c: 27:     printf("\rCompiled on %s at %s by XC8 version %u\r\n\n",
  4288  001E88  0EB6               	movlw	low STR_3
  4289  001E8A  0100               	movlb	0	; () banked
  4290  001E8C  6FBC               	movwf	printf@fmt& (0+255),b
  4291  001E8E  0EFE               	movlw	high STR_3
  4292  001E90  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  4293  001E92  0EE1               	movlw	low STR_4
  4294  001E94  6FBE               	movwf	(?_printf+2)& (0+255),b
  4295  001E96  0EFF               	movlw	high STR_4
  4296  001E98  6FBF               	movwf	(?_printf+3)& (0+255),b
  4297  001E9A  0EED               	movlw	low STR_5
  4298  001E9C  6FC0               	movwf	(?_printf+4)& (0+255),b
  4299  001E9E  0EFF               	movlw	high STR_5
  4300  001EA0  6FC1               	movwf	(?_printf+5)& (0+255),b
  4301  001EA2  0E08               	movlw	8
  4302  001EA4  6FC3               	movwf	(?_printf+7)& (0+255),b
  4303  001EA6  0E34               	movlw	52
  4304  001EA8  6FC2               	movwf	(?_printf+6)& (0+255),b
  4305  001EAA  ECBF  F012         	call	_printf	;wreg free
  4306                           
  4307                           ;main.c: 29:     printf("\rFunction Codes Supported:\r\n");
  4308  001EAE  0E48               	movlw	low STR_6
  4309  001EB0  0100               	movlb	0	; () banked
  4310  001EB2  6FBC               	movwf	printf@fmt& (0+255),b
  4311  001EB4  0EFF               	movlw	high STR_6
  4312  001EB6  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  4313  001EB8  ECBF  F012         	call	_printf	;wreg free
  4314                           
  4315                           ;main.c: 30:     printf("\r   0x03 - Read Multiple Registers (Max 32x 16bit)\r\n");
  4316  001EBC  0E81               	movlw	low STR_7
  4317  001EBE  0100               	movlb	0	; () banked
  4318  001EC0  6FBC               	movwf	printf@fmt& (0+255),b
  4319  001EC2  0EFE               	movlw	high STR_7
  4320  001EC4  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  4321  001EC6  ECBF  F012         	call	_printf	;wreg free
  4322                           
  4323                           ;main.c: 31:     printf("\r   0x10 - Write Multiple Registers (Max 32x 16bit)\r\n\n");
  4324  001ECA  0E4A               	movlw	low STR_8
  4325  001ECC  0100               	movlb	0	; () banked
  4326  001ECE  6FBC               	movwf	printf@fmt& (0+255),b
  4327  001ED0  0EFE               	movlw	high STR_8
  4328  001ED2  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  4329  001ED4  ECBF  F012         	call	_printf	;wreg free
  4330                           
  4331                           ;main.c: 32:     printf("\rInitalisation Complete - Ready\r\n\n");
  4332  001ED8  0E05               	movlw	low STR_9
  4333  001EDA  0100               	movlb	0	; () banked
  4334  001EDC  6FBC               	movwf	printf@fmt& (0+255),b
  4335  001EDE  0EFF               	movlw	high STR_9
  4336  001EE0  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  4337  001EE2  ECBF  F012         	call	_printf	;wreg free
  4338  001EE6  0012               	return		;funcret
  4339  001EE8                     __end_of_InitialiseString:
  4340                           	opt callstack 0
  4341                           
  4342 ;; *************** function _printf *****************
  4343 ;; Defined at:
  4344 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
  4345 ;; Parameters:    Size  Location     Type
  4346 ;;  fmt             2   29[BANK0 ] PTR const unsigned char 
  4347 ;;		 -> STR_17(27), STR_16(21), STR_15(36), STR_14(8), 
  4348 ;;		 -> STR_13(28), STR_12(4), STR_11(23), STR_10(32), 
  4349 ;;		 -> STR_9(35), STR_8(55), STR_7(53), STR_6(29), 
  4350 ;;		 -> STR_3(43), STR_2(25), STR_1(57), 
  4351 ;; Auto vars:     Size  Location     Type
  4352 ;;  ap              2   39[BANK0 ] PTR void [1]
  4353 ;;		 -> ?_printf(2), 
  4354 ;;  ret             2    0        int 
  4355 ;; Return value:  Size  Location     Type
  4356 ;;                  2   29[BANK0 ] int 
  4357 ;; Registers used:
  4358 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4359 ;; Tracked objects:
  4360 ;;		On entry : 0/0
  4361 ;;		On exit  : 0/0
  4362 ;;		Unchanged: 0/0
  4363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4364 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4365 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4367 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4368 ;;Total ram usage:       12 bytes
  4369 ;; Hardware stack levels used:    1
  4370 ;; Hardware stack levels required when called:   12
  4371 ;; This function calls:
  4372 ;;		_vfprintf
  4373 ;; This function is called by:
  4374 ;;		_InitialiseString
  4375 ;;		_PrintModbus
  4376 ;;		_main
  4377 ;;		_checkCRC
  4378 ;;		_ModbusRx
  4379 ;;		_generateCRC
  4380 ;; This function uses a non-reentrant model
  4381 ;;
  4382                           
  4383                           	psect	text32
  4384  00257E                     __ptext32:
  4385                           	opt callstack 0
  4386  00257E                     _printf:
  4387                           	opt callstack 18
  4388  00257E  0EBE               	movlw	low (?_printf+2)
  4389  002580  0100               	movlb	0	; () banked
  4390  002582  6FC6               	movwf	printf@ap& (0+255),b
  4391  002584  0E00               	movlw	high (?_printf+2)
  4392  002586  6FC7               	movwf	(printf@ap+1)& (0+255),b
  4393  002588                     
  4394                           ; BSR set to: 0
  4395  002588  0E00               	movlw	0
  4396  00258A  6FB6               	movwf	vfprintf@fp& (0+255),b
  4397  00258C  0E00               	movlw	0
  4398  00258E  6FB7               	movwf	(vfprintf@fp+1)& (0+255),b
  4399  002590  C0BC  F0B8         	movff	printf@fmt,vfprintf@fmt
  4400  002594  C0BD  F0B9         	movff	printf@fmt+1,vfprintf@fmt+1
  4401  002598  0EC6               	movlw	low printf@ap
  4402  00259A  6FBA               	movwf	vfprintf@ap& (0+255),b
  4403  00259C  0E00               	movlw	high printf@ap
  4404  00259E  6FBB               	movwf	(vfprintf@ap+1)& (0+255),b
  4405  0025A0  ECE7  F00F         	call	_vfprintf	;wreg free
  4406  0025A4  0012               	return		;funcret
  4407  0025A6                     __end_of_printf:
  4408                           	opt callstack 0
  4409                           
  4410 ;; *************** function _vfprintf *****************
  4411 ;; Defined at:
  4412 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4413 ;; Parameters:    Size  Location     Type
  4414 ;;  fp              2   23[BANK0 ] PTR struct _IO_FILE
  4415 ;;		 -> NULL(0), 
  4416 ;;  fmt             2   25[BANK0 ] PTR const unsigned char 
  4417 ;;		 -> STR_17(27), STR_16(21), STR_15(36), STR_14(8), 
  4418 ;;		 -> STR_13(28), STR_12(4), STR_11(23), STR_10(32), 
  4419 ;;		 -> STR_9(35), STR_8(55), STR_7(53), STR_6(29), 
  4420 ;;		 -> STR_3(43), STR_2(25), STR_1(57), 
  4421 ;;  ap              2   27[BANK0 ] PTR PTR void 
  4422 ;;		 -> printf@ap(2), 
  4423 ;; Auto vars:     Size  Location     Type
  4424 ;;  cfmt            2   82[COMRAM] PTR unsigned char 
  4425 ;;		 -> STR_17(27), STR_16(21), STR_15(36), STR_14(8), 
  4426 ;;		 -> STR_13(28), STR_12(4), STR_11(23), STR_10(32), 
  4427 ;;		 -> STR_9(35), STR_8(55), STR_7(53), STR_6(29), 
  4428 ;;		 -> STR_3(43), STR_2(25), STR_1(57), 
  4429 ;; Return value:  Size  Location     Type
  4430 ;;                  2   23[BANK0 ] int 
  4431 ;; Registers used:
  4432 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4433 ;; Tracked objects:
  4434 ;;		On entry : 0/0
  4435 ;;		On exit  : 0/0
  4436 ;;		Unchanged: 0/0
  4437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4438 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4439 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4441 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4442 ;;Total ram usage:        8 bytes
  4443 ;; Hardware stack levels used:    1
  4444 ;; Hardware stack levels required when called:   11
  4445 ;; This function calls:
  4446 ;;		_vfpfcnvrt
  4447 ;; This function is called by:
  4448 ;;		_printf
  4449 ;; This function uses a non-reentrant model
  4450 ;;
  4451                           
  4452                           	psect	text33
  4453  001FCE                     __ptext33:
  4454                           	opt callstack 0
  4455  001FCE                     _vfprintf:
  4456                           	opt callstack 18
  4457  001FCE                     
  4458                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  4459  001FCE  C0B8  F053         	movff	vfprintf@fmt,vfprintf@cfmt
  4460  001FD2  C0B9  F054         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4461  001FD6                     
  4462                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  4463  001FD6  0E00               	movlw	0
  4464  001FD8  0100               	movlb	0	; () banked
  4465  001FDA  6F89               	movwf	(_nout+1)& (0+255),b
  4466  001FDC  0E00               	movlw	0
  4467  001FDE  6F88               	movwf	_nout& (0+255),b
  4468                           
  4469                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4470  001FE0  EF05  F010         	goto	l4856
  4471  001FE4                     l4854:
  4472                           
  4473                           ; BSR set to: 0
  4474                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  4475  001FE4  C0B6  F049         	movff	vfprintf@fp,vfpfcnvrt@fp
  4476  001FE8  C0B7  F04A         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4477  001FEC  0E53               	movlw	low vfprintf@cfmt
  4478  001FEE  6E4B               	movwf	vfpfcnvrt@fmt^0,c
  4479  001FF0  0E00               	movlw	high vfprintf@cfmt
  4480  001FF2  6E4C               	movwf	(vfpfcnvrt@fmt+1)^0,c
  4481  001FF4  C0BA  F04D         	movff	vfprintf@ap,vfpfcnvrt@ap
  4482  001FF8  C0BB  F04E         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4483  001FFC  EC95  F000         	call	_vfpfcnvrt	;wreg free
  4484  002000  5049               	movf	?_vfpfcnvrt^0,w,c
  4485  002002  0100               	movlb	0	; () banked
  4486  002004  2788               	addwf	_nout& (0+255),f,b
  4487  002006  504A               	movf	(?_vfpfcnvrt+1)^0,w,c
  4488  002008  2389               	addwfc	(_nout+1)& (0+255),f,b
  4489  00200A                     l4856:
  4490                           
  4491                           ; BSR set to: 0
  4492                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4493  00200A  C053  FFF6         	movff	vfprintf@cfmt,tblptrl
  4494  00200E  C054  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4495  002012                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4496  002012  6AF8               	clrf	tblptru,c
  4497  002014                     	endif
  4498  002014                     	if	0	;tblptru may be non-zero
  4499  002014                     	endif
  4500  002014  0008               	tblrd		*
  4501  002016  50F5               	movf	tablat,w,c
  4502  002018  0900               	iorlw	0
  4503  00201A  A4D8               	btfss	status,2,c
  4504  00201C  EF12  F010         	goto	u5081
  4505  002020  EF14  F010         	goto	u5080
  4506  002024                     u5081:
  4507  002024  EFF2  F00F         	goto	l4854
  4508  002028                     u5080:
  4509  002028                     
  4510                           ; BSR set to: 0
  4511                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  4512  002028  C088  F0B6         	movff	_nout,?_vfprintf
  4513  00202C  C089  F0B7         	movff	_nout+1,?_vfprintf+1
  4514  002030                     
  4515                           ; BSR set to: 0
  4516  002030  0012               	return		;funcret
  4517  002032                     __end_of_vfprintf:
  4518                           	opt callstack 0
  4519                           
  4520 ;; *************** function _vfpfcnvrt *****************
  4521 ;; Defined at:
  4522 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4523 ;; Parameters:    Size  Location     Type
  4524 ;;  fp              2   72[COMRAM] PTR struct _IO_FILE
  4525 ;;		 -> NULL(0), 
  4526 ;;  fmt             2   74[COMRAM] PTR PTR unsigned char 
  4527 ;;		 -> vfprintf@cfmt(2), 
  4528 ;;  ap              2   76[COMRAM] PTR PTR void 
  4529 ;;		 -> printf@ap(2), 
  4530 ;; Auto vars:     Size  Location     Type
  4531 ;;  llu             8   15[BANK0 ] unsigned long long 
  4532 ;;  ll              8    0[BANK0 ] long long 
  4533 ;;  f               4    0        long long 
  4534 ;;  vp              3    0        PTR void 
  4535 ;;  ct              3    0        unsigned char [3]
  4536 ;;  done            2   11[BANK0 ] int 
  4537 ;;  cp              2    8[BANK0 ] PTR unsigned char 
  4538 ;;		 -> ?_printf(2), STR_5(9), STR_4(12), 
  4539 ;;  i               2    0        int 
  4540 ;;  c               1   10[BANK0 ] unsigned char 
  4541 ;; Return value:  Size  Location     Type
  4542 ;;                  2   72[COMRAM] int 
  4543 ;; Registers used:
  4544 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4545 ;; Tracked objects:
  4546 ;;		On entry : 0/0
  4547 ;;		On exit  : 0/0
  4548 ;;		Unchanged: 0/0
  4549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4550 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4551 ;;      Locals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4552 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4553 ;;      Totals:        10      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4554 ;;Total ram usage:       33 bytes
  4555 ;; Hardware stack levels used:    1
  4556 ;; Hardware stack levels required when called:   10
  4557 ;; This function calls:
  4558 ;;		_atoi
  4559 ;;		_dtoa
  4560 ;;		_fputc
  4561 ;;		_isdigit
  4562 ;;		_stoa
  4563 ;;		_utoa
  4564 ;;		_xtoa
  4565 ;; This function is called by:
  4566 ;;		_vfprintf
  4567 ;; This function uses a non-reentrant model
  4568 ;;
  4569                           
  4570                           	psect	text34
  4571  00012A                     __ptext34:
  4572                           	opt callstack 0
  4573  00012A                     _vfpfcnvrt:
  4574                           	opt callstack 18
  4575  00012A                     
  4576                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  4577  00012A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4578  00012E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4579  000132  CFDE FFF6          	movff	postinc2,tblptrl
  4580  000136  CFDD FFF7          	movff	postdec2,tblptrh
  4581  00013A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4582  00013A  6AF8               	clrf	tblptru,c
  4583  00013C                     	endif
  4584  00013C                     	if	0	;tblptru may be non-zero
  4585  00013C                     	endif
  4586  00013C  0008               	tblrd		*
  4587  00013E  50F5               	movf	tablat,w,c
  4588  000140  0A25               	xorlw	37
  4589  000142  A4D8               	btfss	status,2,c
  4590  000144  EFA6  F000         	goto	u4931
  4591  000148  EFA8  F000         	goto	u4930
  4592  00014C                     u4931:
  4593  00014C  EF3D  F003         	goto	l4832
  4594  000150                     u4930:
  4595  000150                     
  4596                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  4597  000150  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4598  000154  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4599  000158  2ADE               	incf	postinc2,f,c
  4600  00015A  0E00               	movlw	0
  4601  00015C  22DD               	addwfc	postdec2,f,c
  4602  00015E                     
  4603                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  4604  00015E  0E00               	movlw	0
  4605  000160  0100               	movlb	0	; () banked
  4606  000162  6F8B               	movwf	(_width+1)& (0+255),b
  4607  000164  0E00               	movlw	0
  4608  000166  6F8A               	movwf	_width& (0+255),b
  4609  000168  C08A  F056         	movff	_width,_flags
  4610  00016C  C08B  F057         	movff	_width+1,_flags+1
  4611  000170                     
  4612                           ; BSR set to: 0
  4613                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  4614  000170  698C               	setf	_prec& (0+255),b
  4615  000172  698D               	setf	(_prec+1)& (0+255),b
  4616  000174                     
  4617                           ; BSR set to: 0
  4618                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  4619  000174  0E00               	movlw	0
  4620  000176  6FAB               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  4621  000178  0E00               	movlw	0
  4622  00017A  6FAA               	movwf	vfpfcnvrt@done& (0+255),b
  4623                           
  4624                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  4625  00017C  EF07  F001         	goto	l4754
  4626  000180                     l4728:
  4627                           
  4628                           ; BSR set to: 0
  4629                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  4630  000180  8056               	bsf	_flags^0,0,c
  4631  000182                     l4730:
  4632                           
  4633                           ; BSR set to: 0
  4634                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  4635  000182  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4636  000186  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4637  00018A  2ADE               	incf	postinc2,f,c
  4638  00018C  0E00               	movlw	0
  4639  00018E  22DD               	addwfc	postdec2,f,c
  4640                           
  4641                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  4642  000190  EF07  F001         	goto	l4754
  4643  000194                     l4732:
  4644                           
  4645                           ; BSR set to: 0
  4646                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  4647  000194  8256               	bsf	_flags^0,1,c
  4648  000196  EFC1  F000         	goto	l4730
  4649  00019A                     l4736:
  4650                           
  4651                           ; BSR set to: 0
  4652                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  4653  00019A  8456               	bsf	_flags^0,2,c
  4654  00019C  EFC1  F000         	goto	l4730
  4655  0001A0                     l4740:
  4656                           
  4657                           ; BSR set to: 0
  4658                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  4659  0001A0  8656               	bsf	_flags^0,3,c
  4660  0001A2  EFC1  F000         	goto	l4730
  4661  0001A6                     l4744:
  4662                           
  4663                           ; BSR set to: 0
  4664                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  4665  0001A6  8856               	bsf	_flags^0,4,c
  4666  0001A8  EFC1  F000         	goto	l4730
  4667  0001AC                     l4748:
  4668                           
  4669                           ; BSR set to: 0
  4670                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  4671  0001AC  0E00               	movlw	0
  4672  0001AE  6FAB               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  4673  0001B0  0E01               	movlw	1
  4674  0001B2  6FAA               	movwf	vfpfcnvrt@done& (0+255),b
  4675                           
  4676                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  4677  0001B4  EF07  F001         	goto	l4754
  4678  0001B8                     l4752:
  4679                           
  4680                           ; BSR set to: 0
  4681  0001B8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4682  0001BC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4683  0001C0  CFDE FFF6          	movff	postinc2,tblptrl
  4684  0001C4  CFDD FFF7          	movff	postdec2,tblptrh
  4685  0001C8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4686  0001C8  6AF8               	clrf	tblptru,c
  4687  0001CA                     	endif
  4688  0001CA                     	if	0	;tblptru may be non-zero
  4689  0001CA                     	endif
  4690  0001CA  0008               	tblrd		*
  4691  0001CC  50F5               	movf	tablat,w,c
  4692  0001CE  6E4F               	movwf	??_vfpfcnvrt^0,c
  4693  0001D0  6A50               	clrf	(??_vfpfcnvrt+1)^0,c
  4694                           
  4695                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4696                           ; Switch size 1, requested type "simple"
  4697                           ; Number of cases is 1, Range of values is 0 to 0
  4698                           ; switch strategies available:
  4699                           ; Name         Instructions Cycles
  4700                           ; simple_byte            4     3 (average)
  4701                           ;	Chosen strategy is simple_byte
  4702  0001D2  5050               	movf	(??_vfpfcnvrt+1)^0,w,c
  4703  0001D4  0A00               	xorlw	0	; case 0
  4704  0001D6  B4D8               	btfsc	status,2,c
  4705  0001D8  EFF0  F000         	goto	l5322
  4706  0001DC  EFD6  F000         	goto	l4748
  4707  0001E0                     l5322:
  4708                           
  4709                           ; BSR set to: 0
  4710                           ; Switch size 1, requested type "simple"
  4711                           ; Number of cases is 5, Range of values is 32 to 48
  4712                           ; switch strategies available:
  4713                           ; Name         Instructions Cycles
  4714                           ; simple_byte           16     9 (average)
  4715                           ;	Chosen strategy is simple_byte
  4716  0001E0  504F               	movf	??_vfpfcnvrt^0,w,c
  4717  0001E2  0A20               	xorlw	32	; case 32
  4718  0001E4  B4D8               	btfsc	status,2,c
  4719  0001E6  EFD0  F000         	goto	l4740
  4720  0001EA  0A03               	xorlw	3	; case 35
  4721  0001EC  B4D8               	btfsc	status,2,c
  4722  0001EE  EFD3  F000         	goto	l4744
  4723  0001F2  0A08               	xorlw	8	; case 43
  4724  0001F4  B4D8               	btfsc	status,2,c
  4725  0001F6  EFCD  F000         	goto	l4736
  4726  0001FA  0A06               	xorlw	6	; case 45
  4727  0001FC  B4D8               	btfsc	status,2,c
  4728  0001FE  EFC0  F000         	goto	l4728
  4729  000202  0A1D               	xorlw	29	; case 48
  4730  000204  B4D8               	btfsc	status,2,c
  4731  000206  EFCA  F000         	goto	l4732
  4732  00020A  EFD6  F000         	goto	l4748
  4733  00020E                     l4754:
  4734                           
  4735                           ; BSR set to: 0
  4736                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  4737  00020E  51AA               	movf	vfpfcnvrt@done& (0+255),w,b
  4738  000210  11AB               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  4739  000212  B4D8               	btfsc	status,2,c
  4740  000214  EF0E  F001         	goto	u4941
  4741  000218  EF10  F001         	goto	u4940
  4742  00021C                     u4941:
  4743  00021C  EFDC  F000         	goto	l4752
  4744  000220                     u4940:
  4745  000220                     
  4746                           ; BSR set to: 0
  4747                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  4748  000220  A056               	btfss	_flags^0,0,c
  4749  000222  EF15  F001         	goto	u4951
  4750  000226  EF17  F001         	goto	u4950
  4751  00022A                     u4951:
  4752  00022A  EF18  F001         	goto	l4758
  4753  00022E                     u4950:
  4754  00022E                     
  4755                           ; BSR set to: 0
  4756                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  4757  00022E  9256               	bcf	_flags^0,1,c
  4758  000230                     l4758:
  4759                           
  4760                           ; BSR set to: 0
  4761                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  4762  000230  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4763  000234  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4764  000238  CFDE FFF6          	movff	postinc2,tblptrl
  4765  00023C  CFDD FFF7          	movff	postdec2,tblptrh
  4766  000240                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4767  000240  6AF8               	clrf	tblptru,c
  4768  000242                     	endif
  4769  000242                     	if	0	;tblptru may be non-zero
  4770  000242                     	endif
  4771  000242  0008               	tblrd		*
  4772  000244  50F5               	movf	tablat,w,c
  4773  000246  0A2A               	xorlw	42
  4774  000248  A4D8               	btfss	status,2,c
  4775  00024A  EF29  F001         	goto	u4961
  4776  00024E  EF2B  F001         	goto	u4960
  4777  000252                     u4961:
  4778  000252  EF54  F001         	goto	l4766
  4779  000256                     u4960:
  4780  000256                     
  4781                           ; BSR set to: 0
  4782                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  4783  000256  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4784  00025A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4785  00025E  2ADE               	incf	postinc2,f,c
  4786  000260  0E00               	movlw	0
  4787  000262  22DD               	addwfc	postdec2,f,c
  4788                           
  4789                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  4790  000264  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4791  000268  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4792  00026C  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  4793  000270  0E02               	movlw	2
  4794  000272  26DE               	addwf	postinc2,f,c
  4795  000274  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  4796  000278  0E00               	movlw	0
  4797  00027A  22DD               	addwfc	postdec2,f,c
  4798  00027C  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4799  000280  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4800  000284  CFDE F08A          	movff	postinc2,_width
  4801  000288  CFDD F08B          	movff	postdec2,_width+1
  4802  00028C                     
  4803                           ; BSR set to: 0
  4804                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  4805  00028C  BF8B               	btfsc	(_width+1)& (0+255),7,b
  4806  00028E  EF4D  F001         	goto	u4970
  4807  000292  EF4B  F001         	goto	u4971
  4808  000296                     u4971:
  4809  000296  EF99  F001         	goto	l4776
  4810  00029A                     u4970:
  4811  00029A                     
  4812                           ; BSR set to: 0
  4813                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  4814  00029A  8056               	bsf	_flags^0,0,c
  4815                           
  4816                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  4817  00029C  6D8A               	negf	_width& (0+255),b
  4818  00029E  1F8B               	comf	(_width+1)& (0+255),f,b
  4819  0002A0  B0D8               	btfsc	status,0,c
  4820  0002A2  2B8B               	incf	(_width+1)& (0+255),f,b
  4821  0002A4  EF99  F001         	goto	l4776
  4822  0002A8                     l4766:
  4823                           
  4824                           ; BSR set to: 0
  4825                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  4826  0002A8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4827  0002AC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4828  0002B0  CFDE F00C          	movff	postinc2,atoi@s
  4829  0002B4  CFDD F00D          	movff	postdec2,atoi@s+1
  4830  0002B8  EC03  F008         	call	_atoi	;wreg free
  4831  0002BC  C00C  F08A         	movff	?_atoi,_width
  4832  0002C0  C00D  F08B         	movff	?_atoi+1,_width+1
  4833                           
  4834                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4835  0002C4  EF6B  F001         	goto	l4770
  4836  0002C8                     l4768:
  4837                           
  4838                           ; BSR set to: 0
  4839                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  4840  0002C8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4841  0002CC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4842  0002D0  2ADE               	incf	postinc2,f,c
  4843  0002D2  0E00               	movlw	0
  4844  0002D4  22DD               	addwfc	postdec2,f,c
  4845  0002D6                     l4770:
  4846  0002D6  0ED0               	movlw	208
  4847  0002D8  6E4F               	movwf	??_vfpfcnvrt^0,c
  4848  0002DA  0EFF               	movlw	255
  4849  0002DC  6E50               	movwf	(??_vfpfcnvrt+1)^0,c
  4850  0002DE  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4851  0002E2  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4852  0002E6  CFDE FFF6          	movff	postinc2,tblptrl
  4853  0002EA  CFDD FFF7          	movff	postdec2,tblptrh
  4854  0002EE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4855  0002EE  6AF8               	clrf	tblptru,c
  4856  0002F0                     	endif
  4857  0002F0                     	if	0	;tblptru may be non-zero
  4858  0002F0                     	endif
  4859  0002F0  0008               	tblrd		*
  4860  0002F2  50F5               	movf	tablat,w,c
  4861  0002F4  6E51               	movwf	(??_vfpfcnvrt+2)^0,c
  4862  0002F6  6A52               	clrf	(??_vfpfcnvrt+3)^0,c
  4863  0002F8  504F               	movf	??_vfpfcnvrt^0,w,c
  4864  0002FA  2651               	addwf	(??_vfpfcnvrt+2)^0,f,c
  4865  0002FC  5050               	movf	(??_vfpfcnvrt+1)^0,w,c
  4866  0002FE  2252               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  4867  000300  5052               	movf	(??_vfpfcnvrt+3)^0,w,c
  4868  000302  E10A               	bnz	u4980
  4869  000304  0E0A               	movlw	10
  4870  000306  5C51               	subwf	(??_vfpfcnvrt+2)^0,w,c
  4871  000308  A0D8               	btfss	status,0,c
  4872  00030A  EF89  F001         	goto	u4981
  4873  00030E  EF8C  F001         	goto	u4980
  4874  000312                     u4981:
  4875  000312  0E01               	movlw	1
  4876  000314  EF8D  F001         	goto	u4990
  4877  000318                     u4980:
  4878  000318  0E00               	movlw	0
  4879  00031A                     u4990:
  4880  00031A  0100               	movlb	0	; () banked
  4881  00031C  6FAC               	movwf	_vfpfcnvrt$1334& (0+255),b
  4882  00031E  6BAD               	clrf	(_vfpfcnvrt$1334+1)& (0+255),b
  4883  000320                     
  4884                           ; BSR set to: 0
  4885  000320  51AC               	movf	_vfpfcnvrt$1334& (0+255),w,b
  4886  000322  11AD               	iorwf	(_vfpfcnvrt$1334+1)& (0+255),w,b
  4887  000324  A4D8               	btfss	status,2,c
  4888  000326  EF97  F001         	goto	u5001
  4889  00032A  EF99  F001         	goto	u5000
  4890  00032E                     u5001:
  4891  00032E  EF64  F001         	goto	l4768
  4892  000332                     u5000:
  4893  000332                     l4776:
  4894                           
  4895                           ; BSR set to: 0
  4896                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4897  000332  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4898  000336  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4899  00033A  CFDE FFF6          	movff	postinc2,tblptrl
  4900  00033E  CFDD FFF7          	movff	postdec2,tblptrh
  4901  000342                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4902  000342  6AF8               	clrf	tblptru,c
  4903  000344                     	endif
  4904  000344                     	if	0	;tblptru may be non-zero
  4905  000344                     	endif
  4906  000344  0008               	tblrd		*
  4907  000346  50F5               	movf	tablat,w,c
  4908  000348  0A64               	xorlw	100
  4909  00034A  B4D8               	btfsc	status,2,c
  4910  00034C  EFAA  F001         	goto	u5011
  4911  000350  EFAC  F001         	goto	u5010
  4912  000354                     u5011:
  4913  000354  EFBF  F001         	goto	l4780
  4914  000358                     u5010:
  4915  000358                     
  4916                           ; BSR set to: 0
  4917  000358  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4918  00035C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4919  000360  CFDE FFF6          	movff	postinc2,tblptrl
  4920  000364  CFDD FFF7          	movff	postdec2,tblptrh
  4921  000368                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4922  000368  6AF8               	clrf	tblptru,c
  4923  00036A                     	endif
  4924  00036A                     	if	0	;tblptru may be non-zero
  4925  00036A                     	endif
  4926  00036A  0008               	tblrd		*
  4927  00036C  50F5               	movf	tablat,w,c
  4928  00036E  0A69               	xorlw	105
  4929  000370  A4D8               	btfss	status,2,c
  4930  000372  EFBD  F001         	goto	u5021
  4931  000376  EFBF  F001         	goto	u5020
  4932  00037A                     u5021:
  4933  00037A  EFFF  F001         	goto	l4786
  4934  00037E                     u5020:
  4935  00037E                     l4780:
  4936                           
  4937                           ; BSR set to: 0
  4938                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  4939  00037E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4940  000382  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4941  000386  2ADE               	incf	postinc2,f,c
  4942  000388  0E00               	movlw	0
  4943  00038A  22DD               	addwfc	postdec2,f,c
  4944                           
  4945                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4946  00038C  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4947  000390  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4948  000394  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  4949  000398  0E02               	movlw	2
  4950  00039A  26DE               	addwf	postinc2,f,c
  4951  00039C  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  4952  0003A0  0E00               	movlw	0
  4953  0003A2  22DD               	addwfc	postdec2,f,c
  4954  0003A4  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4955  0003A8  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4956  0003AC  CFDE F09F          	movff	postinc2,vfpfcnvrt@ll
  4957  0003B0  CFDD F0A0          	movff	postdec2,vfpfcnvrt@ll+1
  4958  0003B4  0E00               	movlw	0
  4959  0003B6  BFA0               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  4960  0003B8  0EFF               	movlw	-1
  4961  0003BA  6FA1               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4962  0003BC  6FA2               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4963  0003BE  6FA3               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4964  0003C0  6FA4               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4965  0003C2  6FA5               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4966  0003C4  6FA6               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4967  0003C6                     
  4968                           ; BSR set to: 0
  4969                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  4970  0003C6  C049  F022         	movff	vfpfcnvrt@fp,dtoa@fp
  4971  0003CA  C04A  F023         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4972  0003CE  C09F  F024         	movff	vfpfcnvrt@ll,dtoa@d
  4973  0003D2  C0A0  F025         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4974  0003D6  C0A1  F026         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4975  0003DA  C0A2  F027         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4976  0003DE  C0A3  F028         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4977  0003E2  C0A4  F029         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4978  0003E6  C0A5  F02A         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4979  0003EA  C0A6  F02B         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4980  0003EE  EC5A  F003         	call	_dtoa	;wreg free
  4981  0003F2  C022  F049         	movff	?_dtoa,?_vfpfcnvrt
  4982  0003F6  C023  F04A         	movff	?_dtoa+1,?_vfpfcnvrt+1
  4983  0003FA  EF59  F003         	goto	l850
  4984  0003FE                     l4786:
  4985                           
  4986                           ; BSR set to: 0
  4987                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  4988  0003FE  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4989  000402  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4990  000406  CFDE FFF6          	movff	postinc2,tblptrl
  4991  00040A  CFDD FFF7          	movff	postdec2,tblptrh
  4992  00040E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4993  00040E  6AF8               	clrf	tblptru,c
  4994  000410                     	endif
  4995  000410                     	if	0	;tblptru may be non-zero
  4996  000410                     	endif
  4997  000410  0008               	tblrd		*
  4998  000412  50F5               	movf	tablat,w,c
  4999  000414  0A73               	xorlw	115
  5000  000416  A4D8               	btfss	status,2,c
  5001  000418  EF10  F002         	goto	u5031
  5002  00041C  EF12  F002         	goto	u5030
  5003  000420                     u5031:
  5004  000420  EF3D  F002         	goto	l4794
  5005  000424                     u5030:
  5006  000424                     
  5007                           ; BSR set to: 0
  5008                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  5009  000424  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5010  000428  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5011  00042C  2ADE               	incf	postinc2,f,c
  5012  00042E  0E00               	movlw	0
  5013  000430  22DD               	addwfc	postdec2,f,c
  5014                           
  5015                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  5016  000432  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5017  000436  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5018  00043A  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  5019  00043E  0E02               	movlw	2
  5020  000440  26DE               	addwf	postinc2,f,c
  5021  000442  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  5022  000446  0E00               	movlw	0
  5023  000448  22DD               	addwfc	postdec2,f,c
  5024  00044A  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5025  00044E  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5026  000452  CFDE F0A7          	movff	postinc2,vfpfcnvrt@cp
  5027  000456  CFDD F0A8          	movff	postdec2,vfpfcnvrt@cp+1
  5028  00045A                     
  5029                           ; BSR set to: 0
  5030                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  5031  00045A  C049  F010         	movff	vfpfcnvrt@fp,stoa@fp
  5032  00045E  C04A  F011         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  5033  000462  C0A7  F012         	movff	vfpfcnvrt@cp,stoa@s
  5034  000466  C0A8  F013         	movff	vfpfcnvrt@cp+1,stoa@s+1
  5035  00046A  EC36  F007         	call	_stoa	;wreg free
  5036  00046E  C010  F049         	movff	?_stoa,?_vfpfcnvrt
  5037  000472  C011  F04A         	movff	?_stoa+1,?_vfpfcnvrt+1
  5038  000476  EF59  F003         	goto	l850
  5039  00047A                     l4794:
  5040                           
  5041                           ; BSR set to: 0
  5042                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  5043  00047A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5044  00047E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5045  000482  CFDE FFF6          	movff	postinc2,tblptrl
  5046  000486  CFDD FFF7          	movff	postdec2,tblptrh
  5047  00048A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5048  00048A  6AF8               	clrf	tblptru,c
  5049  00048C                     	endif
  5050  00048C                     	if	0	;tblptru may be non-zero
  5051  00048C                     	endif
  5052  00048C  0008               	tblrd		*
  5053  00048E  50F5               	movf	tablat,w,c
  5054  000490  0A75               	xorlw	117
  5055  000492  A4D8               	btfss	status,2,c
  5056  000494  EF4E  F002         	goto	u5041
  5057  000498  EF50  F002         	goto	u5040
  5058  00049C                     u5041:
  5059  00049C  EF91  F002         	goto	l4802
  5060  0004A0                     u5040:
  5061  0004A0                     
  5062                           ; BSR set to: 0
  5063                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  5064  0004A0  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5065  0004A4  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5066  0004A8  2ADE               	incf	postinc2,f,c
  5067  0004AA  0E00               	movlw	0
  5068  0004AC  22DD               	addwfc	postdec2,f,c
  5069                           
  5070                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  5071  0004AE  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5072  0004B2  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5073  0004B6  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  5074  0004BA  0E02               	movlw	2
  5075  0004BC  26DE               	addwf	postinc2,f,c
  5076  0004BE  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  5077  0004C2  0E00               	movlw	0
  5078  0004C4  22DD               	addwfc	postdec2,f,c
  5079  0004C6  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5080  0004CA  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5081  0004CE  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
  5082  0004D2  CFDD F052          	movff	postdec2,??_vfpfcnvrt+3
  5083  0004D6  C051  F0AE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5084  0004DA  C052  F0AF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5085  0004DE  6BB0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5086  0004E0  6BB1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5087  0004E2  6BB2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5088  0004E4  6BB3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5089  0004E6  6BB4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5090  0004E8  6BB5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5091  0004EA                     
  5092                           ; BSR set to: 0
  5093                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
  5094  0004EA  C049  F022         	movff	vfpfcnvrt@fp,utoa@fp
  5095  0004EE  C04A  F023         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  5096  0004F2  C0AE  F024         	movff	vfpfcnvrt@llu,utoa@d
  5097  0004F6  C0AF  F025         	movff	vfpfcnvrt@llu+1,utoa@d+1
  5098  0004FA  C0B0  F026         	movff	vfpfcnvrt@llu+2,utoa@d+2
  5099  0004FE  C0B1  F027         	movff	vfpfcnvrt@llu+3,utoa@d+3
  5100  000502  C0B2  F028         	movff	vfpfcnvrt@llu+4,utoa@d+4
  5101  000506  C0B3  F029         	movff	vfpfcnvrt@llu+5,utoa@d+5
  5102  00050A  C0B4  F02A         	movff	vfpfcnvrt@llu+6,utoa@d+6
  5103  00050E  C0B5  F02B         	movff	vfpfcnvrt@llu+7,utoa@d+7
  5104  000512  EC35  F006         	call	_utoa	;wreg free
  5105  000516  C022  F049         	movff	?_utoa,?_vfpfcnvrt
  5106  00051A  C023  F04A         	movff	?_utoa+1,?_vfpfcnvrt+1
  5107  00051E  EF59  F003         	goto	l850
  5108  000522                     l4802:
  5109                           
  5110                           ; BSR set to: 0
  5111                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  5112  000522  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5113  000526  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5114  00052A  CFDE FFF6          	movff	postinc2,tblptrl
  5115  00052E  CFDD FFF7          	movff	postdec2,tblptrh
  5116  000532                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5117  000532  6AF8               	clrf	tblptru,c
  5118  000534                     	endif
  5119  000534                     	if	0	;tblptru may be non-zero
  5120  000534                     	endif
  5121  000534  0008               	tblrd		*
  5122  000536  50F5               	movf	tablat,w,c
  5123  000538  0A78               	xorlw	120
  5124  00053A  B4D8               	btfsc	status,2,c
  5125  00053C  EFA2  F002         	goto	u5051
  5126  000540  EFA4  F002         	goto	u5050
  5127  000544                     u5051:
  5128  000544  EFB7  F002         	goto	l4806
  5129  000548                     u5050:
  5130  000548                     
  5131                           ; BSR set to: 0
  5132  000548  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5133  00054C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5134  000550  CFDE FFF6          	movff	postinc2,tblptrl
  5135  000554  CFDD FFF7          	movff	postdec2,tblptrh
  5136  000558                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5137  000558  6AF8               	clrf	tblptru,c
  5138  00055A                     	endif
  5139  00055A                     	if	0	;tblptru may be non-zero
  5140  00055A                     	endif
  5141  00055A  0008               	tblrd		*
  5142  00055C  50F5               	movf	tablat,w,c
  5143  00055E  0A58               	xorlw	88
  5144  000560  A4D8               	btfss	status,2,c
  5145  000562  EFB5  F002         	goto	u5061
  5146  000566  EFB7  F002         	goto	u5060
  5147  00056A                     u5061:
  5148  00056A  EF06  F003         	goto	l4816
  5149  00056E                     u5060:
  5150  00056E                     l4806:
  5151                           
  5152                           ; BSR set to: 0
  5153                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  5154  00056E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5155  000572  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5156  000576  CFDE FFF6          	movff	postinc2,tblptrl
  5157  00057A  CFDD FFF7          	movff	postdec2,tblptrh
  5158  00057E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5159  00057E  6AF8               	clrf	tblptru,c
  5160  000580                     	endif
  5161  000580                     	if	0	;tblptru may be non-zero
  5162  000580                     	endif
  5163  000580  0008               	tblrd		*
  5164  000582  CFF5 F0A9          	movff	tablat,vfpfcnvrt@c
  5165  000586                     
  5166                           ; BSR set to: 0
  5167                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  5168  000586  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5169  00058A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5170  00058E  2ADE               	incf	postinc2,f,c
  5171  000590  0E00               	movlw	0
  5172  000592  22DD               	addwfc	postdec2,f,c
  5173  000594                     
  5174                           ; BSR set to: 0
  5175                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  5176  000594  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5177  000598  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5178  00059C  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  5179  0005A0  0E02               	movlw	2
  5180  0005A2  26DE               	addwf	postinc2,f,c
  5181  0005A4  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  5182  0005A8  0E00               	movlw	0
  5183  0005AA  22DD               	addwfc	postdec2,f,c
  5184  0005AC  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5185  0005B0  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5186  0005B4  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
  5187  0005B8  CFDD F052          	movff	postdec2,??_vfpfcnvrt+3
  5188  0005BC  C051  F0AE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5189  0005C0  C052  F0AF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5190  0005C4  6BB0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5191  0005C6  6BB1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5192  0005C8  6BB2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5193  0005CA  6BB3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5194  0005CC  6BB4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5195  0005CE  6BB5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5196  0005D0                     
  5197                           ; BSR set to: 0
  5198                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
  5199  0005D0  C049  F022         	movff	vfpfcnvrt@fp,xtoa@fp
  5200  0005D4  C04A  F023         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  5201  0005D8  C0AE  F024         	movff	vfpfcnvrt@llu,xtoa@d
  5202  0005DC  C0AF  F025         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  5203  0005E0  C0B0  F026         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  5204  0005E4  C0B1  F027         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  5205  0005E8  C0B2  F028         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  5206  0005EC  C0B3  F029         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  5207  0005F0  C0B4  F02A         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  5208  0005F4  C0B5  F02B         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  5209  0005F8  C0A9  F02C         	movff	vfpfcnvrt@c,xtoa@x
  5210  0005FC  ECCA  F004         	call	_xtoa	;wreg free
  5211  000600  C022  F049         	movff	?_xtoa,?_vfpfcnvrt
  5212  000604  C023  F04A         	movff	?_xtoa+1,?_vfpfcnvrt+1
  5213  000608  EF59  F003         	goto	l850
  5214  00060C                     l4816:
  5215                           
  5216                           ; BSR set to: 0
  5217                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  5218  00060C  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5219  000610  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5220  000614  CFDE FFF6          	movff	postinc2,tblptrl
  5221  000618  CFDD FFF7          	movff	postdec2,tblptrh
  5222  00061C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5223  00061C  6AF8               	clrf	tblptru,c
  5224  00061E                     	endif
  5225  00061E                     	if	0	;tblptru may be non-zero
  5226  00061E                     	endif
  5227  00061E  0008               	tblrd		*
  5228  000620  50F5               	movf	tablat,w,c
  5229  000622  0A25               	xorlw	37
  5230  000624  A4D8               	btfss	status,2,c
  5231  000626  EF17  F003         	goto	u5071
  5232  00062A  EF19  F003         	goto	u5070
  5233  00062E                     u5071:
  5234  00062E  EF30  F003         	goto	l4826
  5235  000632                     u5070:
  5236  000632                     
  5237                           ; BSR set to: 0
  5238                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  5239  000632  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5240  000636  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5241  00063A  2ADE               	incf	postinc2,f,c
  5242  00063C  0E00               	movlw	0
  5243  00063E  22DD               	addwfc	postdec2,f,c
  5244  000640                     
  5245                           ; BSR set to: 0
  5246                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  5247  000640  0E00               	movlw	0
  5248  000642  6E08               	movwf	(fputc@c+1)^0,c
  5249  000644  0E25               	movlw	37
  5250  000646  6E07               	movwf	fputc@c^0,c
  5251  000648  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
  5252  00064C  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5253  000650  ECE7  F00D         	call	_fputc	;wreg free
  5254  000654                     l4822:
  5255                           
  5256                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  5257  000654  0E00               	movlw	0
  5258  000656  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
  5259  000658  0E01               	movlw	1
  5260  00065A  6E49               	movwf	?_vfpfcnvrt^0,c
  5261  00065C  EF59  F003         	goto	l850
  5262  000660                     l4826:
  5263                           
  5264                           ; BSR set to: 0
  5265                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  5266  000660  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5267  000664  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5268  000668  2ADE               	incf	postinc2,f,c
  5269  00066A  0E00               	movlw	0
  5270  00066C  22DD               	addwfc	postdec2,f,c
  5271  00066E                     
  5272                           ; BSR set to: 0
  5273                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  5274  00066E  0E00               	movlw	0
  5275  000670  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
  5276  000672  0E00               	movlw	0
  5277  000674  6E49               	movwf	?_vfpfcnvrt^0,c
  5278  000676  EF59  F003         	goto	l850
  5279  00067A                     l4832:
  5280                           
  5281                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  5282  00067A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5283  00067E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5284  000682  CFDE FFF6          	movff	postinc2,tblptrl
  5285  000686  CFDD FFF7          	movff	postdec2,tblptrh
  5286  00068A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5287  00068A  6AF8               	clrf	tblptru,c
  5288  00068C                     	endif
  5289  00068C                     	if	0	;tblptru may be non-zero
  5290  00068C                     	endif
  5291  00068C  0008               	tblrd		*
  5292  00068E  50F5               	movf	tablat,w,c
  5293  000690  6E07               	movwf	fputc@c^0,c
  5294  000692  6A08               	clrf	(fputc@c+1)^0,c
  5295  000694  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
  5296  000698  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5297  00069C  ECE7  F00D         	call	_fputc	;wreg free
  5298  0006A0                     
  5299                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  5300  0006A0  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5301  0006A4  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5302  0006A8  2ADE               	incf	postinc2,f,c
  5303  0006AA  0E00               	movlw	0
  5304  0006AC  22DD               	addwfc	postdec2,f,c
  5305  0006AE  EF2A  F003         	goto	l4822
  5306  0006B2                     l850:
  5307  0006B2  0012               	return		;funcret
  5308  0006B4                     __end_of_vfpfcnvrt:
  5309                           	opt callstack 0
  5310                           
  5311 ;; *************** function _xtoa *****************
  5312 ;; Defined at:
  5313 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5314 ;; Parameters:    Size  Location     Type
  5315 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  5316 ;;		 -> NULL(0), 
  5317 ;;  d               8   35[COMRAM] unsigned long long 
  5318 ;;  x               1   43[COMRAM] unsigned char 
  5319 ;; Auto vars:     Size  Location     Type
  5320 ;;  n               8   60[COMRAM] unsigned long long 
  5321 ;;  c               2   70[COMRAM] int 
  5322 ;;  i               2   68[COMRAM] int 
  5323 ;;  w               2   58[COMRAM] int 
  5324 ;;  p               2   56[COMRAM] int 
  5325 ;; Return value:  Size  Location     Type
  5326 ;;                  2   33[COMRAM] int 
  5327 ;; Registers used:
  5328 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5329 ;; Tracked objects:
  5330 ;;		On entry : 0/0
  5331 ;;		On exit  : 0/0
  5332 ;;		Unchanged: 0/0
  5333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5334 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5335 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5336 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5337 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5338 ;;Total ram usage:       39 bytes
  5339 ;; Hardware stack levels used:    1
  5340 ;; Hardware stack levels required when called:    9
  5341 ;; This function calls:
  5342 ;;		_isalpha
  5343 ;;		_isupper
  5344 ;;		_pad
  5345 ;;		_toupper
  5346 ;; This function is called by:
  5347 ;;		_vfpfcnvrt
  5348 ;; This function uses a non-reentrant model
  5349 ;;
  5350                           
  5351                           	psect	text35
  5352  000994                     __ptext35:
  5353                           	opt callstack 0
  5354  000994                     _xtoa:
  5355                           	opt callstack 18
  5356  000994                     
  5357                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  5358  000994  0100               	movlb	0	; () banked
  5359  000996  BF8D               	btfsc	(_prec+1)& (0+255),7,b
  5360  000998  EFD0  F004         	goto	u4691
  5361  00099C  EFD2  F004         	goto	u4690
  5362  0009A0                     u4691:
  5363  0009A0  EFD3  F004         	goto	l4614
  5364  0009A4                     u4690:
  5365  0009A4                     
  5366                           ; BSR set to: 0
  5367                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  5368  0009A4  9256               	bcf	_flags^0,1,c
  5369  0009A6                     l4614:
  5370                           
  5371                           ; BSR set to: 0
  5372                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  5373  0009A6  BF8D               	btfsc	(_prec+1)& (0+255),7,b
  5374  0009A8  EFE0  F004         	goto	u4700
  5375  0009AC  518D               	movf	(_prec+1)& (0+255),w,b
  5376  0009AE  E106               	bnz	u4701
  5377  0009B0  058C               	decf	_prec& (0+255),w,b
  5378  0009B2  B0D8               	btfsc	status,0,c
  5379  0009B4  EFDE  F004         	goto	u4701
  5380  0009B8  EFE0  F004         	goto	u4700
  5381  0009BC                     u4701:
  5382  0009BC  EFE6  F004         	goto	l796
  5383  0009C0                     u4700:
  5384  0009C0                     
  5385                           ; BSR set to: 0
  5386  0009C0  0E00               	movlw	0
  5387  0009C2  6E3A               	movwf	(xtoa@p+1)^0,c
  5388  0009C4  0E01               	movlw	1
  5389  0009C6  6E39               	movwf	xtoa@p^0,c
  5390  0009C8  EFEA  F004         	goto	l798
  5391  0009CC                     l796:
  5392                           
  5393                           ; BSR set to: 0
  5394  0009CC  C08C  F039         	movff	_prec,xtoa@p
  5395  0009D0  C08D  F03A         	movff	_prec+1,xtoa@p+1
  5396  0009D4                     l798:
  5397                           
  5398                           ; BSR set to: 0
  5399                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  5400  0009D4  C08A  F03B         	movff	_width,xtoa@w
  5401  0009D8  C08B  F03C         	movff	_width+1,xtoa@w+1
  5402                           
  5403                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  5404  0009DC  A856               	btfss	_flags^0,4,c
  5405  0009DE  EFF3  F004         	goto	u4711
  5406  0009E2  EFF5  F004         	goto	u4710
  5407  0009E6                     u4711:
  5408  0009E6  EFF9  F004         	goto	l4620
  5409  0009EA                     u4710:
  5410  0009EA                     
  5411                           ; BSR set to: 0
  5412                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  5413  0009EA  0EFE               	movlw	254
  5414  0009EC  263B               	addwf	xtoa@w^0,f,c
  5415  0009EE  0EFF               	movlw	255
  5416  0009F0  223C               	addwfc	(xtoa@w+1)^0,f,c
  5417  0009F2                     l4620:
  5418                           
  5419                           ; BSR set to: 0
  5420                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  5421  0009F2  C024  F03D         	movff	xtoa@d,xtoa@n
  5422  0009F6  C025  F03E         	movff	xtoa@d+1,xtoa@n+1
  5423  0009FA  C026  F03F         	movff	xtoa@d+2,xtoa@n+2
  5424  0009FE  C027  F040         	movff	xtoa@d+3,xtoa@n+3
  5425  000A02  C028  F041         	movff	xtoa@d+4,xtoa@n+4
  5426  000A06  C029  F042         	movff	xtoa@d+5,xtoa@n+5
  5427  000A0A  C02A  F043         	movff	xtoa@d+6,xtoa@n+6
  5428  000A0E  C02B  F044         	movff	xtoa@d+7,xtoa@n+7
  5429  000A12                     
  5430                           ; BSR set to: 0
  5431                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  5432  000A12  0E00               	movlw	0
  5433  000A14  6E46               	movwf	(xtoa@i+1)^0,c
  5434  000A16  0E1F               	movlw	31
  5435  000A18  6E45               	movwf	xtoa@i^0,c
  5436  000A1A                     
  5437                           ; BSR set to: 0
  5438                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  5439  000A1A  0E00               	movlw	0
  5440  000A1C  0101               	movlb	1	; () banked
  5441  000A1E  6FE7               	movwf	(_dbuf+31)& (0+255),b
  5442                           
  5443                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5444  000A20  EFC5  F005         	goto	l4656
  5445  000A24                     l4626:
  5446                           
  5447                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  5448  000A24  0645               	decf	xtoa@i^0,f,c
  5449  000A26  A0D8               	btfss	status,0,c
  5450  000A28  0646               	decf	(xtoa@i+1)^0,f,c
  5451  000A2A                     
  5452                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  5453  000A2A  0E0F               	movlw	15
  5454  000A2C  143D               	andwf	xtoa@n^0,w,c
  5455  000A2E  6E47               	movwf	xtoa@c^0,c
  5456  000A30  6A48               	clrf	(xtoa@c+1)^0,c
  5457  000A32                     
  5458                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  5459  000A32  BE48               	btfsc	(xtoa@c+1)^0,7,c
  5460  000A34  EF25  F005         	goto	u4721
  5461  000A38  5048               	movf	(xtoa@c+1)^0,w,c
  5462  000A3A  E109               	bnz	u4720
  5463  000A3C  0E0A               	movlw	10
  5464  000A3E  5C47               	subwf	xtoa@c^0,w,c
  5465  000A40  A0D8               	btfss	status,0,c
  5466  000A42  EF25  F005         	goto	u4721
  5467  000A46  EF27  F005         	goto	u4720
  5468  000A4A                     u4721:
  5469  000A4A  EF2F  F005         	goto	l4634
  5470  000A4E                     u4720:
  5471  000A4E  0E57               	movlw	87
  5472  000A50  2447               	addwf	xtoa@c^0,w,c
  5473  000A52  6E47               	movwf	xtoa@c^0,c
  5474  000A54  0E00               	movlw	0
  5475  000A56  2048               	addwfc	(xtoa@c+1)^0,w,c
  5476  000A58  6E48               	movwf	(xtoa@c+1)^0,c
  5477  000A5A  EF35  F005         	goto	l805
  5478  000A5E                     l4634:
  5479  000A5E  0E30               	movlw	48
  5480  000A60  2447               	addwf	xtoa@c^0,w,c
  5481  000A62  6E47               	movwf	xtoa@c^0,c
  5482  000A64  0E00               	movlw	0
  5483  000A66  2048               	addwfc	(xtoa@c+1)^0,w,c
  5484  000A68  6E48               	movwf	(xtoa@c+1)^0,c
  5485  000A6A                     l805:
  5486  000A6A  0EBF               	movlw	191
  5487  000A6C  6E2D               	movwf	??_xtoa^0,c
  5488  000A6E  0EFF               	movlw	255
  5489  000A70  6E2E               	movwf	(??_xtoa+1)^0,c
  5490  000A72  502C               	movf	xtoa@x^0,w,c
  5491  000A74  6E2F               	movwf	(??_xtoa+2)^0,c
  5492  000A76  6A30               	clrf	(??_xtoa+3)^0,c
  5493  000A78  502D               	movf	??_xtoa^0,w,c
  5494  000A7A  262F               	addwf	(??_xtoa+2)^0,f,c
  5495  000A7C  502E               	movf	(??_xtoa+1)^0,w,c
  5496  000A7E  2230               	addwfc	(??_xtoa+3)^0,f,c
  5497  000A80  5030               	movf	(??_xtoa+3)^0,w,c
  5498  000A82  E10A               	bnz	u4730
  5499  000A84  0E1A               	movlw	26
  5500  000A86  5C2F               	subwf	(??_xtoa+2)^0,w,c
  5501  000A88  A0D8               	btfss	status,0,c
  5502  000A8A  EF49  F005         	goto	u4731
  5503  000A8E  EF4C  F005         	goto	u4730
  5504  000A92                     u4731:
  5505  000A92  0E01               	movlw	1
  5506  000A94  EF4D  F005         	goto	u4740
  5507  000A98                     u4730:
  5508  000A98  0E00               	movlw	0
  5509  000A9A                     u4740:
  5510  000A9A  6E35               	movwf	_xtoa$1319^0,c
  5511  000A9C  6A36               	clrf	(_xtoa$1319+1)^0,c
  5512  000A9E  5035               	movf	_xtoa$1319^0,w,c
  5513  000AA0  1036               	iorwf	(_xtoa$1319+1)^0,w,c
  5514  000AA2  B4D8               	btfsc	status,2,c
  5515  000AA4  EF56  F005         	goto	u4751
  5516  000AA8  EF58  F005         	goto	u4750
  5517  000AAC                     u4751:
  5518  000AAC  EF88  F005         	goto	l4648
  5519  000AB0                     u4750:
  5520  000AB0  0E9F               	movlw	159
  5521  000AB2  6E2D               	movwf	??_xtoa^0,c
  5522  000AB4  0EFF               	movlw	255
  5523  000AB6  6E2E               	movwf	(??_xtoa+1)^0,c
  5524  000AB8  0E20               	movlw	32
  5525  000ABA  1047               	iorwf	xtoa@c^0,w,c
  5526  000ABC  6E2F               	movwf	(??_xtoa+2)^0,c
  5527  000ABE  0E00               	movlw	0
  5528  000AC0  1048               	iorwf	(xtoa@c+1)^0,w,c
  5529  000AC2  6E30               	movwf	(??_xtoa+3)^0,c
  5530  000AC4  502D               	movf	??_xtoa^0,w,c
  5531  000AC6  262F               	addwf	(??_xtoa+2)^0,f,c
  5532  000AC8  502E               	movf	(??_xtoa+1)^0,w,c
  5533  000ACA  2230               	addwfc	(??_xtoa+3)^0,f,c
  5534  000ACC  5030               	movf	(??_xtoa+3)^0,w,c
  5535  000ACE  E10A               	bnz	u4760
  5536  000AD0  0E1A               	movlw	26
  5537  000AD2  5C2F               	subwf	(??_xtoa+2)^0,w,c
  5538  000AD4  A0D8               	btfss	status,0,c
  5539  000AD6  EF6F  F005         	goto	u4761
  5540  000ADA  EF72  F005         	goto	u4760
  5541  000ADE                     u4761:
  5542  000ADE  0E01               	movlw	1
  5543  000AE0  EF73  F005         	goto	u4770
  5544  000AE4                     u4760:
  5545  000AE4  0E00               	movlw	0
  5546  000AE6                     u4770:
  5547  000AE6  6E37               	movwf	_xtoa$1320^0,c
  5548  000AE8  6A38               	clrf	(_xtoa$1320+1)^0,c
  5549  000AEA  5037               	movf	_xtoa$1320^0,w,c
  5550  000AEC  1038               	iorwf	(_xtoa$1320+1)^0,w,c
  5551  000AEE  B4D8               	btfsc	status,2,c
  5552  000AF0  EF7C  F005         	goto	u4781
  5553  000AF4  EF7E  F005         	goto	u4780
  5554  000AF8                     u4781:
  5555  000AF8  EF88  F005         	goto	l4648
  5556  000AFC                     u4780:
  5557  000AFC                     
  5558                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  5559  000AFC  C047  F00B         	movff	xtoa@c,toupper@c
  5560  000B00  C048  F00C         	movff	xtoa@c+1,toupper@c+1
  5561  000B04  EC48  F010         	call	_toupper	;wreg free
  5562  000B08  C00B  F047         	movff	?_toupper,xtoa@c
  5563  000B0C  C00C  F048         	movff	?_toupper+1,xtoa@c+1
  5564  000B10                     l4648:
  5565                           
  5566                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  5567  000B10  0EC8               	movlw	low _dbuf
  5568  000B12  2445               	addwf	xtoa@i^0,w,c
  5569  000B14  6ED9               	movwf	fsr2l,c
  5570  000B16  0E01               	movlw	high _dbuf
  5571  000B18  2046               	addwfc	(xtoa@i+1)^0,w,c
  5572  000B1A  6EDA               	movwf	fsr2h,c
  5573  000B1C  C047  FFDF         	movff	xtoa@c,indf2
  5574  000B20                     
  5575                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  5576  000B20  0639               	decf	xtoa@p^0,f,c
  5577  000B22  A0D8               	btfss	status,0,c
  5578  000B24  063A               	decf	(xtoa@p+1)^0,f,c
  5579  000B26                     
  5580                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  5581  000B26  063B               	decf	xtoa@w^0,f,c
  5582  000B28  A0D8               	btfss	status,0,c
  5583  000B2A  063C               	decf	(xtoa@w+1)^0,f,c
  5584  000B2C                     
  5585                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  5586  000B2C  C03D  F02D         	movff	xtoa@n,??_xtoa
  5587  000B30  C03E  F02E         	movff	xtoa@n+1,??_xtoa+1
  5588  000B34  C03F  F02F         	movff	xtoa@n+2,??_xtoa+2
  5589  000B38  C040  F030         	movff	xtoa@n+3,??_xtoa+3
  5590  000B3C  C041  F031         	movff	xtoa@n+4,??_xtoa+4
  5591  000B40  C042  F032         	movff	xtoa@n+5,??_xtoa+5
  5592  000B44  C043  F033         	movff	xtoa@n+6,??_xtoa+6
  5593  000B48  C044  F034         	movff	xtoa@n+7,??_xtoa+7
  5594  000B4C  0E05               	movlw	5
  5595  000B4E  EFB2  F005         	goto	u4790
  5596  000B52                     u4795:
  5597  000B52  90D8               	bcf	status,0,c
  5598  000B54  3234               	rrcf	(??_xtoa+7)^0,f,c
  5599  000B56  3233               	rrcf	(??_xtoa+6)^0,f,c
  5600  000B58  3232               	rrcf	(??_xtoa+5)^0,f,c
  5601  000B5A  3231               	rrcf	(??_xtoa+4)^0,f,c
  5602  000B5C  3230               	rrcf	(??_xtoa+3)^0,f,c
  5603  000B5E  322F               	rrcf	(??_xtoa+2)^0,f,c
  5604  000B60  322E               	rrcf	(??_xtoa+1)^0,f,c
  5605  000B62  322D               	rrcf	??_xtoa^0,f,c
  5606  000B64                     u4790:
  5607  000B64  2EE8               	decfsz	wreg,f,c
  5608  000B66  EFA9  F005         	goto	u4795
  5609  000B6A  C02D  F03D         	movff	??_xtoa,xtoa@n
  5610  000B6E  C02E  F03E         	movff	??_xtoa+1,xtoa@n+1
  5611  000B72  C02F  F03F         	movff	??_xtoa+2,xtoa@n+2
  5612  000B76  C030  F040         	movff	??_xtoa+3,xtoa@n+3
  5613  000B7A  C031  F041         	movff	??_xtoa+4,xtoa@n+4
  5614  000B7E  C032  F042         	movff	??_xtoa+5,xtoa@n+5
  5615  000B82  C033  F043         	movff	??_xtoa+6,xtoa@n+6
  5616  000B86  C034  F044         	movff	??_xtoa+7,xtoa@n+7
  5617  000B8A                     l4656:
  5618                           
  5619                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5620  000B8A  BE46               	btfsc	(xtoa@i+1)^0,7,c
  5621  000B8C  EFD1  F005         	goto	u4801
  5622  000B90  5046               	movf	(xtoa@i+1)^0,w,c
  5623  000B92  E109               	bnz	u4800
  5624  000B94  0E02               	movlw	2
  5625  000B96  5C45               	subwf	xtoa@i^0,w,c
  5626  000B98  A0D8               	btfss	status,0,c
  5627  000B9A  EFD1  F005         	goto	u4801
  5628  000B9E  EFD3  F005         	goto	u4800
  5629  000BA2                     u4801:
  5630  000BA2  EF03  F006         	goto	l819
  5631  000BA6                     u4800:
  5632  000BA6  503D               	movf	xtoa@n^0,w,c
  5633  000BA8  103E               	iorwf	(xtoa@n+1)^0,w,c
  5634  000BAA  103F               	iorwf	(xtoa@n+2)^0,w,c
  5635  000BAC  1040               	iorwf	(xtoa@n+3)^0,w,c
  5636  000BAE  1041               	iorwf	(xtoa@n+4)^0,w,c
  5637  000BB0  1042               	iorwf	(xtoa@n+5)^0,w,c
  5638  000BB2  1043               	iorwf	(xtoa@n+6)^0,w,c
  5639  000BB4  1044               	iorwf	(xtoa@n+7)^0,w,c
  5640  000BB6  A4D8               	btfss	status,2,c
  5641  000BB8  EFE0  F005         	goto	u4811
  5642  000BBC  EFE2  F005         	goto	u4810
  5643  000BC0                     u4811:
  5644  000BC0  EF12  F005         	goto	l4626
  5645  000BC4                     u4810:
  5646  000BC4  BE3A               	btfsc	(xtoa@p+1)^0,7,c
  5647  000BC6  EFEF  F005         	goto	u4820
  5648  000BCA  503A               	movf	(xtoa@p+1)^0,w,c
  5649  000BCC  E106               	bnz	u4821
  5650  000BCE  0439               	decf	xtoa@p^0,w,c
  5651  000BD0  B0D8               	btfsc	status,0,c
  5652  000BD2  EFED  F005         	goto	u4821
  5653  000BD6  EFEF  F005         	goto	u4820
  5654  000BDA                     u4821:
  5655  000BDA  EF12  F005         	goto	l4626
  5656  000BDE                     u4820:
  5657  000BDE  BE3C               	btfsc	(xtoa@w+1)^0,7,c
  5658  000BE0  EFFA  F005         	goto	u4831
  5659  000BE4  503C               	movf	(xtoa@w+1)^0,w,c
  5660  000BE6  E108               	bnz	u4830
  5661  000BE8  043B               	decf	xtoa@w^0,w,c
  5662  000BEA  A0D8               	btfss	status,0,c
  5663  000BEC  EFFA  F005         	goto	u4831
  5664  000BF0  EFFC  F005         	goto	u4830
  5665  000BF4                     u4831:
  5666  000BF4  EF03  F006         	goto	l819
  5667  000BF8                     u4830:
  5668  000BF8  B256               	btfsc	_flags^0,1,c
  5669  000BFA  EF01  F006         	goto	u4841
  5670  000BFE  EF03  F006         	goto	u4840
  5671  000C02                     u4841:
  5672  000C02  EF12  F005         	goto	l4626
  5673  000C06                     u4840:
  5674  000C06                     l819:
  5675                           
  5676                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  5677  000C06  A856               	btfss	_flags^0,4,c
  5678  000C08  EF08  F006         	goto	u4851
  5679  000C0C  EF0A  F006         	goto	u4850
  5680  000C10                     u4851:
  5681  000C10  EF20  F006         	goto	l4672
  5682  000C14                     u4850:
  5683  000C14                     
  5684                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  5685  000C14  0645               	decf	xtoa@i^0,f,c
  5686  000C16  A0D8               	btfss	status,0,c
  5687  000C18  0646               	decf	(xtoa@i+1)^0,f,c
  5688  000C1A                     
  5689                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  5690  000C1A  0EC8               	movlw	low _dbuf
  5691  000C1C  2445               	addwf	xtoa@i^0,w,c
  5692  000C1E  6ED9               	movwf	fsr2l,c
  5693  000C20  0E01               	movlw	high _dbuf
  5694  000C22  2046               	addwfc	(xtoa@i+1)^0,w,c
  5695  000C24  6EDA               	movwf	fsr2h,c
  5696  000C26  C02C  FFDF         	movff	xtoa@x,indf2
  5697  000C2A                     
  5698                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  5699  000C2A  0645               	decf	xtoa@i^0,f,c
  5700  000C2C  A0D8               	btfss	status,0,c
  5701  000C2E  0646               	decf	(xtoa@i+1)^0,f,c
  5702                           
  5703                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  5704  000C30  0EC8               	movlw	low _dbuf
  5705  000C32  2445               	addwf	xtoa@i^0,w,c
  5706  000C34  6ED9               	movwf	fsr2l,c
  5707  000C36  0E01               	movlw	high _dbuf
  5708  000C38  2046               	addwfc	(xtoa@i+1)^0,w,c
  5709  000C3A  6EDA               	movwf	fsr2h,c
  5710  000C3C  0E30               	movlw	48
  5711  000C3E  6EDF               	movwf	indf2,c
  5712  000C40                     l4672:
  5713                           
  5714                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  5715  000C40  C022  F017         	movff	xtoa@fp,pad@fp
  5716  000C44  C023  F018         	movff	xtoa@fp+1,pad@fp+1
  5717  000C48  0EC8               	movlw	low _dbuf
  5718  000C4A  2445               	addwf	xtoa@i^0,w,c
  5719  000C4C  6E19               	movwf	pad@buf^0,c
  5720  000C4E  0E01               	movlw	high _dbuf
  5721  000C50  2046               	addwfc	(xtoa@i+1)^0,w,c
  5722  000C52  6E1A               	movwf	(pad@buf+1)^0,c
  5723  000C54  C03B  F01B         	movff	xtoa@w,pad@p
  5724  000C58  C03C  F01C         	movff	xtoa@w+1,pad@p+1
  5725  000C5C  EC76  F00C         	call	_pad	;wreg free
  5726  000C60  C017  F022         	movff	?_pad,?_xtoa
  5727  000C64  C018  F023         	movff	?_pad+1,?_xtoa+1
  5728  000C68  0012               	return		;funcret
  5729  000C6A                     __end_of_xtoa:
  5730                           	opt callstack 0
  5731                           
  5732 ;; *************** function _toupper *****************
  5733 ;; Defined at:
  5734 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
  5735 ;; Parameters:    Size  Location     Type
  5736 ;;  c               2   10[COMRAM] int 
  5737 ;; Auto vars:     Size  Location     Type
  5738 ;;		None
  5739 ;; Return value:  Size  Location     Type
  5740 ;;                  2   10[COMRAM] int 
  5741 ;; Registers used:
  5742 ;;		wreg, status,2, status,0
  5743 ;; Tracked objects:
  5744 ;;		On entry : 0/0
  5745 ;;		On exit  : 0/0
  5746 ;;		Unchanged: 0/0
  5747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5748 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5749 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5750 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5751 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5752 ;;Total ram usage:        8 bytes
  5753 ;; Hardware stack levels used:    1
  5754 ;; Hardware stack levels required when called:    5
  5755 ;; This function calls:
  5756 ;;		_islower
  5757 ;; This function is called by:
  5758 ;;		_xtoa
  5759 ;; This function uses a non-reentrant model
  5760 ;;
  5761                           
  5762                           	psect	text36
  5763  002090                     __ptext36:
  5764                           	opt callstack 0
  5765  002090                     _toupper:
  5766                           	opt callstack 21
  5767  002090  0E9F               	movlw	159
  5768  002092  6E0D               	movwf	??_toupper^0,c
  5769  002094  0EFF               	movlw	255
  5770  002096  6E0E               	movwf	(??_toupper+1)^0,c
  5771  002098  C00B  F00F         	movff	toupper@c,??_toupper+2
  5772  00209C  C00C  F010         	movff	toupper@c+1,??_toupper+3
  5773  0020A0  500D               	movf	??_toupper^0,w,c
  5774  0020A2  260F               	addwf	(??_toupper+2)^0,f,c
  5775  0020A4  500E               	movf	(??_toupper+1)^0,w,c
  5776  0020A6  2210               	addwfc	(??_toupper+3)^0,f,c
  5777  0020A8  5010               	movf	(??_toupper+3)^0,w,c
  5778  0020AA  E10A               	bnz	u4100
  5779  0020AC  0E1A               	movlw	26
  5780  0020AE  5C0F               	subwf	(??_toupper+2)^0,w,c
  5781  0020B0  A0D8               	btfss	status,0,c
  5782  0020B2  EF5D  F010         	goto	u4101
  5783  0020B6  EF60  F010         	goto	u4100
  5784  0020BA                     u4101:
  5785  0020BA  0E01               	movlw	1
  5786  0020BC  EF61  F010         	goto	u4110
  5787  0020C0                     u4100:
  5788  0020C0  0E00               	movlw	0
  5789  0020C2                     u4110:
  5790  0020C2  6E11               	movwf	_toupper$1885^0,c
  5791  0020C4  6A12               	clrf	(_toupper$1885+1)^0,c
  5792  0020C6  5011               	movf	_toupper$1885^0,w,c
  5793  0020C8  1012               	iorwf	(_toupper$1885+1)^0,w,c
  5794  0020CA  B4D8               	btfsc	status,2,c
  5795  0020CC  EF6A  F010         	goto	u4121
  5796  0020D0  EF6C  F010         	goto	u4120
  5797  0020D4                     u4121:
  5798  0020D4  EF72  F010         	goto	l1638
  5799  0020D8                     u4120:
  5800  0020D8  0E5F               	movlw	95
  5801  0020DA  140B               	andwf	toupper@c^0,w,c
  5802  0020DC  6E0B               	movwf	?_toupper^0,c
  5803  0020DE  6A0C               	clrf	(?_toupper+1)^0,c
  5804  0020E0  EF76  F010         	goto	l1643
  5805  0020E4                     l1638:
  5806  0020E4  C00B  F00B         	movff	toupper@c,?_toupper
  5807  0020E8  C00C  F00C         	movff	toupper@c+1,?_toupper+1
  5808  0020EC                     l1643:
  5809  0020EC  0012               	return		;funcret
  5810  0020EE                     __end_of_toupper:
  5811                           	opt callstack 0
  5812                           
  5813 ;; *************** function _islower *****************
  5814 ;; Defined at:
  5815 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
  5816 ;; Parameters:    Size  Location     Type
  5817 ;;  c               2    4[COMRAM] int 
  5818 ;; Auto vars:     Size  Location     Type
  5819 ;;		None
  5820 ;; Return value:  Size  Location     Type
  5821 ;;                  2    4[COMRAM] int 
  5822 ;; Registers used:
  5823 ;;		wreg, status,2, status,0
  5824 ;; Tracked objects:
  5825 ;;		On entry : 0/0
  5826 ;;		On exit  : 0/0
  5827 ;;		Unchanged: 0/0
  5828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5829 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5831 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5832 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5833 ;;Total ram usage:        6 bytes
  5834 ;; Hardware stack levels used:    1
  5835 ;; Hardware stack levels required when called:    4
  5836 ;; This function calls:
  5837 ;;		Nothing
  5838 ;; This function is called by:
  5839 ;;		_toupper
  5840 ;; This function uses a non-reentrant model
  5841 ;;
  5842                           
  5843                           	psect	text37
  5844  00247E                     __ptext37:
  5845                           	opt callstack 0
  5846  00247E                     _islower:
  5847                           	opt callstack 21
  5848  00247E  0E9F               	movlw	159
  5849  002480  6E07               	movwf	??_islower^0,c
  5850  002482  0EFF               	movlw	255
  5851  002484  6E08               	movwf	(??_islower+1)^0,c
  5852  002486  C005  F009         	movff	islower@c,??_islower+2
  5853  00248A  C006  F00A         	movff	islower@c+1,??_islower+3
  5854  00248E  5007               	movf	??_islower^0,w,c
  5855  002490  2609               	addwf	(??_islower+2)^0,f,c
  5856  002492  5008               	movf	(??_islower+1)^0,w,c
  5857  002494  220A               	addwfc	(??_islower+3)^0,f,c
  5858  002496  500A               	movf	(??_islower+3)^0,w,c
  5859  002498  E10A               	bnz	u3990
  5860  00249A  0E1A               	movlw	26
  5861  00249C  5C09               	subwf	(??_islower+2)^0,w,c
  5862  00249E  A0D8               	btfss	status,0,c
  5863  0024A0  EF54  F012         	goto	u3991
  5864  0024A4  EF57  F012         	goto	u3990
  5865  0024A8                     u3991:
  5866  0024A8  0E01               	movlw	1
  5867  0024AA  EF58  F012         	goto	u4000
  5868  0024AE                     u3990:
  5869  0024AE  0E00               	movlw	0
  5870  0024B0                     u4000:
  5871  0024B0  6E05               	movwf	?_islower^0,c
  5872  0024B2  6A06               	clrf	(?_islower+1)^0,c
  5873  0024B4  0012               	return		;funcret
  5874  0024B6                     __end_of_islower:
  5875                           	opt callstack 0
  5876                           
  5877 ;; *************** function _isupper *****************
  5878 ;; Defined at:
  5879 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  5880 ;; Parameters:    Size  Location     Type
  5881 ;;  c               2    4[COMRAM] int 
  5882 ;; Auto vars:     Size  Location     Type
  5883 ;;		None
  5884 ;; Return value:  Size  Location     Type
  5885 ;;                  2    4[COMRAM] int 
  5886 ;; Registers used:
  5887 ;;		wreg, status,2, status,0
  5888 ;; Tracked objects:
  5889 ;;		On entry : 0/0
  5890 ;;		On exit  : 0/0
  5891 ;;		Unchanged: 0/0
  5892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5893 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5895 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5896 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5897 ;;Total ram usage:        6 bytes
  5898 ;; Hardware stack levels used:    1
  5899 ;; Hardware stack levels required when called:    4
  5900 ;; This function calls:
  5901 ;;		Nothing
  5902 ;; This function is called by:
  5903 ;;		_xtoa
  5904 ;; This function uses a non-reentrant model
  5905 ;;
  5906                           
  5907                           	psect	text38
  5908  0024B6                     __ptext38:
  5909                           	opt callstack 0
  5910  0024B6                     _isupper:
  5911                           	opt callstack 22
  5912  0024B6  0EBF               	movlw	191
  5913  0024B8  6E07               	movwf	??_isupper^0,c
  5914  0024BA  0EFF               	movlw	255
  5915  0024BC  6E08               	movwf	(??_isupper+1)^0,c
  5916  0024BE  C005  F009         	movff	isupper@c,??_isupper+2
  5917  0024C2  C006  F00A         	movff	isupper@c+1,??_isupper+3
  5918  0024C6  5007               	movf	??_isupper^0,w,c
  5919  0024C8  2609               	addwf	(??_isupper+2)^0,f,c
  5920  0024CA  5008               	movf	(??_isupper+1)^0,w,c
  5921  0024CC  220A               	addwfc	(??_isupper+3)^0,f,c
  5922  0024CE  500A               	movf	(??_isupper+3)^0,w,c
  5923  0024D0  E10A               	bnz	u4060
  5924  0024D2  0E1A               	movlw	26
  5925  0024D4  5C09               	subwf	(??_isupper+2)^0,w,c
  5926  0024D6  A0D8               	btfss	status,0,c
  5927  0024D8  EF70  F012         	goto	u4061
  5928  0024DC  EF73  F012         	goto	u4060
  5929  0024E0                     u4061:
  5930  0024E0  0E01               	movlw	1
  5931  0024E2  EF74  F012         	goto	u4070
  5932  0024E6                     u4060:
  5933  0024E6  0E00               	movlw	0
  5934  0024E8                     u4070:
  5935  0024E8  6E05               	movwf	?_isupper^0,c
  5936  0024EA  6A06               	clrf	(?_isupper+1)^0,c
  5937  0024EC  0012               	return		;funcret
  5938  0024EE                     __end_of_isupper:
  5939                           	opt callstack 0
  5940                           
  5941 ;; *************** function _isalpha *****************
  5942 ;; Defined at:
  5943 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
  5944 ;; Parameters:    Size  Location     Type
  5945 ;;  c               2    4[COMRAM] int 
  5946 ;; Auto vars:     Size  Location     Type
  5947 ;;		None
  5948 ;; Return value:  Size  Location     Type
  5949 ;;                  2    4[COMRAM] int 
  5950 ;; Registers used:
  5951 ;;		wreg, status,2, status,0
  5952 ;; Tracked objects:
  5953 ;;		On entry : 0/0
  5954 ;;		On exit  : 0/0
  5955 ;;		Unchanged: 0/0
  5956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5957 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5959 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5960 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5961 ;;Total ram usage:        6 bytes
  5962 ;; Hardware stack levels used:    1
  5963 ;; Hardware stack levels required when called:    4
  5964 ;; This function calls:
  5965 ;;		Nothing
  5966 ;; This function is called by:
  5967 ;;		_xtoa
  5968 ;; This function uses a non-reentrant model
  5969 ;;
  5970                           
  5971                           	psect	text39
  5972  002442                     __ptext39:
  5973                           	opt callstack 0
  5974  002442                     _isalpha:
  5975                           	opt callstack 22
  5976  002442  0E9F               	movlw	159
  5977  002444  6E07               	movwf	??_isalpha^0,c
  5978  002446  0EFF               	movlw	255
  5979  002448  6E08               	movwf	(??_isalpha+1)^0,c
  5980  00244A  0E20               	movlw	32
  5981  00244C  1005               	iorwf	isalpha@c^0,w,c
  5982  00244E  6E09               	movwf	(??_isalpha+2)^0,c
  5983  002450  0E00               	movlw	0
  5984  002452  1006               	iorwf	(isalpha@c+1)^0,w,c
  5985  002454  6E0A               	movwf	(??_isalpha+3)^0,c
  5986  002456  5007               	movf	??_isalpha^0,w,c
  5987  002458  2609               	addwf	(??_isalpha+2)^0,f,c
  5988  00245A  5008               	movf	(??_isalpha+1)^0,w,c
  5989  00245C  220A               	addwfc	(??_isalpha+3)^0,f,c
  5990  00245E  500A               	movf	(??_isalpha+3)^0,w,c
  5991  002460  E10A               	bnz	u4080
  5992  002462  0E1A               	movlw	26
  5993  002464  5C09               	subwf	(??_isalpha+2)^0,w,c
  5994  002466  A0D8               	btfss	status,0,c
  5995  002468  EF38  F012         	goto	u4081
  5996  00246C  EF3B  F012         	goto	u4080
  5997  002470                     u4081:
  5998  002470  0E01               	movlw	1
  5999  002472  EF3C  F012         	goto	u4090
  6000  002476                     u4080:
  6001  002476  0E00               	movlw	0
  6002  002478                     u4090:
  6003  002478  6E05               	movwf	?_isalpha^0,c
  6004  00247A  6A06               	clrf	(?_isalpha+1)^0,c
  6005  00247C  0012               	return		;funcret
  6006  00247E                     __end_of_isalpha:
  6007                           	opt callstack 0
  6008                           
  6009 ;; *************** function _utoa *****************
  6010 ;; Defined at:
  6011 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6012 ;; Parameters:    Size  Location     Type
  6013 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  6014 ;;		 -> NULL(0), 
  6015 ;;  d               8   35[COMRAM] unsigned long long 
  6016 ;; Auto vars:     Size  Location     Type
  6017 ;;  n               8   55[COMRAM] unsigned long long 
  6018 ;;  i               2   63[COMRAM] int 
  6019 ;;  w               2   53[COMRAM] int 
  6020 ;;  p               2   51[COMRAM] int 
  6021 ;; Return value:  Size  Location     Type
  6022 ;;                  2   33[COMRAM] int 
  6023 ;; Registers used:
  6024 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6025 ;; Tracked objects:
  6026 ;;		On entry : 0/0
  6027 ;;		On exit  : 0/0
  6028 ;;		Unchanged: 0/0
  6029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6030 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6031 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6032 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6033 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6034 ;;Total ram usage:       32 bytes
  6035 ;; Hardware stack levels used:    1
  6036 ;; Hardware stack levels required when called:    9
  6037 ;; This function calls:
  6038 ;;		___lodiv
  6039 ;;		___lomod
  6040 ;;		_pad
  6041 ;; This function is called by:
  6042 ;;		_vfpfcnvrt
  6043 ;; This function uses a non-reentrant model
  6044 ;;
  6045                           
  6046                           	psect	text40
  6047  000C6A                     __ptext40:
  6048                           	opt callstack 0
  6049  000C6A                     _utoa:
  6050                           	opt callstack 18
  6051  000C6A                     
  6052                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  6053  000C6A  0100               	movlb	0	; () banked
  6054  000C6C  BF8D               	btfsc	(_prec+1)& (0+255),7,b
  6055  000C6E  EF3B  F006         	goto	u4621
  6056  000C72  EF3D  F006         	goto	u4620
  6057  000C76                     u4621:
  6058  000C76  EF3E  F006         	goto	l4578
  6059  000C7A                     u4620:
  6060  000C7A                     
  6061                           ; BSR set to: 0
  6062                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  6063  000C7A  9256               	bcf	_flags^0,1,c
  6064  000C7C                     l4578:
  6065                           
  6066                           ; BSR set to: 0
  6067                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  6068  000C7C  BF8D               	btfsc	(_prec+1)& (0+255),7,b
  6069  000C7E  EF4B  F006         	goto	u4630
  6070  000C82  518D               	movf	(_prec+1)& (0+255),w,b
  6071  000C84  E106               	bnz	u4631
  6072  000C86  058C               	decf	_prec& (0+255),w,b
  6073  000C88  B0D8               	btfsc	status,0,c
  6074  000C8A  EF49  F006         	goto	u4631
  6075  000C8E  EF4B  F006         	goto	u4630
  6076  000C92                     u4631:
  6077  000C92  EF51  F006         	goto	l781
  6078  000C96                     u4630:
  6079  000C96                     
  6080                           ; BSR set to: 0
  6081  000C96  0E00               	movlw	0
  6082  000C98  6E35               	movwf	(utoa@p+1)^0,c
  6083  000C9A  0E01               	movlw	1
  6084  000C9C  6E34               	movwf	utoa@p^0,c
  6085  000C9E  EF55  F006         	goto	l783
  6086  000CA2                     l781:
  6087                           
  6088                           ; BSR set to: 0
  6089  000CA2  C08C  F034         	movff	_prec,utoa@p
  6090  000CA6  C08D  F035         	movff	_prec+1,utoa@p+1
  6091  000CAA                     l783:
  6092                           
  6093                           ; BSR set to: 0
  6094                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  6095  000CAA  C08A  F036         	movff	_width,utoa@w
  6096  000CAE  C08B  F037         	movff	_width+1,utoa@w+1
  6097                           
  6098                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  6099  000CB2  C024  F038         	movff	utoa@d,utoa@n
  6100  000CB6  C025  F039         	movff	utoa@d+1,utoa@n+1
  6101  000CBA  C026  F03A         	movff	utoa@d+2,utoa@n+2
  6102  000CBE  C027  F03B         	movff	utoa@d+3,utoa@n+3
  6103  000CC2  C028  F03C         	movff	utoa@d+4,utoa@n+4
  6104  000CC6  C029  F03D         	movff	utoa@d+5,utoa@n+5
  6105  000CCA  C02A  F03E         	movff	utoa@d+6,utoa@n+6
  6106  000CCE  C02B  F03F         	movff	utoa@d+7,utoa@n+7
  6107  000CD2                     
  6108                           ; BSR set to: 0
  6109                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  6110  000CD2  0E00               	movlw	0
  6111  000CD4  6E41               	movwf	(utoa@i+1)^0,c
  6112  000CD6  0E1F               	movlw	31
  6113  000CD8  6E40               	movwf	utoa@i^0,c
  6114  000CDA                     
  6115                           ; BSR set to: 0
  6116                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  6117  000CDA  0E00               	movlw	0
  6118  000CDC  0101               	movlb	1	; () banked
  6119  000CDE  6FE7               	movwf	(_dbuf+31)& (0+255),b
  6120                           
  6121                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6122  000CE0  EFE8  F006         	goto	l4596
  6123  000CE4                     l4586:
  6124                           
  6125                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  6126  000CE4  0640               	decf	utoa@i^0,f,c
  6127  000CE6  A0D8               	btfss	status,0,c
  6128  000CE8  0641               	decf	(utoa@i+1)^0,f,c
  6129  000CEA                     
  6130                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  6131  000CEA  0EC8               	movlw	low _dbuf
  6132  000CEC  2440               	addwf	utoa@i^0,w,c
  6133  000CEE  6ED9               	movwf	fsr2l,c
  6134  000CF0  0E01               	movlw	high _dbuf
  6135  000CF2  2041               	addwfc	(utoa@i+1)^0,w,c
  6136  000CF4  6EDA               	movwf	fsr2h,c
  6137  000CF6  C038  F005         	movff	utoa@n,___lomod@dividend
  6138  000CFA  C039  F006         	movff	utoa@n+1,___lomod@dividend+1
  6139  000CFE  C03A  F007         	movff	utoa@n+2,___lomod@dividend+2
  6140  000D02  C03B  F008         	movff	utoa@n+3,___lomod@dividend+3
  6141  000D06  C03C  F009         	movff	utoa@n+4,___lomod@dividend+4
  6142  000D0A  C03D  F00A         	movff	utoa@n+5,___lomod@dividend+5
  6143  000D0E  C03E  F00B         	movff	utoa@n+6,___lomod@dividend+6
  6144  000D12  C03F  F00C         	movff	utoa@n+7,___lomod@dividend+7
  6145  000D16  0E0A               	movlw	10
  6146  000D18  6E0D               	movwf	___lomod@divisor^0,c
  6147  000D1A  0E00               	movlw	0
  6148  000D1C  6E0E               	movwf	(___lomod@divisor+1)^0,c
  6149  000D1E  0E00               	movlw	0
  6150  000D20  6E0F               	movwf	(___lomod@divisor+2)^0,c
  6151  000D22  0E00               	movlw	0
  6152  000D24  6E10               	movwf	(___lomod@divisor+3)^0,c
  6153  000D26  0E00               	movlw	0
  6154  000D28  6E11               	movwf	(___lomod@divisor+4)^0,c
  6155  000D2A  0E00               	movlw	0
  6156  000D2C  6E12               	movwf	(___lomod@divisor+5)^0,c
  6157  000D2E  0E00               	movlw	0
  6158  000D30  6E13               	movwf	(___lomod@divisor+6)^0,c
  6159  000D32  0E00               	movlw	0
  6160  000D34  6E14               	movwf	(___lomod@divisor+7)^0,c
  6161  000D36  EC0E  F00C         	call	___lomod	;wreg free
  6162  000D3A  C005  F02C         	movff	?___lomod,??_utoa
  6163  000D3E  C006  F02D         	movff	?___lomod+1,??_utoa+1
  6164  000D42  C007  F02E         	movff	?___lomod+2,??_utoa+2
  6165  000D46  C008  F02F         	movff	?___lomod+3,??_utoa+3
  6166  000D4A  C009  F030         	movff	?___lomod+4,??_utoa+4
  6167  000D4E  C00A  F031         	movff	?___lomod+5,??_utoa+5
  6168  000D52  C00B  F032         	movff	?___lomod+6,??_utoa+6
  6169  000D56  C00C  F033         	movff	?___lomod+7,??_utoa+7
  6170  000D5A  502C               	movf	??_utoa^0,w,c
  6171  000D5C  0F30               	addlw	48
  6172  000D5E  6EDF               	movwf	indf2,c
  6173  000D60                     
  6174                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  6175  000D60  0634               	decf	utoa@p^0,f,c
  6176  000D62  A0D8               	btfss	status,0,c
  6177  000D64  0635               	decf	(utoa@p+1)^0,f,c
  6178  000D66                     
  6179                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  6180  000D66  0636               	decf	utoa@w^0,f,c
  6181  000D68  A0D8               	btfss	status,0,c
  6182  000D6A  0637               	decf	(utoa@w+1)^0,f,c
  6183  000D6C                     
  6184                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  6185  000D6C  C038  F005         	movff	utoa@n,___lodiv@dividend
  6186  000D70  C039  F006         	movff	utoa@n+1,___lodiv@dividend+1
  6187  000D74  C03A  F007         	movff	utoa@n+2,___lodiv@dividend+2
  6188  000D78  C03B  F008         	movff	utoa@n+3,___lodiv@dividend+3
  6189  000D7C  C03C  F009         	movff	utoa@n+4,___lodiv@dividend+4
  6190  000D80  C03D  F00A         	movff	utoa@n+5,___lodiv@dividend+5
  6191  000D84  C03E  F00B         	movff	utoa@n+6,___lodiv@dividend+6
  6192  000D88  C03F  F00C         	movff	utoa@n+7,___lodiv@dividend+7
  6193  000D8C  0E0A               	movlw	10
  6194  000D8E  6E0D               	movwf	___lodiv@divisor^0,c
  6195  000D90  0E00               	movlw	0
  6196  000D92  6E0E               	movwf	(___lodiv@divisor+1)^0,c
  6197  000D94  0E00               	movlw	0
  6198  000D96  6E0F               	movwf	(___lodiv@divisor+2)^0,c
  6199  000D98  0E00               	movlw	0
  6200  000D9A  6E10               	movwf	(___lodiv@divisor+3)^0,c
  6201  000D9C  0E00               	movlw	0
  6202  000D9E  6E11               	movwf	(___lodiv@divisor+4)^0,c
  6203  000DA0  0E00               	movlw	0
  6204  000DA2  6E12               	movwf	(___lodiv@divisor+5)^0,c
  6205  000DA4  0E00               	movlw	0
  6206  000DA6  6E13               	movwf	(___lodiv@divisor+6)^0,c
  6207  000DA8  0E00               	movlw	0
  6208  000DAA  6E14               	movwf	(___lodiv@divisor+7)^0,c
  6209  000DAC  EC96  F00B         	call	___lodiv	;wreg free
  6210  000DB0  C005  F038         	movff	?___lodiv,utoa@n
  6211  000DB4  C006  F039         	movff	?___lodiv+1,utoa@n+1
  6212  000DB8  C007  F03A         	movff	?___lodiv+2,utoa@n+2
  6213  000DBC  C008  F03B         	movff	?___lodiv+3,utoa@n+3
  6214  000DC0  C009  F03C         	movff	?___lodiv+4,utoa@n+4
  6215  000DC4  C00A  F03D         	movff	?___lodiv+5,utoa@n+5
  6216  000DC8  C00B  F03E         	movff	?___lodiv+6,utoa@n+6
  6217  000DCC  C00C  F03F         	movff	?___lodiv+7,utoa@n+7
  6218  000DD0                     l4596:
  6219                           
  6220                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6221  000DD0  5040               	movf	utoa@i^0,w,c
  6222  000DD2  1041               	iorwf	(utoa@i+1)^0,w,c
  6223  000DD4  B4D8               	btfsc	status,2,c
  6224  000DD6  EFEF  F006         	goto	u4641
  6225  000DDA  EFF1  F006         	goto	u4640
  6226  000DDE                     u4641:
  6227  000DDE  EF21  F007         	goto	l4606
  6228  000DE2                     u4640:
  6229  000DE2  5038               	movf	utoa@n^0,w,c
  6230  000DE4  1039               	iorwf	(utoa@n+1)^0,w,c
  6231  000DE6  103A               	iorwf	(utoa@n+2)^0,w,c
  6232  000DE8  103B               	iorwf	(utoa@n+3)^0,w,c
  6233  000DEA  103C               	iorwf	(utoa@n+4)^0,w,c
  6234  000DEC  103D               	iorwf	(utoa@n+5)^0,w,c
  6235  000DEE  103E               	iorwf	(utoa@n+6)^0,w,c
  6236  000DF0  103F               	iorwf	(utoa@n+7)^0,w,c
  6237  000DF2  A4D8               	btfss	status,2,c
  6238  000DF4  EFFE  F006         	goto	u4651
  6239  000DF8  EF00  F007         	goto	u4650
  6240  000DFC                     u4651:
  6241  000DFC  EF72  F006         	goto	l4586
  6242  000E00                     u4650:
  6243  000E00  BE35               	btfsc	(utoa@p+1)^0,7,c
  6244  000E02  EF0D  F007         	goto	u4660
  6245  000E06  5035               	movf	(utoa@p+1)^0,w,c
  6246  000E08  E106               	bnz	u4661
  6247  000E0A  0434               	decf	utoa@p^0,w,c
  6248  000E0C  B0D8               	btfsc	status,0,c
  6249  000E0E  EF0B  F007         	goto	u4661
  6250  000E12  EF0D  F007         	goto	u4660
  6251  000E16                     u4661:
  6252  000E16  EF72  F006         	goto	l4586
  6253  000E1A                     u4660:
  6254  000E1A  BE37               	btfsc	(utoa@w+1)^0,7,c
  6255  000E1C  EF18  F007         	goto	u4671
  6256  000E20  5037               	movf	(utoa@w+1)^0,w,c
  6257  000E22  E108               	bnz	u4670
  6258  000E24  0436               	decf	utoa@w^0,w,c
  6259  000E26  A0D8               	btfss	status,0,c
  6260  000E28  EF18  F007         	goto	u4671
  6261  000E2C  EF1A  F007         	goto	u4670
  6262  000E30                     u4671:
  6263  000E30  EF21  F007         	goto	l4606
  6264  000E34                     u4670:
  6265  000E34  B256               	btfsc	_flags^0,1,c
  6266  000E36  EF1F  F007         	goto	u4681
  6267  000E3A  EF21  F007         	goto	u4680
  6268  000E3E                     u4681:
  6269  000E3E  EF72  F006         	goto	l4586
  6270  000E42                     u4680:
  6271  000E42                     l4606:
  6272                           
  6273                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  6274  000E42  C022  F017         	movff	utoa@fp,pad@fp
  6275  000E46  C023  F018         	movff	utoa@fp+1,pad@fp+1
  6276  000E4A  0EC8               	movlw	low _dbuf
  6277  000E4C  2440               	addwf	utoa@i^0,w,c
  6278  000E4E  6E19               	movwf	pad@buf^0,c
  6279  000E50  0E01               	movlw	high _dbuf
  6280  000E52  2041               	addwfc	(utoa@i+1)^0,w,c
  6281  000E54  6E1A               	movwf	(pad@buf+1)^0,c
  6282  000E56  C036  F01B         	movff	utoa@w,pad@p
  6283  000E5A  C037  F01C         	movff	utoa@w+1,pad@p+1
  6284  000E5E  EC76  F00C         	call	_pad	;wreg free
  6285  000E62  C017  F022         	movff	?_pad,?_utoa
  6286  000E66  C018  F023         	movff	?_pad+1,?_utoa+1
  6287  000E6A  0012               	return		;funcret
  6288  000E6C                     __end_of_utoa:
  6289                           	opt callstack 0
  6290                           
  6291 ;; *************** function ___lomod *****************
  6292 ;; Defined at:
  6293 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
  6294 ;; Parameters:    Size  Location     Type
  6295 ;;  dividend        8    4[COMRAM] unsigned long long 
  6296 ;;  divisor         8   12[COMRAM] unsigned long long 
  6297 ;; Auto vars:     Size  Location     Type
  6298 ;;  counter         1   20[COMRAM] unsigned char 
  6299 ;; Return value:  Size  Location     Type
  6300 ;;                  8    4[COMRAM] unsigned long long 
  6301 ;; Registers used:
  6302 ;;		wreg, status,2, status,0
  6303 ;; Tracked objects:
  6304 ;;		On entry : 0/0
  6305 ;;		On exit  : 0/0
  6306 ;;		Unchanged: 0/0
  6307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6308 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6309 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6311 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6312 ;;Total ram usage:       17 bytes
  6313 ;; Hardware stack levels used:    1
  6314 ;; Hardware stack levels required when called:    4
  6315 ;; This function calls:
  6316 ;;		Nothing
  6317 ;; This function is called by:
  6318 ;;		_utoa
  6319 ;; This function uses a non-reentrant model
  6320 ;;
  6321                           
  6322                           	psect	text41
  6323  00181C                     __ptext41:
  6324                           	opt callstack 0
  6325  00181C                     ___lomod:
  6326                           	opt callstack 22
  6327  00181C  500D               	movf	___lomod@divisor^0,w,c
  6328  00181E  100E               	iorwf	(___lomod@divisor+1)^0,w,c
  6329  001820  100F               	iorwf	(___lomod@divisor+2)^0,w,c
  6330  001822  1010               	iorwf	(___lomod@divisor+3)^0,w,c
  6331  001824  1011               	iorwf	(___lomod@divisor+4)^0,w,c
  6332  001826  1012               	iorwf	(___lomod@divisor+5)^0,w,c
  6333  001828  1013               	iorwf	(___lomod@divisor+6)^0,w,c
  6334  00182A  1014               	iorwf	(___lomod@divisor+7)^0,w,c
  6335  00182C  B4D8               	btfsc	status,2,c
  6336  00182E  EF1B  F00C         	goto	u4321
  6337  001832  EF1D  F00C         	goto	u4320
  6338  001836                     u4321:
  6339  001836  EF65  F00C         	goto	l1313
  6340  00183A                     u4320:
  6341  00183A  0E01               	movlw	1
  6342  00183C  6E15               	movwf	___lomod@counter^0,c
  6343  00183E  EF2B  F00C         	goto	l4448
  6344  001842                     l4446:
  6345  001842  90D8               	bcf	status,0,c
  6346  001844  360D               	rlcf	___lomod@divisor^0,f,c
  6347  001846  360E               	rlcf	(___lomod@divisor+1)^0,f,c
  6348  001848  360F               	rlcf	(___lomod@divisor+2)^0,f,c
  6349  00184A  3610               	rlcf	(___lomod@divisor+3)^0,f,c
  6350  00184C  3611               	rlcf	(___lomod@divisor+4)^0,f,c
  6351  00184E  3612               	rlcf	(___lomod@divisor+5)^0,f,c
  6352  001850  3613               	rlcf	(___lomod@divisor+6)^0,f,c
  6353  001852  3614               	rlcf	(___lomod@divisor+7)^0,f,c
  6354  001854  2A15               	incf	___lomod@counter^0,f,c
  6355  001856                     l4448:
  6356  001856  AE14               	btfss	(___lomod@divisor+7)^0,7,c
  6357  001858  EF30  F00C         	goto	u4331
  6358  00185C  EF32  F00C         	goto	u4330
  6359  001860                     u4331:
  6360  001860  EF21  F00C         	goto	l4446
  6361  001864                     u4330:
  6362  001864                     l4450:
  6363  001864  500D               	movf	___lomod@divisor^0,w,c
  6364  001866  5C05               	subwf	___lomod@dividend^0,w,c
  6365  001868  500E               	movf	(___lomod@divisor+1)^0,w,c
  6366  00186A  5806               	subwfb	(___lomod@dividend+1)^0,w,c
  6367  00186C  500F               	movf	(___lomod@divisor+2)^0,w,c
  6368  00186E  5807               	subwfb	(___lomod@dividend+2)^0,w,c
  6369  001870  5010               	movf	(___lomod@divisor+3)^0,w,c
  6370  001872  5808               	subwfb	(___lomod@dividend+3)^0,w,c
  6371  001874  5011               	movf	(___lomod@divisor+4)^0,w,c
  6372  001876  5809               	subwfb	(___lomod@dividend+4)^0,w,c
  6373  001878  5012               	movf	(___lomod@divisor+5)^0,w,c
  6374  00187A  580A               	subwfb	(___lomod@dividend+5)^0,w,c
  6375  00187C  5013               	movf	(___lomod@divisor+6)^0,w,c
  6376  00187E  580B               	subwfb	(___lomod@dividend+6)^0,w,c
  6377  001880  5014               	movf	(___lomod@divisor+7)^0,w,c
  6378  001882  580C               	subwfb	(___lomod@dividend+7)^0,w,c
  6379  001884  A0D8               	btfss	status,0,c
  6380  001886  EF47  F00C         	goto	u4341
  6381  00188A  EF49  F00C         	goto	u4340
  6382  00188E                     u4341:
  6383  00188E  EF59  F00C         	goto	l4454
  6384  001892                     u4340:
  6385  001892  500D               	movf	___lomod@divisor^0,w,c
  6386  001894  5E05               	subwf	___lomod@dividend^0,f,c
  6387  001896  500E               	movf	(___lomod@divisor+1)^0,w,c
  6388  001898  5A06               	subwfb	(___lomod@dividend+1)^0,f,c
  6389  00189A  500F               	movf	(___lomod@divisor+2)^0,w,c
  6390  00189C  5A07               	subwfb	(___lomod@dividend+2)^0,f,c
  6391  00189E  5010               	movf	(___lomod@divisor+3)^0,w,c
  6392  0018A0  5A08               	subwfb	(___lomod@dividend+3)^0,f,c
  6393  0018A2  5011               	movf	(___lomod@divisor+4)^0,w,c
  6394  0018A4  5A09               	subwfb	(___lomod@dividend+4)^0,f,c
  6395  0018A6  5012               	movf	(___lomod@divisor+5)^0,w,c
  6396  0018A8  5A0A               	subwfb	(___lomod@dividend+5)^0,f,c
  6397  0018AA  5013               	movf	(___lomod@divisor+6)^0,w,c
  6398  0018AC  5A0B               	subwfb	(___lomod@dividend+6)^0,f,c
  6399  0018AE  5014               	movf	(___lomod@divisor+7)^0,w,c
  6400  0018B0  5A0C               	subwfb	(___lomod@dividend+7)^0,f,c
  6401  0018B2                     l4454:
  6402  0018B2  90D8               	bcf	status,0,c
  6403  0018B4  3214               	rrcf	(___lomod@divisor+7)^0,f,c
  6404  0018B6  3213               	rrcf	(___lomod@divisor+6)^0,f,c
  6405  0018B8  3212               	rrcf	(___lomod@divisor+5)^0,f,c
  6406  0018BA  3211               	rrcf	(___lomod@divisor+4)^0,f,c
  6407  0018BC  3210               	rrcf	(___lomod@divisor+3)^0,f,c
  6408  0018BE  320F               	rrcf	(___lomod@divisor+2)^0,f,c
  6409  0018C0  320E               	rrcf	(___lomod@divisor+1)^0,f,c
  6410  0018C2  320D               	rrcf	___lomod@divisor^0,f,c
  6411  0018C4  2E15               	decfsz	___lomod@counter^0,f,c
  6412  0018C6  EF32  F00C         	goto	l4450
  6413  0018CA                     l1313:
  6414  0018CA  C005  F005         	movff	___lomod@dividend,?___lomod
  6415  0018CE  C006  F006         	movff	___lomod@dividend+1,?___lomod+1
  6416  0018D2  C007  F007         	movff	___lomod@dividend+2,?___lomod+2
  6417  0018D6  C008  F008         	movff	___lomod@dividend+3,?___lomod+3
  6418  0018DA  C009  F009         	movff	___lomod@dividend+4,?___lomod+4
  6419  0018DE  C00A  F00A         	movff	___lomod@dividend+5,?___lomod+5
  6420  0018E2  C00B  F00B         	movff	___lomod@dividend+6,?___lomod+6
  6421  0018E6  C00C  F00C         	movff	___lomod@dividend+7,?___lomod+7
  6422  0018EA  0012               	return		;funcret
  6423  0018EC                     __end_of___lomod:
  6424                           	opt callstack 0
  6425                           
  6426 ;; *************** function ___lodiv *****************
  6427 ;; Defined at:
  6428 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
  6429 ;; Parameters:    Size  Location     Type
  6430 ;;  dividend        8    4[COMRAM] unsigned long long 
  6431 ;;  divisor         8   12[COMRAM] unsigned long long 
  6432 ;; Auto vars:     Size  Location     Type
  6433 ;;  quotient        8   20[COMRAM] unsigned long long 
  6434 ;;  counter         1   28[COMRAM] unsigned char 
  6435 ;; Return value:  Size  Location     Type
  6436 ;;                  8    4[COMRAM] unsigned long long 
  6437 ;; Registers used:
  6438 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6439 ;; Tracked objects:
  6440 ;;		On entry : 0/0
  6441 ;;		On exit  : 0/0
  6442 ;;		Unchanged: 0/0
  6443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6444 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6445 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6447 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6448 ;;Total ram usage:       25 bytes
  6449 ;; Hardware stack levels used:    1
  6450 ;; Hardware stack levels required when called:    4
  6451 ;; This function calls:
  6452 ;;		Nothing
  6453 ;; This function is called by:
  6454 ;;		_utoa
  6455 ;; This function uses a non-reentrant model
  6456 ;;
  6457                           
  6458                           	psect	text42
  6459  00172C                     __ptext42:
  6460                           	opt callstack 0
  6461  00172C                     ___lodiv:
  6462                           	opt callstack 22
  6463  00172C  EE20  F015         	lfsr	2,___lodiv@quotient
  6464  001730  0E07               	movlw	7
  6465  001732                     u4281:
  6466  001732  6ADE               	clrf	postinc2,c
  6467  001734  06E8               	decf	wreg,f,c
  6468  001736  E2FD               	bc	u4281
  6469  001738  500D               	movf	___lodiv@divisor^0,w,c
  6470  00173A  100E               	iorwf	(___lodiv@divisor+1)^0,w,c
  6471  00173C  100F               	iorwf	(___lodiv@divisor+2)^0,w,c
  6472  00173E  1010               	iorwf	(___lodiv@divisor+3)^0,w,c
  6473  001740  1011               	iorwf	(___lodiv@divisor+4)^0,w,c
  6474  001742  1012               	iorwf	(___lodiv@divisor+5)^0,w,c
  6475  001744  1013               	iorwf	(___lodiv@divisor+6)^0,w,c
  6476  001746  1014               	iorwf	(___lodiv@divisor+7)^0,w,c
  6477  001748  B4D8               	btfsc	status,2,c
  6478  00174A  EFA9  F00B         	goto	u4291
  6479  00174E  EFAB  F00B         	goto	u4290
  6480  001752                     u4291:
  6481  001752  EFFD  F00B         	goto	l1303
  6482  001756                     u4290:
  6483  001756  0E01               	movlw	1
  6484  001758  6E1D               	movwf	___lodiv@counter^0,c
  6485  00175A  EFB9  F00B         	goto	l4428
  6486  00175E                     l4426:
  6487  00175E  90D8               	bcf	status,0,c
  6488  001760  360D               	rlcf	___lodiv@divisor^0,f,c
  6489  001762  360E               	rlcf	(___lodiv@divisor+1)^0,f,c
  6490  001764  360F               	rlcf	(___lodiv@divisor+2)^0,f,c
  6491  001766  3610               	rlcf	(___lodiv@divisor+3)^0,f,c
  6492  001768  3611               	rlcf	(___lodiv@divisor+4)^0,f,c
  6493  00176A  3612               	rlcf	(___lodiv@divisor+5)^0,f,c
  6494  00176C  3613               	rlcf	(___lodiv@divisor+6)^0,f,c
  6495  00176E  3614               	rlcf	(___lodiv@divisor+7)^0,f,c
  6496  001770  2A1D               	incf	___lodiv@counter^0,f,c
  6497  001772                     l4428:
  6498  001772  AE14               	btfss	(___lodiv@divisor+7)^0,7,c
  6499  001774  EFBE  F00B         	goto	u4301
  6500  001778  EFC0  F00B         	goto	u4300
  6501  00177C                     u4301:
  6502  00177C  EFAF  F00B         	goto	l4426
  6503  001780                     u4300:
  6504  001780                     l4430:
  6505  001780  90D8               	bcf	status,0,c
  6506  001782  3615               	rlcf	___lodiv@quotient^0,f,c
  6507  001784  3616               	rlcf	(___lodiv@quotient+1)^0,f,c
  6508  001786  3617               	rlcf	(___lodiv@quotient+2)^0,f,c
  6509  001788  3618               	rlcf	(___lodiv@quotient+3)^0,f,c
  6510  00178A  3619               	rlcf	(___lodiv@quotient+4)^0,f,c
  6511  00178C  361A               	rlcf	(___lodiv@quotient+5)^0,f,c
  6512  00178E  361B               	rlcf	(___lodiv@quotient+6)^0,f,c
  6513  001790  361C               	rlcf	(___lodiv@quotient+7)^0,f,c
  6514  001792  500D               	movf	___lodiv@divisor^0,w,c
  6515  001794  5C05               	subwf	___lodiv@dividend^0,w,c
  6516  001796  500E               	movf	(___lodiv@divisor+1)^0,w,c
  6517  001798  5806               	subwfb	(___lodiv@dividend+1)^0,w,c
  6518  00179A  500F               	movf	(___lodiv@divisor+2)^0,w,c
  6519  00179C  5807               	subwfb	(___lodiv@dividend+2)^0,w,c
  6520  00179E  5010               	movf	(___lodiv@divisor+3)^0,w,c
  6521  0017A0  5808               	subwfb	(___lodiv@dividend+3)^0,w,c
  6522  0017A2  5011               	movf	(___lodiv@divisor+4)^0,w,c
  6523  0017A4  5809               	subwfb	(___lodiv@dividend+4)^0,w,c
  6524  0017A6  5012               	movf	(___lodiv@divisor+5)^0,w,c
  6525  0017A8  580A               	subwfb	(___lodiv@dividend+5)^0,w,c
  6526  0017AA  5013               	movf	(___lodiv@divisor+6)^0,w,c
  6527  0017AC  580B               	subwfb	(___lodiv@dividend+6)^0,w,c
  6528  0017AE  5014               	movf	(___lodiv@divisor+7)^0,w,c
  6529  0017B0  580C               	subwfb	(___lodiv@dividend+7)^0,w,c
  6530  0017B2  A0D8               	btfss	status,0,c
  6531  0017B4  EFDE  F00B         	goto	u4311
  6532  0017B8  EFE0  F00B         	goto	u4310
  6533  0017BC                     u4311:
  6534  0017BC  EFF1  F00B         	goto	l4438
  6535  0017C0                     u4310:
  6536  0017C0  500D               	movf	___lodiv@divisor^0,w,c
  6537  0017C2  5E05               	subwf	___lodiv@dividend^0,f,c
  6538  0017C4  500E               	movf	(___lodiv@divisor+1)^0,w,c
  6539  0017C6  5A06               	subwfb	(___lodiv@dividend+1)^0,f,c
  6540  0017C8  500F               	movf	(___lodiv@divisor+2)^0,w,c
  6541  0017CA  5A07               	subwfb	(___lodiv@dividend+2)^0,f,c
  6542  0017CC  5010               	movf	(___lodiv@divisor+3)^0,w,c
  6543  0017CE  5A08               	subwfb	(___lodiv@dividend+3)^0,f,c
  6544  0017D0  5011               	movf	(___lodiv@divisor+4)^0,w,c
  6545  0017D2  5A09               	subwfb	(___lodiv@dividend+4)^0,f,c
  6546  0017D4  5012               	movf	(___lodiv@divisor+5)^0,w,c
  6547  0017D6  5A0A               	subwfb	(___lodiv@dividend+5)^0,f,c
  6548  0017D8  5013               	movf	(___lodiv@divisor+6)^0,w,c
  6549  0017DA  5A0B               	subwfb	(___lodiv@dividend+6)^0,f,c
  6550  0017DC  5014               	movf	(___lodiv@divisor+7)^0,w,c
  6551  0017DE  5A0C               	subwfb	(___lodiv@dividend+7)^0,f,c
  6552  0017E0  8015               	bsf	___lodiv@quotient^0,0,c
  6553  0017E2                     l4438:
  6554  0017E2  90D8               	bcf	status,0,c
  6555  0017E4  3214               	rrcf	(___lodiv@divisor+7)^0,f,c
  6556  0017E6  3213               	rrcf	(___lodiv@divisor+6)^0,f,c
  6557  0017E8  3212               	rrcf	(___lodiv@divisor+5)^0,f,c
  6558  0017EA  3211               	rrcf	(___lodiv@divisor+4)^0,f,c
  6559  0017EC  3210               	rrcf	(___lodiv@divisor+3)^0,f,c
  6560  0017EE  320F               	rrcf	(___lodiv@divisor+2)^0,f,c
  6561  0017F0  320E               	rrcf	(___lodiv@divisor+1)^0,f,c
  6562  0017F2  320D               	rrcf	___lodiv@divisor^0,f,c
  6563  0017F4  2E1D               	decfsz	___lodiv@counter^0,f,c
  6564  0017F6  EFC0  F00B         	goto	l4430
  6565  0017FA                     l1303:
  6566  0017FA  C015  F005         	movff	___lodiv@quotient,?___lodiv
  6567  0017FE  C016  F006         	movff	___lodiv@quotient+1,?___lodiv+1
  6568  001802  C017  F007         	movff	___lodiv@quotient+2,?___lodiv+2
  6569  001806  C018  F008         	movff	___lodiv@quotient+3,?___lodiv+3
  6570  00180A  C019  F009         	movff	___lodiv@quotient+4,?___lodiv+4
  6571  00180E  C01A  F00A         	movff	___lodiv@quotient+5,?___lodiv+5
  6572  001812  C01B  F00B         	movff	___lodiv@quotient+6,?___lodiv+6
  6573  001816  C01C  F00C         	movff	___lodiv@quotient+7,?___lodiv+7
  6574  00181A  0012               	return		;funcret
  6575  00181C                     __end_of___lodiv:
  6576                           	opt callstack 0
  6577                           
  6578 ;; *************** function _stoa *****************
  6579 ;; Defined at:
  6580 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6581 ;; Parameters:    Size  Location     Type
  6582 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  6583 ;;		 -> NULL(0), 
  6584 ;;  s               2   17[COMRAM] PTR unsigned char 
  6585 ;;		 -> ?_printf(2), STR_5(9), STR_4(12), 
  6586 ;; Auto vars:     Size  Location     Type
  6587 ;;  nuls            7   20[COMRAM] unsigned char [7]
  6588 ;;  l               2   35[COMRAM] int 
  6589 ;;  p               2   33[COMRAM] int 
  6590 ;;  cp              2   31[COMRAM] PTR unsigned char 
  6591 ;;		 -> ?_printf(2), stoa@nuls(7), STR_5(9), STR_4(12), 
  6592 ;;  w               2   29[COMRAM] int 
  6593 ;;  i               2   27[COMRAM] int 
  6594 ;; Return value:  Size  Location     Type
  6595 ;;                  2   15[COMRAM] int 
  6596 ;; Registers used:
  6597 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6598 ;; Tracked objects:
  6599 ;;		On entry : 0/0
  6600 ;;		On exit  : 0/0
  6601 ;;		Unchanged: 0/0
  6602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6603 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6604 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6605 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6606 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6607 ;;Total ram usage:       22 bytes
  6608 ;; Hardware stack levels used:    1
  6609 ;; Hardware stack levels required when called:    7
  6610 ;; This function calls:
  6611 ;;		_fputc
  6612 ;;		_strlen
  6613 ;; This function is called by:
  6614 ;;		_vfpfcnvrt
  6615 ;; This function uses a non-reentrant model
  6616 ;;
  6617                           
  6618                           	psect	text43
  6619  000E6C                     __ptext43:
  6620                           	opt callstack 0
  6621  000E6C                     _stoa:
  6622                           	opt callstack 20
  6623  000E6C                     
  6624                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  6625  000E6C  EE20  F0E3         	lfsr	2,stoa@F1139
  6626  000E70  EE10  F015         	lfsr	1,stoa@nuls
  6627  000E74  0E06               	movlw	6
  6628  000E76                     u4521:
  6629  000E76  CFDB FFE3          	movff	plusw2,plusw1
  6630  000E7A  06E8               	decf	wreg,f,c
  6631  000E7C  E2FC               	bc	u4521
  6632  000E7E                     
  6633                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  6634  000E7E  C012  F020         	movff	stoa@s,stoa@cp
  6635  000E82  C013  F021         	movff	stoa@s+1,stoa@cp+1
  6636  000E86                     
  6637                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  6638  000E86  5020               	movf	stoa@cp^0,w,c
  6639  000E88  1021               	iorwf	(stoa@cp+1)^0,w,c
  6640  000E8A  A4D8               	btfss	status,2,c
  6641  000E8C  EF4A  F007         	goto	u4531
  6642  000E90  EF4C  F007         	goto	u4530
  6643  000E94                     u4531:
  6644  000E94  EF50  F007         	goto	l4540
  6645  000E98                     u4530:
  6646  000E98                     
  6647                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  6648  000E98  0E15               	movlw	low stoa@nuls
  6649  000E9A  6E20               	movwf	stoa@cp^0,c
  6650  000E9C  0E00               	movlw	high stoa@nuls
  6651  000E9E  6E21               	movwf	(stoa@cp+1)^0,c
  6652  000EA0                     l4540:
  6653                           
  6654                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  6655  000EA0  C020  F005         	movff	stoa@cp,strlen@s
  6656  000EA4  C021  F006         	movff	stoa@cp+1,strlen@s+1
  6657  000EA8  EC26  F011         	call	_strlen	;wreg free
  6658  000EAC  C005  F024         	movff	?_strlen,stoa@l
  6659  000EB0  C006  F025         	movff	?_strlen+1,stoa@l+1
  6660  000EB4                     
  6661                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  6662  000EB4  C08C  F022         	movff	_prec,stoa@p
  6663  000EB8  C08D  F023         	movff	_prec+1,stoa@p+1
  6664  000EBC                     
  6665                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  6666  000EBC  BE23               	btfsc	(stoa@p+1)^0,7,c
  6667  000EBE  EF63  F007         	goto	u4541
  6668  000EC2  EF65  F007         	goto	u4540
  6669  000EC6                     u4541:
  6670  000EC6  EF7A  F007         	goto	l762
  6671  000ECA                     u4540:
  6672  000ECA  5024               	movf	stoa@l^0,w,c
  6673  000ECC  5C22               	subwf	stoa@p^0,w,c
  6674  000ECE  5023               	movf	(stoa@p+1)^0,w,c
  6675  000ED0  0A80               	xorlw	128
  6676  000ED2  6E14               	movwf	??_stoa^0,c
  6677  000ED4  5025               	movf	(stoa@l+1)^0,w,c
  6678  000ED6  0A80               	xorlw	128
  6679  000ED8  5814               	subwfb	??_stoa^0,w,c
  6680  000EDA  A0D8               	btfss	status,0,c
  6681  000EDC  EF72  F007         	goto	u4551
  6682  000EE0  EF74  F007         	goto	u4550
  6683  000EE4                     u4551:
  6684  000EE4  EF76  F007         	goto	l760
  6685  000EE8                     u4550:
  6686  000EE8  EF7A  F007         	goto	l762
  6687  000EEC                     l760:
  6688  000EEC  C022  F024         	movff	stoa@p,stoa@l
  6689  000EF0  C023  F025         	movff	stoa@p+1,stoa@l+1
  6690  000EF4                     l762:
  6691                           
  6692                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  6693  000EF4  C024  F022         	movff	stoa@l,stoa@p
  6694  000EF8  C025  F023         	movff	stoa@l+1,stoa@p+1
  6695                           
  6696                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  6697  000EFC  C08A  F01E         	movff	_width,stoa@w
  6698  000F00  C08B  F01F         	movff	_width+1,stoa@w+1
  6699                           
  6700                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  6701  000F04  B056               	btfsc	_flags^0,0,c
  6702  000F06  EF87  F007         	goto	u4561
  6703  000F0A  EF89  F007         	goto	u4560
  6704  000F0E                     u4561:
  6705  000F0E  EFA6  F007         	goto	l4556
  6706  000F12                     u4560:
  6707  000F12  EF97  F007         	goto	l4554
  6708  000F16                     l4550:
  6709                           
  6710                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  6711  000F16  0E00               	movlw	0
  6712  000F18  6E08               	movwf	(fputc@c+1)^0,c
  6713  000F1A  0E20               	movlw	32
  6714  000F1C  6E07               	movwf	fputc@c^0,c
  6715  000F1E  C010  F009         	movff	stoa@fp,fputc@fp
  6716  000F22  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  6717  000F26  ECE7  F00D         	call	_fputc	;wreg free
  6718  000F2A                     
  6719                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  6720  000F2A  4A24               	infsnz	stoa@l^0,f,c
  6721  000F2C  2A25               	incf	(stoa@l+1)^0,f,c
  6722  000F2E                     l4554:
  6723                           
  6724                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  6725  000F2E  501E               	movf	stoa@w^0,w,c
  6726  000F30  5C24               	subwf	stoa@l^0,w,c
  6727  000F32  5025               	movf	(stoa@l+1)^0,w,c
  6728  000F34  0A80               	xorlw	128
  6729  000F36  6E14               	movwf	??_stoa^0,c
  6730  000F38  501F               	movf	(stoa@w+1)^0,w,c
  6731  000F3A  0A80               	xorlw	128
  6732  000F3C  5814               	subwfb	??_stoa^0,w,c
  6733  000F3E  A0D8               	btfss	status,0,c
  6734  000F40  EFA4  F007         	goto	u4571
  6735  000F44  EFA6  F007         	goto	u4570
  6736  000F48                     u4571:
  6737  000F48  EF8B  F007         	goto	l4550
  6738  000F4C                     u4570:
  6739  000F4C                     l4556:
  6740                           
  6741                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  6742  000F4C  0E00               	movlw	0
  6743  000F4E  6E1D               	movwf	(stoa@i+1)^0,c
  6744  000F50  0E00               	movlw	0
  6745  000F52  6E1C               	movwf	stoa@i^0,c
  6746                           
  6747                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  6748  000F54  EFCB  F007         	goto	l4564
  6749  000F58                     l4558:
  6750                           
  6751                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  6752  000F58  C020  FFF6         	movff	stoa@cp,tblptrl
  6753  000F5C  C021  FFF7         	movff	stoa@cp+1,tblptrh
  6754  000F60  0E00               	movlw	low (__mediumconst shr (0+16))
  6755  000F62  6EF8               	movwf	tblptru,c
  6756  000F64  0E0E               	movlw	(high __ramtop+-1)
  6757  000F66  64F7               	cpfsgt	tblptrh,c
  6758  000F68  D003               	bra	u4587
  6759  000F6A  0008               	tblrd		*
  6760  000F6C  50F5               	movf	tablat,w,c
  6761  000F6E  D005               	bra	u4580
  6762  000F70                     u4587:
  6763  000F70  CFF6 FFE9          	movff	tblptrl,fsr0l
  6764  000F74  CFF7 FFEA          	movff	tblptrh,fsr0h
  6765  000F78  50EF               	movf	indf0,w,c
  6766  000F7A                     u4580:
  6767  000F7A  6E14               	movwf	??_stoa^0,c
  6768  000F7C  5014               	movf	??_stoa^0,w,c
  6769  000F7E  6E07               	movwf	fputc@c^0,c
  6770  000F80  6A08               	clrf	(fputc@c+1)^0,c
  6771  000F82  C010  F009         	movff	stoa@fp,fputc@fp
  6772  000F86  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  6773  000F8A  ECE7  F00D         	call	_fputc	;wreg free
  6774  000F8E                     
  6775                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  6776  000F8E  4A20               	infsnz	stoa@cp^0,f,c
  6777  000F90  2A21               	incf	(stoa@cp+1)^0,f,c
  6778  000F92                     
  6779                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  6780  000F92  4A1C               	infsnz	stoa@i^0,f,c
  6781  000F94  2A1D               	incf	(stoa@i+1)^0,f,c
  6782  000F96                     l4564:
  6783                           
  6784                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  6785  000F96  5022               	movf	stoa@p^0,w,c
  6786  000F98  5C1C               	subwf	stoa@i^0,w,c
  6787  000F9A  501D               	movf	(stoa@i+1)^0,w,c
  6788  000F9C  0A80               	xorlw	128
  6789  000F9E  6E14               	movwf	??_stoa^0,c
  6790  000FA0  5023               	movf	(stoa@p+1)^0,w,c
  6791  000FA2  0A80               	xorlw	128
  6792  000FA4  5814               	subwfb	??_stoa^0,w,c
  6793  000FA6  A0D8               	btfss	status,0,c
  6794  000FA8  EFD8  F007         	goto	u4591
  6795  000FAC  EFDA  F007         	goto	u4590
  6796  000FB0                     u4591:
  6797  000FB0  EFAC  F007         	goto	l4558
  6798  000FB4                     u4590:
  6799  000FB4                     
  6800                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  6801  000FB4  A056               	btfss	_flags^0,0,c
  6802  000FB6  EFDF  F007         	goto	u4601
  6803  000FBA  EFE1  F007         	goto	u4600
  6804  000FBE                     u4601:
  6805  000FBE  EFFE  F007         	goto	l772
  6806  000FC2                     u4600:
  6807  000FC2  EFEF  F007         	goto	l4572
  6808  000FC6                     l4568:
  6809                           
  6810                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  6811  000FC6  0E00               	movlw	0
  6812  000FC8  6E08               	movwf	(fputc@c+1)^0,c
  6813  000FCA  0E20               	movlw	32
  6814  000FCC  6E07               	movwf	fputc@c^0,c
  6815  000FCE  C010  F009         	movff	stoa@fp,fputc@fp
  6816  000FD2  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  6817  000FD6  ECE7  F00D         	call	_fputc	;wreg free
  6818  000FDA                     
  6819                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  6820  000FDA  4A24               	infsnz	stoa@l^0,f,c
  6821  000FDC  2A25               	incf	(stoa@l+1)^0,f,c
  6822  000FDE                     l4572:
  6823                           
  6824                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  6825  000FDE  501E               	movf	stoa@w^0,w,c
  6826  000FE0  5C24               	subwf	stoa@l^0,w,c
  6827  000FE2  5025               	movf	(stoa@l+1)^0,w,c
  6828  000FE4  0A80               	xorlw	128
  6829  000FE6  6E14               	movwf	??_stoa^0,c
  6830  000FE8  501F               	movf	(stoa@w+1)^0,w,c
  6831  000FEA  0A80               	xorlw	128
  6832  000FEC  5814               	subwfb	??_stoa^0,w,c
  6833  000FEE  A0D8               	btfss	status,0,c
  6834  000FF0  EFFC  F007         	goto	u4611
  6835  000FF4  EFFE  F007         	goto	u4610
  6836  000FF8                     u4611:
  6837  000FF8  EFE3  F007         	goto	l4568
  6838  000FFC                     u4610:
  6839  000FFC                     l772:
  6840                           
  6841                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  6842  000FFC  C024  F010         	movff	stoa@l,?_stoa
  6843  001000  C025  F011         	movff	stoa@l+1,?_stoa+1
  6844  001004  0012               	return		;funcret
  6845  001006                     __end_of_stoa:
  6846                           	opt callstack 0
  6847                           
  6848 ;; *************** function _dtoa *****************
  6849 ;; Defined at:
  6850 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6851 ;; Parameters:    Size  Location     Type
  6852 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  6853 ;;		 -> NULL(0), 
  6854 ;;  d               8   35[COMRAM] long long 
  6855 ;; Auto vars:     Size  Location     Type
  6856 ;;  n               8   59[COMRAM] long long 
  6857 ;;  i               2   67[COMRAM] int 
  6858 ;;  s               2   57[COMRAM] int 
  6859 ;;  w               2   55[COMRAM] int 
  6860 ;;  p               2   53[COMRAM] int 
  6861 ;; Return value:  Size  Location     Type
  6862 ;;                  2   33[COMRAM] int 
  6863 ;; Registers used:
  6864 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6865 ;; Tracked objects:
  6866 ;;		On entry : 0/0
  6867 ;;		On exit  : 0/0
  6868 ;;		Unchanged: 0/0
  6869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6870 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6871 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6872 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6873 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6874 ;;Total ram usage:       36 bytes
  6875 ;; Hardware stack levels used:    1
  6876 ;; Hardware stack levels required when called:    9
  6877 ;; This function calls:
  6878 ;;		___aodiv
  6879 ;;		___aomod
  6880 ;;		_abs
  6881 ;;		_pad
  6882 ;; This function is called by:
  6883 ;;		_vfpfcnvrt
  6884 ;; This function uses a non-reentrant model
  6885 ;;
  6886                           
  6887                           	psect	text44
  6888  0006B4                     __ptext44:
  6889                           	opt callstack 0
  6890  0006B4                     _dtoa:
  6891                           	opt callstack 18
  6892  0006B4                     
  6893                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  6894  0006B4  C024  F03C         	movff	dtoa@d,dtoa@n
  6895  0006B8  C025  F03D         	movff	dtoa@d+1,dtoa@n+1
  6896  0006BC  C026  F03E         	movff	dtoa@d+2,dtoa@n+2
  6897  0006C0  C027  F03F         	movff	dtoa@d+3,dtoa@n+3
  6898  0006C4  C028  F040         	movff	dtoa@d+4,dtoa@n+4
  6899  0006C8  C029  F041         	movff	dtoa@d+5,dtoa@n+5
  6900  0006CC  C02A  F042         	movff	dtoa@d+6,dtoa@n+6
  6901  0006D0  C02B  F043         	movff	dtoa@d+7,dtoa@n+7
  6902  0006D4                     
  6903                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  6904  0006D4  BE43               	btfsc	(dtoa@n+7)^0,7,c
  6905  0006D6  EF6F  F003         	goto	u4371
  6906  0006DA  EF72  F003         	goto	u4370
  6907  0006DE                     u4371:
  6908  0006DE  0E01               	movlw	1
  6909  0006E0  EF73  F003         	goto	u4380
  6910  0006E4                     u4370:
  6911  0006E4  0E00               	movlw	0
  6912  0006E6                     u4380:
  6913  0006E6  6E3A               	movwf	dtoa@s^0,c
  6914  0006E8  6A3B               	clrf	(dtoa@s+1)^0,c
  6915                           
  6916                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  6917  0006EA  503A               	movf	dtoa@s^0,w,c
  6918  0006EC  103B               	iorwf	(dtoa@s+1)^0,w,c
  6919  0006EE  B4D8               	btfsc	status,2,c
  6920  0006F0  EF7C  F003         	goto	u4391
  6921  0006F4  EF7E  F003         	goto	u4390
  6922  0006F8                     u4391:
  6923  0006F8  EF8E  F003         	goto	l4476
  6924  0006FC                     u4390:
  6925  0006FC                     
  6926                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  6927  0006FC  1E43               	comf	(dtoa@n+7)^0,f,c
  6928  0006FE  1E42               	comf	(dtoa@n+6)^0,f,c
  6929  000700  1E41               	comf	(dtoa@n+5)^0,f,c
  6930  000702  1E40               	comf	(dtoa@n+4)^0,f,c
  6931  000704  1E3F               	comf	(dtoa@n+3)^0,f,c
  6932  000706  1E3E               	comf	(dtoa@n+2)^0,f,c
  6933  000708  1E3D               	comf	(dtoa@n+1)^0,f,c
  6934  00070A  6C3C               	negf	dtoa@n^0,c
  6935  00070C  0E00               	movlw	0
  6936  00070E  223D               	addwfc	(dtoa@n+1)^0,f,c
  6937  000710  223E               	addwfc	(dtoa@n+2)^0,f,c
  6938  000712  223F               	addwfc	(dtoa@n+3)^0,f,c
  6939  000714  2240               	addwfc	(dtoa@n+4)^0,f,c
  6940  000716  2241               	addwfc	(dtoa@n+5)^0,f,c
  6941  000718  2242               	addwfc	(dtoa@n+6)^0,f,c
  6942  00071A  2243               	addwfc	(dtoa@n+7)^0,f,c
  6943  00071C                     l4476:
  6944                           
  6945                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  6946  00071C  0100               	movlb	0	; () banked
  6947  00071E  BF8D               	btfsc	(_prec+1)& (0+255),7,b
  6948  000720  EF94  F003         	goto	u4401
  6949  000724  EF96  F003         	goto	u4400
  6950  000728                     u4401:
  6951  000728  EF97  F003         	goto	l4480
  6952  00072C                     u4400:
  6953  00072C                     
  6954                           ; BSR set to: 0
  6955                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  6956  00072C  9256               	bcf	_flags^0,1,c
  6957  00072E                     l4480:
  6958                           
  6959                           ; BSR set to: 0
  6960                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  6961  00072E  BF8D               	btfsc	(_prec+1)& (0+255),7,b
  6962  000730  EFA4  F003         	goto	u4410
  6963  000734  518D               	movf	(_prec+1)& (0+255),w,b
  6964  000736  E106               	bnz	u4411
  6965  000738  058C               	decf	_prec& (0+255),w,b
  6966  00073A  B0D8               	btfsc	status,0,c
  6967  00073C  EFA2  F003         	goto	u4411
  6968  000740  EFA4  F003         	goto	u4410
  6969  000744                     u4411:
  6970  000744  EFAA  F003         	goto	l733
  6971  000748                     u4410:
  6972  000748                     
  6973                           ; BSR set to: 0
  6974  000748  0E00               	movlw	0
  6975  00074A  6E37               	movwf	(dtoa@p+1)^0,c
  6976  00074C  0E01               	movlw	1
  6977  00074E  6E36               	movwf	dtoa@p^0,c
  6978  000750  EFAE  F003         	goto	l735
  6979  000754                     l733:
  6980                           
  6981                           ; BSR set to: 0
  6982  000754  C08C  F036         	movff	_prec,dtoa@p
  6983  000758  C08D  F037         	movff	_prec+1,dtoa@p+1
  6984  00075C                     l735:
  6985                           
  6986                           ; BSR set to: 0
  6987                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  6988  00075C  C08A  F038         	movff	_width,dtoa@w
  6989  000760  C08B  F039         	movff	_width+1,dtoa@w+1
  6990  000764                     
  6991                           ; BSR set to: 0
  6992                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  6993  000764  503A               	movf	dtoa@s^0,w,c
  6994  000766  103B               	iorwf	(dtoa@s+1)^0,w,c
  6995  000768  A4D8               	btfss	status,2,c
  6996  00076A  EFB9  F003         	goto	u4421
  6997  00076E  EFBB  F003         	goto	u4420
  6998  000772                     u4421:
  6999  000772  EFC2  F003         	goto	l4488
  7000  000776                     u4420:
  7001  000776                     
  7002                           ; BSR set to: 0
  7003  000776  A456               	btfss	_flags^0,2,c
  7004  000778  EFC0  F003         	goto	u4431
  7005  00077C  EFC2  F003         	goto	u4430
  7006  000780                     u4431:
  7007  000780  EFC5  F003         	goto	l4490
  7008  000784                     u4430:
  7009  000784                     l4488:
  7010                           
  7011                           ; BSR set to: 0
  7012                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  7013  000784  0638               	decf	dtoa@w^0,f,c
  7014  000786  A0D8               	btfss	status,0,c
  7015  000788  0639               	decf	(dtoa@w+1)^0,f,c
  7016  00078A                     l4490:
  7017                           
  7018                           ; BSR set to: 0
  7019                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  7020  00078A  0E00               	movlw	0
  7021  00078C  6E45               	movwf	(dtoa@i+1)^0,c
  7022  00078E  0E1F               	movlw	31
  7023  000790  6E44               	movwf	dtoa@i^0,c
  7024  000792                     
  7025                           ; BSR set to: 0
  7026                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  7027  000792  0E00               	movlw	0
  7028  000794  0101               	movlb	1	; () banked
  7029  000796  6FE7               	movwf	(_dbuf+31)& (0+255),b
  7030                           
  7031                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7032  000798  EF4A  F004         	goto	l4504
  7033  00079C                     l4494:
  7034                           
  7035                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  7036  00079C  0644               	decf	dtoa@i^0,f,c
  7037  00079E  A0D8               	btfss	status,0,c
  7038  0007A0  0645               	decf	(dtoa@i+1)^0,f,c
  7039  0007A2                     
  7040                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  7041  0007A2  0EC8               	movlw	low _dbuf
  7042  0007A4  2444               	addwf	dtoa@i^0,w,c
  7043  0007A6  6ED9               	movwf	fsr2l,c
  7044  0007A8  0E01               	movlw	high _dbuf
  7045  0007AA  2045               	addwfc	(dtoa@i+1)^0,w,c
  7046  0007AC  6EDA               	movwf	fsr2h,c
  7047  0007AE  C03C  F005         	movff	dtoa@n,___aomod@dividend
  7048  0007B2  C03D  F006         	movff	dtoa@n+1,___aomod@dividend+1
  7049  0007B6  C03E  F007         	movff	dtoa@n+2,___aomod@dividend+2
  7050  0007BA  C03F  F008         	movff	dtoa@n+3,___aomod@dividend+3
  7051  0007BE  C040  F009         	movff	dtoa@n+4,___aomod@dividend+4
  7052  0007C2  C041  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  7053  0007C6  C042  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  7054  0007CA  C043  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  7055  0007CE  0E0A               	movlw	10
  7056  0007D0  6E0D               	movwf	___aomod@divisor^0,c
  7057  0007D2  0E00               	movlw	0
  7058  0007D4  6E0E               	movwf	(___aomod@divisor+1)^0,c
  7059  0007D6  0E00               	movlw	0
  7060  0007D8  6E0F               	movwf	(___aomod@divisor+2)^0,c
  7061  0007DA  0E00               	movlw	0
  7062  0007DC  6E10               	movwf	(___aomod@divisor+3)^0,c
  7063  0007DE  0E00               	movlw	0
  7064  0007E0  6E11               	movwf	(___aomod@divisor+4)^0,c
  7065  0007E2  0E00               	movlw	0
  7066  0007E4  6E12               	movwf	(___aomod@divisor+5)^0,c
  7067  0007E6  0E00               	movlw	0
  7068  0007E8  6E13               	movwf	(___aomod@divisor+6)^0,c
  7069  0007EA  0E00               	movlw	0
  7070  0007EC  6E14               	movwf	(___aomod@divisor+7)^0,c
  7071  0007EE  EC4F  F00A         	call	___aomod	;wreg free
  7072  0007F2  C005  F02C         	movff	?___aomod,??_dtoa
  7073  0007F6  C006  F02D         	movff	?___aomod+1,??_dtoa+1
  7074  0007FA  C007  F02E         	movff	?___aomod+2,??_dtoa+2
  7075  0007FE  C008  F02F         	movff	?___aomod+3,??_dtoa+3
  7076  000802  C009  F030         	movff	?___aomod+4,??_dtoa+4
  7077  000806  C00A  F031         	movff	?___aomod+5,??_dtoa+5
  7078  00080A  C00B  F032         	movff	?___aomod+6,??_dtoa+6
  7079  00080E  C00C  F033         	movff	?___aomod+7,??_dtoa+7
  7080  000812  C02C  F017         	movff	??_dtoa,abs@a
  7081  000816  C02E  F018         	movff	??_dtoa+2,abs@a+1
  7082  00081A  EC01  F012         	call	_abs	;wreg free
  7083  00081E  5017               	movf	?_abs^0,w,c
  7084  000820  0F30               	addlw	48
  7085  000822  6EDF               	movwf	indf2,c
  7086  000824                     
  7087                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  7088  000824  0636               	decf	dtoa@p^0,f,c
  7089  000826  A0D8               	btfss	status,0,c
  7090  000828  0637               	decf	(dtoa@p+1)^0,f,c
  7091  00082A                     
  7092                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  7093  00082A  0638               	decf	dtoa@w^0,f,c
  7094  00082C  A0D8               	btfss	status,0,c
  7095  00082E  0639               	decf	(dtoa@w+1)^0,f,c
  7096  000830                     
  7097                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  7098  000830  C03C  F005         	movff	dtoa@n,___aodiv@dividend
  7099  000834  C03D  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  7100  000838  C03E  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  7101  00083C  C03F  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  7102  000840  C040  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  7103  000844  C041  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  7104  000848  C042  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  7105  00084C  C043  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  7106  000850  0E0A               	movlw	10
  7107  000852  6E0D               	movwf	___aodiv@divisor^0,c
  7108  000854  0E00               	movlw	0
  7109  000856  6E0E               	movwf	(___aodiv@divisor+1)^0,c
  7110  000858  0E00               	movlw	0
  7111  00085A  6E0F               	movwf	(___aodiv@divisor+2)^0,c
  7112  00085C  0E00               	movlw	0
  7113  00085E  6E10               	movwf	(___aodiv@divisor+3)^0,c
  7114  000860  0E00               	movlw	0
  7115  000862  6E11               	movwf	(___aodiv@divisor+4)^0,c
  7116  000864  0E00               	movlw	0
  7117  000866  6E12               	movwf	(___aodiv@divisor+5)^0,c
  7118  000868  0E00               	movlw	0
  7119  00086A  6E13               	movwf	(___aodiv@divisor+6)^0,c
  7120  00086C  0E00               	movlw	0
  7121  00086E  6E14               	movwf	(___aodiv@divisor+7)^0,c
  7122  000870  ECD0  F008         	call	___aodiv	;wreg free
  7123  000874  C005  F03C         	movff	?___aodiv,dtoa@n
  7124  000878  C006  F03D         	movff	?___aodiv+1,dtoa@n+1
  7125  00087C  C007  F03E         	movff	?___aodiv+2,dtoa@n+2
  7126  000880  C008  F03F         	movff	?___aodiv+3,dtoa@n+3
  7127  000884  C009  F040         	movff	?___aodiv+4,dtoa@n+4
  7128  000888  C00A  F041         	movff	?___aodiv+5,dtoa@n+5
  7129  00088C  C00B  F042         	movff	?___aodiv+6,dtoa@n+6
  7130  000890  C00C  F043         	movff	?___aodiv+7,dtoa@n+7
  7131  000894                     l4504:
  7132                           
  7133                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7134  000894  BE45               	btfsc	(dtoa@i+1)^0,7,c
  7135  000896  EF55  F004         	goto	u4441
  7136  00089A  5045               	movf	(dtoa@i+1)^0,w,c
  7137  00089C  E108               	bnz	u4440
  7138  00089E  0444               	decf	dtoa@i^0,w,c
  7139  0008A0  A0D8               	btfss	status,0,c
  7140  0008A2  EF55  F004         	goto	u4441
  7141  0008A6  EF57  F004         	goto	u4440
  7142  0008AA                     u4441:
  7143  0008AA  EF87  F004         	goto	l4514
  7144  0008AE                     u4440:
  7145  0008AE  503C               	movf	dtoa@n^0,w,c
  7146  0008B0  103D               	iorwf	(dtoa@n+1)^0,w,c
  7147  0008B2  103E               	iorwf	(dtoa@n+2)^0,w,c
  7148  0008B4  103F               	iorwf	(dtoa@n+3)^0,w,c
  7149  0008B6  1040               	iorwf	(dtoa@n+4)^0,w,c
  7150  0008B8  1041               	iorwf	(dtoa@n+5)^0,w,c
  7151  0008BA  1042               	iorwf	(dtoa@n+6)^0,w,c
  7152  0008BC  1043               	iorwf	(dtoa@n+7)^0,w,c
  7153  0008BE  A4D8               	btfss	status,2,c
  7154  0008C0  EF64  F004         	goto	u4451
  7155  0008C4  EF66  F004         	goto	u4450
  7156  0008C8                     u4451:
  7157  0008C8  EFCE  F003         	goto	l4494
  7158  0008CC                     u4450:
  7159  0008CC  BE37               	btfsc	(dtoa@p+1)^0,7,c
  7160  0008CE  EF73  F004         	goto	u4460
  7161  0008D2  5037               	movf	(dtoa@p+1)^0,w,c
  7162  0008D4  E106               	bnz	u4461
  7163  0008D6  0436               	decf	dtoa@p^0,w,c
  7164  0008D8  B0D8               	btfsc	status,0,c
  7165  0008DA  EF71  F004         	goto	u4461
  7166  0008DE  EF73  F004         	goto	u4460
  7167  0008E2                     u4461:
  7168  0008E2  EFCE  F003         	goto	l4494
  7169  0008E6                     u4460:
  7170  0008E6  BE39               	btfsc	(dtoa@w+1)^0,7,c
  7171  0008E8  EF7E  F004         	goto	u4471
  7172  0008EC  5039               	movf	(dtoa@w+1)^0,w,c
  7173  0008EE  E108               	bnz	u4470
  7174  0008F0  0438               	decf	dtoa@w^0,w,c
  7175  0008F2  A0D8               	btfss	status,0,c
  7176  0008F4  EF7E  F004         	goto	u4471
  7177  0008F8  EF80  F004         	goto	u4470
  7178  0008FC                     u4471:
  7179  0008FC  EF87  F004         	goto	l4514
  7180  000900                     u4470:
  7181  000900  B256               	btfsc	_flags^0,1,c
  7182  000902  EF85  F004         	goto	u4481
  7183  000906  EF87  F004         	goto	u4480
  7184  00090A                     u4481:
  7185  00090A  EFCE  F003         	goto	l4494
  7186  00090E                     u4480:
  7187  00090E                     l4514:
  7188                           
  7189                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  7190  00090E  503A               	movf	dtoa@s^0,w,c
  7191  000910  103B               	iorwf	(dtoa@s+1)^0,w,c
  7192  000912  A4D8               	btfss	status,2,c
  7193  000914  EF8E  F004         	goto	u4491
  7194  000918  EF90  F004         	goto	u4490
  7195  00091C                     u4491:
  7196  00091C  EF97  F004         	goto	l4518
  7197  000920                     u4490:
  7198  000920  A456               	btfss	_flags^0,2,c
  7199  000922  EF95  F004         	goto	u4501
  7200  000926  EF97  F004         	goto	u4500
  7201  00092A                     u4501:
  7202  00092A  EFB5  F004         	goto	l4528
  7203  00092E                     u4500:
  7204  00092E                     l4518:
  7205                           
  7206                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  7207  00092E  0644               	decf	dtoa@i^0,f,c
  7208  000930  A0D8               	btfss	status,0,c
  7209  000932  0645               	decf	(dtoa@i+1)^0,f,c
  7210  000934                     
  7211                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  7212  000934  503A               	movf	dtoa@s^0,w,c
  7213  000936  103B               	iorwf	(dtoa@s+1)^0,w,c
  7214  000938  A4D8               	btfss	status,2,c
  7215  00093A  EFA1  F004         	goto	u4511
  7216  00093E  EFA3  F004         	goto	u4510
  7217  000942                     u4511:
  7218  000942  EFA9  F004         	goto	l4524
  7219  000946                     u4510:
  7220  000946  0E00               	movlw	0
  7221  000948  6E35               	movwf	(_dtoa$1290+1)^0,c
  7222  00094A  0E2B               	movlw	43
  7223  00094C  6E34               	movwf	_dtoa$1290^0,c
  7224  00094E  EFAD  F004         	goto	l4526
  7225  000952                     l4524:
  7226  000952  0E00               	movlw	0
  7227  000954  6E35               	movwf	(_dtoa$1290+1)^0,c
  7228  000956  0E2D               	movlw	45
  7229  000958  6E34               	movwf	_dtoa$1290^0,c
  7230  00095A                     l4526:
  7231  00095A  0EC8               	movlw	low _dbuf
  7232  00095C  2444               	addwf	dtoa@i^0,w,c
  7233  00095E  6ED9               	movwf	fsr2l,c
  7234  000960  0E01               	movlw	high _dbuf
  7235  000962  2045               	addwfc	(dtoa@i+1)^0,w,c
  7236  000964  6EDA               	movwf	fsr2h,c
  7237  000966  C034  FFDF         	movff	_dtoa$1290,indf2
  7238  00096A                     l4528:
  7239                           
  7240                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  7241  00096A  C022  F017         	movff	dtoa@fp,pad@fp
  7242  00096E  C023  F018         	movff	dtoa@fp+1,pad@fp+1
  7243  000972  0EC8               	movlw	low _dbuf
  7244  000974  2444               	addwf	dtoa@i^0,w,c
  7245  000976  6E19               	movwf	pad@buf^0,c
  7246  000978  0E01               	movlw	high _dbuf
  7247  00097A  2045               	addwfc	(dtoa@i+1)^0,w,c
  7248  00097C  6E1A               	movwf	(pad@buf+1)^0,c
  7249  00097E  C038  F01B         	movff	dtoa@w,pad@p
  7250  000982  C039  F01C         	movff	dtoa@w+1,pad@p+1
  7251  000986  EC76  F00C         	call	_pad	;wreg free
  7252  00098A  C017  F022         	movff	?_pad,?_dtoa
  7253  00098E  C018  F023         	movff	?_pad+1,?_dtoa+1
  7254  000992  0012               	return		;funcret
  7255  000994                     __end_of_dtoa:
  7256                           	opt callstack 0
  7257                           
  7258 ;; *************** function _pad *****************
  7259 ;; Defined at:
  7260 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7261 ;; Parameters:    Size  Location     Type
  7262 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  7263 ;;		 -> NULL(0), 
  7264 ;;  buf             2   24[COMRAM] PTR unsigned char 
  7265 ;;		 -> dbuf(32), 
  7266 ;;  p               2   26[COMRAM] int 
  7267 ;; Auto vars:     Size  Location     Type
  7268 ;;  w               2   31[COMRAM] int 
  7269 ;;  i               2   29[COMRAM] int 
  7270 ;; Return value:  Size  Location     Type
  7271 ;;                  2   22[COMRAM] int 
  7272 ;; Registers used:
  7273 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7274 ;; Tracked objects:
  7275 ;;		On entry : 0/0
  7276 ;;		On exit  : 0/0
  7277 ;;		Unchanged: 0/0
  7278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7279 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7280 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7281 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7282 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7283 ;;Total ram usage:       11 bytes
  7284 ;; Hardware stack levels used:    1
  7285 ;; Hardware stack levels required when called:    8
  7286 ;; This function calls:
  7287 ;;		_fputc
  7288 ;;		_fputs
  7289 ;;		_strlen
  7290 ;; This function is called by:
  7291 ;;		_dtoa
  7292 ;;		_utoa
  7293 ;;		_xtoa
  7294 ;; This function uses a non-reentrant model
  7295 ;;
  7296                           
  7297                           	psect	text45
  7298  0018EC                     __ptext45:
  7299                           	opt callstack 0
  7300  0018EC                     _pad:
  7301                           	opt callstack 18
  7302  0018EC                     
  7303                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  7304  0018EC  A056               	btfss	_flags^0,0,c
  7305  0018EE  EF7B  F00C         	goto	u4011
  7306  0018F2  EF7D  F00C         	goto	u4010
  7307  0018F6                     u4011:
  7308  0018F6  EF87  F00C         	goto	l4290
  7309  0018FA                     u4010:
  7310  0018FA                     
  7311                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  7312  0018FA  C019  F010         	movff	pad@buf,fputs@s
  7313  0018FE  C01A  F011         	movff	pad@buf+1,fputs@s+1
  7314  001902  C017  F012         	movff	pad@fp,fputs@fp
  7315  001906  C018  F013         	movff	pad@fp+1,fputs@fp+1
  7316  00190A  ECBD  F011         	call	_fputs	;wreg free
  7317  00190E                     l4290:
  7318                           
  7319                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  7320  00190E  BE1C               	btfsc	(pad@p+1)^0,7,c
  7321  001910  EF8C  F00C         	goto	u4021
  7322  001914  EF8E  F00C         	goto	u4020
  7323  001918                     u4021:
  7324  001918  EF94  F00C         	goto	l4294
  7325  00191C                     u4020:
  7326  00191C  C01B  F020         	movff	pad@p,pad@w
  7327  001920  C01C  F021         	movff	pad@p+1,pad@w+1
  7328  001924  EF98  F00C         	goto	l722
  7329  001928                     l4294:
  7330  001928  0E00               	movlw	0
  7331  00192A  6E21               	movwf	(pad@w+1)^0,c
  7332  00192C  0E00               	movlw	0
  7333  00192E  6E20               	movwf	pad@w^0,c
  7334  001930                     l722:
  7335                           
  7336                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  7337  001930  0E00               	movlw	0
  7338  001932  6E1F               	movwf	(pad@i+1)^0,c
  7339  001934  0E00               	movlw	0
  7340  001936  6E1E               	movwf	pad@i^0,c
  7341                           
  7342                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  7343  001938  EFAA  F00C         	goto	l4300
  7344  00193C                     l4296:
  7345                           
  7346                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  7347  00193C  0E00               	movlw	0
  7348  00193E  6E08               	movwf	(fputc@c+1)^0,c
  7349  001940  0E20               	movlw	32
  7350  001942  6E07               	movwf	fputc@c^0,c
  7351  001944  C017  F009         	movff	pad@fp,fputc@fp
  7352  001948  C018  F00A         	movff	pad@fp+1,fputc@fp+1
  7353  00194C  ECE7  F00D         	call	_fputc	;wreg free
  7354  001950                     
  7355                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  7356  001950  4A1E               	infsnz	pad@i^0,f,c
  7357  001952  2A1F               	incf	(pad@i+1)^0,f,c
  7358  001954                     l4300:
  7359                           
  7360                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  7361  001954  5020               	movf	pad@w^0,w,c
  7362  001956  5C1E               	subwf	pad@i^0,w,c
  7363  001958  501F               	movf	(pad@i+1)^0,w,c
  7364  00195A  0A80               	xorlw	128
  7365  00195C  6E1D               	movwf	??_pad^0,c
  7366  00195E  5021               	movf	(pad@w+1)^0,w,c
  7367  001960  0A80               	xorlw	128
  7368  001962  581D               	subwfb	??_pad^0,w,c
  7369  001964  A0D8               	btfss	status,0,c
  7370  001966  EFB7  F00C         	goto	u4031
  7371  00196A  EFB9  F00C         	goto	u4030
  7372  00196E                     u4031:
  7373  00196E  EF9E  F00C         	goto	l4296
  7374  001972                     u4030:
  7375  001972                     
  7376                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  7377  001972  B056               	btfsc	_flags^0,0,c
  7378  001974  EFBE  F00C         	goto	u4041
  7379  001978  EFC0  F00C         	goto	u4040
  7380  00197C                     u4041:
  7381  00197C  EFCA  F00C         	goto	l4304
  7382  001980                     u4040:
  7383  001980                     
  7384                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  7385  001980  C019  F010         	movff	pad@buf,fputs@s
  7386  001984  C01A  F011         	movff	pad@buf+1,fputs@s+1
  7387  001988  C017  F012         	movff	pad@fp,fputs@fp
  7388  00198C  C018  F013         	movff	pad@fp+1,fputs@fp+1
  7389  001990  ECBD  F011         	call	_fputs	;wreg free
  7390  001994                     l4304:
  7391                           
  7392                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  7393  001994  C019  F005         	movff	pad@buf,strlen@s
  7394  001998  C01A  F006         	movff	pad@buf+1,strlen@s+1
  7395  00199C  EC26  F011         	call	_strlen	;wreg free
  7396  0019A0  5020               	movf	pad@w^0,w,c
  7397  0019A2  2405               	addwf	?_strlen^0,w,c
  7398  0019A4  6E17               	movwf	?_pad^0,c
  7399  0019A6  5021               	movf	(pad@w+1)^0,w,c
  7400  0019A8  2006               	addwfc	(?_strlen+1)^0,w,c
  7401  0019AA  6E18               	movwf	(?_pad+1)^0,c
  7402  0019AC  0012               	return		;funcret
  7403  0019AE                     __end_of_pad:
  7404                           	opt callstack 0
  7405                           
  7406 ;; *************** function _strlen *****************
  7407 ;; Defined at:
  7408 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  7409 ;; Parameters:    Size  Location     Type
  7410 ;;  s               2    4[COMRAM] PTR const unsigned char 
  7411 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), STR_5(9), 
  7412 ;;		 -> STR_4(12), 
  7413 ;; Auto vars:     Size  Location     Type
  7414 ;;  a               2    6[COMRAM] PTR const unsigned char 
  7415 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), STR_5(9), 
  7416 ;;		 -> STR_4(12), 
  7417 ;; Return value:  Size  Location     Type
  7418 ;;                  2    4[COMRAM] unsigned int 
  7419 ;; Registers used:
  7420 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  7421 ;; Tracked objects:
  7422 ;;		On entry : 0/0
  7423 ;;		On exit  : 0/0
  7424 ;;		Unchanged: 0/0
  7425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7426 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7427 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7429 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7430 ;;Total ram usage:        4 bytes
  7431 ;; Hardware stack levels used:    1
  7432 ;; Hardware stack levels required when called:    4
  7433 ;; This function calls:
  7434 ;;		Nothing
  7435 ;; This function is called by:
  7436 ;;		_pad
  7437 ;;		_stoa
  7438 ;; This function uses a non-reentrant model
  7439 ;;
  7440                           
  7441                           	psect	text46
  7442  00224C                     __ptext46:
  7443                           	opt callstack 0
  7444  00224C                     _strlen:
  7445                           	opt callstack 21
  7446  00224C  C005  F007         	movff	strlen@s,strlen@a
  7447  002250  C006  F008         	movff	strlen@s+1,strlen@a+1
  7448  002254  EF2E  F011         	goto	l4276
  7449  002258                     l4274:
  7450  002258  4A05               	infsnz	strlen@s^0,f,c
  7451  00225A  2A06               	incf	(strlen@s+1)^0,f,c
  7452  00225C                     l4276:
  7453  00225C  C005  FFF6         	movff	strlen@s,tblptrl
  7454  002260  C006  FFF7         	movff	strlen@s+1,tblptrh
  7455  002264  0E00               	movlw	low (__mediumconst shr (0+16))
  7456  002266  6EF8               	movwf	tblptru,c
  7457  002268  0E0E               	movlw	(high __ramtop+-1)
  7458  00226A  64F7               	cpfsgt	tblptrh,c
  7459  00226C  D003               	bra	u3977
  7460  00226E  0008               	tblrd		*
  7461  002270  50F5               	movf	tablat,w,c
  7462  002272  D005               	bra	u3970
  7463  002274                     u3977:
  7464  002274  CFF6 FFE9          	movff	tblptrl,fsr0l
  7465  002278  CFF7 FFEA          	movff	tblptrh,fsr0h
  7466  00227C  50EF               	movf	indf0,w,c
  7467  00227E                     u3970:
  7468  00227E  0900               	iorlw	0
  7469  002280  A4D8               	btfss	status,2,c
  7470  002282  EF45  F011         	goto	u3981
  7471  002286  EF47  F011         	goto	u3980
  7472  00228A                     u3981:
  7473  00228A  EF2C  F011         	goto	l4274
  7474  00228E                     u3980:
  7475  00228E  5007               	movf	strlen@a^0,w,c
  7476  002290  5C05               	subwf	strlen@s^0,w,c
  7477  002292  6E05               	movwf	?_strlen^0,c
  7478  002294  5008               	movf	(strlen@a+1)^0,w,c
  7479  002296  5806               	subwfb	(strlen@s+1)^0,w,c
  7480  002298  6E06               	movwf	(?_strlen+1)^0,c
  7481  00229A  0012               	return		;funcret
  7482  00229C                     __end_of_strlen:
  7483                           	opt callstack 0
  7484                           
  7485 ;; *************** function _fputs *****************
  7486 ;; Defined at:
  7487 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  7488 ;; Parameters:    Size  Location     Type
  7489 ;;  s               2   15[COMRAM] PTR const unsigned char 
  7490 ;;		 -> dbuf(32), 
  7491 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  7492 ;;		 -> NULL(0), 
  7493 ;; Auto vars:     Size  Location     Type
  7494 ;;  i               2   20[COMRAM] int 
  7495 ;;  c               1   19[COMRAM] unsigned char 
  7496 ;; Return value:  Size  Location     Type
  7497 ;;                  2   15[COMRAM] int 
  7498 ;; Registers used:
  7499 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7500 ;; Tracked objects:
  7501 ;;		On entry : 0/0
  7502 ;;		On exit  : 0/0
  7503 ;;		Unchanged: 0/0
  7504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7505 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7506 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7508 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7509 ;;Total ram usage:        7 bytes
  7510 ;; Hardware stack levels used:    1
  7511 ;; Hardware stack levels required when called:    7
  7512 ;; This function calls:
  7513 ;;		_fputc
  7514 ;; This function is called by:
  7515 ;;		_pad
  7516 ;; This function uses a non-reentrant model
  7517 ;;
  7518                           
  7519                           	psect	text47
  7520  00237A                     __ptext47:
  7521                           	opt callstack 0
  7522  00237A                     _fputs:
  7523                           	opt callstack 18
  7524  00237A  0E00               	movlw	0
  7525  00237C  6E16               	movwf	(fputs@i+1)^0,c
  7526  00237E  0E00               	movlw	0
  7527  002380  6E15               	movwf	fputs@i^0,c
  7528  002382  EFCE  F011         	goto	l4270
  7529  002386                     l4266:
  7530  002386  C014  F007         	movff	fputs@c,fputc@c
  7531  00238A  6A08               	clrf	(fputc@c+1)^0,c
  7532  00238C  C012  F009         	movff	fputs@fp,fputc@fp
  7533  002390  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
  7534  002394  ECE7  F00D         	call	_fputc	;wreg free
  7535  002398  4A15               	infsnz	fputs@i^0,f,c
  7536  00239A  2A16               	incf	(fputs@i+1)^0,f,c
  7537  00239C                     l4270:
  7538  00239C  5015               	movf	fputs@i^0,w,c
  7539  00239E  2410               	addwf	fputs@s^0,w,c
  7540  0023A0  6ED9               	movwf	fsr2l,c
  7541  0023A2  5016               	movf	(fputs@i+1)^0,w,c
  7542  0023A4  2011               	addwfc	(fputs@s+1)^0,w,c
  7543  0023A6  6EDA               	movwf	fsr2h,c
  7544  0023A8  50DF               	movf	indf2,w,c
  7545  0023AA  6E14               	movwf	fputs@c^0,c
  7546  0023AC  5014               	movf	fputs@c^0,w,c
  7547  0023AE  A4D8               	btfss	status,2,c
  7548  0023B0  EFDC  F011         	goto	u3961
  7549  0023B4  EFDE  F011         	goto	u3960
  7550  0023B8                     u3961:
  7551  0023B8  EFC3  F011         	goto	l4266
  7552  0023BC                     u3960:
  7553  0023BC  0012               	return		;funcret
  7554  0023BE                     __end_of_fputs:
  7555                           	opt callstack 0
  7556                           
  7557 ;; *************** function _fputc *****************
  7558 ;; Defined at:
  7559 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  7560 ;; Parameters:    Size  Location     Type
  7561 ;;  c               2    6[COMRAM] int 
  7562 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
  7563 ;;		 -> NULL(0), 
  7564 ;; Auto vars:     Size  Location     Type
  7565 ;;		None
  7566 ;; Return value:  Size  Location     Type
  7567 ;;                  2    6[COMRAM] int 
  7568 ;; Registers used:
  7569 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7570 ;; Tracked objects:
  7571 ;;		On entry : 0/0
  7572 ;;		On exit  : 0/0
  7573 ;;		Unchanged: 0/0
  7574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7575 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7577 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7578 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7579 ;;Total ram usage:        9 bytes
  7580 ;; Hardware stack levels used:    1
  7581 ;; Hardware stack levels required when called:    6
  7582 ;; This function calls:
  7583 ;;		_putch
  7584 ;; This function is called by:
  7585 ;;		_pad
  7586 ;;		_stoa
  7587 ;;		_vfpfcnvrt
  7588 ;;		_fputs
  7589 ;; This function uses a non-reentrant model
  7590 ;;
  7591                           
  7592                           	psect	text48
  7593  001BCE                     __ptext48:
  7594                           	opt callstack 0
  7595  001BCE                     _fputc:
  7596                           	opt callstack 18
  7597  001BCE  5009               	movf	fputc@fp^0,w,c
  7598  001BD0  100A               	iorwf	(fputc@fp+1)^0,w,c
  7599  001BD2  B4D8               	btfsc	status,2,c
  7600  001BD4  EFEE  F00D         	goto	u3921
  7601  001BD8  EFF0  F00D         	goto	u3920
  7602  001BDC                     u3921:
  7603  001BDC  EFF9  F00D         	goto	l4254
  7604  001BE0                     u3920:
  7605  001BE0  5009               	movf	fputc@fp^0,w,c
  7606  001BE2  100A               	iorwf	(fputc@fp+1)^0,w,c
  7607  001BE4  A4D8               	btfss	status,2,c
  7608  001BE6  EFF7  F00D         	goto	u3931
  7609  001BEA  EFF9  F00D         	goto	u3930
  7610  001BEE                     u3931:
  7611  001BEE  EFFE  F00D         	goto	l4256
  7612  001BF2                     u3930:
  7613  001BF2                     l4254:
  7614  001BF2  5007               	movf	fputc@c^0,w,c
  7615  001BF4  EC6B  F013         	call	_putch
  7616  001BF8  EF31  F00E         	goto	l1612
  7617  001BFC                     l4256:
  7618  001BFC  EE20 F004          	lfsr	2,4
  7619  001C00  5009               	movf	fputc@fp^0,w,c
  7620  001C02  26D9               	addwf	fsr2l,f,c
  7621  001C04  500A               	movf	(fputc@fp+1)^0,w,c
  7622  001C06  22DA               	addwfc	fsr2h,f,c
  7623  001C08  50DE               	movf	postinc2,w,c
  7624  001C0A  10DE               	iorwf	postinc2,w,c
  7625  001C0C  B4D8               	btfsc	status,2,c
  7626  001C0E  EF0B  F00E         	goto	u3941
  7627  001C12  EF0D  F00E         	goto	u3940
  7628  001C16                     u3941:
  7629  001C16  EF28  F00E         	goto	l4260
  7630  001C1A                     u3940:
  7631  001C1A  EE20 F004          	lfsr	2,4
  7632  001C1E  5009               	movf	fputc@fp^0,w,c
  7633  001C20  26D9               	addwf	fsr2l,f,c
  7634  001C22  500A               	movf	(fputc@fp+1)^0,w,c
  7635  001C24  22DA               	addwfc	fsr2h,f,c
  7636  001C26  EE10 F002          	lfsr	1,2
  7637  001C2A  5009               	movf	fputc@fp^0,w,c
  7638  001C2C  26E1               	addwf	fsr1l,f,c
  7639  001C2E  500A               	movf	(fputc@fp+1)^0,w,c
  7640  001C30  22E2               	addwfc	fsr1h,f,c
  7641  001C32  50DE               	movf	postinc2,w,c
  7642  001C34  5CE6               	subwf	postinc1,w,c
  7643  001C36  50E6               	movf	postinc1,w,c
  7644  001C38  0A80               	xorlw	128
  7645  001C3A  6E0F               	movwf	(??_fputc+4)^0,c
  7646  001C3C  50DE               	movf	postinc2,w,c
  7647  001C3E  0A80               	xorlw	128
  7648  001C40  580F               	subwfb	(??_fputc+4)^0,w,c
  7649  001C42  B0D8               	btfsc	status,0,c
  7650  001C44  EF26  F00E         	goto	u3951
  7651  001C48  EF28  F00E         	goto	u3950
  7652  001C4C                     u3951:
  7653  001C4C  EF31  F00E         	goto	l1612
  7654  001C50                     u3950:
  7655  001C50                     l4260:
  7656  001C50  EE20 F002          	lfsr	2,2
  7657  001C54  5009               	movf	fputc@fp^0,w,c
  7658  001C56  26D9               	addwf	fsr2l,f,c
  7659  001C58  500A               	movf	(fputc@fp+1)^0,w,c
  7660  001C5A  22DA               	addwfc	fsr2h,f,c
  7661  001C5C  2ADE               	incf	postinc2,f,c
  7662  001C5E  0E00               	movlw	0
  7663  001C60  22DD               	addwfc	postdec2,f,c
  7664  001C62                     l1612:
  7665  001C62  0012               	return		;funcret
  7666  001C64                     __end_of_fputc:
  7667                           	opt callstack 0
  7668                           
  7669 ;; *************** function _putch *****************
  7670 ;; Defined at:
  7671 ;;		line 201 in file "mcc_generated_files/eusart2.c"
  7672 ;; Parameters:    Size  Location     Type
  7673 ;;  txData          1    wreg     unsigned char 
  7674 ;; Auto vars:     Size  Location     Type
  7675 ;;  txData          1    5[COMRAM] unsigned char 
  7676 ;; Return value:  Size  Location     Type
  7677 ;;                  1    wreg      void 
  7678 ;; Registers used:
  7679 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7680 ;; Tracked objects:
  7681 ;;		On entry : 0/0
  7682 ;;		On exit  : 0/0
  7683 ;;		Unchanged: 0/0
  7684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7686 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7688 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7689 ;;Total ram usage:        1 bytes
  7690 ;; Hardware stack levels used:    1
  7691 ;; Hardware stack levels required when called:    5
  7692 ;; This function calls:
  7693 ;;		_EUSART2_Write
  7694 ;; This function is called by:
  7695 ;;		_fputc
  7696 ;; This function uses a non-reentrant model
  7697 ;;
  7698                           
  7699                           	psect	text49
  7700  0026D6                     __ptext49:
  7701                           	opt callstack 0
  7702  0026D6                     _putch:
  7703                           	opt callstack 18
  7704                           
  7705                           ;incstack = 0
  7706                           ;putch@txData stored from wreg
  7707  0026D6  6E06               	movwf	putch@txData^0,c
  7708  0026D8                     
  7709                           ;mcc_generated_files/eusart2.c: 201: void putch(char txData);mcc_generated_files/eusart2
      +                          .c: 202: {;mcc_generated_files/eusart2.c: 203:     EUSART2_Write(txData);
  7710  0026D8  5006               	movf	putch@txData^0,w,c
  7711  0026DA  EC77  F010         	call	_EUSART2_Write
  7712  0026DE  0012               	return		;funcret
  7713  0026E0                     __end_of_putch:
  7714                           	opt callstack 0
  7715                           
  7716 ;; *************** function _EUSART2_Write *****************
  7717 ;; Defined at:
  7718 ;;		line 173 in file "mcc_generated_files/eusart2.c"
  7719 ;; Parameters:    Size  Location     Type
  7720 ;;  txData          1    wreg     unsigned char 
  7721 ;; Auto vars:     Size  Location     Type
  7722 ;;  txData          1    4[COMRAM] unsigned char 
  7723 ;; Return value:  Size  Location     Type
  7724 ;;                  1    wreg      void 
  7725 ;; Registers used:
  7726 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7727 ;; Tracked objects:
  7728 ;;		On entry : 0/0
  7729 ;;		On exit  : 0/0
  7730 ;;		Unchanged: 0/0
  7731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7733 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7735 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7736 ;;Total ram usage:        1 bytes
  7737 ;; Hardware stack levels used:    1
  7738 ;; Hardware stack levels required when called:    4
  7739 ;; This function calls:
  7740 ;;		Nothing
  7741 ;; This function is called by:
  7742 ;;		_putch
  7743 ;; This function uses a non-reentrant model
  7744 ;;
  7745                           
  7746                           	psect	text50
  7747  0020EE                     __ptext50:
  7748                           	opt callstack 0
  7749  0020EE                     _EUSART2_Write:
  7750                           	opt callstack 18
  7751                           
  7752                           ;incstack = 0
  7753                           ;EUSART2_Write@txData stored from wreg
  7754  0020EE  6E05               	movwf	EUSART2_Write@txData^0,c
  7755  0020F0                     l4232:
  7756                           
  7757                           ;mcc_generated_files/eusart2.c: 175:     while(0 == eusart2TxBufferRemaining)
  7758  0020F0  0100               	movlb	0	; () banked
  7759  0020F2  51E2               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
  7760  0020F4  B4D8               	btfsc	status,2,c
  7761  0020F6  EF7F  F010         	goto	u3891
  7762  0020FA  EF81  F010         	goto	u3890
  7763  0020FE                     u3891:
  7764  0020FE  EF78  F010         	goto	l4232
  7765  002102                     u3890:
  7766  002102                     
  7767                           ; BSR set to: 0
  7768                           ;mcc_generated_files/eusart2.c: 179:     if(0 == PIE3bits.TX2IE)
  7769  002102  010E               	movlb	14	; () banked
  7770  002104  BDC5               	btfsc	197,6,b	;volatile
  7771  002106  EF87  F010         	goto	u3901
  7772  00210A  EF89  F010         	goto	u3900
  7773  00210E                     u3901:
  7774  00210E  EF8D  F010         	goto	l321
  7775  002112                     u3900:
  7776  002112                     
  7777                           ; BSR set to: 14
  7778                           ;mcc_generated_files/eusart2.c: 180:     {;mcc_generated_files/eusart2.c: 181:         T
      +                          X2REG = txData;
  7779  002112  C005  FE9A         	movff	EUSART2_Write@txData,3738	;volatile
  7780                           
  7781                           ;mcc_generated_files/eusart2.c: 182:     }
  7782  002116  EFA3  F010         	goto	l4246
  7783  00211A                     l321:
  7784                           
  7785                           ; BSR set to: 14
  7786                           ;mcc_generated_files/eusart2.c: 184:     {;mcc_generated_files/eusart2.c: 185:         P
      +                          IE3bits.TX2IE = 0;
  7787  00211A  9DC5               	bcf	197,6,b	;volatile
  7788  00211C                     
  7789                           ; BSR set to: 14
  7790                           ;mcc_generated_files/eusart2.c: 186:         eusart2TxBuffer[eusart2TxHead++] = txData;
  7791  00211C  0E80               	movlw	low _eusart2TxBuffer
  7792  00211E  0100               	movlb	0	; () banked
  7793  002120  259E               	addwf	_eusart2TxHead& (0+255),w,b	;volatile
  7794  002122  6ED9               	movwf	fsr2l,c
  7795  002124  6ADA               	clrf	fsr2h,c
  7796  002126  0E00               	movlw	high _eusart2TxBuffer
  7797  002128  22DA               	addwfc	fsr2h,f,c
  7798  00212A  C005  FFDF         	movff	EUSART2_Write@txData,indf2
  7799  00212E                     
  7800                           ; BSR set to: 0
  7801  00212E  2B9E               	incf	_eusart2TxHead& (0+255),f,b	;volatile
  7802  002130                     
  7803                           ; BSR set to: 0
  7804                           ;mcc_generated_files/eusart2.c: 187:         if(sizeof(eusart2TxBuffer) <= eusart2TxHead
      +                          )
  7805  002130  0E07               	movlw	7
  7806  002132  659E               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
  7807  002134  EF9E  F010         	goto	u3911
  7808  002138  EFA0  F010         	goto	u3910
  7809  00213C                     u3911:
  7810  00213C  EFA2  F010         	goto	l4244
  7811  002140                     u3910:
  7812  002140                     
  7813                           ; BSR set to: 0
  7814                           ;mcc_generated_files/eusart2.c: 188:         {;mcc_generated_files/eusart2.c: 189:      
      +                                 eusart2TxHead = 0;
  7815  002140  0E00               	movlw	0
  7816  002142  6F9E               	movwf	_eusart2TxHead& (0+255),b	;volatile
  7817  002144                     l4244:
  7818                           
  7819                           ; BSR set to: 0
  7820                           ;mcc_generated_files/eusart2.c: 191:         eusart2TxBufferRemaining--;
  7821  002144  07E2               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
  7822  002146                     l4246:
  7823                           
  7824                           ;mcc_generated_files/eusart2.c: 193:     PIE3bits.TX2IE = 1;
  7825  002146  010E               	movlb	14	; () banked
  7826  002148  8DC5               	bsf	197,6,b	;volatile
  7827  00214A                     
  7828                           ; BSR set to: 14
  7829  00214A  0012               	return		;funcret
  7830  00214C                     __end_of_EUSART2_Write:
  7831                           	opt callstack 0
  7832                           
  7833 ;; *************** function _abs *****************
  7834 ;; Defined at:
  7835 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  7836 ;; Parameters:    Size  Location     Type
  7837 ;;  a               2   22[COMRAM] int 
  7838 ;; Auto vars:     Size  Location     Type
  7839 ;;		None
  7840 ;; Return value:  Size  Location     Type
  7841 ;;                  2   22[COMRAM] int 
  7842 ;; Registers used:
  7843 ;;		wreg, status,2, status,0
  7844 ;; Tracked objects:
  7845 ;;		On entry : 0/0
  7846 ;;		On exit  : 0/0
  7847 ;;		Unchanged: 0/0
  7848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7849 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7851 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7852 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7853 ;;Total ram usage:        4 bytes
  7854 ;; Hardware stack levels used:    1
  7855 ;; Hardware stack levels required when called:    4
  7856 ;; This function calls:
  7857 ;;		Nothing
  7858 ;; This function is called by:
  7859 ;;		_dtoa
  7860 ;; This function uses a non-reentrant model
  7861 ;;
  7862                           
  7863                           	psect	text51
  7864  002402                     __ptext51:
  7865                           	opt callstack 0
  7866  002402                     _abs:
  7867                           	opt callstack 22
  7868  002402  BE18               	btfsc	(abs@a+1)^0,7,c
  7869  002404  EF0E  F012         	goto	u4050
  7870  002408  5018               	movf	(abs@a+1)^0,w,c
  7871  00240A  E106               	bnz	u4051
  7872  00240C  0417               	decf	abs@a^0,w,c
  7873  00240E  B0D8               	btfsc	status,0,c
  7874  002410  EF0C  F012         	goto	u4051
  7875  002414  EF0E  F012         	goto	u4050
  7876  002418                     u4051:
  7877  002418  EF1C  F012         	goto	l1540
  7878  00241C                     u4050:
  7879  00241C  C017  F019         	movff	abs@a,??_abs
  7880  002420  C018  F01A         	movff	abs@a+1,??_abs+1
  7881  002424  1E19               	comf	??_abs^0,f,c
  7882  002426  1E1A               	comf	(??_abs+1)^0,f,c
  7883  002428  4A19               	infsnz	??_abs^0,f,c
  7884  00242A  2A1A               	incf	(??_abs+1)^0,f,c
  7885  00242C  C019  F017         	movff	??_abs,?_abs
  7886  002430  C01A  F018         	movff	??_abs+1,?_abs+1
  7887  002434  EF20  F012         	goto	l1543
  7888  002438                     l1540:
  7889  002438  C017  F017         	movff	abs@a,?_abs
  7890  00243C  C018  F018         	movff	abs@a+1,?_abs+1
  7891  002440                     l1543:
  7892  002440  0012               	return		;funcret
  7893  002442                     __end_of_abs:
  7894                           	opt callstack 0
  7895                           
  7896 ;; *************** function ___aomod *****************
  7897 ;; Defined at:
  7898 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  7899 ;; Parameters:    Size  Location     Type
  7900 ;;  dividend        8    4[COMRAM] long long 
  7901 ;;  divisor         8   12[COMRAM] long long 
  7902 ;; Auto vars:     Size  Location     Type
  7903 ;;  sign            1   21[COMRAM] unsigned char 
  7904 ;;  counter         1   20[COMRAM] unsigned char 
  7905 ;; Return value:  Size  Location     Type
  7906 ;;                  8    4[COMRAM] long long 
  7907 ;; Registers used:
  7908 ;;		wreg, status,2, status,0
  7909 ;; Tracked objects:
  7910 ;;		On entry : 0/0
  7911 ;;		On exit  : 0/0
  7912 ;;		Unchanged: 0/0
  7913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7914 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7915 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7917 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7918 ;;Total ram usage:       18 bytes
  7919 ;; Hardware stack levels used:    1
  7920 ;; Hardware stack levels required when called:    4
  7921 ;; This function calls:
  7922 ;;		Nothing
  7923 ;; This function is called by:
  7924 ;;		_dtoa
  7925 ;; This function uses a non-reentrant model
  7926 ;;
  7927                           
  7928                           	psect	text52
  7929  00149E                     __ptext52:
  7930                           	opt callstack 0
  7931  00149E                     ___aomod:
  7932                           	opt callstack 22
  7933  00149E  0E00               	movlw	0
  7934  0014A0  6E16               	movwf	___aomod@sign^0,c
  7935  0014A2  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
  7936  0014A4  EF58  F00A         	goto	u4220
  7937  0014A8  EF56  F00A         	goto	u4221
  7938  0014AC                     u4221:
  7939  0014AC  EF6A  F00A         	goto	l4392
  7940  0014B0                     u4220:
  7941  0014B0  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  7942  0014B2  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  7943  0014B4  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  7944  0014B6  1E09               	comf	(___aomod@dividend+4)^0,f,c
  7945  0014B8  1E08               	comf	(___aomod@dividend+3)^0,f,c
  7946  0014BA  1E07               	comf	(___aomod@dividend+2)^0,f,c
  7947  0014BC  1E06               	comf	(___aomod@dividend+1)^0,f,c
  7948  0014BE  6C05               	negf	___aomod@dividend^0,c
  7949  0014C0  0E00               	movlw	0
  7950  0014C2  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  7951  0014C4  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  7952  0014C6  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  7953  0014C8  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  7954  0014CA  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  7955  0014CC  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  7956  0014CE  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  7957  0014D0  0E01               	movlw	1
  7958  0014D2  6E16               	movwf	___aomod@sign^0,c
  7959  0014D4                     l4392:
  7960  0014D4  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
  7961  0014D6  EF71  F00A         	goto	u4230
  7962  0014DA  EF6F  F00A         	goto	u4231
  7963  0014DE                     u4231:
  7964  0014DE  EF81  F00A         	goto	l4396
  7965  0014E2                     u4230:
  7966  0014E2  1E14               	comf	(___aomod@divisor+7)^0,f,c
  7967  0014E4  1E13               	comf	(___aomod@divisor+6)^0,f,c
  7968  0014E6  1E12               	comf	(___aomod@divisor+5)^0,f,c
  7969  0014E8  1E11               	comf	(___aomod@divisor+4)^0,f,c
  7970  0014EA  1E10               	comf	(___aomod@divisor+3)^0,f,c
  7971  0014EC  1E0F               	comf	(___aomod@divisor+2)^0,f,c
  7972  0014EE  1E0E               	comf	(___aomod@divisor+1)^0,f,c
  7973  0014F0  6C0D               	negf	___aomod@divisor^0,c
  7974  0014F2  0E00               	movlw	0
  7975  0014F4  220E               	addwfc	(___aomod@divisor+1)^0,f,c
  7976  0014F6  220F               	addwfc	(___aomod@divisor+2)^0,f,c
  7977  0014F8  2210               	addwfc	(___aomod@divisor+3)^0,f,c
  7978  0014FA  2211               	addwfc	(___aomod@divisor+4)^0,f,c
  7979  0014FC  2212               	addwfc	(___aomod@divisor+5)^0,f,c
  7980  0014FE  2213               	addwfc	(___aomod@divisor+6)^0,f,c
  7981  001500  2214               	addwfc	(___aomod@divisor+7)^0,f,c
  7982  001502                     l4396:
  7983  001502  500D               	movf	___aomod@divisor^0,w,c
  7984  001504  100E               	iorwf	(___aomod@divisor+1)^0,w,c
  7985  001506  100F               	iorwf	(___aomod@divisor+2)^0,w,c
  7986  001508  1010               	iorwf	(___aomod@divisor+3)^0,w,c
  7987  00150A  1011               	iorwf	(___aomod@divisor+4)^0,w,c
  7988  00150C  1012               	iorwf	(___aomod@divisor+5)^0,w,c
  7989  00150E  1013               	iorwf	(___aomod@divisor+6)^0,w,c
  7990  001510  1014               	iorwf	(___aomod@divisor+7)^0,w,c
  7991  001512  B4D8               	btfsc	status,2,c
  7992  001514  EF8E  F00A         	goto	u4241
  7993  001518  EF90  F00A         	goto	u4240
  7994  00151C                     u4241:
  7995  00151C  EFD8  F00A         	goto	l4412
  7996  001520                     u4240:
  7997  001520  0E01               	movlw	1
  7998  001522  6E15               	movwf	___aomod@counter^0,c
  7999  001524  EF9E  F00A         	goto	l4402
  8000  001528                     l4400:
  8001  001528  90D8               	bcf	status,0,c
  8002  00152A  360D               	rlcf	___aomod@divisor^0,f,c
  8003  00152C  360E               	rlcf	(___aomod@divisor+1)^0,f,c
  8004  00152E  360F               	rlcf	(___aomod@divisor+2)^0,f,c
  8005  001530  3610               	rlcf	(___aomod@divisor+3)^0,f,c
  8006  001532  3611               	rlcf	(___aomod@divisor+4)^0,f,c
  8007  001534  3612               	rlcf	(___aomod@divisor+5)^0,f,c
  8008  001536  3613               	rlcf	(___aomod@divisor+6)^0,f,c
  8009  001538  3614               	rlcf	(___aomod@divisor+7)^0,f,c
  8010  00153A  2A15               	incf	___aomod@counter^0,f,c
  8011  00153C                     l4402:
  8012  00153C  AE14               	btfss	(___aomod@divisor+7)^0,7,c
  8013  00153E  EFA3  F00A         	goto	u4251
  8014  001542  EFA5  F00A         	goto	u4250
  8015  001546                     u4251:
  8016  001546  EF94  F00A         	goto	l4400
  8017  00154A                     u4250:
  8018  00154A                     l4404:
  8019  00154A  500D               	movf	___aomod@divisor^0,w,c
  8020  00154C  5C05               	subwf	___aomod@dividend^0,w,c
  8021  00154E  500E               	movf	(___aomod@divisor+1)^0,w,c
  8022  001550  5806               	subwfb	(___aomod@dividend+1)^0,w,c
  8023  001552  500F               	movf	(___aomod@divisor+2)^0,w,c
  8024  001554  5807               	subwfb	(___aomod@dividend+2)^0,w,c
  8025  001556  5010               	movf	(___aomod@divisor+3)^0,w,c
  8026  001558  5808               	subwfb	(___aomod@dividend+3)^0,w,c
  8027  00155A  5011               	movf	(___aomod@divisor+4)^0,w,c
  8028  00155C  5809               	subwfb	(___aomod@dividend+4)^0,w,c
  8029  00155E  5012               	movf	(___aomod@divisor+5)^0,w,c
  8030  001560  580A               	subwfb	(___aomod@dividend+5)^0,w,c
  8031  001562  5013               	movf	(___aomod@divisor+6)^0,w,c
  8032  001564  580B               	subwfb	(___aomod@dividend+6)^0,w,c
  8033  001566  5014               	movf	(___aomod@divisor+7)^0,w,c
  8034  001568  580C               	subwfb	(___aomod@dividend+7)^0,w,c
  8035  00156A  A0D8               	btfss	status,0,c
  8036  00156C  EFBA  F00A         	goto	u4261
  8037  001570  EFBC  F00A         	goto	u4260
  8038  001574                     u4261:
  8039  001574  EFCC  F00A         	goto	l4408
  8040  001578                     u4260:
  8041  001578  500D               	movf	___aomod@divisor^0,w,c
  8042  00157A  5E05               	subwf	___aomod@dividend^0,f,c
  8043  00157C  500E               	movf	(___aomod@divisor+1)^0,w,c
  8044  00157E  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
  8045  001580  500F               	movf	(___aomod@divisor+2)^0,w,c
  8046  001582  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
  8047  001584  5010               	movf	(___aomod@divisor+3)^0,w,c
  8048  001586  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
  8049  001588  5011               	movf	(___aomod@divisor+4)^0,w,c
  8050  00158A  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
  8051  00158C  5012               	movf	(___aomod@divisor+5)^0,w,c
  8052  00158E  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
  8053  001590  5013               	movf	(___aomod@divisor+6)^0,w,c
  8054  001592  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
  8055  001594  5014               	movf	(___aomod@divisor+7)^0,w,c
  8056  001596  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
  8057  001598                     l4408:
  8058  001598  90D8               	bcf	status,0,c
  8059  00159A  3214               	rrcf	(___aomod@divisor+7)^0,f,c
  8060  00159C  3213               	rrcf	(___aomod@divisor+6)^0,f,c
  8061  00159E  3212               	rrcf	(___aomod@divisor+5)^0,f,c
  8062  0015A0  3211               	rrcf	(___aomod@divisor+4)^0,f,c
  8063  0015A2  3210               	rrcf	(___aomod@divisor+3)^0,f,c
  8064  0015A4  320F               	rrcf	(___aomod@divisor+2)^0,f,c
  8065  0015A6  320E               	rrcf	(___aomod@divisor+1)^0,f,c
  8066  0015A8  320D               	rrcf	___aomod@divisor^0,f,c
  8067  0015AA  2E15               	decfsz	___aomod@counter^0,f,c
  8068  0015AC  EFA5  F00A         	goto	l4404
  8069  0015B0                     l4412:
  8070  0015B0  5016               	movf	___aomod@sign^0,w,c
  8071  0015B2  B4D8               	btfsc	status,2,c
  8072  0015B4  EFDE  F00A         	goto	u4271
  8073  0015B8  EFE0  F00A         	goto	u4270
  8074  0015BC                     u4271:
  8075  0015BC  EFF0  F00A         	goto	l4416
  8076  0015C0                     u4270:
  8077  0015C0  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  8078  0015C2  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  8079  0015C4  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  8080  0015C6  1E09               	comf	(___aomod@dividend+4)^0,f,c
  8081  0015C8  1E08               	comf	(___aomod@dividend+3)^0,f,c
  8082  0015CA  1E07               	comf	(___aomod@dividend+2)^0,f,c
  8083  0015CC  1E06               	comf	(___aomod@dividend+1)^0,f,c
  8084  0015CE  6C05               	negf	___aomod@dividend^0,c
  8085  0015D0  0E00               	movlw	0
  8086  0015D2  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  8087  0015D4  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  8088  0015D6  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  8089  0015D8  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  8090  0015DA  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  8091  0015DC  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  8092  0015DE  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  8093  0015E0                     l4416:
  8094  0015E0  C005  F005         	movff	___aomod@dividend,?___aomod
  8095  0015E4  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  8096  0015E8  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  8097  0015EC  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  8098  0015F0  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  8099  0015F4  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  8100  0015F8  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  8101  0015FC  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  8102  001600  0012               	return		;funcret
  8103  001602                     __end_of___aomod:
  8104                           	opt callstack 0
  8105                           
  8106 ;; *************** function ___aodiv *****************
  8107 ;; Defined at:
  8108 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  8109 ;; Parameters:    Size  Location     Type
  8110 ;;  dividend        8    4[COMRAM] long long 
  8111 ;;  divisor         8   12[COMRAM] long long 
  8112 ;; Auto vars:     Size  Location     Type
  8113 ;;  quotient        8   22[COMRAM] long long 
  8114 ;;  sign            1   21[COMRAM] unsigned char 
  8115 ;;  counter         1   20[COMRAM] unsigned char 
  8116 ;; Return value:  Size  Location     Type
  8117 ;;                  8    4[COMRAM] long long 
  8118 ;; Registers used:
  8119 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8120 ;; Tracked objects:
  8121 ;;		On entry : 0/0
  8122 ;;		On exit  : 0/0
  8123 ;;		Unchanged: 0/0
  8124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8125 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8126 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8128 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8129 ;;Total ram usage:       26 bytes
  8130 ;; Hardware stack levels used:    1
  8131 ;; Hardware stack levels required when called:    4
  8132 ;; This function calls:
  8133 ;;		Nothing
  8134 ;; This function is called by:
  8135 ;;		_dtoa
  8136 ;; This function uses a non-reentrant model
  8137 ;;
  8138                           
  8139                           	psect	text53
  8140  0011A0                     __ptext53:
  8141                           	opt callstack 0
  8142  0011A0                     ___aodiv:
  8143                           	opt callstack 22
  8144  0011A0  0E00               	movlw	0
  8145  0011A2  6E16               	movwf	___aodiv@sign^0,c
  8146  0011A4  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
  8147  0011A6  EFD9  F008         	goto	u4150
  8148  0011AA  EFD7  F008         	goto	u4151
  8149  0011AE                     u4151:
  8150  0011AE  EFEB  F008         	goto	l4348
  8151  0011B2                     u4150:
  8152  0011B2  1E14               	comf	(___aodiv@divisor+7)^0,f,c
  8153  0011B4  1E13               	comf	(___aodiv@divisor+6)^0,f,c
  8154  0011B6  1E12               	comf	(___aodiv@divisor+5)^0,f,c
  8155  0011B8  1E11               	comf	(___aodiv@divisor+4)^0,f,c
  8156  0011BA  1E10               	comf	(___aodiv@divisor+3)^0,f,c
  8157  0011BC  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
  8158  0011BE  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
  8159  0011C0  6C0D               	negf	___aodiv@divisor^0,c
  8160  0011C2  0E00               	movlw	0
  8161  0011C4  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
  8162  0011C6  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
  8163  0011C8  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
  8164  0011CA  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
  8165  0011CC  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
  8166  0011CE  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
  8167  0011D0  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
  8168  0011D2  0E01               	movlw	1
  8169  0011D4  6E16               	movwf	___aodiv@sign^0,c
  8170  0011D6                     l4348:
  8171  0011D6  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
  8172  0011D8  EFF2  F008         	goto	u4160
  8173  0011DC  EFF0  F008         	goto	u4161
  8174  0011E0                     u4161:
  8175  0011E0  EF04  F009         	goto	l4354
  8176  0011E4                     u4160:
  8177  0011E4  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
  8178  0011E6  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
  8179  0011E8  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
  8180  0011EA  1E09               	comf	(___aodiv@dividend+4)^0,f,c
  8181  0011EC  1E08               	comf	(___aodiv@dividend+3)^0,f,c
  8182  0011EE  1E07               	comf	(___aodiv@dividend+2)^0,f,c
  8183  0011F0  1E06               	comf	(___aodiv@dividend+1)^0,f,c
  8184  0011F2  6C05               	negf	___aodiv@dividend^0,c
  8185  0011F4  0E00               	movlw	0
  8186  0011F6  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
  8187  0011F8  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
  8188  0011FA  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
  8189  0011FC  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
  8190  0011FE  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
  8191  001200  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
  8192  001202  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
  8193  001204  0E01               	movlw	1
  8194  001206  1A16               	xorwf	___aodiv@sign^0,f,c
  8195  001208                     l4354:
  8196  001208  EE20  F017         	lfsr	2,___aodiv@quotient
  8197  00120C  0E07               	movlw	7
  8198  00120E                     u4171:
  8199  00120E  6ADE               	clrf	postinc2,c
  8200  001210  06E8               	decf	wreg,f,c
  8201  001212  E2FD               	bc	u4171
  8202  001214  500D               	movf	___aodiv@divisor^0,w,c
  8203  001216  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
  8204  001218  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
  8205  00121A  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
  8206  00121C  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
  8207  00121E  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
  8208  001220  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
  8209  001222  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
  8210  001224  B4D8               	btfsc	status,2,c
  8211  001226  EF17  F009         	goto	u4181
  8212  00122A  EF19  F009         	goto	u4180
  8213  00122E                     u4181:
  8214  00122E  EF6B  F009         	goto	l4376
  8215  001232                     u4180:
  8216  001232  0E01               	movlw	1
  8217  001234  6E15               	movwf	___aodiv@counter^0,c
  8218  001236  EF27  F009         	goto	l4362
  8219  00123A                     l4360:
  8220  00123A  90D8               	bcf	status,0,c
  8221  00123C  360D               	rlcf	___aodiv@divisor^0,f,c
  8222  00123E  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
  8223  001240  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
  8224  001242  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
  8225  001244  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
  8226  001246  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
  8227  001248  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
  8228  00124A  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
  8229  00124C  2A15               	incf	___aodiv@counter^0,f,c
  8230  00124E                     l4362:
  8231  00124E  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
  8232  001250  EF2C  F009         	goto	u4191
  8233  001254  EF2E  F009         	goto	u4190
  8234  001258                     u4191:
  8235  001258  EF1D  F009         	goto	l4360
  8236  00125C                     u4190:
  8237  00125C                     l4364:
  8238  00125C  90D8               	bcf	status,0,c
  8239  00125E  3617               	rlcf	___aodiv@quotient^0,f,c
  8240  001260  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
  8241  001262  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
  8242  001264  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
  8243  001266  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
  8244  001268  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
  8245  00126A  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
  8246  00126C  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
  8247  00126E  500D               	movf	___aodiv@divisor^0,w,c
  8248  001270  5C05               	subwf	___aodiv@dividend^0,w,c
  8249  001272  500E               	movf	(___aodiv@divisor+1)^0,w,c
  8250  001274  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
  8251  001276  500F               	movf	(___aodiv@divisor+2)^0,w,c
  8252  001278  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
  8253  00127A  5010               	movf	(___aodiv@divisor+3)^0,w,c
  8254  00127C  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
  8255  00127E  5011               	movf	(___aodiv@divisor+4)^0,w,c
  8256  001280  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
  8257  001282  5012               	movf	(___aodiv@divisor+5)^0,w,c
  8258  001284  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
  8259  001286  5013               	movf	(___aodiv@divisor+6)^0,w,c
  8260  001288  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
  8261  00128A  5014               	movf	(___aodiv@divisor+7)^0,w,c
  8262  00128C  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
  8263  00128E  A0D8               	btfss	status,0,c
  8264  001290  EF4C  F009         	goto	u4201
  8265  001294  EF4E  F009         	goto	u4200
  8266  001298                     u4201:
  8267  001298  EF5F  F009         	goto	l4372
  8268  00129C                     u4200:
  8269  00129C  500D               	movf	___aodiv@divisor^0,w,c
  8270  00129E  5E05               	subwf	___aodiv@dividend^0,f,c
  8271  0012A0  500E               	movf	(___aodiv@divisor+1)^0,w,c
  8272  0012A2  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
  8273  0012A4  500F               	movf	(___aodiv@divisor+2)^0,w,c
  8274  0012A6  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
  8275  0012A8  5010               	movf	(___aodiv@divisor+3)^0,w,c
  8276  0012AA  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
  8277  0012AC  5011               	movf	(___aodiv@divisor+4)^0,w,c
  8278  0012AE  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
  8279  0012B0  5012               	movf	(___aodiv@divisor+5)^0,w,c
  8280  0012B2  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
  8281  0012B4  5013               	movf	(___aodiv@divisor+6)^0,w,c
  8282  0012B6  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
  8283  0012B8  5014               	movf	(___aodiv@divisor+7)^0,w,c
  8284  0012BA  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
  8285  0012BC  8017               	bsf	___aodiv@quotient^0,0,c
  8286  0012BE                     l4372:
  8287  0012BE  90D8               	bcf	status,0,c
  8288  0012C0  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
  8289  0012C2  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
  8290  0012C4  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
  8291  0012C6  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
  8292  0012C8  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
  8293  0012CA  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
  8294  0012CC  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
  8295  0012CE  320D               	rrcf	___aodiv@divisor^0,f,c
  8296  0012D0  2E15               	decfsz	___aodiv@counter^0,f,c
  8297  0012D2  EF2E  F009         	goto	l4364
  8298  0012D6                     l4376:
  8299  0012D6  5016               	movf	___aodiv@sign^0,w,c
  8300  0012D8  B4D8               	btfsc	status,2,c
  8301  0012DA  EF71  F009         	goto	u4211
  8302  0012DE  EF73  F009         	goto	u4210
  8303  0012E2                     u4211:
  8304  0012E2  EF83  F009         	goto	l4380
  8305  0012E6                     u4210:
  8306  0012E6  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
  8307  0012E8  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
  8308  0012EA  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
  8309  0012EC  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
  8310  0012EE  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
  8311  0012F0  1E19               	comf	(___aodiv@quotient+2)^0,f,c
  8312  0012F2  1E18               	comf	(___aodiv@quotient+1)^0,f,c
  8313  0012F4  6C17               	negf	___aodiv@quotient^0,c
  8314  0012F6  0E00               	movlw	0
  8315  0012F8  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
  8316  0012FA  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
  8317  0012FC  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
  8318  0012FE  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
  8319  001300  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
  8320  001302  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
  8321  001304  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
  8322  001306                     l4380:
  8323  001306  C017  F005         	movff	___aodiv@quotient,?___aodiv
  8324  00130A  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  8325  00130E  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  8326  001312  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  8327  001316  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  8328  00131A  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  8329  00131E  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  8330  001322  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  8331  001326  0012               	return		;funcret
  8332  001328                     __end_of___aodiv:
  8333                           	opt callstack 0
  8334                           
  8335 ;; *************** function _atoi *****************
  8336 ;; Defined at:
  8337 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  8338 ;; Parameters:    Size  Location     Type
  8339 ;;  s               2   11[COMRAM] PTR const unsigned char 
  8340 ;;		 -> STR_17(27), STR_16(21), STR_15(36), STR_14(8), 
  8341 ;;		 -> STR_13(28), STR_12(4), STR_11(23), STR_10(32), 
  8342 ;;		 -> STR_9(35), STR_8(55), STR_7(53), STR_6(29), 
  8343 ;;		 -> STR_3(43), STR_2(25), STR_1(57), 
  8344 ;; Auto vars:     Size  Location     Type
  8345 ;;  n               2   24[COMRAM] int 
  8346 ;;  neg             2   17[COMRAM] int 
  8347 ;; Return value:  Size  Location     Type
  8348 ;;                  2   11[COMRAM] int 
  8349 ;; Registers used:
  8350 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8351 ;; Tracked objects:
  8352 ;;		On entry : 0/0
  8353 ;;		On exit  : 0/0
  8354 ;;		Unchanged: 0/0
  8355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8356 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8357 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8358 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8359 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8360 ;;Total ram usage:       15 bytes
  8361 ;; Hardware stack levels used:    1
  8362 ;; Hardware stack levels required when called:    5
  8363 ;; This function calls:
  8364 ;;		___wmul
  8365 ;;		_isdigit
  8366 ;;		_isspace
  8367 ;; This function is called by:
  8368 ;;		_vfpfcnvrt
  8369 ;; This function uses a non-reentrant model
  8370 ;;
  8371                           
  8372                           	psect	text54
  8373  001006                     __ptext54:
  8374                           	opt callstack 0
  8375  001006                     _atoi:
  8376                           	opt callstack 22
  8377  001006  0E00               	movlw	0
  8378  001008  6E1A               	movwf	(atoi@n+1)^0,c
  8379  00100A  0E00               	movlw	0
  8380  00100C  6E19               	movwf	atoi@n^0,c
  8381  00100E  0E00               	movlw	0
  8382  001010  6E13               	movwf	(atoi@neg+1)^0,c
  8383  001012  0E00               	movlw	0
  8384  001014  6E12               	movwf	atoi@neg^0,c
  8385  001016  EF0F  F008         	goto	l4680
  8386  00101A                     l4678:
  8387  00101A  4A0C               	infsnz	atoi@s^0,f,c
  8388  00101C  2A0D               	incf	(atoi@s+1)^0,f,c
  8389  00101E                     l4680:
  8390  00101E  0E01               	movlw	1
  8391  001020  6E18               	movwf	_atoi$1795^0,c
  8392  001022  C00C  FFF6         	movff	atoi@s,tblptrl
  8393  001026  C00D  FFF7         	movff	atoi@s+1,tblptrh
  8394  00102A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8395  00102A  6AF8               	clrf	tblptru,c
  8396  00102C                     	endif
  8397  00102C                     	if	0	;tblptru may be non-zero
  8398  00102C                     	endif
  8399  00102C  0008               	tblrd		*
  8400  00102E  50F5               	movf	tablat,w,c
  8401  001030  0A20               	xorlw	32
  8402  001032  B4D8               	btfsc	status,2,c
  8403  001034  EF1E  F008         	goto	u4861
  8404  001038  EF20  F008         	goto	u4860
  8405  00103C                     u4861:
  8406  00103C  EF3E  F008         	goto	l4688
  8407  001040                     u4860:
  8408  001040  0EF7               	movlw	247
  8409  001042  6E0E               	movwf	??_atoi^0,c
  8410  001044  0EFF               	movlw	255
  8411  001046  6E0F               	movwf	(??_atoi+1)^0,c
  8412  001048  C00C  FFF6         	movff	atoi@s,tblptrl
  8413  00104C  C00D  FFF7         	movff	atoi@s+1,tblptrh
  8414  001050                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8415  001050  6AF8               	clrf	tblptru,c
  8416  001052                     	endif
  8417  001052                     	if	0	;tblptru may be non-zero
  8418  001052                     	endif
  8419  001052  0008               	tblrd		*
  8420  001054  50F5               	movf	tablat,w,c
  8421  001056  6E10               	movwf	(??_atoi+2)^0,c
  8422  001058  6A11               	clrf	(??_atoi+3)^0,c
  8423  00105A  500E               	movf	??_atoi^0,w,c
  8424  00105C  2610               	addwf	(??_atoi+2)^0,f,c
  8425  00105E  500F               	movf	(??_atoi+1)^0,w,c
  8426  001060  2211               	addwfc	(??_atoi+3)^0,f,c
  8427  001062  5011               	movf	(??_atoi+3)^0,w,c
  8428  001064  E109               	bnz	u4870
  8429  001066  0E05               	movlw	5
  8430  001068  5C10               	subwf	(??_atoi+2)^0,w,c
  8431  00106A  A0D8               	btfss	status,0,c
  8432  00106C  EF3A  F008         	goto	u4871
  8433  001070  EF3C  F008         	goto	u4870
  8434  001074                     u4871:
  8435  001074  EF3E  F008         	goto	l4688
  8436  001078                     u4870:
  8437  001078  0E00               	movlw	0
  8438  00107A  6E18               	movwf	_atoi$1795^0,c
  8439  00107C                     l4688:
  8440  00107C  C018  F014         	movff	_atoi$1795,_atoi$1794
  8441  001080  6A15               	clrf	(_atoi$1794+1)^0,c
  8442  001082  5014               	movf	_atoi$1794^0,w,c
  8443  001084  1015               	iorwf	(_atoi$1794+1)^0,w,c
  8444  001086  A4D8               	btfss	status,2,c
  8445  001088  EF48  F008         	goto	u4881
  8446  00108C  EF4A  F008         	goto	u4880
  8447  001090                     u4881:
  8448  001090  EF0D  F008         	goto	l4678
  8449  001094                     u4880:
  8450  001094  EF54  F008         	goto	l4698
  8451  001098                     l4694:
  8452  001098  0E00               	movlw	0
  8453  00109A  6E13               	movwf	(atoi@neg+1)^0,c
  8454  00109C  0E01               	movlw	1
  8455  00109E  6E12               	movwf	atoi@neg^0,c
  8456  0010A0                     l4696:
  8457  0010A0  4A0C               	infsnz	atoi@s^0,f,c
  8458  0010A2  2A0D               	incf	(atoi@s+1)^0,f,c
  8459  0010A4  EF8B  F008         	goto	l4704
  8460  0010A8                     l4698:
  8461  0010A8  C00C  FFF6         	movff	atoi@s,tblptrl
  8462  0010AC  C00D  FFF7         	movff	atoi@s+1,tblptrh
  8463  0010B0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8464  0010B0  6AF8               	clrf	tblptru,c
  8465  0010B2                     	endif
  8466  0010B2                     	if	0	;tblptru may be non-zero
  8467  0010B2                     	endif
  8468  0010B2  0008               	tblrd		*
  8469  0010B4  50F5               	movf	tablat,w,c
  8470  0010B6  6E0E               	movwf	??_atoi^0,c
  8471  0010B8  6A0F               	clrf	(??_atoi+1)^0,c
  8472                           
  8473                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8474                           ; Switch size 1, requested type "simple"
  8475                           ; Number of cases is 1, Range of values is 0 to 0
  8476                           ; switch strategies available:
  8477                           ; Name         Instructions Cycles
  8478                           ; simple_byte            4     3 (average)
  8479                           ;	Chosen strategy is simple_byte
  8480  0010BA  500F               	movf	(??_atoi+1)^0,w,c
  8481  0010BC  0A00               	xorlw	0	; case 0
  8482  0010BE  B4D8               	btfsc	status,2,c
  8483  0010C0  EF64  F008         	goto	l5324
  8484  0010C4  EF8B  F008         	goto	l4704
  8485  0010C8                     l5324:
  8486                           
  8487                           ; Switch size 1, requested type "simple"
  8488                           ; Number of cases is 2, Range of values is 43 to 45
  8489                           ; switch strategies available:
  8490                           ; Name         Instructions Cycles
  8491                           ; simple_byte            7     4 (average)
  8492                           ;	Chosen strategy is simple_byte
  8493  0010C8  500E               	movf	??_atoi^0,w,c
  8494  0010CA  0A2B               	xorlw	43	; case 43
  8495  0010CC  B4D8               	btfsc	status,2,c
  8496  0010CE  EF50  F008         	goto	l4696
  8497  0010D2  0A06               	xorlw	6	; case 45
  8498  0010D4  B4D8               	btfsc	status,2,c
  8499  0010D6  EF4C  F008         	goto	l4694
  8500  0010DA  EF8B  F008         	goto	l4704
  8501  0010DE                     l4700:
  8502  0010DE  C019  F005         	movff	atoi@n,___wmul@multiplier
  8503  0010E2  C01A  F006         	movff	atoi@n+1,___wmul@multiplier+1
  8504  0010E6  0E00               	movlw	0
  8505  0010E8  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  8506  0010EA  0E0A               	movlw	10
  8507  0010EC  6E07               	movwf	___wmul@multiplicand^0,c
  8508  0010EE  ECD3  F012         	call	___wmul	;wreg free
  8509  0010F2  C00C  FFF6         	movff	atoi@s,tblptrl
  8510  0010F6  C00D  FFF7         	movff	atoi@s+1,tblptrh
  8511  0010FA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8512  0010FA  6AF8               	clrf	tblptru,c
  8513  0010FC                     	endif
  8514  0010FC                     	if	0	;tblptru may be non-zero
  8515  0010FC                     	endif
  8516  0010FC  0008               	tblrd		*
  8517  0010FE  50F5               	movf	tablat,w,c
  8518  001100  5E05               	subwf	?___wmul^0,f,c
  8519  001102  0E00               	movlw	0
  8520  001104  5A06               	subwfb	(?___wmul+1)^0,f,c
  8521  001106  0E30               	movlw	48
  8522  001108  2405               	addwf	?___wmul^0,w,c
  8523  00110A  6E19               	movwf	atoi@n^0,c
  8524  00110C  0E00               	movlw	0
  8525  00110E  2006               	addwfc	(?___wmul+1)^0,w,c
  8526  001110  6E1A               	movwf	(atoi@n+1)^0,c
  8527  001112  EF50  F008         	goto	l4696
  8528  001116                     l4704:
  8529  001116  0ED0               	movlw	208
  8530  001118  6E0E               	movwf	??_atoi^0,c
  8531  00111A  0EFF               	movlw	255
  8532  00111C  6E0F               	movwf	(??_atoi+1)^0,c
  8533  00111E  C00C  FFF6         	movff	atoi@s,tblptrl
  8534  001122  C00D  FFF7         	movff	atoi@s+1,tblptrh
  8535  001126                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8536  001126  6AF8               	clrf	tblptru,c
  8537  001128                     	endif
  8538  001128                     	if	0	;tblptru may be non-zero
  8539  001128                     	endif
  8540  001128  0008               	tblrd		*
  8541  00112A  50F5               	movf	tablat,w,c
  8542  00112C  6E10               	movwf	(??_atoi+2)^0,c
  8543  00112E  6A11               	clrf	(??_atoi+3)^0,c
  8544  001130  500E               	movf	??_atoi^0,w,c
  8545  001132  2610               	addwf	(??_atoi+2)^0,f,c
  8546  001134  500F               	movf	(??_atoi+1)^0,w,c
  8547  001136  2211               	addwfc	(??_atoi+3)^0,f,c
  8548  001138  5011               	movf	(??_atoi+3)^0,w,c
  8549  00113A  E10A               	bnz	u4890
  8550  00113C  0E0A               	movlw	10
  8551  00113E  5C10               	subwf	(??_atoi+2)^0,w,c
  8552  001140  A0D8               	btfss	status,0,c
  8553  001142  EFA5  F008         	goto	u4891
  8554  001146  EFA8  F008         	goto	u4890
  8555  00114A                     u4891:
  8556  00114A  0E01               	movlw	1
  8557  00114C  EFA9  F008         	goto	u4900
  8558  001150                     u4890:
  8559  001150  0E00               	movlw	0
  8560  001152                     u4900:
  8561  001152  6E16               	movwf	_atoi$1796^0,c
  8562  001154  6A17               	clrf	(_atoi$1796+1)^0,c
  8563  001156  5016               	movf	_atoi$1796^0,w,c
  8564  001158  1017               	iorwf	(_atoi$1796+1)^0,w,c
  8565  00115A  A4D8               	btfss	status,2,c
  8566  00115C  EFB2  F008         	goto	u4911
  8567  001160  EFB4  F008         	goto	u4910
  8568  001164                     u4911:
  8569  001164  EF6F  F008         	goto	l4700
  8570  001168                     u4910:
  8571  001168  5012               	movf	atoi@neg^0,w,c
  8572  00116A  1013               	iorwf	(atoi@neg+1)^0,w,c
  8573  00116C  A4D8               	btfss	status,2,c
  8574  00116E  EFBB  F008         	goto	u4921
  8575  001172  EFBD  F008         	goto	u4920
  8576  001176                     u4921:
  8577  001176  EFCB  F008         	goto	l1571
  8578  00117A                     u4920:
  8579  00117A  C019  F00E         	movff	atoi@n,??_atoi
  8580  00117E  C01A  F00F         	movff	atoi@n+1,??_atoi+1
  8581  001182  1E0E               	comf	??_atoi^0,f,c
  8582  001184  1E0F               	comf	(??_atoi+1)^0,f,c
  8583  001186  4A0E               	infsnz	??_atoi^0,f,c
  8584  001188  2A0F               	incf	(??_atoi+1)^0,f,c
  8585  00118A  C00E  F00C         	movff	??_atoi,?_atoi
  8586  00118E  C00F  F00D         	movff	??_atoi+1,?_atoi+1
  8587  001192  EFCF  F008         	goto	l1574
  8588  001196                     l1571:
  8589  001196  C019  F00C         	movff	atoi@n,?_atoi
  8590  00119A  C01A  F00D         	movff	atoi@n+1,?_atoi+1
  8591  00119E                     l1574:
  8592  00119E  0012               	return		;funcret
  8593  0011A0                     __end_of_atoi:
  8594                           	opt callstack 0
  8595                           
  8596 ;; *************** function _isspace *****************
  8597 ;; Defined at:
  8598 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  8599 ;; Parameters:    Size  Location     Type
  8600 ;;  c               2    4[COMRAM] int 
  8601 ;; Auto vars:     Size  Location     Type
  8602 ;;		None
  8603 ;; Return value:  Size  Location     Type
  8604 ;;                  2    4[COMRAM] int 
  8605 ;; Registers used:
  8606 ;;		wreg, status,2, status,0
  8607 ;; Tracked objects:
  8608 ;;		On entry : 0/0
  8609 ;;		On exit  : 0/0
  8610 ;;		Unchanged: 0/0
  8611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8612 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8613 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8614 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8615 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8616 ;;Total ram usage:        7 bytes
  8617 ;; Hardware stack levels used:    1
  8618 ;; Hardware stack levels required when called:    4
  8619 ;; This function calls:
  8620 ;;		Nothing
  8621 ;; This function is called by:
  8622 ;;		_atoi
  8623 ;; This function uses a non-reentrant model
  8624 ;;
  8625                           
  8626                           	psect	text55
  8627  0021FA                     __ptext55:
  8628                           	opt callstack 0
  8629  0021FA                     _isspace:
  8630                           	opt callstack 22
  8631  0021FA  0E01               	movlw	1
  8632  0021FC  6E0B               	movwf	_isspace$1821^0,c
  8633  0021FE  0E20               	movlw	32
  8634  002200  1805               	xorwf	isspace@c^0,w,c
  8635  002202  1006               	iorwf	(isspace@c+1)^0,w,c
  8636  002204  B4D8               	btfsc	status,2,c
  8637  002206  EF07  F011         	goto	u4351
  8638  00220A  EF09  F011         	goto	u4350
  8639  00220E                     u4351:
  8640  00220E  EF22  F011         	goto	l4466
  8641  002212                     u4350:
  8642  002212  0EF7               	movlw	247
  8643  002214  6E07               	movwf	??_isspace^0,c
  8644  002216  0EFF               	movlw	255
  8645  002218  6E08               	movwf	(??_isspace+1)^0,c
  8646  00221A  C005  F009         	movff	isspace@c,??_isspace+2
  8647  00221E  C006  F00A         	movff	isspace@c+1,??_isspace+3
  8648  002222  5007               	movf	??_isspace^0,w,c
  8649  002224  2609               	addwf	(??_isspace+2)^0,f,c
  8650  002226  5008               	movf	(??_isspace+1)^0,w,c
  8651  002228  220A               	addwfc	(??_isspace+3)^0,f,c
  8652  00222A  500A               	movf	(??_isspace+3)^0,w,c
  8653  00222C  E109               	bnz	u4360
  8654  00222E  0E05               	movlw	5
  8655  002230  5C09               	subwf	(??_isspace+2)^0,w,c
  8656  002232  A0D8               	btfss	status,0,c
  8657  002234  EF1E  F011         	goto	u4361
  8658  002238  EF20  F011         	goto	u4360
  8659  00223C                     u4361:
  8660  00223C  EF22  F011         	goto	l4466
  8661  002240                     u4360:
  8662  002240  0E00               	movlw	0
  8663  002242  6E0B               	movwf	_isspace$1821^0,c
  8664  002244                     l4466:
  8665  002244  C00B  F005         	movff	_isspace$1821,?_isspace
  8666  002248  6A06               	clrf	(?_isspace+1)^0,c
  8667  00224A  0012               	return		;funcret
  8668  00224C                     __end_of_isspace:
  8669                           	opt callstack 0
  8670                           
  8671 ;; *************** function _isdigit *****************
  8672 ;; Defined at:
  8673 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  8674 ;; Parameters:    Size  Location     Type
  8675 ;;  c               2    4[COMRAM] int 
  8676 ;; Auto vars:     Size  Location     Type
  8677 ;;		None
  8678 ;; Return value:  Size  Location     Type
  8679 ;;                  2    4[COMRAM] int 
  8680 ;; Registers used:
  8681 ;;		wreg, status,2, status,0
  8682 ;; Tracked objects:
  8683 ;;		On entry : 0/0
  8684 ;;		On exit  : 0/0
  8685 ;;		Unchanged: 0/0
  8686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8687 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8689 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8690 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8691 ;;Total ram usage:        6 bytes
  8692 ;; Hardware stack levels used:    1
  8693 ;; Hardware stack levels required when called:    4
  8694 ;; This function calls:
  8695 ;;		Nothing
  8696 ;; This function is called by:
  8697 ;;		_vfpfcnvrt
  8698 ;;		_atoi
  8699 ;; This function uses a non-reentrant model
  8700 ;;
  8701                           
  8702                           	psect	text56
  8703  0024EE                     __ptext56:
  8704                           	opt callstack 0
  8705  0024EE                     _isdigit:
  8706                           	opt callstack 23
  8707  0024EE  0ED0               	movlw	208
  8708  0024F0  6E07               	movwf	??_isdigit^0,c
  8709  0024F2  0EFF               	movlw	255
  8710  0024F4  6E08               	movwf	(??_isdigit+1)^0,c
  8711  0024F6  C005  F009         	movff	isdigit@c,??_isdigit+2
  8712  0024FA  C006  F00A         	movff	isdigit@c+1,??_isdigit+3
  8713  0024FE  5007               	movf	??_isdigit^0,w,c
  8714  002500  2609               	addwf	(??_isdigit+2)^0,f,c
  8715  002502  5008               	movf	(??_isdigit+1)^0,w,c
  8716  002504  220A               	addwfc	(??_isdigit+3)^0,f,c
  8717  002506  500A               	movf	(??_isdigit+3)^0,w,c
  8718  002508  E10A               	bnz	u4130
  8719  00250A  0E0A               	movlw	10
  8720  00250C  5C09               	subwf	(??_isdigit+2)^0,w,c
  8721  00250E  A0D8               	btfss	status,0,c
  8722  002510  EF8C  F012         	goto	u4131
  8723  002514  EF8F  F012         	goto	u4130
  8724  002518                     u4131:
  8725  002518  0E01               	movlw	1
  8726  00251A  EF90  F012         	goto	u4140
  8727  00251E                     u4130:
  8728  00251E  0E00               	movlw	0
  8729  002520                     u4140:
  8730  002520  6E05               	movwf	?_isdigit^0,c
  8731  002522  6A06               	clrf	(?_isdigit+1)^0,c
  8732  002524  0012               	return		;funcret
  8733  002526                     __end_of_isdigit:
  8734                           	opt callstack 0
  8735                           
  8736 ;; *************** function ___wmul *****************
  8737 ;; Defined at:
  8738 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  8739 ;; Parameters:    Size  Location     Type
  8740 ;;  multiplier      2    4[COMRAM] unsigned int 
  8741 ;;  multiplicand    2    6[COMRAM] unsigned int 
  8742 ;; Auto vars:     Size  Location     Type
  8743 ;;  product         2    8[COMRAM] unsigned int 
  8744 ;; Return value:  Size  Location     Type
  8745 ;;                  2    4[COMRAM] unsigned int 
  8746 ;; Registers used:
  8747 ;;		wreg, status,2, status,0, prodl, prodh
  8748 ;; Tracked objects:
  8749 ;;		On entry : 0/0
  8750 ;;		On exit  : 0/0
  8751 ;;		Unchanged: 0/0
  8752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8753 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8754 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8756 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8757 ;;Total ram usage:        6 bytes
  8758 ;; Hardware stack levels used:    1
  8759 ;; Hardware stack levels required when called:    4
  8760 ;; This function calls:
  8761 ;;		Nothing
  8762 ;; This function is called by:
  8763 ;;		_atoi
  8764 ;; This function uses a non-reentrant model
  8765 ;;
  8766                           
  8767                           	psect	text57
  8768  0025A6                     __ptext57:
  8769                           	opt callstack 0
  8770  0025A6                     ___wmul:
  8771                           	opt callstack 22
  8772  0025A6  5005               	movf	___wmul@multiplier^0,w,c
  8773  0025A8  0207               	mulwf	___wmul@multiplicand^0,c
  8774  0025AA  CFF3 F009          	movff	prodl,___wmul@product
  8775  0025AE  CFF4 F00A          	movff	prodh,___wmul@product+1
  8776  0025B2  5005               	movf	___wmul@multiplier^0,w,c
  8777  0025B4  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  8778  0025B6  50F3               	movf	243,w,c
  8779  0025B8  260A               	addwf	(___wmul@product+1)^0,f,c
  8780  0025BA  5006               	movf	(___wmul@multiplier+1)^0,w,c
  8781  0025BC  0207               	mulwf	___wmul@multiplicand^0,c
  8782  0025BE  50F3               	movf	243,w,c
  8783  0025C0  260A               	addwf	(___wmul@product+1)^0,f,c
  8784  0025C2  C009  F005         	movff	___wmul@product,?___wmul
  8785  0025C6  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  8786  0025CA  0012               	return		;funcret
  8787  0025CC                     __end_of___wmul:
  8788                           	opt callstack 0
  8789                           
  8790 ;; *************** function _ClearModbusData *****************
  8791 ;; Defined at:
  8792 ;;		line 27 in file "Modbus.c"
  8793 ;; Parameters:    Size  Location     Type
  8794 ;;		None
  8795 ;; Auto vars:     Size  Location     Type
  8796 ;;  i               2    4[COMRAM] int 
  8797 ;; Return value:  Size  Location     Type
  8798 ;;                  1    wreg      void 
  8799 ;; Registers used:
  8800 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8801 ;; Tracked objects:
  8802 ;;		On entry : 0/0
  8803 ;;		On exit  : 0/0
  8804 ;;		Unchanged: 0/0
  8805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8807 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8809 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8810 ;;Total ram usage:        2 bytes
  8811 ;; Hardware stack levels used:    1
  8812 ;; Hardware stack levels required when called:    4
  8813 ;; This function calls:
  8814 ;;		Nothing
  8815 ;; This function is called by:
  8816 ;;		_main
  8817 ;; This function uses a non-reentrant model
  8818 ;;
  8819                           
  8820                           	psect	text58
  8821  00229C                     __ptext58:
  8822                           	opt callstack 0
  8823  00229C                     _ClearModbusData:
  8824                           	opt callstack 26
  8825  00229C                     
  8826                           ;Modbus.c: 28:     int i = 0;
  8827  00229C  0E00               	movlw	0
  8828  00229E  6E06               	movwf	(ClearModbusData@i+1)^0,c
  8829  0022A0  0E00               	movlw	0
  8830  0022A2  6E05               	movwf	ClearModbusData@i^0,c
  8831                           
  8832                           ;Modbus.c: 29:     for(i=0; i<99; i++ ){
  8833  0022A4  0E00               	movlw	0
  8834  0022A6  6E06               	movwf	(ClearModbusData@i+1)^0,c
  8835  0022A8  0E00               	movlw	0
  8836  0022AA  6E05               	movwf	ClearModbusData@i^0,c
  8837  0022AC                     l5176:
  8838                           
  8839                           ;Modbus.c: 30:         ModbusData[i] = 0xFF;
  8840  0022AC  0E00               	movlw	low _ModbusData
  8841  0022AE  2405               	addwf	ClearModbusData@i^0,w,c
  8842  0022B0  6ED9               	movwf	fsr2l,c
  8843  0022B2  0E01               	movlw	high _ModbusData
  8844  0022B4  2006               	addwfc	(ClearModbusData@i+1)^0,w,c
  8845  0022B6  6EDA               	movwf	fsr2h,c
  8846  0022B8  0EFF               	movlw	255
  8847  0022BA  6EDF               	movwf	indf2,c
  8848  0022BC                     
  8849                           ;Modbus.c: 31:     }
  8850  0022BC  4A05               	infsnz	ClearModbusData@i^0,f,c
  8851  0022BE  2A06               	incf	(ClearModbusData@i+1)^0,f,c
  8852  0022C0  BE06               	btfsc	(ClearModbusData@i+1)^0,7,c
  8853  0022C2  EF6C  F011         	goto	u5401
  8854  0022C6  5006               	movf	(ClearModbusData@i+1)^0,w,c
  8855  0022C8  E109               	bnz	u5400
  8856  0022CA  0E63               	movlw	99
  8857  0022CC  5C05               	subwf	ClearModbusData@i^0,w,c
  8858  0022CE  A0D8               	btfss	status,0,c
  8859  0022D0  EF6C  F011         	goto	u5401
  8860  0022D4  EF6E  F011         	goto	u5400
  8861  0022D8                     u5401:
  8862  0022D8  EF56  F011         	goto	l5176
  8863  0022DC                     u5400:
  8864  0022DC                     
  8865                           ;Modbus.c: 33:     ModDataCnt = 0;
  8866  0022DC  0E00               	movlw	0
  8867  0022DE  0100               	movlb	0	; () banked
  8868  0022E0  6F91               	movwf	(_ModDataCnt+1)& (0+255),b
  8869  0022E2  0E00               	movlw	0
  8870  0022E4  6F90               	movwf	_ModDataCnt& (0+255),b
  8871  0022E6                     
  8872                           ; BSR set to: 0
  8873  0022E6  0012               	return		;funcret
  8874  0022E8                     __end_of_ClearModbusData:
  8875                           	opt callstack 0
  8876                           
  8877 ;; *************** function _INTERRUPT_InterruptManager *****************
  8878 ;; Defined at:
  8879 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  8880 ;; Parameters:    Size  Location     Type
  8881 ;;		None
  8882 ;; Auto vars:     Size  Location     Type
  8883 ;;		None
  8884 ;; Return value:  Size  Location     Type
  8885 ;;                  1    wreg      void 
  8886 ;; Registers used:
  8887 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  8888 ;; Tracked objects:
  8889 ;;		On entry : 0/0
  8890 ;;		On exit  : 0/0
  8891 ;;		Unchanged: 0/0
  8892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8895 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8896 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8897 ;;Total ram usage:        4 bytes
  8898 ;; Hardware stack levels used:    1
  8899 ;; Hardware stack levels required when called:    3
  8900 ;; This function calls:
  8901 ;;		Absolute function
  8902 ;;		_EUSART1_Receive_ISR
  8903 ;;		_EUSART1_Transmit_ISR
  8904 ;;		_EUSART2_Receive_ISR
  8905 ;;		_EUSART2_Transmit_ISR
  8906 ;; This function is called by:
  8907 ;;		Interrupt level 2
  8908 ;; This function uses a non-reentrant model
  8909 ;;
  8910                           
  8911                           	psect	intcode
  8912  000008                     __pintcode:
  8913                           	opt callstack 0
  8914  000008                     _INTERRUPT_InterruptManager:
  8915                           	opt callstack 16
  8916                           
  8917                           ; BSR set to: 0
  8918                           ;incstack = 0
  8919  000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8920  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  8921  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  8922  000012  CFD9 F003          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  8923  000016  CFDA F004          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  8924  00001A                     
  8925                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  8926  00001A  ACF2               	btfss	242,6,c	;volatile
  8927  00001C  EF12  F000         	goto	i2u371_41
  8928  000020  EF14  F000         	goto	i2u371_40
  8929  000024                     i2u371_41:
  8930  000024  EF89  F000         	goto	i2l159
  8931  000028                     i2u371_40:
  8932  000028                     
  8933                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
  8934  000028  010E               	movlb	14	; () banked
  8935  00002A  ADC5               	btfss	197,6,b	;volatile
  8936  00002C  EF1A  F000         	goto	i2u372_41
  8937  000030  EF1C  F000         	goto	i2u372_40
  8938  000034                     i2u372_41:
  8939  000034  EF32  F000         	goto	i2l150
  8940  000038                     i2u372_40:
  8941  000038                     
  8942                           ; BSR set to: 14
  8943  000038  ADCD               	btfss	205,6,b	;volatile
  8944  00003A  EF21  F000         	goto	i2u373_41
  8945  00003E  EF23  F000         	goto	i2u373_40
  8946  000042                     i2u373_41:
  8947  000042  EF32  F000         	goto	i2l150
  8948  000046                     i2u373_40:
  8949  000046                     
  8950                           ; BSR set to: 14
  8951                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART2_TxDefaultInterruptHandler();
  8952  000046  D802               	call	i2u374_48
  8953  000048  EF30  F000         	goto	i2u374_49
  8954  00004C                     i2u374_48:
  8955  00004C  0005               	push	
  8956  00004E  6EFA               	movwf	pclath,c
  8957  000050  0100               	movlb	0	; () banked
  8958  000052  51DF               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
  8959  000054  6EFD               	movwf	tosl,c
  8960  000056  51E0               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
  8961  000058  6EFE               	movwf	tosh,c
  8962  00005A  6AFF               	clrf	tosu,c
  8963  00005C  50FA               	movf	pclath,w,c
  8964  00005E  0012               	return		;indir
  8965  000060                     i2u374_49:
  8966                           
  8967                           ;mcc_generated_files/interrupt_manager.c: 66:         }
  8968  000060  EF89  F000         	goto	i2l159
  8969  000064                     i2l150:
  8970                           
  8971                           ; BSR set to: 14
  8972  000064  AFC5               	btfss	197,7,b	;volatile
  8973  000066  EF37  F000         	goto	i2u375_41
  8974  00006A  EF39  F000         	goto	i2u375_40
  8975  00006E                     i2u375_41:
  8976  00006E  EF4F  F000         	goto	i2l152
  8977  000072                     i2u375_40:
  8978  000072                     
  8979                           ; BSR set to: 14
  8980  000072  AFCD               	btfss	205,7,b	;volatile
  8981  000074  EF3E  F000         	goto	i2u376_41
  8982  000078  EF40  F000         	goto	i2u376_40
  8983  00007C                     i2u376_41:
  8984  00007C  EF4F  F000         	goto	i2l152
  8985  000080                     i2u376_40:
  8986  000080                     
  8987                           ; BSR set to: 14
  8988                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART2_RxDefaultInterruptHandler();
  8989  000080  D802               	call	i2u377_48
  8990  000082  EF4D  F000         	goto	i2u377_49
  8991  000086                     i2u377_48:
  8992  000086  0005               	push	
  8993  000088  6EFA               	movwf	pclath,c
  8994  00008A  0100               	movlb	0	; () banked
  8995  00008C  51DD               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
  8996  00008E  6EFD               	movwf	tosl,c
  8997  000090  51DE               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
  8998  000092  6EFE               	movwf	tosh,c
  8999  000094  6AFF               	clrf	tosu,c
  9000  000096  50FA               	movf	pclath,w,c
  9001  000098  0012               	return		;indir
  9002  00009A                     i2u377_49:
  9003                           
  9004                           ;mcc_generated_files/interrupt_manager.c: 70:         }
  9005  00009A  EF89  F000         	goto	i2l159
  9006  00009E                     i2l152:
  9007                           
  9008                           ; BSR set to: 14
  9009  00009E  A9C5               	btfss	197,4,b	;volatile
  9010  0000A0  EF54  F000         	goto	i2u378_41
  9011  0000A4  EF56  F000         	goto	i2u378_40
  9012  0000A8                     i2u378_41:
  9013  0000A8  EF6C  F000         	goto	i2l154
  9014  0000AC                     i2u378_40:
  9015  0000AC                     
  9016                           ; BSR set to: 14
  9017  0000AC  A9CD               	btfss	205,4,b	;volatile
  9018  0000AE  EF5B  F000         	goto	i2u379_41
  9019  0000B2  EF5D  F000         	goto	i2u379_40
  9020  0000B6                     i2u379_41:
  9021  0000B6  EF6C  F000         	goto	i2l154
  9022  0000BA                     i2u379_40:
  9023  0000BA                     
  9024                           ; BSR set to: 14
  9025                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART1_TxDefaultInterruptHandler();
  9026  0000BA  D802               	call	i2u380_48
  9027  0000BC  EF6A  F000         	goto	i2u380_49
  9028  0000C0                     i2u380_48:
  9029  0000C0  0005               	push	
  9030  0000C2  6EFA               	movwf	pclath,c
  9031  0000C4  0100               	movlb	0	; () banked
  9032  0000C6  51DB               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
  9033  0000C8  6EFD               	movwf	tosl,c
  9034  0000CA  51DC               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
  9035  0000CC  6EFE               	movwf	tosh,c
  9036  0000CE  6AFF               	clrf	tosu,c
  9037  0000D0  50FA               	movf	pclath,w,c
  9038  0000D2  0012               	return		;indir
  9039  0000D4                     i2u380_49:
  9040                           
  9041                           ;mcc_generated_files/interrupt_manager.c: 74:         }
  9042  0000D4  EF89  F000         	goto	i2l159
  9043  0000D8                     i2l154:
  9044                           
  9045                           ; BSR set to: 14
  9046  0000D8  ABC5               	btfss	197,5,b	;volatile
  9047  0000DA  EF71  F000         	goto	i2u381_41
  9048  0000DE  EF73  F000         	goto	i2u381_40
  9049  0000E2                     i2u381_41:
  9050  0000E2  EF89  F000         	goto	i2l153
  9051  0000E6                     i2u381_40:
  9052  0000E6                     
  9053                           ; BSR set to: 14
  9054  0000E6  ABCD               	btfss	205,5,b	;volatile
  9055  0000E8  EF78  F000         	goto	i2u382_41
  9056  0000EC  EF7A  F000         	goto	i2u382_40
  9057  0000F0                     i2u382_41:
  9058  0000F0  EF89  F000         	goto	i2l153
  9059  0000F4                     i2u382_40:
  9060  0000F4                     
  9061                           ; BSR set to: 14
  9062                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             EUSART1_RxDefaultInterruptHandler();
  9063  0000F4  D802               	call	i2u383_48
  9064  0000F6  EF87  F000         	goto	i2u383_49
  9065  0000FA                     i2u383_48:
  9066  0000FA  0005               	push	
  9067  0000FC  6EFA               	movwf	pclath,c
  9068  0000FE  0100               	movlb	0	; () banked
  9069  000100  51D9               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
  9070  000102  6EFD               	movwf	tosl,c
  9071  000104  51DA               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
  9072  000106  6EFE               	movwf	tosh,c
  9073  000108  6AFF               	clrf	tosu,c
  9074  00010A  50FA               	movf	pclath,w,c
  9075  00010C  0012               	return		;indir
  9076  00010E                     i2u383_49:
  9077                           
  9078                           ;mcc_generated_files/interrupt_manager.c: 78:         }
  9079  00010E  EF89  F000         	goto	i2l159
  9080  000112                     i2l153:
  9081  000112                     i2l159:
  9082  000112  C004  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  9083  000116  C003  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  9084  00011A  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  9085  00011E  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  9086  000122  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9087  000124  0011               	retfie		f
  9088  000126                     __end_of_INTERRUPT_InterruptManager:
  9089                           	opt callstack 0
  9090                           
  9091 ;; *************** function _EUSART2_Transmit_ISR *****************
  9092 ;; Defined at:
  9093 ;;		line 206 in file "mcc_generated_files/eusart2.c"
  9094 ;; Parameters:    Size  Location     Type
  9095 ;;		None
  9096 ;; Auto vars:     Size  Location     Type
  9097 ;;		None
  9098 ;; Return value:  Size  Location     Type
  9099 ;;                  1    wreg      void 
  9100 ;; Registers used:
  9101 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9102 ;; Tracked objects:
  9103 ;;		On entry : 0/0
  9104 ;;		On exit  : 0/0
  9105 ;;		Unchanged: 0/0
  9106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9111 ;;Total ram usage:        0 bytes
  9112 ;; Hardware stack levels used:    1
  9113 ;; This function calls:
  9114 ;;		Nothing
  9115 ;; This function is called by:
  9116 ;;		_EUSART2_Initialize
  9117 ;;		_INTERRUPT_InterruptManager
  9118 ;; This function uses a non-reentrant model
  9119 ;;
  9120                           
  9121                           	psect	text60
  9122  002332                     __ptext60:
  9123                           	opt callstack 0
  9124  002332                     _EUSART2_Transmit_ISR:
  9125                           	opt callstack 18
  9126  002332                     
  9127                           ;mcc_generated_files/eusart2.c: 210:     if(sizeof(eusart2TxBuffer) > eusart2TxBufferRem
      +                          aining)
  9128  002332  0E08               	movlw	8
  9129  002334  0100               	movlb	0	; () banked
  9130  002336  61E2               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
  9131  002338  EFA0  F011         	goto	i2u342_41
  9132  00233C  EFA2  F011         	goto	i2u342_40
  9133  002340                     i2u342_41:
  9134  002340  EFBA  F011         	goto	i2l333
  9135  002344                     i2u342_40:
  9136  002344                     
  9137                           ; BSR set to: 0
  9138                           ;mcc_generated_files/eusart2.c: 211:     {;mcc_generated_files/eusart2.c: 212:         T
      +                          X2REG = eusart2TxBuffer[eusart2TxTail++];
  9139  002344  0E80               	movlw	low _eusart2TxBuffer
  9140  002346  259D               	addwf	_eusart2TxTail& (0+255),w,b	;volatile
  9141  002348  6ED9               	movwf	fsr2l,c
  9142  00234A  6ADA               	clrf	fsr2h,c
  9143  00234C  0E00               	movlw	high _eusart2TxBuffer
  9144  00234E  22DA               	addwfc	fsr2h,f,c
  9145  002350  50DF               	movf	indf2,w,c
  9146  002352  010E               	movlb	14	; () banked
  9147  002354  6F9A               	movwf	154,b	;volatile
  9148  002356                     
  9149                           ; BSR set to: 14
  9150  002356  0100               	movlb	0	; () banked
  9151  002358  2B9D               	incf	_eusart2TxTail& (0+255),f,b	;volatile
  9152  00235A                     
  9153                           ; BSR set to: 0
  9154                           ;mcc_generated_files/eusart2.c: 213:         if(sizeof(eusart2TxBuffer) <= eusart2TxTail
      +                          )
  9155  00235A  0E07               	movlw	7
  9156  00235C  659D               	cpfsgt	_eusart2TxTail& (0+255),b	;volatile
  9157  00235E  EFB3  F011         	goto	i2u343_41
  9158  002362  EFB5  F011         	goto	i2u343_40
  9159  002366                     i2u343_41:
  9160  002366  EFB7  F011         	goto	i2l3924
  9161  00236A                     i2u343_40:
  9162  00236A                     
  9163                           ; BSR set to: 0
  9164                           ;mcc_generated_files/eusart2.c: 214:         {;mcc_generated_files/eusart2.c: 215:      
      +                                 eusart2TxTail = 0;
  9165  00236A  0E00               	movlw	0
  9166  00236C  6F9D               	movwf	_eusart2TxTail& (0+255),b	;volatile
  9167  00236E                     i2l3924:
  9168                           
  9169                           ; BSR set to: 0
  9170                           ;mcc_generated_files/eusart2.c: 217:         eusart2TxBufferRemaining++;
  9171  00236E  2BE2               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
  9172                           
  9173                           ;mcc_generated_files/eusart2.c: 218:     }
  9174  002370  EFBC  F011         	goto	i2l336
  9175  002374                     i2l333:
  9176                           
  9177                           ; BSR set to: 0
  9178                           ;mcc_generated_files/eusart2.c: 220:     {;mcc_generated_files/eusart2.c: 221:         P
      +                          IE3bits.TX2IE = 0;
  9179  002374  010E               	movlb	14	; () banked
  9180  002376  9DC5               	bcf	197,6,b	;volatile
  9181  002378                     i2l336:
  9182  002378  0012               	return		;funcret
  9183  00237A                     __end_of_EUSART2_Transmit_ISR:
  9184                           	opt callstack 0
  9185                           
  9186 ;; *************** function _EUSART2_Receive_ISR *****************
  9187 ;; Defined at:
  9188 ;;		line 225 in file "mcc_generated_files/eusart2.c"
  9189 ;; Parameters:    Size  Location     Type
  9190 ;;		None
  9191 ;; Auto vars:     Size  Location     Type
  9192 ;;		None
  9193 ;; Return value:  Size  Location     Type
  9194 ;;                  1    wreg      void 
  9195 ;; Registers used:
  9196 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  9197 ;; Tracked objects:
  9198 ;;		On entry : 0/0
  9199 ;;		On exit  : 0/0
  9200 ;;		Unchanged: 0/0
  9201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9206 ;;Total ram usage:        0 bytes
  9207 ;; Hardware stack levels used:    1
  9208 ;; Hardware stack levels required when called:    2
  9209 ;; This function calls:
  9210 ;;		Absolute function
  9211 ;;		_EUSART2_DefaultErrorHandler
  9212 ;;		_EUSART2_DefaultFramingErrorHandler
  9213 ;;		_EUSART2_DefaultOverrunErrorHandler
  9214 ;;		_EUSART2_RxDataHandler
  9215 ;; This function is called by:
  9216 ;;		_EUSART2_Initialize
  9217 ;;		_INTERRUPT_InterruptManager
  9218 ;; This function uses a non-reentrant model
  9219 ;;
  9220                           
  9221                           	psect	text61
  9222  0019AE                     __ptext61:
  9223                           	opt callstack 0
  9224  0019AE                     _EUSART2_Receive_ISR:
  9225                           	opt callstack 16
  9226  0019AE                     
  9227                           ;mcc_generated_files/eusart2.c: 228:     eusart2RxStatusBuffer[eusart2RxHead].status = 0
      +                          ;
  9228  0019AE  0E70               	movlw	low _eusart2RxStatusBuffer
  9229  0019B0  2459               	addwf	_eusart2RxHead^0,w,c	;volatile
  9230  0019B2  6ED9               	movwf	fsr2l,c
  9231  0019B4  6ADA               	clrf	fsr2h,c
  9232  0019B6  0E00               	movlw	high _eusart2RxStatusBuffer
  9233  0019B8  22DA               	addwfc	fsr2h,f,c
  9234  0019BA  0E00               	movlw	0
  9235  0019BC  6EDF               	movwf	indf2,c
  9236  0019BE                     
  9237                           ;mcc_generated_files/eusart2.c: 230:     if(RC2STAbits.FERR){
  9238  0019BE  010E               	movlb	14	; () banked
  9239  0019C0  A59D               	btfss	157,2,b	;volatile
  9240  0019C2  EFE5  F00C         	goto	i2u344_41
  9241  0019C6  EFE7  F00C         	goto	i2u344_40
  9242  0019CA                     i2u344_41:
  9243  0019CA  EFFB  F00C         	goto	i2l3934
  9244  0019CE                     i2u344_40:
  9245  0019CE                     
  9246                           ; BSR set to: 14
  9247                           ;mcc_generated_files/eusart2.c: 231:         eusart2RxStatusBuffer[eusart2RxHead].ferr =
      +                           1;
  9248  0019CE  0E70               	movlw	low _eusart2RxStatusBuffer
  9249  0019D0  2459               	addwf	_eusart2RxHead^0,w,c	;volatile
  9250  0019D2  6ED9               	movwf	fsr2l,c
  9251  0019D4  6ADA               	clrf	fsr2h,c
  9252  0019D6  0E00               	movlw	high _eusart2RxStatusBuffer
  9253  0019D8  22DA               	addwfc	fsr2h,f,c
  9254  0019DA  0100               	movlb	0	; () banked
  9255  0019DC  82DF               	bsf	indf2,1,c
  9256  0019DE                     
  9257                           ; BSR set to: 0
  9258                           ;mcc_generated_files/eusart2.c: 232:         EUSART2_FramingErrorHandler();
  9259  0019DE  D802               	call	i2u345_48
  9260  0019E0  EFFB  F00C         	goto	i2u345_49
  9261  0019E4                     i2u345_48:
  9262  0019E4  0005               	push	
  9263  0019E6  6EFA               	movwf	pclath,c
  9264  0019E8  51D7               	movf	_EUSART2_FramingErrorHandler& (0+255),w,b
  9265  0019EA  6EFD               	movwf	tosl,c
  9266  0019EC  51D8               	movf	(_EUSART2_FramingErrorHandler+1)& (0+255),w,b
  9267  0019EE  6EFE               	movwf	tosh,c
  9268  0019F0  6AFF               	clrf	tosu,c
  9269  0019F2  50FA               	movf	pclath,w,c
  9270  0019F4  0012               	return		;indir
  9271  0019F6                     i2u345_49:
  9272  0019F6                     i2l3934:
  9273                           
  9274                           ;mcc_generated_files/eusart2.c: 235:     if(RC2STAbits.OERR){
  9275  0019F6  010E               	movlb	14	; () banked
  9276  0019F8  A39D               	btfss	157,1,b	;volatile
  9277  0019FA  EF01  F00D         	goto	i2u346_41
  9278  0019FE  EF03  F00D         	goto	i2u346_40
  9279  001A02                     i2u346_41:
  9280  001A02  EF17  F00D         	goto	i2l3940
  9281  001A06                     i2u346_40:
  9282  001A06                     
  9283                           ; BSR set to: 14
  9284                           ;mcc_generated_files/eusart2.c: 236:         eusart2RxStatusBuffer[eusart2RxHead].oerr =
      +                           1;
  9285  001A06  0E70               	movlw	low _eusart2RxStatusBuffer
  9286  001A08  2459               	addwf	_eusart2RxHead^0,w,c	;volatile
  9287  001A0A  6ED9               	movwf	fsr2l,c
  9288  001A0C  6ADA               	clrf	fsr2h,c
  9289  001A0E  0E00               	movlw	high _eusart2RxStatusBuffer
  9290  001A10  22DA               	addwfc	fsr2h,f,c
  9291  001A12  0100               	movlb	0	; () banked
  9292  001A14  84DF               	bsf	indf2,2,c
  9293  001A16                     
  9294                           ; BSR set to: 0
  9295                           ;mcc_generated_files/eusart2.c: 237:         EUSART2_OverrunErrorHandler();
  9296  001A16  D802               	call	i2u347_48
  9297  001A18  EF17  F00D         	goto	i2u347_49
  9298  001A1C                     i2u347_48:
  9299  001A1C  0005               	push	
  9300  001A1E  6EFA               	movwf	pclath,c
  9301  001A20  51D5               	movf	_EUSART2_OverrunErrorHandler& (0+255),w,b
  9302  001A22  6EFD               	movwf	tosl,c
  9303  001A24  51D6               	movf	(_EUSART2_OverrunErrorHandler+1)& (0+255),w,b
  9304  001A26  6EFE               	movwf	tosh,c
  9305  001A28  6AFF               	clrf	tosu,c
  9306  001A2A  50FA               	movf	pclath,w,c
  9307  001A2C  0012               	return		;indir
  9308  001A2E                     i2u347_49:
  9309  001A2E                     i2l3940:
  9310                           
  9311                           ;mcc_generated_files/eusart2.c: 240:     if(eusart2RxStatusBuffer[eusart2RxHead].status)
      +                          {
  9312  001A2E  0E70               	movlw	low _eusart2RxStatusBuffer
  9313  001A30  2459               	addwf	_eusart2RxHead^0,w,c	;volatile
  9314  001A32  6ED9               	movwf	fsr2l,c
  9315  001A34  6ADA               	clrf	fsr2h,c
  9316  001A36  0E00               	movlw	high _eusart2RxStatusBuffer
  9317  001A38  22DA               	addwfc	fsr2h,f,c
  9318  001A3A  50DF               	movf	indf2,w,c
  9319  001A3C  B4D8               	btfsc	status,2,c
  9320  001A3E  EF23  F00D         	goto	i2u348_41
  9321  001A42  EF25  F00D         	goto	i2u348_40
  9322  001A46                     i2u348_41:
  9323  001A46  EF34  F00D         	goto	i2l3944
  9324  001A4A                     i2u348_40:
  9325  001A4A                     
  9326                           ;mcc_generated_files/eusart2.c: 241:         EUSART2_ErrorHandler();
  9327  001A4A  D802               	call	i2u349_48
  9328  001A4C  EF32  F00D         	goto	i2u349_49
  9329  001A50                     i2u349_48:
  9330  001A50  0005               	push	
  9331  001A52  6EFA               	movwf	pclath,c
  9332  001A54  0100               	movlb	0	; () banked
  9333  001A56  51D3               	movf	_EUSART2_ErrorHandler& (0+255),w,b
  9334  001A58  6EFD               	movwf	tosl,c
  9335  001A5A  51D4               	movf	(_EUSART2_ErrorHandler+1)& (0+255),w,b
  9336  001A5C  6EFE               	movwf	tosh,c
  9337  001A5E  6AFF               	clrf	tosu,c
  9338  001A60  50FA               	movf	pclath,w,c
  9339  001A62  0012               	return		;indir
  9340  001A64                     i2u349_49:
  9341                           
  9342                           ;mcc_generated_files/eusart2.c: 242:     } else {
  9343  001A64  EF36  F00D         	goto	i2l343
  9344  001A68                     i2l3944:
  9345                           
  9346                           ;mcc_generated_files/eusart2.c: 243:         EUSART2_RxDataHandler();
  9347  001A68  EC93  F012         	call	_EUSART2_RxDataHandler	;wreg free
  9348  001A6C                     i2l343:
  9349  001A6C  0012               	return		;funcret
  9350  001A6E                     __end_of_EUSART2_Receive_ISR:
  9351                           	opt callstack 0
  9352                           
  9353 ;; *************** function _EUSART2_DefaultOverrunErrorHandler *****************
  9354 ;; Defined at:
  9355 ;;		line 261 in file "mcc_generated_files/eusart2.c"
  9356 ;; Parameters:    Size  Location     Type
  9357 ;;		None
  9358 ;; Auto vars:     Size  Location     Type
  9359 ;;		None
  9360 ;; Return value:  Size  Location     Type
  9361 ;;                  1    wreg      void 
  9362 ;; Registers used:
  9363 ;;		None
  9364 ;; Tracked objects:
  9365 ;;		On entry : 0/0
  9366 ;;		On exit  : 0/0
  9367 ;;		Unchanged: 0/0
  9368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9373 ;;Total ram usage:        0 bytes
  9374 ;; Hardware stack levels used:    1
  9375 ;; This function calls:
  9376 ;;		Nothing
  9377 ;; This function is called by:
  9378 ;;		_EUSART2_Initialize
  9379 ;;		_EUSART2_Receive_ISR
  9380 ;; This function uses a non-reentrant model
  9381 ;;
  9382                           
  9383                           	psect	text62
  9384  0026E0                     __ptext62:
  9385                           	opt callstack 0
  9386  0026E0                     _EUSART2_DefaultOverrunErrorHandler:
  9387                           	opt callstack 17
  9388  0026E0                     
  9389                           ;mcc_generated_files/eusart2.c: 264:     RC2STAbits.CREN = 0;
  9390  0026E0  010E               	movlb	14	; () banked
  9391  0026E2  999D               	bcf	157,4,b	;volatile
  9392                           
  9393                           ;mcc_generated_files/eusart2.c: 265:     RC2STAbits.CREN = 1;
  9394  0026E4  899D               	bsf	157,4,b	;volatile
  9395  0026E6                     
  9396                           ; BSR set to: 14
  9397  0026E6  0012               	return		;funcret
  9398  0026E8                     __end_of_EUSART2_DefaultOverrunErrorHandler:
  9399                           	opt callstack 0
  9400                           
  9401 ;; *************** function _EUSART2_DefaultFramingErrorHandler *****************
  9402 ;; Defined at:
  9403 ;;		line 259 in file "mcc_generated_files/eusart2.c"
  9404 ;; Parameters:    Size  Location     Type
  9405 ;;		None
  9406 ;; Auto vars:     Size  Location     Type
  9407 ;;		None
  9408 ;; Return value:  Size  Location     Type
  9409 ;;                  1    wreg      void 
  9410 ;; Registers used:
  9411 ;;		None
  9412 ;; Tracked objects:
  9413 ;;		On entry : 0/0
  9414 ;;		On exit  : 0/0
  9415 ;;		Unchanged: 0/0
  9416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9421 ;;Total ram usage:        0 bytes
  9422 ;; Hardware stack levels used:    1
  9423 ;; This function calls:
  9424 ;;		Nothing
  9425 ;; This function is called by:
  9426 ;;		_EUSART2_Initialize
  9427 ;;		_EUSART2_Receive_ISR
  9428 ;; This function uses a non-reentrant model
  9429 ;;
  9430                           
  9431                           	psect	text63
  9432  00270A                     __ptext63:
  9433                           	opt callstack 0
  9434  00270A                     _EUSART2_DefaultFramingErrorHandler:
  9435                           	opt callstack 17
  9436  00270A  0012               	return		;funcret
  9437  00270C                     __end_of_EUSART2_DefaultFramingErrorHandler:
  9438                           	opt callstack 0
  9439                           
  9440 ;; *************** function _EUSART2_DefaultErrorHandler *****************
  9441 ;; Defined at:
  9442 ;;		line 269 in file "mcc_generated_files/eusart2.c"
  9443 ;; Parameters:    Size  Location     Type
  9444 ;;		None
  9445 ;; Auto vars:     Size  Location     Type
  9446 ;;		None
  9447 ;; Return value:  Size  Location     Type
  9448 ;;                  1    wreg      void 
  9449 ;; Registers used:
  9450 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9451 ;; Tracked objects:
  9452 ;;		On entry : 0/0
  9453 ;;		On exit  : 0/0
  9454 ;;		Unchanged: 0/0
  9455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9460 ;;Total ram usage:        0 bytes
  9461 ;; Hardware stack levels used:    1
  9462 ;; Hardware stack levels required when called:    1
  9463 ;; This function calls:
  9464 ;;		_EUSART2_RxDataHandler
  9465 ;; This function is called by:
  9466 ;;		_EUSART2_Initialize
  9467 ;;		_EUSART2_Receive_ISR
  9468 ;; This function uses a non-reentrant model
  9469 ;;
  9470                           
  9471                           	psect	text64
  9472  0026F4                     __ptext64:
  9473                           	opt callstack 0
  9474  0026F4                     _EUSART2_DefaultErrorHandler:
  9475                           	opt callstack 16
  9476  0026F4                     
  9477                           ;mcc_generated_files/eusart2.c: 270:     EUSART2_RxDataHandler();
  9478  0026F4  EC93  F012         	call	_EUSART2_RxDataHandler	;wreg free
  9479  0026F8  0012               	return		;funcret
  9480  0026FA                     __end_of_EUSART2_DefaultErrorHandler:
  9481                           	opt callstack 0
  9482                           
  9483 ;; *************** function _EUSART2_RxDataHandler *****************
  9484 ;; Defined at:
  9485 ;;		line 249 in file "mcc_generated_files/eusart2.c"
  9486 ;; Parameters:    Size  Location     Type
  9487 ;;		None
  9488 ;; Auto vars:     Size  Location     Type
  9489 ;;		None
  9490 ;; Return value:  Size  Location     Type
  9491 ;;                  1    wreg      void 
  9492 ;; Registers used:
  9493 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9494 ;; Tracked objects:
  9495 ;;		On entry : 0/0
  9496 ;;		On exit  : 0/0
  9497 ;;		Unchanged: 0/0
  9498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9503 ;;Total ram usage:        0 bytes
  9504 ;; Hardware stack levels used:    1
  9505 ;; This function calls:
  9506 ;;		Nothing
  9507 ;; This function is called by:
  9508 ;;		_EUSART2_Receive_ISR
  9509 ;;		_EUSART2_DefaultErrorHandler
  9510 ;; This function uses a non-reentrant model
  9511 ;;
  9512                           
  9513                           	psect	text65
  9514  002526                     __ptext65:
  9515                           	opt callstack 0
  9516  002526                     _EUSART2_RxDataHandler:
  9517                           	opt callstack 17
  9518  002526                     
  9519                           ;mcc_generated_files/eusart2.c: 251:     eusart2RxBuffer[eusart2RxHead++] = RC2REG;
  9520  002526  0E78               	movlw	low _eusart2RxBuffer
  9521  002528  2459               	addwf	_eusart2RxHead^0,w,c	;volatile
  9522  00252A  6ED9               	movwf	fsr2l,c
  9523  00252C  6ADA               	clrf	fsr2h,c
  9524  00252E  0E00               	movlw	high _eusart2RxBuffer
  9525  002530  22DA               	addwfc	fsr2h,f,c
  9526  002532  CE99 FFDF          	movff	3737,indf2	;volatile
  9527  002536  2A59               	incf	_eusart2RxHead^0,f,c	;volatile
  9528  002538                     
  9529                           ;mcc_generated_files/eusart2.c: 252:     if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
  9530  002538  0E07               	movlw	7
  9531  00253A  6459               	cpfsgt	_eusart2RxHead^0,c	;volatile
  9532  00253C  EFA2  F012         	goto	i2u319_41
  9533  002540  EFA4  F012         	goto	i2u319_40
  9534  002544                     i2u319_41:
  9535  002544  EFA6  F012         	goto	i2l3646
  9536  002548                     i2u319_40:
  9537  002548                     
  9538                           ;mcc_generated_files/eusart2.c: 253:     {;mcc_generated_files/eusart2.c: 254:         e
      +                          usart2RxHead = 0;
  9539  002548  0E00               	movlw	0
  9540  00254A  6E59               	movwf	_eusart2RxHead^0,c	;volatile
  9541  00254C                     i2l3646:
  9542                           
  9543                           ;mcc_generated_files/eusart2.c: 256:     eusart2RxCount++;
  9544  00254C  0100               	movlb	0	; () banked
  9545  00254E  2B9B               	incf	_eusart2RxCount& (0+255),f,b	;volatile
  9546  002550                     
  9547                           ; BSR set to: 0
  9548  002550  0012               	return		;funcret
  9549  002552                     __end_of_EUSART2_RxDataHandler:
  9550                           	opt callstack 0
  9551                           
  9552 ;; *************** function _EUSART1_Transmit_ISR *****************
  9553 ;; Defined at:
  9554 ;;		line 197 in file "mcc_generated_files/eusart1.c"
  9555 ;; Parameters:    Size  Location     Type
  9556 ;;		None
  9557 ;; Auto vars:     Size  Location     Type
  9558 ;;		None
  9559 ;; Return value:  Size  Location     Type
  9560 ;;                  1    wreg      void 
  9561 ;; Registers used:
  9562 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9563 ;; Tracked objects:
  9564 ;;		On entry : 0/0
  9565 ;;		On exit  : 0/0
  9566 ;;		Unchanged: 0/0
  9567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9572 ;;Total ram usage:        0 bytes
  9573 ;; Hardware stack levels used:    1
  9574 ;; This function calls:
  9575 ;;		Nothing
  9576 ;; This function is called by:
  9577 ;;		_EUSART1_Initialize
  9578 ;;		_INTERRUPT_InterruptManager
  9579 ;; This function uses a non-reentrant model
  9580 ;;
  9581                           
  9582                           	psect	text66
  9583  0023BE                     __ptext66:
  9584                           	opt callstack 0
  9585  0023BE                     _EUSART1_Transmit_ISR:
  9586                           	opt callstack 18
  9587  0023BE                     
  9588                           ;mcc_generated_files/eusart1.c: 201:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
  9589  0023BE  0E10               	movlw	16
  9590  0023C0  0100               	movlb	0	; () banked
  9591  0023C2  61E1               	cpfslt	_eusart1TxBufferRemaining& (0+255),b	;volatile
  9592  0023C4  EFE6  F011         	goto	i2u350_41
  9593  0023C8  EFE8  F011         	goto	i2u350_40
  9594  0023CC                     i2u350_41:
  9595  0023CC  EFFE  F011         	goto	i2l477
  9596  0023D0                     i2u350_40:
  9597  0023D0                     
  9598                           ; BSR set to: 0
  9599                           ;mcc_generated_files/eusart1.c: 202:     {;mcc_generated_files/eusart1.c: 203:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
  9600  0023D0  0E60               	movlw	low _eusart1TxBuffer
  9601  0023D2  2598               	addwf	_eusart1TxTail& (0+255),w,b	;volatile
  9602  0023D4  6ED9               	movwf	fsr2l,c
  9603  0023D6  6ADA               	clrf	fsr2h,c
  9604  0023D8  0E00               	movlw	high _eusart1TxBuffer
  9605  0023DA  22DA               	addwfc	fsr2h,f,c
  9606  0023DC  50DF               	movf	indf2,w,c
  9607  0023DE  6E9A               	movwf	154,c	;volatile
  9608  0023E0                     
  9609                           ; BSR set to: 0
  9610  0023E0  2B98               	incf	_eusart1TxTail& (0+255),f,b	;volatile
  9611  0023E2                     
  9612                           ; BSR set to: 0
  9613                           ;mcc_generated_files/eusart1.c: 204:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
  9614  0023E2  0E0F               	movlw	15
  9615  0023E4  6598               	cpfsgt	_eusart1TxTail& (0+255),b	;volatile
  9616  0023E6  EFF7  F011         	goto	i2u351_41
  9617  0023EA  EFF9  F011         	goto	i2u351_40
  9618  0023EE                     i2u351_41:
  9619  0023EE  EFFB  F011         	goto	i2l3956
  9620  0023F2                     i2u351_40:
  9621  0023F2                     
  9622                           ; BSR set to: 0
  9623                           ;mcc_generated_files/eusart1.c: 205:         {;mcc_generated_files/eusart1.c: 206:      
      +                                 eusart1TxTail = 0;
  9624  0023F2  0E00               	movlw	0
  9625  0023F4  6F98               	movwf	_eusart1TxTail& (0+255),b	;volatile
  9626  0023F6                     i2l3956:
  9627                           
  9628                           ; BSR set to: 0
  9629                           ;mcc_generated_files/eusart1.c: 208:         eusart1TxBufferRemaining++;
  9630  0023F6  2BE1               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
  9631                           
  9632                           ;mcc_generated_files/eusart1.c: 209:     }
  9633  0023F8  EF00  F012         	goto	i2l480
  9634  0023FC                     i2l477:
  9635                           
  9636                           ; BSR set to: 0
  9637                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         P
      +                          IE3bits.TX1IE = 0;
  9638  0023FC  010E               	movlb	14	; () banked
  9639  0023FE  99C5               	bcf	197,4,b	;volatile
  9640  002400                     i2l480:
  9641  002400  0012               	return		;funcret
  9642  002402                     __end_of_EUSART1_Transmit_ISR:
  9643                           	opt callstack 0
  9644                           
  9645 ;; *************** function _EUSART1_Receive_ISR *****************
  9646 ;; Defined at:
  9647 ;;		line 216 in file "mcc_generated_files/eusart1.c"
  9648 ;; Parameters:    Size  Location     Type
  9649 ;;		None
  9650 ;; Auto vars:     Size  Location     Type
  9651 ;;		None
  9652 ;; Return value:  Size  Location     Type
  9653 ;;                  1    wreg      void 
  9654 ;; Registers used:
  9655 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  9656 ;; Tracked objects:
  9657 ;;		On entry : 0/0
  9658 ;;		On exit  : 0/0
  9659 ;;		Unchanged: 0/0
  9660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9665 ;;Total ram usage:        0 bytes
  9666 ;; Hardware stack levels used:    1
  9667 ;; Hardware stack levels required when called:    2
  9668 ;; This function calls:
  9669 ;;		Absolute function
  9670 ;;		_EUSART1_DefaultErrorHandler
  9671 ;;		_EUSART1_DefaultFramingErrorHandler
  9672 ;;		_EUSART1_DefaultOverrunErrorHandler
  9673 ;;		_EUSART1_RxDataHandler
  9674 ;; This function is called by:
  9675 ;;		_EUSART1_Initialize
  9676 ;;		_INTERRUPT_InterruptManager
  9677 ;; This function uses a non-reentrant model
  9678 ;;
  9679                           
  9680                           	psect	text67
  9681  001A6E                     __ptext67:
  9682                           	opt callstack 0
  9683  001A6E                     _EUSART1_Receive_ISR:
  9684                           	opt callstack 16
  9685  001A6E                     
  9686                           ;mcc_generated_files/eusart1.c: 219:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
  9687  001A6E  0E64               	movlw	low _eusart1RxStatusBuffer
  9688  001A70  2458               	addwf	_eusart1RxHead^0,w,c	;volatile
  9689  001A72  6ED9               	movwf	fsr2l,c
  9690  001A74  6ADA               	clrf	fsr2h,c
  9691  001A76  0E01               	movlw	high _eusart1RxStatusBuffer
  9692  001A78  22DA               	addwfc	fsr2h,f,c
  9693  001A7A  0E00               	movlw	0
  9694  001A7C  6EDF               	movwf	indf2,c
  9695  001A7E                     
  9696                           ;mcc_generated_files/eusart1.c: 221:     if(RC1STAbits.FERR){
  9697  001A7E  A49D               	btfss	157,2,c	;volatile
  9698  001A80  EF44  F00D         	goto	i2u352_41
  9699  001A84  EF46  F00D         	goto	i2u352_40
  9700  001A88                     i2u352_41:
  9701  001A88  EF5B  F00D         	goto	i2l3966
  9702  001A8C                     i2u352_40:
  9703  001A8C                     
  9704                           ;mcc_generated_files/eusart1.c: 222:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
  9705  001A8C  0E64               	movlw	low _eusart1RxStatusBuffer
  9706  001A8E  2458               	addwf	_eusart1RxHead^0,w,c	;volatile
  9707  001A90  6ED9               	movwf	fsr2l,c
  9708  001A92  6ADA               	clrf	fsr2h,c
  9709  001A94  0E01               	movlw	high _eusart1RxStatusBuffer
  9710  001A96  22DA               	addwfc	fsr2h,f,c
  9711  001A98  0101               	movlb	1	; () banked
  9712  001A9A  82DF               	bsf	indf2,1,c
  9713  001A9C                     
  9714                           ; BSR set to: 1
  9715                           ;mcc_generated_files/eusart1.c: 223:         EUSART1_FramingErrorHandler();
  9716  001A9C  D802               	call	i2u353_48
  9717  001A9E  EF5B  F00D         	goto	i2u353_49
  9718  001AA2                     i2u353_48:
  9719  001AA2  0005               	push	
  9720  001AA4  6EFA               	movwf	pclath,c
  9721  001AA6  0100               	movlb	0	; () banked
  9722  001AA8  51D1               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
  9723  001AAA  6EFD               	movwf	tosl,c
  9724  001AAC  51D2               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
  9725  001AAE  6EFE               	movwf	tosh,c
  9726  001AB0  6AFF               	clrf	tosu,c
  9727  001AB2  50FA               	movf	pclath,w,c
  9728  001AB4  0012               	return		;indir
  9729  001AB6                     i2u353_49:
  9730  001AB6                     i2l3966:
  9731                           
  9732                           ;mcc_generated_files/eusart1.c: 226:     if(RC1STAbits.OERR){
  9733  001AB6  A29D               	btfss	157,1,c	;volatile
  9734  001AB8  EF60  F00D         	goto	i2u354_41
  9735  001ABC  EF62  F00D         	goto	i2u354_40
  9736  001AC0                     i2u354_41:
  9737  001AC0  EF77  F00D         	goto	i2l3972
  9738  001AC4                     i2u354_40:
  9739  001AC4                     
  9740                           ;mcc_generated_files/eusart1.c: 227:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
  9741  001AC4  0E64               	movlw	low _eusart1RxStatusBuffer
  9742  001AC6  2458               	addwf	_eusart1RxHead^0,w,c	;volatile
  9743  001AC8  6ED9               	movwf	fsr2l,c
  9744  001ACA  6ADA               	clrf	fsr2h,c
  9745  001ACC  0E01               	movlw	high _eusart1RxStatusBuffer
  9746  001ACE  22DA               	addwfc	fsr2h,f,c
  9747  001AD0  0101               	movlb	1	; () banked
  9748  001AD2  84DF               	bsf	indf2,2,c
  9749  001AD4                     
  9750                           ; BSR set to: 1
  9751                           ;mcc_generated_files/eusart1.c: 228:         EUSART1_OverrunErrorHandler();
  9752  001AD4  D802               	call	i2u355_48
  9753  001AD6  EF77  F00D         	goto	i2u355_49
  9754  001ADA                     i2u355_48:
  9755  001ADA  0005               	push	
  9756  001ADC  6EFA               	movwf	pclath,c
  9757  001ADE  0100               	movlb	0	; () banked
  9758  001AE0  51CF               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
  9759  001AE2  6EFD               	movwf	tosl,c
  9760  001AE4  51D0               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
  9761  001AE6  6EFE               	movwf	tosh,c
  9762  001AE8  6AFF               	clrf	tosu,c
  9763  001AEA  50FA               	movf	pclath,w,c
  9764  001AEC  0012               	return		;indir
  9765  001AEE                     i2u355_49:
  9766  001AEE                     i2l3972:
  9767                           
  9768                           ;mcc_generated_files/eusart1.c: 231:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
  9769  001AEE  0E64               	movlw	low _eusart1RxStatusBuffer
  9770  001AF0  2458               	addwf	_eusart1RxHead^0,w,c	;volatile
  9771  001AF2  6ED9               	movwf	fsr2l,c
  9772  001AF4  6ADA               	clrf	fsr2h,c
  9773  001AF6  0E01               	movlw	high _eusart1RxStatusBuffer
  9774  001AF8  22DA               	addwfc	fsr2h,f,c
  9775  001AFA  50DF               	movf	indf2,w,c
  9776  001AFC  B4D8               	btfsc	status,2,c
  9777  001AFE  EF83  F00D         	goto	i2u356_41
  9778  001B02  EF85  F00D         	goto	i2u356_40
  9779  001B06                     i2u356_41:
  9780  001B06  EF94  F00D         	goto	i2l3976
  9781  001B0A                     i2u356_40:
  9782  001B0A                     
  9783                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_ErrorHandler();
  9784  001B0A  D802               	call	i2u357_48
  9785  001B0C  EF92  F00D         	goto	i2u357_49
  9786  001B10                     i2u357_48:
  9787  001B10  0005               	push	
  9788  001B12  6EFA               	movwf	pclath,c
  9789  001B14  0100               	movlb	0	; () banked
  9790  001B16  51CD               	movf	_EUSART1_ErrorHandler& (0+255),w,b
  9791  001B18  6EFD               	movwf	tosl,c
  9792  001B1A  51CE               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
  9793  001B1C  6EFE               	movwf	tosh,c
  9794  001B1E  6AFF               	clrf	tosu,c
  9795  001B20  50FA               	movf	pclath,w,c
  9796  001B22  0012               	return		;indir
  9797  001B24                     i2u357_49:
  9798                           
  9799                           ;mcc_generated_files/eusart1.c: 233:     } else {
  9800  001B24  EF96  F00D         	goto	i2l487
  9801  001B28                     i2l3976:
  9802                           
  9803                           ;mcc_generated_files/eusart1.c: 234:         EUSART1_RxDataHandler();
  9804  001B28  ECA9  F012         	call	_EUSART1_RxDataHandler	;wreg free
  9805  001B2C                     i2l487:
  9806  001B2C  0012               	return		;funcret
  9807  001B2E                     __end_of_EUSART1_Receive_ISR:
  9808                           	opt callstack 0
  9809                           
  9810 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
  9811 ;; Defined at:
  9812 ;;		line 252 in file "mcc_generated_files/eusart1.c"
  9813 ;; Parameters:    Size  Location     Type
  9814 ;;		None
  9815 ;; Auto vars:     Size  Location     Type
  9816 ;;		None
  9817 ;; Return value:  Size  Location     Type
  9818 ;;                  1    wreg      void 
  9819 ;; Registers used:
  9820 ;;		None
  9821 ;; Tracked objects:
  9822 ;;		On entry : 0/0
  9823 ;;		On exit  : 0/0
  9824 ;;		Unchanged: 0/0
  9825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9830 ;;Total ram usage:        0 bytes
  9831 ;; Hardware stack levels used:    1
  9832 ;; This function calls:
  9833 ;;		Nothing
  9834 ;; This function is called by:
  9835 ;;		_EUSART1_Initialize
  9836 ;;		_EUSART1_Receive_ISR
  9837 ;; This function uses a non-reentrant model
  9838 ;;
  9839                           
  9840                           	psect	text68
  9841  0026FA                     __ptext68:
  9842                           	opt callstack 0
  9843  0026FA                     _EUSART1_DefaultOverrunErrorHandler:
  9844                           	opt callstack 17
  9845  0026FA                     
  9846                           ;mcc_generated_files/eusart1.c: 255:     RC1STAbits.CREN = 0;
  9847  0026FA  989D               	bcf	157,4,c	;volatile
  9848                           
  9849                           ;mcc_generated_files/eusart1.c: 256:     RC1STAbits.CREN = 1;
  9850  0026FC  889D               	bsf	157,4,c	;volatile
  9851  0026FE  0012               	return		;funcret
  9852  002700                     __end_of_EUSART1_DefaultOverrunErrorHandler:
  9853                           	opt callstack 0
  9854                           
  9855 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
  9856 ;; Defined at:
  9857 ;;		line 250 in file "mcc_generated_files/eusart1.c"
  9858 ;; Parameters:    Size  Location     Type
  9859 ;;		None
  9860 ;; Auto vars:     Size  Location     Type
  9861 ;;		None
  9862 ;; Return value:  Size  Location     Type
  9863 ;;                  1    wreg      void 
  9864 ;; Registers used:
  9865 ;;		None
  9866 ;; Tracked objects:
  9867 ;;		On entry : 0/0
  9868 ;;		On exit  : 0/0
  9869 ;;		Unchanged: 0/0
  9870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9875 ;;Total ram usage:        0 bytes
  9876 ;; Hardware stack levels used:    1
  9877 ;; This function calls:
  9878 ;;		Nothing
  9879 ;; This function is called by:
  9880 ;;		_EUSART1_Initialize
  9881 ;;		_EUSART1_Receive_ISR
  9882 ;; This function uses a non-reentrant model
  9883 ;;
  9884                           
  9885                           	psect	text69
  9886  00270C                     __ptext69:
  9887                           	opt callstack 0
  9888  00270C                     _EUSART1_DefaultFramingErrorHandler:
  9889                           	opt callstack 17
  9890  00270C  0012               	return		;funcret
  9891  00270E                     __end_of_EUSART1_DefaultFramingErrorHandler:
  9892                           	opt callstack 0
  9893                           
  9894 ;; *************** function _EUSART1_DefaultErrorHandler *****************
  9895 ;; Defined at:
  9896 ;;		line 260 in file "mcc_generated_files/eusart1.c"
  9897 ;; Parameters:    Size  Location     Type
  9898 ;;		None
  9899 ;; Auto vars:     Size  Location     Type
  9900 ;;		None
  9901 ;; Return value:  Size  Location     Type
  9902 ;;                  1    wreg      void 
  9903 ;; Registers used:
  9904 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9905 ;; Tracked objects:
  9906 ;;		On entry : 0/0
  9907 ;;		On exit  : 0/0
  9908 ;;		Unchanged: 0/0
  9909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9914 ;;Total ram usage:        0 bytes
  9915 ;; Hardware stack levels used:    1
  9916 ;; Hardware stack levels required when called:    1
  9917 ;; This function calls:
  9918 ;;		_EUSART1_RxDataHandler
  9919 ;; This function is called by:
  9920 ;;		_EUSART1_Initialize
  9921 ;;		_EUSART1_Receive_ISR
  9922 ;; This function uses a non-reentrant model
  9923 ;;
  9924                           
  9925                           	psect	text70
  9926  002700                     __ptext70:
  9927                           	opt callstack 0
  9928  002700                     _EUSART1_DefaultErrorHandler:
  9929                           	opt callstack 16
  9930  002700                     
  9931                           ;mcc_generated_files/eusart1.c: 261:     EUSART1_RxDataHandler();
  9932  002700  ECA9  F012         	call	_EUSART1_RxDataHandler	;wreg free
  9933  002704  0012               	return		;funcret
  9934  002706                     __end_of_EUSART1_DefaultErrorHandler:
  9935                           	opt callstack 0
  9936                           
  9937 ;; *************** function _EUSART1_RxDataHandler *****************
  9938 ;; Defined at:
  9939 ;;		line 240 in file "mcc_generated_files/eusart1.c"
  9940 ;; Parameters:    Size  Location     Type
  9941 ;;		None
  9942 ;; Auto vars:     Size  Location     Type
  9943 ;;		None
  9944 ;; Return value:  Size  Location     Type
  9945 ;;                  1    wreg      void 
  9946 ;; Registers used:
  9947 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9948 ;; Tracked objects:
  9949 ;;		On entry : 0/0
  9950 ;;		On exit  : 0/0
  9951 ;;		Unchanged: 0/0
  9952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9957 ;;Total ram usage:        0 bytes
  9958 ;; Hardware stack levels used:    1
  9959 ;; This function calls:
  9960 ;;		Nothing
  9961 ;; This function is called by:
  9962 ;;		_EUSART1_Receive_ISR
  9963 ;;		_EUSART1_DefaultErrorHandler
  9964 ;; This function uses a non-reentrant model
  9965 ;;
  9966                           
  9967                           	psect	text71
  9968  002552                     __ptext71:
  9969                           	opt callstack 0
  9970  002552                     _EUSART1_RxDataHandler:
  9971                           	opt callstack 17
  9972  002552                     
  9973                           ;mcc_generated_files/eusart1.c: 242:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
  9974  002552  0E64               	movlw	low _eusart1RxBuffer
  9975  002554  2458               	addwf	_eusart1RxHead^0,w,c	;volatile
  9976  002556  6ED9               	movwf	fsr2l,c
  9977  002558  6ADA               	clrf	fsr2h,c
  9978  00255A  0E02               	movlw	high _eusart1RxBuffer
  9979  00255C  22DA               	addwfc	fsr2h,f,c
  9980  00255E  CF99 FFDF          	movff	3993,indf2	;volatile
  9981  002562  2A58               	incf	_eusart1RxHead^0,f,c	;volatile
  9982  002564                     
  9983                           ;mcc_generated_files/eusart1.c: 243:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  9984  002564  0E63               	movlw	99
  9985  002566  6458               	cpfsgt	_eusart1RxHead^0,c	;volatile
  9986  002568  EFB8  F012         	goto	i2u320_41
  9987  00256C  EFBA  F012         	goto	i2u320_40
  9988  002570                     i2u320_41:
  9989  002570  EFBC  F012         	goto	i2l3666
  9990  002574                     i2u320_40:
  9991  002574                     
  9992                           ;mcc_generated_files/eusart1.c: 244:     {;mcc_generated_files/eusart1.c: 245:         e
      +                          usart1RxHead = 0;
  9993  002574  0E00               	movlw	0
  9994  002576  6E58               	movwf	_eusart1RxHead^0,c	;volatile
  9995  002578                     i2l3666:
  9996                           
  9997                           ;mcc_generated_files/eusart1.c: 247:     eusart1RxCount++;
  9998  002578  0100               	movlb	0	; () banked
  9999  00257A  2B96               	incf	_eusart1RxCount& (0+255),f,b	;volatile
 10000  00257C                     
 10001                           ; BSR set to: 0
 10002  00257C  0012               	return		;funcret
 10003  00257E                     __end_of_EUSART1_RxDataHandler:
 10004                           	opt callstack 0
 10005                           
 10006                           	psect	text72
 10007  000000                     __ptext72:
 10008                           	opt callstack 0
 10009  000000                     
 10010                           	psect	rparam
 10011  0000                     
 10012                           	psect	temp
 10013  00005A                     btemp:
 10014                           	opt callstack 0
 10015  00005A                     	ds	1
 10016  0000                     int$flags	set	btemp
 10017  0000                     wtemp8	set	btemp+1
 10018  0000                     ttemp5	set	btemp+1
 10019  0000                     ttemp6	set	btemp+4
 10020  0000                     ttemp7	set	btemp+8
 10021                           tosu	equ	0xFFF
 10022                           tosh	equ	0xFFE
 10023                           tosl	equ	0xFFD
 10024                           stkptr	equ	0xFFC
 10025                           pclatu	equ	0xFFB
 10026                           pclath	equ	0xFFA
 10027                           pcl	equ	0xFF9
 10028                           tblptru	equ	0xFF8
 10029                           tblptrh	equ	0xFF7
 10030                           tblptrl	equ	0xFF6
 10031                           tablat	equ	0xFF5
 10032                           prodh	equ	0xFF4
 10033                           prodl	equ	0xFF3
 10034                           indf0	equ	0xFEF
 10035                           postinc0	equ	0xFEE
 10036                           postdec0	equ	0xFED
 10037                           preinc0	equ	0xFEC
 10038                           plusw0	equ	0xFEB
 10039                           fsr0h	equ	0xFEA
 10040                           fsr0l	equ	0xFE9
 10041                           wreg	equ	0xFE8
 10042                           indf1	equ	0xFE7
 10043                           postinc1	equ	0xFE6
 10044                           postdec1	equ	0xFE5
 10045                           preinc1	equ	0xFE4
 10046                           plusw1	equ	0xFE3
 10047                           fsr1h	equ	0xFE2
 10048                           fsr1l	equ	0xFE1
 10049                           bsr	equ	0xFE0
 10050                           indf2	equ	0xFDF
 10051                           postinc2	equ	0xFDE
 10052                           postdec2	equ	0xFDD
 10053                           preinc2	equ	0xFDC
 10054                           plusw2	equ	0xFDB
 10055                           fsr2h	equ	0xFDA
 10056                           fsr2l	equ	0xFD9
 10057                           status	equ	0xFD8


Data Sizes:
    Strings     493
    Constant    0
    Data        20
    BSS         499
    Persistent  22
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      90
    BANK0           160     46     151
    BANK1           256     10     242
    BANK2           256      0     200
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), STR_5(CODE[9]), 
		 -> STR_4(CODE[12]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), STR_5(CODE[9]), 
		 -> STR_4(CODE[12]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_17(CODE[27]), STR_16(CODE[21]), STR_15(CODE[36]), STR_14(CODE[8]), 
		 -> STR_13(CODE[28]), STR_12(CODE[4]), STR_11(CODE[23]), STR_10(CODE[32]), 
		 -> STR_9(CODE[35]), STR_8(CODE[55]), STR_7(CODE[53]), STR_6(CODE[29]), 
		 -> STR_3(CODE[43]), STR_2(CODE[25]), STR_1(CODE[57]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1834_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_17(CODE[27]), STR_16(CODE[21]), STR_15(CODE[36]), STR_14(CODE[8]), 
		 -> STR_13(CODE[28]), STR_12(CODE[4]), STR_11(CODE[23]), STR_10(CODE[32]), 
		 -> STR_9(CODE[35]), STR_8(CODE[55]), STR_7(CODE[53]), STR_6(CODE[29]), 
		 -> STR_3(CODE[43]), STR_2(CODE[25]), STR_1(CODE[57]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_17(CODE[27]), STR_16(CODE[21]), STR_15(CODE[36]), STR_14(CODE[8]), 
		 -> STR_13(CODE[28]), STR_12(CODE[4]), STR_11(CODE[23]), STR_10(CODE[32]), 
		 -> STR_9(CODE[35]), STR_8(CODE[55]), STR_7(CODE[53]), STR_6(CODE[29]), 
		 -> STR_3(CODE[43]), STR_2(CODE[25]), STR_1(CODE[57]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 57
		 -> STR_17(CODE[27]), STR_16(CODE[21]), STR_15(CODE[36]), STR_14(CODE[8]), 
		 -> STR_13(CODE[28]), STR_12(CODE[4]), STR_11(CODE[23]), STR_10(CODE[32]), 
		 -> STR_9(CODE[35]), STR_8(CODE[55]), STR_7(CODE[53]), STR_6(CODE[29]), 
		 -> STR_3(CODE[43]), STR_2(CODE[25]), STR_1(CODE[57]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), STR_5(CODE[9]), STR_4(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), STR_5(CODE[9]), STR_4(CODE[12]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), STR_5(CODE[9]), STR_4(CODE[12]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    UART1_Write_string@data	PTR unsigned char  size(2) Largest target is 11
		 -> MBRespon(BANK0[11]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    EUSART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), 

    EUSART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), 

    EUSART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultErrorHandler(), 

    EUSART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultFramingErrorHandler(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_Receive_ISR(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _main->_ModbusRx
    _main->_PrintModbus
    _UART1_Write_string->_EUSART1_Write
    _EUSART2_Initialize->_EUSART2_SetErrorHandler
    _EUSART2_Initialize->_EUSART2_SetFramingErrorHandler
    _EUSART2_Initialize->_EUSART2_SetOverrunErrorHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART2_Write
    _abs->___aomod
    _atoi->_isspace

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _PrintModbus->_printf
    _ModbusRx->_checkCRC
    _checkCRC->_printf
    _InitialiseString->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _ModbusRx->_checkCRC

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  158969
                                             85 COMRAM     1     1      0
                    _ClearModbusData
                        _ClearRxBuff
                   _InitialiseString
                           _ModbusRx
                        _PrintModbus
                             _RXMode
                  _SYSTEM_Initialize
                 _UART1_Write_string
                             _printf
 ---------------------------------------------------------------------------------
 (1) _UART1_Write_string                                   7     3      4     372
                                              5 COMRAM     7     3      4
                      _EUSART1_Write
                 _EUSART1_is_tx_done
                _EUSART1_is_tx_ready
                             _TXMode
 ---------------------------------------------------------------------------------
 (2) _TXMode                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_is_tx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_is_tx_done                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Write                                        1     1      0      62
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1210
                 _EUSART1_Initialize
                 _EUSART2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     605
            _EUSART2_SetErrorHandler
     _EUSART2_SetFramingErrorHandler
     _EUSART2_SetOverrunErrorHandler
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetOverrunErrorHandler                       2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetFramingErrorHandler                       2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetErrorHandler                              2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     605
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _PrintModbus                                          3     3      0   31399
                                             84 COMRAM     1     1      0
                                             41 BANK0      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _ModbusRx                                             1     1      0   63218
                                             84 COMRAM     1     1      0
                  _AddRxBuffToModBus
                        _ClearRxBuff
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                             _RXMode
                           _checkCRC
                             _printf
 ---------------------------------------------------------------------------------
 (2) _checkCRC                                            15    15      0   31742
                                             41 BANK0      5     5      0
                                              0 BANK1     10    10      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _RXMode                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         1     1      0      37
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ClearRxBuff                                          3     3      0      71
                                              4 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _AddRxBuffToModBus                                    3     3      0      71
                                              4 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _InitialiseString                                     0     0      0   31297
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              12     4      8   31297
                                             29 BANK0     12     4      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   29842
                                             82 COMRAM     2     2      0
                                             23 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           45    39      6   29279
                                             72 COMRAM    10     4      6
                                              0 BANK0     23    23      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    7157
                                             33 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     512
                                             10 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    6539
                                             33 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     412
                                              4 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     421
                                              4 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _stoa                                                22    18      4    2732
                                             15 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    7393
                                             33 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    5127
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     310
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    2077
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1577
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      93
                                              5 COMRAM     1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART2_Write                                        1     1      0      62
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1815
                                             11 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     712
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _ClearModbusData                                      2     2      0     102
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManager                          4     4      0       0
                                              0 COMRAM     4     4      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                _EUSART2_Receive_ISR *
               _EUSART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _EUSART2_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART2_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART2_DefaultErrorHandler *
 _EUSART2_DefaultFramingErrorHandler *
 _EUSART2_DefaultOverrunErrorHandler *
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _EUSART2_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART2_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART2_DefaultErrorHandler                         0     0      0       0
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _EUSART2_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearModbusData
   _ClearRxBuff
   _InitialiseString
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _ModbusRx
     _AddRxBuffToModBus
     _ClearRxBuff
     _EUSART1_Read
     _EUSART1_is_rx_ready
     _RXMode
     _checkCRC
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _PrintModbus
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _RXMode
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetErrorHandler
       _EUSART2_SetFramingErrorHandler
       _EUSART2_SetOverrunErrorHandler
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _UART1_Write_string
     _EUSART1_Write
     _EUSART1_is_tx_done
     _EUSART1_is_tx_ready
     _TXMode
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART2_Write
             _fputs
               _fputc
                 _putch
                   _EUSART2_Write
             _strlen
         _fputc
           _putch
             _EUSART2_Write
         _isdigit
         _stoa
           _fputc
             _putch
               _EUSART2_Write
           _strlen
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _EUSART2_Write
             _fputs
               _fputc
                 _putch
                   _EUSART2_Write
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART2_Write
             _fputs
               _fputc
                 _putch
                   _EUSART2_Write
             _strlen
           _toupper
             _islower

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _EUSART2_Receive_ISR *
     Absolute function(Fake) *
     _EUSART2_DefaultErrorHandler *
       _EUSART2_RxDataHandler
     _EUSART2_DefaultFramingErrorHandler *
     _EUSART2_DefaultOverrunErrorHandler *
     _EUSART2_RxDataHandler *
   _EUSART2_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      C8      10       78.1%
BITBANK1           100      0       0       7        0.0%
BANK1              100      A      F2       8       94.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2E      97       5       94.4%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2AB       6        0.0%
DATA                 0      0     2AB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Mar 06 13:31:09 2021

                      _eusart1TxBufferRemaining 00E1                          ?_EUSART2_RxDataHandler 0001  
                                   __CFG_CP$OFF 000000                                              l81 1CF0  
                           ___wmul@multiplicand 0007                                     __CFG_LVP$ON 000000  
                                           l121 2600                                             l124 2630  
                                           l127 25E6                                             l320 2102  
                                           l144 2708                                             l321 211A  
                                           l330 26DE                                             l324 214A  
                                           l503 26CA                                             l512 26AC  
                                           l506 26C0                                             l362 268E  
                                           l515 26B6                                             l371 2684  
                                           l452 2648                                             l621 26EE  
                                           l509 26D4                                             l365 26A2  
                                           l630 22E6                                             l550 1EE6  
                                           l446 1E6A                                             l470 2046  
                                           l614 26E8                                             l623 26F0  
                                           l359 2698                                             l471 205E  
                                           l455 2670                                             l368 267A  
                                           l296 1DEE                                             l616 26EA  
                                           l465 21A2                                             l625 26F2  
                                           l449 2618                                             l722 1930  
                                           l474 208E                                             l618 26EC  
                                           l562 1FCC                                             l636 2330  
                                           l725 1972                                             l733 0754  
                                           l821 0C68                                             l805 0A6A  
                                           l661 136C                                             l646 1BCC  
                                           l727 19AC                                             l735 075C  
                                           l760 0EEC                                             l664 1392  
                                           l568 1F5E                                             l753 0992  
                                           l762 0EF4                                             l850 06B2  
                                           l771 0FB4                                             l819 0C06  
                                           l835 0220                                             l667 149C  
                                           l772 0FFC                                             l781 0CA2  
                                           l861 2028                                             l685 172A  
                                           l862 2030                                             l791 0E6A  
                                           l783 0CAA                                             l776 1004  
                                           l865 25CA                                             l796 09CC  
                                           l798 09D4                                             l992 1600  
                                           l979 1326                                    __CFG_CPD$OFF 000000  
        __end_of_EUSART2_SetFramingErrorHandler 269A         __size_of_EUSART2_SetFramingErrorHandler 000A  
                _EUSART2_SetFramingErrorHandler 2690                                             _abs 2402  
                                           _pad 18EC                         __size_of_PMD_Initialize 001C  
                                           tosl 000FFD                                             wreg 000FE8  
                                  __CFG_ZCD$OFF 000000                                            ?_abs 0017  
                                          l1310 181A                                            l1303 17FA  
                                          l1320 18EA                                            l1313 18CA  
                                          l1540 2438                                            l1612 1C62  
                                          l1620 23BC                                            l1543 2440  
                                          l5000 2060                                            l1633 229A  
                                          l5002 2072                                            l5010 208A  
                                          l1571 1196                                            l1643 20EC  
                                          l1627 25A4                                            l4300 1954  
                                          l5020 1B2E                                            l5012 22E8  
                                          l5004 2074                                            l5100 1F78  
                                          l1574 119E                                            l4310 241C  
                                          l4230 20F0                                            l4302 1980  
                                          l1638 20E4                                            l5030 1B86  
                                          l5022 1B42                                            l5014 22FC  
                                          l5110 1EE8                                            l5006 2084  
                                          l5102 1F84                                            l1583 2524  
                                          l1591 224A                                            l4400 1528  
                                          l4240 2130                                            l4232 20F0  
                                          l4304 1994                                            l4312 24B6  
                                          l4320 2090                                            l5032 1B9A  
                                          l5024 1B5E                                            l5016 230C  
                                          l5040 1328                                            l5120 1F34  
                                          l5112 1EE8                                            l5008 2088  
                                          l5104 1F96                                            l5200 1D06  
                                          l1577 247C                                            l1649 24B4  
                                          l4330 24EE                                            l4410 15AA  
                                          l4402 153C                                            l4242 2140  
                                          l4234 2112                                            l4250 1BCE  
                                          l5034 1BAC                                            l5026 1B62  
                                          l5018 2310                                            l5042 132E  
                                          l5122 1F52                                            l5114 1EF6  
                                          l5106 1FAA                                            l5210 1D26  
                                          l5202 1D0A                                            l4340 11A0  
                                          l4404 154A                                            l4412 15B0  
                                          l4308 2402                                            l4244 2144  
                                          l4236 211C                                            l4260 1C50  
                                          l4252 1BE0                                            l4500 082A  
                                          l4420 172C                                            l4316 2442  
                                          l4324 20C6                                            l5028 1B66  
                                          l5060 13AA                                            l5052 137A  
                                          l5044 134A                                            l5132 1632  
                                          l5140 1668                                            l5124 1602  
                                          l5116 1F04                                            l5108 1FAE  
                                          l5212 1D3A                                            l5204 1D0E  
                                          l1597 24EC                                            l4334 25A6  
                                          l4350 11E4                                            l4342 11A4  
                                          l4414 15C0                                            l4406 1578  
                                          l4238 212E                                            l4246 2146  
                                          l4254 1BF2                                            l4270 239C  
                                          l4510 08E6                                            l4502 0830  
                                          l4430 1780                                            l4422 1738  
                                          l4326 20D8                                            l5038 1BC2  
                                          l5070 145E                                            l5054 1380  
                                          l5046 1364                                            l5062 13AE  
                                          l5150 1690                                            l5142 167A  
                                          l5134 164A                                            l5126 1606  
                                          l5118 1F2E                                            l5214 1D52  
                                          l5206 1D0E                                            l4336 25C2  
                                          l4360 123A                                            l4352 1204  
                                          l4344 11B2                                            l4416 15E0  
                                          l4408 1598                                            l4248 26D8  
                                          l4256 1BFC                                            l4264 237A  
                                          l4272 224C                                            l4520 0934  
                                          l4512 0900                                            l4504 0894  
                                          l4440 17F4                                            l4432 1792  
                                          l4424 1756                                            l4600 0E00  
                                          l5072 1494                                            l5064 13EA  
                                          l5056 138C                                            l5160 1714  
                                          l5144 167E                                            l5152 16B2  
                                          l5136 164E                                            l5128 161A  
                                          l5216 1D66                                            l5208 1D22  
                                          l5170 229C                                            l4370 12BC  
                                          l4362 124E                                            l4354 1208  
                                          l4346 11D2                                            l4258 1C1A  
                                          l4266 2386                                            l4274 2258  
                                          l4290 190E                                            l4522 0946  
                                          l4506 08AE                                            l4514 090E  
                                          l4434 17C0                                            l4426 175E  
                                          l4450 1864                                            l4442 181C  
                                          l4602 0E1A                                            l4282 247E  
                                          l4610 0994                                            l5322 01E0  
                                          l5066 140A                                            l5058 1398  
                                          l5162 1722                                            l5154 16CA  
                                          l5146 1682                                            l5138 1662  
                                          l5090 25F8                                            l5082 25E8  
                                          l5180 22C0                                            l4460 21FE  
                                          l4700 10DE                                            l5324 10C8  
                                          l4380 1306                                            l4372 12BE  
                                          l4364 125C                                            l4356 1214  
                                          l4348 11D6                                            l4268 2398  
                                          l4276 225C                                            l4292 191C  
                                          l4524 0952                                            l4516 0920  
                                          l4508 08CC                                            l4540 0EA0  
                                          l4532 0E6C                                            l4436 17E0  
                                          l4428 1772                                            l4452 1892  
                                          l4444 183A                                            l4604 0E34  
                                          l4620 09F2                                            l4612 09A4  
                                          l5068 1428                                            l5156 16EE  
                                          l5148 1688                                            l5092 25FC  
                                          l5084 25EC                                            l5182 22DC  
                                          l4462 2212                                            l4710 1168  
                                          l4374 12D0                                            l4366 126E  
                                          l4358 1232                                            l4390 14D0  
                                          l4278 228E                                            l4294 1928  
                                          l4286 18EC                                            l4526 095A  
                                          l4518 092E                                            l4470 06B4  
                                          l4550 0F16                                            l4542 0EB4  
                                          l4534 0E7E                                            l4438 17E2  
                                          l4454 18B2                                            l4446 1842  
                                          l4606 0E42                                            l4630 0A32  
                                          l4622 0A12                                            l4614 09A6  
                                          l5094 1E6C                                            l5078 149A  
                                          l5158 1702                                            l5166 1728  
                                          l5086 25F0                                            l5190 1CFA  
                                          ?_pad 0017                                            l5176 22AC  
                                          l4464 2240                                            l4712 117A  
                                          l4704 1116                                            l4368 129C  
                                          l4376 12D6                                            l4392 14D4  
                                          l4384 149E                                            l4296 193C  
                                          l4288 18FA                                            l4528 096A  
                                          l4480 072E                                            l4472 06D4  
                                          l4560 0F8E                                            l4552 0F2A  
                                          l4544 0EBC                                            l4536 0E86  
                                          l4456 18C4                                            l4448 1856  
                                          l4640 0AB0                                            l4632 0A4E  
                                          l4624 0A1A                                            l4616 09C0  
                                          l4720 0150                                            l5088 25F4  
                                          l5096 1F60                                            l5192 1CFC  
                                          l5184 1CF2                                            l5178 22BC  
                                          l4466 2244                                            l4458 21FA  
                                          l4378 12E6                                            l4394 14E2  
                                          l4386 14A2                                            l4298 1950  
                                          l4490 078A                                            l4482 0748  
                                          l4474 06FC                                            l4570 0FDA  
                                          l4562 0F92                                            l4554 0F2E  
                                          l4546 0ECA                                            l4538 0E98  
                                          l4650 0B20                                            l4634 0A5E  
                                          l4626 0A24                                            l4618 09EA  
                                          l4810 0594                                            l4802 0522  
                                          l4730 0182                                            l4722 015E  
                                          l5098 1F64                                            l5194 1CFE  
                                          l5186 1CF6                                            l4708 1156  
                                          l4396 1502                                            l4388 14B0  
                                          l4492 0792                                            l4484 0764  
                                          l4476 071C                                            l4572 0FDE  
                                          l4564 0F96                                            l4556 0F4C  
                                          l4580 0C96                                            l4660 0BC4  
                                          l4652 0B26                                            l4644 0AEA  
                                          l4628 0A2A                                            l4820 0640  
                                          l4812 05D0                                            l4804 0548  
                                          l4740 01A0                                            l4732 0194  
                                          l4724 0170                                            l4900 1CD4  
                                          l5196 1D00                                            l5188 1CF8  
                                          l4398 1520                                            l4494 079C  
                                          l4486 0776                                            l4478 072C  
                                          l4558 0F58                                            l4590 0D60  
                                          l4582 0CD2                                            l4574 0C6A  
                                          l4670 0C2A                                            l4662 0BDE  
                                          l4654 0B2C                                            l4646 0AFC  
                                          l4638 0A9E                                            l4822 0654  
                                          l4806 056E                                            l4726 0174  
                                          l4718 012A                                            l4910 261A  
                                          l4902 1CD6                                            l5198 1D02  
                                          l4680 101E                                            l4496 07A2  
                                          l4488 0784                                            l4568 0FC6  
                                          l4592 0D66                                            l4584 0CDA  
                                          l4576 0C7A                                            l4672 0C40  
                                          l4664 0BF8                                            l4648 0B10  
                                          l4656 0B8A                                            l4808 0586  
                                          l4816 060C                                            l4760 0256  
                                          l4752 01B8                                            l4744 01A6  
                                          l4736 019A                                            l4728 0180  
                                          l4832 067A                                            l4920 1E14  
                                          l4912 1DF0                                            l4904 1CD8  
                                          l4682 1022                                            l4498 0824  
                                          l4594 0D6C                                            l4586 0CE4  
                                          l4578 0C7C                                            l4666 0C14  
                                          l4658 0BA6                                            l4834 06A0  
                                          l4818 0632                                            l4826 0660  
                                          l4770 02D6                                            l4762 028C  
                                          l4754 020E                                            l4850 1FCE  
                                          l4930 1E30                                            l4922 1E18  
                                          l4914 1DF4                                            l4906 2706  
                                          l4692 1082                                            l4684 1040  
                                          l4676 1006                                            l4588 0CEA  
                                          l4596 0DD0                                            l4668 0C1A  
                                          l4828 066E                                            l4780 037E  
                                          l4764 029A                                            l4756 022E  
                                          l4748 01AC                                            l4852 1FD6  
                                          l4932 1E3C                                            l4924 1E1C  
                                          l4916 1E00                                            l4860 2672  
                                          l4940 1D82                                            l4908 25CC  
                                          l4694 1098                                            l4686 1078  
                                          l4678 101A                                            l4598 0DE2  
                                          l4790 045A                                            l4782 03C6  
                                          l4774 0320                                            l4766 02A8  
                                          l4758 0230                                            l4854 1FE4  
                                          l4870 26A4                                            l4934 1E66  
                                          l4926 1E20                                            l4918 1E10  
                                          l4862 2690                                            l4950 1DA4  
                                          l4942 1D92                                            l4696 10A0  
                                          l4688 107C                                            l4768 02C8  
                                          l4776 0332                                            l4856 200A  
                                          l4880 2588                                            l4872 26C2  
                                          l4928 1E24                                            l4864 2686  
                                          l4952 1DA8                                            l4944 1D98  
                                          l4936 1D72                                            l4960 2602  
                                          l4698 10A8                                            l4794 047A  
                                          l4786 03FE                                            l4778 0358  
                                          l4874 26B8                                            l4866 269A  
                                          l4858 267C                                            l4954 1DB4  
                                          l4946 1D9C                                            l4938 1D76  
                                          l4890 1CC6                                            l4796 04A0  
                                          l4788 0424                                            l4980 2180  
                                          l4972 214C                                            l4964 2632  
                                          l4876 26CC                                            l4868 26AE  
                                          l4956 1DC0                                            l4948 1DA0  
                                          l4892 1CC8                                            l4884 1C64  
                                          l4798 04EA                                            l4878 257E  
                                          l4990 21A0                                            l4982 2190  
                                          l4974 214C                                            l4958 1DEA  
                                          l4894 1CCA                                            l4886 1C8C  
                                          l4984 2194                                            l4976 215E  
                                          l4896 1CCC                                            l4888 1C9C  
                                          l4968 265E                                            l4986 2198  
                                          l4978 217E                                            l4898 1CD2  
                                          l4994 2034                                            l4988 219C  
                                          l4996 2034                                            l4998 2056  
                                          STR_1 FE11                                            STR_2 FF9C  
                                          STR_3 FEB6                                            STR_4 FFE1  
                                          STR_5 FFED                                            STR_6 FF48  
                                          STR_7 FE81                                            STR_8 FE4A  
                                          STR_9 FF05                                            _LATA 000F83  
                                          _LATB 000F84                                            _LATC 000F85  
                                          u4000 24B0                                            _LATD 000F86  
                                          _LATE 000F87                                            u4010 18FA  
                                          u4011 18F6                                            u4020 191C  
                                          u4100 20C0                                            u4021 1918  
                                          u4101 20BA                                            u4030 1972  
                                          u4110 20C2                                            u4031 196E  
                                          u4200 129C                                            u4040 1980  
                                          u4120 20D8                                            u5000 0332  
                                          u4201 1298                                            u4041 197C  
                                          u4121 20D4                                            u5001 032E  
                                          u4130 251E                                            u4210 12E6  
                                          u4050 241C                                            u5010 0358  
                                          u4131 2518                                            u4211 12E2  
                                          u4051 2418                                            u5011 0354  
                                          u4140 2520                                            u4220 14B0  
                                          u4300 1780                                            u4060 24E6  
                                          u5020 037E                                            u5100 2618  
                                          u4221 14AC                                            u4301 177C  
                                          u4061 24E0                                            u5021 037A  
                                          u4150 11B2                                            u4230 14E2  
                                          u4310 17C0                                            u4070 24E8  
                                          u5030 0424                                            u5110 2646  
                                          u4151 11AE                                            u4231 14DE  
                                          u4311 17BC                                            u5031 0420  
                                          u5111 2640                                            u4160 11E4  
                                          u4240 1520                                            u4400 072C  
                                          u4320 183A                                            u4080 2476  
                                          u5040 04A0                                            u5200 1B86  
                                          u5120 2648                                            u4161 11E0  
                                          u4241 151C                                            u4401 0728  
                                          u4321 1836                                            u4081 2470  
                                          u5041 049C                                            u5201 1B82  
                                          u4250 154A                                            u4410 0748  
                                          u4330 1864                                            u4090 2478  
                                          u5050 0548                                            u5210 1B9A  
                                          u5130 266E                                            u4171 120E  
                                          u4251 1546                                            u4411 0744  
                                          u4331 1860                                            u5051 0544  
                                          u5211 1B96                                            u5131 2668  
                                          u4180 1232                                            u4260 1578  
                                          u4500 092E                                            u4420 0776  
                                          u4340 1892                                            u5060 056E  
                                          u5220 1BBE                                            u5140 215E  
                                          u5300 1FCC                                            u4181 122E  
                                          u4261 1574                                            u4501 092A  
                                          u4421 0772                                            u4341 188E  
                                          u5061 056A                                            u5221 1BBA  
                                          u5141 215A                                            u5301 1FC8  
                                          u4350 2212                                            u4190 125C  
                                          u4270 15C0                                            u4510 0946  
                                          u4430 0784                                            u5070 0632  
                                          u5150 2190                                            u5230 137A  
                                          u5310 1F52                                            u4351 220E  
                                          u4191 1258                                            u4271 15BC  
                                          u4511 0942                                            u4431 0780  
                                          u5071 062E                                            u5151 218C  
                                          u5231 1376                                            u5311 1F4E  
                                          u5400 22DC                                            u4360 2240  
                                          u4440 08AE                                            u4600 0FC2  
                                          u5080 2028                                            u5240 13AA  
                                          u5320 161A                                            u5160 2046  
                                          u5136 2670                                            u5401 22D8  
                                          u4361 223C                                            u4441 08AA  
                                          u4601 0FBE                                            u4521 0E76  
                                          u4281 1732                                            u5081 2024  
                                          u5241 13A6                                            u5321 1616  
                                          u5161 2042                                            u4450 08CC  
                                          u4370 06E4                                            u4610 0FFC  
                                          u4530 0E98                                            u4290 1756  
                                          u5250 13EA                                            u5330 162E  
                                          u5170 2056                                            u5090 2616  
                                          u5410 1D22                                            u4451 08C8  
                                          u4371 06DE                                            u4611 0FF8  
                                          u4531 0E94                                            u4291 1752  
                                          u5251 13E6                                            u5331 162A  
                                          u5171 2052                                            u5091 2610  
                                          u5411 1D1E                                            u3900 2112  
                                          u4460 08E6                                            u4380 06E6  
                                          u4540 0ECA                                            u4620 0C7A  
                                          u4700 09C0                                            u5260 145E  
                                          u5340 1662                                            u5180 2084  
                                          u5420 1D3A                                            _PMD0 000EE1  
                                          u3901 210E                                            u4461 08E2  
                                          u4541 0EC6                                            u4621 0C76  
                                          u4701 09BC                                            u5261 145A  
                                          u5341 165E                                            u5181 2080  
                                          u5421 1D36                                            _PMD1 000EE2  
                                          u3910 2140                                            u4470 0900  
                                          u4390 06FC                                            u4550 0EE8  
                                          u4630 0C96                                            u4710 09EA  
                                          u5190 2330                                            u5270 1494  
                                          u5350 167A                                            _PMD2 000EE3  
                                          u3911 213C                                            u4471 08FC  
                                          u4391 06F8                                            u4551 0EE4  
                                          u4631 0C92                                            u4711 09E6  
                                          u5191 232C                                            u5271 1490  
                                          u5351 1676                                            _PMD3 000EE4  
                                          u3920 1BE0                                            u4480 090E  
                                          u4560 0F12                                            u4640 0DE2  
                                          u4800 0BA6                                            u4720 0A4E  
                                          u5360 16A0                                            u5280 1F78  
                                          _PMD4 000EE5                                            u3921 1BDC  
                                          u4481 090A                                            u4561 0F0E  
                                          u4641 0DDE                                            u4801 0BA2  
                                          u4721 0A4A                                            u5361 169A  
                                          u5281 1F74                                            _PMD5 000EE6  
                                          u3930 1BF2                                            u4490 0920  
                                          u4570 0F4C                                            u4650 0E00  
                                          u4810 0BC4                                            u4730 0A98  
                                          u5370 16CA                                            u5290 1FAA  
                                          u3931 1BEE                                            u4491 091C  
                                          u4571 0F48                                            u4651 0DFC  
                                          u4811 0BC0                                            u4731 0A92  
                                          u5371 16C6                                            u5291 1FA6  
                                          u4900 1152                                            u3940 1C1A  
                                          u4580 0F7A                                            u4660 0E1A  
                                          u4820 0BDE                                            u4740 0A9A  
                                          u5380 16DA                                            u3941 1C16  
                                          u4661 0E16                                            u4821 0BDA  
                                          u5381 16D4                                            u4910 1168  
                                          u3950 1C50                                            u4590 0FB4  
                                          u4670 0E34                                            u4830 0BF8  
                                          u4750 0AB0                                            u5390 1702  
                                          u5366 16A2                                            u4911 1164  
                                          u3951 1C4C                                            u4591 0FB0  
                                          u4671 0E30                                            u4831 0BF4  
                                          u4751 0AAC                                            u5391 16FE  
                                          u4920 117A                                            u3960 23BC  
                                          u4680 0E42                                            u4840 0C06  
                                          u4760 0AE4                                            u4921 1176  
                                          u3961 23B8                                            u4681 0E3E  
                                          u4841 0C02                                            u4761 0ADE  
                                          u3890 2102                                            u3970 227E  
                                          u4850 0C14                                            u4770 0AE6  
                                          u4690 09A4                                            u4930 0150  
                                          u5386 16DC                                            u3891 20FE  
                                          u4587 0F70                                            u4851 0C10  
                                          u4691 09A0                                            u4931 014C  
                                          u4860 1040                                            u3980 228E  
                                          u4780 0AFC                                            u4940 0220  
                                          u4861 103C                                            u3981 228A  
                                          u4781 0AF8                                            u4941 021C  
                                          u4870 1078                                            u3990 24AE  
                                          u4790 0B64                                            u4950 022E  
                                          u4871 1074                                            u3991 24A8  
                                          u4951 022A                                            u4880 1094  
                                          u4960 0256                                            u4881 1090  
                                          u3977 2274                                            u4961 0252  
                                          u4890 1150                                            u4970 029A  
                                          u4891 114A                                            u4795 0B52  
                                          u4971 0296                                            u4980 0318  
                                          u4981 0312                                            u4990 031A  
                                          _WPUA 000F10                                            _WPUB 000F18  
                                          _WPUC 000F20                                            _WPUD 000F25  
                                          _WPUE 000F2D                           ??_EUSART2_Receive_ISR 0001  
                                 _EUSART1_Write 2032                                   __CFG_FCMEN$ON 000000  
                                 _EUSART2_Write 20EE                                            abs@a 0017  
                                          _dbuf 01C8                                            _atoi 1006  
                                          _main 1CF2                                            _dtoa 06B4  
                                 ?_EUSART1_Read 0001                                            _prec 008C  
                                          _nout 0088                                            pad@i 001E  
                                          pad@p 001B                                            fsr0h 000FEA  
                                          fsr1h 000FE2                                            indf0 000FEF  
                                          fsr2h 000FDA                                            fsr0l 000FE9  
                                          indf1 000FE7                                            indf2 000FDF  
                                          fsr1l 000FE1                                            pad@w 0020  
                                          fsr2l 000FD9                                            _stoa 0E6C  
                                          btemp 005A                                            _utoa 0C6A  
                                          _xtoa 0994                                            prodh 000FF4  
                                          prodl 000FF3                                            start 0126  
                  __end_of_EUSART2_Transmit_ISR 237A                                   __CFG_CSWEN$ON 000000  
                           UART1_Write_string@i 000B                  fp__EUSART1_DefaultErrorHandler 0000  
                                  ___param_bank 000000                                   __CFG_SCANE$ON 000000  
                                         ??_abs 0019                                           ??_pad 001D  
                __size_of_OSCILLATOR_Initialize 0018                   __end_of_OSCILLATOR_Initialize 2632  
                         _eusart1RxStatusBuffer 0164                                 __end_of___aodiv 1328  
                                         ?_atoi 000C                                           ?_main 0001  
                                         ?_dtoa 0022                                 __end_of___aomod 1602  
                                         STR_10 FF28                                           STR_11 FFB5  
                                         STR_12 FFDD                                           STR_13 FF65  
                                         STR_14 FFF6                                           STR_15 FEE1  
                                         STR_16 FFCC                                           STR_17 FF81  
                                 __CFG_WDTE$OFF 000000                                ?_ClearModbusData 0001  
                                         ?_stoa 0010                                           ?_utoa 0022  
                               __end_of___lodiv 181C                                           ?_xtoa 0022  
                               __end_of___lomod 18EC                                  __CFG_DEBUG$OFF 000000  
                                         i2l150 0064                                           i2l152 009E  
                                         i2l153 0112                                           i2l154 00D8  
                                         i2l500 2704                                           i2l333 2374  
                                         i2l350 270A                                           i2l343 1A6C  
                                         i2l159 0112                                           i2l336 2378  
                                         i2l353 26E6                                           i2l347 2550  
                                         i2l356 26F8                                           i2l480 2400  
                                         i2l491 257C                                           i2l477 23FC  
                                         i2l494 270C                                           i2l487 1B2C  
                                         i2l497 26FE                     __size_of_EUSART1_is_tx_done 0014  
                                         _OSCEN 000EDC                                    vfpfcnvrt@fmt 004B  
                                  vfpfcnvrt@llu 00AE                                           _TRISA 000F88  
                                         _TRISB 000F89                                           _TRISC 000F8A  
                                         _TRISD 000F8B                                           _TRISE 000F8C  
                                         _Debug 0094                                   __CFG_WRT0$OFF 000000  
                                 __CFG_WRT1$OFF 000000                                   __CFG_WRT2$OFF 000000  
                                 __CFG_WRT3$OFF 000000                            _EUSART1_Transmit_ISR 23BE  
                                __CFG_EBTR0$OFF 000000                                  __CFG_EBTR1$OFF 000000  
                                __CFG_EBTR2$OFF 000000                                  __CFG_EBTR3$OFF 000000  
                                 __CFG_WRTB$OFF 000000                                   __CFG_WRTC$OFF 000000  
                                 __CFG_WRTD$OFF 000000                                  __CFG_EBTRB$OFF 000000  
                                         _flags 0056                                           _fputc 1BCE  
                               __end_of_isalpha 247E                                           _fputs 237A  
                               __end_of_isdigit 2526                              __CFG_MCLRE$EXTMCLR 000000  
                                         atoi@n 0019                                           pad@fp 0017  
                                         atoi@s 000C                                           _width 008A  
                                         _putch 26D6                                           dtoa@d 0024  
                                         dtoa@i 0044                                           dtoa@n 003C  
                                         dtoa@p 0036                                           dtoa@s 003A  
                                         dtoa@w 0038                                 __end_of_islower 24B6  
                               __end_of_isspace 224C                                  ?_EUSART1_Write 0001  
                                ?_EUSART2_Write 0001                                 __end_of_isupper 24EE  
                                         pclath 000FFA                                           tablat 000FF5  
                                   _ClearRxBuff 22E8                                  ??_EUSART1_Read 0005  
                                         plusw1 000FE3                                           plusw2 000FDB  
                                         stoa@i 001C                                           stoa@l 0024  
                                         stoa@p 0022                                           stoa@s 0012  
                                         stoa@w 001E                                           ttemp5 005B  
                                         ttemp6 005E                                           ttemp7 0062  
                                         utoa@d 0024                                           utoa@i 0040  
                                         utoa@n 0038                                           utoa@p 0034  
                                         utoa@w 0036                                           status 000FD8  
                                    _ModDataCnt 0090                                           wtemp8 005B  
                                         xtoa@c 0047                                           xtoa@d 0024  
                                         xtoa@i 0045                                           xtoa@n 003D  
                                         xtoa@p 0039                                           xtoa@w 003B  
                                         xtoa@x 002C                                 __end_of_toupper 20EE  
                              ___lodiv@dividend 0005           fp__EUSART1_DefaultFramingErrorHandler 0000  
    __end_of_EUSART1_DefaultFramingErrorHandler 270E     __size_of_EUSART1_DefaultFramingErrorHandler 0002  
          ??_EUSART1_DefaultFramingErrorHandler 0001             ?_EUSART1_DefaultFramingErrorHandler 0001  
            _EUSART1_DefaultFramingErrorHandler 270C                                  checkCRC@crcLow 01EA  
         __end_of_EUSART2_SetTxInterruptHandler 267C          __size_of_EUSART2_SetTxInterruptHandler 000A  
                 _EUSART2_SetTxInterruptHandler 2672                                    _toupper$1885 0011  
                               __initialization 21A4                                    __end_of_atoi 11A0  
                    __end_of_EUSART1_Initialize 1E6C                                    __end_of_main 1D72  
                                  __end_of_dtoa 0994                       __size_of_InitialiseString 007C  
                                  __end_of_stoa 1006                                    __end_of_utoa 0E6C  
                                  __end_of_xtoa 0C6A                     ?_INTERRUPT_InterruptManager 0001  
                              __end_of_ModbusRx 172C                                          ??_atoi 000E  
                                        ??_main 0056                                          ??_dtoa 002C  
                                        ??_stoa 0014                                          ??_utoa 002C  
                                        ??_xtoa 002D                                   __activetblptr 000003  
           __end_of_EUSART2_DefaultErrorHandler 26FA                     _EUSART2_DefaultErrorHandler 26F4  
                                    _ModbusData 0100                           ?_EUSART1_Transmit_ISR 0001  
                              ___lodiv@quotient 0015                      __end_of_EUSART2_Initialize 1DF0  
                      _eusart2TxBufferRemaining 00E2                                          ?_fputc 0007  
                                        ?_fputs 0010                                          _ANSELA 000F11  
                                        ?_putch 0001                                          _ANSELB 000F19  
                                        _ANSELC 000F21                                          _ANSELD 000F26  
                                        _ANSELE 000F2E                                          _RC1REG 000F99  
                                        _RC2REG 000E99                                          _RC1STA 000F9D  
                                        _RC2STA 000E9D                                          _RB6PPS 000EF5  
                                        _ODCONA 000F0F                                          _ODCONB 000F17  
                                        _ODCONC 000F1F                                          _RC6PPS 000EFD  
                                        _ODCOND 000F24                                          _ODCONE 000F2C  
                  __size_of_EUSART1_is_rx_ready 0018                                  __CFG_WDTCCS$SC 000000  
                                        i2l4070 0028                                          i2l4080 00AC  
                                        i2l4072 0038                                          i2l4082 00BA  
                                        i2l4074 0046                                          i2l4084 00E6  
                                        i2l4076 0072                                          i2l4068 001A  
                                        i2l4086 00F4                                          i2l4078 0080  
                                        i2l3640 2536                                          i2l3642 2538  
                                        i2l3660 2562                                          i2l3644 2548  
                                        i2l3662 2564                                          i2l3806 26FA  
                                        i2l3646 254C                                          i2l3638 2526  
                                        i2l3750 26E0                                          i2l3664 2574  
                                        i2l3808 2700                                          i2l3752 26F4  
                                        i2l3920 235A                                          _INLVLA 000F0D  
                                        i2l3666 2578                                          i2l3658 2552  
                                        i2l3930 19CE                                          i2l3922 236A  
                                        i2l3914 2332                                          _INLVLB 000F15  
                                        _INLVLC 000F1D                                          i2l3940 1A2E  
                                        i2l3932 19DE                                          i2l3924 236E  
                                        i2l3916 2344                                          _INLVLD 000F22  
                                        _INLVLE 000F2A                                          i2l3950 23E0  
                                        i2l3942 1A4A                                          i2l3934 19F6  
                                        i2l3926 19AE                                          i2l3918 2356  
                                        i2l3960 1A7E                                          i2l3952 23E2  
                                        i2l3944 1A68                                          i2l3936 1A06  
                                        i2l3928 19BE                                          i2l3970 1AD4  
                                        i2l3962 1A8C                                          i2l3954 23F2  
                                        i2l3946 23BE                                          i2l3938 1A16  
                                        i2l3972 1AEE                                          i2l3964 1A9C  
                                        i2l3956 23F6                                          i2l3948 23D0  
                                        i2l3974 1B0A                                          i2l3966 1AB6  
                                        i2l3958 1A6E                                          i2l3976 1B28  
                                        i2l3968 1AC4                                          _TABLAT 000FF5  
                                        _OSCFRQ 000EDE                                   vfpfcnvrt@done 00AA  
                  __size_of_EUSART1_is_tx_ready 0018                                          _NVMDAT 000F80  
                                        _RX1PPS 000EB5                                          _RX2PPS 000E8D  
                                        _TX1REG 000F9A                                          _TX2REG 000E9A  
                              __end_of_checkCRC 149E                                          _TX1STA 000F9E  
                                        _TX2STA 000E9E                                          _RXMode 26EE  
                                        _TXMode 26E8                                          _RXStat 0093  
                                __CFG_PWRTE$OFF 000000                              _UART1_Write_string 1F60  
                                __CFG_XINST$OFF 000000                                    vfprintf@cfmt 0053  
                     __CFG_RSTOSC$HFINTOSC_1MHZ 000000                              AddRxBuffToModBus@i 0006  
                                     ??___aodiv 0015                                       ??___aomod 0015  
                                        ___wmul 25A6                                  __CFG_STVREN$ON 000000  
                                     ??___lodiv 0015                                       ??___lomod 0015  
                           ?_UART1_Write_string 0006                        ?_EUSART1_SetErrorHandler 0005  
                                        clear_0 21CA                                          clear_1 21D6  
                                        clear_2 21E2                                          _rxData 0200  
                   _EUSART2_FramingErrorHandler 00D7                                          _printf 257E  
                                        pad@buf 0019                ??_EUSART1_SetOverrunErrorHandler 0007  
               ?_EUSART1_SetOverrunErrorHandler 0005                                          dtoa@fp 0022  
                                        _strlen 224C                                   _ExpectedBytes 00EA  
                                        fputc@c 0007                                  _PMD_Initialize 25CC  
                                        fputs@c 0014                                          fputs@i 0015  
                                        fputs@s 0010                                       ??_isalpha 0007  
                                     ??_isdigit 0007                                   ??_PrintModbus 0055  
                                     ??_islower 0007                                    __mediumconst FE10  
                                     ??_isspace 0007                                          tblptrh 000FF7  
                                     ??_isupper 0007                                          tblptrl 000FF6  
                                        tblptru 000FF8                            _EUSART2_Transmit_ISR 2332  
                                        stoa@cp 0020                                          stoa@fp 0010  
                              __end_of_vfprintf 2032                                 ??_EUSART1_Write 0005  
                                        utoa@fp 0022                                 ??_EUSART2_Write 0005  
                                        xtoa@fp 0022                                 _eusart1RxBuffer 0264  
                                     ??_toupper 000D                            ??_UART1_Write_string 000A  
                 __size_of_INTERRUPT_Initialize 0004                                 _eusart2RxBuffer 0078  
                               _eusart1TxBuffer 0060                               _SYSTEM_Initialize 25E8  
                               _eusart2TxBuffer 0080                                      __accesstop 0060  
                       __end_of__initialization 21F0                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                                 checkCRC@crcHigh 01E8  
                       ??_EUSART2_RxDataHandler 0001                  __size_of_EUSART1_RxDataHandler 002C  
                 __end_of_EUSART1_RxDataHandler 257E                                  __pcstackCOMRAM 0001  
                                  __pidataBANK0 264A                             ??_SYSTEM_Initialize 0007  
                                 __end_of_fputc 1C64                                   __end_of_fputs 23BE  
                ?_EUSART2_SetTxInterruptHandler 0005                                   __end_of_putch 26E0  
                        __end_of_PMD_Initialize 25E8                            __end_of_EUSART1_Read 21A4  
                        ??_EUSART1_Transmit_ISR 0001                        ?_EUSART2_SetErrorHandler 0005  
                         ?_EUSART2_Transmit_ISR 0001                     __end_of_EUSART1_Receive_ISR 1B2E  
                                       ??_fputc 000B                       __end_of_SYSTEM_Initialize 2602  
                                       ??_fputs 0014                                         ??_putch 0006  
                                 _eusart1RxHead 0058                                   _eusart1TxHead 0099  
                                 _eusart2RxHead 0059                                   _eusart1RxTail 0097  
                                 _eusart2TxHead 009E                                      __pbssBANK0 0060  
                                    __pbssBANK1 0100                                      __pbssBANK2 0200  
                                 _eusart2RxTail 009C                                   _eusart1TxTail 0098  
             _EUSART1_TxDefaultInterruptHandler 00DB                                   _eusart2TxTail 009D  
               ??_EUSART1_SetRxInterruptHandler 0007                             __end_of_PrintModbus 1F60  
              ??_EUSART2_SetFramingErrorHandler 0007                 ?_EUSART2_SetFramingErrorHandler 0005  
                                     ?_ModbusRx 0001                                         ?_RXMode 0001  
                                       ?_TXMode 0001                 __end_of_EUSART1_SetErrorHandler 26D6  
                              _InitialiseString 1E6C                                         ?___wmul 0005  
                               __CFG_PPS1WAY$ON 000000                                         ?_printf 00BC  
                               ?_PMD_Initialize 0001                                         ?_strlen 0005  
        __end_of_EUSART1_SetFramingErrorHandler 26CC         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler 26C2                           _eusart2RxStatusBuffer 0070  
                                     ?_checkCRC 0001                    ?_EUSART1_DefaultErrorHandler 0001  
                                       _SP1BRGH 000F9C                                         _SP1BRGL 000F9B  
                                       _SP2BRGH 000E9C                                         _SP2BRGL 000E9B  
                                       _OSCCON1 000ED8                                         _OSCCON3 000EDA  
                   __end_of_EUSART2_Receive_ISR 1A6E                              __size_of_vfpfcnvrt 058A  
                                       _TBLPTRH 000FF7                                         _TBLPTRL 000FF6  
                                       _TBLPTRU 000FF8                                         _NVMADRH 000F7F  
                                       _NVMADRL 000F7E                                         _OSCTUNE 000EDD  
                                       _NVMCON2 000F82                                         _SLRCONA 000F0E  
                                       _SLRCONB 000F16                                         _SLRCONC 000F1E  
                                       _SLRCOND 000F23                                         _SLRCONE 000F2B  
                              ___lomod@dividend 0005                                    ?_ClearRxBuff 0001  
                                    ??_ModbusRx 0055                                         _ByteNum 008E  
                               __size_of_RXMode 0006                                 __size_of_TXMode 0006  
                                       __Hparam 0000                                         __Lparam 0000  
                fp__EUSART2_DefaultErrorHandler 0000                                         ___aodiv 11A0  
                                       ___aomod 149E                                 __size_of___wmul 0026  
                                       ___lodiv 172C                                         ___lomod 181C  
                                     ?_vfprintf 00B6                             _EUSART1_is_rx_ready 2632  
                    __end_of_EUSART1_is_tx_done 2672                                         __pcinit 21A4  
               __end_of_EUSART2_SetErrorHandler 26A4                                         __ramtop 0F00  
                           _EUSART1_is_tx_ready 2602                                         __ptext0 1CF2  
                                       __ptext1 1F60                                         __ptext2 26E8  
                                       __ptext3 2602                                         __ptext4 265E  
                                       __ptext5 2032                                         __ptext6 25E8  
                                       __ptext7 25CC                                         __ptext8 1C64  
                                       __ptext9 261A                                 __size_of_printf 0028  
                               __size_of_strlen 0050                                      ??_checkCRC 00C8  
         fp__EUSART2_DefaultOverrunErrorHandler 0000      __end_of_EUSART2_DefaultOverrunErrorHandler 26E8  
   __size_of_EUSART2_DefaultOverrunErrorHandler 0008            ??_EUSART2_DefaultOverrunErrorHandler 0001  
           ?_EUSART2_DefaultOverrunErrorHandler 0001              _EUSART2_DefaultOverrunErrorHandler 26E0  
                         _OSCILLATOR_Initialize 261A                          ??_EUSART2_Transmit_ISR 0001  
                                  __size_of_abs 0040                                    __size_of_pad 00C2  
                                       _isalpha 2442                                         _isdigit 24EE  
                            _EUSART1_Initialize 1DF0                                         _islower 247E  
                      ??_PIN_MANAGER_Initialize 0005                                         _isspace 21FA  
                                   _PrintModbus 1EE8                                         _isupper 24B6  
                 ??_EUSART1_DefaultErrorHandler 0001                                         atoi@neg 0012  
                    __size_of_SYSTEM_Initialize 001A                        __size_of_ClearModbusData 004C  
                                       _toupper 2090                            end_of_initialization 21F0  
                          ?_EUSART1_is_rx_ready 0001                             ?_EUSART1_Initialize 0001  
                          ?_EUSART1_is_tx_ready 0001                                         fputc@fp 0009  
                   _EUSART1_OverrunErrorHandler 00CF                                         fputs@fp 0012  
         __end_of_EUSART1_SetRxInterruptHandler 26B8          __size_of_EUSART1_SetRxInterruptHandler 000A  
                 _EUSART1_SetRxInterruptHandler 26AE                              _EUSART2_Initialize 1D72  
                             __end_of_vfpfcnvrt 06B4                                         postdec1 000FE5  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                         __size_of_EUSART1_Read 0058                                      ??_vfprintf 0053  
                          ??_EUSART1_Initialize 0007                           __CFG_WDTCPS$WDTCPS_31 000000  
                           ?_EUSART2_Initialize 0001                                         strlen@a 0007  
                                       strlen@s 0005                                ClearModbusData@i 0005  
                       fp__EUSART1_Transmit_ISR 0000                __size_of_EUSART1_SetErrorHandler 000A  
                           EUSART1_Write@txData 0005                                __CFG_FEXTOSC$OFF 000000  
                         ??_EUSART1_is_rx_ready 0005                            ??_EUSART2_Initialize 0007  
                         ??_EUSART1_is_tx_ready 0005                                    _EUSART1_Read 214C  
          __size_of_EUSART1_DefaultErrorHandler 0006                                  __end_of_RXMode 26F4  
                                __end_of_TXMode 26EE                          UART1_Write_string@data 0006  
                __size_of_EUSART2_RxDataHandler 002C                   __end_of_EUSART2_RxDataHandler 2552  
                  __end_of_INTERRUPT_Initialize 270A                                     vfpfcnvrt@ap 004D  
                                   vfpfcnvrt@cp 00A7                                     vfpfcnvrt@fp 0049  
                                   vfpfcnvrt@ll 009F                                  __end_of___wmul 25CC  
                        ?_OSCILLATOR_Initialize 0001                                  __end_of_printf 25A6  
                                __end_of_strlen 229C                             start_initialization 21A4  
                               ___lodiv@divisor 000D                                 ___lodiv@counter 001D  
               __size_of_PIN_MANAGER_Initialize 008E                                     __end_of_abs 2442  
                                   __end_of_pad 19AE                        __end_of_InitialiseString 1EE8  
 EUSART1_SetRxInterruptHandler@interruptHandler 0005   EUSART1_SetTxInterruptHandler@interruptHandler 0005  
 EUSART2_SetRxInterruptHandler@interruptHandler 0005   EUSART2_SetTxInterruptHandler@interruptHandler 0005  
                                   putch@txData 0006                           __end_of_EUSART1_Write 2090  
                   __size_of_UART1_Write_string 006E                           __end_of_EUSART2_Write 214C  
                        fp__EUSART1_Receive_ISR 0000                __size_of_EUSART2_SetErrorHandler 000A  
                                      ??_RXMode 0005                            __size_of_ClearRxBuff 004A  
                             ??_ClearModbusData 0005                                        ??_TXMode 0005  
        __end_of_EUSART2_SetOverrunErrorHandler 2690         __size_of_EUSART2_SetOverrunErrorHandler 000A  
                _EUSART2_SetOverrunErrorHandler 2686                                __CFG_LPBOREN$OFF 000000  
                                  ClearRxBuff@i 0006                               __size_of_ModbusRx 012A  
                                   vfprintf@fmt 00B8                                ??_PMD_Initialize 0005  
                                      ??___wmul 0009                           _EUSART1_RxDataHandler 2552  
                ?_EUSART1_SetRxInterruptHandler 0005                                     __pdataBANK0 00E3  
                                      ??_printf 0055                                        ??_strlen 0007  
                                _eusart1RxCount 0096                                  _eusart2RxCount 009B  
                                   __pbssCOMRAM 0056               _EUSART1_RxDefaultInterruptHandler 00D9  
                 __size_of_EUSART1_Transmit_ISR 0044                                   __pcstackBANK0 009F  
                                 __pcstackBANK1 01E8                                ___aodiv@dividend 0005  
                             __size_of_checkCRC 0176                         fp__EUSART2_Transmit_ISR 0000  
                             _AddRxBuffToModBus 1B2E                             EUSART2_Write@txData 0005  
               ??_EUSART1_SetTxInterruptHandler 0007                              ?_AddRxBuffToModBus 0001  
              ??_EUSART1_SetFramingErrorHandler 0007                 ?_EUSART1_SetFramingErrorHandler 0005  
               ??_EUSART2_SetRxInterruptHandler 0007                    __size_of_EUSART1_Receive_ISR 00C0  
                        fp__EUSART2_Receive_ISR 0000                                       _atoi$1794 0014  
                                     _atoi$1795 0018                                       _atoi$1796 0016  
                                     __pnvBANK0 00CD                             ??_AddRxBuffToModBus 0005  
                        _PIN_MANAGER_Initialize 1C64                                       _dtoa$1290 0034  
                                     __pintcode 0008                                   __pmediumconst FE10  
                                      ?___aodiv 0005                                        ?___aomod 0005  
                              ___aodiv@quotient 0017                                        ?___lodiv 0005  
                                      ?___lomod 0005               _EUSART2_TxDefaultInterruptHandler 00DF  
                  ??_INTERRUPT_InterruptManager 0001                               __size_of_vfprintf 0064  
                               ___lomod@divisor 000D                                        _BAUD1CON 000F9F  
                                      _BAUD2CON 000E9F                                       checkCRC@i 01F0  
                                     checkCRC@j 01EC                                 ___lomod@counter 0015  
         fp__EUSART1_DefaultOverrunErrorHandler 0000      __end_of_EUSART1_DefaultOverrunErrorHandler 2700  
   __size_of_EUSART1_DefaultOverrunErrorHandler 0006            ??_EUSART1_DefaultOverrunErrorHandler 0001  
           ?_EUSART1_DefaultOverrunErrorHandler 0001              _EUSART1_DefaultOverrunErrorHandler 26FA  
                                      ?_isalpha 0005                                        ?_isdigit 0005  
                          _EUSART1_ErrorHandler 00CD                    ?_EUSART2_DefaultErrorHandler 0001  
                                      ?_islower 0005                                        ?_isspace 0005  
                                  ?_PrintModbus 0001                       __end_of_AddRxBuffToModBus 1BCE  
                                      ?_isupper 0005                         _EUSART1_SetErrorHandler 26CC  
                            _EUSART1_is_tx_done 265E                                  __size_of_fputc 0096  
                                __size_of_fputs 0044                                        ?_toupper 000B  
                                __size_of_putch 000A                            _INTERRUPT_Initialize 2706  
                  __size_of_EUSART2_Receive_ISR 00C0                                  ___wmul@product 0009  
                                      _LATAbits 000F83         EUSART1_SetErrorHandler@interruptHandler 0005  
       EUSART2_SetErrorHandler@interruptHandler 0005                                        _LATDbits 000F86  
                           ?_EUSART1_is_tx_done 0001                                        _PIE3bits 000EC5  
                           __CFG_BORV$VBOR_2P45 000000                      UART1_Write_string@data_len 0008  
           __size_of_INTERRUPT_InterruptManager 011E                                        i2u320_40 2574  
                                      i2u320_41 2570                                        i2u350_40 23D0  
                                      i2u342_40 2344                                        i2u350_41 23CC  
                                      i2u342_41 2340                                        i2u351_40 23F2  
                                      i2u319_40 2548                                        i2u343_40 236A  
                                      i2u351_41 23EE                                        i2u319_41 2544  
                                      i2u343_41 2366                                        i2u352_40 1A8C  
                                      i2u344_40 19CE                                        i2u352_41 1A88  
                                      i2u344_41 19CA                                        i2u354_40 1AC4  
                                      i2u353_48 1AA2                                        i2u346_40 1A06  
                                      i2u345_48 19E4                                        i2u354_41 1AC0  
                                      i2u353_49 1AB6                                        i2u346_41 1A02  
                                      i2u345_49 19F6                                        i2u371_40 0028  
                                      i2u371_41 0024                                        i2u356_40 1B0A  
                                      i2u355_48 1ADA                                        i2u348_40 1A4A  
                                      i2u347_48 1A1C                                        i2u372_40 0038  
                                      i2u356_41 1B06                                        i2u355_49 1AEE  
                                      i2u348_41 1A46                                        i2u347_49 1A2E  
                                      i2u372_41 0034                                        i2u381_40 00E6  
                                      i2u380_48 00C0                                        i2u373_40 0046  
                                      i2u381_41 00E2                                        i2u380_49 00D4  
                                      i2u373_41 0042                                        _PIR3bits 000ECD  
                                      i2u357_48 1B10                                        i2u349_48 1A50  
                                      i2u382_40 00F4                                        i2u357_49 1B24  
                                      i2u349_49 1A64                                        i2u382_41 00F0  
                                      i2u375_40 0072                                        i2u374_48 004C  
                                      i2u375_41 006E                                        i2u374_49 0060  
                                      i2u383_48 00FA                                        i2u376_40 0080  
                                      i2u383_49 010E                                        i2u376_41 007C  
                                      i2u378_40 00AC                                        i2u377_48 0086  
                                      i2u378_41 00A8                                        i2u377_49 009A  
                                      i2u379_40 00BA                                        i2u379_41 00B6  
                                      _PIR7bits 000ED1                                        _MBRespon 00EC  
                        ?_EUSART1_RxDataHandler 0001                                       _vfpfcnvrt 012A  
                                     _xtoa$1320 0037                                       _xtoa$1319 0035  
                             ___wmul@multiplier 0005                            ??_EUSART1_is_tx_done 0005  
                                   checkCRC@crc 01EE                   __size_of_EUSART2_Transmit_ISR 0048  
                                  _isspace$1821 000B                   ??_EUSART2_DefaultErrorHandler 0001  
                                    vfpfcnvrt@c 00A9                                       copy_data0 21B8  
                         ?_INTERRUPT_Initialize 0001                         _EUSART2_SetErrorHandler 269A  
                         EUSART1_Read@readValue 0005                     _EUSART2_OverrunErrorHandler 00D5  
                                      _ModbusRx 1602           __end_of_EUSART1_SetTxInterruptHandler 26AE  
        __size_of_EUSART1_SetTxInterruptHandler 000A                   _EUSART1_SetTxInterruptHandler 26A4  
                                      __Hrparam 0000           __end_of_EUSART2_SetRxInterruptHandler 2686  
        __size_of_EUSART2_SetRxInterruptHandler 000A                   _EUSART2_SetRxInterruptHandler 267C  
                                    vfprintf@ap 00BA                                        __Lrparam 0000  
                                    vfprintf@fp 00B6                              __CFG_BOREN$SBORDIS 000000  
                       ??_OSCILLATOR_Initialize 0005                                __size_of___aodiv 0188  
                              __size_of___aomod 0164                                __size_of___lodiv 00F0  
                              __size_of___lomod 00D0                     __size_of_EUSART1_Initialize 007C  
                                    ?_vfpfcnvrt 0049                                 ___aodiv@divisor 000D  
                               ___aodiv@counter 0015                       ??_EUSART1_SetErrorHandler 0007  
                                      _checkCRC 1328             __end_of_EUSART1_DefaultErrorHandler 2706  
                   _EUSART1_DefaultErrorHandler 2700                     __end_of_EUSART1_is_rx_ready 264A  
                          _EUSART2_ErrorHandler 00D3                                __size_of_isalpha 003C  
                              __size_of_isdigit 0038                     __end_of_EUSART1_is_tx_ready 261A  
                    __size_of_AddRxBuffToModBus 00A0                                 _ClearModbusData 229C  
                              __size_of_islower 0038                                __size_of_isspace 0052  
                                      __ptext10 2706                                        __ptext11 1D72  
                                      __ptext20 26B8                                        __ptext12 2672  
                                      __ptext21 26C2                                        __ptext13 267C  
                                      __ptext30 1B2E                                        __ptext22 26CC  
                                      __ptext14 2686                                        __ptext31 1E6C  
                                      __ptext23 1EE8                                        __ptext15 2690  
                                      __ptext40 0C6A                                        __ptext32 257E  
                                      __ptext24 1602                                        __ptext16 269A  
                                      __ptext41 181C                                        __ptext33 1FCE  
                                      __ptext25 1328                                        __ptext17 1DF0  
                                      __ptext50 20EE                                        __ptext42 172C  
                                      __ptext34 012A                                        __ptext26 26EE  
                                      __ptext18 26A4                                        __ptext51 2402  
                                      __ptext43 0E6C                                        __ptext35 0994  
                                      __ptext27 2632                                        __ptext19 26AE  
                                      __ptext60 2332                                        __ptext52 149E  
                                      __ptext44 06B4                                        __ptext36 2090  
                                      __ptext28 214C                                        __ptext61 19AE  
                                      __ptext53 11A0                                        __ptext45 18EC  
                                      __ptext37 247E                                        __ptext29 22E8  
                                      __ptext70 2700                                        __ptext62 26E0  
                                      __ptext54 1006                                        __ptext46 224C  
                                      __ptext38 24B6                                        __ptext71 2552  
                                      __ptext63 270A                                        __ptext55 21FA  
                                      __ptext47 237A                                        __ptext39 2442  
                                      __ptext72 0000                                        __ptext64 26F4  
                                      __ptext56 24EE                                        __ptext48 1BCE  
                                      __ptext65 2526                                        __ptext57 25A6  
                                      __ptext49 26D6                                        __ptext66 23BE  
                                      __ptext58 229C                                        __ptext67 1A6E  
                                      __ptext68 26FA                                        __ptext69 270C  
                              __size_of_isupper 0038                               ?_InitialiseString 0001  
                              __size_of_toupper 005E                     __size_of_EUSART2_Initialize 007E  
                            ??_InitialiseString 0055                                   __size_of_atoi 019A  
                                 __size_of_main 0080                                   __size_of_dtoa 02E0  
                                 __size_of_stoa 019A           fp__EUSART2_DefaultFramingErrorHandler 0000  
    __end_of_EUSART2_DefaultFramingErrorHandler 270C     __size_of_EUSART2_DefaultFramingErrorHandler 0002  
          ??_EUSART2_DefaultFramingErrorHandler 0001             ?_EUSART2_DefaultFramingErrorHandler 0001  
            _EUSART2_DefaultFramingErrorHandler 270A                                   __size_of_utoa 0202  
                                 __size_of_xtoa 02D6                            __CFG_WDTCWS$WDTCWS_7 000000  
                                  PrintModbus@i 00C8            __size_of_EUSART2_DefaultErrorHandler 0006  
                                    _RC1STAbits 000F9D                                       stoa@F1139 00E3  
                                    _RC2STAbits 000E9D  EUSART1_SetOverrunErrorHandler@interruptHandler 0005  
EUSART2_SetOverrunErrorHandler@interruptHandler 0005                                        _rxStatus 0092  
                                      int$flags 005A                                        _vfprintf 1FCE  
            __end_of_INTERRUPT_InterruptManager 0126                      _INTERRUPT_InterruptManager 0008  
                         _EUSART2_RxDataHandler 2526                                       printf@fmt 00BC  
                   _EUSART1_FramingErrorHandler 00D1                             _EUSART1_Receive_ISR 1A6E  
                              ___aomod@dividend 0005                ??_EUSART2_SetOverrunErrorHandler 0007  
               ?_EUSART2_SetOverrunErrorHandler 0005                                  _vfpfcnvrt$1334 00AC  
                                    _INTCONbits 000FF2                                     _NVMCON1bits 000F81  
                                      isalpha@c 0005                      __end_of_UART1_Write_string 1FCE  
                                      isdigit@c 0005                          ??_INTERRUPT_Initialize 0005  
                     ??_EUSART2_SetErrorHandler 0007                            __size_of_PrintModbus 0078  
                                      intlevel2 0000                                   ??_ClearRxBuff 0005  
                          ?_EUSART1_Receive_ISR 0001                                        islower@c 0005  
                                      isspace@c 0005                         ?_PIN_MANAGER_Initialize 0001  
                             __CFG_CLKOUTEN$OFF 000000          __end_of_EUSART1_SetOverrunErrorHandler 26C2  
       __size_of_EUSART1_SetOverrunErrorHandler 000A                  _EUSART1_SetOverrunErrorHandler 26B8  
                                      isupper@c 0005                    __end_of_EUSART1_Transmit_ISR 2402  
                                      printf@ap 00C6  EUSART1_SetFramingErrorHandler@interruptHandler 0005  
EUSART2_SetFramingErrorHandler@interruptHandler 0005                  ?_EUSART1_SetTxInterruptHandler 0005  
                ?_EUSART2_SetRxInterruptHandler 0005                                 ___aomod@divisor 000D  
                                   ??_vfpfcnvrt 004F                                        stoa@nuls 0015  
                               ___aomod@counter 0015                          __size_of_EUSART1_Write 005E  
                            _eusart1RxLastError 0095                          __size_of_EUSART2_Write 005E  
                           _EUSART2_Receive_ISR 19AE                         __end_of_ClearModbusData 22E8  
                                      toupper@c 000B                                      _TX1STAbits 000F9E  
                                    _TX2STAbits 000E9E                                    ___aodiv@sign 0016  
                         ??_EUSART1_Receive_ISR 0001                  __end_of_PIN_MANAGER_Initialize 1CF2  
               ??_EUSART2_SetTxInterruptHandler 0007                            ?_EUSART2_Receive_ISR 0001  
                            _eusart2RxLastError 009A                         ??_EUSART1_RxDataHandler 0001  
                                  ___aomod@sign 0016               _EUSART2_RxDefaultInterruptHandler 00DD  
                           __end_of_ClearRxBuff 2332  
