

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Mar 07 16:25:16 2021

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F46K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text60,global,reloc=2,class=CODE,delta=1
    83                           	psect	text61,global,reloc=2,class=CODE,delta=1
    84                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    85                           	psect	text63,global,reloc=2,class=CODE,delta=1
    86                           	psect	text64,global,reloc=2,class=CODE,delta=1
    87                           	psect	text65,global,reloc=2,class=CODE,delta=1
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1
    89                           	psect	text67,global,reloc=2,class=CODE,delta=1
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1
    94                           	psect	text72,global,reloc=2,class=CODE,delta=1
    95                           	psect	text73,global,reloc=2,class=CODE,delta=1
    96                           	psect	text74,global,reloc=2,class=CODE,delta=1
    97                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    98                           	psect	text75,global,reloc=2,class=CODE,delta=1
    99                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   100                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   101  0000                     
   102                           ; Version 2.10
   103                           ; Generated 31/07/2019 GMT
   104                           ; 
   105                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   106                           ; All rights reserved.
   107                           ; 
   108                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   109                           ; 
   110                           ; Redistribution and use in source and binary forms, with or without modification, are
   111                           ; permitted provided that the following conditions are met:
   112                           ; 
   113                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   114                           ;        conditions and the following disclaimer.
   115                           ; 
   116                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   117                           ;        of conditions and the following disclaimer in the documentation and/or other
   118                           ;        materials provided with the distribution.
   119                           ; 
   120                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   121                           ;        software without specific prior written permission.
   122                           ; 
   123                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   124                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   125                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   126                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   127                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   128                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   129                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   130                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   131                           ; 
   132                           ; 
   133                           ; Code-generator required, PIC18F46K40 Definitions
   134                           ; 
   135                           ; SFR Addresses
   136  0000                     
   137                           	psect	idataBANK0
   138  002A92                     __pidataBANK0:
   139                           	opt callstack 0
   140                           
   141                           ;initializer for stoa@F1139
   142  002A92  28                 	db	40
   143  002A93  6E                 	db	110
   144  002A94  75                 	db	117
   145  002A95  6C                 	db	108
   146  002A96  6C                 	db	108
   147  002A97  29                 	db	41
   148  002A98  00                 	db	0
   149                           
   150                           ;initializer for _ExpectedBytes
   151  002A99  0008               	dw	8
   152                           
   153                           ;initializer for _ByteLo
   154  002A9B  00FF               	dw	255
   155                           
   156                           ;initializer for _MBResCRC
   157  002A9D  FFFF               	dw	65535
   158                           
   159                           	psect	idataBANK1
   160  0027B6                     __pidataBANK1:
   161                           	opt callstack 0
   162                           
   163                           ;initializer for _MBRespon
   164  0027B6  FFFF               	dw	65535
   165  0027B8  00                 	db	0
   166  0027B9  00                 	db	0
   167  0027BA  00                 	db	0
   168  0027BB  00                 	db	0
   169  0027BC  00                 	db	0
   170  0027BD  00                 	db	0
   171  0027BE  00                 	db	0
   172  0027BF  00                 	db	0
   173  0027C0  00                 	db	0
   174  0027C1  00                 	db	0
   175  0027C2  00                 	db	0
   176  0027C3  00                 	db	0
   177  0027C4  00                 	db	0
   178  0027C5  00                 	db	0
   179  0027C6  00                 	db	0
   180  0027C7  00                 	db	0
   181  0027C8  00                 	db	0
   182  0027C9  00                 	db	0
   183  0027CA  00                 	db	0
   184  0027CB  00                 	db	0
   185  0027CC  00                 	db	0
   186  0027CD  00                 	db	0
   187  0027CE  00                 	db	0
   188  0027CF  00                 	db	0
   189  0027D0  00                 	db	0
   190  0027D1  00                 	db	0
   191  0027D2  00                 	db	0
   192  0027D3  00                 	db	0
   193  0027D4  00                 	db	0
   194  0027D5  00                 	db	0
   195  0027D6  00                 	db	0
   196  0027D7  00                 	db	0
   197  0027D8  00                 	db	0
   198  0027D9  00                 	db	0
   199  0027DA  00                 	db	0
   200  0027DB  00                 	db	0
   201  0027DC  00                 	db	0
   202  0027DD  00                 	db	0
   203  0027DE  00                 	db	0
   204  0027DF  00                 	db	0
   205  0027E0  00                 	db	0
   206  0027E1  00                 	db	0
   207  0027E2  00                 	db	0
   208  0027E3  00                 	db	0
   209  0027E4  00                 	db	0
   210  0027E5  00                 	db	0
   211  0027E6  00                 	db	0
   212  0027E7  00                 	db	0
   213  0027E8  00                 	db	0
   214  0027E9  00                 	db	0
   215  0027EA  00                 	db	0
   216  0027EB  00                 	db	0
   217  0027EC  00                 	db	0
   218  0027ED  00                 	db	0
   219  0027EE  00                 	db	0
   220  0027EF  00                 	db	0
   221  0027F0  00                 	db	0
   222  0027F1  00                 	db	0
   223  0027F2  00                 	db	0
   224  0027F3  00                 	db	0
   225  0027F4  00                 	db	0
   226  0027F5  00                 	db	0
   227                           
   228                           	psect	idataBANK2
   229  0027F6                     __pidataBANK2:
   230                           	opt callstack 0
   231                           
   232                           ;initializer for _MB300xx
   233  0027F6  0000               	dw	0
   234  0027F8  0007               	dw	7
   235  0027FA  07FF               	dw	2047
   236  0027FC  0004               	dw	4
   237  0027FE  0005               	dw	5
   238  002800  0006               	dw	6
   239  002802  0007               	dw	7
   240  002804  0008               	dw	8
   241  002806  0009               	dw	9
   242  002808  000A               	dw	10
   243  00280A  000B               	dw	11
   244  00280C  000C               	dw	12
   245  00280E  000D               	dw	13
   246  002810  000E               	dw	14
   247  002812  000F               	dw	15
   248  002814  0010               	dw	16
   249  002816  0011               	dw	17
   250  002818  0012               	dw	18
   251  00281A  0013               	dw	19
   252  00281C  0014               	dw	20
   253  00281E  0015               	dw	21
   254  002820  0016               	dw	22
   255  002822  0017               	dw	23
   256  002824  0018               	dw	24
   257  002826  0019               	dw	25
   258  002828  0020               	dw	32
   259  00282A  0021               	dw	33
   260  00282C  0022               	dw	34
   261  00282E  0023               	dw	35
   262  002830  0024               	dw	36
   263  002832  0025               	dw	37
   264  002834  0026               	dw	38
   265                           
   266                           	psect	nvBANK0
   267  0000DD                     __pnvBANK0:
   268                           	opt callstack 0
   269  0000DD                     _EUSART1_ErrorHandler:
   270                           	opt callstack 0
   271  0000DD                     	ds	2
   272  0000DF                     _EUSART1_OverrunErrorHandler:
   273                           	opt callstack 0
   274  0000DF                     	ds	2
   275  0000E1                     _EUSART1_FramingErrorHandler:
   276                           	opt callstack 0
   277  0000E1                     	ds	2
   278  0000E3                     _EUSART2_ErrorHandler:
   279                           	opt callstack 0
   280  0000E3                     	ds	2
   281  0000E5                     _EUSART2_OverrunErrorHandler:
   282                           	opt callstack 0
   283  0000E5                     	ds	2
   284  0000E7                     _EUSART2_FramingErrorHandler:
   285                           	opt callstack 0
   286  0000E7                     	ds	2
   287  0000E9                     _EUSART1_RxDefaultInterruptHandler:
   288                           	opt callstack 0
   289  0000E9                     	ds	2
   290  0000EB                     _EUSART1_TxDefaultInterruptHandler:
   291                           	opt callstack 0
   292  0000EB                     	ds	2
   293  0000ED                     _EUSART2_RxDefaultInterruptHandler:
   294                           	opt callstack 0
   295  0000ED                     	ds	2
   296  0000EF                     _EUSART2_TxDefaultInterruptHandler:
   297                           	opt callstack 0
   298  0000EF                     	ds	2
   299  0000F1                     _eusart1TxBufferRemaining:
   300                           	opt callstack 0
   301  0000F1                     	ds	1
   302  0000F2                     _eusart2TxBufferRemaining:
   303                           	opt callstack 0
   304  0000F2                     	ds	1
   305  0000                     _RC2REG	set	3737
   306  0000                     _RC2STAbits	set	3741
   307  0000                     _TX2REG	set	3738
   308  0000                     _TX2STAbits	set	3742
   309  0000                     _SP2BRGH	set	3740
   310  0000                     _SP2BRGL	set	3739
   311  0000                     _TX2STA	set	3742
   312  0000                     _RC2STA	set	3741
   313  0000                     _BAUD2CON	set	3743
   314  0000                     _PIR7bits	set	3793
   315  0000                     _PIR3bits	set	3789
   316  0000                     _PIE3bits	set	3781
   317  0000                     _PMD5	set	3814
   318  0000                     _PMD4	set	3813
   319  0000                     _PMD3	set	3812
   320  0000                     _PMD2	set	3811
   321  0000                     _PMD1	set	3810
   322  0000                     _PMD0	set	3809
   323  0000                     _OSCTUNE	set	3805
   324  0000                     _OSCFRQ	set	3806
   325  0000                     _OSCEN	set	3804
   326  0000                     _OSCCON3	set	3802
   327  0000                     _OSCCON1	set	3800
   328  0000                     _RX2PPS	set	3725
   329  0000                     _RC6PPS	set	3837
   330  0000                     _RB6PPS	set	3829
   331  0000                     _RX1PPS	set	3765
   332  0000                     _INLVLE	set	3882
   333  0000                     _INLVLD	set	3874
   334  0000                     _INLVLC	set	3869
   335  0000                     _INLVLB	set	3861
   336  0000                     _INLVLA	set	3853
   337  0000                     _SLRCONE	set	3883
   338  0000                     _SLRCOND	set	3875
   339  0000                     _SLRCONC	set	3870
   340  0000                     _SLRCONB	set	3862
   341  0000                     _SLRCONA	set	3854
   342  0000                     _ODCOND	set	3876
   343  0000                     _ODCONC	set	3871
   344  0000                     _ODCONB	set	3863
   345  0000                     _ODCONA	set	3855
   346  0000                     _ODCONE	set	3884
   347  0000                     _WPUC	set	3872
   348  0000                     _WPUA	set	3856
   349  0000                     _WPUB	set	3864
   350  0000                     _WPUE	set	3885
   351  0000                     _WPUD	set	3877
   352  0000                     _ANSELA	set	3857
   353  0000                     _ANSELE	set	3886
   354  0000                     _ANSELB	set	3865
   355  0000                     _ANSELC	set	3873
   356  0000                     _ANSELD	set	3878
   357  0000                     _LATDbits	set	3974
   358  0000                     _LATAbits	set	3971
   359  0000                     _RC1REG	set	3993
   360  0000                     _RC1STAbits	set	3997
   361  0000                     _TX1REG	set	3994
   362  0000                     _TX1STAbits	set	3998
   363  0000                     _SP1BRGH	set	3996
   364  0000                     _SP1BRGL	set	3995
   365  0000                     _TX1STA	set	3998
   366  0000                     _RC1STA	set	3997
   367  0000                     _BAUD1CON	set	3999
   368  0000                     _NVMDAT	set	3968
   369  0000                     _NVMADRL	set	3966
   370  0000                     _NVMADRH	set	3967
   371  0000                     _NVMCON2	set	3970
   372  0000                     _TABLAT	set	4085
   373  0000                     _TBLPTRL	set	4086
   374  0000                     _TBLPTRH	set	4087
   375  0000                     _TBLPTRU	set	4088
   376  0000                     _NVMCON1bits	set	3969
   377  0000                     _INTCONbits	set	4082
   378  0000                     _TRISD	set	3979
   379  0000                     _TRISC	set	3978
   380  0000                     _TRISB	set	3977
   381  0000                     _TRISA	set	3976
   382  0000                     _TRISE	set	3980
   383  0000                     _LATC	set	3973
   384  0000                     _LATB	set	3972
   385  0000                     _LATA	set	3971
   386  0000                     _LATD	set	3974
   387  0000                     _LATE	set	3975
   388                           
   389                           	psect	mediumconst
   390  00FE06                     __pmediumconst:
   391                           	opt callstack 0
   392  00FE06  00                 	db	0
   393  00FE07                     STR_1:
   394                           
   395                           ; BSR set to: 0
   396  00FE07  0D                 	db	13
   397  00FE08  44                 	db	68	;'D'
   398  00FE09  61                 	db	97	;'a'
   399  00FE0A  6E                 	db	110	;'n'
   400  00FE0B  20                 	db	32
   401  00FE0C  61                 	db	97	;'a'
   402  00FE0D  6E                 	db	110	;'n'
   403  00FE0E  64                 	db	100	;'d'
   404  00FE0F  20                 	db	32
   405  00FE10  53                 	db	83	;'S'
   406  00FE11  61                 	db	97	;'a'
   407  00FE12  6D                 	db	109	;'m'
   408  00FE13  27                 	db	39
   409  00FE14  73                 	db	115	;'s'
   410  00FE15  20                 	db	32
   411  00FE16  4D                 	db	77	;'M'
   412  00FE17  6F                 	db	111	;'o'
   413  00FE18  64                 	db	100	;'d'
   414  00FE19  62                 	db	98	;'b'
   415  00FE1A  75                 	db	117	;'u'
   416  00FE1B  73                 	db	115	;'s'
   417  00FE1C  20                 	db	32
   418  00FE1D  47                 	db	71	;'G'
   419  00FE1E  50                 	db	80	;'P'
   420  00FE1F  49                 	db	73	;'I'
   421  00FE20  4F                 	db	79	;'O'
   422  00FE21  20                 	db	32
   423  00FE22  45                 	db	69	;'E'
   424  00FE23  78                 	db	120	;'x'
   425  00FE24  70                 	db	112	;'p'
   426  00FE25  61                 	db	97	;'a'
   427  00FE26  6E                 	db	110	;'n'
   428  00FE27  73                 	db	115	;'s'
   429  00FE28  69                 	db	105	;'i'
   430  00FE29  6F                 	db	111	;'o'
   431  00FE2A  6E                 	db	110	;'n'
   432  00FE2B  20                 	db	32
   433  00FE2C  2D                 	db	45
   434  00FE2D  20                 	db	32
   435  00FE2E  41                 	db	65	;'A'
   436  00FE2F  50                 	db	80	;'P'
   437  00FE30  30                 	db	48	;'0'
   438  00FE31  30                 	db	48	;'0'
   439  00FE32  30                 	db	48	;'0'
   440  00FE33  78                 	db	120	;'x'
   441  00FE34  78                 	db	120	;'x'
   442  00FE35  78                 	db	120	;'x'
   443  00FE36  78                 	db	120	;'x'
   444  00FE37  78                 	db	120	;'x'
   445  00FE38  20                 	db	32
   446  00FE39  56                 	db	86	;'V'
   447  00FE3A  30                 	db	48	;'0'
   448  00FE3B  2E                 	db	46
   449  00FE3C  31                 	db	49	;'1'
   450  00FE3D  0D                 	db	13
   451  00FE3E  0A                 	db	10
   452  00FE3F  00                 	db	0
   453  00FE40                     STR_8:
   454                           
   455                           ; BSR set to: 0
   456  00FE40  0D                 	db	13
   457  00FE41  20                 	db	32
   458  00FE42  20                 	db	32
   459  00FE43  20                 	db	32
   460  00FE44  30                 	db	48	;'0'
   461  00FE45  78                 	db	120	;'x'
   462  00FE46  31                 	db	49	;'1'
   463  00FE47  30                 	db	48	;'0'
   464  00FE48  20                 	db	32
   465  00FE49  2D                 	db	45
   466  00FE4A  20                 	db	32
   467  00FE4B  57                 	db	87	;'W'
   468  00FE4C  72                 	db	114	;'r'
   469  00FE4D  69                 	db	105	;'i'
   470  00FE4E  74                 	db	116	;'t'
   471  00FE4F  65                 	db	101	;'e'
   472  00FE50  20                 	db	32
   473  00FE51  4D                 	db	77	;'M'
   474  00FE52  75                 	db	117	;'u'
   475  00FE53  6C                 	db	108	;'l'
   476  00FE54  74                 	db	116	;'t'
   477  00FE55  69                 	db	105	;'i'
   478  00FE56  70                 	db	112	;'p'
   479  00FE57  6C                 	db	108	;'l'
   480  00FE58  65                 	db	101	;'e'
   481  00FE59  20                 	db	32
   482  00FE5A  52                 	db	82	;'R'
   483  00FE5B  65                 	db	101	;'e'
   484  00FE5C  67                 	db	103	;'g'
   485  00FE5D  69                 	db	105	;'i'
   486  00FE5E  73                 	db	115	;'s'
   487  00FE5F  74                 	db	116	;'t'
   488  00FE60  65                 	db	101	;'e'
   489  00FE61  72                 	db	114	;'r'
   490  00FE62  73                 	db	115	;'s'
   491  00FE63  20                 	db	32
   492  00FE64  28                 	db	40
   493  00FE65  4D                 	db	77	;'M'
   494  00FE66  61                 	db	97	;'a'
   495  00FE67  78                 	db	120	;'x'
   496  00FE68  20                 	db	32
   497  00FE69  33                 	db	51	;'3'
   498  00FE6A  32                 	db	50	;'2'
   499  00FE6B  78                 	db	120	;'x'
   500  00FE6C  20                 	db	32
   501  00FE6D  31                 	db	49	;'1'
   502  00FE6E  36                 	db	54	;'6'
   503  00FE6F  62                 	db	98	;'b'
   504  00FE70  69                 	db	105	;'i'
   505  00FE71  74                 	db	116	;'t'
   506  00FE72  29                 	db	41
   507  00FE73  0D                 	db	13
   508  00FE74  0A                 	db	10
   509  00FE75  0A                 	db	10
   510  00FE76  00                 	db	0
   511  00FE77                     STR_7:
   512                           
   513                           ; BSR set to: 0
   514  00FE77  0D                 	db	13
   515  00FE78  20                 	db	32
   516  00FE79  20                 	db	32
   517  00FE7A  20                 	db	32
   518  00FE7B  30                 	db	48	;'0'
   519  00FE7C  78                 	db	120	;'x'
   520  00FE7D  30                 	db	48	;'0'
   521  00FE7E  33                 	db	51	;'3'
   522  00FE7F  20                 	db	32
   523  00FE80  2D                 	db	45
   524  00FE81  20                 	db	32
   525  00FE82  52                 	db	82	;'R'
   526  00FE83  65                 	db	101	;'e'
   527  00FE84  61                 	db	97	;'a'
   528  00FE85  64                 	db	100	;'d'
   529  00FE86  20                 	db	32
   530  00FE87  4D                 	db	77	;'M'
   531  00FE88  75                 	db	117	;'u'
   532  00FE89  6C                 	db	108	;'l'
   533  00FE8A  74                 	db	116	;'t'
   534  00FE8B  69                 	db	105	;'i'
   535  00FE8C  70                 	db	112	;'p'
   536  00FE8D  6C                 	db	108	;'l'
   537  00FE8E  65                 	db	101	;'e'
   538  00FE8F  20                 	db	32
   539  00FE90  52                 	db	82	;'R'
   540  00FE91  65                 	db	101	;'e'
   541  00FE92  67                 	db	103	;'g'
   542  00FE93  69                 	db	105	;'i'
   543  00FE94  73                 	db	115	;'s'
   544  00FE95  74                 	db	116	;'t'
   545  00FE96  65                 	db	101	;'e'
   546  00FE97  72                 	db	114	;'r'
   547  00FE98  73                 	db	115	;'s'
   548  00FE99  20                 	db	32
   549  00FE9A  28                 	db	40
   550  00FE9B  4D                 	db	77	;'M'
   551  00FE9C  61                 	db	97	;'a'
   552  00FE9D  78                 	db	120	;'x'
   553  00FE9E  20                 	db	32
   554  00FE9F  33                 	db	51	;'3'
   555  00FEA0  32                 	db	50	;'2'
   556  00FEA1  78                 	db	120	;'x'
   557  00FEA2  20                 	db	32
   558  00FEA3  31                 	db	49	;'1'
   559  00FEA4  36                 	db	54	;'6'
   560  00FEA5  62                 	db	98	;'b'
   561  00FEA6  69                 	db	105	;'i'
   562  00FEA7  74                 	db	116	;'t'
   563  00FEA8  29                 	db	41
   564  00FEA9  0D                 	db	13
   565  00FEAA  0A                 	db	10
   566  00FEAB  00                 	db	0
   567  00FEAC                     STR_3:
   568                           
   569                           ; BSR set to: 0
   570  00FEAC  0D                 	db	13
   571  00FEAD  43                 	db	67	;'C'
   572  00FEAE  6F                 	db	111	;'o'
   573  00FEAF  6D                 	db	109	;'m'
   574  00FEB0  70                 	db	112	;'p'
   575  00FEB1  69                 	db	105	;'i'
   576  00FEB2  6C                 	db	108	;'l'
   577  00FEB3  65                 	db	101	;'e'
   578  00FEB4  64                 	db	100	;'d'
   579  00FEB5  20                 	db	32
   580  00FEB6  6F                 	db	111	;'o'
   581  00FEB7  6E                 	db	110	;'n'
   582  00FEB8  20                 	db	32
   583  00FEB9  25                 	db	37
   584  00FEBA  73                 	db	115	;'s'
   585  00FEBB  20                 	db	32
   586  00FEBC  61                 	db	97	;'a'
   587  00FEBD  74                 	db	116	;'t'
   588  00FEBE  20                 	db	32
   589  00FEBF  25                 	db	37
   590  00FEC0  73                 	db	115	;'s'
   591  00FEC1  20                 	db	32
   592  00FEC2  62                 	db	98	;'b'
   593  00FEC3  79                 	db	121	;'y'
   594  00FEC4  20                 	db	32
   595  00FEC5  58                 	db	88	;'X'
   596  00FEC6  43                 	db	67	;'C'
   597  00FEC7  38                 	db	56	;'8'
   598  00FEC8  20                 	db	32
   599  00FEC9  76                 	db	118	;'v'
   600  00FECA  65                 	db	101	;'e'
   601  00FECB  72                 	db	114	;'r'
   602  00FECC  73                 	db	115	;'s'
   603  00FECD  69                 	db	105	;'i'
   604  00FECE  6F                 	db	111	;'o'
   605  00FECF  6E                 	db	110	;'n'
   606  00FED0  20                 	db	32
   607  00FED1  25                 	db	37
   608  00FED2  75                 	db	117	;'u'
   609  00FED3  0D                 	db	13
   610  00FED4  0A                 	db	10
   611  00FED5  0A                 	db	10
   612  00FED6  00                 	db	0
   613  00FED7                     STR_17:
   614                           
   615                           ; BSR set to: 0
   616  00FED7  63                 	db	99	;'c'
   617  00FED8  72                 	db	114	;'r'
   618  00FED9  63                 	db	99	;'c'
   619  00FEDA  48                 	db	72	;'H'
   620  00FEDB  69                 	db	105	;'i'
   621  00FEDC  67                 	db	103	;'g'
   622  00FEDD  68                 	db	104	;'h'
   623  00FEDE  3A                 	db	58	;':'
   624  00FEDF  20                 	db	32
   625  00FEE0  30                 	db	48	;'0'
   626  00FEE1  78                 	db	120	;'x'
   627  00FEE2  25                 	db	37
   628  00FEE3  30                 	db	48	;'0'
   629  00FEE4  32                 	db	50	;'2'
   630  00FEE5  78                 	db	120	;'x'
   631  00FEE6  20                 	db	32
   632  00FEE7  20                 	db	32
   633  00FEE8  63                 	db	99	;'c'
   634  00FEE9  72                 	db	114	;'r'
   635  00FEEA  63                 	db	99	;'c'
   636  00FEEB  4C                 	db	76	;'L'
   637  00FEEC  6F                 	db	111	;'o'
   638  00FEED  77                 	db	119	;'w'
   639  00FEEE  3A                 	db	58	;':'
   640  00FEEF  20                 	db	32
   641  00FEF0  30                 	db	48	;'0'
   642  00FEF1  78                 	db	120	;'x'
   643  00FEF2  25                 	db	37
   644  00FEF3  30                 	db	48	;'0'
   645  00FEF4  32                 	db	50	;'2'
   646  00FEF5  78                 	db	120	;'x'
   647  00FEF6  20                 	db	32
   648  00FEF7  20                 	db	32
   649  00FEF8  0D                 	db	13
   650  00FEF9  0A                 	db	10
   651  00FEFA  00                 	db	0
   652  00FEFB                     STR_9:
   653                           
   654                           ; BSR set to: 0
   655  00FEFB  0D                 	db	13
   656  00FEFC  49                 	db	73	;'I'
   657  00FEFD  6E                 	db	110	;'n'
   658  00FEFE  69                 	db	105	;'i'
   659  00FEFF  74                 	db	116	;'t'
   660  00FF00  61                 	db	97	;'a'
   661  00FF01  6C                 	db	108	;'l'
   662  00FF02  69                 	db	105	;'i'
   663  00FF03  73                 	db	115	;'s'
   664  00FF04  61                 	db	97	;'a'
   665  00FF05  74                 	db	116	;'t'
   666  00FF06  69                 	db	105	;'i'
   667  00FF07  6F                 	db	111	;'o'
   668  00FF08  6E                 	db	110	;'n'
   669  00FF09  20                 	db	32
   670  00FF0A  43                 	db	67	;'C'
   671  00FF0B  6F                 	db	111	;'o'
   672  00FF0C  6D                 	db	109	;'m'
   673  00FF0D  70                 	db	112	;'p'
   674  00FF0E  6C                 	db	108	;'l'
   675  00FF0F  65                 	db	101	;'e'
   676  00FF10  74                 	db	116	;'t'
   677  00FF11  65                 	db	101	;'e'
   678  00FF12  20                 	db	32
   679  00FF13  2D                 	db	45
   680  00FF14  20                 	db	32
   681  00FF15  52                 	db	82	;'R'
   682  00FF16  65                 	db	101	;'e'
   683  00FF17  61                 	db	97	;'a'
   684  00FF18  64                 	db	100	;'d'
   685  00FF19  79                 	db	121	;'y'
   686  00FF1A  0D                 	db	13
   687  00FF1B  0A                 	db	10
   688  00FF1C  0A                 	db	10
   689  00FF1D  00                 	db	0
   690  00FF1E                     STR_13:
   691                           
   692                           ; BSR set to: 0
   693  00FF1E  4D                 	db	77	;'M'
   694  00FF1F  6F                 	db	111	;'o'
   695  00FF20  64                 	db	100	;'d'
   696  00FF21  62                 	db	98	;'b'
   697  00FF22  75                 	db	117	;'u'
   698  00FF23  73                 	db	115	;'s'
   699  00FF24  20                 	db	32
   700  00FF25  44                 	db	68	;'D'
   701  00FF26  61                 	db	97	;'a'
   702  00FF27  74                 	db	116	;'t'
   703  00FF28  61                 	db	97	;'a'
   704  00FF29  20                 	db	32
   705  00FF2A  43                 	db	67	;'C'
   706  00FF2B  61                 	db	97	;'a'
   707  00FF2C  70                 	db	112	;'p'
   708  00FF2D  74                 	db	116	;'t'
   709  00FF2E  75                 	db	117	;'u'
   710  00FF2F  72                 	db	114	;'r'
   711  00FF30  65                 	db	101	;'e'
   712  00FF31  20                 	db	32
   713  00FF32  43                 	db	67	;'C'
   714  00FF33  6F                 	db	111	;'o'
   715  00FF34  6D                 	db	109	;'m'
   716  00FF35  70                 	db	112	;'p'
   717  00FF36  6C                 	db	108	;'l'
   718  00FF37  65                 	db	101	;'e'
   719  00FF38  74                 	db	116	;'t'
   720  00FF39  65                 	db	101	;'e'
   721  00FF3A  3A                 	db	58	;':'
   722  00FF3B  0D                 	db	13
   723  00FF3C  0A                 	db	10
   724  00FF3D  00                 	db	0
   725  00FF3E                     STR_6:
   726                           
   727                           ; BSR set to: 0
   728  00FF3E  0D                 	db	13
   729  00FF3F  46                 	db	70	;'F'
   730  00FF40  75                 	db	117	;'u'
   731  00FF41  6E                 	db	110	;'n'
   732  00FF42  63                 	db	99	;'c'
   733  00FF43  74                 	db	116	;'t'
   734  00FF44  69                 	db	105	;'i'
   735  00FF45  6F                 	db	111	;'o'
   736  00FF46  6E                 	db	110	;'n'
   737  00FF47  20                 	db	32
   738  00FF48  43                 	db	67	;'C'
   739  00FF49  6F                 	db	111	;'o'
   740  00FF4A  64                 	db	100	;'d'
   741  00FF4B  65                 	db	101	;'e'
   742  00FF4C  73                 	db	115	;'s'
   743  00FF4D  20                 	db	32
   744  00FF4E  53                 	db	83	;'S'
   745  00FF4F  75                 	db	117	;'u'
   746  00FF50  70                 	db	112	;'p'
   747  00FF51  70                 	db	112	;'p'
   748  00FF52  6F                 	db	111	;'o'
   749  00FF53  72                 	db	114	;'r'
   750  00FF54  74                 	db	116	;'t'
   751  00FF55  65                 	db	101	;'e'
   752  00FF56  64                 	db	100	;'d'
   753  00FF57  3A                 	db	58	;':'
   754  00FF58  0D                 	db	13
   755  00FF59  0A                 	db	10
   756  00FF5A  00                 	db	0
   757  00FF5B                     STR_16:
   758                           
   759                           ; BSR set to: 0
   760  00FF5B  46                 	db	70	;'F'
   761  00FF5C  75                 	db	117	;'u'
   762  00FF5D  6E                 	db	110	;'n'
   763  00FF5E  63                 	db	99	;'c'
   764  00FF5F  74                 	db	116	;'t'
   765  00FF60  69                 	db	105	;'i'
   766  00FF61  6F                 	db	111	;'o'
   767  00FF62  6E                 	db	110	;'n'
   768  00FF63  20                 	db	32
   769  00FF64  43                 	db	67	;'C'
   770  00FF65  6F                 	db	111	;'o'
   771  00FF66  64                 	db	100	;'d'
   772  00FF67  65                 	db	101	;'e'
   773  00FF68  20                 	db	32
   774  00FF69  69                 	db	105	;'i'
   775  00FF6A  73                 	db	115	;'s'
   776  00FF6B  3A                 	db	58	;':'
   777  00FF6C  20                 	db	32
   778  00FF6D  30                 	db	48	;'0'
   779  00FF6E  78                 	db	120	;'x'
   780  00FF6F  25                 	db	37
   781  00FF70  30                 	db	48	;'0'
   782  00FF71  32                 	db	50	;'2'
   783  00FF72  78                 	db	120	;'x'
   784  00FF73  20                 	db	32
   785  00FF74  0D                 	db	13
   786  00FF75  0A                 	db	10
   787  00FF76  00                 	db	0
   788  00FF77                     STR_19:
   789                           
   790                           ; BSR set to: 0
   791  00FF77  43                 	db	67	;'C'
   792  00FF78  52                 	db	82	;'R'
   793  00FF79  43                 	db	67	;'C'
   794  00FF7A  20                 	db	32
   795  00FF7B  64                 	db	100	;'d'
   796  00FF7C  69                 	db	105	;'i'
   797  00FF7D  64                 	db	100	;'d'
   798  00FF7E  20                 	db	32
   799  00FF7F  4E                 	db	78	;'N'
   800  00FF80  4F                 	db	79	;'O'
   801  00FF81  54                 	db	84	;'T'
   802  00FF82  20                 	db	32
   803  00FF83  63                 	db	99	;'c'
   804  00FF84  68                 	db	104	;'h'
   805  00FF85  65                 	db	101	;'e'
   806  00FF86  63                 	db	99	;'c'
   807  00FF87  6B                 	db	107	;'k'
   808  00FF88  20                 	db	32
   809  00FF89  6F                 	db	111	;'o'
   810  00FF8A  75                 	db	117	;'u'
   811  00FF8B  74                 	db	116	;'t'
   812  00FF8C  2E                 	db	46
   813  00FF8D  20                 	db	32
   814  00FF8E  0D                 	db	13
   815  00FF8F  0A                 	db	10
   816  00FF90  0A                 	db	10
   817  00FF91  00                 	db	0
   818  00FF92                     STR_2:
   819                           
   820                           ; BSR set to: 0
   821  00FF92  0D                 	db	13
   822  00FF93  43                 	db	67	;'C'
   823  00FF94  61                 	db	97	;'a'
   824  00FF95  72                 	db	114	;'r'
   825  00FF96  64                 	db	100	;'d'
   826  00FF97  20                 	db	32
   827  00FF98  53                 	db	83	;'S'
   828  00FF99  65                 	db	101	;'e'
   829  00FF9A  72                 	db	114	;'r'
   830  00FF9B  20                 	db	32
   831  00FF9C  4E                 	db	78	;'N'
   832  00FF9D  6F                 	db	111	;'o'
   833  00FF9E  2E                 	db	46
   834  00FF9F  20                 	db	32
   835  00FFA0  78                 	db	120	;'x'
   836  00FFA1  78                 	db	120	;'x'
   837  00FFA2  78                 	db	120	;'x'
   838  00FFA3  78                 	db	120	;'x'
   839  00FFA4  78                 	db	120	;'x'
   840  00FFA5  78                 	db	120	;'x'
   841  00FFA6  78                 	db	120	;'x'
   842  00FFA7  20                 	db	32
   843  00FFA8  0D                 	db	13
   844  00FFA9  0A                 	db	10
   845  00FFAA  00                 	db	0
   846  00FFAB                     STR_11:
   847                           
   848                           ; BSR set to: 0
   849  00FFAB  20                 	db	32
   850  00FFAC  20                 	db	32
   851  00FFAD  20                 	db	32
   852  00FFAE  42                 	db	66	;'B'
   853  00FFAF  79                 	db	121	;'y'
   854  00FFB0  74                 	db	116	;'t'
   855  00FFB1  65                 	db	101	;'e'
   856  00FFB2  20                 	db	32
   857  00FFB3  25                 	db	37
   858  00FFB4  69                 	db	105	;'i'
   859  00FFB5  20                 	db	32
   860  00FFB6  3A                 	db	58	;':'
   861  00FFB7  20                 	db	32
   862  00FFB8  30                 	db	48	;'0'
   863  00FFB9  78                 	db	120	;'x'
   864  00FFBA  25                 	db	37
   865  00FFBB  30                 	db	48	;'0'
   866  00FFBC  32                 	db	50	;'2'
   867  00FFBD  78                 	db	120	;'x'
   868  00FFBE  20                 	db	32
   869  00FFBF  0D                 	db	13
   870  00FFC0  0A                 	db	10
   871  00FFC1  00                 	db	0
   872  00FFC2                     STR_18:
   873                           
   874                           ; BSR set to: 0
   875  00FFC2  43                 	db	67	;'C'
   876  00FFC3  52                 	db	82	;'R'
   877  00FFC4  43                 	db	67	;'C'
   878  00FFC5  20                 	db	32
   879  00FFC6  43                 	db	67	;'C'
   880  00FFC7  68                 	db	104	;'h'
   881  00FFC8  65                 	db	101	;'e'
   882  00FFC9  63                 	db	99	;'c'
   883  00FFCA  6B                 	db	107	;'k'
   884  00FFCB  65                 	db	101	;'e'
   885  00FFCC  64                 	db	100	;'d'
   886  00FFCD  20                 	db	32
   887  00FFCE  4F                 	db	79	;'O'
   888  00FFCF  75                 	db	117	;'u'
   889  00FFD0  74                 	db	116	;'t'
   890  00FFD1  2E                 	db	46
   891  00FFD2  20                 	db	32
   892  00FFD3  0D                 	db	13
   893  00FFD4  0A                 	db	10
   894  00FFD5  0A                 	db	10
   895  00FFD6  00                 	db	0
   896  00FFD7                     STR_10:
   897                           
   898                           ; BSR set to: 0
   899  00FFD7  4D                 	db	77	;'M'
   900  00FFD8  6F                 	db	111	;'o'
   901  00FFD9  64                 	db	100	;'d'
   902  00FFDA  62                 	db	98	;'b'
   903  00FFDB  75                 	db	117	;'u'
   904  00FFDC  73                 	db	115	;'s'
   905  00FFDD  20                 	db	32
   906  00FFDE  52                 	db	82	;'R'
   907  00FFDF  65                 	db	101	;'e'
   908  00FFE0  73                 	db	115	;'s'
   909  00FFE1  70                 	db	112	;'p'
   910  00FFE2  6F                 	db	111	;'o'
   911  00FFE3  6E                 	db	110	;'n'
   912  00FFE4  73                 	db	115	;'s'
   913  00FFE5  65                 	db	101	;'e'
   914  00FFE6  3A                 	db	58	;':'
   915  00FFE7  0D                 	db	13
   916  00FFE8  0A                 	db	10
   917  00FFE9  00                 	db	0
   918  00FFEA                     STR_4:
   919                           
   920                           ; BSR set to: 0
   921  00FFEA  4D                 	db	77	;'M'
   922  00FFEB  61                 	db	97	;'a'
   923  00FFEC  72                 	db	114	;'r'
   924  00FFED  20                 	db	32
   925  00FFEE  20                 	db	32
   926  00FFEF  37                 	db	55	;'7'
   927  00FFF0  20                 	db	32
   928  00FFF1  32                 	db	50	;'2'
   929  00FFF2  30                 	db	48	;'0'
   930  00FFF3  32                 	db	50	;'2'
   931  00FFF4  31                 	db	49	;'1'
   932  00FFF5  00                 	db	0
   933  00FFF6                     STR_5:
   934                           
   935                           ; BSR set to: 0
   936  00FFF6  31                 	db	49	;'1'
   937  00FFF7  36                 	db	54	;'6'
   938  00FFF8  3A                 	db	58	;':'
   939  00FFF9  32                 	db	50	;'2'
   940  00FFFA  35                 	db	53	;'5'
   941  00FFFB  3A                 	db	58	;':'
   942  00FFFC  30                 	db	48	;'0'
   943  00FFFD  35                 	db	53	;'5'
   944  00FFFE  00                 	db	0
   945  0000                     
   946                           ; #config settings
   947  00FFFF  00                 	db	0	; dummy byte at the end
   948  0000                     
   949                           	psect	cinit
   950  001E48                     __pcinit:
   951                           	opt callstack 0
   952  001E48                     start_initialization:
   953                           	opt callstack 0
   954  001E48                     __initialization:
   955                           	opt callstack 0
   956                           
   957                           ; Initialize objects allocated to BANK2 (64 bytes)
   958                           ; load TBLPTR registers with __pidataBANK2
   959  001E48  0EF6               	movlw	low __pidataBANK2
   960  001E4A  6EF6               	movwf	tblptrl,c
   961  001E4C  0E27               	movlw	high __pidataBANK2
   962  001E4E  6EF7               	movwf	tblptrh,c
   963  001E50  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   964  001E52  6EF8               	movwf	tblptru,c
   965  001E54  EE02  F064         	lfsr	0,__pdataBANK2
   966  001E58  EE10 F040          	lfsr	1,64
   967  001E5C                     copy_data0:
   968  001E5C  0009               	tblrd		*+
   969  001E5E  CFF5 FFEE          	movff	tablat,postinc0
   970  001E62  50E5               	movf	postdec1,w,c
   971  001E64  50E1               	movf	fsr1l,w,c
   972  001E66  E1FA               	bnz	copy_data0
   973                           
   974                           ; Initialize objects allocated to BANK1 (64 bytes)
   975                           ; load TBLPTR registers with __pidataBANK1
   976  001E68  0EB6               	movlw	low __pidataBANK1
   977  001E6A  6EF6               	movwf	tblptrl,c
   978  001E6C  0E27               	movlw	high __pidataBANK1
   979  001E6E  6EF7               	movwf	tblptrh,c
   980  001E70  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   981  001E72  6EF8               	movwf	tblptru,c
   982  001E74  EE01  F0A4         	lfsr	0,__pdataBANK1
   983  001E78  EE10 F040          	lfsr	1,64
   984  001E7C                     copy_data1:
   985  001E7C  0009               	tblrd		*+
   986  001E7E  CFF5 FFEE          	movff	tablat,postinc0
   987  001E82  50E5               	movf	postdec1,w,c
   988  001E84  50E1               	movf	fsr1l,w,c
   989  001E86  E1FA               	bnz	copy_data1
   990                           
   991                           ; Initialize objects allocated to BANK0 (13 bytes)
   992                           ; load TBLPTR registers with __pidataBANK0
   993  001E88  0E92               	movlw	low __pidataBANK0
   994  001E8A  6EF6               	movwf	tblptrl,c
   995  001E8C  0E2A               	movlw	high __pidataBANK0
   996  001E8E  6EF7               	movwf	tblptrh,c
   997  001E90  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   998  001E92  6EF8               	movwf	tblptru,c
   999  001E94  EE00  F0F3         	lfsr	0,__pdataBANK0
  1000  001E98  EE10 F00D          	lfsr	1,13
  1001  001E9C                     copy_data2:
  1002  001E9C  0009               	tblrd		*+
  1003  001E9E  CFF5 FFEE          	movff	tablat,postinc0
  1004  001EA2  50E5               	movf	postdec1,w,c
  1005  001EA4  50E1               	movf	fsr1l,w,c
  1006  001EA6  E1FA               	bnz	copy_data2
  1007                           
  1008                           ; Clear objects allocated to BANK3 (200 bytes)
  1009  001EA8  EE03  F000         	lfsr	0,__pbssBANK3
  1010  001EAC  0EC8               	movlw	200
  1011  001EAE                     clear_0:
  1012  001EAE  6AEE               	clrf	postinc0,c
  1013  001EB0  06E8               	decf	wreg,f,c
  1014  001EB2  E1FD               	bnz	clear_0
  1015                           
  1016                           ; Clear objects allocated to BANK2 (100 bytes)
  1017  001EB4  EE02  F000         	lfsr	0,__pbssBANK2
  1018  001EB8  0E64               	movlw	100
  1019  001EBA                     clear_1:
  1020  001EBA  6AEE               	clrf	postinc0,c
  1021  001EBC  06E8               	decf	wreg,f,c
  1022  001EBE  E1FD               	bnz	clear_1
  1023                           
  1024                           ; Clear objects allocated to BANK1 (164 bytes)
  1025  001EC0  EE01  F000         	lfsr	0,__pbssBANK1
  1026  001EC4  0EA4               	movlw	164
  1027  001EC6                     clear_2:
  1028  001EC6  6AEE               	clrf	postinc0,c
  1029  001EC8  06E8               	decf	wreg,f,c
  1030  001ECA  E1FD               	bnz	clear_2
  1031                           
  1032                           ; Clear objects allocated to BANK0 (69 bytes)
  1033  001ECC  EE00  F060         	lfsr	0,__pbssBANK0
  1034  001ED0  0E45               	movlw	69
  1035  001ED2                     clear_3:
  1036  001ED2  6AEE               	clrf	postinc0,c
  1037  001ED4  06E8               	decf	wreg,f,c
  1038  001ED6  E1FD               	bnz	clear_3
  1039                           
  1040                           ; Clear objects allocated to COMRAM (4 bytes)
  1041  001ED8  6A59               	clrf	(__pbssCOMRAM+3)& (0+255),c
  1042  001EDA  6A58               	clrf	(__pbssCOMRAM+2)& (0+255),c
  1043  001EDC  6A57               	clrf	(__pbssCOMRAM+1)& (0+255),c
  1044  001EDE  6A56               	clrf	__pbssCOMRAM& (0+255),c
  1045  001EE0                     end_of_initialization:
  1046                           	opt callstack 0
  1047  001EE0                     __end_of__initialization:
  1048                           	opt callstack 0
  1049  001EE0  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1050  001EE2  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1051  001EE4  0100               	movlb	0
  1052  001EE6  EF35  F006         	goto	_main	;jump to C main() function
  1053                           
  1054                           	psect	bssCOMRAM
  1055  000056                     __pbssCOMRAM:
  1056                           	opt callstack 0
  1057  000056                     _flags:
  1058                           	opt callstack 0
  1059  000056                     	ds	2
  1060  000058                     _eusart1RxHead:
  1061                           	opt callstack 0
  1062  000058                     	ds	1
  1063  000059                     _eusart2RxHead:
  1064                           	opt callstack 0
  1065  000059                     	ds	1
  1066                           
  1067                           	psect	bssBANK0
  1068  000060                     __pbssBANK0:
  1069                           	opt callstack 0
  1070  000060                     _eusart1TxBuffer:
  1071                           	opt callstack 0
  1072  000060                     	ds	16
  1073  000070                     _eusart2RxStatusBuffer:
  1074                           	opt callstack 0
  1075  000070                     	ds	8
  1076  000078                     _eusart2RxBuffer:
  1077                           	opt callstack 0
  1078  000078                     	ds	8
  1079  000080                     _eusart2TxBuffer:
  1080                           	opt callstack 0
  1081  000080                     	ds	8
  1082  000088                     _nout:
  1083                           	opt callstack 0
  1084  000088                     	ds	2
  1085  00008A                     _width:
  1086                           	opt callstack 0
  1087  00008A                     	ds	2
  1088  00008C                     _prec:
  1089                           	opt callstack 0
  1090  00008C                     	ds	2
  1091  00008E                     _ByteNum:
  1092                           	opt callstack 0
  1093  00008E                     	ds	2
  1094  000090                     _ByteHi:
  1095                           	opt callstack 0
  1096  000090                     	ds	2
  1097  000092                     _MBResCnt:
  1098                           	opt callstack 0
  1099  000092                     	ds	2
  1100  000094                     _i:
  1101                           	opt callstack 0
  1102  000094                     	ds	2
  1103  000096                     _ModDataCnt:
  1104                           	opt callstack 0
  1105  000096                     	ds	2
  1106  000098                     _rxStatus:
  1107                           	opt callstack 0
  1108  000098                     	ds	1
  1109  000099                     _RXStat:
  1110                           	opt callstack 0
  1111  000099                     	ds	1
  1112  00009A                     _Debug:
  1113                           	opt callstack 0
  1114  00009A                     	ds	1
  1115  00009B                     _eusart1RxLastError:
  1116                           	opt callstack 0
  1117  00009B                     	ds	1
  1118  00009C                     _eusart1RxCount:
  1119                           	opt callstack 0
  1120  00009C                     	ds	1
  1121  00009D                     _eusart1RxTail:
  1122                           	opt callstack 0
  1123  00009D                     	ds	1
  1124  00009E                     _eusart1TxTail:
  1125                           	opt callstack 0
  1126  00009E                     	ds	1
  1127  00009F                     _eusart1TxHead:
  1128                           	opt callstack 0
  1129  00009F                     	ds	1
  1130  0000A0                     _eusart2RxLastError:
  1131                           	opt callstack 0
  1132  0000A0                     	ds	1
  1133  0000A1                     _eusart2RxCount:
  1134                           	opt callstack 0
  1135  0000A1                     	ds	1
  1136  0000A2                     _eusart2RxTail:
  1137                           	opt callstack 0
  1138  0000A2                     	ds	1
  1139  0000A3                     _eusart2TxTail:
  1140                           	opt callstack 0
  1141  0000A3                     	ds	1
  1142  0000A4                     _eusart2TxHead:
  1143                           	opt callstack 0
  1144  0000A4                     	ds	1
  1145                           
  1146                           	psect	dataBANK0
  1147  0000F3                     __pdataBANK0:
  1148                           	opt callstack 0
  1149  0000F3                     stoa@F1139:
  1150                           	opt callstack 0
  1151  0000F3                     	ds	7
  1152  0000FA                     _ExpectedBytes:
  1153                           	opt callstack 0
  1154  0000FA                     	ds	2
  1155  0000FC                     _ByteLo:
  1156                           	opt callstack 0
  1157  0000FC                     	ds	2
  1158  0000FE                     _MBResCRC:
  1159                           	opt callstack 0
  1160  0000FE                     	ds	2
  1161                           
  1162                           	psect	bssBANK1
  1163  000100                     __pbssBANK1:
  1164                           	opt callstack 0
  1165  000100                     _ModbusData:
  1166                           	opt callstack 0
  1167  000100                     	ds	100
  1168  000164                     _MB400xx:
  1169                           	opt callstack 0
  1170  000164                     	ds	32
  1171  000184                     _dbuf:
  1172                           	opt callstack 0
  1173  000184                     	ds	32
  1174                           
  1175                           	psect	dataBANK1
  1176  0001A4                     __pdataBANK1:
  1177                           	opt callstack 0
  1178  0001A4                     _MBRespon:
  1179                           	opt callstack 0
  1180  0001A4                     	ds	64
  1181                           
  1182                           	psect	bssBANK2
  1183  000200                     __pbssBANK2:
  1184                           	opt callstack 0
  1185  000200                     _eusart1RxStatusBuffer:
  1186                           	opt callstack 0
  1187  000200                     	ds	100
  1188                           
  1189                           	psect	dataBANK2
  1190  000264                     __pdataBANK2:
  1191                           	opt callstack 0
  1192  000264                     _MB300xx:
  1193                           	opt callstack 0
  1194  000264                     	ds	64
  1195                           
  1196                           	psect	bssBANK3
  1197  000300                     __pbssBANK3:
  1198                           	opt callstack 0
  1199  000300                     _rxData:
  1200                           	opt callstack 0
  1201  000300                     	ds	100
  1202  000364                     _eusart1RxBuffer:
  1203                           	opt callstack 0
  1204  000364                     	ds	100
  1205                           
  1206                           	psect	cstackBANK1
  1207  0001E4                     __pcstackBANK1:
  1208                           	opt callstack 0
  1209  0001E4                     ??_main:
  1210                           
  1211                           ; 1 bytes @ 0x0
  1212  0001E4                     	ds	4
  1213                           
  1214                           	psect	cstackBANK0
  1215  0000A5                     __pcstackBANK0:
  1216                           	opt callstack 0
  1217  0000A5                     vfpfcnvrt@ll:
  1218                           	opt callstack 0
  1219                           
  1220                           ; 8 bytes @ 0x0
  1221  0000A5                     	ds	8
  1222  0000AD                     vfpfcnvrt@cp:
  1223                           	opt callstack 0
  1224                           
  1225                           ; 2 bytes @ 0x8
  1226  0000AD                     	ds	2
  1227  0000AF                     vfpfcnvrt@c:
  1228                           	opt callstack 0
  1229                           
  1230                           ; 1 bytes @ 0xA
  1231  0000AF                     	ds	1
  1232  0000B0                     vfpfcnvrt@done:
  1233                           	opt callstack 0
  1234                           
  1235                           ; 2 bytes @ 0xB
  1236  0000B0                     	ds	2
  1237  0000B2                     _vfpfcnvrt$1351:
  1238                           	opt callstack 0
  1239                           
  1240                           ; 2 bytes @ 0xD
  1241  0000B2                     	ds	2
  1242  0000B4                     vfpfcnvrt@llu:
  1243                           	opt callstack 0
  1244                           
  1245                           ; 8 bytes @ 0xF
  1246  0000B4                     	ds	8
  1247  0000BC                     ?_vfprintf:
  1248                           	opt callstack 0
  1249  0000BC                     vfprintf@fp:
  1250                           	opt callstack 0
  1251                           
  1252                           ; 2 bytes @ 0x17
  1253  0000BC                     	ds	2
  1254  0000BE                     vfprintf@fmt:
  1255                           	opt callstack 0
  1256                           
  1257                           ; 2 bytes @ 0x19
  1258  0000BE                     	ds	2
  1259  0000C0                     vfprintf@ap:
  1260                           	opt callstack 0
  1261                           
  1262                           ; 2 bytes @ 0x1B
  1263  0000C0                     	ds	2
  1264  0000C2                     ?_printf:
  1265                           	opt callstack 0
  1266  0000C2                     printf@fmt:
  1267                           	opt callstack 0
  1268                           
  1269                           ; 2 bytes @ 0x1D
  1270  0000C2                     	ds	10
  1271  0000CC                     printf@ap:
  1272                           	opt callstack 0
  1273                           
  1274                           ; 2 bytes @ 0x27
  1275  0000CC                     	ds	2
  1276  0000CE                     ??_checkCRC:
  1277  0000CE                     PrintModRespon@i:
  1278                           	opt callstack 0
  1279  0000CE                     PrintModbus@i:
  1280                           	opt callstack 0
  1281                           
  1282                           ; 2 bytes @ 0x29
  1283  0000CE                     	ds	5
  1284  0000D3                     checkCRC@crcHigh:
  1285                           	opt callstack 0
  1286                           
  1287                           ; 2 bytes @ 0x2E
  1288  0000D3                     	ds	2
  1289  0000D5                     checkCRC@crcLow:
  1290                           	opt callstack 0
  1291                           
  1292                           ; 2 bytes @ 0x30
  1293  0000D5                     	ds	2
  1294  0000D7                     checkCRC@j:
  1295                           	opt callstack 0
  1296                           
  1297                           ; 2 bytes @ 0x32
  1298  0000D7                     	ds	2
  1299  0000D9                     checkCRC@crc:
  1300                           	opt callstack 0
  1301                           
  1302                           ; 2 bytes @ 0x34
  1303  0000D9                     	ds	2
  1304  0000DB                     checkCRC@i:
  1305                           	opt callstack 0
  1306                           
  1307                           ; 2 bytes @ 0x36
  1308  0000DB                     	ds	2
  1309                           
  1310                           	psect	cstackCOMRAM
  1311  000001                     __pcstackCOMRAM:
  1312                           	opt callstack 0
  1313  000001                     ??_INTERRUPT_InterruptManager:
  1314  000001                     
  1315                           ; 1 bytes @ 0x0
  1316  000001                     	ds	4
  1317  000005                     ??_ClearRxBuff:
  1318  000005                     ??_AddRxBuffToModBus:
  1319  000005                     ?_strlen:
  1320                           	opt callstack 0
  1321  000005                     ?_isupper:
  1322                           	opt callstack 0
  1323  000005                     ?_isalpha:
  1324                           	opt callstack 0
  1325  000005                     ?_isdigit:
  1326                           	opt callstack 0
  1327  000005                     ?_isspace:
  1328                           	opt callstack 0
  1329  000005                     ?_islower:
  1330                           	opt callstack 0
  1331  000005                     ?_generateCRC:
  1332                           	opt callstack 0
  1333  000005                     ?___wmul:
  1334                           	opt callstack 0
  1335  000005                     ?___aodiv:
  1336                           	opt callstack 0
  1337  000005                     ?___aomod:
  1338                           	opt callstack 0
  1339  000005                     ?___lodiv:
  1340                           	opt callstack 0
  1341  000005                     ?___lomod:
  1342                           	opt callstack 0
  1343  000005                     EUSART2_Write@txData:
  1344                           	opt callstack 0
  1345  000005                     EUSART1_Read@readValue:
  1346                           	opt callstack 0
  1347  000005                     EUSART1_Write@txData:
  1348                           	opt callstack 0
  1349  000005                     EUSART2_SetFramingErrorHandler@interruptHandler:
  1350                           	opt callstack 0
  1351  000005                     EUSART2_SetOverrunErrorHandler@interruptHandler:
  1352                           	opt callstack 0
  1353  000005                     EUSART2_SetErrorHandler@interruptHandler:
  1354                           	opt callstack 0
  1355  000005                     EUSART2_SetTxInterruptHandler@interruptHandler:
  1356                           	opt callstack 0
  1357  000005                     EUSART2_SetRxInterruptHandler@interruptHandler:
  1358                           	opt callstack 0
  1359  000005                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1360                           	opt callstack 0
  1361  000005                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1362                           	opt callstack 0
  1363  000005                     EUSART1_SetErrorHandler@interruptHandler:
  1364                           	opt callstack 0
  1365  000005                     EUSART1_SetTxInterruptHandler@interruptHandler:
  1366                           	opt callstack 0
  1367  000005                     EUSART1_SetRxInterruptHandler@interruptHandler:
  1368                           	opt callstack 0
  1369  000005                     ClearModbusRespon@i:
  1370                           	opt callstack 0
  1371  000005                     generateCRC@MessCnt:
  1372                           	opt callstack 0
  1373  000005                     ClearModbusData@i:
  1374                           	opt callstack 0
  1375  000005                     ___wmul@multiplier:
  1376                           	opt callstack 0
  1377  000005                     isalpha@c:
  1378                           	opt callstack 0
  1379  000005                     isdigit@c:
  1380                           	opt callstack 0
  1381  000005                     isspace@c:
  1382                           	opt callstack 0
  1383  000005                     isupper@c:
  1384                           	opt callstack 0
  1385  000005                     strlen@s:
  1386                           	opt callstack 0
  1387  000005                     islower@c:
  1388                           	opt callstack 0
  1389  000005                     ___aodiv@dividend:
  1390                           	opt callstack 0
  1391  000005                     ___aomod@dividend:
  1392                           	opt callstack 0
  1393  000005                     ___lodiv@dividend:
  1394                           	opt callstack 0
  1395  000005                     ___lomod@dividend:
  1396                           	opt callstack 0
  1397                           
  1398                           ; 8 bytes @ 0x4
  1399  000005                     	ds	1
  1400  000006                     putch@txData:
  1401                           	opt callstack 0
  1402  000006                     UART1_Write_string@data:
  1403                           	opt callstack 0
  1404  000006                     ClearRxBuff@i:
  1405                           	opt callstack 0
  1406  000006                     AddRxBuffToModBus@i:
  1407                           	opt callstack 0
  1408                           
  1409                           ; 2 bytes @ 0x5
  1410  000006                     	ds	1
  1411  000007                     ??_isupper:
  1412  000007                     ??_isalpha:
  1413  000007                     ??_isdigit:
  1414  000007                     ??_isspace:
  1415  000007                     ??_islower:
  1416  000007                     generateCRC@HiOrLo:
  1417                           	opt callstack 0
  1418  000007                     ___wmul@multiplicand:
  1419                           	opt callstack 0
  1420  000007                     fputc@c:
  1421                           	opt callstack 0
  1422  000007                     strlen@a:
  1423                           	opt callstack 0
  1424                           
  1425                           ; 2 bytes @ 0x6
  1426  000007                     	ds	1
  1427  000008                     ??_generateCRC:
  1428  000008                     UART1_Write_string@data_len:
  1429                           	opt callstack 0
  1430                           
  1431                           ; 2 bytes @ 0x7
  1432  000008                     	ds	1
  1433  000009                     ___wmul@product:
  1434                           	opt callstack 0
  1435  000009                     fputc@fp:
  1436                           	opt callstack 0
  1437                           
  1438                           ; 2 bytes @ 0x8
  1439  000009                     	ds	1
  1440  00000A                     ??_UART1_Write_string:
  1441  00000A                     generateCRC@crcHigh:
  1442                           	opt callstack 0
  1443                           
  1444                           ; 2 bytes @ 0x9
  1445  00000A                     	ds	1
  1446  00000B                     ??_fputc:
  1447  00000B                     ?_toupper:
  1448                           	opt callstack 0
  1449  00000B                     _isspace$1838:
  1450                           	opt callstack 0
  1451  00000B                     UART1_Write_string@i:
  1452                           	opt callstack 0
  1453  00000B                     toupper@c:
  1454                           	opt callstack 0
  1455                           
  1456                           ; 2 bytes @ 0xA
  1457  00000B                     	ds	1
  1458  00000C                     ?_atoi:
  1459                           	opt callstack 0
  1460  00000C                     generateCRC@crcLow:
  1461                           	opt callstack 0
  1462  00000C                     atoi@s:
  1463                           	opt callstack 0
  1464                           
  1465                           ; 2 bytes @ 0xB
  1466  00000C                     	ds	1
  1467  00000D                     ??_toupper:
  1468  00000D                     ___aodiv@divisor:
  1469                           	opt callstack 0
  1470  00000D                     ___aomod@divisor:
  1471                           	opt callstack 0
  1472  00000D                     ___lodiv@divisor:
  1473                           	opt callstack 0
  1474  00000D                     ___lomod@divisor:
  1475                           	opt callstack 0
  1476                           
  1477                           ; 8 bytes @ 0xC
  1478  00000D                     	ds	1
  1479  00000E                     ??_atoi:
  1480  00000E                     generateCRC@i:
  1481                           	opt callstack 0
  1482                           
  1483                           ; 2 bytes @ 0xD
  1484  00000E                     	ds	2
  1485  000010                     ?_stoa:
  1486                           	opt callstack 0
  1487  000010                     generateCRC@j:
  1488                           	opt callstack 0
  1489  000010                     stoa@fp:
  1490                           	opt callstack 0
  1491  000010                     fputs@s:
  1492                           	opt callstack 0
  1493                           
  1494                           ; 2 bytes @ 0xF
  1495  000010                     	ds	1
  1496  000011                     _toupper$1902:
  1497                           	opt callstack 0
  1498                           
  1499                           ; 2 bytes @ 0x10
  1500  000011                     	ds	1
  1501  000012                     generateCRC@crc:
  1502                           	opt callstack 0
  1503  000012                     stoa@s:
  1504                           	opt callstack 0
  1505  000012                     atoi@neg:
  1506                           	opt callstack 0
  1507  000012                     fputs@fp:
  1508                           	opt callstack 0
  1509                           
  1510                           ; 2 bytes @ 0x11
  1511  000012                     	ds	2
  1512  000014                     ??_stoa:
  1513  000014                     fputs@c:
  1514                           	opt callstack 0
  1515  000014                     _atoi$1811:
  1516                           	opt callstack 0
  1517                           
  1518                           ; 2 bytes @ 0x13
  1519  000014                     	ds	1
  1520  000015                     ___aodiv@counter:
  1521                           	opt callstack 0
  1522  000015                     ___aomod@counter:
  1523                           	opt callstack 0
  1524  000015                     ___lomod@counter:
  1525                           	opt callstack 0
  1526  000015                     fputs@i:
  1527                           	opt callstack 0
  1528  000015                     stoa@nuls:
  1529                           	opt callstack 0
  1530  000015                     ___lodiv@quotient:
  1531                           	opt callstack 0
  1532                           
  1533                           ; 8 bytes @ 0x14
  1534  000015                     	ds	1
  1535  000016                     ___aodiv@sign:
  1536                           	opt callstack 0
  1537  000016                     ___aomod@sign:
  1538                           	opt callstack 0
  1539  000016                     _atoi$1813:
  1540                           	opt callstack 0
  1541                           
  1542                           ; 2 bytes @ 0x15
  1543  000016                     	ds	1
  1544  000017                     ?_abs:
  1545                           	opt callstack 0
  1546  000017                     ?_pad:
  1547                           	opt callstack 0
  1548  000017                     pad@fp:
  1549                           	opt callstack 0
  1550  000017                     abs@a:
  1551                           	opt callstack 0
  1552  000017                     ___aodiv@quotient:
  1553                           	opt callstack 0
  1554                           
  1555                           ; 8 bytes @ 0x16
  1556  000017                     	ds	1
  1557  000018                     _atoi$1812:
  1558                           	opt callstack 0
  1559                           
  1560                           ; 1 bytes @ 0x17
  1561  000018                     	ds	1
  1562  000019                     ??_abs:
  1563  000019                     pad@buf:
  1564                           	opt callstack 0
  1565  000019                     atoi@n:
  1566                           	opt callstack 0
  1567                           
  1568                           ; 2 bytes @ 0x18
  1569  000019                     	ds	2
  1570  00001B                     pad@p:
  1571                           	opt callstack 0
  1572                           
  1573                           ; 2 bytes @ 0x1A
  1574  00001B                     	ds	1
  1575  00001C                     stoa@i:
  1576                           	opt callstack 0
  1577                           
  1578                           ; 2 bytes @ 0x1B
  1579  00001C                     	ds	1
  1580  00001D                     ??_pad:
  1581  00001D                     ___lodiv@counter:
  1582                           	opt callstack 0
  1583                           
  1584                           ; 1 bytes @ 0x1C
  1585  00001D                     	ds	1
  1586  00001E                     pad@i:
  1587                           	opt callstack 0
  1588  00001E                     stoa@w:
  1589                           	opt callstack 0
  1590                           
  1591                           ; 2 bytes @ 0x1D
  1592  00001E                     	ds	2
  1593  000020                     pad@w:
  1594                           	opt callstack 0
  1595  000020                     stoa@cp:
  1596                           	opt callstack 0
  1597                           
  1598                           ; 2 bytes @ 0x1F
  1599  000020                     	ds	2
  1600  000022                     ?_dtoa:
  1601                           	opt callstack 0
  1602  000022                     ?_utoa:
  1603                           	opt callstack 0
  1604  000022                     ?_xtoa:
  1605                           	opt callstack 0
  1606  000022                     dtoa@fp:
  1607                           	opt callstack 0
  1608  000022                     stoa@p:
  1609                           	opt callstack 0
  1610  000022                     utoa@fp:
  1611                           	opt callstack 0
  1612  000022                     xtoa@fp:
  1613                           	opt callstack 0
  1614                           
  1615                           ; 2 bytes @ 0x21
  1616  000022                     	ds	2
  1617  000024                     stoa@l:
  1618                           	opt callstack 0
  1619  000024                     dtoa@d:
  1620                           	opt callstack 0
  1621  000024                     utoa@d:
  1622                           	opt callstack 0
  1623  000024                     xtoa@d:
  1624                           	opt callstack 0
  1625                           
  1626                           ; 8 bytes @ 0x23
  1627  000024                     	ds	8
  1628  00002C                     ??_dtoa:
  1629  00002C                     ??_utoa:
  1630  00002C                     xtoa@x:
  1631                           	opt callstack 0
  1632                           
  1633                           ; 1 bytes @ 0x2B
  1634  00002C                     	ds	1
  1635  00002D                     ??_xtoa:
  1636                           
  1637                           ; 1 bytes @ 0x2C
  1638  00002D                     	ds	7
  1639  000034                     _dtoa$1307:
  1640                           	opt callstack 0
  1641  000034                     utoa@p:
  1642                           	opt callstack 0
  1643                           
  1644                           ; 2 bytes @ 0x33
  1645  000034                     	ds	1
  1646  000035                     _xtoa$1336:
  1647                           	opt callstack 0
  1648                           
  1649                           ; 2 bytes @ 0x34
  1650  000035                     	ds	1
  1651  000036                     dtoa@p:
  1652                           	opt callstack 0
  1653  000036                     utoa@w:
  1654                           	opt callstack 0
  1655                           
  1656                           ; 2 bytes @ 0x35
  1657  000036                     	ds	1
  1658  000037                     _xtoa$1337:
  1659                           	opt callstack 0
  1660                           
  1661                           ; 2 bytes @ 0x36
  1662  000037                     	ds	1
  1663  000038                     dtoa@w:
  1664                           	opt callstack 0
  1665  000038                     utoa@n:
  1666                           	opt callstack 0
  1667                           
  1668                           ; 8 bytes @ 0x37
  1669  000038                     	ds	1
  1670  000039                     xtoa@p:
  1671                           	opt callstack 0
  1672                           
  1673                           ; 2 bytes @ 0x38
  1674  000039                     	ds	1
  1675  00003A                     dtoa@s:
  1676                           	opt callstack 0
  1677                           
  1678                           ; 2 bytes @ 0x39
  1679  00003A                     	ds	1
  1680  00003B                     xtoa@w:
  1681                           	opt callstack 0
  1682                           
  1683                           ; 2 bytes @ 0x3A
  1684  00003B                     	ds	1
  1685  00003C                     dtoa@n:
  1686                           	opt callstack 0
  1687                           
  1688                           ; 8 bytes @ 0x3B
  1689  00003C                     	ds	1
  1690  00003D                     xtoa@n:
  1691                           	opt callstack 0
  1692                           
  1693                           ; 8 bytes @ 0x3C
  1694  00003D                     	ds	3
  1695  000040                     utoa@i:
  1696                           	opt callstack 0
  1697                           
  1698                           ; 2 bytes @ 0x3F
  1699  000040                     	ds	4
  1700  000044                     dtoa@i:
  1701                           	opt callstack 0
  1702                           
  1703                           ; 2 bytes @ 0x43
  1704  000044                     	ds	1
  1705  000045                     xtoa@i:
  1706                           	opt callstack 0
  1707                           
  1708                           ; 2 bytes @ 0x44
  1709  000045                     	ds	2
  1710  000047                     xtoa@c:
  1711                           	opt callstack 0
  1712                           
  1713                           ; 2 bytes @ 0x46
  1714  000047                     	ds	2
  1715  000049                     ?_vfpfcnvrt:
  1716                           	opt callstack 0
  1717  000049                     vfpfcnvrt@fp:
  1718                           	opt callstack 0
  1719                           
  1720                           ; 2 bytes @ 0x48
  1721  000049                     	ds	2
  1722  00004B                     vfpfcnvrt@fmt:
  1723                           	opt callstack 0
  1724                           
  1725                           ; 2 bytes @ 0x4A
  1726  00004B                     	ds	2
  1727  00004D                     vfpfcnvrt@ap:
  1728                           	opt callstack 0
  1729                           
  1730                           ; 2 bytes @ 0x4C
  1731  00004D                     	ds	2
  1732  00004F                     ??_vfpfcnvrt:
  1733                           
  1734                           ; 1 bytes @ 0x4E
  1735  00004F                     	ds	4
  1736  000053                     vfprintf@cfmt:
  1737                           	opt callstack 0
  1738                           
  1739                           ; 2 bytes @ 0x52
  1740  000053                     	ds	2
  1741  000055                     ??_ModbusRx:
  1742  000055                     ??_PrintModRespon:
  1743  000055                     ??_PrintModbus:
  1744                           
  1745                           ; 1 bytes @ 0x54
  1746  000055                     	ds	1
  1747                           
  1748 ;;
  1749 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1750 ;;
  1751 ;; *************** function _main *****************
  1752 ;; Defined at:
  1753 ;;		line 132 in file "main.c"
  1754 ;; Parameters:    Size  Location     Type
  1755 ;;		None
  1756 ;; Auto vars:     Size  Location     Type
  1757 ;;  RXStat          1    0        _Bool 
  1758 ;; Return value:  Size  Location     Type
  1759 ;;                  1    wreg      void 
  1760 ;; Registers used:
  1761 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1762 ;; Tracked objects:
  1763 ;;		On entry : 0/0
  1764 ;;		On exit  : 0/0
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1768 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1769 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1770 ;;      Totals:         1       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1771 ;;Total ram usage:        5 bytes
  1772 ;; Hardware stack levels required when called:   15
  1773 ;; This function calls:
  1774 ;;		_ClearModbusData
  1775 ;;		_ClearModbusRespon
  1776 ;;		_ClearRxBuff
  1777 ;;		_InitialiseString
  1778 ;;		_ModbusRx
  1779 ;;		_PrintModRespon
  1780 ;;		_PrintModbus
  1781 ;;		_RXMode
  1782 ;;		_SYSTEM_Initialize
  1783 ;;		_UART1_Write_string
  1784 ;;		_generateCRC
  1785 ;;		_printf
  1786 ;; This function is called by:
  1787 ;;		Startup code after reset
  1788 ;; This function uses a non-reentrant model
  1789 ;;
  1790                           
  1791                           	psect	text0
  1792  000C6A                     __ptext0:
  1793                           	opt callstack 0
  1794  000C6A                     _main:
  1795                           	opt callstack 16
  1796  000C6A                     
  1797                           ;main.c: 135:     SYSTEM_Initialize();
  1798  000C6A  EC0E  F015         	call	_SYSTEM_Initialize	;wreg free
  1799  000C6E                     
  1800                           ;main.c: 142:     (INTCONbits.GIE = 1);
  1801  000C6E  8EF2               	bsf	242,7,c	;volatile
  1802  000C70                     
  1803                           ;main.c: 148:     (INTCONbits.PEIE = 1);
  1804  000C70  8CF2               	bsf	242,6,c	;volatile
  1805  000C72  9883               	bcf	131,4,c	;volatile
  1806  000C74  9A83               	bcf	131,5,c	;volatile
  1807  000C76  9C83               	bcf	131,6,c	;volatile
  1808  000C78  9E83               	bcf	131,7,c	;volatile
  1809  000C7A                     
  1810                           ;main.c: 158:     InitialiseString();
  1811  000C7A  EC12  F011         	call	_InitialiseString	;wreg free
  1812  000C7E                     
  1813                           ;main.c: 161:     RXMode();
  1814  000C7E  EC8E  F015         	call	_RXMode	;wreg free
  1815  000C82                     
  1816                           ;main.c: 162:     ClearRxBuff();
  1817  000C82  EC4E  F013         	call	_ClearRxBuff	;wreg free
  1818  000C86                     
  1819                           ;main.c: 163:     ClearModbusRespon();
  1820  000C86  EC02  F013         	call	_ClearModbusRespon	;wreg free
  1821  000C8A                     l5420:
  1822                           
  1823                           ;main.c: 169:     {;main.c: 170:         if(ModbusRx() == 1){
  1824  000C8A  EC1D  F00C         	call	_ModbusRx	;wreg free
  1825  000C8E  06E8               	decf	wreg,f,c
  1826  000C90  A4D8               	btfss	status,2,c
  1827  000C92  EF4D  F006         	goto	u5551
  1828  000C96  EF4F  F006         	goto	u5550
  1829  000C9A                     u5551:
  1830  000C9A  EF45  F006         	goto	l5420
  1831  000C9E                     u5550:
  1832  000C9E                     
  1833                           ;main.c: 172:             PrintModbus();
  1834  000C9E  EC50  F011         	call	_PrintModbus	;wreg free
  1835  000CA2                     
  1836                           ;main.c: 174:             if(ModbusData[1] == 0x03)
  1837  000CA2  0E03               	movlw	3
  1838  000CA4  0101               	movlb	1	; () banked
  1839  000CA6  1901               	xorwf	(_ModbusData+1)& (0+255),w,b
  1840  000CA8  A4D8               	btfss	status,2,c
  1841  000CAA  EF59  F006         	goto	u5561
  1842  000CAE  EF5B  F006         	goto	u5560
  1843  000CB2                     u5561:
  1844  000CB2  EF54  F007         	goto	l5462
  1845  000CB6                     u5560:
  1846  000CB6                     
  1847                           ; BSR set to: 1
  1848                           ;main.c: 175:             {;main.c: 185:                 MBResCnt = 0;
  1849  000CB6  0E00               	movlw	0
  1850  000CB8  0100               	movlb	0	; () banked
  1851  000CBA  6F93               	movwf	(_MBResCnt+1)& (0+255),b
  1852  000CBC  0E00               	movlw	0
  1853  000CBE  6F92               	movwf	_MBResCnt& (0+255),b
  1854  000CC0                     
  1855                           ; BSR set to: 0
  1856                           ;main.c: 186:                 MBRespon[MBResCnt] = ModbusData[0];
  1857  000CC0  0101               	movlb	1	; () banked
  1858  000CC2  5100               	movf	_ModbusData& (0+255),w,b
  1859  000CC4  6FE4               	movwf	??_main& (0+255),b
  1860  000CC6  6BE5               	clrf	(??_main+1)& (0+255),b
  1861  000CC8  90D8               	bcf	status,0,c
  1862  000CCA  0100               	movlb	0	; () banked
  1863  000CCC  3592               	rlcf	_MBResCnt& (0+255),w,b
  1864  000CCE  6ED9               	movwf	fsr2l,c
  1865  000CD0  3593               	rlcf	(_MBResCnt+1)& (0+255),w,b
  1866  000CD2  6EDA               	movwf	fsr2h,c
  1867  000CD4  0EA4               	movlw	low _MBRespon
  1868  000CD6  26D9               	addwf	fsr2l,f,c
  1869  000CD8  0E01               	movlw	high _MBRespon
  1870  000CDA  22DA               	addwfc	fsr2h,f,c
  1871  000CDC  C1E4  FFDE         	movff	??_main,postinc2
  1872  000CE0  C1E5  FFDD         	movff	??_main+1,postdec2
  1873  000CE4                     
  1874                           ; BSR set to: 0
  1875                           ;main.c: 187:                 MBResCnt++;
  1876  000CE4  4B92               	infsnz	_MBResCnt& (0+255),f,b
  1877  000CE6  2B93               	incf	(_MBResCnt+1)& (0+255),f,b
  1878  000CE8                     
  1879                           ; BSR set to: 0
  1880                           ;main.c: 188:                 MBRespon[MBResCnt] = ModbusData[1];
  1881  000CE8  0101               	movlb	1	; () banked
  1882  000CEA  5101               	movf	(_ModbusData+1)& (0+255),w,b
  1883  000CEC  6FE4               	movwf	??_main& (0+255),b
  1884  000CEE  6BE5               	clrf	(??_main+1)& (0+255),b
  1885  000CF0  90D8               	bcf	status,0,c
  1886  000CF2  0100               	movlb	0	; () banked
  1887  000CF4  3592               	rlcf	_MBResCnt& (0+255),w,b
  1888  000CF6  6ED9               	movwf	fsr2l,c
  1889  000CF8  3593               	rlcf	(_MBResCnt+1)& (0+255),w,b
  1890  000CFA  6EDA               	movwf	fsr2h,c
  1891  000CFC  0EA4               	movlw	low _MBRespon
  1892  000CFE  26D9               	addwf	fsr2l,f,c
  1893  000D00  0E01               	movlw	high _MBRespon
  1894  000D02  22DA               	addwfc	fsr2h,f,c
  1895  000D04  C1E4  FFDE         	movff	??_main,postinc2
  1896  000D08  C1E5  FFDD         	movff	??_main+1,postdec2
  1897  000D0C                     
  1898                           ; BSR set to: 0
  1899                           ;main.c: 189:                 MBResCnt++;
  1900  000D0C  4B92               	infsnz	_MBResCnt& (0+255),f,b
  1901  000D0E  2B93               	incf	(_MBResCnt+1)& (0+255),f,b
  1902  000D10                     
  1903                           ; BSR set to: 0
  1904                           ;main.c: 190:                 MBRespon[MBResCnt] = ModbusData[5] *2;
  1905  000D10  0101               	movlb	1	; () banked
  1906  000D12  5105               	movf	(_ModbusData+5)& (0+255),w,b
  1907  000D14  0D02               	mullw	2
  1908  000D16  90D8               	bcf	status,0,c
  1909  000D18  0100               	movlb	0	; () banked
  1910  000D1A  3592               	rlcf	_MBResCnt& (0+255),w,b
  1911  000D1C  6ED9               	movwf	fsr2l,c
  1912  000D1E  3593               	rlcf	(_MBResCnt+1)& (0+255),w,b
  1913  000D20  6EDA               	movwf	fsr2h,c
  1914  000D22  0EA4               	movlw	low _MBRespon
  1915  000D24  26D9               	addwf	fsr2l,f,c
  1916  000D26  0E01               	movlw	high _MBRespon
  1917  000D28  22DA               	addwfc	fsr2h,f,c
  1918  000D2A  CFF3 FFDE          	movff	prodl,postinc2
  1919  000D2E  CFF4 FFDD          	movff	prodh,postdec2
  1920  000D32                     
  1921                           ; BSR set to: 0
  1922                           ;main.c: 191:                 MBResCnt++;
  1923  000D32  4B92               	infsnz	_MBResCnt& (0+255),f,b
  1924  000D34  2B93               	incf	(_MBResCnt+1)& (0+255),f,b
  1925  000D36                     
  1926                           ; BSR set to: 0
  1927                           ;main.c: 192:                 for(i=0; i< (ModbusData[5]) ; i++ ){
  1928  000D36  0E00               	movlw	0
  1929  000D38  6F95               	movwf	(_i+1)& (0+255),b
  1930  000D3A  0E00               	movlw	0
  1931  000D3C  6F94               	movwf	_i& (0+255),b
  1932  000D3E  EFF8  F006         	goto	l5448
  1933  000D42                     l5442:
  1934                           
  1935                           ; BSR set to: 1
  1936                           ;main.c: 198:                     ByteLo = MB300xx[ModbusData[3] +i] & 0x00FF;
  1937  000D42  5103               	movf	(_ModbusData+3)& (0+255),w,b
  1938  000D44  0100               	movlb	0	; () banked
  1939  000D46  2594               	addwf	_i& (0+255),w,b
  1940  000D48  0101               	movlb	1	; () banked
  1941  000D4A  6FE4               	movwf	??_main& (0+255),b
  1942  000D4C  0E00               	movlw	0
  1943  000D4E  0100               	movlb	0	; () banked
  1944  000D50  2195               	addwfc	(_i+1)& (0+255),w,b
  1945  000D52  0101               	movlb	1	; () banked
  1946  000D54  6FE5               	movwf	(??_main+1)& (0+255),b
  1947  000D56  90D8               	bcf	status,0,c
  1948  000D58  37E4               	rlcf	??_main& (0+255),f,b
  1949  000D5A  37E5               	rlcf	(??_main+1)& (0+255),f,b
  1950  000D5C  0E64               	movlw	low _MB300xx
  1951  000D5E  25E4               	addwf	??_main& (0+255),w,b
  1952  000D60  6ED9               	movwf	fsr2l,c
  1953  000D62  0E02               	movlw	high _MB300xx
  1954  000D64  21E5               	addwfc	(??_main+1)& (0+255),w,b
  1955  000D66  6EDA               	movwf	fsr2h,c
  1956  000D68  CFDE F1E6          	movff	postinc2,??_main+2
  1957  000D6C  CFDD F1E7          	movff	postdec2,??_main+3
  1958  000D70  51E6               	movf	(??_main+2)& (0+255),w,b
  1959  000D72  0100               	movlb	0	; () banked
  1960  000D74  6FFC               	movwf	_ByteLo& (0+255),b
  1961  000D76  6BFD               	clrf	(_ByteLo+1)& (0+255),b
  1962                           
  1963                           ;main.c: 199:                     ByteHi = MB300xx[ModbusData[3] +i] >> 8;
  1964  000D78  0101               	movlb	1	; () banked
  1965  000D7A  5103               	movf	(_ModbusData+3)& (0+255),w,b
  1966  000D7C  0100               	movlb	0	; () banked
  1967  000D7E  2594               	addwf	_i& (0+255),w,b
  1968  000D80  0101               	movlb	1	; () banked
  1969  000D82  6FE4               	movwf	??_main& (0+255),b
  1970  000D84  0E00               	movlw	0
  1971  000D86  0100               	movlb	0	; () banked
  1972  000D88  2195               	addwfc	(_i+1)& (0+255),w,b
  1973  000D8A  0101               	movlb	1	; () banked
  1974  000D8C  6FE5               	movwf	(??_main+1)& (0+255),b
  1975  000D8E  90D8               	bcf	status,0,c
  1976  000D90  37E4               	rlcf	??_main& (0+255),f,b
  1977  000D92  37E5               	rlcf	(??_main+1)& (0+255),f,b
  1978  000D94  0E64               	movlw	low _MB300xx
  1979  000D96  25E4               	addwf	??_main& (0+255),w,b
  1980  000D98  6ED9               	movwf	fsr2l,c
  1981  000D9A  0E02               	movlw	high _MB300xx
  1982  000D9C  21E5               	addwfc	(??_main+1)& (0+255),w,b
  1983  000D9E  6EDA               	movwf	fsr2h,c
  1984  000DA0  CFDE F1E6          	movff	postinc2,??_main+2
  1985  000DA4  CFDD F1E7          	movff	postdec2,??_main+3
  1986  000DA8  51E7               	movf	(??_main+3)& (0+255),w,b
  1987  000DAA  0100               	movlb	0	; () banked
  1988  000DAC  6F90               	movwf	_ByteHi& (0+255),b
  1989  000DAE  6B91               	clrf	(_ByteHi+1)& (0+255),b
  1990                           
  1991                           ;main.c: 200:                     MBRespon[MBResCnt] = ByteHi;
  1992  000DB0  90D8               	bcf	status,0,c
  1993  000DB2  3592               	rlcf	_MBResCnt& (0+255),w,b
  1994  000DB4  6ED9               	movwf	fsr2l,c
  1995  000DB6  3593               	rlcf	(_MBResCnt+1)& (0+255),w,b
  1996  000DB8  6EDA               	movwf	fsr2h,c
  1997  000DBA  0EA4               	movlw	low _MBRespon
  1998  000DBC  26D9               	addwf	fsr2l,f,c
  1999  000DBE  0E01               	movlw	high _MBRespon
  2000  000DC0  22DA               	addwfc	fsr2h,f,c
  2001  000DC2  C090  FFDE         	movff	_ByteHi,postinc2
  2002  000DC6  C091  FFDD         	movff	_ByteHi+1,postdec2
  2003  000DCA                     
  2004                           ; BSR set to: 0
  2005                           ;main.c: 201:                     MBResCnt++;
  2006  000DCA  4B92               	infsnz	_MBResCnt& (0+255),f,b
  2007  000DCC  2B93               	incf	(_MBResCnt+1)& (0+255),f,b
  2008  000DCE                     
  2009                           ; BSR set to: 0
  2010                           ;main.c: 202:                     MBRespon[MBResCnt] = ByteLo;
  2011  000DCE  90D8               	bcf	status,0,c
  2012  000DD0  3592               	rlcf	_MBResCnt& (0+255),w,b
  2013  000DD2  6ED9               	movwf	fsr2l,c
  2014  000DD4  3593               	rlcf	(_MBResCnt+1)& (0+255),w,b
  2015  000DD6  6EDA               	movwf	fsr2h,c
  2016  000DD8  0EA4               	movlw	low _MBRespon
  2017  000DDA  26D9               	addwf	fsr2l,f,c
  2018  000DDC  0E01               	movlw	high _MBRespon
  2019  000DDE  22DA               	addwfc	fsr2h,f,c
  2020  000DE0  C0FC  FFDE         	movff	_ByteLo,postinc2
  2021  000DE4  C0FD  FFDD         	movff	_ByteLo+1,postdec2
  2022                           
  2023                           ;main.c: 203:                     MBResCnt++;
  2024  000DE8  4B92               	infsnz	_MBResCnt& (0+255),f,b
  2025  000DEA  2B93               	incf	(_MBResCnt+1)& (0+255),f,b
  2026                           
  2027                           ;main.c: 204:                 }
  2028  000DEC  4B94               	infsnz	_i& (0+255),f,b
  2029  000DEE  2B95               	incf	(_i+1)& (0+255),f,b
  2030  000DF0                     l5448:
  2031                           
  2032                           ; BSR set to: 0
  2033  000DF0  0101               	movlb	1	; () banked
  2034  000DF2  5105               	movf	(_ModbusData+5)& (0+255),w,b
  2035  000DF4  6FE4               	movwf	??_main& (0+255),b
  2036  000DF6  6BE5               	clrf	(??_main+1)& (0+255),b
  2037  000DF8  51E4               	movf	??_main& (0+255),w,b
  2038  000DFA  0100               	movlb	0	; () banked
  2039  000DFC  5D94               	subwf	_i& (0+255),w,b
  2040  000DFE  5195               	movf	(_i+1)& (0+255),w,b
  2041  000E00  0A80               	xorlw	128
  2042  000E02  0101               	movlb	1	; () banked
  2043  000E04  6FE6               	movwf	(??_main+2)& (0+255),b
  2044  000E06  51E5               	movf	(??_main+1)& (0+255),w,b
  2045  000E08  0A80               	xorlw	128
  2046  000E0A  59E6               	subwfb	(??_main+2)& (0+255),w,b
  2047  000E0C  A0D8               	btfss	status,0,c
  2048  000E0E  EF0B  F007         	goto	u5571
  2049  000E12  EF0D  F007         	goto	u5570
  2050  000E16                     u5571:
  2051  000E16  EFA1  F006         	goto	l5442
  2052  000E1A                     u5570:
  2053  000E1A                     
  2054                           ; BSR set to: 1
  2055                           ;main.c: 206:                 ByteHi = generateCRC(MBResCnt, 1);
  2056  000E1A  C092  F005         	movff	_MBResCnt,generateCRC@MessCnt
  2057  000E1E  C093  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
  2058  000E22  0E01               	movlw	1
  2059  000E24  6E07               	movwf	generateCRC@HiOrLo^0,c
  2060  000E26  EC2A  F00D         	call	_generateCRC	;wreg free
  2061  000E2A  C005  F090         	movff	?_generateCRC,_ByteHi
  2062  000E2E  C006  F091         	movff	?_generateCRC+1,_ByteHi+1
  2063                           
  2064                           ;main.c: 207:                 ByteLo = generateCRC(MBResCnt, 0);
  2065  000E32  C092  F005         	movff	_MBResCnt,generateCRC@MessCnt
  2066  000E36  C093  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
  2067  000E3A  0E00               	movlw	0
  2068  000E3C  6E07               	movwf	generateCRC@HiOrLo^0,c
  2069  000E3E  EC2A  F00D         	call	_generateCRC	;wreg free
  2070  000E42  C005  F0FC         	movff	?_generateCRC,_ByteLo
  2071  000E46  C006  F0FD         	movff	?_generateCRC+1,_ByteLo+1
  2072  000E4A                     
  2073                           ;main.c: 209:                 MBRespon[MBResCnt] = ByteHi;
  2074  000E4A  90D8               	bcf	status,0,c
  2075  000E4C  0100               	movlb	0	; () banked
  2076  000E4E  3592               	rlcf	_MBResCnt& (0+255),w,b
  2077  000E50  6ED9               	movwf	fsr2l,c
  2078  000E52  3593               	rlcf	(_MBResCnt+1)& (0+255),w,b
  2079  000E54  6EDA               	movwf	fsr2h,c
  2080  000E56  0EA4               	movlw	low _MBRespon
  2081  000E58  26D9               	addwf	fsr2l,f,c
  2082  000E5A  0E01               	movlw	high _MBRespon
  2083  000E5C  22DA               	addwfc	fsr2h,f,c
  2084  000E5E  C090  FFDE         	movff	_ByteHi,postinc2
  2085  000E62  C091  FFDD         	movff	_ByteHi+1,postdec2
  2086  000E66                     
  2087                           ; BSR set to: 0
  2088                           ;main.c: 210:                 MBRespon[MBResCnt +1] = ByteLo;
  2089  000E66  90D8               	bcf	status,0,c
  2090  000E68  3592               	rlcf	_MBResCnt& (0+255),w,b
  2091  000E6A  6ED9               	movwf	fsr2l,c
  2092  000E6C  3593               	rlcf	(_MBResCnt+1)& (0+255),w,b
  2093  000E6E  6EDA               	movwf	fsr2h,c
  2094  000E70  0EA6               	movlw	low (_MBRespon+2)
  2095  000E72  26D9               	addwf	fsr2l,f,c
  2096  000E74  0E01               	movlw	high (_MBRespon+2)
  2097  000E76  22DA               	addwfc	fsr2h,f,c
  2098  000E78  C0FC  FFDE         	movff	_ByteLo,postinc2
  2099  000E7C  C0FD  FFDD         	movff	_ByteLo+1,postdec2
  2100  000E80                     
  2101                           ; BSR set to: 0
  2102                           ;main.c: 211:                 MBResCnt = MBResCnt +2;
  2103  000E80  0E02               	movlw	2
  2104  000E82  2592               	addwf	_MBResCnt& (0+255),w,b
  2105  000E84  6F92               	movwf	_MBResCnt& (0+255),b
  2106  000E86  0E00               	movlw	0
  2107  000E88  2193               	addwfc	(_MBResCnt+1)& (0+255),w,b
  2108  000E8A  6F93               	movwf	(_MBResCnt+1)& (0+255),b
  2109  000E8C                     
  2110                           ; BSR set to: 0
  2111                           ;main.c: 213:                 PrintModRespon();
  2112  000E8C  ECD4  F010         	call	_PrintModRespon	;wreg free
  2113  000E90                     
  2114                           ;main.c: 214:                 UART1_Write_string(MBRespon,MBResCnt);
  2115  000E90  0EA4               	movlw	low _MBRespon
  2116  000E92  6E06               	movwf	UART1_Write_string@data^0,c
  2117  000E94  0E01               	movlw	high _MBRespon
  2118  000E96  6E07               	movwf	(UART1_Write_string@data+1)^0,c
  2119  000E98  C092  F008         	movff	_MBResCnt,UART1_Write_string@data_len
  2120  000E9C  C093  F009         	movff	_MBResCnt+1,UART1_Write_string@data_len+1
  2121  000EA0  EC8C  F011         	call	_UART1_Write_string	;wreg free
  2122                           
  2123                           ;main.c: 216:             }else{
  2124  000EA4  EF5E  F007         	goto	l5464
  2125  000EA8                     l5462:
  2126                           
  2127                           ; BSR set to: 1
  2128                           ;main.c: 217:                 printf("Function Code is: 0x%02x \r\n", ModbusData[1]);
  2129  000EA8  0E5B               	movlw	low STR_16
  2130  000EAA  0100               	movlb	0	; () banked
  2131  000EAC  6FC2               	movwf	printf@fmt& (0+255),b
  2132  000EAE  0EFF               	movlw	high STR_16
  2133  000EB0  6FC3               	movwf	(printf@fmt+1)& (0+255),b
  2134  000EB2  C101  F0C4         	movff	_ModbusData+1,?_printf+2
  2135  000EB6  6BC5               	clrf	(?_printf+3)& (0+255),b
  2136  000EB8  ECD9  F014         	call	_printf	;wreg free
  2137  000EBC                     l5464:
  2138                           
  2139                           ;main.c: 221:             ClearModbusData();
  2140  000EBC  EC28  F013         	call	_ClearModbusData	;wreg free
  2141  000EC0                     
  2142                           ;main.c: 222:             ClearModbusRespon();
  2143  000EC0  EC02  F013         	call	_ClearModbusRespon	;wreg free
  2144  000EC4  EF45  F006         	goto	l5420
  2145  000EC8  EF93  F000         	goto	start
  2146  000ECC                     __end_of_main:
  2147                           	opt callstack 0
  2148                           
  2149 ;; *************** function _generateCRC *****************
  2150 ;; Defined at:
  2151 ;;		line 100 in file "main.c"
  2152 ;; Parameters:    Size  Location     Type
  2153 ;;  MessCnt         2    4[COMRAM] int 
  2154 ;;  HiOrLo          1    6[COMRAM] _Bool 
  2155 ;; Auto vars:     Size  Location     Type
  2156 ;;  crc             2   17[COMRAM] unsigned int 
  2157 ;;  j               2   15[COMRAM] int 
  2158 ;;  i               2   13[COMRAM] int 
  2159 ;;  crcLow          2   11[COMRAM] unsigned int 
  2160 ;;  crcHigh         2    9[COMRAM] unsigned int 
  2161 ;; Return value:  Size  Location     Type
  2162 ;;                  2    4[COMRAM] unsigned int 
  2163 ;; Registers used:
  2164 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2165 ;; Tracked objects:
  2166 ;;		On entry : 0/0
  2167 ;;		On exit  : 0/0
  2168 ;;		Unchanged: 0/0
  2169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2170 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2171 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2172 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2173 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2174 ;;Total ram usage:       15 bytes
  2175 ;; Hardware stack levels used:    1
  2176 ;; Hardware stack levels required when called:    4
  2177 ;; This function calls:
  2178 ;;		Nothing
  2179 ;; This function is called by:
  2180 ;;		_main
  2181 ;; This function uses a non-reentrant model
  2182 ;;
  2183                           
  2184                           	psect	text1
  2185  001A54                     __ptext1:
  2186                           	opt callstack 0
  2187  001A54                     _generateCRC:
  2188                           	opt callstack 26
  2189  001A54                     
  2190                           ;main.c: 101:   unsigned int crc = 0xFFFF;
  2191  001A54  6812               	setf	generateCRC@crc^0,c
  2192  001A56  6813               	setf	(generateCRC@crc+1)^0,c
  2193  001A58                     
  2194                           ;main.c: 103:   unsigned int crcLow = 0;
  2195  001A58  0E00               	movlw	0
  2196  001A5A  6E0D               	movwf	(generateCRC@crcLow+1)^0,c
  2197  001A5C  0E00               	movlw	0
  2198  001A5E  6E0C               	movwf	generateCRC@crcLow^0,c
  2199                           
  2200                           ;main.c: 104:   int i,j = 0;
  2201  001A60  0E00               	movlw	0
  2202  001A62  6E11               	movwf	(generateCRC@j+1)^0,c
  2203  001A64  0E00               	movlw	0
  2204  001A66  6E10               	movwf	generateCRC@j^0,c
  2205                           
  2206                           ;main.c: 106:     for(i=0;i<MessCnt;i++){
  2207  001A68  0E00               	movlw	0
  2208  001A6A  6E0F               	movwf	(generateCRC@i+1)^0,c
  2209  001A6C  0E00               	movlw	0
  2210  001A6E  6E0E               	movwf	generateCRC@i^0,c
  2211  001A70  EF6C  F00D         	goto	l5326
  2212  001A74                     l5308:
  2213                           
  2214                           ;main.c: 107:       crc ^= MBRespon[i];
  2215  001A74  90D8               	bcf	status,0,c
  2216  001A76  340E               	rlcf	generateCRC@i^0,w,c
  2217  001A78  6ED9               	movwf	fsr2l,c
  2218  001A7A  340F               	rlcf	(generateCRC@i+1)^0,w,c
  2219  001A7C  6EDA               	movwf	fsr2h,c
  2220  001A7E  0EA4               	movlw	low _MBRespon
  2221  001A80  26D9               	addwf	fsr2l,f,c
  2222  001A82  0E01               	movlw	high _MBRespon
  2223  001A84  22DA               	addwfc	fsr2h,f,c
  2224  001A86  50DE               	movf	postinc2,w,c
  2225  001A88  1A12               	xorwf	generateCRC@crc^0,f,c
  2226  001A8A  50DD               	movf	postdec2,w,c
  2227  001A8C  1A13               	xorwf	(generateCRC@crc+1)^0,f,c
  2228  001A8E                     
  2229                           ;main.c: 108:       for(j=8; j!=0; j--){
  2230  001A8E  0E00               	movlw	0
  2231  001A90  6E11               	movwf	(generateCRC@j+1)^0,c
  2232  001A92  0E08               	movlw	8
  2233  001A94  6E10               	movwf	generateCRC@j^0,c
  2234  001A96                     l596:
  2235                           
  2236                           ;main.c: 109:         if((crc & 0x0001) != 0){
  2237  001A96  A012               	btfss	generateCRC@crc^0,0,c
  2238  001A98  EF50  F00D         	goto	u5421
  2239  001A9C  EF52  F00D         	goto	u5420
  2240  001AA0                     u5421:
  2241  001AA0  EF5B  F00D         	goto	l5320
  2242  001AA4                     u5420:
  2243  001AA4                     
  2244                           ;main.c: 110:           crc >>= 1;
  2245  001AA4  90D8               	bcf	status,0,c
  2246  001AA6  3213               	rrcf	(generateCRC@crc+1)^0,f,c
  2247  001AA8  3212               	rrcf	generateCRC@crc^0,f,c
  2248  001AAA                     
  2249                           ;main.c: 111:           crc ^= 0xA001;
  2250  001AAA  0E01               	movlw	1
  2251  001AAC  1A12               	xorwf	generateCRC@crc^0,f,c
  2252  001AAE  0EA0               	movlw	160
  2253  001AB0  1A13               	xorwf	(generateCRC@crc+1)^0,f,c
  2254                           
  2255                           ;main.c: 112:         }
  2256  001AB2  EF5E  F00D         	goto	l599
  2257  001AB6                     l5320:
  2258                           
  2259                           ;main.c: 114:           crc >>= 1;
  2260  001AB6  90D8               	bcf	status,0,c
  2261  001AB8  3213               	rrcf	(generateCRC@crc+1)^0,f,c
  2262  001ABA  3212               	rrcf	generateCRC@crc^0,f,c
  2263  001ABC                     l599:
  2264                           
  2265                           ;main.c: 116:       }
  2266  001ABC  0610               	decf	generateCRC@j^0,f,c
  2267  001ABE  A0D8               	btfss	status,0,c
  2268  001AC0  0611               	decf	(generateCRC@j+1)^0,f,c
  2269  001AC2  5010               	movf	generateCRC@j^0,w,c
  2270  001AC4  1011               	iorwf	(generateCRC@j+1)^0,w,c
  2271  001AC6  A4D8               	btfss	status,2,c
  2272  001AC8  EF68  F00D         	goto	u5431
  2273  001ACC  EF6A  F00D         	goto	u5430
  2274  001AD0                     u5431:
  2275  001AD0  EF4B  F00D         	goto	l596
  2276  001AD4                     u5430:
  2277  001AD4                     
  2278                           ;main.c: 117:     }
  2279  001AD4  4A0E               	infsnz	generateCRC@i^0,f,c
  2280  001AD6  2A0F               	incf	(generateCRC@i+1)^0,f,c
  2281  001AD8                     l5326:
  2282  001AD8  5005               	movf	generateCRC@MessCnt^0,w,c
  2283  001ADA  5C0E               	subwf	generateCRC@i^0,w,c
  2284  001ADC  500F               	movf	(generateCRC@i+1)^0,w,c
  2285  001ADE  0A80               	xorlw	128
  2286  001AE0  6E08               	movwf	??_generateCRC^0,c
  2287  001AE2  5006               	movf	(generateCRC@MessCnt+1)^0,w,c
  2288  001AE4  0A80               	xorlw	128
  2289  001AE6  5808               	subwfb	??_generateCRC^0,w,c
  2290  001AE8  A0D8               	btfss	status,0,c
  2291  001AEA  EF79  F00D         	goto	u5441
  2292  001AEE  EF7B  F00D         	goto	u5440
  2293  001AF2                     u5441:
  2294  001AF2  EF3A  F00D         	goto	l5308
  2295  001AF6                     u5440:
  2296  001AF6                     
  2297                           ;main.c: 119:     crcHigh = (crc & 0x00FF);
  2298  001AF6  5012               	movf	generateCRC@crc^0,w,c
  2299  001AF8  6E0A               	movwf	generateCRC@crcHigh^0,c
  2300  001AFA  6A0B               	clrf	(generateCRC@crcHigh+1)^0,c
  2301                           
  2302                           ;main.c: 120:     crcLow = (crc & 0xFF00) >>8;
  2303  001AFC  C012  F008         	movff	generateCRC@crc,??_generateCRC
  2304  001B00  C013  F009         	movff	generateCRC@crc+1,??_generateCRC+1
  2305  001B04  C009  F008         	movff	??_generateCRC+1,??_generateCRC
  2306  001B08  6A09               	clrf	(??_generateCRC+1)^0,c
  2307  001B0A  5008               	movf	??_generateCRC^0,w,c
  2308  001B0C  6E0C               	movwf	generateCRC@crcLow^0,c
  2309  001B0E  6A0D               	clrf	(generateCRC@crcLow+1)^0,c
  2310  001B10                     
  2311                           ;main.c: 122:     if(HiOrLo == 1){
  2312  001B10  0407               	decf	generateCRC@HiOrLo^0,w,c
  2313  001B12  A4D8               	btfss	status,2,c
  2314  001B14  EF8E  F00D         	goto	u5451
  2315  001B18  EF90  F00D         	goto	u5450
  2316  001B1C                     u5451:
  2317  001B1C  EF96  F00D         	goto	l601
  2318  001B20                     u5450:
  2319  001B20                     
  2320                           ;main.c: 123:         return crcHigh;
  2321  001B20  C00A  F005         	movff	generateCRC@crcHigh,?_generateCRC
  2322  001B24  C00B  F006         	movff	generateCRC@crcHigh+1,?_generateCRC+1
  2323  001B28  EF9A  F00D         	goto	l602
  2324  001B2C                     l601:
  2325                           
  2326                           ;main.c: 125:         return crcLow;
  2327  001B2C  C00C  F005         	movff	generateCRC@crcLow,?_generateCRC
  2328  001B30  C00D  F006         	movff	generateCRC@crcLow+1,?_generateCRC+1
  2329  001B34                     l602:
  2330  001B34  0012               	return		;funcret
  2331  001B36                     __end_of_generateCRC:
  2332                           	opt callstack 0
  2333                           
  2334 ;; *************** function _UART1_Write_string *****************
  2335 ;; Defined at:
  2336 ;;		line 53 in file "main.c"
  2337 ;; Parameters:    Size  Location     Type
  2338 ;;  data            2    5[COMRAM] PTR unsigned int 
  2339 ;;		 -> MBRespon(64), 
  2340 ;;  data_len        2    7[COMRAM] int 
  2341 ;; Auto vars:     Size  Location     Type
  2342 ;;  i               2   10[COMRAM] int 
  2343 ;; Return value:  Size  Location     Type
  2344 ;;                  1    wreg      void 
  2345 ;; Registers used:
  2346 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2347 ;; Tracked objects:
  2348 ;;		On entry : 0/0
  2349 ;;		On exit  : 0/0
  2350 ;;		Unchanged: 0/0
  2351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2352 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2353 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2354 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2355 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2356 ;;Total ram usage:        7 bytes
  2357 ;; Hardware stack levels used:    1
  2358 ;; Hardware stack levels required when called:    5
  2359 ;; This function calls:
  2360 ;;		_EUSART1_Write
  2361 ;;		_EUSART1_is_tx_done
  2362 ;;		_EUSART1_is_tx_ready
  2363 ;;		_TXMode
  2364 ;; This function is called by:
  2365 ;;		_main
  2366 ;; This function uses a non-reentrant model
  2367 ;;
  2368                           
  2369                           	psect	text2
  2370  002318                     __ptext2:
  2371                           	opt callstack 0
  2372  002318                     _UART1_Write_string:
  2373                           	opt callstack 25
  2374  002318                     
  2375                           ;main.c: 53:  void UART1_Write_string(unsigned int * data, int data_len);main.c: 54: {;m
      +                          ain.c: 55:     TXMode();
  2376  002318  EC8B  F015         	call	_TXMode	;wreg free
  2377  00231C                     l5252:
  2378  00231C  EC1B  F015         	call	_EUSART1_is_tx_ready	;wreg free
  2379  002320  0900               	iorlw	0
  2380  002322  B4D8               	btfsc	status,2,c
  2381  002324  EF96  F011         	goto	u5361
  2382  002328  EF98  F011         	goto	u5360
  2383  00232C                     u5361:
  2384  00232C  EF8E  F011         	goto	l5252
  2385  002330                     u5360:
  2386  002330                     
  2387                           ;main.c: 57:     for (int i = 0; i < data_len; i++) {
  2388  002330  0E00               	movlw	0
  2389  002332  6E0C               	movwf	(UART1_Write_string@i+1)^0,c
  2390  002334  0E00               	movlw	0
  2391  002336  6E0B               	movwf	UART1_Write_string@i^0,c
  2392  002338  EFB6  F011         	goto	l5262
  2393  00233C                     l5256:
  2394                           
  2395                           ;main.c: 58:         EUSART1_Write(data[i]);
  2396  00233C  90D8               	bcf	status,0,c
  2397  00233E  340B               	rlcf	UART1_Write_string@i^0,w,c
  2398  002340  6ED9               	movwf	fsr2l,c
  2399  002342  340C               	rlcf	(UART1_Write_string@i+1)^0,w,c
  2400  002344  6EDA               	movwf	fsr2h,c
  2401  002346  5006               	movf	UART1_Write_string@data^0,w,c
  2402  002348  26D9               	addwf	fsr2l,f,c
  2403  00234A  5007               	movf	(UART1_Write_string@data+1)^0,w,c
  2404  00234C  22DA               	addwfc	fsr2h,f,c
  2405  00234E  50DF               	movf	indf2,w,c
  2406  002350  ECF8  F011         	call	_EUSART1_Write
  2407  002354                     l5258:
  2408  002354  EC3F  F015         	call	_EUSART1_is_tx_done	;wreg free
  2409  002358  0900               	iorlw	0
  2410  00235A  B4D8               	btfsc	status,2,c
  2411  00235C  EFB2  F011         	goto	u5371
  2412  002360  EFB4  F011         	goto	u5370
  2413  002364                     u5371:
  2414  002364  EFAA  F011         	goto	l5258
  2415  002368                     u5370:
  2416  002368                     
  2417                           ;main.c: 60:     }
  2418  002368  4A0B               	infsnz	UART1_Write_string@i^0,f,c
  2419  00236A  2A0C               	incf	(UART1_Write_string@i+1)^0,f,c
  2420  00236C                     l5262:
  2421  00236C  5008               	movf	UART1_Write_string@data_len^0,w,c
  2422  00236E  5C0B               	subwf	UART1_Write_string@i^0,w,c
  2423  002370  500C               	movf	(UART1_Write_string@i+1)^0,w,c
  2424  002372  0A80               	xorlw	128
  2425  002374  6E0A               	movwf	??_UART1_Write_string^0,c
  2426  002376  5009               	movf	(UART1_Write_string@data_len+1)^0,w,c
  2427  002378  0A80               	xorlw	128
  2428  00237A  580A               	subwfb	??_UART1_Write_string^0,w,c
  2429  00237C  A0D8               	btfss	status,0,c
  2430  00237E  EFC3  F011         	goto	u5381
  2431  002382  EFC5  F011         	goto	u5380
  2432  002386                     u5381:
  2433  002386  EF9E  F011         	goto	l5256
  2434  00238A                     u5380:
  2435  00238A  0012               	return		;funcret
  2436  00238C                     __end_of_UART1_Write_string:
  2437                           	opt callstack 0
  2438                           
  2439 ;; *************** function _TXMode *****************
  2440 ;; Defined at:
  2441 ;;		line 16 in file "Modbus.c"
  2442 ;; Parameters:    Size  Location     Type
  2443 ;;		None
  2444 ;; Auto vars:     Size  Location     Type
  2445 ;;		None
  2446 ;; Return value:  Size  Location     Type
  2447 ;;                  1    wreg      void 
  2448 ;; Registers used:
  2449 ;;		None
  2450 ;; Tracked objects:
  2451 ;;		On entry : 0/0
  2452 ;;		On exit  : 0/0
  2453 ;;		Unchanged: 0/0
  2454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2459 ;;Total ram usage:        0 bytes
  2460 ;; Hardware stack levels used:    1
  2461 ;; Hardware stack levels required when called:    4
  2462 ;; This function calls:
  2463 ;;		Nothing
  2464 ;; This function is called by:
  2465 ;;		_UART1_Write_string
  2466 ;; This function uses a non-reentrant model
  2467 ;;
  2468                           
  2469                           	psect	text3
  2470  002B16                     __ptext3:
  2471                           	opt callstack 0
  2472  002B16                     _TXMode:
  2473                           	opt callstack 25
  2474  002B16  8086               	bsf	134,0,c	;volatile
  2475  002B18  8683               	bsf	131,3,c	;volatile
  2476  002B1A  0012               	return		;funcret
  2477  002B1C                     __end_of_TXMode:
  2478                           	opt callstack 0
  2479                           
  2480 ;; *************** function _EUSART1_is_tx_ready *****************
  2481 ;; Defined at:
  2482 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  2483 ;; Parameters:    Size  Location     Type
  2484 ;;		None
  2485 ;; Auto vars:     Size  Location     Type
  2486 ;;		None
  2487 ;; Return value:  Size  Location     Type
  2488 ;;                  1    wreg      _Bool 
  2489 ;; Registers used:
  2490 ;;		wreg, status,2
  2491 ;; Tracked objects:
  2492 ;;		On entry : 0/0
  2493 ;;		On exit  : 0/0
  2494 ;;		Unchanged: 0/0
  2495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2500 ;;Total ram usage:        0 bytes
  2501 ;; Hardware stack levels used:    1
  2502 ;; Hardware stack levels required when called:    4
  2503 ;; This function calls:
  2504 ;;		Nothing
  2505 ;; This function is called by:
  2506 ;;		_UART1_Write_string
  2507 ;; This function uses a non-reentrant model
  2508 ;;
  2509                           
  2510                           	psect	text4
  2511  002A36                     __ptext4:
  2512                           	opt callstack 0
  2513  002A36                     _EUSART1_is_tx_ready:
  2514                           	opt callstack 25
  2515  002A36                     
  2516                           ;mcc_generated_files/eusart1.c: 134:     return (eusart1TxBufferRemaining ? 1 : 0);
  2517  002A36  0100               	movlb	0	; () banked
  2518  002A38  51F1               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
  2519  002A3A  A4D8               	btfss	status,2,c
  2520  002A3C  EF22  F015         	goto	u5171
  2521  002A40  EF25  F015         	goto	u5170
  2522  002A44                     u5171:
  2523  002A44  0E01               	movlw	1
  2524  002A46  EF26  F015         	goto	u5180
  2525  002A4A                     u5170:
  2526  002A4A  0E00               	movlw	0
  2527  002A4C                     u5180:
  2528  002A4C                     
  2529                           ; BSR set to: 0
  2530  002A4C  0012               	return		;funcret
  2531  002A4E                     __end_of_EUSART1_is_tx_ready:
  2532                           	opt callstack 0
  2533                           
  2534 ;; *************** function _EUSART1_is_tx_done *****************
  2535 ;; Defined at:
  2536 ;;		line 142 in file "mcc_generated_files/eusart1.c"
  2537 ;; Parameters:    Size  Location     Type
  2538 ;;		None
  2539 ;; Auto vars:     Size  Location     Type
  2540 ;;		None
  2541 ;; Return value:  Size  Location     Type
  2542 ;;                  1    wreg      _Bool 
  2543 ;; Registers used:
  2544 ;;		wreg
  2545 ;; Tracked objects:
  2546 ;;		On entry : 0/0
  2547 ;;		On exit  : 0/0
  2548 ;;		Unchanged: 0/0
  2549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2554 ;;Total ram usage:        0 bytes
  2555 ;; Hardware stack levels used:    1
  2556 ;; Hardware stack levels required when called:    4
  2557 ;; This function calls:
  2558 ;;		Nothing
  2559 ;; This function is called by:
  2560 ;;		_UART1_Write_string
  2561 ;; This function uses a non-reentrant model
  2562 ;;
  2563                           
  2564                           	psect	text5
  2565  002A7E                     __ptext5:
  2566                           	opt callstack 0
  2567  002A7E                     _EUSART1_is_tx_done:
  2568                           	opt callstack 25
  2569  002A7E                     
  2570                           ;mcc_generated_files/eusart1.c: 144:     return TX1STAbits.TRMT;
  2571  002A7E  B29E               	btfsc	158,1,c	;volatile
  2572  002A80  EF44  F015         	goto	u5211
  2573  002A84  EF47  F015         	goto	u5210
  2574  002A88                     u5211:
  2575  002A88  0E01               	movlw	1
  2576  002A8A  EF48  F015         	goto	u5216
  2577  002A8E                     u5210:
  2578  002A8E  0E00               	movlw	0
  2579  002A90                     u5216:
  2580  002A90  0012               	return		;funcret
  2581  002A92                     __end_of_EUSART1_is_tx_done:
  2582                           	opt callstack 0
  2583                           
  2584 ;; *************** function _EUSART1_Write *****************
  2585 ;; Defined at:
  2586 ;;		line 173 in file "mcc_generated_files/eusart1.c"
  2587 ;; Parameters:    Size  Location     Type
  2588 ;;  txData          1    wreg     unsigned char 
  2589 ;; Auto vars:     Size  Location     Type
  2590 ;;  txData          1    4[COMRAM] unsigned char 
  2591 ;; Return value:  Size  Location     Type
  2592 ;;                  1    wreg      void 
  2593 ;; Registers used:
  2594 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2595 ;; Tracked objects:
  2596 ;;		On entry : 0/0
  2597 ;;		On exit  : 0/0
  2598 ;;		Unchanged: 0/0
  2599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2601 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2603 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2604 ;;Total ram usage:        1 bytes
  2605 ;; Hardware stack levels used:    1
  2606 ;; Hardware stack levels required when called:    4
  2607 ;; This function calls:
  2608 ;;		Nothing
  2609 ;; This function is called by:
  2610 ;;		_UART1_Write_string
  2611 ;; This function uses a non-reentrant model
  2612 ;;
  2613                           
  2614                           	psect	text6
  2615  0023F0                     __ptext6:
  2616                           	opt callstack 0
  2617  0023F0                     _EUSART1_Write:
  2618                           	opt callstack 25
  2619                           
  2620                           ;incstack = 0
  2621                           ;EUSART1_Write@txData stored from wreg
  2622  0023F0  6E05               	movwf	EUSART1_Write@txData^0,c
  2623  0023F2                     l5150:
  2624                           
  2625                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
  2626  0023F2  0100               	movlb	0	; () banked
  2627  0023F4  51F1               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
  2628  0023F6  B4D8               	btfsc	status,2,c
  2629  0023F8  EF00  F012         	goto	u5241
  2630  0023FC  EF02  F012         	goto	u5240
  2631  002400                     u5241:
  2632  002400  EFF9  F011         	goto	l5150
  2633  002404                     u5240:
  2634  002404                     
  2635                           ; BSR set to: 0
  2636                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE3bits.TX1IE)
  2637  002404  010E               	movlb	14	; () banked
  2638  002406  B9C5               	btfsc	197,4,b	;volatile
  2639  002408  EF08  F012         	goto	u5251
  2640  00240C  EF0A  F012         	goto	u5250
  2641  002410                     u5251:
  2642  002410  EF0E  F012         	goto	l471
  2643  002414                     u5250:
  2644  002414                     
  2645                           ; BSR set to: 14
  2646                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          X1REG = txData;
  2647  002414  C005  FF9A         	movff	EUSART1_Write@txData,3994	;volatile
  2648                           
  2649                           ;mcc_generated_files/eusart1.c: 182:     }
  2650  002418  EF24  F012         	goto	l5164
  2651  00241C                     l471:
  2652                           
  2653                           ; BSR set to: 14
  2654                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE3bits.TX1IE = 0;
  2655  00241C  99C5               	bcf	197,4,b	;volatile
  2656  00241E                     
  2657                           ; BSR set to: 14
  2658                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
  2659  00241E  0E60               	movlw	low _eusart1TxBuffer
  2660  002420  0100               	movlb	0	; () banked
  2661  002422  259F               	addwf	_eusart1TxHead& (0+255),w,b	;volatile
  2662  002424  6ED9               	movwf	fsr2l,c
  2663  002426  6ADA               	clrf	fsr2h,c
  2664  002428  0E00               	movlw	high _eusart1TxBuffer
  2665  00242A  22DA               	addwfc	fsr2h,f,c
  2666  00242C  C005  FFDF         	movff	EUSART1_Write@txData,indf2
  2667  002430                     
  2668                           ; BSR set to: 0
  2669  002430  2B9F               	incf	_eusart1TxHead& (0+255),f,b	;volatile
  2670  002432                     
  2671                           ; BSR set to: 0
  2672                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
  2673  002432  0E0F               	movlw	15
  2674  002434  659F               	cpfsgt	_eusart1TxHead& (0+255),b	;volatile
  2675  002436  EF1F  F012         	goto	u5261
  2676  00243A  EF21  F012         	goto	u5260
  2677  00243E                     u5261:
  2678  00243E  EF23  F012         	goto	l5162
  2679  002442                     u5260:
  2680  002442                     
  2681                           ; BSR set to: 0
  2682                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
  2683  002442  0E00               	movlw	0
  2684  002444  6F9F               	movwf	_eusart1TxHead& (0+255),b	;volatile
  2685  002446                     l5162:
  2686                           
  2687                           ; BSR set to: 0
  2688                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
  2689  002446  07F1               	decf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
  2690  002448                     l5164:
  2691                           
  2692                           ;mcc_generated_files/eusart1.c: 193:     PIE3bits.TX1IE = 1;
  2693  002448  010E               	movlb	14	; () banked
  2694  00244A  89C5               	bsf	197,4,b	;volatile
  2695  00244C                     
  2696                           ; BSR set to: 14
  2697  00244C  0012               	return		;funcret
  2698  00244E                     __end_of_EUSART1_Write:
  2699                           	opt callstack 0
  2700                           
  2701 ;; *************** function _SYSTEM_Initialize *****************
  2702 ;; Defined at:
  2703 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2704 ;; Parameters:    Size  Location     Type
  2705 ;;		None
  2706 ;; Auto vars:     Size  Location     Type
  2707 ;;		None
  2708 ;; Return value:  Size  Location     Type
  2709 ;;                  1    wreg      void 
  2710 ;; Registers used:
  2711 ;;		wreg, status,2, status,0, cstack
  2712 ;; Tracked objects:
  2713 ;;		On entry : 0/0
  2714 ;;		On exit  : 0/0
  2715 ;;		Unchanged: 0/0
  2716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2721 ;;Total ram usage:        0 bytes
  2722 ;; Hardware stack levels used:    1
  2723 ;; Hardware stack levels required when called:    6
  2724 ;; This function calls:
  2725 ;;		_EUSART1_Initialize
  2726 ;;		_EUSART2_Initialize
  2727 ;;		_INTERRUPT_Initialize
  2728 ;;		_OSCILLATOR_Initialize
  2729 ;;		_PIN_MANAGER_Initialize
  2730 ;;		_PMD_Initialize
  2731 ;; This function is called by:
  2732 ;;		_main
  2733 ;; This function uses a non-reentrant model
  2734 ;;
  2735                           
  2736                           	psect	text7
  2737  002A1C                     __ptext7:
  2738                           	opt callstack 0
  2739  002A1C                     _SYSTEM_Initialize:
  2740                           	opt callstack 24
  2741  002A1C                     
  2742                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  2743  002A1C  EC9A  F015         	call	_INTERRUPT_Initialize	;wreg free
  2744  002A20                     
  2745                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  2746  002A20  EC00  F015         	call	_PMD_Initialize	;wreg free
  2747  002A24                     
  2748                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  2749  002A24  EC10  F010         	call	_PIN_MANAGER_Initialize	;wreg free
  2750  002A28                     
  2751                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  2752  002A28  EC27  F015         	call	_OSCILLATOR_Initialize	;wreg free
  2753  002A2C                     
  2754                           ;mcc_generated_files/mcc.c: 56:     EUSART1_Initialize();
  2755  002A2C  EC96  F010         	call	_EUSART1_Initialize	;wreg free
  2756  002A30                     
  2757                           ;mcc_generated_files/mcc.c: 57:     EUSART2_Initialize();
  2758  002A30  EC57  F010         	call	_EUSART2_Initialize	;wreg free
  2759  002A34  0012               	return		;funcret
  2760  002A36                     __end_of_SYSTEM_Initialize:
  2761                           	opt callstack 0
  2762                           
  2763 ;; *************** function _PMD_Initialize *****************
  2764 ;; Defined at:
  2765 ;;		line 74 in file "mcc_generated_files/mcc.c"
  2766 ;; Parameters:    Size  Location     Type
  2767 ;;		None
  2768 ;; Auto vars:     Size  Location     Type
  2769 ;;		None
  2770 ;; Return value:  Size  Location     Type
  2771 ;;                  1    wreg      void 
  2772 ;; Registers used:
  2773 ;;		wreg, status,2
  2774 ;; Tracked objects:
  2775 ;;		On entry : 0/0
  2776 ;;		On exit  : 0/0
  2777 ;;		Unchanged: 0/0
  2778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2783 ;;Total ram usage:        0 bytes
  2784 ;; Hardware stack levels used:    1
  2785 ;; Hardware stack levels required when called:    4
  2786 ;; This function calls:
  2787 ;;		Nothing
  2788 ;; This function is called by:
  2789 ;;		_SYSTEM_Initialize
  2790 ;; This function uses a non-reentrant model
  2791 ;;
  2792                           
  2793                           	psect	text8
  2794  002A00                     __ptext8:
  2795                           	opt callstack 0
  2796  002A00                     _PMD_Initialize:
  2797                           	opt callstack 25
  2798  002A00                     
  2799                           ;mcc_generated_files/mcc.c: 77:     PMD0 = 0x00;
  2800  002A00  0E00               	movlw	0
  2801  002A02  010E               	movlb	14	; () banked
  2802  002A04  6FE1               	movwf	225,b	;volatile
  2803                           
  2804                           ;mcc_generated_files/mcc.c: 79:     PMD1 = 0x00;
  2805  002A06  0E00               	movlw	0
  2806  002A08  6FE2               	movwf	226,b	;volatile
  2807                           
  2808                           ;mcc_generated_files/mcc.c: 81:     PMD2 = 0x00;
  2809  002A0A  0E00               	movlw	0
  2810  002A0C  6FE3               	movwf	227,b	;volatile
  2811                           
  2812                           ;mcc_generated_files/mcc.c: 83:     PMD3 = 0x00;
  2813  002A0E  0E00               	movlw	0
  2814  002A10  6FE4               	movwf	228,b	;volatile
  2815                           
  2816                           ;mcc_generated_files/mcc.c: 85:     PMD4 = 0x00;
  2817  002A12  0E00               	movlw	0
  2818  002A14  6FE5               	movwf	229,b	;volatile
  2819                           
  2820                           ;mcc_generated_files/mcc.c: 87:     PMD5 = 0x00;
  2821  002A16  0E00               	movlw	0
  2822  002A18  6FE6               	movwf	230,b	;volatile
  2823  002A1A                     
  2824                           ; BSR set to: 14
  2825  002A1A  0012               	return		;funcret
  2826  002A1C                     __end_of_PMD_Initialize:
  2827                           	opt callstack 0
  2828                           
  2829 ;; *************** function _PIN_MANAGER_Initialize *****************
  2830 ;; Defined at:
  2831 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2832 ;; Parameters:    Size  Location     Type
  2833 ;;		None
  2834 ;; Auto vars:     Size  Location     Type
  2835 ;;		None
  2836 ;; Return value:  Size  Location     Type
  2837 ;;                  1    wreg      void 
  2838 ;; Registers used:
  2839 ;;		wreg, status,2
  2840 ;; Tracked objects:
  2841 ;;		On entry : 0/0
  2842 ;;		On exit  : 0/0
  2843 ;;		Unchanged: 0/0
  2844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2849 ;;Total ram usage:        0 bytes
  2850 ;; Hardware stack levels used:    1
  2851 ;; Hardware stack levels required when called:    4
  2852 ;; This function calls:
  2853 ;;		Nothing
  2854 ;; This function is called by:
  2855 ;;		_SYSTEM_Initialize
  2856 ;; This function uses a non-reentrant model
  2857 ;;
  2858                           
  2859                           	psect	text9
  2860  002020                     __ptext9:
  2861                           	opt callstack 0
  2862  002020                     _PIN_MANAGER_Initialize:
  2863                           	opt callstack 25
  2864  002020                     
  2865                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  2866  002020  0E00               	movlw	0
  2867  002022  6E87               	movwf	135,c	;volatile
  2868                           
  2869                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  2870  002024  0E00               	movlw	0
  2871  002026  6E86               	movwf	134,c	;volatile
  2872                           
  2873                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  2874  002028  0E00               	movlw	0
  2875  00202A  6E83               	movwf	131,c	;volatile
  2876                           
  2877                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  2878  00202C  0E00               	movlw	0
  2879  00202E  6E84               	movwf	132,c	;volatile
  2880                           
  2881                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  2882  002030  0E00               	movlw	0
  2883  002032  6E85               	movwf	133,c	;volatile
  2884                           
  2885                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  2886  002034  0E07               	movlw	7
  2887  002036  6E8C               	movwf	140,c	;volatile
  2888                           
  2889                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x07;
  2890  002038  0E07               	movlw	7
  2891  00203A  6E88               	movwf	136,c	;volatile
  2892                           
  2893                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xBF;
  2894  00203C  0EBF               	movlw	191
  2895  00203E  6E89               	movwf	137,c	;volatile
  2896                           
  2897                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  2898  002040  0EBF               	movlw	191
  2899  002042  6E8A               	movwf	138,c	;volatile
  2900                           
  2901                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFE;
  2902  002044  0EFE               	movlw	254
  2903  002046  6E8B               	movwf	139,c	;volatile
  2904  002048                     
  2905                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
  2906  002048  010F               	movlb	15	; () banked
  2907  00204A  6926               	setf	38,b	;volatile
  2908                           
  2909                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x3B;
  2910  00204C  0E3B               	movlw	59
  2911  00204E  6F21               	movwf	33,b	;volatile
  2912                           
  2913                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x37;
  2914  002050  0E37               	movlw	55
  2915  002052  6F19               	movwf	25,b	;volatile
  2916                           
  2917                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  2918  002054  0E07               	movlw	7
  2919  002056  6F2E               	movwf	46,b	;volatile
  2920  002058                     
  2921                           ; BSR set to: 15
  2922                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
  2923  002058  6911               	setf	17,b	;volatile
  2924                           
  2925                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  2926  00205A  0E00               	movlw	0
  2927  00205C  6F25               	movwf	37,b	;volatile
  2928                           
  2929                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  2930  00205E  0E00               	movlw	0
  2931  002060  6F2D               	movwf	45,b	;volatile
  2932                           
  2933                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  2934  002062  0E00               	movlw	0
  2935  002064  6F18               	movwf	24,b	;volatile
  2936                           
  2937                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  2938  002066  0E00               	movlw	0
  2939  002068  6F10               	movwf	16,b	;volatile
  2940                           
  2941                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  2942  00206A  0E00               	movlw	0
  2943  00206C  6F20               	movwf	32,b	;volatile
  2944                           
  2945                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
  2946  00206E  0E00               	movlw	0
  2947  002070  6F2C               	movwf	44,b	;volatile
  2948                           
  2949                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
  2950  002072  0E00               	movlw	0
  2951  002074  6F0F               	movwf	15,b	;volatile
  2952                           
  2953                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
  2954  002076  0E00               	movlw	0
  2955  002078  6F17               	movwf	23,b	;volatile
  2956                           
  2957                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
  2958  00207A  0E00               	movlw	0
  2959  00207C  6F1F               	movwf	31,b	;volatile
  2960                           
  2961                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
  2962  00207E  0E00               	movlw	0
  2963  002080  6F24               	movwf	36,b	;volatile
  2964  002082                     
  2965                           ; BSR set to: 15
  2966                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
  2967  002082  690E               	setf	14,b	;volatile
  2968  002084                     
  2969                           ; BSR set to: 15
  2970                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
  2971  002084  6916               	setf	22,b	;volatile
  2972  002086                     
  2973                           ; BSR set to: 15
  2974                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
  2975  002086  691E               	setf	30,b	;volatile
  2976  002088                     
  2977                           ; BSR set to: 15
  2978                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
  2979  002088  6923               	setf	35,b	;volatile
  2980                           
  2981                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
  2982  00208A  0E07               	movlw	7
  2983  00208C  6F2B               	movwf	43,b	;volatile
  2984  00208E                     
  2985                           ; BSR set to: 15
  2986                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
  2987  00208E  690D               	setf	13,b	;volatile
  2988  002090                     
  2989                           ; BSR set to: 15
  2990                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
  2991  002090  6915               	setf	21,b	;volatile
  2992  002092                     
  2993                           ; BSR set to: 15
  2994                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
  2995  002092  691D               	setf	29,b	;volatile
  2996  002094                     
  2997                           ; BSR set to: 15
  2998                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
  2999  002094  6922               	setf	34,b	;volatile
  3000                           
  3001                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x0F;
  3002  002096  0E0F               	movlw	15
  3003  002098  6F2A               	movwf	42,b	;volatile
  3004                           
  3005                           ;mcc_generated_files/pin_manager.c: 127:     RX1PPS = 0x17;
  3006  00209A  0E17               	movlw	23
  3007  00209C  010E               	movlb	14	; () banked
  3008  00209E  6FB5               	movwf	181,b	;volatile
  3009                           
  3010                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x0B;
  3011  0020A0  0E0B               	movlw	11
  3012  0020A2  6FF5               	movwf	245,b	;volatile
  3013                           
  3014                           ;mcc_generated_files/pin_manager.c: 129:     RC6PPS = 0x09;
  3015  0020A4  0E09               	movlw	9
  3016  0020A6  6FFD               	movwf	253,b	;volatile
  3017                           
  3018                           ;mcc_generated_files/pin_manager.c: 130:     RX2PPS = 0x0F;
  3019  0020A8  0E0F               	movlw	15
  3020  0020AA  6F8D               	movwf	141,b	;volatile
  3021  0020AC                     
  3022                           ; BSR set to: 14
  3023  0020AC  0012               	return		;funcret
  3024  0020AE                     __end_of_PIN_MANAGER_Initialize:
  3025                           	opt callstack 0
  3026                           
  3027 ;; *************** function _OSCILLATOR_Initialize *****************
  3028 ;; Defined at:
  3029 ;;		line 60 in file "mcc_generated_files/mcc.c"
  3030 ;; Parameters:    Size  Location     Type
  3031 ;;		None
  3032 ;; Auto vars:     Size  Location     Type
  3033 ;;		None
  3034 ;; Return value:  Size  Location     Type
  3035 ;;                  1    wreg      void 
  3036 ;; Registers used:
  3037 ;;		wreg, status,2
  3038 ;; Tracked objects:
  3039 ;;		On entry : 0/0
  3040 ;;		On exit  : 0/0
  3041 ;;		Unchanged: 0/0
  3042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3047 ;;Total ram usage:        0 bytes
  3048 ;; Hardware stack levels used:    1
  3049 ;; Hardware stack levels required when called:    4
  3050 ;; This function calls:
  3051 ;;		Nothing
  3052 ;; This function is called by:
  3053 ;;		_SYSTEM_Initialize
  3054 ;; This function uses a non-reentrant model
  3055 ;;
  3056                           
  3057                           	psect	text10
  3058  002A4E                     __ptext10:
  3059                           	opt callstack 0
  3060  002A4E                     _OSCILLATOR_Initialize:
  3061                           	opt callstack 25
  3062  002A4E                     
  3063                           ;mcc_generated_files/mcc.c: 63:     OSCCON1 = 0x60;
  3064  002A4E  0E60               	movlw	96
  3065  002A50  010E               	movlb	14	; () banked
  3066  002A52  6FD8               	movwf	216,b	;volatile
  3067                           
  3068                           ;mcc_generated_files/mcc.c: 65:     OSCCON3 = 0x00;
  3069  002A54  0E00               	movlw	0
  3070  002A56  6FDA               	movwf	218,b	;volatile
  3071                           
  3072                           ;mcc_generated_files/mcc.c: 67:     OSCEN = 0x00;
  3073  002A58  0E00               	movlw	0
  3074  002A5A  6FDC               	movwf	220,b	;volatile
  3075                           
  3076                           ;mcc_generated_files/mcc.c: 69:     OSCFRQ = 0x06;
  3077  002A5C  0E06               	movlw	6
  3078  002A5E  6FDE               	movwf	222,b	;volatile
  3079                           
  3080                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  3081  002A60  0E00               	movlw	0
  3082  002A62  6FDD               	movwf	221,b	;volatile
  3083  002A64                     
  3084                           ; BSR set to: 14
  3085  002A64  0012               	return		;funcret
  3086  002A66                     __end_of_OSCILLATOR_Initialize:
  3087                           	opt callstack 0
  3088                           
  3089 ;; *************** function _INTERRUPT_Initialize *****************
  3090 ;; Defined at:
  3091 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3092 ;; Parameters:    Size  Location     Type
  3093 ;;		None
  3094 ;; Auto vars:     Size  Location     Type
  3095 ;;		None
  3096 ;; Return value:  Size  Location     Type
  3097 ;;                  1    wreg      void 
  3098 ;; Registers used:
  3099 ;;		None
  3100 ;; Tracked objects:
  3101 ;;		On entry : 0/0
  3102 ;;		On exit  : 0/0
  3103 ;;		Unchanged: 0/0
  3104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3109 ;;Total ram usage:        0 bytes
  3110 ;; Hardware stack levels used:    1
  3111 ;; Hardware stack levels required when called:    4
  3112 ;; This function calls:
  3113 ;;		Nothing
  3114 ;; This function is called by:
  3115 ;;		_SYSTEM_Initialize
  3116 ;; This function uses a non-reentrant model
  3117 ;;
  3118                           
  3119                           	psect	text11
  3120  002B34                     __ptext11:
  3121                           	opt callstack 0
  3122  002B34                     _INTERRUPT_Initialize:
  3123                           	opt callstack 25
  3124  002B34                     
  3125                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
  3126  002B34  9AF2               	bcf	242,5,c	;volatile
  3127  002B36  0012               	return		;funcret
  3128  002B38                     __end_of_INTERRUPT_Initialize:
  3129                           	opt callstack 0
  3130                           
  3131 ;; *************** function _EUSART2_Initialize *****************
  3132 ;; Defined at:
  3133 ;;		line 88 in file "mcc_generated_files/eusart2.c"
  3134 ;; Parameters:    Size  Location     Type
  3135 ;;		None
  3136 ;; Auto vars:     Size  Location     Type
  3137 ;;		None
  3138 ;; Return value:  Size  Location     Type
  3139 ;;                  1    wreg      void 
  3140 ;; Registers used:
  3141 ;;		wreg, status,2, status,0, cstack
  3142 ;; Tracked objects:
  3143 ;;		On entry : 0/0
  3144 ;;		On exit  : 0/0
  3145 ;;		Unchanged: 0/0
  3146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3151 ;;Total ram usage:        0 bytes
  3152 ;; Hardware stack levels used:    1
  3153 ;; Hardware stack levels required when called:    5
  3154 ;; This function calls:
  3155 ;;		_EUSART2_SetErrorHandler
  3156 ;;		_EUSART2_SetFramingErrorHandler
  3157 ;;		_EUSART2_SetOverrunErrorHandler
  3158 ;;		_EUSART2_SetRxInterruptHandler
  3159 ;;		_EUSART2_SetTxInterruptHandler
  3160 ;; This function is called by:
  3161 ;;		_SYSTEM_Initialize
  3162 ;; This function uses a non-reentrant model
  3163 ;;
  3164                           
  3165                           	psect	text12
  3166  0020AE                     __ptext12:
  3167                           	opt callstack 0
  3168  0020AE                     _EUSART2_Initialize:
  3169                           	opt callstack 24
  3170  0020AE                     
  3171                           ;mcc_generated_files/eusart2.c: 91:     PIE3bits.RC2IE = 0;
  3172  0020AE  010E               	movlb	14	; () banked
  3173  0020B0  9FC5               	bcf	197,7,b	;volatile
  3174  0020B2                     
  3175                           ; BSR set to: 14
  3176                           ;mcc_generated_files/eusart2.c: 92:     EUSART2_SetRxInterruptHandler(EUSART2_Receive_IS
      +                          R);
  3177  0020B2  0EC8               	movlw	low _EUSART2_Receive_ISR
  3178  0020B4  6E05               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler^0,c
  3179  0020B6  0E1C               	movlw	high _EUSART2_Receive_ISR
  3180  0020B8  6E06               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)^0,c
  3181  0020BA  EC55  F015         	call	_EUSART2_SetRxInterruptHandler	;wreg free
  3182  0020BE                     
  3183                           ;mcc_generated_files/eusart2.c: 93:     PIE3bits.TX2IE = 0;
  3184  0020BE  010E               	movlb	14	; () banked
  3185  0020C0  9DC5               	bcf	197,6,b	;volatile
  3186                           
  3187                           ;mcc_generated_files/eusart2.c: 94:     EUSART2_SetTxInterruptHandler(EUSART2_Transmit_I
      +                          SR);
  3188  0020C2  0EE6               	movlw	low _EUSART2_Transmit_ISR
  3189  0020C4  6E05               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler^0,c
  3190  0020C6  0E26               	movlw	high _EUSART2_Transmit_ISR
  3191  0020C8  6E06               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)^0,c
  3192  0020CA  EC50  F015         	call	_EUSART2_SetTxInterruptHandler	;wreg free
  3193  0020CE                     
  3194                           ;mcc_generated_files/eusart2.c: 98:     BAUD2CON = 0x08;
  3195  0020CE  0E08               	movlw	8
  3196  0020D0  010E               	movlb	14	; () banked
  3197  0020D2  6F9F               	movwf	159,b	;volatile
  3198  0020D4                     
  3199                           ; BSR set to: 14
  3200                           ;mcc_generated_files/eusart2.c: 101:     RC2STA = 0x90;
  3201  0020D4  0E90               	movlw	144
  3202  0020D6  6F9D               	movwf	157,b	;volatile
  3203  0020D8                     
  3204                           ; BSR set to: 14
  3205                           ;mcc_generated_files/eusart2.c: 104:     TX2STA = 0x24;
  3206  0020D8  0E24               	movlw	36
  3207  0020DA  6F9E               	movwf	158,b	;volatile
  3208  0020DC                     
  3209                           ; BSR set to: 14
  3210                           ;mcc_generated_files/eusart2.c: 107:     SP2BRGL = 0x40;
  3211  0020DC  0E40               	movlw	64
  3212  0020DE  6F9B               	movwf	155,b	;volatile
  3213  0020E0                     
  3214                           ; BSR set to: 14
  3215                           ;mcc_generated_files/eusart2.c: 110:     SP2BRGH = 0x03;
  3216  0020E0  0E03               	movlw	3
  3217  0020E2  6F9C               	movwf	156,b	;volatile
  3218  0020E4                     
  3219                           ; BSR set to: 14
  3220                           ;mcc_generated_files/eusart2.c: 113:     EUSART2_SetFramingErrorHandler(EUSART2_DefaultF
      +                          ramingErrorHandler);
  3221  0020E4  0E38               	movlw	low _EUSART2_DefaultFramingErrorHandler
  3222  0020E6  6E05               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler^0,c
  3223  0020E8  0E2B               	movlw	high _EUSART2_DefaultFramingErrorHandler
  3224  0020EA  6E06               	movwf	(EUSART2_SetFramingErrorHandler@interruptHandler+1)^0,c
  3225  0020EC  EC5F  F015         	call	_EUSART2_SetFramingErrorHandler	;wreg free
  3226  0020F0                     
  3227                           ;mcc_generated_files/eusart2.c: 114:     EUSART2_SetOverrunErrorHandler(EUSART2_DefaultO
      +                          verrunErrorHandler);
  3228  0020F0  0E0E               	movlw	low _EUSART2_DefaultOverrunErrorHandler
  3229  0020F2  6E05               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler^0,c
  3230  0020F4  0E2B               	movlw	high _EUSART2_DefaultOverrunErrorHandler
  3231  0020F6  6E06               	movwf	(EUSART2_SetOverrunErrorHandler@interruptHandler+1)^0,c
  3232  0020F8  EC5A  F015         	call	_EUSART2_SetOverrunErrorHandler	;wreg free
  3233  0020FC                     
  3234                           ;mcc_generated_files/eusart2.c: 115:     EUSART2_SetErrorHandler(EUSART2_DefaultErrorHan
      +                          dler);
  3235  0020FC  0E22               	movlw	low _EUSART2_DefaultErrorHandler
  3236  0020FE  6E05               	movwf	EUSART2_SetErrorHandler@interruptHandler^0,c
  3237  002100  0E2B               	movlw	high _EUSART2_DefaultErrorHandler
  3238  002102  6E06               	movwf	(EUSART2_SetErrorHandler@interruptHandler+1)^0,c
  3239  002104  EC64  F015         	call	_EUSART2_SetErrorHandler	;wreg free
  3240                           
  3241                           ;mcc_generated_files/eusart2.c: 117:     eusart2RxLastError.status = 0;
  3242  002108  0E00               	movlw	0
  3243  00210A  0100               	movlb	0	; () banked
  3244  00210C  6FA0               	movwf	_eusart2RxLastError& (0+255),b	;volatile
  3245                           
  3246                           ;mcc_generated_files/eusart2.c: 120:     eusart2TxHead = 0;
  3247  00210E  0E00               	movlw	0
  3248  002110  6FA4               	movwf	_eusart2TxHead& (0+255),b	;volatile
  3249                           
  3250                           ;mcc_generated_files/eusart2.c: 121:     eusart2TxTail = 0;
  3251  002112  0E00               	movlw	0
  3252  002114  6FA3               	movwf	_eusart2TxTail& (0+255),b	;volatile
  3253                           
  3254                           ;mcc_generated_files/eusart2.c: 122:     eusart2TxBufferRemaining = sizeof(eusart2TxBuff
      +                          er);
  3255  002116  0E08               	movlw	8
  3256  002118  6FF2               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
  3257                           
  3258                           ;mcc_generated_files/eusart2.c: 124:     eusart2RxHead = 0;
  3259  00211A  0E00               	movlw	0
  3260  00211C  6E59               	movwf	_eusart2RxHead^0,c	;volatile
  3261                           
  3262                           ;mcc_generated_files/eusart2.c: 125:     eusart2RxTail = 0;
  3263  00211E  0E00               	movlw	0
  3264  002120  6FA2               	movwf	_eusart2RxTail& (0+255),b	;volatile
  3265                           
  3266                           ;mcc_generated_files/eusart2.c: 126:     eusart2RxCount = 0;
  3267  002122  0E00               	movlw	0
  3268  002124  6FA1               	movwf	_eusart2RxCount& (0+255),b	;volatile
  3269  002126                     
  3270                           ; BSR set to: 0
  3271                           ;mcc_generated_files/eusart2.c: 129:     PIE3bits.RC2IE = 1;
  3272  002126  010E               	movlb	14	; () banked
  3273  002128  8FC5               	bsf	197,7,b	;volatile
  3274  00212A                     
  3275                           ; BSR set to: 14
  3276  00212A  0012               	return		;funcret
  3277  00212C                     __end_of_EUSART2_Initialize:
  3278                           	opt callstack 0
  3279                           
  3280 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
  3281 ;; Defined at:
  3282 ;;		line 285 in file "mcc_generated_files/eusart2.c"
  3283 ;; Parameters:    Size  Location     Type
  3284 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3285 ;;		 -> EUSART2_Transmit_ISR(1), 
  3286 ;; Auto vars:     Size  Location     Type
  3287 ;;		None
  3288 ;; Return value:  Size  Location     Type
  3289 ;;                  1    wreg      void 
  3290 ;; Registers used:
  3291 ;;		wreg, status,2, status,0
  3292 ;; Tracked objects:
  3293 ;;		On entry : 0/0
  3294 ;;		On exit  : 0/0
  3295 ;;		Unchanged: 0/0
  3296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3297 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3300 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3301 ;;Total ram usage:        2 bytes
  3302 ;; Hardware stack levels used:    1
  3303 ;; Hardware stack levels required when called:    4
  3304 ;; This function calls:
  3305 ;;		Nothing
  3306 ;; This function is called by:
  3307 ;;		_EUSART2_Initialize
  3308 ;; This function uses a non-reentrant model
  3309 ;;
  3310                           
  3311                           	psect	text13
  3312  002AA0                     __ptext13:
  3313                           	opt callstack 0
  3314  002AA0                     _EUSART2_SetTxInterruptHandler:
  3315                           	opt callstack 24
  3316  002AA0                     
  3317                           ;mcc_generated_files/eusart2.c: 286:     EUSART2_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  3318  002AA0  C005  F0EF         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
  3319  002AA4  C006  F0F0         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
  3320  002AA8  0012               	return		;funcret
  3321  002AAA                     __end_of_EUSART2_SetTxInterruptHandler:
  3322                           	opt callstack 0
  3323                           
  3324 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
  3325 ;; Defined at:
  3326 ;;		line 289 in file "mcc_generated_files/eusart2.c"
  3327 ;; Parameters:    Size  Location     Type
  3328 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3329 ;;		 -> EUSART2_Receive_ISR(1), 
  3330 ;; Auto vars:     Size  Location     Type
  3331 ;;		None
  3332 ;; Return value:  Size  Location     Type
  3333 ;;                  1    wreg      void 
  3334 ;; Registers used:
  3335 ;;		wreg, status,2, status,0
  3336 ;; Tracked objects:
  3337 ;;		On entry : 0/0
  3338 ;;		On exit  : 0/0
  3339 ;;		Unchanged: 0/0
  3340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3341 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3344 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3345 ;;Total ram usage:        2 bytes
  3346 ;; Hardware stack levels used:    1
  3347 ;; Hardware stack levels required when called:    4
  3348 ;; This function calls:
  3349 ;;		Nothing
  3350 ;; This function is called by:
  3351 ;;		_EUSART2_Initialize
  3352 ;; This function uses a non-reentrant model
  3353 ;;
  3354                           
  3355                           	psect	text14
  3356  002AAA                     __ptext14:
  3357                           	opt callstack 0
  3358  002AAA                     _EUSART2_SetRxInterruptHandler:
  3359                           	opt callstack 24
  3360  002AAA                     
  3361                           ;mcc_generated_files/eusart2.c: 290:     EUSART2_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  3362  002AAA  C005  F0ED         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
  3363  002AAE  C006  F0EE         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
  3364  002AB2  0012               	return		;funcret
  3365  002AB4                     __end_of_EUSART2_SetRxInterruptHandler:
  3366                           	opt callstack 0
  3367                           
  3368 ;; *************** function _EUSART2_SetOverrunErrorHandler *****************
  3369 ;; Defined at:
  3370 ;;		line 277 in file "mcc_generated_files/eusart2.c"
  3371 ;; Parameters:    Size  Location     Type
  3372 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3373 ;;		 -> EUSART2_DefaultOverrunErrorHandler(1), 
  3374 ;; Auto vars:     Size  Location     Type
  3375 ;;		None
  3376 ;; Return value:  Size  Location     Type
  3377 ;;                  1    wreg      void 
  3378 ;; Registers used:
  3379 ;;		wreg, status,2, status,0
  3380 ;; Tracked objects:
  3381 ;;		On entry : 0/0
  3382 ;;		On exit  : 0/0
  3383 ;;		Unchanged: 0/0
  3384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3385 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3388 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3389 ;;Total ram usage:        2 bytes
  3390 ;; Hardware stack levels used:    1
  3391 ;; Hardware stack levels required when called:    4
  3392 ;; This function calls:
  3393 ;;		Nothing
  3394 ;; This function is called by:
  3395 ;;		_EUSART2_Initialize
  3396 ;; This function uses a non-reentrant model
  3397 ;;
  3398                           
  3399                           	psect	text15
  3400  002AB4                     __ptext15:
  3401                           	opt callstack 0
  3402  002AB4                     _EUSART2_SetOverrunErrorHandler:
  3403                           	opt callstack 24
  3404  002AB4                     
  3405                           ;mcc_generated_files/eusart2.c: 278:     EUSART2_OverrunErrorHandler = interruptHandler;
  3406  002AB4  C005  F0E5         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler,_EUSART2_OverrunErrorHandler
  3407  002AB8  C006  F0E6         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler+1,_EUSART2_OverrunErrorHandler+1
  3408  002ABC  0012               	return		;funcret
  3409  002ABE                     __end_of_EUSART2_SetOverrunErrorHandler:
  3410                           	opt callstack 0
  3411                           
  3412 ;; *************** function _EUSART2_SetFramingErrorHandler *****************
  3413 ;; Defined at:
  3414 ;;		line 273 in file "mcc_generated_files/eusart2.c"
  3415 ;; Parameters:    Size  Location     Type
  3416 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3417 ;;		 -> EUSART2_DefaultFramingErrorHandler(1), 
  3418 ;; Auto vars:     Size  Location     Type
  3419 ;;		None
  3420 ;; Return value:  Size  Location     Type
  3421 ;;                  1    wreg      void 
  3422 ;; Registers used:
  3423 ;;		wreg, status,2, status,0
  3424 ;; Tracked objects:
  3425 ;;		On entry : 0/0
  3426 ;;		On exit  : 0/0
  3427 ;;		Unchanged: 0/0
  3428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3429 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3432 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3433 ;;Total ram usage:        2 bytes
  3434 ;; Hardware stack levels used:    1
  3435 ;; Hardware stack levels required when called:    4
  3436 ;; This function calls:
  3437 ;;		Nothing
  3438 ;; This function is called by:
  3439 ;;		_EUSART2_Initialize
  3440 ;; This function uses a non-reentrant model
  3441 ;;
  3442                           
  3443                           	psect	text16
  3444  002ABE                     __ptext16:
  3445                           	opt callstack 0
  3446  002ABE                     _EUSART2_SetFramingErrorHandler:
  3447                           	opt callstack 24
  3448  002ABE                     
  3449                           ;mcc_generated_files/eusart2.c: 274:     EUSART2_FramingErrorHandler = interruptHandler;
  3450  002ABE  C005  F0E7         	movff	EUSART2_SetFramingErrorHandler@interruptHandler,_EUSART2_FramingErrorHandler
  3451  002AC2  C006  F0E8         	movff	EUSART2_SetFramingErrorHandler@interruptHandler+1,_EUSART2_FramingErrorHandler+1
  3452  002AC6  0012               	return		;funcret
  3453  002AC8                     __end_of_EUSART2_SetFramingErrorHandler:
  3454                           	opt callstack 0
  3455                           
  3456 ;; *************** function _EUSART2_SetErrorHandler *****************
  3457 ;; Defined at:
  3458 ;;		line 281 in file "mcc_generated_files/eusart2.c"
  3459 ;; Parameters:    Size  Location     Type
  3460 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3461 ;;		 -> EUSART2_DefaultErrorHandler(1), 
  3462 ;; Auto vars:     Size  Location     Type
  3463 ;;		None
  3464 ;; Return value:  Size  Location     Type
  3465 ;;                  1    wreg      void 
  3466 ;; Registers used:
  3467 ;;		wreg, status,2, status,0
  3468 ;; Tracked objects:
  3469 ;;		On entry : 0/0
  3470 ;;		On exit  : 0/0
  3471 ;;		Unchanged: 0/0
  3472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3473 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3476 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3477 ;;Total ram usage:        2 bytes
  3478 ;; Hardware stack levels used:    1
  3479 ;; Hardware stack levels required when called:    4
  3480 ;; This function calls:
  3481 ;;		Nothing
  3482 ;; This function is called by:
  3483 ;;		_EUSART2_Initialize
  3484 ;; This function uses a non-reentrant model
  3485 ;;
  3486                           
  3487                           	psect	text17
  3488  002AC8                     __ptext17:
  3489                           	opt callstack 0
  3490  002AC8                     _EUSART2_SetErrorHandler:
  3491                           	opt callstack 24
  3492  002AC8                     
  3493                           ;mcc_generated_files/eusart2.c: 282:     EUSART2_ErrorHandler = interruptHandler;
  3494  002AC8  C005  F0E3         	movff	EUSART2_SetErrorHandler@interruptHandler,_EUSART2_ErrorHandler
  3495  002ACC  C006  F0E4         	movff	EUSART2_SetErrorHandler@interruptHandler+1,_EUSART2_ErrorHandler+1
  3496  002AD0  0012               	return		;funcret
  3497  002AD2                     __end_of_EUSART2_SetErrorHandler:
  3498                           	opt callstack 0
  3499                           
  3500 ;; *************** function _EUSART1_Initialize *****************
  3501 ;; Defined at:
  3502 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  3503 ;; Parameters:    Size  Location     Type
  3504 ;;		None
  3505 ;; Auto vars:     Size  Location     Type
  3506 ;;		None
  3507 ;; Return value:  Size  Location     Type
  3508 ;;                  1    wreg      void 
  3509 ;; Registers used:
  3510 ;;		wreg, status,2, status,0, cstack
  3511 ;; Tracked objects:
  3512 ;;		On entry : 0/0
  3513 ;;		On exit  : 0/0
  3514 ;;		Unchanged: 0/0
  3515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3520 ;;Total ram usage:        0 bytes
  3521 ;; Hardware stack levels used:    1
  3522 ;; Hardware stack levels required when called:    5
  3523 ;; This function calls:
  3524 ;;		_EUSART1_SetErrorHandler
  3525 ;;		_EUSART1_SetFramingErrorHandler
  3526 ;;		_EUSART1_SetOverrunErrorHandler
  3527 ;;		_EUSART1_SetRxInterruptHandler
  3528 ;;		_EUSART1_SetTxInterruptHandler
  3529 ;; This function is called by:
  3530 ;;		_SYSTEM_Initialize
  3531 ;; This function uses a non-reentrant model
  3532 ;;
  3533                           
  3534                           	psect	text18
  3535  00212C                     __ptext18:
  3536                           	opt callstack 0
  3537  00212C                     _EUSART1_Initialize:
  3538                           	opt callstack 24
  3539  00212C                     
  3540                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
  3541  00212C  010E               	movlb	14	; () banked
  3542  00212E  9BC5               	bcf	197,5,b	;volatile
  3543  002130                     
  3544                           ; BSR set to: 14
  3545                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  3546  002130  0E88               	movlw	low _EUSART1_Receive_ISR
  3547  002132  6E05               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
  3548  002134  0E1D               	movlw	high _EUSART1_Receive_ISR
  3549  002136  6E06               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
  3550  002138  EC6E  F015         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  3551  00213C                     
  3552                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
  3553  00213C  010E               	movlb	14	; () banked
  3554  00213E  99C5               	bcf	197,4,b	;volatile
  3555                           
  3556                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  3557  002140  0E72               	movlw	low _EUSART1_Transmit_ISR
  3558  002142  6E05               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
  3559  002144  0E27               	movlw	high _EUSART1_Transmit_ISR
  3560  002146  6E06               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
  3561  002148  EC69  F015         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  3562  00214C                     
  3563                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
  3564  00214C  0E08               	movlw	8
  3565  00214E  6E9F               	movwf	159,c	;volatile
  3566  002150                     
  3567                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
  3568  002150  0E90               	movlw	144
  3569  002152  6E9D               	movwf	157,c	;volatile
  3570  002154                     
  3571                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
  3572  002154  0E24               	movlw	36
  3573  002156  6E9E               	movwf	158,c	;volatile
  3574  002158                     
  3575                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x40;
  3576  002158  0E40               	movlw	64
  3577  00215A  6E9B               	movwf	155,c	;volatile
  3578  00215C                     
  3579                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x03;
  3580  00215C  0E03               	movlw	3
  3581  00215E  6E9C               	movwf	156,c	;volatile
  3582  002160                     
  3583                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  3584  002160  0E3A               	movlw	low _EUSART1_DefaultFramingErrorHandler
  3585  002162  6E05               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  3586  002164  0E2B               	movlw	high _EUSART1_DefaultFramingErrorHandler
  3587  002166  6E06               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  3588  002168  EC78  F015         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  3589  00216C                     
  3590                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  3591  00216C  0E28               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  3592  00216E  6E05               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  3593  002170  0E2B               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  3594  002172  6E06               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  3595  002174  EC73  F015         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  3596  002178                     
  3597                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  3598  002178  0E2E               	movlw	low _EUSART1_DefaultErrorHandler
  3599  00217A  6E05               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  3600  00217C  0E2B               	movlw	high _EUSART1_DefaultErrorHandler
  3601  00217E  6E06               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  3602  002180  EC7D  F015         	call	_EUSART1_SetErrorHandler	;wreg free
  3603                           
  3604                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
  3605  002184  0E00               	movlw	0
  3606  002186  0100               	movlb	0	; () banked
  3607  002188  6F9B               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  3608                           
  3609                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
  3610  00218A  0E00               	movlw	0
  3611  00218C  6F9F               	movwf	_eusart1TxHead& (0+255),b	;volatile
  3612                           
  3613                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
  3614  00218E  0E00               	movlw	0
  3615  002190  6F9E               	movwf	_eusart1TxTail& (0+255),b	;volatile
  3616                           
  3617                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  3618  002192  0E10               	movlw	16
  3619  002194  6FF1               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
  3620                           
  3621                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
  3622  002196  0E00               	movlw	0
  3623  002198  6E58               	movwf	_eusart1RxHead^0,c	;volatile
  3624                           
  3625                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
  3626  00219A  0E00               	movlw	0
  3627  00219C  6F9D               	movwf	_eusart1RxTail& (0+255),b	;volatile
  3628                           
  3629                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
  3630  00219E  0E00               	movlw	0
  3631  0021A0  6F9C               	movwf	_eusart1RxCount& (0+255),b	;volatile
  3632  0021A2                     
  3633                           ; BSR set to: 0
  3634                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
  3635  0021A2  010E               	movlb	14	; () banked
  3636  0021A4  8BC5               	bsf	197,5,b	;volatile
  3637  0021A6                     
  3638                           ; BSR set to: 14
  3639  0021A6  0012               	return		;funcret
  3640  0021A8                     __end_of_EUSART1_Initialize:
  3641                           	opt callstack 0
  3642                           
  3643 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  3644 ;; Defined at:
  3645 ;;		line 276 in file "mcc_generated_files/eusart1.c"
  3646 ;; Parameters:    Size  Location     Type
  3647 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3648 ;;		 -> EUSART1_Transmit_ISR(1), 
  3649 ;; Auto vars:     Size  Location     Type
  3650 ;;		None
  3651 ;; Return value:  Size  Location     Type
  3652 ;;                  1    wreg      void 
  3653 ;; Registers used:
  3654 ;;		wreg, status,2, status,0
  3655 ;; Tracked objects:
  3656 ;;		On entry : 0/0
  3657 ;;		On exit  : 0/0
  3658 ;;		Unchanged: 0/0
  3659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3660 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3663 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3664 ;;Total ram usage:        2 bytes
  3665 ;; Hardware stack levels used:    1
  3666 ;; Hardware stack levels required when called:    4
  3667 ;; This function calls:
  3668 ;;		Nothing
  3669 ;; This function is called by:
  3670 ;;		_EUSART1_Initialize
  3671 ;; This function uses a non-reentrant model
  3672 ;;
  3673                           
  3674                           	psect	text19
  3675  002AD2                     __ptext19:
  3676                           	opt callstack 0
  3677  002AD2                     _EUSART1_SetTxInterruptHandler:
  3678                           	opt callstack 24
  3679  002AD2                     
  3680                           ;mcc_generated_files/eusart1.c: 277:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  3681  002AD2  C005  F0EB         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  3682  002AD6  C006  F0EC         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  3683  002ADA  0012               	return		;funcret
  3684  002ADC                     __end_of_EUSART1_SetTxInterruptHandler:
  3685                           	opt callstack 0
  3686                           
  3687 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  3688 ;; Defined at:
  3689 ;;		line 280 in file "mcc_generated_files/eusart1.c"
  3690 ;; Parameters:    Size  Location     Type
  3691 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3692 ;;		 -> EUSART1_Receive_ISR(1), 
  3693 ;; Auto vars:     Size  Location     Type
  3694 ;;		None
  3695 ;; Return value:  Size  Location     Type
  3696 ;;                  1    wreg      void 
  3697 ;; Registers used:
  3698 ;;		wreg, status,2, status,0
  3699 ;; Tracked objects:
  3700 ;;		On entry : 0/0
  3701 ;;		On exit  : 0/0
  3702 ;;		Unchanged: 0/0
  3703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3704 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3707 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3708 ;;Total ram usage:        2 bytes
  3709 ;; Hardware stack levels used:    1
  3710 ;; Hardware stack levels required when called:    4
  3711 ;; This function calls:
  3712 ;;		Nothing
  3713 ;; This function is called by:
  3714 ;;		_EUSART1_Initialize
  3715 ;; This function uses a non-reentrant model
  3716 ;;
  3717                           
  3718                           	psect	text20
  3719  002ADC                     __ptext20:
  3720                           	opt callstack 0
  3721  002ADC                     _EUSART1_SetRxInterruptHandler:
  3722                           	opt callstack 24
  3723  002ADC                     
  3724                           ;mcc_generated_files/eusart1.c: 281:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  3725  002ADC  C005  F0E9         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  3726  002AE0  C006  F0EA         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  3727  002AE4  0012               	return		;funcret
  3728  002AE6                     __end_of_EUSART1_SetRxInterruptHandler:
  3729                           	opt callstack 0
  3730                           
  3731 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  3732 ;; Defined at:
  3733 ;;		line 268 in file "mcc_generated_files/eusart1.c"
  3734 ;; Parameters:    Size  Location     Type
  3735 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3736 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  3737 ;; Auto vars:     Size  Location     Type
  3738 ;;		None
  3739 ;; Return value:  Size  Location     Type
  3740 ;;                  1    wreg      void 
  3741 ;; Registers used:
  3742 ;;		wreg, status,2, status,0
  3743 ;; Tracked objects:
  3744 ;;		On entry : 0/0
  3745 ;;		On exit  : 0/0
  3746 ;;		Unchanged: 0/0
  3747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3748 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3751 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3752 ;;Total ram usage:        2 bytes
  3753 ;; Hardware stack levels used:    1
  3754 ;; Hardware stack levels required when called:    4
  3755 ;; This function calls:
  3756 ;;		Nothing
  3757 ;; This function is called by:
  3758 ;;		_EUSART1_Initialize
  3759 ;; This function uses a non-reentrant model
  3760 ;;
  3761                           
  3762                           	psect	text21
  3763  002AE6                     __ptext21:
  3764                           	opt callstack 0
  3765  002AE6                     _EUSART1_SetOverrunErrorHandler:
  3766                           	opt callstack 24
  3767  002AE6                     
  3768                           ;mcc_generated_files/eusart1.c: 269:     EUSART1_OverrunErrorHandler = interruptHandler;
  3769  002AE6  C005  F0DF         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  3770  002AEA  C006  F0E0         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  3771  002AEE  0012               	return		;funcret
  3772  002AF0                     __end_of_EUSART1_SetOverrunErrorHandler:
  3773                           	opt callstack 0
  3774                           
  3775 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  3776 ;; Defined at:
  3777 ;;		line 264 in file "mcc_generated_files/eusart1.c"
  3778 ;; Parameters:    Size  Location     Type
  3779 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3780 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  3781 ;; Auto vars:     Size  Location     Type
  3782 ;;		None
  3783 ;; Return value:  Size  Location     Type
  3784 ;;                  1    wreg      void 
  3785 ;; Registers used:
  3786 ;;		wreg, status,2, status,0
  3787 ;; Tracked objects:
  3788 ;;		On entry : 0/0
  3789 ;;		On exit  : 0/0
  3790 ;;		Unchanged: 0/0
  3791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3792 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3795 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3796 ;;Total ram usage:        2 bytes
  3797 ;; Hardware stack levels used:    1
  3798 ;; Hardware stack levels required when called:    4
  3799 ;; This function calls:
  3800 ;;		Nothing
  3801 ;; This function is called by:
  3802 ;;		_EUSART1_Initialize
  3803 ;; This function uses a non-reentrant model
  3804 ;;
  3805                           
  3806                           	psect	text22
  3807  002AF0                     __ptext22:
  3808                           	opt callstack 0
  3809  002AF0                     _EUSART1_SetFramingErrorHandler:
  3810                           	opt callstack 24
  3811  002AF0                     
  3812                           ;mcc_generated_files/eusart1.c: 265:     EUSART1_FramingErrorHandler = interruptHandler;
  3813  002AF0  C005  F0E1         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  3814  002AF4  C006  F0E2         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  3815  002AF8  0012               	return		;funcret
  3816  002AFA                     __end_of_EUSART1_SetFramingErrorHandler:
  3817                           	opt callstack 0
  3818                           
  3819 ;; *************** function _EUSART1_SetErrorHandler *****************
  3820 ;; Defined at:
  3821 ;;		line 272 in file "mcc_generated_files/eusart1.c"
  3822 ;; Parameters:    Size  Location     Type
  3823 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3824 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  3825 ;; Auto vars:     Size  Location     Type
  3826 ;;		None
  3827 ;; Return value:  Size  Location     Type
  3828 ;;                  1    wreg      void 
  3829 ;; Registers used:
  3830 ;;		wreg, status,2, status,0
  3831 ;; Tracked objects:
  3832 ;;		On entry : 0/0
  3833 ;;		On exit  : 0/0
  3834 ;;		Unchanged: 0/0
  3835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3836 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3839 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3840 ;;Total ram usage:        2 bytes
  3841 ;; Hardware stack levels used:    1
  3842 ;; Hardware stack levels required when called:    4
  3843 ;; This function calls:
  3844 ;;		Nothing
  3845 ;; This function is called by:
  3846 ;;		_EUSART1_Initialize
  3847 ;; This function uses a non-reentrant model
  3848 ;;
  3849                           
  3850                           	psect	text23
  3851  002AFA                     __ptext23:
  3852                           	opt callstack 0
  3853  002AFA                     _EUSART1_SetErrorHandler:
  3854                           	opt callstack 24
  3855  002AFA                     
  3856                           ;mcc_generated_files/eusart1.c: 273:     EUSART1_ErrorHandler = interruptHandler;
  3857  002AFA  C005  F0DD         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  3858  002AFE  C006  F0DE         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  3859  002B02  0012               	return		;funcret
  3860  002B04                     __end_of_EUSART1_SetErrorHandler:
  3861                           	opt callstack 0
  3862                           
  3863 ;; *************** function _PrintModbus *****************
  3864 ;; Defined at:
  3865 ;;		line 84 in file "main.c"
  3866 ;; Parameters:    Size  Location     Type
  3867 ;;		None
  3868 ;; Auto vars:     Size  Location     Type
  3869 ;;  i               2   41[BANK0 ] int 
  3870 ;; Return value:  Size  Location     Type
  3871 ;;                  1    wreg      void 
  3872 ;; Registers used:
  3873 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3874 ;; Tracked objects:
  3875 ;;		On entry : 0/0
  3876 ;;		On exit  : 0/0
  3877 ;;		Unchanged: 0/0
  3878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3880 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3881 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3882 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3883 ;;Total ram usage:        3 bytes
  3884 ;; Hardware stack levels used:    1
  3885 ;; Hardware stack levels required when called:   13
  3886 ;; This function calls:
  3887 ;;		_printf
  3888 ;; This function is called by:
  3889 ;;		_main
  3890 ;; This function uses a non-reentrant model
  3891 ;;
  3892                           
  3893                           	psect	text24
  3894  0022A0                     __ptext24:
  3895                           	opt callstack 0
  3896  0022A0                     _PrintModbus:
  3897                           	opt callstack 17
  3898  0022A0                     
  3899                           ;main.c: 89:     printf("Modbus Data Capture Complete:\r\n");
  3900  0022A0  0E1E               	movlw	low STR_13
  3901  0022A2  0100               	movlb	0	; () banked
  3902  0022A4  6FC2               	movwf	printf@fmt& (0+255),b
  3903  0022A6  0EFF               	movlw	high STR_13
  3904  0022A8  6FC3               	movwf	(printf@fmt+1)& (0+255),b
  3905  0022AA  ECD9  F014         	call	_printf	;wreg free
  3906  0022AE                     
  3907                           ;main.c: 90:     for(i=0; i< ModDataCnt ; i++ ){
  3908  0022AE  0E00               	movlw	0
  3909  0022B0  0100               	movlb	0	; () banked
  3910  0022B2  6FCF               	movwf	(PrintModbus@i+1)& (0+255),b
  3911  0022B4  0E00               	movlw	0
  3912  0022B6  6FCE               	movwf	PrintModbus@i& (0+255),b
  3913  0022B8  EF76  F011         	goto	l5300
  3914  0022BC                     l5296:
  3915                           
  3916                           ; BSR set to: 0
  3917                           ;main.c: 91:         printf("   Byte %i : 0x%02x \r\n", i, ModbusData[i]);
  3918  0022BC  0EAB               	movlw	low STR_11
  3919  0022BE  6FC2               	movwf	printf@fmt& (0+255),b
  3920  0022C0  0EFF               	movlw	high STR_11
  3921  0022C2  6FC3               	movwf	(printf@fmt+1)& (0+255),b
  3922  0022C4  C0CE  F0C4         	movff	PrintModbus@i,?_printf+2
  3923  0022C8  C0CF  F0C5         	movff	PrintModbus@i+1,?_printf+3
  3924  0022CC  0E00               	movlw	low _ModbusData
  3925  0022CE  25CE               	addwf	PrintModbus@i& (0+255),w,b
  3926  0022D0  6ED9               	movwf	fsr2l,c
  3927  0022D2  0E01               	movlw	high _ModbusData
  3928  0022D4  21CF               	addwfc	(PrintModbus@i+1)& (0+255),w,b
  3929  0022D6  6EDA               	movwf	fsr2h,c
  3930  0022D8  50DF               	movf	indf2,w,c
  3931  0022DA  6E55               	movwf	??_PrintModbus^0,c
  3932  0022DC  5055               	movf	??_PrintModbus^0,w,c
  3933  0022DE  6FC6               	movwf	(?_printf+4)& (0+255),b
  3934  0022E0  6BC7               	clrf	(?_printf+5)& (0+255),b
  3935  0022E2  ECD9  F014         	call	_printf	;wreg free
  3936  0022E6                     
  3937                           ;main.c: 92:     }
  3938  0022E6  0100               	movlb	0	; () banked
  3939  0022E8  4BCE               	infsnz	PrintModbus@i& (0+255),f,b
  3940  0022EA  2BCF               	incf	(PrintModbus@i+1)& (0+255),f,b
  3941  0022EC                     l5300:
  3942                           
  3943                           ; BSR set to: 0
  3944  0022EC  5196               	movf	_ModDataCnt& (0+255),w,b
  3945  0022EE  5DCE               	subwf	PrintModbus@i& (0+255),w,b
  3946  0022F0  51CF               	movf	(PrintModbus@i+1)& (0+255),w,b
  3947  0022F2  0A80               	xorlw	128
  3948  0022F4  6E55               	movwf	??_PrintModbus^0,c
  3949  0022F6  5197               	movf	(_ModDataCnt+1)& (0+255),w,b
  3950  0022F8  0A80               	xorlw	128
  3951  0022FA  5855               	subwfb	??_PrintModbus^0,w,c
  3952  0022FC  A0D8               	btfss	status,0,c
  3953  0022FE  EF83  F011         	goto	u5411
  3954  002302  EF85  F011         	goto	u5410
  3955  002306                     u5411:
  3956  002306  EF5E  F011         	goto	l5296
  3957  00230A                     u5410:
  3958  00230A                     
  3959                           ; BSR set to: 0
  3960                           ;main.c: 93:     printf("\r\n\n");
  3961  00230A  0ED3               	movlw	low (STR_18+17)
  3962  00230C  6FC2               	movwf	printf@fmt& (0+255),b
  3963  00230E  0EFF               	movlw	high (STR_18+17)
  3964  002310  6FC3               	movwf	(printf@fmt+1)& (0+255),b
  3965  002312  ECD9  F014         	call	_printf	;wreg free
  3966  002316  0012               	return		;funcret
  3967  002318                     __end_of_PrintModbus:
  3968                           	opt callstack 0
  3969                           
  3970 ;; *************** function _PrintModRespon *****************
  3971 ;; Defined at:
  3972 ;;		line 65 in file "main.c"
  3973 ;; Parameters:    Size  Location     Type
  3974 ;;		None
  3975 ;; Auto vars:     Size  Location     Type
  3976 ;;  i               2   41[BANK0 ] int 
  3977 ;; Return value:  Size  Location     Type
  3978 ;;                  1    wreg      void 
  3979 ;; Registers used:
  3980 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3981 ;; Tracked objects:
  3982 ;;		On entry : 0/0
  3983 ;;		On exit  : 0/0
  3984 ;;		Unchanged: 0/0
  3985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3987 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3988 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3989 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3990 ;;Total ram usage:        3 bytes
  3991 ;; Hardware stack levels used:    1
  3992 ;; Hardware stack levels required when called:   13
  3993 ;; This function calls:
  3994 ;;		_printf
  3995 ;; This function is called by:
  3996 ;;		_main
  3997 ;; This function uses a non-reentrant model
  3998 ;;
  3999                           
  4000                           	psect	text25
  4001  0021A8                     __ptext25:
  4002                           	opt callstack 0
  4003  0021A8                     _PrintModRespon:
  4004                           	opt callstack 17
  4005  0021A8                     
  4006                           ;main.c: 68:     printf("Modbus Response:\r\n");
  4007  0021A8  0ED7               	movlw	low STR_10
  4008  0021AA  0100               	movlb	0	; () banked
  4009  0021AC  6FC2               	movwf	printf@fmt& (0+255),b
  4010  0021AE  0EFF               	movlw	high STR_10
  4011  0021B0  6FC3               	movwf	(printf@fmt+1)& (0+255),b
  4012  0021B2  ECD9  F014         	call	_printf	;wreg free
  4013  0021B6                     
  4014                           ;main.c: 69:     for(i=0; i< MBResCnt ; i++ ){
  4015  0021B6  0E00               	movlw	0
  4016  0021B8  0100               	movlb	0	; () banked
  4017  0021BA  6FCF               	movwf	(PrintModRespon@i+1)& (0+255),b
  4018  0021BC  0E00               	movlw	0
  4019  0021BE  6FCE               	movwf	PrintModRespon@i& (0+255),b
  4020  0021C0  EFFC  F010         	goto	l5274
  4021  0021C4                     l5270:
  4022                           
  4023                           ; BSR set to: 0
  4024                           ;main.c: 70:         printf("   Byte %i : 0x%02x \r\n", i, MBRespon[i]);
  4025  0021C4  0EAB               	movlw	low STR_11
  4026  0021C6  6FC2               	movwf	printf@fmt& (0+255),b
  4027  0021C8  0EFF               	movlw	high STR_11
  4028  0021CA  6FC3               	movwf	(printf@fmt+1)& (0+255),b
  4029  0021CC  C0CE  F0C4         	movff	PrintModRespon@i,?_printf+2
  4030  0021D0  C0CF  F0C5         	movff	PrintModRespon@i+1,?_printf+3
  4031  0021D4  90D8               	bcf	status,0,c
  4032  0021D6  35CE               	rlcf	PrintModRespon@i& (0+255),w,b
  4033  0021D8  6ED9               	movwf	fsr2l,c
  4034  0021DA  35CF               	rlcf	(PrintModRespon@i+1)& (0+255),w,b
  4035  0021DC  6EDA               	movwf	fsr2h,c
  4036  0021DE  0EA4               	movlw	low _MBRespon
  4037  0021E0  26D9               	addwf	fsr2l,f,c
  4038  0021E2  0E01               	movlw	high _MBRespon
  4039  0021E4  22DA               	addwfc	fsr2h,f,c
  4040  0021E6  CFDE F0C6          	movff	postinc2,?_printf+4
  4041  0021EA  CFDD F0C7          	movff	postdec2,?_printf+5
  4042  0021EE  ECD9  F014         	call	_printf	;wreg free
  4043  0021F2                     
  4044                           ;main.c: 71:     }
  4045  0021F2  0100               	movlb	0	; () banked
  4046  0021F4  4BCE               	infsnz	PrintModRespon@i& (0+255),f,b
  4047  0021F6  2BCF               	incf	(PrintModRespon@i+1)& (0+255),f,b
  4048  0021F8                     l5274:
  4049                           
  4050                           ; BSR set to: 0
  4051  0021F8  5192               	movf	_MBResCnt& (0+255),w,b
  4052  0021FA  5DCE               	subwf	PrintModRespon@i& (0+255),w,b
  4053  0021FC  51CF               	movf	(PrintModRespon@i+1)& (0+255),w,b
  4054  0021FE  0A80               	xorlw	128
  4055  002200  6E55               	movwf	??_PrintModRespon^0,c
  4056  002202  5193               	movf	(_MBResCnt+1)& (0+255),w,b
  4057  002204  0A80               	xorlw	128
  4058  002206  5855               	subwfb	??_PrintModRespon^0,w,c
  4059  002208  A0D8               	btfss	status,0,c
  4060  00220A  EF09  F011         	goto	u5391
  4061  00220E  EF0B  F011         	goto	u5390
  4062  002212                     u5391:
  4063  002212  EFE2  F010         	goto	l5270
  4064  002216                     u5390:
  4065  002216                     
  4066                           ; BSR set to: 0
  4067                           ;main.c: 72:     printf("\r\n\n");
  4068  002216  0ED3               	movlw	low (STR_18+17)
  4069  002218  6FC2               	movwf	printf@fmt& (0+255),b
  4070  00221A  0EFF               	movlw	high (STR_18+17)
  4071  00221C  6FC3               	movwf	(printf@fmt+1)& (0+255),b
  4072  00221E  ECD9  F014         	call	_printf	;wreg free
  4073  002222  0012               	return		;funcret
  4074  002224                     __end_of_PrintModRespon:
  4075                           	opt callstack 0
  4076                           
  4077 ;; *************** function _ModbusRx *****************
  4078 ;; Defined at:
  4079 ;;		line 106 in file "Modbus.c"
  4080 ;; Parameters:    Size  Location     Type
  4081 ;;		None
  4082 ;; Auto vars:     Size  Location     Type
  4083 ;;		None
  4084 ;; Return value:  Size  Location     Type
  4085 ;;                  1    wreg      _Bool 
  4086 ;; Registers used:
  4087 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4088 ;; Tracked objects:
  4089 ;;		On entry : 0/0
  4090 ;;		On exit  : 0/0
  4091 ;;		Unchanged: 0/0
  4092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4095 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4096 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4097 ;;Total ram usage:        1 bytes
  4098 ;; Hardware stack levels used:    1
  4099 ;; Hardware stack levels required when called:   14
  4100 ;; This function calls:
  4101 ;;		_AddRxBuffToModBus
  4102 ;;		_ClearRxBuff
  4103 ;;		_EUSART1_Read
  4104 ;;		_EUSART1_is_rx_ready
  4105 ;;		_RXMode
  4106 ;;		_checkCRC
  4107 ;;		_printf
  4108 ;; This function is called by:
  4109 ;;		_main
  4110 ;; This function uses a non-reentrant model
  4111 ;;
  4112                           
  4113                           	psect	text26
  4114  00183A                     __ptext26:
  4115                           	opt callstack 0
  4116  00183A                     _ModbusRx:
  4117                           	opt callstack 16
  4118  00183A                     
  4119                           ;Modbus.c: 107:     RXMode();
  4120  00183A  EC8E  F015         	call	_RXMode	;wreg free
  4121  00183E                     
  4122                           ;Modbus.c: 108:     if(EUSART1_is_rx_ready()){
  4123  00183E  EC33  F015         	call	_EUSART1_is_rx_ready	;wreg free
  4124  001842  0900               	iorlw	0
  4125  001844  B4D8               	btfsc	status,2,c
  4126  001846  EF27  F00C         	goto	u5461
  4127  00184A  EF29  F00C         	goto	u5460
  4128  00184E                     u5461:
  4129  00184E  EFB0  F00C         	goto	l5378
  4130  001852                     u5460:
  4131  001852                     l5340:
  4132                           
  4133                           ;Modbus.c: 110:             if(EUSART1_is_rx_ready()){
  4134  001852  EC33  F015         	call	_EUSART1_is_rx_ready	;wreg free
  4135  001856  0900               	iorlw	0
  4136  001858  B4D8               	btfsc	status,2,c
  4137  00185A  EF31  F00C         	goto	u5471
  4138  00185E  EF33  F00C         	goto	u5470
  4139  001862                     u5471:
  4140  001862  EF50  F00C         	goto	l5352
  4141  001866                     u5470:
  4142  001866  EF43  F00C         	goto	l5348
  4143  00186A                     l5344:
  4144                           
  4145                           ;Modbus.c: 114:                     rxData[ByteNum] = EUSART1_Read();
  4146  00186A  EC85  F012         	call	_EUSART1_Read	;wreg free
  4147  00186E  6E55               	movwf	??_ModbusRx^0,c
  4148  001870  0E00               	movlw	low _rxData
  4149  001872  0100               	movlb	0	; () banked
  4150  001874  258E               	addwf	_ByteNum& (0+255),w,b
  4151  001876  6ED9               	movwf	fsr2l,c
  4152  001878  0E03               	movlw	high _rxData
  4153  00187A  218F               	addwfc	(_ByteNum+1)& (0+255),w,b
  4154  00187C  6EDA               	movwf	fsr2h,c
  4155  00187E  C055  FFDF         	movff	??_ModbusRx,indf2
  4156  001882                     
  4157                           ; BSR set to: 0
  4158                           ;Modbus.c: 115:                     ByteNum++;
  4159  001882  4B8E               	infsnz	_ByteNum& (0+255),f,b
  4160  001884  2B8F               	incf	(_ByteNum+1)& (0+255),f,b
  4161  001886                     l5348:
  4162                           
  4163                           ;Modbus.c: 112:                 while(EUSART1_is_rx_ready()){
  4164  001886  EC33  F015         	call	_EUSART1_is_rx_ready	;wreg free
  4165  00188A  0900               	iorlw	0
  4166  00188C  A4D8               	btfss	status,2,c
  4167  00188E  EF4B  F00C         	goto	u5481
  4168  001892  EF4D  F00C         	goto	u5480
  4169  001896                     u5481:
  4170  001896  EF35  F00C         	goto	l5344
  4171  00189A                     u5480:
  4172  00189A                     
  4173                           ;Modbus.c: 118:                 RXStat = 1;
  4174  00189A  0E01               	movlw	1
  4175  00189C  0100               	movlb	0	; () banked
  4176  00189E  6F99               	movwf	_RXStat& (0+255),b
  4177  0018A0                     l5352:
  4178                           
  4179                           ;Modbus.c: 121:             if(RXStat ==1){
  4180  0018A0  0100               	movlb	0	; () banked
  4181  0018A2  0599               	decf	_RXStat& (0+255),w,b
  4182  0018A4  A4D8               	btfss	status,2,c
  4183  0018A6  EF57  F00C         	goto	u5491
  4184  0018AA  EF59  F00C         	goto	u5490
  4185  0018AE                     u5491:
  4186  0018AE  EF75  F00C         	goto	l5364
  4187  0018B2                     u5490:
  4188  0018B2                     
  4189                           ; BSR set to: 0
  4190                           ;Modbus.c: 124:                 AddRxBuffToModBus();
  4191  0018B2  EC75  F00F         	call	_AddRxBuffToModBus	;wreg free
  4192  0018B6                     
  4193                           ;Modbus.c: 125:                 ClearRxBuff();
  4194  0018B6  EC4E  F013         	call	_ClearRxBuff	;wreg free
  4195  0018BA                     
  4196                           ;Modbus.c: 126:                 RXStat = 0;
  4197  0018BA  0E00               	movlw	0
  4198  0018BC  0100               	movlb	0	; () banked
  4199  0018BE  6F99               	movwf	_RXStat& (0+255),b
  4200  0018C0                     
  4201                           ; BSR set to: 0
  4202                           ;Modbus.c: 127:                 ByteNum = 0;
  4203  0018C0  0E00               	movlw	0
  4204  0018C2  6F8F               	movwf	(_ByteNum+1)& (0+255),b
  4205  0018C4  0E00               	movlw	0
  4206  0018C6  6F8E               	movwf	_ByteNum& (0+255),b
  4207  0018C8                     
  4208                           ; BSR set to: 0
  4209  0018C8  B883               	btfsc	131,4,c	;volatile
  4210  0018CA  EF69  F00C         	goto	u5501
  4211  0018CE  EF6C  F00C         	goto	u5500
  4212  0018D2                     u5501:
  4213  0018D2  0E01               	movlw	1
  4214  0018D4  EF6D  F00C         	goto	u5506
  4215  0018D8                     u5500:
  4216  0018D8  0E00               	movlw	0
  4217  0018DA                     u5506:
  4218  0018DA  0AFF               	xorlw	255
  4219  0018DC  6E55               	movwf	??_ModbusRx^0,c
  4220  0018DE  3A55               	swapf	??_ModbusRx^0,f,c
  4221  0018E0  5083               	movf	131,w,c	;volatile
  4222  0018E2  1855               	xorwf	??_ModbusRx^0,w,c
  4223  0018E4  0BEF               	andlw	-17
  4224  0018E6  1855               	xorwf	??_ModbusRx^0,w,c
  4225  0018E8  6E83               	movwf	131,c	;volatile
  4226  0018EA                     l5364:
  4227                           
  4228                           ; BSR set to: 0
  4229                           ;Modbus.c: 130:         }while(ModDataCnt != ExpectedBytes);
  4230  0018EA  51FA               	movf	_ExpectedBytes& (0+255),w,b
  4231  0018EC  1996               	xorwf	_ModDataCnt& (0+255),w,b
  4232  0018EE  E107               	bnz	u5511
  4233  0018F0  51FB               	movf	(_ExpectedBytes+1)& (0+255),w,b
  4234  0018F2  1997               	xorwf	(_ModDataCnt+1)& (0+255),w,b
  4235  0018F4  A4D8               	btfss	status,2,c
  4236  0018F6  EF7F  F00C         	goto	u5511
  4237  0018FA  EF81  F00C         	goto	u5510
  4238  0018FE                     u5511:
  4239  0018FE  EF29  F00C         	goto	l5340
  4240  001902                     u5510:
  4241  001902                     
  4242                           ; BSR set to: 0
  4243  001902  BA83               	btfsc	131,5,c	;volatile
  4244  001904  EF86  F00C         	goto	u5521
  4245  001908  EF89  F00C         	goto	u5520
  4246  00190C                     u5521:
  4247  00190C  0E01               	movlw	1
  4248  00190E  EF8A  F00C         	goto	u5526
  4249  001912                     u5520:
  4250  001912  0E00               	movlw	0
  4251  001914                     u5526:
  4252  001914  0AFF               	xorlw	255
  4253  001916  6E55               	movwf	??_ModbusRx^0,c
  4254  001918  3A55               	swapf	??_ModbusRx^0,f,c
  4255  00191A  4655               	rlncf	??_ModbusRx^0,f,c
  4256  00191C  5083               	movf	131,w,c	;volatile
  4257  00191E  1855               	xorwf	??_ModbusRx^0,w,c
  4258  001920  0BDF               	andlw	-33
  4259  001922  1855               	xorwf	??_ModbusRx^0,w,c
  4260  001924  6E83               	movwf	131,c	;volatile
  4261  001926                     
  4262                           ; BSR set to: 0
  4263                           ;Modbus.c: 135:         if(checkCRC() == 1)
  4264  001926  EC77  F00B         	call	_checkCRC	;wreg free
  4265  00192A  06E8               	decf	wreg,f,c
  4266  00192C  A4D8               	btfss	status,2,c
  4267  00192E  EF9B  F00C         	goto	u5531
  4268  001932  EF9D  F00C         	goto	u5530
  4269  001936                     u5531:
  4270  001936  EFA6  F00C         	goto	l5372
  4271  00193A                     u5530:
  4272  00193A                     
  4273                           ;Modbus.c: 136:         {;Modbus.c: 137:             printf("CRC Checked Out. \r\n\n");
  4274  00193A  0EC2               	movlw	low STR_18
  4275  00193C  0100               	movlb	0	; () banked
  4276  00193E  6FC2               	movwf	printf@fmt& (0+255),b
  4277  001940  0EFF               	movlw	high STR_18
  4278  001942  6FC3               	movwf	(printf@fmt+1)& (0+255),b
  4279  001944  ECD9  F014         	call	_printf	;wreg free
  4280                           
  4281                           ;Modbus.c: 138:         }else{
  4282  001948  EFAD  F00C         	goto	l5374
  4283  00194C                     l5372:
  4284                           
  4285                           ;Modbus.c: 139:             printf("CRC did NOT check out. \r\n\n");
  4286  00194C  0E77               	movlw	low STR_19
  4287  00194E  0100               	movlb	0	; () banked
  4288  001950  6FC2               	movwf	printf@fmt& (0+255),b
  4289  001952  0EFF               	movlw	high STR_19
  4290  001954  6FC3               	movwf	(printf@fmt+1)& (0+255),b
  4291  001956  ECD9  F014         	call	_printf	;wreg free
  4292  00195A                     l5374:
  4293                           
  4294                           ;Modbus.c: 145:         return 1;
  4295  00195A  0E01               	movlw	1
  4296  00195C  EFB1  F00C         	goto	l715
  4297  001960                     l5378:
  4298                           
  4299                           ;Modbus.c: 147:     return 0;
  4300  001960  0E00               	movlw	0
  4301  001962                     l715:
  4302  001962  0012               	return		;funcret
  4303  001964                     __end_of_ModbusRx:
  4304                           	opt callstack 0
  4305                           
  4306 ;; *************** function _checkCRC *****************
  4307 ;; Defined at:
  4308 ;;		line 74 in file "Modbus.c"
  4309 ;; Parameters:    Size  Location     Type
  4310 ;;		None
  4311 ;; Auto vars:     Size  Location     Type
  4312 ;;  i               2   54[BANK0 ] int 
  4313 ;;  crc             2   52[BANK0 ] unsigned int 
  4314 ;;  j               2   50[BANK0 ] int 
  4315 ;;  crcLow          2   48[BANK0 ] unsigned int 
  4316 ;;  crcHigh         2   46[BANK0 ] unsigned int 
  4317 ;; Return value:  Size  Location     Type
  4318 ;;                  1    wreg      _Bool 
  4319 ;; Registers used:
  4320 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4321 ;; Tracked objects:
  4322 ;;		On entry : 0/0
  4323 ;;		On exit  : 0/0
  4324 ;;		Unchanged: 0/0
  4325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4327 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4328 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4329 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4330 ;;Total ram usage:       15 bytes
  4331 ;; Hardware stack levels used:    1
  4332 ;; Hardware stack levels required when called:   13
  4333 ;; This function calls:
  4334 ;;		_printf
  4335 ;; This function is called by:
  4336 ;;		_ModbusRx
  4337 ;; This function uses a non-reentrant model
  4338 ;;
  4339                           
  4340                           	psect	text27
  4341  0016EE                     __ptext27:
  4342                           	opt callstack 0
  4343  0016EE                     _checkCRC:
  4344                           	opt callstack 16
  4345  0016EE                     
  4346                           ;Modbus.c: 75:   unsigned int crc = 0xFFFF;
  4347  0016EE  0100               	movlb	0	; () banked
  4348  0016F0  69D9               	setf	checkCRC@crc& (0+255),b
  4349  0016F2  69DA               	setf	(checkCRC@crc+1)& (0+255),b
  4350  0016F4                     
  4351                           ; BSR set to: 0
  4352                           ;Modbus.c: 77:   unsigned int crcLow = 0;
  4353  0016F4  0E00               	movlw	0
  4354  0016F6  6FD6               	movwf	(checkCRC@crcLow+1)& (0+255),b
  4355  0016F8  0E00               	movlw	0
  4356  0016FA  6FD5               	movwf	checkCRC@crcLow& (0+255),b
  4357                           
  4358                           ;Modbus.c: 78:   int i,j = 0;
  4359  0016FC  0E00               	movlw	0
  4360  0016FE  6FD8               	movwf	(checkCRC@j+1)& (0+255),b
  4361  001700  0E00               	movlw	0
  4362  001702  6FD7               	movwf	checkCRC@j& (0+255),b
  4363                           
  4364                           ;Modbus.c: 80:     for(i=0;i<ModDataCnt-2;i++){
  4365  001704  0E00               	movlw	0
  4366  001706  6FDC               	movwf	(checkCRC@i+1)& (0+255),b
  4367  001708  0E00               	movlw	0
  4368  00170A  6FDB               	movwf	checkCRC@i& (0+255),b
  4369  00170C  EFB7  F00B         	goto	l5216
  4370  001710                     l5198:
  4371                           
  4372                           ; BSR set to: 0
  4373                           ;Modbus.c: 81:       crc ^= ModbusData[i];
  4374  001710  0E00               	movlw	low _ModbusData
  4375  001712  25DB               	addwf	checkCRC@i& (0+255),w,b
  4376  001714  6ED9               	movwf	fsr2l,c
  4377  001716  0E01               	movlw	high _ModbusData
  4378  001718  21DC               	addwfc	(checkCRC@i+1)& (0+255),w,b
  4379  00171A  6EDA               	movwf	fsr2h,c
  4380  00171C  50DF               	movf	indf2,w,c
  4381  00171E  6FCE               	movwf	??_checkCRC& (0+255),b
  4382  001720  51CE               	movf	??_checkCRC& (0+255),w,b
  4383  001722  1BD9               	xorwf	checkCRC@crc& (0+255),f,b
  4384  001724                     
  4385                           ; BSR set to: 0
  4386                           ;Modbus.c: 82:       for(j=8; j!=0; j--){
  4387  001724  0E00               	movlw	0
  4388  001726  6FD8               	movwf	(checkCRC@j+1)& (0+255),b
  4389  001728  0E08               	movlw	8
  4390  00172A  6FD7               	movwf	checkCRC@j& (0+255),b
  4391  00172C                     l691:
  4392                           
  4393                           ; BSR set to: 0
  4394                           ;Modbus.c: 83:         if((crc & 0x0001) != 0){
  4395  00172C  A1D9               	btfss	checkCRC@crc& (0+255),0,b
  4396  00172E  EF9B  F00B         	goto	u5311
  4397  001732  EF9D  F00B         	goto	u5310
  4398  001736                     u5311:
  4399  001736  EFA6  F00B         	goto	l5210
  4400  00173A                     u5310:
  4401  00173A                     
  4402                           ; BSR set to: 0
  4403                           ;Modbus.c: 84:           crc >>= 1;
  4404  00173A  90D8               	bcf	status,0,c
  4405  00173C  33DA               	rrcf	(checkCRC@crc+1)& (0+255),f,b
  4406  00173E  33D9               	rrcf	checkCRC@crc& (0+255),f,b
  4407  001740                     
  4408                           ; BSR set to: 0
  4409                           ;Modbus.c: 85:           crc ^= 0xA001;
  4410  001740  0E01               	movlw	1
  4411  001742  1BD9               	xorwf	checkCRC@crc& (0+255),f,b
  4412  001744  0EA0               	movlw	160
  4413  001746  1BDA               	xorwf	(checkCRC@crc+1)& (0+255),f,b
  4414                           
  4415                           ;Modbus.c: 86:         }
  4416  001748  EFA9  F00B         	goto	l694
  4417  00174C                     l5210:
  4418                           
  4419                           ; BSR set to: 0
  4420                           ;Modbus.c: 88:           crc >>= 1;
  4421  00174C  90D8               	bcf	status,0,c
  4422  00174E  33DA               	rrcf	(checkCRC@crc+1)& (0+255),f,b
  4423  001750  33D9               	rrcf	checkCRC@crc& (0+255),f,b
  4424  001752                     l694:
  4425                           
  4426                           ; BSR set to: 0
  4427                           ;Modbus.c: 90:       }
  4428  001752  07D7               	decf	checkCRC@j& (0+255),f,b
  4429  001754  A0D8               	btfss	status,0,c
  4430  001756  07D8               	decf	(checkCRC@j+1)& (0+255),f,b
  4431  001758                     
  4432                           ; BSR set to: 0
  4433  001758  51D7               	movf	checkCRC@j& (0+255),w,b
  4434  00175A  11D8               	iorwf	(checkCRC@j+1)& (0+255),w,b
  4435  00175C  A4D8               	btfss	status,2,c
  4436  00175E  EFB3  F00B         	goto	u5321
  4437  001762  EFB5  F00B         	goto	u5320
  4438  001766                     u5321:
  4439  001766  EF96  F00B         	goto	l691
  4440  00176A                     u5320:
  4441  00176A                     
  4442                           ; BSR set to: 0
  4443                           ;Modbus.c: 91:     }
  4444  00176A  4BDB               	infsnz	checkCRC@i& (0+255),f,b
  4445  00176C  2BDC               	incf	(checkCRC@i+1)& (0+255),f,b
  4446  00176E                     l5216:
  4447                           
  4448                           ; BSR set to: 0
  4449  00176E  0EFE               	movlw	254
  4450  001770  6FCE               	movwf	??_checkCRC& (0+255),b
  4451  001772  0EFF               	movlw	255
  4452  001774  6FCF               	movwf	(??_checkCRC+1)& (0+255),b
  4453  001776  C096  F0D0         	movff	_ModDataCnt,??_checkCRC+2
  4454  00177A  C097  F0D1         	movff	_ModDataCnt+1,??_checkCRC+3
  4455  00177E  51CE               	movf	??_checkCRC& (0+255),w,b
  4456  001780  27D0               	addwf	(??_checkCRC+2)& (0+255),f,b
  4457  001782  51CF               	movf	(??_checkCRC+1)& (0+255),w,b
  4458  001784  23D1               	addwfc	(??_checkCRC+3)& (0+255),f,b
  4459  001786  51D0               	movf	(??_checkCRC+2)& (0+255),w,b
  4460  001788  5DDB               	subwf	checkCRC@i& (0+255),w,b
  4461  00178A  51DC               	movf	(checkCRC@i+1)& (0+255),w,b
  4462  00178C  0A80               	xorlw	128
  4463  00178E  6FD2               	movwf	(??_checkCRC+4)& (0+255),b
  4464  001790  51D1               	movf	(??_checkCRC+3)& (0+255),w,b
  4465  001792  0A80               	xorlw	128
  4466  001794  59D2               	subwfb	(??_checkCRC+4)& (0+255),w,b
  4467  001796  A0D8               	btfss	status,0,c
  4468  001798  EFD0  F00B         	goto	u5331
  4469  00179C  EFD2  F00B         	goto	u5330
  4470  0017A0                     u5331:
  4471  0017A0  EF88  F00B         	goto	l5198
  4472  0017A4                     u5330:
  4473  0017A4                     
  4474                           ; BSR set to: 0
  4475                           ;Modbus.c: 93:   crcHigh = (crc & 0x00FF);
  4476  0017A4  51D9               	movf	checkCRC@crc& (0+255),w,b
  4477  0017A6  6FD3               	movwf	checkCRC@crcHigh& (0+255),b
  4478  0017A8  6BD4               	clrf	(checkCRC@crcHigh+1)& (0+255),b
  4479                           
  4480                           ;Modbus.c: 94:   crcLow = (crc & 0xFF00) >>8;
  4481  0017AA  C0D9  F0CE         	movff	checkCRC@crc,??_checkCRC
  4482  0017AE  C0DA  F0CF         	movff	checkCRC@crc+1,??_checkCRC+1
  4483  0017B2  C0CF  F0CE         	movff	??_checkCRC+1,??_checkCRC
  4484  0017B6  6BCF               	clrf	(??_checkCRC+1)& (0+255),b
  4485  0017B8  51CE               	movf	??_checkCRC& (0+255),w,b
  4486  0017BA  6FD5               	movwf	checkCRC@crcLow& (0+255),b
  4487  0017BC  6BD6               	clrf	(checkCRC@crcLow+1)& (0+255),b
  4488  0017BE                     
  4489                           ; BSR set to: 0
  4490                           ;Modbus.c: 95:   printf("crcHigh: 0x%02x  crcLow: 0x%02x  \r\n", crcHigh, crcLow);
  4491  0017BE  0ED7               	movlw	low STR_17
  4492  0017C0  6FC2               	movwf	printf@fmt& (0+255),b
  4493  0017C2  0EFE               	movlw	high STR_17
  4494  0017C4  6FC3               	movwf	(printf@fmt+1)& (0+255),b
  4495  0017C6  C0D3  F0C4         	movff	checkCRC@crcHigh,?_printf+2
  4496  0017CA  C0D4  F0C5         	movff	checkCRC@crcHigh+1,?_printf+3
  4497  0017CE  C0D5  F0C6         	movff	checkCRC@crcLow,?_printf+4
  4498  0017D2  C0D6  F0C7         	movff	checkCRC@crcLow+1,?_printf+5
  4499  0017D6  ECD9  F014         	call	_printf	;wreg free
  4500  0017DA                     
  4501                           ;Modbus.c: 96:   if((crcHigh == ModbusData[i])&&(crcLow == ModbusData[i+1]))
  4502  0017DA  0E00               	movlw	low _ModbusData
  4503  0017DC  0100               	movlb	0	; () banked
  4504  0017DE  25DB               	addwf	checkCRC@i& (0+255),w,b
  4505  0017E0  6ED9               	movwf	fsr2l,c
  4506  0017E2  0E01               	movlw	high _ModbusData
  4507  0017E4  21DC               	addwfc	(checkCRC@i+1)& (0+255),w,b
  4508  0017E6  6EDA               	movwf	fsr2h,c
  4509  0017E8  50DF               	movf	indf2,w,c
  4510  0017EA  6FCE               	movwf	??_checkCRC& (0+255),b
  4511  0017EC  6BCF               	clrf	(??_checkCRC+1)& (0+255),b
  4512  0017EE  51D3               	movf	checkCRC@crcHigh& (0+255),w,b
  4513  0017F0  19CE               	xorwf	??_checkCRC& (0+255),w,b
  4514  0017F2  E107               	bnz	u5341
  4515  0017F4  51D4               	movf	(checkCRC@crcHigh+1)& (0+255),w,b
  4516  0017F6  19CF               	xorwf	(??_checkCRC+1)& (0+255),w,b
  4517  0017F8  A4D8               	btfss	status,2,c
  4518  0017FA  EF01  F00C         	goto	u5341
  4519  0017FE  EF03  F00C         	goto	u5340
  4520  001802                     u5341:
  4521  001802  EF1B  F00C         	goto	l5232
  4522  001806                     u5340:
  4523  001806                     
  4524                           ; BSR set to: 0
  4525  001806  0E01               	movlw	low (_ModbusData+1)
  4526  001808  25DB               	addwf	checkCRC@i& (0+255),w,b
  4527  00180A  6ED9               	movwf	fsr2l,c
  4528  00180C  0E01               	movlw	high (_ModbusData+1)
  4529  00180E  21DC               	addwfc	(checkCRC@i+1)& (0+255),w,b
  4530  001810  6EDA               	movwf	fsr2h,c
  4531  001812  50DF               	movf	indf2,w,c
  4532  001814  6FCE               	movwf	??_checkCRC& (0+255),b
  4533  001816  6BCF               	clrf	(??_checkCRC+1)& (0+255),b
  4534  001818  51D5               	movf	checkCRC@crcLow& (0+255),w,b
  4535  00181A  19CE               	xorwf	??_checkCRC& (0+255),w,b
  4536  00181C  E107               	bnz	u5351
  4537  00181E  51D6               	movf	(checkCRC@crcLow+1)& (0+255),w,b
  4538  001820  19CF               	xorwf	(??_checkCRC+1)& (0+255),w,b
  4539  001822  A4D8               	btfss	status,2,c
  4540  001824  EF16  F00C         	goto	u5351
  4541  001828  EF18  F00C         	goto	u5350
  4542  00182C                     u5351:
  4543  00182C  EF1B  F00C         	goto	l5232
  4544  001830                     u5350:
  4545  001830                     
  4546                           ; BSR set to: 0
  4547                           ;Modbus.c: 97:   {;Modbus.c: 98:     return 1;
  4548  001830  0E01               	movlw	1
  4549  001832  EF1C  F00C         	goto	l697
  4550  001836                     l5232:
  4551                           
  4552                           ; BSR set to: 0
  4553                           ;Modbus.c: 101:     return 0;
  4554  001836  0E00               	movlw	0
  4555  001838                     l697:
  4556                           
  4557                           ; BSR set to: 0
  4558  001838  0012               	return		;funcret
  4559  00183A                     __end_of_checkCRC:
  4560                           	opt callstack 0
  4561                           
  4562 ;; *************** function _RXMode *****************
  4563 ;; Defined at:
  4564 ;;		line 22 in file "Modbus.c"
  4565 ;; Parameters:    Size  Location     Type
  4566 ;;		None
  4567 ;; Auto vars:     Size  Location     Type
  4568 ;;		None
  4569 ;; Return value:  Size  Location     Type
  4570 ;;                  1    wreg      void 
  4571 ;; Registers used:
  4572 ;;		None
  4573 ;; Tracked objects:
  4574 ;;		On entry : 0/0
  4575 ;;		On exit  : 0/0
  4576 ;;		Unchanged: 0/0
  4577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4582 ;;Total ram usage:        0 bytes
  4583 ;; Hardware stack levels used:    1
  4584 ;; Hardware stack levels required when called:    4
  4585 ;; This function calls:
  4586 ;;		Nothing
  4587 ;; This function is called by:
  4588 ;;		_main
  4589 ;;		_ModbusRx
  4590 ;; This function uses a non-reentrant model
  4591 ;;
  4592                           
  4593                           	psect	text28
  4594  002B1C                     __ptext28:
  4595                           	opt callstack 0
  4596  002B1C                     _RXMode:
  4597                           	opt callstack 26
  4598  002B1C  9086               	bcf	134,0,c	;volatile
  4599  002B1E  9683               	bcf	131,3,c	;volatile
  4600  002B20  0012               	return		;funcret
  4601  002B22                     __end_of_RXMode:
  4602                           	opt callstack 0
  4603                           
  4604 ;; *************** function _EUSART1_is_rx_ready *****************
  4605 ;; Defined at:
  4606 ;;		line 137 in file "mcc_generated_files/eusart1.c"
  4607 ;; Parameters:    Size  Location     Type
  4608 ;;		None
  4609 ;; Auto vars:     Size  Location     Type
  4610 ;;		None
  4611 ;; Return value:  Size  Location     Type
  4612 ;;                  1    wreg      _Bool 
  4613 ;; Registers used:
  4614 ;;		wreg, status,2
  4615 ;; Tracked objects:
  4616 ;;		On entry : 0/0
  4617 ;;		On exit  : 0/0
  4618 ;;		Unchanged: 0/0
  4619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4624 ;;Total ram usage:        0 bytes
  4625 ;; Hardware stack levels used:    1
  4626 ;; Hardware stack levels required when called:    4
  4627 ;; This function calls:
  4628 ;;		Nothing
  4629 ;; This function is called by:
  4630 ;;		_ModbusRx
  4631 ;; This function uses a non-reentrant model
  4632 ;;
  4633                           
  4634                           	psect	text29
  4635  002A66                     __ptext29:
  4636                           	opt callstack 0
  4637  002A66                     _EUSART1_is_rx_ready:
  4638                           	opt callstack 25
  4639  002A66                     
  4640                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
  4641  002A66  0100               	movlb	0	; () banked
  4642  002A68  519C               	movf	_eusart1RxCount& (0+255),w,b	;volatile
  4643  002A6A  A4D8               	btfss	status,2,c
  4644  002A6C  EF3A  F015         	goto	u5191
  4645  002A70  EF3D  F015         	goto	u5190
  4646  002A74                     u5191:
  4647  002A74  0E01               	movlw	1
  4648  002A76  EF3E  F015         	goto	u5200
  4649  002A7A                     u5190:
  4650  002A7A  0E00               	movlw	0
  4651  002A7C                     u5200:
  4652  002A7C                     
  4653                           ; BSR set to: 0
  4654  002A7C  0012               	return		;funcret
  4655  002A7E                     __end_of_EUSART1_is_rx_ready:
  4656                           	opt callstack 0
  4657                           
  4658 ;; *************** function _EUSART1_Read *****************
  4659 ;; Defined at:
  4660 ;;		line 151 in file "mcc_generated_files/eusart1.c"
  4661 ;; Parameters:    Size  Location     Type
  4662 ;;		None
  4663 ;; Auto vars:     Size  Location     Type
  4664 ;;  readValue       1    4[COMRAM] unsigned char 
  4665 ;; Return value:  Size  Location     Type
  4666 ;;                  1    wreg      unsigned char 
  4667 ;; Registers used:
  4668 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4669 ;; Tracked objects:
  4670 ;;		On entry : 0/0
  4671 ;;		On exit  : 0/0
  4672 ;;		Unchanged: 0/0
  4673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4675 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4677 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4678 ;;Total ram usage:        1 bytes
  4679 ;; Hardware stack levels used:    1
  4680 ;; Hardware stack levels required when called:    4
  4681 ;; This function calls:
  4682 ;;		Nothing
  4683 ;; This function is called by:
  4684 ;;		_ModbusRx
  4685 ;; This function uses a non-reentrant model
  4686 ;;
  4687                           
  4688                           	psect	text30
  4689  00250A                     __ptext30:
  4690                           	opt callstack 0
  4691  00250A                     _EUSART1_Read:
  4692                           	opt callstack 25
  4693  00250A                     l5128:
  4694                           
  4695                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
  4696  00250A  0100               	movlb	0	; () banked
  4697  00250C  519C               	movf	_eusart1RxCount& (0+255),w,b	;volatile
  4698  00250E  B4D8               	btfsc	status,2,c
  4699  002510  EF8C  F012         	goto	u5221
  4700  002514  EF8E  F012         	goto	u5220
  4701  002518                     u5221:
  4702  002518  EF85  F012         	goto	l5128
  4703  00251C                     u5220:
  4704  00251C                     
  4705                           ; BSR set to: 0
  4706                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
  4707  00251C  0E00               	movlw	low _eusart1RxStatusBuffer
  4708  00251E  259D               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
  4709  002520  6ED9               	movwf	fsr2l,c
  4710  002522  6ADA               	clrf	fsr2h,c
  4711  002524  0E02               	movlw	high _eusart1RxStatusBuffer
  4712  002526  22DA               	addwfc	fsr2h,f,c
  4713  002528  50DF               	movf	indf2,w,c
  4714  00252A  6F9B               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  4715                           
  4716                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
  4717  00252C  0E64               	movlw	low _eusart1RxBuffer
  4718  00252E  259D               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
  4719  002530  6ED9               	movwf	fsr2l,c
  4720  002532  6ADA               	clrf	fsr2h,c
  4721  002534  0E03               	movlw	high _eusart1RxBuffer
  4722  002536  22DA               	addwfc	fsr2h,f,c
  4723  002538  50DF               	movf	indf2,w,c
  4724  00253A  6E05               	movwf	EUSART1_Read@readValue^0,c
  4725  00253C                     
  4726                           ; BSR set to: 0
  4727  00253C  2B9D               	incf	_eusart1RxTail& (0+255),f,b	;volatile
  4728  00253E                     
  4729                           ; BSR set to: 0
  4730                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
  4731  00253E  0E63               	movlw	99
  4732  002540  659D               	cpfsgt	_eusart1RxTail& (0+255),b	;volatile
  4733  002542  EFA5  F012         	goto	u5231
  4734  002546  EFA7  F012         	goto	u5230
  4735  00254A                     u5231:
  4736  00254A  EFA9  F012         	goto	l5138
  4737  00254E                     u5230:
  4738  00254E                     
  4739                           ; BSR set to: 0
  4740                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
  4741  00254E  0E00               	movlw	0
  4742  002550  6F9D               	movwf	_eusart1RxTail& (0+255),b	;volatile
  4743  002552                     l5138:
  4744                           
  4745                           ; BSR set to: 0
  4746                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
  4747  002552  010E               	movlb	14	; () banked
  4748  002554  9BC5               	bcf	197,5,b	;volatile
  4749  002556                     
  4750                           ; BSR set to: 14
  4751                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
  4752  002556  0100               	movlb	0	; () banked
  4753  002558  079C               	decf	_eusart1RxCount& (0+255),f,b	;volatile
  4754  00255A                     
  4755                           ; BSR set to: 0
  4756                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
  4757  00255A  010E               	movlb	14	; () banked
  4758  00255C  8BC5               	bsf	197,5,b	;volatile
  4759  00255E                     
  4760                           ; BSR set to: 14
  4761                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
  4762  00255E  5005               	movf	EUSART1_Read@readValue^0,w,c
  4763  002560                     
  4764                           ; BSR set to: 14
  4765  002560  0012               	return		;funcret
  4766  002562                     __end_of_EUSART1_Read:
  4767                           	opt callstack 0
  4768                           
  4769 ;; *************** function _ClearRxBuff *****************
  4770 ;; Defined at:
  4771 ;;		line 38 in file "Modbus.c"
  4772 ;; Parameters:    Size  Location     Type
  4773 ;;		None
  4774 ;; Auto vars:     Size  Location     Type
  4775 ;;  i               2    5[COMRAM] int 
  4776 ;; Return value:  Size  Location     Type
  4777 ;;                  1    wreg      void 
  4778 ;; Registers used:
  4779 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4780 ;; Tracked objects:
  4781 ;;		On entry : 0/0
  4782 ;;		On exit  : 0/0
  4783 ;;		Unchanged: 0/0
  4784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4786 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4787 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4788 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4789 ;;Total ram usage:        3 bytes
  4790 ;; Hardware stack levels used:    1
  4791 ;; Hardware stack levels required when called:    4
  4792 ;; This function calls:
  4793 ;;		Nothing
  4794 ;; This function is called by:
  4795 ;;		_main
  4796 ;;		_ModbusRx
  4797 ;; This function uses a non-reentrant model
  4798 ;;
  4799                           
  4800                           	psect	text31
  4801  00269C                     __ptext31:
  4802                           	opt callstack 0
  4803  00269C                     _ClearRxBuff:
  4804                           	opt callstack 25
  4805  00269C                     
  4806                           ;Modbus.c: 40:     int i = 0;
  4807  00269C  0E00               	movlw	0
  4808  00269E  6E07               	movwf	(ClearRxBuff@i+1)^0,c
  4809  0026A0  0E00               	movlw	0
  4810  0026A2  6E06               	movwf	ClearRxBuff@i^0,c
  4811                           
  4812                           ;Modbus.c: 41:     for(i=0; i<ByteNum; i++ ){
  4813  0026A4  0E00               	movlw	0
  4814  0026A6  6E07               	movwf	(ClearRxBuff@i+1)^0,c
  4815  0026A8  0E00               	movlw	0
  4816  0026AA  6E06               	movwf	ClearRxBuff@i^0,c
  4817  0026AC  EF62  F013         	goto	l5172
  4818  0026B0                     l5168:
  4819                           
  4820                           ; BSR set to: 0
  4821                           ;Modbus.c: 42:         rxData[i] = 0xFF;
  4822  0026B0  0E00               	movlw	low _rxData
  4823  0026B2  2406               	addwf	ClearRxBuff@i^0,w,c
  4824  0026B4  6ED9               	movwf	fsr2l,c
  4825  0026B6  0E03               	movlw	high _rxData
  4826  0026B8  2007               	addwfc	(ClearRxBuff@i+1)^0,w,c
  4827  0026BA  6EDA               	movwf	fsr2h,c
  4828  0026BC  0EFF               	movlw	255
  4829  0026BE  6EDF               	movwf	indf2,c
  4830  0026C0                     
  4831                           ; BSR set to: 0
  4832                           ;Modbus.c: 43:     }
  4833  0026C0  4A06               	infsnz	ClearRxBuff@i^0,f,c
  4834  0026C2  2A07               	incf	(ClearRxBuff@i+1)^0,f,c
  4835  0026C4                     l5172:
  4836  0026C4  0100               	movlb	0	; () banked
  4837  0026C6  518E               	movf	_ByteNum& (0+255),w,b
  4838  0026C8  5C06               	subwf	ClearRxBuff@i^0,w,c
  4839  0026CA  5007               	movf	(ClearRxBuff@i+1)^0,w,c
  4840  0026CC  0A80               	xorlw	128
  4841  0026CE  6E05               	movwf	??_ClearRxBuff^0,c
  4842  0026D0  518F               	movf	(_ByteNum+1)& (0+255),w,b
  4843  0026D2  0A80               	xorlw	128
  4844  0026D4  5805               	subwfb	??_ClearRxBuff^0,w,c
  4845  0026D6  A0D8               	btfss	status,0,c
  4846  0026D8  EF70  F013         	goto	u5271
  4847  0026DC  EF72  F013         	goto	u5270
  4848  0026E0                     u5271:
  4849  0026E0  EF58  F013         	goto	l5168
  4850  0026E4                     u5270:
  4851  0026E4                     
  4852                           ; BSR set to: 0
  4853  0026E4  0012               	return		;funcret
  4854  0026E6                     __end_of_ClearRxBuff:
  4855                           	opt callstack 0
  4856                           
  4857 ;; *************** function _AddRxBuffToModBus *****************
  4858 ;; Defined at:
  4859 ;;		line 47 in file "Modbus.c"
  4860 ;; Parameters:    Size  Location     Type
  4861 ;;		None
  4862 ;; Auto vars:     Size  Location     Type
  4863 ;;  i               2    5[COMRAM] int 
  4864 ;; Return value:  Size  Location     Type
  4865 ;;                  1    wreg      void 
  4866 ;; Registers used:
  4867 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4868 ;; Tracked objects:
  4869 ;;		On entry : 0/0
  4870 ;;		On exit  : 0/0
  4871 ;;		Unchanged: 0/0
  4872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4874 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4875 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4876 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4877 ;;Total ram usage:        3 bytes
  4878 ;; Hardware stack levels used:    1
  4879 ;; Hardware stack levels required when called:    4
  4880 ;; This function calls:
  4881 ;;		Nothing
  4882 ;; This function is called by:
  4883 ;;		_ModbusRx
  4884 ;; This function uses a non-reentrant model
  4885 ;;
  4886                           
  4887                           	psect	text32
  4888  001EEA                     __ptext32:
  4889                           	opt callstack 0
  4890  001EEA                     _AddRxBuffToModBus:
  4891                           	opt callstack 25
  4892  001EEA                     
  4893                           ;Modbus.c: 51:     int i = 0;
  4894  001EEA  0E00               	movlw	0
  4895  001EEC  6E07               	movwf	(AddRxBuffToModBus@i+1)^0,c
  4896  001EEE  0E00               	movlw	0
  4897  001EF0  6E06               	movwf	AddRxBuffToModBus@i^0,c
  4898                           
  4899                           ;Modbus.c: 53:     for(i=0l; i<ByteNum; i++){
  4900  001EF2  0E00               	movlw	0
  4901  001EF4  6E07               	movwf	(AddRxBuffToModBus@i+1)^0,c
  4902  001EF6  0E00               	movlw	0
  4903  001EF8  6E06               	movwf	AddRxBuffToModBus@i^0,c
  4904  001EFA  EF91  F00F         	goto	l5182
  4905  001EFE                     l5176:
  4906                           
  4907                           ; BSR set to: 0
  4908                           ;Modbus.c: 54:         ModbusData[ModDataCnt] = rxData[i];
  4909  001EFE  0E00               	movlw	low _rxData
  4910  001F00  2406               	addwf	AddRxBuffToModBus@i^0,w,c
  4911  001F02  6ED9               	movwf	fsr2l,c
  4912  001F04  0E03               	movlw	high _rxData
  4913  001F06  2007               	addwfc	(AddRxBuffToModBus@i+1)^0,w,c
  4914  001F08  6EDA               	movwf	fsr2h,c
  4915  001F0A  0E00               	movlw	low _ModbusData
  4916  001F0C  2596               	addwf	_ModDataCnt& (0+255),w,b
  4917  001F0E  6EE1               	movwf	fsr1l,c
  4918  001F10  0E01               	movlw	high _ModbusData
  4919  001F12  2197               	addwfc	(_ModDataCnt+1)& (0+255),w,b
  4920  001F14  6EE2               	movwf	fsr1h,c
  4921  001F16  CFDF FFE7          	movff	indf2,indf1
  4922  001F1A                     
  4923                           ; BSR set to: 0
  4924                           ;Modbus.c: 55:         ModDataCnt++;
  4925  001F1A  4B96               	infsnz	_ModDataCnt& (0+255),f,b
  4926  001F1C  2B97               	incf	(_ModDataCnt+1)& (0+255),f,b
  4927  001F1E                     
  4928                           ; BSR set to: 0
  4929                           ;Modbus.c: 56:     }
  4930  001F1E  4A06               	infsnz	AddRxBuffToModBus@i^0,f,c
  4931  001F20  2A07               	incf	(AddRxBuffToModBus@i+1)^0,f,c
  4932  001F22                     l5182:
  4933  001F22  0100               	movlb	0	; () banked
  4934  001F24  518E               	movf	_ByteNum& (0+255),w,b
  4935  001F26  5C06               	subwf	AddRxBuffToModBus@i^0,w,c
  4936  001F28  5007               	movf	(AddRxBuffToModBus@i+1)^0,w,c
  4937  001F2A  0A80               	xorlw	128
  4938  001F2C  6E05               	movwf	??_AddRxBuffToModBus^0,c
  4939  001F2E  518F               	movf	(_ByteNum+1)& (0+255),w,b
  4940  001F30  0A80               	xorlw	128
  4941  001F32  5805               	subwfb	??_AddRxBuffToModBus^0,w,c
  4942  001F34  A0D8               	btfss	status,0,c
  4943  001F36  EF9F  F00F         	goto	u5281
  4944  001F3A  EFA1  F00F         	goto	u5280
  4945  001F3E                     u5281:
  4946  001F3E  EF7F  F00F         	goto	l5176
  4947  001F42                     u5280:
  4948  001F42                     
  4949                           ; BSR set to: 0
  4950                           ;Modbus.c: 61:     if(ModbusData[1] == 0x0F){
  4951  001F42  0E0F               	movlw	15
  4952  001F44  0101               	movlb	1	; () banked
  4953  001F46  1901               	xorwf	(_ModbusData+1)& (0+255),w,b
  4954  001F48  A4D8               	btfss	status,2,c
  4955  001F4A  EFA9  F00F         	goto	u5291
  4956  001F4E  EFAB  F00F         	goto	u5290
  4957  001F52                     u5291:
  4958  001F52  EFB4  F00F         	goto	l5188
  4959  001F56                     u5290:
  4960  001F56                     l5186:
  4961                           
  4962                           ; BSR set to: 1
  4963                           ;Modbus.c: 62:         ExpectedBytes = ModbusData[6] + 9;
  4964  001F56  0E09               	movlw	9
  4965  001F58  2506               	addwf	(_ModbusData+6)& (0+255),w,b
  4966  001F5A  0100               	movlb	0	; () banked
  4967  001F5C  6FFA               	movwf	_ExpectedBytes& (0+255),b
  4968  001F5E  6BFB               	clrf	(_ExpectedBytes+1)& (0+255),b
  4969  001F60  0E00               	movlw	0
  4970  001F62  23FB               	addwfc	(_ExpectedBytes+1)& (0+255),f,b
  4971                           
  4972                           ;Modbus.c: 63:     }else if (ModbusData[1] == 0x10){
  4973  001F64  EFC4  F00F         	goto	l686
  4974  001F68                     l5188:
  4975                           
  4976                           ; BSR set to: 1
  4977  001F68  0E10               	movlw	16
  4978  001F6A  1901               	xorwf	(_ModbusData+1)& (0+255),w,b
  4979  001F6C  A4D8               	btfss	status,2,c
  4980  001F6E  EFBB  F00F         	goto	u5301
  4981  001F72  EFBD  F00F         	goto	u5300
  4982  001F76                     u5301:
  4983  001F76  EFBF  F00F         	goto	l5192
  4984  001F7A                     u5300:
  4985  001F7A  EFAB  F00F         	goto	l5186
  4986  001F7E                     l5192:
  4987                           
  4988                           ; BSR set to: 1
  4989                           ;Modbus.c: 66:         ExpectedBytes = 8;
  4990  001F7E  0E00               	movlw	0
  4991  001F80  0100               	movlb	0	; () banked
  4992  001F82  6FFB               	movwf	(_ExpectedBytes+1)& (0+255),b
  4993  001F84  0E08               	movlw	8
  4994  001F86  6FFA               	movwf	_ExpectedBytes& (0+255),b
  4995  001F88                     l686:
  4996                           
  4997                           ; BSR set to: 0
  4998  001F88  0012               	return		;funcret
  4999  001F8A                     __end_of_AddRxBuffToModBus:
  5000                           	opt callstack 0
  5001                           
  5002 ;; *************** function _InitialiseString *****************
  5003 ;; Defined at:
  5004 ;;		line 39 in file "main.c"
  5005 ;; Parameters:    Size  Location     Type
  5006 ;;		None
  5007 ;; Auto vars:     Size  Location     Type
  5008 ;;		None
  5009 ;; Return value:  Size  Location     Type
  5010 ;;                  1    wreg      void 
  5011 ;; Registers used:
  5012 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5013 ;; Tracked objects:
  5014 ;;		On entry : 0/0
  5015 ;;		On exit  : 0/0
  5016 ;;		Unchanged: 0/0
  5017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5022 ;;Total ram usage:        0 bytes
  5023 ;; Hardware stack levels used:    1
  5024 ;; Hardware stack levels required when called:   13
  5025 ;; This function calls:
  5026 ;;		_printf
  5027 ;; This function is called by:
  5028 ;;		_main
  5029 ;; This function uses a non-reentrant model
  5030 ;;
  5031                           
  5032                           	psect	text33
  5033  002224                     __ptext33:
  5034                           	opt callstack 0
  5035  002224                     _InitialiseString:
  5036                           	opt callstack 17
  5037  002224                     
  5038                           ;main.c: 42:     printf("\rDan and Sam's Modbus GPIO Expansion - AP000xxxxx V0.1\r\n");
  5039  002224  0E07               	movlw	low STR_1
  5040  002226  0100               	movlb	0	; () banked
  5041  002228  6FC2               	movwf	printf@fmt& (0+255),b
  5042  00222A  0EFE               	movlw	high STR_1
  5043  00222C  6FC3               	movwf	(printf@fmt+1)& (0+255),b
  5044  00222E  ECD9  F014         	call	_printf	;wreg free
  5045                           
  5046                           ;main.c: 43:     printf("\rCard Ser No. xxxxxxx \r\n");
  5047  002232  0E92               	movlw	low STR_2
  5048  002234  0100               	movlb	0	; () banked
  5049  002236  6FC2               	movwf	printf@fmt& (0+255),b
  5050  002238  0EFF               	movlw	high STR_2
  5051  00223A  6FC3               	movwf	(printf@fmt+1)& (0+255),b
  5052  00223C  ECD9  F014         	call	_printf	;wreg free
  5053                           
  5054                           ;main.c: 44:     printf("\rCompiled on %s at %s by XC8 version %u\r\n\n",
  5055  002240  0EAC               	movlw	low STR_3
  5056  002242  0100               	movlb	0	; () banked
  5057  002244  6FC2               	movwf	printf@fmt& (0+255),b
  5058  002246  0EFE               	movlw	high STR_3
  5059  002248  6FC3               	movwf	(printf@fmt+1)& (0+255),b
  5060  00224A  0EEA               	movlw	low STR_4
  5061  00224C  6FC4               	movwf	(?_printf+2)& (0+255),b
  5062  00224E  0EFF               	movlw	high STR_4
  5063  002250  6FC5               	movwf	(?_printf+3)& (0+255),b
  5064  002252  0EF6               	movlw	low STR_5
  5065  002254  6FC6               	movwf	(?_printf+4)& (0+255),b
  5066  002256  0EFF               	movlw	high STR_5
  5067  002258  6FC7               	movwf	(?_printf+5)& (0+255),b
  5068  00225A  0E08               	movlw	8
  5069  00225C  6FC9               	movwf	(?_printf+7)& (0+255),b
  5070  00225E  0E34               	movlw	52
  5071  002260  6FC8               	movwf	(?_printf+6)& (0+255),b
  5072  002262  ECD9  F014         	call	_printf	;wreg free
  5073                           
  5074                           ;main.c: 46:     printf("\rFunction Codes Supported:\r\n");
  5075  002266  0E3E               	movlw	low STR_6
  5076  002268  0100               	movlb	0	; () banked
  5077  00226A  6FC2               	movwf	printf@fmt& (0+255),b
  5078  00226C  0EFF               	movlw	high STR_6
  5079  00226E  6FC3               	movwf	(printf@fmt+1)& (0+255),b
  5080  002270  ECD9  F014         	call	_printf	;wreg free
  5081                           
  5082                           ;main.c: 47:     printf("\r   0x03 - Read Multiple Registers (Max 32x 16bit)\r\n");
  5083  002274  0E77               	movlw	low STR_7
  5084  002276  0100               	movlb	0	; () banked
  5085  002278  6FC2               	movwf	printf@fmt& (0+255),b
  5086  00227A  0EFE               	movlw	high STR_7
  5087  00227C  6FC3               	movwf	(printf@fmt+1)& (0+255),b
  5088  00227E  ECD9  F014         	call	_printf	;wreg free
  5089                           
  5090                           ;main.c: 48:     printf("\r   0x10 - Write Multiple Registers (Max 32x 16bit)\r\n\n");
  5091  002282  0E40               	movlw	low STR_8
  5092  002284  0100               	movlb	0	; () banked
  5093  002286  6FC2               	movwf	printf@fmt& (0+255),b
  5094  002288  0EFE               	movlw	high STR_8
  5095  00228A  6FC3               	movwf	(printf@fmt+1)& (0+255),b
  5096  00228C  ECD9  F014         	call	_printf	;wreg free
  5097                           
  5098                           ;main.c: 49:     printf("\rInitalisation Complete - Ready\r\n\n");
  5099  002290  0EFB               	movlw	low STR_9
  5100  002292  0100               	movlb	0	; () banked
  5101  002294  6FC2               	movwf	printf@fmt& (0+255),b
  5102  002296  0EFE               	movlw	high STR_9
  5103  002298  6FC3               	movwf	(printf@fmt+1)& (0+255),b
  5104  00229A  ECD9  F014         	call	_printf	;wreg free
  5105  00229E  0012               	return		;funcret
  5106  0022A0                     __end_of_InitialiseString:
  5107                           	opt callstack 0
  5108                           
  5109 ;; *************** function _printf *****************
  5110 ;; Defined at:
  5111 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
  5112 ;; Parameters:    Size  Location     Type
  5113 ;;  fmt             2   29[BANK0 ] PTR const unsigned char 
  5114 ;;		 -> STR_19(27), STR_18(21), STR_17(36), STR_16(28), 
  5115 ;;		 -> STR_15(4), STR_14(23), STR_13(32), STR_12(4), 
  5116 ;;		 -> STR_11(23), STR_10(19), STR_9(35), STR_8(55), 
  5117 ;;		 -> STR_7(53), STR_6(29), STR_3(43), STR_2(25), 
  5118 ;;		 -> STR_1(57), 
  5119 ;; Auto vars:     Size  Location     Type
  5120 ;;  ap              2   39[BANK0 ] PTR void [1]
  5121 ;;		 -> ?_printf(2), 
  5122 ;;  ret             2    0        int 
  5123 ;; Return value:  Size  Location     Type
  5124 ;;                  2   29[BANK0 ] int 
  5125 ;; Registers used:
  5126 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5127 ;; Tracked objects:
  5128 ;;		On entry : 0/0
  5129 ;;		On exit  : 0/0
  5130 ;;		Unchanged: 0/0
  5131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5132 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5133 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5135 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5136 ;;Total ram usage:       12 bytes
  5137 ;; Hardware stack levels used:    1
  5138 ;; Hardware stack levels required when called:   12
  5139 ;; This function calls:
  5140 ;;		_vfprintf
  5141 ;; This function is called by:
  5142 ;;		_InitialiseString
  5143 ;;		_PrintModRespon
  5144 ;;		_PrintModbus
  5145 ;;		_main
  5146 ;;		_checkCRC
  5147 ;;		_ModbusRx
  5148 ;; This function uses a non-reentrant model
  5149 ;;
  5150                           
  5151                           	psect	text34
  5152  0029B2                     __ptext34:
  5153                           	opt callstack 0
  5154  0029B2                     _printf:
  5155                           	opt callstack 18
  5156  0029B2  0EC4               	movlw	low (?_printf+2)
  5157  0029B4  0100               	movlb	0	; () banked
  5158  0029B6  6FCC               	movwf	printf@ap& (0+255),b
  5159  0029B8  0E00               	movlw	high (?_printf+2)
  5160  0029BA  6FCD               	movwf	(printf@ap+1)& (0+255),b
  5161  0029BC                     
  5162                           ; BSR set to: 0
  5163  0029BC  0E00               	movlw	0
  5164  0029BE  6FBC               	movwf	vfprintf@fp& (0+255),b
  5165  0029C0  0E00               	movlw	0
  5166  0029C2  6FBD               	movwf	(vfprintf@fp+1)& (0+255),b
  5167  0029C4  C0C2  F0BE         	movff	printf@fmt,vfprintf@fmt
  5168  0029C8  C0C3  F0BF         	movff	printf@fmt+1,vfprintf@fmt+1
  5169  0029CC  0ECC               	movlw	low printf@ap
  5170  0029CE  6FC0               	movwf	vfprintf@ap& (0+255),b
  5171  0029D0  0E00               	movlw	high printf@ap
  5172  0029D2  6FC1               	movwf	(vfprintf@ap+1)& (0+255),b
  5173  0029D4  ECC6  F011         	call	_vfprintf	;wreg free
  5174  0029D8  0012               	return		;funcret
  5175  0029DA                     __end_of_printf:
  5176                           	opt callstack 0
  5177                           
  5178 ;; *************** function _vfprintf *****************
  5179 ;; Defined at:
  5180 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5181 ;; Parameters:    Size  Location     Type
  5182 ;;  fp              2   23[BANK0 ] PTR struct _IO_FILE
  5183 ;;		 -> NULL(0), 
  5184 ;;  fmt             2   25[BANK0 ] PTR const unsigned char 
  5185 ;;		 -> STR_19(27), STR_18(21), STR_17(36), STR_16(28), 
  5186 ;;		 -> STR_15(4), STR_14(23), STR_13(32), STR_12(4), 
  5187 ;;		 -> STR_11(23), STR_10(19), STR_9(35), STR_8(55), 
  5188 ;;		 -> STR_7(53), STR_6(29), STR_3(43), STR_2(25), 
  5189 ;;		 -> STR_1(57), 
  5190 ;;  ap              2   27[BANK0 ] PTR PTR void 
  5191 ;;		 -> printf@ap(2), 
  5192 ;; Auto vars:     Size  Location     Type
  5193 ;;  cfmt            2   82[COMRAM] PTR unsigned char 
  5194 ;;		 -> STR_19(27), STR_18(21), STR_17(36), STR_16(28), 
  5195 ;;		 -> STR_15(4), STR_14(23), STR_13(32), STR_12(4), 
  5196 ;;		 -> STR_11(23), STR_10(19), STR_9(35), STR_8(55), 
  5197 ;;		 -> STR_7(53), STR_6(29), STR_3(43), STR_2(25), 
  5198 ;;		 -> STR_1(57), 
  5199 ;; Return value:  Size  Location     Type
  5200 ;;                  2   23[BANK0 ] int 
  5201 ;; Registers used:
  5202 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5203 ;; Tracked objects:
  5204 ;;		On entry : 0/0
  5205 ;;		On exit  : 0/0
  5206 ;;		Unchanged: 0/0
  5207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5208 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5209 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5211 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5212 ;;Total ram usage:        8 bytes
  5213 ;; Hardware stack levels used:    1
  5214 ;; Hardware stack levels required when called:   11
  5215 ;; This function calls:
  5216 ;;		_vfpfcnvrt
  5217 ;; This function is called by:
  5218 ;;		_printf
  5219 ;; This function uses a non-reentrant model
  5220 ;;
  5221                           
  5222                           	psect	text35
  5223  00238C                     __ptext35:
  5224                           	opt callstack 0
  5225  00238C                     _vfprintf:
  5226                           	opt callstack 18
  5227  00238C                     
  5228                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  5229  00238C  C0BE  F053         	movff	vfprintf@fmt,vfprintf@cfmt
  5230  002390  C0BF  F054         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  5231  002394                     
  5232                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  5233  002394  0E00               	movlw	0
  5234  002396  0100               	movlb	0	; () banked
  5235  002398  6F89               	movwf	(_nout+1)& (0+255),b
  5236  00239A  0E00               	movlw	0
  5237  00239C  6F88               	movwf	_nout& (0+255),b
  5238                           
  5239                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5240  00239E  EFE4  F011         	goto	l5010
  5241  0023A2                     l5008:
  5242                           
  5243                           ; BSR set to: 0
  5244                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  5245  0023A2  C0BC  F049         	movff	vfprintf@fp,vfpfcnvrt@fp
  5246  0023A6  C0BD  F04A         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  5247  0023AA  0E53               	movlw	low vfprintf@cfmt
  5248  0023AC  6E4B               	movwf	vfpfcnvrt@fmt^0,c
  5249  0023AE  0E00               	movlw	high vfprintf@cfmt
  5250  0023B0  6E4C               	movwf	(vfpfcnvrt@fmt+1)^0,c
  5251  0023B2  C0C0  F04D         	movff	vfprintf@ap,vfpfcnvrt@ap
  5252  0023B6  C0C1  F04E         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  5253  0023BA  EC95  F000         	call	_vfpfcnvrt	;wreg free
  5254  0023BE  5049               	movf	?_vfpfcnvrt^0,w,c
  5255  0023C0  0100               	movlb	0	; () banked
  5256  0023C2  2788               	addwf	_nout& (0+255),f,b
  5257  0023C4  504A               	movf	(?_vfpfcnvrt+1)^0,w,c
  5258  0023C6  2389               	addwfc	(_nout+1)& (0+255),f,b
  5259  0023C8                     l5010:
  5260                           
  5261                           ; BSR set to: 0
  5262                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5263  0023C8  C053  FFF6         	movff	vfprintf@cfmt,tblptrl
  5264  0023CC  C054  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  5265  0023D0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5266  0023D0  6AF8               	clrf	tblptru,c
  5267  0023D2                     	endif
  5268  0023D2                     	if	0	;tblptru may be non-zero
  5269  0023D2                     	endif
  5270  0023D2  0008               	tblrd		*
  5271  0023D4  50F5               	movf	tablat,w,c
  5272  0023D6  0900               	iorlw	0
  5273  0023D8  A4D8               	btfss	status,2,c
  5274  0023DA  EFF1  F011         	goto	u5161
  5275  0023DE  EFF3  F011         	goto	u5160
  5276  0023E2                     u5161:
  5277  0023E2  EFD1  F011         	goto	l5008
  5278  0023E6                     u5160:
  5279  0023E6                     
  5280                           ; BSR set to: 0
  5281                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  5282  0023E6  C088  F0BC         	movff	_nout,?_vfprintf
  5283  0023EA  C089  F0BD         	movff	_nout+1,?_vfprintf+1
  5284  0023EE                     
  5285                           ; BSR set to: 0
  5286  0023EE  0012               	return		;funcret
  5287  0023F0                     __end_of_vfprintf:
  5288                           	opt callstack 0
  5289                           
  5290 ;; *************** function _vfpfcnvrt *****************
  5291 ;; Defined at:
  5292 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5293 ;; Parameters:    Size  Location     Type
  5294 ;;  fp              2   72[COMRAM] PTR struct _IO_FILE
  5295 ;;		 -> NULL(0), 
  5296 ;;  fmt             2   74[COMRAM] PTR PTR unsigned char 
  5297 ;;		 -> vfprintf@cfmt(2), 
  5298 ;;  ap              2   76[COMRAM] PTR PTR void 
  5299 ;;		 -> printf@ap(2), 
  5300 ;; Auto vars:     Size  Location     Type
  5301 ;;  llu             8   15[BANK0 ] unsigned long long 
  5302 ;;  ll              8    0[BANK0 ] long long 
  5303 ;;  f               4    0        long long 
  5304 ;;  vp              3    0        PTR void 
  5305 ;;  ct              3    0        unsigned char [3]
  5306 ;;  done            2   11[BANK0 ] int 
  5307 ;;  cp              2    8[BANK0 ] PTR unsigned char 
  5308 ;;		 -> ?_printf(2), STR_5(9), STR_4(12), 
  5309 ;;  i               2    0        int 
  5310 ;;  c               1   10[BANK0 ] unsigned char 
  5311 ;; Return value:  Size  Location     Type
  5312 ;;                  2   72[COMRAM] int 
  5313 ;; Registers used:
  5314 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5315 ;; Tracked objects:
  5316 ;;		On entry : 0/0
  5317 ;;		On exit  : 0/0
  5318 ;;		Unchanged: 0/0
  5319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5320 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5321 ;;      Locals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5322 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5323 ;;      Totals:        10      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5324 ;;Total ram usage:       33 bytes
  5325 ;; Hardware stack levels used:    1
  5326 ;; Hardware stack levels required when called:   10
  5327 ;; This function calls:
  5328 ;;		_atoi
  5329 ;;		_dtoa
  5330 ;;		_fputc
  5331 ;;		_isdigit
  5332 ;;		_stoa
  5333 ;;		_utoa
  5334 ;;		_xtoa
  5335 ;; This function is called by:
  5336 ;;		_vfprintf
  5337 ;; This function uses a non-reentrant model
  5338 ;;
  5339                           
  5340                           	psect	text36
  5341  00012A                     __ptext36:
  5342                           	opt callstack 0
  5343  00012A                     _vfpfcnvrt:
  5344                           	opt callstack 18
  5345  00012A                     
  5346                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  5347  00012A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5348  00012E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5349  000132  CFDE FFF6          	movff	postinc2,tblptrl
  5350  000136  CFDD FFF7          	movff	postdec2,tblptrh
  5351  00013A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5352  00013A  6AF8               	clrf	tblptru,c
  5353  00013C                     	endif
  5354  00013C                     	if	0	;tblptru may be non-zero
  5355  00013C                     	endif
  5356  00013C  0008               	tblrd		*
  5357  00013E  50F5               	movf	tablat,w,c
  5358  000140  0A25               	xorlw	37
  5359  000142  A4D8               	btfss	status,2,c
  5360  000144  EFA6  F000         	goto	u5011
  5361  000148  EFA8  F000         	goto	u5010
  5362  00014C                     u5011:
  5363  00014C  EF3D  F003         	goto	l4986
  5364  000150                     u5010:
  5365  000150                     
  5366                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  5367  000150  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5368  000154  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5369  000158  2ADE               	incf	postinc2,f,c
  5370  00015A  0E00               	movlw	0
  5371  00015C  22DD               	addwfc	postdec2,f,c
  5372  00015E                     
  5373                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  5374  00015E  0E00               	movlw	0
  5375  000160  0100               	movlb	0	; () banked
  5376  000162  6F8B               	movwf	(_width+1)& (0+255),b
  5377  000164  0E00               	movlw	0
  5378  000166  6F8A               	movwf	_width& (0+255),b
  5379  000168  C08A  F056         	movff	_width,_flags
  5380  00016C  C08B  F057         	movff	_width+1,_flags+1
  5381  000170                     
  5382                           ; BSR set to: 0
  5383                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  5384  000170  698C               	setf	_prec& (0+255),b
  5385  000172  698D               	setf	(_prec+1)& (0+255),b
  5386  000174                     
  5387                           ; BSR set to: 0
  5388                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  5389  000174  0E00               	movlw	0
  5390  000176  6FB1               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  5391  000178  0E00               	movlw	0
  5392  00017A  6FB0               	movwf	vfpfcnvrt@done& (0+255),b
  5393                           
  5394                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  5395  00017C  EF07  F001         	goto	l4908
  5396  000180                     l4882:
  5397                           
  5398                           ; BSR set to: 0
  5399                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  5400  000180  8056               	bsf	_flags^0,0,c
  5401  000182                     l4884:
  5402                           
  5403                           ; BSR set to: 0
  5404                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  5405  000182  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5406  000186  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5407  00018A  2ADE               	incf	postinc2,f,c
  5408  00018C  0E00               	movlw	0
  5409  00018E  22DD               	addwfc	postdec2,f,c
  5410                           
  5411                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  5412  000190  EF07  F001         	goto	l4908
  5413  000194                     l4886:
  5414                           
  5415                           ; BSR set to: 0
  5416                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  5417  000194  8256               	bsf	_flags^0,1,c
  5418  000196  EFC1  F000         	goto	l4884
  5419  00019A                     l4890:
  5420                           
  5421                           ; BSR set to: 0
  5422                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  5423  00019A  8456               	bsf	_flags^0,2,c
  5424  00019C  EFC1  F000         	goto	l4884
  5425  0001A0                     l4894:
  5426                           
  5427                           ; BSR set to: 0
  5428                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  5429  0001A0  8656               	bsf	_flags^0,3,c
  5430  0001A2  EFC1  F000         	goto	l4884
  5431  0001A6                     l4898:
  5432                           
  5433                           ; BSR set to: 0
  5434                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  5435  0001A6  8856               	bsf	_flags^0,4,c
  5436  0001A8  EFC1  F000         	goto	l4884
  5437  0001AC                     l4902:
  5438                           
  5439                           ; BSR set to: 0
  5440                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  5441  0001AC  0E00               	movlw	0
  5442  0001AE  6FB1               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  5443  0001B0  0E01               	movlw	1
  5444  0001B2  6FB0               	movwf	vfpfcnvrt@done& (0+255),b
  5445                           
  5446                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  5447  0001B4  EF07  F001         	goto	l4908
  5448  0001B8                     l4906:
  5449                           
  5450                           ; BSR set to: 0
  5451  0001B8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5452  0001BC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5453  0001C0  CFDE FFF6          	movff	postinc2,tblptrl
  5454  0001C4  CFDD FFF7          	movff	postdec2,tblptrh
  5455  0001C8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5456  0001C8  6AF8               	clrf	tblptru,c
  5457  0001CA                     	endif
  5458  0001CA                     	if	0	;tblptru may be non-zero
  5459  0001CA                     	endif
  5460  0001CA  0008               	tblrd		*
  5461  0001CC  50F5               	movf	tablat,w,c
  5462  0001CE  6E4F               	movwf	??_vfpfcnvrt^0,c
  5463  0001D0  6A50               	clrf	(??_vfpfcnvrt+1)^0,c
  5464                           
  5465                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5466                           ; Switch size 1, requested type "simple"
  5467                           ; Number of cases is 1, Range of values is 0 to 0
  5468                           ; switch strategies available:
  5469                           ; Name         Instructions Cycles
  5470                           ; simple_byte            4     3 (average)
  5471                           ;	Chosen strategy is simple_byte
  5472  0001D2  5050               	movf	(??_vfpfcnvrt+1)^0,w,c
  5473  0001D4  0A00               	xorlw	0	; case 0
  5474  0001D6  B4D8               	btfsc	status,2,c
  5475  0001D8  EFF0  F000         	goto	l5538
  5476  0001DC  EFD6  F000         	goto	l4902
  5477  0001E0                     l5538:
  5478                           
  5479                           ; BSR set to: 0
  5480                           ; Switch size 1, requested type "simple"
  5481                           ; Number of cases is 5, Range of values is 32 to 48
  5482                           ; switch strategies available:
  5483                           ; Name         Instructions Cycles
  5484                           ; simple_byte           16     9 (average)
  5485                           ;	Chosen strategy is simple_byte
  5486  0001E0  504F               	movf	??_vfpfcnvrt^0,w,c
  5487  0001E2  0A20               	xorlw	32	; case 32
  5488  0001E4  B4D8               	btfsc	status,2,c
  5489  0001E6  EFD0  F000         	goto	l4894
  5490  0001EA  0A03               	xorlw	3	; case 35
  5491  0001EC  B4D8               	btfsc	status,2,c
  5492  0001EE  EFD3  F000         	goto	l4898
  5493  0001F2  0A08               	xorlw	8	; case 43
  5494  0001F4  B4D8               	btfsc	status,2,c
  5495  0001F6  EFCD  F000         	goto	l4890
  5496  0001FA  0A06               	xorlw	6	; case 45
  5497  0001FC  B4D8               	btfsc	status,2,c
  5498  0001FE  EFC0  F000         	goto	l4882
  5499  000202  0A1D               	xorlw	29	; case 48
  5500  000204  B4D8               	btfsc	status,2,c
  5501  000206  EFCA  F000         	goto	l4886
  5502  00020A  EFD6  F000         	goto	l4902
  5503  00020E                     l4908:
  5504                           
  5505                           ; BSR set to: 0
  5506                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  5507  00020E  51B0               	movf	vfpfcnvrt@done& (0+255),w,b
  5508  000210  11B1               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  5509  000212  B4D8               	btfsc	status,2,c
  5510  000214  EF0E  F001         	goto	u5021
  5511  000218  EF10  F001         	goto	u5020
  5512  00021C                     u5021:
  5513  00021C  EFDC  F000         	goto	l4906
  5514  000220                     u5020:
  5515  000220                     
  5516                           ; BSR set to: 0
  5517                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  5518  000220  A056               	btfss	_flags^0,0,c
  5519  000222  EF15  F001         	goto	u5031
  5520  000226  EF17  F001         	goto	u5030
  5521  00022A                     u5031:
  5522  00022A  EF18  F001         	goto	l4912
  5523  00022E                     u5030:
  5524  00022E                     
  5525                           ; BSR set to: 0
  5526                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  5527  00022E  9256               	bcf	_flags^0,1,c
  5528  000230                     l4912:
  5529                           
  5530                           ; BSR set to: 0
  5531                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  5532  000230  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5533  000234  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5534  000238  CFDE FFF6          	movff	postinc2,tblptrl
  5535  00023C  CFDD FFF7          	movff	postdec2,tblptrh
  5536  000240                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5537  000240  6AF8               	clrf	tblptru,c
  5538  000242                     	endif
  5539  000242                     	if	0	;tblptru may be non-zero
  5540  000242                     	endif
  5541  000242  0008               	tblrd		*
  5542  000244  50F5               	movf	tablat,w,c
  5543  000246  0A2A               	xorlw	42
  5544  000248  A4D8               	btfss	status,2,c
  5545  00024A  EF29  F001         	goto	u5041
  5546  00024E  EF2B  F001         	goto	u5040
  5547  000252                     u5041:
  5548  000252  EF54  F001         	goto	l4920
  5549  000256                     u5040:
  5550  000256                     
  5551                           ; BSR set to: 0
  5552                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  5553  000256  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5554  00025A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5555  00025E  2ADE               	incf	postinc2,f,c
  5556  000260  0E00               	movlw	0
  5557  000262  22DD               	addwfc	postdec2,f,c
  5558                           
  5559                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  5560  000264  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5561  000268  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5562  00026C  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  5563  000270  0E02               	movlw	2
  5564  000272  26DE               	addwf	postinc2,f,c
  5565  000274  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  5566  000278  0E00               	movlw	0
  5567  00027A  22DD               	addwfc	postdec2,f,c
  5568  00027C  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5569  000280  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5570  000284  CFDE F08A          	movff	postinc2,_width
  5571  000288  CFDD F08B          	movff	postdec2,_width+1
  5572  00028C                     
  5573                           ; BSR set to: 0
  5574                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  5575  00028C  BF8B               	btfsc	(_width+1)& (0+255),7,b
  5576  00028E  EF4D  F001         	goto	u5050
  5577  000292  EF4B  F001         	goto	u5051
  5578  000296                     u5051:
  5579  000296  EF99  F001         	goto	l4930
  5580  00029A                     u5050:
  5581  00029A                     
  5582                           ; BSR set to: 0
  5583                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  5584  00029A  8056               	bsf	_flags^0,0,c
  5585                           
  5586                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  5587  00029C  6D8A               	negf	_width& (0+255),b
  5588  00029E  1F8B               	comf	(_width+1)& (0+255),f,b
  5589  0002A0  B0D8               	btfsc	status,0,c
  5590  0002A2  2B8B               	incf	(_width+1)& (0+255),f,b
  5591  0002A4  EF99  F001         	goto	l4930
  5592  0002A8                     l4920:
  5593                           
  5594                           ; BSR set to: 0
  5595                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  5596  0002A8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5597  0002AC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5598  0002B0  CFDE F00C          	movff	postinc2,atoi@s
  5599  0002B4  CFDD F00D          	movff	postdec2,atoi@s+1
  5600  0002B8  EC34  F009         	call	_atoi	;wreg free
  5601  0002BC  C00C  F08A         	movff	?_atoi,_width
  5602  0002C0  C00D  F08B         	movff	?_atoi+1,_width+1
  5603                           
  5604                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  5605  0002C4  EF6B  F001         	goto	l4924
  5606  0002C8                     l4922:
  5607                           
  5608                           ; BSR set to: 0
  5609                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  5610  0002C8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5611  0002CC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5612  0002D0  2ADE               	incf	postinc2,f,c
  5613  0002D2  0E00               	movlw	0
  5614  0002D4  22DD               	addwfc	postdec2,f,c
  5615  0002D6                     l4924:
  5616  0002D6  0ED0               	movlw	208
  5617  0002D8  6E4F               	movwf	??_vfpfcnvrt^0,c
  5618  0002DA  0EFF               	movlw	255
  5619  0002DC  6E50               	movwf	(??_vfpfcnvrt+1)^0,c
  5620  0002DE  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5621  0002E2  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5622  0002E6  CFDE FFF6          	movff	postinc2,tblptrl
  5623  0002EA  CFDD FFF7          	movff	postdec2,tblptrh
  5624  0002EE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5625  0002EE  6AF8               	clrf	tblptru,c
  5626  0002F0                     	endif
  5627  0002F0                     	if	0	;tblptru may be non-zero
  5628  0002F0                     	endif
  5629  0002F0  0008               	tblrd		*
  5630  0002F2  50F5               	movf	tablat,w,c
  5631  0002F4  6E51               	movwf	(??_vfpfcnvrt+2)^0,c
  5632  0002F6  6A52               	clrf	(??_vfpfcnvrt+3)^0,c
  5633  0002F8  504F               	movf	??_vfpfcnvrt^0,w,c
  5634  0002FA  2651               	addwf	(??_vfpfcnvrt+2)^0,f,c
  5635  0002FC  5050               	movf	(??_vfpfcnvrt+1)^0,w,c
  5636  0002FE  2252               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  5637  000300  5052               	movf	(??_vfpfcnvrt+3)^0,w,c
  5638  000302  E10A               	bnz	u5060
  5639  000304  0E0A               	movlw	10
  5640  000306  5C51               	subwf	(??_vfpfcnvrt+2)^0,w,c
  5641  000308  A0D8               	btfss	status,0,c
  5642  00030A  EF89  F001         	goto	u5061
  5643  00030E  EF8C  F001         	goto	u5060
  5644  000312                     u5061:
  5645  000312  0E01               	movlw	1
  5646  000314  EF8D  F001         	goto	u5070
  5647  000318                     u5060:
  5648  000318  0E00               	movlw	0
  5649  00031A                     u5070:
  5650  00031A  0100               	movlb	0	; () banked
  5651  00031C  6FB2               	movwf	_vfpfcnvrt$1351& (0+255),b
  5652  00031E  6BB3               	clrf	(_vfpfcnvrt$1351+1)& (0+255),b
  5653  000320                     
  5654                           ; BSR set to: 0
  5655  000320  51B2               	movf	_vfpfcnvrt$1351& (0+255),w,b
  5656  000322  11B3               	iorwf	(_vfpfcnvrt$1351+1)& (0+255),w,b
  5657  000324  A4D8               	btfss	status,2,c
  5658  000326  EF97  F001         	goto	u5081
  5659  00032A  EF99  F001         	goto	u5080
  5660  00032E                     u5081:
  5661  00032E  EF64  F001         	goto	l4922
  5662  000332                     u5080:
  5663  000332                     l4930:
  5664                           
  5665                           ; BSR set to: 0
  5666                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  5667  000332  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5668  000336  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5669  00033A  CFDE FFF6          	movff	postinc2,tblptrl
  5670  00033E  CFDD FFF7          	movff	postdec2,tblptrh
  5671  000342                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5672  000342  6AF8               	clrf	tblptru,c
  5673  000344                     	endif
  5674  000344                     	if	0	;tblptru may be non-zero
  5675  000344                     	endif
  5676  000344  0008               	tblrd		*
  5677  000346  50F5               	movf	tablat,w,c
  5678  000348  0A64               	xorlw	100
  5679  00034A  B4D8               	btfsc	status,2,c
  5680  00034C  EFAA  F001         	goto	u5091
  5681  000350  EFAC  F001         	goto	u5090
  5682  000354                     u5091:
  5683  000354  EFBF  F001         	goto	l4934
  5684  000358                     u5090:
  5685  000358                     
  5686                           ; BSR set to: 0
  5687  000358  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5688  00035C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5689  000360  CFDE FFF6          	movff	postinc2,tblptrl
  5690  000364  CFDD FFF7          	movff	postdec2,tblptrh
  5691  000368                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5692  000368  6AF8               	clrf	tblptru,c
  5693  00036A                     	endif
  5694  00036A                     	if	0	;tblptru may be non-zero
  5695  00036A                     	endif
  5696  00036A  0008               	tblrd		*
  5697  00036C  50F5               	movf	tablat,w,c
  5698  00036E  0A69               	xorlw	105
  5699  000370  A4D8               	btfss	status,2,c
  5700  000372  EFBD  F001         	goto	u5101
  5701  000376  EFBF  F001         	goto	u5100
  5702  00037A                     u5101:
  5703  00037A  EFFF  F001         	goto	l4940
  5704  00037E                     u5100:
  5705  00037E                     l4934:
  5706                           
  5707                           ; BSR set to: 0
  5708                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  5709  00037E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5710  000382  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5711  000386  2ADE               	incf	postinc2,f,c
  5712  000388  0E00               	movlw	0
  5713  00038A  22DD               	addwfc	postdec2,f,c
  5714                           
  5715                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  5716  00038C  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5717  000390  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5718  000394  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  5719  000398  0E02               	movlw	2
  5720  00039A  26DE               	addwf	postinc2,f,c
  5721  00039C  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  5722  0003A0  0E00               	movlw	0
  5723  0003A2  22DD               	addwfc	postdec2,f,c
  5724  0003A4  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5725  0003A8  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5726  0003AC  CFDE F0A5          	movff	postinc2,vfpfcnvrt@ll
  5727  0003B0  CFDD F0A6          	movff	postdec2,vfpfcnvrt@ll+1
  5728  0003B4  0E00               	movlw	0
  5729  0003B6  BFA6               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  5730  0003B8  0EFF               	movlw	-1
  5731  0003BA  6FA7               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  5732  0003BC  6FA8               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  5733  0003BE  6FA9               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  5734  0003C0  6FAA               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  5735  0003C2  6FAB               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  5736  0003C4  6FAC               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  5737  0003C6                     
  5738                           ; BSR set to: 0
  5739                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  5740  0003C6  C049  F022         	movff	vfpfcnvrt@fp,dtoa@fp
  5741  0003CA  C04A  F023         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  5742  0003CE  C0A5  F024         	movff	vfpfcnvrt@ll,dtoa@d
  5743  0003D2  C0A6  F025         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  5744  0003D6  C0A7  F026         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  5745  0003DA  C0A8  F027         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  5746  0003DE  C0A9  F028         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  5747  0003E2  C0AA  F029         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  5748  0003E6  C0AB  F02A         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  5749  0003EA  C0AC  F02B         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  5750  0003EE  EC5A  F003         	call	_dtoa	;wreg free
  5751  0003F2  C022  F049         	movff	?_dtoa,?_vfpfcnvrt
  5752  0003F6  C023  F04A         	movff	?_dtoa+1,?_vfpfcnvrt+1
  5753  0003FA  EF59  F003         	goto	l880
  5754  0003FE                     l4940:
  5755                           
  5756                           ; BSR set to: 0
  5757                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  5758  0003FE  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5759  000402  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5760  000406  CFDE FFF6          	movff	postinc2,tblptrl
  5761  00040A  CFDD FFF7          	movff	postdec2,tblptrh
  5762  00040E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5763  00040E  6AF8               	clrf	tblptru,c
  5764  000410                     	endif
  5765  000410                     	if	0	;tblptru may be non-zero
  5766  000410                     	endif
  5767  000410  0008               	tblrd		*
  5768  000412  50F5               	movf	tablat,w,c
  5769  000414  0A73               	xorlw	115
  5770  000416  A4D8               	btfss	status,2,c
  5771  000418  EF10  F002         	goto	u5111
  5772  00041C  EF12  F002         	goto	u5110
  5773  000420                     u5111:
  5774  000420  EF3D  F002         	goto	l4948
  5775  000424                     u5110:
  5776  000424                     
  5777                           ; BSR set to: 0
  5778                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  5779  000424  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5780  000428  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5781  00042C  2ADE               	incf	postinc2,f,c
  5782  00042E  0E00               	movlw	0
  5783  000430  22DD               	addwfc	postdec2,f,c
  5784                           
  5785                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  5786  000432  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5787  000436  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5788  00043A  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  5789  00043E  0E02               	movlw	2
  5790  000440  26DE               	addwf	postinc2,f,c
  5791  000442  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  5792  000446  0E00               	movlw	0
  5793  000448  22DD               	addwfc	postdec2,f,c
  5794  00044A  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5795  00044E  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5796  000452  CFDE F0AD          	movff	postinc2,vfpfcnvrt@cp
  5797  000456  CFDD F0AE          	movff	postdec2,vfpfcnvrt@cp+1
  5798  00045A                     
  5799                           ; BSR set to: 0
  5800                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  5801  00045A  C049  F010         	movff	vfpfcnvrt@fp,stoa@fp
  5802  00045E  C04A  F011         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  5803  000462  C0AD  F012         	movff	vfpfcnvrt@cp,stoa@s
  5804  000466  C0AE  F013         	movff	vfpfcnvrt@cp+1,stoa@s+1
  5805  00046A  EC67  F008         	call	_stoa	;wreg free
  5806  00046E  C010  F049         	movff	?_stoa,?_vfpfcnvrt
  5807  000472  C011  F04A         	movff	?_stoa+1,?_vfpfcnvrt+1
  5808  000476  EF59  F003         	goto	l880
  5809  00047A                     l4948:
  5810                           
  5811                           ; BSR set to: 0
  5812                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  5813  00047A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5814  00047E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5815  000482  CFDE FFF6          	movff	postinc2,tblptrl
  5816  000486  CFDD FFF7          	movff	postdec2,tblptrh
  5817  00048A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5818  00048A  6AF8               	clrf	tblptru,c
  5819  00048C                     	endif
  5820  00048C                     	if	0	;tblptru may be non-zero
  5821  00048C                     	endif
  5822  00048C  0008               	tblrd		*
  5823  00048E  50F5               	movf	tablat,w,c
  5824  000490  0A75               	xorlw	117
  5825  000492  A4D8               	btfss	status,2,c
  5826  000494  EF4E  F002         	goto	u5121
  5827  000498  EF50  F002         	goto	u5120
  5828  00049C                     u5121:
  5829  00049C  EF91  F002         	goto	l4956
  5830  0004A0                     u5120:
  5831  0004A0                     
  5832                           ; BSR set to: 0
  5833                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  5834  0004A0  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5835  0004A4  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5836  0004A8  2ADE               	incf	postinc2,f,c
  5837  0004AA  0E00               	movlw	0
  5838  0004AC  22DD               	addwfc	postdec2,f,c
  5839                           
  5840                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  5841  0004AE  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5842  0004B2  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5843  0004B6  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  5844  0004BA  0E02               	movlw	2
  5845  0004BC  26DE               	addwf	postinc2,f,c
  5846  0004BE  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  5847  0004C2  0E00               	movlw	0
  5848  0004C4  22DD               	addwfc	postdec2,f,c
  5849  0004C6  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5850  0004CA  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5851  0004CE  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
  5852  0004D2  CFDD F052          	movff	postdec2,??_vfpfcnvrt+3
  5853  0004D6  C051  F0B4         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5854  0004DA  C052  F0B5         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5855  0004DE  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5856  0004E0  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5857  0004E2  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5858  0004E4  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5859  0004E6  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5860  0004E8  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5861  0004EA                     
  5862                           ; BSR set to: 0
  5863                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
  5864  0004EA  C049  F022         	movff	vfpfcnvrt@fp,utoa@fp
  5865  0004EE  C04A  F023         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  5866  0004F2  C0B4  F024         	movff	vfpfcnvrt@llu,utoa@d
  5867  0004F6  C0B5  F025         	movff	vfpfcnvrt@llu+1,utoa@d+1
  5868  0004FA  C0B6  F026         	movff	vfpfcnvrt@llu+2,utoa@d+2
  5869  0004FE  C0B7  F027         	movff	vfpfcnvrt@llu+3,utoa@d+3
  5870  000502  C0B8  F028         	movff	vfpfcnvrt@llu+4,utoa@d+4
  5871  000506  C0B9  F029         	movff	vfpfcnvrt@llu+5,utoa@d+5
  5872  00050A  C0BA  F02A         	movff	vfpfcnvrt@llu+6,utoa@d+6
  5873  00050E  C0BB  F02B         	movff	vfpfcnvrt@llu+7,utoa@d+7
  5874  000512  EC66  F007         	call	_utoa	;wreg free
  5875  000516  C022  F049         	movff	?_utoa,?_vfpfcnvrt
  5876  00051A  C023  F04A         	movff	?_utoa+1,?_vfpfcnvrt+1
  5877  00051E  EF59  F003         	goto	l880
  5878  000522                     l4956:
  5879                           
  5880                           ; BSR set to: 0
  5881                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  5882  000522  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5883  000526  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5884  00052A  CFDE FFF6          	movff	postinc2,tblptrl
  5885  00052E  CFDD FFF7          	movff	postdec2,tblptrh
  5886  000532                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5887  000532  6AF8               	clrf	tblptru,c
  5888  000534                     	endif
  5889  000534                     	if	0	;tblptru may be non-zero
  5890  000534                     	endif
  5891  000534  0008               	tblrd		*
  5892  000536  50F5               	movf	tablat,w,c
  5893  000538  0A78               	xorlw	120
  5894  00053A  B4D8               	btfsc	status,2,c
  5895  00053C  EFA2  F002         	goto	u5131
  5896  000540  EFA4  F002         	goto	u5130
  5897  000544                     u5131:
  5898  000544  EFB7  F002         	goto	l4960
  5899  000548                     u5130:
  5900  000548                     
  5901                           ; BSR set to: 0
  5902  000548  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5903  00054C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5904  000550  CFDE FFF6          	movff	postinc2,tblptrl
  5905  000554  CFDD FFF7          	movff	postdec2,tblptrh
  5906  000558                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5907  000558  6AF8               	clrf	tblptru,c
  5908  00055A                     	endif
  5909  00055A                     	if	0	;tblptru may be non-zero
  5910  00055A                     	endif
  5911  00055A  0008               	tblrd		*
  5912  00055C  50F5               	movf	tablat,w,c
  5913  00055E  0A58               	xorlw	88
  5914  000560  A4D8               	btfss	status,2,c
  5915  000562  EFB5  F002         	goto	u5141
  5916  000566  EFB7  F002         	goto	u5140
  5917  00056A                     u5141:
  5918  00056A  EF06  F003         	goto	l4970
  5919  00056E                     u5140:
  5920  00056E                     l4960:
  5921                           
  5922                           ; BSR set to: 0
  5923                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  5924  00056E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5925  000572  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5926  000576  CFDE FFF6          	movff	postinc2,tblptrl
  5927  00057A  CFDD FFF7          	movff	postdec2,tblptrh
  5928  00057E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5929  00057E  6AF8               	clrf	tblptru,c
  5930  000580                     	endif
  5931  000580                     	if	0	;tblptru may be non-zero
  5932  000580                     	endif
  5933  000580  0008               	tblrd		*
  5934  000582  CFF5 F0AF          	movff	tablat,vfpfcnvrt@c
  5935  000586                     
  5936                           ; BSR set to: 0
  5937                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  5938  000586  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5939  00058A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5940  00058E  2ADE               	incf	postinc2,f,c
  5941  000590  0E00               	movlw	0
  5942  000592  22DD               	addwfc	postdec2,f,c
  5943  000594                     
  5944                           ; BSR set to: 0
  5945                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  5946  000594  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5947  000598  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5948  00059C  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  5949  0005A0  0E02               	movlw	2
  5950  0005A2  26DE               	addwf	postinc2,f,c
  5951  0005A4  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  5952  0005A8  0E00               	movlw	0
  5953  0005AA  22DD               	addwfc	postdec2,f,c
  5954  0005AC  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5955  0005B0  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5956  0005B4  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
  5957  0005B8  CFDD F052          	movff	postdec2,??_vfpfcnvrt+3
  5958  0005BC  C051  F0B4         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5959  0005C0  C052  F0B5         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5960  0005C4  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5961  0005C6  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5962  0005C8  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5963  0005CA  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5964  0005CC  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5965  0005CE  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5966  0005D0                     
  5967                           ; BSR set to: 0
  5968                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
  5969  0005D0  C049  F022         	movff	vfpfcnvrt@fp,xtoa@fp
  5970  0005D4  C04A  F023         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  5971  0005D8  C0B4  F024         	movff	vfpfcnvrt@llu,xtoa@d
  5972  0005DC  C0B5  F025         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  5973  0005E0  C0B6  F026         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  5974  0005E4  C0B7  F027         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  5975  0005E8  C0B8  F028         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  5976  0005EC  C0B9  F029         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  5977  0005F0  C0BA  F02A         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  5978  0005F4  C0BB  F02B         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  5979  0005F8  C0AF  F02C         	movff	vfpfcnvrt@c,xtoa@x
  5980  0005FC  ECCA  F004         	call	_xtoa	;wreg free
  5981  000600  C022  F049         	movff	?_xtoa,?_vfpfcnvrt
  5982  000604  C023  F04A         	movff	?_xtoa+1,?_vfpfcnvrt+1
  5983  000608  EF59  F003         	goto	l880
  5984  00060C                     l4970:
  5985                           
  5986                           ; BSR set to: 0
  5987                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  5988  00060C  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5989  000610  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5990  000614  CFDE FFF6          	movff	postinc2,tblptrl
  5991  000618  CFDD FFF7          	movff	postdec2,tblptrh
  5992  00061C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5993  00061C  6AF8               	clrf	tblptru,c
  5994  00061E                     	endif
  5995  00061E                     	if	0	;tblptru may be non-zero
  5996  00061E                     	endif
  5997  00061E  0008               	tblrd		*
  5998  000620  50F5               	movf	tablat,w,c
  5999  000622  0A25               	xorlw	37
  6000  000624  A4D8               	btfss	status,2,c
  6001  000626  EF17  F003         	goto	u5151
  6002  00062A  EF19  F003         	goto	u5150
  6003  00062E                     u5151:
  6004  00062E  EF30  F003         	goto	l4980
  6005  000632                     u5150:
  6006  000632                     
  6007                           ; BSR set to: 0
  6008                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  6009  000632  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6010  000636  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6011  00063A  2ADE               	incf	postinc2,f,c
  6012  00063C  0E00               	movlw	0
  6013  00063E  22DD               	addwfc	postdec2,f,c
  6014  000640                     
  6015                           ; BSR set to: 0
  6016                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  6017  000640  0E00               	movlw	0
  6018  000642  6E08               	movwf	(fputc@c+1)^0,c
  6019  000644  0E25               	movlw	37
  6020  000646  6E07               	movwf	fputc@c^0,c
  6021  000648  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
  6022  00064C  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6023  000650  ECC5  F00F         	call	_fputc	;wreg free
  6024  000654                     l4976:
  6025                           
  6026                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  6027  000654  0E00               	movlw	0
  6028  000656  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
  6029  000658  0E01               	movlw	1
  6030  00065A  6E49               	movwf	?_vfpfcnvrt^0,c
  6031  00065C  EF59  F003         	goto	l880
  6032  000660                     l4980:
  6033                           
  6034                           ; BSR set to: 0
  6035                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  6036  000660  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6037  000664  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6038  000668  2ADE               	incf	postinc2,f,c
  6039  00066A  0E00               	movlw	0
  6040  00066C  22DD               	addwfc	postdec2,f,c
  6041  00066E                     
  6042                           ; BSR set to: 0
  6043                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  6044  00066E  0E00               	movlw	0
  6045  000670  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
  6046  000672  0E00               	movlw	0
  6047  000674  6E49               	movwf	?_vfpfcnvrt^0,c
  6048  000676  EF59  F003         	goto	l880
  6049  00067A                     l4986:
  6050                           
  6051                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  6052  00067A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6053  00067E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6054  000682  CFDE FFF6          	movff	postinc2,tblptrl
  6055  000686  CFDD FFF7          	movff	postdec2,tblptrh
  6056  00068A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6057  00068A  6AF8               	clrf	tblptru,c
  6058  00068C                     	endif
  6059  00068C                     	if	0	;tblptru may be non-zero
  6060  00068C                     	endif
  6061  00068C  0008               	tblrd		*
  6062  00068E  50F5               	movf	tablat,w,c
  6063  000690  6E07               	movwf	fputc@c^0,c
  6064  000692  6A08               	clrf	(fputc@c+1)^0,c
  6065  000694  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
  6066  000698  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6067  00069C  ECC5  F00F         	call	_fputc	;wreg free
  6068  0006A0                     
  6069                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  6070  0006A0  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6071  0006A4  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6072  0006A8  2ADE               	incf	postinc2,f,c
  6073  0006AA  0E00               	movlw	0
  6074  0006AC  22DD               	addwfc	postdec2,f,c
  6075  0006AE  EF2A  F003         	goto	l4976
  6076  0006B2                     l880:
  6077  0006B2  0012               	return		;funcret
  6078  0006B4                     __end_of_vfpfcnvrt:
  6079                           	opt callstack 0
  6080                           
  6081 ;; *************** function _xtoa *****************
  6082 ;; Defined at:
  6083 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6084 ;; Parameters:    Size  Location     Type
  6085 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  6086 ;;		 -> NULL(0), 
  6087 ;;  d               8   35[COMRAM] unsigned long long 
  6088 ;;  x               1   43[COMRAM] unsigned char 
  6089 ;; Auto vars:     Size  Location     Type
  6090 ;;  n               8   60[COMRAM] unsigned long long 
  6091 ;;  c               2   70[COMRAM] int 
  6092 ;;  i               2   68[COMRAM] int 
  6093 ;;  w               2   58[COMRAM] int 
  6094 ;;  p               2   56[COMRAM] int 
  6095 ;; Return value:  Size  Location     Type
  6096 ;;                  2   33[COMRAM] int 
  6097 ;; Registers used:
  6098 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6099 ;; Tracked objects:
  6100 ;;		On entry : 0/0
  6101 ;;		On exit  : 0/0
  6102 ;;		Unchanged: 0/0
  6103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6104 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6105 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6106 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6107 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6108 ;;Total ram usage:       39 bytes
  6109 ;; Hardware stack levels used:    1
  6110 ;; Hardware stack levels required when called:    9
  6111 ;; This function calls:
  6112 ;;		_isalpha
  6113 ;;		_isupper
  6114 ;;		_pad
  6115 ;;		_toupper
  6116 ;; This function is called by:
  6117 ;;		_vfpfcnvrt
  6118 ;; This function uses a non-reentrant model
  6119 ;;
  6120                           
  6121                           	psect	text37
  6122  000994                     __ptext37:
  6123                           	opt callstack 0
  6124  000994                     _xtoa:
  6125                           	opt callstack 18
  6126  000994                     
  6127                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  6128  000994  0100               	movlb	0	; () banked
  6129  000996  BF8D               	btfsc	(_prec+1)& (0+255),7,b
  6130  000998  EFD0  F004         	goto	u4771
  6131  00099C  EFD2  F004         	goto	u4770
  6132  0009A0                     u4771:
  6133  0009A0  EFD3  F004         	goto	l4768
  6134  0009A4                     u4770:
  6135  0009A4                     
  6136                           ; BSR set to: 0
  6137                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  6138  0009A4  9256               	bcf	_flags^0,1,c
  6139  0009A6                     l4768:
  6140                           
  6141                           ; BSR set to: 0
  6142                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  6143  0009A6  BF8D               	btfsc	(_prec+1)& (0+255),7,b
  6144  0009A8  EFE0  F004         	goto	u4780
  6145  0009AC  518D               	movf	(_prec+1)& (0+255),w,b
  6146  0009AE  E106               	bnz	u4781
  6147  0009B0  058C               	decf	_prec& (0+255),w,b
  6148  0009B2  B0D8               	btfsc	status,0,c
  6149  0009B4  EFDE  F004         	goto	u4781
  6150  0009B8  EFE0  F004         	goto	u4780
  6151  0009BC                     u4781:
  6152  0009BC  EFE6  F004         	goto	l826
  6153  0009C0                     u4780:
  6154  0009C0                     
  6155                           ; BSR set to: 0
  6156  0009C0  0E00               	movlw	0
  6157  0009C2  6E3A               	movwf	(xtoa@p+1)^0,c
  6158  0009C4  0E01               	movlw	1
  6159  0009C6  6E39               	movwf	xtoa@p^0,c
  6160  0009C8  EFEA  F004         	goto	l828
  6161  0009CC                     l826:
  6162                           
  6163                           ; BSR set to: 0
  6164  0009CC  C08C  F039         	movff	_prec,xtoa@p
  6165  0009D0  C08D  F03A         	movff	_prec+1,xtoa@p+1
  6166  0009D4                     l828:
  6167                           
  6168                           ; BSR set to: 0
  6169                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  6170  0009D4  C08A  F03B         	movff	_width,xtoa@w
  6171  0009D8  C08B  F03C         	movff	_width+1,xtoa@w+1
  6172                           
  6173                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  6174  0009DC  A856               	btfss	_flags^0,4,c
  6175  0009DE  EFF3  F004         	goto	u4791
  6176  0009E2  EFF5  F004         	goto	u4790
  6177  0009E6                     u4791:
  6178  0009E6  EFF9  F004         	goto	l4774
  6179  0009EA                     u4790:
  6180  0009EA                     
  6181                           ; BSR set to: 0
  6182                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  6183  0009EA  0EFE               	movlw	254
  6184  0009EC  263B               	addwf	xtoa@w^0,f,c
  6185  0009EE  0EFF               	movlw	255
  6186  0009F0  223C               	addwfc	(xtoa@w+1)^0,f,c
  6187  0009F2                     l4774:
  6188                           
  6189                           ; BSR set to: 0
  6190                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  6191  0009F2  C024  F03D         	movff	xtoa@d,xtoa@n
  6192  0009F6  C025  F03E         	movff	xtoa@d+1,xtoa@n+1
  6193  0009FA  C026  F03F         	movff	xtoa@d+2,xtoa@n+2
  6194  0009FE  C027  F040         	movff	xtoa@d+3,xtoa@n+3
  6195  000A02  C028  F041         	movff	xtoa@d+4,xtoa@n+4
  6196  000A06  C029  F042         	movff	xtoa@d+5,xtoa@n+5
  6197  000A0A  C02A  F043         	movff	xtoa@d+6,xtoa@n+6
  6198  000A0E  C02B  F044         	movff	xtoa@d+7,xtoa@n+7
  6199  000A12                     
  6200                           ; BSR set to: 0
  6201                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  6202  000A12  0E00               	movlw	0
  6203  000A14  6E46               	movwf	(xtoa@i+1)^0,c
  6204  000A16  0E1F               	movlw	31
  6205  000A18  6E45               	movwf	xtoa@i^0,c
  6206  000A1A                     
  6207                           ; BSR set to: 0
  6208                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  6209  000A1A  0E00               	movlw	0
  6210  000A1C  0101               	movlb	1	; () banked
  6211  000A1E  6FA3               	movwf	(_dbuf+31)& (0+255),b
  6212                           
  6213                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6214  000A20  EFC5  F005         	goto	l4810
  6215  000A24                     l4780:
  6216                           
  6217                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  6218  000A24  0645               	decf	xtoa@i^0,f,c
  6219  000A26  A0D8               	btfss	status,0,c
  6220  000A28  0646               	decf	(xtoa@i+1)^0,f,c
  6221  000A2A                     
  6222                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  6223  000A2A  0E0F               	movlw	15
  6224  000A2C  143D               	andwf	xtoa@n^0,w,c
  6225  000A2E  6E47               	movwf	xtoa@c^0,c
  6226  000A30  6A48               	clrf	(xtoa@c+1)^0,c
  6227  000A32                     
  6228                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  6229  000A32  BE48               	btfsc	(xtoa@c+1)^0,7,c
  6230  000A34  EF25  F005         	goto	u4801
  6231  000A38  5048               	movf	(xtoa@c+1)^0,w,c
  6232  000A3A  E109               	bnz	u4800
  6233  000A3C  0E0A               	movlw	10
  6234  000A3E  5C47               	subwf	xtoa@c^0,w,c
  6235  000A40  A0D8               	btfss	status,0,c
  6236  000A42  EF25  F005         	goto	u4801
  6237  000A46  EF27  F005         	goto	u4800
  6238  000A4A                     u4801:
  6239  000A4A  EF2F  F005         	goto	l4788
  6240  000A4E                     u4800:
  6241  000A4E  0E57               	movlw	87
  6242  000A50  2447               	addwf	xtoa@c^0,w,c
  6243  000A52  6E47               	movwf	xtoa@c^0,c
  6244  000A54  0E00               	movlw	0
  6245  000A56  2048               	addwfc	(xtoa@c+1)^0,w,c
  6246  000A58  6E48               	movwf	(xtoa@c+1)^0,c
  6247  000A5A  EF35  F005         	goto	l835
  6248  000A5E                     l4788:
  6249  000A5E  0E30               	movlw	48
  6250  000A60  2447               	addwf	xtoa@c^0,w,c
  6251  000A62  6E47               	movwf	xtoa@c^0,c
  6252  000A64  0E00               	movlw	0
  6253  000A66  2048               	addwfc	(xtoa@c+1)^0,w,c
  6254  000A68  6E48               	movwf	(xtoa@c+1)^0,c
  6255  000A6A                     l835:
  6256  000A6A  0EBF               	movlw	191
  6257  000A6C  6E2D               	movwf	??_xtoa^0,c
  6258  000A6E  0EFF               	movlw	255
  6259  000A70  6E2E               	movwf	(??_xtoa+1)^0,c
  6260  000A72  502C               	movf	xtoa@x^0,w,c
  6261  000A74  6E2F               	movwf	(??_xtoa+2)^0,c
  6262  000A76  6A30               	clrf	(??_xtoa+3)^0,c
  6263  000A78  502D               	movf	??_xtoa^0,w,c
  6264  000A7A  262F               	addwf	(??_xtoa+2)^0,f,c
  6265  000A7C  502E               	movf	(??_xtoa+1)^0,w,c
  6266  000A7E  2230               	addwfc	(??_xtoa+3)^0,f,c
  6267  000A80  5030               	movf	(??_xtoa+3)^0,w,c
  6268  000A82  E10A               	bnz	u4810
  6269  000A84  0E1A               	movlw	26
  6270  000A86  5C2F               	subwf	(??_xtoa+2)^0,w,c
  6271  000A88  A0D8               	btfss	status,0,c
  6272  000A8A  EF49  F005         	goto	u4811
  6273  000A8E  EF4C  F005         	goto	u4810
  6274  000A92                     u4811:
  6275  000A92  0E01               	movlw	1
  6276  000A94  EF4D  F005         	goto	u4820
  6277  000A98                     u4810:
  6278  000A98  0E00               	movlw	0
  6279  000A9A                     u4820:
  6280  000A9A  6E35               	movwf	_xtoa$1336^0,c
  6281  000A9C  6A36               	clrf	(_xtoa$1336+1)^0,c
  6282  000A9E  5035               	movf	_xtoa$1336^0,w,c
  6283  000AA0  1036               	iorwf	(_xtoa$1336+1)^0,w,c
  6284  000AA2  B4D8               	btfsc	status,2,c
  6285  000AA4  EF56  F005         	goto	u4831
  6286  000AA8  EF58  F005         	goto	u4830
  6287  000AAC                     u4831:
  6288  000AAC  EF88  F005         	goto	l4802
  6289  000AB0                     u4830:
  6290  000AB0  0E9F               	movlw	159
  6291  000AB2  6E2D               	movwf	??_xtoa^0,c
  6292  000AB4  0EFF               	movlw	255
  6293  000AB6  6E2E               	movwf	(??_xtoa+1)^0,c
  6294  000AB8  0E20               	movlw	32
  6295  000ABA  1047               	iorwf	xtoa@c^0,w,c
  6296  000ABC  6E2F               	movwf	(??_xtoa+2)^0,c
  6297  000ABE  0E00               	movlw	0
  6298  000AC0  1048               	iorwf	(xtoa@c+1)^0,w,c
  6299  000AC2  6E30               	movwf	(??_xtoa+3)^0,c
  6300  000AC4  502D               	movf	??_xtoa^0,w,c
  6301  000AC6  262F               	addwf	(??_xtoa+2)^0,f,c
  6302  000AC8  502E               	movf	(??_xtoa+1)^0,w,c
  6303  000ACA  2230               	addwfc	(??_xtoa+3)^0,f,c
  6304  000ACC  5030               	movf	(??_xtoa+3)^0,w,c
  6305  000ACE  E10A               	bnz	u4840
  6306  000AD0  0E1A               	movlw	26
  6307  000AD2  5C2F               	subwf	(??_xtoa+2)^0,w,c
  6308  000AD4  A0D8               	btfss	status,0,c
  6309  000AD6  EF6F  F005         	goto	u4841
  6310  000ADA  EF72  F005         	goto	u4840
  6311  000ADE                     u4841:
  6312  000ADE  0E01               	movlw	1
  6313  000AE0  EF73  F005         	goto	u4850
  6314  000AE4                     u4840:
  6315  000AE4  0E00               	movlw	0
  6316  000AE6                     u4850:
  6317  000AE6  6E37               	movwf	_xtoa$1337^0,c
  6318  000AE8  6A38               	clrf	(_xtoa$1337+1)^0,c
  6319  000AEA  5037               	movf	_xtoa$1337^0,w,c
  6320  000AEC  1038               	iorwf	(_xtoa$1337+1)^0,w,c
  6321  000AEE  B4D8               	btfsc	status,2,c
  6322  000AF0  EF7C  F005         	goto	u4861
  6323  000AF4  EF7E  F005         	goto	u4860
  6324  000AF8                     u4861:
  6325  000AF8  EF88  F005         	goto	l4802
  6326  000AFC                     u4860:
  6327  000AFC                     
  6328                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  6329  000AFC  C047  F00B         	movff	xtoa@c,toupper@c
  6330  000B00  C048  F00C         	movff	xtoa@c+1,toupper@c+1
  6331  000B04  EC27  F012         	call	_toupper	;wreg free
  6332  000B08  C00B  F047         	movff	?_toupper,xtoa@c
  6333  000B0C  C00C  F048         	movff	?_toupper+1,xtoa@c+1
  6334  000B10                     l4802:
  6335                           
  6336                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  6337  000B10  0E84               	movlw	low _dbuf
  6338  000B12  2445               	addwf	xtoa@i^0,w,c
  6339  000B14  6ED9               	movwf	fsr2l,c
  6340  000B16  0E01               	movlw	high _dbuf
  6341  000B18  2046               	addwfc	(xtoa@i+1)^0,w,c
  6342  000B1A  6EDA               	movwf	fsr2h,c
  6343  000B1C  C047  FFDF         	movff	xtoa@c,indf2
  6344  000B20                     
  6345                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  6346  000B20  0639               	decf	xtoa@p^0,f,c
  6347  000B22  A0D8               	btfss	status,0,c
  6348  000B24  063A               	decf	(xtoa@p+1)^0,f,c
  6349  000B26                     
  6350                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  6351  000B26  063B               	decf	xtoa@w^0,f,c
  6352  000B28  A0D8               	btfss	status,0,c
  6353  000B2A  063C               	decf	(xtoa@w+1)^0,f,c
  6354  000B2C                     
  6355                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  6356  000B2C  C03D  F02D         	movff	xtoa@n,??_xtoa
  6357  000B30  C03E  F02E         	movff	xtoa@n+1,??_xtoa+1
  6358  000B34  C03F  F02F         	movff	xtoa@n+2,??_xtoa+2
  6359  000B38  C040  F030         	movff	xtoa@n+3,??_xtoa+3
  6360  000B3C  C041  F031         	movff	xtoa@n+4,??_xtoa+4
  6361  000B40  C042  F032         	movff	xtoa@n+5,??_xtoa+5
  6362  000B44  C043  F033         	movff	xtoa@n+6,??_xtoa+6
  6363  000B48  C044  F034         	movff	xtoa@n+7,??_xtoa+7
  6364  000B4C  0E05               	movlw	5
  6365  000B4E  EFB2  F005         	goto	u4870
  6366  000B52                     u4875:
  6367  000B52  90D8               	bcf	status,0,c
  6368  000B54  3234               	rrcf	(??_xtoa+7)^0,f,c
  6369  000B56  3233               	rrcf	(??_xtoa+6)^0,f,c
  6370  000B58  3232               	rrcf	(??_xtoa+5)^0,f,c
  6371  000B5A  3231               	rrcf	(??_xtoa+4)^0,f,c
  6372  000B5C  3230               	rrcf	(??_xtoa+3)^0,f,c
  6373  000B5E  322F               	rrcf	(??_xtoa+2)^0,f,c
  6374  000B60  322E               	rrcf	(??_xtoa+1)^0,f,c
  6375  000B62  322D               	rrcf	??_xtoa^0,f,c
  6376  000B64                     u4870:
  6377  000B64  2EE8               	decfsz	wreg,f,c
  6378  000B66  EFA9  F005         	goto	u4875
  6379  000B6A  C02D  F03D         	movff	??_xtoa,xtoa@n
  6380  000B6E  C02E  F03E         	movff	??_xtoa+1,xtoa@n+1
  6381  000B72  C02F  F03F         	movff	??_xtoa+2,xtoa@n+2
  6382  000B76  C030  F040         	movff	??_xtoa+3,xtoa@n+3
  6383  000B7A  C031  F041         	movff	??_xtoa+4,xtoa@n+4
  6384  000B7E  C032  F042         	movff	??_xtoa+5,xtoa@n+5
  6385  000B82  C033  F043         	movff	??_xtoa+6,xtoa@n+6
  6386  000B86  C034  F044         	movff	??_xtoa+7,xtoa@n+7
  6387  000B8A                     l4810:
  6388                           
  6389                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6390  000B8A  BE46               	btfsc	(xtoa@i+1)^0,7,c
  6391  000B8C  EFD1  F005         	goto	u4881
  6392  000B90  5046               	movf	(xtoa@i+1)^0,w,c
  6393  000B92  E109               	bnz	u4880
  6394  000B94  0E02               	movlw	2
  6395  000B96  5C45               	subwf	xtoa@i^0,w,c
  6396  000B98  A0D8               	btfss	status,0,c
  6397  000B9A  EFD1  F005         	goto	u4881
  6398  000B9E  EFD3  F005         	goto	u4880
  6399  000BA2                     u4881:
  6400  000BA2  EF03  F006         	goto	l849
  6401  000BA6                     u4880:
  6402  000BA6  503D               	movf	xtoa@n^0,w,c
  6403  000BA8  103E               	iorwf	(xtoa@n+1)^0,w,c
  6404  000BAA  103F               	iorwf	(xtoa@n+2)^0,w,c
  6405  000BAC  1040               	iorwf	(xtoa@n+3)^0,w,c
  6406  000BAE  1041               	iorwf	(xtoa@n+4)^0,w,c
  6407  000BB0  1042               	iorwf	(xtoa@n+5)^0,w,c
  6408  000BB2  1043               	iorwf	(xtoa@n+6)^0,w,c
  6409  000BB4  1044               	iorwf	(xtoa@n+7)^0,w,c
  6410  000BB6  A4D8               	btfss	status,2,c
  6411  000BB8  EFE0  F005         	goto	u4891
  6412  000BBC  EFE2  F005         	goto	u4890
  6413  000BC0                     u4891:
  6414  000BC0  EF12  F005         	goto	l4780
  6415  000BC4                     u4890:
  6416  000BC4  BE3A               	btfsc	(xtoa@p+1)^0,7,c
  6417  000BC6  EFEF  F005         	goto	u4900
  6418  000BCA  503A               	movf	(xtoa@p+1)^0,w,c
  6419  000BCC  E106               	bnz	u4901
  6420  000BCE  0439               	decf	xtoa@p^0,w,c
  6421  000BD0  B0D8               	btfsc	status,0,c
  6422  000BD2  EFED  F005         	goto	u4901
  6423  000BD6  EFEF  F005         	goto	u4900
  6424  000BDA                     u4901:
  6425  000BDA  EF12  F005         	goto	l4780
  6426  000BDE                     u4900:
  6427  000BDE  BE3C               	btfsc	(xtoa@w+1)^0,7,c
  6428  000BE0  EFFA  F005         	goto	u4911
  6429  000BE4  503C               	movf	(xtoa@w+1)^0,w,c
  6430  000BE6  E108               	bnz	u4910
  6431  000BE8  043B               	decf	xtoa@w^0,w,c
  6432  000BEA  A0D8               	btfss	status,0,c
  6433  000BEC  EFFA  F005         	goto	u4911
  6434  000BF0  EFFC  F005         	goto	u4910
  6435  000BF4                     u4911:
  6436  000BF4  EF03  F006         	goto	l849
  6437  000BF8                     u4910:
  6438  000BF8  B256               	btfsc	_flags^0,1,c
  6439  000BFA  EF01  F006         	goto	u4921
  6440  000BFE  EF03  F006         	goto	u4920
  6441  000C02                     u4921:
  6442  000C02  EF12  F005         	goto	l4780
  6443  000C06                     u4920:
  6444  000C06                     l849:
  6445                           
  6446                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  6447  000C06  A856               	btfss	_flags^0,4,c
  6448  000C08  EF08  F006         	goto	u4931
  6449  000C0C  EF0A  F006         	goto	u4930
  6450  000C10                     u4931:
  6451  000C10  EF20  F006         	goto	l4826
  6452  000C14                     u4930:
  6453  000C14                     
  6454                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  6455  000C14  0645               	decf	xtoa@i^0,f,c
  6456  000C16  A0D8               	btfss	status,0,c
  6457  000C18  0646               	decf	(xtoa@i+1)^0,f,c
  6458  000C1A                     
  6459                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  6460  000C1A  0E84               	movlw	low _dbuf
  6461  000C1C  2445               	addwf	xtoa@i^0,w,c
  6462  000C1E  6ED9               	movwf	fsr2l,c
  6463  000C20  0E01               	movlw	high _dbuf
  6464  000C22  2046               	addwfc	(xtoa@i+1)^0,w,c
  6465  000C24  6EDA               	movwf	fsr2h,c
  6466  000C26  C02C  FFDF         	movff	xtoa@x,indf2
  6467  000C2A                     
  6468                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  6469  000C2A  0645               	decf	xtoa@i^0,f,c
  6470  000C2C  A0D8               	btfss	status,0,c
  6471  000C2E  0646               	decf	(xtoa@i+1)^0,f,c
  6472                           
  6473                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  6474  000C30  0E84               	movlw	low _dbuf
  6475  000C32  2445               	addwf	xtoa@i^0,w,c
  6476  000C34  6ED9               	movwf	fsr2l,c
  6477  000C36  0E01               	movlw	high _dbuf
  6478  000C38  2046               	addwfc	(xtoa@i+1)^0,w,c
  6479  000C3A  6EDA               	movwf	fsr2h,c
  6480  000C3C  0E30               	movlw	48
  6481  000C3E  6EDF               	movwf	indf2,c
  6482  000C40                     l4826:
  6483                           
  6484                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  6485  000C40  C022  F017         	movff	xtoa@fp,pad@fp
  6486  000C44  C023  F018         	movff	xtoa@fp+1,pad@fp+1
  6487  000C48  0E84               	movlw	low _dbuf
  6488  000C4A  2445               	addwf	xtoa@i^0,w,c
  6489  000C4C  6E19               	movwf	pad@buf^0,c
  6490  000C4E  0E01               	movlw	high _dbuf
  6491  000C50  2046               	addwfc	(xtoa@i+1)^0,w,c
  6492  000C52  6E1A               	movwf	(pad@buf+1)^0,c
  6493  000C54  C03B  F01B         	movff	xtoa@w,pad@p
  6494  000C58  C03C  F01C         	movff	xtoa@w+1,pad@p+1
  6495  000C5C  EC03  F00E         	call	_pad	;wreg free
  6496  000C60  C017  F022         	movff	?_pad,?_xtoa
  6497  000C64  C018  F023         	movff	?_pad+1,?_xtoa+1
  6498  000C68  0012               	return		;funcret
  6499  000C6A                     __end_of_xtoa:
  6500                           	opt callstack 0
  6501                           
  6502 ;; *************** function _toupper *****************
  6503 ;; Defined at:
  6504 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
  6505 ;; Parameters:    Size  Location     Type
  6506 ;;  c               2   10[COMRAM] int 
  6507 ;; Auto vars:     Size  Location     Type
  6508 ;;		None
  6509 ;; Return value:  Size  Location     Type
  6510 ;;                  2   10[COMRAM] int 
  6511 ;; Registers used:
  6512 ;;		wreg, status,2, status,0
  6513 ;; Tracked objects:
  6514 ;;		On entry : 0/0
  6515 ;;		On exit  : 0/0
  6516 ;;		Unchanged: 0/0
  6517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6518 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6519 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6520 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6521 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6522 ;;Total ram usage:        8 bytes
  6523 ;; Hardware stack levels used:    1
  6524 ;; Hardware stack levels required when called:    5
  6525 ;; This function calls:
  6526 ;;		_islower
  6527 ;; This function is called by:
  6528 ;;		_xtoa
  6529 ;; This function uses a non-reentrant model
  6530 ;;
  6531                           
  6532                           	psect	text38
  6533  00244E                     __ptext38:
  6534                           	opt callstack 0
  6535  00244E                     _toupper:
  6536                           	opt callstack 21
  6537  00244E  0E9F               	movlw	159
  6538  002450  6E0D               	movwf	??_toupper^0,c
  6539  002452  0EFF               	movlw	255
  6540  002454  6E0E               	movwf	(??_toupper+1)^0,c
  6541  002456  C00B  F00F         	movff	toupper@c,??_toupper+2
  6542  00245A  C00C  F010         	movff	toupper@c+1,??_toupper+3
  6543  00245E  500D               	movf	??_toupper^0,w,c
  6544  002460  260F               	addwf	(??_toupper+2)^0,f,c
  6545  002462  500E               	movf	(??_toupper+1)^0,w,c
  6546  002464  2210               	addwfc	(??_toupper+3)^0,f,c
  6547  002466  5010               	movf	(??_toupper+3)^0,w,c
  6548  002468  E10A               	bnz	u4180
  6549  00246A  0E1A               	movlw	26
  6550  00246C  5C0F               	subwf	(??_toupper+2)^0,w,c
  6551  00246E  A0D8               	btfss	status,0,c
  6552  002470  EF3C  F012         	goto	u4181
  6553  002474  EF3F  F012         	goto	u4180
  6554  002478                     u4181:
  6555  002478  0E01               	movlw	1
  6556  00247A  EF40  F012         	goto	u4190
  6557  00247E                     u4180:
  6558  00247E  0E00               	movlw	0
  6559  002480                     u4190:
  6560  002480  6E11               	movwf	_toupper$1902^0,c
  6561  002482  6A12               	clrf	(_toupper$1902+1)^0,c
  6562  002484  5011               	movf	_toupper$1902^0,w,c
  6563  002486  1012               	iorwf	(_toupper$1902+1)^0,w,c
  6564  002488  B4D8               	btfsc	status,2,c
  6565  00248A  EF49  F012         	goto	u4201
  6566  00248E  EF4B  F012         	goto	u4200
  6567  002492                     u4201:
  6568  002492  EF51  F012         	goto	l1668
  6569  002496                     u4200:
  6570  002496  0E5F               	movlw	95
  6571  002498  140B               	andwf	toupper@c^0,w,c
  6572  00249A  6E0B               	movwf	?_toupper^0,c
  6573  00249C  6A0C               	clrf	(?_toupper+1)^0,c
  6574  00249E  EF55  F012         	goto	l1673
  6575  0024A2                     l1668:
  6576  0024A2  C00B  F00B         	movff	toupper@c,?_toupper
  6577  0024A6  C00C  F00C         	movff	toupper@c+1,?_toupper+1
  6578  0024AA                     l1673:
  6579  0024AA  0012               	return		;funcret
  6580  0024AC                     __end_of_toupper:
  6581                           	opt callstack 0
  6582                           
  6583 ;; *************** function _islower *****************
  6584 ;; Defined at:
  6585 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
  6586 ;; Parameters:    Size  Location     Type
  6587 ;;  c               2    4[COMRAM] int 
  6588 ;; Auto vars:     Size  Location     Type
  6589 ;;		None
  6590 ;; Return value:  Size  Location     Type
  6591 ;;                  2    4[COMRAM] int 
  6592 ;; Registers used:
  6593 ;;		wreg, status,2, status,0
  6594 ;; Tracked objects:
  6595 ;;		On entry : 0/0
  6596 ;;		On exit  : 0/0
  6597 ;;		Unchanged: 0/0
  6598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6599 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6601 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6602 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6603 ;;Total ram usage:        6 bytes
  6604 ;; Hardware stack levels used:    1
  6605 ;; Hardware stack levels required when called:    4
  6606 ;; This function calls:
  6607 ;;		Nothing
  6608 ;; This function is called by:
  6609 ;;		_toupper
  6610 ;; This function uses a non-reentrant model
  6611 ;;
  6612                           
  6613                           	psect	text39
  6614  0028B2                     __ptext39:
  6615                           	opt callstack 0
  6616  0028B2                     _islower:
  6617                           	opt callstack 21
  6618  0028B2  0E9F               	movlw	159
  6619  0028B4  6E07               	movwf	??_islower^0,c
  6620  0028B6  0EFF               	movlw	255
  6621  0028B8  6E08               	movwf	(??_islower+1)^0,c
  6622  0028BA  C005  F009         	movff	islower@c,??_islower+2
  6623  0028BE  C006  F00A         	movff	islower@c+1,??_islower+3
  6624  0028C2  5007               	movf	??_islower^0,w,c
  6625  0028C4  2609               	addwf	(??_islower+2)^0,f,c
  6626  0028C6  5008               	movf	(??_islower+1)^0,w,c
  6627  0028C8  220A               	addwfc	(??_islower+3)^0,f,c
  6628  0028CA  500A               	movf	(??_islower+3)^0,w,c
  6629  0028CC  E10A               	bnz	u4070
  6630  0028CE  0E1A               	movlw	26
  6631  0028D0  5C09               	subwf	(??_islower+2)^0,w,c
  6632  0028D2  A0D8               	btfss	status,0,c
  6633  0028D4  EF6E  F014         	goto	u4071
  6634  0028D8  EF71  F014         	goto	u4070
  6635  0028DC                     u4071:
  6636  0028DC  0E01               	movlw	1
  6637  0028DE  EF72  F014         	goto	u4080
  6638  0028E2                     u4070:
  6639  0028E2  0E00               	movlw	0
  6640  0028E4                     u4080:
  6641  0028E4  6E05               	movwf	?_islower^0,c
  6642  0028E6  6A06               	clrf	(?_islower+1)^0,c
  6643  0028E8  0012               	return		;funcret
  6644  0028EA                     __end_of_islower:
  6645                           	opt callstack 0
  6646                           
  6647 ;; *************** function _isupper *****************
  6648 ;; Defined at:
  6649 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  6650 ;; Parameters:    Size  Location     Type
  6651 ;;  c               2    4[COMRAM] int 
  6652 ;; Auto vars:     Size  Location     Type
  6653 ;;		None
  6654 ;; Return value:  Size  Location     Type
  6655 ;;                  2    4[COMRAM] int 
  6656 ;; Registers used:
  6657 ;;		wreg, status,2, status,0
  6658 ;; Tracked objects:
  6659 ;;		On entry : 0/0
  6660 ;;		On exit  : 0/0
  6661 ;;		Unchanged: 0/0
  6662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6663 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6665 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6666 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6667 ;;Total ram usage:        6 bytes
  6668 ;; Hardware stack levels used:    1
  6669 ;; Hardware stack levels required when called:    4
  6670 ;; This function calls:
  6671 ;;		Nothing
  6672 ;; This function is called by:
  6673 ;;		_xtoa
  6674 ;; This function uses a non-reentrant model
  6675 ;;
  6676                           
  6677                           	psect	text40
  6678  0028EA                     __ptext40:
  6679                           	opt callstack 0
  6680  0028EA                     _isupper:
  6681                           	opt callstack 22
  6682  0028EA  0EBF               	movlw	191
  6683  0028EC  6E07               	movwf	??_isupper^0,c
  6684  0028EE  0EFF               	movlw	255
  6685  0028F0  6E08               	movwf	(??_isupper+1)^0,c
  6686  0028F2  C005  F009         	movff	isupper@c,??_isupper+2
  6687  0028F6  C006  F00A         	movff	isupper@c+1,??_isupper+3
  6688  0028FA  5007               	movf	??_isupper^0,w,c
  6689  0028FC  2609               	addwf	(??_isupper+2)^0,f,c
  6690  0028FE  5008               	movf	(??_isupper+1)^0,w,c
  6691  002900  220A               	addwfc	(??_isupper+3)^0,f,c
  6692  002902  500A               	movf	(??_isupper+3)^0,w,c
  6693  002904  E10A               	bnz	u4140
  6694  002906  0E1A               	movlw	26
  6695  002908  5C09               	subwf	(??_isupper+2)^0,w,c
  6696  00290A  A0D8               	btfss	status,0,c
  6697  00290C  EF8A  F014         	goto	u4141
  6698  002910  EF8D  F014         	goto	u4140
  6699  002914                     u4141:
  6700  002914  0E01               	movlw	1
  6701  002916  EF8E  F014         	goto	u4150
  6702  00291A                     u4140:
  6703  00291A  0E00               	movlw	0
  6704  00291C                     u4150:
  6705  00291C  6E05               	movwf	?_isupper^0,c
  6706  00291E  6A06               	clrf	(?_isupper+1)^0,c
  6707  002920  0012               	return		;funcret
  6708  002922                     __end_of_isupper:
  6709                           	opt callstack 0
  6710                           
  6711 ;; *************** function _isalpha *****************
  6712 ;; Defined at:
  6713 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
  6714 ;; Parameters:    Size  Location     Type
  6715 ;;  c               2    4[COMRAM] int 
  6716 ;; Auto vars:     Size  Location     Type
  6717 ;;		None
  6718 ;; Return value:  Size  Location     Type
  6719 ;;                  2    4[COMRAM] int 
  6720 ;; Registers used:
  6721 ;;		wreg, status,2, status,0
  6722 ;; Tracked objects:
  6723 ;;		On entry : 0/0
  6724 ;;		On exit  : 0/0
  6725 ;;		Unchanged: 0/0
  6726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6727 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6729 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6730 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6731 ;;Total ram usage:        6 bytes
  6732 ;; Hardware stack levels used:    1
  6733 ;; Hardware stack levels required when called:    4
  6734 ;; This function calls:
  6735 ;;		Nothing
  6736 ;; This function is called by:
  6737 ;;		_xtoa
  6738 ;; This function uses a non-reentrant model
  6739 ;;
  6740                           
  6741                           	psect	text41
  6742  002876                     __ptext41:
  6743                           	opt callstack 0
  6744  002876                     _isalpha:
  6745                           	opt callstack 22
  6746  002876  0E9F               	movlw	159
  6747  002878  6E07               	movwf	??_isalpha^0,c
  6748  00287A  0EFF               	movlw	255
  6749  00287C  6E08               	movwf	(??_isalpha+1)^0,c
  6750  00287E  0E20               	movlw	32
  6751  002880  1005               	iorwf	isalpha@c^0,w,c
  6752  002882  6E09               	movwf	(??_isalpha+2)^0,c
  6753  002884  0E00               	movlw	0
  6754  002886  1006               	iorwf	(isalpha@c+1)^0,w,c
  6755  002888  6E0A               	movwf	(??_isalpha+3)^0,c
  6756  00288A  5007               	movf	??_isalpha^0,w,c
  6757  00288C  2609               	addwf	(??_isalpha+2)^0,f,c
  6758  00288E  5008               	movf	(??_isalpha+1)^0,w,c
  6759  002890  220A               	addwfc	(??_isalpha+3)^0,f,c
  6760  002892  500A               	movf	(??_isalpha+3)^0,w,c
  6761  002894  E10A               	bnz	u4160
  6762  002896  0E1A               	movlw	26
  6763  002898  5C09               	subwf	(??_isalpha+2)^0,w,c
  6764  00289A  A0D8               	btfss	status,0,c
  6765  00289C  EF52  F014         	goto	u4161
  6766  0028A0  EF55  F014         	goto	u4160
  6767  0028A4                     u4161:
  6768  0028A4  0E01               	movlw	1
  6769  0028A6  EF56  F014         	goto	u4170
  6770  0028AA                     u4160:
  6771  0028AA  0E00               	movlw	0
  6772  0028AC                     u4170:
  6773  0028AC  6E05               	movwf	?_isalpha^0,c
  6774  0028AE  6A06               	clrf	(?_isalpha+1)^0,c
  6775  0028B0  0012               	return		;funcret
  6776  0028B2                     __end_of_isalpha:
  6777                           	opt callstack 0
  6778                           
  6779 ;; *************** function _utoa *****************
  6780 ;; Defined at:
  6781 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6782 ;; Parameters:    Size  Location     Type
  6783 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  6784 ;;		 -> NULL(0), 
  6785 ;;  d               8   35[COMRAM] unsigned long long 
  6786 ;; Auto vars:     Size  Location     Type
  6787 ;;  n               8   55[COMRAM] unsigned long long 
  6788 ;;  i               2   63[COMRAM] int 
  6789 ;;  w               2   53[COMRAM] int 
  6790 ;;  p               2   51[COMRAM] int 
  6791 ;; Return value:  Size  Location     Type
  6792 ;;                  2   33[COMRAM] int 
  6793 ;; Registers used:
  6794 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6795 ;; Tracked objects:
  6796 ;;		On entry : 0/0
  6797 ;;		On exit  : 0/0
  6798 ;;		Unchanged: 0/0
  6799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6800 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6801 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6802 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6803 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6804 ;;Total ram usage:       32 bytes
  6805 ;; Hardware stack levels used:    1
  6806 ;; Hardware stack levels required when called:    9
  6807 ;; This function calls:
  6808 ;;		___lodiv
  6809 ;;		___lomod
  6810 ;;		_pad
  6811 ;; This function is called by:
  6812 ;;		_vfpfcnvrt
  6813 ;; This function uses a non-reentrant model
  6814 ;;
  6815                           
  6816                           	psect	text42
  6817  000ECC                     __ptext42:
  6818                           	opt callstack 0
  6819  000ECC                     _utoa:
  6820                           	opt callstack 18
  6821  000ECC                     
  6822                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  6823  000ECC  0100               	movlb	0	; () banked
  6824  000ECE  BF8D               	btfsc	(_prec+1)& (0+255),7,b
  6825  000ED0  EF6C  F007         	goto	u4701
  6826  000ED4  EF6E  F007         	goto	u4700
  6827  000ED8                     u4701:
  6828  000ED8  EF6F  F007         	goto	l4732
  6829  000EDC                     u4700:
  6830  000EDC                     
  6831                           ; BSR set to: 0
  6832                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  6833  000EDC  9256               	bcf	_flags^0,1,c
  6834  000EDE                     l4732:
  6835                           
  6836                           ; BSR set to: 0
  6837                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  6838  000EDE  BF8D               	btfsc	(_prec+1)& (0+255),7,b
  6839  000EE0  EF7C  F007         	goto	u4710
  6840  000EE4  518D               	movf	(_prec+1)& (0+255),w,b
  6841  000EE6  E106               	bnz	u4711
  6842  000EE8  058C               	decf	_prec& (0+255),w,b
  6843  000EEA  B0D8               	btfsc	status,0,c
  6844  000EEC  EF7A  F007         	goto	u4711
  6845  000EF0  EF7C  F007         	goto	u4710
  6846  000EF4                     u4711:
  6847  000EF4  EF82  F007         	goto	l811
  6848  000EF8                     u4710:
  6849  000EF8                     
  6850                           ; BSR set to: 0
  6851  000EF8  0E00               	movlw	0
  6852  000EFA  6E35               	movwf	(utoa@p+1)^0,c
  6853  000EFC  0E01               	movlw	1
  6854  000EFE  6E34               	movwf	utoa@p^0,c
  6855  000F00  EF86  F007         	goto	l813
  6856  000F04                     l811:
  6857                           
  6858                           ; BSR set to: 0
  6859  000F04  C08C  F034         	movff	_prec,utoa@p
  6860  000F08  C08D  F035         	movff	_prec+1,utoa@p+1
  6861  000F0C                     l813:
  6862                           
  6863                           ; BSR set to: 0
  6864                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  6865  000F0C  C08A  F036         	movff	_width,utoa@w
  6866  000F10  C08B  F037         	movff	_width+1,utoa@w+1
  6867                           
  6868                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  6869  000F14  C024  F038         	movff	utoa@d,utoa@n
  6870  000F18  C025  F039         	movff	utoa@d+1,utoa@n+1
  6871  000F1C  C026  F03A         	movff	utoa@d+2,utoa@n+2
  6872  000F20  C027  F03B         	movff	utoa@d+3,utoa@n+3
  6873  000F24  C028  F03C         	movff	utoa@d+4,utoa@n+4
  6874  000F28  C029  F03D         	movff	utoa@d+5,utoa@n+5
  6875  000F2C  C02A  F03E         	movff	utoa@d+6,utoa@n+6
  6876  000F30  C02B  F03F         	movff	utoa@d+7,utoa@n+7
  6877  000F34                     
  6878                           ; BSR set to: 0
  6879                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  6880  000F34  0E00               	movlw	0
  6881  000F36  6E41               	movwf	(utoa@i+1)^0,c
  6882  000F38  0E1F               	movlw	31
  6883  000F3A  6E40               	movwf	utoa@i^0,c
  6884  000F3C                     
  6885                           ; BSR set to: 0
  6886                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  6887  000F3C  0E00               	movlw	0
  6888  000F3E  0101               	movlb	1	; () banked
  6889  000F40  6FA3               	movwf	(_dbuf+31)& (0+255),b
  6890                           
  6891                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6892  000F42  EF19  F008         	goto	l4750
  6893  000F46                     l4740:
  6894                           
  6895                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  6896  000F46  0640               	decf	utoa@i^0,f,c
  6897  000F48  A0D8               	btfss	status,0,c
  6898  000F4A  0641               	decf	(utoa@i+1)^0,f,c
  6899  000F4C                     
  6900                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  6901  000F4C  0E84               	movlw	low _dbuf
  6902  000F4E  2440               	addwf	utoa@i^0,w,c
  6903  000F50  6ED9               	movwf	fsr2l,c
  6904  000F52  0E01               	movlw	high _dbuf
  6905  000F54  2041               	addwfc	(utoa@i+1)^0,w,c
  6906  000F56  6EDA               	movwf	fsr2h,c
  6907  000F58  C038  F005         	movff	utoa@n,___lomod@dividend
  6908  000F5C  C039  F006         	movff	utoa@n+1,___lomod@dividend+1
  6909  000F60  C03A  F007         	movff	utoa@n+2,___lomod@dividend+2
  6910  000F64  C03B  F008         	movff	utoa@n+3,___lomod@dividend+3
  6911  000F68  C03C  F009         	movff	utoa@n+4,___lomod@dividend+4
  6912  000F6C  C03D  F00A         	movff	utoa@n+5,___lomod@dividend+5
  6913  000F70  C03E  F00B         	movff	utoa@n+6,___lomod@dividend+6
  6914  000F74  C03F  F00C         	movff	utoa@n+7,___lomod@dividend+7
  6915  000F78  0E0A               	movlw	10
  6916  000F7A  6E0D               	movwf	___lomod@divisor^0,c
  6917  000F7C  0E00               	movlw	0
  6918  000F7E  6E0E               	movwf	(___lomod@divisor+1)^0,c
  6919  000F80  0E00               	movlw	0
  6920  000F82  6E0F               	movwf	(___lomod@divisor+2)^0,c
  6921  000F84  0E00               	movlw	0
  6922  000F86  6E10               	movwf	(___lomod@divisor+3)^0,c
  6923  000F88  0E00               	movlw	0
  6924  000F8A  6E11               	movwf	(___lomod@divisor+4)^0,c
  6925  000F8C  0E00               	movlw	0
  6926  000F8E  6E12               	movwf	(___lomod@divisor+5)^0,c
  6927  000F90  0E00               	movlw	0
  6928  000F92  6E13               	movwf	(___lomod@divisor+6)^0,c
  6929  000F94  0E00               	movlw	0
  6930  000F96  6E14               	movwf	(___lomod@divisor+7)^0,c
  6931  000F98  EC9B  F00D         	call	___lomod	;wreg free
  6932  000F9C  C005  F02C         	movff	?___lomod,??_utoa
  6933  000FA0  C006  F02D         	movff	?___lomod+1,??_utoa+1
  6934  000FA4  C007  F02E         	movff	?___lomod+2,??_utoa+2
  6935  000FA8  C008  F02F         	movff	?___lomod+3,??_utoa+3
  6936  000FAC  C009  F030         	movff	?___lomod+4,??_utoa+4
  6937  000FB0  C00A  F031         	movff	?___lomod+5,??_utoa+5
  6938  000FB4  C00B  F032         	movff	?___lomod+6,??_utoa+6
  6939  000FB8  C00C  F033         	movff	?___lomod+7,??_utoa+7
  6940  000FBC  502C               	movf	??_utoa^0,w,c
  6941  000FBE  0F30               	addlw	48
  6942  000FC0  6EDF               	movwf	indf2,c
  6943  000FC2                     
  6944                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  6945  000FC2  0634               	decf	utoa@p^0,f,c
  6946  000FC4  A0D8               	btfss	status,0,c
  6947  000FC6  0635               	decf	(utoa@p+1)^0,f,c
  6948  000FC8                     
  6949                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  6950  000FC8  0636               	decf	utoa@w^0,f,c
  6951  000FCA  A0D8               	btfss	status,0,c
  6952  000FCC  0637               	decf	(utoa@w+1)^0,f,c
  6953  000FCE                     
  6954                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  6955  000FCE  C038  F005         	movff	utoa@n,___lodiv@dividend
  6956  000FD2  C039  F006         	movff	utoa@n+1,___lodiv@dividend+1
  6957  000FD6  C03A  F007         	movff	utoa@n+2,___lodiv@dividend+2
  6958  000FDA  C03B  F008         	movff	utoa@n+3,___lodiv@dividend+3
  6959  000FDE  C03C  F009         	movff	utoa@n+4,___lodiv@dividend+4
  6960  000FE2  C03D  F00A         	movff	utoa@n+5,___lodiv@dividend+5
  6961  000FE6  C03E  F00B         	movff	utoa@n+6,___lodiv@dividend+6
  6962  000FEA  C03F  F00C         	movff	utoa@n+7,___lodiv@dividend+7
  6963  000FEE  0E0A               	movlw	10
  6964  000FF0  6E0D               	movwf	___lodiv@divisor^0,c
  6965  000FF2  0E00               	movlw	0
  6966  000FF4  6E0E               	movwf	(___lodiv@divisor+1)^0,c
  6967  000FF6  0E00               	movlw	0
  6968  000FF8  6E0F               	movwf	(___lodiv@divisor+2)^0,c
  6969  000FFA  0E00               	movlw	0
  6970  000FFC  6E10               	movwf	(___lodiv@divisor+3)^0,c
  6971  000FFE  0E00               	movlw	0
  6972  001000  6E11               	movwf	(___lodiv@divisor+4)^0,c
  6973  001002  0E00               	movlw	0
  6974  001004  6E12               	movwf	(___lodiv@divisor+5)^0,c
  6975  001006  0E00               	movlw	0
  6976  001008  6E13               	movwf	(___lodiv@divisor+6)^0,c
  6977  00100A  0E00               	movlw	0
  6978  00100C  6E14               	movwf	(___lodiv@divisor+7)^0,c
  6979  00100E  ECB2  F00C         	call	___lodiv	;wreg free
  6980  001012  C005  F038         	movff	?___lodiv,utoa@n
  6981  001016  C006  F039         	movff	?___lodiv+1,utoa@n+1
  6982  00101A  C007  F03A         	movff	?___lodiv+2,utoa@n+2
  6983  00101E  C008  F03B         	movff	?___lodiv+3,utoa@n+3
  6984  001022  C009  F03C         	movff	?___lodiv+4,utoa@n+4
  6985  001026  C00A  F03D         	movff	?___lodiv+5,utoa@n+5
  6986  00102A  C00B  F03E         	movff	?___lodiv+6,utoa@n+6
  6987  00102E  C00C  F03F         	movff	?___lodiv+7,utoa@n+7
  6988  001032                     l4750:
  6989                           
  6990                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6991  001032  5040               	movf	utoa@i^0,w,c
  6992  001034  1041               	iorwf	(utoa@i+1)^0,w,c
  6993  001036  B4D8               	btfsc	status,2,c
  6994  001038  EF20  F008         	goto	u4721
  6995  00103C  EF22  F008         	goto	u4720
  6996  001040                     u4721:
  6997  001040  EF52  F008         	goto	l4760
  6998  001044                     u4720:
  6999  001044  5038               	movf	utoa@n^0,w,c
  7000  001046  1039               	iorwf	(utoa@n+1)^0,w,c
  7001  001048  103A               	iorwf	(utoa@n+2)^0,w,c
  7002  00104A  103B               	iorwf	(utoa@n+3)^0,w,c
  7003  00104C  103C               	iorwf	(utoa@n+4)^0,w,c
  7004  00104E  103D               	iorwf	(utoa@n+5)^0,w,c
  7005  001050  103E               	iorwf	(utoa@n+6)^0,w,c
  7006  001052  103F               	iorwf	(utoa@n+7)^0,w,c
  7007  001054  A4D8               	btfss	status,2,c
  7008  001056  EF2F  F008         	goto	u4731
  7009  00105A  EF31  F008         	goto	u4730
  7010  00105E                     u4731:
  7011  00105E  EFA3  F007         	goto	l4740
  7012  001062                     u4730:
  7013  001062  BE35               	btfsc	(utoa@p+1)^0,7,c
  7014  001064  EF3E  F008         	goto	u4740
  7015  001068  5035               	movf	(utoa@p+1)^0,w,c
  7016  00106A  E106               	bnz	u4741
  7017  00106C  0434               	decf	utoa@p^0,w,c
  7018  00106E  B0D8               	btfsc	status,0,c
  7019  001070  EF3C  F008         	goto	u4741
  7020  001074  EF3E  F008         	goto	u4740
  7021  001078                     u4741:
  7022  001078  EFA3  F007         	goto	l4740
  7023  00107C                     u4740:
  7024  00107C  BE37               	btfsc	(utoa@w+1)^0,7,c
  7025  00107E  EF49  F008         	goto	u4751
  7026  001082  5037               	movf	(utoa@w+1)^0,w,c
  7027  001084  E108               	bnz	u4750
  7028  001086  0436               	decf	utoa@w^0,w,c
  7029  001088  A0D8               	btfss	status,0,c
  7030  00108A  EF49  F008         	goto	u4751
  7031  00108E  EF4B  F008         	goto	u4750
  7032  001092                     u4751:
  7033  001092  EF52  F008         	goto	l4760
  7034  001096                     u4750:
  7035  001096  B256               	btfsc	_flags^0,1,c
  7036  001098  EF50  F008         	goto	u4761
  7037  00109C  EF52  F008         	goto	u4760
  7038  0010A0                     u4761:
  7039  0010A0  EFA3  F007         	goto	l4740
  7040  0010A4                     u4760:
  7041  0010A4                     l4760:
  7042                           
  7043                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  7044  0010A4  C022  F017         	movff	utoa@fp,pad@fp
  7045  0010A8  C023  F018         	movff	utoa@fp+1,pad@fp+1
  7046  0010AC  0E84               	movlw	low _dbuf
  7047  0010AE  2440               	addwf	utoa@i^0,w,c
  7048  0010B0  6E19               	movwf	pad@buf^0,c
  7049  0010B2  0E01               	movlw	high _dbuf
  7050  0010B4  2041               	addwfc	(utoa@i+1)^0,w,c
  7051  0010B6  6E1A               	movwf	(pad@buf+1)^0,c
  7052  0010B8  C036  F01B         	movff	utoa@w,pad@p
  7053  0010BC  C037  F01C         	movff	utoa@w+1,pad@p+1
  7054  0010C0  EC03  F00E         	call	_pad	;wreg free
  7055  0010C4  C017  F022         	movff	?_pad,?_utoa
  7056  0010C8  C018  F023         	movff	?_pad+1,?_utoa+1
  7057  0010CC  0012               	return		;funcret
  7058  0010CE                     __end_of_utoa:
  7059                           	opt callstack 0
  7060                           
  7061 ;; *************** function ___lomod *****************
  7062 ;; Defined at:
  7063 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
  7064 ;; Parameters:    Size  Location     Type
  7065 ;;  dividend        8    4[COMRAM] unsigned long long 
  7066 ;;  divisor         8   12[COMRAM] unsigned long long 
  7067 ;; Auto vars:     Size  Location     Type
  7068 ;;  counter         1   20[COMRAM] unsigned char 
  7069 ;; Return value:  Size  Location     Type
  7070 ;;                  8    4[COMRAM] unsigned long long 
  7071 ;; Registers used:
  7072 ;;		wreg, status,2, status,0
  7073 ;; Tracked objects:
  7074 ;;		On entry : 0/0
  7075 ;;		On exit  : 0/0
  7076 ;;		Unchanged: 0/0
  7077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7078 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7079 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7081 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7082 ;;Total ram usage:       17 bytes
  7083 ;; Hardware stack levels used:    1
  7084 ;; Hardware stack levels required when called:    4
  7085 ;; This function calls:
  7086 ;;		Nothing
  7087 ;; This function is called by:
  7088 ;;		_utoa
  7089 ;; This function uses a non-reentrant model
  7090 ;;
  7091                           
  7092                           	psect	text43
  7093  001B36                     __ptext43:
  7094                           	opt callstack 0
  7095  001B36                     ___lomod:
  7096                           	opt callstack 22
  7097  001B36  500D               	movf	___lomod@divisor^0,w,c
  7098  001B38  100E               	iorwf	(___lomod@divisor+1)^0,w,c
  7099  001B3A  100F               	iorwf	(___lomod@divisor+2)^0,w,c
  7100  001B3C  1010               	iorwf	(___lomod@divisor+3)^0,w,c
  7101  001B3E  1011               	iorwf	(___lomod@divisor+4)^0,w,c
  7102  001B40  1012               	iorwf	(___lomod@divisor+5)^0,w,c
  7103  001B42  1013               	iorwf	(___lomod@divisor+6)^0,w,c
  7104  001B44  1014               	iorwf	(___lomod@divisor+7)^0,w,c
  7105  001B46  B4D8               	btfsc	status,2,c
  7106  001B48  EFA8  F00D         	goto	u4401
  7107  001B4C  EFAA  F00D         	goto	u4400
  7108  001B50                     u4401:
  7109  001B50  EFF2  F00D         	goto	l1343
  7110  001B54                     u4400:
  7111  001B54  0E01               	movlw	1
  7112  001B56  6E15               	movwf	___lomod@counter^0,c
  7113  001B58  EFB8  F00D         	goto	l4602
  7114  001B5C                     l4600:
  7115  001B5C  90D8               	bcf	status,0,c
  7116  001B5E  360D               	rlcf	___lomod@divisor^0,f,c
  7117  001B60  360E               	rlcf	(___lomod@divisor+1)^0,f,c
  7118  001B62  360F               	rlcf	(___lomod@divisor+2)^0,f,c
  7119  001B64  3610               	rlcf	(___lomod@divisor+3)^0,f,c
  7120  001B66  3611               	rlcf	(___lomod@divisor+4)^0,f,c
  7121  001B68  3612               	rlcf	(___lomod@divisor+5)^0,f,c
  7122  001B6A  3613               	rlcf	(___lomod@divisor+6)^0,f,c
  7123  001B6C  3614               	rlcf	(___lomod@divisor+7)^0,f,c
  7124  001B6E  2A15               	incf	___lomod@counter^0,f,c
  7125  001B70                     l4602:
  7126  001B70  AE14               	btfss	(___lomod@divisor+7)^0,7,c
  7127  001B72  EFBD  F00D         	goto	u4411
  7128  001B76  EFBF  F00D         	goto	u4410
  7129  001B7A                     u4411:
  7130  001B7A  EFAE  F00D         	goto	l4600
  7131  001B7E                     u4410:
  7132  001B7E                     l4604:
  7133  001B7E  500D               	movf	___lomod@divisor^0,w,c
  7134  001B80  5C05               	subwf	___lomod@dividend^0,w,c
  7135  001B82  500E               	movf	(___lomod@divisor+1)^0,w,c
  7136  001B84  5806               	subwfb	(___lomod@dividend+1)^0,w,c
  7137  001B86  500F               	movf	(___lomod@divisor+2)^0,w,c
  7138  001B88  5807               	subwfb	(___lomod@dividend+2)^0,w,c
  7139  001B8A  5010               	movf	(___lomod@divisor+3)^0,w,c
  7140  001B8C  5808               	subwfb	(___lomod@dividend+3)^0,w,c
  7141  001B8E  5011               	movf	(___lomod@divisor+4)^0,w,c
  7142  001B90  5809               	subwfb	(___lomod@dividend+4)^0,w,c
  7143  001B92  5012               	movf	(___lomod@divisor+5)^0,w,c
  7144  001B94  580A               	subwfb	(___lomod@dividend+5)^0,w,c
  7145  001B96  5013               	movf	(___lomod@divisor+6)^0,w,c
  7146  001B98  580B               	subwfb	(___lomod@dividend+6)^0,w,c
  7147  001B9A  5014               	movf	(___lomod@divisor+7)^0,w,c
  7148  001B9C  580C               	subwfb	(___lomod@dividend+7)^0,w,c
  7149  001B9E  A0D8               	btfss	status,0,c
  7150  001BA0  EFD4  F00D         	goto	u4421
  7151  001BA4  EFD6  F00D         	goto	u4420
  7152  001BA8                     u4421:
  7153  001BA8  EFE6  F00D         	goto	l4608
  7154  001BAC                     u4420:
  7155  001BAC  500D               	movf	___lomod@divisor^0,w,c
  7156  001BAE  5E05               	subwf	___lomod@dividend^0,f,c
  7157  001BB0  500E               	movf	(___lomod@divisor+1)^0,w,c
  7158  001BB2  5A06               	subwfb	(___lomod@dividend+1)^0,f,c
  7159  001BB4  500F               	movf	(___lomod@divisor+2)^0,w,c
  7160  001BB6  5A07               	subwfb	(___lomod@dividend+2)^0,f,c
  7161  001BB8  5010               	movf	(___lomod@divisor+3)^0,w,c
  7162  001BBA  5A08               	subwfb	(___lomod@dividend+3)^0,f,c
  7163  001BBC  5011               	movf	(___lomod@divisor+4)^0,w,c
  7164  001BBE  5A09               	subwfb	(___lomod@dividend+4)^0,f,c
  7165  001BC0  5012               	movf	(___lomod@divisor+5)^0,w,c
  7166  001BC2  5A0A               	subwfb	(___lomod@dividend+5)^0,f,c
  7167  001BC4  5013               	movf	(___lomod@divisor+6)^0,w,c
  7168  001BC6  5A0B               	subwfb	(___lomod@dividend+6)^0,f,c
  7169  001BC8  5014               	movf	(___lomod@divisor+7)^0,w,c
  7170  001BCA  5A0C               	subwfb	(___lomod@dividend+7)^0,f,c
  7171  001BCC                     l4608:
  7172  001BCC  90D8               	bcf	status,0,c
  7173  001BCE  3214               	rrcf	(___lomod@divisor+7)^0,f,c
  7174  001BD0  3213               	rrcf	(___lomod@divisor+6)^0,f,c
  7175  001BD2  3212               	rrcf	(___lomod@divisor+5)^0,f,c
  7176  001BD4  3211               	rrcf	(___lomod@divisor+4)^0,f,c
  7177  001BD6  3210               	rrcf	(___lomod@divisor+3)^0,f,c
  7178  001BD8  320F               	rrcf	(___lomod@divisor+2)^0,f,c
  7179  001BDA  320E               	rrcf	(___lomod@divisor+1)^0,f,c
  7180  001BDC  320D               	rrcf	___lomod@divisor^0,f,c
  7181  001BDE  2E15               	decfsz	___lomod@counter^0,f,c
  7182  001BE0  EFBF  F00D         	goto	l4604
  7183  001BE4                     l1343:
  7184  001BE4  C005  F005         	movff	___lomod@dividend,?___lomod
  7185  001BE8  C006  F006         	movff	___lomod@dividend+1,?___lomod+1
  7186  001BEC  C007  F007         	movff	___lomod@dividend+2,?___lomod+2
  7187  001BF0  C008  F008         	movff	___lomod@dividend+3,?___lomod+3
  7188  001BF4  C009  F009         	movff	___lomod@dividend+4,?___lomod+4
  7189  001BF8  C00A  F00A         	movff	___lomod@dividend+5,?___lomod+5
  7190  001BFC  C00B  F00B         	movff	___lomod@dividend+6,?___lomod+6
  7191  001C00  C00C  F00C         	movff	___lomod@dividend+7,?___lomod+7
  7192  001C04  0012               	return		;funcret
  7193  001C06                     __end_of___lomod:
  7194                           	opt callstack 0
  7195                           
  7196 ;; *************** function ___lodiv *****************
  7197 ;; Defined at:
  7198 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
  7199 ;; Parameters:    Size  Location     Type
  7200 ;;  dividend        8    4[COMRAM] unsigned long long 
  7201 ;;  divisor         8   12[COMRAM] unsigned long long 
  7202 ;; Auto vars:     Size  Location     Type
  7203 ;;  quotient        8   20[COMRAM] unsigned long long 
  7204 ;;  counter         1   28[COMRAM] unsigned char 
  7205 ;; Return value:  Size  Location     Type
  7206 ;;                  8    4[COMRAM] unsigned long long 
  7207 ;; Registers used:
  7208 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7209 ;; Tracked objects:
  7210 ;;		On entry : 0/0
  7211 ;;		On exit  : 0/0
  7212 ;;		Unchanged: 0/0
  7213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7214 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7215 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7217 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7218 ;;Total ram usage:       25 bytes
  7219 ;; Hardware stack levels used:    1
  7220 ;; Hardware stack levels required when called:    4
  7221 ;; This function calls:
  7222 ;;		Nothing
  7223 ;; This function is called by:
  7224 ;;		_utoa
  7225 ;; This function uses a non-reentrant model
  7226 ;;
  7227                           
  7228                           	psect	text44
  7229  001964                     __ptext44:
  7230                           	opt callstack 0
  7231  001964                     ___lodiv:
  7232                           	opt callstack 22
  7233  001964  EE20  F015         	lfsr	2,___lodiv@quotient
  7234  001968  0E07               	movlw	7
  7235  00196A                     u4361:
  7236  00196A  6ADE               	clrf	postinc2,c
  7237  00196C  06E8               	decf	wreg,f,c
  7238  00196E  E2FD               	bc	u4361
  7239  001970  500D               	movf	___lodiv@divisor^0,w,c
  7240  001972  100E               	iorwf	(___lodiv@divisor+1)^0,w,c
  7241  001974  100F               	iorwf	(___lodiv@divisor+2)^0,w,c
  7242  001976  1010               	iorwf	(___lodiv@divisor+3)^0,w,c
  7243  001978  1011               	iorwf	(___lodiv@divisor+4)^0,w,c
  7244  00197A  1012               	iorwf	(___lodiv@divisor+5)^0,w,c
  7245  00197C  1013               	iorwf	(___lodiv@divisor+6)^0,w,c
  7246  00197E  1014               	iorwf	(___lodiv@divisor+7)^0,w,c
  7247  001980  B4D8               	btfsc	status,2,c
  7248  001982  EFC5  F00C         	goto	u4371
  7249  001986  EFC7  F00C         	goto	u4370
  7250  00198A                     u4371:
  7251  00198A  EF19  F00D         	goto	l1333
  7252  00198E                     u4370:
  7253  00198E  0E01               	movlw	1
  7254  001990  6E1D               	movwf	___lodiv@counter^0,c
  7255  001992  EFD5  F00C         	goto	l4582
  7256  001996                     l4580:
  7257  001996  90D8               	bcf	status,0,c
  7258  001998  360D               	rlcf	___lodiv@divisor^0,f,c
  7259  00199A  360E               	rlcf	(___lodiv@divisor+1)^0,f,c
  7260  00199C  360F               	rlcf	(___lodiv@divisor+2)^0,f,c
  7261  00199E  3610               	rlcf	(___lodiv@divisor+3)^0,f,c
  7262  0019A0  3611               	rlcf	(___lodiv@divisor+4)^0,f,c
  7263  0019A2  3612               	rlcf	(___lodiv@divisor+5)^0,f,c
  7264  0019A4  3613               	rlcf	(___lodiv@divisor+6)^0,f,c
  7265  0019A6  3614               	rlcf	(___lodiv@divisor+7)^0,f,c
  7266  0019A8  2A1D               	incf	___lodiv@counter^0,f,c
  7267  0019AA                     l4582:
  7268  0019AA  AE14               	btfss	(___lodiv@divisor+7)^0,7,c
  7269  0019AC  EFDA  F00C         	goto	u4381
  7270  0019B0  EFDC  F00C         	goto	u4380
  7271  0019B4                     u4381:
  7272  0019B4  EFCB  F00C         	goto	l4580
  7273  0019B8                     u4380:
  7274  0019B8                     l4584:
  7275  0019B8  90D8               	bcf	status,0,c
  7276  0019BA  3615               	rlcf	___lodiv@quotient^0,f,c
  7277  0019BC  3616               	rlcf	(___lodiv@quotient+1)^0,f,c
  7278  0019BE  3617               	rlcf	(___lodiv@quotient+2)^0,f,c
  7279  0019C0  3618               	rlcf	(___lodiv@quotient+3)^0,f,c
  7280  0019C2  3619               	rlcf	(___lodiv@quotient+4)^0,f,c
  7281  0019C4  361A               	rlcf	(___lodiv@quotient+5)^0,f,c
  7282  0019C6  361B               	rlcf	(___lodiv@quotient+6)^0,f,c
  7283  0019C8  361C               	rlcf	(___lodiv@quotient+7)^0,f,c
  7284  0019CA  500D               	movf	___lodiv@divisor^0,w,c
  7285  0019CC  5C05               	subwf	___lodiv@dividend^0,w,c
  7286  0019CE  500E               	movf	(___lodiv@divisor+1)^0,w,c
  7287  0019D0  5806               	subwfb	(___lodiv@dividend+1)^0,w,c
  7288  0019D2  500F               	movf	(___lodiv@divisor+2)^0,w,c
  7289  0019D4  5807               	subwfb	(___lodiv@dividend+2)^0,w,c
  7290  0019D6  5010               	movf	(___lodiv@divisor+3)^0,w,c
  7291  0019D8  5808               	subwfb	(___lodiv@dividend+3)^0,w,c
  7292  0019DA  5011               	movf	(___lodiv@divisor+4)^0,w,c
  7293  0019DC  5809               	subwfb	(___lodiv@dividend+4)^0,w,c
  7294  0019DE  5012               	movf	(___lodiv@divisor+5)^0,w,c
  7295  0019E0  580A               	subwfb	(___lodiv@dividend+5)^0,w,c
  7296  0019E2  5013               	movf	(___lodiv@divisor+6)^0,w,c
  7297  0019E4  580B               	subwfb	(___lodiv@dividend+6)^0,w,c
  7298  0019E6  5014               	movf	(___lodiv@divisor+7)^0,w,c
  7299  0019E8  580C               	subwfb	(___lodiv@dividend+7)^0,w,c
  7300  0019EA  A0D8               	btfss	status,0,c
  7301  0019EC  EFFA  F00C         	goto	u4391
  7302  0019F0  EFFC  F00C         	goto	u4390
  7303  0019F4                     u4391:
  7304  0019F4  EF0D  F00D         	goto	l4592
  7305  0019F8                     u4390:
  7306  0019F8  500D               	movf	___lodiv@divisor^0,w,c
  7307  0019FA  5E05               	subwf	___lodiv@dividend^0,f,c
  7308  0019FC  500E               	movf	(___lodiv@divisor+1)^0,w,c
  7309  0019FE  5A06               	subwfb	(___lodiv@dividend+1)^0,f,c
  7310  001A00  500F               	movf	(___lodiv@divisor+2)^0,w,c
  7311  001A02  5A07               	subwfb	(___lodiv@dividend+2)^0,f,c
  7312  001A04  5010               	movf	(___lodiv@divisor+3)^0,w,c
  7313  001A06  5A08               	subwfb	(___lodiv@dividend+3)^0,f,c
  7314  001A08  5011               	movf	(___lodiv@divisor+4)^0,w,c
  7315  001A0A  5A09               	subwfb	(___lodiv@dividend+4)^0,f,c
  7316  001A0C  5012               	movf	(___lodiv@divisor+5)^0,w,c
  7317  001A0E  5A0A               	subwfb	(___lodiv@dividend+5)^0,f,c
  7318  001A10  5013               	movf	(___lodiv@divisor+6)^0,w,c
  7319  001A12  5A0B               	subwfb	(___lodiv@dividend+6)^0,f,c
  7320  001A14  5014               	movf	(___lodiv@divisor+7)^0,w,c
  7321  001A16  5A0C               	subwfb	(___lodiv@dividend+7)^0,f,c
  7322  001A18  8015               	bsf	___lodiv@quotient^0,0,c
  7323  001A1A                     l4592:
  7324  001A1A  90D8               	bcf	status,0,c
  7325  001A1C  3214               	rrcf	(___lodiv@divisor+7)^0,f,c
  7326  001A1E  3213               	rrcf	(___lodiv@divisor+6)^0,f,c
  7327  001A20  3212               	rrcf	(___lodiv@divisor+5)^0,f,c
  7328  001A22  3211               	rrcf	(___lodiv@divisor+4)^0,f,c
  7329  001A24  3210               	rrcf	(___lodiv@divisor+3)^0,f,c
  7330  001A26  320F               	rrcf	(___lodiv@divisor+2)^0,f,c
  7331  001A28  320E               	rrcf	(___lodiv@divisor+1)^0,f,c
  7332  001A2A  320D               	rrcf	___lodiv@divisor^0,f,c
  7333  001A2C  2E1D               	decfsz	___lodiv@counter^0,f,c
  7334  001A2E  EFDC  F00C         	goto	l4584
  7335  001A32                     l1333:
  7336  001A32  C015  F005         	movff	___lodiv@quotient,?___lodiv
  7337  001A36  C016  F006         	movff	___lodiv@quotient+1,?___lodiv+1
  7338  001A3A  C017  F007         	movff	___lodiv@quotient+2,?___lodiv+2
  7339  001A3E  C018  F008         	movff	___lodiv@quotient+3,?___lodiv+3
  7340  001A42  C019  F009         	movff	___lodiv@quotient+4,?___lodiv+4
  7341  001A46  C01A  F00A         	movff	___lodiv@quotient+5,?___lodiv+5
  7342  001A4A  C01B  F00B         	movff	___lodiv@quotient+6,?___lodiv+6
  7343  001A4E  C01C  F00C         	movff	___lodiv@quotient+7,?___lodiv+7
  7344  001A52  0012               	return		;funcret
  7345  001A54                     __end_of___lodiv:
  7346                           	opt callstack 0
  7347                           
  7348 ;; *************** function _stoa *****************
  7349 ;; Defined at:
  7350 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7351 ;; Parameters:    Size  Location     Type
  7352 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  7353 ;;		 -> NULL(0), 
  7354 ;;  s               2   17[COMRAM] PTR unsigned char 
  7355 ;;		 -> ?_printf(2), STR_5(9), STR_4(12), 
  7356 ;; Auto vars:     Size  Location     Type
  7357 ;;  nuls            7   20[COMRAM] unsigned char [7]
  7358 ;;  l               2   35[COMRAM] int 
  7359 ;;  p               2   33[COMRAM] int 
  7360 ;;  cp              2   31[COMRAM] PTR unsigned char 
  7361 ;;		 -> ?_printf(2), stoa@nuls(7), STR_5(9), STR_4(12), 
  7362 ;;  w               2   29[COMRAM] int 
  7363 ;;  i               2   27[COMRAM] int 
  7364 ;; Return value:  Size  Location     Type
  7365 ;;                  2   15[COMRAM] int 
  7366 ;; Registers used:
  7367 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7368 ;; Tracked objects:
  7369 ;;		On entry : 0/0
  7370 ;;		On exit  : 0/0
  7371 ;;		Unchanged: 0/0
  7372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7373 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7374 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7375 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7376 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7377 ;;Total ram usage:       22 bytes
  7378 ;; Hardware stack levels used:    1
  7379 ;; Hardware stack levels required when called:    7
  7380 ;; This function calls:
  7381 ;;		_fputc
  7382 ;;		_strlen
  7383 ;; This function is called by:
  7384 ;;		_vfpfcnvrt
  7385 ;; This function uses a non-reentrant model
  7386 ;;
  7387                           
  7388                           	psect	text45
  7389  0010CE                     __ptext45:
  7390                           	opt callstack 0
  7391  0010CE                     _stoa:
  7392                           	opt callstack 20
  7393  0010CE                     
  7394                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  7395  0010CE  EE20  F0F3         	lfsr	2,stoa@F1139
  7396  0010D2  EE10  F015         	lfsr	1,stoa@nuls
  7397  0010D6  0E06               	movlw	6
  7398  0010D8                     u4601:
  7399  0010D8  CFDB FFE3          	movff	plusw2,plusw1
  7400  0010DC  06E8               	decf	wreg,f,c
  7401  0010DE  E2FC               	bc	u4601
  7402  0010E0                     
  7403                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  7404  0010E0  C012  F020         	movff	stoa@s,stoa@cp
  7405  0010E4  C013  F021         	movff	stoa@s+1,stoa@cp+1
  7406  0010E8                     
  7407                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  7408  0010E8  5020               	movf	stoa@cp^0,w,c
  7409  0010EA  1021               	iorwf	(stoa@cp+1)^0,w,c
  7410  0010EC  A4D8               	btfss	status,2,c
  7411  0010EE  EF7B  F008         	goto	u4611
  7412  0010F2  EF7D  F008         	goto	u4610
  7413  0010F6                     u4611:
  7414  0010F6  EF81  F008         	goto	l4694
  7415  0010FA                     u4610:
  7416  0010FA                     
  7417                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  7418  0010FA  0E15               	movlw	low stoa@nuls
  7419  0010FC  6E20               	movwf	stoa@cp^0,c
  7420  0010FE  0E00               	movlw	high stoa@nuls
  7421  001100  6E21               	movwf	(stoa@cp+1)^0,c
  7422  001102                     l4694:
  7423                           
  7424                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  7425  001102  C020  F005         	movff	stoa@cp,strlen@s
  7426  001106  C021  F006         	movff	stoa@cp+1,strlen@s+1
  7427  00110A  ECDA  F012         	call	_strlen	;wreg free
  7428  00110E  C005  F024         	movff	?_strlen,stoa@l
  7429  001112  C006  F025         	movff	?_strlen+1,stoa@l+1
  7430  001116                     
  7431                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  7432  001116  C08C  F022         	movff	_prec,stoa@p
  7433  00111A  C08D  F023         	movff	_prec+1,stoa@p+1
  7434  00111E                     
  7435                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  7436  00111E  BE23               	btfsc	(stoa@p+1)^0,7,c
  7437  001120  EF94  F008         	goto	u4621
  7438  001124  EF96  F008         	goto	u4620
  7439  001128                     u4621:
  7440  001128  EFAB  F008         	goto	l792
  7441  00112C                     u4620:
  7442  00112C  5024               	movf	stoa@l^0,w,c
  7443  00112E  5C22               	subwf	stoa@p^0,w,c
  7444  001130  5023               	movf	(stoa@p+1)^0,w,c
  7445  001132  0A80               	xorlw	128
  7446  001134  6E14               	movwf	??_stoa^0,c
  7447  001136  5025               	movf	(stoa@l+1)^0,w,c
  7448  001138  0A80               	xorlw	128
  7449  00113A  5814               	subwfb	??_stoa^0,w,c
  7450  00113C  A0D8               	btfss	status,0,c
  7451  00113E  EFA3  F008         	goto	u4631
  7452  001142  EFA5  F008         	goto	u4630
  7453  001146                     u4631:
  7454  001146  EFA7  F008         	goto	l790
  7455  00114A                     u4630:
  7456  00114A  EFAB  F008         	goto	l792
  7457  00114E                     l790:
  7458  00114E  C022  F024         	movff	stoa@p,stoa@l
  7459  001152  C023  F025         	movff	stoa@p+1,stoa@l+1
  7460  001156                     l792:
  7461                           
  7462                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  7463  001156  C024  F022         	movff	stoa@l,stoa@p
  7464  00115A  C025  F023         	movff	stoa@l+1,stoa@p+1
  7465                           
  7466                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  7467  00115E  C08A  F01E         	movff	_width,stoa@w
  7468  001162  C08B  F01F         	movff	_width+1,stoa@w+1
  7469                           
  7470                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  7471  001166  B056               	btfsc	_flags^0,0,c
  7472  001168  EFB8  F008         	goto	u4641
  7473  00116C  EFBA  F008         	goto	u4640
  7474  001170                     u4641:
  7475  001170  EFD7  F008         	goto	l4710
  7476  001174                     u4640:
  7477  001174  EFC8  F008         	goto	l4708
  7478  001178                     l4704:
  7479                           
  7480                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  7481  001178  0E00               	movlw	0
  7482  00117A  6E08               	movwf	(fputc@c+1)^0,c
  7483  00117C  0E20               	movlw	32
  7484  00117E  6E07               	movwf	fputc@c^0,c
  7485  001180  C010  F009         	movff	stoa@fp,fputc@fp
  7486  001184  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  7487  001188  ECC5  F00F         	call	_fputc	;wreg free
  7488  00118C                     
  7489                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  7490  00118C  4A24               	infsnz	stoa@l^0,f,c
  7491  00118E  2A25               	incf	(stoa@l+1)^0,f,c
  7492  001190                     l4708:
  7493                           
  7494                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  7495  001190  501E               	movf	stoa@w^0,w,c
  7496  001192  5C24               	subwf	stoa@l^0,w,c
  7497  001194  5025               	movf	(stoa@l+1)^0,w,c
  7498  001196  0A80               	xorlw	128
  7499  001198  6E14               	movwf	??_stoa^0,c
  7500  00119A  501F               	movf	(stoa@w+1)^0,w,c
  7501  00119C  0A80               	xorlw	128
  7502  00119E  5814               	subwfb	??_stoa^0,w,c
  7503  0011A0  A0D8               	btfss	status,0,c
  7504  0011A2  EFD5  F008         	goto	u4651
  7505  0011A6  EFD7  F008         	goto	u4650
  7506  0011AA                     u4651:
  7507  0011AA  EFBC  F008         	goto	l4704
  7508  0011AE                     u4650:
  7509  0011AE                     l4710:
  7510                           
  7511                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  7512  0011AE  0E00               	movlw	0
  7513  0011B0  6E1D               	movwf	(stoa@i+1)^0,c
  7514  0011B2  0E00               	movlw	0
  7515  0011B4  6E1C               	movwf	stoa@i^0,c
  7516                           
  7517                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  7518  0011B6  EFFC  F008         	goto	l4718
  7519  0011BA                     l4712:
  7520                           
  7521                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  7522  0011BA  C020  FFF6         	movff	stoa@cp,tblptrl
  7523  0011BE  C021  FFF7         	movff	stoa@cp+1,tblptrh
  7524  0011C2  0E00               	movlw	low (__mediumconst shr (0+16))
  7525  0011C4  6EF8               	movwf	tblptru,c
  7526  0011C6  0E0E               	movlw	(high __ramtop+-1)
  7527  0011C8  64F7               	cpfsgt	tblptrh,c
  7528  0011CA  D003               	bra	u4667
  7529  0011CC  0008               	tblrd		*
  7530  0011CE  50F5               	movf	tablat,w,c
  7531  0011D0  D005               	bra	u4660
  7532  0011D2                     u4667:
  7533  0011D2  CFF6 FFE9          	movff	tblptrl,fsr0l
  7534  0011D6  CFF7 FFEA          	movff	tblptrh,fsr0h
  7535  0011DA  50EF               	movf	indf0,w,c
  7536  0011DC                     u4660:
  7537  0011DC  6E14               	movwf	??_stoa^0,c
  7538  0011DE  5014               	movf	??_stoa^0,w,c
  7539  0011E0  6E07               	movwf	fputc@c^0,c
  7540  0011E2  6A08               	clrf	(fputc@c+1)^0,c
  7541  0011E4  C010  F009         	movff	stoa@fp,fputc@fp
  7542  0011E8  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  7543  0011EC  ECC5  F00F         	call	_fputc	;wreg free
  7544  0011F0                     
  7545                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  7546  0011F0  4A20               	infsnz	stoa@cp^0,f,c
  7547  0011F2  2A21               	incf	(stoa@cp+1)^0,f,c
  7548  0011F4                     
  7549                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  7550  0011F4  4A1C               	infsnz	stoa@i^0,f,c
  7551  0011F6  2A1D               	incf	(stoa@i+1)^0,f,c
  7552  0011F8                     l4718:
  7553                           
  7554                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  7555  0011F8  5022               	movf	stoa@p^0,w,c
  7556  0011FA  5C1C               	subwf	stoa@i^0,w,c
  7557  0011FC  501D               	movf	(stoa@i+1)^0,w,c
  7558  0011FE  0A80               	xorlw	128
  7559  001200  6E14               	movwf	??_stoa^0,c
  7560  001202  5023               	movf	(stoa@p+1)^0,w,c
  7561  001204  0A80               	xorlw	128
  7562  001206  5814               	subwfb	??_stoa^0,w,c
  7563  001208  A0D8               	btfss	status,0,c
  7564  00120A  EF09  F009         	goto	u4671
  7565  00120E  EF0B  F009         	goto	u4670
  7566  001212                     u4671:
  7567  001212  EFDD  F008         	goto	l4712
  7568  001216                     u4670:
  7569  001216                     
  7570                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  7571  001216  A056               	btfss	_flags^0,0,c
  7572  001218  EF10  F009         	goto	u4681
  7573  00121C  EF12  F009         	goto	u4680
  7574  001220                     u4681:
  7575  001220  EF2F  F009         	goto	l802
  7576  001224                     u4680:
  7577  001224  EF20  F009         	goto	l4726
  7578  001228                     l4722:
  7579                           
  7580                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  7581  001228  0E00               	movlw	0
  7582  00122A  6E08               	movwf	(fputc@c+1)^0,c
  7583  00122C  0E20               	movlw	32
  7584  00122E  6E07               	movwf	fputc@c^0,c
  7585  001230  C010  F009         	movff	stoa@fp,fputc@fp
  7586  001234  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  7587  001238  ECC5  F00F         	call	_fputc	;wreg free
  7588  00123C                     
  7589                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  7590  00123C  4A24               	infsnz	stoa@l^0,f,c
  7591  00123E  2A25               	incf	(stoa@l+1)^0,f,c
  7592  001240                     l4726:
  7593                           
  7594                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  7595  001240  501E               	movf	stoa@w^0,w,c
  7596  001242  5C24               	subwf	stoa@l^0,w,c
  7597  001244  5025               	movf	(stoa@l+1)^0,w,c
  7598  001246  0A80               	xorlw	128
  7599  001248  6E14               	movwf	??_stoa^0,c
  7600  00124A  501F               	movf	(stoa@w+1)^0,w,c
  7601  00124C  0A80               	xorlw	128
  7602  00124E  5814               	subwfb	??_stoa^0,w,c
  7603  001250  A0D8               	btfss	status,0,c
  7604  001252  EF2D  F009         	goto	u4691
  7605  001256  EF2F  F009         	goto	u4690
  7606  00125A                     u4691:
  7607  00125A  EF14  F009         	goto	l4722
  7608  00125E                     u4690:
  7609  00125E                     l802:
  7610                           
  7611                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  7612  00125E  C024  F010         	movff	stoa@l,?_stoa
  7613  001262  C025  F011         	movff	stoa@l+1,?_stoa+1
  7614  001266  0012               	return		;funcret
  7615  001268                     __end_of_stoa:
  7616                           	opt callstack 0
  7617                           
  7618 ;; *************** function _dtoa *****************
  7619 ;; Defined at:
  7620 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7621 ;; Parameters:    Size  Location     Type
  7622 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  7623 ;;		 -> NULL(0), 
  7624 ;;  d               8   35[COMRAM] long long 
  7625 ;; Auto vars:     Size  Location     Type
  7626 ;;  n               8   59[COMRAM] long long 
  7627 ;;  i               2   67[COMRAM] int 
  7628 ;;  s               2   57[COMRAM] int 
  7629 ;;  w               2   55[COMRAM] int 
  7630 ;;  p               2   53[COMRAM] int 
  7631 ;; Return value:  Size  Location     Type
  7632 ;;                  2   33[COMRAM] int 
  7633 ;; Registers used:
  7634 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7635 ;; Tracked objects:
  7636 ;;		On entry : 0/0
  7637 ;;		On exit  : 0/0
  7638 ;;		Unchanged: 0/0
  7639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7640 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7641 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7642 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7643 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7644 ;;Total ram usage:       36 bytes
  7645 ;; Hardware stack levels used:    1
  7646 ;; Hardware stack levels required when called:    9
  7647 ;; This function calls:
  7648 ;;		___aodiv
  7649 ;;		___aomod
  7650 ;;		_abs
  7651 ;;		_pad
  7652 ;; This function is called by:
  7653 ;;		_vfpfcnvrt
  7654 ;; This function uses a non-reentrant model
  7655 ;;
  7656                           
  7657                           	psect	text46
  7658  0006B4                     __ptext46:
  7659                           	opt callstack 0
  7660  0006B4                     _dtoa:
  7661                           	opt callstack 18
  7662  0006B4                     
  7663                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  7664  0006B4  C024  F03C         	movff	dtoa@d,dtoa@n
  7665  0006B8  C025  F03D         	movff	dtoa@d+1,dtoa@n+1
  7666  0006BC  C026  F03E         	movff	dtoa@d+2,dtoa@n+2
  7667  0006C0  C027  F03F         	movff	dtoa@d+3,dtoa@n+3
  7668  0006C4  C028  F040         	movff	dtoa@d+4,dtoa@n+4
  7669  0006C8  C029  F041         	movff	dtoa@d+5,dtoa@n+5
  7670  0006CC  C02A  F042         	movff	dtoa@d+6,dtoa@n+6
  7671  0006D0  C02B  F043         	movff	dtoa@d+7,dtoa@n+7
  7672  0006D4                     
  7673                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  7674  0006D4  BE43               	btfsc	(dtoa@n+7)^0,7,c
  7675  0006D6  EF6F  F003         	goto	u4451
  7676  0006DA  EF72  F003         	goto	u4450
  7677  0006DE                     u4451:
  7678  0006DE  0E01               	movlw	1
  7679  0006E0  EF73  F003         	goto	u4460
  7680  0006E4                     u4450:
  7681  0006E4  0E00               	movlw	0
  7682  0006E6                     u4460:
  7683  0006E6  6E3A               	movwf	dtoa@s^0,c
  7684  0006E8  6A3B               	clrf	(dtoa@s+1)^0,c
  7685                           
  7686                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  7687  0006EA  503A               	movf	dtoa@s^0,w,c
  7688  0006EC  103B               	iorwf	(dtoa@s+1)^0,w,c
  7689  0006EE  B4D8               	btfsc	status,2,c
  7690  0006F0  EF7C  F003         	goto	u4471
  7691  0006F4  EF7E  F003         	goto	u4470
  7692  0006F8                     u4471:
  7693  0006F8  EF8E  F003         	goto	l4630
  7694  0006FC                     u4470:
  7695  0006FC                     
  7696                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  7697  0006FC  1E43               	comf	(dtoa@n+7)^0,f,c
  7698  0006FE  1E42               	comf	(dtoa@n+6)^0,f,c
  7699  000700  1E41               	comf	(dtoa@n+5)^0,f,c
  7700  000702  1E40               	comf	(dtoa@n+4)^0,f,c
  7701  000704  1E3F               	comf	(dtoa@n+3)^0,f,c
  7702  000706  1E3E               	comf	(dtoa@n+2)^0,f,c
  7703  000708  1E3D               	comf	(dtoa@n+1)^0,f,c
  7704  00070A  6C3C               	negf	dtoa@n^0,c
  7705  00070C  0E00               	movlw	0
  7706  00070E  223D               	addwfc	(dtoa@n+1)^0,f,c
  7707  000710  223E               	addwfc	(dtoa@n+2)^0,f,c
  7708  000712  223F               	addwfc	(dtoa@n+3)^0,f,c
  7709  000714  2240               	addwfc	(dtoa@n+4)^0,f,c
  7710  000716  2241               	addwfc	(dtoa@n+5)^0,f,c
  7711  000718  2242               	addwfc	(dtoa@n+6)^0,f,c
  7712  00071A  2243               	addwfc	(dtoa@n+7)^0,f,c
  7713  00071C                     l4630:
  7714                           
  7715                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  7716  00071C  0100               	movlb	0	; () banked
  7717  00071E  BF8D               	btfsc	(_prec+1)& (0+255),7,b
  7718  000720  EF94  F003         	goto	u4481
  7719  000724  EF96  F003         	goto	u4480
  7720  000728                     u4481:
  7721  000728  EF97  F003         	goto	l4634
  7722  00072C                     u4480:
  7723  00072C                     
  7724                           ; BSR set to: 0
  7725                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  7726  00072C  9256               	bcf	_flags^0,1,c
  7727  00072E                     l4634:
  7728                           
  7729                           ; BSR set to: 0
  7730                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  7731  00072E  BF8D               	btfsc	(_prec+1)& (0+255),7,b
  7732  000730  EFA4  F003         	goto	u4490
  7733  000734  518D               	movf	(_prec+1)& (0+255),w,b
  7734  000736  E106               	bnz	u4491
  7735  000738  058C               	decf	_prec& (0+255),w,b
  7736  00073A  B0D8               	btfsc	status,0,c
  7737  00073C  EFA2  F003         	goto	u4491
  7738  000740  EFA4  F003         	goto	u4490
  7739  000744                     u4491:
  7740  000744  EFAA  F003         	goto	l763
  7741  000748                     u4490:
  7742  000748                     
  7743                           ; BSR set to: 0
  7744  000748  0E00               	movlw	0
  7745  00074A  6E37               	movwf	(dtoa@p+1)^0,c
  7746  00074C  0E01               	movlw	1
  7747  00074E  6E36               	movwf	dtoa@p^0,c
  7748  000750  EFAE  F003         	goto	l765
  7749  000754                     l763:
  7750                           
  7751                           ; BSR set to: 0
  7752  000754  C08C  F036         	movff	_prec,dtoa@p
  7753  000758  C08D  F037         	movff	_prec+1,dtoa@p+1
  7754  00075C                     l765:
  7755                           
  7756                           ; BSR set to: 0
  7757                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  7758  00075C  C08A  F038         	movff	_width,dtoa@w
  7759  000760  C08B  F039         	movff	_width+1,dtoa@w+1
  7760  000764                     
  7761                           ; BSR set to: 0
  7762                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  7763  000764  503A               	movf	dtoa@s^0,w,c
  7764  000766  103B               	iorwf	(dtoa@s+1)^0,w,c
  7765  000768  A4D8               	btfss	status,2,c
  7766  00076A  EFB9  F003         	goto	u4501
  7767  00076E  EFBB  F003         	goto	u4500
  7768  000772                     u4501:
  7769  000772  EFC2  F003         	goto	l4642
  7770  000776                     u4500:
  7771  000776                     
  7772                           ; BSR set to: 0
  7773  000776  A456               	btfss	_flags^0,2,c
  7774  000778  EFC0  F003         	goto	u4511
  7775  00077C  EFC2  F003         	goto	u4510
  7776  000780                     u4511:
  7777  000780  EFC5  F003         	goto	l4644
  7778  000784                     u4510:
  7779  000784                     l4642:
  7780                           
  7781                           ; BSR set to: 0
  7782                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  7783  000784  0638               	decf	dtoa@w^0,f,c
  7784  000786  A0D8               	btfss	status,0,c
  7785  000788  0639               	decf	(dtoa@w+1)^0,f,c
  7786  00078A                     l4644:
  7787                           
  7788                           ; BSR set to: 0
  7789                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  7790  00078A  0E00               	movlw	0
  7791  00078C  6E45               	movwf	(dtoa@i+1)^0,c
  7792  00078E  0E1F               	movlw	31
  7793  000790  6E44               	movwf	dtoa@i^0,c
  7794  000792                     
  7795                           ; BSR set to: 0
  7796                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  7797  000792  0E00               	movlw	0
  7798  000794  0101               	movlb	1	; () banked
  7799  000796  6FA3               	movwf	(_dbuf+31)& (0+255),b
  7800                           
  7801                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7802  000798  EF4A  F004         	goto	l4658
  7803  00079C                     l4648:
  7804                           
  7805                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  7806  00079C  0644               	decf	dtoa@i^0,f,c
  7807  00079E  A0D8               	btfss	status,0,c
  7808  0007A0  0645               	decf	(dtoa@i+1)^0,f,c
  7809  0007A2                     
  7810                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  7811  0007A2  0E84               	movlw	low _dbuf
  7812  0007A4  2444               	addwf	dtoa@i^0,w,c
  7813  0007A6  6ED9               	movwf	fsr2l,c
  7814  0007A8  0E01               	movlw	high _dbuf
  7815  0007AA  2045               	addwfc	(dtoa@i+1)^0,w,c
  7816  0007AC  6EDA               	movwf	fsr2h,c
  7817  0007AE  C03C  F005         	movff	dtoa@n,___aomod@dividend
  7818  0007B2  C03D  F006         	movff	dtoa@n+1,___aomod@dividend+1
  7819  0007B6  C03E  F007         	movff	dtoa@n+2,___aomod@dividend+2
  7820  0007BA  C03F  F008         	movff	dtoa@n+3,___aomod@dividend+3
  7821  0007BE  C040  F009         	movff	dtoa@n+4,___aomod@dividend+4
  7822  0007C2  C041  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  7823  0007C6  C042  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  7824  0007CA  C043  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  7825  0007CE  0E0A               	movlw	10
  7826  0007D0  6E0D               	movwf	___aomod@divisor^0,c
  7827  0007D2  0E00               	movlw	0
  7828  0007D4  6E0E               	movwf	(___aomod@divisor+1)^0,c
  7829  0007D6  0E00               	movlw	0
  7830  0007D8  6E0F               	movwf	(___aomod@divisor+2)^0,c
  7831  0007DA  0E00               	movlw	0
  7832  0007DC  6E10               	movwf	(___aomod@divisor+3)^0,c
  7833  0007DE  0E00               	movlw	0
  7834  0007E0  6E11               	movwf	(___aomod@divisor+4)^0,c
  7835  0007E2  0E00               	movlw	0
  7836  0007E4  6E12               	movwf	(___aomod@divisor+5)^0,c
  7837  0007E6  0E00               	movlw	0
  7838  0007E8  6E13               	movwf	(___aomod@divisor+6)^0,c
  7839  0007EA  0E00               	movlw	0
  7840  0007EC  6E14               	movwf	(___aomod@divisor+7)^0,c
  7841  0007EE  ECC5  F00A         	call	___aomod	;wreg free
  7842  0007F2  C005  F02C         	movff	?___aomod,??_dtoa
  7843  0007F6  C006  F02D         	movff	?___aomod+1,??_dtoa+1
  7844  0007FA  C007  F02E         	movff	?___aomod+2,??_dtoa+2
  7845  0007FE  C008  F02F         	movff	?___aomod+3,??_dtoa+3
  7846  000802  C009  F030         	movff	?___aomod+4,??_dtoa+4
  7847  000806  C00A  F031         	movff	?___aomod+5,??_dtoa+5
  7848  00080A  C00B  F032         	movff	?___aomod+6,??_dtoa+6
  7849  00080E  C00C  F033         	movff	?___aomod+7,??_dtoa+7
  7850  000812  C02C  F017         	movff	??_dtoa,abs@a
  7851  000816  C02E  F018         	movff	??_dtoa+2,abs@a+1
  7852  00081A  EC1B  F014         	call	_abs	;wreg free
  7853  00081E  5017               	movf	?_abs^0,w,c
  7854  000820  0F30               	addlw	48
  7855  000822  6EDF               	movwf	indf2,c
  7856  000824                     
  7857                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  7858  000824  0636               	decf	dtoa@p^0,f,c
  7859  000826  A0D8               	btfss	status,0,c
  7860  000828  0637               	decf	(dtoa@p+1)^0,f,c
  7861  00082A                     
  7862                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  7863  00082A  0638               	decf	dtoa@w^0,f,c
  7864  00082C  A0D8               	btfss	status,0,c
  7865  00082E  0639               	decf	(dtoa@w+1)^0,f,c
  7866  000830                     
  7867                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  7868  000830  C03C  F005         	movff	dtoa@n,___aodiv@dividend
  7869  000834  C03D  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  7870  000838  C03E  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  7871  00083C  C03F  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  7872  000840  C040  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  7873  000844  C041  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  7874  000848  C042  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  7875  00084C  C043  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  7876  000850  0E0A               	movlw	10
  7877  000852  6E0D               	movwf	___aodiv@divisor^0,c
  7878  000854  0E00               	movlw	0
  7879  000856  6E0E               	movwf	(___aodiv@divisor+1)^0,c
  7880  000858  0E00               	movlw	0
  7881  00085A  6E0F               	movwf	(___aodiv@divisor+2)^0,c
  7882  00085C  0E00               	movlw	0
  7883  00085E  6E10               	movwf	(___aodiv@divisor+3)^0,c
  7884  000860  0E00               	movlw	0
  7885  000862  6E11               	movwf	(___aodiv@divisor+4)^0,c
  7886  000864  0E00               	movlw	0
  7887  000866  6E12               	movwf	(___aodiv@divisor+5)^0,c
  7888  000868  0E00               	movlw	0
  7889  00086A  6E13               	movwf	(___aodiv@divisor+6)^0,c
  7890  00086C  0E00               	movlw	0
  7891  00086E  6E14               	movwf	(___aodiv@divisor+7)^0,c
  7892  000870  EC01  F00A         	call	___aodiv	;wreg free
  7893  000874  C005  F03C         	movff	?___aodiv,dtoa@n
  7894  000878  C006  F03D         	movff	?___aodiv+1,dtoa@n+1
  7895  00087C  C007  F03E         	movff	?___aodiv+2,dtoa@n+2
  7896  000880  C008  F03F         	movff	?___aodiv+3,dtoa@n+3
  7897  000884  C009  F040         	movff	?___aodiv+4,dtoa@n+4
  7898  000888  C00A  F041         	movff	?___aodiv+5,dtoa@n+5
  7899  00088C  C00B  F042         	movff	?___aodiv+6,dtoa@n+6
  7900  000890  C00C  F043         	movff	?___aodiv+7,dtoa@n+7
  7901  000894                     l4658:
  7902                           
  7903                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7904  000894  BE45               	btfsc	(dtoa@i+1)^0,7,c
  7905  000896  EF55  F004         	goto	u4521
  7906  00089A  5045               	movf	(dtoa@i+1)^0,w,c
  7907  00089C  E108               	bnz	u4520
  7908  00089E  0444               	decf	dtoa@i^0,w,c
  7909  0008A0  A0D8               	btfss	status,0,c
  7910  0008A2  EF55  F004         	goto	u4521
  7911  0008A6  EF57  F004         	goto	u4520
  7912  0008AA                     u4521:
  7913  0008AA  EF87  F004         	goto	l4668
  7914  0008AE                     u4520:
  7915  0008AE  503C               	movf	dtoa@n^0,w,c
  7916  0008B0  103D               	iorwf	(dtoa@n+1)^0,w,c
  7917  0008B2  103E               	iorwf	(dtoa@n+2)^0,w,c
  7918  0008B4  103F               	iorwf	(dtoa@n+3)^0,w,c
  7919  0008B6  1040               	iorwf	(dtoa@n+4)^0,w,c
  7920  0008B8  1041               	iorwf	(dtoa@n+5)^0,w,c
  7921  0008BA  1042               	iorwf	(dtoa@n+6)^0,w,c
  7922  0008BC  1043               	iorwf	(dtoa@n+7)^0,w,c
  7923  0008BE  A4D8               	btfss	status,2,c
  7924  0008C0  EF64  F004         	goto	u4531
  7925  0008C4  EF66  F004         	goto	u4530
  7926  0008C8                     u4531:
  7927  0008C8  EFCE  F003         	goto	l4648
  7928  0008CC                     u4530:
  7929  0008CC  BE37               	btfsc	(dtoa@p+1)^0,7,c
  7930  0008CE  EF73  F004         	goto	u4540
  7931  0008D2  5037               	movf	(dtoa@p+1)^0,w,c
  7932  0008D4  E106               	bnz	u4541
  7933  0008D6  0436               	decf	dtoa@p^0,w,c
  7934  0008D8  B0D8               	btfsc	status,0,c
  7935  0008DA  EF71  F004         	goto	u4541
  7936  0008DE  EF73  F004         	goto	u4540
  7937  0008E2                     u4541:
  7938  0008E2  EFCE  F003         	goto	l4648
  7939  0008E6                     u4540:
  7940  0008E6  BE39               	btfsc	(dtoa@w+1)^0,7,c
  7941  0008E8  EF7E  F004         	goto	u4551
  7942  0008EC  5039               	movf	(dtoa@w+1)^0,w,c
  7943  0008EE  E108               	bnz	u4550
  7944  0008F0  0438               	decf	dtoa@w^0,w,c
  7945  0008F2  A0D8               	btfss	status,0,c
  7946  0008F4  EF7E  F004         	goto	u4551
  7947  0008F8  EF80  F004         	goto	u4550
  7948  0008FC                     u4551:
  7949  0008FC  EF87  F004         	goto	l4668
  7950  000900                     u4550:
  7951  000900  B256               	btfsc	_flags^0,1,c
  7952  000902  EF85  F004         	goto	u4561
  7953  000906  EF87  F004         	goto	u4560
  7954  00090A                     u4561:
  7955  00090A  EFCE  F003         	goto	l4648
  7956  00090E                     u4560:
  7957  00090E                     l4668:
  7958                           
  7959                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  7960  00090E  503A               	movf	dtoa@s^0,w,c
  7961  000910  103B               	iorwf	(dtoa@s+1)^0,w,c
  7962  000912  A4D8               	btfss	status,2,c
  7963  000914  EF8E  F004         	goto	u4571
  7964  000918  EF90  F004         	goto	u4570
  7965  00091C                     u4571:
  7966  00091C  EF97  F004         	goto	l4672
  7967  000920                     u4570:
  7968  000920  A456               	btfss	_flags^0,2,c
  7969  000922  EF95  F004         	goto	u4581
  7970  000926  EF97  F004         	goto	u4580
  7971  00092A                     u4581:
  7972  00092A  EFB5  F004         	goto	l4682
  7973  00092E                     u4580:
  7974  00092E                     l4672:
  7975                           
  7976                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  7977  00092E  0644               	decf	dtoa@i^0,f,c
  7978  000930  A0D8               	btfss	status,0,c
  7979  000932  0645               	decf	(dtoa@i+1)^0,f,c
  7980  000934                     
  7981                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  7982  000934  503A               	movf	dtoa@s^0,w,c
  7983  000936  103B               	iorwf	(dtoa@s+1)^0,w,c
  7984  000938  A4D8               	btfss	status,2,c
  7985  00093A  EFA1  F004         	goto	u4591
  7986  00093E  EFA3  F004         	goto	u4590
  7987  000942                     u4591:
  7988  000942  EFA9  F004         	goto	l4678
  7989  000946                     u4590:
  7990  000946  0E00               	movlw	0
  7991  000948  6E35               	movwf	(_dtoa$1307+1)^0,c
  7992  00094A  0E2B               	movlw	43
  7993  00094C  6E34               	movwf	_dtoa$1307^0,c
  7994  00094E  EFAD  F004         	goto	l4680
  7995  000952                     l4678:
  7996  000952  0E00               	movlw	0
  7997  000954  6E35               	movwf	(_dtoa$1307+1)^0,c
  7998  000956  0E2D               	movlw	45
  7999  000958  6E34               	movwf	_dtoa$1307^0,c
  8000  00095A                     l4680:
  8001  00095A  0E84               	movlw	low _dbuf
  8002  00095C  2444               	addwf	dtoa@i^0,w,c
  8003  00095E  6ED9               	movwf	fsr2l,c
  8004  000960  0E01               	movlw	high _dbuf
  8005  000962  2045               	addwfc	(dtoa@i+1)^0,w,c
  8006  000964  6EDA               	movwf	fsr2h,c
  8007  000966  C034  FFDF         	movff	_dtoa$1307,indf2
  8008  00096A                     l4682:
  8009                           
  8010                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  8011  00096A  C022  F017         	movff	dtoa@fp,pad@fp
  8012  00096E  C023  F018         	movff	dtoa@fp+1,pad@fp+1
  8013  000972  0E84               	movlw	low _dbuf
  8014  000974  2444               	addwf	dtoa@i^0,w,c
  8015  000976  6E19               	movwf	pad@buf^0,c
  8016  000978  0E01               	movlw	high _dbuf
  8017  00097A  2045               	addwfc	(dtoa@i+1)^0,w,c
  8018  00097C  6E1A               	movwf	(pad@buf+1)^0,c
  8019  00097E  C038  F01B         	movff	dtoa@w,pad@p
  8020  000982  C039  F01C         	movff	dtoa@w+1,pad@p+1
  8021  000986  EC03  F00E         	call	_pad	;wreg free
  8022  00098A  C017  F022         	movff	?_pad,?_dtoa
  8023  00098E  C018  F023         	movff	?_pad+1,?_dtoa+1
  8024  000992  0012               	return		;funcret
  8025  000994                     __end_of_dtoa:
  8026                           	opt callstack 0
  8027                           
  8028 ;; *************** function _pad *****************
  8029 ;; Defined at:
  8030 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8031 ;; Parameters:    Size  Location     Type
  8032 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  8033 ;;		 -> NULL(0), 
  8034 ;;  buf             2   24[COMRAM] PTR unsigned char 
  8035 ;;		 -> dbuf(32), 
  8036 ;;  p               2   26[COMRAM] int 
  8037 ;; Auto vars:     Size  Location     Type
  8038 ;;  w               2   31[COMRAM] int 
  8039 ;;  i               2   29[COMRAM] int 
  8040 ;; Return value:  Size  Location     Type
  8041 ;;                  2   22[COMRAM] int 
  8042 ;; Registers used:
  8043 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8044 ;; Tracked objects:
  8045 ;;		On entry : 0/0
  8046 ;;		On exit  : 0/0
  8047 ;;		Unchanged: 0/0
  8048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8049 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8050 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8051 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8052 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8053 ;;Total ram usage:       11 bytes
  8054 ;; Hardware stack levels used:    1
  8055 ;; Hardware stack levels required when called:    8
  8056 ;; This function calls:
  8057 ;;		_fputc
  8058 ;;		_fputs
  8059 ;;		_strlen
  8060 ;; This function is called by:
  8061 ;;		_dtoa
  8062 ;;		_utoa
  8063 ;;		_xtoa
  8064 ;; This function uses a non-reentrant model
  8065 ;;
  8066                           
  8067                           	psect	text47
  8068  001C06                     __ptext47:
  8069                           	opt callstack 0
  8070  001C06                     _pad:
  8071                           	opt callstack 18
  8072  001C06                     
  8073                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  8074  001C06  A056               	btfss	_flags^0,0,c
  8075  001C08  EF08  F00E         	goto	u4091
  8076  001C0C  EF0A  F00E         	goto	u4090
  8077  001C10                     u4091:
  8078  001C10  EF14  F00E         	goto	l4444
  8079  001C14                     u4090:
  8080  001C14                     
  8081                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  8082  001C14  C019  F010         	movff	pad@buf,fputs@s
  8083  001C18  C01A  F011         	movff	pad@buf+1,fputs@s+1
  8084  001C1C  C017  F012         	movff	pad@fp,fputs@fp
  8085  001C20  C018  F013         	movff	pad@fp+1,fputs@fp+1
  8086  001C24  EC97  F013         	call	_fputs	;wreg free
  8087  001C28                     l4444:
  8088                           
  8089                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  8090  001C28  BE1C               	btfsc	(pad@p+1)^0,7,c
  8091  001C2A  EF19  F00E         	goto	u4101
  8092  001C2E  EF1B  F00E         	goto	u4100
  8093  001C32                     u4101:
  8094  001C32  EF21  F00E         	goto	l4448
  8095  001C36                     u4100:
  8096  001C36  C01B  F020         	movff	pad@p,pad@w
  8097  001C3A  C01C  F021         	movff	pad@p+1,pad@w+1
  8098  001C3E  EF25  F00E         	goto	l752
  8099  001C42                     l4448:
  8100  001C42  0E00               	movlw	0
  8101  001C44  6E21               	movwf	(pad@w+1)^0,c
  8102  001C46  0E00               	movlw	0
  8103  001C48  6E20               	movwf	pad@w^0,c
  8104  001C4A                     l752:
  8105                           
  8106                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  8107  001C4A  0E00               	movlw	0
  8108  001C4C  6E1F               	movwf	(pad@i+1)^0,c
  8109  001C4E  0E00               	movlw	0
  8110  001C50  6E1E               	movwf	pad@i^0,c
  8111                           
  8112                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  8113  001C52  EF37  F00E         	goto	l4454
  8114  001C56                     l4450:
  8115                           
  8116                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  8117  001C56  0E00               	movlw	0
  8118  001C58  6E08               	movwf	(fputc@c+1)^0,c
  8119  001C5A  0E20               	movlw	32
  8120  001C5C  6E07               	movwf	fputc@c^0,c
  8121  001C5E  C017  F009         	movff	pad@fp,fputc@fp
  8122  001C62  C018  F00A         	movff	pad@fp+1,fputc@fp+1
  8123  001C66  ECC5  F00F         	call	_fputc	;wreg free
  8124  001C6A                     
  8125                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  8126  001C6A  4A1E               	infsnz	pad@i^0,f,c
  8127  001C6C  2A1F               	incf	(pad@i+1)^0,f,c
  8128  001C6E                     l4454:
  8129                           
  8130                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  8131  001C6E  5020               	movf	pad@w^0,w,c
  8132  001C70  5C1E               	subwf	pad@i^0,w,c
  8133  001C72  501F               	movf	(pad@i+1)^0,w,c
  8134  001C74  0A80               	xorlw	128
  8135  001C76  6E1D               	movwf	??_pad^0,c
  8136  001C78  5021               	movf	(pad@w+1)^0,w,c
  8137  001C7A  0A80               	xorlw	128
  8138  001C7C  581D               	subwfb	??_pad^0,w,c
  8139  001C7E  A0D8               	btfss	status,0,c
  8140  001C80  EF44  F00E         	goto	u4111
  8141  001C84  EF46  F00E         	goto	u4110
  8142  001C88                     u4111:
  8143  001C88  EF2B  F00E         	goto	l4450
  8144  001C8C                     u4110:
  8145  001C8C                     
  8146                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  8147  001C8C  B056               	btfsc	_flags^0,0,c
  8148  001C8E  EF4B  F00E         	goto	u4121
  8149  001C92  EF4D  F00E         	goto	u4120
  8150  001C96                     u4121:
  8151  001C96  EF57  F00E         	goto	l4458
  8152  001C9A                     u4120:
  8153  001C9A                     
  8154                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  8155  001C9A  C019  F010         	movff	pad@buf,fputs@s
  8156  001C9E  C01A  F011         	movff	pad@buf+1,fputs@s+1
  8157  001CA2  C017  F012         	movff	pad@fp,fputs@fp
  8158  001CA6  C018  F013         	movff	pad@fp+1,fputs@fp+1
  8159  001CAA  EC97  F013         	call	_fputs	;wreg free
  8160  001CAE                     l4458:
  8161                           
  8162                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  8163  001CAE  C019  F005         	movff	pad@buf,strlen@s
  8164  001CB2  C01A  F006         	movff	pad@buf+1,strlen@s+1
  8165  001CB6  ECDA  F012         	call	_strlen	;wreg free
  8166  001CBA  5020               	movf	pad@w^0,w,c
  8167  001CBC  2405               	addwf	?_strlen^0,w,c
  8168  001CBE  6E17               	movwf	?_pad^0,c
  8169  001CC0  5021               	movf	(pad@w+1)^0,w,c
  8170  001CC2  2006               	addwfc	(?_strlen+1)^0,w,c
  8171  001CC4  6E18               	movwf	(?_pad+1)^0,c
  8172  001CC6  0012               	return		;funcret
  8173  001CC8                     __end_of_pad:
  8174                           	opt callstack 0
  8175                           
  8176 ;; *************** function _strlen *****************
  8177 ;; Defined at:
  8178 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  8179 ;; Parameters:    Size  Location     Type
  8180 ;;  s               2    4[COMRAM] PTR const unsigned char 
  8181 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), STR_5(9), 
  8182 ;;		 -> STR_4(12), 
  8183 ;; Auto vars:     Size  Location     Type
  8184 ;;  a               2    6[COMRAM] PTR const unsigned char 
  8185 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), STR_5(9), 
  8186 ;;		 -> STR_4(12), 
  8187 ;; Return value:  Size  Location     Type
  8188 ;;                  2    4[COMRAM] unsigned int 
  8189 ;; Registers used:
  8190 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  8191 ;; Tracked objects:
  8192 ;;		On entry : 0/0
  8193 ;;		On exit  : 0/0
  8194 ;;		Unchanged: 0/0
  8195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8196 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8197 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8199 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8200 ;;Total ram usage:        4 bytes
  8201 ;; Hardware stack levels used:    1
  8202 ;; Hardware stack levels required when called:    4
  8203 ;; This function calls:
  8204 ;;		Nothing
  8205 ;; This function is called by:
  8206 ;;		_pad
  8207 ;;		_stoa
  8208 ;; This function uses a non-reentrant model
  8209 ;;
  8210                           
  8211                           	psect	text48
  8212  0025B4                     __ptext48:
  8213                           	opt callstack 0
  8214  0025B4                     _strlen:
  8215                           	opt callstack 21
  8216  0025B4  C005  F007         	movff	strlen@s,strlen@a
  8217  0025B8  C006  F008         	movff	strlen@s+1,strlen@a+1
  8218  0025BC  EFE2  F012         	goto	l4430
  8219  0025C0                     l4428:
  8220  0025C0  4A05               	infsnz	strlen@s^0,f,c
  8221  0025C2  2A06               	incf	(strlen@s+1)^0,f,c
  8222  0025C4                     l4430:
  8223  0025C4  C005  FFF6         	movff	strlen@s,tblptrl
  8224  0025C8  C006  FFF7         	movff	strlen@s+1,tblptrh
  8225  0025CC  0E00               	movlw	low (__mediumconst shr (0+16))
  8226  0025CE  6EF8               	movwf	tblptru,c
  8227  0025D0  0E0E               	movlw	(high __ramtop+-1)
  8228  0025D2  64F7               	cpfsgt	tblptrh,c
  8229  0025D4  D003               	bra	u4057
  8230  0025D6  0008               	tblrd		*
  8231  0025D8  50F5               	movf	tablat,w,c
  8232  0025DA  D005               	bra	u4050
  8233  0025DC                     u4057:
  8234  0025DC  CFF6 FFE9          	movff	tblptrl,fsr0l
  8235  0025E0  CFF7 FFEA          	movff	tblptrh,fsr0h
  8236  0025E4  50EF               	movf	indf0,w,c
  8237  0025E6                     u4050:
  8238  0025E6  0900               	iorlw	0
  8239  0025E8  A4D8               	btfss	status,2,c
  8240  0025EA  EFF9  F012         	goto	u4061
  8241  0025EE  EFFB  F012         	goto	u4060
  8242  0025F2                     u4061:
  8243  0025F2  EFE0  F012         	goto	l4428
  8244  0025F6                     u4060:
  8245  0025F6  5007               	movf	strlen@a^0,w,c
  8246  0025F8  5C05               	subwf	strlen@s^0,w,c
  8247  0025FA  6E05               	movwf	?_strlen^0,c
  8248  0025FC  5008               	movf	(strlen@a+1)^0,w,c
  8249  0025FE  5806               	subwfb	(strlen@s+1)^0,w,c
  8250  002600  6E06               	movwf	(?_strlen+1)^0,c
  8251  002602  0012               	return		;funcret
  8252  002604                     __end_of_strlen:
  8253                           	opt callstack 0
  8254                           
  8255 ;; *************** function _fputs *****************
  8256 ;; Defined at:
  8257 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  8258 ;; Parameters:    Size  Location     Type
  8259 ;;  s               2   15[COMRAM] PTR const unsigned char 
  8260 ;;		 -> dbuf(32), 
  8261 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  8262 ;;		 -> NULL(0), 
  8263 ;; Auto vars:     Size  Location     Type
  8264 ;;  i               2   20[COMRAM] int 
  8265 ;;  c               1   19[COMRAM] unsigned char 
  8266 ;; Return value:  Size  Location     Type
  8267 ;;                  2   15[COMRAM] int 
  8268 ;; Registers used:
  8269 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8270 ;; Tracked objects:
  8271 ;;		On entry : 0/0
  8272 ;;		On exit  : 0/0
  8273 ;;		Unchanged: 0/0
  8274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8275 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8276 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8278 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8279 ;;Total ram usage:        7 bytes
  8280 ;; Hardware stack levels used:    1
  8281 ;; Hardware stack levels required when called:    7
  8282 ;; This function calls:
  8283 ;;		_fputc
  8284 ;; This function is called by:
  8285 ;;		_pad
  8286 ;; This function uses a non-reentrant model
  8287 ;;
  8288                           
  8289                           	psect	text49
  8290  00272E                     __ptext49:
  8291                           	opt callstack 0
  8292  00272E                     _fputs:
  8293                           	opt callstack 18
  8294  00272E  0E00               	movlw	0
  8295  002730  6E16               	movwf	(fputs@i+1)^0,c
  8296  002732  0E00               	movlw	0
  8297  002734  6E15               	movwf	fputs@i^0,c
  8298  002736  EFA8  F013         	goto	l4424
  8299  00273A                     l4420:
  8300  00273A  C014  F007         	movff	fputs@c,fputc@c
  8301  00273E  6A08               	clrf	(fputc@c+1)^0,c
  8302  002740  C012  F009         	movff	fputs@fp,fputc@fp
  8303  002744  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
  8304  002748  ECC5  F00F         	call	_fputc	;wreg free
  8305  00274C  4A15               	infsnz	fputs@i^0,f,c
  8306  00274E  2A16               	incf	(fputs@i+1)^0,f,c
  8307  002750                     l4424:
  8308  002750  5015               	movf	fputs@i^0,w,c
  8309  002752  2410               	addwf	fputs@s^0,w,c
  8310  002754  6ED9               	movwf	fsr2l,c
  8311  002756  5016               	movf	(fputs@i+1)^0,w,c
  8312  002758  2011               	addwfc	(fputs@s+1)^0,w,c
  8313  00275A  6EDA               	movwf	fsr2h,c
  8314  00275C  50DF               	movf	indf2,w,c
  8315  00275E  6E14               	movwf	fputs@c^0,c
  8316  002760  5014               	movf	fputs@c^0,w,c
  8317  002762  A4D8               	btfss	status,2,c
  8318  002764  EFB6  F013         	goto	u4041
  8319  002768  EFB8  F013         	goto	u4040
  8320  00276C                     u4041:
  8321  00276C  EF9D  F013         	goto	l4420
  8322  002770                     u4040:
  8323  002770  0012               	return		;funcret
  8324  002772                     __end_of_fputs:
  8325                           	opt callstack 0
  8326                           
  8327 ;; *************** function _fputc *****************
  8328 ;; Defined at:
  8329 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  8330 ;; Parameters:    Size  Location     Type
  8331 ;;  c               2    6[COMRAM] int 
  8332 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
  8333 ;;		 -> NULL(0), 
  8334 ;; Auto vars:     Size  Location     Type
  8335 ;;		None
  8336 ;; Return value:  Size  Location     Type
  8337 ;;                  2    6[COMRAM] int 
  8338 ;; Registers used:
  8339 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8340 ;; Tracked objects:
  8341 ;;		On entry : 0/0
  8342 ;;		On exit  : 0/0
  8343 ;;		Unchanged: 0/0
  8344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8345 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8347 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8348 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8349 ;;Total ram usage:        9 bytes
  8350 ;; Hardware stack levels used:    1
  8351 ;; Hardware stack levels required when called:    6
  8352 ;; This function calls:
  8353 ;;		_putch
  8354 ;; This function is called by:
  8355 ;;		_pad
  8356 ;;		_stoa
  8357 ;;		_vfpfcnvrt
  8358 ;;		_fputs
  8359 ;; This function uses a non-reentrant model
  8360 ;;
  8361                           
  8362                           	psect	text50
  8363  001F8A                     __ptext50:
  8364                           	opt callstack 0
  8365  001F8A                     _fputc:
  8366                           	opt callstack 18
  8367  001F8A  5009               	movf	fputc@fp^0,w,c
  8368  001F8C  100A               	iorwf	(fputc@fp+1)^0,w,c
  8369  001F8E  B4D8               	btfsc	status,2,c
  8370  001F90  EFCC  F00F         	goto	u4001
  8371  001F94  EFCE  F00F         	goto	u4000
  8372  001F98                     u4001:
  8373  001F98  EFD7  F00F         	goto	l4408
  8374  001F9C                     u4000:
  8375  001F9C  5009               	movf	fputc@fp^0,w,c
  8376  001F9E  100A               	iorwf	(fputc@fp+1)^0,w,c
  8377  001FA0  A4D8               	btfss	status,2,c
  8378  001FA2  EFD5  F00F         	goto	u4011
  8379  001FA6  EFD7  F00F         	goto	u4010
  8380  001FAA                     u4011:
  8381  001FAA  EFDC  F00F         	goto	l4410
  8382  001FAE                     u4010:
  8383  001FAE                     l4408:
  8384  001FAE  5007               	movf	fputc@c^0,w,c
  8385  001FB0  EC82  F015         	call	_putch
  8386  001FB4  EF0F  F010         	goto	l1642
  8387  001FB8                     l4410:
  8388  001FB8  EE20 F004          	lfsr	2,4
  8389  001FBC  5009               	movf	fputc@fp^0,w,c
  8390  001FBE  26D9               	addwf	fsr2l,f,c
  8391  001FC0  500A               	movf	(fputc@fp+1)^0,w,c
  8392  001FC2  22DA               	addwfc	fsr2h,f,c
  8393  001FC4  50DE               	movf	postinc2,w,c
  8394  001FC6  10DE               	iorwf	postinc2,w,c
  8395  001FC8  B4D8               	btfsc	status,2,c
  8396  001FCA  EFE9  F00F         	goto	u4021
  8397  001FCE  EFEB  F00F         	goto	u4020
  8398  001FD2                     u4021:
  8399  001FD2  EF06  F010         	goto	l4414
  8400  001FD6                     u4020:
  8401  001FD6  EE20 F004          	lfsr	2,4
  8402  001FDA  5009               	movf	fputc@fp^0,w,c
  8403  001FDC  26D9               	addwf	fsr2l,f,c
  8404  001FDE  500A               	movf	(fputc@fp+1)^0,w,c
  8405  001FE0  22DA               	addwfc	fsr2h,f,c
  8406  001FE2  EE10 F002          	lfsr	1,2
  8407  001FE6  5009               	movf	fputc@fp^0,w,c
  8408  001FE8  26E1               	addwf	fsr1l,f,c
  8409  001FEA  500A               	movf	(fputc@fp+1)^0,w,c
  8410  001FEC  22E2               	addwfc	fsr1h,f,c
  8411  001FEE  50DE               	movf	postinc2,w,c
  8412  001FF0  5CE6               	subwf	postinc1,w,c
  8413  001FF2  50E6               	movf	postinc1,w,c
  8414  001FF4  0A80               	xorlw	128
  8415  001FF6  6E0F               	movwf	(??_fputc+4)^0,c
  8416  001FF8  50DE               	movf	postinc2,w,c
  8417  001FFA  0A80               	xorlw	128
  8418  001FFC  580F               	subwfb	(??_fputc+4)^0,w,c
  8419  001FFE  B0D8               	btfsc	status,0,c
  8420  002000  EF04  F010         	goto	u4031
  8421  002004  EF06  F010         	goto	u4030
  8422  002008                     u4031:
  8423  002008  EF0F  F010         	goto	l1642
  8424  00200C                     u4030:
  8425  00200C                     l4414:
  8426  00200C  EE20 F002          	lfsr	2,2
  8427  002010  5009               	movf	fputc@fp^0,w,c
  8428  002012  26D9               	addwf	fsr2l,f,c
  8429  002014  500A               	movf	(fputc@fp+1)^0,w,c
  8430  002016  22DA               	addwfc	fsr2h,f,c
  8431  002018  2ADE               	incf	postinc2,f,c
  8432  00201A  0E00               	movlw	0
  8433  00201C  22DD               	addwfc	postdec2,f,c
  8434  00201E                     l1642:
  8435  00201E  0012               	return		;funcret
  8436  002020                     __end_of_fputc:
  8437                           	opt callstack 0
  8438                           
  8439 ;; *************** function _putch *****************
  8440 ;; Defined at:
  8441 ;;		line 201 in file "mcc_generated_files/eusart2.c"
  8442 ;; Parameters:    Size  Location     Type
  8443 ;;  txData          1    wreg     unsigned char 
  8444 ;; Auto vars:     Size  Location     Type
  8445 ;;  txData          1    5[COMRAM] unsigned char 
  8446 ;; Return value:  Size  Location     Type
  8447 ;;                  1    wreg      void 
  8448 ;; Registers used:
  8449 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8450 ;; Tracked objects:
  8451 ;;		On entry : 0/0
  8452 ;;		On exit  : 0/0
  8453 ;;		Unchanged: 0/0
  8454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8456 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8458 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8459 ;;Total ram usage:        1 bytes
  8460 ;; Hardware stack levels used:    1
  8461 ;; Hardware stack levels required when called:    5
  8462 ;; This function calls:
  8463 ;;		_EUSART2_Write
  8464 ;; This function is called by:
  8465 ;;		_fputc
  8466 ;; This function uses a non-reentrant model
  8467 ;;
  8468                           
  8469                           	psect	text51
  8470  002B04                     __ptext51:
  8471                           	opt callstack 0
  8472  002B04                     _putch:
  8473                           	opt callstack 18
  8474                           
  8475                           ;incstack = 0
  8476                           ;putch@txData stored from wreg
  8477  002B04  6E06               	movwf	putch@txData^0,c
  8478  002B06                     
  8479                           ;mcc_generated_files/eusart2.c: 201: void putch(char txData);mcc_generated_files/eusart2
      +                          .c: 202: {;mcc_generated_files/eusart2.c: 203:     EUSART2_Write(txData);
  8480  002B06  5006               	movf	putch@txData^0,w,c
  8481  002B08  EC56  F012         	call	_EUSART2_Write
  8482  002B0C  0012               	return		;funcret
  8483  002B0E                     __end_of_putch:
  8484                           	opt callstack 0
  8485                           
  8486 ;; *************** function _EUSART2_Write *****************
  8487 ;; Defined at:
  8488 ;;		line 173 in file "mcc_generated_files/eusart2.c"
  8489 ;; Parameters:    Size  Location     Type
  8490 ;;  txData          1    wreg     unsigned char 
  8491 ;; Auto vars:     Size  Location     Type
  8492 ;;  txData          1    4[COMRAM] unsigned char 
  8493 ;; Return value:  Size  Location     Type
  8494 ;;                  1    wreg      void 
  8495 ;; Registers used:
  8496 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8497 ;; Tracked objects:
  8498 ;;		On entry : 0/0
  8499 ;;		On exit  : 0/0
  8500 ;;		Unchanged: 0/0
  8501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8503 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8505 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8506 ;;Total ram usage:        1 bytes
  8507 ;; Hardware stack levels used:    1
  8508 ;; Hardware stack levels required when called:    4
  8509 ;; This function calls:
  8510 ;;		Nothing
  8511 ;; This function is called by:
  8512 ;;		_putch
  8513 ;; This function uses a non-reentrant model
  8514 ;;
  8515                           
  8516                           	psect	text52
  8517  0024AC                     __ptext52:
  8518                           	opt callstack 0
  8519  0024AC                     _EUSART2_Write:
  8520                           	opt callstack 18
  8521                           
  8522                           ;incstack = 0
  8523                           ;EUSART2_Write@txData stored from wreg
  8524  0024AC  6E05               	movwf	EUSART2_Write@txData^0,c
  8525  0024AE                     l4386:
  8526                           
  8527                           ;mcc_generated_files/eusart2.c: 175:     while(0 == eusart2TxBufferRemaining)
  8528  0024AE  0100               	movlb	0	; () banked
  8529  0024B0  51F2               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
  8530  0024B2  B4D8               	btfsc	status,2,c
  8531  0024B4  EF5E  F012         	goto	u3971
  8532  0024B8  EF60  F012         	goto	u3970
  8533  0024BC                     u3971:
  8534  0024BC  EF57  F012         	goto	l4386
  8535  0024C0                     u3970:
  8536  0024C0                     
  8537                           ; BSR set to: 0
  8538                           ;mcc_generated_files/eusart2.c: 179:     if(0 == PIE3bits.TX2IE)
  8539  0024C0  010E               	movlb	14	; () banked
  8540  0024C2  BDC5               	btfsc	197,6,b	;volatile
  8541  0024C4  EF66  F012         	goto	u3981
  8542  0024C8  EF68  F012         	goto	u3980
  8543  0024CC                     u3981:
  8544  0024CC  EF6C  F012         	goto	l321
  8545  0024D0                     u3980:
  8546  0024D0                     
  8547                           ; BSR set to: 14
  8548                           ;mcc_generated_files/eusart2.c: 180:     {;mcc_generated_files/eusart2.c: 181:         T
      +                          X2REG = txData;
  8549  0024D0  C005  FE9A         	movff	EUSART2_Write@txData,3738	;volatile
  8550                           
  8551                           ;mcc_generated_files/eusart2.c: 182:     }
  8552  0024D4  EF82  F012         	goto	l4400
  8553  0024D8                     l321:
  8554                           
  8555                           ; BSR set to: 14
  8556                           ;mcc_generated_files/eusart2.c: 184:     {;mcc_generated_files/eusart2.c: 185:         P
      +                          IE3bits.TX2IE = 0;
  8557  0024D8  9DC5               	bcf	197,6,b	;volatile
  8558  0024DA                     
  8559                           ; BSR set to: 14
  8560                           ;mcc_generated_files/eusart2.c: 186:         eusart2TxBuffer[eusart2TxHead++] = txData;
  8561  0024DA  0E80               	movlw	low _eusart2TxBuffer
  8562  0024DC  0100               	movlb	0	; () banked
  8563  0024DE  25A4               	addwf	_eusart2TxHead& (0+255),w,b	;volatile
  8564  0024E0  6ED9               	movwf	fsr2l,c
  8565  0024E2  6ADA               	clrf	fsr2h,c
  8566  0024E4  0E00               	movlw	high _eusart2TxBuffer
  8567  0024E6  22DA               	addwfc	fsr2h,f,c
  8568  0024E8  C005  FFDF         	movff	EUSART2_Write@txData,indf2
  8569  0024EC                     
  8570                           ; BSR set to: 0
  8571  0024EC  2BA4               	incf	_eusart2TxHead& (0+255),f,b	;volatile
  8572  0024EE                     
  8573                           ; BSR set to: 0
  8574                           ;mcc_generated_files/eusart2.c: 187:         if(sizeof(eusart2TxBuffer) <= eusart2TxHead
      +                          )
  8575  0024EE  0E07               	movlw	7
  8576  0024F0  65A4               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
  8577  0024F2  EF7D  F012         	goto	u3991
  8578  0024F6  EF7F  F012         	goto	u3990
  8579  0024FA                     u3991:
  8580  0024FA  EF81  F012         	goto	l4398
  8581  0024FE                     u3990:
  8582  0024FE                     
  8583                           ; BSR set to: 0
  8584                           ;mcc_generated_files/eusart2.c: 188:         {;mcc_generated_files/eusart2.c: 189:      
      +                                 eusart2TxHead = 0;
  8585  0024FE  0E00               	movlw	0
  8586  002500  6FA4               	movwf	_eusart2TxHead& (0+255),b	;volatile
  8587  002502                     l4398:
  8588                           
  8589                           ; BSR set to: 0
  8590                           ;mcc_generated_files/eusart2.c: 191:         eusart2TxBufferRemaining--;
  8591  002502  07F2               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
  8592  002504                     l4400:
  8593                           
  8594                           ;mcc_generated_files/eusart2.c: 193:     PIE3bits.TX2IE = 1;
  8595  002504  010E               	movlb	14	; () banked
  8596  002506  8DC5               	bsf	197,6,b	;volatile
  8597  002508                     
  8598                           ; BSR set to: 14
  8599  002508  0012               	return		;funcret
  8600  00250A                     __end_of_EUSART2_Write:
  8601                           	opt callstack 0
  8602                           
  8603 ;; *************** function _abs *****************
  8604 ;; Defined at:
  8605 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  8606 ;; Parameters:    Size  Location     Type
  8607 ;;  a               2   22[COMRAM] int 
  8608 ;; Auto vars:     Size  Location     Type
  8609 ;;		None
  8610 ;; Return value:  Size  Location     Type
  8611 ;;                  2   22[COMRAM] int 
  8612 ;; Registers used:
  8613 ;;		wreg, status,2, status,0
  8614 ;; Tracked objects:
  8615 ;;		On entry : 0/0
  8616 ;;		On exit  : 0/0
  8617 ;;		Unchanged: 0/0
  8618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8619 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8621 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8622 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8623 ;;Total ram usage:        4 bytes
  8624 ;; Hardware stack levels used:    1
  8625 ;; Hardware stack levels required when called:    4
  8626 ;; This function calls:
  8627 ;;		Nothing
  8628 ;; This function is called by:
  8629 ;;		_dtoa
  8630 ;; This function uses a non-reentrant model
  8631 ;;
  8632                           
  8633                           	psect	text53
  8634  002836                     __ptext53:
  8635                           	opt callstack 0
  8636  002836                     _abs:
  8637                           	opt callstack 22
  8638  002836  BE18               	btfsc	(abs@a+1)^0,7,c
  8639  002838  EF28  F014         	goto	u4130
  8640  00283C  5018               	movf	(abs@a+1)^0,w,c
  8641  00283E  E106               	bnz	u4131
  8642  002840  0417               	decf	abs@a^0,w,c
  8643  002842  B0D8               	btfsc	status,0,c
  8644  002844  EF26  F014         	goto	u4131
  8645  002848  EF28  F014         	goto	u4130
  8646  00284C                     u4131:
  8647  00284C  EF36  F014         	goto	l1570
  8648  002850                     u4130:
  8649  002850  C017  F019         	movff	abs@a,??_abs
  8650  002854  C018  F01A         	movff	abs@a+1,??_abs+1
  8651  002858  1E19               	comf	??_abs^0,f,c
  8652  00285A  1E1A               	comf	(??_abs+1)^0,f,c
  8653  00285C  4A19               	infsnz	??_abs^0,f,c
  8654  00285E  2A1A               	incf	(??_abs+1)^0,f,c
  8655  002860  C019  F017         	movff	??_abs,?_abs
  8656  002864  C01A  F018         	movff	??_abs+1,?_abs+1
  8657  002868  EF3A  F014         	goto	l1573
  8658  00286C                     l1570:
  8659  00286C  C017  F017         	movff	abs@a,?_abs
  8660  002870  C018  F018         	movff	abs@a+1,?_abs+1
  8661  002874                     l1573:
  8662  002874  0012               	return		;funcret
  8663  002876                     __end_of_abs:
  8664                           	opt callstack 0
  8665                           
  8666 ;; *************** function ___aomod *****************
  8667 ;; Defined at:
  8668 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  8669 ;; Parameters:    Size  Location     Type
  8670 ;;  dividend        8    4[COMRAM] long long 
  8671 ;;  divisor         8   12[COMRAM] long long 
  8672 ;; Auto vars:     Size  Location     Type
  8673 ;;  sign            1   21[COMRAM] unsigned char 
  8674 ;;  counter         1   20[COMRAM] unsigned char 
  8675 ;; Return value:  Size  Location     Type
  8676 ;;                  8    4[COMRAM] long long 
  8677 ;; Registers used:
  8678 ;;		wreg, status,2, status,0
  8679 ;; Tracked objects:
  8680 ;;		On entry : 0/0
  8681 ;;		On exit  : 0/0
  8682 ;;		Unchanged: 0/0
  8683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8684 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8685 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8687 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8688 ;;Total ram usage:       18 bytes
  8689 ;; Hardware stack levels used:    1
  8690 ;; Hardware stack levels required when called:    4
  8691 ;; This function calls:
  8692 ;;		Nothing
  8693 ;; This function is called by:
  8694 ;;		_dtoa
  8695 ;; This function uses a non-reentrant model
  8696 ;;
  8697                           
  8698                           	psect	text54
  8699  00158A                     __ptext54:
  8700                           	opt callstack 0
  8701  00158A                     ___aomod:
  8702                           	opt callstack 22
  8703  00158A  0E00               	movlw	0
  8704  00158C  6E16               	movwf	___aomod@sign^0,c
  8705  00158E  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
  8706  001590  EFCE  F00A         	goto	u4300
  8707  001594  EFCC  F00A         	goto	u4301
  8708  001598                     u4301:
  8709  001598  EFE0  F00A         	goto	l4546
  8710  00159C                     u4300:
  8711  00159C  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  8712  00159E  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  8713  0015A0  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  8714  0015A2  1E09               	comf	(___aomod@dividend+4)^0,f,c
  8715  0015A4  1E08               	comf	(___aomod@dividend+3)^0,f,c
  8716  0015A6  1E07               	comf	(___aomod@dividend+2)^0,f,c
  8717  0015A8  1E06               	comf	(___aomod@dividend+1)^0,f,c
  8718  0015AA  6C05               	negf	___aomod@dividend^0,c
  8719  0015AC  0E00               	movlw	0
  8720  0015AE  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  8721  0015B0  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  8722  0015B2  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  8723  0015B4  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  8724  0015B6  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  8725  0015B8  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  8726  0015BA  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  8727  0015BC  0E01               	movlw	1
  8728  0015BE  6E16               	movwf	___aomod@sign^0,c
  8729  0015C0                     l4546:
  8730  0015C0  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
  8731  0015C2  EFE7  F00A         	goto	u4310
  8732  0015C6  EFE5  F00A         	goto	u4311
  8733  0015CA                     u4311:
  8734  0015CA  EFF7  F00A         	goto	l4550
  8735  0015CE                     u4310:
  8736  0015CE  1E14               	comf	(___aomod@divisor+7)^0,f,c
  8737  0015D0  1E13               	comf	(___aomod@divisor+6)^0,f,c
  8738  0015D2  1E12               	comf	(___aomod@divisor+5)^0,f,c
  8739  0015D4  1E11               	comf	(___aomod@divisor+4)^0,f,c
  8740  0015D6  1E10               	comf	(___aomod@divisor+3)^0,f,c
  8741  0015D8  1E0F               	comf	(___aomod@divisor+2)^0,f,c
  8742  0015DA  1E0E               	comf	(___aomod@divisor+1)^0,f,c
  8743  0015DC  6C0D               	negf	___aomod@divisor^0,c
  8744  0015DE  0E00               	movlw	0
  8745  0015E0  220E               	addwfc	(___aomod@divisor+1)^0,f,c
  8746  0015E2  220F               	addwfc	(___aomod@divisor+2)^0,f,c
  8747  0015E4  2210               	addwfc	(___aomod@divisor+3)^0,f,c
  8748  0015E6  2211               	addwfc	(___aomod@divisor+4)^0,f,c
  8749  0015E8  2212               	addwfc	(___aomod@divisor+5)^0,f,c
  8750  0015EA  2213               	addwfc	(___aomod@divisor+6)^0,f,c
  8751  0015EC  2214               	addwfc	(___aomod@divisor+7)^0,f,c
  8752  0015EE                     l4550:
  8753  0015EE  500D               	movf	___aomod@divisor^0,w,c
  8754  0015F0  100E               	iorwf	(___aomod@divisor+1)^0,w,c
  8755  0015F2  100F               	iorwf	(___aomod@divisor+2)^0,w,c
  8756  0015F4  1010               	iorwf	(___aomod@divisor+3)^0,w,c
  8757  0015F6  1011               	iorwf	(___aomod@divisor+4)^0,w,c
  8758  0015F8  1012               	iorwf	(___aomod@divisor+5)^0,w,c
  8759  0015FA  1013               	iorwf	(___aomod@divisor+6)^0,w,c
  8760  0015FC  1014               	iorwf	(___aomod@divisor+7)^0,w,c
  8761  0015FE  B4D8               	btfsc	status,2,c
  8762  001600  EF04  F00B         	goto	u4321
  8763  001604  EF06  F00B         	goto	u4320
  8764  001608                     u4321:
  8765  001608  EF4E  F00B         	goto	l4566
  8766  00160C                     u4320:
  8767  00160C  0E01               	movlw	1
  8768  00160E  6E15               	movwf	___aomod@counter^0,c
  8769  001610  EF14  F00B         	goto	l4556
  8770  001614                     l4554:
  8771  001614  90D8               	bcf	status,0,c
  8772  001616  360D               	rlcf	___aomod@divisor^0,f,c
  8773  001618  360E               	rlcf	(___aomod@divisor+1)^0,f,c
  8774  00161A  360F               	rlcf	(___aomod@divisor+2)^0,f,c
  8775  00161C  3610               	rlcf	(___aomod@divisor+3)^0,f,c
  8776  00161E  3611               	rlcf	(___aomod@divisor+4)^0,f,c
  8777  001620  3612               	rlcf	(___aomod@divisor+5)^0,f,c
  8778  001622  3613               	rlcf	(___aomod@divisor+6)^0,f,c
  8779  001624  3614               	rlcf	(___aomod@divisor+7)^0,f,c
  8780  001626  2A15               	incf	___aomod@counter^0,f,c
  8781  001628                     l4556:
  8782  001628  AE14               	btfss	(___aomod@divisor+7)^0,7,c
  8783  00162A  EF19  F00B         	goto	u4331
  8784  00162E  EF1B  F00B         	goto	u4330
  8785  001632                     u4331:
  8786  001632  EF0A  F00B         	goto	l4554
  8787  001636                     u4330:
  8788  001636                     l4558:
  8789  001636  500D               	movf	___aomod@divisor^0,w,c
  8790  001638  5C05               	subwf	___aomod@dividend^0,w,c
  8791  00163A  500E               	movf	(___aomod@divisor+1)^0,w,c
  8792  00163C  5806               	subwfb	(___aomod@dividend+1)^0,w,c
  8793  00163E  500F               	movf	(___aomod@divisor+2)^0,w,c
  8794  001640  5807               	subwfb	(___aomod@dividend+2)^0,w,c
  8795  001642  5010               	movf	(___aomod@divisor+3)^0,w,c
  8796  001644  5808               	subwfb	(___aomod@dividend+3)^0,w,c
  8797  001646  5011               	movf	(___aomod@divisor+4)^0,w,c
  8798  001648  5809               	subwfb	(___aomod@dividend+4)^0,w,c
  8799  00164A  5012               	movf	(___aomod@divisor+5)^0,w,c
  8800  00164C  580A               	subwfb	(___aomod@dividend+5)^0,w,c
  8801  00164E  5013               	movf	(___aomod@divisor+6)^0,w,c
  8802  001650  580B               	subwfb	(___aomod@dividend+6)^0,w,c
  8803  001652  5014               	movf	(___aomod@divisor+7)^0,w,c
  8804  001654  580C               	subwfb	(___aomod@dividend+7)^0,w,c
  8805  001656  A0D8               	btfss	status,0,c
  8806  001658  EF30  F00B         	goto	u4341
  8807  00165C  EF32  F00B         	goto	u4340
  8808  001660                     u4341:
  8809  001660  EF42  F00B         	goto	l4562
  8810  001664                     u4340:
  8811  001664  500D               	movf	___aomod@divisor^0,w,c
  8812  001666  5E05               	subwf	___aomod@dividend^0,f,c
  8813  001668  500E               	movf	(___aomod@divisor+1)^0,w,c
  8814  00166A  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
  8815  00166C  500F               	movf	(___aomod@divisor+2)^0,w,c
  8816  00166E  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
  8817  001670  5010               	movf	(___aomod@divisor+3)^0,w,c
  8818  001672  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
  8819  001674  5011               	movf	(___aomod@divisor+4)^0,w,c
  8820  001676  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
  8821  001678  5012               	movf	(___aomod@divisor+5)^0,w,c
  8822  00167A  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
  8823  00167C  5013               	movf	(___aomod@divisor+6)^0,w,c
  8824  00167E  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
  8825  001680  5014               	movf	(___aomod@divisor+7)^0,w,c
  8826  001682  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
  8827  001684                     l4562:
  8828  001684  90D8               	bcf	status,0,c
  8829  001686  3214               	rrcf	(___aomod@divisor+7)^0,f,c
  8830  001688  3213               	rrcf	(___aomod@divisor+6)^0,f,c
  8831  00168A  3212               	rrcf	(___aomod@divisor+5)^0,f,c
  8832  00168C  3211               	rrcf	(___aomod@divisor+4)^0,f,c
  8833  00168E  3210               	rrcf	(___aomod@divisor+3)^0,f,c
  8834  001690  320F               	rrcf	(___aomod@divisor+2)^0,f,c
  8835  001692  320E               	rrcf	(___aomod@divisor+1)^0,f,c
  8836  001694  320D               	rrcf	___aomod@divisor^0,f,c
  8837  001696  2E15               	decfsz	___aomod@counter^0,f,c
  8838  001698  EF1B  F00B         	goto	l4558
  8839  00169C                     l4566:
  8840  00169C  5016               	movf	___aomod@sign^0,w,c
  8841  00169E  B4D8               	btfsc	status,2,c
  8842  0016A0  EF54  F00B         	goto	u4351
  8843  0016A4  EF56  F00B         	goto	u4350
  8844  0016A8                     u4351:
  8845  0016A8  EF66  F00B         	goto	l4570
  8846  0016AC                     u4350:
  8847  0016AC  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  8848  0016AE  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  8849  0016B0  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  8850  0016B2  1E09               	comf	(___aomod@dividend+4)^0,f,c
  8851  0016B4  1E08               	comf	(___aomod@dividend+3)^0,f,c
  8852  0016B6  1E07               	comf	(___aomod@dividend+2)^0,f,c
  8853  0016B8  1E06               	comf	(___aomod@dividend+1)^0,f,c
  8854  0016BA  6C05               	negf	___aomod@dividend^0,c
  8855  0016BC  0E00               	movlw	0
  8856  0016BE  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  8857  0016C0  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  8858  0016C2  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  8859  0016C4  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  8860  0016C6  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  8861  0016C8  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  8862  0016CA  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  8863  0016CC                     l4570:
  8864  0016CC  C005  F005         	movff	___aomod@dividend,?___aomod
  8865  0016D0  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  8866  0016D4  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  8867  0016D8  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  8868  0016DC  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  8869  0016E0  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  8870  0016E4  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  8871  0016E8  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  8872  0016EC  0012               	return		;funcret
  8873  0016EE                     __end_of___aomod:
  8874                           	opt callstack 0
  8875                           
  8876 ;; *************** function ___aodiv *****************
  8877 ;; Defined at:
  8878 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  8879 ;; Parameters:    Size  Location     Type
  8880 ;;  dividend        8    4[COMRAM] long long 
  8881 ;;  divisor         8   12[COMRAM] long long 
  8882 ;; Auto vars:     Size  Location     Type
  8883 ;;  quotient        8   22[COMRAM] long long 
  8884 ;;  sign            1   21[COMRAM] unsigned char 
  8885 ;;  counter         1   20[COMRAM] unsigned char 
  8886 ;; Return value:  Size  Location     Type
  8887 ;;                  8    4[COMRAM] long long 
  8888 ;; Registers used:
  8889 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8890 ;; Tracked objects:
  8891 ;;		On entry : 0/0
  8892 ;;		On exit  : 0/0
  8893 ;;		Unchanged: 0/0
  8894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8895 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8896 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8898 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8899 ;;Total ram usage:       26 bytes
  8900 ;; Hardware stack levels used:    1
  8901 ;; Hardware stack levels required when called:    4
  8902 ;; This function calls:
  8903 ;;		Nothing
  8904 ;; This function is called by:
  8905 ;;		_dtoa
  8906 ;; This function uses a non-reentrant model
  8907 ;;
  8908                           
  8909                           	psect	text55
  8910  001402                     __ptext55:
  8911                           	opt callstack 0
  8912  001402                     ___aodiv:
  8913                           	opt callstack 22
  8914  001402  0E00               	movlw	0
  8915  001404  6E16               	movwf	___aodiv@sign^0,c
  8916  001406  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
  8917  001408  EF0A  F00A         	goto	u4230
  8918  00140C  EF08  F00A         	goto	u4231
  8919  001410                     u4231:
  8920  001410  EF1C  F00A         	goto	l4502
  8921  001414                     u4230:
  8922  001414  1E14               	comf	(___aodiv@divisor+7)^0,f,c
  8923  001416  1E13               	comf	(___aodiv@divisor+6)^0,f,c
  8924  001418  1E12               	comf	(___aodiv@divisor+5)^0,f,c
  8925  00141A  1E11               	comf	(___aodiv@divisor+4)^0,f,c
  8926  00141C  1E10               	comf	(___aodiv@divisor+3)^0,f,c
  8927  00141E  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
  8928  001420  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
  8929  001422  6C0D               	negf	___aodiv@divisor^0,c
  8930  001424  0E00               	movlw	0
  8931  001426  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
  8932  001428  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
  8933  00142A  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
  8934  00142C  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
  8935  00142E  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
  8936  001430  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
  8937  001432  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
  8938  001434  0E01               	movlw	1
  8939  001436  6E16               	movwf	___aodiv@sign^0,c
  8940  001438                     l4502:
  8941  001438  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
  8942  00143A  EF23  F00A         	goto	u4240
  8943  00143E  EF21  F00A         	goto	u4241
  8944  001442                     u4241:
  8945  001442  EF35  F00A         	goto	l4508
  8946  001446                     u4240:
  8947  001446  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
  8948  001448  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
  8949  00144A  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
  8950  00144C  1E09               	comf	(___aodiv@dividend+4)^0,f,c
  8951  00144E  1E08               	comf	(___aodiv@dividend+3)^0,f,c
  8952  001450  1E07               	comf	(___aodiv@dividend+2)^0,f,c
  8953  001452  1E06               	comf	(___aodiv@dividend+1)^0,f,c
  8954  001454  6C05               	negf	___aodiv@dividend^0,c
  8955  001456  0E00               	movlw	0
  8956  001458  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
  8957  00145A  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
  8958  00145C  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
  8959  00145E  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
  8960  001460  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
  8961  001462  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
  8962  001464  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
  8963  001466  0E01               	movlw	1
  8964  001468  1A16               	xorwf	___aodiv@sign^0,f,c
  8965  00146A                     l4508:
  8966  00146A  EE20  F017         	lfsr	2,___aodiv@quotient
  8967  00146E  0E07               	movlw	7
  8968  001470                     u4251:
  8969  001470  6ADE               	clrf	postinc2,c
  8970  001472  06E8               	decf	wreg,f,c
  8971  001474  E2FD               	bc	u4251
  8972  001476  500D               	movf	___aodiv@divisor^0,w,c
  8973  001478  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
  8974  00147A  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
  8975  00147C  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
  8976  00147E  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
  8977  001480  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
  8978  001482  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
  8979  001484  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
  8980  001486  B4D8               	btfsc	status,2,c
  8981  001488  EF48  F00A         	goto	u4261
  8982  00148C  EF4A  F00A         	goto	u4260
  8983  001490                     u4261:
  8984  001490  EF9C  F00A         	goto	l4530
  8985  001494                     u4260:
  8986  001494  0E01               	movlw	1
  8987  001496  6E15               	movwf	___aodiv@counter^0,c
  8988  001498  EF58  F00A         	goto	l4516
  8989  00149C                     l4514:
  8990  00149C  90D8               	bcf	status,0,c
  8991  00149E  360D               	rlcf	___aodiv@divisor^0,f,c
  8992  0014A0  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
  8993  0014A2  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
  8994  0014A4  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
  8995  0014A6  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
  8996  0014A8  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
  8997  0014AA  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
  8998  0014AC  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
  8999  0014AE  2A15               	incf	___aodiv@counter^0,f,c
  9000  0014B0                     l4516:
  9001  0014B0  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
  9002  0014B2  EF5D  F00A         	goto	u4271
  9003  0014B6  EF5F  F00A         	goto	u4270
  9004  0014BA                     u4271:
  9005  0014BA  EF4E  F00A         	goto	l4514
  9006  0014BE                     u4270:
  9007  0014BE                     l4518:
  9008  0014BE  90D8               	bcf	status,0,c
  9009  0014C0  3617               	rlcf	___aodiv@quotient^0,f,c
  9010  0014C2  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
  9011  0014C4  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
  9012  0014C6  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
  9013  0014C8  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
  9014  0014CA  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
  9015  0014CC  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
  9016  0014CE  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
  9017  0014D0  500D               	movf	___aodiv@divisor^0,w,c
  9018  0014D2  5C05               	subwf	___aodiv@dividend^0,w,c
  9019  0014D4  500E               	movf	(___aodiv@divisor+1)^0,w,c
  9020  0014D6  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
  9021  0014D8  500F               	movf	(___aodiv@divisor+2)^0,w,c
  9022  0014DA  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
  9023  0014DC  5010               	movf	(___aodiv@divisor+3)^0,w,c
  9024  0014DE  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
  9025  0014E0  5011               	movf	(___aodiv@divisor+4)^0,w,c
  9026  0014E2  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
  9027  0014E4  5012               	movf	(___aodiv@divisor+5)^0,w,c
  9028  0014E6  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
  9029  0014E8  5013               	movf	(___aodiv@divisor+6)^0,w,c
  9030  0014EA  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
  9031  0014EC  5014               	movf	(___aodiv@divisor+7)^0,w,c
  9032  0014EE  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
  9033  0014F0  A0D8               	btfss	status,0,c
  9034  0014F2  EF7D  F00A         	goto	u4281
  9035  0014F6  EF7F  F00A         	goto	u4280
  9036  0014FA                     u4281:
  9037  0014FA  EF90  F00A         	goto	l4526
  9038  0014FE                     u4280:
  9039  0014FE  500D               	movf	___aodiv@divisor^0,w,c
  9040  001500  5E05               	subwf	___aodiv@dividend^0,f,c
  9041  001502  500E               	movf	(___aodiv@divisor+1)^0,w,c
  9042  001504  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
  9043  001506  500F               	movf	(___aodiv@divisor+2)^0,w,c
  9044  001508  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
  9045  00150A  5010               	movf	(___aodiv@divisor+3)^0,w,c
  9046  00150C  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
  9047  00150E  5011               	movf	(___aodiv@divisor+4)^0,w,c
  9048  001510  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
  9049  001512  5012               	movf	(___aodiv@divisor+5)^0,w,c
  9050  001514  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
  9051  001516  5013               	movf	(___aodiv@divisor+6)^0,w,c
  9052  001518  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
  9053  00151A  5014               	movf	(___aodiv@divisor+7)^0,w,c
  9054  00151C  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
  9055  00151E  8017               	bsf	___aodiv@quotient^0,0,c
  9056  001520                     l4526:
  9057  001520  90D8               	bcf	status,0,c
  9058  001522  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
  9059  001524  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
  9060  001526  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
  9061  001528  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
  9062  00152A  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
  9063  00152C  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
  9064  00152E  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
  9065  001530  320D               	rrcf	___aodiv@divisor^0,f,c
  9066  001532  2E15               	decfsz	___aodiv@counter^0,f,c
  9067  001534  EF5F  F00A         	goto	l4518
  9068  001538                     l4530:
  9069  001538  5016               	movf	___aodiv@sign^0,w,c
  9070  00153A  B4D8               	btfsc	status,2,c
  9071  00153C  EFA2  F00A         	goto	u4291
  9072  001540  EFA4  F00A         	goto	u4290
  9073  001544                     u4291:
  9074  001544  EFB4  F00A         	goto	l4534
  9075  001548                     u4290:
  9076  001548  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
  9077  00154A  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
  9078  00154C  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
  9079  00154E  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
  9080  001550  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
  9081  001552  1E19               	comf	(___aodiv@quotient+2)^0,f,c
  9082  001554  1E18               	comf	(___aodiv@quotient+1)^0,f,c
  9083  001556  6C17               	negf	___aodiv@quotient^0,c
  9084  001558  0E00               	movlw	0
  9085  00155A  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
  9086  00155C  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
  9087  00155E  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
  9088  001560  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
  9089  001562  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
  9090  001564  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
  9091  001566  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
  9092  001568                     l4534:
  9093  001568  C017  F005         	movff	___aodiv@quotient,?___aodiv
  9094  00156C  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  9095  001570  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  9096  001574  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  9097  001578  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  9098  00157C  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  9099  001580  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  9100  001584  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  9101  001588  0012               	return		;funcret
  9102  00158A                     __end_of___aodiv:
  9103                           	opt callstack 0
  9104                           
  9105 ;; *************** function _atoi *****************
  9106 ;; Defined at:
  9107 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  9108 ;; Parameters:    Size  Location     Type
  9109 ;;  s               2   11[COMRAM] PTR const unsigned char 
  9110 ;;		 -> STR_19(27), STR_18(21), STR_17(36), STR_16(28), 
  9111 ;;		 -> STR_15(4), STR_14(23), STR_13(32), STR_12(4), 
  9112 ;;		 -> STR_11(23), STR_10(19), STR_9(35), STR_8(55), 
  9113 ;;		 -> STR_7(53), STR_6(29), STR_3(43), STR_2(25), 
  9114 ;;		 -> STR_1(57), 
  9115 ;; Auto vars:     Size  Location     Type
  9116 ;;  n               2   24[COMRAM] int 
  9117 ;;  neg             2   17[COMRAM] int 
  9118 ;; Return value:  Size  Location     Type
  9119 ;;                  2   11[COMRAM] int 
  9120 ;; Registers used:
  9121 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9122 ;; Tracked objects:
  9123 ;;		On entry : 0/0
  9124 ;;		On exit  : 0/0
  9125 ;;		Unchanged: 0/0
  9126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9127 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9128 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9129 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9130 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9131 ;;Total ram usage:       15 bytes
  9132 ;; Hardware stack levels used:    1
  9133 ;; Hardware stack levels required when called:    5
  9134 ;; This function calls:
  9135 ;;		___wmul
  9136 ;;		_isdigit
  9137 ;;		_isspace
  9138 ;; This function is called by:
  9139 ;;		_vfpfcnvrt
  9140 ;; This function uses a non-reentrant model
  9141 ;;
  9142                           
  9143                           	psect	text56
  9144  001268                     __ptext56:
  9145                           	opt callstack 0
  9146  001268                     _atoi:
  9147                           	opt callstack 22
  9148  001268  0E00               	movlw	0
  9149  00126A  6E1A               	movwf	(atoi@n+1)^0,c
  9150  00126C  0E00               	movlw	0
  9151  00126E  6E19               	movwf	atoi@n^0,c
  9152  001270  0E00               	movlw	0
  9153  001272  6E13               	movwf	(atoi@neg+1)^0,c
  9154  001274  0E00               	movlw	0
  9155  001276  6E12               	movwf	atoi@neg^0,c
  9156  001278  EF40  F009         	goto	l4834
  9157  00127C                     l4832:
  9158  00127C  4A0C               	infsnz	atoi@s^0,f,c
  9159  00127E  2A0D               	incf	(atoi@s+1)^0,f,c
  9160  001280                     l4834:
  9161  001280  0E01               	movlw	1
  9162  001282  6E18               	movwf	_atoi$1812^0,c
  9163  001284  C00C  FFF6         	movff	atoi@s,tblptrl
  9164  001288  C00D  FFF7         	movff	atoi@s+1,tblptrh
  9165  00128C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9166  00128C  6AF8               	clrf	tblptru,c
  9167  00128E                     	endif
  9168  00128E                     	if	0	;tblptru may be non-zero
  9169  00128E                     	endif
  9170  00128E  0008               	tblrd		*
  9171  001290  50F5               	movf	tablat,w,c
  9172  001292  0A20               	xorlw	32
  9173  001294  B4D8               	btfsc	status,2,c
  9174  001296  EF4F  F009         	goto	u4941
  9175  00129A  EF51  F009         	goto	u4940
  9176  00129E                     u4941:
  9177  00129E  EF6F  F009         	goto	l4842
  9178  0012A2                     u4940:
  9179  0012A2  0EF7               	movlw	247
  9180  0012A4  6E0E               	movwf	??_atoi^0,c
  9181  0012A6  0EFF               	movlw	255
  9182  0012A8  6E0F               	movwf	(??_atoi+1)^0,c
  9183  0012AA  C00C  FFF6         	movff	atoi@s,tblptrl
  9184  0012AE  C00D  FFF7         	movff	atoi@s+1,tblptrh
  9185  0012B2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9186  0012B2  6AF8               	clrf	tblptru,c
  9187  0012B4                     	endif
  9188  0012B4                     	if	0	;tblptru may be non-zero
  9189  0012B4                     	endif
  9190  0012B4  0008               	tblrd		*
  9191  0012B6  50F5               	movf	tablat,w,c
  9192  0012B8  6E10               	movwf	(??_atoi+2)^0,c
  9193  0012BA  6A11               	clrf	(??_atoi+3)^0,c
  9194  0012BC  500E               	movf	??_atoi^0,w,c
  9195  0012BE  2610               	addwf	(??_atoi+2)^0,f,c
  9196  0012C0  500F               	movf	(??_atoi+1)^0,w,c
  9197  0012C2  2211               	addwfc	(??_atoi+3)^0,f,c
  9198  0012C4  5011               	movf	(??_atoi+3)^0,w,c
  9199  0012C6  E109               	bnz	u4950
  9200  0012C8  0E05               	movlw	5
  9201  0012CA  5C10               	subwf	(??_atoi+2)^0,w,c
  9202  0012CC  A0D8               	btfss	status,0,c
  9203  0012CE  EF6B  F009         	goto	u4951
  9204  0012D2  EF6D  F009         	goto	u4950
  9205  0012D6                     u4951:
  9206  0012D6  EF6F  F009         	goto	l4842
  9207  0012DA                     u4950:
  9208  0012DA  0E00               	movlw	0
  9209  0012DC  6E18               	movwf	_atoi$1812^0,c
  9210  0012DE                     l4842:
  9211  0012DE  C018  F014         	movff	_atoi$1812,_atoi$1811
  9212  0012E2  6A15               	clrf	(_atoi$1811+1)^0,c
  9213  0012E4  5014               	movf	_atoi$1811^0,w,c
  9214  0012E6  1015               	iorwf	(_atoi$1811+1)^0,w,c
  9215  0012E8  A4D8               	btfss	status,2,c
  9216  0012EA  EF79  F009         	goto	u4961
  9217  0012EE  EF7B  F009         	goto	u4960
  9218  0012F2                     u4961:
  9219  0012F2  EF3E  F009         	goto	l4832
  9220  0012F6                     u4960:
  9221  0012F6  EF85  F009         	goto	l4852
  9222  0012FA                     l4848:
  9223  0012FA  0E00               	movlw	0
  9224  0012FC  6E13               	movwf	(atoi@neg+1)^0,c
  9225  0012FE  0E01               	movlw	1
  9226  001300  6E12               	movwf	atoi@neg^0,c
  9227  001302                     l4850:
  9228  001302  4A0C               	infsnz	atoi@s^0,f,c
  9229  001304  2A0D               	incf	(atoi@s+1)^0,f,c
  9230  001306  EFBC  F009         	goto	l4858
  9231  00130A                     l4852:
  9232  00130A  C00C  FFF6         	movff	atoi@s,tblptrl
  9233  00130E  C00D  FFF7         	movff	atoi@s+1,tblptrh
  9234  001312                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9235  001312  6AF8               	clrf	tblptru,c
  9236  001314                     	endif
  9237  001314                     	if	0	;tblptru may be non-zero
  9238  001314                     	endif
  9239  001314  0008               	tblrd		*
  9240  001316  50F5               	movf	tablat,w,c
  9241  001318  6E0E               	movwf	??_atoi^0,c
  9242  00131A  6A0F               	clrf	(??_atoi+1)^0,c
  9243                           
  9244                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9245                           ; Switch size 1, requested type "simple"
  9246                           ; Number of cases is 1, Range of values is 0 to 0
  9247                           ; switch strategies available:
  9248                           ; Name         Instructions Cycles
  9249                           ; simple_byte            4     3 (average)
  9250                           ;	Chosen strategy is simple_byte
  9251  00131C  500F               	movf	(??_atoi+1)^0,w,c
  9252  00131E  0A00               	xorlw	0	; case 0
  9253  001320  B4D8               	btfsc	status,2,c
  9254  001322  EF95  F009         	goto	l5540
  9255  001326  EFBC  F009         	goto	l4858
  9256  00132A                     l5540:
  9257                           
  9258                           ; Switch size 1, requested type "simple"
  9259                           ; Number of cases is 2, Range of values is 43 to 45
  9260                           ; switch strategies available:
  9261                           ; Name         Instructions Cycles
  9262                           ; simple_byte            7     4 (average)
  9263                           ;	Chosen strategy is simple_byte
  9264  00132A  500E               	movf	??_atoi^0,w,c
  9265  00132C  0A2B               	xorlw	43	; case 43
  9266  00132E  B4D8               	btfsc	status,2,c
  9267  001330  EF81  F009         	goto	l4850
  9268  001334  0A06               	xorlw	6	; case 45
  9269  001336  B4D8               	btfsc	status,2,c
  9270  001338  EF7D  F009         	goto	l4848
  9271  00133C  EFBC  F009         	goto	l4858
  9272  001340                     l4854:
  9273  001340  C019  F005         	movff	atoi@n,___wmul@multiplier
  9274  001344  C01A  F006         	movff	atoi@n+1,___wmul@multiplier+1
  9275  001348  0E00               	movlw	0
  9276  00134A  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  9277  00134C  0E0A               	movlw	10
  9278  00134E  6E07               	movwf	___wmul@multiplicand^0,c
  9279  001350  ECED  F014         	call	___wmul	;wreg free
  9280  001354  C00C  FFF6         	movff	atoi@s,tblptrl
  9281  001358  C00D  FFF7         	movff	atoi@s+1,tblptrh
  9282  00135C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9283  00135C  6AF8               	clrf	tblptru,c
  9284  00135E                     	endif
  9285  00135E                     	if	0	;tblptru may be non-zero
  9286  00135E                     	endif
  9287  00135E  0008               	tblrd		*
  9288  001360  50F5               	movf	tablat,w,c
  9289  001362  5E05               	subwf	?___wmul^0,f,c
  9290  001364  0E00               	movlw	0
  9291  001366  5A06               	subwfb	(?___wmul+1)^0,f,c
  9292  001368  0E30               	movlw	48
  9293  00136A  2405               	addwf	?___wmul^0,w,c
  9294  00136C  6E19               	movwf	atoi@n^0,c
  9295  00136E  0E00               	movlw	0
  9296  001370  2006               	addwfc	(?___wmul+1)^0,w,c
  9297  001372  6E1A               	movwf	(atoi@n+1)^0,c
  9298  001374  EF81  F009         	goto	l4850
  9299  001378                     l4858:
  9300  001378  0ED0               	movlw	208
  9301  00137A  6E0E               	movwf	??_atoi^0,c
  9302  00137C  0EFF               	movlw	255
  9303  00137E  6E0F               	movwf	(??_atoi+1)^0,c
  9304  001380  C00C  FFF6         	movff	atoi@s,tblptrl
  9305  001384  C00D  FFF7         	movff	atoi@s+1,tblptrh
  9306  001388                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9307  001388  6AF8               	clrf	tblptru,c
  9308  00138A                     	endif
  9309  00138A                     	if	0	;tblptru may be non-zero
  9310  00138A                     	endif
  9311  00138A  0008               	tblrd		*
  9312  00138C  50F5               	movf	tablat,w,c
  9313  00138E  6E10               	movwf	(??_atoi+2)^0,c
  9314  001390  6A11               	clrf	(??_atoi+3)^0,c
  9315  001392  500E               	movf	??_atoi^0,w,c
  9316  001394  2610               	addwf	(??_atoi+2)^0,f,c
  9317  001396  500F               	movf	(??_atoi+1)^0,w,c
  9318  001398  2211               	addwfc	(??_atoi+3)^0,f,c
  9319  00139A  5011               	movf	(??_atoi+3)^0,w,c
  9320  00139C  E10A               	bnz	u4970
  9321  00139E  0E0A               	movlw	10
  9322  0013A0  5C10               	subwf	(??_atoi+2)^0,w,c
  9323  0013A2  A0D8               	btfss	status,0,c
  9324  0013A4  EFD6  F009         	goto	u4971
  9325  0013A8  EFD9  F009         	goto	u4970
  9326  0013AC                     u4971:
  9327  0013AC  0E01               	movlw	1
  9328  0013AE  EFDA  F009         	goto	u4980
  9329  0013B2                     u4970:
  9330  0013B2  0E00               	movlw	0
  9331  0013B4                     u4980:
  9332  0013B4  6E16               	movwf	_atoi$1813^0,c
  9333  0013B6  6A17               	clrf	(_atoi$1813+1)^0,c
  9334  0013B8  5016               	movf	_atoi$1813^0,w,c
  9335  0013BA  1017               	iorwf	(_atoi$1813+1)^0,w,c
  9336  0013BC  A4D8               	btfss	status,2,c
  9337  0013BE  EFE3  F009         	goto	u4991
  9338  0013C2  EFE5  F009         	goto	u4990
  9339  0013C6                     u4991:
  9340  0013C6  EFA0  F009         	goto	l4854
  9341  0013CA                     u4990:
  9342  0013CA  5012               	movf	atoi@neg^0,w,c
  9343  0013CC  1013               	iorwf	(atoi@neg+1)^0,w,c
  9344  0013CE  A4D8               	btfss	status,2,c
  9345  0013D0  EFEC  F009         	goto	u5001
  9346  0013D4  EFEE  F009         	goto	u5000
  9347  0013D8                     u5001:
  9348  0013D8  EFFC  F009         	goto	l1601
  9349  0013DC                     u5000:
  9350  0013DC  C019  F00E         	movff	atoi@n,??_atoi
  9351  0013E0  C01A  F00F         	movff	atoi@n+1,??_atoi+1
  9352  0013E4  1E0E               	comf	??_atoi^0,f,c
  9353  0013E6  1E0F               	comf	(??_atoi+1)^0,f,c
  9354  0013E8  4A0E               	infsnz	??_atoi^0,f,c
  9355  0013EA  2A0F               	incf	(??_atoi+1)^0,f,c
  9356  0013EC  C00E  F00C         	movff	??_atoi,?_atoi
  9357  0013F0  C00F  F00D         	movff	??_atoi+1,?_atoi+1
  9358  0013F4  EF00  F00A         	goto	l1604
  9359  0013F8                     l1601:
  9360  0013F8  C019  F00C         	movff	atoi@n,?_atoi
  9361  0013FC  C01A  F00D         	movff	atoi@n+1,?_atoi+1
  9362  001400                     l1604:
  9363  001400  0012               	return		;funcret
  9364  001402                     __end_of_atoi:
  9365                           	opt callstack 0
  9366                           
  9367 ;; *************** function _isspace *****************
  9368 ;; Defined at:
  9369 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  9370 ;; Parameters:    Size  Location     Type
  9371 ;;  c               2    4[COMRAM] int 
  9372 ;; Auto vars:     Size  Location     Type
  9373 ;;		None
  9374 ;; Return value:  Size  Location     Type
  9375 ;;                  2    4[COMRAM] int 
  9376 ;; Registers used:
  9377 ;;		wreg, status,2, status,0
  9378 ;; Tracked objects:
  9379 ;;		On entry : 0/0
  9380 ;;		On exit  : 0/0
  9381 ;;		Unchanged: 0/0
  9382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9383 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9384 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9385 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9386 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9387 ;;Total ram usage:        7 bytes
  9388 ;; Hardware stack levels used:    1
  9389 ;; Hardware stack levels required when called:    4
  9390 ;; This function calls:
  9391 ;;		Nothing
  9392 ;; This function is called by:
  9393 ;;		_atoi
  9394 ;; This function uses a non-reentrant model
  9395 ;;
  9396                           
  9397                           	psect	text57
  9398  002562                     __ptext57:
  9399                           	opt callstack 0
  9400  002562                     _isspace:
  9401                           	opt callstack 22
  9402  002562  0E01               	movlw	1
  9403  002564  6E0B               	movwf	_isspace$1838^0,c
  9404  002566  0E20               	movlw	32
  9405  002568  1805               	xorwf	isspace@c^0,w,c
  9406  00256A  1006               	iorwf	(isspace@c+1)^0,w,c
  9407  00256C  B4D8               	btfsc	status,2,c
  9408  00256E  EFBB  F012         	goto	u4431
  9409  002572  EFBD  F012         	goto	u4430
  9410  002576                     u4431:
  9411  002576  EFD6  F012         	goto	l4620
  9412  00257A                     u4430:
  9413  00257A  0EF7               	movlw	247
  9414  00257C  6E07               	movwf	??_isspace^0,c
  9415  00257E  0EFF               	movlw	255
  9416  002580  6E08               	movwf	(??_isspace+1)^0,c
  9417  002582  C005  F009         	movff	isspace@c,??_isspace+2
  9418  002586  C006  F00A         	movff	isspace@c+1,??_isspace+3
  9419  00258A  5007               	movf	??_isspace^0,w,c
  9420  00258C  2609               	addwf	(??_isspace+2)^0,f,c
  9421  00258E  5008               	movf	(??_isspace+1)^0,w,c
  9422  002590  220A               	addwfc	(??_isspace+3)^0,f,c
  9423  002592  500A               	movf	(??_isspace+3)^0,w,c
  9424  002594  E109               	bnz	u4440
  9425  002596  0E05               	movlw	5
  9426  002598  5C09               	subwf	(??_isspace+2)^0,w,c
  9427  00259A  A0D8               	btfss	status,0,c
  9428  00259C  EFD2  F012         	goto	u4441
  9429  0025A0  EFD4  F012         	goto	u4440
  9430  0025A4                     u4441:
  9431  0025A4  EFD6  F012         	goto	l4620
  9432  0025A8                     u4440:
  9433  0025A8  0E00               	movlw	0
  9434  0025AA  6E0B               	movwf	_isspace$1838^0,c
  9435  0025AC                     l4620:
  9436  0025AC  C00B  F005         	movff	_isspace$1838,?_isspace
  9437  0025B0  6A06               	clrf	(?_isspace+1)^0,c
  9438  0025B2  0012               	return		;funcret
  9439  0025B4                     __end_of_isspace:
  9440                           	opt callstack 0
  9441                           
  9442 ;; *************** function _isdigit *****************
  9443 ;; Defined at:
  9444 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  9445 ;; Parameters:    Size  Location     Type
  9446 ;;  c               2    4[COMRAM] int 
  9447 ;; Auto vars:     Size  Location     Type
  9448 ;;		None
  9449 ;; Return value:  Size  Location     Type
  9450 ;;                  2    4[COMRAM] int 
  9451 ;; Registers used:
  9452 ;;		wreg, status,2, status,0
  9453 ;; Tracked objects:
  9454 ;;		On entry : 0/0
  9455 ;;		On exit  : 0/0
  9456 ;;		Unchanged: 0/0
  9457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9458 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9460 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9461 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9462 ;;Total ram usage:        6 bytes
  9463 ;; Hardware stack levels used:    1
  9464 ;; Hardware stack levels required when called:    4
  9465 ;; This function calls:
  9466 ;;		Nothing
  9467 ;; This function is called by:
  9468 ;;		_vfpfcnvrt
  9469 ;;		_atoi
  9470 ;; This function uses a non-reentrant model
  9471 ;;
  9472                           
  9473                           	psect	text58
  9474  002922                     __ptext58:
  9475                           	opt callstack 0
  9476  002922                     _isdigit:
  9477                           	opt callstack 23
  9478  002922  0ED0               	movlw	208
  9479  002924  6E07               	movwf	??_isdigit^0,c
  9480  002926  0EFF               	movlw	255
  9481  002928  6E08               	movwf	(??_isdigit+1)^0,c
  9482  00292A  C005  F009         	movff	isdigit@c,??_isdigit+2
  9483  00292E  C006  F00A         	movff	isdigit@c+1,??_isdigit+3
  9484  002932  5007               	movf	??_isdigit^0,w,c
  9485  002934  2609               	addwf	(??_isdigit+2)^0,f,c
  9486  002936  5008               	movf	(??_isdigit+1)^0,w,c
  9487  002938  220A               	addwfc	(??_isdigit+3)^0,f,c
  9488  00293A  500A               	movf	(??_isdigit+3)^0,w,c
  9489  00293C  E10A               	bnz	u4210
  9490  00293E  0E0A               	movlw	10
  9491  002940  5C09               	subwf	(??_isdigit+2)^0,w,c
  9492  002942  A0D8               	btfss	status,0,c
  9493  002944  EFA6  F014         	goto	u4211
  9494  002948  EFA9  F014         	goto	u4210
  9495  00294C                     u4211:
  9496  00294C  0E01               	movlw	1
  9497  00294E  EFAA  F014         	goto	u4220
  9498  002952                     u4210:
  9499  002952  0E00               	movlw	0
  9500  002954                     u4220:
  9501  002954  6E05               	movwf	?_isdigit^0,c
  9502  002956  6A06               	clrf	(?_isdigit+1)^0,c
  9503  002958  0012               	return		;funcret
  9504  00295A                     __end_of_isdigit:
  9505                           	opt callstack 0
  9506                           
  9507 ;; *************** function ___wmul *****************
  9508 ;; Defined at:
  9509 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  9510 ;; Parameters:    Size  Location     Type
  9511 ;;  multiplier      2    4[COMRAM] unsigned int 
  9512 ;;  multiplicand    2    6[COMRAM] unsigned int 
  9513 ;; Auto vars:     Size  Location     Type
  9514 ;;  product         2    8[COMRAM] unsigned int 
  9515 ;; Return value:  Size  Location     Type
  9516 ;;                  2    4[COMRAM] unsigned int 
  9517 ;; Registers used:
  9518 ;;		wreg, status,2, status,0, prodl, prodh
  9519 ;; Tracked objects:
  9520 ;;		On entry : 0/0
  9521 ;;		On exit  : 0/0
  9522 ;;		Unchanged: 0/0
  9523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9524 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9525 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9527 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9528 ;;Total ram usage:        6 bytes
  9529 ;; Hardware stack levels used:    1
  9530 ;; Hardware stack levels required when called:    4
  9531 ;; This function calls:
  9532 ;;		Nothing
  9533 ;; This function is called by:
  9534 ;;		_atoi
  9535 ;; This function uses a non-reentrant model
  9536 ;;
  9537                           
  9538                           	psect	text59
  9539  0029DA                     __ptext59:
  9540                           	opt callstack 0
  9541  0029DA                     ___wmul:
  9542                           	opt callstack 22
  9543  0029DA  5005               	movf	___wmul@multiplier^0,w,c
  9544  0029DC  0207               	mulwf	___wmul@multiplicand^0,c
  9545  0029DE  CFF3 F009          	movff	prodl,___wmul@product
  9546  0029E2  CFF4 F00A          	movff	prodh,___wmul@product+1
  9547  0029E6  5005               	movf	___wmul@multiplier^0,w,c
  9548  0029E8  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  9549  0029EA  50F3               	movf	243,w,c
  9550  0029EC  260A               	addwf	(___wmul@product+1)^0,f,c
  9551  0029EE  5006               	movf	(___wmul@multiplier+1)^0,w,c
  9552  0029F0  0207               	mulwf	___wmul@multiplicand^0,c
  9553  0029F2  50F3               	movf	243,w,c
  9554  0029F4  260A               	addwf	(___wmul@product+1)^0,f,c
  9555  0029F6  C009  F005         	movff	___wmul@product,?___wmul
  9556  0029FA  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  9557  0029FE  0012               	return		;funcret
  9558  002A00                     __end_of___wmul:
  9559                           	opt callstack 0
  9560                           
  9561 ;; *************** function _ClearModbusRespon *****************
  9562 ;; Defined at:
  9563 ;;		line 76 in file "main.c"
  9564 ;; Parameters:    Size  Location     Type
  9565 ;;		None
  9566 ;; Auto vars:     Size  Location     Type
  9567 ;;  i               2    4[COMRAM] int 
  9568 ;; Return value:  Size  Location     Type
  9569 ;;                  1    wreg      void 
  9570 ;; Registers used:
  9571 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9572 ;; Tracked objects:
  9573 ;;		On entry : 0/0
  9574 ;;		On exit  : 0/0
  9575 ;;		Unchanged: 0/0
  9576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9578 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9580 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9581 ;;Total ram usage:        2 bytes
  9582 ;; Hardware stack levels used:    1
  9583 ;; Hardware stack levels required when called:    4
  9584 ;; This function calls:
  9585 ;;		Nothing
  9586 ;; This function is called by:
  9587 ;;		_main
  9588 ;; This function uses a non-reentrant model
  9589 ;;
  9590                           
  9591                           	psect	text60
  9592  002604                     __ptext60:
  9593                           	opt callstack 0
  9594  002604                     _ClearModbusRespon:
  9595                           	opt callstack 26
  9596  002604                     
  9597                           ;main.c: 77:     int i = 0;
  9598  002604  0E00               	movlw	0
  9599  002606  6E06               	movwf	(ClearModbusRespon@i+1)^0,c
  9600  002608  0E00               	movlw	0
  9601  00260A  6E05               	movwf	ClearModbusRespon@i^0,c
  9602                           
  9603                           ;main.c: 78:     for(i=0; i<32; i++ ){
  9604  00260C  0E00               	movlw	0
  9605  00260E  6E06               	movwf	(ClearModbusRespon@i+1)^0,c
  9606  002610  0E00               	movlw	0
  9607  002612  6E05               	movwf	ClearModbusRespon@i^0,c
  9608  002614                     l5284:
  9609                           
  9610                           ;main.c: 79:         MBRespon[i] = 0xFFFF;
  9611  002614  90D8               	bcf	status,0,c
  9612  002616  3405               	rlcf	ClearModbusRespon@i^0,w,c
  9613  002618  6ED9               	movwf	fsr2l,c
  9614  00261A  3406               	rlcf	(ClearModbusRespon@i+1)^0,w,c
  9615  00261C  6EDA               	movwf	fsr2h,c
  9616  00261E  0EA4               	movlw	low _MBRespon
  9617  002620  26D9               	addwf	fsr2l,f,c
  9618  002622  0E01               	movlw	high _MBRespon
  9619  002624  22DA               	addwfc	fsr2h,f,c
  9620  002626  0EFF               	movlw	255
  9621  002628  6EDE               	movwf	postinc2,c
  9622  00262A  0EFF               	movlw	255
  9623  00262C  6EDD               	movwf	postdec2,c
  9624  00262E                     
  9625                           ;main.c: 80:     }
  9626  00262E  4A05               	infsnz	ClearModbusRespon@i^0,f,c
  9627  002630  2A06               	incf	(ClearModbusRespon@i+1)^0,f,c
  9628  002632  BE06               	btfsc	(ClearModbusRespon@i+1)^0,7,c
  9629  002634  EF25  F013         	goto	u5401
  9630  002638  5006               	movf	(ClearModbusRespon@i+1)^0,w,c
  9631  00263A  E109               	bnz	u5400
  9632  00263C  0E20               	movlw	32
  9633  00263E  5C05               	subwf	ClearModbusRespon@i^0,w,c
  9634  002640  A0D8               	btfss	status,0,c
  9635  002642  EF25  F013         	goto	u5401
  9636  002646  EF27  F013         	goto	u5400
  9637  00264A                     u5401:
  9638  00264A  EF0A  F013         	goto	l5284
  9639  00264E                     u5400:
  9640  00264E  0012               	return		;funcret
  9641  002650                     __end_of_ClearModbusRespon:
  9642                           	opt callstack 0
  9643                           
  9644 ;; *************** function _ClearModbusData *****************
  9645 ;; Defined at:
  9646 ;;		line 28 in file "Modbus.c"
  9647 ;; Parameters:    Size  Location     Type
  9648 ;;		None
  9649 ;; Auto vars:     Size  Location     Type
  9650 ;;  i               2    4[COMRAM] int 
  9651 ;; Return value:  Size  Location     Type
  9652 ;;                  1    wreg      void 
  9653 ;; Registers used:
  9654 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9655 ;; Tracked objects:
  9656 ;;		On entry : 0/0
  9657 ;;		On exit  : 0/0
  9658 ;;		Unchanged: 0/0
  9659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9661 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9663 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9664 ;;Total ram usage:        2 bytes
  9665 ;; Hardware stack levels used:    1
  9666 ;; Hardware stack levels required when called:    4
  9667 ;; This function calls:
  9668 ;;		Nothing
  9669 ;; This function is called by:
  9670 ;;		_main
  9671 ;; This function uses a non-reentrant model
  9672 ;;
  9673                           
  9674                           	psect	text61
  9675  002650                     __ptext61:
  9676                           	opt callstack 0
  9677  002650                     _ClearModbusData:
  9678                           	opt callstack 26
  9679  002650                     
  9680                           ;Modbus.c: 29:     int i = 0;
  9681  002650  0E00               	movlw	0
  9682  002652  6E06               	movwf	(ClearModbusData@i+1)^0,c
  9683  002654  0E00               	movlw	0
  9684  002656  6E05               	movwf	ClearModbusData@i^0,c
  9685                           
  9686                           ;Modbus.c: 30:     for(i=0; i<99; i++ ){
  9687  002658  0E00               	movlw	0
  9688  00265A  6E06               	movwf	(ClearModbusData@i+1)^0,c
  9689  00265C  0E00               	movlw	0
  9690  00265E  6E05               	movwf	ClearModbusData@i^0,c
  9691  002660                     l5388:
  9692                           
  9693                           ;Modbus.c: 31:         ModbusData[i] = 0xFF;
  9694  002660  0E00               	movlw	low _ModbusData
  9695  002662  2405               	addwf	ClearModbusData@i^0,w,c
  9696  002664  6ED9               	movwf	fsr2l,c
  9697  002666  0E01               	movlw	high _ModbusData
  9698  002668  2006               	addwfc	(ClearModbusData@i+1)^0,w,c
  9699  00266A  6EDA               	movwf	fsr2h,c
  9700  00266C  0EFF               	movlw	255
  9701  00266E  6EDF               	movwf	indf2,c
  9702  002670                     
  9703                           ;Modbus.c: 32:     }
  9704  002670  4A05               	infsnz	ClearModbusData@i^0,f,c
  9705  002672  2A06               	incf	(ClearModbusData@i+1)^0,f,c
  9706  002674  BE06               	btfsc	(ClearModbusData@i+1)^0,7,c
  9707  002676  EF46  F013         	goto	u5541
  9708  00267A  5006               	movf	(ClearModbusData@i+1)^0,w,c
  9709  00267C  E109               	bnz	u5540
  9710  00267E  0E63               	movlw	99
  9711  002680  5C05               	subwf	ClearModbusData@i^0,w,c
  9712  002682  A0D8               	btfss	status,0,c
  9713  002684  EF46  F013         	goto	u5541
  9714  002688  EF48  F013         	goto	u5540
  9715  00268C                     u5541:
  9716  00268C  EF30  F013         	goto	l5388
  9717  002690                     u5540:
  9718  002690                     
  9719                           ;Modbus.c: 34:     ModDataCnt = 0;
  9720  002690  0E00               	movlw	0
  9721  002692  0100               	movlb	0	; () banked
  9722  002694  6F97               	movwf	(_ModDataCnt+1)& (0+255),b
  9723  002696  0E00               	movlw	0
  9724  002698  6F96               	movwf	_ModDataCnt& (0+255),b
  9725  00269A                     
  9726                           ; BSR set to: 0
  9727  00269A  0012               	return		;funcret
  9728  00269C                     __end_of_ClearModbusData:
  9729                           	opt callstack 0
  9730                           
  9731 ;; *************** function _INTERRUPT_InterruptManager *****************
  9732 ;; Defined at:
  9733 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  9734 ;; Parameters:    Size  Location     Type
  9735 ;;		None
  9736 ;; Auto vars:     Size  Location     Type
  9737 ;;		None
  9738 ;; Return value:  Size  Location     Type
  9739 ;;                  1    wreg      void 
  9740 ;; Registers used:
  9741 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  9742 ;; Tracked objects:
  9743 ;;		On entry : 0/0
  9744 ;;		On exit  : 0/0
  9745 ;;		Unchanged: 0/0
  9746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9749 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9750 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9751 ;;Total ram usage:        4 bytes
  9752 ;; Hardware stack levels used:    1
  9753 ;; Hardware stack levels required when called:    3
  9754 ;; This function calls:
  9755 ;;		Absolute function
  9756 ;;		_EUSART1_Receive_ISR
  9757 ;;		_EUSART1_Transmit_ISR
  9758 ;;		_EUSART2_Receive_ISR
  9759 ;;		_EUSART2_Transmit_ISR
  9760 ;; This function is called by:
  9761 ;;		Interrupt level 2
  9762 ;; This function uses a non-reentrant model
  9763 ;;
  9764                           
  9765                           	psect	intcode
  9766  000008                     __pintcode:
  9767                           	opt callstack 0
  9768  000008                     _INTERRUPT_InterruptManager:
  9769                           	opt callstack 16
  9770                           
  9771                           ; BSR set to: 0
  9772                           ;incstack = 0
  9773  000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9774  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  9775  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  9776  000012  CFD9 F003          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  9777  000016  CFDA F004          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  9778  00001A                     
  9779                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  9780  00001A  ACF2               	btfss	242,6,c	;volatile
  9781  00001C  EF12  F000         	goto	i2u381_41
  9782  000020  EF14  F000         	goto	i2u381_40
  9783  000024                     i2u381_41:
  9784  000024  EF89  F000         	goto	i2l159
  9785  000028                     i2u381_40:
  9786  000028                     
  9787                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
  9788  000028  010E               	movlb	14	; () banked
  9789  00002A  ADC5               	btfss	197,6,b	;volatile
  9790  00002C  EF1A  F000         	goto	i2u382_41
  9791  000030  EF1C  F000         	goto	i2u382_40
  9792  000034                     i2u382_41:
  9793  000034  EF32  F000         	goto	i2l150
  9794  000038                     i2u382_40:
  9795  000038                     
  9796                           ; BSR set to: 14
  9797  000038  ADCD               	btfss	205,6,b	;volatile
  9798  00003A  EF21  F000         	goto	i2u383_41
  9799  00003E  EF23  F000         	goto	i2u383_40
  9800  000042                     i2u383_41:
  9801  000042  EF32  F000         	goto	i2l150
  9802  000046                     i2u383_40:
  9803  000046                     
  9804                           ; BSR set to: 14
  9805                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART2_TxDefaultInterruptHandler();
  9806  000046  D802               	call	i2u384_48
  9807  000048  EF30  F000         	goto	i2u384_49
  9808  00004C                     i2u384_48:
  9809  00004C  0005               	push	
  9810  00004E  6EFA               	movwf	pclath,c
  9811  000050  0100               	movlb	0	; () banked
  9812  000052  51EF               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
  9813  000054  6EFD               	movwf	tosl,c
  9814  000056  51F0               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
  9815  000058  6EFE               	movwf	tosh,c
  9816  00005A  6AFF               	clrf	tosu,c
  9817  00005C  50FA               	movf	pclath,w,c
  9818  00005E  0012               	return		;indir
  9819  000060                     i2u384_49:
  9820                           
  9821                           ;mcc_generated_files/interrupt_manager.c: 66:         }
  9822  000060  EF89  F000         	goto	i2l159
  9823  000064                     i2l150:
  9824                           
  9825                           ; BSR set to: 14
  9826  000064  AFC5               	btfss	197,7,b	;volatile
  9827  000066  EF37  F000         	goto	i2u385_41
  9828  00006A  EF39  F000         	goto	i2u385_40
  9829  00006E                     i2u385_41:
  9830  00006E  EF4F  F000         	goto	i2l152
  9831  000072                     i2u385_40:
  9832  000072                     
  9833                           ; BSR set to: 14
  9834  000072  AFCD               	btfss	205,7,b	;volatile
  9835  000074  EF3E  F000         	goto	i2u386_41
  9836  000078  EF40  F000         	goto	i2u386_40
  9837  00007C                     i2u386_41:
  9838  00007C  EF4F  F000         	goto	i2l152
  9839  000080                     i2u386_40:
  9840  000080                     
  9841                           ; BSR set to: 14
  9842                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART2_RxDefaultInterruptHandler();
  9843  000080  D802               	call	i2u387_48
  9844  000082  EF4D  F000         	goto	i2u387_49
  9845  000086                     i2u387_48:
  9846  000086  0005               	push	
  9847  000088  6EFA               	movwf	pclath,c
  9848  00008A  0100               	movlb	0	; () banked
  9849  00008C  51ED               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
  9850  00008E  6EFD               	movwf	tosl,c
  9851  000090  51EE               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
  9852  000092  6EFE               	movwf	tosh,c
  9853  000094  6AFF               	clrf	tosu,c
  9854  000096  50FA               	movf	pclath,w,c
  9855  000098  0012               	return		;indir
  9856  00009A                     i2u387_49:
  9857                           
  9858                           ;mcc_generated_files/interrupt_manager.c: 70:         }
  9859  00009A  EF89  F000         	goto	i2l159
  9860  00009E                     i2l152:
  9861                           
  9862                           ; BSR set to: 14
  9863  00009E  A9C5               	btfss	197,4,b	;volatile
  9864  0000A0  EF54  F000         	goto	i2u388_41
  9865  0000A4  EF56  F000         	goto	i2u388_40
  9866  0000A8                     i2u388_41:
  9867  0000A8  EF6C  F000         	goto	i2l154
  9868  0000AC                     i2u388_40:
  9869  0000AC                     
  9870                           ; BSR set to: 14
  9871  0000AC  A9CD               	btfss	205,4,b	;volatile
  9872  0000AE  EF5B  F000         	goto	i2u389_41
  9873  0000B2  EF5D  F000         	goto	i2u389_40
  9874  0000B6                     i2u389_41:
  9875  0000B6  EF6C  F000         	goto	i2l154
  9876  0000BA                     i2u389_40:
  9877  0000BA                     
  9878                           ; BSR set to: 14
  9879                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART1_TxDefaultInterruptHandler();
  9880  0000BA  D802               	call	i2u390_48
  9881  0000BC  EF6A  F000         	goto	i2u390_49
  9882  0000C0                     i2u390_48:
  9883  0000C0  0005               	push	
  9884  0000C2  6EFA               	movwf	pclath,c
  9885  0000C4  0100               	movlb	0	; () banked
  9886  0000C6  51EB               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
  9887  0000C8  6EFD               	movwf	tosl,c
  9888  0000CA  51EC               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
  9889  0000CC  6EFE               	movwf	tosh,c
  9890  0000CE  6AFF               	clrf	tosu,c
  9891  0000D0  50FA               	movf	pclath,w,c
  9892  0000D2  0012               	return		;indir
  9893  0000D4                     i2u390_49:
  9894                           
  9895                           ;mcc_generated_files/interrupt_manager.c: 74:         }
  9896  0000D4  EF89  F000         	goto	i2l159
  9897  0000D8                     i2l154:
  9898                           
  9899                           ; BSR set to: 14
  9900  0000D8  ABC5               	btfss	197,5,b	;volatile
  9901  0000DA  EF71  F000         	goto	i2u391_41
  9902  0000DE  EF73  F000         	goto	i2u391_40
  9903  0000E2                     i2u391_41:
  9904  0000E2  EF89  F000         	goto	i2l153
  9905  0000E6                     i2u391_40:
  9906  0000E6                     
  9907                           ; BSR set to: 14
  9908  0000E6  ABCD               	btfss	205,5,b	;volatile
  9909  0000E8  EF78  F000         	goto	i2u392_41
  9910  0000EC  EF7A  F000         	goto	i2u392_40
  9911  0000F0                     i2u392_41:
  9912  0000F0  EF89  F000         	goto	i2l153
  9913  0000F4                     i2u392_40:
  9914  0000F4                     
  9915                           ; BSR set to: 14
  9916                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             EUSART1_RxDefaultInterruptHandler();
  9917  0000F4  D802               	call	i2u393_48
  9918  0000F6  EF87  F000         	goto	i2u393_49
  9919  0000FA                     i2u393_48:
  9920  0000FA  0005               	push	
  9921  0000FC  6EFA               	movwf	pclath,c
  9922  0000FE  0100               	movlb	0	; () banked
  9923  000100  51E9               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
  9924  000102  6EFD               	movwf	tosl,c
  9925  000104  51EA               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
  9926  000106  6EFE               	movwf	tosh,c
  9927  000108  6AFF               	clrf	tosu,c
  9928  00010A  50FA               	movf	pclath,w,c
  9929  00010C  0012               	return		;indir
  9930  00010E                     i2u393_49:
  9931                           
  9932                           ;mcc_generated_files/interrupt_manager.c: 78:         }
  9933  00010E  EF89  F000         	goto	i2l159
  9934  000112                     i2l153:
  9935  000112                     i2l159:
  9936  000112  C004  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  9937  000116  C003  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  9938  00011A  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  9939  00011E  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  9940  000122  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9941  000124  0011               	retfie		f
  9942  000126                     __end_of_INTERRUPT_InterruptManager:
  9943                           	opt callstack 0
  9944                           
  9945 ;; *************** function _EUSART2_Transmit_ISR *****************
  9946 ;; Defined at:
  9947 ;;		line 206 in file "mcc_generated_files/eusart2.c"
  9948 ;; Parameters:    Size  Location     Type
  9949 ;;		None
  9950 ;; Auto vars:     Size  Location     Type
  9951 ;;		None
  9952 ;; Return value:  Size  Location     Type
  9953 ;;                  1    wreg      void 
  9954 ;; Registers used:
  9955 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9956 ;; Tracked objects:
  9957 ;;		On entry : 0/0
  9958 ;;		On exit  : 0/0
  9959 ;;		Unchanged: 0/0
  9960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9965 ;;Total ram usage:        0 bytes
  9966 ;; Hardware stack levels used:    1
  9967 ;; This function calls:
  9968 ;;		Nothing
  9969 ;; This function is called by:
  9970 ;;		_EUSART2_Initialize
  9971 ;;		_INTERRUPT_InterruptManager
  9972 ;; This function uses a non-reentrant model
  9973 ;;
  9974                           
  9975                           	psect	text63
  9976  0026E6                     __ptext63:
  9977                           	opt callstack 0
  9978  0026E6                     _EUSART2_Transmit_ISR:
  9979                           	opt callstack 18
  9980  0026E6                     
  9981                           ;mcc_generated_files/eusart2.c: 210:     if(sizeof(eusart2TxBuffer) > eusart2TxBufferRem
      +                          aining)
  9982  0026E6  0E08               	movlw	8
  9983  0026E8  0100               	movlb	0	; () banked
  9984  0026EA  61F2               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
  9985  0026EC  EF7A  F013         	goto	i2u346_41
  9986  0026F0  EF7C  F013         	goto	i2u346_40
  9987  0026F4                     i2u346_41:
  9988  0026F4  EF94  F013         	goto	i2l333
  9989  0026F8                     i2u346_40:
  9990  0026F8                     
  9991                           ; BSR set to: 0
  9992                           ;mcc_generated_files/eusart2.c: 211:     {;mcc_generated_files/eusart2.c: 212:         T
      +                          X2REG = eusart2TxBuffer[eusart2TxTail++];
  9993  0026F8  0E80               	movlw	low _eusart2TxBuffer
  9994  0026FA  25A3               	addwf	_eusart2TxTail& (0+255),w,b	;volatile
  9995  0026FC  6ED9               	movwf	fsr2l,c
  9996  0026FE  6ADA               	clrf	fsr2h,c
  9997  002700  0E00               	movlw	high _eusart2TxBuffer
  9998  002702  22DA               	addwfc	fsr2h,f,c
  9999  002704  50DF               	movf	indf2,w,c
 10000  002706  010E               	movlb	14	; () banked
 10001  002708  6F9A               	movwf	154,b	;volatile
 10002  00270A                     
 10003                           ; BSR set to: 14
 10004  00270A  0100               	movlb	0	; () banked
 10005  00270C  2BA3               	incf	_eusart2TxTail& (0+255),f,b	;volatile
 10006  00270E                     
 10007                           ; BSR set to: 0
 10008                           ;mcc_generated_files/eusart2.c: 213:         if(sizeof(eusart2TxBuffer) <= eusart2TxTail
      +                          )
 10009  00270E  0E07               	movlw	7
 10010  002710  65A3               	cpfsgt	_eusart2TxTail& (0+255),b	;volatile
 10011  002712  EF8D  F013         	goto	i2u347_41
 10012  002716  EF8F  F013         	goto	i2u347_40
 10013  00271A                     i2u347_41:
 10014  00271A  EF91  F013         	goto	i2l4016
 10015  00271E                     i2u347_40:
 10016  00271E                     
 10017                           ; BSR set to: 0
 10018                           ;mcc_generated_files/eusart2.c: 214:         {;mcc_generated_files/eusart2.c: 215:      
      +                                 eusart2TxTail = 0;
 10019  00271E  0E00               	movlw	0
 10020  002720  6FA3               	movwf	_eusart2TxTail& (0+255),b	;volatile
 10021  002722                     i2l4016:
 10022                           
 10023                           ; BSR set to: 0
 10024                           ;mcc_generated_files/eusart2.c: 217:         eusart2TxBufferRemaining++;
 10025  002722  2BF2               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 10026                           
 10027                           ;mcc_generated_files/eusart2.c: 218:     }
 10028  002724  EF96  F013         	goto	i2l336
 10029  002728                     i2l333:
 10030                           
 10031                           ; BSR set to: 0
 10032                           ;mcc_generated_files/eusart2.c: 220:     {;mcc_generated_files/eusart2.c: 221:         P
      +                          IE3bits.TX2IE = 0;
 10033  002728  010E               	movlb	14	; () banked
 10034  00272A  9DC5               	bcf	197,6,b	;volatile
 10035  00272C                     i2l336:
 10036  00272C  0012               	return		;funcret
 10037  00272E                     __end_of_EUSART2_Transmit_ISR:
 10038                           	opt callstack 0
 10039                           
 10040 ;; *************** function _EUSART2_Receive_ISR *****************
 10041 ;; Defined at:
 10042 ;;		line 225 in file "mcc_generated_files/eusart2.c"
 10043 ;; Parameters:    Size  Location     Type
 10044 ;;		None
 10045 ;; Auto vars:     Size  Location     Type
 10046 ;;		None
 10047 ;; Return value:  Size  Location     Type
 10048 ;;                  1    wreg      void 
 10049 ;; Registers used:
 10050 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 10051 ;; Tracked objects:
 10052 ;;		On entry : 0/0
 10053 ;;		On exit  : 0/0
 10054 ;;		Unchanged: 0/0
 10055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10060 ;;Total ram usage:        0 bytes
 10061 ;; Hardware stack levels used:    1
 10062 ;; Hardware stack levels required when called:    2
 10063 ;; This function calls:
 10064 ;;		Absolute function
 10065 ;;		_EUSART2_DefaultErrorHandler
 10066 ;;		_EUSART2_DefaultFramingErrorHandler
 10067 ;;		_EUSART2_DefaultOverrunErrorHandler
 10068 ;;		_EUSART2_RxDataHandler
 10069 ;; This function is called by:
 10070 ;;		_EUSART2_Initialize
 10071 ;;		_INTERRUPT_InterruptManager
 10072 ;; This function uses a non-reentrant model
 10073 ;;
 10074                           
 10075                           	psect	text64
 10076  001CC8                     __ptext64:
 10077                           	opt callstack 0
 10078  001CC8                     _EUSART2_Receive_ISR:
 10079                           	opt callstack 16
 10080  001CC8                     
 10081                           ;mcc_generated_files/eusart2.c: 228:     eusart2RxStatusBuffer[eusart2RxHead].status = 0
      +                          ;
 10082  001CC8  0E70               	movlw	low _eusart2RxStatusBuffer
 10083  001CCA  2459               	addwf	_eusart2RxHead^0,w,c	;volatile
 10084  001CCC  6ED9               	movwf	fsr2l,c
 10085  001CCE  6ADA               	clrf	fsr2h,c
 10086  001CD0  0E00               	movlw	high _eusart2RxStatusBuffer
 10087  001CD2  22DA               	addwfc	fsr2h,f,c
 10088  001CD4  0E00               	movlw	0
 10089  001CD6  6EDF               	movwf	indf2,c
 10090  001CD8                     
 10091                           ;mcc_generated_files/eusart2.c: 230:     if(RC2STAbits.FERR){
 10092  001CD8  010E               	movlb	14	; () banked
 10093  001CDA  A59D               	btfss	157,2,b	;volatile
 10094  001CDC  EF72  F00E         	goto	i2u348_41
 10095  001CE0  EF74  F00E         	goto	i2u348_40
 10096  001CE4                     i2u348_41:
 10097  001CE4  EF88  F00E         	goto	i2l4026
 10098  001CE8                     i2u348_40:
 10099  001CE8                     
 10100                           ; BSR set to: 14
 10101                           ;mcc_generated_files/eusart2.c: 231:         eusart2RxStatusBuffer[eusart2RxHead].ferr =
      +                           1;
 10102  001CE8  0E70               	movlw	low _eusart2RxStatusBuffer
 10103  001CEA  2459               	addwf	_eusart2RxHead^0,w,c	;volatile
 10104  001CEC  6ED9               	movwf	fsr2l,c
 10105  001CEE  6ADA               	clrf	fsr2h,c
 10106  001CF0  0E00               	movlw	high _eusart2RxStatusBuffer
 10107  001CF2  22DA               	addwfc	fsr2h,f,c
 10108  001CF4  0100               	movlb	0	; () banked
 10109  001CF6  82DF               	bsf	indf2,1,c
 10110  001CF8                     
 10111                           ; BSR set to: 0
 10112                           ;mcc_generated_files/eusart2.c: 232:         EUSART2_FramingErrorHandler();
 10113  001CF8  D802               	call	i2u349_48
 10114  001CFA  EF88  F00E         	goto	i2u349_49
 10115  001CFE                     i2u349_48:
 10116  001CFE  0005               	push	
 10117  001D00  6EFA               	movwf	pclath,c
 10118  001D02  51E7               	movf	_EUSART2_FramingErrorHandler& (0+255),w,b
 10119  001D04  6EFD               	movwf	tosl,c
 10120  001D06  51E8               	movf	(_EUSART2_FramingErrorHandler+1)& (0+255),w,b
 10121  001D08  6EFE               	movwf	tosh,c
 10122  001D0A  6AFF               	clrf	tosu,c
 10123  001D0C  50FA               	movf	pclath,w,c
 10124  001D0E  0012               	return		;indir
 10125  001D10                     i2u349_49:
 10126  001D10                     i2l4026:
 10127                           
 10128                           ;mcc_generated_files/eusart2.c: 235:     if(RC2STAbits.OERR){
 10129  001D10  010E               	movlb	14	; () banked
 10130  001D12  A39D               	btfss	157,1,b	;volatile
 10131  001D14  EF8E  F00E         	goto	i2u350_41
 10132  001D18  EF90  F00E         	goto	i2u350_40
 10133  001D1C                     i2u350_41:
 10134  001D1C  EFA4  F00E         	goto	i2l4032
 10135  001D20                     i2u350_40:
 10136  001D20                     
 10137                           ; BSR set to: 14
 10138                           ;mcc_generated_files/eusart2.c: 236:         eusart2RxStatusBuffer[eusart2RxHead].oerr =
      +                           1;
 10139  001D20  0E70               	movlw	low _eusart2RxStatusBuffer
 10140  001D22  2459               	addwf	_eusart2RxHead^0,w,c	;volatile
 10141  001D24  6ED9               	movwf	fsr2l,c
 10142  001D26  6ADA               	clrf	fsr2h,c
 10143  001D28  0E00               	movlw	high _eusart2RxStatusBuffer
 10144  001D2A  22DA               	addwfc	fsr2h,f,c
 10145  001D2C  0100               	movlb	0	; () banked
 10146  001D2E  84DF               	bsf	indf2,2,c
 10147  001D30                     
 10148                           ; BSR set to: 0
 10149                           ;mcc_generated_files/eusart2.c: 237:         EUSART2_OverrunErrorHandler();
 10150  001D30  D802               	call	i2u351_48
 10151  001D32  EFA4  F00E         	goto	i2u351_49
 10152  001D36                     i2u351_48:
 10153  001D36  0005               	push	
 10154  001D38  6EFA               	movwf	pclath,c
 10155  001D3A  51E5               	movf	_EUSART2_OverrunErrorHandler& (0+255),w,b
 10156  001D3C  6EFD               	movwf	tosl,c
 10157  001D3E  51E6               	movf	(_EUSART2_OverrunErrorHandler+1)& (0+255),w,b
 10158  001D40  6EFE               	movwf	tosh,c
 10159  001D42  6AFF               	clrf	tosu,c
 10160  001D44  50FA               	movf	pclath,w,c
 10161  001D46  0012               	return		;indir
 10162  001D48                     i2u351_49:
 10163  001D48                     i2l4032:
 10164                           
 10165                           ;mcc_generated_files/eusart2.c: 240:     if(eusart2RxStatusBuffer[eusart2RxHead].status)
      +                          {
 10166  001D48  0E70               	movlw	low _eusart2RxStatusBuffer
 10167  001D4A  2459               	addwf	_eusart2RxHead^0,w,c	;volatile
 10168  001D4C  6ED9               	movwf	fsr2l,c
 10169  001D4E  6ADA               	clrf	fsr2h,c
 10170  001D50  0E00               	movlw	high _eusart2RxStatusBuffer
 10171  001D52  22DA               	addwfc	fsr2h,f,c
 10172  001D54  50DF               	movf	indf2,w,c
 10173  001D56  B4D8               	btfsc	status,2,c
 10174  001D58  EFB0  F00E         	goto	i2u352_41
 10175  001D5C  EFB2  F00E         	goto	i2u352_40
 10176  001D60                     i2u352_41:
 10177  001D60  EFC1  F00E         	goto	i2l4036
 10178  001D64                     i2u352_40:
 10179  001D64                     
 10180                           ;mcc_generated_files/eusart2.c: 241:         EUSART2_ErrorHandler();
 10181  001D64  D802               	call	i2u353_48
 10182  001D66  EFBF  F00E         	goto	i2u353_49
 10183  001D6A                     i2u353_48:
 10184  001D6A  0005               	push	
 10185  001D6C  6EFA               	movwf	pclath,c
 10186  001D6E  0100               	movlb	0	; () banked
 10187  001D70  51E3               	movf	_EUSART2_ErrorHandler& (0+255),w,b
 10188  001D72  6EFD               	movwf	tosl,c
 10189  001D74  51E4               	movf	(_EUSART2_ErrorHandler+1)& (0+255),w,b
 10190  001D76  6EFE               	movwf	tosh,c
 10191  001D78  6AFF               	clrf	tosu,c
 10192  001D7A  50FA               	movf	pclath,w,c
 10193  001D7C  0012               	return		;indir
 10194  001D7E                     i2u353_49:
 10195                           
 10196                           ;mcc_generated_files/eusart2.c: 242:     } else {
 10197  001D7E  EFC3  F00E         	goto	i2l343
 10198  001D82                     i2l4036:
 10199                           
 10200                           ;mcc_generated_files/eusart2.c: 243:         EUSART2_RxDataHandler();
 10201  001D82  ECAD  F014         	call	_EUSART2_RxDataHandler	;wreg free
 10202  001D86                     i2l343:
 10203  001D86  0012               	return		;funcret
 10204  001D88                     __end_of_EUSART2_Receive_ISR:
 10205                           	opt callstack 0
 10206                           
 10207 ;; *************** function _EUSART2_DefaultOverrunErrorHandler *****************
 10208 ;; Defined at:
 10209 ;;		line 261 in file "mcc_generated_files/eusart2.c"
 10210 ;; Parameters:    Size  Location     Type
 10211 ;;		None
 10212 ;; Auto vars:     Size  Location     Type
 10213 ;;		None
 10214 ;; Return value:  Size  Location     Type
 10215 ;;                  1    wreg      void 
 10216 ;; Registers used:
 10217 ;;		None
 10218 ;; Tracked objects:
 10219 ;;		On entry : 0/0
 10220 ;;		On exit  : 0/0
 10221 ;;		Unchanged: 0/0
 10222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10227 ;;Total ram usage:        0 bytes
 10228 ;; Hardware stack levels used:    1
 10229 ;; This function calls:
 10230 ;;		Nothing
 10231 ;; This function is called by:
 10232 ;;		_EUSART2_Initialize
 10233 ;;		_EUSART2_Receive_ISR
 10234 ;; This function uses a non-reentrant model
 10235 ;;
 10236                           
 10237                           	psect	text65
 10238  002B0E                     __ptext65:
 10239                           	opt callstack 0
 10240  002B0E                     _EUSART2_DefaultOverrunErrorHandler:
 10241                           	opt callstack 17
 10242  002B0E                     
 10243                           ;mcc_generated_files/eusart2.c: 264:     RC2STAbits.CREN = 0;
 10244  002B0E  010E               	movlb	14	; () banked
 10245  002B10  999D               	bcf	157,4,b	;volatile
 10246                           
 10247                           ;mcc_generated_files/eusart2.c: 265:     RC2STAbits.CREN = 1;
 10248  002B12  899D               	bsf	157,4,b	;volatile
 10249  002B14                     
 10250                           ; BSR set to: 14
 10251  002B14  0012               	return		;funcret
 10252  002B16                     __end_of_EUSART2_DefaultOverrunErrorHandler:
 10253                           	opt callstack 0
 10254                           
 10255 ;; *************** function _EUSART2_DefaultFramingErrorHandler *****************
 10256 ;; Defined at:
 10257 ;;		line 259 in file "mcc_generated_files/eusart2.c"
 10258 ;; Parameters:    Size  Location     Type
 10259 ;;		None
 10260 ;; Auto vars:     Size  Location     Type
 10261 ;;		None
 10262 ;; Return value:  Size  Location     Type
 10263 ;;                  1    wreg      void 
 10264 ;; Registers used:
 10265 ;;		None
 10266 ;; Tracked objects:
 10267 ;;		On entry : 0/0
 10268 ;;		On exit  : 0/0
 10269 ;;		Unchanged: 0/0
 10270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10275 ;;Total ram usage:        0 bytes
 10276 ;; Hardware stack levels used:    1
 10277 ;; This function calls:
 10278 ;;		Nothing
 10279 ;; This function is called by:
 10280 ;;		_EUSART2_Initialize
 10281 ;;		_EUSART2_Receive_ISR
 10282 ;; This function uses a non-reentrant model
 10283 ;;
 10284                           
 10285                           	psect	text66
 10286  002B38                     __ptext66:
 10287                           	opt callstack 0
 10288  002B38                     _EUSART2_DefaultFramingErrorHandler:
 10289                           	opt callstack 17
 10290  002B38  0012               	return		;funcret
 10291  002B3A                     __end_of_EUSART2_DefaultFramingErrorHandler:
 10292                           	opt callstack 0
 10293                           
 10294 ;; *************** function _EUSART2_DefaultErrorHandler *****************
 10295 ;; Defined at:
 10296 ;;		line 269 in file "mcc_generated_files/eusart2.c"
 10297 ;; Parameters:    Size  Location     Type
 10298 ;;		None
 10299 ;; Auto vars:     Size  Location     Type
 10300 ;;		None
 10301 ;; Return value:  Size  Location     Type
 10302 ;;                  1    wreg      void 
 10303 ;; Registers used:
 10304 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10305 ;; Tracked objects:
 10306 ;;		On entry : 0/0
 10307 ;;		On exit  : 0/0
 10308 ;;		Unchanged: 0/0
 10309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10314 ;;Total ram usage:        0 bytes
 10315 ;; Hardware stack levels used:    1
 10316 ;; Hardware stack levels required when called:    1
 10317 ;; This function calls:
 10318 ;;		_EUSART2_RxDataHandler
 10319 ;; This function is called by:
 10320 ;;		_EUSART2_Initialize
 10321 ;;		_EUSART2_Receive_ISR
 10322 ;; This function uses a non-reentrant model
 10323 ;;
 10324                           
 10325                           	psect	text67
 10326  002B22                     __ptext67:
 10327                           	opt callstack 0
 10328  002B22                     _EUSART2_DefaultErrorHandler:
 10329                           	opt callstack 16
 10330  002B22                     
 10331                           ;mcc_generated_files/eusart2.c: 270:     EUSART2_RxDataHandler();
 10332  002B22  ECAD  F014         	call	_EUSART2_RxDataHandler	;wreg free
 10333  002B26  0012               	return		;funcret
 10334  002B28                     __end_of_EUSART2_DefaultErrorHandler:
 10335                           	opt callstack 0
 10336                           
 10337 ;; *************** function _EUSART2_RxDataHandler *****************
 10338 ;; Defined at:
 10339 ;;		line 249 in file "mcc_generated_files/eusart2.c"
 10340 ;; Parameters:    Size  Location     Type
 10341 ;;		None
 10342 ;; Auto vars:     Size  Location     Type
 10343 ;;		None
 10344 ;; Return value:  Size  Location     Type
 10345 ;;                  1    wreg      void 
 10346 ;; Registers used:
 10347 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10348 ;; Tracked objects:
 10349 ;;		On entry : 0/0
 10350 ;;		On exit  : 0/0
 10351 ;;		Unchanged: 0/0
 10352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10357 ;;Total ram usage:        0 bytes
 10358 ;; Hardware stack levels used:    1
 10359 ;; This function calls:
 10360 ;;		Nothing
 10361 ;; This function is called by:
 10362 ;;		_EUSART2_Receive_ISR
 10363 ;;		_EUSART2_DefaultErrorHandler
 10364 ;; This function uses a non-reentrant model
 10365 ;;
 10366                           
 10367                           	psect	text68
 10368  00295A                     __ptext68:
 10369                           	opt callstack 0
 10370  00295A                     _EUSART2_RxDataHandler:
 10371                           	opt callstack 17
 10372  00295A                     
 10373                           ;mcc_generated_files/eusart2.c: 251:     eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 10374  00295A  0E78               	movlw	low _eusart2RxBuffer
 10375  00295C  2459               	addwf	_eusart2RxHead^0,w,c	;volatile
 10376  00295E  6ED9               	movwf	fsr2l,c
 10377  002960  6ADA               	clrf	fsr2h,c
 10378  002962  0E00               	movlw	high _eusart2RxBuffer
 10379  002964  22DA               	addwfc	fsr2h,f,c
 10380  002966  CE99 FFDF          	movff	3737,indf2	;volatile
 10381  00296A  2A59               	incf	_eusart2RxHead^0,f,c	;volatile
 10382  00296C                     
 10383                           ;mcc_generated_files/eusart2.c: 252:     if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 10384  00296C  0E07               	movlw	7
 10385  00296E  6459               	cpfsgt	_eusart2RxHead^0,c	;volatile
 10386  002970  EFBC  F014         	goto	i2u323_41
 10387  002974  EFBE  F014         	goto	i2u323_40
 10388  002978                     i2u323_41:
 10389  002978  EFC0  F014         	goto	i2l3738
 10390  00297C                     i2u323_40:
 10391  00297C                     
 10392                           ;mcc_generated_files/eusart2.c: 253:     {;mcc_generated_files/eusart2.c: 254:         e
      +                          usart2RxHead = 0;
 10393  00297C  0E00               	movlw	0
 10394  00297E  6E59               	movwf	_eusart2RxHead^0,c	;volatile
 10395  002980                     i2l3738:
 10396                           
 10397                           ;mcc_generated_files/eusart2.c: 256:     eusart2RxCount++;
 10398  002980  0100               	movlb	0	; () banked
 10399  002982  2BA1               	incf	_eusart2RxCount& (0+255),f,b	;volatile
 10400  002984                     
 10401                           ; BSR set to: 0
 10402  002984  0012               	return		;funcret
 10403  002986                     __end_of_EUSART2_RxDataHandler:
 10404                           	opt callstack 0
 10405                           
 10406 ;; *************** function _EUSART1_Transmit_ISR *****************
 10407 ;; Defined at:
 10408 ;;		line 197 in file "mcc_generated_files/eusart1.c"
 10409 ;; Parameters:    Size  Location     Type
 10410 ;;		None
 10411 ;; Auto vars:     Size  Location     Type
 10412 ;;		None
 10413 ;; Return value:  Size  Location     Type
 10414 ;;                  1    wreg      void 
 10415 ;; Registers used:
 10416 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10417 ;; Tracked objects:
 10418 ;;		On entry : 0/0
 10419 ;;		On exit  : 0/0
 10420 ;;		Unchanged: 0/0
 10421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10426 ;;Total ram usage:        0 bytes
 10427 ;; Hardware stack levels used:    1
 10428 ;; This function calls:
 10429 ;;		Nothing
 10430 ;; This function is called by:
 10431 ;;		_EUSART1_Initialize
 10432 ;;		_INTERRUPT_InterruptManager
 10433 ;; This function uses a non-reentrant model
 10434 ;;
 10435                           
 10436                           	psect	text69
 10437  002772                     __ptext69:
 10438                           	opt callstack 0
 10439  002772                     _EUSART1_Transmit_ISR:
 10440                           	opt callstack 18
 10441  002772                     
 10442                           ;mcc_generated_files/eusart1.c: 201:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 10443  002772  0E10               	movlw	16
 10444  002774  0100               	movlb	0	; () banked
 10445  002776  61F1               	cpfslt	_eusart1TxBufferRemaining& (0+255),b	;volatile
 10446  002778  EFC0  F013         	goto	i2u354_41
 10447  00277C  EFC2  F013         	goto	i2u354_40
 10448  002780                     i2u354_41:
 10449  002780  EFD8  F013         	goto	i2l477
 10450  002784                     i2u354_40:
 10451  002784                     
 10452                           ; BSR set to: 0
 10453                           ;mcc_generated_files/eusart1.c: 202:     {;mcc_generated_files/eusart1.c: 203:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 10454  002784  0E60               	movlw	low _eusart1TxBuffer
 10455  002786  259E               	addwf	_eusart1TxTail& (0+255),w,b	;volatile
 10456  002788  6ED9               	movwf	fsr2l,c
 10457  00278A  6ADA               	clrf	fsr2h,c
 10458  00278C  0E00               	movlw	high _eusart1TxBuffer
 10459  00278E  22DA               	addwfc	fsr2h,f,c
 10460  002790  50DF               	movf	indf2,w,c
 10461  002792  6E9A               	movwf	154,c	;volatile
 10462  002794                     
 10463                           ; BSR set to: 0
 10464  002794  2B9E               	incf	_eusart1TxTail& (0+255),f,b	;volatile
 10465  002796                     
 10466                           ; BSR set to: 0
 10467                           ;mcc_generated_files/eusart1.c: 204:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 10468  002796  0E0F               	movlw	15
 10469  002798  659E               	cpfsgt	_eusart1TxTail& (0+255),b	;volatile
 10470  00279A  EFD1  F013         	goto	i2u355_41
 10471  00279E  EFD3  F013         	goto	i2u355_40
 10472  0027A2                     i2u355_41:
 10473  0027A2  EFD5  F013         	goto	i2l4048
 10474  0027A6                     i2u355_40:
 10475  0027A6                     
 10476                           ; BSR set to: 0
 10477                           ;mcc_generated_files/eusart1.c: 205:         {;mcc_generated_files/eusart1.c: 206:      
      +                                 eusart1TxTail = 0;
 10478  0027A6  0E00               	movlw	0
 10479  0027A8  6F9E               	movwf	_eusart1TxTail& (0+255),b	;volatile
 10480  0027AA                     i2l4048:
 10481                           
 10482                           ; BSR set to: 0
 10483                           ;mcc_generated_files/eusart1.c: 208:         eusart1TxBufferRemaining++;
 10484  0027AA  2BF1               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 10485                           
 10486                           ;mcc_generated_files/eusart1.c: 209:     }
 10487  0027AC  EFDA  F013         	goto	i2l480
 10488  0027B0                     i2l477:
 10489                           
 10490                           ; BSR set to: 0
 10491                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         P
      +                          IE3bits.TX1IE = 0;
 10492  0027B0  010E               	movlb	14	; () banked
 10493  0027B2  99C5               	bcf	197,4,b	;volatile
 10494  0027B4                     i2l480:
 10495  0027B4  0012               	return		;funcret
 10496  0027B6                     __end_of_EUSART1_Transmit_ISR:
 10497                           	opt callstack 0
 10498                           
 10499 ;; *************** function _EUSART1_Receive_ISR *****************
 10500 ;; Defined at:
 10501 ;;		line 216 in file "mcc_generated_files/eusart1.c"
 10502 ;; Parameters:    Size  Location     Type
 10503 ;;		None
 10504 ;; Auto vars:     Size  Location     Type
 10505 ;;		None
 10506 ;; Return value:  Size  Location     Type
 10507 ;;                  1    wreg      void 
 10508 ;; Registers used:
 10509 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 10510 ;; Tracked objects:
 10511 ;;		On entry : 0/0
 10512 ;;		On exit  : 0/0
 10513 ;;		Unchanged: 0/0
 10514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10519 ;;Total ram usage:        0 bytes
 10520 ;; Hardware stack levels used:    1
 10521 ;; Hardware stack levels required when called:    2
 10522 ;; This function calls:
 10523 ;;		Absolute function
 10524 ;;		_EUSART1_DefaultErrorHandler
 10525 ;;		_EUSART1_DefaultFramingErrorHandler
 10526 ;;		_EUSART1_DefaultOverrunErrorHandler
 10527 ;;		_EUSART1_RxDataHandler
 10528 ;; This function is called by:
 10529 ;;		_EUSART1_Initialize
 10530 ;;		_INTERRUPT_InterruptManager
 10531 ;; This function uses a non-reentrant model
 10532 ;;
 10533                           
 10534                           	psect	text70
 10535  001D88                     __ptext70:
 10536                           	opt callstack 0
 10537  001D88                     _EUSART1_Receive_ISR:
 10538                           	opt callstack 16
 10539  001D88                     
 10540                           ;mcc_generated_files/eusart1.c: 219:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 10541  001D88  0E00               	movlw	low _eusart1RxStatusBuffer
 10542  001D8A  2458               	addwf	_eusart1RxHead^0,w,c	;volatile
 10543  001D8C  6ED9               	movwf	fsr2l,c
 10544  001D8E  6ADA               	clrf	fsr2h,c
 10545  001D90  0E02               	movlw	high _eusart1RxStatusBuffer
 10546  001D92  22DA               	addwfc	fsr2h,f,c
 10547  001D94  0E00               	movlw	0
 10548  001D96  6EDF               	movwf	indf2,c
 10549  001D98                     
 10550                           ;mcc_generated_files/eusart1.c: 221:     if(RC1STAbits.FERR){
 10551  001D98  A49D               	btfss	157,2,c	;volatile
 10552  001D9A  EFD1  F00E         	goto	i2u356_41
 10553  001D9E  EFD3  F00E         	goto	i2u356_40
 10554  001DA2                     i2u356_41:
 10555  001DA2  EFE8  F00E         	goto	i2l4058
 10556  001DA6                     i2u356_40:
 10557  001DA6                     
 10558                           ;mcc_generated_files/eusart1.c: 222:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 10559  001DA6  0E00               	movlw	low _eusart1RxStatusBuffer
 10560  001DA8  2458               	addwf	_eusart1RxHead^0,w,c	;volatile
 10561  001DAA  6ED9               	movwf	fsr2l,c
 10562  001DAC  6ADA               	clrf	fsr2h,c
 10563  001DAE  0E02               	movlw	high _eusart1RxStatusBuffer
 10564  001DB0  22DA               	addwfc	fsr2h,f,c
 10565  001DB2  0102               	movlb	2	; () banked
 10566  001DB4  82DF               	bsf	indf2,1,c
 10567  001DB6                     
 10568                           ; BSR set to: 2
 10569                           ;mcc_generated_files/eusart1.c: 223:         EUSART1_FramingErrorHandler();
 10570  001DB6  D802               	call	i2u357_48
 10571  001DB8  EFE8  F00E         	goto	i2u357_49
 10572  001DBC                     i2u357_48:
 10573  001DBC  0005               	push	
 10574  001DBE  6EFA               	movwf	pclath,c
 10575  001DC0  0100               	movlb	0	; () banked
 10576  001DC2  51E1               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
 10577  001DC4  6EFD               	movwf	tosl,c
 10578  001DC6  51E2               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
 10579  001DC8  6EFE               	movwf	tosh,c
 10580  001DCA  6AFF               	clrf	tosu,c
 10581  001DCC  50FA               	movf	pclath,w,c
 10582  001DCE  0012               	return		;indir
 10583  001DD0                     i2u357_49:
 10584  001DD0                     i2l4058:
 10585                           
 10586                           ;mcc_generated_files/eusart1.c: 226:     if(RC1STAbits.OERR){
 10587  001DD0  A29D               	btfss	157,1,c	;volatile
 10588  001DD2  EFED  F00E         	goto	i2u358_41
 10589  001DD6  EFEF  F00E         	goto	i2u358_40
 10590  001DDA                     i2u358_41:
 10591  001DDA  EF04  F00F         	goto	i2l4064
 10592  001DDE                     i2u358_40:
 10593  001DDE                     
 10594                           ;mcc_generated_files/eusart1.c: 227:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 10595  001DDE  0E00               	movlw	low _eusart1RxStatusBuffer
 10596  001DE0  2458               	addwf	_eusart1RxHead^0,w,c	;volatile
 10597  001DE2  6ED9               	movwf	fsr2l,c
 10598  001DE4  6ADA               	clrf	fsr2h,c
 10599  001DE6  0E02               	movlw	high _eusart1RxStatusBuffer
 10600  001DE8  22DA               	addwfc	fsr2h,f,c
 10601  001DEA  0102               	movlb	2	; () banked
 10602  001DEC  84DF               	bsf	indf2,2,c
 10603  001DEE                     
 10604                           ; BSR set to: 2
 10605                           ;mcc_generated_files/eusart1.c: 228:         EUSART1_OverrunErrorHandler();
 10606  001DEE  D802               	call	i2u359_48
 10607  001DF0  EF04  F00F         	goto	i2u359_49
 10608  001DF4                     i2u359_48:
 10609  001DF4  0005               	push	
 10610  001DF6  6EFA               	movwf	pclath,c
 10611  001DF8  0100               	movlb	0	; () banked
 10612  001DFA  51DF               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
 10613  001DFC  6EFD               	movwf	tosl,c
 10614  001DFE  51E0               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
 10615  001E00  6EFE               	movwf	tosh,c
 10616  001E02  6AFF               	clrf	tosu,c
 10617  001E04  50FA               	movf	pclath,w,c
 10618  001E06  0012               	return		;indir
 10619  001E08                     i2u359_49:
 10620  001E08                     i2l4064:
 10621                           
 10622                           ;mcc_generated_files/eusart1.c: 231:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 10623  001E08  0E00               	movlw	low _eusart1RxStatusBuffer
 10624  001E0A  2458               	addwf	_eusart1RxHead^0,w,c	;volatile
 10625  001E0C  6ED9               	movwf	fsr2l,c
 10626  001E0E  6ADA               	clrf	fsr2h,c
 10627  001E10  0E02               	movlw	high _eusart1RxStatusBuffer
 10628  001E12  22DA               	addwfc	fsr2h,f,c
 10629  001E14  50DF               	movf	indf2,w,c
 10630  001E16  B4D8               	btfsc	status,2,c
 10631  001E18  EF10  F00F         	goto	i2u360_41
 10632  001E1C  EF12  F00F         	goto	i2u360_40
 10633  001E20                     i2u360_41:
 10634  001E20  EF21  F00F         	goto	i2l4068
 10635  001E24                     i2u360_40:
 10636  001E24                     
 10637                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_ErrorHandler();
 10638  001E24  D802               	call	i2u361_48
 10639  001E26  EF1F  F00F         	goto	i2u361_49
 10640  001E2A                     i2u361_48:
 10641  001E2A  0005               	push	
 10642  001E2C  6EFA               	movwf	pclath,c
 10643  001E2E  0100               	movlb	0	; () banked
 10644  001E30  51DD               	movf	_EUSART1_ErrorHandler& (0+255),w,b
 10645  001E32  6EFD               	movwf	tosl,c
 10646  001E34  51DE               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
 10647  001E36  6EFE               	movwf	tosh,c
 10648  001E38  6AFF               	clrf	tosu,c
 10649  001E3A  50FA               	movf	pclath,w,c
 10650  001E3C  0012               	return		;indir
 10651  001E3E                     i2u361_49:
 10652                           
 10653                           ;mcc_generated_files/eusart1.c: 233:     } else {
 10654  001E3E  EF23  F00F         	goto	i2l487
 10655  001E42                     i2l4068:
 10656                           
 10657                           ;mcc_generated_files/eusart1.c: 234:         EUSART1_RxDataHandler();
 10658  001E42  ECC3  F014         	call	_EUSART1_RxDataHandler	;wreg free
 10659  001E46                     i2l487:
 10660  001E46  0012               	return		;funcret
 10661  001E48                     __end_of_EUSART1_Receive_ISR:
 10662                           	opt callstack 0
 10663                           
 10664 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 10665 ;; Defined at:
 10666 ;;		line 252 in file "mcc_generated_files/eusart1.c"
 10667 ;; Parameters:    Size  Location     Type
 10668 ;;		None
 10669 ;; Auto vars:     Size  Location     Type
 10670 ;;		None
 10671 ;; Return value:  Size  Location     Type
 10672 ;;                  1    wreg      void 
 10673 ;; Registers used:
 10674 ;;		None
 10675 ;; Tracked objects:
 10676 ;;		On entry : 0/0
 10677 ;;		On exit  : 0/0
 10678 ;;		Unchanged: 0/0
 10679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10684 ;;Total ram usage:        0 bytes
 10685 ;; Hardware stack levels used:    1
 10686 ;; This function calls:
 10687 ;;		Nothing
 10688 ;; This function is called by:
 10689 ;;		_EUSART1_Initialize
 10690 ;;		_EUSART1_Receive_ISR
 10691 ;; This function uses a non-reentrant model
 10692 ;;
 10693                           
 10694                           	psect	text71
 10695  002B28                     __ptext71:
 10696                           	opt callstack 0
 10697  002B28                     _EUSART1_DefaultOverrunErrorHandler:
 10698                           	opt callstack 17
 10699  002B28                     
 10700                           ;mcc_generated_files/eusart1.c: 255:     RC1STAbits.CREN = 0;
 10701  002B28  989D               	bcf	157,4,c	;volatile
 10702                           
 10703                           ;mcc_generated_files/eusart1.c: 256:     RC1STAbits.CREN = 1;
 10704  002B2A  889D               	bsf	157,4,c	;volatile
 10705  002B2C  0012               	return		;funcret
 10706  002B2E                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 10707                           	opt callstack 0
 10708                           
 10709 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 10710 ;; Defined at:
 10711 ;;		line 250 in file "mcc_generated_files/eusart1.c"
 10712 ;; Parameters:    Size  Location     Type
 10713 ;;		None
 10714 ;; Auto vars:     Size  Location     Type
 10715 ;;		None
 10716 ;; Return value:  Size  Location     Type
 10717 ;;                  1    wreg      void 
 10718 ;; Registers used:
 10719 ;;		None
 10720 ;; Tracked objects:
 10721 ;;		On entry : 0/0
 10722 ;;		On exit  : 0/0
 10723 ;;		Unchanged: 0/0
 10724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10729 ;;Total ram usage:        0 bytes
 10730 ;; Hardware stack levels used:    1
 10731 ;; This function calls:
 10732 ;;		Nothing
 10733 ;; This function is called by:
 10734 ;;		_EUSART1_Initialize
 10735 ;;		_EUSART1_Receive_ISR
 10736 ;; This function uses a non-reentrant model
 10737 ;;
 10738                           
 10739                           	psect	text72
 10740  002B3A                     __ptext72:
 10741                           	opt callstack 0
 10742  002B3A                     _EUSART1_DefaultFramingErrorHandler:
 10743                           	opt callstack 17
 10744  002B3A  0012               	return		;funcret
 10745  002B3C                     __end_of_EUSART1_DefaultFramingErrorHandler:
 10746                           	opt callstack 0
 10747                           
 10748 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 10749 ;; Defined at:
 10750 ;;		line 260 in file "mcc_generated_files/eusart1.c"
 10751 ;; Parameters:    Size  Location     Type
 10752 ;;		None
 10753 ;; Auto vars:     Size  Location     Type
 10754 ;;		None
 10755 ;; Return value:  Size  Location     Type
 10756 ;;                  1    wreg      void 
 10757 ;; Registers used:
 10758 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10759 ;; Tracked objects:
 10760 ;;		On entry : 0/0
 10761 ;;		On exit  : 0/0
 10762 ;;		Unchanged: 0/0
 10763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10768 ;;Total ram usage:        0 bytes
 10769 ;; Hardware stack levels used:    1
 10770 ;; Hardware stack levels required when called:    1
 10771 ;; This function calls:
 10772 ;;		_EUSART1_RxDataHandler
 10773 ;; This function is called by:
 10774 ;;		_EUSART1_Initialize
 10775 ;;		_EUSART1_Receive_ISR
 10776 ;; This function uses a non-reentrant model
 10777 ;;
 10778                           
 10779                           	psect	text73
 10780  002B2E                     __ptext73:
 10781                           	opt callstack 0
 10782  002B2E                     _EUSART1_DefaultErrorHandler:
 10783                           	opt callstack 16
 10784  002B2E                     
 10785                           ;mcc_generated_files/eusart1.c: 261:     EUSART1_RxDataHandler();
 10786  002B2E  ECC3  F014         	call	_EUSART1_RxDataHandler	;wreg free
 10787  002B32  0012               	return		;funcret
 10788  002B34                     __end_of_EUSART1_DefaultErrorHandler:
 10789                           	opt callstack 0
 10790                           
 10791 ;; *************** function _EUSART1_RxDataHandler *****************
 10792 ;; Defined at:
 10793 ;;		line 240 in file "mcc_generated_files/eusart1.c"
 10794 ;; Parameters:    Size  Location     Type
 10795 ;;		None
 10796 ;; Auto vars:     Size  Location     Type
 10797 ;;		None
 10798 ;; Return value:  Size  Location     Type
 10799 ;;                  1    wreg      void 
 10800 ;; Registers used:
 10801 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10802 ;; Tracked objects:
 10803 ;;		On entry : 0/0
 10804 ;;		On exit  : 0/0
 10805 ;;		Unchanged: 0/0
 10806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10811 ;;Total ram usage:        0 bytes
 10812 ;; Hardware stack levels used:    1
 10813 ;; This function calls:
 10814 ;;		Nothing
 10815 ;; This function is called by:
 10816 ;;		_EUSART1_Receive_ISR
 10817 ;;		_EUSART1_DefaultErrorHandler
 10818 ;; This function uses a non-reentrant model
 10819 ;;
 10820                           
 10821                           	psect	text74
 10822  002986                     __ptext74:
 10823                           	opt callstack 0
 10824  002986                     _EUSART1_RxDataHandler:
 10825                           	opt callstack 17
 10826  002986                     
 10827                           ;mcc_generated_files/eusart1.c: 242:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 10828  002986  0E64               	movlw	low _eusart1RxBuffer
 10829  002988  2458               	addwf	_eusart1RxHead^0,w,c	;volatile
 10830  00298A  6ED9               	movwf	fsr2l,c
 10831  00298C  6ADA               	clrf	fsr2h,c
 10832  00298E  0E03               	movlw	high _eusart1RxBuffer
 10833  002990  22DA               	addwfc	fsr2h,f,c
 10834  002992  CF99 FFDF          	movff	3993,indf2	;volatile
 10835  002996  2A58               	incf	_eusart1RxHead^0,f,c	;volatile
 10836  002998                     
 10837                           ;mcc_generated_files/eusart1.c: 243:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 10838  002998  0E63               	movlw	99
 10839  00299A  6458               	cpfsgt	_eusart1RxHead^0,c	;volatile
 10840  00299C  EFD2  F014         	goto	i2u324_41
 10841  0029A0  EFD4  F014         	goto	i2u324_40
 10842  0029A4                     i2u324_41:
 10843  0029A4  EFD6  F014         	goto	i2l3758
 10844  0029A8                     i2u324_40:
 10845  0029A8                     
 10846                           ;mcc_generated_files/eusart1.c: 244:     {;mcc_generated_files/eusart1.c: 245:         e
      +                          usart1RxHead = 0;
 10847  0029A8  0E00               	movlw	0
 10848  0029AA  6E58               	movwf	_eusart1RxHead^0,c	;volatile
 10849  0029AC                     i2l3758:
 10850                           
 10851                           ;mcc_generated_files/eusart1.c: 247:     eusart1RxCount++;
 10852  0029AC  0100               	movlb	0	; () banked
 10853  0029AE  2B9C               	incf	_eusart1RxCount& (0+255),f,b	;volatile
 10854  0029B0                     
 10855                           ; BSR set to: 0
 10856  0029B0  0012               	return		;funcret
 10857  0029B2                     __end_of_EUSART1_RxDataHandler:
 10858                           	opt callstack 0
 10859                           
 10860                           	psect	text75
 10861  000000                     __ptext75:
 10862                           	opt callstack 0
 10863  000000                     
 10864                           	psect	rparam
 10865  0000                     
 10866                           	psect	temp
 10867  00005A                     btemp:
 10868                           	opt callstack 0
 10869  00005A                     	ds	1
 10870  0000                     int$flags	set	btemp
 10871  0000                     wtemp8	set	btemp+1
 10872  0000                     ttemp5	set	btemp+1
 10873  0000                     ttemp6	set	btemp+4
 10874  0000                     ttemp7	set	btemp+8
 10875                           tosu	equ	0xFFF
 10876                           tosh	equ	0xFFE
 10877                           tosl	equ	0xFFD
 10878                           stkptr	equ	0xFFC
 10879                           pclatu	equ	0xFFB
 10880                           pclath	equ	0xFFA
 10881                           pcl	equ	0xFF9
 10882                           tblptru	equ	0xFF8
 10883                           tblptrh	equ	0xFF7
 10884                           tblptrl	equ	0xFF6
 10885                           tablat	equ	0xFF5
 10886                           prodh	equ	0xFF4
 10887                           prodl	equ	0xFF3
 10888                           indf0	equ	0xFEF
 10889                           postinc0	equ	0xFEE
 10890                           postdec0	equ	0xFED
 10891                           preinc0	equ	0xFEC
 10892                           plusw0	equ	0xFEB
 10893                           fsr0h	equ	0xFEA
 10894                           fsr0l	equ	0xFE9
 10895                           wreg	equ	0xFE8
 10896                           indf1	equ	0xFE7
 10897                           postinc1	equ	0xFE6
 10898                           postdec1	equ	0xFE5
 10899                           preinc1	equ	0xFE4
 10900                           plusw1	equ	0xFE3
 10901                           fsr1h	equ	0xFE2
 10902                           fsr1l	equ	0xFE1
 10903                           bsr	equ	0xFE0
 10904                           indf2	equ	0xFDF
 10905                           postinc2	equ	0xFDE
 10906                           postdec2	equ	0xFDD
 10907                           preinc2	equ	0xFDC
 10908                           plusw2	equ	0xFDB
 10909                           fsr2h	equ	0xFDA
 10910                           fsr2l	equ	0xFD9
 10911                           status	equ	0xFD8


Data Sizes:
    Strings     504
    Constant    0
    Data        141
    BSS         537
    Persistent  22
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      90
    BANK0           160     56     160
    BANK1           256      4     232
    BANK2           256      0     164
    BANK3           256      0     200
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), STR_5(CODE[9]), 
		 -> STR_4(CODE[12]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), STR_5(CODE[9]), 
		 -> STR_4(CODE[12]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_19(CODE[27]), STR_18(CODE[21]), STR_17(CODE[36]), STR_16(CODE[28]), 
		 -> STR_15(CODE[4]), STR_14(CODE[23]), STR_13(CODE[32]), STR_12(CODE[4]), 
		 -> STR_11(CODE[23]), STR_10(CODE[19]), STR_9(CODE[35]), STR_8(CODE[55]), 
		 -> STR_7(CODE[53]), STR_6(CODE[29]), STR_3(CODE[43]), STR_2(CODE[25]), 
		 -> STR_1(CODE[57]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1851_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_19(CODE[27]), STR_18(CODE[21]), STR_17(CODE[36]), STR_16(CODE[28]), 
		 -> STR_15(CODE[4]), STR_14(CODE[23]), STR_13(CODE[32]), STR_12(CODE[4]), 
		 -> STR_11(CODE[23]), STR_10(CODE[19]), STR_9(CODE[35]), STR_8(CODE[55]), 
		 -> STR_7(CODE[53]), STR_6(CODE[29]), STR_3(CODE[43]), STR_2(CODE[25]), 
		 -> STR_1(CODE[57]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_19(CODE[27]), STR_18(CODE[21]), STR_17(CODE[36]), STR_16(CODE[28]), 
		 -> STR_15(CODE[4]), STR_14(CODE[23]), STR_13(CODE[32]), STR_12(CODE[4]), 
		 -> STR_11(CODE[23]), STR_10(CODE[19]), STR_9(CODE[35]), STR_8(CODE[55]), 
		 -> STR_7(CODE[53]), STR_6(CODE[29]), STR_3(CODE[43]), STR_2(CODE[25]), 
		 -> STR_1(CODE[57]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 57
		 -> STR_19(CODE[27]), STR_18(CODE[21]), STR_17(CODE[36]), STR_16(CODE[28]), 
		 -> STR_15(CODE[4]), STR_14(CODE[23]), STR_13(CODE[32]), STR_12(CODE[4]), 
		 -> STR_11(CODE[23]), STR_10(CODE[19]), STR_9(CODE[35]), STR_8(CODE[55]), 
		 -> STR_7(CODE[53]), STR_6(CODE[29]), STR_3(CODE[43]), STR_2(CODE[25]), 
		 -> STR_1(CODE[57]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), STR_5(CODE[9]), STR_4(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), STR_5(CODE[9]), STR_4(CODE[12]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), STR_5(CODE[9]), STR_4(CODE[12]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    UART1_Write_string@data	PTR unsigned int  size(2) Largest target is 64
		 -> MBRespon(BANK1[64]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    EUSART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), 

    EUSART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), 

    EUSART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultErrorHandler(), 

    EUSART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultFramingErrorHandler(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_Receive_ISR(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _main->_ModbusRx
    _main->_PrintModRespon
    _main->_PrintModbus
    _UART1_Write_string->_EUSART1_Write
    _EUSART2_Initialize->_EUSART2_SetErrorHandler
    _EUSART2_Initialize->_EUSART2_SetFramingErrorHandler
    _EUSART2_Initialize->_EUSART2_SetOverrunErrorHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART2_Write
    _abs->___aomod
    _atoi->_isspace

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _PrintModbus->_printf
    _PrintModRespon->_printf
    _ModbusRx->_checkCRC
    _checkCRC->_printf
    _InitialiseString->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  192293
                                             85 COMRAM     1     1      0
                                              0 BANK1      4     4      0
                    _ClearModbusData
                  _ClearModbusRespon
                        _ClearRxBuff
                   _InitialiseString
                           _ModbusRx
                     _PrintModRespon
                        _PrintModbus
                             _RXMode
                  _SYSTEM_Initialize
                 _UART1_Write_string
                        _generateCRC
                             _printf
 ---------------------------------------------------------------------------------
 (1) _generateCRC                                         15    12      3     743
                                              4 COMRAM    15    12      3
 ---------------------------------------------------------------------------------
 (1) _UART1_Write_string                                   7     3      4     372
                                              5 COMRAM     7     3      4
                      _EUSART1_Write
                 _EUSART1_is_tx_done
                _EUSART1_is_tx_ready
                             _TXMode
 ---------------------------------------------------------------------------------
 (2) _TXMode                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_is_tx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_is_tx_done                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Write                                        1     1      0      62
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1210
                 _EUSART1_Initialize
                 _EUSART2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     605
            _EUSART2_SetErrorHandler
     _EUSART2_SetFramingErrorHandler
     _EUSART2_SetOverrunErrorHandler
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetOverrunErrorHandler                       2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetFramingErrorHandler                       2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetErrorHandler                              2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     605
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _PrintModbus                                          3     3      0   31579
                                             84 COMRAM     1     1      0
                                             41 BANK0      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _PrintModRespon                                       3     3      0   31579
                                             84 COMRAM     1     1      0
                                             41 BANK0      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _ModbusRx                                             1     1      0   63578
                                             84 COMRAM     1     1      0
                  _AddRxBuffToModBus
                        _ClearRxBuff
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                             _RXMode
                           _checkCRC
                             _printf
 ---------------------------------------------------------------------------------
 (2) _checkCRC                                            15    15      0   31922
                                             41 BANK0     15    15      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _RXMode                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         1     1      0      37
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ClearRxBuff                                          3     3      0      71
                                              4 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _AddRxBuffToModBus                                    3     3      0      71
                                              4 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _InitialiseString                                     0     0      0   31477
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              12     4      8   31477
                                             29 BANK0     12     4      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   29842
                                             82 COMRAM     2     2      0
                                             23 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           45    39      6   29279
                                             72 COMRAM    10     4      6
                                              0 BANK0     23    23      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    7157
                                             33 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     512
                                             10 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    6539
                                             33 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     412
                                              4 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     421
                                              4 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _stoa                                                22    18      4    2732
                                             15 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    7393
                                             33 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    5127
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     310
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    2077
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1577
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      93
                                              5 COMRAM     1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART2_Write                                        1     1      0      62
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1815
                                             11 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     712
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _ClearModbusRespon                                    2     2      0     102
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ClearModbusData                                      2     2      0     102
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManager                          4     4      0       0
                                              0 COMRAM     4     4      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                _EUSART2_Receive_ISR *
               _EUSART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _EUSART2_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART2_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART2_DefaultErrorHandler *
 _EUSART2_DefaultFramingErrorHandler *
 _EUSART2_DefaultOverrunErrorHandler *
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _EUSART2_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART2_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART2_DefaultErrorHandler                         0     0      0       0
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _EUSART2_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearModbusData
   _ClearModbusRespon
   _ClearRxBuff
   _InitialiseString
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _ModbusRx
     _AddRxBuffToModBus
     _ClearRxBuff
     _EUSART1_Read
     _EUSART1_is_rx_ready
     _RXMode
     _checkCRC
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _PrintModRespon
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _PrintModbus
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _RXMode
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetErrorHandler
       _EUSART2_SetFramingErrorHandler
       _EUSART2_SetOverrunErrorHandler
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _UART1_Write_string
     _EUSART1_Write
     _EUSART1_is_tx_done
     _EUSART1_is_tx_ready
     _TXMode
   _generateCRC
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART2_Write
             _fputs
               _fputc
                 _putch
                   _EUSART2_Write
             _strlen
         _fputc
           _putch
             _EUSART2_Write
         _isdigit
         _stoa
           _fputc
             _putch
               _EUSART2_Write
           _strlen
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _EUSART2_Write
             _fputs
               _fputc
                 _putch
                   _EUSART2_Write
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART2_Write
             _fputs
               _fputc
                 _putch
                   _EUSART2_Write
             _strlen
           _toupper
             _islower

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _EUSART2_Receive_ISR *
     Absolute function(Fake) *
     _EUSART2_DefaultErrorHandler *
       _EUSART2_RxDataHandler
     _EUSART2_DefaultFramingErrorHandler *
     _EUSART2_DefaultOverrunErrorHandler *
     _EUSART2_RxDataHandler *
   _EUSART2_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      C8      12       78.1%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      A4      10       64.1%
BITBANK1           100      0       0       7        0.0%
BANK1              100      4      E8       8       90.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     38      A0       5      100.0%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     34E       6        0.0%
DATA                 0      0     34E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Mar 07 16:25:16 2021

                      _eusart1TxBufferRemaining 00F1                          ?_EUSART2_RxDataHandler 0001  
                                             _i 0094                                     __CFG_CP$OFF 000000  
                                            l81 20AC                                    generateCRC@i 000E  
                                  generateCRC@j 0010                             ___wmul@multiplicand 0007  
                                   __CFG_LVP$ON 000000                                             l121 2A34  
                                           l124 2A64                                             l127 2A1A  
                                           l320 24C0                                             l144 2B36  
                                           l321 24D8                                             l330 2B0C  
                                           l324 2508                                             l503 2AF8  
                                           l512 2ADA                                             l601 1B2C  
                                           l506 2AEE                                             l362 2ABC  
                                           l602 1B34                                             l515 2AE4  
                                           l371 2AB2                                             l452 2A7C  
                                           l509 2B02                                             l365 2AD0  
                                           l446 21A6                                             l470 2404  
                                           l359 2AC6                                             l471 241C  
                                           l455 2A90                                             l368 2AA8  
                                           l296 212A                                             l801 1216  
                                           l465 2560                                             l449 2A4C  
                                           l802 125E                                             l562 229E  
                                           l474 244C                                             l811 0F04  
                                           l715 1962                                             l580 2222  
                                           l821 10CC                                             l813 0F0C  
                                           l661 2B1C                                             l670 269A  
                                           l806 1266                                             l654 2B16  
                                           l574 238A                                             l663 2B1E  
                                           l591 2316                                             l752 1C4A  
                                           l656 2B18                                             l585 264E  
                                           l665 2B20                                             l826 09CC  
                                           l658 2B1A                                             l755 1C8C  
                                           l763 0754                                             l851 0C68  
                                           l835 0A6A                                             l691 172C  
                                           l828 09D4                                             l676 26E4  
                                           l596 1A96                                             l757 1CC6  
                                           l765 075C                                             l790 114E  
                                           l686 1F88                                             l694 1752  
                                           l783 0992                                             l599 1ABC  
                                           l792 1156                                             l880 06B2  
                                           l849 0C06                                             l865 0220  
                                           l697 1838                                             l891 23E6  
                                           l892 23EE                                             l895 29FE  
                                  __CFG_CPD$OFF 000000          __end_of_EUSART2_SetFramingErrorHandler 2AC8  
       __size_of_EUSART2_SetFramingErrorHandler 000A                  _EUSART2_SetFramingErrorHandler 2ABE  
                                           _abs 2836                                             _pad 1C06  
                       __size_of_PMD_Initialize 001C                                             tosl 000FFD  
                                           wreg 000FE8                                    __CFG_ZCD$OFF 000000  
                                          l1022 16EC                                            l1009 1588  
                                          ?_abs 0017                                            l1340 1A52  
                                          l1333 1A32                                            l1350 1C04  
                                          l1343 1BE4                                            l1601 13F8  
                                          l1604 1400                                            l1613 2958  
                                          l1621 25B2                                            l1607 28B0  
                                          l1570 286C                                            l1642 201E  
                                          l1650 2770                                            l5010 23C8  
                                          l1627 2920                                            l5004 238C  
                                          l5020 2AC8                                            l5012 2AAA  
                                          l5100 20D8                                            l1573 2874  
                                          l5006 2394                                            l5030 2AFA  
                                          l5022 2ADC                                            l5014 2AA0  
                                          l5110 20FC                                            l5102 20DC  
                                          l1663 2602                                            l4400 2504  
                                          l5008 23A2                                            l5032 29B2  
                                          l5200 1724                                            l5024 2AD2  
                                          l5016 2ABE                                            l5112 2126  
                                          l5104 20E0                                            l5040 2048  
                                          l1673 24AA                                            l1657 29D8  
                                          l4402 2B06                                            l4410 1FB8  
                                          l5034 29BC                                            l5130 251C  
                                          l5210 174C                                            l5026 2AF0  
                                          l5018 2AB4                                            l5106 20E4  
                                          l5050 2088                                            l5042 2058  
                                          l5122 2A7E                                            l5114 2A36  
                                          l4500 1434                                            l4412 1FD6  
                                          l4404 1F8A                                            l4420 273A  
                                          l1668 24A2                                            l5140 2556  
                                          l5132 253C                                            l5220 17BE  
                                          l5212 1758                                            l5300 22EC  
                                          l5028 2AE6                                            l5108 20F0  
                                          l5060 2B34                                            l5052 208E  
                                          l5044 2082                                            l4510 1476  
                                          l4502 1438                                            l4414 200C  
                                          l4406 1F9C                                            l4422 274C  
                                          l4430 25C4                                            l5142 255A  
                                          l5134 253E                                            l5126 250A  
                                          l5118 2A66                                            l5222 17DA  
                                          l5214 176A                                            l5206 173A  
                                          l5302 230A                                            l5070 213C  
                                          l5054 2090                                            l5046 2084  
                                          l5038 2020                                            l5062 2A00  
                                          l5150 23F2                                            l5310 1A8E  
                                          l1679 28E8                                            l4520 14D0  
                                          l4512 1494                                            l4504 1446  
                                          l4408 1FAE                                            l4424 2750  
                                          l4432 25F6                                            l4440 1C06  
                                          l4600 1B5C                                            l5144 255E  
                                          l5136 254E                                            l5128 250A  
                                          l5224 1806                                            l5232 1836  
                                          l5208 1740                                            l5216 176E  
                                          l5080 215C                                            l5072 214C  
                                          l5064 2A4E                                            l5056 2092  
                                          l5048 2086                                            l5240 2A24  
                                          l5160 2442                                            l5152 2414  
                                          l5320 1AB6                                            l5304 1A54  
                                          l5400 0C70                                            l4522 14FE  
                                          l4514 149C                                            l4530 1538  
                                          l4506 1466                                            l4418 272E  
                                          l4426 25B4                                            l4450 1C56  
                                          l4442 1C14                                            l4610 1BDE  
                                          l4602 1B70                                            l5170 26C0  
                                          l5138 2552                                            l5226 1830  
                                          l5218 17A4                                            l5082 2160  
                                          l5074 2150                                            l5066 212C  
                                          l5090 20AE                                            l5058 2094  
                                          l5242 2A28                                            l5162 2446  
                                          l5154 241E                                            l5250 2318  
                                          l5330 1B10                                            l5322 1AC2  
                                          l5306 1A58                                            l5410 0C7A  
                                          l5402 0C72                                            l4620 25AC  
                                          l4612 2562                                            l4532 1548  
                                          l4524 151E                                            l4516 14B0  
                                          l4508 146A                                            l4540 158E  
                                          l4428 25C0                                            l4452 1C6A  
                                          l4444 1C28                                            l4700 112C  
                                          l4604 1B7E                                            l4436 28B2  
                                          l5180 1F1E                                            l5172 26C4  
                                          l5340 1852                                            l5084 216C  
                                          l5076 2154                                            l5068 2130  
                                          l5092 20B2                                            l5244 2A2C  
                                          l5236 2A1C                                            l5156 2430  
                                          l5164 2448                                            l5148 23F2  
                                          l5260 2368                                            l5252 231C  
                                          l5332 1B20                                            l5324 1AD4  
                                          l5316 1AA4                                            l5308 1A74  
                                          l5420 0C8A                                            l5412 0C7E  
                                          l5404 0C74                                            l4614 2566  
                                          l4534 1568                                            l4526 1520  
                                          l4518 14BE                                            l4550 15EE  
                                          l4542 159C                                            l4462 2836  
                                          l4390 24DA                                            l4454 1C6E  
                                          l4446 1C36                                            l4630 071C  
                                          l4710 11AE                                            l4606 1BAC  
                                          l4470 2876                                            l5182 1F22  
                                          l5174 1EEA                                            l5166 269C  
                                          l5350 189A                                            l5270 21C4  
                                          l5086 2178                                            l5078 2158  
                                          l5094 20BE                                            l5246 2A30  
                                          l5238 2A20                                            l5158 2432  
                                          l5262 236C                                            l5254 2330  
                                          l5318 1AAA                                            l5326 1AD8  
                                          l5430 0CE4                                            l5422 0C9E  
                                          l5414 0C82                                            l5406 0C76  
                                          ?_pad 0017                                            l4616 257A  
                                          l4528 1532                                            l4560 1664  
                                          l4552 160C                                            l4544 15BC  
                                          l4464 2850                                            l4392 24EC  
                                          l4384 24AE                                            l4456 1C9A  
                                          l4448 1C42                                            l4640 0776  
                                          l4632 072C                                            l4624 06B4  
                                          l4712 11BA                                            l4704 1178  
                                          l4608 1BCC                                            l4480 2496  
                                          l4800 0AFC                                            l5248 2224  
                                          l5192 1F7E                                            l5184 1F42  
                                          l5176 1EFE                                            l5168 26B0  
                                          l5360 18C0                                            l5344 186A  
                                          l5352 18A0                                            l5336 183A  
                                          l5272 21F2                                            l5264 21A8  
                                          l5088 21A2                                            l5096 20CE  
                                          l5256 233C                                            l5328 1AF6  
                                          l5440 0D36                                            l5432 0CE8  
                                          l5424 0CA2                                            l5416 0C86  
                                          l5408 0C78                                            l4490 29F6  
                                          l4618 25A8                                            l4570 16CC  
                                          l4562 1684                                            l4554 1614  
                                          l4546 15C0                                            l4538 158A  
                                          l4394 24EE                                            l4386 24AE  
                                          l4458 1CAE                                            l4650 07A2  
                                          l4642 0784                                            l4634 072E  
                                          l4626 06D4                                            l4722 1228  
                                          l4714 11F0                                            l4706 118C  
                                          l4730 0EDC                                            l4466 28EA  
                                          l4474 244E                                            l4802 0B10  
                                          l4810 0B8A                                            l5186 1F56  
                                          l5178 1F1A                                            l5194 16EE  
                                          l5370 193A                                            l5362 18C8  
                                          l5354 18B2                                            l5346 1882  
                                          l5338 183E                                            l5274 21F8  
                                          l5266 21A8                                            l5290 22A0  
                                          l5098 20D4                                            l5258 2354  
                                          l5450 0E1A                                            l5442 0D42  
                                          l5434 0D0C                                            l5426 0CB6  
                                          l5418 0C8A                                            l5284 2614  
                                          l4484 2922                                            l5540 132A  
                                          l4564 1696                                            l4556 1628  
                                          l4548 15CE                                            l4396 24FE  
                                          l4388 24D0                                            l4660 08AE  
                                          l4652 0824                                            l4644 078A  
                                          l4636 0748                                            l4628 06FC  
                                          l4724 123C                                            l4716 11F4  
                                          l4708 1190                                            l4580 1996  
                                          l4740 0F46                                            l4732 0EDE  
                                          l4820 0C14                                            l4812 0BA6  
                                          l4804 0B20                                            l5188 1F68  
                                          l5196 16F4                                            l5372 194C  
                                          l5356 18B6                                            l5364 18EA  
                                          l5348 1886                                            l5276 2216  
                                          l5268 21B6                                            l5292 22A0  
                                          l5460 0E90                                            l5452 0E4A  
                                          l5444 0DCA                                            l5436 0D10  
                                          l5428 0CC0                                            l5390 2670  
                                          l5382 2650                                            l5286 262E  
                                          l5278 2604                                            l4830 1268  
                                          l4494 1402                                            l4558 1636  
                                          l4566 169C                                            l4398 2502  
                                          l4670 0920                                            l4662 08CC  
                                          l4654 082A                                            l4646 0792  
                                          l4638 0764                                            l4726 1240  
                                          l4718 11F8                                            l4590 1A18  
                                          l4582 19AA                                            l4574 1964  
                                          l4742 0F4C                                            l4750 1032  
                                          l4734 0EF8                                            l4478 2484  
                                          l4822 0C1A                                            l4814 0BC4  
                                          l4806 0B26                                            l4910 022E  
                                          l4902 01AC                                            l5198 1710  
                                          l5374 195A                                            l5366 1902  
                                          l5358 18BA                                            l5294 22AE  
                                          l5454 0E66                                            l5446 0DCE  
                                          l5438 0D32                                            l5462 0EA8  
                                          l5392 2674                                            l5288 2632  
                                          l4488 29DA                                            l4840 12DA  
                                          l4832 127C                                            l4496 1406  
                                          l4568 16AC                                            l4680 095A  
                                          l4672 092E                                            l4664 08E6  
                                          l4656 0830                                            l4648 079C  
                                          l4592 1A1A                                            l4584 19B8  
                                          l4576 1970                                            l4752 1044  
                                          l4760 10A4                                            l4744 0FC2  
                                          l4736 0F34                                            l4728 0ECC  
                                          l4824 0C2A                                            l4816 0BDE  
                                          l4808 0B2C                                            l4920 02A8  
                                          l4912 0230                                            l5368 1926  
                                          l5296 22BC                                            l5464 0EBC  
                                          l5456 0E80                                            l5448 0DF0  
                                          l5394 2690                                            l4850 1302  
                                          l4842 12DE                                            l4834 1280  
                                          l4498 1414                                            l4674 0934  
                                          l4682 096A                                            l4666 0900  
                                          l4658 0894                                            l4690 10E8  
                                          l4594 1A2C                                            l4586 19CA  
                                          l4578 198E                                            l4754 1062  
                                          l4746 0FC8                                            l4738 0F3C  
                                          l4826 0C40                                            l4818 0BF8  
                                          l4770 09C0                                            l4922 02C8  
                                          l4930 0332                                            l4914 0256  
                                          l5538 01E0                                            l4906 01B8  
                                          l5378 1960                                            l5298 22E6  
                                          l5466 0EC0                                            l5458 0E8C  
                                          l5388 2660                                            l4852 130A  
                                          l4836 1284                                            l4676 0946  
                                          l4668 090E                                            l4692 10FA  
                                          l4588 19F8                                            l4596 1B36  
                                          l4756 107C                                            l4748 0FCE  
                                          l4780 0A24                                            l4772 09EA  
                                          l4764 0994                                            l4940 03FE  
                                          l4932 0358                                            l4924 02D6  
                                          l4916 028C                                            l4908 020E  
                                          l5396 0C6A                                            l4862 13B8  
                                          l4854 1340                                            l4846 12E4  
                                          l4838 12A2                                            l4678 0952  
                                          l4694 1102                                            l4686 10CE  
                                          l4598 1B54                                            l4758 1096  
                                          l4782 0A2A                                            l4774 09F2  
                                          l4766 09A4                                            l4950 04A0  
                                          l4942 0424                                            l4934 037E  
                                          l4918 029A                                            l5398 0C6E  
                                          l4864 13CA                                            l4848 12FA  
                                          l4696 1116                                            l4688 10E0  
                                          l4792 0A9E                                            l4784 0A32  
                                          l4776 0A12                                            l4768 09A6  
                                          l4960 056E                                            l4952 04EA  
                                          l4944 045A                                            l4936 03C6  
                                          l4928 0320                                            l4880 0174  
                                          l4872 012A                                            l4866 13DC  
                                          l4858 1378                                            l4698 111E  
                                          l4794 0AB0                                            l4786 0A4E  
                                          l4778 0A1A                                            l4962 0586  
                                          l4970 060C                                            l4890 019A  
                                          l4882 0180                                            l4874 0150  
                                          l4788 0A5E                                            l4972 0632  
                                          l4980 0660                                            l4964 0594  
                                          l4956 0522                                            l4948 047A  
                                          l4884 0182                                            l4876 015E  
                                          l4798 0AEA                                            l4982 066E  
                                          l4974 0640                                            l4966 05D0  
                                          l4958 0548                                            l4894 01A0  
                                          l4886 0194                                            l4878 0170  
                                          l4976 0654                                            l4898 01A6  
                                          l4986 067A                                            l4988 06A0  
                                          STR_1 FE07                                            STR_2 FF92  
                                          STR_3 FEAC                                            STR_4 FFEA  
                                          STR_5 FFF6                                            STR_6 FF3E  
                                          STR_7 FE77                                            STR_8 FE40  
                                          STR_9 FEFB                                            _LATA 000F83  
                                          _LATB 000F84                                            _LATC 000F85  
                                          u4000 1F9C                                            _LATD 000F86  
                                          u4001 1F98                                            _LATE 000F87  
                                          u4010 1FAE                                            u4011 1FAA  
                                          u4020 1FD6                                            u4100 1C36  
                                          u4021 1FD2                                            u4101 1C32  
                                          u4030 200C                                            u4110 1C8C  
                                          u4031 2008                                            u4111 1C88  
                                          u5000 13DC                                            u4040 2770  
                                          u4120 1C9A                                            u4200 2496  
                                          u5001 13D8                                            u4041 276C  
                                          u4121 1C96                                            u4201 2492  
                                          u4210 2952                                            u4130 2850  
                                          u4050 25E6                                            u5010 0150  
                                          u4211 294C                                            u4131 284C  
                                          u5011 014C                                            u4220 2954  
                                          u4300 159C                                            u4060 25F6  
                                          u4140 291A                                            u5100 037E  
                                          u5020 0220                                            u4301 1598  
                                          u4061 25F2                                            u4141 2914  
                                          u5101 037A                                            u5021 021C  
                                          u4230 1414                                            u4310 15CE  
                                          u4150 291C                                            u4070 28E2  
                                          u5110 0424                                            u5030 022E  
                                          u4231 1410                                            u4311 15CA  
                                          u4071 28DC                                            u5111 0420  
                                          u5031 022A                                            u4240 1446  
                                          u4320 160C                                            u4400 1B54  
                                          u4160 28AA                                            u4080 28E4  
                                          u5120 04A0                                            u5040 0256  
                                          u5200 2A7C                                            u4241 1442  
                                          u4321 1608                                            u4057 25DC  
                                          u4401 1B50                                            u4161 28A4  
                                          u5121 049C                                            u5041 0252  
                                          u4330 1636                                            u4090 1C14  
                                          u4410 1B7E                                            u4170 28AC  
                                          u5130 0548                                            u5050 029A  
                                          u5210 2A8E                                            u4251 1470  
                                          u4331 1632                                            u4091 1C10  
                                          u4411 1B7A                                            u5131 0544  
                                          u5051 0296                                            u5211 2A88  
                                          u4260 1494                                            u4340 1664  
                                          u4500 0776                                            u4420 1BAC  
                                          u4180 247E                                            u5140 056E  
                                          u5060 0318                                            u5300 1F7A  
                                          u5220 251C                                            u4261 1490  
                                          u4341 1660                                            u4501 0772  
                                          u4421 1BA8                                            u4181 2478  
                                          u5141 056A                                            u5061 0312  
                                          u5301 1F76                                            u5221 2518  
                                          u4430 257A                                            u4270 14BE  
                                          u4350 16AC                                            u4510 0784  
                                          u4190 2480                                            u5150 0632  
                                          u5070 031A                                            u5230 254E  
                                          u5310 173A                                            u4431 2576  
                                          u4271 14BA                                            u4351 16A8  
                                          u4511 0780                                            u5151 062E  
                                          u5231 254A                                            u5311 1736  
                                          u5400 264E                                            u4440 25A8  
                                          u4280 14FE                                            u4520 08AE  
                                          u5080 0332                                            u5160 23E6  
                                          u5320 176A                                            u5240 2404  
                                          u5216 2A90                                            u5401 264A  
                                          u4441 25A4                                            u4281 14FA  
                                          u4521 08AA                                            u4601 10D8  
                                          u4361 196A                                            u5081 032E  
                                          u5161 23E2                                            u5321 1766  
                                          u5241 2400                                            u4290 1548  
                                          u4530 08CC                                            u4450 06E4  
                                          u4610 10FA                                            u4370 198E  
                                          u5090 0358                                            u5330 17A4  
                                          u5410 230A                                            u5250 2414  
                                          u5170 2A4A                                            u4291 1544  
                                          u4531 08C8                                            u4451 06DE  
                                          u4611 10F6                                            u4371 198A  
                                          u5091 0354                                            u5331 17A0  
                                          u5411 2306                                            u5251 2410  
                                          u5171 2A44                                            u4540 08E6  
                                          u4460 06E6                                            u4620 112C  
                                          u4380 19B8                                            u4700 0EDC  
                                          u5340 1806                                            u5500 18D8  
                                          u5260 2442                                            u5180 2A4C  
                                          u5420 1AA4                                            _PMD0 000EE1  
                                          u4541 08E2                                            u4621 1128  
                                          u4381 19B4                                            u4701 0ED8  
                                          u5341 1802                                            u5501 18D2  
                                          u5261 243E                                            u5421 1AA0  
                                          _PMD1 000EE2                                            u4550 0900  
                                          u4470 06FC                                            u4630 114A  
                                          u4390 19F8                                            u4710 0EF8  
                                          u5270 26E4                                            u5190 2A7A  
                                          u5350 1830                                            u5510 1902  
                                          u5430 1AD4                                            _PMD2 000EE3  
                                          u4551 08FC                                            u4471 06F8  
                                          u4631 1146                                            u4391 19F4  
                                          u4711 0EF4                                            u5271 26E0  
                                          u5191 2A74                                            u5351 182C  
                                          u5511 18FE                                            u5431 1AD0  
                                          _PMD3 000EE4                                            u4560 090E  
                                          u4480 072C                                            u4640 1174  
                                          u4720 1044                                            u4800 0A4E  
                                          u5280 1F42                                            u5520 1912  
                                          u5360 2330                                            u5440 1AF6  
                                          _PMD4 000EE5                                            u4561 090A  
                                          u4481 0728                                            u4641 1170  
                                          u4721 1040                                            u4801 0A4A  
                                          u5281 1F3E                                            u5521 190C  
                                          u5361 232C                                            u5441 1AF2  
                                          _PMD5 000EE6                                            u4570 0920  
                                          u4490 0748                                            u4650 11AE  
                                          u4730 1062                                            u4810 0A98  
                                          u5290 1F56                                            u5530 193A  
                                          u5506 18DA                                            u5370 2368  
                                          u5450 1B20                                            u4571 091C  
                                          u4491 0744                                            u4651 11AA  
                                          u4731 105E                                            u4811 0A92  
                                          u5291 1F52                                            u5531 1936  
                                          u5371 2364                                            u5451 1B1C  
                                          u5540 2690                                            u4580 092E  
                                          u4660 11DC                                            u4740 107C  
                                          u4900 0BDE                                            u4820 0A9A  
                                          u5460 1852                                            u5380 238A  
                                          u5541 268C                                            u4581 092A  
                                          u4741 1078                                            u4901 0BDA  
                                          u5461 184E                                            u5381 2386  
                                          u4590 0946                                            u4670 1216  
                                          u4750 1096                                            u4910 0BF8  
                                          u4830 0AB0                                            u5526 1914  
                                          u5470 1866                                            u5390 2216  
                                          u5550 0C9E                                            u4591 0942  
                                          u4671 1212                                            u4751 1092  
                                          u4911 0BF4                                            u4831 0AAC  
                                          u5471 1862                                            u5391 2212  
                                          u5551 0C9A                                            u4680 1224  
                                          u4760 10A4                                            u4920 0C06  
                                          u4840 0AE4                                            u5480 189A  
                                          u5560 0CB6                                            u4681 1220  
                                          u4761 10A0                                            u4921 0C02  
                                          u4841 0ADE                                            u5481 1896  
                                          u5561 0CB2                                            u3970 24C0  
                                          u4690 125E                                            u4930 0C14  
                                          u4850 0AE6                                            u4770 09A4  
                                          u5490 18B2                                            u5570 0E1A  
                                          u3971 24BC                                            u4691 125A  
                                          u4667 11D2                                            u4931 0C10  
                                          u4771 09A0                                            u5491 18AE  
                                          u5571 0E16                                            u4940 12A2  
                                          u3980 24D0                                            u4860 0AFC  
                                          u4780 09C0                                            u4941 129E  
                                          u3981 24CC                                            u4861 0AF8  
                                          u4781 09BC                                            u4950 12DA  
                                          u3990 24FE                                            u4870 0B64  
                                          u4790 09EA                                            u4951 12D6  
                                          u3991 24FA                                            u4791 09E6  
                                          u4960 12F6                                            u4880 0BA6  
                                          u4961 12F2                                            u4881 0BA2  
                                          u4970 13B2                                            u4890 0BC4  
                                          u4971 13AC                                            u4891 0BC0  
                                          u4875 0B52                                            u4980 13B4  
                                          u4990 13CA                                            u4991 13C6  
                                          _WPUA 000F10                                            _WPUB 000F18  
                                          _WPUC 000F20                                            _WPUD 000F25  
                                          _WPUE 000F2D                           ??_EUSART2_Receive_ISR 0001  
                                 _EUSART1_Write 23F0                                   __CFG_FCMEN$ON 000000  
                                 _EUSART2_Write 24AC                              ClearModbusRespon@i 0005  
                                generateCRC@crc 0012                                            abs@a 0017  
                                          _dbuf 0184                                            _atoi 1268  
                                          _main 0C6A                                            _dtoa 06B4  
                                 ?_EUSART1_Read 0001                                            _prec 008C  
                                          _nout 0088                                            pad@i 001E  
                                          pad@p 001B                                            fsr0h 000FEA  
                                          fsr1h 000FE2                                            indf0 000FEF  
                                          fsr2h 000FDA                                            fsr0l 000FE9  
                                          indf1 000FE7                                            indf2 000FDF  
                                          fsr1l 000FE1                                            pad@w 0020  
                                          fsr2l 000FD9                                            _stoa 10CE  
                                          btemp 005A                                            _utoa 0ECC  
                                          _xtoa 0994                                            prodh 000FF4  
                                          prodl 000FF3                                            start 0126  
                  __end_of_EUSART2_Transmit_ISR 272E                                   __CFG_CSWEN$ON 000000  
                           UART1_Write_string@i 000B                  fp__EUSART1_DefaultErrorHandler 0000  
                                  ___param_bank 000000                                   __CFG_SCANE$ON 000000  
                                         ??_abs 0019                                           ??_pad 001D  
                __size_of_OSCILLATOR_Initialize 0018                   __end_of_OSCILLATOR_Initialize 2A66  
                         _eusart1RxStatusBuffer 0200                                 __end_of___aodiv 158A  
                                         ?_atoi 000C                                           ?_main 0001  
                                         ?_dtoa 0022                                 __end_of___aomod 16EE  
                                         STR_10 FFD7                                           STR_11 FFAB  
                                         STR_12 FFD3                                           STR_13 FF1E  
                                         STR_14 FFAB                                           STR_15 FFD3  
                                         STR_16 FF5B                                           STR_17 FED7  
                                 __CFG_WDTE$OFF 000000                                           STR_18 FFC2  
                                         STR_19 FF77                                ?_ClearModbusData 0001  
                                         ?_stoa 0010                                           ?_utoa 0022  
                               __end_of___lodiv 1A54                                           ?_xtoa 0022  
                               __end_of___lomod 1C06                                  __CFG_DEBUG$OFF 000000  
                                         i2l150 0064                                           i2l152 009E  
                                         i2l153 0112                                           i2l154 00D8  
                                         i2l500 2B32                                           i2l333 2728  
                                         i2l350 2B38                                           i2l343 1D86  
                                         i2l159 0112                                           i2l336 272C  
                                         i2l353 2B14                                           i2l347 2984  
                                         i2l356 2B26                                           i2l480 27B4  
                                         i2l491 29B0                                           i2l477 27B0  
                                         i2l494 2B3A                                           i2l487 1E46  
                                         i2l497 2B2C                     __size_of_EUSART1_is_tx_done 0014  
                                         _OSCEN 000EDC                                    vfpfcnvrt@fmt 004B  
                                  vfpfcnvrt@llu 00B4                                           _TRISA 000F88  
                                         _TRISB 000F89                                           _TRISC 000F8A  
                                         _TRISD 000F8B                                           _TRISE 000F8C  
                                         _Debug 009A                                   __CFG_WRT0$OFF 000000  
                                 __CFG_WRT1$OFF 000000                                   __CFG_WRT2$OFF 000000  
                                 __CFG_WRT3$OFF 000000                            _EUSART1_Transmit_ISR 2772  
                                __CFG_EBTR0$OFF 000000                                  __CFG_EBTR1$OFF 000000  
                                __CFG_EBTR2$OFF 000000                                  __CFG_EBTR3$OFF 000000  
                                 __CFG_WRTB$OFF 000000                                   __CFG_WRTC$OFF 000000  
                                 __CFG_WRTD$OFF 000000                                  __CFG_EBTRB$OFF 000000  
                                         _flags 0056                                           _fputc 1F8A  
                               __end_of_isalpha 28B2                                           _fputs 272E  
                               __end_of_isdigit 295A                              __CFG_MCLRE$EXTMCLR 000000  
                                         atoi@n 0019                                           pad@fp 0017  
                                         atoi@s 000C                                           _width 008A  
                                         _putch 2B04                                           dtoa@d 0024  
                                         dtoa@i 0044                                           dtoa@n 003C  
                                         dtoa@p 0036                                           dtoa@s 003A  
                                         dtoa@w 0038                                 __end_of_islower 28EA  
                               __end_of_isspace 25B4                                  ?_EUSART1_Write 0001  
                                ?_EUSART2_Write 0001                                 __end_of_isupper 2922  
                                         pclath 000FFA                                           tablat 000FF5  
                                   _ClearRxBuff 269C                                  ??_EUSART1_Read 0005  
                                         plusw1 000FE3                                           plusw2 000FDB  
                                         stoa@i 001C                                           stoa@l 0024  
                                         stoa@p 0022                                           stoa@s 0012  
                                         stoa@w 001E                                           ttemp5 005B  
                                         ttemp6 005E                                           ttemp7 0062  
                                         utoa@d 0024                                           utoa@i 0040  
                                         utoa@n 0038                                           utoa@p 0034  
                                         utoa@w 0036                                           status 000FD8  
                                    _ModDataCnt 0096                                           wtemp8 005B  
                                         xtoa@c 0047                                           xtoa@d 0024  
                                         xtoa@i 0045                                           xtoa@n 003D  
                                         xtoa@p 0039                                           xtoa@w 003B  
                                         xtoa@x 002C                                 __end_of_toupper 24AC  
                              ___lodiv@dividend 0005           fp__EUSART1_DefaultFramingErrorHandler 0000  
    __end_of_EUSART1_DefaultFramingErrorHandler 2B3C     __size_of_EUSART1_DefaultFramingErrorHandler 0002  
          ??_EUSART1_DefaultFramingErrorHandler 0001             ?_EUSART1_DefaultFramingErrorHandler 0001  
            _EUSART1_DefaultFramingErrorHandler 2B3A                                  checkCRC@crcLow 00D5  
         __end_of_EUSART2_SetTxInterruptHandler 2AAA          __size_of_EUSART2_SetTxInterruptHandler 000A  
                 _EUSART2_SetTxInterruptHandler 2AA0                                    _toupper$1902 0011  
                               __initialization 1E48                                    __end_of_atoi 1402  
                    __end_of_EUSART1_Initialize 21A8                                    __end_of_main 0ECC  
                                  __end_of_dtoa 0994                       __size_of_InitialiseString 007C  
                                  __end_of_stoa 1268                                    __end_of_utoa 10CE  
                                  __end_of_xtoa 0C6A                     ?_INTERRUPT_InterruptManager 0001  
                              __end_of_ModbusRx 1964                                          ??_atoi 000E  
                                        ??_main 01E4                                          ??_dtoa 002C  
                                        ??_stoa 0014                                          ??_utoa 002C  
                                        ??_xtoa 002D                                   __activetblptr 000003  
           __end_of_EUSART2_DefaultErrorHandler 2B28                     _EUSART2_DefaultErrorHandler 2B22  
                                    _ModbusData 0100                           ?_EUSART1_Transmit_ISR 0001  
                              ___lodiv@quotient 0015                      __end_of_EUSART2_Initialize 212C  
                      _eusart2TxBufferRemaining 00F2                                          ?_fputc 0007  
                                        ?_fputs 0010                                          _ANSELA 000F11  
                                        ?_putch 0001                                          _ANSELB 000F19  
                                        _ANSELC 000F21                                          _ANSELD 000F26  
                                        _ANSELE 000F2E                                          _RC1REG 000F99  
                                        _RC2REG 000E99                                          _RC1STA 000F9D  
                                        _RC2STA 000E9D                                          _RB6PPS 000EF5  
                                        _ODCONA 000F0F                                          _ODCONB 000F17  
                                        _ODCONC 000F1F                                          _RC6PPS 000EFD  
                                        _ODCOND 000F24                                          _ODCONE 000F2C  
                  __size_of_EUSART1_is_rx_ready 0018                                  __CFG_WDTCCS$SC 000000  
                                        i2l4010 270A                                          i2l4020 1CD8  
                                        i2l4012 270E                                          i2l4030 1D30  
                                        i2l4022 1CE8                                          i2l4014 271E  
                                        i2l4006 26E6                                          i2l4040 2784  
                                        i2l4032 1D48                                          i2l4024 1CF8  
                                        i2l4016 2722                                          i2l4008 26F8  
                                        i2l4050 1D88                                          i2l4042 2794  
                                        i2l4034 1D64                                          i2l4026 1D10  
                                        i2l4018 1CC8                                          i2l4060 1DDE  
                                        i2l4052 1D98                                          i2l4044 2796  
                                        i2l4036 1D82                                          i2l4028 1D20  
                                        i2l4220 0028                                          i2l4062 1DEE  
                                        i2l4054 1DA6                                          i2l4046 27A6  
                                        i2l4038 2772                                          i2l4230 00AC  
                                        i2l4222 0038                                          i2l4064 1E08  
                                        i2l4056 1DB6                                          i2l4048 27AA  
                                        i2l4232 00BA                                          i2l4224 0046  
                                        i2l4066 1E24                                          i2l4058 1DD0  
                                        i2l4234 00E6                                          i2l4226 0072  
                                        i2l4218 001A                                          i2l4068 1E42  
                                        i2l4236 00F4                                          i2l4228 0080  
                                        i2l3730 295A                                          i2l3900 2B2E  
                                        i2l3732 296A                                          i2l3750 2986  
                                        i2l3734 296C                                          i2l3752 2996  
                                        i2l3736 297C                                          _INLVLA 000F0D  
                                        i2l3754 2998                                          i2l3738 2980  
                                        i2l3842 2B0E                                          _INLVLB 000F15  
                                        _INLVLC 000F1D                                          i2l3756 29A8  
                                        i2l3844 2B22                                          _INLVLD 000F22  
                                        _INLVLE 000F2A                                          i2l3758 29AC  
                                        i2l3898 2B28                                          _TABLAT 000FF5  
                                        _OSCFRQ 000EDE                                   vfpfcnvrt@done 00B0  
                  __size_of_EUSART1_is_tx_ready 0018                                          _NVMDAT 000F80  
                                        _RX1PPS 000EB5                                          _RX2PPS 000E8D  
                                        _TX1REG 000F9A                                          _TX2REG 000E9A  
                              __end_of_checkCRC 183A                                          _TX1STA 000F9E  
                                        _TX2STA 000E9E                                          _RXMode 2B1C  
                                        _TXMode 2B16                                          _RXStat 0099  
                                __CFG_PWRTE$OFF 000000                            __size_of_generateCRC 00E2  
                                        _ByteHi 0090                                          _ByteLo 00FC  
                            _UART1_Write_string 2318                                  __CFG_XINST$OFF 000000  
                                  vfprintf@cfmt 0053                       __CFG_RSTOSC$HFINTOSC_1MHZ 000000  
                            AddRxBuffToModBus@i 0006                                       ??___aodiv 0015  
                                     ??___aomod 0015                                          ___wmul 29DA  
                                __CFG_STVREN$ON 000000                                       ??___lodiv 0015  
                                     ??___lomod 0015                             ?_UART1_Write_string 0006  
                      ?_EUSART1_SetErrorHandler 0005                                          clear_0 1EAE  
                                        clear_1 1EBA                                          clear_2 1EC6  
                                        clear_3 1ED2                                          _rxData 0300  
                   _EUSART2_FramingErrorHandler 00E7                                          _printf 29B2  
                                        pad@buf 0019                ??_EUSART1_SetOverrunErrorHandler 0007  
               ?_EUSART1_SetOverrunErrorHandler 0005                                          dtoa@fp 0022  
                                        _strlen 25B4                                   _ExpectedBytes 00FA  
                                        fputc@c 0007                                  _PMD_Initialize 2A00  
                                        fputs@c 0014                                          fputs@i 0015  
                                        fputs@s 0010                                       ??_isalpha 0007  
                                     ??_isdigit 0007                                   ??_PrintModbus 0055  
                                     ??_islower 0007                                    __mediumconst FE06  
                                     ??_isspace 0007                                          tblptrh 000FF7  
                                     ??_isupper 0007                                          tblptrl 000FF6  
                                        tblptru 000FF8                            _EUSART2_Transmit_ISR 26E6  
                                        stoa@cp 0020                                          stoa@fp 0010  
                              __end_of_vfprintf 23F0                                 ??_EUSART1_Write 0005  
                                        utoa@fp 0022                                 ??_EUSART2_Write 0005  
                                        xtoa@fp 0022                                 _eusart1RxBuffer 0364  
                                     ??_toupper 000D                            ??_UART1_Write_string 000A  
                 __size_of_INTERRUPT_Initialize 0004                                 _eusart2RxBuffer 0078  
                               _eusart1TxBuffer 0060                               _SYSTEM_Initialize 2A1C  
                       __size_of_PrintModRespon 007C                                 _eusart2TxBuffer 0080  
                                    __accesstop 0060                         __end_of__initialization 1EE0  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                               checkCRC@crcHigh 00D3                         ??_EUSART2_RxDataHandler 0001  
                __size_of_EUSART1_RxDataHandler 002C                   __end_of_EUSART1_RxDataHandler 29B2  
                                __pcstackCOMRAM 0001                                    __pidataBANK0 2A92  
                                  __pidataBANK1 27B6                                    __pidataBANK2 27F6  
                           ??_SYSTEM_Initialize 0007                                   __end_of_fputc 2020  
                                 __end_of_fputs 2772                  ?_EUSART2_SetTxInterruptHandler 0005  
                                 __end_of_putch 2B0E                          __end_of_PMD_Initialize 2A1C  
                          __end_of_EUSART1_Read 2562                          ??_EUSART1_Transmit_ISR 0001  
                      ?_EUSART2_SetErrorHandler 0005                           ?_EUSART2_Transmit_ISR 0001  
                   __end_of_EUSART1_Receive_ISR 1E48                                         ??_fputc 000B  
                     __end_of_SYSTEM_Initialize 2A36                                         ??_fputs 0014  
                                       ??_putch 0006                                   _eusart1RxHead 0058  
                                 _eusart1TxHead 009F                                   _eusart2RxHead 0059  
                                 _eusart1RxTail 009D                                   _eusart2TxHead 00A4  
                                    __pbssBANK0 0060                                      __pbssBANK1 0100  
                                    __pbssBANK2 0200                                      __pbssBANK3 0300  
                                 _eusart2RxTail 00A2                                   _eusart1TxTail 009E  
             _EUSART1_TxDefaultInterruptHandler 00EB                                   _eusart2TxTail 00A3  
               ??_EUSART1_SetRxInterruptHandler 0007                             __end_of_PrintModbus 2318  
              ??_EUSART2_SetFramingErrorHandler 0007                 ?_EUSART2_SetFramingErrorHandler 0005  
                                     ?_ModbusRx 0001                                         ?_RXMode 0001  
                                       ?_TXMode 0001                 __end_of_EUSART1_SetErrorHandler 2B04  
                              _InitialiseString 2224                                         ?___wmul 0005  
                               __CFG_PPS1WAY$ON 000000                                         _MB300xx 0264  
                                       _MB400xx 0164                                         ?_printf 00C2  
                               ?_PMD_Initialize 0001                               _ClearModbusRespon 2604  
                                       ?_strlen 0005          __end_of_EUSART1_SetFramingErrorHandler 2AFA  
       __size_of_EUSART1_SetFramingErrorHandler 000A                  _EUSART1_SetFramingErrorHandler 2AF0  
                         _eusart2RxStatusBuffer 0070                                       ?_checkCRC 0001  
                            ?_ClearModbusRespon 0001                    ?_EUSART1_DefaultErrorHandler 0001  
                                       _SP1BRGH 000F9C                                         _SP1BRGL 000F9B  
                                       _SP2BRGH 000E9C                                         _SP2BRGL 000E9B  
                                       _OSCCON1 000ED8                                         _OSCCON3 000EDA  
                   __end_of_EUSART2_Receive_ISR 1D88                              __size_of_vfpfcnvrt 058A  
                                       _TBLPTRH 000FF7                                         _TBLPTRL 000FF6  
                                       _TBLPTRU 000FF8                                         _NVMADRH 000F7F  
                                       _NVMADRL 000F7E                                         _OSCTUNE 000EDD  
                                       _NVMCON2 000F82                                         _SLRCONA 000F0E  
                                       _SLRCONB 000F16                                         _SLRCONC 000F1E  
                                       _SLRCOND 000F23                                         _SLRCONE 000F2B  
                           ??_ClearModbusRespon 0005                                ___lomod@dividend 0005  
                                  ?_ClearRxBuff 0001                               generateCRC@HiOrLo 0007  
                                    ??_ModbusRx 0055                                         _ByteNum 008E  
                               __size_of_RXMode 0006                                 __size_of_TXMode 0006  
                                       __Hparam 0000                                         __Lparam 0000  
                fp__EUSART2_DefaultErrorHandler 0000                                         ___aodiv 1402  
                                       ___aomod 158A                               generateCRC@crcLow 000C  
                               __size_of___wmul 0026                                         ___lodiv 1964  
                                       ___lomod 1B36                                       ?_vfprintf 00BC  
                     __end_of_ClearModbusRespon 2650                             _EUSART1_is_rx_ready 2A66  
                    __end_of_EUSART1_is_tx_done 2A92                                         __pcinit 1E48  
               __end_of_EUSART2_SetErrorHandler 2AD2                                         __ramtop 0F00  
                           _EUSART1_is_tx_ready 2A36                                         __ptext0 0C6A  
                                       __ptext1 1A54                                         __ptext2 2318  
                                       __ptext3 2B16                                         __ptext4 2A36  
                                       __ptext5 2A7E                                         __ptext6 23F0  
                                       __ptext7 2A1C                                         __ptext8 2A00  
                                       __ptext9 2020                                 __size_of_printf 0028  
                               __size_of_strlen 0050                                      ??_checkCRC 00CE  
         fp__EUSART2_DefaultOverrunErrorHandler 0000      __end_of_EUSART2_DefaultOverrunErrorHandler 2B16  
   __size_of_EUSART2_DefaultOverrunErrorHandler 0008            ??_EUSART2_DefaultOverrunErrorHandler 0001  
           ?_EUSART2_DefaultOverrunErrorHandler 0001              _EUSART2_DefaultOverrunErrorHandler 2B0E  
                         _OSCILLATOR_Initialize 2A4E                          ??_EUSART2_Transmit_ISR 0001  
                                  __size_of_abs 0040                                    __size_of_pad 00C2  
                                       _isalpha 2876                                         _isdigit 2922  
                            _EUSART1_Initialize 212C                                         _islower 28B2  
                      ??_PIN_MANAGER_Initialize 0005                                         _isspace 2562  
                                   _PrintModbus 22A0                                         _isupper 28EA  
                 ??_EUSART1_DefaultErrorHandler 0001                                         atoi@neg 0012  
                    __size_of_SYSTEM_Initialize 001A                        __size_of_ClearModbusData 004C  
                                       _toupper 244E                            end_of_initialization 1EE0  
                          ?_EUSART1_is_rx_ready 0001                             ?_EUSART1_Initialize 0001  
                                _PrintModRespon 21A8                            ?_EUSART1_is_tx_ready 0001  
                                       fputc@fp 0009                     _EUSART1_OverrunErrorHandler 00DF  
                                       fputs@fp 0012           __end_of_EUSART1_SetRxInterruptHandler 2AE6  
        __size_of_EUSART1_SetRxInterruptHandler 000A                   _EUSART1_SetRxInterruptHandler 2ADC  
                            _EUSART2_Initialize 20AE                               __end_of_vfpfcnvrt 06B4  
                                       postdec1 000FE5                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc1 000FE6  
                                       postinc2 000FDE                           __size_of_EUSART1_Read 0058  
                                    ??_vfprintf 0053                            ??_EUSART1_Initialize 0007  
                         __CFG_WDTCPS$WDTCPS_31 000000                             ?_EUSART2_Initialize 0001  
                                       strlen@a 0007                                         strlen@s 0005  
                              ClearModbusData@i 0005                         fp__EUSART1_Transmit_ISR 0000  
                        __end_of_PrintModRespon 2224                __size_of_EUSART1_SetErrorHandler 000A  
                           EUSART1_Write@txData 0005                                __CFG_FEXTOSC$OFF 000000  
                         ??_EUSART1_is_rx_ready 0005                            ??_EUSART2_Initialize 0007  
                         ??_EUSART1_is_tx_ready 0005                                   ??_generateCRC 0008  
                                  _EUSART1_Read 250A            __size_of_EUSART1_DefaultErrorHandler 0006  
                                __end_of_RXMode 2B22                                  __end_of_TXMode 2B1C  
                        UART1_Write_string@data 0006                  __size_of_EUSART2_RxDataHandler 002C  
                 __end_of_EUSART2_RxDataHandler 2986                    __end_of_INTERRUPT_Initialize 2B38  
                    __size_of_ClearModbusRespon 004C                                     vfpfcnvrt@ap 004D  
                                   vfpfcnvrt@cp 00AD                                     vfpfcnvrt@fp 0049  
                                   vfpfcnvrt@ll 00A5                                  __end_of___wmul 2A00  
                        ?_OSCILLATOR_Initialize 0001                                  __end_of_printf 29DA  
                                __end_of_strlen 2604                             start_initialization 1E48  
                               ___lodiv@divisor 000D                                 ___lodiv@counter 001D  
               __size_of_PIN_MANAGER_Initialize 008E                                     __end_of_abs 2876  
                                   __end_of_pad 1CC8                        __end_of_InitialiseString 22A0  
 EUSART1_SetRxInterruptHandler@interruptHandler 0005   EUSART1_SetTxInterruptHandler@interruptHandler 0005  
 EUSART2_SetRxInterruptHandler@interruptHandler 0005   EUSART2_SetTxInterruptHandler@interruptHandler 0005  
                               ?_PrintModRespon 0001                                     putch@txData 0006  
                         __end_of_EUSART1_Write 244E                     __size_of_UART1_Write_string 0074  
                         __end_of_EUSART2_Write 250A                          fp__EUSART1_Receive_ISR 0000  
              __size_of_EUSART2_SetErrorHandler 000A                                        ??_RXMode 0005  
                          __size_of_ClearRxBuff 004A                               ??_ClearModbusData 0005  
                                      ??_TXMode 0005          __end_of_EUSART2_SetOverrunErrorHandler 2ABE  
       __size_of_EUSART2_SetOverrunErrorHandler 000A                  _EUSART2_SetOverrunErrorHandler 2AB4  
                              __CFG_LPBOREN$OFF 000000                                    ClearRxBuff@i 0006  
                             __size_of_ModbusRx 012A                                     vfprintf@fmt 00BE  
                           __end_of_generateCRC 1B36                                ??_PMD_Initialize 0005  
                                      ??___wmul 0009                           _EUSART1_RxDataHandler 2986  
                ?_EUSART1_SetRxInterruptHandler 0005                                     __pdataBANK0 00F3  
                                   __pdataBANK1 01A4                                     __pdataBANK2 0264  
                                      ??_printf 0055                                        ??_strlen 0007  
                                _eusart1RxCount 009C                                  _eusart2RxCount 00A1  
                                   __pbssCOMRAM 0056               _EUSART1_RxDefaultInterruptHandler 00E9  
                 __size_of_EUSART1_Transmit_ISR 0044                                   __pcstackBANK0 00A5  
                                 __pcstackBANK1 01E4                                ___aodiv@dividend 0005  
                             __size_of_checkCRC 014C                         fp__EUSART2_Transmit_ISR 0000  
                             _AddRxBuffToModBus 1EEA                             EUSART2_Write@txData 0005  
               ??_EUSART1_SetTxInterruptHandler 0007                              ?_AddRxBuffToModBus 0001  
              ??_EUSART1_SetFramingErrorHandler 0007                 ?_EUSART1_SetFramingErrorHandler 0005  
               ??_EUSART2_SetRxInterruptHandler 0007                    __size_of_EUSART1_Receive_ISR 00C0  
                        fp__EUSART2_Receive_ISR 0000                                       _atoi$1811 0014  
                                     _atoi$1812 0018                                       _atoi$1813 0016  
                                     __pnvBANK0 00DD                             ??_AddRxBuffToModBus 0005  
                        _PIN_MANAGER_Initialize 2020                                       _dtoa$1307 0034  
                                     __pintcode 0008                                   __pmediumconst FE06  
                                      ?___aodiv 0005                                        ?___aomod 0005  
                              ___aodiv@quotient 0017                                        ?___lodiv 0005  
                                      ?___lomod 0005               _EUSART2_TxDefaultInterruptHandler 00EF  
                  ??_INTERRUPT_InterruptManager 0001                               __size_of_vfprintf 0064  
                               ___lomod@divisor 000D                                        _BAUD1CON 000F9F  
                                      _BAUD2CON 000E9F                                       checkCRC@i 00DB  
                                     checkCRC@j 00D7                                 ___lomod@counter 0015  
         fp__EUSART1_DefaultOverrunErrorHandler 0000      __end_of_EUSART1_DefaultOverrunErrorHandler 2B2E  
   __size_of_EUSART1_DefaultOverrunErrorHandler 0006            ??_EUSART1_DefaultOverrunErrorHandler 0001  
           ?_EUSART1_DefaultOverrunErrorHandler 0001              _EUSART1_DefaultOverrunErrorHandler 2B28  
                                      ?_isalpha 0005                                        ?_isdigit 0005  
                          _EUSART1_ErrorHandler 00DD                    ?_EUSART2_DefaultErrorHandler 0001  
                                      ?_islower 0005                                        ?_isspace 0005  
                                  ?_PrintModbus 0001                       __end_of_AddRxBuffToModBus 1F8A  
                                      ?_isupper 0005                         _EUSART1_SetErrorHandler 2AFA  
                            _EUSART1_is_tx_done 2A7E                                  __size_of_fputc 0096  
                                __size_of_fputs 0044                                        ?_toupper 000B  
                                __size_of_putch 000A                            _INTERRUPT_Initialize 2B34  
                  __size_of_EUSART2_Receive_ISR 00C0                                     _generateCRC 1A54  
                                ___wmul@product 0009                                        _LATAbits 000F83  
       EUSART1_SetErrorHandler@interruptHandler 0005         EUSART2_SetErrorHandler@interruptHandler 0005  
                                      _LATDbits 000F86                             ?_EUSART1_is_tx_done 0001  
                                      _PIE3bits 000EC5                             __CFG_BORV$VBOR_2P45 000000  
                    UART1_Write_string@data_len 0008                                        _MBResCRC 00FE  
           __size_of_INTERRUPT_InterruptManager 011E                                        i2u323_40 297C  
                                      i2u323_41 2978                                        i2u324_40 29A8  
                                      i2u324_41 29A4                                        i2u350_40 1D20  
                                      _MBResCnt 0092                                        i2u350_41 1D1C  
                                      i2u360_40 1E24                                        i2u352_40 1D64  
                                      i2u351_48 1D36                                        i2u360_41 1E20  
                                      i2u352_41 1D60                                        i2u351_49 1D48  
                                      i2u361_48 1E2A                                        i2u354_40 2784  
                                      i2u353_48 1D6A                                        i2u346_40 26F8  
                                      i2u361_49 1E3E                                        i2u354_41 2780  
                                      i2u353_49 1D7E                                        i2u346_41 26F4  
                                      i2u355_40 27A6                                        i2u347_40 271E  
                                      i2u355_41 27A2                                        i2u347_41 271A  
                                      i2u356_40 1DA6                                        i2u348_40 1CE8  
                                      i2u356_41 1DA2                                        i2u348_41 1CE4  
                                      i2u381_40 0028                                        i2u381_41 0024  
                                      _PIR3bits 000ECD                                        i2u358_40 1DDE  
                                      i2u357_48 1DBC                                        i2u349_48 1CFE  
                                      i2u382_40 0038                                        i2u358_41 1DDA  
                                      i2u357_49 1DD0                                        i2u349_49 1D10  
                                      i2u382_41 0034                                        i2u391_40 00E6  
                                      i2u390_48 00C0                                        i2u383_40 0046  
                                      i2u391_41 00E2                                        i2u390_49 00D4  
                                      i2u383_41 0042                                        i2u359_48 1DF4  
                                      i2u392_40 00F4                                        i2u359_49 1E08  
                                      i2u392_41 00F0                                        i2u385_40 0072  
                                      i2u384_48 004C                                        i2u385_41 006E  
                                      i2u384_49 0060                                        i2u393_48 00FA  
                                      i2u386_40 0080                                        i2u393_49 010E  
                                      i2u386_41 007C                                        i2u388_40 00AC  
                                      i2u387_48 0086                                        i2u388_41 00A8  
                                      i2u387_49 009A                                        i2u389_40 00BA  
                                      i2u389_41 00B6                                        _PIR7bits 000ED1  
                                      _MBRespon 01A4                          ?_EUSART1_RxDataHandler 0001  
                                     _vfpfcnvrt 012A                                       _xtoa$1336 0035  
                                     _xtoa$1337 0037                               ___wmul@multiplier 0005  
                          ??_EUSART1_is_tx_done 0005                                     checkCRC@crc 00D9  
                 __size_of_EUSART2_Transmit_ISR 0048                                    _isspace$1838 000B  
                 ??_EUSART2_DefaultErrorHandler 0001                                      vfpfcnvrt@c 00AF  
                                     copy_data0 1E5C                                       copy_data1 1E7C  
                                     copy_data2 1E9C                           ?_INTERRUPT_Initialize 0001  
                       _EUSART2_SetErrorHandler 2AC8                           EUSART1_Read@readValue 0005  
                   _EUSART2_OverrunErrorHandler 00E5                                        _ModbusRx 183A  
                            generateCRC@MessCnt 0005           __end_of_EUSART1_SetTxInterruptHandler 2ADC  
        __size_of_EUSART1_SetTxInterruptHandler 000A                   _EUSART1_SetTxInterruptHandler 2AD2  
                                      __Hrparam 0000           __end_of_EUSART2_SetRxInterruptHandler 2AB4  
        __size_of_EUSART2_SetRxInterruptHandler 000A                   _EUSART2_SetRxInterruptHandler 2AAA  
                                    vfprintf@ap 00C0                                        __Lrparam 0000  
                                    vfprintf@fp 00BC                              __CFG_BOREN$SBORDIS 000000  
                       ??_OSCILLATOR_Initialize 0005                                __size_of___aodiv 0188  
                              __size_of___aomod 0164                              generateCRC@crcHigh 000A  
                              __size_of___lodiv 00F0                                __size_of___lomod 00D0  
                   __size_of_EUSART1_Initialize 007C                                      ?_vfpfcnvrt 0049  
                               ___aodiv@divisor 000D                                 ___aodiv@counter 0015  
                     ??_EUSART1_SetErrorHandler 0007                                        _checkCRC 16EE  
           __end_of_EUSART1_DefaultErrorHandler 2B34                     _EUSART1_DefaultErrorHandler 2B2E  
                              ??_PrintModRespon 0055                     __end_of_EUSART1_is_rx_ready 2A7E  
                          _EUSART2_ErrorHandler 00E3                                __size_of_isalpha 003C  
                              __size_of_isdigit 0038                     __end_of_EUSART1_is_tx_ready 2A4E  
                    __size_of_AddRxBuffToModBus 00A0                                 _ClearModbusData 2650  
                              __size_of_islower 0038                                __size_of_isspace 0052  
                                      __ptext10 2A4E                                        __ptext11 2B34  
                                      __ptext20 2ADC                                        __ptext12 20AE  
                                      __ptext21 2AE6                                        __ptext13 2AA0  
                                      __ptext30 250A                                        __ptext22 2AF0  
                                      __ptext14 2AAA                                        __ptext31 269C  
                                      __ptext23 2AFA                                        __ptext15 2AB4  
                                      __ptext40 28EA                                        __ptext32 1EEA  
                                      __ptext24 22A0                                        __ptext16 2ABE  
                                      __ptext41 2876                                        __ptext33 2224  
                                      __ptext25 21A8                                        __ptext17 2AC8  
                                      __ptext50 1F8A                                        __ptext42 0ECC  
                                      __ptext34 29B2                                        __ptext26 183A  
                                      __ptext18 212C                                        __ptext51 2B04  
                                      __ptext43 1B36                                        __ptext35 238C  
                                      __ptext27 16EE                                        __ptext19 2AD2  
                                      __ptext60 2604                                        __ptext52 24AC  
                                      __ptext44 1964                                        __ptext36 012A  
                                      __ptext28 2B1C                                        __ptext61 2650  
                                      __ptext53 2836                                        __ptext45 10CE  
                                      __ptext37 0994                                        __ptext29 2A66  
                                      __ptext70 1D88                                        __ptext54 158A  
                                      __ptext46 06B4                                        __ptext38 244E  
                                      __ptext71 2B28                                        __ptext63 26E6  
                                      __ptext55 1402                                        __ptext47 1C06  
                                      __ptext39 28B2                                        __ptext72 2B3A  
                                      __ptext64 1CC8                                        __ptext56 1268  
                                      __ptext48 25B4                                        __ptext73 2B2E  
                                      __ptext65 2B0E                                        __ptext57 2562  
                                      __ptext49 272E                                        __ptext74 2986  
                                      __ptext66 2B38                                        __ptext58 2922  
                                      __ptext75 0000                                        __ptext67 2B22  
                                      __ptext59 29DA                                        __ptext68 295A  
                                      __ptext69 2772                                __size_of_isupper 0038  
                             ?_InitialiseString 0001                                __size_of_toupper 005E  
                   __size_of_EUSART2_Initialize 007E                              ??_InitialiseString 0055  
                                 __size_of_atoi 019A                                   __size_of_main 0262  
                                 __size_of_dtoa 02E0                                   __size_of_stoa 019A  
         fp__EUSART2_DefaultFramingErrorHandler 0000      __end_of_EUSART2_DefaultFramingErrorHandler 2B3A  
   __size_of_EUSART2_DefaultFramingErrorHandler 0002            ??_EUSART2_DefaultFramingErrorHandler 0001  
           ?_EUSART2_DefaultFramingErrorHandler 0001              _EUSART2_DefaultFramingErrorHandler 2B38  
                                 __size_of_utoa 0202                                   __size_of_xtoa 02D6  
                          __CFG_WDTCWS$WDTCWS_7 000000                                    PrintModbus@i 00CE  
          __size_of_EUSART2_DefaultErrorHandler 0006                                      _RC1STAbits 000F9D  
                                     stoa@F1139 00F3                                      _RC2STAbits 000E9D  
EUSART1_SetOverrunErrorHandler@interruptHandler 0005  EUSART2_SetOverrunErrorHandler@interruptHandler 0005  
                               PrintModRespon@i 00CE                                        _rxStatus 0098  
                                      int$flags 005A                                        _vfprintf 238C  
            __end_of_INTERRUPT_InterruptManager 0126                      _INTERRUPT_InterruptManager 0008  
                         _EUSART2_RxDataHandler 295A                                       printf@fmt 00C2  
                   _EUSART1_FramingErrorHandler 00E1                             _EUSART1_Receive_ISR 1D88  
                              ___aomod@dividend 0005                ??_EUSART2_SetOverrunErrorHandler 0007  
               ?_EUSART2_SetOverrunErrorHandler 0005                                  _vfpfcnvrt$1351 00B2  
                                    _INTCONbits 000FF2                                     _NVMCON1bits 000F81  
                                      isalpha@c 0005                      __end_of_UART1_Write_string 238C  
                                      isdigit@c 0005                          ??_INTERRUPT_Initialize 0005  
                     ??_EUSART2_SetErrorHandler 0007                            __size_of_PrintModbus 0078  
                                      intlevel2 0000                                   ??_ClearRxBuff 0005  
                          ?_EUSART1_Receive_ISR 0001                                        islower@c 0005  
                                      isspace@c 0005                         ?_PIN_MANAGER_Initialize 0001  
                             __CFG_CLKOUTEN$OFF 000000          __end_of_EUSART1_SetOverrunErrorHandler 2AF0  
       __size_of_EUSART1_SetOverrunErrorHandler 000A                  _EUSART1_SetOverrunErrorHandler 2AE6  
                                      isupper@c 0005                    __end_of_EUSART1_Transmit_ISR 27B6  
                                      printf@ap 00CC  EUSART1_SetFramingErrorHandler@interruptHandler 0005  
EUSART2_SetFramingErrorHandler@interruptHandler 0005                  ?_EUSART1_SetTxInterruptHandler 0005  
                ?_EUSART2_SetRxInterruptHandler 0005                                 ___aomod@divisor 000D  
                                   ??_vfpfcnvrt 004F                                        stoa@nuls 0015  
                               ___aomod@counter 0015                          __size_of_EUSART1_Write 005E  
                            _eusart1RxLastError 009B                          __size_of_EUSART2_Write 005E  
                           _EUSART2_Receive_ISR 1CC8                         __end_of_ClearModbusData 269C  
                                      toupper@c 000B                                      _TX1STAbits 000F9E  
                                    _TX2STAbits 000E9E                                    ___aodiv@sign 0016  
                         ??_EUSART1_Receive_ISR 0001                  __end_of_PIN_MANAGER_Initialize 20AE  
               ??_EUSART2_SetTxInterruptHandler 0007                            ?_EUSART2_Receive_ISR 0001  
                            _eusart2RxLastError 00A0                                    ?_generateCRC 0005  
                       ??_EUSART1_RxDataHandler 0001                                    ___aomod@sign 0016  
             _EUSART2_RxDefaultInterruptHandler 00ED                             __end_of_ClearRxBuff 26E6  
