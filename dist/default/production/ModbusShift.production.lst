

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Apr 03 00:07:14 2021

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F46K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
    10                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    13                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    14                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    22                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    23                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    24                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    25                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    26                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    27                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    28                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    29                           	psect	text0,global,reloc=2,class=CODE,delta=1
    30                           	psect	text1,global,reloc=2,class=CODE,delta=1
    31                           	psect	text2,global,reloc=2,class=CODE,delta=1
    32                           	psect	text3,global,reloc=2,class=CODE,delta=1
    33                           	psect	text4,global,reloc=2,class=CODE,delta=1
    34                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text8,global,reloc=2,class=CODE,delta=1
    38                           	psect	text9,global,reloc=2,class=CODE,delta=1
    39                           	psect	text10,global,reloc=2,class=CODE,delta=1
    40                           	psect	text11,global,reloc=2,class=CODE,delta=1
    41                           	psect	text12,global,reloc=2,class=CODE,delta=1
    42                           	psect	text13,global,reloc=2,class=CODE,delta=1
    43                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text15,global,reloc=2,class=CODE,delta=1
    45                           	psect	text16,global,reloc=2,class=CODE,delta=1
    46                           	psect	text17,global,reloc=2,class=CODE,delta=1
    47                           	psect	text18,global,reloc=2,class=CODE,delta=1
    48                           	psect	text19,global,reloc=2,class=CODE,delta=1
    49                           	psect	text20,global,reloc=2,class=CODE,delta=1
    50                           	psect	text21,global,reloc=2,class=CODE,delta=1
    51                           	psect	text22,global,reloc=2,class=CODE,delta=1
    52                           	psect	text23,global,reloc=2,class=CODE,delta=1
    53                           	psect	text24,global,reloc=2,class=CODE,delta=1
    54                           	psect	text25,global,reloc=2,class=CODE,delta=1
    55                           	psect	text26,global,reloc=2,class=CODE,delta=1
    56                           	psect	text27,global,reloc=2,class=CODE,delta=1
    57                           	psect	text28,global,reloc=2,class=CODE,delta=1
    58                           	psect	text29,global,reloc=2,class=CODE,delta=1
    59                           	psect	text30,global,reloc=2,class=CODE,delta=1
    60                           	psect	text31,global,reloc=2,class=CODE,delta=1
    61                           	psect	text32,global,reloc=2,class=CODE,delta=1
    62                           	psect	text33,global,reloc=2,class=CODE,delta=1
    63                           	psect	text34,global,reloc=2,class=CODE,delta=1
    64                           	psect	text35,global,reloc=2,class=CODE,delta=1
    65                           	psect	text36,global,reloc=2,class=CODE,delta=1
    66                           	psect	text37,global,reloc=2,class=CODE,delta=1
    67                           	psect	text38,global,reloc=2,class=CODE,delta=1
    68                           	psect	text39,global,reloc=2,class=CODE,delta=1
    69                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text41,global,reloc=2,class=CODE,delta=1
    71                           	psect	text42,global,reloc=2,class=CODE,delta=1
    72                           	psect	text43,global,reloc=2,class=CODE,delta=1
    73                           	psect	text44,global,reloc=2,class=CODE,delta=1
    74                           	psect	text45,global,reloc=2,class=CODE,delta=1
    75                           	psect	text46,global,reloc=2,class=CODE,delta=1
    76                           	psect	text47,global,reloc=2,class=CODE,delta=1
    77                           	psect	text48,global,reloc=2,class=CODE,delta=1
    78                           	psect	text49,global,reloc=2,class=CODE,delta=1
    79                           	psect	text50,global,reloc=2,class=CODE,delta=1
    80                           	psect	text51,global,reloc=2,class=CODE,delta=1
    81                           	psect	text52,global,reloc=2,class=CODE,delta=1
    82                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text54,global,reloc=2,class=CODE,delta=1
    84                           	psect	text55,global,reloc=2,class=CODE,delta=1
    85                           	psect	text56,global,reloc=2,class=CODE,delta=1
    86                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    88                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text61,global,reloc=2,class=CODE,delta=1
    91                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    92                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    93                           	psect	text64,global,reloc=2,class=CODE,delta=1
    94                           	psect	text65,global,reloc=2,class=CODE,delta=1
    95                           	psect	text66,global,reloc=2,class=CODE,delta=1
    96                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text70,global,reloc=2,class=CODE,delta=1
   100                           	psect	text71,global,reloc=2,class=CODE,delta=1
   101                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
   103                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=1
   104                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=2
   105                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
   106                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
   107                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=1
   108                           	psect	text79,global,reloc=2,class=CODE,delta=1
   109                           	psect	text80,global,reloc=2,class=CODE,delta=1
   110                           	psect	text81,global,reloc=2,class=CODE,delta=1
   111                           	psect	text82,global,reloc=2,class=CODE,delta=1
   112                           	psect	text83,global,reloc=2,class=CODE,delta=1
   113                           	psect	text84,global,reloc=2,class=CODE,delta=1
   114                           	psect	text85,global,reloc=2,class=CODE,delta=1
   115                           	psect	text86,global,reloc=2,class=CODE,delta=1
   116                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   117                           	psect	text88,global,reloc=2,class=CODE,delta=1
   118                           	psect	text89,global,reloc=2,class=CODE,delta=1
   119                           	psect	text90,global,reloc=2,class=CODE,delta=1
   120                           	psect	text91,global,reloc=2,class=CODE,delta=1
   121                           	psect	text92,global,reloc=2,class=CODE,delta=1
   122                           	psect	text93,global,reloc=2,class=CODE,delta=1
   123                           	psect	text94,global,reloc=2,class=CODE,delta=1
   124                           	psect	text95,global,reloc=2,class=CODE,delta=1
   125                           	psect	text96,global,reloc=2,class=CODE,delta=1
   126                           	psect	text97,global,reloc=2,class=CODE,delta=1
   127                           	psect	text98,global,reloc=2,class=CODE,delta=1
   128                           	psect	text99,global,reloc=2,class=CODE,delta=1
   129                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   130                           	psect	text100,global,reloc=2,class=CODE,delta=1
   131                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   132                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   133  0000                     
   134                           ; Version 2.10
   135                           ; Generated 31/07/2019 GMT
   136                           ; 
   137                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   138                           ; All rights reserved.
   139                           ; 
   140                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   141                           ; 
   142                           ; Redistribution and use in source and binary forms, with or without modification, are
   143                           ; permitted provided that the following conditions are met:
   144                           ; 
   145                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   146                           ;        conditions and the following disclaimer.
   147                           ; 
   148                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   149                           ;        of conditions and the following disclaimer in the documentation and/or other
   150                           ;        materials provided with the distribution.
   151                           ; 
   152                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   153                           ;        software without specific prior written permission.
   154                           ; 
   155                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   156                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   157                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   158                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   159                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   160                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   161                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   162                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   163                           ; 
   164                           ; 
   165                           ; Code-generator required, PIC18F46K40 Definitions
   166                           ; 
   167                           ; SFR Addresses
   168  0000                     
   169                           	psect	idataBANK0
   170  005280                     __pidataBANK0:
   171                           	opt callstack 0
   172                           
   173                           ;initializer for ReadRX232@F10774
   174  005280  5A                 	db	90
   175  005281  00                 	db	0
   176                           
   177                           ;initializer for _ByteLo
   178  005282  00FF               	dw	255
   179                           
   180                           ;initializer for _MBResCRC
   181  005284  FFFF               	dw	65535
   182                           
   183                           ;initializer for _ExpectedBytes
   184  005286  0008               	dw	8
   185                           
   186                           ;initializer for _Address
   187  005288  0005               	dw	5
   188                           
   189                           ;initializer for _MB302xx
   190  00528A  0004               	dw	4
   191                           
   192                           ;initializer for _Debug
   193  00528C  01                 	db	1
   194                           
   195                           	psect	idataBANK1
   196  00454E                     __pidataBANK1:
   197                           	opt callstack 0
   198                           
   199                           ;initializer for _ModbusData
   200  00454E  FF                 	db	255
   201  00454F  00                 	db	0
   202  004550  00                 	db	0
   203  004551  00                 	db	0
   204  004552  00                 	db	0
   205  004553  00                 	db	0
   206  004554  00                 	db	0
   207  004555  00                 	db	0
   208  004556  00                 	db	0
   209  004557  00                 	db	0
   210  004558  00                 	db	0
   211  004559  00                 	db	0
   212  00455A  00                 	db	0
   213  00455B  00                 	db	0
   214  00455C  00                 	db	0
   215  00455D  00                 	db	0
   216  00455E  00                 	db	0
   217  00455F  00                 	db	0
   218  004560  00                 	db	0
   219  004561  00                 	db	0
   220  004562  00                 	db	0
   221  004563  00                 	db	0
   222  004564  00                 	db	0
   223  004565  00                 	db	0
   224  004566  00                 	db	0
   225  004567  00                 	db	0
   226  004568  00                 	db	0
   227  004569  00                 	db	0
   228  00456A  00                 	db	0
   229  00456B  00                 	db	0
   230  00456C  00                 	db	0
   231  00456D  00                 	db	0
   232  00456E  00                 	db	0
   233  00456F  00                 	db	0
   234  004570  00                 	db	0
   235  004571  00                 	db	0
   236  004572  00                 	db	0
   237  004573  00                 	db	0
   238  004574  00                 	db	0
   239  004575  00                 	db	0
   240  004576  00                 	db	0
   241  004577  00                 	db	0
   242  004578  00                 	db	0
   243  004579  00                 	db	0
   244  00457A  00                 	db	0
   245  00457B  00                 	db	0
   246  00457C  00                 	db	0
   247  00457D  00                 	db	0
   248  00457E  00                 	db	0
   249  00457F  00                 	db	0
   250  004580  00                 	db	0
   251  004581  00                 	db	0
   252  004582  00                 	db	0
   253  004583  00                 	db	0
   254  004584  00                 	db	0
   255  004585  00                 	db	0
   256  004586  00                 	db	0
   257  004587  00                 	db	0
   258  004588  00                 	db	0
   259  004589  00                 	db	0
   260  00458A  00                 	db	0
   261  00458B  00                 	db	0
   262  00458C  00                 	db	0
   263  00458D  00                 	db	0
   264  00458E  00                 	db	0
   265  00458F  00                 	db	0
   266  004590  00                 	db	0
   267  004591  00                 	db	0
   268  004592  00                 	db	0
   269  004593  00                 	db	0
   270  004594  00                 	db	0
   271  004595  00                 	db	0
   272  004596  00                 	db	0
   273  004597  00                 	db	0
   274  004598  00                 	db	0
   275  004599  00                 	db	0
   276  00459A  00                 	db	0
   277  00459B  00                 	db	0
   278  00459C  00                 	db	0
   279  00459D  00                 	db	0
   280  00459E  00                 	db	0
   281  00459F  00                 	db	0
   282  0045A0  00                 	db	0
   283  0045A1  00                 	db	0
   284  0045A2  00                 	db	0
   285  0045A3  00                 	db	0
   286  0045A4  00                 	db	0
   287  0045A5  00                 	db	0
   288  0045A6  00                 	db	0
   289  0045A7  00                 	db	0
   290  0045A8  00                 	db	0
   291  0045A9  00                 	db	0
   292  0045AA  00                 	db	0
   293  0045AB  00                 	db	0
   294  0045AC  00                 	db	0
   295  0045AD  00                 	db	0
   296  0045AE  00                 	db	0
   297  0045AF  00                 	db	0
   298  0045B0  00                 	db	0
   299  0045B1  00                 	db	0
   300                           
   301                           ;initializer for _MB301xx
   302  0045B2  4150               	dw	16720
   303  0045B4  3030               	dw	12336
   304  0045B6  3036               	dw	12342
   305  0045B8  3033               	dw	12339
   306  0045BA  3033               	dw	12339
   307  0045BC  2D30               	dw	11568
   308  0045BE  3200               	dw	12800
   309                           
   310                           ;initializer for _MB304xx
   311  0045C0  00FF               	dw	255
   312  0045C2  00                 	db	0
   313  0045C3  00                 	db	0
   314  0045C4  00                 	db	0
   315  0045C5  00                 	db	0
   316  0045C6  00                 	db	0
   317  0045C7  00                 	db	0
   318  0045C8  00                 	db	0
   319  0045C9  00                 	db	0
   320  0045CA  00                 	db	0
   321  0045CB  00                 	db	0
   322                           
   323                           ;initializer for _MB303xx
   324  0045CC  3132               	dw	12594
   325  0045CE  3334               	dw	13108
   326  0045D0  3536               	dw	13622
   327  0045D2  3738               	dw	14136
   328  0045D4  3930               	dw	14640
   329                           
   330                           ;initializer for InitialiseString@F10768
   331  0045D6  32                 	db	50
   332  0045D7  33                 	db	51
   333  0045D8  3A                 	db	58
   334  0045D9  33                 	db	51
   335  0045DA  36                 	db	54
   336  0045DB  3A                 	db	58
   337  0045DC  31                 	db	49
   338  0045DD  34                 	db	52
   339                           
   340                           ;initializer for stoa@F1139
   341  0045DE  28                 	db	40
   342  0045DF  6E                 	db	110
   343  0045E0  75                 	db	117
   344  0045E1  6C                 	db	108
   345  0045E2  6C                 	db	108
   346  0045E3  29                 	db	41
   347  0045E4  00                 	db	0
   348                           
   349                           ;initializer for _MB306xx
   350  0045E5  00FF               	dw	255
   351  0045E7  00                 	db	0
   352  0045E8  00                 	db	0
   353  0045E9  00                 	db	0
   354  0045EA  00                 	db	0
   355                           
   356                           	psect	idataBANK2
   357  00440C                     __pidataBANK2:
   358                           	opt callstack 0
   359                           
   360                           ;initializer for ValidateCmd@F10798
   361  00440C  52                 	db	82
   362  00440D  65                 	db	101
   363  00440E  76                 	db	118
   364  00440F  69                 	db	105
   365  004410  73                 	db	115
   366  004411  69                 	db	105
   367  004412  6F                 	db	111
   368  004413  6E                 	db	110
   369  004414  00                 	db	0
   370  004415  00                 	db	0
   371  004416  00                 	db	0
   372  004417  00                 	db	0
   373  004418  00                 	db	0
   374  004419  00                 	db	0
   375  00441A  00                 	db	0
   376  00441B  00                 	db	0
   377  00441C  00                 	db	0
   378  00441D  00                 	db	0
   379  00441E  00                 	db	0
   380  00441F  00                 	db	0
   381                           
   382                           ;initializer for ValidateCmd@F10795
   383  004420  50                 	db	80
   384  004421  61                 	db	97
   385  004422  72                 	db	114
   386  004423  74                 	db	116
   387  004424  20                 	db	32
   388  004425  4E                 	db	78
   389  004426  75                 	db	117
   390  004427  6D                 	db	109
   391  004428  62                 	db	98
   392  004429  65                 	db	101
   393  00442A  72                 	db	114
   394  00442B  00                 	db	0
   395  00442C  00                 	db	0
   396  00442D  00                 	db	0
   397  00442E  00                 	db	0
   398  00442F  00                 	db	0
   399  004430  00                 	db	0
   400  004431  00                 	db	0
   401  004432  00                 	db	0
   402  004433  00                 	db	0
   403                           
   404                           ;initializer for ValidateCmd@F10792
   405  004434  53                 	db	83
   406  004435  65                 	db	101
   407  004436  72                 	db	114
   408  004437  69                 	db	105
   409  004438  61                 	db	97
   410  004439  6C                 	db	108
   411  00443A  20                 	db	32
   412  00443B  4E                 	db	78
   413  00443C  75                 	db	117
   414  00443D  6D                 	db	109
   415  00443E  62                 	db	98
   416  00443F  65                 	db	101
   417  004440  72                 	db	114
   418  004441  00                 	db	0
   419  004442  00                 	db	0
   420  004443  00                 	db	0
   421  004444  00                 	db	0
   422  004445  00                 	db	0
   423  004446  00                 	db	0
   424  004447  00                 	db	0
   425                           
   426                           ;initializer for _MB305xx
   427  004448  00FF               	dw	255
   428  00444A  00                 	db	0
   429  00444B  00                 	db	0
   430  00444C  00                 	db	0
   431  00444D  00                 	db	0
   432  00444E  00                 	db	0
   433  00444F  00                 	db	0
   434  004450  00                 	db	0
   435  004451  00                 	db	0
   436  004452  00                 	db	0
   437  004453  00                 	db	0
   438  004454  00                 	db	0
   439  004455  00                 	db	0
   440  004456  00                 	db	0
   441  004457  00                 	db	0
   442                           
   443                           ;initializer for InitialiseString@F10765
   444  004458  41                 	db	65
   445  004459  70                 	db	112
   446  00445A  72                 	db	114
   447  00445B  20                 	db	32
   448  00445C  20                 	db	32
   449  00445D  32                 	db	50
   450  00445E  20                 	db	32
   451  00445F  32                 	db	50
   452  004460  30                 	db	48
   453  004461  32                 	db	50
   454  004462  31                 	db	49
   455                           
   456                           ;initializer for _MBRespon
   457  004463  FF                 	db	255
   458  004464  00                 	db	0
   459  004465  00                 	db	0
   460  004466  00                 	db	0
   461  004467  00                 	db	0
   462  004468  00                 	db	0
   463  004469  00                 	db	0
   464  00446A  00                 	db	0
   465  00446B  00                 	db	0
   466  00446C  00                 	db	0
   467  00446D  00                 	db	0
   468  00446E  00                 	db	0
   469  00446F  00                 	db	0
   470  004470  00                 	db	0
   471  004471  00                 	db	0
   472  004472  00                 	db	0
   473  004473  00                 	db	0
   474  004474  00                 	db	0
   475  004475  00                 	db	0
   476  004476  00                 	db	0
   477  004477  00                 	db	0
   478  004478  00                 	db	0
   479  004479  00                 	db	0
   480  00447A  00                 	db	0
   481  00447B  00                 	db	0
   482  00447C  00                 	db	0
   483  00447D  00                 	db	0
   484  00447E  00                 	db	0
   485  00447F  00                 	db	0
   486  004480  00                 	db	0
   487  004481  00                 	db	0
   488  004482  00                 	db	0
   489  004483  00                 	db	0
   490  004484  00                 	db	0
   491  004485  00                 	db	0
   492  004486  00                 	db	0
   493  004487  00                 	db	0
   494  004488  00                 	db	0
   495  004489  00                 	db	0
   496  00448A  00                 	db	0
   497  00448B  00                 	db	0
   498  00448C  00                 	db	0
   499  00448D  00                 	db	0
   500  00448E  00                 	db	0
   501  00448F  00                 	db	0
   502  004490  00                 	db	0
   503  004491  00                 	db	0
   504  004492  00                 	db	0
   505  004493  00                 	db	0
   506  004494  00                 	db	0
   507  004495  00                 	db	0
   508  004496  00                 	db	0
   509  004497  00                 	db	0
   510  004498  00                 	db	0
   511  004499  00                 	db	0
   512  00449A  00                 	db	0
   513  00449B  00                 	db	0
   514  00449C  00                 	db	0
   515  00449D  00                 	db	0
   516  00449E  00                 	db	0
   517  00449F  00                 	db	0
   518  0044A0  00                 	db	0
   519  0044A1  00                 	db	0
   520  0044A2  00                 	db	0
   521  0044A3  00                 	db	0
   522  0044A4  00                 	db	0
   523  0044A5  00                 	db	0
   524  0044A6  00                 	db	0
   525  0044A7  00                 	db	0
   526  0044A8  00                 	db	0
   527  0044A9  00                 	db	0
   528  0044AA  00                 	db	0
   529  0044AB  00                 	db	0
   530  0044AC  00                 	db	0
   531  0044AD  00                 	db	0
   532                           
   533                           	psect	idataBANK3
   534  004EB2                     __pidataBANK3:
   535                           	opt callstack 0
   536                           
   537                           ;initializer for _MB400xx
   538  004EB2  0020               	dw	32
   539  004EB4  001F               	dw	31
   540  004EB6  001E               	dw	30
   541  004EB8  001D               	dw	29
   542  004EBA  001C               	dw	28
   543  004EBC  001B               	dw	27
   544  004EBE  001A               	dw	26
   545  004EC0  0019               	dw	25
   546  004EC2  0018               	dw	24
   547  004EC4  0017               	dw	23
   548  004EC6  0016               	dw	22
   549  004EC8  0015               	dw	21
   550  004ECA  0014               	dw	20
   551  004ECC  0013               	dw	19
   552  004ECE  0012               	dw	18
   553  004ED0  0011               	dw	17
   554  004ED2  0010               	dw	16
   555  004ED4  000F               	dw	15
   556  004ED6  000E               	dw	14
   557  004ED8  000D               	dw	13
   558  004EDA  000C               	dw	12
   559  004EDC  000B               	dw	11
   560  004EDE  000A               	dw	10
   561  004EE0  0009               	dw	9
   562  004EE2  0008               	dw	8
   563  004EE4  0007               	dw	7
   564  004EE6  0006               	dw	6
   565  004EE8  0005               	dw	5
   566  004EEA  0004               	dw	4
   567  004EEC  0003               	dw	3
   568  004EEE  0002               	dw	2
   569  004EF0  0001               	dw	1
   570                           
   571                           	psect	idataBANK4
   572  004EF2                     __pidataBANK4:
   573                           	opt callstack 0
   574                           
   575                           ;initializer for _MB300xx
   576  004EF2  0001               	dw	1
   577  004EF4  0002               	dw	2
   578  004EF6  0003               	dw	3
   579  004EF8  0004               	dw	4
   580  004EFA  0005               	dw	5
   581  004EFC  0006               	dw	6
   582  004EFE  0007               	dw	7
   583  004F00  0008               	dw	8
   584  004F02  0009               	dw	9
   585  004F04  000A               	dw	10
   586  004F06  000B               	dw	11
   587  004F08  000C               	dw	12
   588  004F0A  000D               	dw	13
   589  004F0C  000E               	dw	14
   590  004F0E  000F               	dw	15
   591  004F10  0010               	dw	16
   592  004F12  0011               	dw	17
   593  004F14  0012               	dw	18
   594  004F16  0013               	dw	19
   595  004F18  0014               	dw	20
   596  004F1A  0015               	dw	21
   597  004F1C  0016               	dw	22
   598  004F1E  0017               	dw	23
   599  004F20  0018               	dw	24
   600  004F22  0019               	dw	25
   601  004F24  001A               	dw	26
   602  004F26  001B               	dw	27
   603  004F28  001C               	dw	28
   604  004F2A  001D               	dw	29
   605  004F2C  001E               	dw	30
   606  004F2E  001F               	dw	31
   607  004F30  0020               	dw	32
   608                           
   609                           	psect	nvBANK0
   610  0000F6                     __pnvBANK0:
   611                           	opt callstack 0
   612  0000F6                     _EUSART1_RxDefaultInterruptHandler:
   613                           	opt callstack 0
   614  0000F6                     	ds	2
   615  0000F8                     _EUSART1_TxDefaultInterruptHandler:
   616                           	opt callstack 0
   617  0000F8                     	ds	2
   618  0000FA                     _EUSART2_RxDefaultInterruptHandler:
   619                           	opt callstack 0
   620  0000FA                     	ds	2
   621  0000FC                     _EUSART2_TxDefaultInterruptHandler:
   622                           	opt callstack 0
   623  0000FC                     	ds	2
   624  0000FE                     _eusart1TxBufferRemaining:
   625                           	opt callstack 0
   626  0000FE                     	ds	1
   627  0000FF                     _eusart2TxBufferRemaining:
   628                           	opt callstack 0
   629  0000FF                     	ds	1
   630                           
   631                           	psect	nvBANK1
   632  0001F3                     __pnvBANK1:
   633                           	opt callstack 0
   634  0001F3                     _EUSART1_ErrorHandler:
   635                           	opt callstack 0
   636  0001F3                     	ds	2
   637  0001F5                     _EUSART1_OverrunErrorHandler:
   638                           	opt callstack 0
   639  0001F5                     	ds	2
   640  0001F7                     _EUSART1_FramingErrorHandler:
   641                           	opt callstack 0
   642  0001F7                     	ds	2
   643  0001F9                     _EUSART2_ErrorHandler:
   644                           	opt callstack 0
   645  0001F9                     	ds	2
   646  0001FB                     _EUSART2_OverrunErrorHandler:
   647                           	opt callstack 0
   648  0001FB                     	ds	2
   649  0001FD                     _EUSART2_FramingErrorHandler:
   650                           	opt callstack 0
   651  0001FD                     	ds	2
   652  0000                     _RC2REG	set	3737
   653  0000                     _RC2STAbits	set	3741
   654  0000                     _TX2REG	set	3738
   655  0000                     _TX2STAbits	set	3742
   656  0000                     _SP2BRGH	set	3740
   657  0000                     _SP2BRGL	set	3739
   658  0000                     _TX2STA	set	3742
   659  0000                     _RC2STA	set	3741
   660  0000                     _BAUD2CON	set	3743
   661  0000                     _PIR7bits	set	3793
   662  0000                     _PIR3bits	set	3789
   663  0000                     _PIE3bits	set	3781
   664  0000                     _PMD5	set	3814
   665  0000                     _PMD4	set	3813
   666  0000                     _PMD3	set	3812
   667  0000                     _PMD2	set	3811
   668  0000                     _PMD1	set	3810
   669  0000                     _PMD0	set	3809
   670  0000                     _OSCTUNE	set	3805
   671  0000                     _OSCFRQ	set	3806
   672  0000                     _OSCEN	set	3804
   673  0000                     _OSCCON3	set	3802
   674  0000                     _OSCCON1	set	3800
   675  0000                     _RX2PPS	set	3725
   676  0000                     _RC6PPS	set	3837
   677  0000                     _RB6PPS	set	3829
   678  0000                     _RX1PPS	set	3765
   679  0000                     _ADCON1bits	set	3929
   680  0000                     _ADCON2bits	set	3930
   681  0000                     _ADCON3bits	set	3931
   682  0000                     _ADACQ	set	3932
   683  0000                     _ADCLK	set	3927
   684  0000                     _ADACT	set	3926
   685  0000                     _ADREF	set	3928
   686  0000                     _ADCON3	set	3931
   687  0000                     _ADCON2	set	3930
   688  0000                     _ADCON1	set	3929
   689  0000                     _ADPRE	set	3934
   690  0000                     _ADCAP	set	3933
   691  0000                     _ADPCH	set	3935
   692  0000                     _INLVLE	set	3882
   693  0000                     _INLVLD	set	3874
   694  0000                     _INLVLC	set	3869
   695  0000                     _INLVLB	set	3861
   696  0000                     _INLVLA	set	3853
   697  0000                     _SLRCONE	set	3883
   698  0000                     _SLRCOND	set	3875
   699  0000                     _SLRCONC	set	3870
   700  0000                     _SLRCONB	set	3862
   701  0000                     _SLRCONA	set	3854
   702  0000                     _ODCOND	set	3876
   703  0000                     _ODCONC	set	3871
   704  0000                     _ODCONB	set	3863
   705  0000                     _ODCONA	set	3855
   706  0000                     _ODCONE	set	3884
   707  0000                     _WPUC	set	3872
   708  0000                     _WPUA	set	3856
   709  0000                     _WPUB	set	3864
   710  0000                     _WPUE	set	3885
   711  0000                     _WPUD	set	3877
   712  0000                     _ANSELA	set	3857
   713  0000                     _ANSELE	set	3886
   714  0000                     _ANSELB	set	3865
   715  0000                     _ANSELC	set	3873
   716  0000                     _ANSELD	set	3878
   717  0000                     _LATDbits	set	3974
   718  0000                     _LATAbits	set	3971
   719  0000                     _ADERRL	set	3950
   720  0000                     _ADERRH	set	3951
   721  0000                     _ADPREVL	set	3937
   722  0000                     _ADPREVH	set	3938
   723  0000                     _ADFLTRL	set	3954
   724  0000                     _ADFLTRH	set	3955
   725  0000                     _ADSTATbits	set	3941
   726  0000                     _ADACCL	set	3952
   727  0000                     _ADACCH	set	3953
   728  0000                     _ADCNT	set	3943
   729  0000                     _ADRESL	set	3939
   730  0000                     _ADRESH	set	3940
   731  0000                     _ADCON0bits	set	3936
   732  0000                     _ADCON0	set	3936
   733  0000                     _ADSTAT	set	3941
   734  0000                     _ADRPT	set	3942
   735  0000                     _ADSTPTH	set	3945
   736  0000                     _ADSTPTL	set	3944
   737  0000                     _ADUTHH	set	3949
   738  0000                     _ADUTHL	set	3948
   739  0000                     _ADLTHH	set	3947
   740  0000                     _ADLTHL	set	3946
   741  0000                     _RC1REG	set	3993
   742  0000                     _RC1STAbits	set	3997
   743  0000                     _TX1REG	set	3994
   744  0000                     _TX1STAbits	set	3998
   745  0000                     _SP1BRGH	set	3996
   746  0000                     _SP1BRGL	set	3995
   747  0000                     _TX1STA	set	3998
   748  0000                     _RC1STA	set	3997
   749  0000                     _BAUD1CON	set	3999
   750  0000                     _NVMDAT	set	3968
   751  0000                     _NVMADRL	set	3966
   752  0000                     _NVMADRH	set	3967
   753  0000                     _NVMCON2	set	3970
   754  0000                     _TABLAT	set	4085
   755  0000                     _TBLPTRL	set	4086
   756  0000                     _TBLPTRH	set	4087
   757  0000                     _TBLPTRU	set	4088
   758  0000                     _NVMCON1bits	set	3969
   759  0000                     _INTCONbits	set	4082
   760  0000                     _TRISD	set	3979
   761  0000                     _TRISC	set	3978
   762  0000                     _TRISB	set	3977
   763  0000                     _TRISA	set	3976
   764  0000                     _TRISE	set	3980
   765  0000                     _LATC	set	3973
   766  0000                     _LATB	set	3972
   767  0000                     _LATA	set	3971
   768  0000                     _LATD	set	3974
   769  0000                     _LATE	set	3975
   770                           
   771                           	psect	mediumconst
   772  00F2AE                     __pmediumconst:
   773                           	opt callstack 0
   774  00F2AE  00                 	db	0
   775  00F2AF                     STR_122:
   776                           
   777                           ; BSR set to: 0
   778  00F2AF  20                 	db	32
   779  00F2B0  20                 	db	32
   780  00F2B1  20                 	db	32
   781  00F2B2  64                 	db	100	;'d'
   782  00F2B3  65                 	db	101	;'e'
   783  00F2B4  62                 	db	98	;'b'
   784  00F2B5  75                 	db	117	;'u'
   785  00F2B6  67                 	db	103	;'g'
   786  00F2B7  20                 	db	32
   787  00F2B8  2D                 	db	45
   788  00F2B9  20                 	db	32
   789  00F2BA  54                 	db	84	;'T'
   790  00F2BB  6F                 	db	111	;'o'
   791  00F2BC  67                 	db	103	;'g'
   792  00F2BD  67                 	db	103	;'g'
   793  00F2BE  6C                 	db	108	;'l'
   794  00F2BF  65                 	db	101	;'e'
   795  00F2C0  73                 	db	115	;'s'
   796  00F2C1  20                 	db	32
   797  00F2C2  74                 	db	116	;'t'
   798  00F2C3  72                 	db	114	;'r'
   799  00F2C4  61                 	db	97	;'a'
   800  00F2C5  63                 	db	99	;'c'
   801  00F2C6  65                 	db	101	;'e'
   802  00F2C7  20                 	db	32
   803  00F2C8  6F                 	db	111	;'o'
   804  00F2C9  75                 	db	117	;'u'
   805  00F2CA  74                 	db	116	;'t'
   806  00F2CB  70                 	db	112	;'p'
   807  00F2CC  75                 	db	117	;'u'
   808  00F2CD  74                 	db	116	;'t'
   809  00F2CE  73                 	db	115	;'s'
   810  00F2CF  2E                 	db	46
   811  00F2D0  20                 	db	32
   812  00F2D1  53                 	db	83	;'S'
   813  00F2D2  6C                 	db	108	;'l'
   814  00F2D3  6F                 	db	111	;'o'
   815  00F2D4  77                 	db	119	;'w'
   816  00F2D5  73                 	db	115	;'s'
   817  00F2D6  20                 	db	32
   818  00F2D7  64                 	db	100	;'d'
   819  00F2D8  6F                 	db	111	;'o'
   820  00F2D9  77                 	db	119	;'w'
   821  00F2DA  6E                 	db	110	;'n'
   822  00F2DB  20                 	db	32
   823  00F2DC  74                 	db	116	;'t'
   824  00F2DD  69                 	db	105	;'i'
   825  00F2DE  6D                 	db	109	;'m'
   826  00F2DF  65                 	db	101	;'e'
   827  00F2E0  20                 	db	32
   828  00F2E1  64                 	db	100	;'d'
   829  00F2E2  65                 	db	101	;'e'
   830  00F2E3  76                 	db	118	;'v'
   831  00F2E4  69                 	db	105	;'i'
   832  00F2E5  63                 	db	99	;'c'
   833  00F2E6  65                 	db	101	;'e'
   834  00F2E7  20                 	db	32
   835  00F2E8  63                 	db	99	;'c'
   836  00F2E9  61                 	db	97	;'a'
   837  00F2EA  6E                 	db	110	;'n'
   838  00F2EB  20                 	db	32
   839  00F2EC  72                 	db	114	;'r'
   840  00F2ED  65                 	db	101	;'e'
   841  00F2EE  73                 	db	115	;'s'
   842  00F2EF  70                 	db	112	;'p'
   843  00F2F0  6F                 	db	111	;'o'
   844  00F2F1  6E                 	db	110	;'n'
   845  00F2F2  64                 	db	100	;'d'
   846  00F2F3  20                 	db	32
   847  00F2F4  62                 	db	98	;'b'
   848  00F2F5  65                 	db	101	;'e'
   849  00F2F6  74                 	db	116	;'t'
   850  00F2F7  77                 	db	119	;'w'
   851  00F2F8  65                 	db	101	;'e'
   852  00F2F9  65                 	db	101	;'e'
   853  00F2FA  6E                 	db	110	;'n'
   854  00F2FB  20                 	db	32
   855  00F2FC  63                 	db	99	;'c'
   856  00F2FD  6F                 	db	111	;'o'
   857  00F2FE  6D                 	db	109	;'m'
   858  00F2FF  6D                 	db	109	;'m'
   859  00F300  61                 	db	97	;'a'
   860  00F301  6E                 	db	110	;'n'
   861  00F302  64                 	db	100	;'d'
   862  00F303  73                 	db	115	;'s'
   863  00F304  2E                 	db	46
   864  00F305  20                 	db	32
   865  00F306  44                 	db	68	;'D'
   866  00F307  45                 	db	69	;'E'
   867  00F308  46                 	db	70	;'F'
   868  00F309  41                 	db	65	;'A'
   869  00F30A  55                 	db	85	;'U'
   870  00F30B  4C                 	db	76	;'L'
   871  00F30C  54                 	db	84	;'T'
   872  00F30D  20                 	db	32
   873  00F30E  4F                 	db	79	;'O'
   874  00F30F  4E                 	db	78	;'N'
   875  00F310  21                 	db	33
   876  00F311  0D                 	db	13
   877  00F312  0A                 	db	10
   878  00F313  0A                 	db	10
   879  00F314  00                 	db	0
   880  00F315                     STR_116:
   881                           
   882                           ; BSR set to: 0
   883  00F315  20                 	db	32
   884  00F316  20                 	db	32
   885  00F317  20                 	db	32
   886  00F318  20                 	db	32
   887  00F319  20                 	db	32
   888  00F31A  20                 	db	32
   889  00F31B  41                 	db	65	;'A'
   890  00F31C  64                 	db	100	;'d'
   891  00F31D  64                 	db	100	;'d'
   892  00F31E  20                 	db	32
   893  00F31F  30                 	db	48	;'0'
   894  00F320  78                 	db	120	;'x'
   895  00F321  30                 	db	48	;'0'
   896  00F322  30                 	db	48	;'0'
   897  00F323  30                 	db	48	;'0'
   898  00F324  30                 	db	48	;'0'
   899  00F325  20                 	db	32
   900  00F326  74                 	db	116	;'t'
   901  00F327  6F                 	db	111	;'o'
   902  00F328  20                 	db	32
   903  00F329  30                 	db	48	;'0'
   904  00F32A  78                 	db	120	;'x'
   905  00F32B  30                 	db	48	;'0'
   906  00F32C  30                 	db	48	;'0'
   907  00F32D  33                 	db	51	;'3'
   908  00F32E  31                 	db	49	;'1'
   909  00F32F  20                 	db	32
   910  00F330  2D                 	db	45
   911  00F331  20                 	db	32
   912  00F332  33                 	db	51	;'3'
   913  00F333  32                 	db	50	;'2'
   914  00F334  78                 	db	120	;'x'
   915  00F335  20                 	db	32
   916  00F336  43                 	db	67	;'C'
   917  00F337  69                 	db	105	;'i'
   918  00F338  72                 	db	114	;'r'
   919  00F339  63                 	db	99	;'c'
   920  00F33A  75                 	db	117	;'u'
   921  00F33B  69                 	db	105	;'i'
   922  00F33C  74                 	db	116	;'t'
   923  00F33D  20                 	db	32
   924  00F33E  47                 	db	71	;'G'
   925  00F33F  65                 	db	101	;'e'
   926  00F340  74                 	db	116	;'t'
   927  00F341  20                 	db	32
   928  00F342  53                 	db	83	;'S'
   929  00F343  74                 	db	116	;'t'
   930  00F344  61                 	db	97	;'a'
   931  00F345  74                 	db	116	;'t'
   932  00F346  75                 	db	117	;'u'
   933  00F347  73                 	db	115	;'s'
   934  00F348  20                 	db	32
   935  00F349  20                 	db	32
   936  00F34A  28                 	db	40
   937  00F34B  6C                 	db	108	;'l'
   938  00F34C  6F                 	db	111	;'o'
   939  00F34D  77                 	db	119	;'w'
   940  00F34E  65                 	db	101	;'e'
   941  00F34F  72                 	db	114	;'r'
   942  00F350  20                 	db	32
   943  00F351  38                 	db	56	;'8'
   944  00F352  62                 	db	98	;'b'
   945  00F353  69                 	db	105	;'i'
   946  00F354  74                 	db	116	;'t'
   947  00F355  73                 	db	115	;'s'
   948  00F356  20                 	db	32
   949  00F357  6F                 	db	111	;'o'
   950  00F358  6E                 	db	110	;'n'
   951  00F359  6C                 	db	108	;'l'
   952  00F35A  79                 	db	121	;'y'
   953  00F35B  29                 	db	41
   954  00F35C  0D                 	db	13
   955  00F35D  0A                 	db	10
   956  00F35E  0A                 	db	10
   957  00F35F  00                 	db	0
   958  00F360                     STR_114:
   959                           
   960                           ; BSR set to: 0
   961  00F360  20                 	db	32
   962  00F361  20                 	db	32
   963  00F362  20                 	db	32
   964  00F363  20                 	db	32
   965  00F364  20                 	db	32
   966  00F365  20                 	db	32
   967  00F366  41                 	db	65	;'A'
   968  00F367  64                 	db	100	;'d'
   969  00F368  64                 	db	100	;'d'
   970  00F369  20                 	db	32
   971  00F36A  30                 	db	48	;'0'
   972  00F36B  78                 	db	120	;'x'
   973  00F36C  30                 	db	48	;'0'
   974  00F36D  30                 	db	48	;'0'
   975  00F36E  30                 	db	48	;'0'
   976  00F36F  30                 	db	48	;'0'
   977  00F370  20                 	db	32
   978  00F371  74                 	db	116	;'t'
   979  00F372  6F                 	db	111	;'o'
   980  00F373  20                 	db	32
   981  00F374  30                 	db	48	;'0'
   982  00F375  78                 	db	120	;'x'
   983  00F376  30                 	db	48	;'0'
   984  00F377  30                 	db	48	;'0'
   985  00F378  33                 	db	51	;'3'
   986  00F379  31                 	db	49	;'1'
   987  00F37A  20                 	db	32
   988  00F37B  2D                 	db	45
   989  00F37C  20                 	db	32
   990  00F37D  33                 	db	51	;'3'
   991  00F37E  32                 	db	50	;'2'
   992  00F37F  78                 	db	120	;'x'
   993  00F380  20                 	db	32
   994  00F381  43                 	db	67	;'C'
   995  00F382  69                 	db	105	;'i'
   996  00F383  72                 	db	114	;'r'
   997  00F384  63                 	db	99	;'c'
   998  00F385  75                 	db	117	;'u'
   999  00F386  69                 	db	105	;'i'
  1000  00F387  74                 	db	116	;'t'
  1001  00F388  20                 	db	32
  1002  00F389  53                 	db	83	;'S'
  1003  00F38A  65                 	db	101	;'e'
  1004  00F38B  74                 	db	116	;'t'
  1005  00F38C  20                 	db	32
  1006  00F38D  53                 	db	83	;'S'
  1007  00F38E  74                 	db	116	;'t'
  1008  00F38F  61                 	db	97	;'a'
  1009  00F390  74                 	db	116	;'t'
  1010  00F391  75                 	db	117	;'u'
  1011  00F392  73                 	db	115	;'s'
  1012  00F393  20                 	db	32
  1013  00F394  20                 	db	32
  1014  00F395  28                 	db	40
  1015  00F396  6C                 	db	108	;'l'
  1016  00F397  6F                 	db	111	;'o'
  1017  00F398  77                 	db	119	;'w'
  1018  00F399  65                 	db	101	;'e'
  1019  00F39A  72                 	db	114	;'r'
  1020  00F39B  20                 	db	32
  1021  00F39C  38                 	db	56	;'8'
  1022  00F39D  62                 	db	98	;'b'
  1023  00F39E  69                 	db	105	;'i'
  1024  00F39F  74                 	db	116	;'t'
  1025  00F3A0  73                 	db	115	;'s'
  1026  00F3A1  20                 	db	32
  1027  00F3A2  6F                 	db	111	;'o'
  1028  00F3A3  6E                 	db	110	;'n'
  1029  00F3A4  6C                 	db	108	;'l'
  1030  00F3A5  79                 	db	121	;'y'
  1031  00F3A6  29                 	db	41
  1032  00F3A7  0D                 	db	13
  1033  00F3A8  0A                 	db	10
  1034  00F3A9  0A                 	db	10
  1035  00F3AA  00                 	db	0
  1036  00F3AB                     STR_106:
  1037                           
  1038                           ; BSR set to: 0
  1039  00F3AB  20                 	db	32
  1040  00F3AC  20                 	db	32
  1041  00F3AD  20                 	db	32
  1042  00F3AE  20                 	db	32
  1043  00F3AF  20                 	db	32
  1044  00F3B0  20                 	db	32
  1045  00F3B1  41                 	db	65	;'A'
  1046  00F3B2  64                 	db	100	;'d'
  1047  00F3B3  64                 	db	100	;'d'
  1048  00F3B4  20                 	db	32
  1049  00F3B5  30                 	db	48	;'0'
  1050  00F3B6  78                 	db	120	;'x'
  1051  00F3B7  30                 	db	48	;'0'
  1052  00F3B8  30                 	db	48	;'0'
  1053  00F3B9  30                 	db	48	;'0'
  1054  00F3BA  30                 	db	48	;'0'
  1055  00F3BB  20                 	db	32
  1056  00F3BC  74                 	db	116	;'t'
  1057  00F3BD  6F                 	db	111	;'o'
  1058  00F3BE  20                 	db	32
  1059  00F3BF  30                 	db	48	;'0'
  1060  00F3C0  78                 	db	120	;'x'
  1061  00F3C1  30                 	db	48	;'0'
  1062  00F3C2  30                 	db	48	;'0'
  1063  00F3C3  33                 	db	51	;'3'
  1064  00F3C4  31                 	db	49	;'1'
  1065  00F3C5  20                 	db	32
  1066  00F3C6  2D                 	db	45
  1067  00F3C7  20                 	db	32
  1068  00F3C8  33                 	db	51	;'3'
  1069  00F3C9  32                 	db	50	;'2'
  1070  00F3CA  78                 	db	120	;'x'
  1071  00F3CB  20                 	db	32
  1072  00F3CC  43                 	db	67	;'C'
  1073  00F3CD  69                 	db	105	;'i'
  1074  00F3CE  72                 	db	114	;'r'
  1075  00F3CF  63                 	db	99	;'c'
  1076  00F3D0  75                 	db	117	;'u'
  1077  00F3D1  69                 	db	105	;'i'
  1078  00F3D2  74                 	db	116	;'t'
  1079  00F3D3  20                 	db	32
  1080  00F3D4  47                 	db	71	;'G'
  1081  00F3D5  65                 	db	101	;'e'
  1082  00F3D6  74                 	db	116	;'t'
  1083  00F3D7  20                 	db	32
  1084  00F3D8  53                 	db	83	;'S'
  1085  00F3D9  74                 	db	116	;'t'
  1086  00F3DA  61                 	db	97	;'a'
  1087  00F3DB  74                 	db	116	;'t'
  1088  00F3DC  75                 	db	117	;'u'
  1089  00F3DD  73                 	db	115	;'s'
  1090  00F3DE  20                 	db	32
  1091  00F3DF  28                 	db	40
  1092  00F3E0  6C                 	db	108	;'l'
  1093  00F3E1  6F                 	db	111	;'o'
  1094  00F3E2  77                 	db	119	;'w'
  1095  00F3E3  65                 	db	101	;'e'
  1096  00F3E4  72                 	db	114	;'r'
  1097  00F3E5  20                 	db	32
  1098  00F3E6  38                 	db	56	;'8'
  1099  00F3E7  62                 	db	98	;'b'
  1100  00F3E8  69                 	db	105	;'i'
  1101  00F3E9  74                 	db	116	;'t'
  1102  00F3EA  73                 	db	115	;'s'
  1103  00F3EB  20                 	db	32
  1104  00F3EC  6F                 	db	111	;'o'
  1105  00F3ED  6E                 	db	110	;'n'
  1106  00F3EE  6C                 	db	108	;'l'
  1107  00F3EF  79                 	db	121	;'y'
  1108  00F3F0  29                 	db	41
  1109  00F3F1  0D                 	db	13
  1110  00F3F2  0A                 	db	10
  1111  00F3F3  00                 	db	0
  1112  00F3F4                     STR_112:
  1113                           
  1114                           ; BSR set to: 0
  1115  00F3F4  20                 	db	32
  1116  00F3F5  20                 	db	32
  1117  00F3F6  20                 	db	32
  1118  00F3F7  20                 	db	32
  1119  00F3F8  20                 	db	32
  1120  00F3F9  20                 	db	32
  1121  00F3FA  41                 	db	65	;'A'
  1122  00F3FB  64                 	db	100	;'d'
  1123  00F3FC  64                 	db	100	;'d'
  1124  00F3FD  20                 	db	32
  1125  00F3FE  30                 	db	48	;'0'
  1126  00F3FF  78                 	db	120	;'x'
  1127  00F400  30                 	db	48	;'0'
  1128  00F401  36                 	db	54	;'6'
  1129  00F402  30                 	db	48	;'0'
  1130  00F403  30                 	db	48	;'0'
  1131  00F404  20                 	db	32
  1132  00F405  74                 	db	116	;'t'
  1133  00F406  6F                 	db	111	;'o'
  1134  00F407  20                 	db	32
  1135  00F408  30                 	db	48	;'0'
  1136  00F409  78                 	db	120	;'x'
  1137  00F40A  30                 	db	48	;'0'
  1138  00F40B  36                 	db	54	;'6'
  1139  00F40C  30                 	db	48	;'0'
  1140  00F40D  32                 	db	50	;'2'
  1141  00F40E  20                 	db	32
  1142  00F40F  2D                 	db	45
  1143  00F410  20                 	db	32
  1144  00F411  33                 	db	51	;'3'
  1145  00F412  78                 	db	120	;'x'
  1146  00F413  20                 	db	32
  1147  00F414  41                 	db	65	;'A'
  1148  00F415  6E                 	db	110	;'n'
  1149  00F416  61                 	db	97	;'a'
  1150  00F417  6C                 	db	108	;'l'
  1151  00F418  6F                 	db	111	;'o'
  1152  00F419  67                 	db	103	;'g'
  1153  00F41A  75                 	db	117	;'u'
  1154  00F41B  65                 	db	101	;'e'
  1155  00F41C  20                 	db	32
  1156  00F41D  49                 	db	73	;'I'
  1157  00F41E  6E                 	db	110	;'n'
  1158  00F41F  70                 	db	112	;'p'
  1159  00F420  75                 	db	117	;'u'
  1160  00F421  74                 	db	116	;'t'
  1161  00F422  73                 	db	115	;'s'
  1162  00F423  20                 	db	32
  1163  00F424  28                 	db	40
  1164  00F425  30                 	db	48	;'0'
  1165  00F426  78                 	db	120	;'x'
  1166  00F427  30                 	db	48	;'0'
  1167  00F428  30                 	db	48	;'0'
  1168  00F429  30                 	db	48	;'0'
  1169  00F42A  20                 	db	32
  1170  00F42B  74                 	db	116	;'t'
  1171  00F42C  6F                 	db	111	;'o'
  1172  00F42D  20                 	db	32
  1173  00F42E  30                 	db	48	;'0'
  1174  00F42F  78                 	db	120	;'x'
  1175  00F430  30                 	db	48	;'0'
  1176  00F431  33                 	db	51	;'3'
  1177  00F432  66                 	db	102	;'f'
  1178  00F433  66                 	db	102	;'f'
  1179  00F434  29                 	db	41
  1180  00F435  0D                 	db	13
  1181  00F436  0A                 	db	10
  1182  00F437  0A                 	db	10
  1183  00F438  00                 	db	0
  1184  00F439                     STR_113:
  1185                           
  1186                           ; BSR set to: 0
  1187  00F439  20                 	db	32
  1188  00F43A  20                 	db	32
  1189  00F43B  20                 	db	32
  1190  00F43C  30                 	db	48	;'0'
  1191  00F43D  78                 	db	120	;'x'
  1192  00F43E  31                 	db	49	;'1'
  1193  00F43F  30                 	db	48	;'0'
  1194  00F440  20                 	db	32
  1195  00F441  2D                 	db	45
  1196  00F442  20                 	db	32
  1197  00F443  57                 	db	87	;'W'
  1198  00F444  72                 	db	114	;'r'
  1199  00F445  69                 	db	105	;'i'
  1200  00F446  74                 	db	116	;'t'
  1201  00F447  65                 	db	101	;'e'
  1202  00F448  20                 	db	32
  1203  00F449  4D                 	db	77	;'M'
  1204  00F44A  75                 	db	117	;'u'
  1205  00F44B  6C                 	db	108	;'l'
  1206  00F44C  74                 	db	116	;'t'
  1207  00F44D  69                 	db	105	;'i'
  1208  00F44E  70                 	db	112	;'p'
  1209  00F44F  6C                 	db	108	;'l'
  1210  00F450  65                 	db	101	;'e'
  1211  00F451  20                 	db	32
  1212  00F452  4F                 	db	79	;'O'
  1213  00F453  75                 	db	117	;'u'
  1214  00F454  74                 	db	116	;'t'
  1215  00F455  70                 	db	112	;'p'
  1216  00F456  75                 	db	117	;'u'
  1217  00F457  74                 	db	116	;'t'
  1218  00F458  20                 	db	32
  1219  00F459  48                 	db	72	;'H'
  1220  00F45A  6F                 	db	111	;'o'
  1221  00F45B  6C                 	db	108	;'l'
  1222  00F45C  64                 	db	100	;'d'
  1223  00F45D  69                 	db	105	;'i'
  1224  00F45E  6E                 	db	110	;'n'
  1225  00F45F  67                 	db	103	;'g'
  1226  00F460  20                 	db	32
  1227  00F461  52                 	db	82	;'R'
  1228  00F462  65                 	db	101	;'e'
  1229  00F463  67                 	db	103	;'g'
  1230  00F464  69                 	db	105	;'i'
  1231  00F465  73                 	db	115	;'s'
  1232  00F466  74                 	db	116	;'t'
  1233  00F467  65                 	db	101	;'e'
  1234  00F468  72                 	db	114	;'r'
  1235  00F469  73                 	db	115	;'s'
  1236  00F46A  20                 	db	32
  1237  00F46B  28                 	db	40
  1238  00F46C  4D                 	db	77	;'M'
  1239  00F46D  61                 	db	97	;'a'
  1240  00F46E  78                 	db	120	;'x'
  1241  00F46F  20                 	db	32
  1242  00F470  33                 	db	51	;'3'
  1243  00F471  32                 	db	50	;'2'
  1244  00F472  78                 	db	120	;'x'
  1245  00F473  20                 	db	32
  1246  00F474  31                 	db	49	;'1'
  1247  00F475  36                 	db	54	;'6'
  1248  00F476  62                 	db	98	;'b'
  1249  00F477  69                 	db	105	;'i'
  1250  00F478  74                 	db	116	;'t'
  1251  00F479  29                 	db	41
  1252  00F47A  0D                 	db	13
  1253  00F47B  0A                 	db	10
  1254  00F47C  00                 	db	0
  1255  00F47D                     STR_115:
  1256                           
  1257                           ; BSR set to: 0
  1258  00F47D  20                 	db	32
  1259  00F47E  20                 	db	32
  1260  00F47F  20                 	db	32
  1261  00F480  30                 	db	48	;'0'
  1262  00F481  78                 	db	120	;'x'
  1263  00F482  30                 	db	48	;'0'
  1264  00F483  33                 	db	51	;'3'
  1265  00F484  20                 	db	32
  1266  00F485  2D                 	db	45
  1267  00F486  20                 	db	32
  1268  00F487  52                 	db	82	;'R'
  1269  00F488  65                 	db	101	;'e'
  1270  00F489  61                 	db	97	;'a'
  1271  00F48A  64                 	db	100	;'d'
  1272  00F48B  20                 	db	32
  1273  00F48C  4D                 	db	77	;'M'
  1274  00F48D  75                 	db	117	;'u'
  1275  00F48E  6C                 	db	108	;'l'
  1276  00F48F  74                 	db	116	;'t'
  1277  00F490  69                 	db	105	;'i'
  1278  00F491  70                 	db	112	;'p'
  1279  00F492  6C                 	db	108	;'l'
  1280  00F493  65                 	db	101	;'e'
  1281  00F494  20                 	db	32
  1282  00F495  4F                 	db	79	;'O'
  1283  00F496  75                 	db	117	;'u'
  1284  00F497  74                 	db	116	;'t'
  1285  00F498  70                 	db	112	;'p'
  1286  00F499  75                 	db	117	;'u'
  1287  00F49A  74                 	db	116	;'t'
  1288  00F49B  20                 	db	32
  1289  00F49C  48                 	db	72	;'H'
  1290  00F49D  6F                 	db	111	;'o'
  1291  00F49E  6C                 	db	108	;'l'
  1292  00F49F  64                 	db	100	;'d'
  1293  00F4A0  69                 	db	105	;'i'
  1294  00F4A1  6E                 	db	110	;'n'
  1295  00F4A2  67                 	db	103	;'g'
  1296  00F4A3  20                 	db	32
  1297  00F4A4  52                 	db	82	;'R'
  1298  00F4A5  65                 	db	101	;'e'
  1299  00F4A6  67                 	db	103	;'g'
  1300  00F4A7  69                 	db	105	;'i'
  1301  00F4A8  73                 	db	115	;'s'
  1302  00F4A9  74                 	db	116	;'t'
  1303  00F4AA  65                 	db	101	;'e'
  1304  00F4AB  72                 	db	114	;'r'
  1305  00F4AC  73                 	db	115	;'s'
  1306  00F4AD  20                 	db	32
  1307  00F4AE  28                 	db	40
  1308  00F4AF  4D                 	db	77	;'M'
  1309  00F4B0  61                 	db	97	;'a'
  1310  00F4B1  78                 	db	120	;'x'
  1311  00F4B2  20                 	db	32
  1312  00F4B3  33                 	db	51	;'3'
  1313  00F4B4  32                 	db	50	;'2'
  1314  00F4B5  78                 	db	120	;'x'
  1315  00F4B6  20                 	db	32
  1316  00F4B7  31                 	db	49	;'1'
  1317  00F4B8  36                 	db	54	;'6'
  1318  00F4B9  62                 	db	98	;'b'
  1319  00F4BA  69                 	db	105	;'i'
  1320  00F4BB  74                 	db	116	;'t'
  1321  00F4BC  29                 	db	41
  1322  00F4BD  0D                 	db	13
  1323  00F4BE  0A                 	db	10
  1324  00F4BF  00                 	db	0
  1325  00F4C0                     STR_28:
  1326                           
  1327                           ; BSR set to: 0
  1328  00F4C0  20                 	db	32
  1329  00F4C1  20                 	db	32
  1330  00F4C2  20                 	db	32
  1331  00F4C3  42                 	db	66	;'B'
  1332  00F4C4  79                 	db	121	;'y'
  1333  00F4C5  74                 	db	116	;'t'
  1334  00F4C6  65                 	db	101	;'e'
  1335  00F4C7  20                 	db	32
  1336  00F4C8  25                 	db	37
  1337  00F4C9  30                 	db	48	;'0'
  1338  00F4CA  32                 	db	50	;'2'
  1339  00F4CB  69                 	db	105	;'i'
  1340  00F4CC  3A                 	db	58	;':'
  1341  00F4CD  20                 	db	32
  1342  00F4CE  30                 	db	48	;'0'
  1343  00F4CF  78                 	db	120	;'x'
  1344  00F4D0  25                 	db	37
  1345  00F4D1  30                 	db	48	;'0'
  1346  00F4D2  32                 	db	50	;'2'
  1347  00F4D3  78                 	db	120	;'x'
  1348  00F4D4  20                 	db	32
  1349  00F4D5  2D                 	db	45
  1350  00F4D6  20                 	db	32
  1351  00F4D7  52                 	db	82	;'R'
  1352  00F4D8  65                 	db	101	;'e'
  1353  00F4D9  67                 	db	103	;'g'
  1354  00F4DA  20                 	db	32
  1355  00F4DB  25                 	db	37
  1356  00F4DC  69                 	db	105	;'i'
  1357  00F4DD  20                 	db	32
  1358  00F4DE  48                 	db	72	;'H'
  1359  00F4DF  69                 	db	105	;'i'
  1360  00F4E0  20                 	db	32
  1361  00F4E1  28                 	db	40
  1362  00F4E2  41                 	db	65	;'A'
  1363  00F4E3  64                 	db	100	;'d'
  1364  00F4E4  64                 	db	100	;'d'
  1365  00F4E5  2E                 	db	46
  1366  00F4E6  20                 	db	32
  1367  00F4E7  30                 	db	48	;'0'
  1368  00F4E8  78                 	db	120	;'x'
  1369  00F4E9  25                 	db	37
  1370  00F4EA  30                 	db	48	;'0'
  1371  00F4EB  32                 	db	50	;'2'
  1372  00F4EC  78                 	db	120	;'x'
  1373  00F4ED  25                 	db	37
  1374  00F4EE  30                 	db	48	;'0'
  1375  00F4EF  32                 	db	50	;'2'
  1376  00F4F0  78                 	db	120	;'x'
  1377  00F4F1  20                 	db	32
  1378  00F4F2  2F                 	db	47
  1379  00F4F3  20                 	db	32
  1380  00F4F4  43                 	db	67	;'C'
  1381  00F4F5  69                 	db	105	;'i'
  1382  00F4F6  72                 	db	114	;'r'
  1383  00F4F7  63                 	db	99	;'c'
  1384  00F4F8  75                 	db	117	;'u'
  1385  00F4F9  69                 	db	105	;'i'
  1386  00F4FA  74                 	db	116	;'t'
  1387  00F4FB  20                 	db	32
  1388  00F4FC  25                 	db	37
  1389  00F4FD  69                 	db	105	;'i'
  1390  00F4FE  29                 	db	41
  1391  00F4FF  0D                 	db	13
  1392  00F500  0A                 	db	10
  1393  00F501  00                 	db	0
  1394  00F502                     STR_127:
  1395                           
  1396                           ; BSR set to: 0
  1397  00F502  43                 	db	67	;'C'
  1398  00F503  6C                 	db	108	;'l'
  1399  00F504  65                 	db	101	;'e'
  1400  00F505  61                 	db	97	;'a'
  1401  00F506  72                 	db	114	;'r'
  1402  00F507  69                 	db	105	;'i'
  1403  00F508  6E                 	db	110	;'n'
  1404  00F509  67                 	db	103	;'g'
  1405  00F50A  20                 	db	32
  1406  00F50B  45                 	db	69	;'E'
  1407  00F50C  45                 	db	69	;'E'
  1408  00F50D  50                 	db	80	;'P'
  1409  00F50E  52                 	db	82	;'R'
  1410  00F50F  4F                 	db	79	;'O'
  1411  00F510  4D                 	db	77	;'M'
  1412  00F511  20                 	db	32
  1413  00F512  66                 	db	102	;'f'
  1414  00F513  72                 	db	114	;'r'
  1415  00F514  6F                 	db	111	;'o'
  1416  00F515  6D                 	db	109	;'m'
  1417  00F516  20                 	db	32
  1418  00F517  41                 	db	65	;'A'
  1419  00F518  64                 	db	100	;'d'
  1420  00F519  64                 	db	100	;'d'
  1421  00F51A  72                 	db	114	;'r'
  1422  00F51B  65                 	db	101	;'e'
  1423  00F51C  73                 	db	115	;'s'
  1424  00F51D  73                 	db	115	;'s'
  1425  00F51E  3A                 	db	58	;':'
  1426  00F51F  20                 	db	32
  1427  00F520  30                 	db	48	;'0'
  1428  00F521  78                 	db	120	;'x'
  1429  00F522  25                 	db	37
  1430  00F523  30                 	db	48	;'0'
  1431  00F524  34                 	db	52	;'4'
  1432  00F525  78                 	db	120	;'x'
  1433  00F526  20                 	db	32
  1434  00F527  66                 	db	102	;'f'
  1435  00F528  6F                 	db	111	;'o'
  1436  00F529  72                 	db	114	;'r'
  1437  00F52A  20                 	db	32
  1438  00F52B  6E                 	db	110	;'n'
  1439  00F52C  75                 	db	117	;'u'
  1440  00F52D  6D                 	db	109	;'m'
  1441  00F52E  20                 	db	32
  1442  00F52F  62                 	db	98	;'b'
  1443  00F530  79                 	db	121	;'y'
  1444  00F531  74                 	db	116	;'t'
  1445  00F532  65                 	db	101	;'e'
  1446  00F533  73                 	db	115	;'s'
  1447  00F534  3A                 	db	58	;':'
  1448  00F535  20                 	db	32
  1449  00F536  25                 	db	37
  1450  00F537  69                 	db	105	;'i'
  1451  00F538  20                 	db	32
  1452  00F539  0D                 	db	13
  1453  00F53A  0A                 	db	10
  1454  00F53B  00                 	db	0
  1455  00F53C                     STR_3:
  1456                           
  1457                           ; BSR set to: 0
  1458  00F53C  46                 	db	70	;'F'
  1459  00F53D  75                 	db	117	;'u'
  1460  00F53E  6E                 	db	110	;'n'
  1461  00F53F  63                 	db	99	;'c'
  1462  00F540  74                 	db	116	;'t'
  1463  00F541  69                 	db	105	;'i'
  1464  00F542  6F                 	db	111	;'o'
  1465  00F543  6E                 	db	110	;'n'
  1466  00F544  20                 	db	32
  1467  00F545  43                 	db	67	;'C'
  1468  00F546  6F                 	db	111	;'o'
  1469  00F547  64                 	db	100	;'d'
  1470  00F548  65                 	db	101	;'e'
  1471  00F549  20                 	db	32
  1472  00F54A  30                 	db	48	;'0'
  1473  00F54B  78                 	db	120	;'x'
  1474  00F54C  31                 	db	49	;'1'
  1475  00F54D  30                 	db	48	;'0'
  1476  00F54E  20                 	db	32
  1477  00F54F  2D                 	db	45
  1478  00F550  20                 	db	32
  1479  00F551  57                 	db	87	;'W'
  1480  00F552  72                 	db	114	;'r'
  1481  00F553  69                 	db	105	;'i'
  1482  00F554  74                 	db	116	;'t'
  1483  00F555  65                 	db	101	;'e'
  1484  00F556  20                 	db	32
  1485  00F557  74                 	db	116	;'t'
  1486  00F558  6F                 	db	111	;'o'
  1487  00F559  20                 	db	32
  1488  00F55A  4F                 	db	79	;'O'
  1489  00F55B  75                 	db	117	;'u'
  1490  00F55C  74                 	db	116	;'t'
  1491  00F55D  70                 	db	112	;'p'
  1492  00F55E  75                 	db	117	;'u'
  1493  00F55F  74                 	db	116	;'t'
  1494  00F560  20                 	db	32
  1495  00F561  48                 	db	72	;'H'
  1496  00F562  6F                 	db	111	;'o'
  1497  00F563  6C                 	db	108	;'l'
  1498  00F564  64                 	db	100	;'d'
  1499  00F565  69                 	db	105	;'i'
  1500  00F566  6E                 	db	110	;'n'
  1501  00F567  67                 	db	103	;'g'
  1502  00F568  20                 	db	32
  1503  00F569  52                 	db	82	;'R'
  1504  00F56A  65                 	db	101	;'e'
  1505  00F56B  67                 	db	103	;'g'
  1506  00F56C  69                 	db	105	;'i'
  1507  00F56D  73                 	db	115	;'s'
  1508  00F56E  74                 	db	116	;'t'
  1509  00F56F  65                 	db	101	;'e'
  1510  00F570  72                 	db	114	;'r'
  1511  00F571  73                 	db	115	;'s'
  1512  00F572  20                 	db	32
  1513  00F573  0D                 	db	13
  1514  00F574  0A                 	db	10
  1515  00F575  00                 	db	0
  1516  00F576                     STR_22:
  1517                           
  1518                           ; BSR set to: 0
  1519  00F576  20                 	db	32
  1520  00F577  20                 	db	32
  1521  00F578  20                 	db	32
  1522  00F579  42                 	db	66	;'B'
  1523  00F57A  79                 	db	121	;'y'
  1524  00F57B  74                 	db	116	;'t'
  1525  00F57C  65                 	db	101	;'e'
  1526  00F57D  20                 	db	32
  1527  00F57E  30                 	db	48	;'0'
  1528  00F57F  31                 	db	49	;'1'
  1529  00F580  3A                 	db	58	;':'
  1530  00F581  20                 	db	32
  1531  00F582  30                 	db	48	;'0'
  1532  00F583  78                 	db	120	;'x'
  1533  00F584  25                 	db	37
  1534  00F585  30                 	db	48	;'0'
  1535  00F586  32                 	db	50	;'2'
  1536  00F587  78                 	db	120	;'x'
  1537  00F588  20                 	db	32
  1538  00F589  2D                 	db	45
  1539  00F58A  20                 	db	32
  1540  00F58B  46                 	db	70	;'F'
  1541  00F58C  75                 	db	117	;'u'
  1542  00F58D  6E                 	db	110	;'n'
  1543  00F58E  63                 	db	99	;'c'
  1544  00F58F  74                 	db	116	;'t'
  1545  00F590  69                 	db	105	;'i'
  1546  00F591  6F                 	db	111	;'o'
  1547  00F592  6E                 	db	110	;'n'
  1548  00F593  20                 	db	32
  1549  00F594  43                 	db	67	;'C'
  1550  00F595  6F                 	db	111	;'o'
  1551  00F596  64                 	db	100	;'d'
  1552  00F597  65                 	db	101	;'e'
  1553  00F598  20                 	db	32
  1554  00F599  28                 	db	40
  1555  00F59A  57                 	db	87	;'W'
  1556  00F59B  72                 	db	114	;'r'
  1557  00F59C  69                 	db	105	;'i'
  1558  00F59D  74                 	db	116	;'t'
  1559  00F59E  65                 	db	101	;'e'
  1560  00F59F  20                 	db	32
  1561  00F5A0  4D                 	db	77	;'M'
  1562  00F5A1  75                 	db	117	;'u'
  1563  00F5A2  6C                 	db	108	;'l'
  1564  00F5A3  74                 	db	116	;'t'
  1565  00F5A4  69                 	db	105	;'i'
  1566  00F5A5  20                 	db	32
  1567  00F5A6  52                 	db	82	;'R'
  1568  00F5A7  65                 	db	101	;'e'
  1569  00F5A8  67                 	db	103	;'g'
  1570  00F5A9  29                 	db	41
  1571  00F5AA  0D                 	db	13
  1572  00F5AB  0A                 	db	10
  1573  00F5AC  00                 	db	0
  1574  00F5AD                     STR_111:
  1575                           
  1576                           ; BSR set to: 0
  1577  00F5AD  20                 	db	32
  1578  00F5AE  20                 	db	32
  1579  00F5AF  20                 	db	32
  1580  00F5B0  20                 	db	32
  1581  00F5B1  20                 	db	32
  1582  00F5B2  20                 	db	32
  1583  00F5B3  41                 	db	65	;'A'
  1584  00F5B4  64                 	db	100	;'d'
  1585  00F5B5  64                 	db	100	;'d'
  1586  00F5B6  20                 	db	32
  1587  00F5B7  30                 	db	48	;'0'
  1588  00F5B8  78                 	db	120	;'x'
  1589  00F5B9  30                 	db	48	;'0'
  1590  00F5BA  35                 	db	53	;'5'
  1591  00F5BB  30                 	db	48	;'0'
  1592  00F5BC  30                 	db	48	;'0'
  1593  00F5BD  20                 	db	32
  1594  00F5BE  74                 	db	116	;'t'
  1595  00F5BF  6F                 	db	111	;'o'
  1596  00F5C0  20                 	db	32
  1597  00F5C1  30                 	db	48	;'0'
  1598  00F5C2  78                 	db	120	;'x'
  1599  00F5C3  30                 	db	48	;'0'
  1600  00F5C4  35                 	db	53	;'5'
  1601  00F5C5  30                 	db	48	;'0'
  1602  00F5C6  34                 	db	52	;'4'
  1603  00F5C7  20                 	db	32
  1604  00F5C8  2D                 	db	45
  1605  00F5C9  20                 	db	32
  1606  00F5CA  43                 	db	67	;'C'
  1607  00F5CB  6F                 	db	111	;'o'
  1608  00F5CC  6D                 	db	109	;'m'
  1609  00F5CD  70                 	db	112	;'p'
  1610  00F5CE  69                 	db	105	;'i'
  1611  00F5CF  6C                 	db	108	;'l'
  1612  00F5D0  65                 	db	101	;'e'
  1613  00F5D1  20                 	db	32
  1614  00F5D2  54                 	db	84	;'T'
  1615  00F5D3  69                 	db	105	;'i'
  1616  00F5D4  6D                 	db	109	;'m'
  1617  00F5D5  65                 	db	101	;'e'
  1618  00F5D6  20                 	db	32
  1619  00F5D7  2D                 	db	45
  1620  00F5D8  20                 	db	32
  1621  00F5D9  28                 	db	40
  1622  00F5DA  41                 	db	65	;'A'
  1623  00F5DB  53                 	db	83	;'S'
  1624  00F5DC  43                 	db	67	;'C'
  1625  00F5DD  49                 	db	73	;'I'
  1626  00F5DE  49                 	db	73	;'I'
  1627  00F5DF  29                 	db	41
  1628  00F5E0  0D                 	db	13
  1629  00F5E1  0A                 	db	10
  1630  00F5E2  00                 	db	0
  1631  00F5E3                     STR_14:
  1632                           
  1633                           ; BSR set to: 0
  1634  00F5E3  20                 	db	32
  1635  00F5E4  20                 	db	32
  1636  00F5E5  20                 	db	32
  1637  00F5E6  42                 	db	66	;'B'
  1638  00F5E7  79                 	db	121	;'y'
  1639  00F5E8  74                 	db	116	;'t'
  1640  00F5E9  65                 	db	101	;'e'
  1641  00F5EA  20                 	db	32
  1642  00F5EB  30                 	db	48	;'0'
  1643  00F5EC  31                 	db	49	;'1'
  1644  00F5ED  3A                 	db	58	;':'
  1645  00F5EE  20                 	db	32
  1646  00F5EF  30                 	db	48	;'0'
  1647  00F5F0  78                 	db	120	;'x'
  1648  00F5F1  25                 	db	37
  1649  00F5F2  30                 	db	48	;'0'
  1650  00F5F3  32                 	db	50	;'2'
  1651  00F5F4  78                 	db	120	;'x'
  1652  00F5F5  20                 	db	32
  1653  00F5F6  2D                 	db	45
  1654  00F5F7  20                 	db	32
  1655  00F5F8  46                 	db	70	;'F'
  1656  00F5F9  75                 	db	117	;'u'
  1657  00F5FA  6E                 	db	110	;'n'
  1658  00F5FB  63                 	db	99	;'c'
  1659  00F5FC  74                 	db	116	;'t'
  1660  00F5FD  69                 	db	105	;'i'
  1661  00F5FE  6F                 	db	111	;'o'
  1662  00F5FF  6E                 	db	110	;'n'
  1663  00F600  20                 	db	32
  1664  00F601  43                 	db	67	;'C'
  1665  00F602  6F                 	db	111	;'o'
  1666  00F603  64                 	db	100	;'d'
  1667  00F604  65                 	db	101	;'e'
  1668  00F605  20                 	db	32
  1669  00F606  28                 	db	40
  1670  00F607  52                 	db	82	;'R'
  1671  00F608  65                 	db	101	;'e'
  1672  00F609  61                 	db	97	;'a'
  1673  00F60A  64                 	db	100	;'d'
  1674  00F60B  20                 	db	32
  1675  00F60C  4D                 	db	77	;'M'
  1676  00F60D  75                 	db	117	;'u'
  1677  00F60E  6C                 	db	108	;'l'
  1678  00F60F  74                 	db	116	;'t'
  1679  00F610  69                 	db	105	;'i'
  1680  00F611  20                 	db	32
  1681  00F612  52                 	db	82	;'R'
  1682  00F613  65                 	db	101	;'e'
  1683  00F614  67                 	db	103	;'g'
  1684  00F615  29                 	db	41
  1685  00F616  0D                 	db	13
  1686  00F617  0A                 	db	10
  1687  00F618  00                 	db	0
  1688  00F619                     STR_68:
  1689                           
  1690                           ; BSR set to: 0
  1691  00F619  20                 	db	32
  1692  00F61A  20                 	db	32
  1693  00F61B  20                 	db	32
  1694  00F61C  42                 	db	66	;'B'
  1695  00F61D  79                 	db	121	;'y'
  1696  00F61E  74                 	db	116	;'t'
  1697  00F61F  65                 	db	101	;'e'
  1698  00F620  20                 	db	32
  1699  00F621  25                 	db	37
  1700  00F622  30                 	db	48	;'0'
  1701  00F623  32                 	db	50	;'2'
  1702  00F624  69                 	db	105	;'i'
  1703  00F625  3A                 	db	58	;':'
  1704  00F626  20                 	db	32
  1705  00F627  30                 	db	48	;'0'
  1706  00F628  78                 	db	120	;'x'
  1707  00F629  25                 	db	37
  1708  00F62A  30                 	db	48	;'0'
  1709  00F62B  32                 	db	50	;'2'
  1710  00F62C  78                 	db	120	;'x'
  1711  00F62D  20                 	db	32
  1712  00F62E  2D                 	db	45
  1713  00F62F  20                 	db	32
  1714  00F630  52                 	db	82	;'R'
  1715  00F631  65                 	db	101	;'e'
  1716  00F632  67                 	db	103	;'g'
  1717  00F633  20                 	db	32
  1718  00F634  25                 	db	37
  1719  00F635  69                 	db	105	;'i'
  1720  00F636  20                 	db	32
  1721  00F637  48                 	db	72	;'H'
  1722  00F638  69                 	db	105	;'i'
  1723  00F639  20                 	db	32
  1724  00F63A  28                 	db	40
  1725  00F63B  41                 	db	65	;'A'
  1726  00F63C  64                 	db	100	;'d'
  1727  00F63D  64                 	db	100	;'d'
  1728  00F63E  2E                 	db	46
  1729  00F63F  20                 	db	32
  1730  00F640  30                 	db	48	;'0'
  1731  00F641  78                 	db	120	;'x'
  1732  00F642  25                 	db	37
  1733  00F643  30                 	db	48	;'0'
  1734  00F644  32                 	db	50	;'2'
  1735  00F645  78                 	db	120	;'x'
  1736  00F646  20                 	db	32
  1737  00F647  25                 	db	37
  1738  00F648  30                 	db	48	;'0'
  1739  00F649  32                 	db	50	;'2'
  1740  00F64A  78                 	db	120	;'x'
  1741  00F64B  29                 	db	41
  1742  00F64C  0D                 	db	13
  1743  00F64D  0A                 	db	10
  1744  00F64E  00                 	db	0
  1745  00F64F                     STR_61:
  1746                           
  1747                           ; BSR set to: 0
  1748  00F64F  52                 	db	82	;'R'
  1749  00F650  65                 	db	101	;'e'
  1750  00F651  71                 	db	113	;'q'
  1751  00F652  75                 	db	117	;'u'
  1752  00F653  65                 	db	101	;'e'
  1753  00F654  73                 	db	115	;'s'
  1754  00F655  74                 	db	116	;'t'
  1755  00F656  65                 	db	101	;'e'
  1756  00F657  64                 	db	100	;'d'
  1757  00F658  20                 	db	32
  1758  00F659  72                 	db	114	;'r'
  1759  00F65A  65                 	db	101	;'e'
  1760  00F65B  67                 	db	103	;'g'
  1761  00F65C  69                 	db	105	;'i'
  1762  00F65D  73                 	db	115	;'s'
  1763  00F65E  74                 	db	116	;'t'
  1764  00F65F  65                 	db	101	;'e'
  1765  00F660  72                 	db	114	;'r'
  1766  00F661  73                 	db	115	;'s'
  1767  00F662  20                 	db	32
  1768  00F663  6F                 	db	111	;'o'
  1769  00F664  75                 	db	117	;'u'
  1770  00F665  74                 	db	116	;'t'
  1771  00F666  20                 	db	32
  1772  00F667  6F                 	db	111	;'o'
  1773  00F668  66                 	db	102	;'f'
  1774  00F669  20                 	db	32
  1775  00F66A  72                 	db	114	;'r'
  1776  00F66B  61                 	db	97	;'a'
  1777  00F66C  6E                 	db	110	;'n'
  1778  00F66D  67                 	db	103	;'g'
  1779  00F66E  65                 	db	101	;'e'
  1780  00F66F  2E                 	db	46
  1781  00F670  20                 	db	32
  1782  00F671  20                 	db	32
  1783  00F672  30                 	db	48	;'0'
  1784  00F673  78                 	db	120	;'x'
  1785  00F674  30                 	db	48	;'0'
  1786  00F675  30                 	db	48	;'0'
  1787  00F676  30                 	db	48	;'0'
  1788  00F677  30                 	db	48	;'0'
  1789  00F678  20                 	db	32
  1790  00F679  74                 	db	116	;'t'
  1791  00F67A  6F                 	db	111	;'o'
  1792  00F67B  20                 	db	32
  1793  00F67C  30                 	db	48	;'0'
  1794  00F67D  78                 	db	120	;'x'
  1795  00F67E  30                 	db	48	;'0'
  1796  00F67F  32                 	db	50	;'2'
  1797  00F680  30                 	db	48	;'0'
  1798  00F681  2E                 	db	46
  1799  00F682  0D                 	db	13
  1800  00F683  0A                 	db	10
  1801  00F684  00                 	db	0
  1802  00F685                     STR_109:
  1803                           
  1804                           ; BSR set to: 0
  1805  00F685  20                 	db	32
  1806  00F686  20                 	db	32
  1807  00F687  20                 	db	32
  1808  00F688  20                 	db	32
  1809  00F689  20                 	db	32
  1810  00F68A  20                 	db	32
  1811  00F68B  41                 	db	65	;'A'
  1812  00F68C  64                 	db	100	;'d'
  1813  00F68D  64                 	db	100	;'d'
  1814  00F68E  20                 	db	32
  1815  00F68F  30                 	db	48	;'0'
  1816  00F690  78                 	db	120	;'x'
  1817  00F691  30                 	db	48	;'0'
  1818  00F692  33                 	db	51	;'3'
  1819  00F693  30                 	db	48	;'0'
  1820  00F694  30                 	db	48	;'0'
  1821  00F695  20                 	db	32
  1822  00F696  74                 	db	116	;'t'
  1823  00F697  6F                 	db	111	;'o'
  1824  00F698  20                 	db	32
  1825  00F699  30                 	db	48	;'0'
  1826  00F69A  78                 	db	120	;'x'
  1827  00F69B  30                 	db	48	;'0'
  1828  00F69C  33                 	db	51	;'3'
  1829  00F69D  30                 	db	48	;'0'
  1830  00F69E  34                 	db	52	;'4'
  1831  00F69F  20                 	db	32
  1832  00F6A0  2D                 	db	45
  1833  00F6A1  20                 	db	32
  1834  00F6A2  53                 	db	83	;'S'
  1835  00F6A3  65                 	db	101	;'e'
  1836  00F6A4  72                 	db	114	;'r'
  1837  00F6A5  69                 	db	105	;'i'
  1838  00F6A6  61                 	db	97	;'a'
  1839  00F6A7  6C                 	db	108	;'l'
  1840  00F6A8  20                 	db	32
  1841  00F6A9  4E                 	db	78	;'N'
  1842  00F6AA  75                 	db	117	;'u'
  1843  00F6AB  6D                 	db	109	;'m'
  1844  00F6AC  62                 	db	98	;'b'
  1845  00F6AD  65                 	db	101	;'e'
  1846  00F6AE  72                 	db	114	;'r'
  1847  00F6AF  20                 	db	32
  1848  00F6B0  28                 	db	40
  1849  00F6B1  41                 	db	65	;'A'
  1850  00F6B2  53                 	db	83	;'S'
  1851  00F6B3  43                 	db	67	;'C'
  1852  00F6B4  49                 	db	73	;'I'
  1853  00F6B5  49                 	db	73	;'I'
  1854  00F6B6  29                 	db	41
  1855  00F6B7  0D                 	db	13
  1856  00F6B8  0A                 	db	10
  1857  00F6B9  00                 	db	0
  1858  00F6BA                     STR_84:
  1859                           
  1860                           ; BSR set to: 0
  1861  00F6BA  0D                 	db	13
  1862  00F6BB  0A                 	db	10
  1863  00F6BC  52                 	db	82	;'R'
  1864  00F6BD  65                 	db	101	;'e'
  1865  00F6BE  63                 	db	99	;'c'
  1866  00F6BF  65                 	db	101	;'e'
  1867  00F6C0  69                 	db	105	;'i'
  1868  00F6C1  76                 	db	118	;'v'
  1869  00F6C2  65                 	db	101	;'e'
  1870  00F6C3  64                 	db	100	;'d'
  1871  00F6C4  20                 	db	32
  1872  00F6C5  4D                 	db	77	;'M'
  1873  00F6C6  6F                 	db	111	;'o'
  1874  00F6C7  64                 	db	100	;'d'
  1875  00F6C8  62                 	db	98	;'b'
  1876  00F6C9  75                 	db	117	;'u'
  1877  00F6CA  73                 	db	115	;'s'
  1878  00F6CB  20                 	db	32
  1879  00F6CC  43                 	db	67	;'C'
  1880  00F6CD  52                 	db	82	;'R'
  1881  00F6CE  43                 	db	67	;'C'
  1882  00F6CF  20                 	db	32
  1883  00F6D0  47                 	db	71	;'G'
  1884  00F6D1  6F                 	db	111	;'o'
  1885  00F6D2  6F                 	db	111	;'o'
  1886  00F6D3  64                 	db	100	;'d'
  1887  00F6D4  20                 	db	32
  1888  00F6D5  62                 	db	98	;'b'
  1889  00F6D6  75                 	db	117	;'u'
  1890  00F6D7  74                 	db	116	;'t'
  1891  00F6D8  20                 	db	32
  1892  00F6D9  41                 	db	65	;'A'
  1893  00F6DA  64                 	db	100	;'d'
  1894  00F6DB  64                 	db	100	;'d'
  1895  00F6DC  72                 	db	114	;'r'
  1896  00F6DD  65                 	db	101	;'e'
  1897  00F6DE  73                 	db	115	;'s'
  1898  00F6DF  73                 	db	115	;'s'
  1899  00F6E0  20                 	db	32
  1900  00F6E1  4E                 	db	78	;'N'
  1901  00F6E2  4F                 	db	79	;'O'
  1902  00F6E3  54                 	db	84	;'T'
  1903  00F6E4  20                 	db	32
  1904  00F6E5  66                 	db	102	;'f'
  1905  00F6E6  6F                 	db	111	;'o'
  1906  00F6E7  72                 	db	114	;'r'
  1907  00F6E8  20                 	db	32
  1908  00F6E9  6D                 	db	109	;'m'
  1909  00F6EA  65                 	db	101	;'e'
  1910  00F6EB  2E                 	db	46
  1911  00F6EC  0D                 	db	13
  1912  00F6ED  0A                 	db	10
  1913  00F6EE  00                 	db	0
  1914  00F6EF                     STR_2:
  1915                           
  1916                           ; BSR set to: 0
  1917  00F6EF  46                 	db	70	;'F'
  1918  00F6F0  75                 	db	117	;'u'
  1919  00F6F1  6E                 	db	110	;'n'
  1920  00F6F2  63                 	db	99	;'c'
  1921  00F6F3  74                 	db	116	;'t'
  1922  00F6F4  69                 	db	105	;'i'
  1923  00F6F5  6F                 	db	111	;'o'
  1924  00F6F6  6E                 	db	110	;'n'
  1925  00F6F7  20                 	db	32
  1926  00F6F8  43                 	db	67	;'C'
  1927  00F6F9  6F                 	db	111	;'o'
  1928  00F6FA  64                 	db	100	;'d'
  1929  00F6FB  65                 	db	101	;'e'
  1930  00F6FC  20                 	db	32
  1931  00F6FD  30                 	db	48	;'0'
  1932  00F6FE  78                 	db	120	;'x'
  1933  00F6FF  30                 	db	48	;'0'
  1934  00F700  33                 	db	51	;'3'
  1935  00F701  20                 	db	32
  1936  00F702  2D                 	db	45
  1937  00F703  20                 	db	32
  1938  00F704  52                 	db	82	;'R'
  1939  00F705  65                 	db	101	;'e'
  1940  00F706  61                 	db	97	;'a'
  1941  00F707  64                 	db	100	;'d'
  1942  00F708  20                 	db	32
  1943  00F709  4F                 	db	79	;'O'
  1944  00F70A  75                 	db	117	;'u'
  1945  00F70B  74                 	db	116	;'t'
  1946  00F70C  70                 	db	112	;'p'
  1947  00F70D  75                 	db	117	;'u'
  1948  00F70E  74                 	db	116	;'t'
  1949  00F70F  20                 	db	32
  1950  00F710  48                 	db	72	;'H'
  1951  00F711  6F                 	db	111	;'o'
  1952  00F712  6C                 	db	108	;'l'
  1953  00F713  64                 	db	100	;'d'
  1954  00F714  69                 	db	105	;'i'
  1955  00F715  6E                 	db	110	;'n'
  1956  00F716  67                 	db	103	;'g'
  1957  00F717  20                 	db	32
  1958  00F718  52                 	db	82	;'R'
  1959  00F719  65                 	db	101	;'e'
  1960  00F71A  67                 	db	103	;'g'
  1961  00F71B  69                 	db	105	;'i'
  1962  00F71C  73                 	db	115	;'s'
  1963  00F71D  74                 	db	116	;'t'
  1964  00F71E  65                 	db	101	;'e'
  1965  00F71F  72                 	db	114	;'r'
  1966  00F720  73                 	db	115	;'s'
  1967  00F721  0D                 	db	13
  1968  00F722  0A                 	db	10
  1969  00F723  00                 	db	0
  1970  00F724                     STR_110:
  1971                           
  1972                           ; BSR set to: 0
  1973  00F724  20                 	db	32
  1974  00F725  20                 	db	32
  1975  00F726  20                 	db	32
  1976  00F727  20                 	db	32
  1977  00F728  20                 	db	32
  1978  00F729  20                 	db	32
  1979  00F72A  41                 	db	65	;'A'
  1980  00F72B  64                 	db	100	;'d'
  1981  00F72C  64                 	db	100	;'d'
  1982  00F72D  20                 	db	32
  1983  00F72E  30                 	db	48	;'0'
  1984  00F72F  78                 	db	120	;'x'
  1985  00F730  30                 	db	48	;'0'
  1986  00F731  34                 	db	52	;'4'
  1987  00F732  30                 	db	48	;'0'
  1988  00F733  30                 	db	48	;'0'
  1989  00F734  20                 	db	32
  1990  00F735  74                 	db	116	;'t'
  1991  00F736  6F                 	db	111	;'o'
  1992  00F737  20                 	db	32
  1993  00F738  30                 	db	48	;'0'
  1994  00F739  78                 	db	120	;'x'
  1995  00F73A  30                 	db	48	;'0'
  1996  00F73B  34                 	db	52	;'4'
  1997  00F73C  30                 	db	48	;'0'
  1998  00F73D  35                 	db	53	;'5'
  1999  00F73E  20                 	db	32
  2000  00F73F  2D                 	db	45
  2001  00F740  20                 	db	32
  2002  00F741  43                 	db	67	;'C'
  2003  00F742  6F                 	db	111	;'o'
  2004  00F743  6D                 	db	109	;'m'
  2005  00F744  70                 	db	112	;'p'
  2006  00F745  69                 	db	105	;'i'
  2007  00F746  6C                 	db	108	;'l'
  2008  00F747  65                 	db	101	;'e'
  2009  00F748  20                 	db	32
  2010  00F749  44                 	db	68	;'D'
  2011  00F74A  61                 	db	97	;'a'
  2012  00F74B  74                 	db	116	;'t'
  2013  00F74C  65                 	db	101	;'e'
  2014  00F74D  20                 	db	32
  2015  00F74E  28                 	db	40
  2016  00F74F  41                 	db	65	;'A'
  2017  00F750  53                 	db	83	;'S'
  2018  00F751  43                 	db	67	;'C'
  2019  00F752  49                 	db	73	;'I'
  2020  00F753  49                 	db	73	;'I'
  2021  00F754  29                 	db	41
  2022  00F755  0D                 	db	13
  2023  00F756  0A                 	db	10
  2024  00F757  00                 	db	0
  2025  00F758                     STR_33:
  2026                           
  2027                           ; BSR set to: 0
  2028  00F758  52                 	db	82	;'R'
  2029  00F759  65                 	db	101	;'e'
  2030  00F75A  67                 	db	103	;'g'
  2031  00F75B  69                 	db	105	;'i'
  2032  00F75C  73                 	db	115	;'s'
  2033  00F75D  74                 	db	116	;'t'
  2034  00F75E  65                 	db	101	;'e'
  2035  00F75F  72                 	db	114	;'r'
  2036  00F760  73                 	db	115	;'s'
  2037  00F761  20                 	db	32
  2038  00F762  6F                 	db	111	;'o'
  2039  00F763  75                 	db	117	;'u'
  2040  00F764  74                 	db	116	;'t'
  2041  00F765  20                 	db	32
  2042  00F766  6F                 	db	111	;'o'
  2043  00F767  66                 	db	102	;'f'
  2044  00F768  20                 	db	32
  2045  00F769  72                 	db	114	;'r'
  2046  00F76A  61                 	db	97	;'a'
  2047  00F76B  6E                 	db	110	;'n'
  2048  00F76C  67                 	db	103	;'g'
  2049  00F76D  65                 	db	101	;'e'
  2050  00F76E  2E                 	db	46
  2051  00F76F  0D                 	db	13
  2052  00F770  0A                 	db	10
  2053  00F771  56                 	db	86	;'V'
  2054  00F772  61                 	db	97	;'a'
  2055  00F773  6C                 	db	108	;'l'
  2056  00F774  69                 	db	105	;'i'
  2057  00F775  64                 	db	100	;'d'
  2058  00F776  3A                 	db	58	;':'
  2059  00F777  20                 	db	32
  2060  00F778  30                 	db	48	;'0'
  2061  00F779  78                 	db	120	;'x'
  2062  00F77A  30                 	db	48	;'0'
  2063  00F77B  30                 	db	48	;'0'
  2064  00F77C  30                 	db	48	;'0'
  2065  00F77D  30                 	db	48	;'0'
  2066  00F77E  20                 	db	32
  2067  00F77F  74                 	db	116	;'t'
  2068  00F780  6F                 	db	111	;'o'
  2069  00F781  20                 	db	32
  2070  00F782  30                 	db	48	;'0'
  2071  00F783  78                 	db	120	;'x'
  2072  00F784  30                 	db	48	;'0'
  2073  00F785  30                 	db	48	;'0'
  2074  00F786  33                 	db	51	;'3'
  2075  00F787  31                 	db	49	;'1'
  2076  00F788  2E                 	db	46
  2077  00F789  0D                 	db	13
  2078  00F78A  0A                 	db	10
  2079  00F78B  00                 	db	0
  2080  00F78C                     STR_56:
  2081                           
  2082                           ; BSR set to: 0
  2083  00F78C  52                 	db	82	;'R'
  2084  00F78D  65                 	db	101	;'e'
  2085  00F78E  67                 	db	103	;'g'
  2086  00F78F  69                 	db	105	;'i'
  2087  00F790  73                 	db	115	;'s'
  2088  00F791  74                 	db	116	;'t'
  2089  00F792  65                 	db	101	;'e'
  2090  00F793  72                 	db	114	;'r'
  2091  00F794  73                 	db	115	;'s'
  2092  00F795  20                 	db	32
  2093  00F796  6F                 	db	111	;'o'
  2094  00F797  75                 	db	117	;'u'
  2095  00F798  74                 	db	116	;'t'
  2096  00F799  20                 	db	32
  2097  00F79A  6F                 	db	111	;'o'
  2098  00F79B  66                 	db	102	;'f'
  2099  00F79C  20                 	db	32
  2100  00F79D  72                 	db	114	;'r'
  2101  00F79E  61                 	db	97	;'a'
  2102  00F79F  6E                 	db	110	;'n'
  2103  00F7A0  67                 	db	103	;'g'
  2104  00F7A1  65                 	db	101	;'e'
  2105  00F7A2  2E                 	db	46
  2106  00F7A3  0D                 	db	13
  2107  00F7A4  0A                 	db	10
  2108  00F7A5  56                 	db	86	;'V'
  2109  00F7A6  61                 	db	97	;'a'
  2110  00F7A7  6C                 	db	108	;'l'
  2111  00F7A8  69                 	db	105	;'i'
  2112  00F7A9  64                 	db	100	;'d'
  2113  00F7AA  3A                 	db	58	;':'
  2114  00F7AB  20                 	db	32
  2115  00F7AC  30                 	db	48	;'0'
  2116  00F7AD  78                 	db	120	;'x'
  2117  00F7AE  30                 	db	48	;'0'
  2118  00F7AF  36                 	db	54	;'6'
  2119  00F7B0  30                 	db	48	;'0'
  2120  00F7B1  30                 	db	48	;'0'
  2121  00F7B2  20                 	db	32
  2122  00F7B3  74                 	db	116	;'t'
  2123  00F7B4  6F                 	db	111	;'o'
  2124  00F7B5  20                 	db	32
  2125  00F7B6  30                 	db	48	;'0'
  2126  00F7B7  78                 	db	120	;'x'
  2127  00F7B8  30                 	db	48	;'0'
  2128  00F7B9  36                 	db	54	;'6'
  2129  00F7BA  30                 	db	48	;'0'
  2130  00F7BB  32                 	db	50	;'2'
  2131  00F7BC  2E                 	db	46
  2132  00F7BD  0D                 	db	13
  2133  00F7BE  0A                 	db	10
  2134  00F7BF  00                 	db	0
  2135  00F7C0                     STR_53:
  2136                           
  2137                           ; BSR set to: 0
  2138  00F7C0  52                 	db	82	;'R'
  2139  00F7C1  65                 	db	101	;'e'
  2140  00F7C2  67                 	db	103	;'g'
  2141  00F7C3  69                 	db	105	;'i'
  2142  00F7C4  73                 	db	115	;'s'
  2143  00F7C5  74                 	db	116	;'t'
  2144  00F7C6  65                 	db	101	;'e'
  2145  00F7C7  72                 	db	114	;'r'
  2146  00F7C8  73                 	db	115	;'s'
  2147  00F7C9  20                 	db	32
  2148  00F7CA  6F                 	db	111	;'o'
  2149  00F7CB  75                 	db	117	;'u'
  2150  00F7CC  74                 	db	116	;'t'
  2151  00F7CD  20                 	db	32
  2152  00F7CE  6F                 	db	111	;'o'
  2153  00F7CF  66                 	db	102	;'f'
  2154  00F7D0  20                 	db	32
  2155  00F7D1  72                 	db	114	;'r'
  2156  00F7D2  61                 	db	97	;'a'
  2157  00F7D3  6E                 	db	110	;'n'
  2158  00F7D4  67                 	db	103	;'g'
  2159  00F7D5  65                 	db	101	;'e'
  2160  00F7D6  2E                 	db	46
  2161  00F7D7  0D                 	db	13
  2162  00F7D8  0A                 	db	10
  2163  00F7D9  56                 	db	86	;'V'
  2164  00F7DA  61                 	db	97	;'a'
  2165  00F7DB  6C                 	db	108	;'l'
  2166  00F7DC  69                 	db	105	;'i'
  2167  00F7DD  64                 	db	100	;'d'
  2168  00F7DE  3A                 	db	58	;':'
  2169  00F7DF  20                 	db	32
  2170  00F7E0  30                 	db	48	;'0'
  2171  00F7E1  78                 	db	120	;'x'
  2172  00F7E2  30                 	db	48	;'0'
  2173  00F7E3  35                 	db	53	;'5'
  2174  00F7E4  30                 	db	48	;'0'
  2175  00F7E5  30                 	db	48	;'0'
  2176  00F7E6  20                 	db	32
  2177  00F7E7  74                 	db	116	;'t'
  2178  00F7E8  6F                 	db	111	;'o'
  2179  00F7E9  20                 	db	32
  2180  00F7EA  30                 	db	48	;'0'
  2181  00F7EB  78                 	db	120	;'x'
  2182  00F7EC  30                 	db	48	;'0'
  2183  00F7ED  35                 	db	53	;'5'
  2184  00F7EE  30                 	db	48	;'0'
  2185  00F7EF  33                 	db	51	;'3'
  2186  00F7F0  2E                 	db	46
  2187  00F7F1  0D                 	db	13
  2188  00F7F2  0A                 	db	10
  2189  00F7F3  00                 	db	0
  2190  00F7F4                     STR_47:
  2191                           
  2192                           ; BSR set to: 0
  2193  00F7F4  52                 	db	82	;'R'
  2194  00F7F5  65                 	db	101	;'e'
  2195  00F7F6  67                 	db	103	;'g'
  2196  00F7F7  69                 	db	105	;'i'
  2197  00F7F8  73                 	db	115	;'s'
  2198  00F7F9  74                 	db	116	;'t'
  2199  00F7FA  65                 	db	101	;'e'
  2200  00F7FB  72                 	db	114	;'r'
  2201  00F7FC  73                 	db	115	;'s'
  2202  00F7FD  20                 	db	32
  2203  00F7FE  6F                 	db	111	;'o'
  2204  00F7FF  75                 	db	117	;'u'
  2205  00F800  74                 	db	116	;'t'
  2206  00F801  20                 	db	32
  2207  00F802  6F                 	db	111	;'o'
  2208  00F803  66                 	db	102	;'f'
  2209  00F804  20                 	db	32
  2210  00F805  72                 	db	114	;'r'
  2211  00F806  61                 	db	97	;'a'
  2212  00F807  6E                 	db	110	;'n'
  2213  00F808  67                 	db	103	;'g'
  2214  00F809  65                 	db	101	;'e'
  2215  00F80A  2E                 	db	46
  2216  00F80B  0D                 	db	13
  2217  00F80C  0A                 	db	10
  2218  00F80D  56                 	db	86	;'V'
  2219  00F80E  61                 	db	97	;'a'
  2220  00F80F  6C                 	db	108	;'l'
  2221  00F810  69                 	db	105	;'i'
  2222  00F811  64                 	db	100	;'d'
  2223  00F812  3A                 	db	58	;':'
  2224  00F813  20                 	db	32
  2225  00F814  30                 	db	48	;'0'
  2226  00F815  78                 	db	120	;'x'
  2227  00F816  30                 	db	48	;'0'
  2228  00F817  33                 	db	51	;'3'
  2229  00F818  30                 	db	48	;'0'
  2230  00F819  30                 	db	48	;'0'
  2231  00F81A  20                 	db	32
  2232  00F81B  74                 	db	116	;'t'
  2233  00F81C  6F                 	db	111	;'o'
  2234  00F81D  20                 	db	32
  2235  00F81E  30                 	db	48	;'0'
  2236  00F81F  78                 	db	120	;'x'
  2237  00F820  30                 	db	48	;'0'
  2238  00F821  33                 	db	51	;'3'
  2239  00F822  30                 	db	48	;'0'
  2240  00F823  34                 	db	52	;'4'
  2241  00F824  2E                 	db	46
  2242  00F825  0D                 	db	13
  2243  00F826  0A                 	db	10
  2244  00F827  00                 	db	0
  2245  00F828                     STR_50:
  2246                           
  2247                           ; BSR set to: 0
  2248  00F828  52                 	db	82	;'R'
  2249  00F829  65                 	db	101	;'e'
  2250  00F82A  67                 	db	103	;'g'
  2251  00F82B  69                 	db	105	;'i'
  2252  00F82C  73                 	db	115	;'s'
  2253  00F82D  74                 	db	116	;'t'
  2254  00F82E  65                 	db	101	;'e'
  2255  00F82F  72                 	db	114	;'r'
  2256  00F830  73                 	db	115	;'s'
  2257  00F831  20                 	db	32
  2258  00F832  6F                 	db	111	;'o'
  2259  00F833  75                 	db	117	;'u'
  2260  00F834  74                 	db	116	;'t'
  2261  00F835  20                 	db	32
  2262  00F836  6F                 	db	111	;'o'
  2263  00F837  66                 	db	102	;'f'
  2264  00F838  20                 	db	32
  2265  00F839  72                 	db	114	;'r'
  2266  00F83A  61                 	db	97	;'a'
  2267  00F83B  6E                 	db	110	;'n'
  2268  00F83C  67                 	db	103	;'g'
  2269  00F83D  65                 	db	101	;'e'
  2270  00F83E  2E                 	db	46
  2271  00F83F  0D                 	db	13
  2272  00F840  0A                 	db	10
  2273  00F841  56                 	db	86	;'V'
  2274  00F842  61                 	db	97	;'a'
  2275  00F843  6C                 	db	108	;'l'
  2276  00F844  69                 	db	105	;'i'
  2277  00F845  64                 	db	100	;'d'
  2278  00F846  3A                 	db	58	;':'
  2279  00F847  20                 	db	32
  2280  00F848  30                 	db	48	;'0'
  2281  00F849  78                 	db	120	;'x'
  2282  00F84A  30                 	db	48	;'0'
  2283  00F84B  34                 	db	52	;'4'
  2284  00F84C  30                 	db	48	;'0'
  2285  00F84D  30                 	db	48	;'0'
  2286  00F84E  20                 	db	32
  2287  00F84F  74                 	db	116	;'t'
  2288  00F850  6F                 	db	111	;'o'
  2289  00F851  20                 	db	32
  2290  00F852  30                 	db	48	;'0'
  2291  00F853  78                 	db	120	;'x'
  2292  00F854  30                 	db	48	;'0'
  2293  00F855  34                 	db	52	;'4'
  2294  00F856  30                 	db	48	;'0'
  2295  00F857  35                 	db	53	;'5'
  2296  00F858  2E                 	db	46
  2297  00F859  0D                 	db	13
  2298  00F85A  0A                 	db	10
  2299  00F85B  00                 	db	0
  2300  00F85C                     STR_41:
  2301                           
  2302                           ; BSR set to: 0
  2303  00F85C  52                 	db	82	;'R'
  2304  00F85D  65                 	db	101	;'e'
  2305  00F85E  67                 	db	103	;'g'
  2306  00F85F  69                 	db	105	;'i'
  2307  00F860  73                 	db	115	;'s'
  2308  00F861  74                 	db	116	;'t'
  2309  00F862  65                 	db	101	;'e'
  2310  00F863  72                 	db	114	;'r'
  2311  00F864  73                 	db	115	;'s'
  2312  00F865  20                 	db	32
  2313  00F866  6F                 	db	111	;'o'
  2314  00F867  75                 	db	117	;'u'
  2315  00F868  74                 	db	116	;'t'
  2316  00F869  20                 	db	32
  2317  00F86A  6F                 	db	111	;'o'
  2318  00F86B  66                 	db	102	;'f'
  2319  00F86C  20                 	db	32
  2320  00F86D  72                 	db	114	;'r'
  2321  00F86E  61                 	db	97	;'a'
  2322  00F86F  6E                 	db	110	;'n'
  2323  00F870  67                 	db	103	;'g'
  2324  00F871  65                 	db	101	;'e'
  2325  00F872  2E                 	db	46
  2326  00F873  0D                 	db	13
  2327  00F874  0A                 	db	10
  2328  00F875  56                 	db	86	;'V'
  2329  00F876  61                 	db	97	;'a'
  2330  00F877  6C                 	db	108	;'l'
  2331  00F878  69                 	db	105	;'i'
  2332  00F879  64                 	db	100	;'d'
  2333  00F87A  3A                 	db	58	;':'
  2334  00F87B  20                 	db	32
  2335  00F87C  30                 	db	48	;'0'
  2336  00F87D  78                 	db	120	;'x'
  2337  00F87E  30                 	db	48	;'0'
  2338  00F87F  31                 	db	49	;'1'
  2339  00F880  30                 	db	48	;'0'
  2340  00F881  30                 	db	48	;'0'
  2341  00F882  20                 	db	32
  2342  00F883  74                 	db	116	;'t'
  2343  00F884  6F                 	db	111	;'o'
  2344  00F885  20                 	db	32
  2345  00F886  30                 	db	48	;'0'
  2346  00F887  78                 	db	120	;'x'
  2347  00F888  30                 	db	48	;'0'
  2348  00F889  31                 	db	49	;'1'
  2349  00F88A  30                 	db	48	;'0'
  2350  00F88B  38                 	db	56	;'8'
  2351  00F88C  2E                 	db	46
  2352  00F88D  0D                 	db	13
  2353  00F88E  0A                 	db	10
  2354  00F88F  00                 	db	0
  2355  00F890                     STR_83:
  2356                           
  2357                           ; BSR set to: 0
  2358  00F890  0D                 	db	13
  2359  00F891  0A                 	db	10
  2360  00F892  52                 	db	82	;'R'
  2361  00F893  65                 	db	101	;'e'
  2362  00F894  63                 	db	99	;'c'
  2363  00F895  65                 	db	101	;'e'
  2364  00F896  69                 	db	105	;'i'
  2365  00F897  76                 	db	118	;'v'
  2366  00F898  65                 	db	101	;'e'
  2367  00F899  64                 	db	100	;'d'
  2368  00F89A  20                 	db	32
  2369  00F89B  4D                 	db	77	;'M'
  2370  00F89C  6F                 	db	111	;'o'
  2371  00F89D  64                 	db	100	;'d'
  2372  00F89E  62                 	db	98	;'b'
  2373  00F89F  75                 	db	117	;'u'
  2374  00F8A0  73                 	db	115	;'s'
  2375  00F8A1  20                 	db	32
  2376  00F8A2  43                 	db	67	;'C'
  2377  00F8A3  52                 	db	82	;'R'
  2378  00F8A4  43                 	db	67	;'C'
  2379  00F8A5  20                 	db	32
  2380  00F8A6  47                 	db	71	;'G'
  2381  00F8A7  6F                 	db	111	;'o'
  2382  00F8A8  6F                 	db	111	;'o'
  2383  00F8A9  64                 	db	100	;'d'
  2384  00F8AA  20                 	db	32
  2385  00F8AB  61                 	db	97	;'a'
  2386  00F8AC  6E                 	db	110	;'n'
  2387  00F8AD  64                 	db	100	;'d'
  2388  00F8AE  20                 	db	32
  2389  00F8AF  41                 	db	65	;'A'
  2390  00F8B0  64                 	db	100	;'d'
  2391  00F8B1  64                 	db	100	;'d'
  2392  00F8B2  72                 	db	114	;'r'
  2393  00F8B3  65                 	db	101	;'e'
  2394  00F8B4  73                 	db	115	;'s'
  2395  00F8B5  73                 	db	115	;'s'
  2396  00F8B6  20                 	db	32
  2397  00F8B7  49                 	db	73	;'I'
  2398  00F8B8  53                 	db	83	;'S'
  2399  00F8B9  20                 	db	32
  2400  00F8BA  66                 	db	102	;'f'
  2401  00F8BB  6F                 	db	111	;'o'
  2402  00F8BC  72                 	db	114	;'r'
  2403  00F8BD  20                 	db	32
  2404  00F8BE  6D                 	db	109	;'m'
  2405  00F8BF  65                 	db	101	;'e'
  2406  00F8C0  2E                 	db	46
  2407  00F8C1  0D                 	db	13
  2408  00F8C2  0A                 	db	10
  2409  00F8C3  00                 	db	0
  2410  00F8C4                     STR_107:
  2411                           
  2412                           ; BSR set to: 0
  2413  00F8C4  20                 	db	32
  2414  00F8C5  20                 	db	32
  2415  00F8C6  20                 	db	32
  2416  00F8C7  20                 	db	32
  2417  00F8C8  20                 	db	32
  2418  00F8C9  20                 	db	32
  2419  00F8CA  41                 	db	65	;'A'
  2420  00F8CB  64                 	db	100	;'d'
  2421  00F8CC  64                 	db	100	;'d'
  2422  00F8CD  20                 	db	32
  2423  00F8CE  30                 	db	48	;'0'
  2424  00F8CF  78                 	db	120	;'x'
  2425  00F8D0  30                 	db	48	;'0'
  2426  00F8D1  31                 	db	49	;'1'
  2427  00F8D2  30                 	db	48	;'0'
  2428  00F8D3  30                 	db	48	;'0'
  2429  00F8D4  20                 	db	32
  2430  00F8D5  74                 	db	116	;'t'
  2431  00F8D6  6F                 	db	111	;'o'
  2432  00F8D7  20                 	db	32
  2433  00F8D8  30                 	db	48	;'0'
  2434  00F8D9  78                 	db	120	;'x'
  2435  00F8DA  30                 	db	48	;'0'
  2436  00F8DB  31                 	db	49	;'1'
  2437  00F8DC  30                 	db	48	;'0'
  2438  00F8DD  38                 	db	56	;'8'
  2439  00F8DE  20                 	db	32
  2440  00F8DF  2D                 	db	45
  2441  00F8E0  20                 	db	32
  2442  00F8E1  50                 	db	80	;'P'
  2443  00F8E2  61                 	db	97	;'a'
  2444  00F8E3  72                 	db	114	;'r'
  2445  00F8E4  74                 	db	116	;'t'
  2446  00F8E5  20                 	db	32
  2447  00F8E6  4E                 	db	78	;'N'
  2448  00F8E7  75                 	db	117	;'u'
  2449  00F8E8  6D                 	db	109	;'m'
  2450  00F8E9  62                 	db	98	;'b'
  2451  00F8EA  65                 	db	101	;'e'
  2452  00F8EB  72                 	db	114	;'r'
  2453  00F8EC  20                 	db	32
  2454  00F8ED  28                 	db	40
  2455  00F8EE  41                 	db	65	;'A'
  2456  00F8EF  53                 	db	83	;'S'
  2457  00F8F0  43                 	db	67	;'C'
  2458  00F8F1  49                 	db	73	;'I'
  2459  00F8F2  49                 	db	73	;'I'
  2460  00F8F3  29                 	db	41
  2461  00F8F4  0D                 	db	13
  2462  00F8F5  0A                 	db	10
  2463  00F8F6  00                 	db	0
  2464  00F8F7                     STR_118:
  2465                           
  2466                           ; BSR set to: 0
  2467  00F8F7  20                 	db	32
  2468  00F8F8  20                 	db	32
  2469  00F8F9  20                 	db	32
  2470  00F8FA  3F                 	db	63	;'?'
  2471  00F8FB  20                 	db	32
  2472  00F8FC  2D                 	db	45
  2473  00F8FD  20                 	db	32
  2474  00F8FE  49                 	db	73	;'I'
  2475  00F8FF  6E                 	db	110	;'n'
  2476  00F900  69                 	db	105	;'i'
  2477  00F901  74                 	db	116	;'t'
  2478  00F902  61                 	db	97	;'a'
  2479  00F903  6C                 	db	108	;'l'
  2480  00F904  69                 	db	105	;'i'
  2481  00F905  73                 	db	115	;'s'
  2482  00F906  65                 	db	101	;'e'
  2483  00F907  20                 	db	32
  2484  00F908  61                 	db	97	;'a'
  2485  00F909  6E                 	db	110	;'n'
  2486  00F90A  64                 	db	100	;'d'
  2487  00F90B  20                 	db	32
  2488  00F90C  64                 	db	100	;'d'
  2489  00F90D  69                 	db	105	;'i'
  2490  00F90E  73                 	db	115	;'s'
  2491  00F90F  70                 	db	112	;'p'
  2492  00F910  6C                 	db	108	;'l'
  2493  00F911  61                 	db	97	;'a'
  2494  00F912  79                 	db	121	;'y'
  2495  00F913  20                 	db	32
  2496  00F914  63                 	db	99	;'c'
  2497  00F915  61                 	db	97	;'a'
  2498  00F916  72                 	db	114	;'r'
  2499  00F917  64                 	db	100	;'d'
  2500  00F918  20                 	db	32
  2501  00F919  64                 	db	100	;'d'
  2502  00F91A  65                 	db	101	;'e'
  2503  00F91B  74                 	db	116	;'t'
  2504  00F91C  61                 	db	97	;'a'
  2505  00F91D  69                 	db	105	;'i'
  2506  00F91E  6C                 	db	108	;'l'
  2507  00F91F  73                 	db	115	;'s'
  2508  00F920  0D                 	db	13
  2509  00F921  0A                 	db	10
  2510  00F922  00                 	db	0
  2511  00F923                     STR_6:
  2512                           
  2513                           ; BSR set to: 0
  2514  00F923  46                 	db	70	;'F'
  2515  00F924  75                 	db	117	;'u'
  2516  00F925  6E                 	db	110	;'n'
  2517  00F926  63                 	db	99	;'c'
  2518  00F927  74                 	db	116	;'t'
  2519  00F928  69                 	db	105	;'i'
  2520  00F929  6F                 	db	111	;'o'
  2521  00F92A  6E                 	db	110	;'n'
  2522  00F92B  20                 	db	32
  2523  00F92C  43                 	db	67	;'C'
  2524  00F92D  6F                 	db	111	;'o'
  2525  00F92E  64                 	db	100	;'d'
  2526  00F92F  65                 	db	101	;'e'
  2527  00F930  20                 	db	32
  2528  00F931  30                 	db	48	;'0'
  2529  00F932  78                 	db	120	;'x'
  2530  00F933  30                 	db	48	;'0'
  2531  00F934  34                 	db	52	;'4'
  2532  00F935  20                 	db	32
  2533  00F936  2D                 	db	45
  2534  00F937  20                 	db	32
  2535  00F938  52                 	db	82	;'R'
  2536  00F939  65                 	db	101	;'e'
  2537  00F93A  61                 	db	97	;'a'
  2538  00F93B  64                 	db	100	;'d'
  2539  00F93C  20                 	db	32
  2540  00F93D  49                 	db	73	;'I'
  2541  00F93E  6E                 	db	110	;'n'
  2542  00F93F  70                 	db	112	;'p'
  2543  00F940  75                 	db	117	;'u'
  2544  00F941  74                 	db	116	;'t'
  2545  00F942  20                 	db	32
  2546  00F943  52                 	db	82	;'R'
  2547  00F944  65                 	db	101	;'e'
  2548  00F945  67                 	db	103	;'g'
  2549  00F946  69                 	db	105	;'i'
  2550  00F947  73                 	db	115	;'s'
  2551  00F948  74                 	db	116	;'t'
  2552  00F949  65                 	db	101	;'e'
  2553  00F94A  72                 	db	114	;'r'
  2554  00F94B  73                 	db	115	;'s'
  2555  00F94C  0D                 	db	13
  2556  00F94D  0A                 	db	10
  2557  00F94E  00                 	db	0
  2558  00F94F                     STR_100:
  2559                           
  2560                           ; BSR set to: 0
  2561  00F94F  43                 	db	67	;'C'
  2562  00F950  6F                 	db	111	;'o'
  2563  00F951  6D                 	db	109	;'m'
  2564  00F952  70                 	db	112	;'p'
  2565  00F953  69                 	db	105	;'i'
  2566  00F954  6C                 	db	108	;'l'
  2567  00F955  65                 	db	101	;'e'
  2568  00F956  64                 	db	100	;'d'
  2569  00F957  20                 	db	32
  2570  00F958  6F                 	db	111	;'o'
  2571  00F959  6E                 	db	110	;'n'
  2572  00F95A  20                 	db	32
  2573  00F95B  25                 	db	37
  2574  00F95C  73                 	db	115	;'s'
  2575  00F95D  20                 	db	32
  2576  00F95E  61                 	db	97	;'a'
  2577  00F95F  74                 	db	116	;'t'
  2578  00F960  20                 	db	32
  2579  00F961  25                 	db	37
  2580  00F962  73                 	db	115	;'s'
  2581  00F963  20                 	db	32
  2582  00F964  62                 	db	98	;'b'
  2583  00F965  79                 	db	121	;'y'
  2584  00F966  20                 	db	32
  2585  00F967  58                 	db	88	;'X'
  2586  00F968  43                 	db	67	;'C'
  2587  00F969  38                 	db	56	;'8'
  2588  00F96A  20                 	db	32
  2589  00F96B  76                 	db	118	;'v'
  2590  00F96C  65                 	db	101	;'e'
  2591  00F96D  72                 	db	114	;'r'
  2592  00F96E  73                 	db	115	;'s'
  2593  00F96F  69                 	db	105	;'i'
  2594  00F970  6F                 	db	111	;'o'
  2595  00F971  6E                 	db	110	;'n'
  2596  00F972  20                 	db	32
  2597  00F973  25                 	db	37
  2598  00F974  75                 	db	117	;'u'
  2599  00F975  0D                 	db	13
  2600  00F976  0A                 	db	10
  2601  00F977  0A                 	db	10
  2602  00F978  00                 	db	0
  2603  00F979                     STR_105:
  2604                           
  2605                           ; BSR set to: 0
  2606  00F979  20                 	db	32
  2607  00F97A  20                 	db	32
  2608  00F97B  20                 	db	32
  2609  00F97C  30                 	db	48	;'0'
  2610  00F97D  78                 	db	120	;'x'
  2611  00F97E  30                 	db	48	;'0'
  2612  00F97F  34                 	db	52	;'4'
  2613  00F980  20                 	db	32
  2614  00F981  2D                 	db	45
  2615  00F982  20                 	db	32
  2616  00F983  52                 	db	82	;'R'
  2617  00F984  65                 	db	101	;'e'
  2618  00F985  61                 	db	97	;'a'
  2619  00F986  64                 	db	100	;'d'
  2620  00F987  20                 	db	32
  2621  00F988  4D                 	db	77	;'M'
  2622  00F989  75                 	db	117	;'u'
  2623  00F98A  6C                 	db	108	;'l'
  2624  00F98B  74                 	db	116	;'t'
  2625  00F98C  69                 	db	105	;'i'
  2626  00F98D  70                 	db	112	;'p'
  2627  00F98E  6C                 	db	108	;'l'
  2628  00F98F  65                 	db	101	;'e'
  2629  00F990  20                 	db	32
  2630  00F991  31                 	db	49	;'1'
  2631  00F992  36                 	db	54	;'6'
  2632  00F993  62                 	db	98	;'b'
  2633  00F994  69                 	db	105	;'i'
  2634  00F995  74                 	db	116	;'t'
  2635  00F996  20                 	db	32
  2636  00F997  52                 	db	82	;'R'
  2637  00F998  65                 	db	101	;'e'
  2638  00F999  67                 	db	103	;'g'
  2639  00F99A  69                 	db	105	;'i'
  2640  00F99B  73                 	db	115	;'s'
  2641  00F99C  74                 	db	116	;'t'
  2642  00F99D  65                 	db	101	;'e'
  2643  00F99E  72                 	db	114	;'r'
  2644  00F99F  73                 	db	115	;'s'
  2645  00F9A0  0D                 	db	13
  2646  00F9A1  0A                 	db	10
  2647  00F9A2  00                 	db	0
  2648  00F9A3                     STR_44:
  2649                           
  2650                           ; BSR set to: 0
  2651  00F9A3  52                 	db	82	;'R'
  2652  00F9A4  65                 	db	101	;'e'
  2653  00F9A5  67                 	db	103	;'g'
  2654  00F9A6  69                 	db	105	;'i'
  2655  00F9A7  73                 	db	115	;'s'
  2656  00F9A8  74                 	db	116	;'t'
  2657  00F9A9  65                 	db	101	;'e'
  2658  00F9AA  72                 	db	114	;'r'
  2659  00F9AB  73                 	db	115	;'s'
  2660  00F9AC  20                 	db	32
  2661  00F9AD  6F                 	db	111	;'o'
  2662  00F9AE  75                 	db	117	;'u'
  2663  00F9AF  74                 	db	116	;'t'
  2664  00F9B0  20                 	db	32
  2665  00F9B1  6F                 	db	111	;'o'
  2666  00F9B2  66                 	db	102	;'f'
  2667  00F9B3  20                 	db	32
  2668  00F9B4  72                 	db	114	;'r'
  2669  00F9B5  61                 	db	97	;'a'
  2670  00F9B6  6E                 	db	110	;'n'
  2671  00F9B7  67                 	db	103	;'g'
  2672  00F9B8  65                 	db	101	;'e'
  2673  00F9B9  2E                 	db	46
  2674  00F9BA  0D                 	db	13
  2675  00F9BB  0A                 	db	10
  2676  00F9BC  56                 	db	86	;'V'
  2677  00F9BD  61                 	db	97	;'a'
  2678  00F9BE  6C                 	db	108	;'l'
  2679  00F9BF  69                 	db	105	;'i'
  2680  00F9C0  64                 	db	100	;'d'
  2681  00F9C1  3A                 	db	58	;':'
  2682  00F9C2  20                 	db	32
  2683  00F9C3  30                 	db	48	;'0'
  2684  00F9C4  78                 	db	120	;'x'
  2685  00F9C5  30                 	db	48	;'0'
  2686  00F9C6  35                 	db	53	;'5'
  2687  00F9C7  31                 	db	49	;'1'
  2688  00F9C8  32                 	db	50	;'2'
  2689  00F9C9  2E                 	db	46
  2690  00F9CA  0D                 	db	13
  2691  00F9CB  0A                 	db	10
  2692  00F9CC  00                 	db	0
  2693  00F9CD                     STR_95:
  2694                           
  2695                           ; BSR set to: 0
  2696  00F9CD  0D                 	db	13
  2697  00F9CE  0A                 	db	10
  2698  00F9CF  44                 	db	68	;'D'
  2699  00F9D0  61                 	db	97	;'a'
  2700  00F9D1  6E                 	db	110	;'n'
  2701  00F9D2  20                 	db	32
  2702  00F9D3  61                 	db	97	;'a'
  2703  00F9D4  6E                 	db	110	;'n'
  2704  00F9D5  64                 	db	100	;'d'
  2705  00F9D6  20                 	db	32
  2706  00F9D7  53                 	db	83	;'S'
  2707  00F9D8  61                 	db	97	;'a'
  2708  00F9D9  6D                 	db	109	;'m'
  2709  00F9DA  27                 	db	39
  2710  00F9DB  73                 	db	115	;'s'
  2711  00F9DC  20                 	db	32
  2712  00F9DD  4D                 	db	77	;'M'
  2713  00F9DE  6F                 	db	111	;'o'
  2714  00F9DF  64                 	db	100	;'d'
  2715  00F9E0  62                 	db	98	;'b'
  2716  00F9E1  75                 	db	117	;'u'
  2717  00F9E2  73                 	db	115	;'s'
  2718  00F9E3  20                 	db	32
  2719  00F9E4  47                 	db	71	;'G'
  2720  00F9E5  50                 	db	80	;'P'
  2721  00F9E6  49                 	db	73	;'I'
  2722  00F9E7  4F                 	db	79	;'O'
  2723  00F9E8  20                 	db	32
  2724  00F9E9  45                 	db	69	;'E'
  2725  00F9EA  78                 	db	120	;'x'
  2726  00F9EB  70                 	db	112	;'p'
  2727  00F9EC  61                 	db	97	;'a'
  2728  00F9ED  6E                 	db	110	;'n'
  2729  00F9EE  73                 	db	115	;'s'
  2730  00F9EF  69                 	db	105	;'i'
  2731  00F9F0  6F                 	db	111	;'o'
  2732  00F9F1  6E                 	db	110	;'n'
  2733  00F9F2  0D                 	db	13
  2734  00F9F3  0A                 	db	10
  2735  00F9F4  00                 	db	0
  2736  00F9F5                     STR_108:
  2737                           
  2738                           ; BSR set to: 0
  2739  00F9F5  20                 	db	32
  2740  00F9F6  20                 	db	32
  2741  00F9F7  20                 	db	32
  2742  00F9F8  20                 	db	32
  2743  00F9F9  20                 	db	32
  2744  00F9FA  20                 	db	32
  2745  00F9FB  41                 	db	65	;'A'
  2746  00F9FC  64                 	db	100	;'d'
  2747  00F9FD  64                 	db	100	;'d'
  2748  00F9FE  20                 	db	32
  2749  00F9FF  30                 	db	48	;'0'
  2750  00FA00  78                 	db	120	;'x'
  2751  00FA01  30                 	db	48	;'0'
  2752  00FA02  32                 	db	50	;'2'
  2753  00FA03  30                 	db	48	;'0'
  2754  00FA04  30                 	db	48	;'0'
  2755  00FA05  20                 	db	32
  2756  00FA06  2D                 	db	45
  2757  00FA07  20                 	db	32
  2758  00FA08  52                 	db	82	;'R'
  2759  00FA09  65                 	db	101	;'e'
  2760  00FA0A  76                 	db	118	;'v'
  2761  00FA0B  69                 	db	105	;'i'
  2762  00FA0C  73                 	db	115	;'s'
  2763  00FA0D  69                 	db	105	;'i'
  2764  00FA0E  6F                 	db	111	;'o'
  2765  00FA0F  6E                 	db	110	;'n'
  2766  00FA10  20                 	db	32
  2767  00FA11  28                 	db	40
  2768  00FA12  41                 	db	65	;'A'
  2769  00FA13  53                 	db	83	;'S'
  2770  00FA14  43                 	db	67	;'C'
  2771  00FA15  49                 	db	73	;'I'
  2772  00FA16  49                 	db	73	;'I'
  2773  00FA17  29                 	db	41
  2774  00FA18  0D                 	db	13
  2775  00FA19  0A                 	db	10
  2776  00FA1A  00                 	db	0
  2777  00FA1B                     STR_128:
  2778                           
  2779                           ; BSR set to: 0
  2780  00FA1B  0D                 	db	13
  2781  00FA1C  0A                 	db	10
  2782  00FA1D  45                 	db	69	;'E'
  2783  00FA1E  6E                 	db	110	;'n'
  2784  00FA1F  74                 	db	116	;'t'
  2785  00FA20  65                 	db	101	;'e'
  2786  00FA21  72                 	db	114	;'r'
  2787  00FA22  20                 	db	32
  2788  00FA23  63                 	db	99	;'c'
  2789  00FA24  61                 	db	97	;'a'
  2790  00FA25  72                 	db	114	;'r'
  2791  00FA26  64                 	db	100	;'d'
  2792  00FA27  20                 	db	32
  2793  00FA28  25                 	db	37
  2794  00FA29  73                 	db	115	;'s'
  2795  00FA2A  20                 	db	32
  2796  00FA2B  28                 	db	40
  2797  00FA2C  6D                 	db	109	;'m'
  2798  00FA2D  61                 	db	97	;'a'
  2799  00FA2E  78                 	db	120	;'x'
  2800  00FA2F  20                 	db	32
  2801  00FA30  25                 	db	37
  2802  00FA31  69                 	db	105	;'i'
  2803  00FA32  20                 	db	32
  2804  00FA33  63                 	db	99	;'c'
  2805  00FA34  68                 	db	104	;'h'
  2806  00FA35  61                 	db	97	;'a'
  2807  00FA36  72                 	db	114	;'r'
  2808  00FA37  61                 	db	97	;'a'
  2809  00FA38  63                 	db	99	;'c'
  2810  00FA39  74                 	db	116	;'t'
  2811  00FA3A  65                 	db	101	;'e'
  2812  00FA3B  72                 	db	114	;'r'
  2813  00FA3C  73                 	db	115	;'s'
  2814  00FA3D  29                 	db	41
  2815  00FA3E  3A                 	db	58	;':'
  2816  00FA3F  20                 	db	32
  2817  00FA40  00                 	db	0
  2818  00FA41                     STR_67:
  2819                           
  2820                           ; BSR set to: 0
  2821  00FA41  20                 	db	32
  2822  00FA42  20                 	db	32
  2823  00FA43  20                 	db	32
  2824  00FA44  42                 	db	66	;'B'
  2825  00FA45  79                 	db	121	;'y'
  2826  00FA46  74                 	db	116	;'t'
  2827  00FA47  65                 	db	101	;'e'
  2828  00FA48  20                 	db	32
  2829  00FA49  30                 	db	48	;'0'
  2830  00FA4A  32                 	db	50	;'2'
  2831  00FA4B  3A                 	db	58	;':'
  2832  00FA4C  20                 	db	32
  2833  00FA4D  30                 	db	48	;'0'
  2834  00FA4E  78                 	db	120	;'x'
  2835  00FA4F  25                 	db	37
  2836  00FA50  30                 	db	48	;'0'
  2837  00FA51  32                 	db	50	;'2'
  2838  00FA52  78                 	db	120	;'x'
  2839  00FA53  20                 	db	32
  2840  00FA54  2D                 	db	45
  2841  00FA55  20                 	db	32
  2842  00FA56  4E                 	db	78	;'N'
  2843  00FA57  75                 	db	117	;'u'
  2844  00FA58  6D                 	db	109	;'m'
  2845  00FA59  20                 	db	32
  2846  00FA5A  42                 	db	66	;'B'
  2847  00FA5B  79                 	db	121	;'y'
  2848  00FA5C  74                 	db	116	;'t'
  2849  00FA5D  65                 	db	101	;'e'
  2850  00FA5E  73                 	db	115	;'s'
  2851  00FA5F  20                 	db	32
  2852  00FA60  4D                 	db	77	;'M'
  2853  00FA61  6F                 	db	111	;'o'
  2854  00FA62  72                 	db	114	;'r'
  2855  00FA63  65                 	db	101	;'e'
  2856  00FA64  0D                 	db	13
  2857  00FA65  0A                 	db	10
  2858  00FA66  00                 	db	0
  2859  00FA67                     STR_27:
  2860                           
  2861                           ; BSR set to: 0
  2862  00FA67  20                 	db	32
  2863  00FA68  20                 	db	32
  2864  00FA69  20                 	db	32
  2865  00FA6A  42                 	db	66	;'B'
  2866  00FA6B  79                 	db	121	;'y'
  2867  00FA6C  74                 	db	116	;'t'
  2868  00FA6D  65                 	db	101	;'e'
  2869  00FA6E  20                 	db	32
  2870  00FA6F  30                 	db	48	;'0'
  2871  00FA70  36                 	db	54	;'6'
  2872  00FA71  3A                 	db	58	;':'
  2873  00FA72  20                 	db	32
  2874  00FA73  30                 	db	48	;'0'
  2875  00FA74  78                 	db	120	;'x'
  2876  00FA75  25                 	db	37
  2877  00FA76  30                 	db	48	;'0'
  2878  00FA77  32                 	db	50	;'2'
  2879  00FA78  78                 	db	120	;'x'
  2880  00FA79  20                 	db	32
  2881  00FA7A  2D                 	db	45
  2882  00FA7B  20                 	db	32
  2883  00FA7C  4E                 	db	78	;'N'
  2884  00FA7D  75                 	db	117	;'u'
  2885  00FA7E  6D                 	db	109	;'m'
  2886  00FA7F  20                 	db	32
  2887  00FA80  42                 	db	66	;'B'
  2888  00FA81  79                 	db	121	;'y'
  2889  00FA82  74                 	db	116	;'t'
  2890  00FA83  65                 	db	101	;'e'
  2891  00FA84  73                 	db	115	;'s'
  2892  00FA85  20                 	db	32
  2893  00FA86  4D                 	db	77	;'M'
  2894  00FA87  6F                 	db	111	;'o'
  2895  00FA88  72                 	db	114	;'r'
  2896  00FA89  65                 	db	101	;'e'
  2897  00FA8A  0D                 	db	13
  2898  00FA8B  0A                 	db	10
  2899  00FA8C  00                 	db	0
  2900  00FA8D                     STR_15:
  2901                           
  2902                           ; BSR set to: 0
  2903  00FA8D  20                 	db	32
  2904  00FA8E  20                 	db	32
  2905  00FA8F  20                 	db	32
  2906  00FA90  42                 	db	66	;'B'
  2907  00FA91  79                 	db	121	;'y'
  2908  00FA92  74                 	db	116	;'t'
  2909  00FA93  65                 	db	101	;'e'
  2910  00FA94  20                 	db	32
  2911  00FA95  30                 	db	48	;'0'
  2912  00FA96  32                 	db	50	;'2'
  2913  00FA97  3A                 	db	58	;':'
  2914  00FA98  20                 	db	32
  2915  00FA99  30                 	db	48	;'0'
  2916  00FA9A  78                 	db	120	;'x'
  2917  00FA9B  25                 	db	37
  2918  00FA9C  30                 	db	48	;'0'
  2919  00FA9D  32                 	db	50	;'2'
  2920  00FA9E  78                 	db	120	;'x'
  2921  00FA9F  20                 	db	32
  2922  00FAA0  2D                 	db	45
  2923  00FAA1  20                 	db	32
  2924  00FAA2  31                 	db	49	;'1'
  2925  00FAA3  73                 	db	115	;'s'
  2926  00FAA4  74                 	db	116	;'t'
  2927  00FAA5  20                 	db	32
  2928  00FAA6  52                 	db	82	;'R'
  2929  00FAA7  65                 	db	101	;'e'
  2930  00FAA8  67                 	db	103	;'g'
  2931  00FAA9  20                 	db	32
  2932  00FAAA  41                 	db	65	;'A'
  2933  00FAAB  64                 	db	100	;'d'
  2934  00FAAC  64                 	db	100	;'d'
  2935  00FAAD  20                 	db	32
  2936  00FAAE  48                 	db	72	;'H'
  2937  00FAAF  69                 	db	105	;'i'
  2938  00FAB0  0D                 	db	13
  2939  00FAB1  0A                 	db	10
  2940  00FAB2  00                 	db	0
  2941  00FAB3                     STR_16:
  2942                           
  2943                           ; BSR set to: 0
  2944  00FAB3  20                 	db	32
  2945  00FAB4  20                 	db	32
  2946  00FAB5  20                 	db	32
  2947  00FAB6  42                 	db	66	;'B'
  2948  00FAB7  79                 	db	121	;'y'
  2949  00FAB8  74                 	db	116	;'t'
  2950  00FAB9  65                 	db	101	;'e'
  2951  00FABA  20                 	db	32
  2952  00FABB  30                 	db	48	;'0'
  2953  00FABC  33                 	db	51	;'3'
  2954  00FABD  3A                 	db	58	;':'
  2955  00FABE  20                 	db	32
  2956  00FABF  30                 	db	48	;'0'
  2957  00FAC0  78                 	db	120	;'x'
  2958  00FAC1  25                 	db	37
  2959  00FAC2  30                 	db	48	;'0'
  2960  00FAC3  32                 	db	50	;'2'
  2961  00FAC4  78                 	db	120	;'x'
  2962  00FAC5  20                 	db	32
  2963  00FAC6  2D                 	db	45
  2964  00FAC7  20                 	db	32
  2965  00FAC8  31                 	db	49	;'1'
  2966  00FAC9  73                 	db	115	;'s'
  2967  00FACA  74                 	db	116	;'t'
  2968  00FACB  20                 	db	32
  2969  00FACC  52                 	db	82	;'R'
  2970  00FACD  65                 	db	101	;'e'
  2971  00FACE  67                 	db	103	;'g'
  2972  00FACF  20                 	db	32
  2973  00FAD0  41                 	db	65	;'A'
  2974  00FAD1  64                 	db	100	;'d'
  2975  00FAD2  64                 	db	100	;'d'
  2976  00FAD3  20                 	db	32
  2977  00FAD4  4C                 	db	76	;'L'
  2978  00FAD5  6F                 	db	111	;'o'
  2979  00FAD6  0D                 	db	13
  2980  00FAD7  0A                 	db	10
  2981  00FAD8  00                 	db	0
  2982  00FAD9                     STR_119:
  2983                           
  2984                           ; BSR set to: 0
  2985  00FAD9  20                 	db	32
  2986  00FADA  20                 	db	32
  2987  00FADB  20                 	db	32
  2988  00FADC  73                 	db	115	;'s'
  2989  00FADD  65                 	db	101	;'e'
  2990  00FADE  72                 	db	114	;'r'
  2991  00FADF  69                 	db	105	;'i'
  2992  00FAE0  61                 	db	97	;'a'
  2993  00FAE1  6C                 	db	108	;'l'
  2994  00FAE2  20                 	db	32
  2995  00FAE3  2D                 	db	45
  2996  00FAE4  20                 	db	32
  2997  00FAE5  53                 	db	83	;'S'
  2998  00FAE6  65                 	db	101	;'e'
  2999  00FAE7  74                 	db	116	;'t'
  3000  00FAE8  20                 	db	32
  3001  00FAE9  63                 	db	99	;'c'
  3002  00FAEA  61                 	db	97	;'a'
  3003  00FAEB  72                 	db	114	;'r'
  3004  00FAEC  64                 	db	100	;'d'
  3005  00FAED  20                 	db	32
  3006  00FAEE  73                 	db	115	;'s'
  3007  00FAEF  65                 	db	101	;'e'
  3008  00FAF0  72                 	db	114	;'r'
  3009  00FAF1  69                 	db	105	;'i'
  3010  00FAF2  61                 	db	97	;'a'
  3011  00FAF3  6C                 	db	108	;'l'
  3012  00FAF4  20                 	db	32
  3013  00FAF5  6E                 	db	110	;'n'
  3014  00FAF6  75                 	db	117	;'u'
  3015  00FAF7  6D                 	db	109	;'m'
  3016  00FAF8  62                 	db	98	;'b'
  3017  00FAF9  65                 	db	101	;'e'
  3018  00FAFA  72                 	db	114	;'r'
  3019  00FAFB  0D                 	db	13
  3020  00FAFC  0A                 	db	10
  3021  00FAFD  00                 	db	0
  3022  00FAFE                     STR_17:
  3023                           
  3024                           ; BSR set to: 0
  3025  00FAFE  20                 	db	32
  3026  00FAFF  20                 	db	32
  3027  00FB00  20                 	db	32
  3028  00FB01  42                 	db	66	;'B'
  3029  00FB02  79                 	db	121	;'y'
  3030  00FB03  74                 	db	116	;'t'
  3031  00FB04  65                 	db	101	;'e'
  3032  00FB05  20                 	db	32
  3033  00FB06  30                 	db	48	;'0'
  3034  00FB07  34                 	db	52	;'4'
  3035  00FB08  3A                 	db	58	;':'
  3036  00FB09  20                 	db	32
  3037  00FB0A  30                 	db	48	;'0'
  3038  00FB0B  78                 	db	120	;'x'
  3039  00FB0C  25                 	db	37
  3040  00FB0D  30                 	db	48	;'0'
  3041  00FB0E  32                 	db	50	;'2'
  3042  00FB0F  78                 	db	120	;'x'
  3043  00FB10  20                 	db	32
  3044  00FB11  2D                 	db	45
  3045  00FB12  20                 	db	32
  3046  00FB13  4E                 	db	78	;'N'
  3047  00FB14  75                 	db	117	;'u'
  3048  00FB15  6D                 	db	109	;'m'
  3049  00FB16  20                 	db	32
  3050  00FB17  6F                 	db	111	;'o'
  3051  00FB18  66                 	db	102	;'f'
  3052  00FB19  20                 	db	32
  3053  00FB1A  52                 	db	82	;'R'
  3054  00FB1B  65                 	db	101	;'e'
  3055  00FB1C  67                 	db	103	;'g'
  3056  00FB1D  20                 	db	32
  3057  00FB1E  48                 	db	72	;'H'
  3058  00FB1F  69                 	db	105	;'i'
  3059  00FB20  0D                 	db	13
  3060  00FB21  0A                 	db	10
  3061  00FB22  00                 	db	0
  3062  00FB23                     STR_18:
  3063                           
  3064                           ; BSR set to: 0
  3065  00FB23  20                 	db	32
  3066  00FB24  20                 	db	32
  3067  00FB25  20                 	db	32
  3068  00FB26  42                 	db	66	;'B'
  3069  00FB27  79                 	db	121	;'y'
  3070  00FB28  74                 	db	116	;'t'
  3071  00FB29  65                 	db	101	;'e'
  3072  00FB2A  20                 	db	32
  3073  00FB2B  30                 	db	48	;'0'
  3074  00FB2C  35                 	db	53	;'5'
  3075  00FB2D  3A                 	db	58	;':'
  3076  00FB2E  20                 	db	32
  3077  00FB2F  30                 	db	48	;'0'
  3078  00FB30  78                 	db	120	;'x'
  3079  00FB31  25                 	db	37
  3080  00FB32  30                 	db	48	;'0'
  3081  00FB33  32                 	db	50	;'2'
  3082  00FB34  78                 	db	120	;'x'
  3083  00FB35  20                 	db	32
  3084  00FB36  2D                 	db	45
  3085  00FB37  20                 	db	32
  3086  00FB38  4E                 	db	78	;'N'
  3087  00FB39  75                 	db	117	;'u'
  3088  00FB3A  6D                 	db	109	;'m'
  3089  00FB3B  20                 	db	32
  3090  00FB3C  6F                 	db	111	;'o'
  3091  00FB3D  66                 	db	102	;'f'
  3092  00FB3E  20                 	db	32
  3093  00FB3F  52                 	db	82	;'R'
  3094  00FB40  65                 	db	101	;'e'
  3095  00FB41  67                 	db	103	;'g'
  3096  00FB42  20                 	db	32
  3097  00FB43  4C                 	db	76	;'L'
  3098  00FB44  6F                 	db	111	;'o'
  3099  00FB45  0D                 	db	13
  3100  00FB46  0A                 	db	10
  3101  00FB47  00                 	db	0
  3102  00FB48                     STR_104:
  3103                           
  3104                           ; BSR set to: 0
  3105  00FB48  4D                 	db	77	;'M'
  3106  00FB49  6F                 	db	111	;'o'
  3107  00FB4A  64                 	db	100	;'d'
  3108  00FB4B  62                 	db	98	;'b'
  3109  00FB4C  75                 	db	117	;'u'
  3110  00FB4D  73                 	db	115	;'s'
  3111  00FB4E  20                 	db	32
  3112  00FB4F  46                 	db	70	;'F'
  3113  00FB50  75                 	db	117	;'u'
  3114  00FB51  6E                 	db	110	;'n'
  3115  00FB52  63                 	db	99	;'c'
  3116  00FB53  74                 	db	116	;'t'
  3117  00FB54  69                 	db	105	;'i'
  3118  00FB55  6F                 	db	111	;'o'
  3119  00FB56  6E                 	db	110	;'n'
  3120  00FB57  20                 	db	32
  3121  00FB58  43                 	db	67	;'C'
  3122  00FB59  6F                 	db	111	;'o'
  3123  00FB5A  64                 	db	100	;'d'
  3124  00FB5B  65                 	db	101	;'e'
  3125  00FB5C  73                 	db	115	;'s'
  3126  00FB5D  20                 	db	32
  3127  00FB5E  53                 	db	83	;'S'
  3128  00FB5F  75                 	db	117	;'u'
  3129  00FB60  70                 	db	112	;'p'
  3130  00FB61  70                 	db	112	;'p'
  3131  00FB62  6F                 	db	111	;'o'
  3132  00FB63  72                 	db	114	;'r'
  3133  00FB64  74                 	db	116	;'t'
  3134  00FB65  65                 	db	101	;'e'
  3135  00FB66  64                 	db	100	;'d'
  3136  00FB67  3A                 	db	58	;':'
  3137  00FB68  0D                 	db	13
  3138  00FB69  0A                 	db	10
  3139  00FB6A  0A                 	db	10
  3140  00FB6B  00                 	db	0
  3141  00FB6C                     STR_13:
  3142                           
  3143                           ; BSR set to: 0
  3144  00FB6C  20                 	db	32
  3145  00FB6D  20                 	db	32
  3146  00FB6E  20                 	db	32
  3147  00FB6F  42                 	db	66	;'B'
  3148  00FB70  79                 	db	121	;'y'
  3149  00FB71  74                 	db	116	;'t'
  3150  00FB72  65                 	db	101	;'e'
  3151  00FB73  20                 	db	32
  3152  00FB74  30                 	db	48	;'0'
  3153  00FB75  30                 	db	48	;'0'
  3154  00FB76  3A                 	db	58	;':'
  3155  00FB77  20                 	db	32
  3156  00FB78  30                 	db	48	;'0'
  3157  00FB79  78                 	db	120	;'x'
  3158  00FB7A  25                 	db	37
  3159  00FB7B  30                 	db	48	;'0'
  3160  00FB7C  32                 	db	50	;'2'
  3161  00FB7D  78                 	db	120	;'x'
  3162  00FB7E  20                 	db	32
  3163  00FB7F  2D                 	db	45
  3164  00FB80  20                 	db	32
  3165  00FB81  43                 	db	67	;'C'
  3166  00FB82  61                 	db	97	;'a'
  3167  00FB83  72                 	db	114	;'r'
  3168  00FB84  64                 	db	100	;'d'
  3169  00FB85  20                 	db	32
  3170  00FB86  41                 	db	65	;'A'
  3171  00FB87  64                 	db	100	;'d'
  3172  00FB88  64                 	db	100	;'d'
  3173  00FB89  72                 	db	114	;'r'
  3174  00FB8A  65                 	db	101	;'e'
  3175  00FB8B  73                 	db	115	;'s'
  3176  00FB8C  73                 	db	115	;'s'
  3177  00FB8D  0D                 	db	13
  3178  00FB8E  0A                 	db	10
  3179  00FB8F  00                 	db	0
  3180  00FB90                     STR_29:
  3181                           
  3182                           ; BSR set to: 0
  3183  00FB90  20                 	db	32
  3184  00FB91  20                 	db	32
  3185  00FB92  20                 	db	32
  3186  00FB93  42                 	db	66	;'B'
  3187  00FB94  79                 	db	121	;'y'
  3188  00FB95  74                 	db	116	;'t'
  3189  00FB96  65                 	db	101	;'e'
  3190  00FB97  20                 	db	32
  3191  00FB98  25                 	db	37
  3192  00FB99  30                 	db	48	;'0'
  3193  00FB9A  32                 	db	50	;'2'
  3194  00FB9B  69                 	db	105	;'i'
  3195  00FB9C  3A                 	db	58	;':'
  3196  00FB9D  20                 	db	32
  3197  00FB9E  30                 	db	48	;'0'
  3198  00FB9F  78                 	db	120	;'x'
  3199  00FBA0  25                 	db	37
  3200  00FBA1  30                 	db	48	;'0'
  3201  00FBA2  32                 	db	50	;'2'
  3202  00FBA3  78                 	db	120	;'x'
  3203  00FBA4  20                 	db	32
  3204  00FBA5  2D                 	db	45
  3205  00FBA6  20                 	db	32
  3206  00FBA7  52                 	db	82	;'R'
  3207  00FBA8  65                 	db	101	;'e'
  3208  00FBA9  67                 	db	103	;'g'
  3209  00FBAA  20                 	db	32
  3210  00FBAB  25                 	db	37
  3211  00FBAC  69                 	db	105	;'i'
  3212  00FBAD  20                 	db	32
  3213  00FBAE  4C                 	db	76	;'L'
  3214  00FBAF  6F                 	db	111	;'o'
  3215  00FBB0  0D                 	db	13
  3216  00FBB1  0A                 	db	10
  3217  00FBB2  00                 	db	0
  3218  00FBB3                     STR_103:
  3219                           
  3220                           ; BSR set to: 0
  3221  00FBB3  49                 	db	73	;'I'
  3222  00FBB4  6E                 	db	110	;'n'
  3223  00FBB5  69                 	db	105	;'i'
  3224  00FBB6  74                 	db	116	;'t'
  3225  00FBB7  61                 	db	97	;'a'
  3226  00FBB8  6C                 	db	108	;'l'
  3227  00FBB9  69                 	db	105	;'i'
  3228  00FBBA  73                 	db	115	;'s'
  3229  00FBBB  61                 	db	97	;'a'
  3230  00FBBC  74                 	db	116	;'t'
  3231  00FBBD  69                 	db	105	;'i'
  3232  00FBBE  6F                 	db	111	;'o'
  3233  00FBBF  6E                 	db	110	;'n'
  3234  00FBC0  20                 	db	32
  3235  00FBC1  43                 	db	67	;'C'
  3236  00FBC2  6F                 	db	111	;'o'
  3237  00FBC3  6D                 	db	109	;'m'
  3238  00FBC4  70                 	db	112	;'p'
  3239  00FBC5  6C                 	db	108	;'l'
  3240  00FBC6  65                 	db	101	;'e'
  3241  00FBC7  74                 	db	116	;'t'
  3242  00FBC8  65                 	db	101	;'e'
  3243  00FBC9  20                 	db	32
  3244  00FBCA  2D                 	db	45
  3245  00FBCB  20                 	db	32
  3246  00FBCC  52                 	db	82	;'R'
  3247  00FBCD  65                 	db	101	;'e'
  3248  00FBCE  61                 	db	97	;'a'
  3249  00FBCF  64                 	db	100	;'d'
  3250  00FBD0  79                 	db	121	;'y'
  3251  00FBD1  0D                 	db	13
  3252  00FBD2  0A                 	db	10
  3253  00FBD3  0A                 	db	10
  3254  00FBD4  00                 	db	0
  3255  00FBD5                     STR_4:
  3256                           
  3257                           ; BSR set to: 0
  3258  00FBD5  4D                 	db	77	;'M'
  3259  00FBD6  6F                 	db	111	;'o'
  3260  00FBD7  64                 	db	100	;'d'
  3261  00FBD8  62                 	db	98	;'b'
  3262  00FBD9  75                 	db	117	;'u'
  3263  00FBDA  73                 	db	115	;'s'
  3264  00FBDB  20                 	db	32
  3265  00FBDC  52                 	db	82	;'R'
  3266  00FBDD  65                 	db	101	;'e'
  3267  00FBDE  67                 	db	103	;'g'
  3268  00FBDF  69                 	db	105	;'i'
  3269  00FBE0  73                 	db	115	;'s'
  3270  00FBE1  74                 	db	116	;'t'
  3271  00FBE2  65                 	db	101	;'e'
  3272  00FBE3  72                 	db	114	;'r'
  3273  00FBE4  20                 	db	32
  3274  00FBE5  42                 	db	66	;'B'
  3275  00FBE6  65                 	db	101	;'e'
  3276  00FBE7  66                 	db	102	;'f'
  3277  00FBE8  6F                 	db	111	;'o'
  3278  00FBE9  72                 	db	114	;'r'
  3279  00FBEA  65                 	db	101	;'e'
  3280  00FBEB  20                 	db	32
  3281  00FBEC  55                 	db	85	;'U'
  3282  00FBED  70                 	db	112	;'p'
  3283  00FBEE  64                 	db	100	;'d'
  3284  00FBEF  61                 	db	97	;'a'
  3285  00FBF0  74                 	db	116	;'t'
  3286  00FBF1  65                 	db	101	;'e'
  3287  00FBF2  3A                 	db	58	;':'
  3288  00FBF3  20                 	db	32
  3289  00FBF4  0D                 	db	13
  3290  00FBF5  0A                 	db	10
  3291  00FBF6  00                 	db	0
  3292  00FBF7                     STR_120:
  3293                           
  3294                           ; BSR set to: 0
  3295  00FBF7  20                 	db	32
  3296  00FBF8  20                 	db	32
  3297  00FBF9  20                 	db	32
  3298  00FBFA  70                 	db	112	;'p'
  3299  00FBFB  61                 	db	97	;'a'
  3300  00FBFC  72                 	db	114	;'r'
  3301  00FBFD  74                 	db	116	;'t'
  3302  00FBFE  20                 	db	32
  3303  00FBFF  2D                 	db	45
  3304  00FC00  20                 	db	32
  3305  00FC01  53                 	db	83	;'S'
  3306  00FC02  65                 	db	101	;'e'
  3307  00FC03  74                 	db	116	;'t'
  3308  00FC04  20                 	db	32
  3309  00FC05  63                 	db	99	;'c'
  3310  00FC06  61                 	db	97	;'a'
  3311  00FC07  72                 	db	114	;'r'
  3312  00FC08  64                 	db	100	;'d'
  3313  00FC09  20                 	db	32
  3314  00FC0A  70                 	db	112	;'p'
  3315  00FC0B  61                 	db	97	;'a'
  3316  00FC0C  72                 	db	114	;'r'
  3317  00FC0D  74                 	db	116	;'t'
  3318  00FC0E  20                 	db	32
  3319  00FC0F  6E                 	db	110	;'n'
  3320  00FC10  75                 	db	117	;'u'
  3321  00FC11  6D                 	db	109	;'m'
  3322  00FC12  62                 	db	98	;'b'
  3323  00FC13  65                 	db	101	;'e'
  3324  00FC14  72                 	db	114	;'r'
  3325  00FC15  0D                 	db	13
  3326  00FC16  0A                 	db	10
  3327  00FC17  00                 	db	0
  3328  00FC18                     STR_130:
  3329                           
  3330                           ; BSR set to: 0
  3331  00FC18  0D                 	db	13
  3332  00FC19  0A                 	db	10
  3333  00FC1A  45                 	db	69	;'E'
  3334  00FC1B  6E                 	db	110	;'n'
  3335  00FC1C  74                 	db	116	;'t'
  3336  00FC1D  65                 	db	101	;'e'
  3337  00FC1E  72                 	db	114	;'r'
  3338  00FC1F  65                 	db	101	;'e'
  3339  00FC20  64                 	db	100	;'d'
  3340  00FC21  3A                 	db	58	;':'
  3341  00FC22  20                 	db	32
  3342  00FC23  25                 	db	37
  3343  00FC24  73                 	db	115	;'s'
  3344  00FC25  20                 	db	32
  3345  00FC26  0D                 	db	13
  3346  00FC27  0A                 	db	10
  3347  00FC28  20                 	db	32
  3348  00FC29  43                 	db	67	;'C'
  3349  00FC2A  6F                 	db	111	;'o'
  3350  00FC2B  6E                 	db	110	;'n'
  3351  00FC2C  66                 	db	102	;'f'
  3352  00FC2D  69                 	db	105	;'i'
  3353  00FC2E  72                 	db	114	;'r'
  3354  00FC2F  6D                 	db	109	;'m'
  3355  00FC30  20                 	db	32
  3356  00FC31  20                 	db	32
  3357  00FC32  59                 	db	89	;'Y'
  3358  00FC33  7C                 	db	124
  3359  00FC34  4E                 	db	78	;'N'
  3360  00FC35  3F                 	db	63	;'?'
  3361  00FC36  3A                 	db	58	;':'
  3362  00FC37  20                 	db	32
  3363  00FC38  00                 	db	0
  3364  00FC39                     STR_85:
  3365                           
  3366                           ; BSR set to: 0
  3367  00FC39  0D                 	db	13
  3368  00FC3A  0A                 	db	10
  3369  00FC3B  52                 	db	82	;'R'
  3370  00FC3C  65                 	db	101	;'e'
  3371  00FC3D  63                 	db	99	;'c'
  3372  00FC3E  65                 	db	101	;'e'
  3373  00FC3F  69                 	db	105	;'i'
  3374  00FC40  76                 	db	118	;'v'
  3375  00FC41  65                 	db	101	;'e'
  3376  00FC42  64                 	db	100	;'d'
  3377  00FC43  20                 	db	32
  3378  00FC44  4D                 	db	77	;'M'
  3379  00FC45  6F                 	db	111	;'o'
  3380  00FC46  64                 	db	100	;'d'
  3381  00FC47  62                 	db	98	;'b'
  3382  00FC48  75                 	db	117	;'u'
  3383  00FC49  73                 	db	115	;'s'
  3384  00FC4A  20                 	db	32
  3385  00FC4B  43                 	db	67	;'C'
  3386  00FC4C  52                 	db	82	;'R'
  3387  00FC4D  43                 	db	67	;'C'
  3388  00FC4E  20                 	db	32
  3389  00FC4F  69                 	db	105	;'i'
  3390  00FC50  73                 	db	115	;'s'
  3391  00FC51  20                 	db	32
  3392  00FC52  62                 	db	98	;'b'
  3393  00FC53  61                 	db	97	;'a'
  3394  00FC54  64                 	db	100	;'d'
  3395  00FC55  2E                 	db	46
  3396  00FC56  0D                 	db	13
  3397  00FC57  0A                 	db	10
  3398  00FC58  0A                 	db	10
  3399  00FC59  00                 	db	0
  3400  00FC5A                     STR_5:
  3401                           
  3402                           ; BSR set to: 0
  3403  00FC5A  4D                 	db	77	;'M'
  3404  00FC5B  6F                 	db	111	;'o'
  3405  00FC5C  64                 	db	100	;'d'
  3406  00FC5D  62                 	db	98	;'b'
  3407  00FC5E  75                 	db	117	;'u'
  3408  00FC5F  73                 	db	115	;'s'
  3409  00FC60  20                 	db	32
  3410  00FC61  52                 	db	82	;'R'
  3411  00FC62  65                 	db	101	;'e'
  3412  00FC63  67                 	db	103	;'g'
  3413  00FC64  69                 	db	105	;'i'
  3414  00FC65  73                 	db	115	;'s'
  3415  00FC66  74                 	db	116	;'t'
  3416  00FC67  65                 	db	101	;'e'
  3417  00FC68  72                 	db	114	;'r'
  3418  00FC69  20                 	db	32
  3419  00FC6A  41                 	db	65	;'A'
  3420  00FC6B  66                 	db	102	;'f'
  3421  00FC6C  74                 	db	116	;'t'
  3422  00FC6D  65                 	db	101	;'e'
  3423  00FC6E  72                 	db	114	;'r'
  3424  00FC6F  20                 	db	32
  3425  00FC70  55                 	db	85	;'U'
  3426  00FC71  70                 	db	112	;'p'
  3427  00FC72  64                 	db	100	;'d'
  3428  00FC73  61                 	db	97	;'a'
  3429  00FC74  74                 	db	116	;'t'
  3430  00FC75  65                 	db	101	;'e'
  3431  00FC76  3A                 	db	58	;':'
  3432  00FC77  20                 	db	32
  3433  00FC78  0D                 	db	13
  3434  00FC79  0A                 	db	10
  3435  00FC7A  00                 	db	0
  3436  00FC7B                     STR_121:
  3437                           
  3438                           ; BSR set to: 0
  3439  00FC7B  20                 	db	32
  3440  00FC7C  20                 	db	32
  3441  00FC7D  20                 	db	32
  3442  00FC7E  72                 	db	114	;'r'
  3443  00FC7F  65                 	db	101	;'e'
  3444  00FC80  76                 	db	118	;'v'
  3445  00FC81  20                 	db	32
  3446  00FC82  2D                 	db	45
  3447  00FC83  20                 	db	32
  3448  00FC84  53                 	db	83	;'S'
  3449  00FC85  65                 	db	101	;'e'
  3450  00FC86  74                 	db	116	;'t'
  3451  00FC87  20                 	db	32
  3452  00FC88  63                 	db	99	;'c'
  3453  00FC89  61                 	db	97	;'a'
  3454  00FC8A  72                 	db	114	;'r'
  3455  00FC8B  64                 	db	100	;'d'
  3456  00FC8C  20                 	db	32
  3457  00FC8D  70                 	db	112	;'p'
  3458  00FC8E  61                 	db	97	;'a'
  3459  00FC8F  72                 	db	114	;'r'
  3460  00FC90  74                 	db	116	;'t'
  3461  00FC91  20                 	db	32
  3462  00FC92  6E                 	db	110	;'n'
  3463  00FC93  75                 	db	117	;'u'
  3464  00FC94  6D                 	db	109	;'m'
  3465  00FC95  62                 	db	98	;'b'
  3466  00FC96  65                 	db	101	;'e'
  3467  00FC97  72                 	db	114	;'r'
  3468  00FC98  0D                 	db	13
  3469  00FC99  0A                 	db	10
  3470  00FC9A  00                 	db	0
  3471  00FC9B                     STR_30:
  3472                           
  3473                           ; BSR set to: 0
  3474  00FC9B  20                 	db	32
  3475  00FC9C  20                 	db	32
  3476  00FC9D  20                 	db	32
  3477  00FC9E  42                 	db	66	;'B'
  3478  00FC9F  79                 	db	121	;'y'
  3479  00FCA0  74                 	db	116	;'t'
  3480  00FCA1  65                 	db	101	;'e'
  3481  00FCA2  20                 	db	32
  3482  00FCA3  25                 	db	37
  3483  00FCA4  30                 	db	48	;'0'
  3484  00FCA5  32                 	db	50	;'2'
  3485  00FCA6  69                 	db	105	;'i'
  3486  00FCA7  3A                 	db	58	;':'
  3487  00FCA8  20                 	db	32
  3488  00FCA9  30                 	db	48	;'0'
  3489  00FCAA  78                 	db	120	;'x'
  3490  00FCAB  25                 	db	37
  3491  00FCAC  30                 	db	48	;'0'
  3492  00FCAD  32                 	db	50	;'2'
  3493  00FCAE  78                 	db	120	;'x'
  3494  00FCAF  20                 	db	32
  3495  00FCB0  2D                 	db	45
  3496  00FCB1  20                 	db	32
  3497  00FCB2  43                 	db	67	;'C'
  3498  00FCB3  52                 	db	82	;'R'
  3499  00FCB4  43                 	db	67	;'C'
  3500  00FCB5  20                 	db	32
  3501  00FCB6  48                 	db	72	;'H'
  3502  00FCB7  69                 	db	105	;'i'
  3503  00FCB8  0D                 	db	13
  3504  00FCB9  0A                 	db	10
  3505  00FCBA  00                 	db	0
  3506  00FCBB                     STR_31:
  3507                           
  3508                           ; BSR set to: 0
  3509  00FCBB  20                 	db	32
  3510  00FCBC  20                 	db	32
  3511  00FCBD  20                 	db	32
  3512  00FCBE  42                 	db	66	;'B'
  3513  00FCBF  79                 	db	121	;'y'
  3514  00FCC0  74                 	db	116	;'t'
  3515  00FCC1  65                 	db	101	;'e'
  3516  00FCC2  20                 	db	32
  3517  00FCC3  25                 	db	37
  3518  00FCC4  30                 	db	48	;'0'
  3519  00FCC5  32                 	db	50	;'2'
  3520  00FCC6  69                 	db	105	;'i'
  3521  00FCC7  3A                 	db	58	;':'
  3522  00FCC8  20                 	db	32
  3523  00FCC9  30                 	db	48	;'0'
  3524  00FCCA  78                 	db	120	;'x'
  3525  00FCCB  25                 	db	37
  3526  00FCCC  30                 	db	48	;'0'
  3527  00FCCD  32                 	db	50	;'2'
  3528  00FCCE  78                 	db	120	;'x'
  3529  00FCCF  20                 	db	32
  3530  00FCD0  2D                 	db	45
  3531  00FCD1  20                 	db	32
  3532  00FCD2  43                 	db	67	;'C'
  3533  00FCD3  52                 	db	82	;'R'
  3534  00FCD4  43                 	db	67	;'C'
  3535  00FCD5  20                 	db	32
  3536  00FCD6  4C                 	db	76	;'L'
  3537  00FCD7  6F                 	db	111	;'o'
  3538  00FCD8  0D                 	db	13
  3539  00FCD9  0A                 	db	10
  3540  00FCDA  00                 	db	0
  3541  00FCDB                     STR_19:
  3542                           
  3543                           ; BSR set to: 0
  3544  00FCDB  20                 	db	32
  3545  00FCDC  20                 	db	32
  3546  00FCDD  20                 	db	32
  3547  00FCDE  42                 	db	66	;'B'
  3548  00FCDF  79                 	db	121	;'y'
  3549  00FCE0  74                 	db	116	;'t'
  3550  00FCE1  65                 	db	101	;'e'
  3551  00FCE2  20                 	db	32
  3552  00FCE3  30                 	db	48	;'0'
  3553  00FCE4  36                 	db	54	;'6'
  3554  00FCE5  3A                 	db	58	;':'
  3555  00FCE6  20                 	db	32
  3556  00FCE7  30                 	db	48	;'0'
  3557  00FCE8  78                 	db	120	;'x'
  3558  00FCE9  25                 	db	37
  3559  00FCEA  30                 	db	48	;'0'
  3560  00FCEB  32                 	db	50	;'2'
  3561  00FCEC  78                 	db	120	;'x'
  3562  00FCED  20                 	db	32
  3563  00FCEE  2D                 	db	45
  3564  00FCEF  20                 	db	32
  3565  00FCF0  43                 	db	67	;'C'
  3566  00FCF1  52                 	db	82	;'R'
  3567  00FCF2  43                 	db	67	;'C'
  3568  00FCF3  20                 	db	32
  3569  00FCF4  48                 	db	72	;'H'
  3570  00FCF5  69                 	db	105	;'i'
  3571  00FCF6  0D                 	db	13
  3572  00FCF7  0A                 	db	10
  3573  00FCF8  00                 	db	0
  3574  00FCF9                     STR_79:
  3575                           
  3576                           ; BSR set to: 0
  3577  00FCF9  20                 	db	32
  3578  00FCFA  20                 	db	32
  3579  00FCFB  20                 	db	32
  3580  00FCFC  42                 	db	66	;'B'
  3581  00FCFD  79                 	db	121	;'y'
  3582  00FCFE  74                 	db	116	;'t'
  3583  00FCFF  65                 	db	101	;'e'
  3584  00FD00  20                 	db	32
  3585  00FD01  30                 	db	48	;'0'
  3586  00FD02  37                 	db	55	;'7'
  3587  00FD03  3A                 	db	58	;':'
  3588  00FD04  20                 	db	32
  3589  00FD05  30                 	db	48	;'0'
  3590  00FD06  78                 	db	120	;'x'
  3591  00FD07  25                 	db	37
  3592  00FD08  30                 	db	48	;'0'
  3593  00FD09  32                 	db	50	;'2'
  3594  00FD0A  78                 	db	120	;'x'
  3595  00FD0B  20                 	db	32
  3596  00FD0C  2D                 	db	45
  3597  00FD0D  20                 	db	32
  3598  00FD0E  43                 	db	67	;'C'
  3599  00FD0F  52                 	db	82	;'R'
  3600  00FD10  43                 	db	67	;'C'
  3601  00FD11  20                 	db	32
  3602  00FD12  48                 	db	72	;'H'
  3603  00FD13  69                 	db	105	;'i'
  3604  00FD14  0D                 	db	13
  3605  00FD15  0A                 	db	10
  3606  00FD16  00                 	db	0
  3607  00FD17                     STR_20:
  3608                           
  3609                           ; BSR set to: 0
  3610  00FD17  20                 	db	32
  3611  00FD18  20                 	db	32
  3612  00FD19  20                 	db	32
  3613  00FD1A  42                 	db	66	;'B'
  3614  00FD1B  79                 	db	121	;'y'
  3615  00FD1C  74                 	db	116	;'t'
  3616  00FD1D  65                 	db	101	;'e'
  3617  00FD1E  20                 	db	32
  3618  00FD1F  30                 	db	48	;'0'
  3619  00FD20  37                 	db	55	;'7'
  3620  00FD21  3A                 	db	58	;':'
  3621  00FD22  20                 	db	32
  3622  00FD23  30                 	db	48	;'0'
  3623  00FD24  78                 	db	120	;'x'
  3624  00FD25  25                 	db	37
  3625  00FD26  30                 	db	48	;'0'
  3626  00FD27  32                 	db	50	;'2'
  3627  00FD28  78                 	db	120	;'x'
  3628  00FD29  20                 	db	32
  3629  00FD2A  2D                 	db	45
  3630  00FD2B  20                 	db	32
  3631  00FD2C  43                 	db	67	;'C'
  3632  00FD2D  52                 	db	82	;'R'
  3633  00FD2E  43                 	db	67	;'C'
  3634  00FD2F  20                 	db	32
  3635  00FD30  4C                 	db	76	;'L'
  3636  00FD31  6F                 	db	111	;'o'
  3637  00FD32  0D                 	db	13
  3638  00FD33  0A                 	db	10
  3639  00FD34  00                 	db	0
  3640  00FD35                     STR_34:
  3641                           
  3642                           ; BSR set to: 0
  3643  00FD35  52                 	db	82	;'R'
  3644  00FD36  65                 	db	101	;'e'
  3645  00FD37  71                 	db	113	;'q'
  3646  00FD38  75                 	db	117	;'u'
  3647  00FD39  65                 	db	101	;'e'
  3648  00FD3A  73                 	db	115	;'s'
  3649  00FD3B  74                 	db	116	;'t'
  3650  00FD3C  65                 	db	101	;'e'
  3651  00FD3D  64                 	db	100	;'d'
  3652  00FD3E  3A                 	db	58	;':'
  3653  00FD3F  20                 	db	32
  3654  00FD40  30                 	db	48	;'0'
  3655  00FD41  78                 	db	120	;'x'
  3656  00FD42  25                 	db	37
  3657  00FD43  30                 	db	48	;'0'
  3658  00FD44  34                 	db	52	;'4'
  3659  00FD45  78                 	db	120	;'x'
  3660  00FD46  20                 	db	32
  3661  00FD47  74                 	db	116	;'t'
  3662  00FD48  6F                 	db	111	;'o'
  3663  00FD49  20                 	db	32
  3664  00FD4A  30                 	db	48	;'0'
  3665  00FD4B  78                 	db	120	;'x'
  3666  00FD4C  25                 	db	37
  3667  00FD4D  30                 	db	48	;'0'
  3668  00FD4E  34                 	db	52	;'4'
  3669  00FD4F  78                 	db	120	;'x'
  3670  00FD50  0D                 	db	13
  3671  00FD51  0A                 	db	10
  3672  00FD52  00                 	db	0
  3673  00FD53                     STR_55:
  3674                           
  3675                           ; BSR set to: 0
  3676  00FD53  52                 	db	82	;'R'
  3677  00FD54  65                 	db	101	;'e'
  3678  00FD55  71                 	db	113	;'q'
  3679  00FD56  75                 	db	117	;'u'
  3680  00FD57  65                 	db	101	;'e'
  3681  00FD58  73                 	db	115	;'s'
  3682  00FD59  74                 	db	116	;'t'
  3683  00FD5A  65                 	db	101	;'e'
  3684  00FD5B  64                 	db	100	;'d'
  3685  00FD5C  20                 	db	32
  3686  00FD5D  41                 	db	65	;'A'
  3687  00FD5E  6E                 	db	110	;'n'
  3688  00FD5F  61                 	db	97	;'a'
  3689  00FD60  6C                 	db	108	;'l'
  3690  00FD61  6F                 	db	111	;'o'
  3691  00FD62  67                 	db	103	;'g'
  3692  00FD63  75                 	db	117	;'u'
  3693  00FD64  65                 	db	101	;'e'
  3694  00FD65  20                 	db	32
  3695  00FD66  49                 	db	73	;'I'
  3696  00FD67  6E                 	db	110	;'n'
  3697  00FD68  70                 	db	112	;'p'
  3698  00FD69  75                 	db	117	;'u'
  3699  00FD6A  74                 	db	116	;'t'
  3700  00FD6B  73                 	db	115	;'s'
  3701  00FD6C  0D                 	db	13
  3702  00FD6D  0A                 	db	10
  3703  00FD6E  00                 	db	0
  3704  00FD6F                     STR_7:
  3705                           
  3706                           ; BSR set to: 0
  3707  00FD6F  55                 	db	85	;'U'
  3708  00FD70  6E                 	db	110	;'n'
  3709  00FD71  73                 	db	115	;'s'
  3710  00FD72  75                 	db	117	;'u'
  3711  00FD73  70                 	db	112	;'p'
  3712  00FD74  70                 	db	112	;'p'
  3713  00FD75  6F                 	db	111	;'o'
  3714  00FD76  72                 	db	114	;'r'
  3715  00FD77  74                 	db	116	;'t'
  3716  00FD78  65                 	db	101	;'e'
  3717  00FD79  64                 	db	100	;'d'
  3718  00FD7A  20                 	db	32
  3719  00FD7B  46                 	db	70	;'F'
  3720  00FD7C  75                 	db	117	;'u'
  3721  00FD7D  6E                 	db	110	;'n'
  3722  00FD7E  63                 	db	99	;'c'
  3723  00FD7F  74                 	db	116	;'t'
  3724  00FD80  69                 	db	105	;'i'
  3725  00FD81  6F                 	db	111	;'o'
  3726  00FD82  6E                 	db	110	;'n'
  3727  00FD83  20                 	db	32
  3728  00FD84  43                 	db	67	;'C'
  3729  00FD85  6F                 	db	111	;'o'
  3730  00FD86  64                 	db	100	;'d'
  3731  00FD87  65                 	db	101	;'e'
  3732  00FD88  0D                 	db	13
  3733  00FD89  0A                 	db	10
  3734  00FD8A  00                 	db	0
  3735  00FD8B                     STR_11:
  3736                           
  3737                           ; BSR set to: 0
  3738  00FD8B  20                 	db	32
  3739  00FD8C  20                 	db	32
  3740  00FD8D  20                 	db	32
  3741  00FD8E  52                 	db	82	;'R'
  3742  00FD8F  65                 	db	101	;'e'
  3743  00FD90  67                 	db	103	;'g'
  3744  00FD91  3A                 	db	58	;':'
  3745  00FD92  20                 	db	32
  3746  00FD93  25                 	db	37
  3747  00FD94  69                 	db	105	;'i'
  3748  00FD95  20                 	db	32
  3749  00FD96  44                 	db	68	;'D'
  3750  00FD97  61                 	db	97	;'a'
  3751  00FD98  74                 	db	116	;'t'
  3752  00FD99  61                 	db	97	;'a'
  3753  00FD9A  3A                 	db	58	;':'
  3754  00FD9B  20                 	db	32
  3755  00FD9C  30                 	db	48	;'0'
  3756  00FD9D  78                 	db	120	;'x'
  3757  00FD9E  25                 	db	37
  3758  00FD9F  30                 	db	48	;'0'
  3759  00FDA0  34                 	db	52	;'4'
  3760  00FDA1  78                 	db	120	;'x'
  3761  00FDA2  20                 	db	32
  3762  00FDA3  0D                 	db	13
  3763  00FDA4  0A                 	db	10
  3764  00FDA5  00                 	db	0
  3765  00FDA6                     STR_82:
  3766                           
  3767                           ; BSR set to: 0
  3768  00FDA6  0D                 	db	13
  3769  00FDA7  0A                 	db	10
  3770  00FDA8  53                 	db	83	;'S'
  3771  00FDA9  6F                 	db	111	;'o'
  3772  00FDAA  6D                 	db	109	;'m'
  3773  00FDAB  65                 	db	101	;'e'
  3774  00FDAC  74                 	db	116	;'t'
  3775  00FDAD  68                 	db	104	;'h'
  3776  00FDAE  69                 	db	105	;'i'
  3777  00FDAF  6E                 	db	110	;'n'
  3778  00FDB0  67                 	db	103	;'g'
  3779  00FDB1  20                 	db	32
  3780  00FDB2  69                 	db	105	;'i'
  3781  00FDB3  6E                 	db	110	;'n'
  3782  00FDB4  20                 	db	32
  3783  00FDB5  45                 	db	69	;'E'
  3784  00FDB6  53                 	db	83	;'S'
  3785  00FDB7  55                 	db	85	;'U'
  3786  00FDB8  41                 	db	65	;'A'
  3787  00FDB9  52                 	db	82	;'R'
  3788  00FDBA  54                 	db	84	;'T'
  3789  00FDBB  31                 	db	49	;'1'
  3790  00FDBC  20                 	db	32
  3791  00FDBD  0D                 	db	13
  3792  00FDBE  0A                 	db	10
  3793  00FDBF  00                 	db	0
  3794  00FDC0                     STR_35:
  3795                           
  3796                           ; BSR set to: 0
  3797  00FDC0  4F                 	db	79	;'O'
  3798  00FDC1  70                 	db	112	;'p'
  3799  00FDC2  65                 	db	101	;'e'
  3800  00FDC3  72                 	db	114	;'r'
  3801  00FDC4  61                 	db	97	;'a'
  3802  00FDC5  74                 	db	116	;'t'
  3803  00FDC6  69                 	db	105	;'i'
  3804  00FDC7  6F                 	db	111	;'o'
  3805  00FDC8  6E                 	db	110	;'n'
  3806  00FDC9  20                 	db	32
  3807  00FDCA  53                 	db	83	;'S'
  3808  00FDCB  75                 	db	117	;'u'
  3809  00FDCC  63                 	db	99	;'c'
  3810  00FDCD  63                 	db	99	;'c'
  3811  00FDCE  65                 	db	101	;'e'
  3812  00FDCF  73                 	db	115	;'s'
  3813  00FDD0  73                 	db	115	;'s'
  3814  00FDD1  66                 	db	102	;'f'
  3815  00FDD2  75                 	db	117	;'u'
  3816  00FDD3  6C                 	db	108	;'l'
  3817  00FDD4  20                 	db	32
  3818  00FDD5  0D                 	db	13
  3819  00FDD6  0A                 	db	10
  3820  00FDD7  0A                 	db	10
  3821  00FDD8  00                 	db	0
  3822  00FDD9                     STR_37:
  3823                           
  3824                           ; BSR set to: 0
  3825  00FDD9  52                 	db	82	;'R'
  3826  00FDDA  65                 	db	101	;'e'
  3827  00FDDB  71                 	db	113	;'q'
  3828  00FDDC  75                 	db	117	;'u'
  3829  00FDDD  65                 	db	101	;'e'
  3830  00FDDE  73                 	db	115	;'s'
  3831  00FDDF  74                 	db	116	;'t'
  3832  00FDE0  65                 	db	101	;'e'
  3833  00FDE1  64                 	db	100	;'d'
  3834  00FDE2  20                 	db	32
  3835  00FDE3  43                 	db	67	;'C'
  3836  00FDE4  69                 	db	105	;'i'
  3837  00FDE5  72                 	db	114	;'r'
  3838  00FDE6  63                 	db	99	;'c'
  3839  00FDE7  75                 	db	117	;'u'
  3840  00FDE8  69                 	db	105	;'i'
  3841  00FDE9  74                 	db	116	;'t'
  3842  00FDEA  20                 	db	32
  3843  00FDEB  44                 	db	68	;'D'
  3844  00FDEC  61                 	db	97	;'a'
  3845  00FDED  74                 	db	116	;'t'
  3846  00FDEE  61                 	db	97	;'a'
  3847  00FDEF  0D                 	db	13
  3848  00FDF0  0A                 	db	10
  3849  00FDF1  00                 	db	0
  3850  00FDF2                     STR_52:
  3851                           
  3852                           ; BSR set to: 0
  3853  00FDF2  52                 	db	82	;'R'
  3854  00FDF3  65                 	db	101	;'e'
  3855  00FDF4  71                 	db	113	;'q'
  3856  00FDF5  75                 	db	117	;'u'
  3857  00FDF6  65                 	db	101	;'e'
  3858  00FDF7  73                 	db	115	;'s'
  3859  00FDF8  74                 	db	116	;'t'
  3860  00FDF9  65                 	db	101	;'e'
  3861  00FDFA  64                 	db	100	;'d'
  3862  00FDFB  20                 	db	32
  3863  00FDFC  43                 	db	67	;'C'
  3864  00FDFD  6F                 	db	111	;'o'
  3865  00FDFE  6D                 	db	109	;'m'
  3866  00FDFF  70                 	db	112	;'p'
  3867  00FE00  69                 	db	105	;'i'
  3868  00FE01  6C                 	db	108	;'l'
  3869  00FE02  65                 	db	101	;'e'
  3870  00FE03  20                 	db	32
  3871  00FE04  54                 	db	84	;'T'
  3872  00FE05  69                 	db	105	;'i'
  3873  00FE06  6D                 	db	109	;'m'
  3874  00FE07  65                 	db	101	;'e'
  3875  00FE08  0D                 	db	13
  3876  00FE09  0A                 	db	10
  3877  00FE0A  00                 	db	0
  3878  00FE0B                     STR_49:
  3879                           
  3880                           ; BSR set to: 0
  3881  00FE0B  52                 	db	82	;'R'
  3882  00FE0C  65                 	db	101	;'e'
  3883  00FE0D  71                 	db	113	;'q'
  3884  00FE0E  75                 	db	117	;'u'
  3885  00FE0F  65                 	db	101	;'e'
  3886  00FE10  73                 	db	115	;'s'
  3887  00FE11  74                 	db	116	;'t'
  3888  00FE12  65                 	db	101	;'e'
  3889  00FE13  64                 	db	100	;'d'
  3890  00FE14  20                 	db	32
  3891  00FE15  43                 	db	67	;'C'
  3892  00FE16  6F                 	db	111	;'o'
  3893  00FE17  6D                 	db	109	;'m'
  3894  00FE18  70                 	db	112	;'p'
  3895  00FE19  69                 	db	105	;'i'
  3896  00FE1A  6C                 	db	108	;'l'
  3897  00FE1B  65                 	db	101	;'e'
  3898  00FE1C  20                 	db	32
  3899  00FE1D  44                 	db	68	;'D'
  3900  00FE1E  61                 	db	97	;'a'
  3901  00FE1F  74                 	db	116	;'t'
  3902  00FE20  65                 	db	101	;'e'
  3903  00FE21  0D                 	db	13
  3904  00FE22  0A                 	db	10
  3905  00FE23  00                 	db	0
  3906  00FE24                     STR_80:
  3907                           
  3908                           ; BSR set to: 0
  3909  00FE24  20                 	db	32
  3910  00FE25  20                 	db	32
  3911  00FE26  20                 	db	32
  3912  00FE27  42                 	db	66	;'B'
  3913  00FE28  79                 	db	121	;'y'
  3914  00FE29  74                 	db	116	;'t'
  3915  00FE2A  65                 	db	101	;'e'
  3916  00FE2B  20                 	db	32
  3917  00FE2C  25                 	db	37
  3918  00FE2D  30                 	db	48	;'0'
  3919  00FE2E  32                 	db	50	;'2'
  3920  00FE2F  69                 	db	105	;'i'
  3921  00FE30  3A                 	db	58	;':'
  3922  00FE31  20                 	db	32
  3923  00FE32  30                 	db	48	;'0'
  3924  00FE33  78                 	db	120	;'x'
  3925  00FE34  25                 	db	37
  3926  00FE35  30                 	db	48	;'0'
  3927  00FE36  32                 	db	50	;'2'
  3928  00FE37  78                 	db	120	;'x'
  3929  00FE38  20                 	db	32
  3930  00FE39  0D                 	db	13
  3931  00FE3A  0A                 	db	10
  3932  00FE3B  00                 	db	0
  3933  00FE3C                     STR_46:
  3934                           
  3935                           ; BSR set to: 0
  3936  00FE3C  52                 	db	82	;'R'
  3937  00FE3D  65                 	db	101	;'e'
  3938  00FE3E  71                 	db	113	;'q'
  3939  00FE3F  75                 	db	117	;'u'
  3940  00FE40  65                 	db	101	;'e'
  3941  00FE41  73                 	db	115	;'s'
  3942  00FE42  74                 	db	116	;'t'
  3943  00FE43  65                 	db	101	;'e'
  3944  00FE44  64                 	db	100	;'d'
  3945  00FE45  20                 	db	32
  3946  00FE46  53                 	db	83	;'S'
  3947  00FE47  65                 	db	101	;'e'
  3948  00FE48  72                 	db	114	;'r'
  3949  00FE49  69                 	db	105	;'i'
  3950  00FE4A  61                 	db	97	;'a'
  3951  00FE4B  6C                 	db	108	;'l'
  3952  00FE4C  20                 	db	32
  3953  00FE4D  4E                 	db	78	;'N'
  3954  00FE4E  6F                 	db	111	;'o'
  3955  00FE4F  2E                 	db	46
  3956  00FE50  0D                 	db	13
  3957  00FE51  0A                 	db	10
  3958  00FE52  00                 	db	0
  3959  00FE53                     STR_99:
  3960                           
  3961                           ; BSR set to: 0
  3962  00FE53  43                 	db	67	;'C'
  3963  00FE54  61                 	db	97	;'a'
  3964  00FE55  72                 	db	114	;'r'
  3965  00FE56  64                 	db	100	;'d'
  3966  00FE57  20                 	db	32
  3967  00FE58  41                 	db	65	;'A'
  3968  00FE59  64                 	db	100	;'d'
  3969  00FE5A  64                 	db	100	;'d'
  3970  00FE5B  72                 	db	114	;'r'
  3971  00FE5C  65                 	db	101	;'e'
  3972  00FE5D  73                 	db	115	;'s'
  3973  00FE5E  73                 	db	115	;'s'
  3974  00FE5F  2E                 	db	46
  3975  00FE60  20                 	db	32
  3976  00FE61  30                 	db	48	;'0'
  3977  00FE62  78                 	db	120	;'x'
  3978  00FE63  30                 	db	48	;'0'
  3979  00FE64  35                 	db	53	;'5'
  3980  00FE65  20                 	db	32
  3981  00FE66  0D                 	db	13
  3982  00FE67  0A                 	db	10
  3983  00FE68  00                 	db	0
  3984  00FE69                     STR_117:
  3985                           
  3986                           ; BSR set to: 0
  3987  00FE69  43                 	db	67	;'C'
  3988  00FE6A  6F                 	db	111	;'o'
  3989  00FE6B  6D                 	db	109	;'m'
  3990  00FE6C  6D                 	db	109	;'m'
  3991  00FE6D  61                 	db	97	;'a'
  3992  00FE6E  6E                 	db	110	;'n'
  3993  00FE6F  64                 	db	100	;'d'
  3994  00FE70  73                 	db	115	;'s'
  3995  00FE71  20                 	db	32
  3996  00FE72  53                 	db	83	;'S'
  3997  00FE73  75                 	db	117	;'u'
  3998  00FE74  70                 	db	112	;'p'
  3999  00FE75  70                 	db	112	;'p'
  4000  00FE76  6F                 	db	111	;'o'
  4001  00FE77  72                 	db	114	;'r'
  4002  00FE78  74                 	db	116	;'t'
  4003  00FE79  65                 	db	101	;'e'
  4004  00FE7A  64                 	db	100	;'d'
  4005  00FE7B  3A                 	db	58	;':'
  4006  00FE7C  0D                 	db	13
  4007  00FE7D  0A                 	db	10
  4008  00FE7E  00                 	db	0
  4009  00FE7F                     STR_98:
  4010                           
  4011                           ; BSR set to: 0
  4012  00FE7F  43                 	db	67	;'C'
  4013  00FE80  61                 	db	97	;'a'
  4014  00FE81  72                 	db	114	;'r'
  4015  00FE82  64                 	db	100	;'d'
  4016  00FE83  20                 	db	32
  4017  00FE84  52                 	db	82	;'R'
  4018  00FE85  65                 	db	101	;'e'
  4019  00FE86  76                 	db	118	;'v'
  4020  00FE87  69                 	db	105	;'i'
  4021  00FE88  73                 	db	115	;'s'
  4022  00FE89  69                 	db	105	;'i'
  4023  00FE8A  6F                 	db	111	;'o'
  4024  00FE8B  6E                 	db	110	;'n'
  4025  00FE8C  2E                 	db	46
  4026  00FE8D  20                 	db	32
  4027  00FE8E  25                 	db	37
  4028  00FE8F  73                 	db	115	;'s'
  4029  00FE90  20                 	db	32
  4030  00FE91  0D                 	db	13
  4031  00FE92  0A                 	db	10
  4032  00FE93  00                 	db	0
  4033  00FE94                     STR_36:
  4034                           
  4035                           ; BSR set to: 0
  4036  00FE94  4F                 	db	79	;'O'
  4037  00FE95  70                 	db	112	;'p'
  4038  00FE96  65                 	db	101	;'e'
  4039  00FE97  72                 	db	114	;'r'
  4040  00FE98  61                 	db	97	;'a'
  4041  00FE99  74                 	db	116	;'t'
  4042  00FE9A  69                 	db	105	;'i'
  4043  00FE9B  6F                 	db	111	;'o'
  4044  00FE9C  6E                 	db	110	;'n'
  4045  00FE9D  20                 	db	32
  4046  00FE9E  46                 	db	70	;'F'
  4047  00FE9F  61                 	db	97	;'a'
  4048  00FEA0  69                 	db	105	;'i'
  4049  00FEA1  6C                 	db	108	;'l'
  4050  00FEA2  65                 	db	101	;'e'
  4051  00FEA3  64                 	db	100	;'d'
  4052  00FEA4  20                 	db	32
  4053  00FEA5  0D                 	db	13
  4054  00FEA6  0A                 	db	10
  4055  00FEA7  0A                 	db	10
  4056  00FEA8  00                 	db	0
  4057  00FEA9                     STR_40:
  4058                           
  4059                           ; BSR set to: 0
  4060  00FEA9  52                 	db	82	;'R'
  4061  00FEAA  65                 	db	101	;'e'
  4062  00FEAB  71                 	db	113	;'q'
  4063  00FEAC  75                 	db	117	;'u'
  4064  00FEAD  65                 	db	101	;'e'
  4065  00FEAE  73                 	db	115	;'s'
  4066  00FEAF  74                 	db	116	;'t'
  4067  00FEB0  65                 	db	101	;'e'
  4068  00FEB1  64                 	db	100	;'d'
  4069  00FEB2  20                 	db	32
  4070  00FEB3  50                 	db	80	;'P'
  4071  00FEB4  61                 	db	97	;'a'
  4072  00FEB5  72                 	db	114	;'r'
  4073  00FEB6  74                 	db	116	;'t'
  4074  00FEB7  20                 	db	32
  4075  00FEB8  4E                 	db	78	;'N'
  4076  00FEB9  6F                 	db	111	;'o'
  4077  00FEBA  2E                 	db	46
  4078  00FEBB  0D                 	db	13
  4079  00FEBC  0A                 	db	10
  4080  00FEBD  00                 	db	0
  4081  00FEBE                     STR_12:
  4082                           
  4083                           ; BSR set to: 0
  4084  00FEBE  0D                 	db	13
  4085  00FEBF  0A                 	db	10
  4086  00FEC0  4D                 	db	77	;'M'
  4087  00FEC1  6F                 	db	111	;'o'
  4088  00FEC2  64                 	db	100	;'d'
  4089  00FEC3  62                 	db	98	;'b'
  4090  00FEC4  75                 	db	117	;'u'
  4091  00FEC5  73                 	db	115	;'s'
  4092  00FEC6  20                 	db	32
  4093  00FEC7  52                 	db	82	;'R'
  4094  00FEC8  65                 	db	101	;'e'
  4095  00FEC9  63                 	db	99	;'c'
  4096  00FECA  65                 	db	101	;'e'
  4097  00FECB  69                 	db	105	;'i'
  4098  00FECC  76                 	db	118	;'v'
  4099  00FECD  65                 	db	101	;'e'
  4100  00FECE  64                 	db	100	;'d'
  4101  00FECF  3A                 	db	58	;':'
  4102  00FED0  0D                 	db	13
  4103  00FED1  0A                 	db	10
  4104  00FED2  00                 	db	0
  4105  00FED3                     STR_43:
  4106                           
  4107                           ; BSR set to: 0
  4108  00FED3  52                 	db	82	;'R'
  4109  00FED4  65                 	db	101	;'e'
  4110  00FED5  71                 	db	113	;'q'
  4111  00FED6  75                 	db	117	;'u'
  4112  00FED7  65                 	db	101	;'e'
  4113  00FED8  73                 	db	115	;'s'
  4114  00FED9  74                 	db	116	;'t'
  4115  00FEDA  65                 	db	101	;'e'
  4116  00FEDB  64                 	db	100	;'d'
  4117  00FEDC  20                 	db	32
  4118  00FEDD  52                 	db	82	;'R'
  4119  00FEDE  65                 	db	101	;'e'
  4120  00FEDF  76                 	db	118	;'v'
  4121  00FEE0  69                 	db	105	;'i'
  4122  00FEE1  73                 	db	115	;'s'
  4123  00FEE2  69                 	db	105	;'i'
  4124  00FEE3  6F                 	db	111	;'o'
  4125  00FEE4  6E                 	db	110	;'n'
  4126  00FEE5  0D                 	db	13
  4127  00FEE6  0A                 	db	10
  4128  00FEE7  00                 	db	0
  4129  00FEE8                     STR_97:
  4130                           
  4131                           ; BSR set to: 0
  4132  00FEE8  43                 	db	67	;'C'
  4133  00FEE9  61                 	db	97	;'a'
  4134  00FEEA  72                 	db	114	;'r'
  4135  00FEEB  64                 	db	100	;'d'
  4136  00FEEC  20                 	db	32
  4137  00FEED  50                 	db	80	;'P'
  4138  00FEEE  61                 	db	97	;'a'
  4139  00FEEF  72                 	db	114	;'r'
  4140  00FEF0  74                 	db	116	;'t'
  4141  00FEF1  20                 	db	32
  4142  00FEF2  4E                 	db	78	;'N'
  4143  00FEF3  6F                 	db	111	;'o'
  4144  00FEF4  2E                 	db	46
  4145  00FEF5  20                 	db	32
  4146  00FEF6  25                 	db	37
  4147  00FEF7  73                 	db	115	;'s'
  4148  00FEF8  20                 	db	32
  4149  00FEF9  0D                 	db	13
  4150  00FEFA  0A                 	db	10
  4151  00FEFB  00                 	db	0
  4152  00FEFC                     STR_96:
  4153                           
  4154                           ; BSR set to: 0
  4155  00FEFC  43                 	db	67	;'C'
  4156  00FEFD  61                 	db	97	;'a'
  4157  00FEFE  72                 	db	114	;'r'
  4158  00FEFF  64                 	db	100	;'d'
  4159  00FF00  20                 	db	32
  4160  00FF01  53                 	db	83	;'S'
  4161  00FF02  65                 	db	101	;'e'
  4162  00FF03  72                 	db	114	;'r'
  4163  00FF04  20                 	db	32
  4164  00FF05  4E                 	db	78	;'N'
  4165  00FF06  6F                 	db	111	;'o'
  4166  00FF07  2E                 	db	46
  4167  00FF08  20                 	db	32
  4168  00FF09  25                 	db	37
  4169  00FF0A  73                 	db	115	;'s'
  4170  00FF0B  20                 	db	32
  4171  00FF0C  0D                 	db	13
  4172  00FF0D  0A                 	db	10
  4173  00FF0E  00                 	db	0
  4174  00FF0F                     STR_126:
  4175                           
  4176                           ; BSR set to: 0
  4177  00FF0F  0D                 	db	13
  4178  00FF10  0A                 	db	10
  4179  00FF11  44                 	db	68	;'D'
  4180  00FF12  65                 	db	101	;'e'
  4181  00FF13  62                 	db	98	;'b'
  4182  00FF14  75                 	db	117	;'u'
  4183  00FF15  67                 	db	103	;'g'
  4184  00FF16  20                 	db	32
  4185  00FF17  44                 	db	68	;'D'
  4186  00FF18  69                 	db	105	;'i'
  4187  00FF19  73                 	db	115	;'s'
  4188  00FF1A  61                 	db	97	;'a'
  4189  00FF1B  62                 	db	98	;'b'
  4190  00FF1C  6C                 	db	108	;'l'
  4191  00FF1D  65                 	db	101	;'e'
  4192  00FF1E  64                 	db	100	;'d'
  4193  00FF1F  0D                 	db	13
  4194  00FF20  0A                 	db	10
  4195  00FF21  00                 	db	0
  4196  00FF22                     STR_64:
  4197                           
  4198                           ; BSR set to: 0
  4199  00FF22  4D                 	db	77	;'M'
  4200  00FF23  6F                 	db	111	;'o'
  4201  00FF24  64                 	db	100	;'d'
  4202  00FF25  62                 	db	98	;'b'
  4203  00FF26  75                 	db	117	;'u'
  4204  00FF27  73                 	db	115	;'s'
  4205  00FF28  20                 	db	32
  4206  00FF29  52                 	db	82	;'R'
  4207  00FF2A  65                 	db	101	;'e'
  4208  00FF2B  73                 	db	115	;'s'
  4209  00FF2C  70                 	db	112	;'p'
  4210  00FF2D  6F                 	db	111	;'o'
  4211  00FF2E  6E                 	db	110	;'n'
  4212  00FF2F  73                 	db	115	;'s'
  4213  00FF30  65                 	db	101	;'e'
  4214  00FF31  3A                 	db	58	;':'
  4215  00FF32  0D                 	db	13
  4216  00FF33  0A                 	db	10
  4217  00FF34  00                 	db	0
  4218  00FF35                     STR_9:
  4219                           
  4220                           ; BSR set to: 0
  4221  00FF35  0D                 	db	13
  4222  00FF36  0A                 	db	10
  4223  00FF37  45                 	db	69	;'E'
  4224  00FF38  6E                 	db	110	;'n'
  4225  00FF39  74                 	db	116	;'t'
  4226  00FF3A  65                 	db	101	;'e'
  4227  00FF3B  72                 	db	114	;'r'
  4228  00FF3C  20                 	db	32
  4229  00FF3D  43                 	db	67	;'C'
  4230  00FF3E  6F                 	db	111	;'o'
  4231  00FF3F  6D                 	db	109	;'m'
  4232  00FF40  6D                 	db	109	;'m'
  4233  00FF41  61                 	db	97	;'a'
  4234  00FF42  6E                 	db	110	;'n'
  4235  00FF43  64                 	db	100	;'d'
  4236  00FF44  20                 	db	32
  4237  00FF45  3A                 	db	58	;':'
  4238  00FF46  20                 	db	32
  4239  00FF47  00                 	db	0
  4240  00FF48                     STR_125:
  4241                           
  4242                           ; BSR set to: 0
  4243  00FF48  0D                 	db	13
  4244  00FF49  0A                 	db	10
  4245  00FF4A  44                 	db	68	;'D'
  4246  00FF4B  65                 	db	101	;'e'
  4247  00FF4C  62                 	db	98	;'b'
  4248  00FF4D  75                 	db	117	;'u'
  4249  00FF4E  67                 	db	103	;'g'
  4250  00FF4F  20                 	db	32
  4251  00FF50  45                 	db	69	;'E'
  4252  00FF51  6E                 	db	110	;'n'
  4253  00FF52  61                 	db	97	;'a'
  4254  00FF53  62                 	db	98	;'b'
  4255  00FF54  6C                 	db	108	;'l'
  4256  00FF55  65                 	db	101	;'e'
  4257  00FF56  64                 	db	100	;'d'
  4258  00FF57  0D                 	db	13
  4259  00FF58  0A                 	db	10
  4260  00FF59  00                 	db	0
  4261  00FF5A                     STR_132:
  4262                           
  4263                           ; BSR set to: 0
  4264  00FF5A  4E                 	db	78	;'N'
  4265  00FF5B  75                 	db	117	;'u'
  4266  00FF5C  6D                 	db	109	;'m'
  4267  00FF5D  20                 	db	32
  4268  00FF5E  43                 	db	67	;'C'
  4269  00FF5F  68                 	db	104	;'h'
  4270  00FF60  61                 	db	97	;'a'
  4271  00FF61  72                 	db	114	;'r'
  4272  00FF62  73                 	db	115	;'s'
  4273  00FF63  3A                 	db	58	;':'
  4274  00FF64  20                 	db	32
  4275  00FF65  25                 	db	37
  4276  00FF66  69                 	db	105	;'i'
  4277  00FF67  20                 	db	32
  4278  00FF68  0D                 	db	13
  4279  00FF69  0A                 	db	10
  4280  00FF6A  00                 	db	0
  4281  00FF6B                     STR_123:
  4282                           
  4283                           ; BSR set to: 0
  4284  00FF6B  41                 	db	65	;'A'
  4285  00FF6C  44                 	db	68	;'D'
  4286  00FF6D  43                 	db	67	;'C'
  4287  00FF6E  30                 	db	48	;'0'
  4288  00FF6F  3A                 	db	58	;':'
  4289  00FF70  20                 	db	32
  4290  00FF71  30                 	db	48	;'0'
  4291  00FF72  78                 	db	120	;'x'
  4292  00FF73  25                 	db	37
  4293  00FF74  30                 	db	48	;'0'
  4294  00FF75  34                 	db	52	;'4'
  4295  00FF76  78                 	db	120	;'x'
  4296  00FF77  20                 	db	32
  4297  00FF78  0D                 	db	13
  4298  00FF79  0A                 	db	10
  4299  00FF7A  00                 	db	0
  4300  00FF7B                     STR_8:
  4301                           
  4302                           ; BSR set to: 0
  4303  00FF7B  45                 	db	69	;'E'
  4304  00FF7C  6E                 	db	110	;'n'
  4305  00FF7D  74                 	db	116	;'t'
  4306  00FF7E  65                 	db	101	;'e'
  4307  00FF7F  72                 	db	114	;'r'
  4308  00FF80  20                 	db	32
  4309  00FF81  43                 	db	67	;'C'
  4310  00FF82  6F                 	db	111	;'o'
  4311  00FF83  6D                 	db	109	;'m'
  4312  00FF84  6D                 	db	109	;'m'
  4313  00FF85  61                 	db	97	;'a'
  4314  00FF86  6E                 	db	110	;'n'
  4315  00FF87  64                 	db	100	;'d'
  4316  00FF88  3A                 	db	58	;':'
  4317  00FF89  20                 	db	32
  4318  00FF8A  00                 	db	0
  4319  00FF8B                     STR_131:
  4320                           
  4321                           ; BSR set to: 0
  4322  00FF8B  59                 	db	89	;'Y'
  4323  00FF8C  0D                 	db	13
  4324  00FF8D  0A                 	db	10
  4325  00FF8E  53                 	db	83	;'S'
  4326  00FF8F  61                 	db	97	;'a'
  4327  00FF90  76                 	db	118	;'v'
  4328  00FF91  69                 	db	105	;'i'
  4329  00FF92  6E                 	db	110	;'n'
  4330  00FF93  67                 	db	103	;'g'
  4331  00FF94  20                 	db	32
  4332  00FF95  25                 	db	37
  4333  00FF96  73                 	db	115	;'s'
  4334  00FF97  0D                 	db	13
  4335  00FF98  0A                 	db	10
  4336  00FF99  00                 	db	0
  4337  00FF9A                     STR_58:
  4338                           
  4339                           ; BSR set to: 0
  4340  00FF9A  41                 	db	65	;'A'
  4341  00FF9B  44                 	db	68	;'D'
  4342  00FF9C  43                 	db	67	;'C'
  4343  00FF9D  3A                 	db	58	;':'
  4344  00FF9E  20                 	db	32
  4345  00FF9F  30                 	db	48	;'0'
  4346  00FFA0  78                 	db	120	;'x'
  4347  00FFA1  25                 	db	37
  4348  00FFA2  30                 	db	48	;'0'
  4349  00FFA3  34                 	db	52	;'4'
  4350  00FFA4  78                 	db	120	;'x'
  4351  00FFA5  20                 	db	32
  4352  00FFA6  0D                 	db	13
  4353  00FFA7  0A                 	db	10
  4354  00FFA8  00                 	db	0
  4355  00FFA9                     STR_133:
  4356                           
  4357                           ; BSR set to: 0
  4358  00FFA9  25                 	db	37
  4359  00FFAA  73                 	db	115	;'s'
  4360  00FFAB  20                 	db	32
  4361  00FFAC  53                 	db	83	;'S'
  4362  00FFAD  61                 	db	97	;'a'
  4363  00FFAE  76                 	db	118	;'v'
  4364  00FFAF  65                 	db	101	;'e'
  4365  00FFB0  64                 	db	100	;'d'
  4366  00FFB1  2E                 	db	46
  4367  00FFB2  20                 	db	32
  4368  00FFB3  0D                 	db	13
  4369  00FFB4  0A                 	db	10
  4370  00FFB5  00                 	db	0
  4371  00FFB6                     STR_135:
  4372                           
  4373                           ; BSR set to: 0
  4374  00FFB6  4E                 	db	78	;'N'
  4375  00FFB7  6F                 	db	111	;'o'
  4376  00FFB8  74                 	db	116	;'t'
  4377  00FFB9  20                 	db	32
  4378  00FFBA  73                 	db	115	;'s'
  4379  00FFBB  61                 	db	97	;'a'
  4380  00FFBC  76                 	db	118	;'v'
  4381  00FFBD  65                 	db	101	;'e'
  4382  00FFBE  64                 	db	100	;'d'
  4383  00FFBF  0D                 	db	13
  4384  00FFC0  0A                 	db	10
  4385  00FFC1  00                 	db	0
  4386  00FFC2                     STR_101:
  4387                           
  4388                           ; BSR set to: 0
  4389  00FFC2  41                 	db	65	;'A'
  4390  00FFC3  70                 	db	112	;'p'
  4391  00FFC4  72                 	db	114	;'r'
  4392  00FFC5  20                 	db	32
  4393  00FFC6  20                 	db	32
  4394  00FFC7  32                 	db	50	;'2'
  4395  00FFC8  20                 	db	32
  4396  00FFC9  32                 	db	50	;'2'
  4397  00FFCA  30                 	db	48	;'0'
  4398  00FFCB  32                 	db	50	;'2'
  4399  00FFCC  31                 	db	49	;'1'
  4400  00FFCD  00                 	db	0
  4401  00FFCE                     STR_102:
  4402                           
  4403                           ; BSR set to: 0
  4404  00FFCE  32                 	db	50	;'2'
  4405  00FFCF  33                 	db	51	;'3'
  4406  00FFD0  3A                 	db	58	;':'
  4407  00FFD1  33                 	db	51	;'3'
  4408  00FFD2  36                 	db	54	;'6'
  4409  00FFD3  3A                 	db	58	;':'
  4410  00FFD4  31                 	db	49	;'1'
  4411  00FFD5  34                 	db	52	;'4'
  4412  00FFD6  00                 	db	0
  4413  00FFD7                     STR_86:
  4414                           
  4415                           ; BSR set to: 0
  4416  00FFD7  53                 	db	83	;'S'
  4417  00FFD8  65                 	db	101	;'e'
  4418  00FFD9  72                 	db	114	;'r'
  4419  00FFDA  69                 	db	105	;'i'
  4420  00FFDB  61                 	db	97	;'a'
  4421  00FFDC  6C                 	db	108	;'l'
  4422  00FFDD  00                 	db	0
  4423  00FFDE                     STR_140:
  4424                           
  4425                           ; BSR set to: 0
  4426  00FFDE  73                 	db	115	;'s'
  4427  00FFDF  65                 	db	101	;'e'
  4428  00FFE0  72                 	db	114	;'r'
  4429  00FFE1  69                 	db	105	;'i'
  4430  00FFE2  61                 	db	97	;'a'
  4431  00FFE3  6C                 	db	108	;'l'
  4432  00FFE4  00                 	db	0
  4433  00FFE5                     STR_136:
  4434                           
  4435                           ; BSR set to: 0
  4436  00FFE5  64                 	db	100	;'d'
  4437  00FFE6  65                 	db	101	;'e'
  4438  00FFE7  62                 	db	98	;'b'
  4439  00FFE8  75                 	db	117	;'u'
  4440  00FFE9  67                 	db	103	;'g'
  4441  00FFEA  00                 	db	0
  4442  00FFEB                     STR_88:
  4443                           
  4444                           ; BSR set to: 0
  4445  00FFEB  50                 	db	80	;'P'
  4446  00FFEC  61                 	db	97	;'a'
  4447  00FFED  72                 	db	114	;'r'
  4448  00FFEE  74                 	db	116	;'t'
  4449  00FFEF  00                 	db	0
  4450  00FFF0                     STR_142:
  4451                           
  4452                           ; BSR set to: 0
  4453  00FFF0  70                 	db	112	;'p'
  4454  00FFF1  61                 	db	97	;'a'
  4455  00FFF2  72                 	db	114	;'r'
  4456  00FFF3  74                 	db	116	;'t'
  4457  00FFF4  00                 	db	0
  4458  00FFF5                     STR_90:
  4459                           
  4460                           ; BSR set to: 0
  4461  00FFF5  52                 	db	82	;'R'
  4462  00FFF6  65                 	db	101	;'e'
  4463  00FFF7  76                 	db	118	;'v'
  4464  00FFF8  00                 	db	0
  4465  00FFF9                     STR_144:
  4466                           
  4467                           ; BSR set to: 0
  4468  00FFF9  72                 	db	114	;'r'
  4469  00FFFA  65                 	db	101	;'e'
  4470  00FFFB  76                 	db	118	;'v'
  4471  00FFFC  00                 	db	0
  4472  00FFFD                     STR_138:
  4473                           
  4474                           ; BSR set to: 0
  4475  00FFFD  3F                 	db	63	;'?'
  4476  00FFFE  00                 	db	0
  4477  0000                     
  4478                           ; #config settings
  4479  00FFFF  00                 	db	0	; dummy byte at the end
  4480  0000                     
  4481                           	psect	cinit
  4482  003B12                     __pcinit:
  4483                           	opt callstack 0
  4484  003B12                     start_initialization:
  4485                           	opt callstack 0
  4486  003B12                     __initialization:
  4487                           	opt callstack 0
  4488                           
  4489                           ; Initialize objects allocated to BANK4 (64 bytes)
  4490                           ; load TBLPTR registers with __pidataBANK4
  4491  003B12  0EF2               	movlw	low __pidataBANK4
  4492  003B14  6EF6               	movwf	tblptrl,c
  4493  003B16  0E4E               	movlw	high __pidataBANK4
  4494  003B18  6EF7               	movwf	tblptrh,c
  4495  003B1A  0E00               	movlw	low (__pidataBANK4 shr (0+16))
  4496  003B1C  6EF8               	movwf	tblptru,c
  4497  003B1E  EE04  F064         	lfsr	0,__pdataBANK4
  4498  003B22  EE10 F040          	lfsr	1,64
  4499  003B26                     copy_data0:
  4500  003B26  0009               	tblrd		*+
  4501  003B28  CFF5 FFEE          	movff	tablat,postinc0
  4502  003B2C  50E5               	movf	postdec1,w,c
  4503  003B2E  50E1               	movf	fsr1l,w,c
  4504  003B30  E1FA               	bnz	copy_data0
  4505                           
  4506                           ; Initialize objects allocated to BANK3 (64 bytes)
  4507                           ; load TBLPTR registers with __pidataBANK3
  4508  003B32  0EB2               	movlw	low __pidataBANK3
  4509  003B34  6EF6               	movwf	tblptrl,c
  4510  003B36  0E4E               	movlw	high __pidataBANK3
  4511  003B38  6EF7               	movwf	tblptrh,c
  4512  003B3A  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  4513  003B3C  6EF8               	movwf	tblptru,c
  4514  003B3E  EE03  F0B7         	lfsr	0,__pdataBANK3
  4515  003B42  EE10 F040          	lfsr	1,64
  4516  003B46                     copy_data1:
  4517  003B46  0009               	tblrd		*+
  4518  003B48  CFF5 FFEE          	movff	tablat,postinc0
  4519  003B4C  50E5               	movf	postdec1,w,c
  4520  003B4E  50E1               	movf	fsr1l,w,c
  4521  003B50  E1FA               	bnz	copy_data1
  4522                           
  4523                           ; Initialize objects allocated to BANK2 (162 bytes)
  4524                           ; load TBLPTR registers with __pidataBANK2
  4525  003B52  0E0C               	movlw	low __pidataBANK2
  4526  003B54  6EF6               	movwf	tblptrl,c
  4527  003B56  0E44               	movlw	high __pidataBANK2
  4528  003B58  6EF7               	movwf	tblptrh,c
  4529  003B5A  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  4530  003B5C  6EF8               	movwf	tblptru,c
  4531  003B5E  EE02  F000         	lfsr	0,__pdataBANK2
  4532  003B62  EE10 F0A2          	lfsr	1,162
  4533  003B66                     copy_data2:
  4534  003B66  0009               	tblrd		*+
  4535  003B68  CFF5 FFEE          	movff	tablat,postinc0
  4536  003B6C  50E5               	movf	postdec1,w,c
  4537  003B6E  50E1               	movf	fsr1l,w,c
  4538  003B70  E1FA               	bnz	copy_data2
  4539                           
  4540                           ; Initialize objects allocated to BANK1 (157 bytes)
  4541                           ; load TBLPTR registers with __pidataBANK1
  4542  003B72  0E4E               	movlw	low __pidataBANK1
  4543  003B74  6EF6               	movwf	tblptrl,c
  4544  003B76  0E45               	movlw	high __pidataBANK1
  4545  003B78  6EF7               	movwf	tblptrh,c
  4546  003B7A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  4547  003B7C  6EF8               	movwf	tblptru,c
  4548  003B7E  EE01  F000         	lfsr	0,__pdataBANK1
  4549  003B82  EE10 F09D          	lfsr	1,157
  4550  003B86                     copy_data3:
  4551  003B86  0009               	tblrd		*+
  4552  003B88  CFF5 FFEE          	movff	tablat,postinc0
  4553  003B8C  50E5               	movf	postdec1,w,c
  4554  003B8E  50E1               	movf	fsr1l,w,c
  4555  003B90  E1FA               	bnz	copy_data3
  4556                           
  4557                           ; Initialize objects allocated to BANK0 (13 bytes)
  4558                           ; load TBLPTR registers with __pidataBANK0
  4559  003B92  0E80               	movlw	low __pidataBANK0
  4560  003B94  6EF6               	movwf	tblptrl,c
  4561  003B96  0E52               	movlw	high __pidataBANK0
  4562  003B98  6EF7               	movwf	tblptrh,c
  4563  003B9A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  4564  003B9C  6EF8               	movwf	tblptru,c
  4565  003B9E  EE00  F0E9         	lfsr	0,__pdataBANK0
  4566  003BA2  EE10 F00D          	lfsr	1,13
  4567  003BA6                     copy_data4:
  4568  003BA6  0009               	tblrd		*+
  4569  003BA8  CFF5 FFEE          	movff	tablat,postinc0
  4570  003BAC  50E5               	movf	postdec1,w,c
  4571  003BAE  50E1               	movf	fsr1l,w,c
  4572  003BB0  E1FA               	bnz	copy_data4
  4573                           
  4574                           ; Clear objects allocated to BANK5 (100 bytes)
  4575  003BB2  EE05  F000         	lfsr	0,__pbssBANK5
  4576  003BB6  0E64               	movlw	100
  4577  003BB8                     clear_0:
  4578  003BB8  6AEE               	clrf	postinc0,c
  4579  003BBA  06E8               	decf	wreg,f,c
  4580  003BBC  E1FD               	bnz	clear_0
  4581                           
  4582                           ; Clear objects allocated to BANK4 (100 bytes)
  4583  003BBE  EE04  F000         	lfsr	0,__pbssBANK4
  4584  003BC2  0E64               	movlw	100
  4585  003BC4                     clear_1:
  4586  003BC4  6AEE               	clrf	postinc0,c
  4587  003BC6  06E8               	decf	wreg,f,c
  4588  003BC8  E1FD               	bnz	clear_1
  4589                           
  4590                           ; Clear objects allocated to BANK3 (183 bytes)
  4591  003BCA  EE03  F000         	lfsr	0,__pbssBANK3
  4592  003BCE  0EB7               	movlw	183
  4593  003BD0                     clear_2:
  4594  003BD0  6AEE               	clrf	postinc0,c
  4595  003BD2  06E8               	decf	wreg,f,c
  4596  003BD4  E1FD               	bnz	clear_2
  4597                           
  4598                           ; Clear objects allocated to BANK2 (91 bytes)
  4599  003BD6  EE02  F0A2         	lfsr	0,__pbssBANK2
  4600  003BDA  0E5B               	movlw	91
  4601  003BDC                     clear_3:
  4602  003BDC  6AEE               	clrf	postinc0,c
  4603  003BDE  06E8               	decf	wreg,f,c
  4604  003BE0  E1FD               	bnz	clear_3
  4605                           
  4606                           ; Clear objects allocated to BANK1 (16 bytes)
  4607  003BE2  EE01  F0E3         	lfsr	0,__pbssBANK1
  4608  003BE6  0E10               	movlw	16
  4609  003BE8                     clear_4:
  4610  003BE8  6AEE               	clrf	postinc0,c
  4611  003BEA  06E8               	decf	wreg,f,c
  4612  003BEC  E1FD               	bnz	clear_4
  4613                           
  4614                           ; Clear objects allocated to BANK0 (28 bytes)
  4615  003BEE  EE00  F0CD         	lfsr	0,__pbssBANK0
  4616  003BF2  0E1C               	movlw	28
  4617  003BF4                     clear_5:
  4618  003BF4  6AEE               	clrf	postinc0,c
  4619  003BF6  06E8               	decf	wreg,f,c
  4620  003BF8  E1FD               	bnz	clear_5
  4621                           
  4622                           ; Clear objects allocated to COMRAM (4 bytes)
  4623  003BFA  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
  4624  003BFC  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
  4625  003BFE  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
  4626  003C00  6A57               	clrf	__pbssCOMRAM& (0+255),c
  4627  003C02                     end_of_initialization:
  4628                           	opt callstack 0
  4629  003C02                     __end_of__initialization:
  4630                           	opt callstack 0
  4631  003C02  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  4632  003C04  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4633  003C06  0100               	movlb	0
  4634  003C08  EFEE  F016         	goto	_main	;jump to C main() function
  4635                           
  4636                           	psect	bssCOMRAM
  4637  000057                     __pbssCOMRAM:
  4638                           	opt callstack 0
  4639  000057                     _flags:
  4640                           	opt callstack 0
  4641  000057                     	ds	2
  4642  000059                     _eusart1RxHead:
  4643                           	opt callstack 0
  4644  000059                     	ds	1
  4645  00005A                     _eusart2RxHead:
  4646                           	opt callstack 0
  4647  00005A                     	ds	1
  4648                           
  4649                           	psect	bssBANK0
  4650  0000CD                     __pbssBANK0:
  4651                           	opt callstack 0
  4652  0000CD                     _nout:
  4653                           	opt callstack 0
  4654  0000CD                     	ds	2
  4655  0000CF                     _width:
  4656                           	opt callstack 0
  4657  0000CF                     	ds	2
  4658  0000D1                     _prec:
  4659                           	opt callstack 0
  4660  0000D1                     	ds	2
  4661  0000D3                     	ds	2
  4662  0000D5                     _ByteHi:
  4663                           	opt callstack 0
  4664  0000D5                     	ds	2
  4665  0000D7                     _MBResCnt:
  4666                           	opt callstack 0
  4667  0000D7                     	ds	2
  4668  0000D9                     _ByteNum:
  4669                           	opt callstack 0
  4670  0000D9                     	ds	2
  4671  0000DB                     _ModDataCnt:
  4672                           	opt callstack 0
  4673  0000DB                     	ds	2
  4674  0000DD                     _rxStatus:
  4675                           	opt callstack 0
  4676  0000DD                     	ds	1
  4677  0000DE                     _RXStat:
  4678                           	opt callstack 0
  4679  0000DE                     	ds	1
  4680  0000DF                     _eusart1RxLastError:
  4681                           	opt callstack 0
  4682  0000DF                     	ds	1
  4683  0000E0                     _eusart1RxCount:
  4684                           	opt callstack 0
  4685  0000E0                     	ds	1
  4686  0000E1                     _eusart1RxTail:
  4687                           	opt callstack 0
  4688  0000E1                     	ds	1
  4689  0000E2                     _eusart1TxTail:
  4690                           	opt callstack 0
  4691  0000E2                     	ds	1
  4692  0000E3                     _eusart1TxHead:
  4693                           	opt callstack 0
  4694  0000E3                     	ds	1
  4695  0000E4                     _eusart2RxLastError:
  4696                           	opt callstack 0
  4697  0000E4                     	ds	1
  4698  0000E5                     _eusart2RxCount:
  4699                           	opt callstack 0
  4700  0000E5                     	ds	1
  4701  0000E6                     _eusart2RxTail:
  4702                           	opt callstack 0
  4703  0000E6                     	ds	1
  4704  0000E7                     _eusart2TxTail:
  4705                           	opt callstack 0
  4706  0000E7                     	ds	1
  4707  0000E8                     _eusart2TxHead:
  4708                           	opt callstack 0
  4709  0000E8                     	ds	1
  4710                           
  4711                           	psect	dataBANK0
  4712  0000E9                     __pdataBANK0:
  4713                           	opt callstack 0
  4714  0000E9                     ReadRX232@F10774:
  4715                           	opt callstack 0
  4716  0000E9                     	ds	2
  4717  0000EB                     _ByteLo:
  4718                           	opt callstack 0
  4719  0000EB                     	ds	2
  4720  0000ED                     _MBResCRC:
  4721                           	opt callstack 0
  4722  0000ED                     	ds	2
  4723  0000EF                     _ExpectedBytes:
  4724                           	opt callstack 0
  4725  0000EF                     	ds	2
  4726  0000F1                     _Address:
  4727                           	opt callstack 0
  4728  0000F1                     	ds	2
  4729  0000F3                     _MB302xx:
  4730                           	opt callstack 0
  4731  0000F3                     	ds	2
  4732  0000F5                     _Debug:
  4733                           	opt callstack 0
  4734  0000F5                     	ds	1
  4735                           
  4736                           	psect	bssBANK1
  4737  0001E3                     __pbssBANK1:
  4738                           	opt callstack 0
  4739  0001E3                     _Command:
  4740                           	opt callstack 0
  4741  0001E3                     	ds	16
  4742                           
  4743                           	psect	dataBANK1
  4744  000100                     __pdataBANK1:
  4745                           	opt callstack 0
  4746  000100                     _ModbusData:
  4747                           	opt callstack 0
  4748  000100                     	ds	100
  4749  000164                     _MB301xx:
  4750                           	opt callstack 0
  4751  000164                     	ds	14
  4752  000172                     _MB304xx:
  4753                           	opt callstack 0
  4754  000172                     	ds	12
  4755  00017E                     _MB303xx:
  4756                           	opt callstack 0
  4757  00017E                     	ds	10
  4758  000188                     InitialiseString@F10768:
  4759                           	opt callstack 0
  4760  000188                     	ds	8
  4761  000190                     stoa@F1139:
  4762                           	opt callstack 0
  4763  000190                     	ds	7
  4764  000197                     _MB306xx:
  4765                           	opt callstack 0
  4766  000197                     	ds	6
  4767                           
  4768                           	psect	bssBANK2
  4769  0002A2                     __pbssBANK2:
  4770                           	opt callstack 0
  4771  0002A2                     _eusart2RxStatusBuffer:
  4772                           	opt callstack 0
  4773  0002A2                     	ds	32
  4774  0002C2                     _eusart1TxBuffer:
  4775                           	opt callstack 0
  4776  0002C2                     	ds	16
  4777  0002D2                     	ds	11
  4778  0002DD                     _dbuf:
  4779                           	opt callstack 0
  4780  0002DD                     	ds	32
  4781                           
  4782                           	psect	dataBANK2
  4783  000200                     __pdataBANK2:
  4784                           	opt callstack 0
  4785  000200                     ValidateCmd@F10798:
  4786                           	opt callstack 0
  4787  000200                     	ds	20
  4788  000214                     ValidateCmd@F10795:
  4789                           	opt callstack 0
  4790  000214                     	ds	20
  4791  000228                     ValidateCmd@F10792:
  4792                           	opt callstack 0
  4793  000228                     	ds	20
  4794  00023C                     _MB305xx:
  4795                           	opt callstack 0
  4796  00023C                     	ds	16
  4797  00024C                     InitialiseString@F10765:
  4798                           	opt callstack 0
  4799  00024C                     	ds	11
  4800  000257                     _MBRespon:
  4801                           	opt callstack 0
  4802  000257                     	ds	75
  4803                           
  4804                           	psect	bssBANK3
  4805  000300                     __pbssBANK3:
  4806                           	opt callstack 0
  4807  000300                     _eusart1RxStatusBuffer:
  4808                           	opt callstack 0
  4809  000300                     	ds	100
  4810  000364                     _eusart2RxBuffer:
  4811                           	opt callstack 0
  4812  000364                     	ds	32
  4813  000384                     _eusart2TxBuffer:
  4814                           	opt callstack 0
  4815  000384                     	ds	32
  4816  0003A4                     	ds	19
  4817                           
  4818                           	psect	dataBANK3
  4819  0003B7                     __pdataBANK3:
  4820                           	opt callstack 0
  4821  0003B7                     _MB400xx:
  4822                           	opt callstack 0
  4823  0003B7                     	ds	64
  4824                           
  4825                           	psect	bssBANK4
  4826  000400                     __pbssBANK4:
  4827                           	opt callstack 0
  4828  000400                     _eusart1RxBuffer:
  4829                           	opt callstack 0
  4830  000400                     	ds	100
  4831                           
  4832                           	psect	dataBANK4
  4833  000464                     __pdataBANK4:
  4834                           	opt callstack 0
  4835  000464                     _MB300xx:
  4836                           	opt callstack 0
  4837  000464                     	ds	64
  4838                           
  4839                           	psect	bssBANK5
  4840  000500                     __pbssBANK5:
  4841                           	opt callstack 0
  4842  000500                     _rxData:
  4843                           	opt callstack 0
  4844  000500                     	ds	100
  4845                           
  4846                           	psect	cstackBANK1
  4847  00019D                     __pcstackBANK1:
  4848                           	opt callstack 0
  4849  00019D                     ValidateCmd@ConfName:
  4850                           	opt callstack 0
  4851                           
  4852                           ; 20 bytes @ 0x0
  4853  00019D                     	ds	20
  4854  0001B1                     ValidateCmd@ConfName_1827:
  4855                           	opt callstack 0
  4856                           
  4857                           ; 20 bytes @ 0x14
  4858  0001B1                     	ds	20
  4859  0001C5                     ValidateCmd@ConfName_1831:
  4860                           	opt callstack 0
  4861                           
  4862                           ; 20 bytes @ 0x28
  4863  0001C5                     	ds	28
  4864  0001E1                     ??_main:
  4865                           
  4866                           ; 1 bytes @ 0x44
  4867  0001E1                     	ds	2
  4868                           
  4869                           	psect	cstackBANK0
  4870  000060                     __pcstackBANK0:
  4871                           	opt callstack 0
  4872  000060                     vfpfcnvrt@ll:
  4873                           	opt callstack 0
  4874                           
  4875                           ; 8 bytes @ 0x0
  4876  000060                     	ds	8
  4877  000068                     vfpfcnvrt@cp:
  4878                           	opt callstack 0
  4879                           
  4880                           ; 2 bytes @ 0x8
  4881  000068                     	ds	2
  4882  00006A                     vfpfcnvrt@c:
  4883                           	opt callstack 0
  4884                           
  4885                           ; 1 bytes @ 0xA
  4886  00006A                     	ds	1
  4887  00006B                     vfpfcnvrt@done:
  4888                           	opt callstack 0
  4889                           
  4890                           ; 2 bytes @ 0xB
  4891  00006B                     	ds	2
  4892  00006D                     _vfpfcnvrt$1953:
  4893                           	opt callstack 0
  4894                           
  4895                           ; 2 bytes @ 0xD
  4896  00006D                     	ds	2
  4897  00006F                     vfpfcnvrt@llu:
  4898                           	opt callstack 0
  4899                           
  4900                           ; 8 bytes @ 0xF
  4901  00006F                     	ds	8
  4902  000077                     ?_vfprintf:
  4903                           	opt callstack 0
  4904  000077                     vfprintf@fp:
  4905                           	opt callstack 0
  4906                           
  4907                           ; 2 bytes @ 0x17
  4908  000077                     	ds	2
  4909  000079                     vfprintf@fmt:
  4910                           	opt callstack 0
  4911                           
  4912                           ; 2 bytes @ 0x19
  4913  000079                     	ds	2
  4914  00007B                     vfprintf@ap:
  4915                           	opt callstack 0
  4916                           
  4917                           ; 2 bytes @ 0x1B
  4918  00007B                     	ds	2
  4919  00007D                     ?_printf:
  4920                           	opt callstack 0
  4921  00007D                     printf@fmt:
  4922                           	opt callstack 0
  4923                           
  4924                           ; 2 bytes @ 0x1D
  4925  00007D                     	ds	16
  4926  00008D                     printf@ap:
  4927                           	opt callstack 0
  4928                           
  4929                           ; 2 bytes @ 0x2D
  4930  00008D                     	ds	2
  4931  00008F                     ??_ModbusFC03:
  4932  00008F                     ??_ModbusFC10:
  4933  00008F                     ??_ModbusFC04:
  4934  00008F                     ??_PrintModbus:
  4935  00008F                     ??_PrintModRespon:
  4936  00008F                     ?_ReadRX232:
  4937                           	opt callstack 0
  4938  00008F                     PrintMB400@i:
  4939                           	opt callstack 0
  4940  00008F                     ReadRX232@NumChars:
  4941                           	opt callstack 0
  4942  00008F                     ClearEEAddRange@StartAdd:
  4943                           	opt callstack 0
  4944  00008F                     InitialiseString@PartNum:
  4945                           	opt callstack 0
  4946                           
  4947                           ; 19 bytes @ 0x2F
  4948  00008F                     	ds	2
  4949  000091                     ClearEEAddRange@NumBytes:
  4950                           	opt callstack 0
  4951                           
  4952                           ; 2 bytes @ 0x31
  4953  000091                     	ds	1
  4954  000092                     PrintModRespon@j:
  4955                           	opt callstack 0
  4956                           
  4957                           ; 2 bytes @ 0x32
  4958  000092                     	ds	1
  4959  000093                     ModbusFC10@TempData:
  4960                           	opt callstack 0
  4961  000093                     SaveCardDat@Name:
  4962                           	opt callstack 0
  4963                           
  4964                           ; 2 bytes @ 0x33
  4965  000093                     	ds	1
  4966  000094                     PrintModbus@j:
  4967                           	opt callstack 0
  4968  000094                     PrintModRespon@i:
  4969                           	opt callstack 0
  4970                           
  4971                           ; 2 bytes @ 0x34
  4972  000094                     	ds	1
  4973  000095                     ModbusFC03@error:
  4974                           	opt callstack 0
  4975  000095                     ModbusFC10@error:
  4976                           	opt callstack 0
  4977  000095                     ModbusFC04@convertedValue:
  4978                           	opt callstack 0
  4979  000095                     SaveCardDat@MBAddress:
  4980                           	opt callstack 0
  4981                           
  4982                           ; 2 bytes @ 0x35
  4983  000095                     	ds	1
  4984  000096                     PrintModbus@i:
  4985                           	opt callstack 0
  4986  000096                     ModbusFC03@i:
  4987                           	opt callstack 0
  4988  000096                     ModbusFC10@i:
  4989                           	opt callstack 0
  4990                           
  4991                           ; 2 bytes @ 0x36
  4992  000096                     	ds	1
  4993  000097                     ModbusFC04@error:
  4994                           	opt callstack 0
  4995  000097                     SaveCardDat@dataeeAddr:
  4996                           	opt callstack 0
  4997                           
  4998                           ; 2 bytes @ 0x37
  4999  000097                     	ds	1
  5000  000098                     ModbusFC04@i:
  5001                           	opt callstack 0
  5002  000098                     ModbusFC10@j:
  5003                           	opt callstack 0
  5004                           
  5005                           ; 2 bytes @ 0x38
  5006  000098                     	ds	1
  5007  000099                     SaveCardDat@NumBytes:
  5008                           	opt callstack 0
  5009                           
  5010                           ; 2 bytes @ 0x39
  5011  000099                     	ds	2
  5012  00009B                     ??_SaveCardDat:
  5013                           
  5014                           ; 1 bytes @ 0x3B
  5015  00009B                     	ds	2
  5016  00009D                     _SaveCardDat$2889:
  5017                           	opt callstack 0
  5018                           
  5019                           ; 2 bytes @ 0x3D
  5020  00009D                     	ds	2
  5021  00009F                     SaveCardDat@dataeeAddrWrk:
  5022                           	opt callstack 0
  5023                           
  5024                           ; 2 bytes @ 0x3F
  5025  00009F                     	ds	2
  5026  0000A1                     SaveCardDat@i:
  5027                           	opt callstack 0
  5028                           
  5029                           ; 2 bytes @ 0x41
  5030  0000A1                     	ds	1
  5031  0000A2                     InitialiseString@Date:
  5032                           	opt callstack 0
  5033                           
  5034                           ; 11 bytes @ 0x42
  5035  0000A2                     	ds	1
  5036  0000A3                     SaveCardDat@Conf:
  5037                           	opt callstack 0
  5038                           
  5039                           ; 1 bytes @ 0x43
  5040  0000A3                     	ds	10
  5041  0000AD                     InitialiseString@Time:
  5042                           	opt callstack 0
  5043                           
  5044                           ; 8 bytes @ 0x4D
  5045  0000AD                     	ds	8
  5046  0000B5                     InitialiseString@SerialNum:
  5047                           	opt callstack 0
  5048                           
  5049                           ; 11 bytes @ 0x55
  5050  0000B5                     	ds	11
  5051  0000C0                     InitialiseString@Partial:
  5052                           	opt callstack 0
  5053                           
  5054                           ; 1 bytes @ 0x60
  5055  0000C0                     	ds	1
  5056  0000C1                     InitialiseString@convertedValue:
  5057                           	opt callstack 0
  5058                           
  5059                           ; 2 bytes @ 0x61
  5060  0000C1                     	ds	2
  5061  0000C3                     InitialiseString@RevNum:
  5062                           	opt callstack 0
  5063                           
  5064                           ; 2 bytes @ 0x63
  5065  0000C3                     	ds	2
  5066  0000C5                     InitialiseString@readDataOdd:
  5067                           	opt callstack 0
  5068                           
  5069                           ; 1 bytes @ 0x65
  5070  0000C5                     	ds	1
  5071  0000C6                     InitialiseString@readDataEven:
  5072                           	opt callstack 0
  5073                           
  5074                           ; 1 bytes @ 0x66
  5075  0000C6                     	ds	1
  5076  0000C7                     InitialiseString@j:
  5077                           	opt callstack 0
  5078                           
  5079                           ; 2 bytes @ 0x67
  5080  0000C7                     	ds	2
  5081  0000C9                     InitialiseString@i:
  5082                           	opt callstack 0
  5083                           
  5084                           ; 2 bytes @ 0x69
  5085  0000C9                     	ds	2
  5086  0000CB                     InitialiseString@i_1759:
  5087                           	opt callstack 0
  5088                           
  5089                           ; 2 bytes @ 0x6B
  5090  0000CB                     	ds	2
  5091                           
  5092                           	psect	cstackCOMRAM
  5093  000001                     __pcstackCOMRAM:
  5094                           	opt callstack 0
  5095  000001                     ??_INTERRUPT_InterruptManager:
  5096  000001                     
  5097                           ; 1 bytes @ 0x0
  5098  000001                     	ds	4
  5099  000005                     ??_ClearRxBuff:
  5100  000005                     ??_AddRxBuffToModBus:
  5101  000005                     ??_checkCRC:
  5102  000005                     ?_generateCRC:
  5103                           	opt callstack 0
  5104  000005                     ?_strcmp:
  5105                           	opt callstack 0
  5106  000005                     ?_strlen:
  5107                           	opt callstack 0
  5108  000005                     ?_isupper:
  5109                           	opt callstack 0
  5110  000005                     ?_isalpha:
  5111                           	opt callstack 0
  5112  000005                     ?_isdigit:
  5113                           	opt callstack 0
  5114  000005                     ?_isspace:
  5115                           	opt callstack 0
  5116  000005                     ?_islower:
  5117                           	opt callstack 0
  5118  000005                     ?_ADCC_GetSingleConversion:
  5119                           	opt callstack 0
  5120  000005                     ?___wmul:
  5121                           	opt callstack 0
  5122  000005                     ?___awdiv:
  5123                           	opt callstack 0
  5124  000005                     ?___aodiv:
  5125                           	opt callstack 0
  5126  000005                     ?___aomod:
  5127                           	opt callstack 0
  5128  000005                     ?___lodiv:
  5129                           	opt callstack 0
  5130  000005                     ?___lomod:
  5131                           	opt callstack 0
  5132  000005                     EUSART2_Read@readValue:
  5133                           	opt callstack 0
  5134  000005                     EUSART2_Write@txData:
  5135                           	opt callstack 0
  5136  000005                     EUSART1_Read@readValue:
  5137                           	opt callstack 0
  5138  000005                     EUSART1_Write@txData:
  5139                           	opt callstack 0
  5140  000005                     DATAEE_WriteByte@bAdd:
  5141                           	opt callstack 0
  5142  000005                     DATAEE_ReadByte@bAdd:
  5143                           	opt callstack 0
  5144  000005                     EUSART2_SetFramingErrorHandler@interruptHandler:
  5145                           	opt callstack 0
  5146  000005                     EUSART2_SetOverrunErrorHandler@interruptHandler:
  5147                           	opt callstack 0
  5148  000005                     EUSART2_SetErrorHandler@interruptHandler:
  5149                           	opt callstack 0
  5150  000005                     EUSART2_SetTxInterruptHandler@interruptHandler:
  5151                           	opt callstack 0
  5152  000005                     EUSART2_SetRxInterruptHandler@interruptHandler:
  5153                           	opt callstack 0
  5154  000005                     EUSART1_SetFramingErrorHandler@interruptHandler:
  5155                           	opt callstack 0
  5156  000005                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  5157                           	opt callstack 0
  5158  000005                     EUSART1_SetErrorHandler@interruptHandler:
  5159                           	opt callstack 0
  5160  000005                     EUSART1_SetTxInterruptHandler@interruptHandler:
  5161                           	opt callstack 0
  5162  000005                     EUSART1_SetRxInterruptHandler@interruptHandler:
  5163                           	opt callstack 0
  5164  000005                     ClearModbusData@i:
  5165                           	opt callstack 0
  5166  000005                     generateCRC@MessCnt:
  5167                           	opt callstack 0
  5168  000005                     ClearModbusRespon@i:
  5169                           	opt callstack 0
  5170  000005                     ___wmul@multiplier:
  5171                           	opt callstack 0
  5172  000005                     ___awdiv@dividend:
  5173                           	opt callstack 0
  5174  000005                     isalpha@c:
  5175                           	opt callstack 0
  5176  000005                     isdigit@c:
  5177                           	opt callstack 0
  5178  000005                     isspace@c:
  5179                           	opt callstack 0
  5180  000005                     isupper@c:
  5181                           	opt callstack 0
  5182  000005                     strcmp@l:
  5183                           	opt callstack 0
  5184  000005                     strlen@s:
  5185                           	opt callstack 0
  5186  000005                     islower@c:
  5187                           	opt callstack 0
  5188  000005                     ___aodiv@dividend:
  5189                           	opt callstack 0
  5190  000005                     ___aomod@dividend:
  5191                           	opt callstack 0
  5192  000005                     ___lodiv@dividend:
  5193                           	opt callstack 0
  5194  000005                     ___lomod@dividend:
  5195                           	opt callstack 0
  5196                           
  5197                           ; 8 bytes @ 0x4
  5198  000005                     	ds	1
  5199  000006                     putch@txData:
  5200                           	opt callstack 0
  5201  000006                     ClearRxBuff@i:
  5202                           	opt callstack 0
  5203  000006                     AddRxBuffToModBus@i:
  5204                           	opt callstack 0
  5205  000006                     UART1_Write_string@data:
  5206                           	opt callstack 0
  5207                           
  5208                           ; 2 bytes @ 0x5
  5209  000006                     	ds	1
  5210  000007                     ??_isupper:
  5211  000007                     ??_isalpha:
  5212  000007                     ??_isdigit:
  5213  000007                     ??_isspace:
  5214  000007                     ??_islower:
  5215  000007                     ??_ADCC_GetSingleConversion:
  5216  000007                     DATAEE_WriteByte@bData:
  5217                           	opt callstack 0
  5218  000007                     generateCRC@HiOrLo:
  5219                           	opt callstack 0
  5220  000007                     ___wmul@multiplicand:
  5221                           	opt callstack 0
  5222  000007                     ___awdiv@divisor:
  5223                           	opt callstack 0
  5224  000007                     fputc@c:
  5225                           	opt callstack 0
  5226  000007                     strcmp@r:
  5227                           	opt callstack 0
  5228  000007                     strlen@a:
  5229                           	opt callstack 0
  5230                           
  5231                           ; 2 bytes @ 0x6
  5232  000007                     	ds	1
  5233  000008                     ??_generateCRC:
  5234  000008                     DATAEE_WriteByte@GIEBitValue:
  5235                           	opt callstack 0
  5236  000008                     UART1_Write_string@data_len:
  5237                           	opt callstack 0
  5238                           
  5239                           ; 2 bytes @ 0x7
  5240  000008                     	ds	1
  5241  000009                     ??_strcmp:
  5242  000009                     ADCC_GetSingleConversion@channel:
  5243                           	opt callstack 0
  5244  000009                     ___awdiv@counter:
  5245                           	opt callstack 0
  5246  000009                     ___wmul@product:
  5247                           	opt callstack 0
  5248  000009                     memmove@d1:
  5249                           	opt callstack 0
  5250  000009                     fputc@fp:
  5251                           	opt callstack 0
  5252  000009                     strcpy@dest:
  5253                           	opt callstack 0
  5254                           
  5255                           ; 2 bytes @ 0x8
  5256  000009                     	ds	1
  5257  00000A                     ??_UART1_Write_string:
  5258  00000A                     ___awdiv@sign:
  5259                           	opt callstack 0
  5260  00000A                     checkCRC@crcHigh:
  5261                           	opt callstack 0
  5262  00000A                     generateCRC@crcHigh:
  5263                           	opt callstack 0
  5264  00000A                     CardConfigIni@Name:
  5265                           	opt callstack 0
  5266                           
  5267                           ; 2 bytes @ 0x9
  5268  00000A                     	ds	1
  5269  00000B                     ??_fputc:
  5270  00000B                     ?_toupper:
  5271                           	opt callstack 0
  5272  00000B                     _isspace$2440:
  5273                           	opt callstack 0
  5274  00000B                     UART1_Write_string@i:
  5275                           	opt callstack 0
  5276  00000B                     ___awdiv@quotient:
  5277                           	opt callstack 0
  5278  00000B                     memmove@s1:
  5279                           	opt callstack 0
  5280  00000B                     strcpy@src:
  5281                           	opt callstack 0
  5282  00000B                     toupper@c:
  5283                           	opt callstack 0
  5284                           
  5285                           ; 2 bytes @ 0xA
  5286  00000B                     	ds	1
  5287  00000C                     ?_atoi:
  5288                           	opt callstack 0
  5289  00000C                     checkCRC@crcLow:
  5290                           	opt callstack 0
  5291  00000C                     generateCRC@crcLow:
  5292                           	opt callstack 0
  5293  00000C                     CardConfigIni@RetNum:
  5294                           	opt callstack 0
  5295  00000C                     atoi@s:
  5296                           	opt callstack 0
  5297                           
  5298                           ; 2 bytes @ 0xB
  5299  00000C                     	ds	1
  5300  00000D                     ??_strcpy:
  5301  00000D                     ??_toupper:
  5302  00000D                     memmove@n:
  5303                           	opt callstack 0
  5304  00000D                     ___aodiv@divisor:
  5305                           	opt callstack 0
  5306  00000D                     ___aomod@divisor:
  5307                           	opt callstack 0
  5308  00000D                     ___lodiv@divisor:
  5309                           	opt callstack 0
  5310  00000D                     ___lomod@divisor:
  5311                           	opt callstack 0
  5312                           
  5313                           ; 8 bytes @ 0xC
  5314  00000D                     	ds	1
  5315  00000E                     ??_atoi:
  5316  00000E                     checkCRC@j:
  5317                           	opt callstack 0
  5318  00000E                     generateCRC@i:
  5319                           	opt callstack 0
  5320  00000E                     CardConfigIni@dataeeAddrWrk:
  5321                           	opt callstack 0
  5322                           
  5323                           ; 2 bytes @ 0xD
  5324  00000E                     	ds	1
  5325  00000F                     ??_memmove:
  5326  00000F                     strcpy@s:
  5327                           	opt callstack 0
  5328                           
  5329                           ; 2 bytes @ 0xE
  5330  00000F                     	ds	1
  5331  000010                     ?_stoa:
  5332                           	opt callstack 0
  5333  000010                     checkCRC@crc:
  5334                           	opt callstack 0
  5335  000010                     generateCRC@j:
  5336                           	opt callstack 0
  5337  000010                     CardConfigIni@NumBytes:
  5338                           	opt callstack 0
  5339  000010                     stoa@fp:
  5340                           	opt callstack 0
  5341  000010                     fputs@s:
  5342                           	opt callstack 0
  5343                           
  5344                           ; 2 bytes @ 0xF
  5345  000010                     	ds	1
  5346  000011                     memmove@d:
  5347                           	opt callstack 0
  5348  000011                     strcpy@d:
  5349                           	opt callstack 0
  5350  000011                     _toupper$2527:
  5351                           	opt callstack 0
  5352                           
  5353                           ; 2 bytes @ 0x10
  5354  000011                     	ds	1
  5355  000012                     ??_CardConfigIni:
  5356  000012                     checkCRC@i:
  5357                           	opt callstack 0
  5358  000012                     generateCRC@crc:
  5359                           	opt callstack 0
  5360  000012                     stoa@s:
  5361                           	opt callstack 0
  5362  000012                     atoi@neg:
  5363                           	opt callstack 0
  5364  000012                     fputs@fp:
  5365                           	opt callstack 0
  5366                           
  5367                           ; 2 bytes @ 0x11
  5368  000012                     	ds	1
  5369  000013                     memmove@s:
  5370                           	opt callstack 0
  5371  000013                     strcat@dest:
  5372                           	opt callstack 0
  5373                           
  5374                           ; 2 bytes @ 0x12
  5375  000013                     	ds	1
  5376  000014                     ??_stoa:
  5377  000014                     fputs@c:
  5378                           	opt callstack 0
  5379  000014                     ModbusError@ErrorCode:
  5380                           	opt callstack 0
  5381  000014                     CardConfigIni@j:
  5382                           	opt callstack 0
  5383  000014                     _atoi$2413:
  5384                           	opt callstack 0
  5385                           
  5386                           ; 2 bytes @ 0x13
  5387  000014                     	ds	1
  5388  000015                     ___aodiv@counter:
  5389                           	opt callstack 0
  5390  000015                     ___aomod@counter:
  5391                           	opt callstack 0
  5392  000015                     ___lomod@counter:
  5393                           	opt callstack 0
  5394  000015                     fputs@i:
  5395                           	opt callstack 0
  5396  000015                     strcat@src:
  5397                           	opt callstack 0
  5398  000015                     stoa@nuls:
  5399                           	opt callstack 0
  5400  000015                     ___lodiv@quotient:
  5401                           	opt callstack 0
  5402                           
  5403                           ; 8 bytes @ 0x14
  5404  000015                     	ds	1
  5405  000016                     ___aodiv@sign:
  5406                           	opt callstack 0
  5407  000016                     ___aomod@sign:
  5408                           	opt callstack 0
  5409  000016                     CardConfigIni@i:
  5410                           	opt callstack 0
  5411  000016                     _atoi$2415:
  5412                           	opt callstack 0
  5413                           
  5414                           ; 2 bytes @ 0x15
  5415  000016                     	ds	1
  5416  000017                     ?_abs:
  5417                           	opt callstack 0
  5418  000017                     ?_pad:
  5419                           	opt callstack 0
  5420  000017                     pad@fp:
  5421                           	opt callstack 0
  5422  000017                     abs@a:
  5423                           	opt callstack 0
  5424  000017                     ___aodiv@quotient:
  5425                           	opt callstack 0
  5426                           
  5427                           ; 8 bytes @ 0x16
  5428  000017                     	ds	1
  5429  000018                     CardConfigIni@readDataOdd:
  5430                           	opt callstack 0
  5431  000018                     _atoi$2414:
  5432                           	opt callstack 0
  5433                           
  5434                           ; 1 bytes @ 0x17
  5435  000018                     	ds	1
  5436  000019                     ??_abs:
  5437  000019                     CardConfigIni@readDataEven:
  5438                           	opt callstack 0
  5439  000019                     pad@buf:
  5440                           	opt callstack 0
  5441  000019                     atoi@n:
  5442                           	opt callstack 0
  5443                           
  5444                           ; 2 bytes @ 0x18
  5445  000019                     	ds	2
  5446  00001B                     pad@p:
  5447                           	opt callstack 0
  5448                           
  5449                           ; 2 bytes @ 0x1A
  5450  00001B                     	ds	1
  5451  00001C                     stoa@i:
  5452                           	opt callstack 0
  5453                           
  5454                           ; 2 bytes @ 0x1B
  5455  00001C                     	ds	1
  5456  00001D                     ??_pad:
  5457  00001D                     ___lodiv@counter:
  5458                           	opt callstack 0
  5459                           
  5460                           ; 1 bytes @ 0x1C
  5461  00001D                     	ds	1
  5462  00001E                     pad@i:
  5463                           	opt callstack 0
  5464  00001E                     stoa@w:
  5465                           	opt callstack 0
  5466                           
  5467                           ; 2 bytes @ 0x1D
  5468  00001E                     	ds	2
  5469  000020                     pad@w:
  5470                           	opt callstack 0
  5471  000020                     stoa@cp:
  5472                           	opt callstack 0
  5473                           
  5474                           ; 2 bytes @ 0x1F
  5475  000020                     	ds	2
  5476  000022                     ?_dtoa:
  5477                           	opt callstack 0
  5478  000022                     ?_utoa:
  5479                           	opt callstack 0
  5480  000022                     ?_xtoa:
  5481                           	opt callstack 0
  5482  000022                     dtoa@fp:
  5483                           	opt callstack 0
  5484  000022                     stoa@p:
  5485                           	opt callstack 0
  5486  000022                     utoa@fp:
  5487                           	opt callstack 0
  5488  000022                     xtoa@fp:
  5489                           	opt callstack 0
  5490                           
  5491                           ; 2 bytes @ 0x21
  5492  000022                     	ds	2
  5493  000024                     stoa@l:
  5494                           	opt callstack 0
  5495  000024                     dtoa@d:
  5496                           	opt callstack 0
  5497  000024                     utoa@d:
  5498                           	opt callstack 0
  5499  000024                     xtoa@d:
  5500                           	opt callstack 0
  5501                           
  5502                           ; 8 bytes @ 0x23
  5503  000024                     	ds	8
  5504  00002C                     ??_dtoa:
  5505  00002C                     ??_utoa:
  5506  00002C                     xtoa@x:
  5507                           	opt callstack 0
  5508                           
  5509                           ; 1 bytes @ 0x2B
  5510  00002C                     	ds	1
  5511  00002D                     ??_xtoa:
  5512                           
  5513                           ; 1 bytes @ 0x2C
  5514  00002D                     	ds	7
  5515  000034                     _dtoa$1909:
  5516                           	opt callstack 0
  5517  000034                     utoa@p:
  5518                           	opt callstack 0
  5519                           
  5520                           ; 2 bytes @ 0x33
  5521  000034                     	ds	1
  5522  000035                     _xtoa$1938:
  5523                           	opt callstack 0
  5524                           
  5525                           ; 2 bytes @ 0x34
  5526  000035                     	ds	1
  5527  000036                     dtoa@p:
  5528                           	opt callstack 0
  5529  000036                     utoa@w:
  5530                           	opt callstack 0
  5531                           
  5532                           ; 2 bytes @ 0x35
  5533  000036                     	ds	1
  5534  000037                     _xtoa$1939:
  5535                           	opt callstack 0
  5536                           
  5537                           ; 2 bytes @ 0x36
  5538  000037                     	ds	1
  5539  000038                     dtoa@w:
  5540                           	opt callstack 0
  5541  000038                     utoa@n:
  5542                           	opt callstack 0
  5543                           
  5544                           ; 8 bytes @ 0x37
  5545  000038                     	ds	1
  5546  000039                     xtoa@p:
  5547                           	opt callstack 0
  5548                           
  5549                           ; 2 bytes @ 0x38
  5550  000039                     	ds	1
  5551  00003A                     dtoa@s:
  5552                           	opt callstack 0
  5553                           
  5554                           ; 2 bytes @ 0x39
  5555  00003A                     	ds	1
  5556  00003B                     xtoa@w:
  5557                           	opt callstack 0
  5558                           
  5559                           ; 2 bytes @ 0x3A
  5560  00003B                     	ds	1
  5561  00003C                     dtoa@n:
  5562                           	opt callstack 0
  5563                           
  5564                           ; 8 bytes @ 0x3B
  5565  00003C                     	ds	1
  5566  00003D                     xtoa@n:
  5567                           	opt callstack 0
  5568                           
  5569                           ; 8 bytes @ 0x3C
  5570  00003D                     	ds	3
  5571  000040                     utoa@i:
  5572                           	opt callstack 0
  5573                           
  5574                           ; 2 bytes @ 0x3F
  5575  000040                     	ds	4
  5576  000044                     dtoa@i:
  5577                           	opt callstack 0
  5578                           
  5579                           ; 2 bytes @ 0x43
  5580  000044                     	ds	1
  5581  000045                     xtoa@i:
  5582                           	opt callstack 0
  5583                           
  5584                           ; 2 bytes @ 0x44
  5585  000045                     	ds	2
  5586  000047                     xtoa@c:
  5587                           	opt callstack 0
  5588                           
  5589                           ; 2 bytes @ 0x46
  5590  000047                     	ds	2
  5591  000049                     ?_vfpfcnvrt:
  5592                           	opt callstack 0
  5593  000049                     vfpfcnvrt@fp:
  5594                           	opt callstack 0
  5595                           
  5596                           ; 2 bytes @ 0x48
  5597  000049                     	ds	2
  5598  00004B                     vfpfcnvrt@fmt:
  5599                           	opt callstack 0
  5600                           
  5601                           ; 2 bytes @ 0x4A
  5602  00004B                     	ds	2
  5603  00004D                     vfpfcnvrt@ap:
  5604                           	opt callstack 0
  5605                           
  5606                           ; 2 bytes @ 0x4C
  5607  00004D                     	ds	2
  5608  00004F                     ??_vfpfcnvrt:
  5609                           
  5610                           ; 1 bytes @ 0x4E
  5611  00004F                     	ds	4
  5612  000053                     vfprintf@cfmt:
  5613                           	opt callstack 0
  5614                           
  5615                           ; 2 bytes @ 0x52
  5616  000053                     	ds	2
  5617  000055                     ??_InitialiseString:
  5618  000055                     ??_ModbusRx:
  5619  000055                     ??_PrintMB400:
  5620  000055                     ReadRX232@temp:
  5621                           	opt callstack 0
  5622  000055                     ClearEEAddRange@i:
  5623                           	opt callstack 0
  5624                           
  5625                           ; 2 bytes @ 0x54
  5626  000055                     	ds	2
  5627  000057                     
  5628                           ; 1 bytes @ 0x56
  5629 ;;
  5630 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  5631 ;;
  5632 ;; *************** function _main *****************
  5633 ;; Defined at:
  5634 ;;		line 23 in file "main.c"
  5635 ;; Parameters:    Size  Location     Type
  5636 ;;		None
  5637 ;; Auto vars:     Size  Location     Type
  5638 ;;  RXStat          1    0        _Bool 
  5639 ;; Return value:  Size  Location     Type
  5640 ;;                  1    wreg      void 
  5641 ;; Registers used:
  5642 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5643 ;; Tracked objects:
  5644 ;;		On entry : 0/0
  5645 ;;		On exit  : 0/0
  5646 ;;		Unchanged: 0/0
  5647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5649 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5650 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5651 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5652 ;;Total ram usage:        3 bytes
  5653 ;; Hardware stack levels required when called:   16
  5654 ;; This function calls:
  5655 ;;		_ClearModbusData
  5656 ;;		_ClearModbusRespon
  5657 ;;		_ClearRxBuff
  5658 ;;		_InitialiseString
  5659 ;;		_ModbusError
  5660 ;;		_ModbusFC03
  5661 ;;		_ModbusFC04
  5662 ;;		_ModbusFC10
  5663 ;;		_ModbusRx
  5664 ;;		_PrintMB400
  5665 ;;		_PrintModRespon
  5666 ;;		_PrintModbus
  5667 ;;		_RXMode
  5668 ;;		_ReadRX232
  5669 ;;		_SYSTEM_Initialize
  5670 ;;		_ValidateCmd
  5671 ;;		_printf
  5672 ;;		_strcpy
  5673 ;; This function is called by:
  5674 ;;		Startup code after reset
  5675 ;; This function uses a non-reentrant model
  5676 ;;
  5677                           
  5678                           	psect	text0
  5679  002DDC                     __ptext0:
  5680                           	opt callstack 0
  5681  002DDC                     _main:
  5682                           	opt callstack 15
  5683  002DDC                     
  5684                           ;main.c: 26:     SYSTEM_Initialize();
  5685  002DDC  ECC4  F028         	call	_SYSTEM_Initialize	;wreg free
  5686  002DE0                     
  5687                           ;main.c: 33:     (INTCONbits.GIE = 1);
  5688  002DE0  8EF2               	bsf	242,7,c	;volatile
  5689  002DE2                     
  5690                           ;main.c: 39:     (INTCONbits.PEIE = 1);
  5691  002DE2  8CF2               	bsf	242,6,c	;volatile
  5692  002DE4  9883               	bcf	131,4,c	;volatile
  5693  002DE6  9A83               	bcf	131,5,c	;volatile
  5694  002DE8  9C83               	bcf	131,6,c	;volatile
  5695  002DEA  9E83               	bcf	131,7,c	;volatile
  5696  002DEC                     
  5697                           ;main.c: 49:     InitialiseString(0);
  5698  002DEC  0E00               	movlw	0
  5699  002DEE  ECB9  F009         	call	_InitialiseString
  5700  002DF2                     
  5701                           ;main.c: 52:     RXMode();
  5702  002DF2  EC82  F029         	call	_RXMode	;wreg free
  5703  002DF6                     
  5704                           ;main.c: 53:     ClearRxBuff();
  5705  002DF6  EC89  F026         	call	_ClearRxBuff	;wreg free
  5706  002DFA                     
  5707                           ;main.c: 54:     ClearModbusRespon();
  5708  002DFA  EC38  F027         	call	_ClearModbusRespon	;wreg free
  5709  002DFE                     
  5710                           ;main.c: 58:     printf("Enter Command : ");
  5711  002DFE  0E37               	movlw	low (STR_9+2)
  5712  002E00  0100               	movlb	0	; () banked
  5713  002E02  6F7D               	movwf	printf@fmt& (0+255),b
  5714  002E04  0EFF               	movlw	high (STR_9+2)
  5715  002E06  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5716  002E08  EC8A  F028         	call	_printf	;wreg free
  5717  002E0C                     l8572:
  5718                           
  5719                           ;main.c: 61:     {;main.c: 62:         if(ModbusRx() == 1){
  5720  002E0C  ECEE  F01A         	call	_ModbusRx	;wreg free
  5721  002E10  06E8               	decf	wreg,f,c
  5722  002E12  A4D8               	btfss	status,2,c
  5723  002E14  EF0E  F017         	goto	u8741
  5724  002E18  EF10  F017         	goto	u8740
  5725  002E1C                     u8741:
  5726  002E1C  EF98  F017         	goto	l8606
  5727  002E20                     u8740:
  5728  002E20  EF64  F017         	goto	l8596
  5729  002E24                     l8576:
  5730                           
  5731                           ; BSR set to: 1
  5732                           ;main.c: 68:                 {;main.c: 69:                     printf("Function Code 0x0
      +                          3 - Read Output Holding Registers\r\n");
  5733  002E24  0EEF               	movlw	low STR_2
  5734  002E26  0100               	movlb	0	; () banked
  5735  002E28  6F7D               	movwf	printf@fmt& (0+255),b
  5736  002E2A  0EF6               	movlw	high STR_2
  5737  002E2C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5738  002E2E  EC8A  F028         	call	_printf	;wreg free
  5739                           
  5740                           ;main.c: 71:                     ModbusFC03();
  5741  002E32  EC93  F00B         	call	_ModbusFC03	;wreg free
  5742                           
  5743                           ;main.c: 72:                     break;
  5744  002E36  EF7E  F017         	goto	l8598
  5745  002E3A                     l8578:
  5746                           
  5747                           ; BSR set to: 1
  5748                           ;main.c: 75:                 {;main.c: 76:                     printf("Function Code 0x1
      +                          0 - Write to Output Holding Registers \r\n");
  5749  002E3A  0E3C               	movlw	low STR_3
  5750  002E3C  0100               	movlb	0	; () banked
  5751  002E3E  6F7D               	movwf	printf@fmt& (0+255),b
  5752  002E40  0EF5               	movlw	high STR_3
  5753  002E42  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5754  002E44  EC8A  F028         	call	_printf	;wreg free
  5755  002E48                     
  5756                           ;main.c: 78:                     if(Debug == 1){
  5757  002E48  0100               	movlb	0	; () banked
  5758  002E4A  05F5               	decf	_Debug& (0+255),w,b
  5759  002E4C  A4D8               	btfss	status,2,c
  5760  002E4E  EF2B  F017         	goto	u8751
  5761  002E52  EF2D  F017         	goto	u8750
  5762  002E56                     u8751:
  5763  002E56  EF35  F017         	goto	l758
  5764  002E5A                     u8750:
  5765  002E5A                     
  5766                           ; BSR set to: 0
  5767                           ;main.c: 79:                         printf("Modbus Register Before Update: \r\n");
  5768  002E5A  0ED5               	movlw	low STR_4
  5769  002E5C  6F7D               	movwf	printf@fmt& (0+255),b
  5770  002E5E  0EFB               	movlw	high STR_4
  5771  002E60  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5772  002E62  EC8A  F028         	call	_printf	;wreg free
  5773                           
  5774                           ;main.c: 80:                         PrintMB400();
  5775  002E66  EC05  F024         	call	_PrintMB400	;wreg free
  5776  002E6A                     l758:
  5777                           
  5778                           ;main.c: 82:                     ModbusFC10();
  5779  002E6A  ECE8  F012         	call	_ModbusFC10	;wreg free
  5780  002E6E                     
  5781                           ;main.c: 84:                     if(Debug ==1){
  5782  002E6E  0100               	movlb	0	; () banked
  5783  002E70  05F5               	decf	_Debug& (0+255),w,b
  5784  002E72  A4D8               	btfss	status,2,c
  5785  002E74  EF3E  F017         	goto	u8761
  5786  002E78  EF40  F017         	goto	u8760
  5787  002E7C                     u8761:
  5788  002E7C  EF7E  F017         	goto	l8598
  5789  002E80                     u8760:
  5790  002E80                     
  5791                           ; BSR set to: 0
  5792                           ;main.c: 85:                         printf("Modbus Register After Update: \r\n");
  5793  002E80  0E5A               	movlw	low STR_5
  5794  002E82  6F7D               	movwf	printf@fmt& (0+255),b
  5795  002E84  0EFC               	movlw	high STR_5
  5796  002E86  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5797  002E88  EC8A  F028         	call	_printf	;wreg free
  5798                           
  5799                           ;main.c: 86:                         PrintMB400();
  5800  002E8C  EC05  F024         	call	_PrintMB400	;wreg free
  5801  002E90  EF7E  F017         	goto	l8598
  5802  002E94                     l8588:
  5803                           
  5804                           ; BSR set to: 1
  5805                           ;main.c: 91:                 {;main.c: 92:                     printf("Function Code 0x0
      +                          4 - Read Input Registers\r\n");
  5806  002E94  0E23               	movlw	low STR_6
  5807  002E96  0100               	movlb	0	; () banked
  5808  002E98  6F7D               	movwf	printf@fmt& (0+255),b
  5809  002E9A  0EF9               	movlw	high STR_6
  5810  002E9C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5811  002E9E  EC8A  F028         	call	_printf	;wreg free
  5812                           
  5813                           ;main.c: 95:                     ModbusFC04();
  5814  002EA2  EC95  F000         	call	_ModbusFC04	;wreg free
  5815                           
  5816                           ;main.c: 96:                     break;
  5817  002EA6  EF7E  F017         	goto	l8598
  5818  002EAA                     l8590:
  5819                           
  5820                           ; BSR set to: 1
  5821                           ;main.c: 99:                 {;main.c: 100:                     printf("Unsupported Func
      +                          tion Code\r\n");
  5822  002EAA  0E6F               	movlw	low STR_7
  5823  002EAC  0100               	movlb	0	; () banked
  5824  002EAE  6F7D               	movwf	printf@fmt& (0+255),b
  5825  002EB0  0EFD               	movlw	high STR_7
  5826  002EB2  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5827  002EB4  EC8A  F028         	call	_printf	;wreg free
  5828  002EB8                     
  5829                           ;main.c: 102:                     ModbusError(0x01);
  5830  002EB8  0E00               	movlw	0
  5831  002EBA  6E15               	movwf	(ModbusError@ErrorCode+1)^0,c
  5832  002EBC  0E01               	movlw	1
  5833  002EBE  6E14               	movwf	ModbusError@ErrorCode^0,c
  5834  002EC0  ECE7  F020         	call	_ModbusError	;wreg free
  5835                           
  5836                           ;main.c: 103:                     break;
  5837  002EC4  EF7E  F017         	goto	l8598
  5838  002EC8                     l8596:
  5839  002EC8  0101               	movlb	1	; () banked
  5840  002ECA  5101               	movf	(_ModbusData+1)& (0+255),w,b
  5841  002ECC  6FE1               	movwf	??_main& (0+255),b
  5842  002ECE  6BE2               	clrf	(??_main+1)& (0+255),b
  5843                           
  5844                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5845                           ; Switch size 1, requested type "simple"
  5846                           ; Number of cases is 1, Range of values is 0 to 0
  5847                           ; switch strategies available:
  5848                           ; Name         Instructions Cycles
  5849                           ; simple_byte            4     3 (average)
  5850                           ;	Chosen strategy is simple_byte
  5851  002ED0  51E2               	movf	(??_main+1)& (0+255),w,b
  5852  002ED2  0A00               	xorlw	0	; case 0
  5853  002ED4  B4D8               	btfsc	status,2,c
  5854  002ED6  EF6F  F017         	goto	l8762
  5855  002EDA  EF55  F017         	goto	l8590
  5856  002EDE                     l8762:
  5857                           
  5858                           ; BSR set to: 1
  5859                           ; Switch size 1, requested type "simple"
  5860                           ; Number of cases is 3, Range of values is 3 to 16
  5861                           ; switch strategies available:
  5862                           ; Name         Instructions Cycles
  5863                           ; simple_byte           10     6 (average)
  5864                           ;	Chosen strategy is simple_byte
  5865  002EDE  51E1               	movf	??_main& (0+255),w,b
  5866  002EE0  0A03               	xorlw	3	; case 3
  5867  002EE2  B4D8               	btfsc	status,2,c
  5868  002EE4  EF12  F017         	goto	l8576
  5869  002EE8  0A07               	xorlw	7	; case 4
  5870  002EEA  B4D8               	btfsc	status,2,c
  5871  002EEC  EF4A  F017         	goto	l8588
  5872  002EF0  0A14               	xorlw	20	; case 16
  5873  002EF2  B4D8               	btfsc	status,2,c
  5874  002EF4  EF1D  F017         	goto	l8578
  5875  002EF8  EF55  F017         	goto	l8590
  5876  002EFC                     l8598:
  5877                           
  5878                           ;main.c: 107:             if(Debug==1){
  5879  002EFC  0100               	movlb	0	; () banked
  5880  002EFE  05F5               	decf	_Debug& (0+255),w,b
  5881  002F00  A4D8               	btfss	status,2,c
  5882  002F02  EF85  F017         	goto	u8771
  5883  002F06  EF87  F017         	goto	u8770
  5884  002F0A                     u8771:
  5885  002F0A  EF8B  F017         	goto	l8602
  5886  002F0E                     u8770:
  5887  002F0E                     
  5888                           ; BSR set to: 0
  5889                           ;main.c: 108:                 PrintModbus();
  5890  002F0E  EC9C  F00E         	call	_PrintModbus	;wreg free
  5891                           
  5892                           ;main.c: 109:                 PrintModRespon();
  5893  002F12  EC1D  F00D         	call	_PrintModRespon	;wreg free
  5894  002F16                     l8602:
  5895                           
  5896                           ;main.c: 113:             ClearModbusData();
  5897  002F16  EC63  F026         	call	_ClearModbusData	;wreg free
  5898  002F1A                     
  5899                           ;main.c: 114:             ClearModbusRespon();
  5900  002F1A  EC38  F027         	call	_ClearModbusRespon	;wreg free
  5901                           
  5902                           ;main.c: 115:             printf("Enter Command: ");
  5903  002F1E  0E7B               	movlw	low STR_8
  5904  002F20  0100               	movlb	0	; () banked
  5905  002F22  6F7D               	movwf	printf@fmt& (0+255),b
  5906  002F24  0EFF               	movlw	high STR_8
  5907  002F26  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5908  002F28  EC8A  F028         	call	_printf	;wreg free
  5909                           
  5910                           ;main.c: 117:         }else if(ReadRX232(16) != 0){
  5911  002F2C  EF06  F017         	goto	l8572
  5912  002F30                     l8606:
  5913  002F30  0E00               	movlw	0
  5914  002F32  0100               	movlb	0	; () banked
  5915  002F34  6F90               	movwf	(ReadRX232@NumChars+1)& (0+255),b
  5916  002F36  0E10               	movlw	16
  5917  002F38  6F8F               	movwf	ReadRX232@NumChars& (0+255),b
  5918  002F3A  ECF7  F01C         	call	_ReadRX232	;wreg free
  5919  002F3E  0100               	movlb	0	; () banked
  5920  002F40  518F               	movf	?_ReadRX232& (0+255),w,b
  5921  002F42  1190               	iorwf	(?_ReadRX232+1)& (0+255),w,b
  5922  002F44  B4D8               	btfsc	status,2,c
  5923  002F46  EFA7  F017         	goto	u8781
  5924  002F4A  EFA9  F017         	goto	u8780
  5925  002F4E                     u8781:
  5926  002F4E  EFBE  F017         	goto	l763
  5927  002F52                     u8780:
  5928  002F52                     
  5929                           ; BSR set to: 0
  5930                           ;main.c: 119:             if(ValidateCmd() ==1){
  5931  002F52  ECC2  F017         	call	_ValidateCmd	;wreg free
  5932  002F56                     
  5933                           ;main.c: 126:             printf("\r\nEnter Command : ");
  5934  002F56  0E35               	movlw	low STR_9
  5935  002F58  0100               	movlb	0	; () banked
  5936  002F5A  6F7D               	movwf	printf@fmt& (0+255),b
  5937  002F5C  0EFF               	movlw	high STR_9
  5938  002F5E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5939  002F60  EC8A  F028         	call	_printf	;wreg free
  5940  002F64                     
  5941                           ;main.c: 127:             strcpy(Command, "");
  5942  002F64  0EE3               	movlw	low _Command
  5943  002F66  6E09               	movwf	strcpy@dest^0,c
  5944  002F68  0E01               	movlw	high _Command
  5945  002F6A  6E0A               	movwf	(strcpy@dest+1)^0,c
  5946  002F6C  0EA8               	movlw	low (STR_36+20)
  5947  002F6E  6E0B               	movwf	strcpy@src^0,c
  5948  002F70  0EFE               	movlw	high (STR_36+20)
  5949  002F72  6E0C               	movwf	(strcpy@src+1)^0,c
  5950  002F74  ECA8  F024         	call	_strcpy	;wreg free
  5951                           
  5952                           ;main.c: 129:         }else{
  5953  002F78  EF06  F017         	goto	l8572
  5954  002F7C                     l763:
  5955                           
  5956                           ; BSR set to: 0
  5957  002F7C  EF06  F017         	goto	l8572
  5958  002F80  EF93  F000         	goto	start
  5959  002F84                     __end_of_main:
  5960                           	opt callstack 0
  5961                           
  5962 ;; *************** function _ValidateCmd *****************
  5963 ;; Defined at:
  5964 ;;		line 268 in file "RS232.c"
  5965 ;; Parameters:    Size  Location     Type
  5966 ;;		None
  5967 ;; Auto vars:     Size  Location     Type
  5968 ;;  ConfName       20   40[BANK1 ] unsigned char [20]
  5969 ;;  MaxChars        2    0        int 
  5970 ;;  ConfName       20   20[BANK1 ] unsigned char [20]
  5971 ;;  MaxChars        2    0        int 
  5972 ;;  ConfName       20    0[BANK1 ] unsigned char [20]
  5973 ;;  MaxChars        2    0        int 
  5974 ;;  i               2    0        int 
  5975 ;; Return value:  Size  Location     Type
  5976 ;;                  1    wreg      _Bool 
  5977 ;; Registers used:
  5978 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5979 ;; Tracked objects:
  5980 ;;		On entry : 0/0
  5981 ;;		On exit  : 0/0
  5982 ;;		Unchanged: 0/0
  5983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5985 ;;      Locals:         0       0      68       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5987 ;;      Totals:         0       0      68       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5988 ;;Total ram usage:       68 bytes
  5989 ;; Hardware stack levels used:    1
  5990 ;; Hardware stack levels required when called:   15
  5991 ;; This function calls:
  5992 ;;		_InitialiseString
  5993 ;;		_SaveCardDat
  5994 ;;		_TogDebug
  5995 ;;		_strcmp
  5996 ;; This function is called by:
  5997 ;;		_main
  5998 ;; This function uses a non-reentrant model
  5999 ;;
  6000                           
  6001                           	psect	text1
  6002  002F84                     __ptext1:
  6003                           	opt callstack 0
  6004  002F84                     _ValidateCmd:
  6005                           	opt callstack 15
  6006  002F84                     
  6007                           ;RS232.c: 274:     if(!strcmp(Command,"debug")){
  6008  002F84  0EE3               	movlw	low _Command
  6009  002F86  6E05               	movwf	strcmp@l^0,c
  6010  002F88  0E01               	movlw	high _Command
  6011  002F8A  6E06               	movwf	(strcmp@l+1)^0,c
  6012  002F8C  0EE5               	movlw	low STR_136
  6013  002F8E  6E07               	movwf	strcmp@r^0,c
  6014  002F90  0EFF               	movlw	high STR_136
  6015  002F92  6E08               	movwf	(strcmp@r+1)^0,c
  6016  002F94  ECA7  F021         	call	_strcmp	;wreg free
  6017  002F98  5005               	movf	?_strcmp^0,w,c
  6018  002F9A  1006               	iorwf	(?_strcmp+1)^0,w,c
  6019  002F9C  A4D8               	btfss	status,2,c
  6020  002F9E  EFD3  F017         	goto	u8661
  6021  002FA2  EFD5  F017         	goto	u8660
  6022  002FA6                     u8661:
  6023  002FA6  EFDA  F017         	goto	l8476
  6024  002FAA                     u8660:
  6025  002FAA                     
  6026                           ;RS232.c: 275:         TogDebug();
  6027  002FAA  ECD7  F027         	call	_TogDebug	;wreg free
  6028  002FAE                     l8470:
  6029                           
  6030                           ;RS232.c: 276:         return 1;
  6031  002FAE  0E01               	movlw	1
  6032  002FB0  EF8F  F018         	goto	l1185
  6033  002FB4                     l8476:
  6034  002FB4  0EE3               	movlw	low _Command
  6035  002FB6  6E05               	movwf	strcmp@l^0,c
  6036  002FB8  0E01               	movlw	high _Command
  6037  002FBA  6E06               	movwf	(strcmp@l+1)^0,c
  6038  002FBC  0EFD               	movlw	low STR_138
  6039  002FBE  6E07               	movwf	strcmp@r^0,c
  6040  002FC0  0EFF               	movlw	high STR_138
  6041  002FC2  6E08               	movwf	(strcmp@r+1)^0,c
  6042  002FC4  ECA7  F021         	call	_strcmp	;wreg free
  6043  002FC8  5005               	movf	?_strcmp^0,w,c
  6044  002FCA  1006               	iorwf	(?_strcmp+1)^0,w,c
  6045  002FCC  A4D8               	btfss	status,2,c
  6046  002FCE  EFEB  F017         	goto	u8671
  6047  002FD2  EFED  F017         	goto	u8670
  6048  002FD6                     u8671:
  6049  002FD6  EFF2  F017         	goto	l8486
  6050  002FDA                     u8670:
  6051  002FDA                     
  6052                           ;RS232.c: 278:         InitialiseString(0);
  6053  002FDA  0E00               	movlw	0
  6054  002FDC  ECB9  F009         	call	_InitialiseString
  6055  002FE0  EFD7  F017         	goto	l8470
  6056  002FE4                     l8486:
  6057  002FE4  0EE3               	movlw	low _Command
  6058  002FE6  6E05               	movwf	strcmp@l^0,c
  6059  002FE8  0E01               	movlw	high _Command
  6060  002FEA  6E06               	movwf	(strcmp@l+1)^0,c
  6061  002FEC  0EDE               	movlw	low STR_140
  6062  002FEE  6E07               	movwf	strcmp@r^0,c
  6063  002FF0  0EFF               	movlw	high STR_140
  6064  002FF2  6E08               	movwf	(strcmp@r+1)^0,c
  6065  002FF4  ECA7  F021         	call	_strcmp	;wreg free
  6066  002FF8  5005               	movf	?_strcmp^0,w,c
  6067  002FFA  1006               	iorwf	(?_strcmp+1)^0,w,c
  6068  002FFC  A4D8               	btfss	status,2,c
  6069  002FFE  EF03  F018         	goto	u8681
  6070  003002  EF05  F018         	goto	u8680
  6071  003006                     u8681:
  6072  003006  EF26  F018         	goto	l8502
  6073  00300A                     u8680:
  6074  00300A                     
  6075                           ;RS232.c: 281:         char ConfName[20] = "Serial Number";
  6076  00300A  EE22  F028         	lfsr	2,ValidateCmd@F10792
  6077  00300E  EE11  F09D         	lfsr	1,ValidateCmd@ConfName
  6078  003012  0E13               	movlw	19
  6079  003014                     u8691:
  6080  003014  CFDB FFE3          	movff	plusw2,plusw1
  6081  003018  06E8               	decf	wreg,f,c
  6082  00301A  E2FC               	bc	u8691
  6083  00301C                     
  6084                           ;RS232.c: 284:         SaveCardDat(ConfName,0x0300,0x0300,MaxChars);
  6085  00301C  0E9D               	movlw	low ValidateCmd@ConfName
  6086  00301E  0100               	movlb	0	; () banked
  6087  003020  6F93               	movwf	SaveCardDat@Name& (0+255),b
  6088  003022  0E01               	movlw	high ValidateCmd@ConfName
  6089  003024  6F94               	movwf	(SaveCardDat@Name+1)& (0+255),b
  6090  003026  0E03               	movlw	3
  6091  003028  6F96               	movwf	(SaveCardDat@MBAddress+1)& (0+255),b
  6092  00302A  0E00               	movlw	0
  6093  00302C  6F95               	movwf	SaveCardDat@MBAddress& (0+255),b
  6094  00302E  0E03               	movlw	3
  6095  003030  6F98               	movwf	(SaveCardDat@dataeeAddr+1)& (0+255),b
  6096  003032  0E00               	movlw	0
  6097  003034  6F97               	movwf	SaveCardDat@dataeeAddr& (0+255),b
  6098  003036  0E00               	movlw	0
  6099  003038  6F9A               	movwf	(SaveCardDat@NumBytes+1)& (0+255),b
  6100  00303A  0E0A               	movlw	10
  6101  00303C  6F99               	movwf	SaveCardDat@NumBytes& (0+255),b
  6102  00303E  EC06  F016         	call	_SaveCardDat	;wreg free
  6103  003042                     
  6104                           ;RS232.c: 285:         InitialiseString(1);
  6105  003042  0E01               	movlw	1
  6106  003044  ECB9  F009         	call	_InitialiseString
  6107  003048  EFD7  F017         	goto	l8470
  6108  00304C                     l8502:
  6109  00304C  0EE3               	movlw	low _Command
  6110  00304E  6E05               	movwf	strcmp@l^0,c
  6111  003050  0E01               	movlw	high _Command
  6112  003052  6E06               	movwf	(strcmp@l+1)^0,c
  6113  003054  0EF0               	movlw	low STR_142
  6114  003056  6E07               	movwf	strcmp@r^0,c
  6115  003058  0EFF               	movlw	high STR_142
  6116  00305A  6E08               	movwf	(strcmp@r+1)^0,c
  6117  00305C  ECA7  F021         	call	_strcmp	;wreg free
  6118  003060  5005               	movf	?_strcmp^0,w,c
  6119  003062  1006               	iorwf	(?_strcmp+1)^0,w,c
  6120  003064  A4D8               	btfss	status,2,c
  6121  003066  EF37  F018         	goto	u8701
  6122  00306A  EF39  F018         	goto	u8700
  6123  00306E                     u8701:
  6124  00306E  EF5A  F018         	goto	l8518
  6125  003072                     u8700:
  6126  003072                     
  6127                           ;RS232.c: 288:         char ConfName[20] = "Part Number";
  6128  003072  EE22  F014         	lfsr	2,ValidateCmd@F10795
  6129  003076  EE11  F0B1         	lfsr	1,ValidateCmd@ConfName_1827
  6130  00307A  0E13               	movlw	19
  6131  00307C                     u8711:
  6132  00307C  CFDB FFE3          	movff	plusw2,plusw1
  6133  003080  06E8               	decf	wreg,f,c
  6134  003082  E2FC               	bc	u8711
  6135  003084                     
  6136                           ;RS232.c: 290:         SaveCardDat(ConfName,0x0100,0x0100,MaxChars);
  6137  003084  0EB1               	movlw	low ValidateCmd@ConfName_1827
  6138  003086  0100               	movlb	0	; () banked
  6139  003088  6F93               	movwf	SaveCardDat@Name& (0+255),b
  6140  00308A  0E01               	movlw	high ValidateCmd@ConfName_1827
  6141  00308C  6F94               	movwf	(SaveCardDat@Name+1)& (0+255),b
  6142  00308E  0E01               	movlw	1
  6143  003090  6F96               	movwf	(SaveCardDat@MBAddress+1)& (0+255),b
  6144  003092  0E00               	movlw	0
  6145  003094  6F95               	movwf	SaveCardDat@MBAddress& (0+255),b
  6146  003096  0E01               	movlw	1
  6147  003098  6F98               	movwf	(SaveCardDat@dataeeAddr+1)& (0+255),b
  6148  00309A  0E00               	movlw	0
  6149  00309C  6F97               	movwf	SaveCardDat@dataeeAddr& (0+255),b
  6150  00309E  0E00               	movlw	0
  6151  0030A0  6F9A               	movwf	(SaveCardDat@NumBytes+1)& (0+255),b
  6152  0030A2  0E10               	movlw	16
  6153  0030A4  6F99               	movwf	SaveCardDat@NumBytes& (0+255),b
  6154  0030A6  EC06  F016         	call	_SaveCardDat	;wreg free
  6155  0030AA                     
  6156                           ;RS232.c: 291:         InitialiseString(1);
  6157  0030AA  0E01               	movlw	1
  6158  0030AC  ECB9  F009         	call	_InitialiseString
  6159  0030B0  EFD7  F017         	goto	l8470
  6160  0030B4                     l8518:
  6161  0030B4  0EE3               	movlw	low _Command
  6162  0030B6  6E05               	movwf	strcmp@l^0,c
  6163  0030B8  0E01               	movlw	high _Command
  6164  0030BA  6E06               	movwf	(strcmp@l+1)^0,c
  6165  0030BC  0EF9               	movlw	low STR_144
  6166  0030BE  6E07               	movwf	strcmp@r^0,c
  6167  0030C0  0EFF               	movlw	high STR_144
  6168  0030C2  6E08               	movwf	(strcmp@r+1)^0,c
  6169  0030C4  ECA7  F021         	call	_strcmp	;wreg free
  6170  0030C8  5005               	movf	?_strcmp^0,w,c
  6171  0030CA  1006               	iorwf	(?_strcmp+1)^0,w,c
  6172  0030CC  A4D8               	btfss	status,2,c
  6173  0030CE  EF6B  F018         	goto	u8721
  6174  0030D2  EF6D  F018         	goto	u8720
  6175  0030D6                     u8721:
  6176  0030D6  EF8E  F018         	goto	l8534
  6177  0030DA                     u8720:
  6178  0030DA                     
  6179                           ;RS232.c: 294:         char ConfName[20] = "Revision";
  6180  0030DA  EE22  F000         	lfsr	2,ValidateCmd@F10798
  6181  0030DE  EE11  F0C5         	lfsr	1,ValidateCmd@ConfName_1831
  6182  0030E2  0E13               	movlw	19
  6183  0030E4                     u8731:
  6184  0030E4  CFDB FFE3          	movff	plusw2,plusw1
  6185  0030E8  06E8               	decf	wreg,f,c
  6186  0030EA  E2FC               	bc	u8731
  6187  0030EC                     
  6188                           ;RS232.c: 297:         SaveCardDat(ConfName,0x0200,0x0200,MaxChars);
  6189  0030EC  0EC5               	movlw	low ValidateCmd@ConfName_1831
  6190  0030EE  0100               	movlb	0	; () banked
  6191  0030F0  6F93               	movwf	SaveCardDat@Name& (0+255),b
  6192  0030F2  0E01               	movlw	high ValidateCmd@ConfName_1831
  6193  0030F4  6F94               	movwf	(SaveCardDat@Name+1)& (0+255),b
  6194  0030F6  0E02               	movlw	2
  6195  0030F8  6F96               	movwf	(SaveCardDat@MBAddress+1)& (0+255),b
  6196  0030FA  0E00               	movlw	0
  6197  0030FC  6F95               	movwf	SaveCardDat@MBAddress& (0+255),b
  6198  0030FE  0E02               	movlw	2
  6199  003100  6F98               	movwf	(SaveCardDat@dataeeAddr+1)& (0+255),b
  6200  003102  0E00               	movlw	0
  6201  003104  6F97               	movwf	SaveCardDat@dataeeAddr& (0+255),b
  6202  003106  0E00               	movlw	0
  6203  003108  6F9A               	movwf	(SaveCardDat@NumBytes+1)& (0+255),b
  6204  00310A  0E02               	movlw	2
  6205  00310C  6F99               	movwf	SaveCardDat@NumBytes& (0+255),b
  6206  00310E  EC06  F016         	call	_SaveCardDat	;wreg free
  6207  003112                     
  6208                           ;RS232.c: 298:         InitialiseString(1);
  6209  003112  0E01               	movlw	1
  6210  003114  ECB9  F009         	call	_InitialiseString
  6211  003118  EFD7  F017         	goto	l8470
  6212  00311C                     l8534:
  6213                           
  6214                           ;RS232.c: 302:         return 0;
  6215  00311C  0E00               	movlw	0
  6216  00311E                     l1185:
  6217  00311E  0012               	return		;funcret
  6218  003120                     __end_of_ValidateCmd:
  6219                           	opt callstack 0
  6220                           
  6221 ;; *************** function _TogDebug *****************
  6222 ;; Defined at:
  6223 ;;		line 195 in file "RS232.c"
  6224 ;; Parameters:    Size  Location     Type
  6225 ;;		None
  6226 ;; Auto vars:     Size  Location     Type
  6227 ;;		None
  6228 ;; Return value:  Size  Location     Type
  6229 ;;                  1    wreg      void 
  6230 ;; Registers used:
  6231 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6232 ;; Tracked objects:
  6233 ;;		On entry : 0/0
  6234 ;;		On exit  : 0/0
  6235 ;;		Unchanged: 0/0
  6236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6241 ;;Total ram usage:        0 bytes
  6242 ;; Hardware stack levels used:    1
  6243 ;; Hardware stack levels required when called:   13
  6244 ;; This function calls:
  6245 ;;		_printf
  6246 ;; This function is called by:
  6247 ;;		_ValidateCmd
  6248 ;; This function uses a non-reentrant model
  6249 ;;
  6250                           
  6251                           	psect	text2
  6252  004FAE                     __ptext2:
  6253                           	opt callstack 0
  6254  004FAE                     _TogDebug:
  6255                           	opt callstack 16
  6256  004FAE                     
  6257                           ;RS232.c: 197:     if(Debug==0){
  6258  004FAE  0100               	movlb	0	; () banked
  6259  004FB0  51F5               	movf	_Debug& (0+255),w,b
  6260  004FB2  A4D8               	btfss	status,2,c
  6261  004FB4  EFDE  F027         	goto	u7971
  6262  004FB8  EFE0  F027         	goto	u7970
  6263  004FBC                     u7971:
  6264  004FBC  EFEA  F027         	goto	l7914
  6265  004FC0                     u7970:
  6266  004FC0                     
  6267                           ; BSR set to: 0
  6268                           ;RS232.c: 198:         Debug =1;
  6269  004FC0  0E01               	movlw	1
  6270  004FC2  6FF5               	movwf	_Debug& (0+255),b
  6271  004FC4                     
  6272                           ; BSR set to: 0
  6273                           ;RS232.c: 199:         printf("\r\nDebug Enabled\r\n");
  6274  004FC4  0E48               	movlw	low STR_125
  6275  004FC6  6F7D               	movwf	printf@fmt& (0+255),b
  6276  004FC8  0EFF               	movlw	high STR_125
  6277  004FCA  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6278  004FCC  EC8A  F028         	call	_printf	;wreg free
  6279                           
  6280                           ;RS232.c: 200:     }else{
  6281  004FD0  EFF2  F027         	goto	l1156
  6282  004FD4                     l7914:
  6283                           
  6284                           ; BSR set to: 0
  6285                           ;RS232.c: 201:         Debug =0;
  6286  004FD4  0E00               	movlw	0
  6287  004FD6  6FF5               	movwf	_Debug& (0+255),b
  6288  004FD8                     
  6289                           ; BSR set to: 0
  6290                           ;RS232.c: 202:         printf("\r\nDebug Disabled\r\n");
  6291  004FD8  0E0F               	movlw	low STR_126
  6292  004FDA  6F7D               	movwf	printf@fmt& (0+255),b
  6293  004FDC  0EFF               	movlw	high STR_126
  6294  004FDE  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6295  004FE0  EC8A  F028         	call	_printf	;wreg free
  6296  004FE4                     l1156:
  6297  004FE4  0012               	return		;funcret
  6298  004FE6                     __end_of_TogDebug:
  6299                           	opt callstack 0
  6300                           
  6301 ;; *************** function _SaveCardDat *****************
  6302 ;; Defined at:
  6303 ;;		line 220 in file "RS232.c"
  6304 ;; Parameters:    Size  Location     Type
  6305 ;;  Name            2   51[BANK0 ] PTR unsigned char 
  6306 ;;		 -> ValidateCmd@ConfName_1831(20), ValidateCmd@ConfName_1827(20), ValidateCmd@ConfName(20), 
  6307 ;;  MBAddress       2   53[BANK0 ] unsigned int 
  6308 ;;  dataeeAddr      2   55[BANK0 ] unsigned short 
  6309 ;;  NumBytes        2   57[BANK0 ] int 
  6310 ;; Auto vars:     Size  Location     Type
  6311 ;;  i               2   65[BANK0 ] int 
  6312 ;;  dataeeAddrWr    2   63[BANK0 ] unsigned short 
  6313 ;;  Conf            1   67[BANK0 ] unsigned char 
  6314 ;;  readData        1    0        unsigned char 
  6315 ;; Return value:  Size  Location     Type
  6316 ;;                  1    wreg      void 
  6317 ;; Registers used:
  6318 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6319 ;; Tracked objects:
  6320 ;;		On entry : 0/0
  6321 ;;		On exit  : 0/0
  6322 ;;		Unchanged: 0/0
  6323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6324 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6325 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6326 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6327 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6328 ;;Total ram usage:       17 bytes
  6329 ;; Hardware stack levels used:    1
  6330 ;; Hardware stack levels required when called:   14
  6331 ;; This function calls:
  6332 ;;		_ClearEEAddRange
  6333 ;;		_DATAEE_WriteByte
  6334 ;;		_EUSART2_Read
  6335 ;;		_EUSART2_is_rx_ready
  6336 ;;		_ReadRX232
  6337 ;;		_printf
  6338 ;;		_strcpy
  6339 ;;		_strlen
  6340 ;; This function is called by:
  6341 ;;		_ValidateCmd
  6342 ;; This function uses a non-reentrant model
  6343 ;;
  6344                           
  6345                           	psect	text3
  6346  002C0C                     __ptext3:
  6347                           	opt callstack 0
  6348  002C0C                     _SaveCardDat:
  6349                           	opt callstack 15
  6350  002C0C                     
  6351                           ;RS232.c: 223:     unsigned char Conf, readData;;RS232.c: 224:     uint16_t dataeeAddrWr
      +                          k = dataeeAddr;
  6352  002C0C  C097  F09F         	movff	SaveCardDat@dataeeAddr,SaveCardDat@dataeeAddrWrk
  6353  002C10  C098  F0A0         	movff	SaveCardDat@dataeeAddr+1,SaveCardDat@dataeeAddrWrk+1
  6354  002C14                     
  6355                           ;RS232.c: 226:     printf("\r\nEnter card %s (max %i characters): ", Name, NumBytes);
  6356  002C14  0E1B               	movlw	low STR_128
  6357  002C16  0100               	movlb	0	; () banked
  6358  002C18  6F7D               	movwf	printf@fmt& (0+255),b
  6359  002C1A  0EFA               	movlw	high STR_128
  6360  002C1C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6361  002C1E  C093  F07F         	movff	SaveCardDat@Name,?_printf+2
  6362  002C22  C094  F080         	movff	SaveCardDat@Name+1,?_printf+3
  6363  002C26  C099  F081         	movff	SaveCardDat@NumBytes,?_printf+4
  6364  002C2A  C09A  F082         	movff	SaveCardDat@NumBytes+1,?_printf+5
  6365  002C2E  EC8A  F028         	call	_printf	;wreg free
  6366  002C32                     
  6367                           ;RS232.c: 228:     strcpy(Command, "");
  6368  002C32  0EE3               	movlw	low _Command
  6369  002C34  6E09               	movwf	strcpy@dest^0,c
  6370  002C36  0E01               	movlw	high _Command
  6371  002C38  6E0A               	movwf	(strcpy@dest+1)^0,c
  6372  002C3A  0EA8               	movlw	low (STR_36+20)
  6373  002C3C  6E0B               	movwf	strcpy@src^0,c
  6374  002C3E  0EFE               	movlw	high (STR_36+20)
  6375  002C40  6E0C               	movwf	(strcpy@src+1)^0,c
  6376  002C42  ECA8  F024         	call	_strcpy	;wreg free
  6377  002C46                     l7926:
  6378  002C46  C099  F08F         	movff	SaveCardDat@NumBytes,ReadRX232@NumChars
  6379  002C4A  C09A  F090         	movff	SaveCardDat@NumBytes+1,ReadRX232@NumChars+1
  6380  002C4E  ECF7  F01C         	call	_ReadRX232	;wreg free
  6381  002C52  0100               	movlb	0	; () banked
  6382  002C54  518F               	movf	?_ReadRX232& (0+255),w,b
  6383  002C56  1190               	iorwf	(?_ReadRX232+1)& (0+255),w,b
  6384  002C58  B4D8               	btfsc	status,2,c
  6385  002C5A  EF31  F016         	goto	u7981
  6386  002C5E  EF33  F016         	goto	u7980
  6387  002C62                     u7981:
  6388  002C62  EF23  F016         	goto	l7926
  6389  002C66                     u7980:
  6390  002C66                     
  6391                           ; BSR set to: 0
  6392                           ;RS232.c: 231:     printf("\r\nEntered: %s \r\n Confirm  Y|N?: ", Command);
  6393  002C66  0E18               	movlw	low STR_130
  6394  002C68  6F7D               	movwf	printf@fmt& (0+255),b
  6395  002C6A  0EFC               	movlw	high STR_130
  6396  002C6C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6397  002C6E  0EE3               	movlw	low _Command
  6398  002C70  6F7F               	movwf	(?_printf+2)& (0+255),b
  6399  002C72  0E01               	movlw	high _Command
  6400  002C74  6F80               	movwf	(?_printf+3)& (0+255),b
  6401  002C76  EC8A  F028         	call	_printf	;wreg free
  6402  002C7A                     l7930:
  6403  002C7A  ECE3  F028         	call	_EUSART2_is_rx_ready	;wreg free
  6404  002C7E  0900               	iorlw	0
  6405  002C80  B4D8               	btfsc	status,2,c
  6406  002C82  EF45  F016         	goto	u7991
  6407  002C86  EF47  F016         	goto	u7990
  6408  002C8A                     u7991:
  6409  002C8A  EF3D  F016         	goto	l7930
  6410  002C8E                     u7990:
  6411  002C8E                     
  6412                           ;RS232.c: 236:     Conf = EUSART2_Read();
  6413  002C8E  EC92  F025         	call	_EUSART2_Read	;wreg free
  6414  002C92  0100               	movlb	0	; () banked
  6415  002C94  6FA3               	movwf	SaveCardDat@Conf& (0+255),b
  6416  002C96                     
  6417                           ; BSR set to: 0
  6418                           ;RS232.c: 239:     if(Conf == 0x79 || Conf == 0x59){
  6419  002C96  0E79               	movlw	121
  6420  002C98  19A3               	xorwf	SaveCardDat@Conf& (0+255),w,b
  6421  002C9A  B4D8               	btfsc	status,2,c
  6422  002C9C  EF52  F016         	goto	u8001
  6423  002CA0  EF54  F016         	goto	u8000
  6424  002CA4                     u8001:
  6425  002CA4  EF5D  F016         	goto	l1173
  6426  002CA8                     u8000:
  6427  002CA8                     
  6428                           ; BSR set to: 0
  6429  002CA8  0E59               	movlw	89
  6430  002CAA  19A3               	xorwf	SaveCardDat@Conf& (0+255),w,b
  6431  002CAC  A4D8               	btfss	status,2,c
  6432  002CAE  EF5B  F016         	goto	u8011
  6433  002CB2  EF5D  F016         	goto	u8010
  6434  002CB6                     u8011:
  6435  002CB6  EFD5  F016         	goto	l7962
  6436  002CBA                     u8010:
  6437  002CBA                     l1173:
  6438  002CBA                     
  6439                           ; BSR set to: 0
  6440                           ;RS232.c: 241:         printf("Y\r\nSaving %s\r\n", Name);
  6441  002CBA  0E8B               	movlw	low STR_131
  6442  002CBC  6F7D               	movwf	printf@fmt& (0+255),b
  6443  002CBE  0EFF               	movlw	high STR_131
  6444  002CC0  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6445  002CC2  C093  F07F         	movff	SaveCardDat@Name,?_printf+2
  6446  002CC6  C094  F080         	movff	SaveCardDat@Name+1,?_printf+3
  6447  002CCA  EC8A  F028         	call	_printf	;wreg free
  6448  002CCE                     
  6449                           ;RS232.c: 242:         printf("Num Chars: %i \r\n", strlen(Command));
  6450  002CCE  0EE3               	movlw	low _Command
  6451  002CD0  6E05               	movwf	strlen@s^0,c
  6452  002CD2  0E01               	movlw	high _Command
  6453  002CD4  6E06               	movwf	(strlen@s+1)^0,c
  6454  002CD6  EC3B  F026         	call	_strlen	;wreg free
  6455  002CDA  C005  F09D         	movff	?_strlen,_SaveCardDat$2889
  6456  002CDE  C006  F09E         	movff	?_strlen+1,_SaveCardDat$2889+1
  6457  002CE2                     
  6458                           ;RS232.c: 242:         printf("Num Chars: %i \r\n", strlen(Command));
  6459  002CE2  0E5A               	movlw	low STR_132
  6460  002CE4  0100               	movlb	0	; () banked
  6461  002CE6  6F7D               	movwf	printf@fmt& (0+255),b
  6462  002CE8  0EFF               	movlw	high STR_132
  6463  002CEA  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6464  002CEC  C09D  F07F         	movff	_SaveCardDat$2889,?_printf+2
  6465  002CF0  C09E  F080         	movff	_SaveCardDat$2889+1,?_printf+3
  6466  002CF4  EC8A  F028         	call	_printf	;wreg free
  6467  002CF8                     
  6468                           ;RS232.c: 246:         ClearEEAddRange(dataeeAddr,NumBytes);
  6469  002CF8  C097  F08F         	movff	SaveCardDat@dataeeAddr,ClearEEAddRange@StartAdd
  6470  002CFC  C098  F090         	movff	SaveCardDat@dataeeAddr+1,ClearEEAddRange@StartAdd+1
  6471  002D00  C099  F091         	movff	SaveCardDat@NumBytes,ClearEEAddRange@NumBytes
  6472  002D04  C09A  F092         	movff	SaveCardDat@NumBytes+1,ClearEEAddRange@NumBytes+1
  6473  002D08  EC64  F025         	call	_ClearEEAddRange	;wreg free
  6474  002D0C                     
  6475                           ;RS232.c: 249:         for (i = 0; i < strlen(Command); i++){
  6476  002D0C  0E00               	movlw	0
  6477  002D0E  0100               	movlb	0	; () banked
  6478  002D10  6FA2               	movwf	(SaveCardDat@i+1)& (0+255),b
  6479  002D12  0E00               	movlw	0
  6480  002D14  6FA1               	movwf	SaveCardDat@i& (0+255),b
  6481  002D16  EFAD  F016         	goto	l7956
  6482  002D1A                     l7948:
  6483                           
  6484                           ; BSR set to: 0
  6485                           ;RS232.c: 250:             DATAEE_WriteByte(dataeeAddrWrk, Command[i]);
  6486  002D1A  C09F  F005         	movff	SaveCardDat@dataeeAddrWrk,DATAEE_WriteByte@bAdd
  6487  002D1E  C0A0  F006         	movff	SaveCardDat@dataeeAddrWrk+1,DATAEE_WriteByte@bAdd+1
  6488  002D22  0EE3               	movlw	low _Command
  6489  002D24  25A1               	addwf	SaveCardDat@i& (0+255),w,b
  6490  002D26  6ED9               	movwf	fsr2l,c
  6491  002D28  0E01               	movlw	high _Command
  6492  002D2A  21A2               	addwfc	(SaveCardDat@i+1)& (0+255),w,b
  6493  002D2C  6EDA               	movwf	fsr2h,c
  6494  002D2E  50DF               	movf	indf2,w,c
  6495  002D30  6E07               	movwf	DATAEE_WriteByte@bData^0,c
  6496  002D32  ECD2  F026         	call	_DATAEE_WriteByte	;wreg free
  6497  002D36                     
  6498                           ;RS232.c: 251:             dataeeAddrWrk++;
  6499  002D36  0100               	movlb	0	; () banked
  6500  002D38  4B9F               	infsnz	SaveCardDat@dataeeAddrWrk& (0+255),f,b
  6501  002D3A  2BA0               	incf	(SaveCardDat@dataeeAddrWrk+1)& (0+255),f,b
  6502  002D3C                     
  6503                           ; BSR set to: 0
  6504                           ;RS232.c: 252:             _delay((unsigned long)((50)*(32000000/4000.0)));
  6505  002D3C  0E03               	movlw	3
  6506  002D3E  0100               	movlb	0	; () banked
  6507  002D40  6F9C               	movwf	(??_SaveCardDat+1)& (0+255),b
  6508  002D42  0E08               	movlw	8
  6509  002D44  6F9B               	movwf	??_SaveCardDat& (0+255),b
  6510  002D46  0E77               	movlw	119
  6511  002D48                     u8797:
  6512  002D48  2EE8               	decfsz	wreg,f,c
  6513  002D4A  D7FE               	bra	u8797
  6514  002D4C  2F9B               	decfsz	??_SaveCardDat& (0+255),f,b
  6515  002D4E  D7FC               	bra	u8797
  6516  002D50  2F9C               	decfsz	(??_SaveCardDat+1)& (0+255),f,b
  6517  002D52  D7FA               	bra	u8797
  6518  002D54                     
  6519                           ;RS232.c: 253:         }
  6520  002D54  0100               	movlb	0	; () banked
  6521  002D56  4BA1               	infsnz	SaveCardDat@i& (0+255),f,b
  6522  002D58  2BA2               	incf	(SaveCardDat@i+1)& (0+255),f,b
  6523  002D5A                     l7956:
  6524                           
  6525                           ; BSR set to: 0
  6526  002D5A  0EE3               	movlw	low _Command
  6527  002D5C  6E05               	movwf	strlen@s^0,c
  6528  002D5E  0E01               	movlw	high _Command
  6529  002D60  6E06               	movwf	(strlen@s+1)^0,c
  6530  002D62  EC3B  F026         	call	_strlen	;wreg free
  6531  002D66  5005               	movf	?_strlen^0,w,c
  6532  002D68  0100               	movlb	0	; () banked
  6533  002D6A  5DA1               	subwf	SaveCardDat@i& (0+255),w,b
  6534  002D6C  5006               	movf	(?_strlen+1)^0,w,c
  6535  002D6E  59A2               	subwfb	(SaveCardDat@i+1)& (0+255),w,b
  6536  002D70  A0D8               	btfss	status,0,c
  6537  002D72  EFBD  F016         	goto	u8021
  6538  002D76  EFBF  F016         	goto	u8020
  6539  002D7A                     u8021:
  6540  002D7A  EF8D  F016         	goto	l7948
  6541  002D7E                     u8020:
  6542  002D7E                     
  6543                           ; BSR set to: 0
  6544                           ;RS232.c: 255:         printf("%s Saved. \r\n",Name);
  6545  002D7E  0EA9               	movlw	low STR_133
  6546  002D80  6F7D               	movwf	printf@fmt& (0+255),b
  6547  002D82  0EFF               	movlw	high STR_133
  6548  002D84  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6549  002D86  C093  F07F         	movff	SaveCardDat@Name,?_printf+2
  6550  002D8A  C094  F080         	movff	SaveCardDat@Name+1,?_printf+3
  6551  002D8E  EC8A  F028         	call	_printf	;wreg free
  6552  002D92                     
  6553                           ;RS232.c: 258:         strcpy(Command, "");
  6554  002D92  0EE3               	movlw	low _Command
  6555  002D94  6E09               	movwf	strcpy@dest^0,c
  6556  002D96  0E01               	movlw	high _Command
  6557  002D98  6E0A               	movwf	(strcpy@dest+1)^0,c
  6558  002D9A  0EA8               	movlw	low (STR_36+20)
  6559  002D9C  6E0B               	movwf	strcpy@src^0,c
  6560  002D9E  0EFE               	movlw	high (STR_36+20)
  6561  002DA0  6E0C               	movwf	(strcpy@src+1)^0,c
  6562  002DA2  ECA8  F024         	call	_strcpy	;wreg free
  6563                           
  6564                           ;RS232.c: 260:     }else if(Conf == 0x4e || Conf == 0x6e){
  6565  002DA6  EFED  F016         	goto	l1181
  6566  002DAA                     l7962:
  6567                           
  6568                           ; BSR set to: 0
  6569  002DAA  0E4E               	movlw	78
  6570  002DAC  19A3               	xorwf	SaveCardDat@Conf& (0+255),w,b
  6571  002DAE  B4D8               	btfsc	status,2,c
  6572  002DB0  EFDC  F016         	goto	u8031
  6573  002DB4  EFDE  F016         	goto	u8030
  6574  002DB8                     u8031:
  6575  002DB8  EFE7  F016         	goto	l7966
  6576  002DBC                     u8030:
  6577  002DBC                     
  6578                           ; BSR set to: 0
  6579  002DBC  0E6E               	movlw	110
  6580  002DBE  19A3               	xorwf	SaveCardDat@Conf& (0+255),w,b
  6581  002DC0  A4D8               	btfss	status,2,c
  6582  002DC2  EFE5  F016         	goto	u8041
  6583  002DC6  EFE7  F016         	goto	u8040
  6584  002DCA                     u8041:
  6585  002DCA  EFED  F016         	goto	l1181
  6586  002DCE                     u8040:
  6587  002DCE                     l7966:
  6588                           
  6589                           ; BSR set to: 0
  6590                           ;RS232.c: 261:         printf("Not saved\r\n");
  6591  002DCE  0EB6               	movlw	low STR_135
  6592  002DD0  6F7D               	movwf	printf@fmt& (0+255),b
  6593  002DD2  0EFF               	movlw	high STR_135
  6594  002DD4  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6595  002DD6  EC8A  F028         	call	_printf	;wreg free
  6596  002DDA                     l1181:
  6597  002DDA  0012               	return		;funcret
  6598  002DDC                     __end_of_SaveCardDat:
  6599                           	opt callstack 0
  6600                           
  6601 ;; *************** function _ReadRX232 *****************
  6602 ;; Defined at:
  6603 ;;		line 140 in file "RS232.c"
  6604 ;; Parameters:    Size  Location     Type
  6605 ;;  NumChars        2   47[BANK0 ] int 
  6606 ;; Auto vars:     Size  Location     Type
  6607 ;;  temp            2   84[COMRAM] unsigned char [2]
  6608 ;; Return value:  Size  Location     Type
  6609 ;;                  2   47[BANK0 ] int 
  6610 ;; Registers used:
  6611 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6612 ;; Tracked objects:
  6613 ;;		On entry : 0/0
  6614 ;;		On exit  : 0/0
  6615 ;;		Unchanged: 0/0
  6616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6617 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6618 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6620 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6621 ;;Total ram usage:        4 bytes
  6622 ;; Hardware stack levels used:    1
  6623 ;; Hardware stack levels required when called:   13
  6624 ;; This function calls:
  6625 ;;		_EUSART2_Read
  6626 ;;		_EUSART2_Write
  6627 ;;		_EUSART2_is_rx_ready
  6628 ;;		_memmove
  6629 ;;		_printf
  6630 ;;		_strcat
  6631 ;;		_strlen
  6632 ;; This function is called by:
  6633 ;;		_main
  6634 ;;		_SaveCardDat
  6635 ;; This function uses a non-reentrant model
  6636 ;;
  6637                           
  6638                           	psect	text4
  6639  0039EE                     __ptext4:
  6640                           	opt callstack 0
  6641  0039EE                     _ReadRX232:
  6642                           	opt callstack 15
  6643  0039EE                     
  6644                           ;RS232.c: 140: int ReadRX232(int NumChars);RS232.c: 141: {;RS232.c: 146:     char temp[2
      +                          ] = {'Z','\0'};
  6645  0039EE  C0E9  F055         	movff	ReadRX232@F10774,ReadRX232@temp
  6646  0039F2  C0EA  F056         	movff	ReadRX232@F10774+1,ReadRX232@temp+1
  6647  0039F6                     
  6648                           ;RS232.c: 149:     if(EUSART2_is_rx_ready())
  6649  0039F6  ECE3  F028         	call	_EUSART2_is_rx_ready	;wreg free
  6650  0039FA  0900               	iorlw	0
  6651  0039FC  B4D8               	btfsc	status,2,c
  6652  0039FE  EF03  F01D         	goto	u7531
  6653  003A02  EF05  F01D         	goto	u7530
  6654  003A06                     u7531:
  6655  003A06  EF83  F01D         	goto	l7518
  6656  003A0A                     u7530:
  6657  003A0A                     l7490:
  6658                           
  6659                           ;RS232.c: 155:              if(EUSART2_is_rx_ready())
  6660  003A0A  ECE3  F028         	call	_EUSART2_is_rx_ready	;wreg free
  6661  003A0E  0900               	iorlw	0
  6662  003A10  B4D8               	btfsc	status,2,c
  6663  003A12  EF0D  F01D         	goto	u7541
  6664  003A16  EF0F  F01D         	goto	u7540
  6665  003A1A                     u7541:
  6666  003A1A  EF5F  F01D         	goto	l7510
  6667  003A1E                     u7540:
  6668  003A1E                     
  6669                           ;RS232.c: 156:              {;RS232.c: 158:                 temp[0]=EUSART2_Read();
  6670  003A1E  EC92  F025         	call	_EUSART2_Read	;wreg free
  6671  003A22  6E55               	movwf	ReadRX232@temp^0,c
  6672                           
  6673                           ;RS232.c: 161:                 EUSART2_Write(temp[0]);
  6674  003A24  5055               	movf	ReadRX232@temp^0,w,c
  6675  003A26  EC06  F025         	call	_EUSART2_Write
  6676  003A2A                     
  6677                           ;RS232.c: 163:                 if(temp[0]!='\r'){
  6678  003A2A  0E0D               	movlw	13
  6679  003A2C  1855               	xorwf	ReadRX232@temp^0,w,c
  6680  003A2E  B4D8               	btfsc	status,2,c
  6681  003A30  EF1C  F01D         	goto	u7551
  6682  003A34  EF1E  F01D         	goto	u7550
  6683  003A38                     u7551:
  6684  003A38  EF28  F01D         	goto	l7498
  6685  003A3C                     u7550:
  6686  003A3C                     
  6687                           ;RS232.c: 164:                     strcat(Command, temp);
  6688  003A3C  0EE3               	movlw	low _Command
  6689  003A3E  6E13               	movwf	strcat@dest^0,c
  6690  003A40  0E01               	movlw	high _Command
  6691  003A42  6E14               	movwf	(strcat@dest+1)^0,c
  6692  003A44  0E55               	movlw	low ReadRX232@temp
  6693  003A46  6E15               	movwf	strcat@src^0,c
  6694  003A48  0E00               	movlw	high ReadRX232@temp
  6695  003A4A  6E16               	movwf	(strcat@src+1)^0,c
  6696  003A4C  EC9E  F028         	call	_strcat	;wreg free
  6697  003A50                     l7498:
  6698                           
  6699                           ;RS232.c: 167:                 if(strlen(Command)>NumChars)
  6700  003A50  0EE3               	movlw	low _Command
  6701  003A52  6E05               	movwf	strlen@s^0,c
  6702  003A54  0E01               	movlw	high _Command
  6703  003A56  6E06               	movwf	(strlen@s+1)^0,c
  6704  003A58  EC3B  F026         	call	_strlen	;wreg free
  6705  003A5C  5005               	movf	?_strlen^0,w,c
  6706  003A5E  0100               	movlb	0	; () banked
  6707  003A60  5D8F               	subwf	ReadRX232@NumChars& (0+255),w,b
  6708  003A62  5006               	movf	(?_strlen+1)^0,w,c
  6709  003A64  5990               	subwfb	(ReadRX232@NumChars+1)& (0+255),w,b
  6710  003A66  B0D8               	btfsc	status,0,c
  6711  003A68  EF38  F01D         	goto	u7561
  6712  003A6C  EF3A  F01D         	goto	u7560
  6713  003A70                     u7561:
  6714  003A70  EF4E  F01D         	goto	l7502
  6715  003A74                     u7560:
  6716  003A74                     
  6717                           ; BSR set to: 0
  6718                           ;RS232.c: 168:                 {;RS232.c: 170:                     memmove(Command, Comm
      +                          and+1, strlen(Command));
  6719  003A74  0EE3               	movlw	low _Command
  6720  003A76  6E09               	movwf	memmove@d1^0,c
  6721  003A78  0E01               	movlw	high _Command
  6722  003A7A  6E0A               	movwf	(memmove@d1+1)^0,c
  6723  003A7C  0EE4               	movlw	low (_Command+1)
  6724  003A7E  6E0B               	movwf	memmove@s1^0,c
  6725  003A80  0E01               	movlw	high (_Command+1)
  6726  003A82  6E0C               	movwf	(memmove@s1+1)^0,c
  6727  003A84  0EE3               	movlw	low _Command
  6728  003A86  6E05               	movwf	strlen@s^0,c
  6729  003A88  0E01               	movlw	high _Command
  6730  003A8A  6E06               	movwf	(strlen@s+1)^0,c
  6731  003A8C  EC3B  F026         	call	_strlen	;wreg free
  6732  003A90  C005  F00D         	movff	?_strlen,memmove@n
  6733  003A94  C006  F00E         	movff	?_strlen+1,memmove@n+1
  6734  003A98  EC7E  F01E         	call	_memmove	;wreg free
  6735  003A9C                     l7502:
  6736                           
  6737                           ;RS232.c: 174:                 if(temp[0]=='\r'){
  6738  003A9C  0E0D               	movlw	13
  6739  003A9E  1855               	xorwf	ReadRX232@temp^0,w,c
  6740  003AA0  A4D8               	btfss	status,2,c
  6741  003AA2  EF55  F01D         	goto	u7571
  6742  003AA6  EF57  F01D         	goto	u7570
  6743  003AAA                     u7571:
  6744  003AAA  EF5F  F01D         	goto	l7510
  6745  003AAE                     u7570:
  6746  003AAE                     
  6747                           ;RS232.c: 176:                     temp[0]='z';
  6748  003AAE  0E7A               	movlw	122
  6749  003AB0  6E55               	movwf	ReadRX232@temp^0,c
  6750  003AB2                     
  6751                           ;RS232.c: 177:                     return NumChars;
  6752  003AB2  C08F  F08F         	movff	ReadRX232@NumChars,?_ReadRX232
  6753  003AB6  C090  F090         	movff	ReadRX232@NumChars+1,?_ReadRX232+1
  6754  003ABA  EF88  F01D         	goto	l1150
  6755  003ABE                     l7510:
  6756                           
  6757                           ;RS232.c: 180:         }while( temp[0] !='\r' );
  6758  003ABE  0E0D               	movlw	13
  6759  003AC0  1855               	xorwf	ReadRX232@temp^0,w,c
  6760  003AC2  A4D8               	btfss	status,2,c
  6761  003AC4  EF66  F01D         	goto	u7581
  6762  003AC8  EF68  F01D         	goto	u7580
  6763  003ACC                     u7581:
  6764  003ACC  EF05  F01D         	goto	l7490
  6765  003AD0                     u7580:
  6766  003AD0                     
  6767                           ;RS232.c: 182:         Command[strlen(Command)-1] = '\0';
  6768  003AD0  0EE3               	movlw	low _Command
  6769  003AD2  6E05               	movwf	strlen@s^0,c
  6770  003AD4  0E01               	movlw	high _Command
  6771  003AD6  6E06               	movwf	(strlen@s+1)^0,c
  6772  003AD8  EC3B  F026         	call	_strlen	;wreg free
  6773  003ADC  0EE2               	movlw	low (_Command+65535)
  6774  003ADE  2405               	addwf	?_strlen^0,w,c
  6775  003AE0  6ED9               	movwf	fsr2l,c
  6776  003AE2  0E01               	movlw	high (_Command+65535)
  6777  003AE4  2006               	addwfc	(?_strlen+1)^0,w,c
  6778  003AE6  6EDA               	movwf	fsr2h,c
  6779  003AE8  0E00               	movlw	0
  6780  003AEA  6EDF               	movwf	indf2,c
  6781  003AEC                     
  6782                           ;RS232.c: 184:         printf("\r\n\n");
  6783  003AEC  0EA5               	movlw	low (STR_36+17)
  6784  003AEE  0100               	movlb	0	; () banked
  6785  003AF0  6F7D               	movwf	printf@fmt& (0+255),b
  6786  003AF2  0EFE               	movlw	high (STR_36+17)
  6787  003AF4  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6788  003AF6  EC8A  F028         	call	_printf	;wreg free
  6789  003AFA                     
  6790                           ;RS232.c: 186:         strlen(Command);
  6791  003AFA  0EE3               	movlw	low _Command
  6792  003AFC  6E05               	movwf	strlen@s^0,c
  6793  003AFE  0E01               	movlw	high _Command
  6794  003B00  6E06               	movwf	(strlen@s+1)^0,c
  6795  003B02  EC3B  F026         	call	_strlen	;wreg free
  6796  003B06                     l7518:
  6797                           
  6798                           ;RS232.c: 189:     return 0;
  6799  003B06  0E00               	movlw	0
  6800  003B08  0100               	movlb	0	; () banked
  6801  003B0A  6F90               	movwf	(?_ReadRX232+1)& (0+255),b
  6802  003B0C  0E00               	movlw	0
  6803  003B0E  6F8F               	movwf	?_ReadRX232& (0+255),b
  6804  003B10                     l1150:
  6805  003B10  0012               	return		;funcret
  6806  003B12                     __end_of_ReadRX232:
  6807                           	opt callstack 0
  6808                           
  6809 ;; *************** function _strcat *****************
  6810 ;; Defined at:
  6811 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcat.c"
  6812 ;; Parameters:    Size  Location     Type
  6813 ;;  dest            2   18[COMRAM] PTR unsigned char 
  6814 ;;		 -> Command(16), 
  6815 ;;  src             2   20[COMRAM] PTR const unsigned char 
  6816 ;;		 -> ReadRX232@temp(2), 
  6817 ;; Auto vars:     Size  Location     Type
  6818 ;;		None
  6819 ;; Return value:  Size  Location     Type
  6820 ;;                  2   18[COMRAM] PTR unsigned char 
  6821 ;; Registers used:
  6822 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6823 ;; Tracked objects:
  6824 ;;		On entry : 0/0
  6825 ;;		On exit  : 0/0
  6826 ;;		Unchanged: 0/0
  6827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6828 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6831 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6832 ;;Total ram usage:        4 bytes
  6833 ;; Hardware stack levels used:    1
  6834 ;; Hardware stack levels required when called:    5
  6835 ;; This function calls:
  6836 ;;		_strcpy
  6837 ;;		_strlen
  6838 ;; This function is called by:
  6839 ;;		_ReadRX232
  6840 ;; This function uses a non-reentrant model
  6841 ;;
  6842                           
  6843                           	psect	text5
  6844  00513C                     __ptext5:
  6845                           	opt callstack 0
  6846  00513C                     _strcat:
  6847                           	opt callstack 22
  6848  00513C  C013  F005         	movff	strcat@dest,strlen@s
  6849  005140  C014  F006         	movff	strcat@dest+1,strlen@s+1
  6850  005144  EC3B  F026         	call	_strlen	;wreg free
  6851  005148  5005               	movf	?_strlen^0,w,c
  6852  00514A  2413               	addwf	strcat@dest^0,w,c
  6853  00514C  6E09               	movwf	strcpy@dest^0,c
  6854  00514E  5006               	movf	(?_strlen+1)^0,w,c
  6855  005150  2014               	addwfc	(strcat@dest+1)^0,w,c
  6856  005152  6E0A               	movwf	(strcpy@dest+1)^0,c
  6857  005154  C015  F00B         	movff	strcat@src,strcpy@src
  6858  005158  C016  F00C         	movff	strcat@src+1,strcpy@src+1
  6859  00515C  ECA8  F024         	call	_strcpy	;wreg free
  6860  005160  0012               	return		;funcret
  6861  005162                     __end_of_strcat:
  6862                           	opt callstack 0
  6863                           
  6864 ;; *************** function _strcpy *****************
  6865 ;; Defined at:
  6866 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  6867 ;; Parameters:    Size  Location     Type
  6868 ;;  dest            2    8[COMRAM] PTR unsigned char 
  6869 ;;		 -> Command(16), 
  6870 ;;  src             2   10[COMRAM] PTR const unsigned char 
  6871 ;;		 -> STR_134(1), STR_129(1), ReadRX232@temp(2), STR_10(1), 
  6872 ;; Auto vars:     Size  Location     Type
  6873 ;;  d               2   16[COMRAM] PTR unsigned char 
  6874 ;;		 -> Command(16), 
  6875 ;;  s               2   14[COMRAM] PTR const unsigned char 
  6876 ;;		 -> STR_134(1), STR_129(1), ReadRX232@temp(2), STR_10(1), 
  6877 ;; Return value:  Size  Location     Type
  6878 ;;                  2    8[COMRAM] PTR unsigned char 
  6879 ;; Registers used:
  6880 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6881 ;; Tracked objects:
  6882 ;;		On entry : 0/0
  6883 ;;		On exit  : 0/0
  6884 ;;		Unchanged: 0/0
  6885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6886 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6887 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6888 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6889 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6890 ;;Total ram usage:       10 bytes
  6891 ;; Hardware stack levels used:    1
  6892 ;; Hardware stack levels required when called:    4
  6893 ;; This function calls:
  6894 ;;		Nothing
  6895 ;; This function is called by:
  6896 ;;		_main
  6897 ;;		_SaveCardDat
  6898 ;;		_strcat
  6899 ;; This function uses a non-reentrant model
  6900 ;;
  6901                           
  6902                           	psect	text6
  6903  004950                     __ptext6:
  6904                           	opt callstack 0
  6905  004950                     _strcpy:
  6906                           	opt callstack 26
  6907  004950  C00B  F00F         	movff	strcpy@src,strcpy@s
  6908  004954  C00C  F010         	movff	strcpy@src+1,strcpy@s+1
  6909  004958  C009  F011         	movff	strcpy@dest,strcpy@d
  6910  00495C  C00A  F012         	movff	strcpy@dest+1,strcpy@d+1
  6911  004960                     l7314:
  6912  004960  500F               	movf	strcpy@s^0,w,c
  6913  004962  6E0D               	movwf	??_strcpy^0,c
  6914  004964  5010               	movf	(strcpy@s+1)^0,w,c
  6915  004966  6E0E               	movwf	(??_strcpy+1)^0,c
  6916  004968  4A0F               	infsnz	strcpy@s^0,f,c
  6917  00496A  2A10               	incf	(strcpy@s+1)^0,f,c
  6918  00496C  C00D  FFF6         	movff	??_strcpy,tblptrl
  6919  004970  C00E  FFF7         	movff	??_strcpy+1,tblptrh
  6920  004974  0E00               	movlw	low (__mediumconst shr (0+16))
  6921  004976  6EF8               	movwf	tblptru,c
  6922  004978  C011  FFD9         	movff	strcpy@d,fsr2l
  6923  00497C  C012  FFDA         	movff	strcpy@d+1,fsr2h
  6924  004980  4A11               	infsnz	strcpy@d^0,f,c
  6925  004982  2A12               	incf	(strcpy@d+1)^0,f,c
  6926  004984  0E0E               	movlw	(high __ramtop+-1)
  6927  004986  64F7               	cpfsgt	tblptrh,c
  6928  004988  D003               	bra	u7287
  6929  00498A  0008               	tblrd		*
  6930  00498C  50F5               	movf	tablat,w,c
  6931  00498E  D005               	bra	u7280
  6932  004990                     u7287:
  6933  004990  CFF6 FFE9          	movff	tblptrl,fsr0l
  6934  004994  CFF7 FFEA          	movff	tblptrh,fsr0h
  6935  004998  50EF               	movf	indf0,w,c
  6936  00499A                     u7280:
  6937  00499A  6EDF               	movwf	indf2,c
  6938  00499C  50DF               	movf	indf2,w,c
  6939  00499E  A4D8               	btfss	status,2,c
  6940  0049A0  EFD4  F024         	goto	u7291
  6941  0049A4  EFD6  F024         	goto	u7290
  6942  0049A8                     u7291:
  6943  0049A8  EFB0  F024         	goto	l7314
  6944  0049AC                     u7290:
  6945  0049AC  0012               	return		;funcret
  6946  0049AE                     __end_of_strcpy:
  6947                           	opt callstack 0
  6948                           
  6949 ;; *************** function _memmove *****************
  6950 ;; Defined at:
  6951 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\memmove.c"
  6952 ;; Parameters:    Size  Location     Type
  6953 ;;  d1              2    8[COMRAM] PTR void 
  6954 ;;		 -> Command(16), 
  6955 ;;  s1              2   10[COMRAM] PTR const void 
  6956 ;;		 -> Command(16), 
  6957 ;;  n               2   12[COMRAM] unsigned int 
  6958 ;; Auto vars:     Size  Location     Type
  6959 ;;  s               2   18[COMRAM] PTR const unsigned char 
  6960 ;;		 -> Command(16), 
  6961 ;;  d               2   16[COMRAM] PTR unsigned char 
  6962 ;;		 -> Command(16), 
  6963 ;; Return value:  Size  Location     Type
  6964 ;;                  2    8[COMRAM] PTR void 
  6965 ;; Registers used:
  6966 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6967 ;; Tracked objects:
  6968 ;;		On entry : 0/0
  6969 ;;		On exit  : 0/0
  6970 ;;		Unchanged: 0/0
  6971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6972 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6973 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6974 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6975 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6976 ;;Total ram usage:       12 bytes
  6977 ;; Hardware stack levels used:    1
  6978 ;; Hardware stack levels required when called:    4
  6979 ;; This function calls:
  6980 ;;		Nothing
  6981 ;; This function is called by:
  6982 ;;		_ReadRX232
  6983 ;; This function uses a non-reentrant model
  6984 ;;
  6985                           
  6986                           	psect	text7
  6987  003CFC                     __ptext7:
  6988                           	opt callstack 0
  6989  003CFC                     _memmove:
  6990                           	opt callstack 23
  6991  003CFC  C00B  F013         	movff	memmove@s1,memmove@s
  6992  003D00  C00C  F014         	movff	memmove@s1+1,memmove@s+1
  6993  003D04  C009  F011         	movff	memmove@d1,memmove@d
  6994  003D08  C00A  F012         	movff	memmove@d1+1,memmove@d+1
  6995  003D0C  5011               	movf	memmove@d^0,w,c
  6996  003D0E  5C13               	subwf	memmove@s^0,w,c
  6997  003D10  5012               	movf	(memmove@d+1)^0,w,c
  6998  003D12  5814               	subwfb	(memmove@s+1)^0,w,c
  6999  003D14  B0D8               	btfsc	status,0,c
  7000  003D16  EF8F  F01E         	goto	u7471
  7001  003D1A  EF91  F01E         	goto	u7470
  7002  003D1E                     u7471:
  7003  003D1E  EFC8  F01E         	goto	l7444
  7004  003D22                     u7470:
  7005  003D22  500D               	movf	memmove@n^0,w,c
  7006  003D24  2413               	addwf	memmove@s^0,w,c
  7007  003D26  6E0F               	movwf	??_memmove^0,c
  7008  003D28  500E               	movf	(memmove@n+1)^0,w,c
  7009  003D2A  2014               	addwfc	(memmove@s+1)^0,w,c
  7010  003D2C  6E10               	movwf	(??_memmove+1)^0,c
  7011  003D2E  500F               	movf	??_memmove^0,w,c
  7012  003D30  5C11               	subwf	memmove@d^0,w,c
  7013  003D32  5010               	movf	(??_memmove+1)^0,w,c
  7014  003D34  5812               	subwfb	(memmove@d+1)^0,w,c
  7015  003D36  B0D8               	btfsc	status,0,c
  7016  003D38  EFA0  F01E         	goto	u7481
  7017  003D3C  EFA2  F01E         	goto	u7480
  7018  003D40                     u7481:
  7019  003D40  EFC8  F01E         	goto	l7444
  7020  003D44                     u7480:
  7021  003D44  500D               	movf	memmove@n^0,w,c
  7022  003D46  2613               	addwf	memmove@s^0,f,c
  7023  003D48  500E               	movf	(memmove@n+1)^0,w,c
  7024  003D4A  2214               	addwfc	(memmove@s+1)^0,f,c
  7025  003D4C  500D               	movf	memmove@n^0,w,c
  7026  003D4E  2611               	addwf	memmove@d^0,f,c
  7027  003D50  500E               	movf	(memmove@n+1)^0,w,c
  7028  003D52  2212               	addwfc	(memmove@d+1)^0,f,c
  7029  003D54                     l7440:
  7030  003D54  0613               	decf	memmove@s^0,f,c
  7031  003D56  A0D8               	btfss	status,0,c
  7032  003D58  0614               	decf	(memmove@s+1)^0,f,c
  7033  003D5A  C013  FFD9         	movff	memmove@s,fsr2l
  7034  003D5E  C014  FFDA         	movff	memmove@s+1,fsr2h
  7035  003D62  0611               	decf	memmove@d^0,f,c
  7036  003D64  A0D8               	btfss	status,0,c
  7037  003D66  0612               	decf	(memmove@d+1)^0,f,c
  7038  003D68  C011  FFE1         	movff	memmove@d,fsr1l
  7039  003D6C  C012  FFE2         	movff	memmove@d+1,fsr1h
  7040  003D70  CFDF FFE7          	movff	indf2,indf1
  7041  003D74  060D               	decf	memmove@n^0,f,c
  7042  003D76  A0D8               	btfss	status,0,c
  7043  003D78  060E               	decf	(memmove@n+1)^0,f,c
  7044  003D7A  500D               	movf	memmove@n^0,w,c
  7045  003D7C  100E               	iorwf	(memmove@n+1)^0,w,c
  7046  003D7E  A4D8               	btfss	status,2,c
  7047  003D80  EFC4  F01E         	goto	u7491
  7048  003D84  EFC6  F01E         	goto	u7490
  7049  003D88                     u7491:
  7050  003D88  EFAA  F01E         	goto	l7440
  7051  003D8C                     u7490:
  7052  003D8C  EFEB  F01E         	goto	l2125
  7053  003D90                     l7444:
  7054  003D90  500D               	movf	memmove@n^0,w,c
  7055  003D92  100E               	iorwf	(memmove@n+1)^0,w,c
  7056  003D94  B4D8               	btfsc	status,2,c
  7057  003D96  EFCF  F01E         	goto	u7501
  7058  003D9A  EFD1  F01E         	goto	u7500
  7059  003D9E                     u7501:
  7060  003D9E  EFEB  F01E         	goto	l2125
  7061  003DA2                     u7500:
  7062  003DA2                     l7446:
  7063  003DA2  C013  FFD9         	movff	memmove@s,fsr2l
  7064  003DA6  C014  FFDA         	movff	memmove@s+1,fsr2h
  7065  003DAA  C011  FFE1         	movff	memmove@d,fsr1l
  7066  003DAE  C012  FFE2         	movff	memmove@d+1,fsr1h
  7067  003DB2  CFDF FFE7          	movff	indf2,indf1
  7068  003DB6  4A13               	infsnz	memmove@s^0,f,c
  7069  003DB8  2A14               	incf	(memmove@s+1)^0,f,c
  7070  003DBA  4A11               	infsnz	memmove@d^0,f,c
  7071  003DBC  2A12               	incf	(memmove@d+1)^0,f,c
  7072  003DBE  060D               	decf	memmove@n^0,f,c
  7073  003DC0  A0D8               	btfss	status,0,c
  7074  003DC2  060E               	decf	(memmove@n+1)^0,f,c
  7075  003DC4  500D               	movf	memmove@n^0,w,c
  7076  003DC6  100E               	iorwf	(memmove@n+1)^0,w,c
  7077  003DC8  A4D8               	btfss	status,2,c
  7078  003DCA  EFE9  F01E         	goto	u7511
  7079  003DCE  EFEB  F01E         	goto	u7510
  7080  003DD2                     u7511:
  7081  003DD2  EFD1  F01E         	goto	l7446
  7082  003DD6                     u7510:
  7083  003DD6                     l2125:
  7084  003DD6  0012               	return		;funcret
  7085  003DD8                     __end_of_memmove:
  7086                           	opt callstack 0
  7087                           
  7088 ;; *************** function _EUSART2_is_rx_ready *****************
  7089 ;; Defined at:
  7090 ;;		line 141 in file "mcc_generated_files/eusart2.c"
  7091 ;; Parameters:    Size  Location     Type
  7092 ;;		None
  7093 ;; Auto vars:     Size  Location     Type
  7094 ;;		None
  7095 ;; Return value:  Size  Location     Type
  7096 ;;                  1    wreg      _Bool 
  7097 ;; Registers used:
  7098 ;;		wreg, status,2
  7099 ;; Tracked objects:
  7100 ;;		On entry : 0/0
  7101 ;;		On exit  : 0/0
  7102 ;;		Unchanged: 0/0
  7103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7108 ;;Total ram usage:        0 bytes
  7109 ;; Hardware stack levels used:    1
  7110 ;; Hardware stack levels required when called:    4
  7111 ;; This function calls:
  7112 ;;		Nothing
  7113 ;; This function is called by:
  7114 ;;		_ReadRX232
  7115 ;;		_SaveCardDat
  7116 ;; This function uses a non-reentrant model
  7117 ;;
  7118                           
  7119                           	psect	text8
  7120  0051C6                     __ptext8:
  7121                           	opt callstack 0
  7122  0051C6                     _EUSART2_is_rx_ready:
  7123                           	opt callstack 23
  7124  0051C6                     
  7125                           ;mcc_generated_files/eusart2.c: 143:     return (eusart2RxCount ? 1 : 0);
  7126  0051C6  0100               	movlb	0	; () banked
  7127  0051C8  51E5               	movf	_eusart2RxCount& (0+255),w,b	;volatile
  7128  0051CA  A4D8               	btfss	status,2,c
  7129  0051CC  EFEA  F028         	goto	u7331
  7130  0051D0  EFED  F028         	goto	u7330
  7131  0051D4                     u7331:
  7132  0051D4  0E01               	movlw	1
  7133  0051D6  EFEE  F028         	goto	u7340
  7134  0051DA                     u7330:
  7135  0051DA  0E00               	movlw	0
  7136  0051DC                     u7340:
  7137  0051DC                     
  7138                           ; BSR set to: 0
  7139  0051DC  0012               	return		;funcret
  7140  0051DE                     __end_of_EUSART2_is_rx_ready:
  7141                           	opt callstack 0
  7142                           
  7143 ;; *************** function _EUSART2_Read *****************
  7144 ;; Defined at:
  7145 ;;		line 155 in file "mcc_generated_files/eusart2.c"
  7146 ;; Parameters:    Size  Location     Type
  7147 ;;		None
  7148 ;; Auto vars:     Size  Location     Type
  7149 ;;  readValue       1    4[COMRAM] unsigned char 
  7150 ;; Return value:  Size  Location     Type
  7151 ;;                  1    wreg      unsigned char 
  7152 ;; Registers used:
  7153 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7154 ;; Tracked objects:
  7155 ;;		On entry : 0/0
  7156 ;;		On exit  : 0/0
  7157 ;;		Unchanged: 0/0
  7158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7160 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7162 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7163 ;;Total ram usage:        1 bytes
  7164 ;; Hardware stack levels used:    1
  7165 ;; Hardware stack levels required when called:    4
  7166 ;; This function calls:
  7167 ;;		Nothing
  7168 ;; This function is called by:
  7169 ;;		_ReadRX232
  7170 ;;		_SaveCardDat
  7171 ;;		_getch
  7172 ;; This function uses a non-reentrant model
  7173 ;;
  7174                           
  7175                           	psect	text9
  7176  004B24                     __ptext9:
  7177                           	opt callstack 0
  7178  004B24                     _EUSART2_Read:
  7179                           	opt callstack 23
  7180  004B24                     l7366:
  7181                           
  7182                           ;mcc_generated_files/eusart2.c: 159:     while(0 == eusart2RxCount)
  7183  004B24  0100               	movlb	0	; () banked
  7184  004B26  51E5               	movf	_eusart2RxCount& (0+255),w,b	;volatile
  7185  004B28  B4D8               	btfsc	status,2,c
  7186  004B2A  EF99  F025         	goto	u7351
  7187  004B2E  EF9B  F025         	goto	u7350
  7188  004B32                     u7351:
  7189  004B32  EF92  F025         	goto	l7366
  7190  004B36                     u7350:
  7191  004B36                     
  7192                           ; BSR set to: 0
  7193                           ;mcc_generated_files/eusart2.c: 163:     eusart2RxLastError = eusart2RxStatusBuffer[eusa
      +                          rt2RxTail];
  7194  004B36  0EA2               	movlw	low _eusart2RxStatusBuffer
  7195  004B38  25E6               	addwf	_eusart2RxTail& (0+255),w,b	;volatile
  7196  004B3A  6ED9               	movwf	fsr2l,c
  7197  004B3C  6ADA               	clrf	fsr2h,c
  7198  004B3E  0E02               	movlw	high _eusart2RxStatusBuffer
  7199  004B40  22DA               	addwfc	fsr2h,f,c
  7200  004B42  50DF               	movf	indf2,w,c
  7201  004B44  6FE4               	movwf	_eusart2RxLastError& (0+255),b	;volatile
  7202                           
  7203                           ;mcc_generated_files/eusart2.c: 165:     readValue = eusart2RxBuffer[eusart2RxTail++];
  7204  004B46  0E64               	movlw	low _eusart2RxBuffer
  7205  004B48  25E6               	addwf	_eusart2RxTail& (0+255),w,b	;volatile
  7206  004B4A  6ED9               	movwf	fsr2l,c
  7207  004B4C  6ADA               	clrf	fsr2h,c
  7208  004B4E  0E03               	movlw	high _eusart2RxBuffer
  7209  004B50  22DA               	addwfc	fsr2h,f,c
  7210  004B52  50DF               	movf	indf2,w,c
  7211  004B54  6E05               	movwf	EUSART2_Read@readValue^0,c
  7212  004B56                     
  7213                           ; BSR set to: 0
  7214  004B56  2BE6               	incf	_eusart2RxTail& (0+255),f,b	;volatile
  7215  004B58                     
  7216                           ; BSR set to: 0
  7217                           ;mcc_generated_files/eusart2.c: 166:     if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
  7218  004B58  0E1F               	movlw	31
  7219  004B5A  65E6               	cpfsgt	_eusart2RxTail& (0+255),b	;volatile
  7220  004B5C  EFB2  F025         	goto	u7361
  7221  004B60  EFB4  F025         	goto	u7360
  7222  004B64                     u7361:
  7223  004B64  EFB6  F025         	goto	l7376
  7224  004B68                     u7360:
  7225  004B68                     
  7226                           ; BSR set to: 0
  7227                           ;mcc_generated_files/eusart2.c: 167:     {;mcc_generated_files/eusart2.c: 168:         e
      +                          usart2RxTail = 0;
  7228  004B68  0E00               	movlw	0
  7229  004B6A  6FE6               	movwf	_eusart2RxTail& (0+255),b	;volatile
  7230  004B6C                     l7376:
  7231                           
  7232                           ; BSR set to: 0
  7233                           ;mcc_generated_files/eusart2.c: 170:     PIE3bits.RC2IE = 0;
  7234  004B6C  010E               	movlb	14	; () banked
  7235  004B6E  9FC5               	bcf	197,7,b	;volatile
  7236  004B70                     
  7237                           ; BSR set to: 14
  7238                           ;mcc_generated_files/eusart2.c: 171:     eusart2RxCount--;
  7239  004B70  0100               	movlb	0	; () banked
  7240  004B72  07E5               	decf	_eusart2RxCount& (0+255),f,b	;volatile
  7241  004B74                     
  7242                           ; BSR set to: 0
  7243                           ;mcc_generated_files/eusart2.c: 172:     PIE3bits.RC2IE = 1;
  7244  004B74  010E               	movlb	14	; () banked
  7245  004B76  8FC5               	bsf	197,7,b	;volatile
  7246  004B78                     
  7247                           ; BSR set to: 14
  7248                           ;mcc_generated_files/eusart2.c: 174:     return readValue;
  7249  004B78  5005               	movf	EUSART2_Read@readValue^0,w,c
  7250  004B7A                     
  7251                           ; BSR set to: 14
  7252  004B7A  0012               	return		;funcret
  7253  004B7C                     __end_of_EUSART2_Read:
  7254                           	opt callstack 0
  7255                           
  7256 ;; *************** function _ClearEEAddRange *****************
  7257 ;; Defined at:
  7258 ;;		line 208 in file "RS232.c"
  7259 ;; Parameters:    Size  Location     Type
  7260 ;;  StartAdd        2   47[BANK0 ] unsigned int 
  7261 ;;  NumBytes        2   49[BANK0 ] unsigned int 
  7262 ;; Auto vars:     Size  Location     Type
  7263 ;;  i               2   84[COMRAM] int 
  7264 ;; Return value:  Size  Location     Type
  7265 ;;                  1    wreg      void 
  7266 ;; Registers used:
  7267 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7268 ;; Tracked objects:
  7269 ;;		On entry : 0/0
  7270 ;;		On exit  : 0/0
  7271 ;;		Unchanged: 0/0
  7272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7273 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7274 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7276 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7277 ;;Total ram usage:        6 bytes
  7278 ;; Hardware stack levels used:    1
  7279 ;; Hardware stack levels required when called:   13
  7280 ;; This function calls:
  7281 ;;		_DATAEE_WriteByte
  7282 ;;		_printf
  7283 ;; This function is called by:
  7284 ;;		_SaveCardDat
  7285 ;; This function uses a non-reentrant model
  7286 ;;
  7287                           
  7288                           	psect	text10
  7289  004AC8                     __ptext10:
  7290                           	opt callstack 0
  7291  004AC8                     _ClearEEAddRange:
  7292                           	opt callstack 15
  7293  004AC8                     
  7294                           ;RS232.c: 211:     printf("Clearing EEPROM from Address: 0x%04x for num bytes: %i \r\n",
      +                           StartAdd, NumBytes);
  7295  004AC8  0E02               	movlw	low STR_127
  7296  004ACA  0100               	movlb	0	; () banked
  7297  004ACC  6F7D               	movwf	printf@fmt& (0+255),b
  7298  004ACE  0EF5               	movlw	high STR_127
  7299  004AD0  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7300  004AD2  C08F  F07F         	movff	ClearEEAddRange@StartAdd,?_printf+2
  7301  004AD6  C090  F080         	movff	ClearEEAddRange@StartAdd+1,?_printf+3
  7302  004ADA  C091  F081         	movff	ClearEEAddRange@NumBytes,?_printf+4
  7303  004ADE  C092  F082         	movff	ClearEEAddRange@NumBytes+1,?_printf+5
  7304  004AE2  EC8A  F028         	call	_printf	;wreg free
  7305  004AE6                     
  7306                           ;RS232.c: 213:     for(int i = 0; i<NumBytes; i++){
  7307  004AE6  0E00               	movlw	0
  7308  004AE8  6E56               	movwf	(ClearEEAddRange@i+1)^0,c
  7309  004AEA  0E00               	movlw	0
  7310  004AEC  6E55               	movwf	ClearEEAddRange@i^0,c
  7311  004AEE  EF85  F025         	goto	l7620
  7312  004AF2                     l7616:
  7313                           
  7314                           ; BSR set to: 0
  7315                           ;RS232.c: 214:         DATAEE_WriteByte(StartAdd +i, 0xFF);
  7316  004AF2  518F               	movf	ClearEEAddRange@StartAdd& (0+255),w,b
  7317  004AF4  2455               	addwf	ClearEEAddRange@i^0,w,c
  7318  004AF6  6E05               	movwf	DATAEE_WriteByte@bAdd^0,c
  7319  004AF8  5190               	movf	(ClearEEAddRange@StartAdd+1)& (0+255),w,b
  7320  004AFA  2056               	addwfc	(ClearEEAddRange@i+1)^0,w,c
  7321  004AFC  6E06               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
  7322  004AFE  0EFF               	movlw	255
  7323  004B00  6E07               	movwf	DATAEE_WriteByte@bData^0,c
  7324  004B02  ECD2  F026         	call	_DATAEE_WriteByte	;wreg free
  7325  004B06                     
  7326                           ;RS232.c: 215:     }
  7327  004B06  4A55               	infsnz	ClearEEAddRange@i^0,f,c
  7328  004B08  2A56               	incf	(ClearEEAddRange@i+1)^0,f,c
  7329  004B0A                     l7620:
  7330  004B0A  0100               	movlb	0	; () banked
  7331  004B0C  5191               	movf	ClearEEAddRange@NumBytes& (0+255),w,b
  7332  004B0E  5C55               	subwf	ClearEEAddRange@i^0,w,c
  7333  004B10  5192               	movf	(ClearEEAddRange@NumBytes+1)& (0+255),w,b
  7334  004B12  5856               	subwfb	(ClearEEAddRange@i+1)^0,w,c
  7335  004B14  A0D8               	btfss	status,0,c
  7336  004B16  EF8F  F025         	goto	u7721
  7337  004B1A  EF91  F025         	goto	u7720
  7338  004B1E                     u7721:
  7339  004B1E  EF79  F025         	goto	l7616
  7340  004B22                     u7720:
  7341  004B22                     
  7342                           ; BSR set to: 0
  7343  004B22  0012               	return		;funcret
  7344  004B24                     __end_of_ClearEEAddRange:
  7345                           	opt callstack 0
  7346                           
  7347 ;; *************** function _DATAEE_WriteByte *****************
  7348 ;; Defined at:
  7349 ;;		line 165 in file "mcc_generated_files/memory.c"
  7350 ;; Parameters:    Size  Location     Type
  7351 ;;  bAdd            2    4[COMRAM] unsigned short 
  7352 ;;  bData           1    6[COMRAM] unsigned char 
  7353 ;; Auto vars:     Size  Location     Type
  7354 ;;  GIEBitValue     1    7[COMRAM] unsigned char 
  7355 ;; Return value:  Size  Location     Type
  7356 ;;                  1    wreg      void 
  7357 ;; Registers used:
  7358 ;;		wreg, status,2, status,0
  7359 ;; Tracked objects:
  7360 ;;		On entry : 0/0
  7361 ;;		On exit  : 0/0
  7362 ;;		Unchanged: 0/0
  7363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7364 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7365 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7367 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7368 ;;Total ram usage:        4 bytes
  7369 ;; Hardware stack levels used:    1
  7370 ;; Hardware stack levels required when called:    4
  7371 ;; This function calls:
  7372 ;;		Nothing
  7373 ;; This function is called by:
  7374 ;;		_ClearEEAddRange
  7375 ;;		_SaveCardDat
  7376 ;; This function uses a non-reentrant model
  7377 ;;
  7378                           
  7379                           	psect	text11
  7380  004DA4                     __ptext11:
  7381                           	opt callstack 0
  7382  004DA4                     _DATAEE_WriteByte:
  7383                           	opt callstack 24
  7384  004DA4                     
  7385                           ;mcc_generated_files/memory.c: 165: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 166: {;mcc_generated_files/memory.c: 167:  uint8_t GIEBitV
      +                          alue = INTCONbits.GIE;
  7386  004DA4  0E00               	movlw	0
  7387  004DA6  BEF2               	btfsc	242,7,c	;volatile
  7388  004DA8  0E01               	movlw	1
  7389  004DAA  6E08               	movwf	DATAEE_WriteByte@GIEBitValue^0,c
  7390  004DAC                     
  7391                           ;mcc_generated_files/memory.c: 169:     NVMADRH = ((bAdd >> 8) & 0x03);
  7392  004DAC  5006               	movf	(DATAEE_WriteByte@bAdd+1)^0,w,c
  7393  004DAE  0B03               	andlw	3
  7394  004DB0  6E7F               	movwf	127,c	;volatile
  7395  004DB2                     
  7396                           ;mcc_generated_files/memory.c: 170:     NVMADRL = (bAdd & 0xFF);
  7397  004DB2  C005  FF7E         	movff	DATAEE_WriteByte@bAdd,3966	;volatile
  7398  004DB6                     
  7399                           ;mcc_generated_files/memory.c: 171:     NVMDAT = bData;
  7400  004DB6  C007  FF80         	movff	DATAEE_WriteByte@bData,3968	;volatile
  7401  004DBA                     
  7402                           ;mcc_generated_files/memory.c: 172:     NVMCON1bits.NVMREG = 0;
  7403  004DBA  0E3F               	movlw	-193
  7404  004DBC  1681               	andwf	129,f,c	;volsfr
  7405  004DBE                     
  7406                           ;mcc_generated_files/memory.c: 173:     NVMCON1bits.WREN = 1;
  7407  004DBE  8481               	bsf	129,2,c	;volsfr
  7408  004DC0                     
  7409                           ;mcc_generated_files/memory.c: 174:  INTCONbits.GIE = 0;
  7410  004DC0  9EF2               	bcf	242,7,c	;volatile
  7411  004DC2                     
  7412                           ;mcc_generated_files/memory.c: 175:     NVMCON2 = 0x55;
  7413  004DC2  0E55               	movlw	85
  7414  004DC4  6E82               	movwf	130,c	;volsfr
  7415  004DC6                     
  7416                           ;mcc_generated_files/memory.c: 176:     NVMCON2 = 0xAA;
  7417  004DC6  0EAA               	movlw	170
  7418  004DC8  6E82               	movwf	130,c	;volsfr
  7419  004DCA                     
  7420                           ;mcc_generated_files/memory.c: 177:     NVMCON1bits.WR = 1;
  7421  004DCA  8281               	bsf	129,1,c	;volsfr
  7422  004DCC                     l216:
  7423                           
  7424                           ;mcc_generated_files/memory.c: 179:     while (NVMCON1bits.WR)
  7425  004DCC  B281               	btfsc	129,1,c	;volsfr
  7426  004DCE  EFEB  F026         	goto	u7311
  7427  004DD2  EFED  F026         	goto	u7310
  7428  004DD6                     u7311:
  7429  004DD6  EFE6  F026         	goto	l216
  7430  004DDA                     u7310:
  7431  004DDA                     
  7432                           ;mcc_generated_files/memory.c: 183:     NVMCON1bits.WREN = 0;
  7433  004DDA  9481               	bcf	129,2,c	;volsfr
  7434                           
  7435                           ;mcc_generated_files/memory.c: 184:  INTCONbits.GIE = GIEBitValue;
  7436  004DDC  B008               	btfsc	DATAEE_WriteByte@GIEBitValue^0,0,c
  7437  004DDE  D002               	bra	u7325
  7438  004DE0  9EF2               	bcf	242,7,c	;volatile
  7439  004DE2  D001               	bra	u7326
  7440  004DE4                     u7325:
  7441  004DE4  8EF2               	bsf	242,7,c	;volatile
  7442  004DE6                     u7326:
  7443  004DE6  0012               	return		;funcret
  7444  004DE8                     __end_of_DATAEE_WriteByte:
  7445                           	opt callstack 0
  7446                           
  7447 ;; *************** function _InitialiseString *****************
  7448 ;; Defined at:
  7449 ;;		line 59 in file "RS232.c"
  7450 ;; Parameters:    Size  Location     Type
  7451 ;;  Partial         1    wreg     _Bool 
  7452 ;; Auto vars:     Size  Location     Type
  7453 ;;  Partial         1   96[BANK0 ] _Bool 
  7454 ;;  convertedVal    2   97[BANK0 ] unsigned short 
  7455 ;;  i               2  107[BANK0 ] int 
  7456 ;;  i               2  105[BANK0 ] int 
  7457 ;;  PartNum        19   47[BANK0 ] unsigned char [19]
  7458 ;;  SerialNum      11   85[BANK0 ] unsigned char [11]
  7459 ;;  Date           11   66[BANK0 ] unsigned char [11]
  7460 ;;  Time            8   77[BANK0 ] unsigned char [8]
  7461 ;;  RevNum          2   99[BANK0 ] unsigned char [2]
  7462 ;;  j               2  103[BANK0 ] int 
  7463 ;;  readDataEven    1  102[BANK0 ] unsigned char 
  7464 ;;  readDataOdd     1  101[BANK0 ] unsigned char 
  7465 ;; Return value:  Size  Location     Type
  7466 ;;                  1    wreg      void 
  7467 ;; Registers used:
  7468 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7469 ;; Tracked objects:
  7470 ;;		On entry : 0/0
  7471 ;;		On exit  : 0/0
  7472 ;;		Unchanged: 0/0
  7473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7475 ;;      Locals:         0      62       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7476 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7477 ;;      Totals:         2      62       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7478 ;;Total ram usage:       64 bytes
  7479 ;; Hardware stack levels used:    1
  7480 ;; Hardware stack levels required when called:   13
  7481 ;; This function calls:
  7482 ;;		_ADCC_GetSingleConversion
  7483 ;;		_CardConfigIni
  7484 ;;		_printf
  7485 ;; This function is called by:
  7486 ;;		_main
  7487 ;;		_ValidateCmd
  7488 ;; This function uses a non-reentrant model
  7489 ;;
  7490                           
  7491                           	psect	text12
  7492  001372                     __ptext12:
  7493                           	opt callstack 0
  7494  001372                     _InitialiseString:
  7495                           	opt callstack 16
  7496                           
  7497                           ;incstack = 0
  7498                           ;InitialiseString@Partial stored from wreg
  7499  001372  0100               	movlb	0	; () banked
  7500  001374  6FC0               	movwf	InitialiseString@Partial& (0+255),b
  7501  001376                     
  7502                           ;RS232.c: 61:     char readDataOdd, readDataEven;;RS232.c: 63:     char SerialNum[11] = 
      +                          { '\0' };
  7503  001376  EE20  F0B5         	lfsr	2,InitialiseString@SerialNum
  7504  00137A  0E0A               	movlw	10
  7505  00137C                     u7801:
  7506  00137C  6ADE               	clrf	postinc2,c
  7507  00137E  06E8               	decf	wreg,f,c
  7508  001380  E2FD               	bc	u7801
  7509  001382                     
  7510                           ;RS232.c: 65:     CardConfigIni("Serial", SerialNum,0x0300,5);
  7511  001382  0ED7               	movlw	low STR_86
  7512  001384  6E0A               	movwf	CardConfigIni@Name^0,c
  7513  001386  0EFF               	movlw	high STR_86
  7514  001388  6E0B               	movwf	(CardConfigIni@Name+1)^0,c
  7515  00138A  0EB5               	movlw	low InitialiseString@SerialNum
  7516  00138C  6E0C               	movwf	CardConfigIni@RetNum^0,c
  7517  00138E  0E00               	movlw	high InitialiseString@SerialNum
  7518  001390  6E0D               	movwf	(CardConfigIni@RetNum+1)^0,c
  7519  001392  0E03               	movlw	3
  7520  001394  6E0F               	movwf	(CardConfigIni@dataeeAddrWrk+1)^0,c
  7521  001396  0E00               	movlw	0
  7522  001398  6E0E               	movwf	CardConfigIni@dataeeAddrWrk^0,c
  7523  00139A  0E00               	movlw	0
  7524  00139C  6E11               	movwf	(CardConfigIni@NumBytes+1)^0,c
  7525  00139E  0E05               	movlw	5
  7526  0013A0  6E10               	movwf	CardConfigIni@NumBytes^0,c
  7527  0013A2  EC0E  F015         	call	_CardConfigIni	;wreg free
  7528  0013A6                     
  7529                           ;RS232.c: 67:     char PartNum[19] = { '\0' };
  7530  0013A6  EE20  F08F         	lfsr	2,InitialiseString@PartNum
  7531  0013AA  0E12               	movlw	18
  7532  0013AC                     u7811:
  7533  0013AC  6ADE               	clrf	postinc2,c
  7534  0013AE  06E8               	decf	wreg,f,c
  7535  0013B0  E2FD               	bc	u7811
  7536                           
  7537                           ;RS232.c: 68:     CardConfigIni("Part", PartNum,0x0100,8);
  7538  0013B2  0EEB               	movlw	low STR_88
  7539  0013B4  6E0A               	movwf	CardConfigIni@Name^0,c
  7540  0013B6  0EFF               	movlw	high STR_88
  7541  0013B8  6E0B               	movwf	(CardConfigIni@Name+1)^0,c
  7542  0013BA  0E8F               	movlw	low InitialiseString@PartNum
  7543  0013BC  6E0C               	movwf	CardConfigIni@RetNum^0,c
  7544  0013BE  0E00               	movlw	high InitialiseString@PartNum
  7545  0013C0  6E0D               	movwf	(CardConfigIni@RetNum+1)^0,c
  7546  0013C2  0E01               	movlw	1
  7547  0013C4  6E0F               	movwf	(CardConfigIni@dataeeAddrWrk+1)^0,c
  7548  0013C6  0E00               	movlw	0
  7549  0013C8  6E0E               	movwf	CardConfigIni@dataeeAddrWrk^0,c
  7550  0013CA  0E00               	movlw	0
  7551  0013CC  6E11               	movwf	(CardConfigIni@NumBytes+1)^0,c
  7552  0013CE  0E08               	movlw	8
  7553  0013D0  6E10               	movwf	CardConfigIni@NumBytes^0,c
  7554  0013D2  EC0E  F015         	call	_CardConfigIni	;wreg free
  7555  0013D6                     
  7556                           ;RS232.c: 70:     char RevNum[2] = { '\0' };
  7557  0013D6  0E00               	movlw	0
  7558  0013D8  0100               	movlb	0	; () banked
  7559  0013DA  6FC4               	movwf	(InitialiseString@RevNum+1)& (0+255),b
  7560  0013DC  0E00               	movlw	0
  7561  0013DE  6FC3               	movwf	InitialiseString@RevNum& (0+255),b
  7562  0013E0                     
  7563                           ; BSR set to: 0
  7564                           ;RS232.c: 71:     CardConfigIni("Rev", RevNum,0x0200,1);
  7565  0013E0  0EF5               	movlw	low STR_90
  7566  0013E2  6E0A               	movwf	CardConfigIni@Name^0,c
  7567  0013E4  0EFF               	movlw	high STR_90
  7568  0013E6  6E0B               	movwf	(CardConfigIni@Name+1)^0,c
  7569  0013E8  0EC3               	movlw	low InitialiseString@RevNum
  7570  0013EA  6E0C               	movwf	CardConfigIni@RetNum^0,c
  7571  0013EC  0E00               	movlw	high InitialiseString@RevNum
  7572  0013EE  6E0D               	movwf	(CardConfigIni@RetNum+1)^0,c
  7573  0013F0  0E02               	movlw	2
  7574  0013F2  6E0F               	movwf	(CardConfigIni@dataeeAddrWrk+1)^0,c
  7575  0013F4  0E00               	movlw	0
  7576  0013F6  6E0E               	movwf	CardConfigIni@dataeeAddrWrk^0,c
  7577  0013F8  0E00               	movlw	0
  7578  0013FA  6E11               	movwf	(CardConfigIni@NumBytes+1)^0,c
  7579  0013FC  0E01               	movlw	1
  7580  0013FE  6E10               	movwf	CardConfigIni@NumBytes^0,c
  7581  001400  EC0E  F015         	call	_CardConfigIni	;wreg free
  7582  001404                     
  7583                           ;RS232.c: 75:     printf("\r\nDan and Sam's Modbus GPIO Expansion\r\n");
  7584  001404  0ECD               	movlw	low STR_95
  7585  001406  0100               	movlb	0	; () banked
  7586  001408  6F7D               	movwf	printf@fmt& (0+255),b
  7587  00140A  0EF9               	movlw	high STR_95
  7588  00140C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7589  00140E  EC8A  F028         	call	_printf	;wreg free
  7590  001412                     
  7591                           ;RS232.c: 79:     printf("Card Ser No. %s \r\n",SerialNum);
  7592  001412  0EFC               	movlw	low STR_96
  7593  001414  0100               	movlb	0	; () banked
  7594  001416  6F7D               	movwf	printf@fmt& (0+255),b
  7595  001418  0EFE               	movlw	high STR_96
  7596  00141A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7597  00141C  0EB5               	movlw	low InitialiseString@SerialNum
  7598  00141E  6F7F               	movwf	(?_printf+2)& (0+255),b
  7599  001420  0E00               	movlw	high InitialiseString@SerialNum
  7600  001422  6F80               	movwf	(?_printf+3)& (0+255),b
  7601  001424  EC8A  F028         	call	_printf	;wreg free
  7602  001428                     
  7603                           ;RS232.c: 80:     printf("Card Part No. %s \r\n",PartNum);
  7604  001428  0EE8               	movlw	low STR_97
  7605  00142A  0100               	movlb	0	; () banked
  7606  00142C  6F7D               	movwf	printf@fmt& (0+255),b
  7607  00142E  0EFE               	movlw	high STR_97
  7608  001430  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7609  001432  0E8F               	movlw	low InitialiseString@PartNum
  7610  001434  6F7F               	movwf	(?_printf+2)& (0+255),b
  7611  001436  0E00               	movlw	high InitialiseString@PartNum
  7612  001438  6F80               	movwf	(?_printf+3)& (0+255),b
  7613  00143A  EC8A  F028         	call	_printf	;wreg free
  7614  00143E                     
  7615                           ;RS232.c: 81:     printf("Card Revision. %s \r\n",RevNum);
  7616  00143E  0E7F               	movlw	low STR_98
  7617  001440  0100               	movlb	0	; () banked
  7618  001442  6F7D               	movwf	printf@fmt& (0+255),b
  7619  001444  0EFE               	movlw	high STR_98
  7620  001446  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7621  001448  0EC3               	movlw	low InitialiseString@RevNum
  7622  00144A  6F7F               	movwf	(?_printf+2)& (0+255),b
  7623  00144C  0E00               	movlw	high InitialiseString@RevNum
  7624  00144E  6F80               	movwf	(?_printf+3)& (0+255),b
  7625  001450  EC8A  F028         	call	_printf	;wreg free
  7626  001454                     
  7627                           ;RS232.c: 82:     printf("Card Address. 0x05 \r\n");
  7628  001454  0E53               	movlw	low STR_99
  7629  001456  0100               	movlb	0	; () banked
  7630  001458  6F7D               	movwf	printf@fmt& (0+255),b
  7631  00145A  0EFE               	movlw	high STR_99
  7632  00145C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7633  00145E  EC8A  F028         	call	_printf	;wreg free
  7634  001462                     
  7635                           ;RS232.c: 83:     printf("Compiled on %s at %s by XC8 version %u\r\n\n",
  7636  001462  0E4F               	movlw	low STR_100
  7637  001464  0100               	movlb	0	; () banked
  7638  001466  6F7D               	movwf	printf@fmt& (0+255),b
  7639  001468  0EF9               	movlw	high STR_100
  7640  00146A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7641  00146C  0EC2               	movlw	low STR_101
  7642  00146E  6F7F               	movwf	(?_printf+2)& (0+255),b
  7643  001470  0EFF               	movlw	high STR_101
  7644  001472  6F80               	movwf	(?_printf+3)& (0+255),b
  7645  001474  0ECE               	movlw	low STR_102
  7646  001476  6F81               	movwf	(?_printf+4)& (0+255),b
  7647  001478  0EFF               	movlw	high STR_102
  7648  00147A  6F82               	movwf	(?_printf+5)& (0+255),b
  7649  00147C  0E08               	movlw	8
  7650  00147E  6F84               	movwf	(?_printf+7)& (0+255),b
  7651  001480  0E34               	movlw	52
  7652  001482  6F83               	movwf	(?_printf+6)& (0+255),b
  7653  001484  EC8A  F028         	call	_printf	;wreg free
  7654                           
  7655                           ;RS232.c: 86:     int j = 0;
  7656  001488  0E00               	movlw	0
  7657  00148A  0100               	movlb	0	; () banked
  7658  00148C  6FC8               	movwf	(InitialiseString@j+1)& (0+255),b
  7659  00148E  0E00               	movlw	0
  7660  001490  6FC7               	movwf	InitialiseString@j& (0+255),b
  7661  001492                     
  7662                           ; BSR set to: 0
  7663                           ;RS232.c: 89:     char Date[11] = "Apr  2 2021";
  7664  001492  EE22  F04C         	lfsr	2,InitialiseString@F10765
  7665  001496  EE10  F0A2         	lfsr	1,InitialiseString@Date
  7666  00149A  0E0A               	movlw	10
  7667  00149C                     u7821:
  7668  00149C  CFDB FFE3          	movff	plusw2,plusw1
  7669  0014A0  06E8               	decf	wreg,f,c
  7670  0014A2  E2FC               	bc	u7821
  7671  0014A4                     
  7672                           ; BSR set to: 0
  7673                           ;RS232.c: 90:     for(int i=0; i<12; i = i+2){
  7674  0014A4  0E00               	movlw	0
  7675  0014A6  6FCA               	movwf	(InitialiseString@i+1)& (0+255),b
  7676  0014A8  0E00               	movlw	0
  7677  0014AA  6FC9               	movwf	InitialiseString@i& (0+255),b
  7678  0014AC                     l7766:
  7679                           
  7680                           ; BSR set to: 0
  7681                           ;RS232.c: 91:         readDataOdd = Date[i];
  7682  0014AC  0EA2               	movlw	low InitialiseString@Date
  7683  0014AE  25C9               	addwf	InitialiseString@i& (0+255),w,b
  7684  0014B0  6ED9               	movwf	fsr2l,c
  7685  0014B2  0E00               	movlw	high InitialiseString@Date
  7686  0014B4  21CA               	addwfc	(InitialiseString@i+1)& (0+255),w,b
  7687  0014B6  6EDA               	movwf	fsr2h,c
  7688  0014B8  50DF               	movf	indf2,w,c
  7689  0014BA  6FC5               	movwf	InitialiseString@readDataOdd& (0+255),b
  7690                           
  7691                           ;RS232.c: 92:         readDataEven = Date[i +1];
  7692  0014BC  0E01               	movlw	1
  7693  0014BE  25C9               	addwf	InitialiseString@i& (0+255),w,b
  7694  0014C0  6E55               	movwf	??_InitialiseString^0,c
  7695  0014C2  0E00               	movlw	0
  7696  0014C4  21CA               	addwfc	(InitialiseString@i+1)& (0+255),w,b
  7697  0014C6  6E56               	movwf	(??_InitialiseString+1)^0,c
  7698  0014C8  0EA2               	movlw	low InitialiseString@Date
  7699  0014CA  2455               	addwf	??_InitialiseString^0,w,c
  7700  0014CC  6ED9               	movwf	fsr2l,c
  7701  0014CE  0E00               	movlw	high InitialiseString@Date
  7702  0014D0  2056               	addwfc	(??_InitialiseString+1)^0,w,c
  7703  0014D2  6EDA               	movwf	fsr2h,c
  7704  0014D4  50DF               	movf	indf2,w,c
  7705  0014D6  6FC6               	movwf	InitialiseString@readDataEven& (0+255),b
  7706                           
  7707                           ;RS232.c: 93:         MB304xx[j] = readDataOdd *256 + readDataEven;
  7708  0014D8  51C6               	movf	InitialiseString@readDataEven& (0+255),w,b
  7709  0014DA  C0C5  F055         	movff	InitialiseString@readDataOdd,??_InitialiseString
  7710  0014DE  6A56               	clrf	(??_InitialiseString+1)^0,c
  7711  0014E0  C055  F056         	movff	??_InitialiseString,??_InitialiseString+1
  7712  0014E4  6A55               	clrf	??_InitialiseString^0,c
  7713  0014E6  2655               	addwf	??_InitialiseString^0,f,c
  7714  0014E8  0E00               	movlw	0
  7715  0014EA  2256               	addwfc	(??_InitialiseString+1)^0,f,c
  7716  0014EC  90D8               	bcf	status,0,c
  7717  0014EE  35C7               	rlcf	InitialiseString@j& (0+255),w,b
  7718  0014F0  6ED9               	movwf	fsr2l,c
  7719  0014F2  35C8               	rlcf	(InitialiseString@j+1)& (0+255),w,b
  7720  0014F4  6EDA               	movwf	fsr2h,c
  7721  0014F6  0E72               	movlw	low _MB304xx
  7722  0014F8  26D9               	addwf	fsr2l,f,c
  7723  0014FA  0E01               	movlw	high _MB304xx
  7724  0014FC  22DA               	addwfc	fsr2h,f,c
  7725  0014FE  C055  FFDE         	movff	??_InitialiseString,postinc2
  7726  001502  C056  FFDD         	movff	??_InitialiseString+1,postdec2
  7727  001506                     
  7728                           ; BSR set to: 0
  7729                           ;RS232.c: 94:         j++;
  7730  001506  4BC7               	infsnz	InitialiseString@j& (0+255),f,b
  7731  001508  2BC8               	incf	(InitialiseString@j+1)& (0+255),f,b
  7732  00150A                     
  7733                           ; BSR set to: 0
  7734                           ;RS232.c: 95:     }
  7735  00150A  0E02               	movlw	2
  7736  00150C  25C9               	addwf	InitialiseString@i& (0+255),w,b
  7737  00150E  6FC9               	movwf	InitialiseString@i& (0+255),b
  7738  001510  0E00               	movlw	0
  7739  001512  21CA               	addwfc	(InitialiseString@i+1)& (0+255),w,b
  7740  001514  6FCA               	movwf	(InitialiseString@i+1)& (0+255),b
  7741  001516                     
  7742                           ; BSR set to: 0
  7743  001516  BFCA               	btfsc	(InitialiseString@i+1)& (0+255),7,b
  7744  001518  EF97  F00A         	goto	u7831
  7745  00151C  51CA               	movf	(InitialiseString@i+1)& (0+255),w,b
  7746  00151E  E109               	bnz	u7830
  7747  001520  0E0C               	movlw	12
  7748  001522  5DC9               	subwf	InitialiseString@i& (0+255),w,b
  7749  001524  A0D8               	btfss	status,0,c
  7750  001526  EF97  F00A         	goto	u7831
  7751  00152A  EF99  F00A         	goto	u7830
  7752  00152E                     u7831:
  7753  00152E  EF56  F00A         	goto	l7766
  7754  001532                     u7830:
  7755  001532                     
  7756                           ; BSR set to: 0
  7757                           ;RS232.c: 98:     j = 0;
  7758  001532  0E00               	movlw	0
  7759  001534  6FC8               	movwf	(InitialiseString@j+1)& (0+255),b
  7760  001536  0E00               	movlw	0
  7761  001538  6FC7               	movwf	InitialiseString@j& (0+255),b
  7762  00153A                     
  7763                           ; BSR set to: 0
  7764                           ;RS232.c: 99:     char Time[8] = "23:36:13";
  7765  00153A  EE21  F088         	lfsr	2,InitialiseString@F10768
  7766  00153E  EE10  F0AD         	lfsr	1,InitialiseString@Time
  7767  001542  0E07               	movlw	7
  7768  001544                     u7841:
  7769  001544  CFDB FFE3          	movff	plusw2,plusw1
  7770  001548  06E8               	decf	wreg,f,c
  7771  00154A  E2FC               	bc	u7841
  7772  00154C                     
  7773                           ; BSR set to: 0
  7774                           ;RS232.c: 100:     for(int i=0; i<8; i = i+2){
  7775  00154C  0E00               	movlw	0
  7776  00154E  6FCC               	movwf	(InitialiseString@i_1759+1)& (0+255),b
  7777  001550  0E00               	movlw	0
  7778  001552  6FCB               	movwf	InitialiseString@i_1759& (0+255),b
  7779  001554                     l7784:
  7780                           
  7781                           ; BSR set to: 0
  7782                           ;RS232.c: 101:         readDataOdd = Time[i];
  7783  001554  0EAD               	movlw	low InitialiseString@Time
  7784  001556  25CB               	addwf	InitialiseString@i_1759& (0+255),w,b
  7785  001558  6ED9               	movwf	fsr2l,c
  7786  00155A  0E00               	movlw	high InitialiseString@Time
  7787  00155C  21CC               	addwfc	(InitialiseString@i_1759+1)& (0+255),w,b
  7788  00155E  6EDA               	movwf	fsr2h,c
  7789  001560  50DF               	movf	indf2,w,c
  7790  001562  6FC5               	movwf	InitialiseString@readDataOdd& (0+255),b
  7791                           
  7792                           ;RS232.c: 102:         readDataEven = Time[i +1];
  7793  001564  0E01               	movlw	1
  7794  001566  25CB               	addwf	InitialiseString@i_1759& (0+255),w,b
  7795  001568  6E55               	movwf	??_InitialiseString^0,c
  7796  00156A  0E00               	movlw	0
  7797  00156C  21CC               	addwfc	(InitialiseString@i_1759+1)& (0+255),w,b
  7798  00156E  6E56               	movwf	(??_InitialiseString+1)^0,c
  7799  001570  0EAD               	movlw	low InitialiseString@Time
  7800  001572  2455               	addwf	??_InitialiseString^0,w,c
  7801  001574  6ED9               	movwf	fsr2l,c
  7802  001576  0E00               	movlw	high InitialiseString@Time
  7803  001578  2056               	addwfc	(??_InitialiseString+1)^0,w,c
  7804  00157A  6EDA               	movwf	fsr2h,c
  7805  00157C  50DF               	movf	indf2,w,c
  7806  00157E  6FC6               	movwf	InitialiseString@readDataEven& (0+255),b
  7807                           
  7808                           ;RS232.c: 103:         MB305xx[j] = readDataOdd *256 + readDataEven;
  7809  001580  51C6               	movf	InitialiseString@readDataEven& (0+255),w,b
  7810  001582  C0C5  F055         	movff	InitialiseString@readDataOdd,??_InitialiseString
  7811  001586  6A56               	clrf	(??_InitialiseString+1)^0,c
  7812  001588  C055  F056         	movff	??_InitialiseString,??_InitialiseString+1
  7813  00158C  6A55               	clrf	??_InitialiseString^0,c
  7814  00158E  2655               	addwf	??_InitialiseString^0,f,c
  7815  001590  0E00               	movlw	0
  7816  001592  2256               	addwfc	(??_InitialiseString+1)^0,f,c
  7817  001594  90D8               	bcf	status,0,c
  7818  001596  35C7               	rlcf	InitialiseString@j& (0+255),w,b
  7819  001598  6ED9               	movwf	fsr2l,c
  7820  00159A  35C8               	rlcf	(InitialiseString@j+1)& (0+255),w,b
  7821  00159C  6EDA               	movwf	fsr2h,c
  7822  00159E  0E3C               	movlw	low _MB305xx
  7823  0015A0  26D9               	addwf	fsr2l,f,c
  7824  0015A2  0E02               	movlw	high _MB305xx
  7825  0015A4  22DA               	addwfc	fsr2h,f,c
  7826  0015A6  C055  FFDE         	movff	??_InitialiseString,postinc2
  7827  0015AA  C056  FFDD         	movff	??_InitialiseString+1,postdec2
  7828  0015AE                     
  7829                           ; BSR set to: 0
  7830                           ;RS232.c: 104:         j++;
  7831  0015AE  4BC7               	infsnz	InitialiseString@j& (0+255),f,b
  7832  0015B0  2BC8               	incf	(InitialiseString@j+1)& (0+255),f,b
  7833  0015B2                     
  7834                           ; BSR set to: 0
  7835                           ;RS232.c: 105:     }
  7836  0015B2  0E02               	movlw	2
  7837  0015B4  25CB               	addwf	InitialiseString@i_1759& (0+255),w,b
  7838  0015B6  6FCB               	movwf	InitialiseString@i_1759& (0+255),b
  7839  0015B8  0E00               	movlw	0
  7840  0015BA  21CC               	addwfc	(InitialiseString@i_1759+1)& (0+255),w,b
  7841  0015BC  6FCC               	movwf	(InitialiseString@i_1759+1)& (0+255),b
  7842  0015BE                     
  7843                           ; BSR set to: 0
  7844  0015BE  BFCC               	btfsc	(InitialiseString@i_1759+1)& (0+255),7,b
  7845  0015C0  EFEB  F00A         	goto	u7851
  7846  0015C4  51CC               	movf	(InitialiseString@i_1759+1)& (0+255),w,b
  7847  0015C6  E109               	bnz	u7850
  7848  0015C8  0E08               	movlw	8
  7849  0015CA  5DCB               	subwf	InitialiseString@i_1759& (0+255),w,b
  7850  0015CC  A0D8               	btfss	status,0,c
  7851  0015CE  EFEB  F00A         	goto	u7851
  7852  0015D2  EFED  F00A         	goto	u7850
  7853  0015D6                     u7851:
  7854  0015D6  EFAA  F00A         	goto	l7784
  7855  0015DA                     u7850:
  7856  0015DA                     
  7857                           ; BSR set to: 0
  7858                           ;RS232.c: 108:     if(Partial != 1){
  7859  0015DA  05C0               	decf	InitialiseString@Partial& (0+255),w,b
  7860  0015DC  B4D8               	btfsc	status,2,c
  7861  0015DE  EFF3  F00A         	goto	u7861
  7862  0015E2  EFF5  F00A         	goto	u7860
  7863  0015E6                     u7861:
  7864  0015E6  EF92  F00B         	goto	l1139
  7865  0015EA                     u7860:
  7866  0015EA                     
  7867                           ; BSR set to: 0
  7868                           ;RS232.c: 109:         printf("Initalisation Complete - Ready\r\n\n");
  7869  0015EA  0EB3               	movlw	low STR_103
  7870  0015EC  6F7D               	movwf	printf@fmt& (0+255),b
  7871  0015EE  0EFB               	movlw	high STR_103
  7872  0015F0  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7873  0015F2  EC8A  F028         	call	_printf	;wreg free
  7874                           
  7875                           ;RS232.c: 110:         printf("Modbus Function Codes Supported:\r\n\n");
  7876  0015F6  0E48               	movlw	low STR_104
  7877  0015F8  0100               	movlb	0	; () banked
  7878  0015FA  6F7D               	movwf	printf@fmt& (0+255),b
  7879  0015FC  0EFB               	movlw	high STR_104
  7880  0015FE  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7881  001600  EC8A  F028         	call	_printf	;wreg free
  7882                           
  7883                           ;RS232.c: 111:         printf("   0x04 - Read Multiple 16bit Registers\r\n");
  7884  001604  0E79               	movlw	low STR_105
  7885  001606  0100               	movlb	0	; () banked
  7886  001608  6F7D               	movwf	printf@fmt& (0+255),b
  7887  00160A  0EF9               	movlw	high STR_105
  7888  00160C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7889  00160E  EC8A  F028         	call	_printf	;wreg free
  7890                           
  7891                           ;RS232.c: 112:         printf("      Add 0x0000 to 0x0031 - 32x Circuit Get Status (lowe
      +                          r 8bits only)\r\n");
  7892  001612  0EAB               	movlw	low STR_106
  7893  001614  0100               	movlb	0	; () banked
  7894  001616  6F7D               	movwf	printf@fmt& (0+255),b
  7895  001618  0EF3               	movlw	high STR_106
  7896  00161A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7897  00161C  EC8A  F028         	call	_printf	;wreg free
  7898                           
  7899                           ;RS232.c: 113:         printf("      Add 0x0100 to 0x0108 - Part Number (ASCII)\r\n");
  7900  001620  0EC4               	movlw	low STR_107
  7901  001622  0100               	movlb	0	; () banked
  7902  001624  6F7D               	movwf	printf@fmt& (0+255),b
  7903  001626  0EF8               	movlw	high STR_107
  7904  001628  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7905  00162A  EC8A  F028         	call	_printf	;wreg free
  7906                           
  7907                           ;RS232.c: 114:         printf("      Add 0x0200 - Revision (ASCII)\r\n");
  7908  00162E  0EF5               	movlw	low STR_108
  7909  001630  0100               	movlb	0	; () banked
  7910  001632  6F7D               	movwf	printf@fmt& (0+255),b
  7911  001634  0EF9               	movlw	high STR_108
  7912  001636  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7913  001638  EC8A  F028         	call	_printf	;wreg free
  7914                           
  7915                           ;RS232.c: 115:         printf("      Add 0x0300 to 0x0304 - Serial Number (ASCII)\r\n");
  7916  00163C  0E85               	movlw	low STR_109
  7917  00163E  0100               	movlb	0	; () banked
  7918  001640  6F7D               	movwf	printf@fmt& (0+255),b
  7919  001642  0EF6               	movlw	high STR_109
  7920  001644  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7921  001646  EC8A  F028         	call	_printf	;wreg free
  7922                           
  7923                           ;RS232.c: 116:         printf("      Add 0x0400 to 0x0405 - Compile Date (ASCII)\r\n");
  7924  00164A  0E24               	movlw	low STR_110
  7925  00164C  0100               	movlb	0	; () banked
  7926  00164E  6F7D               	movwf	printf@fmt& (0+255),b
  7927  001650  0EF7               	movlw	high STR_110
  7928  001652  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7929  001654  EC8A  F028         	call	_printf	;wreg free
  7930                           
  7931                           ;RS232.c: 117:         printf("      Add 0x0500 to 0x0504 - Compile Time - (ASCII)\r\n")
      +                          ;
  7932  001658  0EAD               	movlw	low STR_111
  7933  00165A  0100               	movlb	0	; () banked
  7934  00165C  6F7D               	movwf	printf@fmt& (0+255),b
  7935  00165E  0EF5               	movlw	high STR_111
  7936  001660  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7937  001662  EC8A  F028         	call	_printf	;wreg free
  7938                           
  7939                           ;RS232.c: 118:         printf("      Add 0x0600 to 0x0602 - 3x Analogue Inputs (0x000 to
      +                           0x03ff)\r\n\n");
  7940  001666  0EF4               	movlw	low STR_112
  7941  001668  0100               	movlb	0	; () banked
  7942  00166A  6F7D               	movwf	printf@fmt& (0+255),b
  7943  00166C  0EF3               	movlw	high STR_112
  7944  00166E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7945  001670  EC8A  F028         	call	_printf	;wreg free
  7946                           
  7947                           ;RS232.c: 119:         printf("   0x10 - Write Multiple Output Holding Registers (Max 32
      +                          x 16bit)\r\n");
  7948  001674  0E39               	movlw	low STR_113
  7949  001676  0100               	movlb	0	; () banked
  7950  001678  6F7D               	movwf	printf@fmt& (0+255),b
  7951  00167A  0EF4               	movlw	high STR_113
  7952  00167C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7953  00167E  EC8A  F028         	call	_printf	;wreg free
  7954                           
  7955                           ;RS232.c: 120:         printf("      Add 0x0000 to 0x0031 - 32x Circuit Set Status  (low
      +                          er 8bits only)\r\n\n");
  7956  001682  0E60               	movlw	low STR_114
  7957  001684  0100               	movlb	0	; () banked
  7958  001686  6F7D               	movwf	printf@fmt& (0+255),b
  7959  001688  0EF3               	movlw	high STR_114
  7960  00168A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7961  00168C  EC8A  F028         	call	_printf	;wreg free
  7962                           
  7963                           ;RS232.c: 121:         printf("   0x03 - Read Multiple Output Holding Registers (Max 32x
      +                           16bit)\r\n");
  7964  001690  0E7D               	movlw	low STR_115
  7965  001692  0100               	movlb	0	; () banked
  7966  001694  6F7D               	movwf	printf@fmt& (0+255),b
  7967  001696  0EF4               	movlw	high STR_115
  7968  001698  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7969  00169A  EC8A  F028         	call	_printf	;wreg free
  7970                           
  7971                           ;RS232.c: 122:         printf("      Add 0x0000 to 0x0031 - 32x Circuit Get Status  (low
      +                          er 8bits only)\r\n\n");
  7972  00169E  0E15               	movlw	low STR_116
  7973  0016A0  0100               	movlb	0	; () banked
  7974  0016A2  6F7D               	movwf	printf@fmt& (0+255),b
  7975  0016A4  0EF3               	movlw	high STR_116
  7976  0016A6  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7977  0016A8  EC8A  F028         	call	_printf	;wreg free
  7978                           
  7979                           ;RS232.c: 125:         printf("Commands Supported:\r\n");
  7980  0016AC  0E69               	movlw	low STR_117
  7981  0016AE  0100               	movlb	0	; () banked
  7982  0016B0  6F7D               	movwf	printf@fmt& (0+255),b
  7983  0016B2  0EFE               	movlw	high STR_117
  7984  0016B4  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7985  0016B6  EC8A  F028         	call	_printf	;wreg free
  7986                           
  7987                           ;RS232.c: 126:         printf("   ? - Initalise and display card details\r\n");
  7988  0016BA  0EF7               	movlw	low STR_118
  7989  0016BC  0100               	movlb	0	; () banked
  7990  0016BE  6F7D               	movwf	printf@fmt& (0+255),b
  7991  0016C0  0EF8               	movlw	high STR_118
  7992  0016C2  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  7993  0016C4  EC8A  F028         	call	_printf	;wreg free
  7994                           
  7995                           ;RS232.c: 127:         printf("   serial - Set card serial number\r\n");
  7996  0016C8  0ED9               	movlw	low STR_119
  7997  0016CA  0100               	movlb	0	; () banked
  7998  0016CC  6F7D               	movwf	printf@fmt& (0+255),b
  7999  0016CE  0EFA               	movlw	high STR_119
  8000  0016D0  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8001  0016D2  EC8A  F028         	call	_printf	;wreg free
  8002                           
  8003                           ;RS232.c: 128:         printf("   part - Set card part number\r\n");
  8004  0016D6  0EF7               	movlw	low STR_120
  8005  0016D8  0100               	movlb	0	; () banked
  8006  0016DA  6F7D               	movwf	printf@fmt& (0+255),b
  8007  0016DC  0EFB               	movlw	high STR_120
  8008  0016DE  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8009  0016E0  EC8A  F028         	call	_printf	;wreg free
  8010                           
  8011                           ;RS232.c: 129:         printf("   rev - Set card part number\r\n");
  8012  0016E4  0E7B               	movlw	low STR_121
  8013  0016E6  0100               	movlb	0	; () banked
  8014  0016E8  6F7D               	movwf	printf@fmt& (0+255),b
  8015  0016EA  0EFC               	movlw	high STR_121
  8016  0016EC  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8017  0016EE  EC8A  F028         	call	_printf	;wreg free
  8018                           
  8019                           ;RS232.c: 130:         printf("   debug - Toggles trace outputs. Slows down time device 
      +                          can respond between commands. DEFAULT ON!\r\n\n");
  8020  0016F2  0EAF               	movlw	low STR_122
  8021  0016F4  0100               	movlb	0	; () banked
  8022  0016F6  6F7D               	movwf	printf@fmt& (0+255),b
  8023  0016F8  0EF2               	movlw	high STR_122
  8024  0016FA  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8025  0016FC  EC8A  F028         	call	_printf	;wreg free
  8026  001700                     
  8027                           ;RS232.c: 132:         uint16_t convertedValue;;RS232.c: 133:         convertedValue = A
      +                          DCC_GetSingleConversion(AIP_0);
  8028  001700  0E00               	movlw	0
  8029  001702  EC47  F028         	call	_ADCC_GetSingleConversion
  8030  001706  C005  F0C1         	movff	?_ADCC_GetSingleConversion,InitialiseString@convertedValue
  8031  00170A  C006  F0C2         	movff	?_ADCC_GetSingleConversion+1,InitialiseString@convertedValue+1
  8032  00170E                     
  8033                           ;RS232.c: 134:         printf("ADC0: 0x%04x \r\n", convertedValue);
  8034  00170E  0E6B               	movlw	low STR_123
  8035  001710  0100               	movlb	0	; () banked
  8036  001712  6F7D               	movwf	printf@fmt& (0+255),b
  8037  001714  0EFF               	movlw	high STR_123
  8038  001716  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8039  001718  C0C1  F07F         	movff	InitialiseString@convertedValue,?_printf+2
  8040  00171C  C0C2  F080         	movff	InitialiseString@convertedValue+1,?_printf+3
  8041  001720  EC8A  F028         	call	_printf	;wreg free
  8042  001724                     l1139:
  8043  001724  0012               	return		;funcret
  8044  001726                     __end_of_InitialiseString:
  8045                           	opt callstack 0
  8046                           
  8047 ;; *************** function _CardConfigIni *****************
  8048 ;; Defined at:
  8049 ;;		line 10 in file "RS232.c"
  8050 ;; Parameters:    Size  Location     Type
  8051 ;;  Name            2    9[COMRAM] PTR unsigned char 
  8052 ;;		 -> STR_94(4), STR_93(5), STR_92(7), 
  8053 ;;  RetNum          2   11[COMRAM] PTR unsigned char 
  8054 ;;		 -> InitialiseString@RevNum(2), InitialiseString@PartNum(19), InitialiseString@SerialNum(11), 
  8055 ;;  dataeeAddrWr    2   13[COMRAM] unsigned short 
  8056 ;;  NumBytes        2   15[COMRAM] int 
  8057 ;; Auto vars:     Size  Location     Type
  8058 ;;  i               2   21[COMRAM] int 
  8059 ;;  j               2   19[COMRAM] int 
  8060 ;;  readDataEven    1   24[COMRAM] unsigned char 
  8061 ;;  readDataOdd     1   23[COMRAM] unsigned char 
  8062 ;; Return value:  Size  Location     Type
  8063 ;;                  1    wreg      void 
  8064 ;; Registers used:
  8065 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8066 ;; Tracked objects:
  8067 ;;		On entry : 0/0
  8068 ;;		On exit  : 0/0
  8069 ;;		Unchanged: 0/0
  8070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8071 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8072 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8073 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8074 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8075 ;;Total ram usage:       16 bytes
  8076 ;; Hardware stack levels used:    1
  8077 ;; Hardware stack levels required when called:    5
  8078 ;; This function calls:
  8079 ;;		_DATAEE_ReadByte
  8080 ;;		_strcmp
  8081 ;; This function is called by:
  8082 ;;		_InitialiseString
  8083 ;; This function uses a non-reentrant model
  8084 ;;
  8085                           
  8086                           	psect	text13
  8087  002A1C                     __ptext13:
  8088                           	opt callstack 0
  8089  002A1C                     _CardConfigIni:
  8090                           	opt callstack 23
  8091  002A1C                     
  8092                           ;RS232.c: 14:     char readDataOdd, readDataEven;;RS232.c: 15:     int i=0, j=0;
  8093  002A1C  0E00               	movlw	0
  8094  002A1E  6E17               	movwf	(CardConfigIni@i+1)^0,c
  8095  002A20  0E00               	movlw	0
  8096  002A22  6E16               	movwf	CardConfigIni@i^0,c
  8097  002A24  0E00               	movlw	0
  8098  002A26  6E15               	movwf	(CardConfigIni@j+1)^0,c
  8099  002A28  0E00               	movlw	0
  8100  002A2A  6E14               	movwf	CardConfigIni@j^0,c
  8101                           
  8102                           ;RS232.c: 19:     for(i = 0; i < NumBytes; i++){
  8103  002A2C  0E00               	movlw	0
  8104  002A2E  6E17               	movwf	(CardConfigIni@i+1)^0,c
  8105  002A30  0E00               	movlw	0
  8106  002A32  6E16               	movwf	CardConfigIni@i^0,c
  8107  002A34  EFEE  F015         	goto	l7608
  8108  002A38                     l7570:
  8109                           
  8110                           ;RS232.c: 20:         readDataOdd = DATAEE_ReadByte(dataeeAddrWrk);
  8111  002A38  C00E  F005         	movff	CardConfigIni@dataeeAddrWrk,DATAEE_ReadByte@bAdd
  8112  002A3C  C00F  F006         	movff	CardConfigIni@dataeeAddrWrk+1,DATAEE_ReadByte@bAdd+1
  8113  002A40  ECEF  F028         	call	_DATAEE_ReadByte	;wreg free
  8114  002A44  6E18               	movwf	CardConfigIni@readDataOdd^0,c
  8115  002A46                     
  8116                           ;RS232.c: 22:         _delay((unsigned long)((50)*(32000000/4000.0)));
  8117  002A46  0E03               	movlw	3
  8118  002A48  6E13               	movwf	(??_CardConfigIni+1)^0,c
  8119  002A4A  0E08               	movlw	8
  8120  002A4C  6E12               	movwf	??_CardConfigIni^0,c
  8121  002A4E  0E77               	movlw	119
  8122  002A50                     u8807:
  8123  002A50  2EE8               	decfsz	wreg,f,c
  8124  002A52  D7FE               	bra	u8807
  8125  002A54  2E12               	decfsz	??_CardConfigIni^0,f,c
  8126  002A56  D7FC               	bra	u8807
  8127  002A58  2E13               	decfsz	(??_CardConfigIni+1)^0,f,c
  8128  002A5A  D7FA               	bra	u8807
  8129  002A5C  F000               	nop	
  8130  002A5E                     
  8131                           ;RS232.c: 25:         if(readDataOdd != 0xFF){
  8132  002A5E  2818               	incf	CardConfigIni@readDataOdd^0,w,c
  8133  002A60  B4D8               	btfsc	status,2,c
  8134  002A62  EF35  F015         	goto	u7661
  8135  002A66  EF37  F015         	goto	u7660
  8136  002A6A                     u7661:
  8137  002A6A  EF41  F015         	goto	l7580
  8138  002A6E                     u7660:
  8139  002A6E                     
  8140                           ;RS232.c: 26:             RetNum[j] = readDataOdd;
  8141  002A6E  5014               	movf	CardConfigIni@j^0,w,c
  8142  002A70  240C               	addwf	CardConfigIni@RetNum^0,w,c
  8143  002A72  6ED9               	movwf	fsr2l,c
  8144  002A74  5015               	movf	(CardConfigIni@j+1)^0,w,c
  8145  002A76  200D               	addwfc	(CardConfigIni@RetNum+1)^0,w,c
  8146  002A78  6EDA               	movwf	fsr2h,c
  8147  002A7A  C018  FFDF         	movff	CardConfigIni@readDataOdd,indf2
  8148  002A7E                     
  8149                           ;RS232.c: 27:             j++;
  8150  002A7E  4A14               	infsnz	CardConfigIni@j^0,f,c
  8151  002A80  2A15               	incf	(CardConfigIni@j+1)^0,f,c
  8152  002A82                     l7580:
  8153                           
  8154                           ;RS232.c: 30:         dataeeAddrWrk++;
  8155  002A82  4A0E               	infsnz	CardConfigIni@dataeeAddrWrk^0,f,c
  8156  002A84  2A0F               	incf	(CardConfigIni@dataeeAddrWrk+1)^0,f,c
  8157  002A86                     
  8158                           ;RS232.c: 31:         readDataEven = DATAEE_ReadByte(dataeeAddrWrk);
  8159  002A86  C00E  F005         	movff	CardConfigIni@dataeeAddrWrk,DATAEE_ReadByte@bAdd
  8160  002A8A  C00F  F006         	movff	CardConfigIni@dataeeAddrWrk+1,DATAEE_ReadByte@bAdd+1
  8161  002A8E  ECEF  F028         	call	_DATAEE_ReadByte	;wreg free
  8162  002A92  6E19               	movwf	CardConfigIni@readDataEven^0,c
  8163  002A94                     
  8164                           ;RS232.c: 33:         dataeeAddrWrk++;
  8165  002A94  4A0E               	infsnz	CardConfigIni@dataeeAddrWrk^0,f,c
  8166  002A96  2A0F               	incf	(CardConfigIni@dataeeAddrWrk+1)^0,f,c
  8167  002A98                     
  8168                           ;RS232.c: 34:         _delay((unsigned long)((50)*(32000000/4000.0)));
  8169  002A98  0E03               	movlw	3
  8170  002A9A  6E13               	movwf	(??_CardConfigIni+1)^0,c
  8171  002A9C  0E08               	movlw	8
  8172  002A9E  6E12               	movwf	??_CardConfigIni^0,c
  8173  002AA0  0E77               	movlw	119
  8174  002AA2                     u8817:
  8175  002AA2  2EE8               	decfsz	wreg,f,c
  8176  002AA4  D7FE               	bra	u8817
  8177  002AA6  2E12               	decfsz	??_CardConfigIni^0,f,c
  8178  002AA8  D7FC               	bra	u8817
  8179  002AAA  2E13               	decfsz	(??_CardConfigIni+1)^0,f,c
  8180  002AAC  D7FA               	bra	u8817
  8181  002AAE  F000               	nop	
  8182  002AB0                     
  8183                           ;RS232.c: 37:         if(readDataEven != 0xFF){
  8184  002AB0  2819               	incf	CardConfigIni@readDataEven^0,w,c
  8185  002AB2  B4D8               	btfsc	status,2,c
  8186  002AB4  EF5E  F015         	goto	u7671
  8187  002AB8  EF60  F015         	goto	u7670
  8188  002ABC                     u7671:
  8189  002ABC  EF6A  F015         	goto	l7594
  8190  002AC0                     u7670:
  8191  002AC0                     
  8192                           ;RS232.c: 38:             RetNum[j] = readDataEven;
  8193  002AC0  5014               	movf	CardConfigIni@j^0,w,c
  8194  002AC2  240C               	addwf	CardConfigIni@RetNum^0,w,c
  8195  002AC4  6ED9               	movwf	fsr2l,c
  8196  002AC6  5015               	movf	(CardConfigIni@j+1)^0,w,c
  8197  002AC8  200D               	addwfc	(CardConfigIni@RetNum+1)^0,w,c
  8198  002ACA  6EDA               	movwf	fsr2h,c
  8199  002ACC  C019  FFDF         	movff	CardConfigIni@readDataEven,indf2
  8200  002AD0                     
  8201                           ;RS232.c: 39:             j++;
  8202  002AD0  4A14               	infsnz	CardConfigIni@j^0,f,c
  8203  002AD2  2A15               	incf	(CardConfigIni@j+1)^0,f,c
  8204  002AD4                     l7594:
  8205                           
  8206                           ;RS232.c: 42:         if(!strcmp("Serial",Name)){
  8207  002AD4  0ED7               	movlw	low STR_86
  8208  002AD6  6E05               	movwf	strcmp@l^0,c
  8209  002AD8  0EFF               	movlw	high STR_86
  8210  002ADA  6E06               	movwf	(strcmp@l+1)^0,c
  8211  002ADC  C00A  F007         	movff	CardConfigIni@Name,strcmp@r
  8212  002AE0  C00B  F008         	movff	CardConfigIni@Name+1,strcmp@r+1
  8213  002AE4  ECA7  F021         	call	_strcmp	;wreg free
  8214  002AE8  5005               	movf	?_strcmp^0,w,c
  8215  002AEA  1006               	iorwf	(?_strcmp+1)^0,w,c
  8216  002AEC  A4D8               	btfss	status,2,c
  8217  002AEE  EF7B  F015         	goto	u7681
  8218  002AF2  EF7D  F015         	goto	u7680
  8219  002AF6                     u7681:
  8220  002AF6  EF96  F015         	goto	l7598
  8221  002AFA                     u7680:
  8222  002AFA                     
  8223                           ;RS232.c: 43:             MB303xx[i] = readDataOdd *256 + readDataEven;
  8224  002AFA  5019               	movf	CardConfigIni@readDataEven^0,w,c
  8225  002AFC  C018  F012         	movff	CardConfigIni@readDataOdd,??_CardConfigIni
  8226  002B00  6A13               	clrf	(??_CardConfigIni+1)^0,c
  8227  002B02  C012  F013         	movff	??_CardConfigIni,??_CardConfigIni+1
  8228  002B06  6A12               	clrf	??_CardConfigIni^0,c
  8229  002B08  2612               	addwf	??_CardConfigIni^0,f,c
  8230  002B0A  0E00               	movlw	0
  8231  002B0C  2213               	addwfc	(??_CardConfigIni+1)^0,f,c
  8232  002B0E  90D8               	bcf	status,0,c
  8233  002B10  3416               	rlcf	CardConfigIni@i^0,w,c
  8234  002B12  6ED9               	movwf	fsr2l,c
  8235  002B14  3417               	rlcf	(CardConfigIni@i+1)^0,w,c
  8236  002B16  6EDA               	movwf	fsr2h,c
  8237  002B18  0E7E               	movlw	low _MB303xx
  8238  002B1A  26D9               	addwf	fsr2l,f,c
  8239  002B1C  0E01               	movlw	high _MB303xx
  8240  002B1E  22DA               	addwfc	fsr2h,f,c
  8241  002B20  C012  FFDE         	movff	??_CardConfigIni,postinc2
  8242  002B24  C013  FFDD         	movff	??_CardConfigIni+1,postdec2
  8243                           
  8244                           ;RS232.c: 44:         }else if(!strcmp("Part",Name)){
  8245  002B28  EFEC  F015         	goto	l7606
  8246  002B2C                     l7598:
  8247  002B2C  0EEB               	movlw	low STR_88
  8248  002B2E  6E05               	movwf	strcmp@l^0,c
  8249  002B30  0EFF               	movlw	high STR_88
  8250  002B32  6E06               	movwf	(strcmp@l+1)^0,c
  8251  002B34  C00A  F007         	movff	CardConfigIni@Name,strcmp@r
  8252  002B38  C00B  F008         	movff	CardConfigIni@Name+1,strcmp@r+1
  8253  002B3C  ECA7  F021         	call	_strcmp	;wreg free
  8254  002B40  5005               	movf	?_strcmp^0,w,c
  8255  002B42  1006               	iorwf	(?_strcmp+1)^0,w,c
  8256  002B44  A4D8               	btfss	status,2,c
  8257  002B46  EFA7  F015         	goto	u7691
  8258  002B4A  EFA9  F015         	goto	u7690
  8259  002B4E                     u7691:
  8260  002B4E  EFC2  F015         	goto	l7602
  8261  002B52                     u7690:
  8262  002B52                     
  8263                           ;RS232.c: 45:             MB301xx[i] = readDataOdd *256 + readDataEven;
  8264  002B52  5019               	movf	CardConfigIni@readDataEven^0,w,c
  8265  002B54  C018  F012         	movff	CardConfigIni@readDataOdd,??_CardConfigIni
  8266  002B58  6A13               	clrf	(??_CardConfigIni+1)^0,c
  8267  002B5A  C012  F013         	movff	??_CardConfigIni,??_CardConfigIni+1
  8268  002B5E  6A12               	clrf	??_CardConfigIni^0,c
  8269  002B60  2612               	addwf	??_CardConfigIni^0,f,c
  8270  002B62  0E00               	movlw	0
  8271  002B64  2213               	addwfc	(??_CardConfigIni+1)^0,f,c
  8272  002B66  90D8               	bcf	status,0,c
  8273  002B68  3416               	rlcf	CardConfigIni@i^0,w,c
  8274  002B6A  6ED9               	movwf	fsr2l,c
  8275  002B6C  3417               	rlcf	(CardConfigIni@i+1)^0,w,c
  8276  002B6E  6EDA               	movwf	fsr2h,c
  8277  002B70  0E64               	movlw	low _MB301xx
  8278  002B72  26D9               	addwf	fsr2l,f,c
  8279  002B74  0E01               	movlw	high _MB301xx
  8280  002B76  22DA               	addwfc	fsr2h,f,c
  8281  002B78  C012  FFDE         	movff	??_CardConfigIni,postinc2
  8282  002B7C  C013  FFDD         	movff	??_CardConfigIni+1,postdec2
  8283                           
  8284                           ;RS232.c: 46:         }else if(!strcmp("Rev",Name)){
  8285  002B80  EFEC  F015         	goto	l7606
  8286  002B84                     l7602:
  8287  002B84  0EF5               	movlw	low STR_90
  8288  002B86  6E05               	movwf	strcmp@l^0,c
  8289  002B88  0EFF               	movlw	high STR_90
  8290  002B8A  6E06               	movwf	(strcmp@l+1)^0,c
  8291  002B8C  C00A  F007         	movff	CardConfigIni@Name,strcmp@r
  8292  002B90  C00B  F008         	movff	CardConfigIni@Name+1,strcmp@r+1
  8293  002B94  ECA7  F021         	call	_strcmp	;wreg free
  8294  002B98  5005               	movf	?_strcmp^0,w,c
  8295  002B9A  1006               	iorwf	(?_strcmp+1)^0,w,c
  8296  002B9C  A4D8               	btfss	status,2,c
  8297  002B9E  EFD3  F015         	goto	u7701
  8298  002BA2  EFD5  F015         	goto	u7700
  8299  002BA6                     u7701:
  8300  002BA6  EFEC  F015         	goto	l7606
  8301  002BAA                     u7700:
  8302  002BAA                     
  8303                           ;RS232.c: 47:             MB302xx[i] = readDataOdd *256 + readDataEven;
  8304  002BAA  5019               	movf	CardConfigIni@readDataEven^0,w,c
  8305  002BAC  C018  F012         	movff	CardConfigIni@readDataOdd,??_CardConfigIni
  8306  002BB0  6A13               	clrf	(??_CardConfigIni+1)^0,c
  8307  002BB2  C012  F013         	movff	??_CardConfigIni,??_CardConfigIni+1
  8308  002BB6  6A12               	clrf	??_CardConfigIni^0,c
  8309  002BB8  2612               	addwf	??_CardConfigIni^0,f,c
  8310  002BBA  0E00               	movlw	0
  8311  002BBC  2213               	addwfc	(??_CardConfigIni+1)^0,f,c
  8312  002BBE  90D8               	bcf	status,0,c
  8313  002BC0  3416               	rlcf	CardConfigIni@i^0,w,c
  8314  002BC2  6ED9               	movwf	fsr2l,c
  8315  002BC4  3417               	rlcf	(CardConfigIni@i+1)^0,w,c
  8316  002BC6  6EDA               	movwf	fsr2h,c
  8317  002BC8  0EF3               	movlw	low _MB302xx
  8318  002BCA  26D9               	addwf	fsr2l,f,c
  8319  002BCC  0E00               	movlw	high _MB302xx
  8320  002BCE  22DA               	addwfc	fsr2h,f,c
  8321  002BD0  C012  FFDE         	movff	??_CardConfigIni,postinc2
  8322  002BD4  C013  FFDD         	movff	??_CardConfigIni+1,postdec2
  8323  002BD8                     l7606:
  8324                           
  8325                           ;RS232.c: 51:     }
  8326  002BD8  4A16               	infsnz	CardConfigIni@i^0,f,c
  8327  002BDA  2A17               	incf	(CardConfigIni@i+1)^0,f,c
  8328  002BDC                     l7608:
  8329  002BDC  5010               	movf	CardConfigIni@NumBytes^0,w,c
  8330  002BDE  5C16               	subwf	CardConfigIni@i^0,w,c
  8331  002BE0  5017               	movf	(CardConfigIni@i+1)^0,w,c
  8332  002BE2  0A80               	xorlw	128
  8333  002BE4  6E12               	movwf	??_CardConfigIni^0,c
  8334  002BE6  5011               	movf	(CardConfigIni@NumBytes+1)^0,w,c
  8335  002BE8  0A80               	xorlw	128
  8336  002BEA  5812               	subwfb	??_CardConfigIni^0,w,c
  8337  002BEC  A0D8               	btfss	status,0,c
  8338  002BEE  EFFB  F015         	goto	u7711
  8339  002BF2  EFFD  F015         	goto	u7710
  8340  002BF6                     u7711:
  8341  002BF6  EF1C  F015         	goto	l7570
  8342  002BFA                     u7710:
  8343  002BFA                     
  8344                           ;RS232.c: 53:     RetNum[j] = '\0';
  8345  002BFA  5014               	movf	CardConfigIni@j^0,w,c
  8346  002BFC  240C               	addwf	CardConfigIni@RetNum^0,w,c
  8347  002BFE  6ED9               	movwf	fsr2l,c
  8348  002C00  5015               	movf	(CardConfigIni@j+1)^0,w,c
  8349  002C02  200D               	addwfc	(CardConfigIni@RetNum+1)^0,w,c
  8350  002C04  6EDA               	movwf	fsr2h,c
  8351  002C06  0E00               	movlw	0
  8352  002C08  6EDF               	movwf	indf2,c
  8353  002C0A  0012               	return		;funcret
  8354  002C0C                     __end_of_CardConfigIni:
  8355                           	opt callstack 0
  8356                           
  8357 ;; *************** function _strcmp *****************
  8358 ;; Defined at:
  8359 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcmp.c"
  8360 ;; Parameters:    Size  Location     Type
  8361 ;;  l               2    4[COMRAM] PTR const unsigned char 
  8362 ;;		 -> STR_91(4), STR_89(5), STR_87(7), Command(16), 
  8363 ;;  r               2    6[COMRAM] PTR const unsigned char 
  8364 ;;		 -> STR_145(4), STR_143(5), STR_141(7), STR_139(2), 
  8365 ;;		 -> STR_137(6), STR_94(4), STR_93(5), STR_92(7), 
  8366 ;; Auto vars:     Size  Location     Type
  8367 ;;		None
  8368 ;; Return value:  Size  Location     Type
  8369 ;;                  2    4[COMRAM] int 
  8370 ;; Registers used:
  8371 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  8372 ;; Tracked objects:
  8373 ;;		On entry : 0/0
  8374 ;;		On exit  : 0/0
  8375 ;;		Unchanged: 0/0
  8376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8377 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8379 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8380 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8381 ;;Total ram usage:        5 bytes
  8382 ;; Hardware stack levels used:    1
  8383 ;; Hardware stack levels required when called:    4
  8384 ;; This function calls:
  8385 ;;		Nothing
  8386 ;; This function is called by:
  8387 ;;		_CardConfigIni
  8388 ;;		_ValidateCmd
  8389 ;; This function uses a non-reentrant model
  8390 ;;
  8391                           
  8392                           	psect	text14
  8393  00434E                     __ptext14:
  8394                           	opt callstack 0
  8395  00434E                     _strcmp:
  8396                           	opt callstack 25
  8397  00434E  EFAD  F021         	goto	l7422
  8398  004352                     l7420:
  8399  004352  4A05               	infsnz	strcmp@l^0,f,c
  8400  004354  2A06               	incf	(strcmp@l+1)^0,f,c
  8401  004356  4A07               	infsnz	strcmp@r^0,f,c
  8402  004358  2A08               	incf	(strcmp@r+1)^0,f,c
  8403  00435A                     l7422:
  8404  00435A  C007  FFF6         	movff	strcmp@r,tblptrl
  8405  00435E  C008  FFF7         	movff	strcmp@r+1,tblptrh
  8406  004362                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8407  004362  6AF8               	clrf	tblptru,c
  8408  004364                     	endif
  8409  004364                     	if	0	;tblptru may be non-zero
  8410  004364                     	endif
  8411  004364  0008               	tblrd		*
  8412  004366  CFF5 F009          	movff	tablat,??_strcmp
  8413  00436A  C005  FFF6         	movff	strcmp@l,tblptrl
  8414  00436E  C006  FFF7         	movff	strcmp@l+1,tblptrh
  8415  004372  0E00               	movlw	low (__mediumconst shr (0+16))
  8416  004374  6EF8               	movwf	tblptru,c
  8417  004376  0E0E               	movlw	(high __ramtop+-1)
  8418  004378  64F7               	cpfsgt	tblptrh,c
  8419  00437A  D003               	bra	u7437
  8420  00437C  0008               	tblrd		*
  8421  00437E  50F5               	movf	tablat,w,c
  8422  004380  D005               	bra	u7435
  8423  004382                     u7437:
  8424  004382  CFF6 FFE9          	movff	tblptrl,fsr0l
  8425  004386  CFF7 FFEA          	movff	tblptrh,fsr0h
  8426  00438A  50EF               	movf	indf0,w,c
  8427  00438C                     u7435:
  8428  00438C  1809               	xorwf	??_strcmp^0,w,c
  8429  00438E  A4D8               	btfss	status,2,c
  8430  004390  EFCC  F021         	goto	u7431
  8431  004394  EFCE  F021         	goto	u7430
  8432  004398                     u7431:
  8433  004398  EFE7  F021         	goto	l7426
  8434  00439C                     u7430:
  8435  00439C  C005  FFF6         	movff	strcmp@l,tblptrl
  8436  0043A0  C006  FFF7         	movff	strcmp@l+1,tblptrh
  8437  0043A4  0E00               	movlw	low (__mediumconst shr (0+16))
  8438  0043A6  6EF8               	movwf	tblptru,c
  8439  0043A8  0E0E               	movlw	(high __ramtop+-1)
  8440  0043AA  64F7               	cpfsgt	tblptrh,c
  8441  0043AC  D003               	bra	u7447
  8442  0043AE  0008               	tblrd		*
  8443  0043B0  50F5               	movf	tablat,w,c
  8444  0043B2  D005               	bra	u7440
  8445  0043B4                     u7447:
  8446  0043B4  CFF6 FFE9          	movff	tblptrl,fsr0l
  8447  0043B8  CFF7 FFEA          	movff	tblptrh,fsr0h
  8448  0043BC  50EF               	movf	indf0,w,c
  8449  0043BE                     u7440:
  8450  0043BE  0900               	iorlw	0
  8451  0043C0  A4D8               	btfss	status,2,c
  8452  0043C2  EFE5  F021         	goto	u7451
  8453  0043C6  EFE7  F021         	goto	u7450
  8454  0043CA                     u7451:
  8455  0043CA  EFA9  F021         	goto	l7420
  8456  0043CE                     u7450:
  8457  0043CE                     l7426:
  8458  0043CE  C005  FFF6         	movff	strcmp@l,tblptrl
  8459  0043D2  C006  FFF7         	movff	strcmp@l+1,tblptrh
  8460  0043D6  0E00               	movlw	low (__mediumconst shr (0+16))
  8461  0043D8  6EF8               	movwf	tblptru,c
  8462  0043DA  0E0E               	movlw	(high __ramtop+-1)
  8463  0043DC  64F7               	cpfsgt	tblptrh,c
  8464  0043DE  D003               	bra	u7467
  8465  0043E0  0008               	tblrd		*
  8466  0043E2  50F5               	movf	tablat,w,c
  8467  0043E4  D005               	bra	u7460
  8468  0043E6                     u7467:
  8469  0043E6  CFF6 FFE9          	movff	tblptrl,fsr0l
  8470  0043EA  CFF7 FFEA          	movff	tblptrh,fsr0h
  8471  0043EE  50EF               	movf	indf0,w,c
  8472  0043F0                     u7460:
  8473  0043F0  6E09               	movwf	??_strcmp^0,c
  8474  0043F2  C007  FFF6         	movff	strcmp@r,tblptrl
  8475  0043F6  C008  FFF7         	movff	strcmp@r+1,tblptrh
  8476  0043FA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8477  0043FA  6AF8               	clrf	tblptru,c
  8478  0043FC                     	endif
  8479  0043FC                     	if	0	;tblptru may be non-zero
  8480  0043FC                     	endif
  8481  0043FC  0008               	tblrd		*
  8482  0043FE  50F5               	movf	tablat,w,c
  8483  004400  5C09               	subwf	??_strcmp^0,w,c
  8484  004402  6E05               	movwf	?_strcmp^0,c
  8485  004404  6A06               	clrf	(?_strcmp+1)^0,c
  8486  004406  A0D8               	btfss	status,0,c
  8487  004408  0606               	decf	(?_strcmp+1)^0,f,c
  8488  00440A  0012               	return		;funcret
  8489  00440C                     __end_of_strcmp:
  8490                           	opt callstack 0
  8491                           
  8492 ;; *************** function _DATAEE_ReadByte *****************
  8493 ;; Defined at:
  8494 ;;		line 187 in file "mcc_generated_files/memory.c"
  8495 ;; Parameters:    Size  Location     Type
  8496 ;;  bAdd            2    4[COMRAM] unsigned short 
  8497 ;; Auto vars:     Size  Location     Type
  8498 ;;		None
  8499 ;; Return value:  Size  Location     Type
  8500 ;;                  1    wreg      unsigned char 
  8501 ;; Registers used:
  8502 ;;		wreg, status,2, status,0
  8503 ;; Tracked objects:
  8504 ;;		On entry : 0/0
  8505 ;;		On exit  : 0/0
  8506 ;;		Unchanged: 0/0
  8507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8508 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8511 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8512 ;;Total ram usage:        2 bytes
  8513 ;; Hardware stack levels used:    1
  8514 ;; Hardware stack levels required when called:    4
  8515 ;; This function calls:
  8516 ;;		Nothing
  8517 ;; This function is called by:
  8518 ;;		_CardConfigIni
  8519 ;; This function uses a non-reentrant model
  8520 ;;
  8521                           
  8522                           	psect	text15
  8523  0051DE                     __ptext15:
  8524                           	opt callstack 0
  8525  0051DE                     _DATAEE_ReadByte:
  8526                           	opt callstack 23
  8527  0051DE                     
  8528                           ;mcc_generated_files/memory.c: 187: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 188: {;mcc_generated_files/memory.c: 189:     NVMADRH = ((bAdd >> 8) & 
      +                          0x03);
  8529  0051DE  5006               	movf	(DATAEE_ReadByte@bAdd+1)^0,w,c
  8530  0051E0  0B03               	andlw	3
  8531  0051E2  6E7F               	movwf	127,c	;volatile
  8532  0051E4                     
  8533                           ;mcc_generated_files/memory.c: 190:     NVMADRL = (bAdd & 0xFF);
  8534  0051E4  C005  FF7E         	movff	DATAEE_ReadByte@bAdd,3966	;volatile
  8535  0051E8                     
  8536                           ;mcc_generated_files/memory.c: 191:     NVMCON1bits.NVMREG = 0;
  8537  0051E8  0E3F               	movlw	-193
  8538  0051EA  1681               	andwf	129,f,c	;volsfr
  8539  0051EC                     
  8540                           ;mcc_generated_files/memory.c: 192:     NVMCON1bits.RD = 1;
  8541  0051EC  8081               	bsf	129,0,c	;volsfr
  8542  0051EE                     
  8543                           ;mcc_generated_files/memory.c: 193:     __nop();
  8544  0051EE  F000               	nop	
  8545  0051F0                     
  8546                           ;mcc_generated_files/memory.c: 194:     __nop();
  8547  0051F0  F000               	nop	
  8548  0051F2                     
  8549                           ;mcc_generated_files/memory.c: 196:     return (NVMDAT);
  8550  0051F2  5080               	movf	128,w,c	;volatile
  8551  0051F4  0012               	return		;funcret
  8552  0051F6                     __end_of_DATAEE_ReadByte:
  8553                           	opt callstack 0
  8554                           
  8555 ;; *************** function _SYSTEM_Initialize *****************
  8556 ;; Defined at:
  8557 ;;		line 50 in file "mcc_generated_files/mcc.c"
  8558 ;; Parameters:    Size  Location     Type
  8559 ;;		None
  8560 ;; Auto vars:     Size  Location     Type
  8561 ;;		None
  8562 ;; Return value:  Size  Location     Type
  8563 ;;                  1    wreg      void 
  8564 ;; Registers used:
  8565 ;;		wreg, status,2, status,0, cstack
  8566 ;; Tracked objects:
  8567 ;;		On entry : 0/0
  8568 ;;		On exit  : 0/0
  8569 ;;		Unchanged: 0/0
  8570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8575 ;;Total ram usage:        0 bytes
  8576 ;; Hardware stack levels used:    1
  8577 ;; Hardware stack levels required when called:    6
  8578 ;; This function calls:
  8579 ;;		_ADCC_DisableContinuousConversion
  8580 ;;		_ADCC_Initialize
  8581 ;;		_EUSART1_Initialize
  8582 ;;		_EUSART2_Initialize
  8583 ;;		_INTERRUPT_Initialize
  8584 ;;		_OSCILLATOR_Initialize
  8585 ;;		_PIN_MANAGER_Initialize
  8586 ;;		_PMD_Initialize
  8587 ;; This function is called by:
  8588 ;;		_main
  8589 ;; This function uses a non-reentrant model
  8590 ;;
  8591                           
  8592                           	psect	text16
  8593  005188                     __ptext16:
  8594                           	opt callstack 0
  8595  005188                     _SYSTEM_Initialize:
  8596                           	opt callstack 24
  8597  005188                     
  8598                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  8599  005188  EC91  F029         	call	_INTERRUPT_Initialize	;wreg free
  8600  00518C                     
  8601                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  8602  00518C  ECD5  F028         	call	_PMD_Initialize	;wreg free
  8603  005190                     
  8604                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  8605  005190  EC41  F023         	call	_PIN_MANAGER_Initialize	;wreg free
  8606  005194                     
  8607                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  8608  005194  ECFB  F028         	call	_OSCILLATOR_Initialize	;wreg free
  8609  005198                     
  8610                           ;mcc_generated_files/mcc.c: 56:     EUSART1_Initialize();
  8611  005198  ECC7  F023         	call	_EUSART1_Initialize	;wreg free
  8612  00519C                     
  8613                           ;mcc_generated_files/mcc.c: 57:     EUSART2_Initialize();
  8614  00519C  EC88  F023         	call	_EUSART2_Initialize	;wreg free
  8615  0051A0                     
  8616                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
  8617  0051A0  EC13  F026         	call	_ADCC_Initialize	;wreg free
  8618                           
  8619                           ;mcc_generated_files/mcc.c: 59:     ADCC_DisableContinuousConversion();
  8620  0051A4  EC93  F029         	call	_ADCC_DisableContinuousConversion	;wreg free
  8621  0051A8  0012               	return		;funcret
  8622  0051AA                     __end_of_SYSTEM_Initialize:
  8623                           	opt callstack 0
  8624                           
  8625 ;; *************** function _PMD_Initialize *****************
  8626 ;; Defined at:
  8627 ;;		line 76 in file "mcc_generated_files/mcc.c"
  8628 ;; Parameters:    Size  Location     Type
  8629 ;;		None
  8630 ;; Auto vars:     Size  Location     Type
  8631 ;;		None
  8632 ;; Return value:  Size  Location     Type
  8633 ;;                  1    wreg      void 
  8634 ;; Registers used:
  8635 ;;		wreg, status,2
  8636 ;; Tracked objects:
  8637 ;;		On entry : 0/0
  8638 ;;		On exit  : 0/0
  8639 ;;		Unchanged: 0/0
  8640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8645 ;;Total ram usage:        0 bytes
  8646 ;; Hardware stack levels used:    1
  8647 ;; Hardware stack levels required when called:    4
  8648 ;; This function calls:
  8649 ;;		Nothing
  8650 ;; This function is called by:
  8651 ;;		_SYSTEM_Initialize
  8652 ;; This function uses a non-reentrant model
  8653 ;;
  8654                           
  8655                           	psect	text17
  8656  0051AA                     __ptext17:
  8657                           	opt callstack 0
  8658  0051AA                     _PMD_Initialize:
  8659                           	opt callstack 25
  8660  0051AA                     
  8661                           ;mcc_generated_files/mcc.c: 79:     PMD0 = 0x00;
  8662  0051AA  0E00               	movlw	0
  8663  0051AC  010E               	movlb	14	; () banked
  8664  0051AE  6FE1               	movwf	225,b	;volatile
  8665                           
  8666                           ;mcc_generated_files/mcc.c: 81:     PMD1 = 0x00;
  8667  0051B0  0E00               	movlw	0
  8668  0051B2  6FE2               	movwf	226,b	;volatile
  8669                           
  8670                           ;mcc_generated_files/mcc.c: 83:     PMD2 = 0x00;
  8671  0051B4  0E00               	movlw	0
  8672  0051B6  6FE3               	movwf	227,b	;volatile
  8673                           
  8674                           ;mcc_generated_files/mcc.c: 85:     PMD3 = 0x00;
  8675  0051B8  0E00               	movlw	0
  8676  0051BA  6FE4               	movwf	228,b	;volatile
  8677                           
  8678                           ;mcc_generated_files/mcc.c: 87:     PMD4 = 0x00;
  8679  0051BC  0E00               	movlw	0
  8680  0051BE  6FE5               	movwf	229,b	;volatile
  8681                           
  8682                           ;mcc_generated_files/mcc.c: 89:     PMD5 = 0x00;
  8683  0051C0  0E00               	movlw	0
  8684  0051C2  6FE6               	movwf	230,b	;volatile
  8685  0051C4                     
  8686                           ; BSR set to: 14
  8687  0051C4  0012               	return		;funcret
  8688  0051C6                     __end_of_PMD_Initialize:
  8689                           	opt callstack 0
  8690                           
  8691 ;; *************** function _PIN_MANAGER_Initialize *****************
  8692 ;; Defined at:
  8693 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  8694 ;; Parameters:    Size  Location     Type
  8695 ;;		None
  8696 ;; Auto vars:     Size  Location     Type
  8697 ;;		None
  8698 ;; Return value:  Size  Location     Type
  8699 ;;                  1    wreg      void 
  8700 ;; Registers used:
  8701 ;;		wreg, status,2
  8702 ;; Tracked objects:
  8703 ;;		On entry : 0/0
  8704 ;;		On exit  : 0/0
  8705 ;;		Unchanged: 0/0
  8706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8711 ;;Total ram usage:        0 bytes
  8712 ;; Hardware stack levels used:    1
  8713 ;; Hardware stack levels required when called:    4
  8714 ;; This function calls:
  8715 ;;		Nothing
  8716 ;; This function is called by:
  8717 ;;		_SYSTEM_Initialize
  8718 ;; This function uses a non-reentrant model
  8719 ;;
  8720                           
  8721                           	psect	text18
  8722  004682                     __ptext18:
  8723                           	opt callstack 0
  8724  004682                     _PIN_MANAGER_Initialize:
  8725                           	opt callstack 25
  8726  004682                     
  8727                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  8728  004682  0E00               	movlw	0
  8729  004684  6E87               	movwf	135,c	;volatile
  8730                           
  8731                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  8732  004686  0E00               	movlw	0
  8733  004688  6E86               	movwf	134,c	;volatile
  8734                           
  8735                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  8736  00468A  0E00               	movlw	0
  8737  00468C  6E83               	movwf	131,c	;volatile
  8738                           
  8739                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  8740  00468E  0E00               	movlw	0
  8741  004690  6E84               	movwf	132,c	;volatile
  8742                           
  8743                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  8744  004692  0E00               	movlw	0
  8745  004694  6E85               	movwf	133,c	;volatile
  8746                           
  8747                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  8748  004696  0E07               	movlw	7
  8749  004698  6E8C               	movwf	140,c	;volatile
  8750                           
  8751                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x07;
  8752  00469A  0E07               	movlw	7
  8753  00469C  6E88               	movwf	136,c	;volatile
  8754                           
  8755                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xBF;
  8756  00469E  0EBF               	movlw	191
  8757  0046A0  6E89               	movwf	137,c	;volatile
  8758                           
  8759                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  8760  0046A2  0EBF               	movlw	191
  8761  0046A4  6E8A               	movwf	138,c	;volatile
  8762                           
  8763                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFE;
  8764  0046A6  0EFE               	movlw	254
  8765  0046A8  6E8B               	movwf	139,c	;volatile
  8766  0046AA                     
  8767                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
  8768  0046AA  010F               	movlb	15	; () banked
  8769  0046AC  6926               	setf	38,b	;volatile
  8770                           
  8771                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x3B;
  8772  0046AE  0E3B               	movlw	59
  8773  0046B0  6F21               	movwf	33,b	;volatile
  8774                           
  8775                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x37;
  8776  0046B2  0E37               	movlw	55
  8777  0046B4  6F19               	movwf	25,b	;volatile
  8778                           
  8779                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  8780  0046B6  0E07               	movlw	7
  8781  0046B8  6F2E               	movwf	46,b	;volatile
  8782  0046BA                     
  8783                           ; BSR set to: 15
  8784                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
  8785  0046BA  6911               	setf	17,b	;volatile
  8786                           
  8787                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  8788  0046BC  0E00               	movlw	0
  8789  0046BE  6F25               	movwf	37,b	;volatile
  8790                           
  8791                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  8792  0046C0  0E00               	movlw	0
  8793  0046C2  6F2D               	movwf	45,b	;volatile
  8794                           
  8795                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  8796  0046C4  0E00               	movlw	0
  8797  0046C6  6F18               	movwf	24,b	;volatile
  8798                           
  8799                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  8800  0046C8  0E00               	movlw	0
  8801  0046CA  6F10               	movwf	16,b	;volatile
  8802                           
  8803                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  8804  0046CC  0E00               	movlw	0
  8805  0046CE  6F20               	movwf	32,b	;volatile
  8806                           
  8807                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
  8808  0046D0  0E00               	movlw	0
  8809  0046D2  6F2C               	movwf	44,b	;volatile
  8810                           
  8811                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
  8812  0046D4  0E00               	movlw	0
  8813  0046D6  6F0F               	movwf	15,b	;volatile
  8814                           
  8815                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
  8816  0046D8  0E00               	movlw	0
  8817  0046DA  6F17               	movwf	23,b	;volatile
  8818                           
  8819                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
  8820  0046DC  0E00               	movlw	0
  8821  0046DE  6F1F               	movwf	31,b	;volatile
  8822                           
  8823                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
  8824  0046E0  0E00               	movlw	0
  8825  0046E2  6F24               	movwf	36,b	;volatile
  8826  0046E4                     
  8827                           ; BSR set to: 15
  8828                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
  8829  0046E4  690E               	setf	14,b	;volatile
  8830  0046E6                     
  8831                           ; BSR set to: 15
  8832                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
  8833  0046E6  6916               	setf	22,b	;volatile
  8834  0046E8                     
  8835                           ; BSR set to: 15
  8836                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
  8837  0046E8  691E               	setf	30,b	;volatile
  8838  0046EA                     
  8839                           ; BSR set to: 15
  8840                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
  8841  0046EA  6923               	setf	35,b	;volatile
  8842                           
  8843                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
  8844  0046EC  0E07               	movlw	7
  8845  0046EE  6F2B               	movwf	43,b	;volatile
  8846  0046F0                     
  8847                           ; BSR set to: 15
  8848                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
  8849  0046F0  690D               	setf	13,b	;volatile
  8850  0046F2                     
  8851                           ; BSR set to: 15
  8852                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
  8853  0046F2  6915               	setf	21,b	;volatile
  8854  0046F4                     
  8855                           ; BSR set to: 15
  8856                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
  8857  0046F4  691D               	setf	29,b	;volatile
  8858  0046F6                     
  8859                           ; BSR set to: 15
  8860                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
  8861  0046F6  6922               	setf	34,b	;volatile
  8862                           
  8863                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x0F;
  8864  0046F8  0E0F               	movlw	15
  8865  0046FA  6F2A               	movwf	42,b	;volatile
  8866                           
  8867                           ;mcc_generated_files/pin_manager.c: 127:     RX1PPS = 0x17;
  8868  0046FC  0E17               	movlw	23
  8869  0046FE  010E               	movlb	14	; () banked
  8870  004700  6FB5               	movwf	181,b	;volatile
  8871                           
  8872                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x0B;
  8873  004702  0E0B               	movlw	11
  8874  004704  6FF5               	movwf	245,b	;volatile
  8875                           
  8876                           ;mcc_generated_files/pin_manager.c: 129:     RC6PPS = 0x09;
  8877  004706  0E09               	movlw	9
  8878  004708  6FFD               	movwf	253,b	;volatile
  8879                           
  8880                           ;mcc_generated_files/pin_manager.c: 130:     RX2PPS = 0x0F;
  8881  00470A  0E0F               	movlw	15
  8882  00470C  6F8D               	movwf	141,b	;volatile
  8883  00470E                     
  8884                           ; BSR set to: 14
  8885  00470E  0012               	return		;funcret
  8886  004710                     __end_of_PIN_MANAGER_Initialize:
  8887                           	opt callstack 0
  8888                           
  8889 ;; *************** function _OSCILLATOR_Initialize *****************
  8890 ;; Defined at:
  8891 ;;		line 62 in file "mcc_generated_files/mcc.c"
  8892 ;; Parameters:    Size  Location     Type
  8893 ;;		None
  8894 ;; Auto vars:     Size  Location     Type
  8895 ;;		None
  8896 ;; Return value:  Size  Location     Type
  8897 ;;                  1    wreg      void 
  8898 ;; Registers used:
  8899 ;;		wreg, status,2
  8900 ;; Tracked objects:
  8901 ;;		On entry : 0/0
  8902 ;;		On exit  : 0/0
  8903 ;;		Unchanged: 0/0
  8904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8909 ;;Total ram usage:        0 bytes
  8910 ;; Hardware stack levels used:    1
  8911 ;; Hardware stack levels required when called:    4
  8912 ;; This function calls:
  8913 ;;		Nothing
  8914 ;; This function is called by:
  8915 ;;		_SYSTEM_Initialize
  8916 ;; This function uses a non-reentrant model
  8917 ;;
  8918                           
  8919                           	psect	text19
  8920  0051F6                     __ptext19:
  8921                           	opt callstack 0
  8922  0051F6                     _OSCILLATOR_Initialize:
  8923                           	opt callstack 25
  8924  0051F6                     
  8925                           ;mcc_generated_files/mcc.c: 65:     OSCCON1 = 0x60;
  8926  0051F6  0E60               	movlw	96
  8927  0051F8  010E               	movlb	14	; () banked
  8928  0051FA  6FD8               	movwf	216,b	;volatile
  8929                           
  8930                           ;mcc_generated_files/mcc.c: 67:     OSCCON3 = 0x00;
  8931  0051FC  0E00               	movlw	0
  8932  0051FE  6FDA               	movwf	218,b	;volatile
  8933                           
  8934                           ;mcc_generated_files/mcc.c: 69:     OSCEN = 0x00;
  8935  005200  0E00               	movlw	0
  8936  005202  6FDC               	movwf	220,b	;volatile
  8937                           
  8938                           ;mcc_generated_files/mcc.c: 71:     OSCFRQ = 0x06;
  8939  005204  0E06               	movlw	6
  8940  005206  6FDE               	movwf	222,b	;volatile
  8941                           
  8942                           ;mcc_generated_files/mcc.c: 73:     OSCTUNE = 0x00;
  8943  005208  0E00               	movlw	0
  8944  00520A  6FDD               	movwf	221,b	;volatile
  8945  00520C                     
  8946                           ; BSR set to: 14
  8947  00520C  0012               	return		;funcret
  8948  00520E                     __end_of_OSCILLATOR_Initialize:
  8949                           	opt callstack 0
  8950                           
  8951 ;; *************** function _INTERRUPT_Initialize *****************
  8952 ;; Defined at:
  8953 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  8954 ;; Parameters:    Size  Location     Type
  8955 ;;		None
  8956 ;; Auto vars:     Size  Location     Type
  8957 ;;		None
  8958 ;; Return value:  Size  Location     Type
  8959 ;;                  1    wreg      void 
  8960 ;; Registers used:
  8961 ;;		None
  8962 ;; Tracked objects:
  8963 ;;		On entry : 0/0
  8964 ;;		On exit  : 0/0
  8965 ;;		Unchanged: 0/0
  8966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8971 ;;Total ram usage:        0 bytes
  8972 ;; Hardware stack levels used:    1
  8973 ;; Hardware stack levels required when called:    4
  8974 ;; This function calls:
  8975 ;;		Nothing
  8976 ;; This function is called by:
  8977 ;;		_SYSTEM_Initialize
  8978 ;; This function uses a non-reentrant model
  8979 ;;
  8980                           
  8981                           	psect	text20
  8982  005322                     __ptext20:
  8983                           	opt callstack 0
  8984  005322                     _INTERRUPT_Initialize:
  8985                           	opt callstack 25
  8986  005322                     
  8987                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
  8988  005322  9AF2               	bcf	242,5,c	;volatile
  8989  005324  0012               	return		;funcret
  8990  005326                     __end_of_INTERRUPT_Initialize:
  8991                           	opt callstack 0
  8992                           
  8993 ;; *************** function _EUSART2_Initialize *****************
  8994 ;; Defined at:
  8995 ;;		line 88 in file "mcc_generated_files/eusart2.c"
  8996 ;; Parameters:    Size  Location     Type
  8997 ;;		None
  8998 ;; Auto vars:     Size  Location     Type
  8999 ;;		None
  9000 ;; Return value:  Size  Location     Type
  9001 ;;                  1    wreg      void 
  9002 ;; Registers used:
  9003 ;;		wreg, status,2, status,0, cstack
  9004 ;; Tracked objects:
  9005 ;;		On entry : 0/0
  9006 ;;		On exit  : 0/0
  9007 ;;		Unchanged: 0/0
  9008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9013 ;;Total ram usage:        0 bytes
  9014 ;; Hardware stack levels used:    1
  9015 ;; Hardware stack levels required when called:    5
  9016 ;; This function calls:
  9017 ;;		_EUSART2_SetErrorHandler
  9018 ;;		_EUSART2_SetFramingErrorHandler
  9019 ;;		_EUSART2_SetOverrunErrorHandler
  9020 ;;		_EUSART2_SetRxInterruptHandler
  9021 ;;		_EUSART2_SetTxInterruptHandler
  9022 ;; This function is called by:
  9023 ;;		_SYSTEM_Initialize
  9024 ;; This function uses a non-reentrant model
  9025 ;;
  9026                           
  9027                           	psect	text21
  9028  004710                     __ptext21:
  9029                           	opt callstack 0
  9030  004710                     _EUSART2_Initialize:
  9031                           	opt callstack 24
  9032  004710                     
  9033                           ;mcc_generated_files/eusart2.c: 91:     PIE3bits.RC2IE = 0;
  9034  004710  010E               	movlb	14	; () banked
  9035  004712  9FC5               	bcf	197,7,b	;volatile
  9036  004714                     
  9037                           ; BSR set to: 14
  9038                           ;mcc_generated_files/eusart2.c: 92:     EUSART2_SetRxInterruptHandler(EUSART2_Receive_IS
      +                          R);
  9039  004714  0E48               	movlw	low _EUSART2_Receive_ISR
  9040  004716  6E05               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler^0,c
  9041  004718  0E40               	movlw	high _EUSART2_Receive_ISR
  9042  00471A  6E06               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)^0,c
  9043  00471C  EC4C  F029         	call	_EUSART2_SetRxInterruptHandler	;wreg free
  9044  004720                     
  9045                           ;mcc_generated_files/eusart2.c: 93:     PIE3bits.TX2IE = 0;
  9046  004720  010E               	movlb	14	; () banked
  9047  004722  9DC5               	bcf	197,6,b	;volatile
  9048                           
  9049                           ;mcc_generated_files/eusart2.c: 94:     EUSART2_SetTxInterruptHandler(EUSART2_Transmit_I
      +                          SR);
  9050  004724  0E5C               	movlw	low _EUSART2_Transmit_ISR
  9051  004726  6E05               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler^0,c
  9052  004728  0E4D               	movlw	high _EUSART2_Transmit_ISR
  9053  00472A  6E06               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)^0,c
  9054  00472C  EC47  F029         	call	_EUSART2_SetTxInterruptHandler	;wreg free
  9055  004730                     
  9056                           ;mcc_generated_files/eusart2.c: 98:     BAUD2CON = 0x08;
  9057  004730  0E08               	movlw	8
  9058  004732  010E               	movlb	14	; () banked
  9059  004734  6F9F               	movwf	159,b	;volatile
  9060  004736                     
  9061                           ; BSR set to: 14
  9062                           ;mcc_generated_files/eusart2.c: 101:     RC2STA = 0x90;
  9063  004736  0E90               	movlw	144
  9064  004738  6F9D               	movwf	157,b	;volatile
  9065  00473A                     
  9066                           ; BSR set to: 14
  9067                           ;mcc_generated_files/eusart2.c: 104:     TX2STA = 0x24;
  9068  00473A  0E24               	movlw	36
  9069  00473C  6F9E               	movwf	158,b	;volatile
  9070  00473E                     
  9071                           ; BSR set to: 14
  9072                           ;mcc_generated_files/eusart2.c: 108:     SP2BRGL = 0xA0;
  9073  00473E  0EA0               	movlw	160
  9074  004740  6F9B               	movwf	155,b	;volatile
  9075  004742                     
  9076                           ; BSR set to: 14
  9077                           ;mcc_generated_files/eusart2.c: 113:     SP2BRGH = 0x01;
  9078  004742  0E01               	movlw	1
  9079  004744  6F9C               	movwf	156,b	;volatile
  9080  004746                     
  9081                           ; BSR set to: 14
  9082                           ;mcc_generated_files/eusart2.c: 117:     EUSART2_SetFramingErrorHandler(EUSART2_DefaultF
      +                          ramingErrorHandler);
  9083  004746  0E2A               	movlw	low _EUSART2_DefaultFramingErrorHandler
  9084  004748  6E05               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler^0,c
  9085  00474A  0E53               	movlw	high _EUSART2_DefaultFramingErrorHandler
  9086  00474C  6E06               	movwf	(EUSART2_SetFramingErrorHandler@interruptHandler+1)^0,c
  9087  00474E  EC56  F029         	call	_EUSART2_SetFramingErrorHandler	;wreg free
  9088  004752                     
  9089                           ;mcc_generated_files/eusart2.c: 118:     EUSART2_SetOverrunErrorHandler(EUSART2_DefaultO
      +                          verrunErrorHandler);
  9090  004752  0EFC               	movlw	low _EUSART2_DefaultOverrunErrorHandler
  9091  004754  6E05               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler^0,c
  9092  004756  0E52               	movlw	high _EUSART2_DefaultOverrunErrorHandler
  9093  004758  6E06               	movwf	(EUSART2_SetOverrunErrorHandler@interruptHandler+1)^0,c
  9094  00475A  EC51  F029         	call	_EUSART2_SetOverrunErrorHandler	;wreg free
  9095  00475E                     
  9096                           ;mcc_generated_files/eusart2.c: 119:     EUSART2_SetErrorHandler(EUSART2_DefaultErrorHan
      +                          dler);
  9097  00475E  0E10               	movlw	low _EUSART2_DefaultErrorHandler
  9098  004760  6E05               	movwf	EUSART2_SetErrorHandler@interruptHandler^0,c
  9099  004762  0E53               	movlw	high _EUSART2_DefaultErrorHandler
  9100  004764  6E06               	movwf	(EUSART2_SetErrorHandler@interruptHandler+1)^0,c
  9101  004766  EC5B  F029         	call	_EUSART2_SetErrorHandler	;wreg free
  9102                           
  9103                           ;mcc_generated_files/eusart2.c: 121:     eusart2RxLastError.status = 0;
  9104  00476A  0E00               	movlw	0
  9105  00476C  0100               	movlb	0	; () banked
  9106  00476E  6FE4               	movwf	_eusart2RxLastError& (0+255),b	;volatile
  9107                           
  9108                           ;mcc_generated_files/eusart2.c: 124:     eusart2TxHead = 0;
  9109  004770  0E00               	movlw	0
  9110  004772  6FE8               	movwf	_eusart2TxHead& (0+255),b	;volatile
  9111                           
  9112                           ;mcc_generated_files/eusart2.c: 125:     eusart2TxTail = 0;
  9113  004774  0E00               	movlw	0
  9114  004776  6FE7               	movwf	_eusart2TxTail& (0+255),b	;volatile
  9115                           
  9116                           ;mcc_generated_files/eusart2.c: 126:     eusart2TxBufferRemaining = sizeof(eusart2TxBuff
      +                          er);
  9117  004778  0E20               	movlw	32
  9118  00477A  6FFF               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
  9119                           
  9120                           ;mcc_generated_files/eusart2.c: 128:     eusart2RxHead = 0;
  9121  00477C  0E00               	movlw	0
  9122  00477E  6E5A               	movwf	_eusart2RxHead^0,c	;volatile
  9123                           
  9124                           ;mcc_generated_files/eusart2.c: 129:     eusart2RxTail = 0;
  9125  004780  0E00               	movlw	0
  9126  004782  6FE6               	movwf	_eusart2RxTail& (0+255),b	;volatile
  9127                           
  9128                           ;mcc_generated_files/eusart2.c: 130:     eusart2RxCount = 0;
  9129  004784  0E00               	movlw	0
  9130  004786  6FE5               	movwf	_eusart2RxCount& (0+255),b	;volatile
  9131  004788                     
  9132                           ; BSR set to: 0
  9133                           ;mcc_generated_files/eusart2.c: 133:     PIE3bits.RC2IE = 1;
  9134  004788  010E               	movlb	14	; () banked
  9135  00478A  8FC5               	bsf	197,7,b	;volatile
  9136  00478C                     
  9137                           ; BSR set to: 14
  9138  00478C  0012               	return		;funcret
  9139  00478E                     __end_of_EUSART2_Initialize:
  9140                           	opt callstack 0
  9141                           
  9142 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
  9143 ;; Defined at:
  9144 ;;		line 289 in file "mcc_generated_files/eusart2.c"
  9145 ;; Parameters:    Size  Location     Type
  9146 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  9147 ;;		 -> EUSART2_Transmit_ISR(1), 
  9148 ;; Auto vars:     Size  Location     Type
  9149 ;;		None
  9150 ;; Return value:  Size  Location     Type
  9151 ;;                  1    wreg      void 
  9152 ;; Registers used:
  9153 ;;		wreg, status,2, status,0
  9154 ;; Tracked objects:
  9155 ;;		On entry : 0/0
  9156 ;;		On exit  : 0/0
  9157 ;;		Unchanged: 0/0
  9158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9159 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9162 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9163 ;;Total ram usage:        2 bytes
  9164 ;; Hardware stack levels used:    1
  9165 ;; Hardware stack levels required when called:    4
  9166 ;; This function calls:
  9167 ;;		Nothing
  9168 ;; This function is called by:
  9169 ;;		_EUSART2_Initialize
  9170 ;; This function uses a non-reentrant model
  9171 ;;
  9172                           
  9173                           	psect	text22
  9174  00528E                     __ptext22:
  9175                           	opt callstack 0
  9176  00528E                     _EUSART2_SetTxInterruptHandler:
  9177                           	opt callstack 24
  9178  00528E                     
  9179                           ;mcc_generated_files/eusart2.c: 290:     EUSART2_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  9180  00528E  C005  F0FC         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
  9181  005292  C006  F0FD         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
  9182  005296  0012               	return		;funcret
  9183  005298                     __end_of_EUSART2_SetTxInterruptHandler:
  9184                           	opt callstack 0
  9185                           
  9186 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
  9187 ;; Defined at:
  9188 ;;		line 293 in file "mcc_generated_files/eusart2.c"
  9189 ;; Parameters:    Size  Location     Type
  9190 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  9191 ;;		 -> EUSART2_Receive_ISR(1), 
  9192 ;; Auto vars:     Size  Location     Type
  9193 ;;		None
  9194 ;; Return value:  Size  Location     Type
  9195 ;;                  1    wreg      void 
  9196 ;; Registers used:
  9197 ;;		wreg, status,2, status,0
  9198 ;; Tracked objects:
  9199 ;;		On entry : 0/0
  9200 ;;		On exit  : 0/0
  9201 ;;		Unchanged: 0/0
  9202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9203 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9206 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9207 ;;Total ram usage:        2 bytes
  9208 ;; Hardware stack levels used:    1
  9209 ;; Hardware stack levels required when called:    4
  9210 ;; This function calls:
  9211 ;;		Nothing
  9212 ;; This function is called by:
  9213 ;;		_EUSART2_Initialize
  9214 ;; This function uses a non-reentrant model
  9215 ;;
  9216                           
  9217                           	psect	text23
  9218  005298                     __ptext23:
  9219                           	opt callstack 0
  9220  005298                     _EUSART2_SetRxInterruptHandler:
  9221                           	opt callstack 24
  9222  005298                     
  9223                           ;mcc_generated_files/eusart2.c: 294:     EUSART2_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  9224  005298  C005  F0FA         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
  9225  00529C  C006  F0FB         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
  9226  0052A0  0012               	return		;funcret
  9227  0052A2                     __end_of_EUSART2_SetRxInterruptHandler:
  9228                           	opt callstack 0
  9229                           
  9230 ;; *************** function _EUSART2_SetOverrunErrorHandler *****************
  9231 ;; Defined at:
  9232 ;;		line 281 in file "mcc_generated_files/eusart2.c"
  9233 ;; Parameters:    Size  Location     Type
  9234 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  9235 ;;		 -> EUSART2_DefaultOverrunErrorHandler(1), 
  9236 ;; Auto vars:     Size  Location     Type
  9237 ;;		None
  9238 ;; Return value:  Size  Location     Type
  9239 ;;                  1    wreg      void 
  9240 ;; Registers used:
  9241 ;;		wreg, status,2, status,0
  9242 ;; Tracked objects:
  9243 ;;		On entry : 0/0
  9244 ;;		On exit  : 0/0
  9245 ;;		Unchanged: 0/0
  9246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9247 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9250 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9251 ;;Total ram usage:        2 bytes
  9252 ;; Hardware stack levels used:    1
  9253 ;; Hardware stack levels required when called:    4
  9254 ;; This function calls:
  9255 ;;		Nothing
  9256 ;; This function is called by:
  9257 ;;		_EUSART2_Initialize
  9258 ;; This function uses a non-reentrant model
  9259 ;;
  9260                           
  9261                           	psect	text24
  9262  0052A2                     __ptext24:
  9263                           	opt callstack 0
  9264  0052A2                     _EUSART2_SetOverrunErrorHandler:
  9265                           	opt callstack 24
  9266  0052A2                     
  9267                           ;mcc_generated_files/eusart2.c: 282:     EUSART2_OverrunErrorHandler = interruptHandler;
  9268  0052A2  C005  F1FB         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler,_EUSART2_OverrunErrorHandler
  9269  0052A6  C006  F1FC         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler+1,_EUSART2_OverrunErrorHandler+1
  9270  0052AA  0012               	return		;funcret
  9271  0052AC                     __end_of_EUSART2_SetOverrunErrorHandler:
  9272                           	opt callstack 0
  9273                           
  9274 ;; *************** function _EUSART2_SetFramingErrorHandler *****************
  9275 ;; Defined at:
  9276 ;;		line 277 in file "mcc_generated_files/eusart2.c"
  9277 ;; Parameters:    Size  Location     Type
  9278 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  9279 ;;		 -> EUSART2_DefaultFramingErrorHandler(1), 
  9280 ;; Auto vars:     Size  Location     Type
  9281 ;;		None
  9282 ;; Return value:  Size  Location     Type
  9283 ;;                  1    wreg      void 
  9284 ;; Registers used:
  9285 ;;		wreg, status,2, status,0
  9286 ;; Tracked objects:
  9287 ;;		On entry : 0/0
  9288 ;;		On exit  : 0/0
  9289 ;;		Unchanged: 0/0
  9290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9291 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9294 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9295 ;;Total ram usage:        2 bytes
  9296 ;; Hardware stack levels used:    1
  9297 ;; Hardware stack levels required when called:    4
  9298 ;; This function calls:
  9299 ;;		Nothing
  9300 ;; This function is called by:
  9301 ;;		_EUSART2_Initialize
  9302 ;; This function uses a non-reentrant model
  9303 ;;
  9304                           
  9305                           	psect	text25
  9306  0052AC                     __ptext25:
  9307                           	opt callstack 0
  9308  0052AC                     _EUSART2_SetFramingErrorHandler:
  9309                           	opt callstack 24
  9310  0052AC                     
  9311                           ;mcc_generated_files/eusart2.c: 278:     EUSART2_FramingErrorHandler = interruptHandler;
  9312  0052AC  C005  F1FD         	movff	EUSART2_SetFramingErrorHandler@interruptHandler,_EUSART2_FramingErrorHandler
  9313  0052B0  C006  F1FE         	movff	EUSART2_SetFramingErrorHandler@interruptHandler+1,_EUSART2_FramingErrorHandler+1
  9314  0052B4  0012               	return		;funcret
  9315  0052B6                     __end_of_EUSART2_SetFramingErrorHandler:
  9316                           	opt callstack 0
  9317                           
  9318 ;; *************** function _EUSART2_SetErrorHandler *****************
  9319 ;; Defined at:
  9320 ;;		line 285 in file "mcc_generated_files/eusart2.c"
  9321 ;; Parameters:    Size  Location     Type
  9322 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  9323 ;;		 -> EUSART2_DefaultErrorHandler(1), 
  9324 ;; Auto vars:     Size  Location     Type
  9325 ;;		None
  9326 ;; Return value:  Size  Location     Type
  9327 ;;                  1    wreg      void 
  9328 ;; Registers used:
  9329 ;;		wreg, status,2, status,0
  9330 ;; Tracked objects:
  9331 ;;		On entry : 0/0
  9332 ;;		On exit  : 0/0
  9333 ;;		Unchanged: 0/0
  9334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9335 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9338 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9339 ;;Total ram usage:        2 bytes
  9340 ;; Hardware stack levels used:    1
  9341 ;; Hardware stack levels required when called:    4
  9342 ;; This function calls:
  9343 ;;		Nothing
  9344 ;; This function is called by:
  9345 ;;		_EUSART2_Initialize
  9346 ;; This function uses a non-reentrant model
  9347 ;;
  9348                           
  9349                           	psect	text26
  9350  0052B6                     __ptext26:
  9351                           	opt callstack 0
  9352  0052B6                     _EUSART2_SetErrorHandler:
  9353                           	opt callstack 24
  9354  0052B6                     
  9355                           ;mcc_generated_files/eusart2.c: 286:     EUSART2_ErrorHandler = interruptHandler;
  9356  0052B6  C005  F1F9         	movff	EUSART2_SetErrorHandler@interruptHandler,_EUSART2_ErrorHandler
  9357  0052BA  C006  F1FA         	movff	EUSART2_SetErrorHandler@interruptHandler+1,_EUSART2_ErrorHandler+1
  9358  0052BE  0012               	return		;funcret
  9359  0052C0                     __end_of_EUSART2_SetErrorHandler:
  9360                           	opt callstack 0
  9361                           
  9362 ;; *************** function _EUSART1_Initialize *****************
  9363 ;; Defined at:
  9364 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  9365 ;; Parameters:    Size  Location     Type
  9366 ;;		None
  9367 ;; Auto vars:     Size  Location     Type
  9368 ;;		None
  9369 ;; Return value:  Size  Location     Type
  9370 ;;                  1    wreg      void 
  9371 ;; Registers used:
  9372 ;;		wreg, status,2, status,0, cstack
  9373 ;; Tracked objects:
  9374 ;;		On entry : 0/0
  9375 ;;		On exit  : 0/0
  9376 ;;		Unchanged: 0/0
  9377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9382 ;;Total ram usage:        0 bytes
  9383 ;; Hardware stack levels used:    1
  9384 ;; Hardware stack levels required when called:    5
  9385 ;; This function calls:
  9386 ;;		_EUSART1_SetErrorHandler
  9387 ;;		_EUSART1_SetFramingErrorHandler
  9388 ;;		_EUSART1_SetOverrunErrorHandler
  9389 ;;		_EUSART1_SetRxInterruptHandler
  9390 ;;		_EUSART1_SetTxInterruptHandler
  9391 ;; This function is called by:
  9392 ;;		_SYSTEM_Initialize
  9393 ;; This function uses a non-reentrant model
  9394 ;;
  9395                           
  9396                           	psect	text27
  9397  00478E                     __ptext27:
  9398                           	opt callstack 0
  9399  00478E                     _EUSART1_Initialize:
  9400                           	opt callstack 24
  9401  00478E                     
  9402                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
  9403  00478E  010E               	movlb	14	; () banked
  9404  004790  9BC5               	bcf	197,5,b	;volatile
  9405  004792                     
  9406                           ; BSR set to: 14
  9407                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  9408  004792  0E8E               	movlw	low _EUSART1_Receive_ISR
  9409  004794  6E05               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
  9410  004796  0E42               	movlw	high _EUSART1_Receive_ISR
  9411  004798  6E06               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
  9412  00479A  EC65  F029         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  9413  00479E                     
  9414                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
  9415  00479E  010E               	movlb	14	; () banked
  9416  0047A0  99C5               	bcf	197,4,b	;volatile
  9417                           
  9418                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  9419  0047A2  0E2C               	movlw	low _EUSART1_Transmit_ISR
  9420  0047A4  6E05               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
  9421  0047A6  0E4E               	movlw	high _EUSART1_Transmit_ISR
  9422  0047A8  6E06               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
  9423  0047AA  EC60  F029         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  9424  0047AE                     
  9425                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
  9426  0047AE  0E08               	movlw	8
  9427  0047B0  6E9F               	movwf	159,c	;volatile
  9428  0047B2                     
  9429                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
  9430  0047B2  0E90               	movlw	144
  9431  0047B4  6E9D               	movwf	157,c	;volatile
  9432  0047B6                     
  9433                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
  9434  0047B6  0E24               	movlw	36
  9435  0047B8  6E9E               	movwf	158,c	;volatile
  9436  0047BA                     
  9437                           ;mcc_generated_files/eusart1.c: 108:     SP1BRGL = 0xA0;
  9438  0047BA  0EA0               	movlw	160
  9439  0047BC  6E9B               	movwf	155,c	;volatile
  9440  0047BE                     
  9441                           ;mcc_generated_files/eusart1.c: 113:     SP1BRGH = 0x01;
  9442  0047BE  0E01               	movlw	1
  9443  0047C0  6E9C               	movwf	156,c	;volatile
  9444  0047C2                     
  9445                           ;mcc_generated_files/eusart1.c: 117:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  9446  0047C2  0E2C               	movlw	low _EUSART1_DefaultFramingErrorHandler
  9447  0047C4  6E05               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  9448  0047C6  0E53               	movlw	high _EUSART1_DefaultFramingErrorHandler
  9449  0047C8  6E06               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  9450  0047CA  EC6F  F029         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  9451  0047CE                     
  9452                           ;mcc_generated_files/eusart1.c: 118:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  9453  0047CE  0E16               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  9454  0047D0  6E05               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  9455  0047D2  0E53               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  9456  0047D4  6E06               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  9457  0047D6  EC6A  F029         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  9458  0047DA                     
  9459                           ;mcc_generated_files/eusart1.c: 119:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  9460  0047DA  0E1C               	movlw	low _EUSART1_DefaultErrorHandler
  9461  0047DC  6E05               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  9462  0047DE  0E53               	movlw	high _EUSART1_DefaultErrorHandler
  9463  0047E0  6E06               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  9464  0047E2  EC74  F029         	call	_EUSART1_SetErrorHandler	;wreg free
  9465                           
  9466                           ;mcc_generated_files/eusart1.c: 121:     eusart1RxLastError.status = 0;
  9467  0047E6  0E00               	movlw	0
  9468  0047E8  0100               	movlb	0	; () banked
  9469  0047EA  6FDF               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  9470                           
  9471                           ;mcc_generated_files/eusart1.c: 124:     eusart1TxHead = 0;
  9472  0047EC  0E00               	movlw	0
  9473  0047EE  6FE3               	movwf	_eusart1TxHead& (0+255),b	;volatile
  9474                           
  9475                           ;mcc_generated_files/eusart1.c: 125:     eusart1TxTail = 0;
  9476  0047F0  0E00               	movlw	0
  9477  0047F2  6FE2               	movwf	_eusart1TxTail& (0+255),b	;volatile
  9478                           
  9479                           ;mcc_generated_files/eusart1.c: 126:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  9480  0047F4  0E10               	movlw	16
  9481  0047F6  6FFE               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
  9482                           
  9483                           ;mcc_generated_files/eusart1.c: 128:     eusart1RxHead = 0;
  9484  0047F8  0E00               	movlw	0
  9485  0047FA  6E59               	movwf	_eusart1RxHead^0,c	;volatile
  9486                           
  9487                           ;mcc_generated_files/eusart1.c: 129:     eusart1RxTail = 0;
  9488  0047FC  0E00               	movlw	0
  9489  0047FE  6FE1               	movwf	_eusart1RxTail& (0+255),b	;volatile
  9490                           
  9491                           ;mcc_generated_files/eusart1.c: 130:     eusart1RxCount = 0;
  9492  004800  0E00               	movlw	0
  9493  004802  6FE0               	movwf	_eusart1RxCount& (0+255),b	;volatile
  9494  004804                     
  9495                           ; BSR set to: 0
  9496                           ;mcc_generated_files/eusart1.c: 133:     PIE3bits.RC1IE = 1;
  9497  004804  010E               	movlb	14	; () banked
  9498  004806  8BC5               	bsf	197,5,b	;volatile
  9499  004808                     
  9500                           ; BSR set to: 14
  9501  004808  0012               	return		;funcret
  9502  00480A                     __end_of_EUSART1_Initialize:
  9503                           	opt callstack 0
  9504                           
  9505 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  9506 ;; Defined at:
  9507 ;;		line 280 in file "mcc_generated_files/eusart1.c"
  9508 ;; Parameters:    Size  Location     Type
  9509 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  9510 ;;		 -> EUSART1_Transmit_ISR(1), 
  9511 ;; Auto vars:     Size  Location     Type
  9512 ;;		None
  9513 ;; Return value:  Size  Location     Type
  9514 ;;                  1    wreg      void 
  9515 ;; Registers used:
  9516 ;;		wreg, status,2, status,0
  9517 ;; Tracked objects:
  9518 ;;		On entry : 0/0
  9519 ;;		On exit  : 0/0
  9520 ;;		Unchanged: 0/0
  9521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9522 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9525 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9526 ;;Total ram usage:        2 bytes
  9527 ;; Hardware stack levels used:    1
  9528 ;; Hardware stack levels required when called:    4
  9529 ;; This function calls:
  9530 ;;		Nothing
  9531 ;; This function is called by:
  9532 ;;		_EUSART1_Initialize
  9533 ;; This function uses a non-reentrant model
  9534 ;;
  9535                           
  9536                           	psect	text28
  9537  0052C0                     __ptext28:
  9538                           	opt callstack 0
  9539  0052C0                     _EUSART1_SetTxInterruptHandler:
  9540                           	opt callstack 24
  9541  0052C0                     
  9542                           ;mcc_generated_files/eusart1.c: 281:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  9543  0052C0  C005  F0F8         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  9544  0052C4  C006  F0F9         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  9545  0052C8  0012               	return		;funcret
  9546  0052CA                     __end_of_EUSART1_SetTxInterruptHandler:
  9547                           	opt callstack 0
  9548                           
  9549 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  9550 ;; Defined at:
  9551 ;;		line 284 in file "mcc_generated_files/eusart1.c"
  9552 ;; Parameters:    Size  Location     Type
  9553 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  9554 ;;		 -> EUSART1_Receive_ISR(1), 
  9555 ;; Auto vars:     Size  Location     Type
  9556 ;;		None
  9557 ;; Return value:  Size  Location     Type
  9558 ;;                  1    wreg      void 
  9559 ;; Registers used:
  9560 ;;		wreg, status,2, status,0
  9561 ;; Tracked objects:
  9562 ;;		On entry : 0/0
  9563 ;;		On exit  : 0/0
  9564 ;;		Unchanged: 0/0
  9565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9566 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9569 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9570 ;;Total ram usage:        2 bytes
  9571 ;; Hardware stack levels used:    1
  9572 ;; Hardware stack levels required when called:    4
  9573 ;; This function calls:
  9574 ;;		Nothing
  9575 ;; This function is called by:
  9576 ;;		_EUSART1_Initialize
  9577 ;; This function uses a non-reentrant model
  9578 ;;
  9579                           
  9580                           	psect	text29
  9581  0052CA                     __ptext29:
  9582                           	opt callstack 0
  9583  0052CA                     _EUSART1_SetRxInterruptHandler:
  9584                           	opt callstack 24
  9585  0052CA                     
  9586                           ;mcc_generated_files/eusart1.c: 285:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  9587  0052CA  C005  F0F6         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  9588  0052CE  C006  F0F7         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  9589  0052D2  0012               	return		;funcret
  9590  0052D4                     __end_of_EUSART1_SetRxInterruptHandler:
  9591                           	opt callstack 0
  9592                           
  9593 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  9594 ;; Defined at:
  9595 ;;		line 272 in file "mcc_generated_files/eusart1.c"
  9596 ;; Parameters:    Size  Location     Type
  9597 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  9598 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  9599 ;; Auto vars:     Size  Location     Type
  9600 ;;		None
  9601 ;; Return value:  Size  Location     Type
  9602 ;;                  1    wreg      void 
  9603 ;; Registers used:
  9604 ;;		wreg, status,2, status,0
  9605 ;; Tracked objects:
  9606 ;;		On entry : 0/0
  9607 ;;		On exit  : 0/0
  9608 ;;		Unchanged: 0/0
  9609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9610 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9613 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9614 ;;Total ram usage:        2 bytes
  9615 ;; Hardware stack levels used:    1
  9616 ;; Hardware stack levels required when called:    4
  9617 ;; This function calls:
  9618 ;;		Nothing
  9619 ;; This function is called by:
  9620 ;;		_EUSART1_Initialize
  9621 ;; This function uses a non-reentrant model
  9622 ;;
  9623                           
  9624                           	psect	text30
  9625  0052D4                     __ptext30:
  9626                           	opt callstack 0
  9627  0052D4                     _EUSART1_SetOverrunErrorHandler:
  9628                           	opt callstack 24
  9629  0052D4                     
  9630                           ;mcc_generated_files/eusart1.c: 273:     EUSART1_OverrunErrorHandler = interruptHandler;
  9631  0052D4  C005  F1F5         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  9632  0052D8  C006  F1F6         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  9633  0052DC  0012               	return		;funcret
  9634  0052DE                     __end_of_EUSART1_SetOverrunErrorHandler:
  9635                           	opt callstack 0
  9636                           
  9637 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  9638 ;; Defined at:
  9639 ;;		line 268 in file "mcc_generated_files/eusart1.c"
  9640 ;; Parameters:    Size  Location     Type
  9641 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  9642 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  9643 ;; Auto vars:     Size  Location     Type
  9644 ;;		None
  9645 ;; Return value:  Size  Location     Type
  9646 ;;                  1    wreg      void 
  9647 ;; Registers used:
  9648 ;;		wreg, status,2, status,0
  9649 ;; Tracked objects:
  9650 ;;		On entry : 0/0
  9651 ;;		On exit  : 0/0
  9652 ;;		Unchanged: 0/0
  9653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9654 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9657 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9658 ;;Total ram usage:        2 bytes
  9659 ;; Hardware stack levels used:    1
  9660 ;; Hardware stack levels required when called:    4
  9661 ;; This function calls:
  9662 ;;		Nothing
  9663 ;; This function is called by:
  9664 ;;		_EUSART1_Initialize
  9665 ;; This function uses a non-reentrant model
  9666 ;;
  9667                           
  9668                           	psect	text31
  9669  0052DE                     __ptext31:
  9670                           	opt callstack 0
  9671  0052DE                     _EUSART1_SetFramingErrorHandler:
  9672                           	opt callstack 24
  9673  0052DE                     
  9674                           ;mcc_generated_files/eusart1.c: 269:     EUSART1_FramingErrorHandler = interruptHandler;
  9675  0052DE  C005  F1F7         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  9676  0052E2  C006  F1F8         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  9677  0052E6  0012               	return		;funcret
  9678  0052E8                     __end_of_EUSART1_SetFramingErrorHandler:
  9679                           	opt callstack 0
  9680                           
  9681 ;; *************** function _EUSART1_SetErrorHandler *****************
  9682 ;; Defined at:
  9683 ;;		line 276 in file "mcc_generated_files/eusart1.c"
  9684 ;; Parameters:    Size  Location     Type
  9685 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  9686 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  9687 ;; Auto vars:     Size  Location     Type
  9688 ;;		None
  9689 ;; Return value:  Size  Location     Type
  9690 ;;                  1    wreg      void 
  9691 ;; Registers used:
  9692 ;;		wreg, status,2, status,0
  9693 ;; Tracked objects:
  9694 ;;		On entry : 0/0
  9695 ;;		On exit  : 0/0
  9696 ;;		Unchanged: 0/0
  9697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9698 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9701 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9702 ;;Total ram usage:        2 bytes
  9703 ;; Hardware stack levels used:    1
  9704 ;; Hardware stack levels required when called:    4
  9705 ;; This function calls:
  9706 ;;		Nothing
  9707 ;; This function is called by:
  9708 ;;		_EUSART1_Initialize
  9709 ;; This function uses a non-reentrant model
  9710 ;;
  9711                           
  9712                           	psect	text32
  9713  0052E8                     __ptext32:
  9714                           	opt callstack 0
  9715  0052E8                     _EUSART1_SetErrorHandler:
  9716                           	opt callstack 24
  9717  0052E8                     
  9718                           ;mcc_generated_files/eusart1.c: 277:     EUSART1_ErrorHandler = interruptHandler;
  9719  0052E8  C005  F1F3         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  9720  0052EC  C006  F1F4         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  9721  0052F0  0012               	return		;funcret
  9722  0052F2                     __end_of_EUSART1_SetErrorHandler:
  9723                           	opt callstack 0
  9724                           
  9725 ;; *************** function _ADCC_Initialize *****************
  9726 ;; Defined at:
  9727 ;;		line 62 in file "mcc_generated_files/adcc.c"
  9728 ;; Parameters:    Size  Location     Type
  9729 ;;		None
  9730 ;; Auto vars:     Size  Location     Type
  9731 ;;		None
  9732 ;; Return value:  Size  Location     Type
  9733 ;;                  1    wreg      void 
  9734 ;; Registers used:
  9735 ;;		wreg, status,2
  9736 ;; Tracked objects:
  9737 ;;		On entry : 0/0
  9738 ;;		On exit  : 0/0
  9739 ;;		Unchanged: 0/0
  9740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9745 ;;Total ram usage:        0 bytes
  9746 ;; Hardware stack levels used:    1
  9747 ;; Hardware stack levels required when called:    4
  9748 ;; This function calls:
  9749 ;;		Nothing
  9750 ;; This function is called by:
  9751 ;;		_SYSTEM_Initialize
  9752 ;; This function uses a non-reentrant model
  9753 ;;
  9754                           
  9755                           	psect	text33
  9756  004C26                     __ptext33:
  9757                           	opt callstack 0
  9758  004C26                     _ADCC_Initialize:
  9759                           	opt callstack 25
  9760  004C26                     
  9761                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
  9762  004C26  0E00               	movlw	0
  9763  004C28  6E6A               	movwf	106,c	;volatile
  9764                           
  9765                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
  9766  004C2A  0E00               	movlw	0
  9767  004C2C  6E6B               	movwf	107,c	;volatile
  9768                           
  9769                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
  9770  004C2E  0E00               	movlw	0
  9771  004C30  6E6C               	movwf	108,c	;volatile
  9772                           
  9773                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
  9774  004C32  0E00               	movlw	0
  9775  004C34  6E6D               	movwf	109,c	;volatile
  9776                           
  9777                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
  9778  004C36  0E00               	movlw	0
  9779  004C38  6E68               	movwf	104,c	;volatile
  9780                           
  9781                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
  9782  004C3A  0E00               	movlw	0
  9783  004C3C  6E69               	movwf	105,c	;volatile
  9784                           
  9785                           ;mcc_generated_files/adcc.c: 78:     ADRPT = 0x00;
  9786  004C3E  0E00               	movlw	0
  9787  004C40  6E66               	movwf	102,c	;volatile
  9788                           
  9789                           ;mcc_generated_files/adcc.c: 80:     ADPCH = 0x00;
  9790  004C42  0E00               	movlw	0
  9791  004C44  010F               	movlb	15	; () banked
  9792  004C46  6F5F               	movwf	95,b	;volatile
  9793                           
  9794                           ;mcc_generated_files/adcc.c: 82:     ADCAP = 0x00;
  9795  004C48  0E00               	movlw	0
  9796  004C4A  6F5D               	movwf	93,b	;volatile
  9797                           
  9798                           ;mcc_generated_files/adcc.c: 84:     ADPRE = 0x00;
  9799  004C4C  0E00               	movlw	0
  9800  004C4E  6F5E               	movwf	94,b	;volatile
  9801                           
  9802                           ;mcc_generated_files/adcc.c: 86:     ADCON1 = 0x00;
  9803  004C50  0E00               	movlw	0
  9804  004C52  6F59               	movwf	89,b	;volatile
  9805                           
  9806                           ;mcc_generated_files/adcc.c: 88:     ADCON2 = 0x00;
  9807  004C54  0E00               	movlw	0
  9808  004C56  6F5A               	movwf	90,b	;volatile
  9809                           
  9810                           ;mcc_generated_files/adcc.c: 90:     ADCON3 = 0x00;
  9811  004C58  0E00               	movlw	0
  9812  004C5A  6F5B               	movwf	91,b	;volatile
  9813                           
  9814                           ;mcc_generated_files/adcc.c: 92:     ADSTAT = 0x00;
  9815  004C5C  0E00               	movlw	0
  9816  004C5E  6E65               	movwf	101,c	;volatile
  9817                           
  9818                           ;mcc_generated_files/adcc.c: 94:     ADREF = 0x00;
  9819  004C60  0E00               	movlw	0
  9820  004C62  6F58               	movwf	88,b	;volatile
  9821                           
  9822                           ;mcc_generated_files/adcc.c: 96:     ADACT = 0x00;
  9823  004C64  0E00               	movlw	0
  9824  004C66  6F56               	movwf	86,b	;volatile
  9825                           
  9826                           ;mcc_generated_files/adcc.c: 98:     ADCLK = 0x00;
  9827  004C68  0E00               	movlw	0
  9828  004C6A  6F57               	movwf	87,b	;volatile
  9829                           
  9830                           ;mcc_generated_files/adcc.c: 100:     ADCON0 = 0x94;
  9831  004C6C  0E94               	movlw	148
  9832  004C6E  6E60               	movwf	96,c	;volatile
  9833                           
  9834                           ;mcc_generated_files/adcc.c: 102:     ADACQ = 0x0A;
  9835  004C70  0E0A               	movlw	10
  9836  004C72  6F5C               	movwf	92,b	;volatile
  9837  004C74                     
  9838                           ; BSR set to: 15
  9839  004C74  0012               	return		;funcret
  9840  004C76                     __end_of_ADCC_Initialize:
  9841                           	opt callstack 0
  9842                           
  9843 ;; *************** function _ADCC_DisableContinuousConversion *****************
  9844 ;; Defined at:
  9845 ;;		line 267 in file "mcc_generated_files/adcc.c"
  9846 ;; Parameters:    Size  Location     Type
  9847 ;;		None
  9848 ;; Auto vars:     Size  Location     Type
  9849 ;;		None
  9850 ;; Return value:  Size  Location     Type
  9851 ;;                  1    wreg      void 
  9852 ;; Registers used:
  9853 ;;		None
  9854 ;; Tracked objects:
  9855 ;;		On entry : 0/0
  9856 ;;		On exit  : 0/0
  9857 ;;		Unchanged: 0/0
  9858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9863 ;;Total ram usage:        0 bytes
  9864 ;; Hardware stack levels used:    1
  9865 ;; Hardware stack levels required when called:    4
  9866 ;; This function calls:
  9867 ;;		Nothing
  9868 ;; This function is called by:
  9869 ;;		_SYSTEM_Initialize
  9870 ;; This function uses a non-reentrant model
  9871 ;;
  9872                           
  9873                           	psect	text34
  9874  005326                     __ptext34:
  9875                           	opt callstack 0
  9876  005326                     _ADCC_DisableContinuousConversion:
  9877                           	opt callstack 25
  9878  005326                     
  9879                           ;mcc_generated_files/adcc.c: 270:     ADCON0bits.ADCONT = 0;
  9880  005326  9C60               	bcf	96,6,c	;volatile
  9881  005328  0012               	return		;funcret
  9882  00532A                     __end_of_ADCC_DisableContinuousConversion:
  9883                           	opt callstack 0
  9884                           
  9885 ;; *************** function _PrintModbus *****************
  9886 ;; Defined at:
  9887 ;;		line 98 in file "Modbus.c"
  9888 ;; Parameters:    Size  Location     Type
  9889 ;;		None
  9890 ;; Auto vars:     Size  Location     Type
  9891 ;;  j               2   52[BANK0 ] int 
  9892 ;;  i               2   54[BANK0 ] int 
  9893 ;; Return value:  Size  Location     Type
  9894 ;;                  1    wreg      void 
  9895 ;; Registers used:
  9896 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9897 ;; Tracked objects:
  9898 ;;		On entry : 0/0
  9899 ;;		On exit  : 0/0
  9900 ;;		Unchanged: 0/0
  9901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9903 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9904 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9905 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9906 ;;Total ram usage:        9 bytes
  9907 ;; Hardware stack levels used:    1
  9908 ;; Hardware stack levels required when called:   13
  9909 ;; This function calls:
  9910 ;;		_printf
  9911 ;; This function is called by:
  9912 ;;		_main
  9913 ;; This function uses a non-reentrant model
  9914 ;;
  9915                           
  9916                           	psect	text35
  9917  001D38                     __ptext35:
  9918                           	opt callstack 0
  9919  001D38                     _PrintModbus:
  9920                           	opt callstack 17
  9921  001D38                     
  9922                           ;Modbus.c: 103:     printf("\r\nModbus Received:\r\n");
  9923  001D38  0EBE               	movlw	low STR_12
  9924  001D3A  0100               	movlb	0	; () banked
  9925  001D3C  6F7D               	movwf	printf@fmt& (0+255),b
  9926  001D3E  0EFE               	movlw	high STR_12
  9927  001D40  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9928  001D42  EC8A  F028         	call	_printf	;wreg free
  9929  001D46                     
  9930                           ;Modbus.c: 105:     if(ModbusData[1] == 0x03 || ModbusData[1] == 0x04){
  9931  001D46  0E03               	movlw	3
  9932  001D48  0101               	movlb	1	; () banked
  9933  001D4A  1901               	xorwf	(_ModbusData+1)& (0+255),w,b
  9934  001D4C  B4D8               	btfsc	status,2,c
  9935  001D4E  EFAB  F00E         	goto	u8551
  9936  001D52  EFAD  F00E         	goto	u8550
  9937  001D56                     u8551:
  9938  001D56  EFB6  F00E         	goto	l8402
  9939  001D5A                     u8550:
  9940  001D5A                     
  9941                           ; BSR set to: 1
  9942  001D5A  0E04               	movlw	4
  9943  001D5C  1901               	xorwf	(_ModbusData+1)& (0+255),w,b
  9944  001D5E  A4D8               	btfss	status,2,c
  9945  001D60  EFB4  F00E         	goto	u8561
  9946  001D64  EFB6  F00E         	goto	u8560
  9947  001D68                     u8561:
  9948  001D68  EF08  F00F         	goto	l8404
  9949  001D6C                     u8560:
  9950  001D6C                     l8402:
  9951                           
  9952                           ; BSR set to: 1
  9953                           ;Modbus.c: 107:         printf("   Byte 00: 0x%02x - Card Address\r\n",ModbusData[0]);
  9954  001D6C  0E6C               	movlw	low STR_13
  9955  001D6E  0100               	movlb	0	; () banked
  9956  001D70  6F7D               	movwf	printf@fmt& (0+255),b
  9957  001D72  0EFB               	movlw	high STR_13
  9958  001D74  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9959  001D76  C100  F07F         	movff	_ModbusData,?_printf+2
  9960  001D7A  6B80               	clrf	(?_printf+3)& (0+255),b
  9961  001D7C  EC8A  F028         	call	_printf	;wreg free
  9962                           
  9963                           ;Modbus.c: 108:         printf("   Byte 01: 0x%02x - Function Code (Read Multi Reg)\r\n"
      +                          ,ModbusData[1]);
  9964  001D80  0EE3               	movlw	low STR_14
  9965  001D82  0100               	movlb	0	; () banked
  9966  001D84  6F7D               	movwf	printf@fmt& (0+255),b
  9967  001D86  0EF5               	movlw	high STR_14
  9968  001D88  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9969  001D8A  C101  F07F         	movff	_ModbusData+1,?_printf+2
  9970  001D8E  6B80               	clrf	(?_printf+3)& (0+255),b
  9971  001D90  EC8A  F028         	call	_printf	;wreg free
  9972                           
  9973                           ;Modbus.c: 109:         printf("   Byte 02: 0x%02x - 1st Reg Add Hi\r\n",ModbusData[2]);
  9974  001D94  0E8D               	movlw	low STR_15
  9975  001D96  0100               	movlb	0	; () banked
  9976  001D98  6F7D               	movwf	printf@fmt& (0+255),b
  9977  001D9A  0EFA               	movlw	high STR_15
  9978  001D9C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9979  001D9E  C102  F07F         	movff	_ModbusData+2,?_printf+2
  9980  001DA2  6B80               	clrf	(?_printf+3)& (0+255),b
  9981  001DA4  EC8A  F028         	call	_printf	;wreg free
  9982                           
  9983                           ;Modbus.c: 110:         printf("   Byte 03: 0x%02x - 1st Reg Add Lo\r\n",ModbusData[3]);
  9984  001DA8  0EB3               	movlw	low STR_16
  9985  001DAA  0100               	movlb	0	; () banked
  9986  001DAC  6F7D               	movwf	printf@fmt& (0+255),b
  9987  001DAE  0EFA               	movlw	high STR_16
  9988  001DB0  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9989  001DB2  C103  F07F         	movff	_ModbusData+3,?_printf+2
  9990  001DB6  6B80               	clrf	(?_printf+3)& (0+255),b
  9991  001DB8  EC8A  F028         	call	_printf	;wreg free
  9992                           
  9993                           ;Modbus.c: 111:         printf("   Byte 04: 0x%02x - Num of Reg Hi\r\n",ModbusData[4]);
  9994  001DBC  0EFE               	movlw	low STR_17
  9995  001DBE  0100               	movlb	0	; () banked
  9996  001DC0  6F7D               	movwf	printf@fmt& (0+255),b
  9997  001DC2  0EFA               	movlw	high STR_17
  9998  001DC4  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9999  001DC6  C104  F07F         	movff	_ModbusData+4,?_printf+2
 10000  001DCA  6B80               	clrf	(?_printf+3)& (0+255),b
 10001  001DCC  EC8A  F028         	call	_printf	;wreg free
 10002                           
 10003                           ;Modbus.c: 112:         printf("   Byte 05: 0x%02x - Num of Reg Lo\r\n",ModbusData[5]);
 10004  001DD0  0E23               	movlw	low STR_18
 10005  001DD2  0100               	movlb	0	; () banked
 10006  001DD4  6F7D               	movwf	printf@fmt& (0+255),b
 10007  001DD6  0EFB               	movlw	high STR_18
 10008  001DD8  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10009  001DDA  C105  F07F         	movff	_ModbusData+5,?_printf+2
 10010  001DDE  6B80               	clrf	(?_printf+3)& (0+255),b
 10011  001DE0  EC8A  F028         	call	_printf	;wreg free
 10012                           
 10013                           ;Modbus.c: 113:         printf("   Byte 06: 0x%02x - CRC Hi\r\n",ModbusData[6]);
 10014  001DE4  0EDB               	movlw	low STR_19
 10015  001DE6  0100               	movlb	0	; () banked
 10016  001DE8  6F7D               	movwf	printf@fmt& (0+255),b
 10017  001DEA  0EFC               	movlw	high STR_19
 10018  001DEC  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10019  001DEE  C106  F07F         	movff	_ModbusData+6,?_printf+2
 10020  001DF2  6B80               	clrf	(?_printf+3)& (0+255),b
 10021  001DF4  EC8A  F028         	call	_printf	;wreg free
 10022                           
 10023                           ;Modbus.c: 114:         printf("   Byte 07: 0x%02x - CRC Lo\r\n",ModbusData[7]);
 10024  001DF8  0E17               	movlw	low STR_20
 10025  001DFA  0100               	movlb	0	; () banked
 10026  001DFC  6F7D               	movwf	printf@fmt& (0+255),b
 10027  001DFE  0EFD               	movlw	high STR_20
 10028  001E00  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10029  001E02  C107  F07F         	movff	_ModbusData+7,?_printf+2
 10030  001E06  6B80               	clrf	(?_printf+3)& (0+255),b
 10031  001E08  EC8A  F028         	call	_printf	;wreg free
 10032                           
 10033                           ;Modbus.c: 116:     }else if(ModbusData[1] == 0x10){
 10034  001E0C  EF05  F010         	goto	l889
 10035  001E10                     l8404:
 10036                           
 10037                           ; BSR set to: 1
 10038  001E10  0E10               	movlw	16
 10039  001E12  1901               	xorwf	(_ModbusData+1)& (0+255),w,b
 10040  001E14  A4D8               	btfss	status,2,c
 10041  001E16  EF0F  F00F         	goto	u8571
 10042  001E1A  EF11  F00F         	goto	u8570
 10043  001E1E                     u8571:
 10044  001E1E  EF05  F010         	goto	l889
 10045  001E22                     u8570:
 10046  001E22                     
 10047                           ; BSR set to: 1
 10048                           ;Modbus.c: 118:         printf("   Byte 00: 0x%02x - Card Address\r\n",ModbusData[0]);
 10049  001E22  0E6C               	movlw	low STR_13
 10050  001E24  0100               	movlb	0	; () banked
 10051  001E26  6F7D               	movwf	printf@fmt& (0+255),b
 10052  001E28  0EFB               	movlw	high STR_13
 10053  001E2A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10054  001E2C  C100  F07F         	movff	_ModbusData,?_printf+2
 10055  001E30  6B80               	clrf	(?_printf+3)& (0+255),b
 10056  001E32  EC8A  F028         	call	_printf	;wreg free
 10057                           
 10058                           ;Modbus.c: 119:         printf("   Byte 01: 0x%02x - Function Code (Write Multi Reg)\r\n
      +                          ",ModbusData[1]);
 10059  001E36  0E76               	movlw	low STR_22
 10060  001E38  0100               	movlb	0	; () banked
 10061  001E3A  6F7D               	movwf	printf@fmt& (0+255),b
 10062  001E3C  0EF5               	movlw	high STR_22
 10063  001E3E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10064  001E40  C101  F07F         	movff	_ModbusData+1,?_printf+2
 10065  001E44  6B80               	clrf	(?_printf+3)& (0+255),b
 10066  001E46  EC8A  F028         	call	_printf	;wreg free
 10067                           
 10068                           ;Modbus.c: 120:         printf("   Byte 02: 0x%02x - 1st Reg Add Hi\r\n",ModbusData[2]);
 10069  001E4A  0E8D               	movlw	low STR_15
 10070  001E4C  0100               	movlb	0	; () banked
 10071  001E4E  6F7D               	movwf	printf@fmt& (0+255),b
 10072  001E50  0EFA               	movlw	high STR_15
 10073  001E52  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10074  001E54  C102  F07F         	movff	_ModbusData+2,?_printf+2
 10075  001E58  6B80               	clrf	(?_printf+3)& (0+255),b
 10076  001E5A  EC8A  F028         	call	_printf	;wreg free
 10077                           
 10078                           ;Modbus.c: 121:         printf("   Byte 03: 0x%02x - 1st Reg Add Lo\r\n",ModbusData[3]);
 10079  001E5E  0EB3               	movlw	low STR_16
 10080  001E60  0100               	movlb	0	; () banked
 10081  001E62  6F7D               	movwf	printf@fmt& (0+255),b
 10082  001E64  0EFA               	movlw	high STR_16
 10083  001E66  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10084  001E68  C103  F07F         	movff	_ModbusData+3,?_printf+2
 10085  001E6C  6B80               	clrf	(?_printf+3)& (0+255),b
 10086  001E6E  EC8A  F028         	call	_printf	;wreg free
 10087                           
 10088                           ;Modbus.c: 122:         printf("   Byte 04: 0x%02x - Num of Reg Hi\r\n",ModbusData[4]);
 10089  001E72  0EFE               	movlw	low STR_17
 10090  001E74  0100               	movlb	0	; () banked
 10091  001E76  6F7D               	movwf	printf@fmt& (0+255),b
 10092  001E78  0EFA               	movlw	high STR_17
 10093  001E7A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10094  001E7C  C104  F07F         	movff	_ModbusData+4,?_printf+2
 10095  001E80  6B80               	clrf	(?_printf+3)& (0+255),b
 10096  001E82  EC8A  F028         	call	_printf	;wreg free
 10097                           
 10098                           ;Modbus.c: 123:         printf("   Byte 05: 0x%02x - Num of Reg Lo\r\n",ModbusData[5]);
 10099  001E86  0E23               	movlw	low STR_18
 10100  001E88  0100               	movlb	0	; () banked
 10101  001E8A  6F7D               	movwf	printf@fmt& (0+255),b
 10102  001E8C  0EFB               	movlw	high STR_18
 10103  001E8E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10104  001E90  C105  F07F         	movff	_ModbusData+5,?_printf+2
 10105  001E94  6B80               	clrf	(?_printf+3)& (0+255),b
 10106  001E96  EC8A  F028         	call	_printf	;wreg free
 10107                           
 10108                           ;Modbus.c: 124:         printf("   Byte 06: 0x%02x - Num Bytes More\r\n",ModbusData[6]);
 10109  001E9A  0E67               	movlw	low STR_27
 10110  001E9C  0100               	movlb	0	; () banked
 10111  001E9E  6F7D               	movwf	printf@fmt& (0+255),b
 10112  001EA0  0EFA               	movlw	high STR_27
 10113  001EA2  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10114  001EA4  C106  F07F         	movff	_ModbusData+6,?_printf+2
 10115  001EA8  6B80               	clrf	(?_printf+3)& (0+255),b
 10116  001EAA  EC8A  F028         	call	_printf	;wreg free
 10117  001EAE                     
 10118                           ;Modbus.c: 127:         int j = 1;
 10119  001EAE  0E00               	movlw	0
 10120  001EB0  0100               	movlb	0	; () banked
 10121  001EB2  6F95               	movwf	(PrintModbus@j+1)& (0+255),b
 10122  001EB4  0E01               	movlw	1
 10123  001EB6  6F94               	movwf	PrintModbus@j& (0+255),b
 10124  001EB8                     
 10125                           ; BSR set to: 0
 10126                           ;Modbus.c: 128:         for(i=7; i< ModDataCnt -2 ; i++ ){
 10127  001EB8  0E00               	movlw	0
 10128  001EBA  6F97               	movwf	(PrintModbus@i+1)& (0+255),b
 10129  001EBC  0E07               	movlw	7
 10130  001EBE  6F96               	movwf	PrintModbus@i& (0+255),b
 10131  001EC0  EFBD  F00F         	goto	l8418
 10132  001EC4                     l8412:
 10133                           
 10134                           ; BSR set to: 0
 10135                           ;Modbus.c: 129:             printf("   Byte %02i: 0x%02x - Reg %i Hi (Add. 0x%02x%02x / 
      +                          Circuit %i)\r\n", i-1, ModbusData[i],j, ModbusData[2], ModbusData[3] + j-1,ModbusData[3]
      +                           + j-1);
 10136  001EC4  0EC0               	movlw	low STR_28
 10137  001EC6  6F7D               	movwf	printf@fmt& (0+255),b
 10138  001EC8  0EF4               	movlw	high STR_28
 10139  001ECA  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10140  001ECC  0EFF               	movlw	255
 10141  001ECE  2596               	addwf	PrintModbus@i& (0+255),w,b
 10142  001ED0  6F7F               	movwf	(?_printf+2)& (0+255),b
 10143  001ED2  0EFF               	movlw	255
 10144  001ED4  2197               	addwfc	(PrintModbus@i+1)& (0+255),w,b
 10145  001ED6  6F80               	movwf	(?_printf+3)& (0+255),b
 10146  001ED8  0E00               	movlw	low _ModbusData
 10147  001EDA  2596               	addwf	PrintModbus@i& (0+255),w,b
 10148  001EDC  6ED9               	movwf	fsr2l,c
 10149  001EDE  0E01               	movlw	high _ModbusData
 10150  001EE0  2197               	addwfc	(PrintModbus@i+1)& (0+255),w,b
 10151  001EE2  6EDA               	movwf	fsr2h,c
 10152  001EE4  50DF               	movf	indf2,w,c
 10153  001EE6  6F8F               	movwf	??_PrintModbus& (0+255),b
 10154  001EE8  518F               	movf	??_PrintModbus& (0+255),w,b
 10155  001EEA  6F81               	movwf	(?_printf+4)& (0+255),b
 10156  001EEC  6B82               	clrf	(?_printf+5)& (0+255),b
 10157  001EEE  C094  F083         	movff	PrintModbus@j,?_printf+6
 10158  001EF2  C095  F084         	movff	PrintModbus@j+1,?_printf+7
 10159  001EF6  C102  F085         	movff	_ModbusData+2,?_printf+8
 10160  001EFA  6B86               	clrf	(?_printf+9)& (0+255),b
 10161  001EFC  0101               	movlb	1	; () banked
 10162  001EFE  5103               	movf	(_ModbusData+3)& (0+255),w,b
 10163  001F00  0100               	movlb	0	; () banked
 10164  001F02  2594               	addwf	PrintModbus@j& (0+255),w,b
 10165  001F04  6F90               	movwf	(??_PrintModbus+1)& (0+255),b
 10166  001F06  0E00               	movlw	0
 10167  001F08  2195               	addwfc	(PrintModbus@j+1)& (0+255),w,b
 10168  001F0A  6F91               	movwf	(??_PrintModbus+2)& (0+255),b
 10169  001F0C  0EFF               	movlw	255
 10170  001F0E  2590               	addwf	(??_PrintModbus+1)& (0+255),w,b
 10171  001F10  6F87               	movwf	(?_printf+10)& (0+255),b
 10172  001F12  0EFF               	movlw	255
 10173  001F14  2191               	addwfc	(??_PrintModbus+2)& (0+255),w,b
 10174  001F16  6F88               	movwf	(?_printf+11)& (0+255),b
 10175  001F18  0101               	movlb	1	; () banked
 10176  001F1A  5103               	movf	(_ModbusData+3)& (0+255),w,b
 10177  001F1C  0100               	movlb	0	; () banked
 10178  001F1E  2594               	addwf	PrintModbus@j& (0+255),w,b
 10179  001F20  6F92               	movwf	(??_PrintModbus+3)& (0+255),b
 10180  001F22  0E00               	movlw	0
 10181  001F24  2195               	addwfc	(PrintModbus@j+1)& (0+255),w,b
 10182  001F26  6F93               	movwf	(??_PrintModbus+4)& (0+255),b
 10183  001F28  0EFF               	movlw	255
 10184  001F2A  2592               	addwf	(??_PrintModbus+3)& (0+255),w,b
 10185  001F2C  6F89               	movwf	(?_printf+12)& (0+255),b
 10186  001F2E  0EFF               	movlw	255
 10187  001F30  2193               	addwfc	(??_PrintModbus+4)& (0+255),w,b
 10188  001F32  6F8A               	movwf	(?_printf+13)& (0+255),b
 10189  001F34  EC8A  F028         	call	_printf	;wreg free
 10190  001F38                     
 10191                           ;Modbus.c: 130:             i++;
 10192  001F38  0100               	movlb	0	; () banked
 10193  001F3A  4B96               	infsnz	PrintModbus@i& (0+255),f,b
 10194  001F3C  2B97               	incf	(PrintModbus@i+1)& (0+255),f,b
 10195  001F3E                     
 10196                           ; BSR set to: 0
 10197                           ;Modbus.c: 131:             printf("   Byte %02i: 0x%02x - Reg %i Lo\r\n", i, ModbusData
      +                          [i],j);
 10198  001F3E  0E90               	movlw	low STR_29
 10199  001F40  6F7D               	movwf	printf@fmt& (0+255),b
 10200  001F42  0EFB               	movlw	high STR_29
 10201  001F44  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10202  001F46  C096  F07F         	movff	PrintModbus@i,?_printf+2
 10203  001F4A  C097  F080         	movff	PrintModbus@i+1,?_printf+3
 10204  001F4E  0E00               	movlw	low _ModbusData
 10205  001F50  2596               	addwf	PrintModbus@i& (0+255),w,b
 10206  001F52  6ED9               	movwf	fsr2l,c
 10207  001F54  0E01               	movlw	high _ModbusData
 10208  001F56  2197               	addwfc	(PrintModbus@i+1)& (0+255),w,b
 10209  001F58  6EDA               	movwf	fsr2h,c
 10210  001F5A  50DF               	movf	indf2,w,c
 10211  001F5C  6F8F               	movwf	??_PrintModbus& (0+255),b
 10212  001F5E  518F               	movf	??_PrintModbus& (0+255),w,b
 10213  001F60  6F81               	movwf	(?_printf+4)& (0+255),b
 10214  001F62  6B82               	clrf	(?_printf+5)& (0+255),b
 10215  001F64  C094  F083         	movff	PrintModbus@j,?_printf+6
 10216  001F68  C095  F084         	movff	PrintModbus@j+1,?_printf+7
 10217  001F6C  EC8A  F028         	call	_printf	;wreg free
 10218                           
 10219                           ;Modbus.c: 132:             j++;
 10220  001F70  0100               	movlb	0	; () banked
 10221  001F72  4B94               	infsnz	PrintModbus@j& (0+255),f,b
 10222  001F74  2B95               	incf	(PrintModbus@j+1)& (0+255),f,b
 10223                           
 10224                           ;Modbus.c: 133:         }
 10225  001F76  4B96               	infsnz	PrintModbus@i& (0+255),f,b
 10226  001F78  2B97               	incf	(PrintModbus@i+1)& (0+255),f,b
 10227  001F7A                     l8418:
 10228                           
 10229                           ; BSR set to: 0
 10230  001F7A  0EFE               	movlw	254
 10231  001F7C  6F8F               	movwf	??_PrintModbus& (0+255),b
 10232  001F7E  0EFF               	movlw	255
 10233  001F80  6F90               	movwf	(??_PrintModbus+1)& (0+255),b
 10234  001F82  C0DB  F091         	movff	_ModDataCnt,??_PrintModbus+2
 10235  001F86  C0DC  F092         	movff	_ModDataCnt+1,??_PrintModbus+3
 10236  001F8A  518F               	movf	??_PrintModbus& (0+255),w,b
 10237  001F8C  2791               	addwf	(??_PrintModbus+2)& (0+255),f,b
 10238  001F8E  5190               	movf	(??_PrintModbus+1)& (0+255),w,b
 10239  001F90  2392               	addwfc	(??_PrintModbus+3)& (0+255),f,b
 10240  001F92  5191               	movf	(??_PrintModbus+2)& (0+255),w,b
 10241  001F94  5D96               	subwf	PrintModbus@i& (0+255),w,b
 10242  001F96  5197               	movf	(PrintModbus@i+1)& (0+255),w,b
 10243  001F98  0A80               	xorlw	128
 10244  001F9A  6F93               	movwf	(??_PrintModbus+4)& (0+255),b
 10245  001F9C  5192               	movf	(??_PrintModbus+3)& (0+255),w,b
 10246  001F9E  0A80               	xorlw	128
 10247  001FA0  5993               	subwfb	(??_PrintModbus+4)& (0+255),w,b
 10248  001FA2  A0D8               	btfss	status,0,c
 10249  001FA4  EFD6  F00F         	goto	u8581
 10250  001FA8  EFD8  F00F         	goto	u8580
 10251  001FAC                     u8581:
 10252  001FAC  EF62  F00F         	goto	l8412
 10253  001FB0                     u8580:
 10254  001FB0                     
 10255                           ; BSR set to: 0
 10256                           ;Modbus.c: 135:         printf("   Byte %02i: 0x%02x - CRC Hi\r\n",i, ModbusData[i]);
 10257  001FB0  0E9B               	movlw	low STR_30
 10258  001FB2  6F7D               	movwf	printf@fmt& (0+255),b
 10259  001FB4  0EFC               	movlw	high STR_30
 10260  001FB6  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10261  001FB8  C096  F07F         	movff	PrintModbus@i,?_printf+2
 10262  001FBC  C097  F080         	movff	PrintModbus@i+1,?_printf+3
 10263  001FC0  0E00               	movlw	low _ModbusData
 10264  001FC2  2596               	addwf	PrintModbus@i& (0+255),w,b
 10265  001FC4  6ED9               	movwf	fsr2l,c
 10266  001FC6  0E01               	movlw	high _ModbusData
 10267  001FC8  2197               	addwfc	(PrintModbus@i+1)& (0+255),w,b
 10268  001FCA  6EDA               	movwf	fsr2h,c
 10269  001FCC  50DF               	movf	indf2,w,c
 10270  001FCE  6F8F               	movwf	??_PrintModbus& (0+255),b
 10271  001FD0  518F               	movf	??_PrintModbus& (0+255),w,b
 10272  001FD2  6F81               	movwf	(?_printf+4)& (0+255),b
 10273  001FD4  6B82               	clrf	(?_printf+5)& (0+255),b
 10274  001FD6  EC8A  F028         	call	_printf	;wreg free
 10275                           
 10276                           ;Modbus.c: 136:         printf("   Byte %02i: 0x%02x - CRC Lo\r\n",i + 1, ModbusData[i +
      +                           1]);
 10277  001FDA  0EBB               	movlw	low STR_31
 10278  001FDC  0100               	movlb	0	; () banked
 10279  001FDE  6F7D               	movwf	printf@fmt& (0+255),b
 10280  001FE0  0EFC               	movlw	high STR_31
 10281  001FE2  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10282  001FE4  0E01               	movlw	1
 10283  001FE6  2596               	addwf	PrintModbus@i& (0+255),w,b
 10284  001FE8  6F7F               	movwf	(?_printf+2)& (0+255),b
 10285  001FEA  0E00               	movlw	0
 10286  001FEC  2197               	addwfc	(PrintModbus@i+1)& (0+255),w,b
 10287  001FEE  6F80               	movwf	(?_printf+3)& (0+255),b
 10288  001FF0  0E01               	movlw	low (_ModbusData+1)
 10289  001FF2  2596               	addwf	PrintModbus@i& (0+255),w,b
 10290  001FF4  6ED9               	movwf	fsr2l,c
 10291  001FF6  0E01               	movlw	high (_ModbusData+1)
 10292  001FF8  2197               	addwfc	(PrintModbus@i+1)& (0+255),w,b
 10293  001FFA  6EDA               	movwf	fsr2h,c
 10294  001FFC  50DF               	movf	indf2,w,c
 10295  001FFE  6F8F               	movwf	??_PrintModbus& (0+255),b
 10296  002000  518F               	movf	??_PrintModbus& (0+255),w,b
 10297  002002  6F81               	movwf	(?_printf+4)& (0+255),b
 10298  002004  6B82               	clrf	(?_printf+5)& (0+255),b
 10299  002006  EC8A  F028         	call	_printf	;wreg free
 10300  00200A                     l889:
 10301                           
 10302                           ;Modbus.c: 140:     printf("\r\n");
 10303  00200A  0EB3               	movlw	low (STR_133+10)
 10304  00200C  0100               	movlb	0	; () banked
 10305  00200E  6F7D               	movwf	printf@fmt& (0+255),b
 10306  002010  0EFF               	movlw	high (STR_133+10)
 10307  002012  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10308  002014  EC8A  F028         	call	_printf	;wreg free
 10309  002018  0012               	return		;funcret
 10310  00201A                     __end_of_PrintModbus:
 10311                           	opt callstack 0
 10312                           
 10313 ;; *************** function _PrintModRespon *****************
 10314 ;; Defined at:
 10315 ;;		line 550 in file "Modbus.c"
 10316 ;; Parameters:    Size  Location     Type
 10317 ;;		None
 10318 ;; Auto vars:     Size  Location     Type
 10319 ;;  j               2   50[BANK0 ] int 
 10320 ;;  i               2   52[BANK0 ] int 
 10321 ;; Return value:  Size  Location     Type
 10322 ;;                  1    wreg      void 
 10323 ;; Registers used:
 10324 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10325 ;; Tracked objects:
 10326 ;;		On entry : 0/0
 10327 ;;		On exit  : 0/0
 10328 ;;		Unchanged: 0/0
 10329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10331 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10332 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10333 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10334 ;;Total ram usage:        7 bytes
 10335 ;; Hardware stack levels used:    1
 10336 ;; Hardware stack levels required when called:   13
 10337 ;; This function calls:
 10338 ;;		_EUSART2_is_tx_done
 10339 ;;		_EUSART2_is_tx_ready
 10340 ;;		_printf
 10341 ;; This function is called by:
 10342 ;;		_main
 10343 ;; This function uses a non-reentrant model
 10344 ;;
 10345                           
 10346                           	psect	text36
 10347  001A3A                     __ptext36:
 10348                           	opt callstack 0
 10349  001A3A                     _PrintModRespon:
 10350                           	opt callstack 17
 10351  001A3A                     
 10352                           ;Modbus.c: 554:     printf("Modbus Response:\r\n");
 10353  001A3A  0E22               	movlw	low STR_64
 10354  001A3C  0100               	movlb	0	; () banked
 10355  001A3E  6F7D               	movwf	printf@fmt& (0+255),b
 10356  001A40  0EFF               	movlw	high STR_64
 10357  001A42  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10358  001A44  EC8A  F028         	call	_printf	;wreg free
 10359  001A48                     
 10360                           ;Modbus.c: 557:     if(MBRespon[1] == 0x03 || MBRespon[1] == 0x04){
 10361  001A48  0E03               	movlw	3
 10362  001A4A  0102               	movlb	2	; () banked
 10363  001A4C  1958               	xorwf	(_MBRespon+1)& (0+255),w,b
 10364  001A4E  B4D8               	btfsc	status,2,c
 10365  001A50  EF2C  F00D         	goto	u8591
 10366  001A54  EF2E  F00D         	goto	u8590
 10367  001A58                     u8591:
 10368  001A58  EF37  F00D         	goto	l8430
 10369  001A5C                     u8590:
 10370  001A5C                     
 10371                           ; BSR set to: 2
 10372  001A5C  0E04               	movlw	4
 10373  001A5E  1958               	xorwf	(_MBRespon+1)& (0+255),w,b
 10374  001A60  A4D8               	btfss	status,2,c
 10375  001A62  EF35  F00D         	goto	u8601
 10376  001A66  EF37  F00D         	goto	u8600
 10377  001A6A                     u8601:
 10378  001A6A  EFF6  F00D         	goto	l8446
 10379  001A6E                     u8600:
 10380  001A6E                     l8430:
 10381                           
 10382                           ; BSR set to: 2
 10383                           ;Modbus.c: 560:         printf("   Byte 00: 0x%02x - Card Address\r\n", MBRespon[0]);
 10384  001A6E  0E6C               	movlw	low STR_13
 10385  001A70  0100               	movlb	0	; () banked
 10386  001A72  6F7D               	movwf	printf@fmt& (0+255),b
 10387  001A74  0EFB               	movlw	high STR_13
 10388  001A76  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10389  001A78  C257  F07F         	movff	_MBRespon,?_printf+2
 10390  001A7C  6B80               	clrf	(?_printf+3)& (0+255),b
 10391  001A7E  EC8A  F028         	call	_printf	;wreg free
 10392                           
 10393                           ;Modbus.c: 561:         printf("   Byte 01: 0x%02x - Function Code (Read Multi Reg)\r\n"
      +                          , MBRespon[1]);
 10394  001A82  0EE3               	movlw	low STR_14
 10395  001A84  0100               	movlb	0	; () banked
 10396  001A86  6F7D               	movwf	printf@fmt& (0+255),b
 10397  001A88  0EF5               	movlw	high STR_14
 10398  001A8A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10399  001A8C  C258  F07F         	movff	_MBRespon+1,?_printf+2
 10400  001A90  6B80               	clrf	(?_printf+3)& (0+255),b
 10401  001A92  EC8A  F028         	call	_printf	;wreg free
 10402                           
 10403                           ;Modbus.c: 562:         printf("   Byte 02: 0x%02x - Num Bytes More\r\n", MBRespon[2]);
 10404  001A96  0E41               	movlw	low STR_67
 10405  001A98  0100               	movlb	0	; () banked
 10406  001A9A  6F7D               	movwf	printf@fmt& (0+255),b
 10407  001A9C  0EFA               	movlw	high STR_67
 10408  001A9E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10409  001AA0  C259  F07F         	movff	_MBRespon+2,?_printf+2
 10410  001AA4  6B80               	clrf	(?_printf+3)& (0+255),b
 10411  001AA6  EC8A  F028         	call	_printf	;wreg free
 10412  001AAA                     
 10413                           ;Modbus.c: 566:         int j = 1;
 10414  001AAA  0E00               	movlw	0
 10415  001AAC  0100               	movlb	0	; () banked
 10416  001AAE  6F93               	movwf	(PrintModRespon@j+1)& (0+255),b
 10417  001AB0  0E01               	movlw	1
 10418  001AB2  6F92               	movwf	PrintModRespon@j& (0+255),b
 10419  001AB4                     
 10420                           ; BSR set to: 0
 10421                           ;Modbus.c: 567:         for(i=0; i< MBRespon[2] ; i++ ){
 10422  001AB4  0E00               	movlw	0
 10423  001AB6  6F95               	movwf	(PrintModRespon@i+1)& (0+255),b
 10424  001AB8  0E00               	movlw	0
 10425  001ABA  6F94               	movwf	PrintModRespon@i& (0+255),b
 10426  001ABC  EFB1  F00D         	goto	l8442
 10427  001AC0                     l8436:
 10428                           
 10429                           ; BSR set to: 0
 10430                           ;Modbus.c: 568:             printf("   Byte %02i: 0x%02x - Reg %i Hi (Add. 0x%02x %02x)\
      +                          r\n", i+1, MBRespon[i+3],j-1, ModbusData[2], ModbusData[3] +j-1);
 10431  001AC0  0E19               	movlw	low STR_68
 10432  001AC2  6F7D               	movwf	printf@fmt& (0+255),b
 10433  001AC4  0EF6               	movlw	high STR_68
 10434  001AC6  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10435  001AC8  0E01               	movlw	1
 10436  001ACA  2594               	addwf	PrintModRespon@i& (0+255),w,b
 10437  001ACC  6F7F               	movwf	(?_printf+2)& (0+255),b
 10438  001ACE  0E00               	movlw	0
 10439  001AD0  2195               	addwfc	(PrintModRespon@i+1)& (0+255),w,b
 10440  001AD2  6F80               	movwf	(?_printf+3)& (0+255),b
 10441  001AD4  0E5A               	movlw	low (_MBRespon+3)
 10442  001AD6  2594               	addwf	PrintModRespon@i& (0+255),w,b
 10443  001AD8  6ED9               	movwf	fsr2l,c
 10444  001ADA  0E02               	movlw	high (_MBRespon+3)
 10445  001ADC  2195               	addwfc	(PrintModRespon@i+1)& (0+255),w,b
 10446  001ADE  6EDA               	movwf	fsr2h,c
 10447  001AE0  50DF               	movf	indf2,w,c
 10448  001AE2  6F8F               	movwf	??_PrintModRespon& (0+255),b
 10449  001AE4  518F               	movf	??_PrintModRespon& (0+255),w,b
 10450  001AE6  6F81               	movwf	(?_printf+4)& (0+255),b
 10451  001AE8  6B82               	clrf	(?_printf+5)& (0+255),b
 10452  001AEA  0EFF               	movlw	255
 10453  001AEC  2592               	addwf	PrintModRespon@j& (0+255),w,b
 10454  001AEE  6F83               	movwf	(?_printf+6)& (0+255),b
 10455  001AF0  0EFF               	movlw	255
 10456  001AF2  2193               	addwfc	(PrintModRespon@j+1)& (0+255),w,b
 10457  001AF4  6F84               	movwf	(?_printf+7)& (0+255),b
 10458  001AF6  C102  F085         	movff	_ModbusData+2,?_printf+8
 10459  001AFA  6B86               	clrf	(?_printf+9)& (0+255),b
 10460  001AFC  0101               	movlb	1	; () banked
 10461  001AFE  5103               	movf	(_ModbusData+3)& (0+255),w,b
 10462  001B00  0100               	movlb	0	; () banked
 10463  001B02  2592               	addwf	PrintModRespon@j& (0+255),w,b
 10464  001B04  6F90               	movwf	(??_PrintModRespon+1)& (0+255),b
 10465  001B06  0E00               	movlw	0
 10466  001B08  2193               	addwfc	(PrintModRespon@j+1)& (0+255),w,b
 10467  001B0A  6F91               	movwf	(??_PrintModRespon+2)& (0+255),b
 10468  001B0C  0EFF               	movlw	255
 10469  001B0E  2590               	addwf	(??_PrintModRespon+1)& (0+255),w,b
 10470  001B10  6F87               	movwf	(?_printf+10)& (0+255),b
 10471  001B12  0EFF               	movlw	255
 10472  001B14  2191               	addwfc	(??_PrintModRespon+2)& (0+255),w,b
 10473  001B16  6F88               	movwf	(?_printf+11)& (0+255),b
 10474  001B18  EC8A  F028         	call	_printf	;wreg free
 10475  001B1C                     
 10476                           ;Modbus.c: 569:             i++;
 10477  001B1C  0100               	movlb	0	; () banked
 10478  001B1E  4B94               	infsnz	PrintModRespon@i& (0+255),f,b
 10479  001B20  2B95               	incf	(PrintModRespon@i+1)& (0+255),f,b
 10480  001B22                     
 10481                           ; BSR set to: 0
 10482                           ;Modbus.c: 570:             printf("   Byte %02i: 0x%02x - Reg %i Lo\r\n", i+1, MBRespon
      +                          [i+3],j);
 10483  001B22  0E90               	movlw	low STR_29
 10484  001B24  6F7D               	movwf	printf@fmt& (0+255),b
 10485  001B26  0EFB               	movlw	high STR_29
 10486  001B28  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10487  001B2A  0E01               	movlw	1
 10488  001B2C  2594               	addwf	PrintModRespon@i& (0+255),w,b
 10489  001B2E  6F7F               	movwf	(?_printf+2)& (0+255),b
 10490  001B30  0E00               	movlw	0
 10491  001B32  2195               	addwfc	(PrintModRespon@i+1)& (0+255),w,b
 10492  001B34  6F80               	movwf	(?_printf+3)& (0+255),b
 10493  001B36  0E5A               	movlw	low (_MBRespon+3)
 10494  001B38  2594               	addwf	PrintModRespon@i& (0+255),w,b
 10495  001B3A  6ED9               	movwf	fsr2l,c
 10496  001B3C  0E02               	movlw	high (_MBRespon+3)
 10497  001B3E  2195               	addwfc	(PrintModRespon@i+1)& (0+255),w,b
 10498  001B40  6EDA               	movwf	fsr2h,c
 10499  001B42  50DF               	movf	indf2,w,c
 10500  001B44  6F8F               	movwf	??_PrintModRespon& (0+255),b
 10501  001B46  518F               	movf	??_PrintModRespon& (0+255),w,b
 10502  001B48  6F81               	movwf	(?_printf+4)& (0+255),b
 10503  001B4A  6B82               	clrf	(?_printf+5)& (0+255),b
 10504  001B4C  C092  F083         	movff	PrintModRespon@j,?_printf+6
 10505  001B50  C093  F084         	movff	PrintModRespon@j+1,?_printf+7
 10506  001B54  EC8A  F028         	call	_printf	;wreg free
 10507                           
 10508                           ;Modbus.c: 571:             j++;
 10509  001B58  0100               	movlb	0	; () banked
 10510  001B5A  4B92               	infsnz	PrintModRespon@j& (0+255),f,b
 10511  001B5C  2B93               	incf	(PrintModRespon@j+1)& (0+255),f,b
 10512                           
 10513                           ;Modbus.c: 572:         }
 10514  001B5E  4B94               	infsnz	PrintModRespon@i& (0+255),f,b
 10515  001B60  2B95               	incf	(PrintModRespon@i+1)& (0+255),f,b
 10516  001B62                     l8442:
 10517                           
 10518                           ; BSR set to: 0
 10519  001B62  0102               	movlb	2	; () banked
 10520  001B64  5159               	movf	(_MBRespon+2)& (0+255),w,b
 10521  001B66  0100               	movlb	0	; () banked
 10522  001B68  6F8F               	movwf	??_PrintModRespon& (0+255),b
 10523  001B6A  6B90               	clrf	(??_PrintModRespon+1)& (0+255),b
 10524  001B6C  518F               	movf	??_PrintModRespon& (0+255),w,b
 10525  001B6E  5D94               	subwf	PrintModRespon@i& (0+255),w,b
 10526  001B70  5195               	movf	(PrintModRespon@i+1)& (0+255),w,b
 10527  001B72  0A80               	xorlw	128
 10528  001B74  6F91               	movwf	(??_PrintModRespon+2)& (0+255),b
 10529  001B76  5190               	movf	(??_PrintModRespon+1)& (0+255),w,b
 10530  001B78  0A80               	xorlw	128
 10531  001B7A  5991               	subwfb	(??_PrintModRespon+2)& (0+255),w,b
 10532  001B7C  A0D8               	btfss	status,0,c
 10533  001B7E  EFC3  F00D         	goto	u8611
 10534  001B82  EFC5  F00D         	goto	u8610
 10535  001B86                     u8611:
 10536  001B86  EF60  F00D         	goto	l8436
 10537  001B8A                     u8610:
 10538  001B8A                     
 10539                           ; BSR set to: 0
 10540                           ;Modbus.c: 575:         printf("   Byte %02i: 0x%02x - CRC Hi\r\n", i +1 , MBRespon[i + 
      +                          2 + 1] );
 10541  001B8A  0E9B               	movlw	low STR_30
 10542  001B8C  6F7D               	movwf	printf@fmt& (0+255),b
 10543  001B8E  0EFC               	movlw	high STR_30
 10544  001B90  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10545  001B92  0E01               	movlw	1
 10546  001B94  2594               	addwf	PrintModRespon@i& (0+255),w,b
 10547  001B96  6F7F               	movwf	(?_printf+2)& (0+255),b
 10548  001B98  0E00               	movlw	0
 10549  001B9A  2195               	addwfc	(PrintModRespon@i+1)& (0+255),w,b
 10550  001B9C  6F80               	movwf	(?_printf+3)& (0+255),b
 10551  001B9E  0E5A               	movlw	low (_MBRespon+3)
 10552  001BA0  2594               	addwf	PrintModRespon@i& (0+255),w,b
 10553  001BA2  6ED9               	movwf	fsr2l,c
 10554  001BA4  0E02               	movlw	high (_MBRespon+3)
 10555  001BA6  2195               	addwfc	(PrintModRespon@i+1)& (0+255),w,b
 10556  001BA8  6EDA               	movwf	fsr2h,c
 10557  001BAA  50DF               	movf	indf2,w,c
 10558  001BAC  6F8F               	movwf	??_PrintModRespon& (0+255),b
 10559  001BAE  518F               	movf	??_PrintModRespon& (0+255),w,b
 10560  001BB0  6F81               	movwf	(?_printf+4)& (0+255),b
 10561  001BB2  6B82               	clrf	(?_printf+5)& (0+255),b
 10562  001BB4  EC8A  F028         	call	_printf	;wreg free
 10563                           
 10564                           ;Modbus.c: 576:         printf("   Byte %02i: 0x%02x - CRC Lo\r\n", i +2 , MBRespon[i + 
      +                          2 + 2] );
 10565  001BB8  0EBB               	movlw	low STR_31
 10566  001BBA  0100               	movlb	0	; () banked
 10567  001BBC  6F7D               	movwf	printf@fmt& (0+255),b
 10568  001BBE  0EFC               	movlw	high STR_31
 10569  001BC0  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10570  001BC2  0E02               	movlw	2
 10571  001BC4  2594               	addwf	PrintModRespon@i& (0+255),w,b
 10572  001BC6  6F7F               	movwf	(?_printf+2)& (0+255),b
 10573  001BC8  0E00               	movlw	0
 10574  001BCA  2195               	addwfc	(PrintModRespon@i+1)& (0+255),w,b
 10575  001BCC  6F80               	movwf	(?_printf+3)& (0+255),b
 10576  001BCE  0E5B               	movlw	low (_MBRespon+4)
 10577  001BD0  2594               	addwf	PrintModRespon@i& (0+255),w,b
 10578  001BD2  6ED9               	movwf	fsr2l,c
 10579  001BD4  0E02               	movlw	high (_MBRespon+4)
 10580  001BD6  2195               	addwfc	(PrintModRespon@i+1)& (0+255),w,b
 10581  001BD8  6EDA               	movwf	fsr2h,c
 10582  001BDA  50DF               	movf	indf2,w,c
 10583  001BDC  6F8F               	movwf	??_PrintModRespon& (0+255),b
 10584  001BDE  518F               	movf	??_PrintModRespon& (0+255),w,b
 10585  001BE0  6F81               	movwf	(?_printf+4)& (0+255),b
 10586  001BE2  6B82               	clrf	(?_printf+5)& (0+255),b
 10587  001BE4  EC8A  F028         	call	_printf	;wreg free
 10588                           
 10589                           ;Modbus.c: 578:     }else if(MBRespon[1] == 0x10){
 10590  001BE8  EF94  F00E         	goto	l8462
 10591  001BEC                     l8446:
 10592                           
 10593                           ; BSR set to: 2
 10594  001BEC  0E10               	movlw	16
 10595  001BEE  1958               	xorwf	(_MBRespon+1)& (0+255),w,b
 10596  001BF0  A4D8               	btfss	status,2,c
 10597  001BF2  EFFD  F00D         	goto	u8621
 10598  001BF6  EFFF  F00D         	goto	u8620
 10599  001BFA                     u8621:
 10600  001BFA  EF51  F00E         	goto	l8450
 10601  001BFE                     u8620:
 10602  001BFE                     
 10603                           ; BSR set to: 2
 10604                           ;Modbus.c: 581:         printf("   Byte 00: 0x%02x - Card Address\r\n", MBRespon[0]);
 10605  001BFE  0E6C               	movlw	low STR_13
 10606  001C00  0100               	movlb	0	; () banked
 10607  001C02  6F7D               	movwf	printf@fmt& (0+255),b
 10608  001C04  0EFB               	movlw	high STR_13
 10609  001C06  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10610  001C08  C257  F07F         	movff	_MBRespon,?_printf+2
 10611  001C0C  6B80               	clrf	(?_printf+3)& (0+255),b
 10612  001C0E  EC8A  F028         	call	_printf	;wreg free
 10613                           
 10614                           ;Modbus.c: 582:         printf("   Byte 01: 0x%02x - Function Code (Read Multi Reg)\r\n"
      +                          , MBRespon[1]);
 10615  001C12  0EE3               	movlw	low STR_14
 10616  001C14  0100               	movlb	0	; () banked
 10617  001C16  6F7D               	movwf	printf@fmt& (0+255),b
 10618  001C18  0EF5               	movlw	high STR_14
 10619  001C1A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10620  001C1C  C258  F07F         	movff	_MBRespon+1,?_printf+2
 10621  001C20  6B80               	clrf	(?_printf+3)& (0+255),b
 10622  001C22  EC8A  F028         	call	_printf	;wreg free
 10623                           
 10624                           ;Modbus.c: 583:         printf("   Byte 02: 0x%02x - 1st Reg Add Hi\r\n", MBRespon[2]);
 10625  001C26  0E8D               	movlw	low STR_15
 10626  001C28  0100               	movlb	0	; () banked
 10627  001C2A  6F7D               	movwf	printf@fmt& (0+255),b
 10628  001C2C  0EFA               	movlw	high STR_15
 10629  001C2E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10630  001C30  C259  F07F         	movff	_MBRespon+2,?_printf+2
 10631  001C34  6B80               	clrf	(?_printf+3)& (0+255),b
 10632  001C36  EC8A  F028         	call	_printf	;wreg free
 10633                           
 10634                           ;Modbus.c: 584:         printf("   Byte 03: 0x%02x - 1st Reg Add Lo\r\n", MBRespon[3]);
 10635  001C3A  0EB3               	movlw	low STR_16
 10636  001C3C  0100               	movlb	0	; () banked
 10637  001C3E  6F7D               	movwf	printf@fmt& (0+255),b
 10638  001C40  0EFA               	movlw	high STR_16
 10639  001C42  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10640  001C44  C25A  F07F         	movff	_MBRespon+3,?_printf+2
 10641  001C48  6B80               	clrf	(?_printf+3)& (0+255),b
 10642  001C4A  EC8A  F028         	call	_printf	;wreg free
 10643                           
 10644                           ;Modbus.c: 585:         printf("   Byte 04: 0x%02x - Num of Reg Hi\r\n", MBRespon[4]);
 10645  001C4E  0EFE               	movlw	low STR_17
 10646  001C50  0100               	movlb	0	; () banked
 10647  001C52  6F7D               	movwf	printf@fmt& (0+255),b
 10648  001C54  0EFA               	movlw	high STR_17
 10649  001C56  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10650  001C58  C25B  F07F         	movff	_MBRespon+4,?_printf+2
 10651  001C5C  6B80               	clrf	(?_printf+3)& (0+255),b
 10652  001C5E  EC8A  F028         	call	_printf	;wreg free
 10653                           
 10654                           ;Modbus.c: 586:         printf("   Byte 05: 0x%02x - Num of Reg Lo\r\n", MBRespon[5]);
 10655  001C62  0E23               	movlw	low STR_18
 10656  001C64  0100               	movlb	0	; () banked
 10657  001C66  6F7D               	movwf	printf@fmt& (0+255),b
 10658  001C68  0EFB               	movlw	high STR_18
 10659  001C6A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10660  001C6C  C25C  F07F         	movff	_MBRespon+5,?_printf+2
 10661  001C70  6B80               	clrf	(?_printf+3)& (0+255),b
 10662  001C72  EC8A  F028         	call	_printf	;wreg free
 10663                           
 10664                           ;Modbus.c: 590:         printf("   Byte 06: 0x%02x - CRC Hi\r\n", MBRespon[6]);
 10665  001C76  0EDB               	movlw	low STR_19
 10666  001C78  0100               	movlb	0	; () banked
 10667  001C7A  6F7D               	movwf	printf@fmt& (0+255),b
 10668  001C7C  0EFC               	movlw	high STR_19
 10669  001C7E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10670  001C80  C25D  F07F         	movff	_MBRespon+6,?_printf+2
 10671  001C84  6B80               	clrf	(?_printf+3)& (0+255),b
 10672  001C86  EC8A  F028         	call	_printf	;wreg free
 10673                           
 10674                           ;Modbus.c: 591:         printf("   Byte 07: 0x%02x - CRC Hi\r\n", MBRespon[7]);
 10675  001C8A  0EF9               	movlw	low STR_79
 10676  001C8C  0100               	movlb	0	; () banked
 10677  001C8E  6F7D               	movwf	printf@fmt& (0+255),b
 10678  001C90  0EFC               	movlw	high STR_79
 10679  001C92  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10680  001C94  C25E  F07F         	movff	_MBRespon+7,?_printf+2
 10681  001C98  6B80               	clrf	(?_printf+3)& (0+255),b
 10682  001C9A  EC8A  F028         	call	_printf	;wreg free
 10683                           
 10684                           ;Modbus.c: 593:     }else{
 10685  001C9E  EF94  F00E         	goto	l8462
 10686  001CA2                     l8450:
 10687                           
 10688                           ; BSR set to: 2
 10689                           ;Modbus.c: 594:         for(i=0; i< MBResCnt ; i++ ){
 10690  001CA2  0E00               	movlw	0
 10691  001CA4  0100               	movlb	0	; () banked
 10692  001CA6  6F95               	movwf	(PrintModRespon@i+1)& (0+255),b
 10693  001CA8  0E00               	movlw	0
 10694  001CAA  6F94               	movwf	PrintModRespon@i& (0+255),b
 10695  001CAC  EF85  F00E         	goto	l8460
 10696  001CB0                     l8452:
 10697  001CB0  EC07  F029         	call	_EUSART2_is_tx_ready	;wreg free
 10698  001CB4  0900               	iorlw	0
 10699  001CB6  B4D8               	btfsc	status,2,c
 10700  001CB8  EF60  F00E         	goto	u8631
 10701  001CBC  EF62  F00E         	goto	u8630
 10702  001CC0                     u8631:
 10703  001CC0  EF58  F00E         	goto	l8452
 10704  001CC4                     u8630:
 10705  001CC4                     
 10706                           ;Modbus.c: 596:             printf("   Byte %02i: 0x%02x \r\n", i, MBRespon[i]);
 10707  001CC4  0E24               	movlw	low STR_80
 10708  001CC6  0100               	movlb	0	; () banked
 10709  001CC8  6F7D               	movwf	printf@fmt& (0+255),b
 10710  001CCA  0EFE               	movlw	high STR_80
 10711  001CCC  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10712  001CCE  C094  F07F         	movff	PrintModRespon@i,?_printf+2
 10713  001CD2  C095  F080         	movff	PrintModRespon@i+1,?_printf+3
 10714  001CD6  0E57               	movlw	low _MBRespon
 10715  001CD8  2594               	addwf	PrintModRespon@i& (0+255),w,b
 10716  001CDA  6ED9               	movwf	fsr2l,c
 10717  001CDC  0E02               	movlw	high _MBRespon
 10718  001CDE  2195               	addwfc	(PrintModRespon@i+1)& (0+255),w,b
 10719  001CE0  6EDA               	movwf	fsr2h,c
 10720  001CE2  50DF               	movf	indf2,w,c
 10721  001CE4  6F8F               	movwf	??_PrintModRespon& (0+255),b
 10722  001CE6  518F               	movf	??_PrintModRespon& (0+255),w,b
 10723  001CE8  6F81               	movwf	(?_printf+4)& (0+255),b
 10724  001CEA  6B82               	clrf	(?_printf+5)& (0+255),b
 10725  001CEC  EC8A  F028         	call	_printf	;wreg free
 10726  001CF0                     l8456:
 10727  001CF0  EC2B  F029         	call	_EUSART2_is_tx_done	;wreg free
 10728  001CF4  0900               	iorlw	0
 10729  001CF6  B4D8               	btfsc	status,2,c
 10730  001CF8  EF80  F00E         	goto	u8641
 10731  001CFC  EF82  F00E         	goto	u8640
 10732  001D00                     u8641:
 10733  001D00  EF78  F00E         	goto	l8456
 10734  001D04                     u8640:
 10735  001D04                     
 10736                           ;Modbus.c: 598:         }
 10737  001D04  0100               	movlb	0	; () banked
 10738  001D06  4B94               	infsnz	PrintModRespon@i& (0+255),f,b
 10739  001D08  2B95               	incf	(PrintModRespon@i+1)& (0+255),f,b
 10740  001D0A                     l8460:
 10741                           
 10742                           ; BSR set to: 0
 10743  001D0A  51D7               	movf	_MBResCnt& (0+255),w,b
 10744  001D0C  5D94               	subwf	PrintModRespon@i& (0+255),w,b
 10745  001D0E  5195               	movf	(PrintModRespon@i+1)& (0+255),w,b
 10746  001D10  0A80               	xorlw	128
 10747  001D12  6F8F               	movwf	??_PrintModRespon& (0+255),b
 10748  001D14  51D8               	movf	(_MBResCnt+1)& (0+255),w,b
 10749  001D16  0A80               	xorlw	128
 10750  001D18  598F               	subwfb	??_PrintModRespon& (0+255),w,b
 10751  001D1A  A0D8               	btfss	status,0,c
 10752  001D1C  EF92  F00E         	goto	u8651
 10753  001D20  EF94  F00E         	goto	u8650
 10754  001D24                     u8651:
 10755  001D24  EF58  F00E         	goto	l8452
 10756  001D28                     u8650:
 10757  001D28                     l8462:
 10758                           
 10759                           ;Modbus.c: 600:     printf("\r\n\n");
 10760  001D28  0EA5               	movlw	low (STR_36+17)
 10761  001D2A  0100               	movlb	0	; () banked
 10762  001D2C  6F7D               	movwf	printf@fmt& (0+255),b
 10763  001D2E  0EFE               	movlw	high (STR_36+17)
 10764  001D30  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10765  001D32  EC8A  F028         	call	_printf	;wreg free
 10766  001D36  0012               	return		;funcret
 10767  001D38                     __end_of_PrintModRespon:
 10768                           	opt callstack 0
 10769                           
 10770 ;; *************** function _EUSART2_is_tx_ready *****************
 10771 ;; Defined at:
 10772 ;;		line 136 in file "mcc_generated_files/eusart2.c"
 10773 ;; Parameters:    Size  Location     Type
 10774 ;;		None
 10775 ;; Auto vars:     Size  Location     Type
 10776 ;;		None
 10777 ;; Return value:  Size  Location     Type
 10778 ;;                  1    wreg      _Bool 
 10779 ;; Registers used:
 10780 ;;		wreg, status,2
 10781 ;; Tracked objects:
 10782 ;;		On entry : 0/0
 10783 ;;		On exit  : 0/0
 10784 ;;		Unchanged: 0/0
 10785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10790 ;;Total ram usage:        0 bytes
 10791 ;; Hardware stack levels used:    1
 10792 ;; Hardware stack levels required when called:    4
 10793 ;; This function calls:
 10794 ;;		Nothing
 10795 ;; This function is called by:
 10796 ;;		_PrintModRespon
 10797 ;; This function uses a non-reentrant model
 10798 ;;
 10799                           
 10800                           	psect	text37
 10801  00520E                     __ptext37:
 10802                           	opt callstack 0
 10803  00520E                     _EUSART2_is_tx_ready:
 10804                           	opt callstack 25
 10805  00520E                     
 10806                           ;mcc_generated_files/eusart2.c: 138:     return (eusart2TxBufferRemaining ? 1 : 0);
 10807  00520E  0100               	movlb	0	; () banked
 10808  005210  51FF               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 10809  005212  A4D8               	btfss	status,2,c
 10810  005214  EF0E  F029         	goto	u7731
 10811  005218  EF11  F029         	goto	u7730
 10812  00521C                     u7731:
 10813  00521C  0E01               	movlw	1
 10814  00521E  EF12  F029         	goto	u7740
 10815  005222                     u7730:
 10816  005222  0E00               	movlw	0
 10817  005224                     u7740:
 10818  005224                     
 10819                           ; BSR set to: 0
 10820  005224  0012               	return		;funcret
 10821  005226                     __end_of_EUSART2_is_tx_ready:
 10822                           	opt callstack 0
 10823                           
 10824 ;; *************** function _EUSART2_is_tx_done *****************
 10825 ;; Defined at:
 10826 ;;		line 146 in file "mcc_generated_files/eusart2.c"
 10827 ;; Parameters:    Size  Location     Type
 10828 ;;		None
 10829 ;; Auto vars:     Size  Location     Type
 10830 ;;		None
 10831 ;; Return value:  Size  Location     Type
 10832 ;;                  1    wreg      _Bool 
 10833 ;; Registers used:
 10834 ;;		wreg
 10835 ;; Tracked objects:
 10836 ;;		On entry : 0/0
 10837 ;;		On exit  : 0/0
 10838 ;;		Unchanged: 0/0
 10839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10844 ;;Total ram usage:        0 bytes
 10845 ;; Hardware stack levels used:    1
 10846 ;; Hardware stack levels required when called:    4
 10847 ;; This function calls:
 10848 ;;		Nothing
 10849 ;; This function is called by:
 10850 ;;		_PrintModRespon
 10851 ;; This function uses a non-reentrant model
 10852 ;;
 10853                           
 10854                           	psect	text38
 10855  005256                     __ptext38:
 10856                           	opt callstack 0
 10857  005256                     _EUSART2_is_tx_done:
 10858                           	opt callstack 25
 10859  005256                     
 10860                           ;mcc_generated_files/eusart2.c: 148:     return TX2STAbits.TRMT;
 10861  005256  010E               	movlb	14	; () banked
 10862  005258  B39E               	btfsc	158,1,b	;volatile
 10863  00525A  EF31  F029         	goto	u7751
 10864  00525E  EF34  F029         	goto	u7750
 10865  005262                     u7751:
 10866  005262  0E01               	movlw	1
 10867  005264  EF35  F029         	goto	u7756
 10868  005268                     u7750:
 10869  005268  0E00               	movlw	0
 10870  00526A                     u7756:
 10871  00526A                     
 10872                           ; BSR set to: 14
 10873  00526A  0012               	return		;funcret
 10874  00526C                     __end_of_EUSART2_is_tx_done:
 10875                           	opt callstack 0
 10876                           
 10877 ;; *************** function _PrintMB400 *****************
 10878 ;; Defined at:
 10879 ;;		line 36 in file "Modbus.c"
 10880 ;; Parameters:    Size  Location     Type
 10881 ;;		None
 10882 ;; Auto vars:     Size  Location     Type
 10883 ;;  i               2   47[BANK0 ] int 
 10884 ;; Return value:  Size  Location     Type
 10885 ;;                  1    wreg      void 
 10886 ;; Registers used:
 10887 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10888 ;; Tracked objects:
 10889 ;;		On entry : 0/0
 10890 ;;		On exit  : 0/0
 10891 ;;		Unchanged: 0/0
 10892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10894 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10895 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10896 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10897 ;;Total ram usage:        3 bytes
 10898 ;; Hardware stack levels used:    1
 10899 ;; Hardware stack levels required when called:   13
 10900 ;; This function calls:
 10901 ;;		___awdiv
 10902 ;;		_printf
 10903 ;; This function is called by:
 10904 ;;		_main
 10905 ;; This function uses a non-reentrant model
 10906 ;;
 10907                           
 10908                           	psect	text39
 10909  00480A                     __ptext39:
 10910                           	opt callstack 0
 10911  00480A                     _PrintMB400:
 10912                           	opt callstack 17
 10913  00480A                     
 10914                           ;Modbus.c: 41:     for(int i = ModbusData[3]; i<ModbusData[6] /2; i++ ){
 10915  00480A  C103  F08F         	movff	_ModbusData+3,PrintMB400@i
 10916  00480E  0100               	movlb	0	; () banked
 10917  004810  6B90               	clrf	(PrintMB400@i+1)& (0+255),b
 10918  004812  EF25  F024         	goto	l8172
 10919  004816                     l8168:
 10920                           
 10921                           ; BSR set to: 0
 10922                           ;Modbus.c: 42:         printf("   Reg: %i Data: 0x%04x \r\n", i , MB400xx[i]);
 10923  004816  0E8B               	movlw	low STR_11
 10924  004818  6F7D               	movwf	printf@fmt& (0+255),b
 10925  00481A  0EFD               	movlw	high STR_11
 10926  00481C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10927  00481E  C08F  F07F         	movff	PrintMB400@i,?_printf+2
 10928  004822  C090  F080         	movff	PrintMB400@i+1,?_printf+3
 10929  004826  90D8               	bcf	status,0,c
 10930  004828  358F               	rlcf	PrintMB400@i& (0+255),w,b
 10931  00482A  6ED9               	movwf	fsr2l,c
 10932  00482C  3590               	rlcf	(PrintMB400@i+1)& (0+255),w,b
 10933  00482E  6EDA               	movwf	fsr2h,c
 10934  004830  0EB7               	movlw	low _MB400xx
 10935  004832  26D9               	addwf	fsr2l,f,c
 10936  004834  0E03               	movlw	high _MB400xx
 10937  004836  22DA               	addwfc	fsr2h,f,c
 10938  004838  CFDE F081          	movff	postinc2,?_printf+4
 10939  00483C  CFDD F082          	movff	postdec2,?_printf+5
 10940  004840  EC8A  F028         	call	_printf	;wreg free
 10941  004844                     
 10942                           ;Modbus.c: 43:     }
 10943  004844  0100               	movlb	0	; () banked
 10944  004846  4B8F               	infsnz	PrintMB400@i& (0+255),f,b
 10945  004848  2B90               	incf	(PrintMB400@i+1)& (0+255),f,b
 10946  00484A                     l8172:
 10947                           
 10948                           ; BSR set to: 0
 10949  00484A  C106  F005         	movff	_ModbusData+6,___awdiv@dividend
 10950  00484E  6A06               	clrf	(___awdiv@dividend+1)^0,c
 10951  004850  0E00               	movlw	0
 10952  004852  6E08               	movwf	(___awdiv@divisor+1)^0,c
 10953  004854  0E02               	movlw	2
 10954  004856  6E07               	movwf	___awdiv@divisor^0,c
 10955  004858  ECC2  F01F         	call	___awdiv	;wreg free
 10956  00485C  5005               	movf	?___awdiv^0,w,c
 10957  00485E  0100               	movlb	0	; () banked
 10958  004860  5D8F               	subwf	PrintMB400@i& (0+255),w,b
 10959  004862  5190               	movf	(PrintMB400@i+1)& (0+255),w,b
 10960  004864  0A80               	xorlw	128
 10961  004866  6E55               	movwf	??_PrintMB400^0,c
 10962  004868  5006               	movf	(?___awdiv+1)^0,w,c
 10963  00486A  0A80               	xorlw	128
 10964  00486C  5855               	subwfb	??_PrintMB400^0,w,c
 10965  00486E  A0D8               	btfss	status,0,c
 10966  004870  EF3C  F024         	goto	u8281
 10967  004874  EF3E  F024         	goto	u8280
 10968  004878                     u8281:
 10969  004878  EF0B  F024         	goto	l8168
 10970  00487C                     u8280:
 10971  00487C                     
 10972                           ; BSR set to: 0
 10973  00487C  0012               	return		;funcret
 10974  00487E                     __end_of_PrintMB400:
 10975                           	opt callstack 0
 10976                           
 10977 ;; *************** function ___awdiv *****************
 10978 ;; Defined at:
 10979 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
 10980 ;; Parameters:    Size  Location     Type
 10981 ;;  dividend        2    4[COMRAM] int 
 10982 ;;  divisor         2    6[COMRAM] int 
 10983 ;; Auto vars:     Size  Location     Type
 10984 ;;  quotient        2   10[COMRAM] int 
 10985 ;;  sign            1    9[COMRAM] unsigned char 
 10986 ;;  counter         1    8[COMRAM] unsigned char 
 10987 ;; Return value:  Size  Location     Type
 10988 ;;                  2    4[COMRAM] int 
 10989 ;; Registers used:
 10990 ;;		wreg, status,2, status,0
 10991 ;; Tracked objects:
 10992 ;;		On entry : 0/0
 10993 ;;		On exit  : 0/0
 10994 ;;		Unchanged: 0/0
 10995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10996 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10997 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10999 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11000 ;;Total ram usage:        8 bytes
 11001 ;; Hardware stack levels used:    1
 11002 ;; Hardware stack levels required when called:    4
 11003 ;; This function calls:
 11004 ;;		Nothing
 11005 ;; This function is called by:
 11006 ;;		_PrintMB400
 11007 ;; This function uses a non-reentrant model
 11008 ;;
 11009                           
 11010                           	psect	text40
 11011  003F84                     __ptext40:
 11012                           	opt callstack 0
 11013  003F84                     ___awdiv:
 11014                           	opt callstack 25
 11015  003F84  0E00               	movlw	0
 11016  003F86  6E0A               	movwf	___awdiv@sign^0,c
 11017  003F88  BE08               	btfsc	(___awdiv@divisor+1)^0,7,c
 11018  003F8A  EFCB  F01F         	goto	u8050
 11019  003F8E  EFC9  F01F         	goto	u8051
 11020  003F92                     u8051:
 11021  003F92  EFD1  F01F         	goto	l7976
 11022  003F96                     u8050:
 11023  003F96  6C07               	negf	___awdiv@divisor^0,c
 11024  003F98  1E08               	comf	(___awdiv@divisor+1)^0,f,c
 11025  003F9A  B0D8               	btfsc	status,0,c
 11026  003F9C  2A08               	incf	(___awdiv@divisor+1)^0,f,c
 11027  003F9E  0E01               	movlw	1
 11028  003FA0  6E0A               	movwf	___awdiv@sign^0,c
 11029  003FA2                     l7976:
 11030  003FA2  BE06               	btfsc	(___awdiv@dividend+1)^0,7,c
 11031  003FA4  EFD8  F01F         	goto	u8060
 11032  003FA8  EFD6  F01F         	goto	u8061
 11033  003FAC                     u8061:
 11034  003FAC  EFDE  F01F         	goto	l7982
 11035  003FB0                     u8060:
 11036  003FB0  6C05               	negf	___awdiv@dividend^0,c
 11037  003FB2  1E06               	comf	(___awdiv@dividend+1)^0,f,c
 11038  003FB4  B0D8               	btfsc	status,0,c
 11039  003FB6  2A06               	incf	(___awdiv@dividend+1)^0,f,c
 11040  003FB8  0E01               	movlw	1
 11041  003FBA  1A0A               	xorwf	___awdiv@sign^0,f,c
 11042  003FBC                     l7982:
 11043  003FBC  0E00               	movlw	0
 11044  003FBE  6E0C               	movwf	(___awdiv@quotient+1)^0,c
 11045  003FC0  0E00               	movlw	0
 11046  003FC2  6E0B               	movwf	___awdiv@quotient^0,c
 11047  003FC4  5007               	movf	___awdiv@divisor^0,w,c
 11048  003FC6  1008               	iorwf	(___awdiv@divisor+1)^0,w,c
 11049  003FC8  B4D8               	btfsc	status,2,c
 11050  003FCA  EFE9  F01F         	goto	u8071
 11051  003FCE  EFEB  F01F         	goto	u8070
 11052  003FD2                     u8071:
 11053  003FD2  EF13  F020         	goto	l8004
 11054  003FD6                     u8070:
 11055  003FD6  0E01               	movlw	1
 11056  003FD8  6E09               	movwf	___awdiv@counter^0,c
 11057  003FDA  EFF3  F01F         	goto	l7990
 11058  003FDE                     l7988:
 11059  003FDE  90D8               	bcf	status,0,c
 11060  003FE0  3607               	rlcf	___awdiv@divisor^0,f,c
 11061  003FE2  3608               	rlcf	(___awdiv@divisor+1)^0,f,c
 11062  003FE4  2A09               	incf	___awdiv@counter^0,f,c
 11063  003FE6                     l7990:
 11064  003FE6  AE08               	btfss	(___awdiv@divisor+1)^0,7,c
 11065  003FE8  EFF8  F01F         	goto	u8081
 11066  003FEC  EFFA  F01F         	goto	u8080
 11067  003FF0                     u8081:
 11068  003FF0  EFEF  F01F         	goto	l7988
 11069  003FF4                     u8080:
 11070  003FF4                     l7992:
 11071  003FF4  90D8               	bcf	status,0,c
 11072  003FF6  360B               	rlcf	___awdiv@quotient^0,f,c
 11073  003FF8  360C               	rlcf	(___awdiv@quotient+1)^0,f,c
 11074  003FFA  5007               	movf	___awdiv@divisor^0,w,c
 11075  003FFC  5C05               	subwf	___awdiv@dividend^0,w,c
 11076  003FFE  5008               	movf	(___awdiv@divisor+1)^0,w,c
 11077  004000  5806               	subwfb	(___awdiv@dividend+1)^0,w,c
 11078  004002  A0D8               	btfss	status,0,c
 11079  004004  EF06  F020         	goto	u8091
 11080  004008  EF08  F020         	goto	u8090
 11081  00400C                     u8091:
 11082  00400C  EF0D  F020         	goto	l8000
 11083  004010                     u8090:
 11084  004010  5007               	movf	___awdiv@divisor^0,w,c
 11085  004012  5E05               	subwf	___awdiv@dividend^0,f,c
 11086  004014  5008               	movf	(___awdiv@divisor+1)^0,w,c
 11087  004016  5A06               	subwfb	(___awdiv@dividend+1)^0,f,c
 11088  004018  800B               	bsf	___awdiv@quotient^0,0,c
 11089  00401A                     l8000:
 11090  00401A  90D8               	bcf	status,0,c
 11091  00401C  3208               	rrcf	(___awdiv@divisor+1)^0,f,c
 11092  00401E  3207               	rrcf	___awdiv@divisor^0,f,c
 11093  004020  2E09               	decfsz	___awdiv@counter^0,f,c
 11094  004022  EFFA  F01F         	goto	l7992
 11095  004026                     l8004:
 11096  004026  500A               	movf	___awdiv@sign^0,w,c
 11097  004028  B4D8               	btfsc	status,2,c
 11098  00402A  EF19  F020         	goto	u8101
 11099  00402E  EF1B  F020         	goto	u8100
 11100  004032                     u8101:
 11101  004032  EF1F  F020         	goto	l8008
 11102  004036                     u8100:
 11103  004036  6C0B               	negf	___awdiv@quotient^0,c
 11104  004038  1E0C               	comf	(___awdiv@quotient+1)^0,f,c
 11105  00403A  B0D8               	btfsc	status,0,c
 11106  00403C  2A0C               	incf	(___awdiv@quotient+1)^0,f,c
 11107  00403E                     l8008:
 11108  00403E  C00B  F005         	movff	___awdiv@quotient,?___awdiv
 11109  004042  C00C  F006         	movff	___awdiv@quotient+1,?___awdiv+1
 11110  004046  0012               	return		;funcret
 11111  004048                     __end_of___awdiv:
 11112                           	opt callstack 0
 11113                           
 11114 ;; *************** function _ModbusRx *****************
 11115 ;; Defined at:
 11116 ;;		line 642 in file "Modbus.c"
 11117 ;; Parameters:    Size  Location     Type
 11118 ;;		None
 11119 ;; Auto vars:     Size  Location     Type
 11120 ;;		None
 11121 ;; Return value:  Size  Location     Type
 11122 ;;                  1    wreg      _Bool 
 11123 ;; Registers used:
 11124 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11125 ;; Tracked objects:
 11126 ;;		On entry : 0/0
 11127 ;;		On exit  : 0/0
 11128 ;;		Unchanged: 0/0
 11129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11132 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11133 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11134 ;;Total ram usage:        1 bytes
 11135 ;; Hardware stack levels used:    1
 11136 ;; Hardware stack levels required when called:   13
 11137 ;; This function calls:
 11138 ;;		_AddRxBuffToModBus
 11139 ;;		_ClearModbusData
 11140 ;;		_ClearRxBuff
 11141 ;;		_EUSART1_Read
 11142 ;;		_EUSART1_is_rx_ready
 11143 ;;		_RXMode
 11144 ;;		_checkCRC
 11145 ;;		_printf
 11146 ;; This function is called by:
 11147 ;;		_main
 11148 ;; This function uses a non-reentrant model
 11149 ;;
 11150                           
 11151                           	psect	text41
 11152  0035DC                     __ptext41:
 11153                           	opt callstack 0
 11154  0035DC                     _ModbusRx:
 11155                           	opt callstack 17
 11156  0035DC                     
 11157                           ;Modbus.c: 643:     RXMode();
 11158  0035DC  EC82  F029         	call	_RXMode	;wreg free
 11159  0035E0                     
 11160                           ;Modbus.c: 644:     if(EUSART1_is_rx_ready()){
 11161  0035E0  EC13  F029         	call	_EUSART1_is_rx_ready	;wreg free
 11162  0035E4  0900               	iorlw	0
 11163  0035E6  B4D8               	btfsc	status,2,c
 11164  0035E8  EFF8  F01A         	goto	u8121
 11165  0035EC  EFFA  F01A         	goto	u8120
 11166  0035F0                     u8121:
 11167  0035F0  EFA2  F01B         	goto	l8092
 11168  0035F4                     u8120:
 11169  0035F4                     
 11170                           ;Modbus.c: 645:         if(Debug ==1){
 11171  0035F4  0100               	movlb	0	; () banked
 11172  0035F6  05F5               	decf	_Debug& (0+255),w,b
 11173  0035F8  A4D8               	btfss	status,2,c
 11174  0035FA  EF01  F01B         	goto	u8131
 11175  0035FE  EF03  F01B         	goto	u8130
 11176  003602                     u8131:
 11177  003602  EF09  F01B         	goto	l8046
 11178  003606                     u8130:
 11179  003606                     
 11180                           ; BSR set to: 0
 11181                           ;Modbus.c: 646:             printf("\r\nSomething in ESUART1 \r\n");
 11182  003606  0EA6               	movlw	low STR_82
 11183  003608  6F7D               	movwf	printf@fmt& (0+255),b
 11184  00360A  0EFD               	movlw	high STR_82
 11185  00360C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 11186  00360E  EC8A  F028         	call	_printf	;wreg free
 11187  003612                     l8046:
 11188                           
 11189                           ;Modbus.c: 649:             if(EUSART1_is_rx_ready()){
 11190  003612  EC13  F029         	call	_EUSART1_is_rx_ready	;wreg free
 11191  003616  0900               	iorlw	0
 11192  003618  B4D8               	btfsc	status,2,c
 11193  00361A  EF11  F01B         	goto	u8141
 11194  00361E  EF13  F01B         	goto	u8140
 11195  003622                     u8141:
 11196  003622  EF30  F01B         	goto	l8058
 11197  003626                     u8140:
 11198  003626  EF23  F01B         	goto	l8054
 11199  00362A                     l8050:
 11200                           
 11201                           ;Modbus.c: 653:                     rxData[ByteNum] = EUSART1_Read();
 11202  00362A  ECBE  F025         	call	_EUSART1_Read	;wreg free
 11203  00362E  6E55               	movwf	??_ModbusRx^0,c
 11204  003630  0E00               	movlw	low _rxData
 11205  003632  0100               	movlb	0	; () banked
 11206  003634  25D9               	addwf	_ByteNum& (0+255),w,b
 11207  003636  6ED9               	movwf	fsr2l,c
 11208  003638  0E05               	movlw	high _rxData
 11209  00363A  21DA               	addwfc	(_ByteNum+1)& (0+255),w,b
 11210  00363C  6EDA               	movwf	fsr2h,c
 11211  00363E  C055  FFDF         	movff	??_ModbusRx,indf2
 11212  003642                     
 11213                           ; BSR set to: 0
 11214                           ;Modbus.c: 654:                     ByteNum++;
 11215  003642  4BD9               	infsnz	_ByteNum& (0+255),f,b
 11216  003644  2BDA               	incf	(_ByteNum+1)& (0+255),f,b
 11217  003646                     l8054:
 11218                           
 11219                           ;Modbus.c: 651:                 while(EUSART1_is_rx_ready()){
 11220  003646  EC13  F029         	call	_EUSART1_is_rx_ready	;wreg free
 11221  00364A  0900               	iorlw	0
 11222  00364C  A4D8               	btfss	status,2,c
 11223  00364E  EF2B  F01B         	goto	u8151
 11224  003652  EF2D  F01B         	goto	u8150
 11225  003656                     u8151:
 11226  003656  EF15  F01B         	goto	l8050
 11227  00365A                     u8150:
 11228  00365A                     
 11229                           ;Modbus.c: 657:                 RXStat = 1;
 11230  00365A  0E01               	movlw	1
 11231  00365C  0100               	movlb	0	; () banked
 11232  00365E  6FDE               	movwf	_RXStat& (0+255),b
 11233  003660                     l8058:
 11234                           
 11235                           ;Modbus.c: 660:             if(RXStat ==1){
 11236  003660  0100               	movlb	0	; () banked
 11237  003662  05DE               	decf	_RXStat& (0+255),w,b
 11238  003664  A4D8               	btfss	status,2,c
 11239  003666  EF37  F01B         	goto	u8161
 11240  00366A  EF39  F01B         	goto	u8160
 11241  00366E                     u8161:
 11242  00366E  EF55  F01B         	goto	l8070
 11243  003672                     u8160:
 11244  003672                     
 11245                           ; BSR set to: 0
 11246                           ;Modbus.c: 663:                 AddRxBuffToModBus();
 11247  003672  EC57  F022         	call	_AddRxBuffToModBus	;wreg free
 11248  003676                     
 11249                           ;Modbus.c: 664:                 ClearRxBuff();
 11250  003676  EC89  F026         	call	_ClearRxBuff	;wreg free
 11251  00367A                     
 11252                           ;Modbus.c: 665:                 RXStat = 0;
 11253  00367A  0E00               	movlw	0
 11254  00367C  0100               	movlb	0	; () banked
 11255  00367E  6FDE               	movwf	_RXStat& (0+255),b
 11256  003680                     
 11257                           ; BSR set to: 0
 11258                           ;Modbus.c: 666:                 ByteNum = 0;
 11259  003680  0E00               	movlw	0
 11260  003682  6FDA               	movwf	(_ByteNum+1)& (0+255),b
 11261  003684  0E00               	movlw	0
 11262  003686  6FD9               	movwf	_ByteNum& (0+255),b
 11263  003688                     
 11264                           ; BSR set to: 0
 11265  003688  B883               	btfsc	131,4,c	;volatile
 11266  00368A  EF49  F01B         	goto	u8171
 11267  00368E  EF4C  F01B         	goto	u8170
 11268  003692                     u8171:
 11269  003692  0E01               	movlw	1
 11270  003694  EF4D  F01B         	goto	u8176
 11271  003698                     u8170:
 11272  003698  0E00               	movlw	0
 11273  00369A                     u8176:
 11274  00369A  0AFF               	xorlw	255
 11275  00369C  6E55               	movwf	??_ModbusRx^0,c
 11276  00369E  3A55               	swapf	??_ModbusRx^0,f,c
 11277  0036A0  5083               	movf	131,w,c	;volatile
 11278  0036A2  1855               	xorwf	??_ModbusRx^0,w,c
 11279  0036A4  0BEF               	andlw	-17
 11280  0036A6  1855               	xorwf	??_ModbusRx^0,w,c
 11281  0036A8  6E83               	movwf	131,c	;volatile
 11282  0036AA                     l8070:
 11283                           
 11284                           ; BSR set to: 0
 11285                           ;Modbus.c: 671:         }while(ModDataCnt != ExpectedBytes);
 11286  0036AA  51EF               	movf	_ExpectedBytes& (0+255),w,b
 11287  0036AC  19DB               	xorwf	_ModDataCnt& (0+255),w,b
 11288  0036AE  E107               	bnz	u8181
 11289  0036B0  51F0               	movf	(_ExpectedBytes+1)& (0+255),w,b
 11290  0036B2  19DC               	xorwf	(_ModDataCnt+1)& (0+255),w,b
 11291  0036B4  A4D8               	btfss	status,2,c
 11292  0036B6  EF5F  F01B         	goto	u8181
 11293  0036BA  EF61  F01B         	goto	u8180
 11294  0036BE                     u8181:
 11295  0036BE  EF09  F01B         	goto	l8046
 11296  0036C2                     u8180:
 11297  0036C2                     
 11298                           ; BSR set to: 0
 11299  0036C2  BA83               	btfsc	131,5,c	;volatile
 11300  0036C4  EF66  F01B         	goto	u8191
 11301  0036C8  EF69  F01B         	goto	u8190
 11302  0036CC                     u8191:
 11303  0036CC  0E01               	movlw	1
 11304  0036CE  EF6A  F01B         	goto	u8196
 11305  0036D2                     u8190:
 11306  0036D2  0E00               	movlw	0
 11307  0036D4                     u8196:
 11308  0036D4  0AFF               	xorlw	255
 11309  0036D6  6E55               	movwf	??_ModbusRx^0,c
 11310  0036D8  3A55               	swapf	??_ModbusRx^0,f,c
 11311  0036DA  4655               	rlncf	??_ModbusRx^0,f,c
 11312  0036DC  5083               	movf	131,w,c	;volatile
 11313  0036DE  1855               	xorwf	??_ModbusRx^0,w,c
 11314  0036E0  0BDF               	andlw	-33
 11315  0036E2  1855               	xorwf	??_ModbusRx^0,w,c
 11316  0036E4  6E83               	movwf	131,c	;volatile
 11317  0036E6                     
 11318                           ; BSR set to: 0
 11319                           ;Modbus.c: 676:         if(checkCRC() == 1)
 11320  0036E6  EC61  F01C         	call	_checkCRC	;wreg free
 11321  0036EA  06E8               	decf	wreg,f,c
 11322  0036EC  A4D8               	btfss	status,2,c
 11323  0036EE  EF7B  F01B         	goto	u8201
 11324  0036F2  EF7D  F01B         	goto	u8200
 11325  0036F6                     u8201:
 11326  0036F6  EFA5  F01B         	goto	l8096
 11327  0036FA                     u8200:
 11328  0036FA  0E05               	movlw	5
 11329  0036FC  0101               	movlb	1	; () banked
 11330  0036FE  1900               	xorwf	_ModbusData& (0+255),w,b
 11331  003700  B4D8               	btfsc	status,2,c
 11332  003702  EF85  F01B         	goto	u8211
 11333  003706  EF87  F01B         	goto	u8210
 11334  00370A                     u8211:
 11335  00370A  EF8F  F01B         	goto	l8080
 11336  00370E                     u8210:
 11337  00370E                     
 11338                           ; BSR set to: 1
 11339  00370E  5100               	movf	_ModbusData& (0+255),w,b
 11340  003710  A4D8               	btfss	status,2,c
 11341  003712  EF8D  F01B         	goto	u8221
 11342  003716  EF8F  F01B         	goto	u8220
 11343  00371A                     u8221:
 11344  00371A  EF99  F01B         	goto	l8088
 11345  00371E                     u8220:
 11346  00371E                     l8080:
 11347                           
 11348                           ; BSR set to: 1
 11349                           ;Modbus.c: 679:                 printf("\r\nReceived Modbus CRC Good and Address IS for 
      +                          me.\r\n");
 11350  00371E  0E90               	movlw	low STR_83
 11351  003720  0100               	movlb	0	; () banked
 11352  003722  6F7D               	movwf	printf@fmt& (0+255),b
 11353  003724  0EF8               	movlw	high STR_83
 11354  003726  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 11355  003728  EC8A  F028         	call	_printf	;wreg free
 11356  00372C                     
 11357                           ;Modbus.c: 680:                 return 1;
 11358  00372C  0E01               	movlw	1
 11359  00372E  EFAE  F01B         	goto	l1054
 11360  003732                     l8088:
 11361                           
 11362                           ; BSR set to: 1
 11363                           ;Modbus.c: 682:                 printf("\r\nReceived Modbus CRC Good but Address NOT for
      +                           me.\r\n");
 11364  003732  0EBA               	movlw	low STR_84
 11365  003734  0100               	movlb	0	; () banked
 11366  003736  6F7D               	movwf	printf@fmt& (0+255),b
 11367  003738  0EF6               	movlw	high STR_84
 11368  00373A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 11369  00373C  EC8A  F028         	call	_printf	;wreg free
 11370  003740                     
 11371                           ;Modbus.c: 683:                 ClearModbusData();
 11372  003740  EC63  F026         	call	_ClearModbusData	;wreg free
 11373  003744                     l8092:
 11374                           
 11375                           ;Modbus.c: 684:                 return 0;
 11376  003744  0E00               	movlw	0
 11377  003746  EFAE  F01B         	goto	l1054
 11378  00374A                     l8096:
 11379                           
 11380                           ;Modbus.c: 687:             printf("\r\nReceived Modbus CRC is bad.\r\n\n");
 11381  00374A  0E39               	movlw	low STR_85
 11382  00374C  0100               	movlb	0	; () banked
 11383  00374E  6F7D               	movwf	printf@fmt& (0+255),b
 11384  003750  0EFC               	movlw	high STR_85
 11385  003752  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 11386  003754  EC8A  F028         	call	_printf	;wreg free
 11387  003758  EFA2  F01B         	goto	l8092
 11388  00375C                     l1054:
 11389  00375C  0012               	return		;funcret
 11390  00375E                     __end_of_ModbusRx:
 11391                           	opt callstack 0
 11392                           
 11393 ;; *************** function _checkCRC *****************
 11394 ;; Defined at:
 11395 ;;		line 144 in file "Modbus.c"
 11396 ;; Parameters:    Size  Location     Type
 11397 ;;		None
 11398 ;; Auto vars:     Size  Location     Type
 11399 ;;  i               2   17[COMRAM] int 
 11400 ;;  crc             2   15[COMRAM] unsigned int 
 11401 ;;  j               2   13[COMRAM] int 
 11402 ;;  crcLow          2   11[COMRAM] unsigned int 
 11403 ;;  crcHigh         2    9[COMRAM] unsigned int 
 11404 ;; Return value:  Size  Location     Type
 11405 ;;                  1    wreg      _Bool 
 11406 ;; Registers used:
 11407 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11408 ;; Tracked objects:
 11409 ;;		On entry : 0/0
 11410 ;;		On exit  : 0/0
 11411 ;;		Unchanged: 0/0
 11412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11414 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11415 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11416 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11417 ;;Total ram usage:       15 bytes
 11418 ;; Hardware stack levels used:    1
 11419 ;; Hardware stack levels required when called:    4
 11420 ;; This function calls:
 11421 ;;		Nothing
 11422 ;; This function is called by:
 11423 ;;		_ModbusRx
 11424 ;; This function uses a non-reentrant model
 11425 ;;
 11426                           
 11427                           	psect	text42
 11428  0038C2                     __ptext42:
 11429                           	opt callstack 0
 11430  0038C2                     _checkCRC:
 11431                           	opt callstack 25
 11432  0038C2                     
 11433                           ;Modbus.c: 145:   unsigned int crc = 0xFFFF;
 11434  0038C2  6810               	setf	checkCRC@crc^0,c
 11435  0038C4  6811               	setf	(checkCRC@crc+1)^0,c
 11436  0038C6                     
 11437                           ;Modbus.c: 147:   unsigned int crcLow = 0;
 11438  0038C6  0E00               	movlw	0
 11439  0038C8  6E0D               	movwf	(checkCRC@crcLow+1)^0,c
 11440  0038CA  0E00               	movlw	0
 11441  0038CC  6E0C               	movwf	checkCRC@crcLow^0,c
 11442                           
 11443                           ;Modbus.c: 148:   int i,j = 0;
 11444  0038CE  0E00               	movlw	0
 11445  0038D0  6E0F               	movwf	(checkCRC@j+1)^0,c
 11446  0038D2  0E00               	movlw	0
 11447  0038D4  6E0E               	movwf	checkCRC@j^0,c
 11448                           
 11449                           ;Modbus.c: 150:     for(i=0;i<ModDataCnt-2;i++){
 11450  0038D6  0E00               	movlw	0
 11451  0038D8  6E13               	movwf	(checkCRC@i+1)^0,c
 11452  0038DA  0E00               	movlw	0
 11453  0038DC  6E12               	movwf	checkCRC@i^0,c
 11454  0038DE  EFA0  F01C         	goto	l7890
 11455  0038E2                     l7872:
 11456                           
 11457                           ;Modbus.c: 151:       crc ^= ModbusData[i];
 11458  0038E2  0E00               	movlw	low _ModbusData
 11459  0038E4  2412               	addwf	checkCRC@i^0,w,c
 11460  0038E6  6ED9               	movwf	fsr2l,c
 11461  0038E8  0E01               	movlw	high _ModbusData
 11462  0038EA  2013               	addwfc	(checkCRC@i+1)^0,w,c
 11463  0038EC  6EDA               	movwf	fsr2h,c
 11464  0038EE  50DF               	movf	indf2,w,c
 11465  0038F0  6E05               	movwf	??_checkCRC^0,c
 11466  0038F2  5005               	movf	??_checkCRC^0,w,c
 11467  0038F4  1A10               	xorwf	checkCRC@crc^0,f,c
 11468  0038F6                     
 11469                           ;Modbus.c: 152:       for(j=8; j!=0; j--){
 11470  0038F6  0E00               	movlw	0
 11471  0038F8  6E0F               	movwf	(checkCRC@j+1)^0,c
 11472  0038FA  0E08               	movlw	8
 11473  0038FC  6E0E               	movwf	checkCRC@j^0,c
 11474  0038FE                     l899:
 11475                           
 11476                           ;Modbus.c: 153:         if((crc & 0x0001) != 0){
 11477  0038FE  A010               	btfss	checkCRC@crc^0,0,c
 11478  003900  EF84  F01C         	goto	u7921
 11479  003904  EF86  F01C         	goto	u7920
 11480  003908                     u7921:
 11481  003908  EF8F  F01C         	goto	l7884
 11482  00390C                     u7920:
 11483  00390C                     
 11484                           ;Modbus.c: 154:           crc >>= 1;
 11485  00390C  90D8               	bcf	status,0,c
 11486  00390E  3211               	rrcf	(checkCRC@crc+1)^0,f,c
 11487  003910  3210               	rrcf	checkCRC@crc^0,f,c
 11488  003912                     
 11489                           ;Modbus.c: 155:           crc ^= 0xA001;
 11490  003912  0E01               	movlw	1
 11491  003914  1A10               	xorwf	checkCRC@crc^0,f,c
 11492  003916  0EA0               	movlw	160
 11493  003918  1A11               	xorwf	(checkCRC@crc+1)^0,f,c
 11494                           
 11495                           ;Modbus.c: 156:         }
 11496  00391A  EF92  F01C         	goto	l902
 11497  00391E                     l7884:
 11498                           
 11499                           ;Modbus.c: 158:           crc >>= 1;
 11500  00391E  90D8               	bcf	status,0,c
 11501  003920  3211               	rrcf	(checkCRC@crc+1)^0,f,c
 11502  003922  3210               	rrcf	checkCRC@crc^0,f,c
 11503  003924                     l902:
 11504                           
 11505                           ;Modbus.c: 160:       }
 11506  003924  060E               	decf	checkCRC@j^0,f,c
 11507  003926  A0D8               	btfss	status,0,c
 11508  003928  060F               	decf	(checkCRC@j+1)^0,f,c
 11509  00392A  500E               	movf	checkCRC@j^0,w,c
 11510  00392C  100F               	iorwf	(checkCRC@j+1)^0,w,c
 11511  00392E  A4D8               	btfss	status,2,c
 11512  003930  EF9C  F01C         	goto	u7931
 11513  003934  EF9E  F01C         	goto	u7930
 11514  003938                     u7931:
 11515  003938  EF7F  F01C         	goto	l899
 11516  00393C                     u7930:
 11517  00393C                     
 11518                           ;Modbus.c: 161:     }
 11519  00393C  4A12               	infsnz	checkCRC@i^0,f,c
 11520  00393E  2A13               	incf	(checkCRC@i+1)^0,f,c
 11521  003940                     l7890:
 11522  003940  0EFE               	movlw	254
 11523  003942  6E05               	movwf	??_checkCRC^0,c
 11524  003944  0EFF               	movlw	255
 11525  003946  6E06               	movwf	(??_checkCRC+1)^0,c
 11526  003948  C0DB  F007         	movff	_ModDataCnt,??_checkCRC+2
 11527  00394C  C0DC  F008         	movff	_ModDataCnt+1,??_checkCRC+3
 11528  003950  5005               	movf	??_checkCRC^0,w,c
 11529  003952  2607               	addwf	(??_checkCRC+2)^0,f,c
 11530  003954  5006               	movf	(??_checkCRC+1)^0,w,c
 11531  003956  2208               	addwfc	(??_checkCRC+3)^0,f,c
 11532  003958  5007               	movf	(??_checkCRC+2)^0,w,c
 11533  00395A  5C12               	subwf	checkCRC@i^0,w,c
 11534  00395C  5013               	movf	(checkCRC@i+1)^0,w,c
 11535  00395E  0A80               	xorlw	128
 11536  003960  6E09               	movwf	(??_checkCRC+4)^0,c
 11537  003962  5008               	movf	(??_checkCRC+3)^0,w,c
 11538  003964  0A80               	xorlw	128
 11539  003966  5809               	subwfb	(??_checkCRC+4)^0,w,c
 11540  003968  A0D8               	btfss	status,0,c
 11541  00396A  EFB9  F01C         	goto	u7941
 11542  00396E  EFBB  F01C         	goto	u7940
 11543  003972                     u7941:
 11544  003972  EF71  F01C         	goto	l7872
 11545  003976                     u7940:
 11546  003976                     
 11547                           ;Modbus.c: 163:   crcHigh = (crc & 0x00FF);
 11548  003976  5010               	movf	checkCRC@crc^0,w,c
 11549  003978  6E0A               	movwf	checkCRC@crcHigh^0,c
 11550  00397A  6A0B               	clrf	(checkCRC@crcHigh+1)^0,c
 11551                           
 11552                           ;Modbus.c: 164:   crcLow = (crc & 0xFF00) >>8;
 11553  00397C  C010  F005         	movff	checkCRC@crc,??_checkCRC
 11554  003980  C011  F006         	movff	checkCRC@crc+1,??_checkCRC+1
 11555  003984  C006  F005         	movff	??_checkCRC+1,??_checkCRC
 11556  003988  6A06               	clrf	(??_checkCRC+1)^0,c
 11557  00398A  5005               	movf	??_checkCRC^0,w,c
 11558  00398C  6E0C               	movwf	checkCRC@crcLow^0,c
 11559  00398E  6A0D               	clrf	(checkCRC@crcLow+1)^0,c
 11560  003990                     
 11561                           ;Modbus.c: 171:   if((crcHigh == ModbusData[i])&&(crcLow == ModbusData[i+1]))
 11562  003990  0E00               	movlw	low _ModbusData
 11563  003992  2412               	addwf	checkCRC@i^0,w,c
 11564  003994  6ED9               	movwf	fsr2l,c
 11565  003996  0E01               	movlw	high _ModbusData
 11566  003998  2013               	addwfc	(checkCRC@i+1)^0,w,c
 11567  00399A  6EDA               	movwf	fsr2h,c
 11568  00399C  50DF               	movf	indf2,w,c
 11569  00399E  6E05               	movwf	??_checkCRC^0,c
 11570  0039A0  6A06               	clrf	(??_checkCRC+1)^0,c
 11571  0039A2  500A               	movf	checkCRC@crcHigh^0,w,c
 11572  0039A4  1805               	xorwf	??_checkCRC^0,w,c
 11573  0039A6  E107               	bnz	u7951
 11574  0039A8  500B               	movf	(checkCRC@crcHigh+1)^0,w,c
 11575  0039AA  1806               	xorwf	(??_checkCRC+1)^0,w,c
 11576  0039AC  A4D8               	btfss	status,2,c
 11577  0039AE  EFDB  F01C         	goto	u7951
 11578  0039B2  EFDD  F01C         	goto	u7950
 11579  0039B6                     u7951:
 11580  0039B6  EFF5  F01C         	goto	l7904
 11581  0039BA                     u7950:
 11582  0039BA  0E01               	movlw	low (_ModbusData+1)
 11583  0039BC  2412               	addwf	checkCRC@i^0,w,c
 11584  0039BE  6ED9               	movwf	fsr2l,c
 11585  0039C0  0E01               	movlw	high (_ModbusData+1)
 11586  0039C2  2013               	addwfc	(checkCRC@i+1)^0,w,c
 11587  0039C4  6EDA               	movwf	fsr2h,c
 11588  0039C6  50DF               	movf	indf2,w,c
 11589  0039C8  6E05               	movwf	??_checkCRC^0,c
 11590  0039CA  6A06               	clrf	(??_checkCRC+1)^0,c
 11591  0039CC  500C               	movf	checkCRC@crcLow^0,w,c
 11592  0039CE  1805               	xorwf	??_checkCRC^0,w,c
 11593  0039D0  E107               	bnz	u7961
 11594  0039D2  500D               	movf	(checkCRC@crcLow+1)^0,w,c
 11595  0039D4  1806               	xorwf	(??_checkCRC+1)^0,w,c
 11596  0039D6  A4D8               	btfss	status,2,c
 11597  0039D8  EFF0  F01C         	goto	u7961
 11598  0039DC  EFF2  F01C         	goto	u7960
 11599  0039E0                     u7961:
 11600  0039E0  EFF5  F01C         	goto	l7904
 11601  0039E4                     u7960:
 11602  0039E4                     
 11603                           ;Modbus.c: 172:   {;Modbus.c: 173:     return 1;
 11604  0039E4  0E01               	movlw	1
 11605  0039E6  EFF6  F01C         	goto	l905
 11606  0039EA                     l7904:
 11607                           
 11608                           ;Modbus.c: 176:     return 0;
 11609  0039EA  0E00               	movlw	0
 11610  0039EC                     l905:
 11611  0039EC  0012               	return		;funcret
 11612  0039EE                     __end_of_checkCRC:
 11613                           	opt callstack 0
 11614                           
 11615 ;; *************** function _RXMode *****************
 11616 ;; Defined at:
 11617 ;;		line 55 in file "Modbus.c"
 11618 ;; Parameters:    Size  Location     Type
 11619 ;;		None
 11620 ;; Auto vars:     Size  Location     Type
 11621 ;;		None
 11622 ;; Return value:  Size  Location     Type
 11623 ;;                  1    wreg      void 
 11624 ;; Registers used:
 11625 ;;		None
 11626 ;; Tracked objects:
 11627 ;;		On entry : 0/0
 11628 ;;		On exit  : 0/0
 11629 ;;		Unchanged: 0/0
 11630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11635 ;;Total ram usage:        0 bytes
 11636 ;; Hardware stack levels used:    1
 11637 ;; Hardware stack levels required when called:    4
 11638 ;; This function calls:
 11639 ;;		Nothing
 11640 ;; This function is called by:
 11641 ;;		_main
 11642 ;;		_ModbusRx
 11643 ;; This function uses a non-reentrant model
 11644 ;;
 11645                           
 11646                           	psect	text43
 11647  005304                     __ptext43:
 11648                           	opt callstack 0
 11649  005304                     _RXMode:
 11650                           	opt callstack 26
 11651  005304  9086               	bcf	134,0,c	;volatile
 11652  005306  9683               	bcf	131,3,c	;volatile
 11653  005308  0012               	return		;funcret
 11654  00530A                     __end_of_RXMode:
 11655                           	opt callstack 0
 11656                           
 11657 ;; *************** function _EUSART1_is_rx_ready *****************
 11658 ;; Defined at:
 11659 ;;		line 141 in file "mcc_generated_files/eusart1.c"
 11660 ;; Parameters:    Size  Location     Type
 11661 ;;		None
 11662 ;; Auto vars:     Size  Location     Type
 11663 ;;		None
 11664 ;; Return value:  Size  Location     Type
 11665 ;;                  1    wreg      _Bool 
 11666 ;; Registers used:
 11667 ;;		wreg, status,2
 11668 ;; Tracked objects:
 11669 ;;		On entry : 0/0
 11670 ;;		On exit  : 0/0
 11671 ;;		Unchanged: 0/0
 11672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11677 ;;Total ram usage:        0 bytes
 11678 ;; Hardware stack levels used:    1
 11679 ;; Hardware stack levels required when called:    4
 11680 ;; This function calls:
 11681 ;;		Nothing
 11682 ;; This function is called by:
 11683 ;;		_ModbusRx
 11684 ;; This function uses a non-reentrant model
 11685 ;;
 11686                           
 11687                           	psect	text44
 11688  005226                     __ptext44:
 11689                           	opt callstack 0
 11690  005226                     _EUSART1_is_rx_ready:
 11691                           	opt callstack 25
 11692  005226                     
 11693                           ;mcc_generated_files/eusart1.c: 143:     return (eusart1RxCount ? 1 : 0);
 11694  005226  0100               	movlb	0	; () banked
 11695  005228  51E0               	movf	_eusart1RxCount& (0+255),w,b	;volatile
 11696  00522A  A4D8               	btfss	status,2,c
 11697  00522C  EF1A  F029         	goto	u7761
 11698  005230  EF1D  F029         	goto	u7760
 11699  005234                     u7761:
 11700  005234  0E01               	movlw	1
 11701  005236  EF1E  F029         	goto	u7770
 11702  00523A                     u7760:
 11703  00523A  0E00               	movlw	0
 11704  00523C                     u7770:
 11705  00523C                     
 11706                           ; BSR set to: 0
 11707  00523C  0012               	return		;funcret
 11708  00523E                     __end_of_EUSART1_is_rx_ready:
 11709                           	opt callstack 0
 11710                           
 11711 ;; *************** function _EUSART1_Read *****************
 11712 ;; Defined at:
 11713 ;;		line 155 in file "mcc_generated_files/eusart1.c"
 11714 ;; Parameters:    Size  Location     Type
 11715 ;;		None
 11716 ;; Auto vars:     Size  Location     Type
 11717 ;;  readValue       1    4[COMRAM] unsigned char 
 11718 ;; Return value:  Size  Location     Type
 11719 ;;                  1    wreg      unsigned char 
 11720 ;; Registers used:
 11721 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11722 ;; Tracked objects:
 11723 ;;		On entry : 0/0
 11724 ;;		On exit  : 0/0
 11725 ;;		Unchanged: 0/0
 11726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11728 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11730 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11731 ;;Total ram usage:        1 bytes
 11732 ;; Hardware stack levels used:    1
 11733 ;; Hardware stack levels required when called:    4
 11734 ;; This function calls:
 11735 ;;		Nothing
 11736 ;; This function is called by:
 11737 ;;		_ModbusRx
 11738 ;; This function uses a non-reentrant model
 11739 ;;
 11740                           
 11741                           	psect	text45
 11742  004B7C                     __ptext45:
 11743                           	opt callstack 0
 11744  004B7C                     _EUSART1_Read:
 11745                           	opt callstack 25
 11746  004B7C                     l7716:
 11747                           
 11748                           ;mcc_generated_files/eusart1.c: 159:     while(0 == eusart1RxCount)
 11749  004B7C  0100               	movlb	0	; () banked
 11750  004B7E  51E0               	movf	_eusart1RxCount& (0+255),w,b	;volatile
 11751  004B80  B4D8               	btfsc	status,2,c
 11752  004B82  EFC5  F025         	goto	u7781
 11753  004B86  EFC7  F025         	goto	u7780
 11754  004B8A                     u7781:
 11755  004B8A  EFBE  F025         	goto	l7716
 11756  004B8E                     u7780:
 11757  004B8E                     
 11758                           ; BSR set to: 0
 11759                           ;mcc_generated_files/eusart1.c: 163:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
 11760  004B8E  0E00               	movlw	low _eusart1RxStatusBuffer
 11761  004B90  25E1               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
 11762  004B92  6ED9               	movwf	fsr2l,c
 11763  004B94  6ADA               	clrf	fsr2h,c
 11764  004B96  0E03               	movlw	high _eusart1RxStatusBuffer
 11765  004B98  22DA               	addwfc	fsr2h,f,c
 11766  004B9A  50DF               	movf	indf2,w,c
 11767  004B9C  6FDF               	movwf	_eusart1RxLastError& (0+255),b	;volatile
 11768                           
 11769                           ;mcc_generated_files/eusart1.c: 165:     readValue = eusart1RxBuffer[eusart1RxTail++];
 11770  004B9E  0E00               	movlw	low _eusart1RxBuffer
 11771  004BA0  25E1               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
 11772  004BA2  6ED9               	movwf	fsr2l,c
 11773  004BA4  6ADA               	clrf	fsr2h,c
 11774  004BA6  0E04               	movlw	high _eusart1RxBuffer
 11775  004BA8  22DA               	addwfc	fsr2h,f,c
 11776  004BAA  50DF               	movf	indf2,w,c
 11777  004BAC  6E05               	movwf	EUSART1_Read@readValue^0,c
 11778  004BAE                     
 11779                           ; BSR set to: 0
 11780  004BAE  2BE1               	incf	_eusart1RxTail& (0+255),f,b	;volatile
 11781  004BB0                     
 11782                           ; BSR set to: 0
 11783                           ;mcc_generated_files/eusart1.c: 166:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
 11784  004BB0  0E63               	movlw	99
 11785  004BB2  65E1               	cpfsgt	_eusart1RxTail& (0+255),b	;volatile
 11786  004BB4  EFDE  F025         	goto	u7791
 11787  004BB8  EFE0  F025         	goto	u7790
 11788  004BBC                     u7791:
 11789  004BBC  EFE2  F025         	goto	l7726
 11790  004BC0                     u7790:
 11791  004BC0                     
 11792                           ; BSR set to: 0
 11793                           ;mcc_generated_files/eusart1.c: 167:     {;mcc_generated_files/eusart1.c: 168:         e
      +                          usart1RxTail = 0;
 11794  004BC0  0E00               	movlw	0
 11795  004BC2  6FE1               	movwf	_eusart1RxTail& (0+255),b	;volatile
 11796  004BC4                     l7726:
 11797                           
 11798                           ; BSR set to: 0
 11799                           ;mcc_generated_files/eusart1.c: 170:     PIE3bits.RC1IE = 0;
 11800  004BC4  010E               	movlb	14	; () banked
 11801  004BC6  9BC5               	bcf	197,5,b	;volatile
 11802  004BC8                     
 11803                           ; BSR set to: 14
 11804                           ;mcc_generated_files/eusart1.c: 171:     eusart1RxCount--;
 11805  004BC8  0100               	movlb	0	; () banked
 11806  004BCA  07E0               	decf	_eusart1RxCount& (0+255),f,b	;volatile
 11807  004BCC                     
 11808                           ; BSR set to: 0
 11809                           ;mcc_generated_files/eusart1.c: 172:     PIE3bits.RC1IE = 1;
 11810  004BCC  010E               	movlb	14	; () banked
 11811  004BCE  8BC5               	bsf	197,5,b	;volatile
 11812  004BD0                     
 11813                           ; BSR set to: 14
 11814                           ;mcc_generated_files/eusart1.c: 174:     return readValue;
 11815  004BD0  5005               	movf	EUSART1_Read@readValue^0,w,c
 11816  004BD2                     
 11817                           ; BSR set to: 14
 11818  004BD2  0012               	return		;funcret
 11819  004BD4                     __end_of_EUSART1_Read:
 11820                           	opt callstack 0
 11821                           
 11822 ;; *************** function _ClearRxBuff *****************
 11823 ;; Defined at:
 11824 ;;		line 71 in file "Modbus.c"
 11825 ;; Parameters:    Size  Location     Type
 11826 ;;		None
 11827 ;; Auto vars:     Size  Location     Type
 11828 ;;  i               2    5[COMRAM] int 
 11829 ;; Return value:  Size  Location     Type
 11830 ;;                  1    wreg      void 
 11831 ;; Registers used:
 11832 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11833 ;; Tracked objects:
 11834 ;;		On entry : 0/0
 11835 ;;		On exit  : 0/0
 11836 ;;		Unchanged: 0/0
 11837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11839 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11840 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11841 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11842 ;;Total ram usage:        3 bytes
 11843 ;; Hardware stack levels used:    1
 11844 ;; Hardware stack levels required when called:    4
 11845 ;; This function calls:
 11846 ;;		Nothing
 11847 ;; This function is called by:
 11848 ;;		_main
 11849 ;;		_ModbusRx
 11850 ;; This function uses a non-reentrant model
 11851 ;;
 11852                           
 11853                           	psect	text46
 11854  004D12                     __ptext46:
 11855                           	opt callstack 0
 11856  004D12                     _ClearRxBuff:
 11857                           	opt callstack 25
 11858  004D12                     
 11859                           ;Modbus.c: 73:     int i = 0;
 11860  004D12  0E00               	movlw	0
 11861  004D14  6E07               	movwf	(ClearRxBuff@i+1)^0,c
 11862  004D16  0E00               	movlw	0
 11863  004D18  6E06               	movwf	ClearRxBuff@i^0,c
 11864                           
 11865                           ;Modbus.c: 74:     for(i=0; i<ByteNum; i++ ){
 11866  004D1A  0E00               	movlw	0
 11867  004D1C  6E07               	movwf	(ClearRxBuff@i+1)^0,c
 11868  004D1E  0E00               	movlw	0
 11869  004D20  6E06               	movwf	ClearRxBuff@i^0,c
 11870  004D22  EF9D  F026         	goto	l7806
 11871  004D26                     l7802:
 11872                           
 11873                           ; BSR set to: 0
 11874                           ;Modbus.c: 75:         rxData[i] = 0xFF;
 11875  004D26  0E00               	movlw	low _rxData
 11876  004D28  2406               	addwf	ClearRxBuff@i^0,w,c
 11877  004D2A  6ED9               	movwf	fsr2l,c
 11878  004D2C  0E05               	movlw	high _rxData
 11879  004D2E  2007               	addwfc	(ClearRxBuff@i+1)^0,w,c
 11880  004D30  6EDA               	movwf	fsr2h,c
 11881  004D32  0EFF               	movlw	255
 11882  004D34  6EDF               	movwf	indf2,c
 11883  004D36                     
 11884                           ; BSR set to: 0
 11885                           ;Modbus.c: 76:     }
 11886  004D36  4A06               	infsnz	ClearRxBuff@i^0,f,c
 11887  004D38  2A07               	incf	(ClearRxBuff@i+1)^0,f,c
 11888  004D3A                     l7806:
 11889  004D3A  0100               	movlb	0	; () banked
 11890  004D3C  51D9               	movf	_ByteNum& (0+255),w,b
 11891  004D3E  5C06               	subwf	ClearRxBuff@i^0,w,c
 11892  004D40  5007               	movf	(ClearRxBuff@i+1)^0,w,c
 11893  004D42  0A80               	xorlw	128
 11894  004D44  6E05               	movwf	??_ClearRxBuff^0,c
 11895  004D46  51DA               	movf	(_ByteNum+1)& (0+255),w,b
 11896  004D48  0A80               	xorlw	128
 11897  004D4A  5805               	subwfb	??_ClearRxBuff^0,w,c
 11898  004D4C  A0D8               	btfss	status,0,c
 11899  004D4E  EFAB  F026         	goto	u7871
 11900  004D52  EFAD  F026         	goto	u7870
 11901  004D56                     u7871:
 11902  004D56  EF93  F026         	goto	l7802
 11903  004D5A                     u7870:
 11904  004D5A                     
 11905                           ; BSR set to: 0
 11906  004D5A  0012               	return		;funcret
 11907  004D5C                     __end_of_ClearRxBuff:
 11908                           	opt callstack 0
 11909                           
 11910 ;; *************** function _ClearModbusData *****************
 11911 ;; Defined at:
 11912 ;;		line 61 in file "Modbus.c"
 11913 ;; Parameters:    Size  Location     Type
 11914 ;;		None
 11915 ;; Auto vars:     Size  Location     Type
 11916 ;;  i               2    4[COMRAM] int 
 11917 ;; Return value:  Size  Location     Type
 11918 ;;                  1    wreg      void 
 11919 ;; Registers used:
 11920 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11921 ;; Tracked objects:
 11922 ;;		On entry : 0/0
 11923 ;;		On exit  : 0/0
 11924 ;;		Unchanged: 0/0
 11925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11927 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11929 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11930 ;;Total ram usage:        2 bytes
 11931 ;; Hardware stack levels used:    1
 11932 ;; Hardware stack levels required when called:    4
 11933 ;; This function calls:
 11934 ;;		Nothing
 11935 ;; This function is called by:
 11936 ;;		_main
 11937 ;;		_ModbusRx
 11938 ;; This function uses a non-reentrant model
 11939 ;;
 11940                           
 11941                           	psect	text47
 11942  004CC6                     __ptext47:
 11943                           	opt callstack 0
 11944  004CC6                     _ClearModbusData:
 11945                           	opt callstack 25
 11946  004CC6                     
 11947                           ;Modbus.c: 62:     int i = 0;
 11948  004CC6  0E00               	movlw	0
 11949  004CC8  6E06               	movwf	(ClearModbusData@i+1)^0,c
 11950  004CCA  0E00               	movlw	0
 11951  004CCC  6E05               	movwf	ClearModbusData@i^0,c
 11952                           
 11953                           ;Modbus.c: 63:     for(i=0; i<99; i++ ){
 11954  004CCE  0E00               	movlw	0
 11955  004CD0  6E06               	movwf	(ClearModbusData@i+1)^0,c
 11956  004CD2  0E00               	movlw	0
 11957  004CD4  6E05               	movwf	ClearModbusData@i^0,c
 11958  004CD6                     l7840:
 11959                           
 11960                           ;Modbus.c: 64:         ModbusData[i] = 0xFF;
 11961  004CD6  0E00               	movlw	low _ModbusData
 11962  004CD8  2405               	addwf	ClearModbusData@i^0,w,c
 11963  004CDA  6ED9               	movwf	fsr2l,c
 11964  004CDC  0E01               	movlw	high _ModbusData
 11965  004CDE  2006               	addwfc	(ClearModbusData@i+1)^0,w,c
 11966  004CE0  6EDA               	movwf	fsr2h,c
 11967  004CE2  0EFF               	movlw	255
 11968  004CE4  6EDF               	movwf	indf2,c
 11969  004CE6                     
 11970                           ;Modbus.c: 65:     }
 11971  004CE6  4A05               	infsnz	ClearModbusData@i^0,f,c
 11972  004CE8  2A06               	incf	(ClearModbusData@i+1)^0,f,c
 11973  004CEA  BE06               	btfsc	(ClearModbusData@i+1)^0,7,c
 11974  004CEC  EF81  F026         	goto	u7881
 11975  004CF0  5006               	movf	(ClearModbusData@i+1)^0,w,c
 11976  004CF2  E109               	bnz	u7880
 11977  004CF4  0E63               	movlw	99
 11978  004CF6  5C05               	subwf	ClearModbusData@i^0,w,c
 11979  004CF8  A0D8               	btfss	status,0,c
 11980  004CFA  EF81  F026         	goto	u7881
 11981  004CFE  EF83  F026         	goto	u7880
 11982  004D02                     u7881:
 11983  004D02  EF6B  F026         	goto	l7840
 11984  004D06                     u7880:
 11985  004D06                     
 11986                           ;Modbus.c: 67:     ModDataCnt = 0;
 11987  004D06  0E00               	movlw	0
 11988  004D08  0100               	movlb	0	; () banked
 11989  004D0A  6FDC               	movwf	(_ModDataCnt+1)& (0+255),b
 11990  004D0C  0E00               	movlw	0
 11991  004D0E  6FDB               	movwf	_ModDataCnt& (0+255),b
 11992  004D10                     
 11993                           ; BSR set to: 0
 11994  004D10  0012               	return		;funcret
 11995  004D12                     __end_of_ClearModbusData:
 11996                           	opt callstack 0
 11997                           
 11998 ;; *************** function _AddRxBuffToModBus *****************
 11999 ;; Defined at:
 12000 ;;		line 80 in file "Modbus.c"
 12001 ;; Parameters:    Size  Location     Type
 12002 ;;		None
 12003 ;; Auto vars:     Size  Location     Type
 12004 ;;  i               2    5[COMRAM] int 
 12005 ;; Return value:  Size  Location     Type
 12006 ;;                  1    wreg      void 
 12007 ;; Registers used:
 12008 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 12009 ;; Tracked objects:
 12010 ;;		On entry : 0/0
 12011 ;;		On exit  : 0/0
 12012 ;;		Unchanged: 0/0
 12013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12015 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12016 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12017 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12018 ;;Total ram usage:        3 bytes
 12019 ;; Hardware stack levels used:    1
 12020 ;; Hardware stack levels required when called:    4
 12021 ;; This function calls:
 12022 ;;		Nothing
 12023 ;; This function is called by:
 12024 ;;		_ModbusRx
 12025 ;; This function uses a non-reentrant model
 12026 ;;
 12027                           
 12028                           	psect	text48
 12029  0044AE                     __ptext48:
 12030                           	opt callstack 0
 12031  0044AE                     _AddRxBuffToModBus:
 12032                           	opt callstack 25
 12033  0044AE                     
 12034                           ;Modbus.c: 81:     int i = 0;
 12035  0044AE  0E00               	movlw	0
 12036  0044B0  6E07               	movwf	(AddRxBuffToModBus@i+1)^0,c
 12037  0044B2  0E00               	movlw	0
 12038  0044B4  6E06               	movwf	AddRxBuffToModBus@i^0,c
 12039                           
 12040                           ;Modbus.c: 83:     for(i=0l; i<ByteNum; i++){
 12041  0044B6  0E00               	movlw	0
 12042  0044B8  6E07               	movwf	(AddRxBuffToModBus@i+1)^0,c
 12043  0044BA  0E00               	movlw	0
 12044  0044BC  6E06               	movwf	AddRxBuffToModBus@i^0,c
 12045  0044BE  EF73  F022         	goto	l7856
 12046  0044C2                     l7850:
 12047                           
 12048                           ; BSR set to: 0
 12049                           ;Modbus.c: 84:         ModbusData[ModDataCnt] = rxData[i];
 12050  0044C2  0E00               	movlw	low _rxData
 12051  0044C4  2406               	addwf	AddRxBuffToModBus@i^0,w,c
 12052  0044C6  6ED9               	movwf	fsr2l,c
 12053  0044C8  0E05               	movlw	high _rxData
 12054  0044CA  2007               	addwfc	(AddRxBuffToModBus@i+1)^0,w,c
 12055  0044CC  6EDA               	movwf	fsr2h,c
 12056  0044CE  0E00               	movlw	low _ModbusData
 12057  0044D0  25DB               	addwf	_ModDataCnt& (0+255),w,b
 12058  0044D2  6EE1               	movwf	fsr1l,c
 12059  0044D4  0E01               	movlw	high _ModbusData
 12060  0044D6  21DC               	addwfc	(_ModDataCnt+1)& (0+255),w,b
 12061  0044D8  6EE2               	movwf	fsr1h,c
 12062  0044DA  CFDF FFE7          	movff	indf2,indf1
 12063  0044DE                     
 12064                           ; BSR set to: 0
 12065                           ;Modbus.c: 85:         ModDataCnt++;
 12066  0044DE  4BDB               	infsnz	_ModDataCnt& (0+255),f,b
 12067  0044E0  2BDC               	incf	(_ModDataCnt+1)& (0+255),f,b
 12068  0044E2                     
 12069                           ; BSR set to: 0
 12070                           ;Modbus.c: 86:     }
 12071  0044E2  4A06               	infsnz	AddRxBuffToModBus@i^0,f,c
 12072  0044E4  2A07               	incf	(AddRxBuffToModBus@i+1)^0,f,c
 12073  0044E6                     l7856:
 12074  0044E6  0100               	movlb	0	; () banked
 12075  0044E8  51D9               	movf	_ByteNum& (0+255),w,b
 12076  0044EA  5C06               	subwf	AddRxBuffToModBus@i^0,w,c
 12077  0044EC  5007               	movf	(AddRxBuffToModBus@i+1)^0,w,c
 12078  0044EE  0A80               	xorlw	128
 12079  0044F0  6E05               	movwf	??_AddRxBuffToModBus^0,c
 12080  0044F2  51DA               	movf	(_ByteNum+1)& (0+255),w,b
 12081  0044F4  0A80               	xorlw	128
 12082  0044F6  5805               	subwfb	??_AddRxBuffToModBus^0,w,c
 12083  0044F8  A0D8               	btfss	status,0,c
 12084  0044FA  EF81  F022         	goto	u7891
 12085  0044FE  EF83  F022         	goto	u7890
 12086  004502                     u7891:
 12087  004502  EF61  F022         	goto	l7850
 12088  004506                     u7890:
 12089  004506                     
 12090                           ; BSR set to: 0
 12091                           ;Modbus.c: 88:     if(ModbusData[1] == 0x0F){
 12092  004506  0E0F               	movlw	15
 12093  004508  0101               	movlb	1	; () banked
 12094  00450A  1901               	xorwf	(_ModbusData+1)& (0+255),w,b
 12095  00450C  A4D8               	btfss	status,2,c
 12096  00450E  EF8B  F022         	goto	u7901
 12097  004512  EF8D  F022         	goto	u7900
 12098  004516                     u7901:
 12099  004516  EF96  F022         	goto	l7862
 12100  00451A                     u7900:
 12101  00451A                     l7860:
 12102                           
 12103                           ; BSR set to: 1
 12104                           ;Modbus.c: 89:         ExpectedBytes = ModbusData[6] + 9;
 12105  00451A  0E09               	movlw	9
 12106  00451C  2506               	addwf	(_ModbusData+6)& (0+255),w,b
 12107  00451E  0100               	movlb	0	; () banked
 12108  004520  6FEF               	movwf	_ExpectedBytes& (0+255),b
 12109  004522  6BF0               	clrf	(_ExpectedBytes+1)& (0+255),b
 12110  004524  0E00               	movlw	0
 12111  004526  23F0               	addwfc	(_ExpectedBytes+1)& (0+255),f,b
 12112                           
 12113                           ;Modbus.c: 90:     }else if (ModbusData[1] == 0x10){
 12114  004528  EFA6  F022         	goto	l883
 12115  00452C                     l7862:
 12116                           
 12117                           ; BSR set to: 1
 12118  00452C  0E10               	movlw	16
 12119  00452E  1901               	xorwf	(_ModbusData+1)& (0+255),w,b
 12120  004530  A4D8               	btfss	status,2,c
 12121  004532  EF9D  F022         	goto	u7911
 12122  004536  EF9F  F022         	goto	u7910
 12123  00453A                     u7911:
 12124  00453A  EFA1  F022         	goto	l7866
 12125  00453E                     u7910:
 12126  00453E  EF8D  F022         	goto	l7860
 12127  004542                     l7866:
 12128                           
 12129                           ; BSR set to: 1
 12130                           ;Modbus.c: 93:         ExpectedBytes = 8;
 12131  004542  0E00               	movlw	0
 12132  004544  0100               	movlb	0	; () banked
 12133  004546  6FF0               	movwf	(_ExpectedBytes+1)& (0+255),b
 12134  004548  0E08               	movlw	8
 12135  00454A  6FEF               	movwf	_ExpectedBytes& (0+255),b
 12136  00454C                     l883:
 12137                           
 12138                           ; BSR set to: 0
 12139  00454C  0012               	return		;funcret
 12140  00454E                     __end_of_AddRxBuffToModBus:
 12141                           	opt callstack 0
 12142                           
 12143 ;; *************** function _ModbusFC10 *****************
 12144 ;; Defined at:
 12145 ;;		line 449 in file "Modbus.c"
 12146 ;; Parameters:    Size  Location     Type
 12147 ;;		None
 12148 ;; Auto vars:     Size  Location     Type
 12149 ;;  j               2   56[BANK0 ] int 
 12150 ;;  i               2   54[BANK0 ] int 
 12151 ;;  TempData        2   51[BANK0 ] unsigned int 
 12152 ;;  error           1   53[BANK0 ] _Bool 
 12153 ;; Return value:  Size  Location     Type
 12154 ;;                  1    wreg      void 
 12155 ;; Registers used:
 12156 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12157 ;; Tracked objects:
 12158 ;;		On entry : 0/0
 12159 ;;		On exit  : 0/0
 12160 ;;		Unchanged: 0/0
 12161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12163 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12164 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12165 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12166 ;;Total ram usage:       11 bytes
 12167 ;; Hardware stack levels used:    1
 12168 ;; Hardware stack levels required when called:   13
 12169 ;; This function calls:
 12170 ;;		_ModbusError
 12171 ;;		_UART1_Write_string
 12172 ;;		_generateCRC
 12173 ;;		_printf
 12174 ;; This function is called by:
 12175 ;;		_main
 12176 ;; This function uses a non-reentrant model
 12177 ;;
 12178                           
 12179                           	psect	text49
 12180  0025D0                     __ptext49:
 12181                           	opt callstack 0
 12182  0025D0                     _ModbusFC10:
 12183                           	opt callstack 17
 12184  0025D0                     
 12185                           ;Modbus.c: 454:     int j = 0;
 12186  0025D0  0E00               	movlw	0
 12187  0025D2  0100               	movlb	0	; () banked
 12188  0025D4  6F99               	movwf	(ModbusFC10@j+1)& (0+255),b
 12189  0025D6  0E00               	movlw	0
 12190  0025D8  6F98               	movwf	ModbusFC10@j& (0+255),b
 12191                           
 12192                           ;Modbus.c: 455:     unsigned int TempData = 0x0000;
 12193  0025DA  0E00               	movlw	0
 12194  0025DC  6F94               	movwf	(ModbusFC10@TempData+1)& (0+255),b
 12195  0025DE  0E00               	movlw	0
 12196  0025E0  6F93               	movwf	ModbusFC10@TempData& (0+255),b
 12197                           
 12198                           ;Modbus.c: 456:     _Bool error = 0;
 12199  0025E2  0E00               	movlw	0
 12200  0025E4  6F95               	movwf	ModbusFC10@error& (0+255),b
 12201  0025E6                     
 12202                           ; BSR set to: 0
 12203                           ;Modbus.c: 458:     if(((ModbusData[2] * 256) + ModbusData[3]) + ((ModbusData[4] * 256) 
      +                          + ModbusData[5]) > 32){
 12204  0025E6  0101               	movlb	1	; () banked
 12205  0025E8  5102               	movf	(_ModbusData+2)& (0+255),w,b
 12206  0025EA  0100               	movlb	0	; () banked
 12207  0025EC  6F90               	movwf	(??_ModbusFC10+1)& (0+255),b
 12208  0025EE  6B8F               	clrf	??_ModbusFC10& (0+255),b
 12209  0025F0  0101               	movlb	1	; () banked
 12210  0025F2  5105               	movf	(_ModbusData+5)& (0+255),w,b
 12211  0025F4  C104  F091         	movff	_ModbusData+4,??_ModbusFC10+2
 12212  0025F8  0100               	movlb	0	; () banked
 12213  0025FA  6B92               	clrf	(??_ModbusFC10+3)& (0+255),b
 12214  0025FC  C091  F092         	movff	??_ModbusFC10+2,??_ModbusFC10+3
 12215  002600  6B91               	clrf	(??_ModbusFC10+2)& (0+255),b
 12216  002602  2791               	addwf	(??_ModbusFC10+2)& (0+255),f,b
 12217  002604  0E00               	movlw	0
 12218  002606  2392               	addwfc	(??_ModbusFC10+3)& (0+255),f,b
 12219  002608  518F               	movf	??_ModbusFC10& (0+255),w,b
 12220  00260A  2791               	addwf	(??_ModbusFC10+2)& (0+255),f,b
 12221  00260C  5190               	movf	(??_ModbusFC10+1)& (0+255),w,b
 12222  00260E  2392               	addwfc	(??_ModbusFC10+3)& (0+255),f,b
 12223  002610  0101               	movlb	1	; () banked
 12224  002612  5103               	movf	(_ModbusData+3)& (0+255),w,b
 12225  002614  0100               	movlb	0	; () banked
 12226  002616  2791               	addwf	(??_ModbusFC10+2)& (0+255),f,b
 12227  002618  0E00               	movlw	0
 12228  00261A  2392               	addwfc	(??_ModbusFC10+3)& (0+255),f,b
 12229  00261C  BF92               	btfsc	(??_ModbusFC10+3)& (0+255),7,b
 12230  00261E  EF1A  F013         	goto	u8291
 12231  002622  5192               	movf	(??_ModbusFC10+3)& (0+255),w,b
 12232  002624  E109               	bnz	u8290
 12233  002626  0E21               	movlw	33
 12234  002628  5D91               	subwf	(??_ModbusFC10+2)& (0+255),w,b
 12235  00262A  A0D8               	btfss	status,0,c
 12236  00262C  EF1A  F013         	goto	u8291
 12237  002630  EF1C  F013         	goto	u8290
 12238  002634                     u8291:
 12239  002634  EF25  F013         	goto	l8182
 12240  002638                     u8290:
 12241  002638                     
 12242                           ; BSR set to: 0
 12243                           ;Modbus.c: 459:          printf("Requested registers out of range.  0x0000 to 0x020.\r\n
      +                          ");
 12244  002638  0E4F               	movlw	low STR_61
 12245  00263A  6F7D               	movwf	printf@fmt& (0+255),b
 12246  00263C  0EF6               	movlw	high STR_61
 12247  00263E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 12248  002640  EC8A  F028         	call	_printf	;wreg free
 12249  002644                     
 12250                           ;Modbus.c: 460:          error = 1;
 12251  002644  0E01               	movlw	1
 12252  002646  0100               	movlb	0	; () banked
 12253  002648  6F95               	movwf	ModbusFC10@error& (0+255),b
 12254  00264A                     l8182:
 12255                           
 12256                           ; BSR set to: 0
 12257                           ;Modbus.c: 463:     if(error == 0){
 12258  00264A  5195               	movf	ModbusFC10@error& (0+255),w,b
 12259  00264C  A4D8               	btfss	status,2,c
 12260  00264E  EF2B  F013         	goto	u8301
 12261  002652  EF2D  F013         	goto	u8300
 12262  002656                     u8301:
 12263  002656  EFFF  F013         	goto	l8232
 12264  00265A                     u8300:
 12265  00265A                     
 12266                           ; BSR set to: 0
 12267                           ;Modbus.c: 465:         MBResCnt = 0;
 12268  00265A  0E00               	movlw	0
 12269  00265C  6FD8               	movwf	(_MBResCnt+1)& (0+255),b
 12270  00265E  0E00               	movlw	0
 12271  002660  6FD7               	movwf	_MBResCnt& (0+255),b
 12272  002662                     
 12273                           ; BSR set to: 0
 12274                           ;Modbus.c: 466:         MBRespon[MBResCnt] = ModbusData[0];
 12275  002662  0E57               	movlw	low _MBRespon
 12276  002664  25D7               	addwf	_MBResCnt& (0+255),w,b
 12277  002666  6ED9               	movwf	fsr2l,c
 12278  002668  0E02               	movlw	high _MBRespon
 12279  00266A  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 12280  00266C  6EDA               	movwf	fsr2h,c
 12281  00266E  C100  FFDF         	movff	_ModbusData,indf2
 12282  002672                     
 12283                           ; BSR set to: 0
 12284                           ;Modbus.c: 467:         MBResCnt++;
 12285  002672  4BD7               	infsnz	_MBResCnt& (0+255),f,b
 12286  002674  2BD8               	incf	(_MBResCnt+1)& (0+255),f,b
 12287  002676                     
 12288                           ; BSR set to: 0
 12289                           ;Modbus.c: 468:         MBRespon[MBResCnt] = ModbusData[1];
 12290  002676  0E57               	movlw	low _MBRespon
 12291  002678  25D7               	addwf	_MBResCnt& (0+255),w,b
 12292  00267A  6ED9               	movwf	fsr2l,c
 12293  00267C  0E02               	movlw	high _MBRespon
 12294  00267E  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 12295  002680  6EDA               	movwf	fsr2h,c
 12296  002682  C101  FFDF         	movff	_ModbusData+1,indf2
 12297  002686                     
 12298                           ; BSR set to: 0
 12299                           ;Modbus.c: 469:         MBResCnt++;
 12300  002686  4BD7               	infsnz	_MBResCnt& (0+255),f,b
 12301  002688  2BD8               	incf	(_MBResCnt+1)& (0+255),f,b
 12302  00268A                     
 12303                           ; BSR set to: 0
 12304                           ;Modbus.c: 470:         MBRespon[MBResCnt] = ModbusData[2];
 12305  00268A  0E57               	movlw	low _MBRespon
 12306  00268C  25D7               	addwf	_MBResCnt& (0+255),w,b
 12307  00268E  6ED9               	movwf	fsr2l,c
 12308  002690  0E02               	movlw	high _MBRespon
 12309  002692  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 12310  002694  6EDA               	movwf	fsr2h,c
 12311  002696  C102  FFDF         	movff	_ModbusData+2,indf2
 12312  00269A                     
 12313                           ; BSR set to: 0
 12314                           ;Modbus.c: 471:         MBResCnt++;
 12315  00269A  4BD7               	infsnz	_MBResCnt& (0+255),f,b
 12316  00269C  2BD8               	incf	(_MBResCnt+1)& (0+255),f,b
 12317  00269E                     
 12318                           ; BSR set to: 0
 12319                           ;Modbus.c: 472:         MBRespon[MBResCnt] = ModbusData[3];
 12320  00269E  0E57               	movlw	low _MBRespon
 12321  0026A0  25D7               	addwf	_MBResCnt& (0+255),w,b
 12322  0026A2  6ED9               	movwf	fsr2l,c
 12323  0026A4  0E02               	movlw	high _MBRespon
 12324  0026A6  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 12325  0026A8  6EDA               	movwf	fsr2h,c
 12326  0026AA  C103  FFDF         	movff	_ModbusData+3,indf2
 12327  0026AE                     
 12328                           ; BSR set to: 0
 12329                           ;Modbus.c: 473:         MBResCnt++;
 12330  0026AE  4BD7               	infsnz	_MBResCnt& (0+255),f,b
 12331  0026B0  2BD8               	incf	(_MBResCnt+1)& (0+255),f,b
 12332  0026B2                     
 12333                           ; BSR set to: 0
 12334                           ;Modbus.c: 474:         MBRespon[MBResCnt] = ModbusData[4];
 12335  0026B2  0E57               	movlw	low _MBRespon
 12336  0026B4  25D7               	addwf	_MBResCnt& (0+255),w,b
 12337  0026B6  6ED9               	movwf	fsr2l,c
 12338  0026B8  0E02               	movlw	high _MBRespon
 12339  0026BA  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 12340  0026BC  6EDA               	movwf	fsr2h,c
 12341  0026BE  C104  FFDF         	movff	_ModbusData+4,indf2
 12342  0026C2                     
 12343                           ; BSR set to: 0
 12344                           ;Modbus.c: 475:         MBResCnt++;
 12345  0026C2  4BD7               	infsnz	_MBResCnt& (0+255),f,b
 12346  0026C4  2BD8               	incf	(_MBResCnt+1)& (0+255),f,b
 12347  0026C6                     
 12348                           ; BSR set to: 0
 12349                           ;Modbus.c: 476:         MBRespon[MBResCnt] = ModbusData[5];
 12350  0026C6  0E57               	movlw	low _MBRespon
 12351  0026C8  25D7               	addwf	_MBResCnt& (0+255),w,b
 12352  0026CA  6ED9               	movwf	fsr2l,c
 12353  0026CC  0E02               	movlw	high _MBRespon
 12354  0026CE  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 12355  0026D0  6EDA               	movwf	fsr2h,c
 12356  0026D2  C105  FFDF         	movff	_ModbusData+5,indf2
 12357  0026D6                     
 12358                           ; BSR set to: 0
 12359                           ;Modbus.c: 477:         MBResCnt++;
 12360  0026D6  4BD7               	infsnz	_MBResCnt& (0+255),f,b
 12361  0026D8  2BD8               	incf	(_MBResCnt+1)& (0+255),f,b
 12362                           
 12363                           ;Modbus.c: 479:         for(i=0; i< (ModbusData[5]) ; i++ ){
 12364  0026DA  0E00               	movlw	0
 12365  0026DC  6F97               	movwf	(ModbusFC10@i+1)& (0+255),b
 12366  0026DE  0E00               	movlw	0
 12367  0026E0  6F96               	movwf	ModbusFC10@i& (0+255),b
 12368  0026E2  EFA9  F013         	goto	l8218
 12369  0026E6                     l8210:
 12370                           
 12371                           ; BSR set to: 0
 12372                           ;Modbus.c: 486:             TempData = ModbusData[7 +j] *256 + ModbusData[8 +j];
 12373  0026E6  0E08               	movlw	low (_ModbusData+8)
 12374  0026E8  2598               	addwf	ModbusFC10@j& (0+255),w,b
 12375  0026EA  6ED9               	movwf	fsr2l,c
 12376  0026EC  0E01               	movlw	high (_ModbusData+8)
 12377  0026EE  2199               	addwfc	(ModbusFC10@j+1)& (0+255),w,b
 12378  0026F0  6EDA               	movwf	fsr2h,c
 12379  0026F2  50DF               	movf	indf2,w,c
 12380  0026F4  6F8F               	movwf	??_ModbusFC10& (0+255),b
 12381  0026F6  0E07               	movlw	low (_ModbusData+7)
 12382  0026F8  2598               	addwf	ModbusFC10@j& (0+255),w,b
 12383  0026FA  6ED9               	movwf	fsr2l,c
 12384  0026FC  0E01               	movlw	high (_ModbusData+7)
 12385  0026FE  2199               	addwfc	(ModbusFC10@j+1)& (0+255),w,b
 12386  002700  6EDA               	movwf	fsr2h,c
 12387  002702  50DF               	movf	indf2,w,c
 12388  002704  6F90               	movwf	(??_ModbusFC10+1)& (0+255),b
 12389  002706  5190               	movf	(??_ModbusFC10+1)& (0+255),w,b
 12390  002708  6F92               	movwf	(??_ModbusFC10+3)& (0+255),b
 12391  00270A  6B91               	clrf	(??_ModbusFC10+2)& (0+255),b
 12392  00270C  518F               	movf	??_ModbusFC10& (0+255),w,b
 12393  00270E  2591               	addwf	(??_ModbusFC10+2)& (0+255),w,b
 12394  002710  6F93               	movwf	ModbusFC10@TempData& (0+255),b
 12395  002712  0E00               	movlw	0
 12396  002714  2192               	addwfc	(??_ModbusFC10+3)& (0+255),w,b
 12397  002716  6F94               	movwf	(ModbusFC10@TempData+1)& (0+255),b
 12398  002718                     
 12399                           ; BSR set to: 0
 12400                           ;Modbus.c: 487:             j = j+2;
 12401  002718  0E02               	movlw	2
 12402  00271A  2598               	addwf	ModbusFC10@j& (0+255),w,b
 12403  00271C  6F98               	movwf	ModbusFC10@j& (0+255),b
 12404  00271E  0E00               	movlw	0
 12405  002720  2199               	addwfc	(ModbusFC10@j+1)& (0+255),w,b
 12406  002722  6F99               	movwf	(ModbusFC10@j+1)& (0+255),b
 12407  002724                     
 12408                           ; BSR set to: 0
 12409                           ;Modbus.c: 488:             MB400xx[ModbusData[3] +i] = TempData;
 12410  002724  0101               	movlb	1	; () banked
 12411  002726  5103               	movf	(_ModbusData+3)& (0+255),w,b
 12412  002728  0100               	movlb	0	; () banked
 12413  00272A  2596               	addwf	ModbusFC10@i& (0+255),w,b
 12414  00272C  6F8F               	movwf	??_ModbusFC10& (0+255),b
 12415  00272E  0E00               	movlw	0
 12416  002730  2197               	addwfc	(ModbusFC10@i+1)& (0+255),w,b
 12417  002732  6F90               	movwf	(??_ModbusFC10+1)& (0+255),b
 12418  002734  90D8               	bcf	status,0,c
 12419  002736  378F               	rlcf	??_ModbusFC10& (0+255),f,b
 12420  002738  3790               	rlcf	(??_ModbusFC10+1)& (0+255),f,b
 12421  00273A  0EB7               	movlw	low _MB400xx
 12422  00273C  258F               	addwf	??_ModbusFC10& (0+255),w,b
 12423  00273E  6ED9               	movwf	fsr2l,c
 12424  002740  0E03               	movlw	high _MB400xx
 12425  002742  2190               	addwfc	(??_ModbusFC10+1)& (0+255),w,b
 12426  002744  6EDA               	movwf	fsr2h,c
 12427  002746  C093  FFDE         	movff	ModbusFC10@TempData,postinc2
 12428  00274A  C094  FFDD         	movff	ModbusFC10@TempData+1,postdec2
 12429  00274E                     
 12430                           ; BSR set to: 0
 12431                           ;Modbus.c: 489:         }
 12432  00274E  4B96               	infsnz	ModbusFC10@i& (0+255),f,b
 12433  002750  2B97               	incf	(ModbusFC10@i+1)& (0+255),f,b
 12434  002752                     l8218:
 12435                           
 12436                           ; BSR set to: 0
 12437  002752  0101               	movlb	1	; () banked
 12438  002754  5105               	movf	(_ModbusData+5)& (0+255),w,b
 12439  002756  0100               	movlb	0	; () banked
 12440  002758  6F8F               	movwf	??_ModbusFC10& (0+255),b
 12441  00275A  6B90               	clrf	(??_ModbusFC10+1)& (0+255),b
 12442  00275C  518F               	movf	??_ModbusFC10& (0+255),w,b
 12443  00275E  5D96               	subwf	ModbusFC10@i& (0+255),w,b
 12444  002760  5197               	movf	(ModbusFC10@i+1)& (0+255),w,b
 12445  002762  0A80               	xorlw	128
 12446  002764  6F91               	movwf	(??_ModbusFC10+2)& (0+255),b
 12447  002766  5190               	movf	(??_ModbusFC10+1)& (0+255),w,b
 12448  002768  0A80               	xorlw	128
 12449  00276A  5991               	subwfb	(??_ModbusFC10+2)& (0+255),w,b
 12450  00276C  A0D8               	btfss	status,0,c
 12451  00276E  EFBB  F013         	goto	u8311
 12452  002772  EFBD  F013         	goto	u8310
 12453  002776                     u8311:
 12454  002776  EF73  F013         	goto	l8210
 12455  00277A                     u8310:
 12456  00277A                     
 12457                           ; BSR set to: 0
 12458                           ;Modbus.c: 491:         ByteHi = generateCRC(MBResCnt, 1);
 12459  00277A  C0D7  F005         	movff	_MBResCnt,generateCRC@MessCnt
 12460  00277E  C0D8  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
 12461  002782  0E01               	movlw	1
 12462  002784  6E07               	movwf	generateCRC@HiOrLo^0,c
 12463  002786  ECEC  F01E         	call	_generateCRC	;wreg free
 12464  00278A  C005  F0D5         	movff	?_generateCRC,_ByteHi
 12465  00278E  C006  F0D6         	movff	?_generateCRC+1,_ByteHi+1
 12466                           
 12467                           ;Modbus.c: 492:         ByteLo = generateCRC(MBResCnt, 0);
 12468  002792  C0D7  F005         	movff	_MBResCnt,generateCRC@MessCnt
 12469  002796  C0D8  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
 12470  00279A  0E00               	movlw	0
 12471  00279C  6E07               	movwf	generateCRC@HiOrLo^0,c
 12472  00279E  ECEC  F01E         	call	_generateCRC	;wreg free
 12473  0027A2  C005  F0EB         	movff	?_generateCRC,_ByteLo
 12474  0027A6  C006  F0EC         	movff	?_generateCRC+1,_ByteLo+1
 12475  0027AA                     
 12476                           ;Modbus.c: 494:         MBRespon[MBResCnt] = ByteHi;
 12477  0027AA  0E57               	movlw	low _MBRespon
 12478  0027AC  0100               	movlb	0	; () banked
 12479  0027AE  25D7               	addwf	_MBResCnt& (0+255),w,b
 12480  0027B0  6ED9               	movwf	fsr2l,c
 12481  0027B2  0E02               	movlw	high _MBRespon
 12482  0027B4  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 12483  0027B6  6EDA               	movwf	fsr2h,c
 12484  0027B8  C0D5  FFDF         	movff	_ByteHi,indf2
 12485  0027BC                     
 12486                           ; BSR set to: 0
 12487                           ;Modbus.c: 495:         MBRespon[MBResCnt +1] = ByteLo;
 12488  0027BC  0E58               	movlw	low (_MBRespon+1)
 12489  0027BE  25D7               	addwf	_MBResCnt& (0+255),w,b
 12490  0027C0  6ED9               	movwf	fsr2l,c
 12491  0027C2  0E02               	movlw	high (_MBRespon+1)
 12492  0027C4  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 12493  0027C6  6EDA               	movwf	fsr2h,c
 12494  0027C8  C0EB  FFDF         	movff	_ByteLo,indf2
 12495  0027CC                     
 12496                           ; BSR set to: 0
 12497                           ;Modbus.c: 496:         MBResCnt = MBResCnt +2;
 12498  0027CC  0E02               	movlw	2
 12499  0027CE  25D7               	addwf	_MBResCnt& (0+255),w,b
 12500  0027D0  6FD7               	movwf	_MBResCnt& (0+255),b
 12501  0027D2  0E00               	movlw	0
 12502  0027D4  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 12503  0027D6  6FD8               	movwf	(_MBResCnt+1)& (0+255),b
 12504  0027D8                     
 12505                           ; BSR set to: 0
 12506                           ;Modbus.c: 498:         UART1_Write_string(MBRespon,MBResCnt);
 12507  0027D8  0E57               	movlw	low _MBRespon
 12508  0027DA  6E06               	movwf	UART1_Write_string@data^0,c
 12509  0027DC  0E02               	movlw	high _MBRespon
 12510  0027DE  6E07               	movwf	(UART1_Write_string@data+1)^0,c
 12511  0027E0  C0D7  F008         	movff	_MBResCnt,UART1_Write_string@data_len
 12512  0027E4  C0D8  F009         	movff	_MBResCnt+1,UART1_Write_string@data_len+1
 12513  0027E8  EC3F  F024         	call	_UART1_Write_string	;wreg free
 12514  0027EC                     
 12515                           ;Modbus.c: 499:         printf("Operation Successful \r\n\n");
 12516  0027EC  0EC0               	movlw	low STR_35
 12517  0027EE  0100               	movlb	0	; () banked
 12518  0027F0  6F7D               	movwf	printf@fmt& (0+255),b
 12519  0027F2  0EFD               	movlw	high STR_35
 12520  0027F4  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 12521  0027F6  EC8A  F028         	call	_printf	;wreg free
 12522                           
 12523                           ;Modbus.c: 500:     }else{
 12524  0027FA  EF0C  F014         	goto	l981
 12525  0027FE                     l8232:
 12526                           
 12527                           ; BSR set to: 0
 12528                           ;Modbus.c: 501:         ModbusError(0x02);
 12529  0027FE  0E00               	movlw	0
 12530  002800  6E15               	movwf	(ModbusError@ErrorCode+1)^0,c
 12531  002802  0E02               	movlw	2
 12532  002804  6E14               	movwf	ModbusError@ErrorCode^0,c
 12533  002806  ECE7  F020         	call	_ModbusError	;wreg free
 12534  00280A                     
 12535                           ;Modbus.c: 502:         printf("Operation Failed \r\n\n");
 12536  00280A  0E94               	movlw	low STR_36
 12537  00280C  0100               	movlb	0	; () banked
 12538  00280E  6F7D               	movwf	printf@fmt& (0+255),b
 12539  002810  0EFE               	movlw	high STR_36
 12540  002812  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 12541  002814  EC8A  F028         	call	_printf	;wreg free
 12542  002818                     l981:
 12543  002818  0012               	return		;funcret
 12544  00281A                     __end_of_ModbusFC10:
 12545                           	opt callstack 0
 12546                           
 12547 ;; *************** function _ModbusFC04 *****************
 12548 ;; Defined at:
 12549 ;;		line 252 in file "Modbus.c"
 12550 ;; Parameters:    Size  Location     Type
 12551 ;;		None
 12552 ;; Auto vars:     Size  Location     Type
 12553 ;;  convertedVal    2   53[BANK0 ] unsigned short 
 12554 ;;  i               2   56[BANK0 ] int 
 12555 ;;  error           1   55[BANK0 ] _Bool 
 12556 ;; Return value:  Size  Location     Type
 12557 ;;                  1    wreg      void 
 12558 ;; Registers used:
 12559 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12560 ;; Tracked objects:
 12561 ;;		On entry : 0/0
 12562 ;;		On exit  : 0/0
 12563 ;;		Unchanged: 0/0
 12564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12566 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12567 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12568 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12569 ;;Total ram usage:       11 bytes
 12570 ;; Hardware stack levels used:    1
 12571 ;; Hardware stack levels required when called:   13
 12572 ;; This function calls:
 12573 ;;		_ADCC_GetSingleConversion
 12574 ;;		_ModbusError
 12575 ;;		_UART1_Write_string
 12576 ;;		_generateCRC
 12577 ;;		_printf
 12578 ;; This function is called by:
 12579 ;;		_main
 12580 ;; This function uses a non-reentrant model
 12581 ;;
 12582                           
 12583                           	psect	text50
 12584  00012A                     __ptext50:
 12585                           	opt callstack 0
 12586  00012A                     _ModbusFC04:
 12587                           	opt callstack 17
 12588  00012A                     
 12589                           ;Modbus.c: 256:     _Bool error = 0;
 12590  00012A  0E00               	movlw	0
 12591  00012C  0100               	movlb	0	; () banked
 12592  00012E  6F97               	movwf	ModbusFC04@error& (0+255),b
 12593                           
 12594                           ;Modbus.c: 258:     MBResCnt = 0;
 12595  000130  0E00               	movlw	0
 12596  000132  6FD8               	movwf	(_MBResCnt+1)& (0+255),b
 12597  000134  0E00               	movlw	0
 12598  000136  6FD7               	movwf	_MBResCnt& (0+255),b
 12599  000138                     
 12600                           ; BSR set to: 0
 12601                           ;Modbus.c: 259:     MBRespon[MBResCnt] = ModbusData[0];
 12602  000138  0E57               	movlw	low _MBRespon
 12603  00013A  25D7               	addwf	_MBResCnt& (0+255),w,b
 12604  00013C  6ED9               	movwf	fsr2l,c
 12605  00013E  0E02               	movlw	high _MBRespon
 12606  000140  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 12607  000142  6EDA               	movwf	fsr2h,c
 12608  000144  C100  FFDF         	movff	_ModbusData,indf2
 12609  000148                     
 12610                           ; BSR set to: 0
 12611                           ;Modbus.c: 260:     MBResCnt++;
 12612  000148  4BD7               	infsnz	_MBResCnt& (0+255),f,b
 12613  00014A  2BD8               	incf	(_MBResCnt+1)& (0+255),f,b
 12614  00014C                     
 12615                           ; BSR set to: 0
 12616                           ;Modbus.c: 261:     MBRespon[MBResCnt] = ModbusData[1];
 12617  00014C  0E57               	movlw	low _MBRespon
 12618  00014E  25D7               	addwf	_MBResCnt& (0+255),w,b
 12619  000150  6ED9               	movwf	fsr2l,c
 12620  000152  0E02               	movlw	high _MBRespon
 12621  000154  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 12622  000156  6EDA               	movwf	fsr2h,c
 12623  000158  C101  FFDF         	movff	_ModbusData+1,indf2
 12624  00015C                     
 12625                           ; BSR set to: 0
 12626                           ;Modbus.c: 262:     MBResCnt++;
 12627  00015C  4BD7               	infsnz	_MBResCnt& (0+255),f,b
 12628  00015E  2BD8               	incf	(_MBResCnt+1)& (0+255),f,b
 12629  000160                     
 12630                           ; BSR set to: 0
 12631                           ;Modbus.c: 263:     MBRespon[MBResCnt] = ModbusData[5] *2;
 12632  000160  0101               	movlb	1	; () banked
 12633  000162  5105               	movf	(_ModbusData+5)& (0+255),w,b
 12634  000164  0D02               	mullw	2
 12635  000166  0E57               	movlw	low _MBRespon
 12636  000168  0100               	movlb	0	; () banked
 12637  00016A  25D7               	addwf	_MBResCnt& (0+255),w,b
 12638  00016C  6ED9               	movwf	fsr2l,c
 12639  00016E  0E02               	movlw	high _MBRespon
 12640  000170  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 12641  000172  6EDA               	movwf	fsr2h,c
 12642  000174  CFF3 FFDF          	movff	prodl,indf2
 12643  000178                     
 12644                           ; BSR set to: 0
 12645                           ;Modbus.c: 264:     MBResCnt++;
 12646  000178  4BD7               	infsnz	_MBResCnt& (0+255),f,b
 12647  00017A  2BD8               	incf	(_MBResCnt+1)& (0+255),f,b
 12648                           
 12649                           ;Modbus.c: 267:     switch(ModbusData[2]){
 12650  00017C  EFC1  F004         	goto	l8322
 12651  000180                     l8250:
 12652                           
 12653                           ; BSR set to: 0
 12654                           ;Modbus.c: 270:         {;Modbus.c: 271:             printf("Requested Circuit Data\r\n"
      +                          );
 12655  000180  0ED9               	movlw	low STR_37
 12656  000182  6F7D               	movwf	printf@fmt& (0+255),b
 12657  000184  0EFD               	movlw	high STR_37
 12658  000186  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 12659  000188  EC8A  F028         	call	_printf	;wreg free
 12660  00018C                     
 12661                           ;Modbus.c: 273:             if(
 12662  00018C  0101               	movlb	1	; () banked
 12663  00018E  5102               	movf	(_ModbusData+2)& (0+255),w,b
 12664  000190  0100               	movlb	0	; () banked
 12665  000192  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 12666  000194  6B8F               	clrf	??_ModbusFC04& (0+255),b
 12667  000196  0101               	movlb	1	; () banked
 12668  000198  5105               	movf	(_ModbusData+5)& (0+255),w,b
 12669  00019A  C104  F091         	movff	_ModbusData+4,??_ModbusFC04+2
 12670  00019E  0100               	movlb	0	; () banked
 12671  0001A0  6B92               	clrf	(??_ModbusFC04+3)& (0+255),b
 12672  0001A2  C091  F092         	movff	??_ModbusFC04+2,??_ModbusFC04+3
 12673  0001A6  6B91               	clrf	(??_ModbusFC04+2)& (0+255),b
 12674  0001A8  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 12675  0001AA  0E00               	movlw	0
 12676  0001AC  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 12677  0001AE  518F               	movf	??_ModbusFC04& (0+255),w,b
 12678  0001B0  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 12679  0001B2  5190               	movf	(??_ModbusFC04+1)& (0+255),w,b
 12680  0001B4  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 12681  0001B6  0101               	movlb	1	; () banked
 12682  0001B8  5103               	movf	(_ModbusData+3)& (0+255),w,b
 12683  0001BA  0100               	movlb	0	; () banked
 12684  0001BC  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 12685  0001BE  0E00               	movlw	0
 12686  0001C0  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 12687  0001C2  BF92               	btfsc	(??_ModbusFC04+3)& (0+255),7,b
 12688  0001C4  EFE6  F000         	goto	u8321
 12689  0001C8  EFE8  F000         	goto	u8320
 12690  0001CC                     u8321:
 12691  0001CC  EF11  F001         	goto	l8256
 12692  0001D0                     u8320:
 12693  0001D0                     
 12694                           ; BSR set to: 0
 12695  0001D0  0101               	movlb	1	; () banked
 12696  0001D2  5102               	movf	(_ModbusData+2)& (0+255),w,b
 12697  0001D4  0100               	movlb	0	; () banked
 12698  0001D6  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 12699  0001D8  6B8F               	clrf	??_ModbusFC04& (0+255),b
 12700  0001DA  0101               	movlb	1	; () banked
 12701  0001DC  5105               	movf	(_ModbusData+5)& (0+255),w,b
 12702  0001DE  C104  F091         	movff	_ModbusData+4,??_ModbusFC04+2
 12703  0001E2  0100               	movlb	0	; () banked
 12704  0001E4  6B92               	clrf	(??_ModbusFC04+3)& (0+255),b
 12705  0001E6  C091  F092         	movff	??_ModbusFC04+2,??_ModbusFC04+3
 12706  0001EA  6B91               	clrf	(??_ModbusFC04+2)& (0+255),b
 12707  0001EC  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 12708  0001EE  0E00               	movlw	0
 12709  0001F0  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 12710  0001F2  518F               	movf	??_ModbusFC04& (0+255),w,b
 12711  0001F4  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 12712  0001F6  5190               	movf	(??_ModbusFC04+1)& (0+255),w,b
 12713  0001F8  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 12714  0001FA  0101               	movlb	1	; () banked
 12715  0001FC  5103               	movf	(_ModbusData+3)& (0+255),w,b
 12716  0001FE  0100               	movlb	0	; () banked
 12717  000200  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 12718  000202  0E00               	movlw	0
 12719  000204  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 12720  000206  BF92               	btfsc	(??_ModbusFC04+3)& (0+255),7,b
 12721  000208  EF0F  F001         	goto	u8331
 12722  00020C  5192               	movf	(??_ModbusFC04+3)& (0+255),w,b
 12723  00020E  E109               	bnz	u8330
 12724  000210  0E21               	movlw	33
 12725  000212  5D91               	subwf	(??_ModbusFC04+2)& (0+255),w,b
 12726  000214  A0D8               	btfss	status,0,c
 12727  000216  EF0F  F001         	goto	u8331
 12728  00021A  EF11  F001         	goto	u8330
 12729  00021E                     u8331:
 12730  00021E  EFEC  F004         	goto	l8324
 12731  000222                     u8330:
 12732  000222                     l8256:
 12733                           
 12734                           ; BSR set to: 0
 12735                           ;Modbus.c: 275:                 (((ModbusData[2] * 256) + ModbusData[3]) + ((ModbusData[
      +                          4] * 256) + ModbusData[5]) > 32)){;Modbus.c: 277:                 printf("Registers out 
      +                          of range.\r\nValid: 0x0000 to 0x0031.\r\n");
 12736  000222  0E58               	movlw	low STR_33
 12737  000224  6F7D               	movwf	printf@fmt& (0+255),b
 12738  000226  0EF7               	movlw	high STR_33
 12739  000228  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 12740  00022A  EC8A  F028         	call	_printf	;wreg free
 12741                           
 12742                           ;Modbus.c: 279:                 printf("Requested: 0x%04x to 0x%04x\r\n", ModbusData[2] 
      +                          * 256 + ModbusData[3],
 12743  00022E  0E35               	movlw	low STR_34
 12744  000230  0100               	movlb	0	; () banked
 12745  000232  6F7D               	movwf	printf@fmt& (0+255),b
 12746  000234  0EFD               	movlw	high STR_34
 12747  000236  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 12748  000238  0101               	movlb	1	; () banked
 12749  00023A  5102               	movf	(_ModbusData+2)& (0+255),w,b
 12750  00023C  0100               	movlb	0	; () banked
 12751  00023E  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 12752  000240  6B8F               	clrf	??_ModbusFC04& (0+255),b
 12753  000242  0101               	movlb	1	; () banked
 12754  000244  5103               	movf	(_ModbusData+3)& (0+255),w,b
 12755  000246  0100               	movlb	0	; () banked
 12756  000248  258F               	addwf	??_ModbusFC04& (0+255),w,b
 12757  00024A  6F7F               	movwf	(?_printf+2)& (0+255),b
 12758  00024C  0101               	movlb	1	; () banked
 12759  00024E  0E00               	movlw	0
 12760  000250  0100               	movlb	0	; () banked
 12761  000252  2190               	addwfc	(??_ModbusFC04+1)& (0+255),w,b
 12762  000254  6F80               	movwf	(?_printf+3)& (0+255),b
 12763  000256  0101               	movlb	1	; () banked
 12764  000258  5104               	movf	(_ModbusData+4)& (0+255),w,b
 12765  00025A  0100               	movlb	0	; () banked
 12766  00025C  6F92               	movwf	(??_ModbusFC04+3)& (0+255),b
 12767  00025E  6B91               	clrf	(??_ModbusFC04+2)& (0+255),b
 12768  000260  0101               	movlb	1	; () banked
 12769  000262  5103               	movf	(_ModbusData+3)& (0+255),w,b
 12770  000264  C102  F093         	movff	_ModbusData+2,??_ModbusFC04+4
 12771  000268  0100               	movlb	0	; () banked
 12772  00026A  6B94               	clrf	(??_ModbusFC04+5)& (0+255),b
 12773  00026C  C093  F094         	movff	??_ModbusFC04+4,??_ModbusFC04+5
 12774  000270  6B93               	clrf	(??_ModbusFC04+4)& (0+255),b
 12775  000272  2793               	addwf	(??_ModbusFC04+4)& (0+255),f,b
 12776  000274  0E00               	movlw	0
 12777  000276  2394               	addwfc	(??_ModbusFC04+5)& (0+255),f,b
 12778  000278  5191               	movf	(??_ModbusFC04+2)& (0+255),w,b
 12779  00027A  2793               	addwf	(??_ModbusFC04+4)& (0+255),f,b
 12780  00027C  5192               	movf	(??_ModbusFC04+3)& (0+255),w,b
 12781  00027E  2394               	addwfc	(??_ModbusFC04+5)& (0+255),f,b
 12782  000280  0101               	movlb	1	; () banked
 12783  000282  5105               	movf	(_ModbusData+5)& (0+255),w,b
 12784  000284  0100               	movlb	0	; () banked
 12785  000286  2593               	addwf	(??_ModbusFC04+4)& (0+255),w,b
 12786  000288  6F81               	movwf	(?_printf+4)& (0+255),b
 12787  00028A  0101               	movlb	1	; () banked
 12788  00028C  0E00               	movlw	0
 12789  00028E  0100               	movlb	0	; () banked
 12790  000290  2194               	addwfc	(??_ModbusFC04+5)& (0+255),w,b
 12791  000292  6F82               	movwf	(?_printf+5)& (0+255),b
 12792  000294  EC8A  F028         	call	_printf	;wreg free
 12793  000298                     l8258:
 12794                           
 12795                           ;Modbus.c: 281:                 error = 1;
 12796  000298  0E01               	movlw	1
 12797  00029A  0100               	movlb	0	; () banked
 12798  00029C  6F97               	movwf	ModbusFC04@error& (0+255),b
 12799  00029E  EFEC  F004         	goto	l8324
 12800  0002A2                     l8260:
 12801                           
 12802                           ; BSR set to: 0
 12803                           ;Modbus.c: 286:         {;Modbus.c: 287:             printf("Requested Part No.\r\n");
 12804  0002A2  0EA9               	movlw	low STR_40
 12805  0002A4  6F7D               	movwf	printf@fmt& (0+255),b
 12806  0002A6  0EFE               	movlw	high STR_40
 12807  0002A8  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 12808  0002AA  EC8A  F028         	call	_printf	;wreg free
 12809  0002AE                     
 12810                           ;Modbus.c: 289:             if(
 12811  0002AE  0101               	movlb	1	; () banked
 12812  0002B0  5102               	movf	(_ModbusData+2)& (0+255),w,b
 12813  0002B2  0100               	movlb	0	; () banked
 12814  0002B4  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 12815  0002B6  6B8F               	clrf	??_ModbusFC04& (0+255),b
 12816  0002B8  0101               	movlb	1	; () banked
 12817  0002BA  5105               	movf	(_ModbusData+5)& (0+255),w,b
 12818  0002BC  C104  F091         	movff	_ModbusData+4,??_ModbusFC04+2
 12819  0002C0  0100               	movlb	0	; () banked
 12820  0002C2  6B92               	clrf	(??_ModbusFC04+3)& (0+255),b
 12821  0002C4  C091  F092         	movff	??_ModbusFC04+2,??_ModbusFC04+3
 12822  0002C8  6B91               	clrf	(??_ModbusFC04+2)& (0+255),b
 12823  0002CA  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 12824  0002CC  0E00               	movlw	0
 12825  0002CE  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 12826  0002D0  518F               	movf	??_ModbusFC04& (0+255),w,b
 12827  0002D2  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 12828  0002D4  5190               	movf	(??_ModbusFC04+1)& (0+255),w,b
 12829  0002D6  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 12830  0002D8  0101               	movlb	1	; () banked
 12831  0002DA  5103               	movf	(_ModbusData+3)& (0+255),w,b
 12832  0002DC  0100               	movlb	0	; () banked
 12833  0002DE  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 12834  0002E0  0E00               	movlw	0
 12835  0002E2  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 12836  0002E4  BF92               	btfsc	(??_ModbusFC04+3)& (0+255),7,b
 12837  0002E6  EF7B  F001         	goto	u8341
 12838  0002EA  0592               	decf	(??_ModbusFC04+3)& (0+255),w,b
 12839  0002EC  A0D8               	btfss	status,0,c
 12840  0002EE  EF7B  F001         	goto	u8341
 12841  0002F2  EF7D  F001         	goto	u8340
 12842  0002F6                     u8341:
 12843  0002F6  EFA6  F001         	goto	l8266
 12844  0002FA                     u8340:
 12845  0002FA                     
 12846                           ; BSR set to: 0
 12847  0002FA  0101               	movlb	1	; () banked
 12848  0002FC  5102               	movf	(_ModbusData+2)& (0+255),w,b
 12849  0002FE  0100               	movlb	0	; () banked
 12850  000300  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 12851  000302  6B8F               	clrf	??_ModbusFC04& (0+255),b
 12852  000304  0101               	movlb	1	; () banked
 12853  000306  5105               	movf	(_ModbusData+5)& (0+255),w,b
 12854  000308  C104  F091         	movff	_ModbusData+4,??_ModbusFC04+2
 12855  00030C  0100               	movlb	0	; () banked
 12856  00030E  6B92               	clrf	(??_ModbusFC04+3)& (0+255),b
 12857  000310  C091  F092         	movff	??_ModbusFC04+2,??_ModbusFC04+3
 12858  000314  6B91               	clrf	(??_ModbusFC04+2)& (0+255),b
 12859  000316  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 12860  000318  0E00               	movlw	0
 12861  00031A  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 12862  00031C  518F               	movf	??_ModbusFC04& (0+255),w,b
 12863  00031E  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 12864  000320  5190               	movf	(??_ModbusFC04+1)& (0+255),w,b
 12865  000322  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 12866  000324  0101               	movlb	1	; () banked
 12867  000326  5103               	movf	(_ModbusData+3)& (0+255),w,b
 12868  000328  0100               	movlb	0	; () banked
 12869  00032A  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 12870  00032C  0E00               	movlw	0
 12871  00032E  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 12872  000330  BF92               	btfsc	(??_ModbusFC04+3)& (0+255),7,b
 12873  000332  EFA4  F001         	goto	u8351
 12874  000336  0E09               	movlw	9
 12875  000338  5D91               	subwf	(??_ModbusFC04+2)& (0+255),w,b
 12876  00033A  0E01               	movlw	1
 12877  00033C  5992               	subwfb	(??_ModbusFC04+3)& (0+255),w,b
 12878  00033E  A0D8               	btfss	status,0,c
 12879  000340  EFA4  F001         	goto	u8351
 12880  000344  EFA6  F001         	goto	u8350
 12881  000348                     u8351:
 12882  000348  EFEC  F004         	goto	l8324
 12883  00034C                     u8350:
 12884  00034C                     l8266:
 12885                           
 12886                           ; BSR set to: 0
 12887                           ;Modbus.c: 291:                 (((ModbusData[2] * 256) + ModbusData[3]) + ((ModbusData[
      +                          4] * 256) + ModbusData[5]) > 264)){;Modbus.c: 293:                 printf("Registers out
      +                           of range.\r\nValid: 0x0100 to 0x0108.\r\n");
 12888  00034C  0E5C               	movlw	low STR_41
 12889  00034E  6F7D               	movwf	printf@fmt& (0+255),b
 12890  000350  0EF8               	movlw	high STR_41
 12891  000352  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 12892  000354  EC8A  F028         	call	_printf	;wreg free
 12893                           
 12894                           ;Modbus.c: 295:                 printf("Requested: 0x%04x to 0x%04x\r\n", ModbusData[2] 
      +                          * 256 + ModbusData[3],
 12895  000358  0E35               	movlw	low STR_34
 12896  00035A  0100               	movlb	0	; () banked
 12897  00035C  6F7D               	movwf	printf@fmt& (0+255),b
 12898  00035E  0EFD               	movlw	high STR_34
 12899  000360  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 12900  000362  0101               	movlb	1	; () banked
 12901  000364  5102               	movf	(_ModbusData+2)& (0+255),w,b
 12902  000366  0100               	movlb	0	; () banked
 12903  000368  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 12904  00036A  6B8F               	clrf	??_ModbusFC04& (0+255),b
 12905  00036C  0101               	movlb	1	; () banked
 12906  00036E  5103               	movf	(_ModbusData+3)& (0+255),w,b
 12907  000370  0100               	movlb	0	; () banked
 12908  000372  258F               	addwf	??_ModbusFC04& (0+255),w,b
 12909  000374  6F7F               	movwf	(?_printf+2)& (0+255),b
 12910  000376  0101               	movlb	1	; () banked
 12911  000378  0E00               	movlw	0
 12912  00037A  0100               	movlb	0	; () banked
 12913  00037C  2190               	addwfc	(??_ModbusFC04+1)& (0+255),w,b
 12914  00037E  6F80               	movwf	(?_printf+3)& (0+255),b
 12915  000380  0101               	movlb	1	; () banked
 12916  000382  5104               	movf	(_ModbusData+4)& (0+255),w,b
 12917  000384  0100               	movlb	0	; () banked
 12918  000386  6F92               	movwf	(??_ModbusFC04+3)& (0+255),b
 12919  000388  6B91               	clrf	(??_ModbusFC04+2)& (0+255),b
 12920  00038A  0101               	movlb	1	; () banked
 12921  00038C  5103               	movf	(_ModbusData+3)& (0+255),w,b
 12922  00038E  C102  F093         	movff	_ModbusData+2,??_ModbusFC04+4
 12923  000392  0100               	movlb	0	; () banked
 12924  000394  6B94               	clrf	(??_ModbusFC04+5)& (0+255),b
 12925  000396  C093  F094         	movff	??_ModbusFC04+4,??_ModbusFC04+5
 12926  00039A  6B93               	clrf	(??_ModbusFC04+4)& (0+255),b
 12927  00039C  2793               	addwf	(??_ModbusFC04+4)& (0+255),f,b
 12928  00039E  0E00               	movlw	0
 12929  0003A0  2394               	addwfc	(??_ModbusFC04+5)& (0+255),f,b
 12930  0003A2  5191               	movf	(??_ModbusFC04+2)& (0+255),w,b
 12931  0003A4  2793               	addwf	(??_ModbusFC04+4)& (0+255),f,b
 12932  0003A6  5192               	movf	(??_ModbusFC04+3)& (0+255),w,b
 12933  0003A8  2394               	addwfc	(??_ModbusFC04+5)& (0+255),f,b
 12934  0003AA  0101               	movlb	1	; () banked
 12935  0003AC  5105               	movf	(_ModbusData+5)& (0+255),w,b
 12936  0003AE  0100               	movlb	0	; () banked
 12937  0003B0  2593               	addwf	(??_ModbusFC04+4)& (0+255),w,b
 12938  0003B2  6F81               	movwf	(?_printf+4)& (0+255),b
 12939  0003B4  0101               	movlb	1	; () banked
 12940  0003B6  0E00               	movlw	0
 12941  0003B8  0100               	movlb	0	; () banked
 12942  0003BA  2194               	addwfc	(??_ModbusFC04+5)& (0+255),w,b
 12943  0003BC  6F82               	movwf	(?_printf+5)& (0+255),b
 12944  0003BE  EC8A  F028         	call	_printf	;wreg free
 12945  0003C2  EF4C  F001         	goto	l8258
 12946  0003C6                     l8270:
 12947                           
 12948                           ; BSR set to: 0
 12949                           ;Modbus.c: 302:         {;Modbus.c: 303:             printf("Requested Revision\r\n");
 12950  0003C6  0ED3               	movlw	low STR_43
 12951  0003C8  6F7D               	movwf	printf@fmt& (0+255),b
 12952  0003CA  0EFE               	movlw	high STR_43
 12953  0003CC  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 12954  0003CE  EC8A  F028         	call	_printf	;wreg free
 12955  0003D2                     
 12956                           ;Modbus.c: 304:             if(
 12957  0003D2  0101               	movlb	1	; () banked
 12958  0003D4  5102               	movf	(_ModbusData+2)& (0+255),w,b
 12959  0003D6  0100               	movlb	0	; () banked
 12960  0003D8  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 12961  0003DA  6B8F               	clrf	??_ModbusFC04& (0+255),b
 12962  0003DC  0101               	movlb	1	; () banked
 12963  0003DE  5105               	movf	(_ModbusData+5)& (0+255),w,b
 12964  0003E0  C104  F091         	movff	_ModbusData+4,??_ModbusFC04+2
 12965  0003E4  0100               	movlb	0	; () banked
 12966  0003E6  6B92               	clrf	(??_ModbusFC04+3)& (0+255),b
 12967  0003E8  C091  F092         	movff	??_ModbusFC04+2,??_ModbusFC04+3
 12968  0003EC  6B91               	clrf	(??_ModbusFC04+2)& (0+255),b
 12969  0003EE  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 12970  0003F0  0E00               	movlw	0
 12971  0003F2  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 12972  0003F4  518F               	movf	??_ModbusFC04& (0+255),w,b
 12973  0003F6  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 12974  0003F8  5190               	movf	(??_ModbusFC04+1)& (0+255),w,b
 12975  0003FA  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 12976  0003FC  0101               	movlb	1	; () banked
 12977  0003FE  5103               	movf	(_ModbusData+3)& (0+255),w,b
 12978  000400  0100               	movlb	0	; () banked
 12979  000402  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 12980  000404  0E00               	movlw	0
 12981  000406  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 12982  000408  BF92               	btfsc	(??_ModbusFC04+3)& (0+255),7,b
 12983  00040A  EF0E  F002         	goto	u8361
 12984  00040E  0E02               	movlw	2
 12985  000410  5D92               	subwf	(??_ModbusFC04+3)& (0+255),w,b
 12986  000412  A0D8               	btfss	status,0,c
 12987  000414  EF0E  F002         	goto	u8361
 12988  000418  EF10  F002         	goto	u8360
 12989  00041C                     u8361:
 12990  00041C  EF38  F002         	goto	l8276
 12991  000420                     u8360:
 12992  000420                     
 12993                           ; BSR set to: 0
 12994  000420  0101               	movlb	1	; () banked
 12995  000422  5102               	movf	(_ModbusData+2)& (0+255),w,b
 12996  000424  0100               	movlb	0	; () banked
 12997  000426  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 12998  000428  6B8F               	clrf	??_ModbusFC04& (0+255),b
 12999  00042A  0101               	movlb	1	; () banked
 13000  00042C  5105               	movf	(_ModbusData+5)& (0+255),w,b
 13001  00042E  C104  F091         	movff	_ModbusData+4,??_ModbusFC04+2
 13002  000432  0100               	movlb	0	; () banked
 13003  000434  6B92               	clrf	(??_ModbusFC04+3)& (0+255),b
 13004  000436  C091  F092         	movff	??_ModbusFC04+2,??_ModbusFC04+3
 13005  00043A  6B91               	clrf	(??_ModbusFC04+2)& (0+255),b
 13006  00043C  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 13007  00043E  0E00               	movlw	0
 13008  000440  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 13009  000442  518F               	movf	??_ModbusFC04& (0+255),w,b
 13010  000444  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 13011  000446  5190               	movf	(??_ModbusFC04+1)& (0+255),w,b
 13012  000448  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 13013  00044A  0101               	movlb	1	; () banked
 13014  00044C  5103               	movf	(_ModbusData+3)& (0+255),w,b
 13015  00044E  0100               	movlb	0	; () banked
 13016  000450  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 13017  000452  0E00               	movlw	0
 13018  000454  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 13019  000456  BF92               	btfsc	(??_ModbusFC04+3)& (0+255),7,b
 13020  000458  EF36  F002         	goto	u8371
 13021  00045C  0591               	decf	(??_ModbusFC04+2)& (0+255),w,b
 13022  00045E  0E02               	movlw	2
 13023  000460  5992               	subwfb	(??_ModbusFC04+3)& (0+255),w,b
 13024  000462  A0D8               	btfss	status,0,c
 13025  000464  EF36  F002         	goto	u8371
 13026  000468  EF38  F002         	goto	u8370
 13027  00046C                     u8371:
 13028  00046C  EFEC  F004         	goto	l8324
 13029  000470                     u8370:
 13030  000470                     l8276:
 13031                           
 13032                           ; BSR set to: 0
 13033                           ;Modbus.c: 306:                 (((ModbusData[2] * 256) + ModbusData[3]) + ((ModbusData[
      +                          4] * 256) + ModbusData[5]) > 512)){;Modbus.c: 308:                 printf("Registers out
      +                           of range.\r\nValid: 0x0512.\r\n");
 13034  000470  0EA3               	movlw	low STR_44
 13035  000472  6F7D               	movwf	printf@fmt& (0+255),b
 13036  000474  0EF9               	movlw	high STR_44
 13037  000476  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 13038  000478  EC8A  F028         	call	_printf	;wreg free
 13039                           
 13040                           ;Modbus.c: 309:                 printf("Requested: 0x%04x to 0x%04x\r\n", ModbusData[2] 
      +                          * 256 + ModbusData[3],
 13041  00047C  0E35               	movlw	low STR_34
 13042  00047E  0100               	movlb	0	; () banked
 13043  000480  6F7D               	movwf	printf@fmt& (0+255),b
 13044  000482  0EFD               	movlw	high STR_34
 13045  000484  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 13046  000486  0101               	movlb	1	; () banked
 13047  000488  5102               	movf	(_ModbusData+2)& (0+255),w,b
 13048  00048A  0100               	movlb	0	; () banked
 13049  00048C  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 13050  00048E  6B8F               	clrf	??_ModbusFC04& (0+255),b
 13051  000490  0101               	movlb	1	; () banked
 13052  000492  5103               	movf	(_ModbusData+3)& (0+255),w,b
 13053  000494  0100               	movlb	0	; () banked
 13054  000496  258F               	addwf	??_ModbusFC04& (0+255),w,b
 13055  000498  6F7F               	movwf	(?_printf+2)& (0+255),b
 13056  00049A  0101               	movlb	1	; () banked
 13057  00049C  0E00               	movlw	0
 13058  00049E  0100               	movlb	0	; () banked
 13059  0004A0  2190               	addwfc	(??_ModbusFC04+1)& (0+255),w,b
 13060  0004A2  6F80               	movwf	(?_printf+3)& (0+255),b
 13061  0004A4  0101               	movlb	1	; () banked
 13062  0004A6  5104               	movf	(_ModbusData+4)& (0+255),w,b
 13063  0004A8  0100               	movlb	0	; () banked
 13064  0004AA  6F92               	movwf	(??_ModbusFC04+3)& (0+255),b
 13065  0004AC  6B91               	clrf	(??_ModbusFC04+2)& (0+255),b
 13066  0004AE  0101               	movlb	1	; () banked
 13067  0004B0  5103               	movf	(_ModbusData+3)& (0+255),w,b
 13068  0004B2  C102  F093         	movff	_ModbusData+2,??_ModbusFC04+4
 13069  0004B6  0100               	movlb	0	; () banked
 13070  0004B8  6B94               	clrf	(??_ModbusFC04+5)& (0+255),b
 13071  0004BA  C093  F094         	movff	??_ModbusFC04+4,??_ModbusFC04+5
 13072  0004BE  6B93               	clrf	(??_ModbusFC04+4)& (0+255),b
 13073  0004C0  2793               	addwf	(??_ModbusFC04+4)& (0+255),f,b
 13074  0004C2  0E00               	movlw	0
 13075  0004C4  2394               	addwfc	(??_ModbusFC04+5)& (0+255),f,b
 13076  0004C6  5191               	movf	(??_ModbusFC04+2)& (0+255),w,b
 13077  0004C8  2793               	addwf	(??_ModbusFC04+4)& (0+255),f,b
 13078  0004CA  5192               	movf	(??_ModbusFC04+3)& (0+255),w,b
 13079  0004CC  2394               	addwfc	(??_ModbusFC04+5)& (0+255),f,b
 13080  0004CE  0101               	movlb	1	; () banked
 13081  0004D0  5105               	movf	(_ModbusData+5)& (0+255),w,b
 13082  0004D2  0100               	movlb	0	; () banked
 13083  0004D4  2593               	addwf	(??_ModbusFC04+4)& (0+255),w,b
 13084  0004D6  6F81               	movwf	(?_printf+4)& (0+255),b
 13085  0004D8  0101               	movlb	1	; () banked
 13086  0004DA  0E00               	movlw	0
 13087  0004DC  0100               	movlb	0	; () banked
 13088  0004DE  2194               	addwfc	(??_ModbusFC04+5)& (0+255),w,b
 13089  0004E0  6F82               	movwf	(?_printf+5)& (0+255),b
 13090  0004E2  EC8A  F028         	call	_printf	;wreg free
 13091  0004E6  EF4C  F001         	goto	l8258
 13092  0004EA                     l8280:
 13093                           
 13094                           ; BSR set to: 0
 13095                           ;Modbus.c: 316:         {;Modbus.c: 317:             printf("Requested Serial No.\r\n");
 13096  0004EA  0E3C               	movlw	low STR_46
 13097  0004EC  6F7D               	movwf	printf@fmt& (0+255),b
 13098  0004EE  0EFE               	movlw	high STR_46
 13099  0004F0  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 13100  0004F2  EC8A  F028         	call	_printf	;wreg free
 13101  0004F6                     
 13102                           ;Modbus.c: 318:             if(
 13103  0004F6  0101               	movlb	1	; () banked
 13104  0004F8  5102               	movf	(_ModbusData+2)& (0+255),w,b
 13105  0004FA  0100               	movlb	0	; () banked
 13106  0004FC  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 13107  0004FE  6B8F               	clrf	??_ModbusFC04& (0+255),b
 13108  000500  0101               	movlb	1	; () banked
 13109  000502  5105               	movf	(_ModbusData+5)& (0+255),w,b
 13110  000504  C104  F091         	movff	_ModbusData+4,??_ModbusFC04+2
 13111  000508  0100               	movlb	0	; () banked
 13112  00050A  6B92               	clrf	(??_ModbusFC04+3)& (0+255),b
 13113  00050C  C091  F092         	movff	??_ModbusFC04+2,??_ModbusFC04+3
 13114  000510  6B91               	clrf	(??_ModbusFC04+2)& (0+255),b
 13115  000512  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 13116  000514  0E00               	movlw	0
 13117  000516  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 13118  000518  518F               	movf	??_ModbusFC04& (0+255),w,b
 13119  00051A  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 13120  00051C  5190               	movf	(??_ModbusFC04+1)& (0+255),w,b
 13121  00051E  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 13122  000520  0101               	movlb	1	; () banked
 13123  000522  5103               	movf	(_ModbusData+3)& (0+255),w,b
 13124  000524  0100               	movlb	0	; () banked
 13125  000526  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 13126  000528  0E00               	movlw	0
 13127  00052A  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 13128  00052C  BF92               	btfsc	(??_ModbusFC04+3)& (0+255),7,b
 13129  00052E  EFA0  F002         	goto	u8381
 13130  000532  0E03               	movlw	3
 13131  000534  5D92               	subwf	(??_ModbusFC04+3)& (0+255),w,b
 13132  000536  A0D8               	btfss	status,0,c
 13133  000538  EFA0  F002         	goto	u8381
 13134  00053C  EFA2  F002         	goto	u8380
 13135  000540                     u8381:
 13136  000540  EFCB  F002         	goto	l8286
 13137  000544                     u8380:
 13138  000544                     
 13139                           ; BSR set to: 0
 13140  000544  0101               	movlb	1	; () banked
 13141  000546  5102               	movf	(_ModbusData+2)& (0+255),w,b
 13142  000548  0100               	movlb	0	; () banked
 13143  00054A  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 13144  00054C  6B8F               	clrf	??_ModbusFC04& (0+255),b
 13145  00054E  0101               	movlb	1	; () banked
 13146  000550  5105               	movf	(_ModbusData+5)& (0+255),w,b
 13147  000552  C104  F091         	movff	_ModbusData+4,??_ModbusFC04+2
 13148  000556  0100               	movlb	0	; () banked
 13149  000558  6B92               	clrf	(??_ModbusFC04+3)& (0+255),b
 13150  00055A  C091  F092         	movff	??_ModbusFC04+2,??_ModbusFC04+3
 13151  00055E  6B91               	clrf	(??_ModbusFC04+2)& (0+255),b
 13152  000560  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 13153  000562  0E00               	movlw	0
 13154  000564  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 13155  000566  518F               	movf	??_ModbusFC04& (0+255),w,b
 13156  000568  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 13157  00056A  5190               	movf	(??_ModbusFC04+1)& (0+255),w,b
 13158  00056C  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 13159  00056E  0101               	movlb	1	; () banked
 13160  000570  5103               	movf	(_ModbusData+3)& (0+255),w,b
 13161  000572  0100               	movlb	0	; () banked
 13162  000574  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 13163  000576  0E00               	movlw	0
 13164  000578  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 13165  00057A  BF92               	btfsc	(??_ModbusFC04+3)& (0+255),7,b
 13166  00057C  EFC9  F002         	goto	u8391
 13167  000580  0E05               	movlw	5
 13168  000582  5D91               	subwf	(??_ModbusFC04+2)& (0+255),w,b
 13169  000584  0E03               	movlw	3
 13170  000586  5992               	subwfb	(??_ModbusFC04+3)& (0+255),w,b
 13171  000588  A0D8               	btfss	status,0,c
 13172  00058A  EFC9  F002         	goto	u8391
 13173  00058E  EFCB  F002         	goto	u8390
 13174  000592                     u8391:
 13175  000592  EFEC  F004         	goto	l8324
 13176  000596                     u8390:
 13177  000596                     l8286:
 13178                           
 13179                           ; BSR set to: 0
 13180                           ;Modbus.c: 320:                 (((ModbusData[2] * 256) + ModbusData[3]) + ((ModbusData[
      +                          4] * 256) + ModbusData[5]) > 772)){;Modbus.c: 322:                 printf("Registers out
      +                           of range.\r\nValid: 0x0300 to 0x0304.\r\n");
 13181  000596  0EF4               	movlw	low STR_47
 13182  000598  6F7D               	movwf	printf@fmt& (0+255),b
 13183  00059A  0EF7               	movlw	high STR_47
 13184  00059C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 13185  00059E  EC8A  F028         	call	_printf	;wreg free
 13186                           
 13187                           ;Modbus.c: 323:                 printf("Requested: 0x%04x to 0x%04x\r\n", ModbusData[2] 
      +                          * 256 + ModbusData[3],
 13188  0005A2  0E35               	movlw	low STR_34
 13189  0005A4  0100               	movlb	0	; () banked
 13190  0005A6  6F7D               	movwf	printf@fmt& (0+255),b
 13191  0005A8  0EFD               	movlw	high STR_34
 13192  0005AA  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 13193  0005AC  0101               	movlb	1	; () banked
 13194  0005AE  5102               	movf	(_ModbusData+2)& (0+255),w,b
 13195  0005B0  0100               	movlb	0	; () banked
 13196  0005B2  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 13197  0005B4  6B8F               	clrf	??_ModbusFC04& (0+255),b
 13198  0005B6  0101               	movlb	1	; () banked
 13199  0005B8  5103               	movf	(_ModbusData+3)& (0+255),w,b
 13200  0005BA  0100               	movlb	0	; () banked
 13201  0005BC  258F               	addwf	??_ModbusFC04& (0+255),w,b
 13202  0005BE  6F7F               	movwf	(?_printf+2)& (0+255),b
 13203  0005C0  0101               	movlb	1	; () banked
 13204  0005C2  0E00               	movlw	0
 13205  0005C4  0100               	movlb	0	; () banked
 13206  0005C6  2190               	addwfc	(??_ModbusFC04+1)& (0+255),w,b
 13207  0005C8  6F80               	movwf	(?_printf+3)& (0+255),b
 13208  0005CA  0101               	movlb	1	; () banked
 13209  0005CC  5104               	movf	(_ModbusData+4)& (0+255),w,b
 13210  0005CE  0100               	movlb	0	; () banked
 13211  0005D0  6F92               	movwf	(??_ModbusFC04+3)& (0+255),b
 13212  0005D2  6B91               	clrf	(??_ModbusFC04+2)& (0+255),b
 13213  0005D4  0101               	movlb	1	; () banked
 13214  0005D6  5103               	movf	(_ModbusData+3)& (0+255),w,b
 13215  0005D8  C102  F093         	movff	_ModbusData+2,??_ModbusFC04+4
 13216  0005DC  0100               	movlb	0	; () banked
 13217  0005DE  6B94               	clrf	(??_ModbusFC04+5)& (0+255),b
 13218  0005E0  C093  F094         	movff	??_ModbusFC04+4,??_ModbusFC04+5
 13219  0005E4  6B93               	clrf	(??_ModbusFC04+4)& (0+255),b
 13220  0005E6  2793               	addwf	(??_ModbusFC04+4)& (0+255),f,b
 13221  0005E8  0E00               	movlw	0
 13222  0005EA  2394               	addwfc	(??_ModbusFC04+5)& (0+255),f,b
 13223  0005EC  5191               	movf	(??_ModbusFC04+2)& (0+255),w,b
 13224  0005EE  2793               	addwf	(??_ModbusFC04+4)& (0+255),f,b
 13225  0005F0  5192               	movf	(??_ModbusFC04+3)& (0+255),w,b
 13226  0005F2  2394               	addwfc	(??_ModbusFC04+5)& (0+255),f,b
 13227  0005F4  0101               	movlb	1	; () banked
 13228  0005F6  5105               	movf	(_ModbusData+5)& (0+255),w,b
 13229  0005F8  0100               	movlb	0	; () banked
 13230  0005FA  2593               	addwf	(??_ModbusFC04+4)& (0+255),w,b
 13231  0005FC  6F81               	movwf	(?_printf+4)& (0+255),b
 13232  0005FE  0101               	movlb	1	; () banked
 13233  000600  0E00               	movlw	0
 13234  000602  0100               	movlb	0	; () banked
 13235  000604  2194               	addwfc	(??_ModbusFC04+5)& (0+255),w,b
 13236  000606  6F82               	movwf	(?_printf+5)& (0+255),b
 13237  000608  EC8A  F028         	call	_printf	;wreg free
 13238  00060C  EF4C  F001         	goto	l8258
 13239  000610                     l8290:
 13240                           
 13241                           ; BSR set to: 0
 13242                           ;Modbus.c: 330:         {;Modbus.c: 331:             printf("Requested Compile Date\r\n"
      +                          );
 13243  000610  0E0B               	movlw	low STR_49
 13244  000612  6F7D               	movwf	printf@fmt& (0+255),b
 13245  000614  0EFE               	movlw	high STR_49
 13246  000616  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 13247  000618  EC8A  F028         	call	_printf	;wreg free
 13248  00061C                     
 13249                           ;Modbus.c: 332:             if(
 13250  00061C  0101               	movlb	1	; () banked
 13251  00061E  5102               	movf	(_ModbusData+2)& (0+255),w,b
 13252  000620  0100               	movlb	0	; () banked
 13253  000622  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 13254  000624  6B8F               	clrf	??_ModbusFC04& (0+255),b
 13255  000626  0101               	movlb	1	; () banked
 13256  000628  5105               	movf	(_ModbusData+5)& (0+255),w,b
 13257  00062A  C104  F091         	movff	_ModbusData+4,??_ModbusFC04+2
 13258  00062E  0100               	movlb	0	; () banked
 13259  000630  6B92               	clrf	(??_ModbusFC04+3)& (0+255),b
 13260  000632  C091  F092         	movff	??_ModbusFC04+2,??_ModbusFC04+3
 13261  000636  6B91               	clrf	(??_ModbusFC04+2)& (0+255),b
 13262  000638  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 13263  00063A  0E00               	movlw	0
 13264  00063C  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 13265  00063E  518F               	movf	??_ModbusFC04& (0+255),w,b
 13266  000640  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 13267  000642  5190               	movf	(??_ModbusFC04+1)& (0+255),w,b
 13268  000644  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 13269  000646  0101               	movlb	1	; () banked
 13270  000648  5103               	movf	(_ModbusData+3)& (0+255),w,b
 13271  00064A  0100               	movlb	0	; () banked
 13272  00064C  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 13273  00064E  0E00               	movlw	0
 13274  000650  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 13275  000652  BF92               	btfsc	(??_ModbusFC04+3)& (0+255),7,b
 13276  000654  EF33  F003         	goto	u8401
 13277  000658  0E04               	movlw	4
 13278  00065A  5D92               	subwf	(??_ModbusFC04+3)& (0+255),w,b
 13279  00065C  A0D8               	btfss	status,0,c
 13280  00065E  EF33  F003         	goto	u8401
 13281  000662  EF35  F003         	goto	u8400
 13282  000666                     u8401:
 13283  000666  EF5E  F003         	goto	l8296
 13284  00066A                     u8400:
 13285  00066A                     
 13286                           ; BSR set to: 0
 13287  00066A  0101               	movlb	1	; () banked
 13288  00066C  5102               	movf	(_ModbusData+2)& (0+255),w,b
 13289  00066E  0100               	movlb	0	; () banked
 13290  000670  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 13291  000672  6B8F               	clrf	??_ModbusFC04& (0+255),b
 13292  000674  0101               	movlb	1	; () banked
 13293  000676  5105               	movf	(_ModbusData+5)& (0+255),w,b
 13294  000678  C104  F091         	movff	_ModbusData+4,??_ModbusFC04+2
 13295  00067C  0100               	movlb	0	; () banked
 13296  00067E  6B92               	clrf	(??_ModbusFC04+3)& (0+255),b
 13297  000680  C091  F092         	movff	??_ModbusFC04+2,??_ModbusFC04+3
 13298  000684  6B91               	clrf	(??_ModbusFC04+2)& (0+255),b
 13299  000686  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 13300  000688  0E00               	movlw	0
 13301  00068A  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 13302  00068C  518F               	movf	??_ModbusFC04& (0+255),w,b
 13303  00068E  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 13304  000690  5190               	movf	(??_ModbusFC04+1)& (0+255),w,b
 13305  000692  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 13306  000694  0101               	movlb	1	; () banked
 13307  000696  5103               	movf	(_ModbusData+3)& (0+255),w,b
 13308  000698  0100               	movlb	0	; () banked
 13309  00069A  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 13310  00069C  0E00               	movlw	0
 13311  00069E  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 13312  0006A0  BF92               	btfsc	(??_ModbusFC04+3)& (0+255),7,b
 13313  0006A2  EF5C  F003         	goto	u8411
 13314  0006A6  0E06               	movlw	6
 13315  0006A8  5D91               	subwf	(??_ModbusFC04+2)& (0+255),w,b
 13316  0006AA  0E04               	movlw	4
 13317  0006AC  5992               	subwfb	(??_ModbusFC04+3)& (0+255),w,b
 13318  0006AE  A0D8               	btfss	status,0,c
 13319  0006B0  EF5C  F003         	goto	u8411
 13320  0006B4  EF5E  F003         	goto	u8410
 13321  0006B8                     u8411:
 13322  0006B8  EFEC  F004         	goto	l8324
 13323  0006BC                     u8410:
 13324  0006BC                     l8296:
 13325                           
 13326                           ; BSR set to: 0
 13327                           ;Modbus.c: 334:                 (((ModbusData[2] * 256) + ModbusData[3]) + ((ModbusData[
      +                          4] * 256) + ModbusData[5]) > 1029)){;Modbus.c: 336:                 printf("Registers ou
      +                          t of range.\r\nValid: 0x0400 to 0x0405.\r\n");
 13328  0006BC  0E28               	movlw	low STR_50
 13329  0006BE  6F7D               	movwf	printf@fmt& (0+255),b
 13330  0006C0  0EF8               	movlw	high STR_50
 13331  0006C2  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 13332  0006C4  EC8A  F028         	call	_printf	;wreg free
 13333                           
 13334                           ;Modbus.c: 338:                 printf("Requested: 0x%04x to 0x%04x\r\n", ModbusData[2] 
      +                          * 256 + ModbusData[3],
 13335  0006C8  0E35               	movlw	low STR_34
 13336  0006CA  0100               	movlb	0	; () banked
 13337  0006CC  6F7D               	movwf	printf@fmt& (0+255),b
 13338  0006CE  0EFD               	movlw	high STR_34
 13339  0006D0  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 13340  0006D2  0101               	movlb	1	; () banked
 13341  0006D4  5102               	movf	(_ModbusData+2)& (0+255),w,b
 13342  0006D6  0100               	movlb	0	; () banked
 13343  0006D8  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 13344  0006DA  6B8F               	clrf	??_ModbusFC04& (0+255),b
 13345  0006DC  0101               	movlb	1	; () banked
 13346  0006DE  5103               	movf	(_ModbusData+3)& (0+255),w,b
 13347  0006E0  0100               	movlb	0	; () banked
 13348  0006E2  258F               	addwf	??_ModbusFC04& (0+255),w,b
 13349  0006E4  6F7F               	movwf	(?_printf+2)& (0+255),b
 13350  0006E6  0101               	movlb	1	; () banked
 13351  0006E8  0E00               	movlw	0
 13352  0006EA  0100               	movlb	0	; () banked
 13353  0006EC  2190               	addwfc	(??_ModbusFC04+1)& (0+255),w,b
 13354  0006EE  6F80               	movwf	(?_printf+3)& (0+255),b
 13355  0006F0  0101               	movlb	1	; () banked
 13356  0006F2  5104               	movf	(_ModbusData+4)& (0+255),w,b
 13357  0006F4  0100               	movlb	0	; () banked
 13358  0006F6  6F92               	movwf	(??_ModbusFC04+3)& (0+255),b
 13359  0006F8  6B91               	clrf	(??_ModbusFC04+2)& (0+255),b
 13360  0006FA  0101               	movlb	1	; () banked
 13361  0006FC  5103               	movf	(_ModbusData+3)& (0+255),w,b
 13362  0006FE  C102  F093         	movff	_ModbusData+2,??_ModbusFC04+4
 13363  000702  0100               	movlb	0	; () banked
 13364  000704  6B94               	clrf	(??_ModbusFC04+5)& (0+255),b
 13365  000706  C093  F094         	movff	??_ModbusFC04+4,??_ModbusFC04+5
 13366  00070A  6B93               	clrf	(??_ModbusFC04+4)& (0+255),b
 13367  00070C  2793               	addwf	(??_ModbusFC04+4)& (0+255),f,b
 13368  00070E  0E00               	movlw	0
 13369  000710  2394               	addwfc	(??_ModbusFC04+5)& (0+255),f,b
 13370  000712  5191               	movf	(??_ModbusFC04+2)& (0+255),w,b
 13371  000714  2793               	addwf	(??_ModbusFC04+4)& (0+255),f,b
 13372  000716  5192               	movf	(??_ModbusFC04+3)& (0+255),w,b
 13373  000718  2394               	addwfc	(??_ModbusFC04+5)& (0+255),f,b
 13374  00071A  0101               	movlb	1	; () banked
 13375  00071C  5105               	movf	(_ModbusData+5)& (0+255),w,b
 13376  00071E  0100               	movlb	0	; () banked
 13377  000720  2593               	addwf	(??_ModbusFC04+4)& (0+255),w,b
 13378  000722  6F81               	movwf	(?_printf+4)& (0+255),b
 13379  000724  0101               	movlb	1	; () banked
 13380  000726  0E00               	movlw	0
 13381  000728  0100               	movlb	0	; () banked
 13382  00072A  2194               	addwfc	(??_ModbusFC04+5)& (0+255),w,b
 13383  00072C  6F82               	movwf	(?_printf+5)& (0+255),b
 13384  00072E  EC8A  F028         	call	_printf	;wreg free
 13385  000732  EF4C  F001         	goto	l8258
 13386  000736                     l8300:
 13387                           
 13388                           ; BSR set to: 0
 13389                           ;Modbus.c: 345:         {;Modbus.c: 346:             printf("Requested Compile Time\r\n"
      +                          );
 13390  000736  0EF2               	movlw	low STR_52
 13391  000738  6F7D               	movwf	printf@fmt& (0+255),b
 13392  00073A  0EFD               	movlw	high STR_52
 13393  00073C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 13394  00073E  EC8A  F028         	call	_printf	;wreg free
 13395  000742                     
 13396                           ;Modbus.c: 348:             if(
 13397  000742  0101               	movlb	1	; () banked
 13398  000744  5102               	movf	(_ModbusData+2)& (0+255),w,b
 13399  000746  0100               	movlb	0	; () banked
 13400  000748  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 13401  00074A  6B8F               	clrf	??_ModbusFC04& (0+255),b
 13402  00074C  0101               	movlb	1	; () banked
 13403  00074E  5105               	movf	(_ModbusData+5)& (0+255),w,b
 13404  000750  C104  F091         	movff	_ModbusData+4,??_ModbusFC04+2
 13405  000754  0100               	movlb	0	; () banked
 13406  000756  6B92               	clrf	(??_ModbusFC04+3)& (0+255),b
 13407  000758  C091  F092         	movff	??_ModbusFC04+2,??_ModbusFC04+3
 13408  00075C  6B91               	clrf	(??_ModbusFC04+2)& (0+255),b
 13409  00075E  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 13410  000760  0E00               	movlw	0
 13411  000762  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 13412  000764  518F               	movf	??_ModbusFC04& (0+255),w,b
 13413  000766  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 13414  000768  5190               	movf	(??_ModbusFC04+1)& (0+255),w,b
 13415  00076A  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 13416  00076C  0101               	movlb	1	; () banked
 13417  00076E  5103               	movf	(_ModbusData+3)& (0+255),w,b
 13418  000770  0100               	movlb	0	; () banked
 13419  000772  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 13420  000774  0E00               	movlw	0
 13421  000776  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 13422  000778  BF92               	btfsc	(??_ModbusFC04+3)& (0+255),7,b
 13423  00077A  EFC6  F003         	goto	u8421
 13424  00077E  0E05               	movlw	5
 13425  000780  5D92               	subwf	(??_ModbusFC04+3)& (0+255),w,b
 13426  000782  A0D8               	btfss	status,0,c
 13427  000784  EFC6  F003         	goto	u8421
 13428  000788  EFC8  F003         	goto	u8420
 13429  00078C                     u8421:
 13430  00078C  EFF1  F003         	goto	l8306
 13431  000790                     u8420:
 13432  000790                     
 13433                           ; BSR set to: 0
 13434  000790  0101               	movlb	1	; () banked
 13435  000792  5102               	movf	(_ModbusData+2)& (0+255),w,b
 13436  000794  0100               	movlb	0	; () banked
 13437  000796  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 13438  000798  6B8F               	clrf	??_ModbusFC04& (0+255),b
 13439  00079A  0101               	movlb	1	; () banked
 13440  00079C  5105               	movf	(_ModbusData+5)& (0+255),w,b
 13441  00079E  C104  F091         	movff	_ModbusData+4,??_ModbusFC04+2
 13442  0007A2  0100               	movlb	0	; () banked
 13443  0007A4  6B92               	clrf	(??_ModbusFC04+3)& (0+255),b
 13444  0007A6  C091  F092         	movff	??_ModbusFC04+2,??_ModbusFC04+3
 13445  0007AA  6B91               	clrf	(??_ModbusFC04+2)& (0+255),b
 13446  0007AC  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 13447  0007AE  0E00               	movlw	0
 13448  0007B0  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 13449  0007B2  518F               	movf	??_ModbusFC04& (0+255),w,b
 13450  0007B4  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 13451  0007B6  5190               	movf	(??_ModbusFC04+1)& (0+255),w,b
 13452  0007B8  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 13453  0007BA  0101               	movlb	1	; () banked
 13454  0007BC  5103               	movf	(_ModbusData+3)& (0+255),w,b
 13455  0007BE  0100               	movlb	0	; () banked
 13456  0007C0  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 13457  0007C2  0E00               	movlw	0
 13458  0007C4  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 13459  0007C6  BF92               	btfsc	(??_ModbusFC04+3)& (0+255),7,b
 13460  0007C8  EFEF  F003         	goto	u8431
 13461  0007CC  0E04               	movlw	4
 13462  0007CE  5D91               	subwf	(??_ModbusFC04+2)& (0+255),w,b
 13463  0007D0  0E05               	movlw	5
 13464  0007D2  5992               	subwfb	(??_ModbusFC04+3)& (0+255),w,b
 13465  0007D4  A0D8               	btfss	status,0,c
 13466  0007D6  EFEF  F003         	goto	u8431
 13467  0007DA  EFF1  F003         	goto	u8430
 13468  0007DE                     u8431:
 13469  0007DE  EFEC  F004         	goto	l8324
 13470  0007E2                     u8430:
 13471  0007E2                     l8306:
 13472                           
 13473                           ; BSR set to: 0
 13474                           ;Modbus.c: 350:                 (((ModbusData[2] * 256) + ModbusData[3]) + ((ModbusData[
      +                          4] * 256) + ModbusData[5]) > 1283)){;Modbus.c: 352:                 printf("Registers ou
      +                          t of range.\r\nValid: 0x0500 to 0x0503.\r\n");
 13475  0007E2  0EC0               	movlw	low STR_53
 13476  0007E4  6F7D               	movwf	printf@fmt& (0+255),b
 13477  0007E6  0EF7               	movlw	high STR_53
 13478  0007E8  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 13479  0007EA  EC8A  F028         	call	_printf	;wreg free
 13480                           
 13481                           ;Modbus.c: 354:                 printf("Requested: 0x%04x to 0x%04x\r\n", ModbusData[2] 
      +                          * 256 + ModbusData[3],
 13482  0007EE  0E35               	movlw	low STR_34
 13483  0007F0  0100               	movlb	0	; () banked
 13484  0007F2  6F7D               	movwf	printf@fmt& (0+255),b
 13485  0007F4  0EFD               	movlw	high STR_34
 13486  0007F6  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 13487  0007F8  0101               	movlb	1	; () banked
 13488  0007FA  5102               	movf	(_ModbusData+2)& (0+255),w,b
 13489  0007FC  0100               	movlb	0	; () banked
 13490  0007FE  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 13491  000800  6B8F               	clrf	??_ModbusFC04& (0+255),b
 13492  000802  0101               	movlb	1	; () banked
 13493  000804  5103               	movf	(_ModbusData+3)& (0+255),w,b
 13494  000806  0100               	movlb	0	; () banked
 13495  000808  258F               	addwf	??_ModbusFC04& (0+255),w,b
 13496  00080A  6F7F               	movwf	(?_printf+2)& (0+255),b
 13497  00080C  0101               	movlb	1	; () banked
 13498  00080E  0E00               	movlw	0
 13499  000810  0100               	movlb	0	; () banked
 13500  000812  2190               	addwfc	(??_ModbusFC04+1)& (0+255),w,b
 13501  000814  6F80               	movwf	(?_printf+3)& (0+255),b
 13502  000816  0101               	movlb	1	; () banked
 13503  000818  5104               	movf	(_ModbusData+4)& (0+255),w,b
 13504  00081A  0100               	movlb	0	; () banked
 13505  00081C  6F92               	movwf	(??_ModbusFC04+3)& (0+255),b
 13506  00081E  6B91               	clrf	(??_ModbusFC04+2)& (0+255),b
 13507  000820  0101               	movlb	1	; () banked
 13508  000822  5103               	movf	(_ModbusData+3)& (0+255),w,b
 13509  000824  C102  F093         	movff	_ModbusData+2,??_ModbusFC04+4
 13510  000828  0100               	movlb	0	; () banked
 13511  00082A  6B94               	clrf	(??_ModbusFC04+5)& (0+255),b
 13512  00082C  C093  F094         	movff	??_ModbusFC04+4,??_ModbusFC04+5
 13513  000830  6B93               	clrf	(??_ModbusFC04+4)& (0+255),b
 13514  000832  2793               	addwf	(??_ModbusFC04+4)& (0+255),f,b
 13515  000834  0E00               	movlw	0
 13516  000836  2394               	addwfc	(??_ModbusFC04+5)& (0+255),f,b
 13517  000838  5191               	movf	(??_ModbusFC04+2)& (0+255),w,b
 13518  00083A  2793               	addwf	(??_ModbusFC04+4)& (0+255),f,b
 13519  00083C  5192               	movf	(??_ModbusFC04+3)& (0+255),w,b
 13520  00083E  2394               	addwfc	(??_ModbusFC04+5)& (0+255),f,b
 13521  000840  0101               	movlb	1	; () banked
 13522  000842  5105               	movf	(_ModbusData+5)& (0+255),w,b
 13523  000844  0100               	movlb	0	; () banked
 13524  000846  2593               	addwf	(??_ModbusFC04+4)& (0+255),w,b
 13525  000848  6F81               	movwf	(?_printf+4)& (0+255),b
 13526  00084A  0101               	movlb	1	; () banked
 13527  00084C  0E00               	movlw	0
 13528  00084E  0100               	movlb	0	; () banked
 13529  000850  2194               	addwfc	(??_ModbusFC04+5)& (0+255),w,b
 13530  000852  6F82               	movwf	(?_printf+5)& (0+255),b
 13531  000854  EC8A  F028         	call	_printf	;wreg free
 13532  000858  EF4C  F001         	goto	l8258
 13533  00085C                     l8310:
 13534                           
 13535                           ; BSR set to: 0
 13536                           ;Modbus.c: 361:         {;Modbus.c: 362:             printf("Requested Analogue Inputs\r
      +                          \n");
 13537  00085C  0E53               	movlw	low STR_55
 13538  00085E  6F7D               	movwf	printf@fmt& (0+255),b
 13539  000860  0EFD               	movlw	high STR_55
 13540  000862  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 13541  000864  EC8A  F028         	call	_printf	;wreg free
 13542  000868                     
 13543                           ;Modbus.c: 363:             if(
 13544  000868  0101               	movlb	1	; () banked
 13545  00086A  5102               	movf	(_ModbusData+2)& (0+255),w,b
 13546  00086C  0100               	movlb	0	; () banked
 13547  00086E  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 13548  000870  6B8F               	clrf	??_ModbusFC04& (0+255),b
 13549  000872  0101               	movlb	1	; () banked
 13550  000874  5105               	movf	(_ModbusData+5)& (0+255),w,b
 13551  000876  C104  F091         	movff	_ModbusData+4,??_ModbusFC04+2
 13552  00087A  0100               	movlb	0	; () banked
 13553  00087C  6B92               	clrf	(??_ModbusFC04+3)& (0+255),b
 13554  00087E  C091  F092         	movff	??_ModbusFC04+2,??_ModbusFC04+3
 13555  000882  6B91               	clrf	(??_ModbusFC04+2)& (0+255),b
 13556  000884  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 13557  000886  0E00               	movlw	0
 13558  000888  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 13559  00088A  518F               	movf	??_ModbusFC04& (0+255),w,b
 13560  00088C  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 13561  00088E  5190               	movf	(??_ModbusFC04+1)& (0+255),w,b
 13562  000890  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 13563  000892  0101               	movlb	1	; () banked
 13564  000894  5103               	movf	(_ModbusData+3)& (0+255),w,b
 13565  000896  0100               	movlb	0	; () banked
 13566  000898  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 13567  00089A  0E00               	movlw	0
 13568  00089C  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 13569  00089E  BF92               	btfsc	(??_ModbusFC04+3)& (0+255),7,b
 13570  0008A0  EF59  F004         	goto	u8441
 13571  0008A4  0E06               	movlw	6
 13572  0008A6  5D92               	subwf	(??_ModbusFC04+3)& (0+255),w,b
 13573  0008A8  A0D8               	btfss	status,0,c
 13574  0008AA  EF59  F004         	goto	u8441
 13575  0008AE  EF5B  F004         	goto	u8440
 13576  0008B2                     u8441:
 13577  0008B2  EF84  F004         	goto	l8316
 13578  0008B6                     u8440:
 13579  0008B6                     
 13580                           ; BSR set to: 0
 13581  0008B6  0101               	movlb	1	; () banked
 13582  0008B8  5102               	movf	(_ModbusData+2)& (0+255),w,b
 13583  0008BA  0100               	movlb	0	; () banked
 13584  0008BC  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 13585  0008BE  6B8F               	clrf	??_ModbusFC04& (0+255),b
 13586  0008C0  0101               	movlb	1	; () banked
 13587  0008C2  5105               	movf	(_ModbusData+5)& (0+255),w,b
 13588  0008C4  C104  F091         	movff	_ModbusData+4,??_ModbusFC04+2
 13589  0008C8  0100               	movlb	0	; () banked
 13590  0008CA  6B92               	clrf	(??_ModbusFC04+3)& (0+255),b
 13591  0008CC  C091  F092         	movff	??_ModbusFC04+2,??_ModbusFC04+3
 13592  0008D0  6B91               	clrf	(??_ModbusFC04+2)& (0+255),b
 13593  0008D2  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 13594  0008D4  0E00               	movlw	0
 13595  0008D6  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 13596  0008D8  518F               	movf	??_ModbusFC04& (0+255),w,b
 13597  0008DA  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 13598  0008DC  5190               	movf	(??_ModbusFC04+1)& (0+255),w,b
 13599  0008DE  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 13600  0008E0  0101               	movlb	1	; () banked
 13601  0008E2  5103               	movf	(_ModbusData+3)& (0+255),w,b
 13602  0008E4  0100               	movlb	0	; () banked
 13603  0008E6  2791               	addwf	(??_ModbusFC04+2)& (0+255),f,b
 13604  0008E8  0E00               	movlw	0
 13605  0008EA  2392               	addwfc	(??_ModbusFC04+3)& (0+255),f,b
 13606  0008EC  BF92               	btfsc	(??_ModbusFC04+3)& (0+255),7,b
 13607  0008EE  EF82  F004         	goto	u8451
 13608  0008F2  0E03               	movlw	3
 13609  0008F4  5D91               	subwf	(??_ModbusFC04+2)& (0+255),w,b
 13610  0008F6  0E06               	movlw	6
 13611  0008F8  5992               	subwfb	(??_ModbusFC04+3)& (0+255),w,b
 13612  0008FA  A0D8               	btfss	status,0,c
 13613  0008FC  EF82  F004         	goto	u8451
 13614  000900  EF84  F004         	goto	u8450
 13615  000904                     u8451:
 13616  000904  EFEC  F004         	goto	l8324
 13617  000908                     u8450:
 13618  000908                     l8316:
 13619                           
 13620                           ; BSR set to: 0
 13621                           ;Modbus.c: 365:                 (((ModbusData[2] * 256) + ModbusData[3]) + ((ModbusData[
      +                          4] * 256) + ModbusData[5]) > 1538)){;Modbus.c: 367:                 printf("Registers ou
      +                          t of range.\r\nValid: 0x0600 to 0x0602.\r\n");
 13622  000908  0E8C               	movlw	low STR_56
 13623  00090A  6F7D               	movwf	printf@fmt& (0+255),b
 13624  00090C  0EF7               	movlw	high STR_56
 13625  00090E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 13626  000910  EC8A  F028         	call	_printf	;wreg free
 13627                           
 13628                           ;Modbus.c: 368:                 printf("Requested: 0x%04x to 0x%04x\r\n", ModbusData[2] 
      +                          * 256 + ModbusData[3],
 13629  000914  0E35               	movlw	low STR_34
 13630  000916  0100               	movlb	0	; () banked
 13631  000918  6F7D               	movwf	printf@fmt& (0+255),b
 13632  00091A  0EFD               	movlw	high STR_34
 13633  00091C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 13634  00091E  0101               	movlb	1	; () banked
 13635  000920  5102               	movf	(_ModbusData+2)& (0+255),w,b
 13636  000922  0100               	movlb	0	; () banked
 13637  000924  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 13638  000926  6B8F               	clrf	??_ModbusFC04& (0+255),b
 13639  000928  0101               	movlb	1	; () banked
 13640  00092A  5103               	movf	(_ModbusData+3)& (0+255),w,b
 13641  00092C  0100               	movlb	0	; () banked
 13642  00092E  258F               	addwf	??_ModbusFC04& (0+255),w,b
 13643  000930  6F7F               	movwf	(?_printf+2)& (0+255),b
 13644  000932  0101               	movlb	1	; () banked
 13645  000934  0E00               	movlw	0
 13646  000936  0100               	movlb	0	; () banked
 13647  000938  2190               	addwfc	(??_ModbusFC04+1)& (0+255),w,b
 13648  00093A  6F80               	movwf	(?_printf+3)& (0+255),b
 13649  00093C  0101               	movlb	1	; () banked
 13650  00093E  5104               	movf	(_ModbusData+4)& (0+255),w,b
 13651  000940  0100               	movlb	0	; () banked
 13652  000942  6F92               	movwf	(??_ModbusFC04+3)& (0+255),b
 13653  000944  6B91               	clrf	(??_ModbusFC04+2)& (0+255),b
 13654  000946  0101               	movlb	1	; () banked
 13655  000948  5103               	movf	(_ModbusData+3)& (0+255),w,b
 13656  00094A  C102  F093         	movff	_ModbusData+2,??_ModbusFC04+4
 13657  00094E  0100               	movlb	0	; () banked
 13658  000950  6B94               	clrf	(??_ModbusFC04+5)& (0+255),b
 13659  000952  C093  F094         	movff	??_ModbusFC04+4,??_ModbusFC04+5
 13660  000956  6B93               	clrf	(??_ModbusFC04+4)& (0+255),b
 13661  000958  2793               	addwf	(??_ModbusFC04+4)& (0+255),f,b
 13662  00095A  0E00               	movlw	0
 13663  00095C  2394               	addwfc	(??_ModbusFC04+5)& (0+255),f,b
 13664  00095E  5191               	movf	(??_ModbusFC04+2)& (0+255),w,b
 13665  000960  2793               	addwf	(??_ModbusFC04+4)& (0+255),f,b
 13666  000962  5192               	movf	(??_ModbusFC04+3)& (0+255),w,b
 13667  000964  2394               	addwfc	(??_ModbusFC04+5)& (0+255),f,b
 13668  000966  0101               	movlb	1	; () banked
 13669  000968  5105               	movf	(_ModbusData+5)& (0+255),w,b
 13670  00096A  0100               	movlb	0	; () banked
 13671  00096C  2593               	addwf	(??_ModbusFC04+4)& (0+255),w,b
 13672  00096E  6F81               	movwf	(?_printf+4)& (0+255),b
 13673  000970  0101               	movlb	1	; () banked
 13674  000972  0E00               	movlw	0
 13675  000974  0100               	movlb	0	; () banked
 13676  000976  2194               	addwfc	(??_ModbusFC04+5)& (0+255),w,b
 13677  000978  6F82               	movwf	(?_printf+5)& (0+255),b
 13678  00097A  EC8A  F028         	call	_printf	;wreg free
 13679  00097E  EF4C  F001         	goto	l8258
 13680  000982                     l8322:
 13681                           
 13682                           ; BSR set to: 0
 13683  000982  0101               	movlb	1	; () banked
 13684  000984  5102               	movf	(_ModbusData+2)& (0+255),w,b
 13685  000986  0100               	movlb	0	; () banked
 13686  000988  6F8F               	movwf	??_ModbusFC04& (0+255),b
 13687  00098A  6B90               	clrf	(??_ModbusFC04+1)& (0+255),b
 13688                           
 13689                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13690                           ; Switch size 1, requested type "simple"
 13691                           ; Number of cases is 1, Range of values is 0 to 0
 13692                           ; switch strategies available:
 13693                           ; Name         Instructions Cycles
 13694                           ; simple_byte            4     3 (average)
 13695                           ;	Chosen strategy is simple_byte
 13696  00098C  5190               	movf	(??_ModbusFC04+1)& (0+255),w,b
 13697  00098E  0A00               	xorlw	0	; case 0
 13698  000990  B4D8               	btfsc	status,2,c
 13699  000992  EFCD  F004         	goto	l8764
 13700  000996  EFEC  F004         	goto	l8324
 13701  00099A                     l8764:
 13702                           
 13703                           ; BSR set to: 0
 13704                           ; Switch size 1, requested type "simple"
 13705                           ; Number of cases is 7, Range of values is 0 to 6
 13706                           ; switch strategies available:
 13707                           ; Name         Instructions Cycles
 13708                           ; simple_byte           22    12 (average)
 13709                           ;	Chosen strategy is simple_byte
 13710  00099A  518F               	movf	??_ModbusFC04& (0+255),w,b
 13711  00099C  0A00               	xorlw	0	; case 0
 13712  00099E  B4D8               	btfsc	status,2,c
 13713  0009A0  EFC0  F000         	goto	l8250
 13714  0009A4  0A01               	xorlw	1	; case 1
 13715  0009A6  B4D8               	btfsc	status,2,c
 13716  0009A8  EF51  F001         	goto	l8260
 13717  0009AC  0A03               	xorlw	3	; case 2
 13718  0009AE  B4D8               	btfsc	status,2,c
 13719  0009B0  EFE3  F001         	goto	l8270
 13720  0009B4  0A01               	xorlw	1	; case 3
 13721  0009B6  B4D8               	btfsc	status,2,c
 13722  0009B8  EF75  F002         	goto	l8280
 13723  0009BC  0A07               	xorlw	7	; case 4
 13724  0009BE  B4D8               	btfsc	status,2,c
 13725  0009C0  EF08  F003         	goto	l8290
 13726  0009C4  0A01               	xorlw	1	; case 5
 13727  0009C6  B4D8               	btfsc	status,2,c
 13728  0009C8  EF9B  F003         	goto	l8300
 13729  0009CC  0A03               	xorlw	3	; case 6
 13730  0009CE  B4D8               	btfsc	status,2,c
 13731  0009D0  EF2E  F004         	goto	l8310
 13732  0009D4  EFEC  F004         	goto	l8324
 13733  0009D8                     l8324:
 13734                           
 13735                           ; BSR set to: 0
 13736                           ;Modbus.c: 376:     if(error == 0){
 13737  0009D8  5197               	movf	ModbusFC04@error& (0+255),w,b
 13738  0009DA  A4D8               	btfss	status,2,c
 13739  0009DC  EFF2  F004         	goto	u8461
 13740  0009E0  EFF4  F004         	goto	u8460
 13741  0009E4                     u8461:
 13742  0009E4  EFE6  F006         	goto	l8386
 13743  0009E8                     u8460:
 13744  0009E8                     
 13745                           ; BSR set to: 0
 13746                           ;Modbus.c: 377:         for(i=0; i< (ModbusData[5]) ; i++ ){
 13747  0009E8  0E00               	movlw	0
 13748  0009EA  6F99               	movwf	(ModbusFC04@i+1)& (0+255),b
 13749  0009EC  0E00               	movlw	0
 13750  0009EE  6F98               	movwf	ModbusFC04@i& (0+255),b
 13751  0009F0  EF90  F006         	goto	l8372
 13752  0009F4                     l8328:
 13753                           
 13754                           ; BSR set to: 0
 13755                           ;Modbus.c: 382:             if(ModbusData[2] == 0x03){
 13756  0009F4  0E03               	movlw	3
 13757  0009F6  0101               	movlb	1	; () banked
 13758  0009F8  1902               	xorwf	(_ModbusData+2)& (0+255),w,b
 13759  0009FA  A4D8               	btfss	status,2,c
 13760  0009FC  EF02  F005         	goto	u8471
 13761  000A00  EF04  F005         	goto	u8470
 13762  000A04                     u8471:
 13763  000A04  EF35  F005         	goto	l8332
 13764  000A08                     u8470:
 13765  000A08                     
 13766                           ; BSR set to: 1
 13767                           ;Modbus.c: 384:                 ByteLo = MB303xx[ModbusData[3] +i] & 0x00FF;
 13768  000A08  5103               	movf	(_ModbusData+3)& (0+255),w,b
 13769  000A0A  0100               	movlb	0	; () banked
 13770  000A0C  2598               	addwf	ModbusFC04@i& (0+255),w,b
 13771  000A0E  6F8F               	movwf	??_ModbusFC04& (0+255),b
 13772  000A10  0E00               	movlw	0
 13773  000A12  2199               	addwfc	(ModbusFC04@i+1)& (0+255),w,b
 13774  000A14  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 13775  000A16  90D8               	bcf	status,0,c
 13776  000A18  378F               	rlcf	??_ModbusFC04& (0+255),f,b
 13777  000A1A  3790               	rlcf	(??_ModbusFC04+1)& (0+255),f,b
 13778  000A1C  0E7E               	movlw	low _MB303xx
 13779  000A1E  258F               	addwf	??_ModbusFC04& (0+255),w,b
 13780  000A20  6ED9               	movwf	fsr2l,c
 13781  000A22  0E01               	movlw	high _MB303xx
 13782  000A24  2190               	addwfc	(??_ModbusFC04+1)& (0+255),w,b
 13783  000A26  6EDA               	movwf	fsr2h,c
 13784  000A28  CFDE F091          	movff	postinc2,??_ModbusFC04+2
 13785  000A2C  CFDD F092          	movff	postdec2,??_ModbusFC04+3
 13786  000A30  5191               	movf	(??_ModbusFC04+2)& (0+255),w,b
 13787  000A32  6FEB               	movwf	_ByteLo& (0+255),b
 13788  000A34  6BEC               	clrf	(_ByteLo+1)& (0+255),b
 13789                           
 13790                           ;Modbus.c: 385:                 ByteHi = MB303xx[ModbusData[3] +i] >> 8;
 13791  000A36  0101               	movlb	1	; () banked
 13792  000A38  5103               	movf	(_ModbusData+3)& (0+255),w,b
 13793  000A3A  0100               	movlb	0	; () banked
 13794  000A3C  2598               	addwf	ModbusFC04@i& (0+255),w,b
 13795  000A3E  6F8F               	movwf	??_ModbusFC04& (0+255),b
 13796  000A40  0E00               	movlw	0
 13797  000A42  2199               	addwfc	(ModbusFC04@i+1)& (0+255),w,b
 13798  000A44  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 13799  000A46  90D8               	bcf	status,0,c
 13800  000A48  378F               	rlcf	??_ModbusFC04& (0+255),f,b
 13801  000A4A  3790               	rlcf	(??_ModbusFC04+1)& (0+255),f,b
 13802  000A4C  0E7E               	movlw	low _MB303xx
 13803  000A4E  258F               	addwf	??_ModbusFC04& (0+255),w,b
 13804  000A50  6ED9               	movwf	fsr2l,c
 13805  000A52  0E01               	movlw	high _MB303xx
 13806  000A54  2190               	addwfc	(??_ModbusFC04+1)& (0+255),w,b
 13807  000A56  6EDA               	movwf	fsr2h,c
 13808  000A58  CFDE F091          	movff	postinc2,??_ModbusFC04+2
 13809  000A5C  CFDD F092          	movff	postdec2,??_ModbusFC04+3
 13810  000A60  5192               	movf	(??_ModbusFC04+3)& (0+255),w,b
 13811  000A62  6FD5               	movwf	_ByteHi& (0+255),b
 13812  000A64  6BD6               	clrf	(_ByteHi+1)& (0+255),b
 13813                           
 13814                           ;Modbus.c: 388:             }else if(ModbusData[2] == 0x01){
 13815  000A66  EF79  F006         	goto	l8362
 13816  000A6A                     l8332:
 13817                           
 13818                           ; BSR set to: 1
 13819  000A6A  0502               	decf	(_ModbusData+2)& (0+255),w,b
 13820  000A6C  A4D8               	btfss	status,2,c
 13821  000A6E  EF3B  F005         	goto	u8481
 13822  000A72  EF3D  F005         	goto	u8480
 13823  000A76                     u8481:
 13824  000A76  EF6E  F005         	goto	l8336
 13825  000A7A                     u8480:
 13826  000A7A                     
 13827                           ; BSR set to: 1
 13828                           ;Modbus.c: 390:                 ByteLo = MB301xx[ModbusData[3] +i] & 0x00FF;
 13829  000A7A  5103               	movf	(_ModbusData+3)& (0+255),w,b
 13830  000A7C  0100               	movlb	0	; () banked
 13831  000A7E  2598               	addwf	ModbusFC04@i& (0+255),w,b
 13832  000A80  6F8F               	movwf	??_ModbusFC04& (0+255),b
 13833  000A82  0E00               	movlw	0
 13834  000A84  2199               	addwfc	(ModbusFC04@i+1)& (0+255),w,b
 13835  000A86  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 13836  000A88  90D8               	bcf	status,0,c
 13837  000A8A  378F               	rlcf	??_ModbusFC04& (0+255),f,b
 13838  000A8C  3790               	rlcf	(??_ModbusFC04+1)& (0+255),f,b
 13839  000A8E  0E64               	movlw	low _MB301xx
 13840  000A90  258F               	addwf	??_ModbusFC04& (0+255),w,b
 13841  000A92  6ED9               	movwf	fsr2l,c
 13842  000A94  0E01               	movlw	high _MB301xx
 13843  000A96  2190               	addwfc	(??_ModbusFC04+1)& (0+255),w,b
 13844  000A98  6EDA               	movwf	fsr2h,c
 13845  000A9A  CFDE F091          	movff	postinc2,??_ModbusFC04+2
 13846  000A9E  CFDD F092          	movff	postdec2,??_ModbusFC04+3
 13847  000AA2  5191               	movf	(??_ModbusFC04+2)& (0+255),w,b
 13848  000AA4  6FEB               	movwf	_ByteLo& (0+255),b
 13849  000AA6  6BEC               	clrf	(_ByteLo+1)& (0+255),b
 13850                           
 13851                           ;Modbus.c: 391:                 ByteHi = MB301xx[ModbusData[3] +i] >> 8;
 13852  000AA8  0101               	movlb	1	; () banked
 13853  000AAA  5103               	movf	(_ModbusData+3)& (0+255),w,b
 13854  000AAC  0100               	movlb	0	; () banked
 13855  000AAE  2598               	addwf	ModbusFC04@i& (0+255),w,b
 13856  000AB0  6F8F               	movwf	??_ModbusFC04& (0+255),b
 13857  000AB2  0E00               	movlw	0
 13858  000AB4  2199               	addwfc	(ModbusFC04@i+1)& (0+255),w,b
 13859  000AB6  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 13860  000AB8  90D8               	bcf	status,0,c
 13861  000ABA  378F               	rlcf	??_ModbusFC04& (0+255),f,b
 13862  000ABC  3790               	rlcf	(??_ModbusFC04+1)& (0+255),f,b
 13863  000ABE  0E64               	movlw	low _MB301xx
 13864  000AC0  258F               	addwf	??_ModbusFC04& (0+255),w,b
 13865  000AC2  6ED9               	movwf	fsr2l,c
 13866  000AC4  0E01               	movlw	high _MB301xx
 13867  000AC6  2190               	addwfc	(??_ModbusFC04+1)& (0+255),w,b
 13868  000AC8  6EDA               	movwf	fsr2h,c
 13869  000ACA  CFDE F091          	movff	postinc2,??_ModbusFC04+2
 13870  000ACE  CFDD F092          	movff	postdec2,??_ModbusFC04+3
 13871  000AD2  5192               	movf	(??_ModbusFC04+3)& (0+255),w,b
 13872  000AD4  6FD5               	movwf	_ByteHi& (0+255),b
 13873  000AD6  6BD6               	clrf	(_ByteHi+1)& (0+255),b
 13874                           
 13875                           ;Modbus.c: 393:             }
 13876  000AD8  EF79  F006         	goto	l8362
 13877  000ADC                     l8336:
 13878                           
 13879                           ; BSR set to: 1
 13880  000ADC  0E02               	movlw	2
 13881  000ADE  1902               	xorwf	(_ModbusData+2)& (0+255),w,b
 13882  000AE0  A4D8               	btfss	status,2,c
 13883  000AE2  EF75  F005         	goto	u8491
 13884  000AE6  EF77  F005         	goto	u8490
 13885  000AEA                     u8491:
 13886  000AEA  EFA8  F005         	goto	l8340
 13887  000AEE                     u8490:
 13888  000AEE                     
 13889                           ; BSR set to: 1
 13890                           ;Modbus.c: 396:                 ByteLo = MB302xx[ModbusData[3] +i] & 0x00FF;
 13891  000AEE  5103               	movf	(_ModbusData+3)& (0+255),w,b
 13892  000AF0  0100               	movlb	0	; () banked
 13893  000AF2  2598               	addwf	ModbusFC04@i& (0+255),w,b
 13894  000AF4  6F8F               	movwf	??_ModbusFC04& (0+255),b
 13895  000AF6  0E00               	movlw	0
 13896  000AF8  2199               	addwfc	(ModbusFC04@i+1)& (0+255),w,b
 13897  000AFA  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 13898  000AFC  90D8               	bcf	status,0,c
 13899  000AFE  378F               	rlcf	??_ModbusFC04& (0+255),f,b
 13900  000B00  3790               	rlcf	(??_ModbusFC04+1)& (0+255),f,b
 13901  000B02  0EF3               	movlw	low _MB302xx
 13902  000B04  258F               	addwf	??_ModbusFC04& (0+255),w,b
 13903  000B06  6ED9               	movwf	fsr2l,c
 13904  000B08  0E00               	movlw	high _MB302xx
 13905  000B0A  2190               	addwfc	(??_ModbusFC04+1)& (0+255),w,b
 13906  000B0C  6EDA               	movwf	fsr2h,c
 13907  000B0E  CFDE F091          	movff	postinc2,??_ModbusFC04+2
 13908  000B12  CFDD F092          	movff	postdec2,??_ModbusFC04+3
 13909  000B16  5191               	movf	(??_ModbusFC04+2)& (0+255),w,b
 13910  000B18  6FEB               	movwf	_ByteLo& (0+255),b
 13911  000B1A  6BEC               	clrf	(_ByteLo+1)& (0+255),b
 13912                           
 13913                           ;Modbus.c: 397:                 ByteHi = MB302xx[ModbusData[3] +i] >> 8;
 13914  000B1C  0101               	movlb	1	; () banked
 13915  000B1E  5103               	movf	(_ModbusData+3)& (0+255),w,b
 13916  000B20  0100               	movlb	0	; () banked
 13917  000B22  2598               	addwf	ModbusFC04@i& (0+255),w,b
 13918  000B24  6F8F               	movwf	??_ModbusFC04& (0+255),b
 13919  000B26  0E00               	movlw	0
 13920  000B28  2199               	addwfc	(ModbusFC04@i+1)& (0+255),w,b
 13921  000B2A  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 13922  000B2C  90D8               	bcf	status,0,c
 13923  000B2E  378F               	rlcf	??_ModbusFC04& (0+255),f,b
 13924  000B30  3790               	rlcf	(??_ModbusFC04+1)& (0+255),f,b
 13925  000B32  0EF3               	movlw	low _MB302xx
 13926  000B34  258F               	addwf	??_ModbusFC04& (0+255),w,b
 13927  000B36  6ED9               	movwf	fsr2l,c
 13928  000B38  0E00               	movlw	high _MB302xx
 13929  000B3A  2190               	addwfc	(??_ModbusFC04+1)& (0+255),w,b
 13930  000B3C  6EDA               	movwf	fsr2h,c
 13931  000B3E  CFDE F091          	movff	postinc2,??_ModbusFC04+2
 13932  000B42  CFDD F092          	movff	postdec2,??_ModbusFC04+3
 13933  000B46  5192               	movf	(??_ModbusFC04+3)& (0+255),w,b
 13934  000B48  6FD5               	movwf	_ByteHi& (0+255),b
 13935  000B4A  6BD6               	clrf	(_ByteHi+1)& (0+255),b
 13936                           
 13937                           ;Modbus.c: 399:             }else if(ModbusData[2] == 0x04){
 13938  000B4C  EF79  F006         	goto	l8362
 13939  000B50                     l8340:
 13940                           
 13941                           ; BSR set to: 1
 13942  000B50  0E04               	movlw	4
 13943  000B52  1902               	xorwf	(_ModbusData+2)& (0+255),w,b
 13944  000B54  A4D8               	btfss	status,2,c
 13945  000B56  EFAF  F005         	goto	u8501
 13946  000B5A  EFB1  F005         	goto	u8500
 13947  000B5E                     u8501:
 13948  000B5E  EFE2  F005         	goto	l8344
 13949  000B62                     u8500:
 13950  000B62                     
 13951                           ; BSR set to: 1
 13952                           ;Modbus.c: 401:                 ByteLo = MB304xx[ModbusData[3] +i] & 0x00FF;
 13953  000B62  5103               	movf	(_ModbusData+3)& (0+255),w,b
 13954  000B64  0100               	movlb	0	; () banked
 13955  000B66  2598               	addwf	ModbusFC04@i& (0+255),w,b
 13956  000B68  6F8F               	movwf	??_ModbusFC04& (0+255),b
 13957  000B6A  0E00               	movlw	0
 13958  000B6C  2199               	addwfc	(ModbusFC04@i+1)& (0+255),w,b
 13959  000B6E  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 13960  000B70  90D8               	bcf	status,0,c
 13961  000B72  378F               	rlcf	??_ModbusFC04& (0+255),f,b
 13962  000B74  3790               	rlcf	(??_ModbusFC04+1)& (0+255),f,b
 13963  000B76  0E72               	movlw	low _MB304xx
 13964  000B78  258F               	addwf	??_ModbusFC04& (0+255),w,b
 13965  000B7A  6ED9               	movwf	fsr2l,c
 13966  000B7C  0E01               	movlw	high _MB304xx
 13967  000B7E  2190               	addwfc	(??_ModbusFC04+1)& (0+255),w,b
 13968  000B80  6EDA               	movwf	fsr2h,c
 13969  000B82  CFDE F091          	movff	postinc2,??_ModbusFC04+2
 13970  000B86  CFDD F092          	movff	postdec2,??_ModbusFC04+3
 13971  000B8A  5191               	movf	(??_ModbusFC04+2)& (0+255),w,b
 13972  000B8C  6FEB               	movwf	_ByteLo& (0+255),b
 13973  000B8E  6BEC               	clrf	(_ByteLo+1)& (0+255),b
 13974                           
 13975                           ;Modbus.c: 402:                 ByteHi = MB304xx[ModbusData[3] +i] >> 8;
 13976  000B90  0101               	movlb	1	; () banked
 13977  000B92  5103               	movf	(_ModbusData+3)& (0+255),w,b
 13978  000B94  0100               	movlb	0	; () banked
 13979  000B96  2598               	addwf	ModbusFC04@i& (0+255),w,b
 13980  000B98  6F8F               	movwf	??_ModbusFC04& (0+255),b
 13981  000B9A  0E00               	movlw	0
 13982  000B9C  2199               	addwfc	(ModbusFC04@i+1)& (0+255),w,b
 13983  000B9E  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 13984  000BA0  90D8               	bcf	status,0,c
 13985  000BA2  378F               	rlcf	??_ModbusFC04& (0+255),f,b
 13986  000BA4  3790               	rlcf	(??_ModbusFC04+1)& (0+255),f,b
 13987  000BA6  0E72               	movlw	low _MB304xx
 13988  000BA8  258F               	addwf	??_ModbusFC04& (0+255),w,b
 13989  000BAA  6ED9               	movwf	fsr2l,c
 13990  000BAC  0E01               	movlw	high _MB304xx
 13991  000BAE  2190               	addwfc	(??_ModbusFC04+1)& (0+255),w,b
 13992  000BB0  6EDA               	movwf	fsr2h,c
 13993  000BB2  CFDE F091          	movff	postinc2,??_ModbusFC04+2
 13994  000BB6  CFDD F092          	movff	postdec2,??_ModbusFC04+3
 13995  000BBA  5192               	movf	(??_ModbusFC04+3)& (0+255),w,b
 13996  000BBC  6FD5               	movwf	_ByteHi& (0+255),b
 13997  000BBE  6BD6               	clrf	(_ByteHi+1)& (0+255),b
 13998                           
 13999                           ;Modbus.c: 404:             }else if(ModbusData[2] == 0x05){
 14000  000BC0  EF79  F006         	goto	l8362
 14001  000BC4                     l8344:
 14002                           
 14003                           ; BSR set to: 1
 14004  000BC4  0E05               	movlw	5
 14005  000BC6  1902               	xorwf	(_ModbusData+2)& (0+255),w,b
 14006  000BC8  A4D8               	btfss	status,2,c
 14007  000BCA  EFE9  F005         	goto	u8511
 14008  000BCE  EFEB  F005         	goto	u8510
 14009  000BD2                     u8511:
 14010  000BD2  EF1C  F006         	goto	l8348
 14011  000BD6                     u8510:
 14012  000BD6                     
 14013                           ; BSR set to: 1
 14014                           ;Modbus.c: 406:                 ByteLo = MB305xx[ModbusData[3] +i] & 0x00FF;
 14015  000BD6  5103               	movf	(_ModbusData+3)& (0+255),w,b
 14016  000BD8  0100               	movlb	0	; () banked
 14017  000BDA  2598               	addwf	ModbusFC04@i& (0+255),w,b
 14018  000BDC  6F8F               	movwf	??_ModbusFC04& (0+255),b
 14019  000BDE  0E00               	movlw	0
 14020  000BE0  2199               	addwfc	(ModbusFC04@i+1)& (0+255),w,b
 14021  000BE2  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 14022  000BE4  90D8               	bcf	status,0,c
 14023  000BE6  378F               	rlcf	??_ModbusFC04& (0+255),f,b
 14024  000BE8  3790               	rlcf	(??_ModbusFC04+1)& (0+255),f,b
 14025  000BEA  0E3C               	movlw	low _MB305xx
 14026  000BEC  258F               	addwf	??_ModbusFC04& (0+255),w,b
 14027  000BEE  6ED9               	movwf	fsr2l,c
 14028  000BF0  0E02               	movlw	high _MB305xx
 14029  000BF2  2190               	addwfc	(??_ModbusFC04+1)& (0+255),w,b
 14030  000BF4  6EDA               	movwf	fsr2h,c
 14031  000BF6  CFDE F091          	movff	postinc2,??_ModbusFC04+2
 14032  000BFA  CFDD F092          	movff	postdec2,??_ModbusFC04+3
 14033  000BFE  5191               	movf	(??_ModbusFC04+2)& (0+255),w,b
 14034  000C00  6FEB               	movwf	_ByteLo& (0+255),b
 14035  000C02  6BEC               	clrf	(_ByteLo+1)& (0+255),b
 14036                           
 14037                           ;Modbus.c: 407:                 ByteHi = MB305xx[ModbusData[3] +i] >> 8;
 14038  000C04  0101               	movlb	1	; () banked
 14039  000C06  5103               	movf	(_ModbusData+3)& (0+255),w,b
 14040  000C08  0100               	movlb	0	; () banked
 14041  000C0A  2598               	addwf	ModbusFC04@i& (0+255),w,b
 14042  000C0C  6F8F               	movwf	??_ModbusFC04& (0+255),b
 14043  000C0E  0E00               	movlw	0
 14044  000C10  2199               	addwfc	(ModbusFC04@i+1)& (0+255),w,b
 14045  000C12  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 14046  000C14  90D8               	bcf	status,0,c
 14047  000C16  378F               	rlcf	??_ModbusFC04& (0+255),f,b
 14048  000C18  3790               	rlcf	(??_ModbusFC04+1)& (0+255),f,b
 14049  000C1A  0E3C               	movlw	low _MB305xx
 14050  000C1C  258F               	addwf	??_ModbusFC04& (0+255),w,b
 14051  000C1E  6ED9               	movwf	fsr2l,c
 14052  000C20  0E02               	movlw	high _MB305xx
 14053  000C22  2190               	addwfc	(??_ModbusFC04+1)& (0+255),w,b
 14054  000C24  6EDA               	movwf	fsr2h,c
 14055  000C26  CFDE F091          	movff	postinc2,??_ModbusFC04+2
 14056  000C2A  CFDD F092          	movff	postdec2,??_ModbusFC04+3
 14057  000C2E  5192               	movf	(??_ModbusFC04+3)& (0+255),w,b
 14058  000C30  6FD5               	movwf	_ByteHi& (0+255),b
 14059  000C32  6BD6               	clrf	(_ByteHi+1)& (0+255),b
 14060                           
 14061                           ;Modbus.c: 409:             }
 14062  000C34  EF79  F006         	goto	l8362
 14063  000C38                     l8348:
 14064                           
 14065                           ; BSR set to: 1
 14066  000C38  5102               	movf	(_ModbusData+2)& (0+255),w,b
 14067  000C3A  A4D8               	btfss	status,2,c
 14068  000C3C  EF22  F006         	goto	u8521
 14069  000C40  EF24  F006         	goto	u8520
 14070  000C44                     u8521:
 14071  000C44  EF55  F006         	goto	l8352
 14072  000C48                     u8520:
 14073  000C48                     
 14074                           ; BSR set to: 1
 14075                           ;Modbus.c: 412:                 ByteLo = MB300xx[ModbusData[3] +i] & 0x00FF;
 14076  000C48  5103               	movf	(_ModbusData+3)& (0+255),w,b
 14077  000C4A  0100               	movlb	0	; () banked
 14078  000C4C  2598               	addwf	ModbusFC04@i& (0+255),w,b
 14079  000C4E  6F8F               	movwf	??_ModbusFC04& (0+255),b
 14080  000C50  0E00               	movlw	0
 14081  000C52  2199               	addwfc	(ModbusFC04@i+1)& (0+255),w,b
 14082  000C54  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 14083  000C56  90D8               	bcf	status,0,c
 14084  000C58  378F               	rlcf	??_ModbusFC04& (0+255),f,b
 14085  000C5A  3790               	rlcf	(??_ModbusFC04+1)& (0+255),f,b
 14086  000C5C  0E64               	movlw	low _MB300xx
 14087  000C5E  258F               	addwf	??_ModbusFC04& (0+255),w,b
 14088  000C60  6ED9               	movwf	fsr2l,c
 14089  000C62  0E04               	movlw	high _MB300xx
 14090  000C64  2190               	addwfc	(??_ModbusFC04+1)& (0+255),w,b
 14091  000C66  6EDA               	movwf	fsr2h,c
 14092  000C68  CFDE F091          	movff	postinc2,??_ModbusFC04+2
 14093  000C6C  CFDD F092          	movff	postdec2,??_ModbusFC04+3
 14094  000C70  5191               	movf	(??_ModbusFC04+2)& (0+255),w,b
 14095  000C72  6FEB               	movwf	_ByteLo& (0+255),b
 14096  000C74  6BEC               	clrf	(_ByteLo+1)& (0+255),b
 14097                           
 14098                           ;Modbus.c: 413:                 ByteHi = MB300xx[ModbusData[3] +i] >> 8;
 14099  000C76  0101               	movlb	1	; () banked
 14100  000C78  5103               	movf	(_ModbusData+3)& (0+255),w,b
 14101  000C7A  0100               	movlb	0	; () banked
 14102  000C7C  2598               	addwf	ModbusFC04@i& (0+255),w,b
 14103  000C7E  6F8F               	movwf	??_ModbusFC04& (0+255),b
 14104  000C80  0E00               	movlw	0
 14105  000C82  2199               	addwfc	(ModbusFC04@i+1)& (0+255),w,b
 14106  000C84  6F90               	movwf	(??_ModbusFC04+1)& (0+255),b
 14107  000C86  90D8               	bcf	status,0,c
 14108  000C88  378F               	rlcf	??_ModbusFC04& (0+255),f,b
 14109  000C8A  3790               	rlcf	(??_ModbusFC04+1)& (0+255),f,b
 14110  000C8C  0E64               	movlw	low _MB300xx
 14111  000C8E  258F               	addwf	??_ModbusFC04& (0+255),w,b
 14112  000C90  6ED9               	movwf	fsr2l,c
 14113  000C92  0E04               	movlw	high _MB300xx
 14114  000C94  2190               	addwfc	(??_ModbusFC04+1)& (0+255),w,b
 14115  000C96  6EDA               	movwf	fsr2h,c
 14116  000C98  CFDE F091          	movff	postinc2,??_ModbusFC04+2
 14117  000C9C  CFDD F092          	movff	postdec2,??_ModbusFC04+3
 14118  000CA0  5192               	movf	(??_ModbusFC04+3)& (0+255),w,b
 14119  000CA2  6FD5               	movwf	_ByteHi& (0+255),b
 14120  000CA4  6BD6               	clrf	(_ByteHi+1)& (0+255),b
 14121                           
 14122                           ;Modbus.c: 415:             }else if(ModbusData[2] == 0x06){
 14123  000CA6  EF79  F006         	goto	l8362
 14124  000CAA                     l8352:
 14125                           
 14126                           ; BSR set to: 1
 14127  000CAA  0E06               	movlw	6
 14128  000CAC  1902               	xorwf	(_ModbusData+2)& (0+255),w,b
 14129  000CAE  A4D8               	btfss	status,2,c
 14130  000CB0  EF5C  F006         	goto	u8531
 14131  000CB4  EF5E  F006         	goto	u8530
 14132  000CB8                     u8531:
 14133  000CB8  EF79  F006         	goto	l964
 14134  000CBC                     u8530:
 14135  000CBC                     
 14136                           ; BSR set to: 1
 14137                           ;Modbus.c: 417:                 uint16_t convertedValue;;Modbus.c: 418:                 
      +                          convertedValue = ADCC_GetSingleConversion(AIP_0);
 14138  000CBC  0E00               	movlw	0
 14139  000CBE  EC47  F028         	call	_ADCC_GetSingleConversion
 14140  000CC2  C005  F095         	movff	?_ADCC_GetSingleConversion,ModbusFC04@convertedValue
 14141  000CC6  C006  F096         	movff	?_ADCC_GetSingleConversion+1,ModbusFC04@convertedValue+1
 14142  000CCA                     
 14143                           ;Modbus.c: 419:                 printf("ADC: 0x%04x \r\n", convertedValue);
 14144  000CCA  0E9A               	movlw	low STR_58
 14145  000CCC  0100               	movlb	0	; () banked
 14146  000CCE  6F7D               	movwf	printf@fmt& (0+255),b
 14147  000CD0  0EFF               	movlw	high STR_58
 14148  000CD2  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 14149  000CD4  C095  F07F         	movff	ModbusFC04@convertedValue,?_printf+2
 14150  000CD8  C096  F080         	movff	ModbusFC04@convertedValue+1,?_printf+3
 14151  000CDC  EC8A  F028         	call	_printf	;wreg free
 14152  000CE0                     
 14153                           ;Modbus.c: 421:                 ByteLo = convertedValue & 0x00FF;
 14154  000CE0  0100               	movlb	0	; () banked
 14155  000CE2  5195               	movf	ModbusFC04@convertedValue& (0+255),w,b
 14156  000CE4  6FEB               	movwf	_ByteLo& (0+255),b
 14157  000CE6  6BEC               	clrf	(_ByteLo+1)& (0+255),b
 14158  000CE8                     
 14159                           ; BSR set to: 0
 14160                           ;Modbus.c: 422:                 ByteHi = convertedValue >> 8;
 14161  000CE8  5196               	movf	(ModbusFC04@convertedValue+1)& (0+255),w,b
 14162  000CEA  6FD5               	movwf	_ByteHi& (0+255),b
 14163  000CEC  6BD6               	clrf	(_ByteHi+1)& (0+255),b
 14164  000CEE  EF79  F006         	goto	l8362
 14165  000CF2                     l964:
 14166  000CF2                     l8362:
 14167                           
 14168                           ;Modbus.c: 425:             MBRespon[MBResCnt] = ByteHi;
 14169  000CF2  0E57               	movlw	low _MBRespon
 14170  000CF4  0100               	movlb	0	; () banked
 14171  000CF6  25D7               	addwf	_MBResCnt& (0+255),w,b
 14172  000CF8  6ED9               	movwf	fsr2l,c
 14173  000CFA  0E02               	movlw	high _MBRespon
 14174  000CFC  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 14175  000CFE  6EDA               	movwf	fsr2h,c
 14176  000D00  C0D5  FFDF         	movff	_ByteHi,indf2
 14177  000D04                     
 14178                           ; BSR set to: 0
 14179                           ;Modbus.c: 426:             MBResCnt++;
 14180  000D04  4BD7               	infsnz	_MBResCnt& (0+255),f,b
 14181  000D06  2BD8               	incf	(_MBResCnt+1)& (0+255),f,b
 14182  000D08                     
 14183                           ; BSR set to: 0
 14184                           ;Modbus.c: 427:             MBRespon[MBResCnt] = ByteLo;
 14185  000D08  0E57               	movlw	low _MBRespon
 14186  000D0A  25D7               	addwf	_MBResCnt& (0+255),w,b
 14187  000D0C  6ED9               	movwf	fsr2l,c
 14188  000D0E  0E02               	movlw	high _MBRespon
 14189  000D10  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 14190  000D12  6EDA               	movwf	fsr2h,c
 14191  000D14  C0EB  FFDF         	movff	_ByteLo,indf2
 14192  000D18                     
 14193                           ; BSR set to: 0
 14194                           ;Modbus.c: 428:             MBResCnt++;
 14195  000D18  4BD7               	infsnz	_MBResCnt& (0+255),f,b
 14196  000D1A  2BD8               	incf	(_MBResCnt+1)& (0+255),f,b
 14197  000D1C                     
 14198                           ; BSR set to: 0
 14199                           ;Modbus.c: 430:         }
 14200  000D1C  4B98               	infsnz	ModbusFC04@i& (0+255),f,b
 14201  000D1E  2B99               	incf	(ModbusFC04@i+1)& (0+255),f,b
 14202  000D20                     l8372:
 14203                           
 14204                           ; BSR set to: 0
 14205  000D20  0101               	movlb	1	; () banked
 14206  000D22  5105               	movf	(_ModbusData+5)& (0+255),w,b
 14207  000D24  0100               	movlb	0	; () banked
 14208  000D26  6F8F               	movwf	??_ModbusFC04& (0+255),b
 14209  000D28  6B90               	clrf	(??_ModbusFC04+1)& (0+255),b
 14210  000D2A  518F               	movf	??_ModbusFC04& (0+255),w,b
 14211  000D2C  5D98               	subwf	ModbusFC04@i& (0+255),w,b
 14212  000D2E  5199               	movf	(ModbusFC04@i+1)& (0+255),w,b
 14213  000D30  0A80               	xorlw	128
 14214  000D32  6F91               	movwf	(??_ModbusFC04+2)& (0+255),b
 14215  000D34  5190               	movf	(??_ModbusFC04+1)& (0+255),w,b
 14216  000D36  0A80               	xorlw	128
 14217  000D38  5991               	subwfb	(??_ModbusFC04+2)& (0+255),w,b
 14218  000D3A  A0D8               	btfss	status,0,c
 14219  000D3C  EFA2  F006         	goto	u8541
 14220  000D40  EFA4  F006         	goto	u8540
 14221  000D44                     u8541:
 14222  000D44  EFFA  F004         	goto	l8328
 14223  000D48                     u8540:
 14224  000D48                     
 14225                           ; BSR set to: 0
 14226                           ;Modbus.c: 432:         ByteHi = generateCRC(MBResCnt, 1);
 14227  000D48  C0D7  F005         	movff	_MBResCnt,generateCRC@MessCnt
 14228  000D4C  C0D8  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
 14229  000D50  0E01               	movlw	1
 14230  000D52  6E07               	movwf	generateCRC@HiOrLo^0,c
 14231  000D54  ECEC  F01E         	call	_generateCRC	;wreg free
 14232  000D58  C005  F0D5         	movff	?_generateCRC,_ByteHi
 14233  000D5C  C006  F0D6         	movff	?_generateCRC+1,_ByteHi+1
 14234                           
 14235                           ;Modbus.c: 433:         ByteLo = generateCRC(MBResCnt, 0);
 14236  000D60  C0D7  F005         	movff	_MBResCnt,generateCRC@MessCnt
 14237  000D64  C0D8  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
 14238  000D68  0E00               	movlw	0
 14239  000D6A  6E07               	movwf	generateCRC@HiOrLo^0,c
 14240  000D6C  ECEC  F01E         	call	_generateCRC	;wreg free
 14241  000D70  C005  F0EB         	movff	?_generateCRC,_ByteLo
 14242  000D74  C006  F0EC         	movff	?_generateCRC+1,_ByteLo+1
 14243  000D78                     
 14244                           ;Modbus.c: 435:         MBRespon[MBResCnt] = ByteHi;
 14245  000D78  0E57               	movlw	low _MBRespon
 14246  000D7A  0100               	movlb	0	; () banked
 14247  000D7C  25D7               	addwf	_MBResCnt& (0+255),w,b
 14248  000D7E  6ED9               	movwf	fsr2l,c
 14249  000D80  0E02               	movlw	high _MBRespon
 14250  000D82  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 14251  000D84  6EDA               	movwf	fsr2h,c
 14252  000D86  C0D5  FFDF         	movff	_ByteHi,indf2
 14253  000D8A                     
 14254                           ; BSR set to: 0
 14255                           ;Modbus.c: 436:         MBRespon[MBResCnt +1] = ByteLo;
 14256  000D8A  0E58               	movlw	low (_MBRespon+1)
 14257  000D8C  25D7               	addwf	_MBResCnt& (0+255),w,b
 14258  000D8E  6ED9               	movwf	fsr2l,c
 14259  000D90  0E02               	movlw	high (_MBRespon+1)
 14260  000D92  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 14261  000D94  6EDA               	movwf	fsr2h,c
 14262  000D96  C0EB  FFDF         	movff	_ByteLo,indf2
 14263  000D9A                     
 14264                           ; BSR set to: 0
 14265                           ;Modbus.c: 437:         MBResCnt = MBResCnt +2;
 14266  000D9A  0E02               	movlw	2
 14267  000D9C  25D7               	addwf	_MBResCnt& (0+255),w,b
 14268  000D9E  6FD7               	movwf	_MBResCnt& (0+255),b
 14269  000DA0  0E00               	movlw	0
 14270  000DA2  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 14271  000DA4  6FD8               	movwf	(_MBResCnt+1)& (0+255),b
 14272  000DA6                     
 14273                           ; BSR set to: 0
 14274                           ;Modbus.c: 440:         UART1_Write_string(MBRespon,MBResCnt);
 14275  000DA6  0E57               	movlw	low _MBRespon
 14276  000DA8  6E06               	movwf	UART1_Write_string@data^0,c
 14277  000DAA  0E02               	movlw	high _MBRespon
 14278  000DAC  6E07               	movwf	(UART1_Write_string@data+1)^0,c
 14279  000DAE  C0D7  F008         	movff	_MBResCnt,UART1_Write_string@data_len
 14280  000DB2  C0D8  F009         	movff	_MBResCnt+1,UART1_Write_string@data_len+1
 14281  000DB6  EC3F  F024         	call	_UART1_Write_string	;wreg free
 14282  000DBA                     
 14283                           ;Modbus.c: 441:         printf("Operation Successful \r\n\n");
 14284  000DBA  0EC0               	movlw	low STR_35
 14285  000DBC  0100               	movlb	0	; () banked
 14286  000DBE  6F7D               	movwf	printf@fmt& (0+255),b
 14287  000DC0  0EFD               	movlw	high STR_35
 14288  000DC2  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 14289  000DC4  EC8A  F028         	call	_printf	;wreg free
 14290                           
 14291                           ;Modbus.c: 442:     }else{
 14292  000DC8  EFF3  F006         	goto	l972
 14293  000DCC                     l8386:
 14294                           
 14295                           ; BSR set to: 0
 14296                           ;Modbus.c: 443:         ModbusError(0x02);
 14297  000DCC  0E00               	movlw	0
 14298  000DCE  6E15               	movwf	(ModbusError@ErrorCode+1)^0,c
 14299  000DD0  0E02               	movlw	2
 14300  000DD2  6E14               	movwf	ModbusError@ErrorCode^0,c
 14301  000DD4  ECE7  F020         	call	_ModbusError	;wreg free
 14302  000DD8                     
 14303                           ;Modbus.c: 444:         printf("Operation Failed \r\n\n");
 14304  000DD8  0E94               	movlw	low STR_36
 14305  000DDA  0100               	movlb	0	; () banked
 14306  000DDC  6F7D               	movwf	printf@fmt& (0+255),b
 14307  000DDE  0EFE               	movlw	high STR_36
 14308  000DE0  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 14309  000DE2  EC8A  F028         	call	_printf	;wreg free
 14310  000DE6                     l972:
 14311  000DE6  0012               	return		;funcret
 14312  000DE8                     __end_of_ModbusFC04:
 14313                           	opt callstack 0
 14314                           
 14315 ;; *************** function _ADCC_GetSingleConversion *****************
 14316 ;; Defined at:
 14317 ;;		line 131 in file "mcc_generated_files/adcc.c"
 14318 ;; Parameters:    Size  Location     Type
 14319 ;;  channel         1    wreg     enum E10046
 14320 ;; Auto vars:     Size  Location     Type
 14321 ;;  channel         1    8[COMRAM] enum E10046
 14322 ;; Return value:  Size  Location     Type
 14323 ;;                  2    4[COMRAM] unsigned short 
 14324 ;; Registers used:
 14325 ;;		wreg, status,2, status,0
 14326 ;; Tracked objects:
 14327 ;;		On entry : 0/0
 14328 ;;		On exit  : 0/0
 14329 ;;		Unchanged: 0/0
 14330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14331 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14332 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14333 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14334 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14335 ;;Total ram usage:        5 bytes
 14336 ;; Hardware stack levels used:    1
 14337 ;; Hardware stack levels required when called:    4
 14338 ;; This function calls:
 14339 ;;		Nothing
 14340 ;; This function is called by:
 14341 ;;		_ModbusFC04
 14342 ;;		_InitialiseString
 14343 ;; This function uses a non-reentrant model
 14344 ;;
 14345                           
 14346                           	psect	text51
 14347  00508E                     __ptext51:
 14348                           	opt callstack 0
 14349  00508E                     _ADCC_GetSingleConversion:
 14350                           	opt callstack 24
 14351                           
 14352                           ;incstack = 0
 14353                           ;ADCC_GetSingleConversion@channel stored from wreg
 14354  00508E  6E09               	movwf	ADCC_GetSingleConversion@channel^0,c
 14355  005090                     
 14356                           ;mcc_generated_files/adcc.c: 131: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 132: {;mcc_generated_files/adcc.c: 134:     ADPCH = 
      +                          channel;
 14357  005090  C009  FF5F         	movff	ADCC_GetSingleConversion@channel,3935	;volatile
 14358  005094                     
 14359                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADON = 1;
 14360  005094  8E60               	bsf	96,7,c	;volatile
 14361  005096                     
 14362                           ;mcc_generated_files/adcc.c: 140:     ADCON0bits.ADCONT = 0;
 14363  005096  9C60               	bcf	96,6,c	;volatile
 14364  005098                     
 14365                           ;mcc_generated_files/adcc.c: 143:     ADCON0bits.ADGO = 1;
 14366  005098  8060               	bsf	96,0,c	;volatile
 14367  00509A                     l604:
 14368                           
 14369                           ;mcc_generated_files/adcc.c: 147:     while (ADCON0bits.ADGO)
 14370  00509A  B060               	btfsc	96,0,c	;volatile
 14371  00509C  EF52  F028         	goto	u7521
 14372  0050A0  EF54  F028         	goto	u7520
 14373  0050A4                     u7521:
 14374  0050A4  EF4D  F028         	goto	l604
 14375  0050A8                     u7520:
 14376  0050A8                     
 14377                           ;mcc_generated_files/adcc.c: 153:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 14378  0050A8  5064               	movf	100,w,c	;volatile
 14379  0050AA  6E08               	movwf	(??_ADCC_GetSingleConversion+1)^0,c
 14380  0050AC  6A07               	clrf	??_ADCC_GetSingleConversion^0,c
 14381  0050AE  5063               	movf	99,w,c	;volatile
 14382  0050B0  2407               	addwf	??_ADCC_GetSingleConversion^0,w,c
 14383  0050B2  6E05               	movwf	?_ADCC_GetSingleConversion^0,c
 14384  0050B4  0E00               	movlw	0
 14385  0050B6  2008               	addwfc	(??_ADCC_GetSingleConversion+1)^0,w,c
 14386  0050B8  6E06               	movwf	(?_ADCC_GetSingleConversion+1)^0,c
 14387  0050BA  0012               	return		;funcret
 14388  0050BC                     __end_of_ADCC_GetSingleConversion:
 14389                           	opt callstack 0
 14390                           
 14391 ;; *************** function _ModbusFC03 *****************
 14392 ;; Defined at:
 14393 ;;		line 181 in file "Modbus.c"
 14394 ;; Parameters:    Size  Location     Type
 14395 ;;		None
 14396 ;; Auto vars:     Size  Location     Type
 14397 ;;  i               2   54[BANK0 ] int 
 14398 ;;  error           1   53[BANK0 ] _Bool 
 14399 ;; Return value:  Size  Location     Type
 14400 ;;                  1    wreg      void 
 14401 ;; Registers used:
 14402 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14403 ;; Tracked objects:
 14404 ;;		On entry : 0/0
 14405 ;;		On exit  : 0/0
 14406 ;;		Unchanged: 0/0
 14407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14409 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14410 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14411 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14412 ;;Total ram usage:        9 bytes
 14413 ;; Hardware stack levels used:    1
 14414 ;; Hardware stack levels required when called:   13
 14415 ;; This function calls:
 14416 ;;		_ModbusError
 14417 ;;		_UART1_Write_string
 14418 ;;		_generateCRC
 14419 ;;		_printf
 14420 ;; This function is called by:
 14421 ;;		_main
 14422 ;; This function uses a non-reentrant model
 14423 ;;
 14424                           
 14425                           	psect	text52
 14426  001726                     __ptext52:
 14427                           	opt callstack 0
 14428  001726                     _ModbusFC03:
 14429                           	opt callstack 17
 14430  001726                     
 14431                           ;Modbus.c: 186:     _Bool error = 0;
 14432  001726  0E00               	movlw	0
 14433  001728  0100               	movlb	0	; () banked
 14434  00172A  6F95               	movwf	ModbusFC03@error& (0+255),b
 14435                           
 14436                           ;Modbus.c: 188:     MBResCnt = 0;
 14437  00172C  0E00               	movlw	0
 14438  00172E  6FD8               	movwf	(_MBResCnt+1)& (0+255),b
 14439  001730  0E00               	movlw	0
 14440  001732  6FD7               	movwf	_MBResCnt& (0+255),b
 14441  001734                     
 14442                           ; BSR set to: 0
 14443                           ;Modbus.c: 189:     MBRespon[MBResCnt] = ModbusData[0];
 14444  001734  0E57               	movlw	low _MBRespon
 14445  001736  25D7               	addwf	_MBResCnt& (0+255),w,b
 14446  001738  6ED9               	movwf	fsr2l,c
 14447  00173A  0E02               	movlw	high _MBRespon
 14448  00173C  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 14449  00173E  6EDA               	movwf	fsr2h,c
 14450  001740  C100  FFDF         	movff	_ModbusData,indf2
 14451  001744                     
 14452                           ; BSR set to: 0
 14453                           ;Modbus.c: 190:     MBResCnt++;
 14454  001744  4BD7               	infsnz	_MBResCnt& (0+255),f,b
 14455  001746  2BD8               	incf	(_MBResCnt+1)& (0+255),f,b
 14456  001748                     
 14457                           ; BSR set to: 0
 14458                           ;Modbus.c: 191:     MBRespon[MBResCnt] = ModbusData[1];
 14459  001748  0E57               	movlw	low _MBRespon
 14460  00174A  25D7               	addwf	_MBResCnt& (0+255),w,b
 14461  00174C  6ED9               	movwf	fsr2l,c
 14462  00174E  0E02               	movlw	high _MBRespon
 14463  001750  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 14464  001752  6EDA               	movwf	fsr2h,c
 14465  001754  C101  FFDF         	movff	_ModbusData+1,indf2
 14466  001758                     
 14467                           ; BSR set to: 0
 14468                           ;Modbus.c: 192:     MBResCnt++;
 14469  001758  4BD7               	infsnz	_MBResCnt& (0+255),f,b
 14470  00175A  2BD8               	incf	(_MBResCnt+1)& (0+255),f,b
 14471  00175C                     
 14472                           ; BSR set to: 0
 14473                           ;Modbus.c: 193:     MBRespon[MBResCnt] = ModbusData[5] *2;
 14474  00175C  0101               	movlb	1	; () banked
 14475  00175E  5105               	movf	(_ModbusData+5)& (0+255),w,b
 14476  001760  0D02               	mullw	2
 14477  001762  0E57               	movlw	low _MBRespon
 14478  001764  0100               	movlb	0	; () banked
 14479  001766  25D7               	addwf	_MBResCnt& (0+255),w,b
 14480  001768  6ED9               	movwf	fsr2l,c
 14481  00176A  0E02               	movlw	high _MBRespon
 14482  00176C  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 14483  00176E  6EDA               	movwf	fsr2h,c
 14484  001770  CFF3 FFDF          	movff	prodl,indf2
 14485  001774                     
 14486                           ; BSR set to: 0
 14487                           ;Modbus.c: 194:     MBResCnt++;
 14488  001774  4BD7               	infsnz	_MBResCnt& (0+255),f,b
 14489  001776  2BD8               	incf	(_MBResCnt+1)& (0+255),f,b
 14490                           
 14491                           ;Modbus.c: 197:     switch(ModbusData[2]){
 14492  001778  EF49  F00C         	goto	l8130
 14493  00177C                     l8120:
 14494                           
 14495                           ; BSR set to: 0
 14496                           ;Modbus.c: 200:         {;Modbus.c: 203:             if(
 14497  00177C  0101               	movlb	1	; () banked
 14498  00177E  5102               	movf	(_ModbusData+2)& (0+255),w,b
 14499  001780  0100               	movlb	0	; () banked
 14500  001782  6F90               	movwf	(??_ModbusFC03+1)& (0+255),b
 14501  001784  6B8F               	clrf	??_ModbusFC03& (0+255),b
 14502  001786  0101               	movlb	1	; () banked
 14503  001788  5105               	movf	(_ModbusData+5)& (0+255),w,b
 14504  00178A  C104  F091         	movff	_ModbusData+4,??_ModbusFC03+2
 14505  00178E  0100               	movlb	0	; () banked
 14506  001790  6B92               	clrf	(??_ModbusFC03+3)& (0+255),b
 14507  001792  C091  F092         	movff	??_ModbusFC03+2,??_ModbusFC03+3
 14508  001796  6B91               	clrf	(??_ModbusFC03+2)& (0+255),b
 14509  001798  2791               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 14510  00179A  0E00               	movlw	0
 14511  00179C  2392               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 14512  00179E  518F               	movf	??_ModbusFC03& (0+255),w,b
 14513  0017A0  2791               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 14514  0017A2  5190               	movf	(??_ModbusFC03+1)& (0+255),w,b
 14515  0017A4  2392               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 14516  0017A6  0101               	movlb	1	; () banked
 14517  0017A8  5103               	movf	(_ModbusData+3)& (0+255),w,b
 14518  0017AA  0100               	movlb	0	; () banked
 14519  0017AC  2791               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 14520  0017AE  0E00               	movlw	0
 14521  0017B0  2392               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 14522  0017B2  BF92               	btfsc	(??_ModbusFC03+3)& (0+255),7,b
 14523  0017B4  EFDE  F00B         	goto	u8231
 14524  0017B8  EFE0  F00B         	goto	u8230
 14525  0017BC                     u8231:
 14526  0017BC  EF09  F00C         	goto	l8124
 14527  0017C0                     u8230:
 14528  0017C0                     
 14529                           ; BSR set to: 0
 14530  0017C0  0101               	movlb	1	; () banked
 14531  0017C2  5102               	movf	(_ModbusData+2)& (0+255),w,b
 14532  0017C4  0100               	movlb	0	; () banked
 14533  0017C6  6F90               	movwf	(??_ModbusFC03+1)& (0+255),b
 14534  0017C8  6B8F               	clrf	??_ModbusFC03& (0+255),b
 14535  0017CA  0101               	movlb	1	; () banked
 14536  0017CC  5105               	movf	(_ModbusData+5)& (0+255),w,b
 14537  0017CE  C104  F091         	movff	_ModbusData+4,??_ModbusFC03+2
 14538  0017D2  0100               	movlb	0	; () banked
 14539  0017D4  6B92               	clrf	(??_ModbusFC03+3)& (0+255),b
 14540  0017D6  C091  F092         	movff	??_ModbusFC03+2,??_ModbusFC03+3
 14541  0017DA  6B91               	clrf	(??_ModbusFC03+2)& (0+255),b
 14542  0017DC  2791               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 14543  0017DE  0E00               	movlw	0
 14544  0017E0  2392               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 14545  0017E2  518F               	movf	??_ModbusFC03& (0+255),w,b
 14546  0017E4  2791               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 14547  0017E6  5190               	movf	(??_ModbusFC03+1)& (0+255),w,b
 14548  0017E8  2392               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 14549  0017EA  0101               	movlb	1	; () banked
 14550  0017EC  5103               	movf	(_ModbusData+3)& (0+255),w,b
 14551  0017EE  0100               	movlb	0	; () banked
 14552  0017F0  2791               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 14553  0017F2  0E00               	movlw	0
 14554  0017F4  2392               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 14555  0017F6  BF92               	btfsc	(??_ModbusFC03+3)& (0+255),7,b
 14556  0017F8  EF07  F00C         	goto	u8241
 14557  0017FC  5192               	movf	(??_ModbusFC03+3)& (0+255),w,b
 14558  0017FE  E109               	bnz	u8240
 14559  001800  0E21               	movlw	33
 14560  001802  5D91               	subwf	(??_ModbusFC03+2)& (0+255),w,b
 14561  001804  A0D8               	btfss	status,0,c
 14562  001806  EF07  F00C         	goto	u8241
 14563  00180A  EF09  F00C         	goto	u8240
 14564  00180E                     u8241:
 14565  00180E  EF5C  F00C         	goto	l8132
 14566  001812                     u8240:
 14567  001812                     l8124:
 14568                           
 14569                           ; BSR set to: 0
 14570                           ;Modbus.c: 205:                 (((ModbusData[2] * 256) + ModbusData[3]) + ((ModbusData[
      +                          4] * 256) + ModbusData[5]) > 32)){;Modbus.c: 207:                 printf("Registers out 
      +                          of range.\r\nValid: 0x0000 to 0x0031.\r\n");
 14571  001812  0E58               	movlw	low STR_33
 14572  001814  6F7D               	movwf	printf@fmt& (0+255),b
 14573  001816  0EF7               	movlw	high STR_33
 14574  001818  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 14575  00181A  EC8A  F028         	call	_printf	;wreg free
 14576                           
 14577                           ;Modbus.c: 209:                 printf("Requested: 0x%04x to 0x%04x\r\n", ModbusData[2] 
      +                          * 256 + ModbusData[3],
 14578  00181E  0E35               	movlw	low STR_34
 14579  001820  0100               	movlb	0	; () banked
 14580  001822  6F7D               	movwf	printf@fmt& (0+255),b
 14581  001824  0EFD               	movlw	high STR_34
 14582  001826  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 14583  001828  0101               	movlb	1	; () banked
 14584  00182A  5102               	movf	(_ModbusData+2)& (0+255),w,b
 14585  00182C  0100               	movlb	0	; () banked
 14586  00182E  6F90               	movwf	(??_ModbusFC03+1)& (0+255),b
 14587  001830  6B8F               	clrf	??_ModbusFC03& (0+255),b
 14588  001832  0101               	movlb	1	; () banked
 14589  001834  5103               	movf	(_ModbusData+3)& (0+255),w,b
 14590  001836  0100               	movlb	0	; () banked
 14591  001838  258F               	addwf	??_ModbusFC03& (0+255),w,b
 14592  00183A  6F7F               	movwf	(?_printf+2)& (0+255),b
 14593  00183C  0101               	movlb	1	; () banked
 14594  00183E  0E00               	movlw	0
 14595  001840  0100               	movlb	0	; () banked
 14596  001842  2190               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
 14597  001844  6F80               	movwf	(?_printf+3)& (0+255),b
 14598  001846  0101               	movlb	1	; () banked
 14599  001848  5104               	movf	(_ModbusData+4)& (0+255),w,b
 14600  00184A  0100               	movlb	0	; () banked
 14601  00184C  6F92               	movwf	(??_ModbusFC03+3)& (0+255),b
 14602  00184E  6B91               	clrf	(??_ModbusFC03+2)& (0+255),b
 14603  001850  0101               	movlb	1	; () banked
 14604  001852  5103               	movf	(_ModbusData+3)& (0+255),w,b
 14605  001854  C102  F093         	movff	_ModbusData+2,??_ModbusFC03+4
 14606  001858  0100               	movlb	0	; () banked
 14607  00185A  6B94               	clrf	(??_ModbusFC03+5)& (0+255),b
 14608  00185C  C093  F094         	movff	??_ModbusFC03+4,??_ModbusFC03+5
 14609  001860  6B93               	clrf	(??_ModbusFC03+4)& (0+255),b
 14610  001862  2793               	addwf	(??_ModbusFC03+4)& (0+255),f,b
 14611  001864  0E00               	movlw	0
 14612  001866  2394               	addwfc	(??_ModbusFC03+5)& (0+255),f,b
 14613  001868  5191               	movf	(??_ModbusFC03+2)& (0+255),w,b
 14614  00186A  2793               	addwf	(??_ModbusFC03+4)& (0+255),f,b
 14615  00186C  5192               	movf	(??_ModbusFC03+3)& (0+255),w,b
 14616  00186E  2394               	addwfc	(??_ModbusFC03+5)& (0+255),f,b
 14617  001870  0101               	movlb	1	; () banked
 14618  001872  5105               	movf	(_ModbusData+5)& (0+255),w,b
 14619  001874  0100               	movlb	0	; () banked
 14620  001876  2593               	addwf	(??_ModbusFC03+4)& (0+255),w,b
 14621  001878  6F81               	movwf	(?_printf+4)& (0+255),b
 14622  00187A  0101               	movlb	1	; () banked
 14623  00187C  0E00               	movlw	0
 14624  00187E  0100               	movlb	0	; () banked
 14625  001880  2194               	addwfc	(??_ModbusFC03+5)& (0+255),w,b
 14626  001882  6F82               	movwf	(?_printf+5)& (0+255),b
 14627  001884  EC8A  F028         	call	_printf	;wreg free
 14628  001888                     
 14629                           ;Modbus.c: 211:                 error = 1;
 14630  001888  0E01               	movlw	1
 14631  00188A  0100               	movlb	0	; () banked
 14632  00188C  6F95               	movwf	ModbusFC03@error& (0+255),b
 14633  00188E  EF5C  F00C         	goto	l8132
 14634  001892                     l8130:
 14635                           
 14636                           ; BSR set to: 0
 14637  001892  0101               	movlb	1	; () banked
 14638  001894  5102               	movf	(_ModbusData+2)& (0+255),w,b
 14639  001896  0100               	movlb	0	; () banked
 14640  001898  6F8F               	movwf	??_ModbusFC03& (0+255),b
 14641  00189A  6B90               	clrf	(??_ModbusFC03+1)& (0+255),b
 14642                           
 14643                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14644                           ; Switch size 1, requested type "simple"
 14645                           ; Number of cases is 1, Range of values is 0 to 0
 14646                           ; switch strategies available:
 14647                           ; Name         Instructions Cycles
 14648                           ; simple_byte            4     3 (average)
 14649                           ;	Chosen strategy is simple_byte
 14650  00189C  5190               	movf	(??_ModbusFC03+1)& (0+255),w,b
 14651  00189E  0A00               	xorlw	0	; case 0
 14652  0018A0  B4D8               	btfsc	status,2,c
 14653  0018A2  EF55  F00C         	goto	l8766
 14654  0018A6  EF5C  F00C         	goto	l8132
 14655  0018AA                     l8766:
 14656                           
 14657                           ; BSR set to: 0
 14658                           ; Switch size 1, requested type "simple"
 14659                           ; Number of cases is 1, Range of values is 0 to 0
 14660                           ; switch strategies available:
 14661                           ; Name         Instructions Cycles
 14662                           ; simple_byte            4     3 (average)
 14663                           ;	Chosen strategy is simple_byte
 14664  0018AA  518F               	movf	??_ModbusFC03& (0+255),w,b
 14665  0018AC  0A00               	xorlw	0	; case 0
 14666  0018AE  B4D8               	btfsc	status,2,c
 14667  0018B0  EFBE  F00B         	goto	l8120
 14668  0018B4  EF5C  F00C         	goto	l8132
 14669  0018B8                     l8132:
 14670                           
 14671                           ; BSR set to: 0
 14672                           ;Modbus.c: 218:     if(error == 0){
 14673  0018B8  5195               	movf	ModbusFC03@error& (0+255),w,b
 14674  0018BA  A4D8               	btfss	status,2,c
 14675  0018BC  EF62  F00C         	goto	u8251
 14676  0018C0  EF64  F00C         	goto	u8250
 14677  0018C4                     u8251:
 14678  0018C4  EF0F  F00D         	goto	l8158
 14679  0018C8                     u8250:
 14680  0018C8                     
 14681                           ; BSR set to: 0
 14682                           ;Modbus.c: 219:         for(i=0; i< (ModbusData[5]) ; i++ ){
 14683  0018C8  0E00               	movlw	0
 14684  0018CA  6F97               	movwf	(ModbusFC03@i+1)& (0+255),b
 14685  0018CC  0E00               	movlw	0
 14686  0018CE  6F96               	movwf	ModbusFC03@i& (0+255),b
 14687  0018D0  EFB9  F00C         	goto	l8144
 14688  0018D4                     l8136:
 14689                           
 14690                           ; BSR set to: 0
 14691                           ;Modbus.c: 221:              if(ModbusData[2] == 0x00){
 14692  0018D4  0101               	movlb	1	; () banked
 14693  0018D6  5102               	movf	(_ModbusData+2)& (0+255),w,b
 14694  0018D8  A4D8               	btfss	status,2,c
 14695  0018DA  EF71  F00C         	goto	u8261
 14696  0018DE  EF73  F00C         	goto	u8260
 14697  0018E2                     u8261:
 14698  0018E2  EFA2  F00C         	goto	l918
 14699  0018E6                     u8260:
 14700  0018E6                     
 14701                           ; BSR set to: 1
 14702                           ;Modbus.c: 223:                 ByteLo = MB400xx[ModbusData[3] +i] & 0x00FF;
 14703  0018E6  5103               	movf	(_ModbusData+3)& (0+255),w,b
 14704  0018E8  0100               	movlb	0	; () banked
 14705  0018EA  2596               	addwf	ModbusFC03@i& (0+255),w,b
 14706  0018EC  6F8F               	movwf	??_ModbusFC03& (0+255),b
 14707  0018EE  0E00               	movlw	0
 14708  0018F0  2197               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
 14709  0018F2  6F90               	movwf	(??_ModbusFC03+1)& (0+255),b
 14710  0018F4  90D8               	bcf	status,0,c
 14711  0018F6  378F               	rlcf	??_ModbusFC03& (0+255),f,b
 14712  0018F8  3790               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
 14713  0018FA  0EB7               	movlw	low _MB400xx
 14714  0018FC  258F               	addwf	??_ModbusFC03& (0+255),w,b
 14715  0018FE  6ED9               	movwf	fsr2l,c
 14716  001900  0E03               	movlw	high _MB400xx
 14717  001902  2190               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
 14718  001904  6EDA               	movwf	fsr2h,c
 14719  001906  CFDE F091          	movff	postinc2,??_ModbusFC03+2
 14720  00190A  CFDD F092          	movff	postdec2,??_ModbusFC03+3
 14721  00190E  5191               	movf	(??_ModbusFC03+2)& (0+255),w,b
 14722  001910  6FEB               	movwf	_ByteLo& (0+255),b
 14723  001912  6BEC               	clrf	(_ByteLo+1)& (0+255),b
 14724                           
 14725                           ;Modbus.c: 224:                 ByteHi = MB400xx[ModbusData[3] +i] >> 8;
 14726  001914  0101               	movlb	1	; () banked
 14727  001916  5103               	movf	(_ModbusData+3)& (0+255),w,b
 14728  001918  0100               	movlb	0	; () banked
 14729  00191A  2596               	addwf	ModbusFC03@i& (0+255),w,b
 14730  00191C  6F8F               	movwf	??_ModbusFC03& (0+255),b
 14731  00191E  0E00               	movlw	0
 14732  001920  2197               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
 14733  001922  6F90               	movwf	(??_ModbusFC03+1)& (0+255),b
 14734  001924  90D8               	bcf	status,0,c
 14735  001926  378F               	rlcf	??_ModbusFC03& (0+255),f,b
 14736  001928  3790               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
 14737  00192A  0EB7               	movlw	low _MB400xx
 14738  00192C  258F               	addwf	??_ModbusFC03& (0+255),w,b
 14739  00192E  6ED9               	movwf	fsr2l,c
 14740  001930  0E03               	movlw	high _MB400xx
 14741  001932  2190               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
 14742  001934  6EDA               	movwf	fsr2h,c
 14743  001936  CFDE F091          	movff	postinc2,??_ModbusFC03+2
 14744  00193A  CFDD F092          	movff	postdec2,??_ModbusFC03+3
 14745  00193E  5192               	movf	(??_ModbusFC03+3)& (0+255),w,b
 14746  001940  6FD5               	movwf	_ByteHi& (0+255),b
 14747  001942  6BD6               	clrf	(_ByteHi+1)& (0+255),b
 14748  001944                     l918:
 14749                           
 14750                           ;Modbus.c: 228:             MBRespon[MBResCnt] = ByteHi;
 14751  001944  0E57               	movlw	low _MBRespon
 14752  001946  0100               	movlb	0	; () banked
 14753  001948  25D7               	addwf	_MBResCnt& (0+255),w,b
 14754  00194A  6ED9               	movwf	fsr2l,c
 14755  00194C  0E02               	movlw	high _MBRespon
 14756  00194E  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 14757  001950  6EDA               	movwf	fsr2h,c
 14758  001952  C0D5  FFDF         	movff	_ByteHi,indf2
 14759  001956                     
 14760                           ; BSR set to: 0
 14761                           ;Modbus.c: 229:             MBResCnt++;
 14762  001956  4BD7               	infsnz	_MBResCnt& (0+255),f,b
 14763  001958  2BD8               	incf	(_MBResCnt+1)& (0+255),f,b
 14764  00195A                     
 14765                           ; BSR set to: 0
 14766                           ;Modbus.c: 230:             MBRespon[MBResCnt] = ByteLo;
 14767  00195A  0E57               	movlw	low _MBRespon
 14768  00195C  25D7               	addwf	_MBResCnt& (0+255),w,b
 14769  00195E  6ED9               	movwf	fsr2l,c
 14770  001960  0E02               	movlw	high _MBRespon
 14771  001962  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 14772  001964  6EDA               	movwf	fsr2h,c
 14773  001966  C0EB  FFDF         	movff	_ByteLo,indf2
 14774                           
 14775                           ;Modbus.c: 231:             MBResCnt++;
 14776  00196A  4BD7               	infsnz	_MBResCnt& (0+255),f,b
 14777  00196C  2BD8               	incf	(_MBResCnt+1)& (0+255),f,b
 14778                           
 14779                           ;Modbus.c: 233:         }
 14780  00196E  4B96               	infsnz	ModbusFC03@i& (0+255),f,b
 14781  001970  2B97               	incf	(ModbusFC03@i+1)& (0+255),f,b
 14782  001972                     l8144:
 14783                           
 14784                           ; BSR set to: 0
 14785  001972  0101               	movlb	1	; () banked
 14786  001974  5105               	movf	(_ModbusData+5)& (0+255),w,b
 14787  001976  0100               	movlb	0	; () banked
 14788  001978  6F8F               	movwf	??_ModbusFC03& (0+255),b
 14789  00197A  6B90               	clrf	(??_ModbusFC03+1)& (0+255),b
 14790  00197C  518F               	movf	??_ModbusFC03& (0+255),w,b
 14791  00197E  5D96               	subwf	ModbusFC03@i& (0+255),w,b
 14792  001980  5197               	movf	(ModbusFC03@i+1)& (0+255),w,b
 14793  001982  0A80               	xorlw	128
 14794  001984  6F91               	movwf	(??_ModbusFC03+2)& (0+255),b
 14795  001986  5190               	movf	(??_ModbusFC03+1)& (0+255),w,b
 14796  001988  0A80               	xorlw	128
 14797  00198A  5991               	subwfb	(??_ModbusFC03+2)& (0+255),w,b
 14798  00198C  A0D8               	btfss	status,0,c
 14799  00198E  EFCB  F00C         	goto	u8271
 14800  001992  EFCD  F00C         	goto	u8270
 14801  001996                     u8271:
 14802  001996  EF6A  F00C         	goto	l8136
 14803  00199A                     u8270:
 14804  00199A                     
 14805                           ; BSR set to: 0
 14806                           ;Modbus.c: 235:         ByteHi = generateCRC(MBResCnt, 1);
 14807  00199A  C0D7  F005         	movff	_MBResCnt,generateCRC@MessCnt
 14808  00199E  C0D8  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
 14809  0019A2  0E01               	movlw	1
 14810  0019A4  6E07               	movwf	generateCRC@HiOrLo^0,c
 14811  0019A6  ECEC  F01E         	call	_generateCRC	;wreg free
 14812  0019AA  C005  F0D5         	movff	?_generateCRC,_ByteHi
 14813  0019AE  C006  F0D6         	movff	?_generateCRC+1,_ByteHi+1
 14814                           
 14815                           ;Modbus.c: 236:         ByteLo = generateCRC(MBResCnt, 0);
 14816  0019B2  C0D7  F005         	movff	_MBResCnt,generateCRC@MessCnt
 14817  0019B6  C0D8  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
 14818  0019BA  0E00               	movlw	0
 14819  0019BC  6E07               	movwf	generateCRC@HiOrLo^0,c
 14820  0019BE  ECEC  F01E         	call	_generateCRC	;wreg free
 14821  0019C2  C005  F0EB         	movff	?_generateCRC,_ByteLo
 14822  0019C6  C006  F0EC         	movff	?_generateCRC+1,_ByteLo+1
 14823  0019CA                     
 14824                           ;Modbus.c: 238:         MBRespon[MBResCnt] = ByteHi;
 14825  0019CA  0E57               	movlw	low _MBRespon
 14826  0019CC  0100               	movlb	0	; () banked
 14827  0019CE  25D7               	addwf	_MBResCnt& (0+255),w,b
 14828  0019D0  6ED9               	movwf	fsr2l,c
 14829  0019D2  0E02               	movlw	high _MBRespon
 14830  0019D4  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 14831  0019D6  6EDA               	movwf	fsr2h,c
 14832  0019D8  C0D5  FFDF         	movff	_ByteHi,indf2
 14833  0019DC                     
 14834                           ; BSR set to: 0
 14835                           ;Modbus.c: 239:         MBRespon[MBResCnt +1] = ByteLo;
 14836  0019DC  0E58               	movlw	low (_MBRespon+1)
 14837  0019DE  25D7               	addwf	_MBResCnt& (0+255),w,b
 14838  0019E0  6ED9               	movwf	fsr2l,c
 14839  0019E2  0E02               	movlw	high (_MBRespon+1)
 14840  0019E4  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 14841  0019E6  6EDA               	movwf	fsr2h,c
 14842  0019E8  C0EB  FFDF         	movff	_ByteLo,indf2
 14843  0019EC                     
 14844                           ; BSR set to: 0
 14845                           ;Modbus.c: 240:         MBResCnt = MBResCnt +2;
 14846  0019EC  0E02               	movlw	2
 14847  0019EE  25D7               	addwf	_MBResCnt& (0+255),w,b
 14848  0019F0  6FD7               	movwf	_MBResCnt& (0+255),b
 14849  0019F2  0E00               	movlw	0
 14850  0019F4  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 14851  0019F6  6FD8               	movwf	(_MBResCnt+1)& (0+255),b
 14852  0019F8                     
 14853                           ; BSR set to: 0
 14854                           ;Modbus.c: 243:         UART1_Write_string(MBRespon,MBResCnt);
 14855  0019F8  0E57               	movlw	low _MBRespon
 14856  0019FA  6E06               	movwf	UART1_Write_string@data^0,c
 14857  0019FC  0E02               	movlw	high _MBRespon
 14858  0019FE  6E07               	movwf	(UART1_Write_string@data+1)^0,c
 14859  001A00  C0D7  F008         	movff	_MBResCnt,UART1_Write_string@data_len
 14860  001A04  C0D8  F009         	movff	_MBResCnt+1,UART1_Write_string@data_len+1
 14861  001A08  EC3F  F024         	call	_UART1_Write_string	;wreg free
 14862  001A0C                     
 14863                           ;Modbus.c: 244:         printf("Operation Successful \r\n\n");
 14864  001A0C  0EC0               	movlw	low STR_35
 14865  001A0E  0100               	movlb	0	; () banked
 14866  001A10  6F7D               	movwf	printf@fmt& (0+255),b
 14867  001A12  0EFD               	movlw	high STR_35
 14868  001A14  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 14869  001A16  EC8A  F028         	call	_printf	;wreg free
 14870                           
 14871                           ;Modbus.c: 245:     }else{
 14872  001A1A  EF1C  F00D         	goto	l921
 14873  001A1E                     l8158:
 14874                           
 14875                           ; BSR set to: 0
 14876                           ;Modbus.c: 246:         ModbusError(0x02);
 14877  001A1E  0E00               	movlw	0
 14878  001A20  6E15               	movwf	(ModbusError@ErrorCode+1)^0,c
 14879  001A22  0E02               	movlw	2
 14880  001A24  6E14               	movwf	ModbusError@ErrorCode^0,c
 14881  001A26  ECE7  F020         	call	_ModbusError	;wreg free
 14882  001A2A                     
 14883                           ;Modbus.c: 247:         printf("Operation Failed \r\n\n");
 14884  001A2A  0E94               	movlw	low STR_36
 14885  001A2C  0100               	movlb	0	; () banked
 14886  001A2E  6F7D               	movwf	printf@fmt& (0+255),b
 14887  001A30  0EFE               	movlw	high STR_36
 14888  001A32  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 14889  001A34  EC8A  F028         	call	_printf	;wreg free
 14890  001A38                     l921:
 14891  001A38  0012               	return		;funcret
 14892  001A3A                     __end_of_ModbusFC03:
 14893                           	opt callstack 0
 14894                           
 14895 ;; *************** function _printf *****************
 14896 ;; Defined at:
 14897 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
 14898 ;; Parameters:    Size  Location     Type
 14899 ;;  fmt             2   29[BANK0 ] PTR const unsigned char 
 14900 ;;		 -> STR_135(12), STR_133(13), STR_132(17), STR_131(15), 
 14901 ;;		 -> STR_130(33), STR_128(38), STR_127(58), STR_126(19), 
 14902 ;;		 -> STR_125(18), STR_124(4), STR_123(16), STR_122(102), 
 14903 ;;		 -> STR_121(32), STR_120(33), STR_119(37), STR_118(44), 
 14904 ;;		 -> STR_117(22), STR_116(75), STR_115(67), STR_114(75), 
 14905 ;;		 -> STR_113(68), STR_112(69), STR_111(54), STR_110(52), 
 14906 ;;		 -> STR_109(53), STR_108(38), STR_107(51), STR_106(73), 
 14907 ;;		 -> STR_105(42), STR_104(36), STR_103(34), STR_100(42), 
 14908 ;;		 -> STR_99(22), STR_98(21), STR_97(20), STR_96(19), 
 14909 ;;		 -> STR_95(40), STR_85(33), STR_84(53), STR_83(52), 
 14910 ;;		 -> STR_82(26), STR_81(4), STR_80(24), STR_79(30), 
 14911 ;;		 -> STR_78(30), STR_77(37), STR_76(37), STR_75(38), 
 14912 ;;		 -> STR_74(38), STR_73(54), STR_72(36), STR_71(32), 
 14913 ;;		 -> STR_70(32), STR_69(35), STR_68(54), STR_67(38), 
 14914 ;;		 -> STR_66(54), STR_65(36), STR_64(19), STR_63(21), 
 14915 ;;		 -> STR_62(25), STR_61(54), STR_60(21), STR_59(25), 
 14916 ;;		 -> STR_58(15), STR_57(30), STR_56(52), STR_55(28), 
 14917 ;;		 -> STR_54(30), STR_53(52), STR_52(25), STR_51(30), 
 14918 ;;		 -> STR_50(52), STR_49(25), STR_48(30), STR_47(52), 
 14919 ;;		 -> STR_46(23), STR_45(30), STR_44(42), STR_43(21), 
 14920 ;;		 -> STR_42(30), STR_41(52), STR_40(21), STR_39(30), 
 14921 ;;		 -> STR_38(52), STR_37(25), STR_36(21), STR_35(25), 
 14922 ;;		 -> STR_34(30), STR_33(52), STR_32(3), STR_31(32), 
 14923 ;;		 -> STR_30(32), STR_29(35), STR_28(66), STR_27(38), 
 14924 ;;		 -> STR_26(37), STR_25(37), STR_24(38), STR_23(38), 
 14925 ;;		 -> STR_22(55), STR_21(36), STR_20(30), STR_19(30), 
 14926 ;;		 -> STR_18(37), STR_17(37), STR_16(38), STR_15(38), 
 14927 ;;		 -> STR_14(54), STR_13(36), STR_12(21), STR_11(27), 
 14928 ;;		 -> STR_9(19), STR_8(16), STR_7(28), STR_6(44), 
 14929 ;;		 -> STR_5(33), STR_4(34), STR_3(58), STR_2(53), 
 14930 ;;		 -> STR_1(17), 
 14931 ;; Auto vars:     Size  Location     Type
 14932 ;;  ap              2   45[BANK0 ] PTR void [1]
 14933 ;;		 -> ?_printf(2), 
 14934 ;;  ret             2    0        int 
 14935 ;; Return value:  Size  Location     Type
 14936 ;;                  2   29[BANK0 ] int 
 14937 ;; Registers used:
 14938 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14939 ;; Tracked objects:
 14940 ;;		On entry : 0/0
 14941 ;;		On exit  : 0/0
 14942 ;;		Unchanged: 0/0
 14943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14944 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14945 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14947 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14948 ;;Total ram usage:       18 bytes
 14949 ;; Hardware stack levels used:    1
 14950 ;; Hardware stack levels required when called:   12
 14951 ;; This function calls:
 14952 ;;		_vfprintf
 14953 ;; This function is called by:
 14954 ;;		_main
 14955 ;;		_PrintMB400
 14956 ;;		_PrintModbus
 14957 ;;		_ModbusFC03
 14958 ;;		_ModbusFC04
 14959 ;;		_ModbusFC10
 14960 ;;		_PrintModRespon
 14961 ;;		_ModbusRx
 14962 ;;		_InitialiseString
 14963 ;;		_ReadRX232
 14964 ;;		_TogDebug
 14965 ;;		_ClearEEAddRange
 14966 ;;		_SaveCardDat
 14967 ;; This function uses a non-reentrant model
 14968 ;;
 14969                           
 14970                           	psect	text53
 14971  005114                     __ptext53:
 14972                           	opt callstack 0
 14973  005114                     _printf:
 14974                           	opt callstack 18
 14975  005114  0E7F               	movlw	low (?_printf+2)
 14976  005116  0100               	movlb	0	; () banked
 14977  005118  6F8D               	movwf	printf@ap& (0+255),b
 14978  00511A  0E00               	movlw	high (?_printf+2)
 14979  00511C  6F8E               	movwf	(printf@ap+1)& (0+255),b
 14980  00511E                     
 14981                           ; BSR set to: 0
 14982  00511E  0E00               	movlw	0
 14983  005120  6F77               	movwf	vfprintf@fp& (0+255),b
 14984  005122  0E00               	movlw	0
 14985  005124  6F78               	movwf	(vfprintf@fp+1)& (0+255),b
 14986  005126  C07D  F079         	movff	printf@fmt,vfprintf@fmt
 14987  00512A  C07E  F07A         	movff	printf@fmt+1,vfprintf@fmt+1
 14988  00512E  0E8D               	movlw	low printf@ap
 14989  005130  6F7B               	movwf	vfprintf@ap& (0+255),b
 14990  005132  0E00               	movlw	high printf@ap
 14991  005134  6F7C               	movwf	(vfprintf@ap+1)& (0+255),b
 14992  005136  EC76  F024         	call	_vfprintf	;wreg free
 14993  00513A  0012               	return		;funcret
 14994  00513C                     __end_of_printf:
 14995                           	opt callstack 0
 14996                           
 14997 ;; *************** function _vfprintf *****************
 14998 ;; Defined at:
 14999 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 15000 ;; Parameters:    Size  Location     Type
 15001 ;;  fp              2   23[BANK0 ] PTR struct _IO_FILE
 15002 ;;		 -> NULL(0), 
 15003 ;;  fmt             2   25[BANK0 ] PTR const unsigned char 
 15004 ;;		 -> STR_135(12), STR_133(13), STR_132(17), STR_131(15), 
 15005 ;;		 -> STR_130(33), STR_128(38), STR_127(58), STR_126(19), 
 15006 ;;		 -> STR_125(18), STR_124(4), STR_123(16), STR_122(102), 
 15007 ;;		 -> STR_121(32), STR_120(33), STR_119(37), STR_118(44), 
 15008 ;;		 -> STR_117(22), STR_116(75), STR_115(67), STR_114(75), 
 15009 ;;		 -> STR_113(68), STR_112(69), STR_111(54), STR_110(52), 
 15010 ;;		 -> STR_109(53), STR_108(38), STR_107(51), STR_106(73), 
 15011 ;;		 -> STR_105(42), STR_104(36), STR_103(34), STR_100(42), 
 15012 ;;		 -> STR_99(22), STR_98(21), STR_97(20), STR_96(19), 
 15013 ;;		 -> STR_95(40), STR_85(33), STR_84(53), STR_83(52), 
 15014 ;;		 -> STR_82(26), STR_81(4), STR_80(24), STR_79(30), 
 15015 ;;		 -> STR_78(30), STR_77(37), STR_76(37), STR_75(38), 
 15016 ;;		 -> STR_74(38), STR_73(54), STR_72(36), STR_71(32), 
 15017 ;;		 -> STR_70(32), STR_69(35), STR_68(54), STR_67(38), 
 15018 ;;		 -> STR_66(54), STR_65(36), STR_64(19), STR_63(21), 
 15019 ;;		 -> STR_62(25), STR_61(54), STR_60(21), STR_59(25), 
 15020 ;;		 -> STR_58(15), STR_57(30), STR_56(52), STR_55(28), 
 15021 ;;		 -> STR_54(30), STR_53(52), STR_52(25), STR_51(30), 
 15022 ;;		 -> STR_50(52), STR_49(25), STR_48(30), STR_47(52), 
 15023 ;;		 -> STR_46(23), STR_45(30), STR_44(42), STR_43(21), 
 15024 ;;		 -> STR_42(30), STR_41(52), STR_40(21), STR_39(30), 
 15025 ;;		 -> STR_38(52), STR_37(25), STR_36(21), STR_35(25), 
 15026 ;;		 -> STR_34(30), STR_33(52), STR_32(3), STR_31(32), 
 15027 ;;		 -> STR_30(32), STR_29(35), STR_28(66), STR_27(38), 
 15028 ;;		 -> STR_26(37), STR_25(37), STR_24(38), STR_23(38), 
 15029 ;;		 -> STR_22(55), STR_21(36), STR_20(30), STR_19(30), 
 15030 ;;		 -> STR_18(37), STR_17(37), STR_16(38), STR_15(38), 
 15031 ;;		 -> STR_14(54), STR_13(36), STR_12(21), STR_11(27), 
 15032 ;;		 -> STR_9(19), STR_8(16), STR_7(28), STR_6(44), 
 15033 ;;		 -> STR_5(33), STR_4(34), STR_3(58), STR_2(53), 
 15034 ;;		 -> STR_1(17), 
 15035 ;;  ap              2   27[BANK0 ] PTR PTR void 
 15036 ;;		 -> printf@ap(2), 
 15037 ;; Auto vars:     Size  Location     Type
 15038 ;;  cfmt            2   82[COMRAM] PTR unsigned char 
 15039 ;;		 -> STR_135(12), STR_133(13), STR_132(17), STR_131(15), 
 15040 ;;		 -> STR_130(33), STR_128(38), STR_127(58), STR_126(19), 
 15041 ;;		 -> STR_125(18), STR_124(4), STR_123(16), STR_122(102), 
 15042 ;;		 -> STR_121(32), STR_120(33), STR_119(37), STR_118(44), 
 15043 ;;		 -> STR_117(22), STR_116(75), STR_115(67), STR_114(75), 
 15044 ;;		 -> STR_113(68), STR_112(69), STR_111(54), STR_110(52), 
 15045 ;;		 -> STR_109(53), STR_108(38), STR_107(51), STR_106(73), 
 15046 ;;		 -> STR_105(42), STR_104(36), STR_103(34), STR_100(42), 
 15047 ;;		 -> STR_99(22), STR_98(21), STR_97(20), STR_96(19), 
 15048 ;;		 -> STR_95(40), STR_85(33), STR_84(53), STR_83(52), 
 15049 ;;		 -> STR_82(26), STR_81(4), STR_80(24), STR_79(30), 
 15050 ;;		 -> STR_78(30), STR_77(37), STR_76(37), STR_75(38), 
 15051 ;;		 -> STR_74(38), STR_73(54), STR_72(36), STR_71(32), 
 15052 ;;		 -> STR_70(32), STR_69(35), STR_68(54), STR_67(38), 
 15053 ;;		 -> STR_66(54), STR_65(36), STR_64(19), STR_63(21), 
 15054 ;;		 -> STR_62(25), STR_61(54), STR_60(21), STR_59(25), 
 15055 ;;		 -> STR_58(15), STR_57(30), STR_56(52), STR_55(28), 
 15056 ;;		 -> STR_54(30), STR_53(52), STR_52(25), STR_51(30), 
 15057 ;;		 -> STR_50(52), STR_49(25), STR_48(30), STR_47(52), 
 15058 ;;		 -> STR_46(23), STR_45(30), STR_44(42), STR_43(21), 
 15059 ;;		 -> STR_42(30), STR_41(52), STR_40(21), STR_39(30), 
 15060 ;;		 -> STR_38(52), STR_37(25), STR_36(21), STR_35(25), 
 15061 ;;		 -> STR_34(30), STR_33(52), STR_32(3), STR_31(32), 
 15062 ;;		 -> STR_30(32), STR_29(35), STR_28(66), STR_27(38), 
 15063 ;;		 -> STR_26(37), STR_25(37), STR_24(38), STR_23(38), 
 15064 ;;		 -> STR_22(55), STR_21(36), STR_20(30), STR_19(30), 
 15065 ;;		 -> STR_18(37), STR_17(37), STR_16(38), STR_15(38), 
 15066 ;;		 -> STR_14(54), STR_13(36), STR_12(21), STR_11(27), 
 15067 ;;		 -> STR_9(19), STR_8(16), STR_7(28), STR_6(44), 
 15068 ;;		 -> STR_5(33), STR_4(34), STR_3(58), STR_2(53), 
 15069 ;;		 -> STR_1(17), 
 15070 ;; Return value:  Size  Location     Type
 15071 ;;                  2   23[BANK0 ] int 
 15072 ;; Registers used:
 15073 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15074 ;; Tracked objects:
 15075 ;;		On entry : 0/0
 15076 ;;		On exit  : 0/0
 15077 ;;		Unchanged: 0/0
 15078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15079 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15080 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15082 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15083 ;;Total ram usage:        8 bytes
 15084 ;; Hardware stack levels used:    1
 15085 ;; Hardware stack levels required when called:   11
 15086 ;; This function calls:
 15087 ;;		_vfpfcnvrt
 15088 ;; This function is called by:
 15089 ;;		_printf
 15090 ;; This function uses a non-reentrant model
 15091 ;;
 15092                           
 15093                           	psect	text54
 15094  0048EC                     __ptext54:
 15095                           	opt callstack 0
 15096  0048EC                     _vfprintf:
 15097                           	opt callstack 18
 15098  0048EC                     
 15099                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
 15100  0048EC  C079  F053         	movff	vfprintf@fmt,vfprintf@cfmt
 15101  0048F0  C07A  F054         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 15102  0048F4                     
 15103                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
 15104  0048F4  0E00               	movlw	0
 15105  0048F6  0100               	movlb	0	; () banked
 15106  0048F8  6FCE               	movwf	(_nout+1)& (0+255),b
 15107  0048FA  0E00               	movlw	0
 15108  0048FC  6FCD               	movwf	_nout& (0+255),b
 15109                           
 15110                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 15111  0048FE  EF94  F024         	goto	l7322
 15112  004902                     l7320:
 15113                           
 15114                           ; BSR set to: 0
 15115                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
 15116  004902  C077  F049         	movff	vfprintf@fp,vfpfcnvrt@fp
 15117  004906  C078  F04A         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 15118  00490A  0E53               	movlw	low vfprintf@cfmt
 15119  00490C  6E4B               	movwf	vfpfcnvrt@fmt^0,c
 15120  00490E  0E00               	movlw	high vfprintf@cfmt
 15121  004910  6E4C               	movwf	(vfpfcnvrt@fmt+1)^0,c
 15122  004912  C07B  F04D         	movff	vfprintf@ap,vfpfcnvrt@ap
 15123  004916  C07C  F04E         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
 15124  00491A  ECF4  F006         	call	_vfpfcnvrt	;wreg free
 15125  00491E  5049               	movf	?_vfpfcnvrt^0,w,c
 15126  004920  0100               	movlb	0	; () banked
 15127  004922  27CD               	addwf	_nout& (0+255),f,b
 15128  004924  504A               	movf	(?_vfpfcnvrt+1)^0,w,c
 15129  004926  23CE               	addwfc	(_nout+1)& (0+255),f,b
 15130  004928                     l7322:
 15131                           
 15132                           ; BSR set to: 0
 15133                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 15134  004928  C053  FFF6         	movff	vfprintf@cfmt,tblptrl
 15135  00492C  C054  FFF7         	movff	vfprintf@cfmt+1,tblptrh
 15136  004930                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15137  004930  6AF8               	clrf	tblptru,c
 15138  004932                     	endif
 15139  004932                     	if	0	;tblptru may be non-zero
 15140  004932                     	endif
 15141  004932  0008               	tblrd		*
 15142  004934  50F5               	movf	tablat,w,c
 15143  004936  0900               	iorlw	0
 15144  004938  A4D8               	btfss	status,2,c
 15145  00493A  EFA1  F024         	goto	u7301
 15146  00493E  EFA3  F024         	goto	u7300
 15147  004942                     u7301:
 15148  004942  EF81  F024         	goto	l7320
 15149  004946                     u7300:
 15150  004946                     
 15151                           ; BSR set to: 0
 15152                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
 15153  004946  C0CD  F077         	movff	_nout,?_vfprintf
 15154  00494A  C0CE  F078         	movff	_nout+1,?_vfprintf+1
 15155  00494E                     
 15156                           ; BSR set to: 0
 15157  00494E  0012               	return		;funcret
 15158  004950                     __end_of_vfprintf:
 15159                           	opt callstack 0
 15160                           
 15161 ;; *************** function _vfpfcnvrt *****************
 15162 ;; Defined at:
 15163 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 15164 ;; Parameters:    Size  Location     Type
 15165 ;;  fp              2   72[COMRAM] PTR struct _IO_FILE
 15166 ;;		 -> NULL(0), 
 15167 ;;  fmt             2   74[COMRAM] PTR PTR unsigned char 
 15168 ;;		 -> vfprintf@cfmt(2), 
 15169 ;;  ap              2   76[COMRAM] PTR PTR void 
 15170 ;;		 -> printf@ap(2), 
 15171 ;; Auto vars:     Size  Location     Type
 15172 ;;  llu             8   15[BANK0 ] unsigned long long 
 15173 ;;  ll              8    0[BANK0 ] long long 
 15174 ;;  f               4    0        long long 
 15175 ;;  vp              3    0        PTR void 
 15176 ;;  ct              3    0        unsigned char [3]
 15177 ;;  done            2   11[BANK0 ] int 
 15178 ;;  cp              2    8[BANK0 ] PTR unsigned char 
 15179 ;;		 -> ?_printf(2), ValidateCmd@ConfName_1831(20), ValidateCmd@ConfName_1827(20), ValidateCmd@ConfName(20), 
 15180 ;;		 -> STR_102(9), STR_101(12), InitialiseString@RevNum(2), InitialiseString@PartNum(19), 
 15181 ;;		 -> InitialiseString@SerialNum(11), Command(16), 
 15182 ;;  i               2    0        int 
 15183 ;;  c               1   10[BANK0 ] unsigned char 
 15184 ;; Return value:  Size  Location     Type
 15185 ;;                  2   72[COMRAM] int 
 15186 ;; Registers used:
 15187 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15188 ;; Tracked objects:
 15189 ;;		On entry : 0/0
 15190 ;;		On exit  : 0/0
 15191 ;;		Unchanged: 0/0
 15192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15193 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15194 ;;      Locals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15195 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15196 ;;      Totals:        10      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15197 ;;Total ram usage:       33 bytes
 15198 ;; Hardware stack levels used:    1
 15199 ;; Hardware stack levels required when called:   10
 15200 ;; This function calls:
 15201 ;;		_atoi
 15202 ;;		_dtoa
 15203 ;;		_fputc
 15204 ;;		_isdigit
 15205 ;;		_stoa
 15206 ;;		_utoa
 15207 ;;		_xtoa
 15208 ;; This function is called by:
 15209 ;;		_vfprintf
 15210 ;; This function uses a non-reentrant model
 15211 ;;
 15212                           
 15213                           	psect	text55
 15214  000DE8                     __ptext55:
 15215                           	opt callstack 0
 15216  000DE8                     _vfpfcnvrt:
 15217                           	opt callstack 18
 15218  000DE8                     
 15219                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
 15220  000DE8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15221  000DEC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15222  000DF0  CFDE FFF6          	movff	postinc2,tblptrl
 15223  000DF4  CFDD FFF7          	movff	postdec2,tblptrh
 15224  000DF8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15225  000DF8  6AF8               	clrf	tblptru,c
 15226  000DFA                     	endif
 15227  000DFA                     	if	0	;tblptru may be non-zero
 15228  000DFA                     	endif
 15229  000DFA  0008               	tblrd		*
 15230  000DFC  50F5               	movf	tablat,w,c
 15231  000DFE  0A25               	xorlw	37
 15232  000E00  A4D8               	btfss	status,2,c
 15233  000E02  EF05  F007         	goto	u7131
 15234  000E06  EF07  F007         	goto	u7130
 15235  000E0A                     u7131:
 15236  000E0A  EF9C  F009         	goto	l7294
 15237  000E0E                     u7130:
 15238  000E0E                     
 15239                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
 15240  000E0E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15241  000E12  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15242  000E16  2ADE               	incf	postinc2,f,c
 15243  000E18  0E00               	movlw	0
 15244  000E1A  22DD               	addwfc	postdec2,f,c
 15245  000E1C                     
 15246                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
 15247  000E1C  0E00               	movlw	0
 15248  000E1E  0100               	movlb	0	; () banked
 15249  000E20  6FD0               	movwf	(_width+1)& (0+255),b
 15250  000E22  0E00               	movlw	0
 15251  000E24  6FCF               	movwf	_width& (0+255),b
 15252  000E26  C0CF  F057         	movff	_width,_flags
 15253  000E2A  C0D0  F058         	movff	_width+1,_flags+1
 15254  000E2E                     
 15255                           ; BSR set to: 0
 15256                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
 15257  000E2E  69D1               	setf	_prec& (0+255),b
 15258  000E30  69D2               	setf	(_prec+1)& (0+255),b
 15259  000E32                     
 15260                           ; BSR set to: 0
 15261                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
 15262  000E32  0E00               	movlw	0
 15263  000E34  6F6C               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 15264  000E36  0E00               	movlw	0
 15265  000E38  6F6B               	movwf	vfpfcnvrt@done& (0+255),b
 15266                           
 15267                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
 15268  000E3A  EF66  F007         	goto	l7216
 15269  000E3E                     l7190:
 15270                           
 15271                           ; BSR set to: 0
 15272                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
 15273  000E3E  8057               	bsf	_flags^0,0,c
 15274  000E40                     l7192:
 15275                           
 15276                           ; BSR set to: 0
 15277                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
 15278  000E40  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15279  000E44  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15280  000E48  2ADE               	incf	postinc2,f,c
 15281  000E4A  0E00               	movlw	0
 15282  000E4C  22DD               	addwfc	postdec2,f,c
 15283                           
 15284                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
 15285  000E4E  EF66  F007         	goto	l7216
 15286  000E52                     l7194:
 15287                           
 15288                           ; BSR set to: 0
 15289                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
 15290  000E52  8257               	bsf	_flags^0,1,c
 15291  000E54  EF20  F007         	goto	l7192
 15292  000E58                     l7198:
 15293                           
 15294                           ; BSR set to: 0
 15295                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
 15296  000E58  8457               	bsf	_flags^0,2,c
 15297  000E5A  EF20  F007         	goto	l7192
 15298  000E5E                     l7202:
 15299                           
 15300                           ; BSR set to: 0
 15301                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
 15302  000E5E  8657               	bsf	_flags^0,3,c
 15303  000E60  EF20  F007         	goto	l7192
 15304  000E64                     l7206:
 15305                           
 15306                           ; BSR set to: 0
 15307                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
 15308  000E64  8857               	bsf	_flags^0,4,c
 15309  000E66  EF20  F007         	goto	l7192
 15310  000E6A                     l7210:
 15311                           
 15312                           ; BSR set to: 0
 15313                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
 15314  000E6A  0E00               	movlw	0
 15315  000E6C  6F6C               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 15316  000E6E  0E01               	movlw	1
 15317  000E70  6F6B               	movwf	vfpfcnvrt@done& (0+255),b
 15318                           
 15319                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
 15320  000E72  EF66  F007         	goto	l7216
 15321  000E76                     l7214:
 15322                           
 15323                           ; BSR set to: 0
 15324  000E76  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15325  000E7A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15326  000E7E  CFDE FFF6          	movff	postinc2,tblptrl
 15327  000E82  CFDD FFF7          	movff	postdec2,tblptrh
 15328  000E86                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15329  000E86  6AF8               	clrf	tblptru,c
 15330  000E88                     	endif
 15331  000E88                     	if	0	;tblptru may be non-zero
 15332  000E88                     	endif
 15333  000E88  0008               	tblrd		*
 15334  000E8A  50F5               	movf	tablat,w,c
 15335  000E8C  6E4F               	movwf	??_vfpfcnvrt^0,c
 15336  000E8E  6A50               	clrf	(??_vfpfcnvrt+1)^0,c
 15337                           
 15338                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15339                           ; Switch size 1, requested type "simple"
 15340                           ; Number of cases is 1, Range of values is 0 to 0
 15341                           ; switch strategies available:
 15342                           ; Name         Instructions Cycles
 15343                           ; simple_byte            4     3 (average)
 15344                           ;	Chosen strategy is simple_byte
 15345  000E90  5050               	movf	(??_vfpfcnvrt+1)^0,w,c
 15346  000E92  0A00               	xorlw	0	; case 0
 15347  000E94  B4D8               	btfsc	status,2,c
 15348  000E96  EF4F  F007         	goto	l8768
 15349  000E9A  EF35  F007         	goto	l7210
 15350  000E9E                     l8768:
 15351                           
 15352                           ; BSR set to: 0
 15353                           ; Switch size 1, requested type "simple"
 15354                           ; Number of cases is 5, Range of values is 32 to 48
 15355                           ; switch strategies available:
 15356                           ; Name         Instructions Cycles
 15357                           ; simple_byte           16     9 (average)
 15358                           ;	Chosen strategy is simple_byte
 15359  000E9E  504F               	movf	??_vfpfcnvrt^0,w,c
 15360  000EA0  0A20               	xorlw	32	; case 32
 15361  000EA2  B4D8               	btfsc	status,2,c
 15362  000EA4  EF2F  F007         	goto	l7202
 15363  000EA8  0A03               	xorlw	3	; case 35
 15364  000EAA  B4D8               	btfsc	status,2,c
 15365  000EAC  EF32  F007         	goto	l7206
 15366  000EB0  0A08               	xorlw	8	; case 43
 15367  000EB2  B4D8               	btfsc	status,2,c
 15368  000EB4  EF2C  F007         	goto	l7198
 15369  000EB8  0A06               	xorlw	6	; case 45
 15370  000EBA  B4D8               	btfsc	status,2,c
 15371  000EBC  EF1F  F007         	goto	l7190
 15372  000EC0  0A1D               	xorlw	29	; case 48
 15373  000EC2  B4D8               	btfsc	status,2,c
 15374  000EC4  EF29  F007         	goto	l7194
 15375  000EC8  EF35  F007         	goto	l7210
 15376  000ECC                     l7216:
 15377                           
 15378                           ; BSR set to: 0
 15379                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
 15380  000ECC  516B               	movf	vfpfcnvrt@done& (0+255),w,b
 15381  000ECE  116C               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
 15382  000ED0  B4D8               	btfsc	status,2,c
 15383  000ED2  EF6D  F007         	goto	u7141
 15384  000ED6  EF6F  F007         	goto	u7140
 15385  000EDA                     u7141:
 15386  000EDA  EF3B  F007         	goto	l7214
 15387  000EDE                     u7140:
 15388  000EDE                     
 15389                           ; BSR set to: 0
 15390                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
 15391  000EDE  A057               	btfss	_flags^0,0,c
 15392  000EE0  EF74  F007         	goto	u7151
 15393  000EE4  EF76  F007         	goto	u7150
 15394  000EE8                     u7151:
 15395  000EE8  EF77  F007         	goto	l7220
 15396  000EEC                     u7150:
 15397  000EEC                     
 15398                           ; BSR set to: 0
 15399                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
 15400  000EEC  9257               	bcf	_flags^0,1,c
 15401  000EEE                     l7220:
 15402                           
 15403                           ; BSR set to: 0
 15404                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
 15405  000EEE  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15406  000EF2  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15407  000EF6  CFDE FFF6          	movff	postinc2,tblptrl
 15408  000EFA  CFDD FFF7          	movff	postdec2,tblptrh
 15409  000EFE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15410  000EFE  6AF8               	clrf	tblptru,c
 15411  000F00                     	endif
 15412  000F00                     	if	0	;tblptru may be non-zero
 15413  000F00                     	endif
 15414  000F00  0008               	tblrd		*
 15415  000F02  50F5               	movf	tablat,w,c
 15416  000F04  0A2A               	xorlw	42
 15417  000F06  A4D8               	btfss	status,2,c
 15418  000F08  EF88  F007         	goto	u7161
 15419  000F0C  EF8A  F007         	goto	u7160
 15420  000F10                     u7161:
 15421  000F10  EFB3  F007         	goto	l7228
 15422  000F14                     u7160:
 15423  000F14                     
 15424                           ; BSR set to: 0
 15425                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
 15426  000F14  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15427  000F18  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15428  000F1C  2ADE               	incf	postinc2,f,c
 15429  000F1E  0E00               	movlw	0
 15430  000F20  22DD               	addwfc	postdec2,f,c
 15431                           
 15432                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
 15433  000F22  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 15434  000F26  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 15435  000F2A  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 15436  000F2E  0E02               	movlw	2
 15437  000F30  26DE               	addwf	postinc2,f,c
 15438  000F32  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 15439  000F36  0E00               	movlw	0
 15440  000F38  22DD               	addwfc	postdec2,f,c
 15441  000F3A  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 15442  000F3E  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 15443  000F42  CFDE F0CF          	movff	postinc2,_width
 15444  000F46  CFDD F0D0          	movff	postdec2,_width+1
 15445  000F4A                     
 15446                           ; BSR set to: 0
 15447                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
 15448  000F4A  BFD0               	btfsc	(_width+1)& (0+255),7,b
 15449  000F4C  EFAC  F007         	goto	u7170
 15450  000F50  EFAA  F007         	goto	u7171
 15451  000F54                     u7171:
 15452  000F54  EFF8  F007         	goto	l7238
 15453  000F58                     u7170:
 15454  000F58                     
 15455                           ; BSR set to: 0
 15456                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
 15457  000F58  8057               	bsf	_flags^0,0,c
 15458                           
 15459                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
 15460  000F5A  6DCF               	negf	_width& (0+255),b
 15461  000F5C  1FD0               	comf	(_width+1)& (0+255),f,b
 15462  000F5E  B0D8               	btfsc	status,0,c
 15463  000F60  2BD0               	incf	(_width+1)& (0+255),f,b
 15464  000F62  EFF8  F007         	goto	l7238
 15465  000F66                     l7228:
 15466                           
 15467                           ; BSR set to: 0
 15468                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
 15469  000F66  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15470  000F6A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15471  000F6E  CFDE F00C          	movff	postinc2,atoi@s
 15472  000F72  CFDD F00D          	movff	postdec2,atoi@s+1
 15473  000F76  EC5D  F019         	call	_atoi	;wreg free
 15474  000F7A  C00C  F0CF         	movff	?_atoi,_width
 15475  000F7E  C00D  F0D0         	movff	?_atoi+1,_width+1
 15476                           
 15477                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 15478  000F82  EFCA  F007         	goto	l7232
 15479  000F86                     l7230:
 15480                           
 15481                           ; BSR set to: 0
 15482                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
 15483  000F86  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15484  000F8A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15485  000F8E  2ADE               	incf	postinc2,f,c
 15486  000F90  0E00               	movlw	0
 15487  000F92  22DD               	addwfc	postdec2,f,c
 15488  000F94                     l7232:
 15489  000F94  0ED0               	movlw	208
 15490  000F96  6E4F               	movwf	??_vfpfcnvrt^0,c
 15491  000F98  0EFF               	movlw	255
 15492  000F9A  6E50               	movwf	(??_vfpfcnvrt+1)^0,c
 15493  000F9C  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15494  000FA0  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15495  000FA4  CFDE FFF6          	movff	postinc2,tblptrl
 15496  000FA8  CFDD FFF7          	movff	postdec2,tblptrh
 15497  000FAC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15498  000FAC  6AF8               	clrf	tblptru,c
 15499  000FAE                     	endif
 15500  000FAE                     	if	0	;tblptru may be non-zero
 15501  000FAE                     	endif
 15502  000FAE  0008               	tblrd		*
 15503  000FB0  50F5               	movf	tablat,w,c
 15504  000FB2  6E51               	movwf	(??_vfpfcnvrt+2)^0,c
 15505  000FB4  6A52               	clrf	(??_vfpfcnvrt+3)^0,c
 15506  000FB6  504F               	movf	??_vfpfcnvrt^0,w,c
 15507  000FB8  2651               	addwf	(??_vfpfcnvrt+2)^0,f,c
 15508  000FBA  5050               	movf	(??_vfpfcnvrt+1)^0,w,c
 15509  000FBC  2252               	addwfc	(??_vfpfcnvrt+3)^0,f,c
 15510  000FBE  5052               	movf	(??_vfpfcnvrt+3)^0,w,c
 15511  000FC0  E10A               	bnz	u7180
 15512  000FC2  0E0A               	movlw	10
 15513  000FC4  5C51               	subwf	(??_vfpfcnvrt+2)^0,w,c
 15514  000FC6  A0D8               	btfss	status,0,c
 15515  000FC8  EFE8  F007         	goto	u7181
 15516  000FCC  EFEB  F007         	goto	u7180
 15517  000FD0                     u7181:
 15518  000FD0  0E01               	movlw	1
 15519  000FD2  EFEC  F007         	goto	u7190
 15520  000FD6                     u7180:
 15521  000FD6  0E00               	movlw	0
 15522  000FD8                     u7190:
 15523  000FD8  0100               	movlb	0	; () banked
 15524  000FDA  6F6D               	movwf	_vfpfcnvrt$1953& (0+255),b
 15525  000FDC  6B6E               	clrf	(_vfpfcnvrt$1953+1)& (0+255),b
 15526  000FDE                     
 15527                           ; BSR set to: 0
 15528  000FDE  516D               	movf	_vfpfcnvrt$1953& (0+255),w,b
 15529  000FE0  116E               	iorwf	(_vfpfcnvrt$1953+1)& (0+255),w,b
 15530  000FE2  A4D8               	btfss	status,2,c
 15531  000FE4  EFF6  F007         	goto	u7201
 15532  000FE8  EFF8  F007         	goto	u7200
 15533  000FEC                     u7201:
 15534  000FEC  EFC3  F007         	goto	l7230
 15535  000FF0                     u7200:
 15536  000FF0                     l7238:
 15537                           
 15538                           ; BSR set to: 0
 15539                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 15540  000FF0  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15541  000FF4  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15542  000FF8  CFDE FFF6          	movff	postinc2,tblptrl
 15543  000FFC  CFDD FFF7          	movff	postdec2,tblptrh
 15544  001000                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15545  001000  6AF8               	clrf	tblptru,c
 15546  001002                     	endif
 15547  001002                     	if	0	;tblptru may be non-zero
 15548  001002                     	endif
 15549  001002  0008               	tblrd		*
 15550  001004  50F5               	movf	tablat,w,c
 15551  001006  0A64               	xorlw	100
 15552  001008  B4D8               	btfsc	status,2,c
 15553  00100A  EF09  F008         	goto	u7211
 15554  00100E  EF0B  F008         	goto	u7210
 15555  001012                     u7211:
 15556  001012  EF1E  F008         	goto	l7242
 15557  001016                     u7210:
 15558  001016                     
 15559                           ; BSR set to: 0
 15560  001016  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15561  00101A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15562  00101E  CFDE FFF6          	movff	postinc2,tblptrl
 15563  001022  CFDD FFF7          	movff	postdec2,tblptrh
 15564  001026                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15565  001026  6AF8               	clrf	tblptru,c
 15566  001028                     	endif
 15567  001028                     	if	0	;tblptru may be non-zero
 15568  001028                     	endif
 15569  001028  0008               	tblrd		*
 15570  00102A  50F5               	movf	tablat,w,c
 15571  00102C  0A69               	xorlw	105
 15572  00102E  A4D8               	btfss	status,2,c
 15573  001030  EF1C  F008         	goto	u7221
 15574  001034  EF1E  F008         	goto	u7220
 15575  001038                     u7221:
 15576  001038  EF5E  F008         	goto	l7248
 15577  00103C                     u7220:
 15578  00103C                     l7242:
 15579                           
 15580                           ; BSR set to: 0
 15581                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
 15582  00103C  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15583  001040  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15584  001044  2ADE               	incf	postinc2,f,c
 15585  001046  0E00               	movlw	0
 15586  001048  22DD               	addwfc	postdec2,f,c
 15587                           
 15588                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 15589  00104A  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 15590  00104E  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 15591  001052  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 15592  001056  0E02               	movlw	2
 15593  001058  26DE               	addwf	postinc2,f,c
 15594  00105A  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 15595  00105E  0E00               	movlw	0
 15596  001060  22DD               	addwfc	postdec2,f,c
 15597  001062  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 15598  001066  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 15599  00106A  CFDE F060          	movff	postinc2,vfpfcnvrt@ll
 15600  00106E  CFDD F061          	movff	postdec2,vfpfcnvrt@ll+1
 15601  001072  0E00               	movlw	0
 15602  001074  BF61               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
 15603  001076  0EFF               	movlw	-1
 15604  001078  6F62               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
 15605  00107A  6F63               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
 15606  00107C  6F64               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
 15607  00107E  6F65               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
 15608  001080  6F66               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
 15609  001082  6F67               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
 15610  001084                     
 15611                           ; BSR set to: 0
 15612                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
 15613  001084  C049  F022         	movff	vfpfcnvrt@fp,dtoa@fp
 15614  001088  C04A  F023         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 15615  00108C  C060  F024         	movff	vfpfcnvrt@ll,dtoa@d
 15616  001090  C061  F025         	movff	vfpfcnvrt@ll+1,dtoa@d+1
 15617  001094  C062  F026         	movff	vfpfcnvrt@ll+2,dtoa@d+2
 15618  001098  C063  F027         	movff	vfpfcnvrt@ll+3,dtoa@d+3
 15619  00109C  C064  F028         	movff	vfpfcnvrt@ll+4,dtoa@d+4
 15620  0010A0  C065  F029         	movff	vfpfcnvrt@ll+5,dtoa@d+5
 15621  0010A4  C066  F02A         	movff	vfpfcnvrt@ll+6,dtoa@d+6
 15622  0010A8  C067  F02B         	movff	vfpfcnvrt@ll+7,dtoa@d+7
 15623  0010AC  EC0D  F010         	call	_dtoa	;wreg free
 15624  0010B0  C022  F049         	movff	?_dtoa,?_vfpfcnvrt
 15625  0010B4  C023  F04A         	movff	?_dtoa+1,?_vfpfcnvrt+1
 15626  0010B8  EFB8  F009         	goto	l1365
 15627  0010BC                     l7248:
 15628                           
 15629                           ; BSR set to: 0
 15630                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
 15631  0010BC  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15632  0010C0  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15633  0010C4  CFDE FFF6          	movff	postinc2,tblptrl
 15634  0010C8  CFDD FFF7          	movff	postdec2,tblptrh
 15635  0010CC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15636  0010CC  6AF8               	clrf	tblptru,c
 15637  0010CE                     	endif
 15638  0010CE                     	if	0	;tblptru may be non-zero
 15639  0010CE                     	endif
 15640  0010CE  0008               	tblrd		*
 15641  0010D0  50F5               	movf	tablat,w,c
 15642  0010D2  0A73               	xorlw	115
 15643  0010D4  A4D8               	btfss	status,2,c
 15644  0010D6  EF6F  F008         	goto	u7231
 15645  0010DA  EF71  F008         	goto	u7230
 15646  0010DE                     u7231:
 15647  0010DE  EF9C  F008         	goto	l7256
 15648  0010E2                     u7230:
 15649  0010E2                     
 15650                           ; BSR set to: 0
 15651                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
 15652  0010E2  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15653  0010E6  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15654  0010EA  2ADE               	incf	postinc2,f,c
 15655  0010EC  0E00               	movlw	0
 15656  0010EE  22DD               	addwfc	postdec2,f,c
 15657                           
 15658                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 15659  0010F0  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 15660  0010F4  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 15661  0010F8  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 15662  0010FC  0E02               	movlw	2
 15663  0010FE  26DE               	addwf	postinc2,f,c
 15664  001100  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 15665  001104  0E00               	movlw	0
 15666  001106  22DD               	addwfc	postdec2,f,c
 15667  001108  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 15668  00110C  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 15669  001110  CFDE F068          	movff	postinc2,vfpfcnvrt@cp
 15670  001114  CFDD F069          	movff	postdec2,vfpfcnvrt@cp+1
 15671  001118                     
 15672                           ; BSR set to: 0
 15673                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
 15674  001118  C049  F010         	movff	vfpfcnvrt@fp,stoa@fp
 15675  00111C  C04A  F011         	movff	vfpfcnvrt@fp+1,stoa@fp+1
 15676  001120  C068  F012         	movff	vfpfcnvrt@cp,stoa@s
 15677  001124  C069  F013         	movff	vfpfcnvrt@cp+1,stoa@s+1
 15678  001128  EC90  F018         	call	_stoa	;wreg free
 15679  00112C  C010  F049         	movff	?_stoa,?_vfpfcnvrt
 15680  001130  C011  F04A         	movff	?_stoa+1,?_vfpfcnvrt+1
 15681  001134  EFB8  F009         	goto	l1365
 15682  001138                     l7256:
 15683                           
 15684                           ; BSR set to: 0
 15685                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
 15686  001138  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15687  00113C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15688  001140  CFDE FFF6          	movff	postinc2,tblptrl
 15689  001144  CFDD FFF7          	movff	postdec2,tblptrh
 15690  001148                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15691  001148  6AF8               	clrf	tblptru,c
 15692  00114A                     	endif
 15693  00114A                     	if	0	;tblptru may be non-zero
 15694  00114A                     	endif
 15695  00114A  0008               	tblrd		*
 15696  00114C  50F5               	movf	tablat,w,c
 15697  00114E  0A75               	xorlw	117
 15698  001150  A4D8               	btfss	status,2,c
 15699  001152  EFAD  F008         	goto	u7241
 15700  001156  EFAF  F008         	goto	u7240
 15701  00115A                     u7241:
 15702  00115A  EFF0  F008         	goto	l7264
 15703  00115E                     u7240:
 15704  00115E                     
 15705                           ; BSR set to: 0
 15706                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
 15707  00115E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15708  001162  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15709  001166  2ADE               	incf	postinc2,f,c
 15710  001168  0E00               	movlw	0
 15711  00116A  22DD               	addwfc	postdec2,f,c
 15712                           
 15713                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 15714  00116C  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 15715  001170  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 15716  001174  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 15717  001178  0E02               	movlw	2
 15718  00117A  26DE               	addwf	postinc2,f,c
 15719  00117C  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 15720  001180  0E00               	movlw	0
 15721  001182  22DD               	addwfc	postdec2,f,c
 15722  001184  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 15723  001188  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 15724  00118C  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
 15725  001190  CFDD F052          	movff	postdec2,??_vfpfcnvrt+3
 15726  001194  C051  F06F         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
 15727  001198  C052  F070         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
 15728  00119C  6B71               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 15729  00119E  6B72               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 15730  0011A0  6B73               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 15731  0011A2  6B74               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 15732  0011A4  6B75               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 15733  0011A6  6B76               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 15734  0011A8                     
 15735                           ; BSR set to: 0
 15736                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
 15737  0011A8  C049  F022         	movff	vfpfcnvrt@fp,utoa@fp
 15738  0011AC  C04A  F023         	movff	vfpfcnvrt@fp+1,utoa@fp+1
 15739  0011B0  C06F  F024         	movff	vfpfcnvrt@llu,utoa@d
 15740  0011B4  C070  F025         	movff	vfpfcnvrt@llu+1,utoa@d+1
 15741  0011B8  C071  F026         	movff	vfpfcnvrt@llu+2,utoa@d+2
 15742  0011BC  C072  F027         	movff	vfpfcnvrt@llu+3,utoa@d+3
 15743  0011C0  C073  F028         	movff	vfpfcnvrt@llu+4,utoa@d+4
 15744  0011C4  C074  F029         	movff	vfpfcnvrt@llu+5,utoa@d+5
 15745  0011C8  C075  F02A         	movff	vfpfcnvrt@llu+6,utoa@d+6
 15746  0011CC  C076  F02B         	movff	vfpfcnvrt@llu+7,utoa@d+7
 15747  0011D0  EC0D  F014         	call	_utoa	;wreg free
 15748  0011D4  C022  F049         	movff	?_utoa,?_vfpfcnvrt
 15749  0011D8  C023  F04A         	movff	?_utoa+1,?_vfpfcnvrt+1
 15750  0011DC  EFB8  F009         	goto	l1365
 15751  0011E0                     l7264:
 15752                           
 15753                           ; BSR set to: 0
 15754                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 15755  0011E0  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15756  0011E4  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15757  0011E8  CFDE FFF6          	movff	postinc2,tblptrl
 15758  0011EC  CFDD FFF7          	movff	postdec2,tblptrh
 15759  0011F0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15760  0011F0  6AF8               	clrf	tblptru,c
 15761  0011F2                     	endif
 15762  0011F2                     	if	0	;tblptru may be non-zero
 15763  0011F2                     	endif
 15764  0011F2  0008               	tblrd		*
 15765  0011F4  50F5               	movf	tablat,w,c
 15766  0011F6  0A78               	xorlw	120
 15767  0011F8  B4D8               	btfsc	status,2,c
 15768  0011FA  EF01  F009         	goto	u7251
 15769  0011FE  EF03  F009         	goto	u7250
 15770  001202                     u7251:
 15771  001202  EF16  F009         	goto	l7268
 15772  001206                     u7250:
 15773  001206                     
 15774                           ; BSR set to: 0
 15775  001206  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15776  00120A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15777  00120E  CFDE FFF6          	movff	postinc2,tblptrl
 15778  001212  CFDD FFF7          	movff	postdec2,tblptrh
 15779  001216                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15780  001216  6AF8               	clrf	tblptru,c
 15781  001218                     	endif
 15782  001218                     	if	0	;tblptru may be non-zero
 15783  001218                     	endif
 15784  001218  0008               	tblrd		*
 15785  00121A  50F5               	movf	tablat,w,c
 15786  00121C  0A58               	xorlw	88
 15787  00121E  A4D8               	btfss	status,2,c
 15788  001220  EF14  F009         	goto	u7261
 15789  001224  EF16  F009         	goto	u7260
 15790  001228                     u7261:
 15791  001228  EF65  F009         	goto	l7278
 15792  00122C                     u7260:
 15793  00122C                     l7268:
 15794                           
 15795                           ; BSR set to: 0
 15796                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
 15797  00122C  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15798  001230  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15799  001234  CFDE FFF6          	movff	postinc2,tblptrl
 15800  001238  CFDD FFF7          	movff	postdec2,tblptrh
 15801  00123C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15802  00123C  6AF8               	clrf	tblptru,c
 15803  00123E                     	endif
 15804  00123E                     	if	0	;tblptru may be non-zero
 15805  00123E                     	endif
 15806  00123E  0008               	tblrd		*
 15807  001240  CFF5 F06A          	movff	tablat,vfpfcnvrt@c
 15808  001244                     
 15809                           ; BSR set to: 0
 15810                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
 15811  001244  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15812  001248  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15813  00124C  2ADE               	incf	postinc2,f,c
 15814  00124E  0E00               	movlw	0
 15815  001250  22DD               	addwfc	postdec2,f,c
 15816  001252                     
 15817                           ; BSR set to: 0
 15818                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 15819  001252  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 15820  001256  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 15821  00125A  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 15822  00125E  0E02               	movlw	2
 15823  001260  26DE               	addwf	postinc2,f,c
 15824  001262  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 15825  001266  0E00               	movlw	0
 15826  001268  22DD               	addwfc	postdec2,f,c
 15827  00126A  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 15828  00126E  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 15829  001272  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
 15830  001276  CFDD F052          	movff	postdec2,??_vfpfcnvrt+3
 15831  00127A  C051  F06F         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
 15832  00127E  C052  F070         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
 15833  001282  6B71               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 15834  001284  6B72               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 15835  001286  6B73               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 15836  001288  6B74               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 15837  00128A  6B75               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 15838  00128C  6B76               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 15839  00128E                     
 15840                           ; BSR set to: 0
 15841                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
 15842  00128E  C049  F022         	movff	vfpfcnvrt@fp,xtoa@fp
 15843  001292  C04A  F023         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
 15844  001296  C06F  F024         	movff	vfpfcnvrt@llu,xtoa@d
 15845  00129A  C070  F025         	movff	vfpfcnvrt@llu+1,xtoa@d+1
 15846  00129E  C071  F026         	movff	vfpfcnvrt@llu+2,xtoa@d+2
 15847  0012A2  C072  F027         	movff	vfpfcnvrt@llu+3,xtoa@d+3
 15848  0012A6  C073  F028         	movff	vfpfcnvrt@llu+4,xtoa@d+4
 15849  0012AA  C074  F029         	movff	vfpfcnvrt@llu+5,xtoa@d+5
 15850  0012AE  C075  F02A         	movff	vfpfcnvrt@llu+6,xtoa@d+6
 15851  0012B2  C076  F02B         	movff	vfpfcnvrt@llu+7,xtoa@d+7
 15852  0012B6  C06A  F02C         	movff	vfpfcnvrt@c,xtoa@x
 15853  0012BA  EC7D  F011         	call	_xtoa	;wreg free
 15854  0012BE  C022  F049         	movff	?_xtoa,?_vfpfcnvrt
 15855  0012C2  C023  F04A         	movff	?_xtoa+1,?_vfpfcnvrt+1
 15856  0012C6  EFB8  F009         	goto	l1365
 15857  0012CA                     l7278:
 15858                           
 15859                           ; BSR set to: 0
 15860                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 15861  0012CA  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15862  0012CE  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15863  0012D2  CFDE FFF6          	movff	postinc2,tblptrl
 15864  0012D6  CFDD FFF7          	movff	postdec2,tblptrh
 15865  0012DA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15866  0012DA  6AF8               	clrf	tblptru,c
 15867  0012DC                     	endif
 15868  0012DC                     	if	0	;tblptru may be non-zero
 15869  0012DC                     	endif
 15870  0012DC  0008               	tblrd		*
 15871  0012DE  50F5               	movf	tablat,w,c
 15872  0012E0  0A25               	xorlw	37
 15873  0012E2  A4D8               	btfss	status,2,c
 15874  0012E4  EF76  F009         	goto	u7271
 15875  0012E8  EF78  F009         	goto	u7270
 15876  0012EC                     u7271:
 15877  0012EC  EF8F  F009         	goto	l7288
 15878  0012F0                     u7270:
 15879  0012F0                     
 15880                           ; BSR set to: 0
 15881                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 15882  0012F0  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15883  0012F4  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15884  0012F8  2ADE               	incf	postinc2,f,c
 15885  0012FA  0E00               	movlw	0
 15886  0012FC  22DD               	addwfc	postdec2,f,c
 15887  0012FE                     
 15888                           ; BSR set to: 0
 15889                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 15890  0012FE  0E00               	movlw	0
 15891  001300  6E08               	movwf	(fputc@c+1)^0,c
 15892  001302  0E25               	movlw	37
 15893  001304  6E07               	movwf	fputc@c^0,c
 15894  001306  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
 15895  00130A  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 15896  00130E  ECF6  F022         	call	_fputc	;wreg free
 15897  001312                     l7284:
 15898                           
 15899                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 15900  001312  0E00               	movlw	0
 15901  001314  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
 15902  001316  0E01               	movlw	1
 15903  001318  6E49               	movwf	?_vfpfcnvrt^0,c
 15904  00131A  EFB8  F009         	goto	l1365
 15905  00131E                     l7288:
 15906                           
 15907                           ; BSR set to: 0
 15908                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 15909  00131E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15910  001322  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15911  001326  2ADE               	incf	postinc2,f,c
 15912  001328  0E00               	movlw	0
 15913  00132A  22DD               	addwfc	postdec2,f,c
 15914  00132C                     
 15915                           ; BSR set to: 0
 15916                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
 15917  00132C  0E00               	movlw	0
 15918  00132E  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
 15919  001330  0E00               	movlw	0
 15920  001332  6E49               	movwf	?_vfpfcnvrt^0,c
 15921  001334  EFB8  F009         	goto	l1365
 15922  001338                     l7294:
 15923                           
 15924                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 15925  001338  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15926  00133C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15927  001340  CFDE FFF6          	movff	postinc2,tblptrl
 15928  001344  CFDD FFF7          	movff	postdec2,tblptrh
 15929  001348                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15930  001348  6AF8               	clrf	tblptru,c
 15931  00134A                     	endif
 15932  00134A                     	if	0	;tblptru may be non-zero
 15933  00134A                     	endif
 15934  00134A  0008               	tblrd		*
 15935  00134C  50F5               	movf	tablat,w,c
 15936  00134E  6E07               	movwf	fputc@c^0,c
 15937  001350  6A08               	clrf	(fputc@c+1)^0,c
 15938  001352  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
 15939  001356  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 15940  00135A  ECF6  F022         	call	_fputc	;wreg free
 15941  00135E                     
 15942                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 15943  00135E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 15944  001362  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 15945  001366  2ADE               	incf	postinc2,f,c
 15946  001368  0E00               	movlw	0
 15947  00136A  22DD               	addwfc	postdec2,f,c
 15948  00136C  EF89  F009         	goto	l7284
 15949  001370                     l1365:
 15950  001370  0012               	return		;funcret
 15951  001372                     __end_of_vfpfcnvrt:
 15952                           	opt callstack 0
 15953                           
 15954 ;; *************** function _xtoa *****************
 15955 ;; Defined at:
 15956 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 15957 ;; Parameters:    Size  Location     Type
 15958 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
 15959 ;;		 -> NULL(0), 
 15960 ;;  d               8   35[COMRAM] unsigned long long 
 15961 ;;  x               1   43[COMRAM] unsigned char 
 15962 ;; Auto vars:     Size  Location     Type
 15963 ;;  n               8   60[COMRAM] unsigned long long 
 15964 ;;  c               2   70[COMRAM] int 
 15965 ;;  i               2   68[COMRAM] int 
 15966 ;;  w               2   58[COMRAM] int 
 15967 ;;  p               2   56[COMRAM] int 
 15968 ;; Return value:  Size  Location     Type
 15969 ;;                  2   33[COMRAM] int 
 15970 ;; Registers used:
 15971 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15972 ;; Tracked objects:
 15973 ;;		On entry : 0/0
 15974 ;;		On exit  : 0/0
 15975 ;;		Unchanged: 0/0
 15976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15977 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15978 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15979 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15980 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15981 ;;Total ram usage:       39 bytes
 15982 ;; Hardware stack levels used:    1
 15983 ;; Hardware stack levels required when called:    9
 15984 ;; This function calls:
 15985 ;;		_isalpha
 15986 ;;		_isupper
 15987 ;;		_pad
 15988 ;;		_toupper
 15989 ;; This function is called by:
 15990 ;;		_vfpfcnvrt
 15991 ;; This function uses a non-reentrant model
 15992 ;;
 15993                           
 15994                           	psect	text56
 15995  0022FA                     __ptext56:
 15996                           	opt callstack 0
 15997  0022FA                     _xtoa:
 15998                           	opt callstack 18
 15999  0022FA                     
 16000                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
 16001  0022FA  0100               	movlb	0	; () banked
 16002  0022FC  BFD2               	btfsc	(_prec+1)& (0+255),7,b
 16003  0022FE  EF83  F011         	goto	u6891
 16004  002302  EF85  F011         	goto	u6890
 16005  002306                     u6891:
 16006  002306  EF86  F011         	goto	l7076
 16007  00230A                     u6890:
 16008  00230A                     
 16009                           ; BSR set to: 0
 16010                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
 16011  00230A  9257               	bcf	_flags^0,1,c
 16012  00230C                     l7076:
 16013                           
 16014                           ; BSR set to: 0
 16015                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
 16016  00230C  BFD2               	btfsc	(_prec+1)& (0+255),7,b
 16017  00230E  EF93  F011         	goto	u6900
 16018  002312  51D2               	movf	(_prec+1)& (0+255),w,b
 16019  002314  E106               	bnz	u6901
 16020  002316  05D1               	decf	_prec& (0+255),w,b
 16021  002318  B0D8               	btfsc	status,0,c
 16022  00231A  EF91  F011         	goto	u6901
 16023  00231E  EF93  F011         	goto	u6900
 16024  002322                     u6901:
 16025  002322  EF99  F011         	goto	l1311
 16026  002326                     u6900:
 16027  002326                     
 16028                           ; BSR set to: 0
 16029  002326  0E00               	movlw	0
 16030  002328  6E3A               	movwf	(xtoa@p+1)^0,c
 16031  00232A  0E01               	movlw	1
 16032  00232C  6E39               	movwf	xtoa@p^0,c
 16033  00232E  EF9D  F011         	goto	l1313
 16034  002332                     l1311:
 16035                           
 16036                           ; BSR set to: 0
 16037  002332  C0D1  F039         	movff	_prec,xtoa@p
 16038  002336  C0D2  F03A         	movff	_prec+1,xtoa@p+1
 16039  00233A                     l1313:
 16040                           
 16041                           ; BSR set to: 0
 16042                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
 16043  00233A  C0CF  F03B         	movff	_width,xtoa@w
 16044  00233E  C0D0  F03C         	movff	_width+1,xtoa@w+1
 16045                           
 16046                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
 16047  002342  A857               	btfss	_flags^0,4,c
 16048  002344  EFA6  F011         	goto	u6911
 16049  002348  EFA8  F011         	goto	u6910
 16050  00234C                     u6911:
 16051  00234C  EFAC  F011         	goto	l7082
 16052  002350                     u6910:
 16053  002350                     
 16054                           ; BSR set to: 0
 16055                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
 16056  002350  0EFE               	movlw	254
 16057  002352  263B               	addwf	xtoa@w^0,f,c
 16058  002354  0EFF               	movlw	255
 16059  002356  223C               	addwfc	(xtoa@w+1)^0,f,c
 16060  002358                     l7082:
 16061                           
 16062                           ; BSR set to: 0
 16063                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
 16064  002358  C024  F03D         	movff	xtoa@d,xtoa@n
 16065  00235C  C025  F03E         	movff	xtoa@d+1,xtoa@n+1
 16066  002360  C026  F03F         	movff	xtoa@d+2,xtoa@n+2
 16067  002364  C027  F040         	movff	xtoa@d+3,xtoa@n+3
 16068  002368  C028  F041         	movff	xtoa@d+4,xtoa@n+4
 16069  00236C  C029  F042         	movff	xtoa@d+5,xtoa@n+5
 16070  002370  C02A  F043         	movff	xtoa@d+6,xtoa@n+6
 16071  002374  C02B  F044         	movff	xtoa@d+7,xtoa@n+7
 16072  002378                     
 16073                           ; BSR set to: 0
 16074                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
 16075  002378  0E00               	movlw	0
 16076  00237A  6E46               	movwf	(xtoa@i+1)^0,c
 16077  00237C  0E1F               	movlw	31
 16078  00237E  6E45               	movwf	xtoa@i^0,c
 16079  002380                     
 16080                           ; BSR set to: 0
 16081                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
 16082  002380  0E00               	movlw	0
 16083  002382  0102               	movlb	2	; () banked
 16084  002384  6FFC               	movwf	(_dbuf+31)& (0+255),b
 16085                           
 16086                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16087  002386  EF78  F012         	goto	l7118
 16088  00238A                     l7088:
 16089                           
 16090                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
 16091  00238A  0645               	decf	xtoa@i^0,f,c
 16092  00238C  A0D8               	btfss	status,0,c
 16093  00238E  0646               	decf	(xtoa@i+1)^0,f,c
 16094  002390                     
 16095                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
 16096  002390  0E0F               	movlw	15
 16097  002392  143D               	andwf	xtoa@n^0,w,c
 16098  002394  6E47               	movwf	xtoa@c^0,c
 16099  002396  6A48               	clrf	(xtoa@c+1)^0,c
 16100  002398                     
 16101                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
 16102  002398  BE48               	btfsc	(xtoa@c+1)^0,7,c
 16103  00239A  EFD8  F011         	goto	u6921
 16104  00239E  5048               	movf	(xtoa@c+1)^0,w,c
 16105  0023A0  E109               	bnz	u6920
 16106  0023A2  0E0A               	movlw	10
 16107  0023A4  5C47               	subwf	xtoa@c^0,w,c
 16108  0023A6  A0D8               	btfss	status,0,c
 16109  0023A8  EFD8  F011         	goto	u6921
 16110  0023AC  EFDA  F011         	goto	u6920
 16111  0023B0                     u6921:
 16112  0023B0  EFE2  F011         	goto	l7096
 16113  0023B4                     u6920:
 16114  0023B4  0E57               	movlw	87
 16115  0023B6  2447               	addwf	xtoa@c^0,w,c
 16116  0023B8  6E47               	movwf	xtoa@c^0,c
 16117  0023BA  0E00               	movlw	0
 16118  0023BC  2048               	addwfc	(xtoa@c+1)^0,w,c
 16119  0023BE  6E48               	movwf	(xtoa@c+1)^0,c
 16120  0023C0  EFE8  F011         	goto	l1320
 16121  0023C4                     l7096:
 16122  0023C4  0E30               	movlw	48
 16123  0023C6  2447               	addwf	xtoa@c^0,w,c
 16124  0023C8  6E47               	movwf	xtoa@c^0,c
 16125  0023CA  0E00               	movlw	0
 16126  0023CC  2048               	addwfc	(xtoa@c+1)^0,w,c
 16127  0023CE  6E48               	movwf	(xtoa@c+1)^0,c
 16128  0023D0                     l1320:
 16129  0023D0  0EBF               	movlw	191
 16130  0023D2  6E2D               	movwf	??_xtoa^0,c
 16131  0023D4  0EFF               	movlw	255
 16132  0023D6  6E2E               	movwf	(??_xtoa+1)^0,c
 16133  0023D8  502C               	movf	xtoa@x^0,w,c
 16134  0023DA  6E2F               	movwf	(??_xtoa+2)^0,c
 16135  0023DC  6A30               	clrf	(??_xtoa+3)^0,c
 16136  0023DE  502D               	movf	??_xtoa^0,w,c
 16137  0023E0  262F               	addwf	(??_xtoa+2)^0,f,c
 16138  0023E2  502E               	movf	(??_xtoa+1)^0,w,c
 16139  0023E4  2230               	addwfc	(??_xtoa+3)^0,f,c
 16140  0023E6  5030               	movf	(??_xtoa+3)^0,w,c
 16141  0023E8  E10A               	bnz	u6930
 16142  0023EA  0E1A               	movlw	26
 16143  0023EC  5C2F               	subwf	(??_xtoa+2)^0,w,c
 16144  0023EE  A0D8               	btfss	status,0,c
 16145  0023F0  EFFC  F011         	goto	u6931
 16146  0023F4  EFFF  F011         	goto	u6930
 16147  0023F8                     u6931:
 16148  0023F8  0E01               	movlw	1
 16149  0023FA  EF00  F012         	goto	u6940
 16150  0023FE                     u6930:
 16151  0023FE  0E00               	movlw	0
 16152  002400                     u6940:
 16153  002400  6E35               	movwf	_xtoa$1938^0,c
 16154  002402  6A36               	clrf	(_xtoa$1938+1)^0,c
 16155  002404  5035               	movf	_xtoa$1938^0,w,c
 16156  002406  1036               	iorwf	(_xtoa$1938+1)^0,w,c
 16157  002408  B4D8               	btfsc	status,2,c
 16158  00240A  EF09  F012         	goto	u6951
 16159  00240E  EF0B  F012         	goto	u6950
 16160  002412                     u6951:
 16161  002412  EF3B  F012         	goto	l7110
 16162  002416                     u6950:
 16163  002416  0E9F               	movlw	159
 16164  002418  6E2D               	movwf	??_xtoa^0,c
 16165  00241A  0EFF               	movlw	255
 16166  00241C  6E2E               	movwf	(??_xtoa+1)^0,c
 16167  00241E  0E20               	movlw	32
 16168  002420  1047               	iorwf	xtoa@c^0,w,c
 16169  002422  6E2F               	movwf	(??_xtoa+2)^0,c
 16170  002424  0E00               	movlw	0
 16171  002426  1048               	iorwf	(xtoa@c+1)^0,w,c
 16172  002428  6E30               	movwf	(??_xtoa+3)^0,c
 16173  00242A  502D               	movf	??_xtoa^0,w,c
 16174  00242C  262F               	addwf	(??_xtoa+2)^0,f,c
 16175  00242E  502E               	movf	(??_xtoa+1)^0,w,c
 16176  002430  2230               	addwfc	(??_xtoa+3)^0,f,c
 16177  002432  5030               	movf	(??_xtoa+3)^0,w,c
 16178  002434  E10A               	bnz	u6960
 16179  002436  0E1A               	movlw	26
 16180  002438  5C2F               	subwf	(??_xtoa+2)^0,w,c
 16181  00243A  A0D8               	btfss	status,0,c
 16182  00243C  EF22  F012         	goto	u6961
 16183  002440  EF25  F012         	goto	u6960
 16184  002444                     u6961:
 16185  002444  0E01               	movlw	1
 16186  002446  EF26  F012         	goto	u6970
 16187  00244A                     u6960:
 16188  00244A  0E00               	movlw	0
 16189  00244C                     u6970:
 16190  00244C  6E37               	movwf	_xtoa$1939^0,c
 16191  00244E  6A38               	clrf	(_xtoa$1939+1)^0,c
 16192  002450  5037               	movf	_xtoa$1939^0,w,c
 16193  002452  1038               	iorwf	(_xtoa$1939+1)^0,w,c
 16194  002454  B4D8               	btfsc	status,2,c
 16195  002456  EF2F  F012         	goto	u6981
 16196  00245A  EF31  F012         	goto	u6980
 16197  00245E                     u6981:
 16198  00245E  EF3B  F012         	goto	l7110
 16199  002462                     u6980:
 16200  002462                     
 16201                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
 16202  002462  C047  F00B         	movff	xtoa@c,toupper@c
 16203  002466  C048  F00C         	movff	xtoa@c+1,toupper@c+1
 16204  00246A  ECD7  F024         	call	_toupper	;wreg free
 16205  00246E  C00B  F047         	movff	?_toupper,xtoa@c
 16206  002472  C00C  F048         	movff	?_toupper+1,xtoa@c+1
 16207  002476                     l7110:
 16208                           
 16209                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
 16210  002476  0EDD               	movlw	low _dbuf
 16211  002478  2445               	addwf	xtoa@i^0,w,c
 16212  00247A  6ED9               	movwf	fsr2l,c
 16213  00247C  0E02               	movlw	high _dbuf
 16214  00247E  2046               	addwfc	(xtoa@i+1)^0,w,c
 16215  002480  6EDA               	movwf	fsr2h,c
 16216  002482  C047  FFDF         	movff	xtoa@c,indf2
 16217  002486                     
 16218                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
 16219  002486  0639               	decf	xtoa@p^0,f,c
 16220  002488  A0D8               	btfss	status,0,c
 16221  00248A  063A               	decf	(xtoa@p+1)^0,f,c
 16222  00248C                     
 16223                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
 16224  00248C  063B               	decf	xtoa@w^0,f,c
 16225  00248E  A0D8               	btfss	status,0,c
 16226  002490  063C               	decf	(xtoa@w+1)^0,f,c
 16227  002492                     
 16228                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
 16229  002492  C03D  F02D         	movff	xtoa@n,??_xtoa
 16230  002496  C03E  F02E         	movff	xtoa@n+1,??_xtoa+1
 16231  00249A  C03F  F02F         	movff	xtoa@n+2,??_xtoa+2
 16232  00249E  C040  F030         	movff	xtoa@n+3,??_xtoa+3
 16233  0024A2  C041  F031         	movff	xtoa@n+4,??_xtoa+4
 16234  0024A6  C042  F032         	movff	xtoa@n+5,??_xtoa+5
 16235  0024AA  C043  F033         	movff	xtoa@n+6,??_xtoa+6
 16236  0024AE  C044  F034         	movff	xtoa@n+7,??_xtoa+7
 16237  0024B2  0E05               	movlw	5
 16238  0024B4  EF65  F012         	goto	u6990
 16239  0024B8                     u6995:
 16240  0024B8  90D8               	bcf	status,0,c
 16241  0024BA  3234               	rrcf	(??_xtoa+7)^0,f,c
 16242  0024BC  3233               	rrcf	(??_xtoa+6)^0,f,c
 16243  0024BE  3232               	rrcf	(??_xtoa+5)^0,f,c
 16244  0024C0  3231               	rrcf	(??_xtoa+4)^0,f,c
 16245  0024C2  3230               	rrcf	(??_xtoa+3)^0,f,c
 16246  0024C4  322F               	rrcf	(??_xtoa+2)^0,f,c
 16247  0024C6  322E               	rrcf	(??_xtoa+1)^0,f,c
 16248  0024C8  322D               	rrcf	??_xtoa^0,f,c
 16249  0024CA                     u6990:
 16250  0024CA  2EE8               	decfsz	wreg,f,c
 16251  0024CC  EF5C  F012         	goto	u6995
 16252  0024D0  C02D  F03D         	movff	??_xtoa,xtoa@n
 16253  0024D4  C02E  F03E         	movff	??_xtoa+1,xtoa@n+1
 16254  0024D8  C02F  F03F         	movff	??_xtoa+2,xtoa@n+2
 16255  0024DC  C030  F040         	movff	??_xtoa+3,xtoa@n+3
 16256  0024E0  C031  F041         	movff	??_xtoa+4,xtoa@n+4
 16257  0024E4  C032  F042         	movff	??_xtoa+5,xtoa@n+5
 16258  0024E8  C033  F043         	movff	??_xtoa+6,xtoa@n+6
 16259  0024EC  C034  F044         	movff	??_xtoa+7,xtoa@n+7
 16260  0024F0                     l7118:
 16261                           
 16262                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16263  0024F0  BE46               	btfsc	(xtoa@i+1)^0,7,c
 16264  0024F2  EF84  F012         	goto	u7001
 16265  0024F6  5046               	movf	(xtoa@i+1)^0,w,c
 16266  0024F8  E109               	bnz	u7000
 16267  0024FA  0E02               	movlw	2
 16268  0024FC  5C45               	subwf	xtoa@i^0,w,c
 16269  0024FE  A0D8               	btfss	status,0,c
 16270  002500  EF84  F012         	goto	u7001
 16271  002504  EF86  F012         	goto	u7000
 16272  002508                     u7001:
 16273  002508  EFB6  F012         	goto	l1334
 16274  00250C                     u7000:
 16275  00250C  503D               	movf	xtoa@n^0,w,c
 16276  00250E  103E               	iorwf	(xtoa@n+1)^0,w,c
 16277  002510  103F               	iorwf	(xtoa@n+2)^0,w,c
 16278  002512  1040               	iorwf	(xtoa@n+3)^0,w,c
 16279  002514  1041               	iorwf	(xtoa@n+4)^0,w,c
 16280  002516  1042               	iorwf	(xtoa@n+5)^0,w,c
 16281  002518  1043               	iorwf	(xtoa@n+6)^0,w,c
 16282  00251A  1044               	iorwf	(xtoa@n+7)^0,w,c
 16283  00251C  A4D8               	btfss	status,2,c
 16284  00251E  EF93  F012         	goto	u7011
 16285  002522  EF95  F012         	goto	u7010
 16286  002526                     u7011:
 16287  002526  EFC5  F011         	goto	l7088
 16288  00252A                     u7010:
 16289  00252A  BE3A               	btfsc	(xtoa@p+1)^0,7,c
 16290  00252C  EFA2  F012         	goto	u7020
 16291  002530  503A               	movf	(xtoa@p+1)^0,w,c
 16292  002532  E106               	bnz	u7021
 16293  002534  0439               	decf	xtoa@p^0,w,c
 16294  002536  B0D8               	btfsc	status,0,c
 16295  002538  EFA0  F012         	goto	u7021
 16296  00253C  EFA2  F012         	goto	u7020
 16297  002540                     u7021:
 16298  002540  EFC5  F011         	goto	l7088
 16299  002544                     u7020:
 16300  002544  BE3C               	btfsc	(xtoa@w+1)^0,7,c
 16301  002546  EFAD  F012         	goto	u7031
 16302  00254A  503C               	movf	(xtoa@w+1)^0,w,c
 16303  00254C  E108               	bnz	u7030
 16304  00254E  043B               	decf	xtoa@w^0,w,c
 16305  002550  A0D8               	btfss	status,0,c
 16306  002552  EFAD  F012         	goto	u7031
 16307  002556  EFAF  F012         	goto	u7030
 16308  00255A                     u7031:
 16309  00255A  EFB6  F012         	goto	l1334
 16310  00255E                     u7030:
 16311  00255E  B257               	btfsc	_flags^0,1,c
 16312  002560  EFB4  F012         	goto	u7041
 16313  002564  EFB6  F012         	goto	u7040
 16314  002568                     u7041:
 16315  002568  EFC5  F011         	goto	l7088
 16316  00256C                     u7040:
 16317  00256C                     l1334:
 16318                           
 16319                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
 16320  00256C  A857               	btfss	_flags^0,4,c
 16321  00256E  EFBB  F012         	goto	u7051
 16322  002572  EFBD  F012         	goto	u7050
 16323  002576                     u7051:
 16324  002576  EFD3  F012         	goto	l7134
 16325  00257A                     u7050:
 16326  00257A                     
 16327                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
 16328  00257A  0645               	decf	xtoa@i^0,f,c
 16329  00257C  A0D8               	btfss	status,0,c
 16330  00257E  0646               	decf	(xtoa@i+1)^0,f,c
 16331  002580                     
 16332                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
 16333  002580  0EDD               	movlw	low _dbuf
 16334  002582  2445               	addwf	xtoa@i^0,w,c
 16335  002584  6ED9               	movwf	fsr2l,c
 16336  002586  0E02               	movlw	high _dbuf
 16337  002588  2046               	addwfc	(xtoa@i+1)^0,w,c
 16338  00258A  6EDA               	movwf	fsr2h,c
 16339  00258C  C02C  FFDF         	movff	xtoa@x,indf2
 16340  002590                     
 16341                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
 16342  002590  0645               	decf	xtoa@i^0,f,c
 16343  002592  A0D8               	btfss	status,0,c
 16344  002594  0646               	decf	(xtoa@i+1)^0,f,c
 16345                           
 16346                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
 16347  002596  0EDD               	movlw	low _dbuf
 16348  002598  2445               	addwf	xtoa@i^0,w,c
 16349  00259A  6ED9               	movwf	fsr2l,c
 16350  00259C  0E02               	movlw	high _dbuf
 16351  00259E  2046               	addwfc	(xtoa@i+1)^0,w,c
 16352  0025A0  6EDA               	movwf	fsr2h,c
 16353  0025A2  0E30               	movlw	48
 16354  0025A4  6EDF               	movwf	indf2,c
 16355  0025A6                     l7134:
 16356                           
 16357                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
 16358  0025A6  C022  F017         	movff	xtoa@fp,pad@fp
 16359  0025AA  C023  F018         	movff	xtoa@fp+1,pad@fp+1
 16360  0025AE  0EDD               	movlw	low _dbuf
 16361  0025B0  2445               	addwf	xtoa@i^0,w,c
 16362  0025B2  6E19               	movwf	pad@buf^0,c
 16363  0025B4  0E02               	movlw	high _dbuf
 16364  0025B6  2046               	addwfc	(xtoa@i+1)^0,w,c
 16365  0025B8  6E1A               	movwf	(pad@buf+1)^0,c
 16366  0025BA  C03B  F01B         	movff	xtoa@w,pad@p
 16367  0025BE  C03C  F01C         	movff	xtoa@w+1,pad@p+1
 16368  0025C2  EC86  F020         	call	_pad	;wreg free
 16369  0025C6  C017  F022         	movff	?_pad,?_xtoa
 16370  0025CA  C018  F023         	movff	?_pad+1,?_xtoa+1
 16371  0025CE  0012               	return		;funcret
 16372  0025D0                     __end_of_xtoa:
 16373                           	opt callstack 0
 16374                           
 16375 ;; *************** function _toupper *****************
 16376 ;; Defined at:
 16377 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
 16378 ;; Parameters:    Size  Location     Type
 16379 ;;  c               2   10[COMRAM] int 
 16380 ;; Auto vars:     Size  Location     Type
 16381 ;;		None
 16382 ;; Return value:  Size  Location     Type
 16383 ;;                  2   10[COMRAM] int 
 16384 ;; Registers used:
 16385 ;;		wreg, status,2, status,0
 16386 ;; Tracked objects:
 16387 ;;		On entry : 0/0
 16388 ;;		On exit  : 0/0
 16389 ;;		Unchanged: 0/0
 16390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16391 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16392 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16393 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16394 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16395 ;;Total ram usage:        8 bytes
 16396 ;; Hardware stack levels used:    1
 16397 ;; Hardware stack levels required when called:    5
 16398 ;; This function calls:
 16399 ;;		_islower
 16400 ;; This function is called by:
 16401 ;;		_xtoa
 16402 ;; This function uses a non-reentrant model
 16403 ;;
 16404                           
 16405                           	psect	text57
 16406  0049AE                     __ptext57:
 16407                           	opt callstack 0
 16408  0049AE                     _toupper:
 16409                           	opt callstack 21
 16410  0049AE  0E9F               	movlw	159
 16411  0049B0  6E0D               	movwf	??_toupper^0,c
 16412  0049B2  0EFF               	movlw	255
 16413  0049B4  6E0E               	movwf	(??_toupper+1)^0,c
 16414  0049B6  C00B  F00F         	movff	toupper@c,??_toupper+2
 16415  0049BA  C00C  F010         	movff	toupper@c+1,??_toupper+3
 16416  0049BE  500D               	movf	??_toupper^0,w,c
 16417  0049C0  260F               	addwf	(??_toupper+2)^0,f,c
 16418  0049C2  500E               	movf	(??_toupper+1)^0,w,c
 16419  0049C4  2210               	addwfc	(??_toupper+3)^0,f,c
 16420  0049C6  5010               	movf	(??_toupper+3)^0,w,c
 16421  0049C8  E10A               	bnz	u6300
 16422  0049CA  0E1A               	movlw	26
 16423  0049CC  5C0F               	subwf	(??_toupper+2)^0,w,c
 16424  0049CE  A0D8               	btfss	status,0,c
 16425  0049D0  EFEC  F024         	goto	u6301
 16426  0049D4  EFEF  F024         	goto	u6300
 16427  0049D8                     u6301:
 16428  0049D8  0E01               	movlw	1
 16429  0049DA  EFF0  F024         	goto	u6310
 16430  0049DE                     u6300:
 16431  0049DE  0E00               	movlw	0
 16432  0049E0                     u6310:
 16433  0049E0  6E11               	movwf	_toupper$2527^0,c
 16434  0049E2  6A12               	clrf	(_toupper$2527+1)^0,c
 16435  0049E4  5011               	movf	_toupper$2527^0,w,c
 16436  0049E6  1012               	iorwf	(_toupper$2527+1)^0,w,c
 16437  0049E8  B4D8               	btfsc	status,2,c
 16438  0049EA  EFF9  F024         	goto	u6321
 16439  0049EE  EFFB  F024         	goto	u6320
 16440  0049F2                     u6321:
 16441  0049F2  EF01  F025         	goto	l2184
 16442  0049F6                     u6320:
 16443  0049F6  0E5F               	movlw	95
 16444  0049F8  140B               	andwf	toupper@c^0,w,c
 16445  0049FA  6E0B               	movwf	?_toupper^0,c
 16446  0049FC  6A0C               	clrf	(?_toupper+1)^0,c
 16447  0049FE  EF05  F025         	goto	l2189
 16448  004A02                     l2184:
 16449  004A02  C00B  F00B         	movff	toupper@c,?_toupper
 16450  004A06  C00C  F00C         	movff	toupper@c+1,?_toupper+1
 16451  004A0A                     l2189:
 16452  004A0A  0012               	return		;funcret
 16453  004A0C                     __end_of_toupper:
 16454                           	opt callstack 0
 16455                           
 16456 ;; *************** function _islower *****************
 16457 ;; Defined at:
 16458 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
 16459 ;; Parameters:    Size  Location     Type
 16460 ;;  c               2    4[COMRAM] int 
 16461 ;; Auto vars:     Size  Location     Type
 16462 ;;		None
 16463 ;; Return value:  Size  Location     Type
 16464 ;;                  2    4[COMRAM] int 
 16465 ;; Registers used:
 16466 ;;		wreg, status,2, status,0
 16467 ;; Tracked objects:
 16468 ;;		On entry : 0/0
 16469 ;;		On exit  : 0/0
 16470 ;;		Unchanged: 0/0
 16471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16472 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16474 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16475 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16476 ;;Total ram usage:        6 bytes
 16477 ;; Hardware stack levels used:    1
 16478 ;; Hardware stack levels required when called:    4
 16479 ;; This function calls:
 16480 ;;		Nothing
 16481 ;; This function is called by:
 16482 ;;		_toupper
 16483 ;; This function uses a non-reentrant model
 16484 ;;
 16485                           
 16486                           	psect	text58
 16487  004FE6                     __ptext58:
 16488                           	opt callstack 0
 16489  004FE6                     _islower:
 16490                           	opt callstack 21
 16491  004FE6  0E9F               	movlw	159
 16492  004FE8  6E07               	movwf	??_islower^0,c
 16493  004FEA  0EFF               	movlw	255
 16494  004FEC  6E08               	movwf	(??_islower+1)^0,c
 16495  004FEE  C005  F009         	movff	islower@c,??_islower+2
 16496  004FF2  C006  F00A         	movff	islower@c+1,??_islower+3
 16497  004FF6  5007               	movf	??_islower^0,w,c
 16498  004FF8  2609               	addwf	(??_islower+2)^0,f,c
 16499  004FFA  5008               	movf	(??_islower+1)^0,w,c
 16500  004FFC  220A               	addwfc	(??_islower+3)^0,f,c
 16501  004FFE  500A               	movf	(??_islower+3)^0,w,c
 16502  005000  E10A               	bnz	u6190
 16503  005002  0E1A               	movlw	26
 16504  005004  5C09               	subwf	(??_islower+2)^0,w,c
 16505  005006  A0D8               	btfss	status,0,c
 16506  005008  EF08  F028         	goto	u6191
 16507  00500C  EF0B  F028         	goto	u6190
 16508  005010                     u6191:
 16509  005010  0E01               	movlw	1
 16510  005012  EF0C  F028         	goto	u6200
 16511  005016                     u6190:
 16512  005016  0E00               	movlw	0
 16513  005018                     u6200:
 16514  005018  6E05               	movwf	?_islower^0,c
 16515  00501A  6A06               	clrf	(?_islower+1)^0,c
 16516  00501C  0012               	return		;funcret
 16517  00501E                     __end_of_islower:
 16518                           	opt callstack 0
 16519                           
 16520 ;; *************** function _isupper *****************
 16521 ;; Defined at:
 16522 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
 16523 ;; Parameters:    Size  Location     Type
 16524 ;;  c               2    4[COMRAM] int 
 16525 ;; Auto vars:     Size  Location     Type
 16526 ;;		None
 16527 ;; Return value:  Size  Location     Type
 16528 ;;                  2    4[COMRAM] int 
 16529 ;; Registers used:
 16530 ;;		wreg, status,2, status,0
 16531 ;; Tracked objects:
 16532 ;;		On entry : 0/0
 16533 ;;		On exit  : 0/0
 16534 ;;		Unchanged: 0/0
 16535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16536 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16538 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16539 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16540 ;;Total ram usage:        6 bytes
 16541 ;; Hardware stack levels used:    1
 16542 ;; Hardware stack levels required when called:    4
 16543 ;; This function calls:
 16544 ;;		Nothing
 16545 ;; This function is called by:
 16546 ;;		_xtoa
 16547 ;; This function uses a non-reentrant model
 16548 ;;
 16549                           
 16550                           	psect	text59
 16551  00501E                     __ptext59:
 16552                           	opt callstack 0
 16553  00501E                     _isupper:
 16554                           	opt callstack 22
 16555  00501E  0EBF               	movlw	191
 16556  005020  6E07               	movwf	??_isupper^0,c
 16557  005022  0EFF               	movlw	255
 16558  005024  6E08               	movwf	(??_isupper+1)^0,c
 16559  005026  C005  F009         	movff	isupper@c,??_isupper+2
 16560  00502A  C006  F00A         	movff	isupper@c+1,??_isupper+3
 16561  00502E  5007               	movf	??_isupper^0,w,c
 16562  005030  2609               	addwf	(??_isupper+2)^0,f,c
 16563  005032  5008               	movf	(??_isupper+1)^0,w,c
 16564  005034  220A               	addwfc	(??_isupper+3)^0,f,c
 16565  005036  500A               	movf	(??_isupper+3)^0,w,c
 16566  005038  E10A               	bnz	u6260
 16567  00503A  0E1A               	movlw	26
 16568  00503C  5C09               	subwf	(??_isupper+2)^0,w,c
 16569  00503E  A0D8               	btfss	status,0,c
 16570  005040  EF24  F028         	goto	u6261
 16571  005044  EF27  F028         	goto	u6260
 16572  005048                     u6261:
 16573  005048  0E01               	movlw	1
 16574  00504A  EF28  F028         	goto	u6270
 16575  00504E                     u6260:
 16576  00504E  0E00               	movlw	0
 16577  005050                     u6270:
 16578  005050  6E05               	movwf	?_isupper^0,c
 16579  005052  6A06               	clrf	(?_isupper+1)^0,c
 16580  005054  0012               	return		;funcret
 16581  005056                     __end_of_isupper:
 16582                           	opt callstack 0
 16583                           
 16584 ;; *************** function _isalpha *****************
 16585 ;; Defined at:
 16586 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
 16587 ;; Parameters:    Size  Location     Type
 16588 ;;  c               2    4[COMRAM] int 
 16589 ;; Auto vars:     Size  Location     Type
 16590 ;;		None
 16591 ;; Return value:  Size  Location     Type
 16592 ;;                  2    4[COMRAM] int 
 16593 ;; Registers used:
 16594 ;;		wreg, status,2, status,0
 16595 ;; Tracked objects:
 16596 ;;		On entry : 0/0
 16597 ;;		On exit  : 0/0
 16598 ;;		Unchanged: 0/0
 16599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16600 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16602 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16603 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16604 ;;Total ram usage:        6 bytes
 16605 ;; Hardware stack levels used:    1
 16606 ;; Hardware stack levels required when called:    4
 16607 ;; This function calls:
 16608 ;;		Nothing
 16609 ;; This function is called by:
 16610 ;;		_xtoa
 16611 ;; This function uses a non-reentrant model
 16612 ;;
 16613                           
 16614                           	psect	text60
 16615  004F72                     __ptext60:
 16616                           	opt callstack 0
 16617  004F72                     _isalpha:
 16618                           	opt callstack 22
 16619  004F72  0E9F               	movlw	159
 16620  004F74  6E07               	movwf	??_isalpha^0,c
 16621  004F76  0EFF               	movlw	255
 16622  004F78  6E08               	movwf	(??_isalpha+1)^0,c
 16623  004F7A  0E20               	movlw	32
 16624  004F7C  1005               	iorwf	isalpha@c^0,w,c
 16625  004F7E  6E09               	movwf	(??_isalpha+2)^0,c
 16626  004F80  0E00               	movlw	0
 16627  004F82  1006               	iorwf	(isalpha@c+1)^0,w,c
 16628  004F84  6E0A               	movwf	(??_isalpha+3)^0,c
 16629  004F86  5007               	movf	??_isalpha^0,w,c
 16630  004F88  2609               	addwf	(??_isalpha+2)^0,f,c
 16631  004F8A  5008               	movf	(??_isalpha+1)^0,w,c
 16632  004F8C  220A               	addwfc	(??_isalpha+3)^0,f,c
 16633  004F8E  500A               	movf	(??_isalpha+3)^0,w,c
 16634  004F90  E10A               	bnz	u6280
 16635  004F92  0E1A               	movlw	26
 16636  004F94  5C09               	subwf	(??_isalpha+2)^0,w,c
 16637  004F96  A0D8               	btfss	status,0,c
 16638  004F98  EFD0  F027         	goto	u6281
 16639  004F9C  EFD3  F027         	goto	u6280
 16640  004FA0                     u6281:
 16641  004FA0  0E01               	movlw	1
 16642  004FA2  EFD4  F027         	goto	u6290
 16643  004FA6                     u6280:
 16644  004FA6  0E00               	movlw	0
 16645  004FA8                     u6290:
 16646  004FA8  6E05               	movwf	?_isalpha^0,c
 16647  004FAA  6A06               	clrf	(?_isalpha+1)^0,c
 16648  004FAC  0012               	return		;funcret
 16649  004FAE                     __end_of_isalpha:
 16650                           	opt callstack 0
 16651                           
 16652 ;; *************** function _utoa *****************
 16653 ;; Defined at:
 16654 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 16655 ;; Parameters:    Size  Location     Type
 16656 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
 16657 ;;		 -> NULL(0), 
 16658 ;;  d               8   35[COMRAM] unsigned long long 
 16659 ;; Auto vars:     Size  Location     Type
 16660 ;;  n               8   55[COMRAM] unsigned long long 
 16661 ;;  i               2   63[COMRAM] int 
 16662 ;;  w               2   53[COMRAM] int 
 16663 ;;  p               2   51[COMRAM] int 
 16664 ;; Return value:  Size  Location     Type
 16665 ;;                  2   33[COMRAM] int 
 16666 ;; Registers used:
 16667 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16668 ;; Tracked objects:
 16669 ;;		On entry : 0/0
 16670 ;;		On exit  : 0/0
 16671 ;;		Unchanged: 0/0
 16672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16673 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16674 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16675 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16676 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16677 ;;Total ram usage:       32 bytes
 16678 ;; Hardware stack levels used:    1
 16679 ;; Hardware stack levels required when called:    9
 16680 ;; This function calls:
 16681 ;;		___lodiv
 16682 ;;		___lomod
 16683 ;;		_pad
 16684 ;; This function is called by:
 16685 ;;		_vfpfcnvrt
 16686 ;; This function uses a non-reentrant model
 16687 ;;
 16688                           
 16689                           	psect	text61
 16690  00281A                     __ptext61:
 16691                           	opt callstack 0
 16692  00281A                     _utoa:
 16693                           	opt callstack 18
 16694  00281A                     
 16695                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
 16696  00281A  0100               	movlb	0	; () banked
 16697  00281C  BFD2               	btfsc	(_prec+1)& (0+255),7,b
 16698  00281E  EF13  F014         	goto	u6821
 16699  002822  EF15  F014         	goto	u6820
 16700  002826                     u6821:
 16701  002826  EF16  F014         	goto	l7040
 16702  00282A                     u6820:
 16703  00282A                     
 16704                           ; BSR set to: 0
 16705                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
 16706  00282A  9257               	bcf	_flags^0,1,c
 16707  00282C                     l7040:
 16708                           
 16709                           ; BSR set to: 0
 16710                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
 16711  00282C  BFD2               	btfsc	(_prec+1)& (0+255),7,b
 16712  00282E  EF23  F014         	goto	u6830
 16713  002832  51D2               	movf	(_prec+1)& (0+255),w,b
 16714  002834  E106               	bnz	u6831
 16715  002836  05D1               	decf	_prec& (0+255),w,b
 16716  002838  B0D8               	btfsc	status,0,c
 16717  00283A  EF21  F014         	goto	u6831
 16718  00283E  EF23  F014         	goto	u6830
 16719  002842                     u6831:
 16720  002842  EF29  F014         	goto	l1296
 16721  002846                     u6830:
 16722  002846                     
 16723                           ; BSR set to: 0
 16724  002846  0E00               	movlw	0
 16725  002848  6E35               	movwf	(utoa@p+1)^0,c
 16726  00284A  0E01               	movlw	1
 16727  00284C  6E34               	movwf	utoa@p^0,c
 16728  00284E  EF2D  F014         	goto	l1298
 16729  002852                     l1296:
 16730                           
 16731                           ; BSR set to: 0
 16732  002852  C0D1  F034         	movff	_prec,utoa@p
 16733  002856  C0D2  F035         	movff	_prec+1,utoa@p+1
 16734  00285A                     l1298:
 16735                           
 16736                           ; BSR set to: 0
 16737                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
 16738  00285A  C0CF  F036         	movff	_width,utoa@w
 16739  00285E  C0D0  F037         	movff	_width+1,utoa@w+1
 16740                           
 16741                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
 16742  002862  C024  F038         	movff	utoa@d,utoa@n
 16743  002866  C025  F039         	movff	utoa@d+1,utoa@n+1
 16744  00286A  C026  F03A         	movff	utoa@d+2,utoa@n+2
 16745  00286E  C027  F03B         	movff	utoa@d+3,utoa@n+3
 16746  002872  C028  F03C         	movff	utoa@d+4,utoa@n+4
 16747  002876  C029  F03D         	movff	utoa@d+5,utoa@n+5
 16748  00287A  C02A  F03E         	movff	utoa@d+6,utoa@n+6
 16749  00287E  C02B  F03F         	movff	utoa@d+7,utoa@n+7
 16750  002882                     
 16751                           ; BSR set to: 0
 16752                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
 16753  002882  0E00               	movlw	0
 16754  002884  6E41               	movwf	(utoa@i+1)^0,c
 16755  002886  0E1F               	movlw	31
 16756  002888  6E40               	movwf	utoa@i^0,c
 16757  00288A                     
 16758                           ; BSR set to: 0
 16759                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
 16760  00288A  0E00               	movlw	0
 16761  00288C  0102               	movlb	2	; () banked
 16762  00288E  6FFC               	movwf	(_dbuf+31)& (0+255),b
 16763                           
 16764                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16765  002890  EFC0  F014         	goto	l7058
 16766  002894                     l7048:
 16767                           
 16768                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
 16769  002894  0640               	decf	utoa@i^0,f,c
 16770  002896  A0D8               	btfss	status,0,c
 16771  002898  0641               	decf	(utoa@i+1)^0,f,c
 16772  00289A                     
 16773                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
 16774  00289A  0EDD               	movlw	low _dbuf
 16775  00289C  2440               	addwf	utoa@i^0,w,c
 16776  00289E  6ED9               	movwf	fsr2l,c
 16777  0028A0  0E02               	movlw	high _dbuf
 16778  0028A2  2041               	addwfc	(utoa@i+1)^0,w,c
 16779  0028A4  6EDA               	movwf	fsr2h,c
 16780  0028A6  C038  F005         	movff	utoa@n,___lomod@dividend
 16781  0028AA  C039  F006         	movff	utoa@n+1,___lomod@dividend+1
 16782  0028AE  C03A  F007         	movff	utoa@n+2,___lomod@dividend+2
 16783  0028B2  C03B  F008         	movff	utoa@n+3,___lomod@dividend+3
 16784  0028B6  C03C  F009         	movff	utoa@n+4,___lomod@dividend+4
 16785  0028BA  C03D  F00A         	movff	utoa@n+5,___lomod@dividend+5
 16786  0028BE  C03E  F00B         	movff	utoa@n+6,___lomod@dividend+6
 16787  0028C2  C03F  F00C         	movff	utoa@n+7,___lomod@dividend+7
 16788  0028C6  0E0A               	movlw	10
 16789  0028C8  6E0D               	movwf	___lomod@divisor^0,c
 16790  0028CA  0E00               	movlw	0
 16791  0028CC  6E0E               	movwf	(___lomod@divisor+1)^0,c
 16792  0028CE  0E00               	movlw	0
 16793  0028D0  6E0F               	movwf	(___lomod@divisor+2)^0,c
 16794  0028D2  0E00               	movlw	0
 16795  0028D4  6E10               	movwf	(___lomod@divisor+3)^0,c
 16796  0028D6  0E00               	movlw	0
 16797  0028D8  6E11               	movwf	(___lomod@divisor+4)^0,c
 16798  0028DA  0E00               	movlw	0
 16799  0028DC  6E12               	movwf	(___lomod@divisor+5)^0,c
 16800  0028DE  0E00               	movlw	0
 16801  0028E0  6E13               	movwf	(___lomod@divisor+6)^0,c
 16802  0028E2  0E00               	movlw	0
 16803  0028E4  6E14               	movwf	(___lomod@divisor+7)^0,c
 16804  0028E6  EC5A  F01F         	call	___lomod	;wreg free
 16805  0028EA  C005  F02C         	movff	?___lomod,??_utoa
 16806  0028EE  C006  F02D         	movff	?___lomod+1,??_utoa+1
 16807  0028F2  C007  F02E         	movff	?___lomod+2,??_utoa+2
 16808  0028F6  C008  F02F         	movff	?___lomod+3,??_utoa+3
 16809  0028FA  C009  F030         	movff	?___lomod+4,??_utoa+4
 16810  0028FE  C00A  F031         	movff	?___lomod+5,??_utoa+5
 16811  002902  C00B  F032         	movff	?___lomod+6,??_utoa+6
 16812  002906  C00C  F033         	movff	?___lomod+7,??_utoa+7
 16813  00290A  502C               	movf	??_utoa^0,w,c
 16814  00290C  0F30               	addlw	48
 16815  00290E  6EDF               	movwf	indf2,c
 16816  002910                     
 16817                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
 16818  002910  0634               	decf	utoa@p^0,f,c
 16819  002912  A0D8               	btfss	status,0,c
 16820  002914  0635               	decf	(utoa@p+1)^0,f,c
 16821  002916                     
 16822                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
 16823  002916  0636               	decf	utoa@w^0,f,c
 16824  002918  A0D8               	btfss	status,0,c
 16825  00291A  0637               	decf	(utoa@w+1)^0,f,c
 16826  00291C                     
 16827                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
 16828  00291C  C038  F005         	movff	utoa@n,___lodiv@dividend
 16829  002920  C039  F006         	movff	utoa@n+1,___lodiv@dividend+1
 16830  002924  C03A  F007         	movff	utoa@n+2,___lodiv@dividend+2
 16831  002928  C03B  F008         	movff	utoa@n+3,___lodiv@dividend+3
 16832  00292C  C03C  F009         	movff	utoa@n+4,___lodiv@dividend+4
 16833  002930  C03D  F00A         	movff	utoa@n+5,___lodiv@dividend+5
 16834  002934  C03E  F00B         	movff	utoa@n+6,___lodiv@dividend+6
 16835  002938  C03F  F00C         	movff	utoa@n+7,___lodiv@dividend+7
 16836  00293C  0E0A               	movlw	10
 16837  00293E  6E0D               	movwf	___lodiv@divisor^0,c
 16838  002940  0E00               	movlw	0
 16839  002942  6E0E               	movwf	(___lodiv@divisor+1)^0,c
 16840  002944  0E00               	movlw	0
 16841  002946  6E0F               	movwf	(___lodiv@divisor+2)^0,c
 16842  002948  0E00               	movlw	0
 16843  00294A  6E10               	movwf	(___lodiv@divisor+3)^0,c
 16844  00294C  0E00               	movlw	0
 16845  00294E  6E11               	movwf	(___lodiv@divisor+4)^0,c
 16846  002950  0E00               	movlw	0
 16847  002952  6E12               	movwf	(___lodiv@divisor+5)^0,c
 16848  002954  0E00               	movlw	0
 16849  002956  6E13               	movwf	(___lodiv@divisor+6)^0,c
 16850  002958  0E00               	movlw	0
 16851  00295A  6E14               	movwf	(___lodiv@divisor+7)^0,c
 16852  00295C  EC06  F01E         	call	___lodiv	;wreg free
 16853  002960  C005  F038         	movff	?___lodiv,utoa@n
 16854  002964  C006  F039         	movff	?___lodiv+1,utoa@n+1
 16855  002968  C007  F03A         	movff	?___lodiv+2,utoa@n+2
 16856  00296C  C008  F03B         	movff	?___lodiv+3,utoa@n+3
 16857  002970  C009  F03C         	movff	?___lodiv+4,utoa@n+4
 16858  002974  C00A  F03D         	movff	?___lodiv+5,utoa@n+5
 16859  002978  C00B  F03E         	movff	?___lodiv+6,utoa@n+6
 16860  00297C  C00C  F03F         	movff	?___lodiv+7,utoa@n+7
 16861  002980                     l7058:
 16862                           
 16863                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16864  002980  5040               	movf	utoa@i^0,w,c
 16865  002982  1041               	iorwf	(utoa@i+1)^0,w,c
 16866  002984  B4D8               	btfsc	status,2,c
 16867  002986  EFC7  F014         	goto	u6841
 16868  00298A  EFC9  F014         	goto	u6840
 16869  00298E                     u6841:
 16870  00298E  EFF9  F014         	goto	l7068
 16871  002992                     u6840:
 16872  002992  5038               	movf	utoa@n^0,w,c
 16873  002994  1039               	iorwf	(utoa@n+1)^0,w,c
 16874  002996  103A               	iorwf	(utoa@n+2)^0,w,c
 16875  002998  103B               	iorwf	(utoa@n+3)^0,w,c
 16876  00299A  103C               	iorwf	(utoa@n+4)^0,w,c
 16877  00299C  103D               	iorwf	(utoa@n+5)^0,w,c
 16878  00299E  103E               	iorwf	(utoa@n+6)^0,w,c
 16879  0029A0  103F               	iorwf	(utoa@n+7)^0,w,c
 16880  0029A2  A4D8               	btfss	status,2,c
 16881  0029A4  EFD6  F014         	goto	u6851
 16882  0029A8  EFD8  F014         	goto	u6850
 16883  0029AC                     u6851:
 16884  0029AC  EF4A  F014         	goto	l7048
 16885  0029B0                     u6850:
 16886  0029B0  BE35               	btfsc	(utoa@p+1)^0,7,c
 16887  0029B2  EFE5  F014         	goto	u6860
 16888  0029B6  5035               	movf	(utoa@p+1)^0,w,c
 16889  0029B8  E106               	bnz	u6861
 16890  0029BA  0434               	decf	utoa@p^0,w,c
 16891  0029BC  B0D8               	btfsc	status,0,c
 16892  0029BE  EFE3  F014         	goto	u6861
 16893  0029C2  EFE5  F014         	goto	u6860
 16894  0029C6                     u6861:
 16895  0029C6  EF4A  F014         	goto	l7048
 16896  0029CA                     u6860:
 16897  0029CA  BE37               	btfsc	(utoa@w+1)^0,7,c
 16898  0029CC  EFF0  F014         	goto	u6871
 16899  0029D0  5037               	movf	(utoa@w+1)^0,w,c
 16900  0029D2  E108               	bnz	u6870
 16901  0029D4  0436               	decf	utoa@w^0,w,c
 16902  0029D6  A0D8               	btfss	status,0,c
 16903  0029D8  EFF0  F014         	goto	u6871
 16904  0029DC  EFF2  F014         	goto	u6870
 16905  0029E0                     u6871:
 16906  0029E0  EFF9  F014         	goto	l7068
 16907  0029E4                     u6870:
 16908  0029E4  B257               	btfsc	_flags^0,1,c
 16909  0029E6  EFF7  F014         	goto	u6881
 16910  0029EA  EFF9  F014         	goto	u6880
 16911  0029EE                     u6881:
 16912  0029EE  EF4A  F014         	goto	l7048
 16913  0029F2                     u6880:
 16914  0029F2                     l7068:
 16915                           
 16916                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
 16917  0029F2  C022  F017         	movff	utoa@fp,pad@fp
 16918  0029F6  C023  F018         	movff	utoa@fp+1,pad@fp+1
 16919  0029FA  0EDD               	movlw	low _dbuf
 16920  0029FC  2440               	addwf	utoa@i^0,w,c
 16921  0029FE  6E19               	movwf	pad@buf^0,c
 16922  002A00  0E02               	movlw	high _dbuf
 16923  002A02  2041               	addwfc	(utoa@i+1)^0,w,c
 16924  002A04  6E1A               	movwf	(pad@buf+1)^0,c
 16925  002A06  C036  F01B         	movff	utoa@w,pad@p
 16926  002A0A  C037  F01C         	movff	utoa@w+1,pad@p+1
 16927  002A0E  EC86  F020         	call	_pad	;wreg free
 16928  002A12  C017  F022         	movff	?_pad,?_utoa
 16929  002A16  C018  F023         	movff	?_pad+1,?_utoa+1
 16930  002A1A  0012               	return		;funcret
 16931  002A1C                     __end_of_utoa:
 16932                           	opt callstack 0
 16933                           
 16934 ;; *************** function ___lomod *****************
 16935 ;; Defined at:
 16936 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
 16937 ;; Parameters:    Size  Location     Type
 16938 ;;  dividend        8    4[COMRAM] unsigned long long 
 16939 ;;  divisor         8   12[COMRAM] unsigned long long 
 16940 ;; Auto vars:     Size  Location     Type
 16941 ;;  counter         1   20[COMRAM] unsigned char 
 16942 ;; Return value:  Size  Location     Type
 16943 ;;                  8    4[COMRAM] unsigned long long 
 16944 ;; Registers used:
 16945 ;;		wreg, status,2, status,0
 16946 ;; Tracked objects:
 16947 ;;		On entry : 0/0
 16948 ;;		On exit  : 0/0
 16949 ;;		Unchanged: 0/0
 16950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16951 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16952 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16954 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16955 ;;Total ram usage:       17 bytes
 16956 ;; Hardware stack levels used:    1
 16957 ;; Hardware stack levels required when called:    4
 16958 ;; This function calls:
 16959 ;;		Nothing
 16960 ;; This function is called by:
 16961 ;;		_utoa
 16962 ;; This function uses a non-reentrant model
 16963 ;;
 16964                           
 16965                           	psect	text62
 16966  003EB4                     __ptext62:
 16967                           	opt callstack 0
 16968  003EB4                     ___lomod:
 16969                           	opt callstack 22
 16970  003EB4  500D               	movf	___lomod@divisor^0,w,c
 16971  003EB6  100E               	iorwf	(___lomod@divisor+1)^0,w,c
 16972  003EB8  100F               	iorwf	(___lomod@divisor+2)^0,w,c
 16973  003EBA  1010               	iorwf	(___lomod@divisor+3)^0,w,c
 16974  003EBC  1011               	iorwf	(___lomod@divisor+4)^0,w,c
 16975  003EBE  1012               	iorwf	(___lomod@divisor+5)^0,w,c
 16976  003EC0  1013               	iorwf	(___lomod@divisor+6)^0,w,c
 16977  003EC2  1014               	iorwf	(___lomod@divisor+7)^0,w,c
 16978  003EC4  B4D8               	btfsc	status,2,c
 16979  003EC6  EF67  F01F         	goto	u6521
 16980  003ECA  EF69  F01F         	goto	u6520
 16981  003ECE                     u6521:
 16982  003ECE  EFB1  F01F         	goto	l1828
 16983  003ED2                     u6520:
 16984  003ED2  0E01               	movlw	1
 16985  003ED4  6E15               	movwf	___lomod@counter^0,c
 16986  003ED6  EF77  F01F         	goto	l6910
 16987  003EDA                     l6908:
 16988  003EDA  90D8               	bcf	status,0,c
 16989  003EDC  360D               	rlcf	___lomod@divisor^0,f,c
 16990  003EDE  360E               	rlcf	(___lomod@divisor+1)^0,f,c
 16991  003EE0  360F               	rlcf	(___lomod@divisor+2)^0,f,c
 16992  003EE2  3610               	rlcf	(___lomod@divisor+3)^0,f,c
 16993  003EE4  3611               	rlcf	(___lomod@divisor+4)^0,f,c
 16994  003EE6  3612               	rlcf	(___lomod@divisor+5)^0,f,c
 16995  003EE8  3613               	rlcf	(___lomod@divisor+6)^0,f,c
 16996  003EEA  3614               	rlcf	(___lomod@divisor+7)^0,f,c
 16997  003EEC  2A15               	incf	___lomod@counter^0,f,c
 16998  003EEE                     l6910:
 16999  003EEE  AE14               	btfss	(___lomod@divisor+7)^0,7,c
 17000  003EF0  EF7C  F01F         	goto	u6531
 17001  003EF4  EF7E  F01F         	goto	u6530
 17002  003EF8                     u6531:
 17003  003EF8  EF6D  F01F         	goto	l6908
 17004  003EFC                     u6530:
 17005  003EFC                     l6912:
 17006  003EFC  500D               	movf	___lomod@divisor^0,w,c
 17007  003EFE  5C05               	subwf	___lomod@dividend^0,w,c
 17008  003F00  500E               	movf	(___lomod@divisor+1)^0,w,c
 17009  003F02  5806               	subwfb	(___lomod@dividend+1)^0,w,c
 17010  003F04  500F               	movf	(___lomod@divisor+2)^0,w,c
 17011  003F06  5807               	subwfb	(___lomod@dividend+2)^0,w,c
 17012  003F08  5010               	movf	(___lomod@divisor+3)^0,w,c
 17013  003F0A  5808               	subwfb	(___lomod@dividend+3)^0,w,c
 17014  003F0C  5011               	movf	(___lomod@divisor+4)^0,w,c
 17015  003F0E  5809               	subwfb	(___lomod@dividend+4)^0,w,c
 17016  003F10  5012               	movf	(___lomod@divisor+5)^0,w,c
 17017  003F12  580A               	subwfb	(___lomod@dividend+5)^0,w,c
 17018  003F14  5013               	movf	(___lomod@divisor+6)^0,w,c
 17019  003F16  580B               	subwfb	(___lomod@dividend+6)^0,w,c
 17020  003F18  5014               	movf	(___lomod@divisor+7)^0,w,c
 17021  003F1A  580C               	subwfb	(___lomod@dividend+7)^0,w,c
 17022  003F1C  A0D8               	btfss	status,0,c
 17023  003F1E  EF93  F01F         	goto	u6541
 17024  003F22  EF95  F01F         	goto	u6540
 17025  003F26                     u6541:
 17026  003F26  EFA5  F01F         	goto	l6916
 17027  003F2A                     u6540:
 17028  003F2A  500D               	movf	___lomod@divisor^0,w,c
 17029  003F2C  5E05               	subwf	___lomod@dividend^0,f,c
 17030  003F2E  500E               	movf	(___lomod@divisor+1)^0,w,c
 17031  003F30  5A06               	subwfb	(___lomod@dividend+1)^0,f,c
 17032  003F32  500F               	movf	(___lomod@divisor+2)^0,w,c
 17033  003F34  5A07               	subwfb	(___lomod@dividend+2)^0,f,c
 17034  003F36  5010               	movf	(___lomod@divisor+3)^0,w,c
 17035  003F38  5A08               	subwfb	(___lomod@dividend+3)^0,f,c
 17036  003F3A  5011               	movf	(___lomod@divisor+4)^0,w,c
 17037  003F3C  5A09               	subwfb	(___lomod@dividend+4)^0,f,c
 17038  003F3E  5012               	movf	(___lomod@divisor+5)^0,w,c
 17039  003F40  5A0A               	subwfb	(___lomod@dividend+5)^0,f,c
 17040  003F42  5013               	movf	(___lomod@divisor+6)^0,w,c
 17041  003F44  5A0B               	subwfb	(___lomod@dividend+6)^0,f,c
 17042  003F46  5014               	movf	(___lomod@divisor+7)^0,w,c
 17043  003F48  5A0C               	subwfb	(___lomod@dividend+7)^0,f,c
 17044  003F4A                     l6916:
 17045  003F4A  90D8               	bcf	status,0,c
 17046  003F4C  3214               	rrcf	(___lomod@divisor+7)^0,f,c
 17047  003F4E  3213               	rrcf	(___lomod@divisor+6)^0,f,c
 17048  003F50  3212               	rrcf	(___lomod@divisor+5)^0,f,c
 17049  003F52  3211               	rrcf	(___lomod@divisor+4)^0,f,c
 17050  003F54  3210               	rrcf	(___lomod@divisor+3)^0,f,c
 17051  003F56  320F               	rrcf	(___lomod@divisor+2)^0,f,c
 17052  003F58  320E               	rrcf	(___lomod@divisor+1)^0,f,c
 17053  003F5A  320D               	rrcf	___lomod@divisor^0,f,c
 17054  003F5C  2E15               	decfsz	___lomod@counter^0,f,c
 17055  003F5E  EF7E  F01F         	goto	l6912
 17056  003F62                     l1828:
 17057  003F62  C005  F005         	movff	___lomod@dividend,?___lomod
 17058  003F66  C006  F006         	movff	___lomod@dividend+1,?___lomod+1
 17059  003F6A  C007  F007         	movff	___lomod@dividend+2,?___lomod+2
 17060  003F6E  C008  F008         	movff	___lomod@dividend+3,?___lomod+3
 17061  003F72  C009  F009         	movff	___lomod@dividend+4,?___lomod+4
 17062  003F76  C00A  F00A         	movff	___lomod@dividend+5,?___lomod+5
 17063  003F7A  C00B  F00B         	movff	___lomod@dividend+6,?___lomod+6
 17064  003F7E  C00C  F00C         	movff	___lomod@dividend+7,?___lomod+7
 17065  003F82  0012               	return		;funcret
 17066  003F84                     __end_of___lomod:
 17067                           	opt callstack 0
 17068                           
 17069 ;; *************** function ___lodiv *****************
 17070 ;; Defined at:
 17071 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
 17072 ;; Parameters:    Size  Location     Type
 17073 ;;  dividend        8    4[COMRAM] unsigned long long 
 17074 ;;  divisor         8   12[COMRAM] unsigned long long 
 17075 ;; Auto vars:     Size  Location     Type
 17076 ;;  quotient        8   20[COMRAM] unsigned long long 
 17077 ;;  counter         1   28[COMRAM] unsigned char 
 17078 ;; Return value:  Size  Location     Type
 17079 ;;                  8    4[COMRAM] unsigned long long 
 17080 ;; Registers used:
 17081 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17082 ;; Tracked objects:
 17083 ;;		On entry : 0/0
 17084 ;;		On exit  : 0/0
 17085 ;;		Unchanged: 0/0
 17086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17087 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17088 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17090 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17091 ;;Total ram usage:       25 bytes
 17092 ;; Hardware stack levels used:    1
 17093 ;; Hardware stack levels required when called:    4
 17094 ;; This function calls:
 17095 ;;		Nothing
 17096 ;; This function is called by:
 17097 ;;		_utoa
 17098 ;; This function uses a non-reentrant model
 17099 ;;
 17100                           
 17101                           	psect	text63
 17102  003C0C                     __ptext63:
 17103                           	opt callstack 0
 17104  003C0C                     ___lodiv:
 17105                           	opt callstack 22
 17106  003C0C  EE20  F015         	lfsr	2,___lodiv@quotient
 17107  003C10  0E07               	movlw	7
 17108  003C12                     u6481:
 17109  003C12  6ADE               	clrf	postinc2,c
 17110  003C14  06E8               	decf	wreg,f,c
 17111  003C16  E2FD               	bc	u6481
 17112  003C18  500D               	movf	___lodiv@divisor^0,w,c
 17113  003C1A  100E               	iorwf	(___lodiv@divisor+1)^0,w,c
 17114  003C1C  100F               	iorwf	(___lodiv@divisor+2)^0,w,c
 17115  003C1E  1010               	iorwf	(___lodiv@divisor+3)^0,w,c
 17116  003C20  1011               	iorwf	(___lodiv@divisor+4)^0,w,c
 17117  003C22  1012               	iorwf	(___lodiv@divisor+5)^0,w,c
 17118  003C24  1013               	iorwf	(___lodiv@divisor+6)^0,w,c
 17119  003C26  1014               	iorwf	(___lodiv@divisor+7)^0,w,c
 17120  003C28  B4D8               	btfsc	status,2,c
 17121  003C2A  EF19  F01E         	goto	u6491
 17122  003C2E  EF1B  F01E         	goto	u6490
 17123  003C32                     u6491:
 17124  003C32  EF6D  F01E         	goto	l1818
 17125  003C36                     u6490:
 17126  003C36  0E01               	movlw	1
 17127  003C38  6E1D               	movwf	___lodiv@counter^0,c
 17128  003C3A  EF29  F01E         	goto	l6890
 17129  003C3E                     l6888:
 17130  003C3E  90D8               	bcf	status,0,c
 17131  003C40  360D               	rlcf	___lodiv@divisor^0,f,c
 17132  003C42  360E               	rlcf	(___lodiv@divisor+1)^0,f,c
 17133  003C44  360F               	rlcf	(___lodiv@divisor+2)^0,f,c
 17134  003C46  3610               	rlcf	(___lodiv@divisor+3)^0,f,c
 17135  003C48  3611               	rlcf	(___lodiv@divisor+4)^0,f,c
 17136  003C4A  3612               	rlcf	(___lodiv@divisor+5)^0,f,c
 17137  003C4C  3613               	rlcf	(___lodiv@divisor+6)^0,f,c
 17138  003C4E  3614               	rlcf	(___lodiv@divisor+7)^0,f,c
 17139  003C50  2A1D               	incf	___lodiv@counter^0,f,c
 17140  003C52                     l6890:
 17141  003C52  AE14               	btfss	(___lodiv@divisor+7)^0,7,c
 17142  003C54  EF2E  F01E         	goto	u6501
 17143  003C58  EF30  F01E         	goto	u6500
 17144  003C5C                     u6501:
 17145  003C5C  EF1F  F01E         	goto	l6888
 17146  003C60                     u6500:
 17147  003C60                     l6892:
 17148  003C60  90D8               	bcf	status,0,c
 17149  003C62  3615               	rlcf	___lodiv@quotient^0,f,c
 17150  003C64  3616               	rlcf	(___lodiv@quotient+1)^0,f,c
 17151  003C66  3617               	rlcf	(___lodiv@quotient+2)^0,f,c
 17152  003C68  3618               	rlcf	(___lodiv@quotient+3)^0,f,c
 17153  003C6A  3619               	rlcf	(___lodiv@quotient+4)^0,f,c
 17154  003C6C  361A               	rlcf	(___lodiv@quotient+5)^0,f,c
 17155  003C6E  361B               	rlcf	(___lodiv@quotient+6)^0,f,c
 17156  003C70  361C               	rlcf	(___lodiv@quotient+7)^0,f,c
 17157  003C72  500D               	movf	___lodiv@divisor^0,w,c
 17158  003C74  5C05               	subwf	___lodiv@dividend^0,w,c
 17159  003C76  500E               	movf	(___lodiv@divisor+1)^0,w,c
 17160  003C78  5806               	subwfb	(___lodiv@dividend+1)^0,w,c
 17161  003C7A  500F               	movf	(___lodiv@divisor+2)^0,w,c
 17162  003C7C  5807               	subwfb	(___lodiv@dividend+2)^0,w,c
 17163  003C7E  5010               	movf	(___lodiv@divisor+3)^0,w,c
 17164  003C80  5808               	subwfb	(___lodiv@dividend+3)^0,w,c
 17165  003C82  5011               	movf	(___lodiv@divisor+4)^0,w,c
 17166  003C84  5809               	subwfb	(___lodiv@dividend+4)^0,w,c
 17167  003C86  5012               	movf	(___lodiv@divisor+5)^0,w,c
 17168  003C88  580A               	subwfb	(___lodiv@dividend+5)^0,w,c
 17169  003C8A  5013               	movf	(___lodiv@divisor+6)^0,w,c
 17170  003C8C  580B               	subwfb	(___lodiv@dividend+6)^0,w,c
 17171  003C8E  5014               	movf	(___lodiv@divisor+7)^0,w,c
 17172  003C90  580C               	subwfb	(___lodiv@dividend+7)^0,w,c
 17173  003C92  A0D8               	btfss	status,0,c
 17174  003C94  EF4E  F01E         	goto	u6511
 17175  003C98  EF50  F01E         	goto	u6510
 17176  003C9C                     u6511:
 17177  003C9C  EF61  F01E         	goto	l6900
 17178  003CA0                     u6510:
 17179  003CA0  500D               	movf	___lodiv@divisor^0,w,c
 17180  003CA2  5E05               	subwf	___lodiv@dividend^0,f,c
 17181  003CA4  500E               	movf	(___lodiv@divisor+1)^0,w,c
 17182  003CA6  5A06               	subwfb	(___lodiv@dividend+1)^0,f,c
 17183  003CA8  500F               	movf	(___lodiv@divisor+2)^0,w,c
 17184  003CAA  5A07               	subwfb	(___lodiv@dividend+2)^0,f,c
 17185  003CAC  5010               	movf	(___lodiv@divisor+3)^0,w,c
 17186  003CAE  5A08               	subwfb	(___lodiv@dividend+3)^0,f,c
 17187  003CB0  5011               	movf	(___lodiv@divisor+4)^0,w,c
 17188  003CB2  5A09               	subwfb	(___lodiv@dividend+4)^0,f,c
 17189  003CB4  5012               	movf	(___lodiv@divisor+5)^0,w,c
 17190  003CB6  5A0A               	subwfb	(___lodiv@dividend+5)^0,f,c
 17191  003CB8  5013               	movf	(___lodiv@divisor+6)^0,w,c
 17192  003CBA  5A0B               	subwfb	(___lodiv@dividend+6)^0,f,c
 17193  003CBC  5014               	movf	(___lodiv@divisor+7)^0,w,c
 17194  003CBE  5A0C               	subwfb	(___lodiv@dividend+7)^0,f,c
 17195  003CC0  8015               	bsf	___lodiv@quotient^0,0,c
 17196  003CC2                     l6900:
 17197  003CC2  90D8               	bcf	status,0,c
 17198  003CC4  3214               	rrcf	(___lodiv@divisor+7)^0,f,c
 17199  003CC6  3213               	rrcf	(___lodiv@divisor+6)^0,f,c
 17200  003CC8  3212               	rrcf	(___lodiv@divisor+5)^0,f,c
 17201  003CCA  3211               	rrcf	(___lodiv@divisor+4)^0,f,c
 17202  003CCC  3210               	rrcf	(___lodiv@divisor+3)^0,f,c
 17203  003CCE  320F               	rrcf	(___lodiv@divisor+2)^0,f,c
 17204  003CD0  320E               	rrcf	(___lodiv@divisor+1)^0,f,c
 17205  003CD2  320D               	rrcf	___lodiv@divisor^0,f,c
 17206  003CD4  2E1D               	decfsz	___lodiv@counter^0,f,c
 17207  003CD6  EF30  F01E         	goto	l6892
 17208  003CDA                     l1818:
 17209  003CDA  C015  F005         	movff	___lodiv@quotient,?___lodiv
 17210  003CDE  C016  F006         	movff	___lodiv@quotient+1,?___lodiv+1
 17211  003CE2  C017  F007         	movff	___lodiv@quotient+2,?___lodiv+2
 17212  003CE6  C018  F008         	movff	___lodiv@quotient+3,?___lodiv+3
 17213  003CEA  C019  F009         	movff	___lodiv@quotient+4,?___lodiv+4
 17214  003CEE  C01A  F00A         	movff	___lodiv@quotient+5,?___lodiv+5
 17215  003CF2  C01B  F00B         	movff	___lodiv@quotient+6,?___lodiv+6
 17216  003CF6  C01C  F00C         	movff	___lodiv@quotient+7,?___lodiv+7
 17217  003CFA  0012               	return		;funcret
 17218  003CFC                     __end_of___lodiv:
 17219                           	opt callstack 0
 17220                           
 17221 ;; *************** function _stoa *****************
 17222 ;; Defined at:
 17223 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 17224 ;; Parameters:    Size  Location     Type
 17225 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
 17226 ;;		 -> NULL(0), 
 17227 ;;  s               2   17[COMRAM] PTR unsigned char 
 17228 ;;		 -> ?_printf(2), ValidateCmd@ConfName_1831(20), ValidateCmd@ConfName_1827(20), ValidateCmd@ConfName(20), 
 17229 ;;		 -> STR_102(9), STR_101(12), InitialiseString@RevNum(2), InitialiseString@PartNum(19), 
 17230 ;;		 -> InitialiseString@SerialNum(11), Command(16), 
 17231 ;; Auto vars:     Size  Location     Type
 17232 ;;  nuls            7   20[COMRAM] unsigned char [7]
 17233 ;;  l               2   35[COMRAM] int 
 17234 ;;  p               2   33[COMRAM] int 
 17235 ;;  cp              2   31[COMRAM] PTR unsigned char 
 17236 ;;		 -> ?_printf(2), stoa@nuls(7), ValidateCmd@ConfName_1831(20), ValidateCmd@ConfName_1827(20), 
 17237 ;;		 -> ValidateCmd@ConfName(20), STR_102(9), STR_101(12), InitialiseString@RevNum(2), 
 17238 ;;		 -> InitialiseString@PartNum(19), InitialiseString@SerialNum(11), Command(16), 
 17239 ;;  w               2   29[COMRAM] int 
 17240 ;;  i               2   27[COMRAM] int 
 17241 ;; Return value:  Size  Location     Type
 17242 ;;                  2   15[COMRAM] int 
 17243 ;; Registers used:
 17244 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17245 ;; Tracked objects:
 17246 ;;		On entry : 0/0
 17247 ;;		On exit  : 0/0
 17248 ;;		Unchanged: 0/0
 17249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17250 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17251 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17252 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17253 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17254 ;;Total ram usage:       22 bytes
 17255 ;; Hardware stack levels used:    1
 17256 ;; Hardware stack levels required when called:    7
 17257 ;; This function calls:
 17258 ;;		_fputc
 17259 ;;		_strlen
 17260 ;; This function is called by:
 17261 ;;		_vfpfcnvrt
 17262 ;; This function uses a non-reentrant model
 17263 ;;
 17264                           
 17265                           	psect	text64
 17266  003120                     __ptext64:
 17267                           	opt callstack 0
 17268  003120                     _stoa:
 17269                           	opt callstack 20
 17270  003120                     
 17271                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
 17272  003120  EE21  F090         	lfsr	2,stoa@F1139
 17273  003124  EE10  F015         	lfsr	1,stoa@nuls
 17274  003128  0E06               	movlw	6
 17275  00312A                     u6721:
 17276  00312A  CFDB FFE3          	movff	plusw2,plusw1
 17277  00312E  06E8               	decf	wreg,f,c
 17278  003130  E2FC               	bc	u6721
 17279  003132                     
 17280                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
 17281  003132  C012  F020         	movff	stoa@s,stoa@cp
 17282  003136  C013  F021         	movff	stoa@s+1,stoa@cp+1
 17283  00313A                     
 17284                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
 17285  00313A  5020               	movf	stoa@cp^0,w,c
 17286  00313C  1021               	iorwf	(stoa@cp+1)^0,w,c
 17287  00313E  A4D8               	btfss	status,2,c
 17288  003140  EFA4  F018         	goto	u6731
 17289  003144  EFA6  F018         	goto	u6730
 17290  003148                     u6731:
 17291  003148  EFAA  F018         	goto	l7002
 17292  00314C                     u6730:
 17293  00314C                     
 17294                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
 17295  00314C  0E15               	movlw	low stoa@nuls
 17296  00314E  6E20               	movwf	stoa@cp^0,c
 17297  003150  0E00               	movlw	high stoa@nuls
 17298  003152  6E21               	movwf	(stoa@cp+1)^0,c
 17299  003154                     l7002:
 17300                           
 17301                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
 17302  003154  C020  F005         	movff	stoa@cp,strlen@s
 17303  003158  C021  F006         	movff	stoa@cp+1,strlen@s+1
 17304  00315C  EC3B  F026         	call	_strlen	;wreg free
 17305  003160  C005  F024         	movff	?_strlen,stoa@l
 17306  003164  C006  F025         	movff	?_strlen+1,stoa@l+1
 17307  003168                     
 17308                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
 17309  003168  C0D1  F022         	movff	_prec,stoa@p
 17310  00316C  C0D2  F023         	movff	_prec+1,stoa@p+1
 17311  003170                     
 17312                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
 17313  003170  BE23               	btfsc	(stoa@p+1)^0,7,c
 17314  003172  EFBD  F018         	goto	u6741
 17315  003176  EFBF  F018         	goto	u6740
 17316  00317A                     u6741:
 17317  00317A  EFD4  F018         	goto	l1277
 17318  00317E                     u6740:
 17319  00317E  5024               	movf	stoa@l^0,w,c
 17320  003180  5C22               	subwf	stoa@p^0,w,c
 17321  003182  5023               	movf	(stoa@p+1)^0,w,c
 17322  003184  0A80               	xorlw	128
 17323  003186  6E14               	movwf	??_stoa^0,c
 17324  003188  5025               	movf	(stoa@l+1)^0,w,c
 17325  00318A  0A80               	xorlw	128
 17326  00318C  5814               	subwfb	??_stoa^0,w,c
 17327  00318E  A0D8               	btfss	status,0,c
 17328  003190  EFCC  F018         	goto	u6751
 17329  003194  EFCE  F018         	goto	u6750
 17330  003198                     u6751:
 17331  003198  EFD0  F018         	goto	l1275
 17332  00319C                     u6750:
 17333  00319C  EFD4  F018         	goto	l1277
 17334  0031A0                     l1275:
 17335  0031A0  C022  F024         	movff	stoa@p,stoa@l
 17336  0031A4  C023  F025         	movff	stoa@p+1,stoa@l+1
 17337  0031A8                     l1277:
 17338                           
 17339                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
 17340  0031A8  C024  F022         	movff	stoa@l,stoa@p
 17341  0031AC  C025  F023         	movff	stoa@l+1,stoa@p+1
 17342                           
 17343                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
 17344  0031B0  C0CF  F01E         	movff	_width,stoa@w
 17345  0031B4  C0D0  F01F         	movff	_width+1,stoa@w+1
 17346                           
 17347                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
 17348  0031B8  B057               	btfsc	_flags^0,0,c
 17349  0031BA  EFE1  F018         	goto	u6761
 17350  0031BE  EFE3  F018         	goto	u6760
 17351  0031C2                     u6761:
 17352  0031C2  EF00  F019         	goto	l7018
 17353  0031C6                     u6760:
 17354  0031C6  EFF1  F018         	goto	l7016
 17355  0031CA                     l7012:
 17356                           
 17357                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
 17358  0031CA  0E00               	movlw	0
 17359  0031CC  6E08               	movwf	(fputc@c+1)^0,c
 17360  0031CE  0E20               	movlw	32
 17361  0031D0  6E07               	movwf	fputc@c^0,c
 17362  0031D2  C010  F009         	movff	stoa@fp,fputc@fp
 17363  0031D6  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
 17364  0031DA  ECF6  F022         	call	_fputc	;wreg free
 17365  0031DE                     
 17366                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
 17367  0031DE  4A24               	infsnz	stoa@l^0,f,c
 17368  0031E0  2A25               	incf	(stoa@l+1)^0,f,c
 17369  0031E2                     l7016:
 17370                           
 17371                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
 17372  0031E2  501E               	movf	stoa@w^0,w,c
 17373  0031E4  5C24               	subwf	stoa@l^0,w,c
 17374  0031E6  5025               	movf	(stoa@l+1)^0,w,c
 17375  0031E8  0A80               	xorlw	128
 17376  0031EA  6E14               	movwf	??_stoa^0,c
 17377  0031EC  501F               	movf	(stoa@w+1)^0,w,c
 17378  0031EE  0A80               	xorlw	128
 17379  0031F0  5814               	subwfb	??_stoa^0,w,c
 17380  0031F2  A0D8               	btfss	status,0,c
 17381  0031F4  EFFE  F018         	goto	u6771
 17382  0031F8  EF00  F019         	goto	u6770
 17383  0031FC                     u6771:
 17384  0031FC  EFE5  F018         	goto	l7012
 17385  003200                     u6770:
 17386  003200                     l7018:
 17387                           
 17388                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
 17389  003200  0E00               	movlw	0
 17390  003202  6E1D               	movwf	(stoa@i+1)^0,c
 17391  003204  0E00               	movlw	0
 17392  003206  6E1C               	movwf	stoa@i^0,c
 17393                           
 17394                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 17395  003208  EF25  F019         	goto	l7026
 17396  00320C                     l7020:
 17397                           
 17398                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
 17399  00320C  C020  FFF6         	movff	stoa@cp,tblptrl
 17400  003210  C021  FFF7         	movff	stoa@cp+1,tblptrh
 17401  003214  0E00               	movlw	low (__mediumconst shr (0+16))
 17402  003216  6EF8               	movwf	tblptru,c
 17403  003218  0E0E               	movlw	(high __ramtop+-1)
 17404  00321A  64F7               	cpfsgt	tblptrh,c
 17405  00321C  D003               	bra	u6787
 17406  00321E  0008               	tblrd		*
 17407  003220  50F5               	movf	tablat,w,c
 17408  003222  D005               	bra	u6780
 17409  003224                     u6787:
 17410  003224  CFF6 FFE9          	movff	tblptrl,fsr0l
 17411  003228  CFF7 FFEA          	movff	tblptrh,fsr0h
 17412  00322C  50EF               	movf	indf0,w,c
 17413  00322E                     u6780:
 17414  00322E  6E14               	movwf	??_stoa^0,c
 17415  003230  5014               	movf	??_stoa^0,w,c
 17416  003232  6E07               	movwf	fputc@c^0,c
 17417  003234  6A08               	clrf	(fputc@c+1)^0,c
 17418  003236  C010  F009         	movff	stoa@fp,fputc@fp
 17419  00323A  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
 17420  00323E  ECF6  F022         	call	_fputc	;wreg free
 17421  003242                     
 17422                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
 17423  003242  4A20               	infsnz	stoa@cp^0,f,c
 17424  003244  2A21               	incf	(stoa@cp+1)^0,f,c
 17425  003246                     
 17426                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
 17427  003246  4A1C               	infsnz	stoa@i^0,f,c
 17428  003248  2A1D               	incf	(stoa@i+1)^0,f,c
 17429  00324A                     l7026:
 17430                           
 17431                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 17432  00324A  5022               	movf	stoa@p^0,w,c
 17433  00324C  5C1C               	subwf	stoa@i^0,w,c
 17434  00324E  501D               	movf	(stoa@i+1)^0,w,c
 17435  003250  0A80               	xorlw	128
 17436  003252  6E14               	movwf	??_stoa^0,c
 17437  003254  5023               	movf	(stoa@p+1)^0,w,c
 17438  003256  0A80               	xorlw	128
 17439  003258  5814               	subwfb	??_stoa^0,w,c
 17440  00325A  A0D8               	btfss	status,0,c
 17441  00325C  EF32  F019         	goto	u6791
 17442  003260  EF34  F019         	goto	u6790
 17443  003264                     u6791:
 17444  003264  EF06  F019         	goto	l7020
 17445  003268                     u6790:
 17446  003268                     
 17447                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
 17448  003268  A057               	btfss	_flags^0,0,c
 17449  00326A  EF39  F019         	goto	u6801
 17450  00326E  EF3B  F019         	goto	u6800
 17451  003272                     u6801:
 17452  003272  EF58  F019         	goto	l1287
 17453  003276                     u6800:
 17454  003276  EF49  F019         	goto	l7034
 17455  00327A                     l7030:
 17456                           
 17457                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
 17458  00327A  0E00               	movlw	0
 17459  00327C  6E08               	movwf	(fputc@c+1)^0,c
 17460  00327E  0E20               	movlw	32
 17461  003280  6E07               	movwf	fputc@c^0,c
 17462  003282  C010  F009         	movff	stoa@fp,fputc@fp
 17463  003286  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
 17464  00328A  ECF6  F022         	call	_fputc	;wreg free
 17465  00328E                     
 17466                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
 17467  00328E  4A24               	infsnz	stoa@l^0,f,c
 17468  003290  2A25               	incf	(stoa@l+1)^0,f,c
 17469  003292                     l7034:
 17470                           
 17471                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
 17472  003292  501E               	movf	stoa@w^0,w,c
 17473  003294  5C24               	subwf	stoa@l^0,w,c
 17474  003296  5025               	movf	(stoa@l+1)^0,w,c
 17475  003298  0A80               	xorlw	128
 17476  00329A  6E14               	movwf	??_stoa^0,c
 17477  00329C  501F               	movf	(stoa@w+1)^0,w,c
 17478  00329E  0A80               	xorlw	128
 17479  0032A0  5814               	subwfb	??_stoa^0,w,c
 17480  0032A2  A0D8               	btfss	status,0,c
 17481  0032A4  EF56  F019         	goto	u6811
 17482  0032A8  EF58  F019         	goto	u6810
 17483  0032AC                     u6811:
 17484  0032AC  EF3D  F019         	goto	l7030
 17485  0032B0                     u6810:
 17486  0032B0                     l1287:
 17487                           
 17488                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
 17489  0032B0  C024  F010         	movff	stoa@l,?_stoa
 17490  0032B4  C025  F011         	movff	stoa@l+1,?_stoa+1
 17491  0032B8  0012               	return		;funcret
 17492  0032BA                     __end_of_stoa:
 17493                           	opt callstack 0
 17494                           
 17495 ;; *************** function _dtoa *****************
 17496 ;; Defined at:
 17497 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 17498 ;; Parameters:    Size  Location     Type
 17499 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
 17500 ;;		 -> NULL(0), 
 17501 ;;  d               8   35[COMRAM] long long 
 17502 ;; Auto vars:     Size  Location     Type
 17503 ;;  n               8   59[COMRAM] long long 
 17504 ;;  i               2   67[COMRAM] int 
 17505 ;;  s               2   57[COMRAM] int 
 17506 ;;  w               2   55[COMRAM] int 
 17507 ;;  p               2   53[COMRAM] int 
 17508 ;; Return value:  Size  Location     Type
 17509 ;;                  2   33[COMRAM] int 
 17510 ;; Registers used:
 17511 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17512 ;; Tracked objects:
 17513 ;;		On entry : 0/0
 17514 ;;		On exit  : 0/0
 17515 ;;		Unchanged: 0/0
 17516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17517 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17518 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17519 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17520 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17521 ;;Total ram usage:       36 bytes
 17522 ;; Hardware stack levels used:    1
 17523 ;; Hardware stack levels required when called:    9
 17524 ;; This function calls:
 17525 ;;		___aodiv
 17526 ;;		___aomod
 17527 ;;		_abs
 17528 ;;		_pad
 17529 ;; This function is called by:
 17530 ;;		_vfpfcnvrt
 17531 ;; This function uses a non-reentrant model
 17532 ;;
 17533                           
 17534                           	psect	text65
 17535  00201A                     __ptext65:
 17536                           	opt callstack 0
 17537  00201A                     _dtoa:
 17538                           	opt callstack 18
 17539  00201A                     
 17540                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
 17541  00201A  C024  F03C         	movff	dtoa@d,dtoa@n
 17542  00201E  C025  F03D         	movff	dtoa@d+1,dtoa@n+1
 17543  002022  C026  F03E         	movff	dtoa@d+2,dtoa@n+2
 17544  002026  C027  F03F         	movff	dtoa@d+3,dtoa@n+3
 17545  00202A  C028  F040         	movff	dtoa@d+4,dtoa@n+4
 17546  00202E  C029  F041         	movff	dtoa@d+5,dtoa@n+5
 17547  002032  C02A  F042         	movff	dtoa@d+6,dtoa@n+6
 17548  002036  C02B  F043         	movff	dtoa@d+7,dtoa@n+7
 17549  00203A                     
 17550                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 17551  00203A  BE43               	btfsc	(dtoa@n+7)^0,7,c
 17552  00203C  EF22  F010         	goto	u6571
 17553  002040  EF25  F010         	goto	u6570
 17554  002044                     u6571:
 17555  002044  0E01               	movlw	1
 17556  002046  EF26  F010         	goto	u6580
 17557  00204A                     u6570:
 17558  00204A  0E00               	movlw	0
 17559  00204C                     u6580:
 17560  00204C  6E3A               	movwf	dtoa@s^0,c
 17561  00204E  6A3B               	clrf	(dtoa@s+1)^0,c
 17562                           
 17563                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 17564  002050  503A               	movf	dtoa@s^0,w,c
 17565  002052  103B               	iorwf	(dtoa@s+1)^0,w,c
 17566  002054  B4D8               	btfsc	status,2,c
 17567  002056  EF2F  F010         	goto	u6591
 17568  00205A  EF31  F010         	goto	u6590
 17569  00205E                     u6591:
 17570  00205E  EF41  F010         	goto	l6938
 17571  002062                     u6590:
 17572  002062                     
 17573                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 17574  002062  1E43               	comf	(dtoa@n+7)^0,f,c
 17575  002064  1E42               	comf	(dtoa@n+6)^0,f,c
 17576  002066  1E41               	comf	(dtoa@n+5)^0,f,c
 17577  002068  1E40               	comf	(dtoa@n+4)^0,f,c
 17578  00206A  1E3F               	comf	(dtoa@n+3)^0,f,c
 17579  00206C  1E3E               	comf	(dtoa@n+2)^0,f,c
 17580  00206E  1E3D               	comf	(dtoa@n+1)^0,f,c
 17581  002070  6C3C               	negf	dtoa@n^0,c
 17582  002072  0E00               	movlw	0
 17583  002074  223D               	addwfc	(dtoa@n+1)^0,f,c
 17584  002076  223E               	addwfc	(dtoa@n+2)^0,f,c
 17585  002078  223F               	addwfc	(dtoa@n+3)^0,f,c
 17586  00207A  2240               	addwfc	(dtoa@n+4)^0,f,c
 17587  00207C  2241               	addwfc	(dtoa@n+5)^0,f,c
 17588  00207E  2242               	addwfc	(dtoa@n+6)^0,f,c
 17589  002080  2243               	addwfc	(dtoa@n+7)^0,f,c
 17590  002082                     l6938:
 17591                           
 17592                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 17593  002082  0100               	movlb	0	; () banked
 17594  002084  BFD2               	btfsc	(_prec+1)& (0+255),7,b
 17595  002086  EF47  F010         	goto	u6601
 17596  00208A  EF49  F010         	goto	u6600
 17597  00208E                     u6601:
 17598  00208E  EF4A  F010         	goto	l6942
 17599  002092                     u6600:
 17600  002092                     
 17601                           ; BSR set to: 0
 17602                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 17603  002092  9257               	bcf	_flags^0,1,c
 17604  002094                     l6942:
 17605                           
 17606                           ; BSR set to: 0
 17607                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 17608  002094  BFD2               	btfsc	(_prec+1)& (0+255),7,b
 17609  002096  EF57  F010         	goto	u6610
 17610  00209A  51D2               	movf	(_prec+1)& (0+255),w,b
 17611  00209C  E106               	bnz	u6611
 17612  00209E  05D1               	decf	_prec& (0+255),w,b
 17613  0020A0  B0D8               	btfsc	status,0,c
 17614  0020A2  EF55  F010         	goto	u6611
 17615  0020A6  EF57  F010         	goto	u6610
 17616  0020AA                     u6611:
 17617  0020AA  EF5D  F010         	goto	l1248
 17618  0020AE                     u6610:
 17619  0020AE                     
 17620                           ; BSR set to: 0
 17621  0020AE  0E00               	movlw	0
 17622  0020B0  6E37               	movwf	(dtoa@p+1)^0,c
 17623  0020B2  0E01               	movlw	1
 17624  0020B4  6E36               	movwf	dtoa@p^0,c
 17625  0020B6  EF61  F010         	goto	l1250
 17626  0020BA                     l1248:
 17627                           
 17628                           ; BSR set to: 0
 17629  0020BA  C0D1  F036         	movff	_prec,dtoa@p
 17630  0020BE  C0D2  F037         	movff	_prec+1,dtoa@p+1
 17631  0020C2                     l1250:
 17632                           
 17633                           ; BSR set to: 0
 17634                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 17635  0020C2  C0CF  F038         	movff	_width,dtoa@w
 17636  0020C6  C0D0  F039         	movff	_width+1,dtoa@w+1
 17637  0020CA                     
 17638                           ; BSR set to: 0
 17639                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 17640  0020CA  503A               	movf	dtoa@s^0,w,c
 17641  0020CC  103B               	iorwf	(dtoa@s+1)^0,w,c
 17642  0020CE  A4D8               	btfss	status,2,c
 17643  0020D0  EF6C  F010         	goto	u6621
 17644  0020D4  EF6E  F010         	goto	u6620
 17645  0020D8                     u6621:
 17646  0020D8  EF75  F010         	goto	l6950
 17647  0020DC                     u6620:
 17648  0020DC                     
 17649                           ; BSR set to: 0
 17650  0020DC  A457               	btfss	_flags^0,2,c
 17651  0020DE  EF73  F010         	goto	u6631
 17652  0020E2  EF75  F010         	goto	u6630
 17653  0020E6                     u6631:
 17654  0020E6  EF78  F010         	goto	l6952
 17655  0020EA                     u6630:
 17656  0020EA                     l6950:
 17657                           
 17658                           ; BSR set to: 0
 17659                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 17660  0020EA  0638               	decf	dtoa@w^0,f,c
 17661  0020EC  A0D8               	btfss	status,0,c
 17662  0020EE  0639               	decf	(dtoa@w+1)^0,f,c
 17663  0020F0                     l6952:
 17664                           
 17665                           ; BSR set to: 0
 17666                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 17667  0020F0  0E00               	movlw	0
 17668  0020F2  6E45               	movwf	(dtoa@i+1)^0,c
 17669  0020F4  0E1F               	movlw	31
 17670  0020F6  6E44               	movwf	dtoa@i^0,c
 17671  0020F8                     
 17672                           ; BSR set to: 0
 17673                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 17674  0020F8  0E00               	movlw	0
 17675  0020FA  0102               	movlb	2	; () banked
 17676  0020FC  6FFC               	movwf	(_dbuf+31)& (0+255),b
 17677                           
 17678                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 17679  0020FE  EFFD  F010         	goto	l6966
 17680  002102                     l6956:
 17681                           
 17682                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 17683  002102  0644               	decf	dtoa@i^0,f,c
 17684  002104  A0D8               	btfss	status,0,c
 17685  002106  0645               	decf	(dtoa@i+1)^0,f,c
 17686  002108                     
 17687                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 17688  002108  0EDD               	movlw	low _dbuf
 17689  00210A  2444               	addwf	dtoa@i^0,w,c
 17690  00210C  6ED9               	movwf	fsr2l,c
 17691  00210E  0E02               	movlw	high _dbuf
 17692  002110  2045               	addwfc	(dtoa@i+1)^0,w,c
 17693  002112  6EDA               	movwf	fsr2h,c
 17694  002114  C03C  F005         	movff	dtoa@n,___aomod@dividend
 17695  002118  C03D  F006         	movff	dtoa@n+1,___aomod@dividend+1
 17696  00211C  C03E  F007         	movff	dtoa@n+2,___aomod@dividend+2
 17697  002120  C03F  F008         	movff	dtoa@n+3,___aomod@dividend+3
 17698  002124  C040  F009         	movff	dtoa@n+4,___aomod@dividend+4
 17699  002128  C041  F00A         	movff	dtoa@n+5,___aomod@dividend+5
 17700  00212C  C042  F00B         	movff	dtoa@n+6,___aomod@dividend+6
 17701  002130  C043  F00C         	movff	dtoa@n+7,___aomod@dividend+7
 17702  002134  0E0A               	movlw	10
 17703  002136  6E0D               	movwf	___aomod@divisor^0,c
 17704  002138  0E00               	movlw	0
 17705  00213A  6E0E               	movwf	(___aomod@divisor+1)^0,c
 17706  00213C  0E00               	movlw	0
 17707  00213E  6E0F               	movwf	(___aomod@divisor+2)^0,c
 17708  002140  0E00               	movlw	0
 17709  002142  6E10               	movwf	(___aomod@divisor+3)^0,c
 17710  002144  0E00               	movlw	0
 17711  002146  6E11               	movwf	(___aomod@divisor+4)^0,c
 17712  002148  0E00               	movlw	0
 17713  00214A  6E12               	movwf	(___aomod@divisor+5)^0,c
 17714  00214C  0E00               	movlw	0
 17715  00214E  6E13               	movwf	(___aomod@divisor+6)^0,c
 17716  002150  0E00               	movlw	0
 17717  002152  6E14               	movwf	(___aomod@divisor+7)^0,c
 17718  002154  ECAF  F01B         	call	___aomod	;wreg free
 17719  002158  C005  F02C         	movff	?___aomod,??_dtoa
 17720  00215C  C006  F02D         	movff	?___aomod+1,??_dtoa+1
 17721  002160  C007  F02E         	movff	?___aomod+2,??_dtoa+2
 17722  002164  C008  F02F         	movff	?___aomod+3,??_dtoa+3
 17723  002168  C009  F030         	movff	?___aomod+4,??_dtoa+4
 17724  00216C  C00A  F031         	movff	?___aomod+5,??_dtoa+5
 17725  002170  C00B  F032         	movff	?___aomod+6,??_dtoa+6
 17726  002174  C00C  F033         	movff	?___aomod+7,??_dtoa+7
 17727  002178  C02C  F017         	movff	??_dtoa,abs@a
 17728  00217C  C02E  F018         	movff	??_dtoa+2,abs@a+1
 17729  002180  EC99  F027         	call	_abs	;wreg free
 17730  002184  5017               	movf	?_abs^0,w,c
 17731  002186  0F30               	addlw	48
 17732  002188  6EDF               	movwf	indf2,c
 17733  00218A                     
 17734                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 17735  00218A  0636               	decf	dtoa@p^0,f,c
 17736  00218C  A0D8               	btfss	status,0,c
 17737  00218E  0637               	decf	(dtoa@p+1)^0,f,c
 17738  002190                     
 17739                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 17740  002190  0638               	decf	dtoa@w^0,f,c
 17741  002192  A0D8               	btfss	status,0,c
 17742  002194  0639               	decf	(dtoa@w+1)^0,f,c
 17743  002196                     
 17744                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 17745  002196  C03C  F005         	movff	dtoa@n,___aodiv@dividend
 17746  00219A  C03D  F006         	movff	dtoa@n+1,___aodiv@dividend+1
 17747  00219E  C03E  F007         	movff	dtoa@n+2,___aodiv@dividend+2
 17748  0021A2  C03F  F008         	movff	dtoa@n+3,___aodiv@dividend+3
 17749  0021A6  C040  F009         	movff	dtoa@n+4,___aodiv@dividend+4
 17750  0021AA  C041  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
 17751  0021AE  C042  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
 17752  0021B2  C043  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
 17753  0021B6  0E0A               	movlw	10
 17754  0021B8  6E0D               	movwf	___aodiv@divisor^0,c
 17755  0021BA  0E00               	movlw	0
 17756  0021BC  6E0E               	movwf	(___aodiv@divisor+1)^0,c
 17757  0021BE  0E00               	movlw	0
 17758  0021C0  6E0F               	movwf	(___aodiv@divisor+2)^0,c
 17759  0021C2  0E00               	movlw	0
 17760  0021C4  6E10               	movwf	(___aodiv@divisor+3)^0,c
 17761  0021C6  0E00               	movlw	0
 17762  0021C8  6E11               	movwf	(___aodiv@divisor+4)^0,c
 17763  0021CA  0E00               	movlw	0
 17764  0021CC  6E12               	movwf	(___aodiv@divisor+5)^0,c
 17765  0021CE  0E00               	movlw	0
 17766  0021D0  6E13               	movwf	(___aodiv@divisor+6)^0,c
 17767  0021D2  0E00               	movlw	0
 17768  0021D4  6E14               	movwf	(___aodiv@divisor+7)^0,c
 17769  0021D6  EC2A  F01A         	call	___aodiv	;wreg free
 17770  0021DA  C005  F03C         	movff	?___aodiv,dtoa@n
 17771  0021DE  C006  F03D         	movff	?___aodiv+1,dtoa@n+1
 17772  0021E2  C007  F03E         	movff	?___aodiv+2,dtoa@n+2
 17773  0021E6  C008  F03F         	movff	?___aodiv+3,dtoa@n+3
 17774  0021EA  C009  F040         	movff	?___aodiv+4,dtoa@n+4
 17775  0021EE  C00A  F041         	movff	?___aodiv+5,dtoa@n+5
 17776  0021F2  C00B  F042         	movff	?___aodiv+6,dtoa@n+6
 17777  0021F6  C00C  F043         	movff	?___aodiv+7,dtoa@n+7
 17778  0021FA                     l6966:
 17779                           
 17780                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 17781  0021FA  BE45               	btfsc	(dtoa@i+1)^0,7,c
 17782  0021FC  EF08  F011         	goto	u6641
 17783  002200  5045               	movf	(dtoa@i+1)^0,w,c
 17784  002202  E108               	bnz	u6640
 17785  002204  0444               	decf	dtoa@i^0,w,c
 17786  002206  A0D8               	btfss	status,0,c
 17787  002208  EF08  F011         	goto	u6641
 17788  00220C  EF0A  F011         	goto	u6640
 17789  002210                     u6641:
 17790  002210  EF3A  F011         	goto	l6976
 17791  002214                     u6640:
 17792  002214  503C               	movf	dtoa@n^0,w,c
 17793  002216  103D               	iorwf	(dtoa@n+1)^0,w,c
 17794  002218  103E               	iorwf	(dtoa@n+2)^0,w,c
 17795  00221A  103F               	iorwf	(dtoa@n+3)^0,w,c
 17796  00221C  1040               	iorwf	(dtoa@n+4)^0,w,c
 17797  00221E  1041               	iorwf	(dtoa@n+5)^0,w,c
 17798  002220  1042               	iorwf	(dtoa@n+6)^0,w,c
 17799  002222  1043               	iorwf	(dtoa@n+7)^0,w,c
 17800  002224  A4D8               	btfss	status,2,c
 17801  002226  EF17  F011         	goto	u6651
 17802  00222A  EF19  F011         	goto	u6650
 17803  00222E                     u6651:
 17804  00222E  EF81  F010         	goto	l6956
 17805  002232                     u6650:
 17806  002232  BE37               	btfsc	(dtoa@p+1)^0,7,c
 17807  002234  EF26  F011         	goto	u6660
 17808  002238  5037               	movf	(dtoa@p+1)^0,w,c
 17809  00223A  E106               	bnz	u6661
 17810  00223C  0436               	decf	dtoa@p^0,w,c
 17811  00223E  B0D8               	btfsc	status,0,c
 17812  002240  EF24  F011         	goto	u6661
 17813  002244  EF26  F011         	goto	u6660
 17814  002248                     u6661:
 17815  002248  EF81  F010         	goto	l6956
 17816  00224C                     u6660:
 17817  00224C  BE39               	btfsc	(dtoa@w+1)^0,7,c
 17818  00224E  EF31  F011         	goto	u6671
 17819  002252  5039               	movf	(dtoa@w+1)^0,w,c
 17820  002254  E108               	bnz	u6670
 17821  002256  0438               	decf	dtoa@w^0,w,c
 17822  002258  A0D8               	btfss	status,0,c
 17823  00225A  EF31  F011         	goto	u6671
 17824  00225E  EF33  F011         	goto	u6670
 17825  002262                     u6671:
 17826  002262  EF3A  F011         	goto	l6976
 17827  002266                     u6670:
 17828  002266  B257               	btfsc	_flags^0,1,c
 17829  002268  EF38  F011         	goto	u6681
 17830  00226C  EF3A  F011         	goto	u6680
 17831  002270                     u6681:
 17832  002270  EF81  F010         	goto	l6956
 17833  002274                     u6680:
 17834  002274                     l6976:
 17835                           
 17836                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 17837  002274  503A               	movf	dtoa@s^0,w,c
 17838  002276  103B               	iorwf	(dtoa@s+1)^0,w,c
 17839  002278  A4D8               	btfss	status,2,c
 17840  00227A  EF41  F011         	goto	u6691
 17841  00227E  EF43  F011         	goto	u6690
 17842  002282                     u6691:
 17843  002282  EF4A  F011         	goto	l6980
 17844  002286                     u6690:
 17845  002286  A457               	btfss	_flags^0,2,c
 17846  002288  EF48  F011         	goto	u6701
 17847  00228C  EF4A  F011         	goto	u6700
 17848  002290                     u6701:
 17849  002290  EF68  F011         	goto	l6990
 17850  002294                     u6700:
 17851  002294                     l6980:
 17852                           
 17853                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 17854  002294  0644               	decf	dtoa@i^0,f,c
 17855  002296  A0D8               	btfss	status,0,c
 17856  002298  0645               	decf	(dtoa@i+1)^0,f,c
 17857  00229A                     
 17858                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 17859  00229A  503A               	movf	dtoa@s^0,w,c
 17860  00229C  103B               	iorwf	(dtoa@s+1)^0,w,c
 17861  00229E  A4D8               	btfss	status,2,c
 17862  0022A0  EF54  F011         	goto	u6711
 17863  0022A4  EF56  F011         	goto	u6710
 17864  0022A8                     u6711:
 17865  0022A8  EF5C  F011         	goto	l6986
 17866  0022AC                     u6710:
 17867  0022AC  0E00               	movlw	0
 17868  0022AE  6E35               	movwf	(_dtoa$1909+1)^0,c
 17869  0022B0  0E2B               	movlw	43
 17870  0022B2  6E34               	movwf	_dtoa$1909^0,c
 17871  0022B4  EF60  F011         	goto	l6988
 17872  0022B8                     l6986:
 17873  0022B8  0E00               	movlw	0
 17874  0022BA  6E35               	movwf	(_dtoa$1909+1)^0,c
 17875  0022BC  0E2D               	movlw	45
 17876  0022BE  6E34               	movwf	_dtoa$1909^0,c
 17877  0022C0                     l6988:
 17878  0022C0  0EDD               	movlw	low _dbuf
 17879  0022C2  2444               	addwf	dtoa@i^0,w,c
 17880  0022C4  6ED9               	movwf	fsr2l,c
 17881  0022C6  0E02               	movlw	high _dbuf
 17882  0022C8  2045               	addwfc	(dtoa@i+1)^0,w,c
 17883  0022CA  6EDA               	movwf	fsr2h,c
 17884  0022CC  C034  FFDF         	movff	_dtoa$1909,indf2
 17885  0022D0                     l6990:
 17886                           
 17887                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 17888  0022D0  C022  F017         	movff	dtoa@fp,pad@fp
 17889  0022D4  C023  F018         	movff	dtoa@fp+1,pad@fp+1
 17890  0022D8  0EDD               	movlw	low _dbuf
 17891  0022DA  2444               	addwf	dtoa@i^0,w,c
 17892  0022DC  6E19               	movwf	pad@buf^0,c
 17893  0022DE  0E02               	movlw	high _dbuf
 17894  0022E0  2045               	addwfc	(dtoa@i+1)^0,w,c
 17895  0022E2  6E1A               	movwf	(pad@buf+1)^0,c
 17896  0022E4  C038  F01B         	movff	dtoa@w,pad@p
 17897  0022E8  C039  F01C         	movff	dtoa@w+1,pad@p+1
 17898  0022EC  EC86  F020         	call	_pad	;wreg free
 17899  0022F0  C017  F022         	movff	?_pad,?_dtoa
 17900  0022F4  C018  F023         	movff	?_pad+1,?_dtoa+1
 17901  0022F8  0012               	return		;funcret
 17902  0022FA                     __end_of_dtoa:
 17903                           	opt callstack 0
 17904                           
 17905 ;; *************** function _pad *****************
 17906 ;; Defined at:
 17907 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 17908 ;; Parameters:    Size  Location     Type
 17909 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
 17910 ;;		 -> NULL(0), 
 17911 ;;  buf             2   24[COMRAM] PTR unsigned char 
 17912 ;;		 -> dbuf(32), 
 17913 ;;  p               2   26[COMRAM] int 
 17914 ;; Auto vars:     Size  Location     Type
 17915 ;;  w               2   31[COMRAM] int 
 17916 ;;  i               2   29[COMRAM] int 
 17917 ;; Return value:  Size  Location     Type
 17918 ;;                  2   22[COMRAM] int 
 17919 ;; Registers used:
 17920 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17921 ;; Tracked objects:
 17922 ;;		On entry : 0/0
 17923 ;;		On exit  : 0/0
 17924 ;;		Unchanged: 0/0
 17925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17926 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17927 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17928 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17929 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17930 ;;Total ram usage:       11 bytes
 17931 ;; Hardware stack levels used:    1
 17932 ;; Hardware stack levels required when called:    8
 17933 ;; This function calls:
 17934 ;;		_fputc
 17935 ;;		_fputs
 17936 ;;		_strlen
 17937 ;; This function is called by:
 17938 ;;		_dtoa
 17939 ;;		_utoa
 17940 ;;		_xtoa
 17941 ;; This function uses a non-reentrant model
 17942 ;;
 17943                           
 17944                           	psect	text66
 17945  00410C                     __ptext66:
 17946                           	opt callstack 0
 17947  00410C                     _pad:
 17948                           	opt callstack 18
 17949  00410C                     
 17950                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 17951  00410C  A057               	btfss	_flags^0,0,c
 17952  00410E  EF8B  F020         	goto	u6211
 17953  004112  EF8D  F020         	goto	u6210
 17954  004116                     u6211:
 17955  004116  EF97  F020         	goto	l6752
 17956  00411A                     u6210:
 17957  00411A                     
 17958                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 17959  00411A  C019  F010         	movff	pad@buf,fputs@s
 17960  00411E  C01A  F011         	movff	pad@buf+1,fputs@s+1
 17961  004122  C017  F012         	movff	pad@fp,fputs@fp
 17962  004126  C018  F013         	movff	pad@fp+1,fputs@fp+1
 17963  00412A  ECF4  F026         	call	_fputs	;wreg free
 17964  00412E                     l6752:
 17965                           
 17966                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 17967  00412E  BE1C               	btfsc	(pad@p+1)^0,7,c
 17968  004130  EF9C  F020         	goto	u6221
 17969  004134  EF9E  F020         	goto	u6220
 17970  004138                     u6221:
 17971  004138  EFA4  F020         	goto	l6756
 17972  00413C                     u6220:
 17973  00413C  C01B  F020         	movff	pad@p,pad@w
 17974  004140  C01C  F021         	movff	pad@p+1,pad@w+1
 17975  004144  EFA8  F020         	goto	l1237
 17976  004148                     l6756:
 17977  004148  0E00               	movlw	0
 17978  00414A  6E21               	movwf	(pad@w+1)^0,c
 17979  00414C  0E00               	movlw	0
 17980  00414E  6E20               	movwf	pad@w^0,c
 17981  004150                     l1237:
 17982                           
 17983                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 17984  004150  0E00               	movlw	0
 17985  004152  6E1F               	movwf	(pad@i+1)^0,c
 17986  004154  0E00               	movlw	0
 17987  004156  6E1E               	movwf	pad@i^0,c
 17988                           
 17989                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 17990  004158  EFBA  F020         	goto	l6762
 17991  00415C                     l6758:
 17992                           
 17993                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 17994  00415C  0E00               	movlw	0
 17995  00415E  6E08               	movwf	(fputc@c+1)^0,c
 17996  004160  0E20               	movlw	32
 17997  004162  6E07               	movwf	fputc@c^0,c
 17998  004164  C017  F009         	movff	pad@fp,fputc@fp
 17999  004168  C018  F00A         	movff	pad@fp+1,fputc@fp+1
 18000  00416C  ECF6  F022         	call	_fputc	;wreg free
 18001  004170                     
 18002                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 18003  004170  4A1E               	infsnz	pad@i^0,f,c
 18004  004172  2A1F               	incf	(pad@i+1)^0,f,c
 18005  004174                     l6762:
 18006                           
 18007                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 18008  004174  5020               	movf	pad@w^0,w,c
 18009  004176  5C1E               	subwf	pad@i^0,w,c
 18010  004178  501F               	movf	(pad@i+1)^0,w,c
 18011  00417A  0A80               	xorlw	128
 18012  00417C  6E1D               	movwf	??_pad^0,c
 18013  00417E  5021               	movf	(pad@w+1)^0,w,c
 18014  004180  0A80               	xorlw	128
 18015  004182  581D               	subwfb	??_pad^0,w,c
 18016  004184  A0D8               	btfss	status,0,c
 18017  004186  EFC7  F020         	goto	u6231
 18018  00418A  EFC9  F020         	goto	u6230
 18019  00418E                     u6231:
 18020  00418E  EFAE  F020         	goto	l6758
 18021  004192                     u6230:
 18022  004192                     
 18023                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 18024  004192  B057               	btfsc	_flags^0,0,c
 18025  004194  EFCE  F020         	goto	u6241
 18026  004198  EFD0  F020         	goto	u6240
 18027  00419C                     u6241:
 18028  00419C  EFDA  F020         	goto	l6766
 18029  0041A0                     u6240:
 18030  0041A0                     
 18031                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 18032  0041A0  C019  F010         	movff	pad@buf,fputs@s
 18033  0041A4  C01A  F011         	movff	pad@buf+1,fputs@s+1
 18034  0041A8  C017  F012         	movff	pad@fp,fputs@fp
 18035  0041AC  C018  F013         	movff	pad@fp+1,fputs@fp+1
 18036  0041B0  ECF4  F026         	call	_fputs	;wreg free
 18037  0041B4                     l6766:
 18038                           
 18039                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 18040  0041B4  C019  F005         	movff	pad@buf,strlen@s
 18041  0041B8  C01A  F006         	movff	pad@buf+1,strlen@s+1
 18042  0041BC  EC3B  F026         	call	_strlen	;wreg free
 18043  0041C0  5020               	movf	pad@w^0,w,c
 18044  0041C2  2405               	addwf	?_strlen^0,w,c
 18045  0041C4  6E17               	movwf	?_pad^0,c
 18046  0041C6  5021               	movf	(pad@w+1)^0,w,c
 18047  0041C8  2006               	addwfc	(?_strlen+1)^0,w,c
 18048  0041CA  6E18               	movwf	(?_pad+1)^0,c
 18049  0041CC  0012               	return		;funcret
 18050  0041CE                     __end_of_pad:
 18051                           	opt callstack 0
 18052                           
 18053 ;; *************** function _strlen *****************
 18054 ;; Defined at:
 18055 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 18056 ;; Parameters:    Size  Location     Type
 18057 ;;  s               2    4[COMRAM] PTR const unsigned char 
 18058 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), ValidateCmd@ConfName_1831(20), 
 18059 ;;		 -> ValidateCmd@ConfName_1827(20), ValidateCmd@ConfName(20), STR_102(9), STR_101(12), 
 18060 ;;		 -> InitialiseString@RevNum(2), InitialiseString@PartNum(19), InitialiseString@SerialNum(11), Command(16), 
 18061 ;; Auto vars:     Size  Location     Type
 18062 ;;  a               2    6[COMRAM] PTR const unsigned char 
 18063 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), ValidateCmd@ConfName_1831(20), 
 18064 ;;		 -> ValidateCmd@ConfName_1827(20), ValidateCmd@ConfName(20), STR_102(9), STR_101(12), 
 18065 ;;		 -> InitialiseString@RevNum(2), InitialiseString@PartNum(19), InitialiseString@SerialNum(11), Command(16), 
 18066 ;; Return value:  Size  Location     Type
 18067 ;;                  2    4[COMRAM] unsigned int 
 18068 ;; Registers used:
 18069 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 18070 ;; Tracked objects:
 18071 ;;		On entry : 0/0
 18072 ;;		On exit  : 0/0
 18073 ;;		Unchanged: 0/0
 18074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18075 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18076 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18078 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18079 ;;Total ram usage:        4 bytes
 18080 ;; Hardware stack levels used:    1
 18081 ;; Hardware stack levels required when called:    4
 18082 ;; This function calls:
 18083 ;;		Nothing
 18084 ;; This function is called by:
 18085 ;;		_ReadRX232
 18086 ;;		_SaveCardDat
 18087 ;;		_pad
 18088 ;;		_stoa
 18089 ;;		_strcat
 18090 ;; This function uses a non-reentrant model
 18091 ;;
 18092                           
 18093                           	psect	text67
 18094  004C76                     __ptext67:
 18095                           	opt callstack 0
 18096  004C76                     _strlen:
 18097                           	opt callstack 21
 18098  004C76  C005  F007         	movff	strlen@s,strlen@a
 18099  004C7A  C006  F008         	movff	strlen@s+1,strlen@a+1
 18100  004C7E  EF43  F026         	goto	l6730
 18101  004C82                     l6728:
 18102  004C82  4A05               	infsnz	strlen@s^0,f,c
 18103  004C84  2A06               	incf	(strlen@s+1)^0,f,c
 18104  004C86                     l6730:
 18105  004C86  C005  FFF6         	movff	strlen@s,tblptrl
 18106  004C8A  C006  FFF7         	movff	strlen@s+1,tblptrh
 18107  004C8E  0E00               	movlw	low (__mediumconst shr (0+16))
 18108  004C90  6EF8               	movwf	tblptru,c
 18109  004C92  0E0E               	movlw	(high __ramtop+-1)
 18110  004C94  64F7               	cpfsgt	tblptrh,c
 18111  004C96  D003               	bra	u6167
 18112  004C98  0008               	tblrd		*
 18113  004C9A  50F5               	movf	tablat,w,c
 18114  004C9C  D005               	bra	u6160
 18115  004C9E                     u6167:
 18116  004C9E  CFF6 FFE9          	movff	tblptrl,fsr0l
 18117  004CA2  CFF7 FFEA          	movff	tblptrh,fsr0h
 18118  004CA6  50EF               	movf	indf0,w,c
 18119  004CA8                     u6160:
 18120  004CA8  0900               	iorlw	0
 18121  004CAA  A4D8               	btfss	status,2,c
 18122  004CAC  EF5A  F026         	goto	u6171
 18123  004CB0  EF5C  F026         	goto	u6170
 18124  004CB4                     u6171:
 18125  004CB4  EF41  F026         	goto	l6728
 18126  004CB8                     u6170:
 18127  004CB8  5007               	movf	strlen@a^0,w,c
 18128  004CBA  5C05               	subwf	strlen@s^0,w,c
 18129  004CBC  6E05               	movwf	?_strlen^0,c
 18130  004CBE  5008               	movf	(strlen@a+1)^0,w,c
 18131  004CC0  5806               	subwfb	(strlen@s+1)^0,w,c
 18132  004CC2  6E06               	movwf	(?_strlen+1)^0,c
 18133  004CC4  0012               	return		;funcret
 18134  004CC6                     __end_of_strlen:
 18135                           	opt callstack 0
 18136                           
 18137 ;; *************** function _fputs *****************
 18138 ;; Defined at:
 18139 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
 18140 ;; Parameters:    Size  Location     Type
 18141 ;;  s               2   15[COMRAM] PTR const unsigned char 
 18142 ;;		 -> dbuf(32), 
 18143 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
 18144 ;;		 -> NULL(0), 
 18145 ;; Auto vars:     Size  Location     Type
 18146 ;;  i               2   20[COMRAM] int 
 18147 ;;  c               1   19[COMRAM] unsigned char 
 18148 ;; Return value:  Size  Location     Type
 18149 ;;                  2   15[COMRAM] int 
 18150 ;; Registers used:
 18151 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18152 ;; Tracked objects:
 18153 ;;		On entry : 0/0
 18154 ;;		On exit  : 0/0
 18155 ;;		Unchanged: 0/0
 18156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18157 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18158 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18160 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18161 ;;Total ram usage:        7 bytes
 18162 ;; Hardware stack levels used:    1
 18163 ;; Hardware stack levels required when called:    7
 18164 ;; This function calls:
 18165 ;;		_fputc
 18166 ;; This function is called by:
 18167 ;;		_pad
 18168 ;; This function uses a non-reentrant model
 18169 ;;
 18170                           
 18171                           	psect	text68
 18172  004DE8                     __ptext68:
 18173                           	opt callstack 0
 18174  004DE8                     _fputs:
 18175                           	opt callstack 18
 18176  004DE8  0E00               	movlw	0
 18177  004DEA  6E16               	movwf	(fputs@i+1)^0,c
 18178  004DEC  0E00               	movlw	0
 18179  004DEE  6E15               	movwf	fputs@i^0,c
 18180  004DF0  EF05  F027         	goto	l6742
 18181  004DF4                     l6738:
 18182  004DF4  C014  F007         	movff	fputs@c,fputc@c
 18183  004DF8  6A08               	clrf	(fputc@c+1)^0,c
 18184  004DFA  C012  F009         	movff	fputs@fp,fputc@fp
 18185  004DFE  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
 18186  004E02  ECF6  F022         	call	_fputc	;wreg free
 18187  004E06  4A15               	infsnz	fputs@i^0,f,c
 18188  004E08  2A16               	incf	(fputs@i+1)^0,f,c
 18189  004E0A                     l6742:
 18190  004E0A  5015               	movf	fputs@i^0,w,c
 18191  004E0C  2410               	addwf	fputs@s^0,w,c
 18192  004E0E  6ED9               	movwf	fsr2l,c
 18193  004E10  5016               	movf	(fputs@i+1)^0,w,c
 18194  004E12  2011               	addwfc	(fputs@s+1)^0,w,c
 18195  004E14  6EDA               	movwf	fsr2h,c
 18196  004E16  50DF               	movf	indf2,w,c
 18197  004E18  6E14               	movwf	fputs@c^0,c
 18198  004E1A  5014               	movf	fputs@c^0,w,c
 18199  004E1C  A4D8               	btfss	status,2,c
 18200  004E1E  EF13  F027         	goto	u6181
 18201  004E22  EF15  F027         	goto	u6180
 18202  004E26                     u6181:
 18203  004E26  EFFA  F026         	goto	l6738
 18204  004E2A                     u6180:
 18205  004E2A  0012               	return		;funcret
 18206  004E2C                     __end_of_fputs:
 18207                           	opt callstack 0
 18208                           
 18209 ;; *************** function _fputc *****************
 18210 ;; Defined at:
 18211 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
 18212 ;; Parameters:    Size  Location     Type
 18213 ;;  c               2    6[COMRAM] int 
 18214 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
 18215 ;;		 -> NULL(0), 
 18216 ;; Auto vars:     Size  Location     Type
 18217 ;;		None
 18218 ;; Return value:  Size  Location     Type
 18219 ;;                  2    6[COMRAM] int 
 18220 ;; Registers used:
 18221 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18222 ;; Tracked objects:
 18223 ;;		On entry : 0/0
 18224 ;;		On exit  : 0/0
 18225 ;;		Unchanged: 0/0
 18226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18227 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18229 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18230 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18231 ;;Total ram usage:        9 bytes
 18232 ;; Hardware stack levels used:    1
 18233 ;; Hardware stack levels required when called:    6
 18234 ;; This function calls:
 18235 ;;		_putch
 18236 ;; This function is called by:
 18237 ;;		_pad
 18238 ;;		_stoa
 18239 ;;		_vfpfcnvrt
 18240 ;;		_fputs
 18241 ;; This function uses a non-reentrant model
 18242 ;;
 18243                           
 18244                           	psect	text69
 18245  0045EC                     __ptext69:
 18246                           	opt callstack 0
 18247  0045EC                     _fputc:
 18248                           	opt callstack 18
 18249  0045EC  5009               	movf	fputc@fp^0,w,c
 18250  0045EE  100A               	iorwf	(fputc@fp+1)^0,w,c
 18251  0045F0  B4D8               	btfsc	status,2,c
 18252  0045F2  EFFD  F022         	goto	u6121
 18253  0045F6  EFFF  F022         	goto	u6120
 18254  0045FA                     u6121:
 18255  0045FA  EF08  F023         	goto	l6716
 18256  0045FE                     u6120:
 18257  0045FE  5009               	movf	fputc@fp^0,w,c
 18258  004600  100A               	iorwf	(fputc@fp+1)^0,w,c
 18259  004602  A4D8               	btfss	status,2,c
 18260  004604  EF06  F023         	goto	u6131
 18261  004608  EF08  F023         	goto	u6130
 18262  00460C                     u6131:
 18263  00460C  EF0D  F023         	goto	l6718
 18264  004610                     u6130:
 18265  004610                     l6716:
 18266  004610  5007               	movf	fputc@c^0,w,c
 18267  004612  EC79  F029         	call	_putch
 18268  004616  EF40  F023         	goto	l2137
 18269  00461A                     l6718:
 18270  00461A  EE20 F004          	lfsr	2,4
 18271  00461E  5009               	movf	fputc@fp^0,w,c
 18272  004620  26D9               	addwf	fsr2l,f,c
 18273  004622  500A               	movf	(fputc@fp+1)^0,w,c
 18274  004624  22DA               	addwfc	fsr2h,f,c
 18275  004626  50DE               	movf	postinc2,w,c
 18276  004628  10DE               	iorwf	postinc2,w,c
 18277  00462A  B4D8               	btfsc	status,2,c
 18278  00462C  EF1A  F023         	goto	u6141
 18279  004630  EF1C  F023         	goto	u6140
 18280  004634                     u6141:
 18281  004634  EF37  F023         	goto	l6722
 18282  004638                     u6140:
 18283  004638  EE20 F004          	lfsr	2,4
 18284  00463C  5009               	movf	fputc@fp^0,w,c
 18285  00463E  26D9               	addwf	fsr2l,f,c
 18286  004640  500A               	movf	(fputc@fp+1)^0,w,c
 18287  004642  22DA               	addwfc	fsr2h,f,c
 18288  004644  EE10 F002          	lfsr	1,2
 18289  004648  5009               	movf	fputc@fp^0,w,c
 18290  00464A  26E1               	addwf	fsr1l,f,c
 18291  00464C  500A               	movf	(fputc@fp+1)^0,w,c
 18292  00464E  22E2               	addwfc	fsr1h,f,c
 18293  004650  50DE               	movf	postinc2,w,c
 18294  004652  5CE6               	subwf	postinc1,w,c
 18295  004654  50E6               	movf	postinc1,w,c
 18296  004656  0A80               	xorlw	128
 18297  004658  6E0F               	movwf	(??_fputc+4)^0,c
 18298  00465A  50DE               	movf	postinc2,w,c
 18299  00465C  0A80               	xorlw	128
 18300  00465E  580F               	subwfb	(??_fputc+4)^0,w,c
 18301  004660  B0D8               	btfsc	status,0,c
 18302  004662  EF35  F023         	goto	u6151
 18303  004666  EF37  F023         	goto	u6150
 18304  00466A                     u6151:
 18305  00466A  EF40  F023         	goto	l2137
 18306  00466E                     u6150:
 18307  00466E                     l6722:
 18308  00466E  EE20 F002          	lfsr	2,2
 18309  004672  5009               	movf	fputc@fp^0,w,c
 18310  004674  26D9               	addwf	fsr2l,f,c
 18311  004676  500A               	movf	(fputc@fp+1)^0,w,c
 18312  004678  22DA               	addwfc	fsr2h,f,c
 18313  00467A  2ADE               	incf	postinc2,f,c
 18314  00467C  0E00               	movlw	0
 18315  00467E  22DD               	addwfc	postdec2,f,c
 18316  004680                     l2137:
 18317  004680  0012               	return		;funcret
 18318  004682                     __end_of_fputc:
 18319                           	opt callstack 0
 18320                           
 18321 ;; *************** function _putch *****************
 18322 ;; Defined at:
 18323 ;;		line 205 in file "mcc_generated_files/eusart2.c"
 18324 ;; Parameters:    Size  Location     Type
 18325 ;;  txData          1    wreg     unsigned char 
 18326 ;; Auto vars:     Size  Location     Type
 18327 ;;  txData          1    5[COMRAM] unsigned char 
 18328 ;; Return value:  Size  Location     Type
 18329 ;;                  1    wreg      void 
 18330 ;; Registers used:
 18331 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18332 ;; Tracked objects:
 18333 ;;		On entry : 0/0
 18334 ;;		On exit  : 0/0
 18335 ;;		Unchanged: 0/0
 18336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18338 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18340 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18341 ;;Total ram usage:        1 bytes
 18342 ;; Hardware stack levels used:    1
 18343 ;; Hardware stack levels required when called:    5
 18344 ;; This function calls:
 18345 ;;		_EUSART2_Write
 18346 ;; This function is called by:
 18347 ;;		_fputc
 18348 ;; This function uses a non-reentrant model
 18349 ;;
 18350                           
 18351                           	psect	text70
 18352  0052F2                     __ptext70:
 18353                           	opt callstack 0
 18354  0052F2                     _putch:
 18355                           	opt callstack 18
 18356                           
 18357                           ;incstack = 0
 18358                           ;putch@txData stored from wreg
 18359  0052F2  6E06               	movwf	putch@txData^0,c
 18360  0052F4                     
 18361                           ;mcc_generated_files/eusart2.c: 205: void putch(char txData);mcc_generated_files/eusart2
      +                          .c: 206: {;mcc_generated_files/eusart2.c: 207:     EUSART2_Write(txData);
 18362  0052F4  5006               	movf	putch@txData^0,w,c
 18363  0052F6  EC06  F025         	call	_EUSART2_Write
 18364  0052FA  0012               	return		;funcret
 18365  0052FC                     __end_of_putch:
 18366                           	opt callstack 0
 18367                           
 18368 ;; *************** function _EUSART2_Write *****************
 18369 ;; Defined at:
 18370 ;;		line 177 in file "mcc_generated_files/eusart2.c"
 18371 ;; Parameters:    Size  Location     Type
 18372 ;;  txData          1    wreg     unsigned char 
 18373 ;; Auto vars:     Size  Location     Type
 18374 ;;  txData          1    4[COMRAM] unsigned char 
 18375 ;; Return value:  Size  Location     Type
 18376 ;;                  1    wreg      void 
 18377 ;; Registers used:
 18378 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18379 ;; Tracked objects:
 18380 ;;		On entry : 0/0
 18381 ;;		On exit  : 0/0
 18382 ;;		Unchanged: 0/0
 18383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18385 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18387 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18388 ;;Total ram usage:        1 bytes
 18389 ;; Hardware stack levels used:    1
 18390 ;; Hardware stack levels required when called:    4
 18391 ;; This function calls:
 18392 ;;		Nothing
 18393 ;; This function is called by:
 18394 ;;		_putch
 18395 ;;		_ReadRX232
 18396 ;; This function uses a non-reentrant model
 18397 ;;
 18398                           
 18399                           	psect	text71
 18400  004A0C                     __ptext71:
 18401                           	opt callstack 0
 18402  004A0C                     _EUSART2_Write:
 18403                           	opt callstack 18
 18404                           
 18405                           ;incstack = 0
 18406                           ;EUSART2_Write@txData stored from wreg
 18407  004A0C  6E05               	movwf	EUSART2_Write@txData^0,c
 18408  004A0E                     l6694:
 18409                           
 18410                           ;mcc_generated_files/eusart2.c: 179:     while(0 == eusart2TxBufferRemaining)
 18411  004A0E  0100               	movlb	0	; () banked
 18412  004A10  51FF               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 18413  004A12  B4D8               	btfsc	status,2,c
 18414  004A14  EF0E  F025         	goto	u6091
 18415  004A18  EF10  F025         	goto	u6090
 18416  004A1C                     u6091:
 18417  004A1C  EF07  F025         	goto	l6694
 18418  004A20                     u6090:
 18419  004A20                     
 18420                           ; BSR set to: 0
 18421                           ;mcc_generated_files/eusart2.c: 183:     if(0 == PIE3bits.TX2IE)
 18422  004A20  010E               	movlb	14	; () banked
 18423  004A22  BDC5               	btfsc	197,6,b	;volatile
 18424  004A24  EF16  F025         	goto	u6101
 18425  004A28  EF18  F025         	goto	u6100
 18426  004A2C                     u6101:
 18427  004A2C  EF1C  F025         	goto	l325
 18428  004A30                     u6100:
 18429  004A30                     
 18430                           ; BSR set to: 14
 18431                           ;mcc_generated_files/eusart2.c: 184:     {;mcc_generated_files/eusart2.c: 185:         T
      +                          X2REG = txData;
 18432  004A30  C005  FE9A         	movff	EUSART2_Write@txData,3738	;volatile
 18433                           
 18434                           ;mcc_generated_files/eusart2.c: 186:     }
 18435  004A34  EF32  F025         	goto	l6708
 18436  004A38                     l325:
 18437                           
 18438                           ; BSR set to: 14
 18439                           ;mcc_generated_files/eusart2.c: 188:     {;mcc_generated_files/eusart2.c: 189:         P
      +                          IE3bits.TX2IE = 0;
 18440  004A38  9DC5               	bcf	197,6,b	;volatile
 18441  004A3A                     
 18442                           ; BSR set to: 14
 18443                           ;mcc_generated_files/eusart2.c: 190:         eusart2TxBuffer[eusart2TxHead++] = txData;
 18444  004A3A  0E84               	movlw	low _eusart2TxBuffer
 18445  004A3C  0100               	movlb	0	; () banked
 18446  004A3E  25E8               	addwf	_eusart2TxHead& (0+255),w,b	;volatile
 18447  004A40  6ED9               	movwf	fsr2l,c
 18448  004A42  6ADA               	clrf	fsr2h,c
 18449  004A44  0E03               	movlw	high _eusart2TxBuffer
 18450  004A46  22DA               	addwfc	fsr2h,f,c
 18451  004A48  C005  FFDF         	movff	EUSART2_Write@txData,indf2
 18452  004A4C                     
 18453                           ; BSR set to: 0
 18454  004A4C  2BE8               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 18455  004A4E                     
 18456                           ; BSR set to: 0
 18457                           ;mcc_generated_files/eusart2.c: 191:         if(sizeof(eusart2TxBuffer) <= eusart2TxHead
      +                          )
 18458  004A4E  0E1F               	movlw	31
 18459  004A50  65E8               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 18460  004A52  EF2D  F025         	goto	u6111
 18461  004A56  EF2F  F025         	goto	u6110
 18462  004A5A                     u6111:
 18463  004A5A  EF31  F025         	goto	l6706
 18464  004A5E                     u6110:
 18465  004A5E                     
 18466                           ; BSR set to: 0
 18467                           ;mcc_generated_files/eusart2.c: 192:         {;mcc_generated_files/eusart2.c: 193:      
      +                                 eusart2TxHead = 0;
 18468  004A5E  0E00               	movlw	0
 18469  004A60  6FE8               	movwf	_eusart2TxHead& (0+255),b	;volatile
 18470  004A62                     l6706:
 18471                           
 18472                           ; BSR set to: 0
 18473                           ;mcc_generated_files/eusart2.c: 195:         eusart2TxBufferRemaining--;
 18474  004A62  07FF               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 18475  004A64                     l6708:
 18476                           
 18477                           ;mcc_generated_files/eusart2.c: 197:     PIE3bits.TX2IE = 1;
 18478  004A64  010E               	movlb	14	; () banked
 18479  004A66  8DC5               	bsf	197,6,b	;volatile
 18480  004A68                     
 18481                           ; BSR set to: 14
 18482  004A68  0012               	return		;funcret
 18483  004A6A                     __end_of_EUSART2_Write:
 18484                           	opt callstack 0
 18485                           
 18486 ;; *************** function _abs *****************
 18487 ;; Defined at:
 18488 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
 18489 ;; Parameters:    Size  Location     Type
 18490 ;;  a               2   22[COMRAM] int 
 18491 ;; Auto vars:     Size  Location     Type
 18492 ;;		None
 18493 ;; Return value:  Size  Location     Type
 18494 ;;                  2   22[COMRAM] int 
 18495 ;; Registers used:
 18496 ;;		wreg, status,2, status,0
 18497 ;; Tracked objects:
 18498 ;;		On entry : 0/0
 18499 ;;		On exit  : 0/0
 18500 ;;		Unchanged: 0/0
 18501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18502 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18504 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18505 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18506 ;;Total ram usage:        4 bytes
 18507 ;; Hardware stack levels used:    1
 18508 ;; Hardware stack levels required when called:    4
 18509 ;; This function calls:
 18510 ;;		Nothing
 18511 ;; This function is called by:
 18512 ;;		_dtoa
 18513 ;; This function uses a non-reentrant model
 18514 ;;
 18515                           
 18516                           	psect	text72
 18517  004F32                     __ptext72:
 18518                           	opt callstack 0
 18519  004F32                     _abs:
 18520                           	opt callstack 22
 18521  004F32  BE18               	btfsc	(abs@a+1)^0,7,c
 18522  004F34  EFA6  F027         	goto	u6250
 18523  004F38  5018               	movf	(abs@a+1)^0,w,c
 18524  004F3A  E106               	bnz	u6251
 18525  004F3C  0417               	decf	abs@a^0,w,c
 18526  004F3E  B0D8               	btfsc	status,0,c
 18527  004F40  EFA4  F027         	goto	u6251
 18528  004F44  EFA6  F027         	goto	u6250
 18529  004F48                     u6251:
 18530  004F48  EFB4  F027         	goto	l2055
 18531  004F4C                     u6250:
 18532  004F4C  C017  F019         	movff	abs@a,??_abs
 18533  004F50  C018  F01A         	movff	abs@a+1,??_abs+1
 18534  004F54  1E19               	comf	??_abs^0,f,c
 18535  004F56  1E1A               	comf	(??_abs+1)^0,f,c
 18536  004F58  4A19               	infsnz	??_abs^0,f,c
 18537  004F5A  2A1A               	incf	(??_abs+1)^0,f,c
 18538  004F5C  C019  F017         	movff	??_abs,?_abs
 18539  004F60  C01A  F018         	movff	??_abs+1,?_abs+1
 18540  004F64  EFB8  F027         	goto	l2058
 18541  004F68                     l2055:
 18542  004F68  C017  F017         	movff	abs@a,?_abs
 18543  004F6C  C018  F018         	movff	abs@a+1,?_abs+1
 18544  004F70                     l2058:
 18545  004F70  0012               	return		;funcret
 18546  004F72                     __end_of_abs:
 18547                           	opt callstack 0
 18548                           
 18549 ;; *************** function ___aomod *****************
 18550 ;; Defined at:
 18551 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
 18552 ;; Parameters:    Size  Location     Type
 18553 ;;  dividend        8    4[COMRAM] long long 
 18554 ;;  divisor         8   12[COMRAM] long long 
 18555 ;; Auto vars:     Size  Location     Type
 18556 ;;  sign            1   21[COMRAM] unsigned char 
 18557 ;;  counter         1   20[COMRAM] unsigned char 
 18558 ;; Return value:  Size  Location     Type
 18559 ;;                  8    4[COMRAM] long long 
 18560 ;; Registers used:
 18561 ;;		wreg, status,2, status,0
 18562 ;; Tracked objects:
 18563 ;;		On entry : 0/0
 18564 ;;		On exit  : 0/0
 18565 ;;		Unchanged: 0/0
 18566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18567 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18568 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18570 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18571 ;;Total ram usage:       18 bytes
 18572 ;; Hardware stack levels used:    1
 18573 ;; Hardware stack levels required when called:    4
 18574 ;; This function calls:
 18575 ;;		Nothing
 18576 ;; This function is called by:
 18577 ;;		_dtoa
 18578 ;; This function uses a non-reentrant model
 18579 ;;
 18580                           
 18581                           	psect	text73
 18582  00375E                     __ptext73:
 18583                           	opt callstack 0
 18584  00375E                     ___aomod:
 18585                           	opt callstack 22
 18586  00375E  0E00               	movlw	0
 18587  003760  6E16               	movwf	___aomod@sign^0,c
 18588  003762  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
 18589  003764  EFB8  F01B         	goto	u6420
 18590  003768  EFB6  F01B         	goto	u6421
 18591  00376C                     u6421:
 18592  00376C  EFCA  F01B         	goto	l6854
 18593  003770                     u6420:
 18594  003770  1E0C               	comf	(___aomod@dividend+7)^0,f,c
 18595  003772  1E0B               	comf	(___aomod@dividend+6)^0,f,c
 18596  003774  1E0A               	comf	(___aomod@dividend+5)^0,f,c
 18597  003776  1E09               	comf	(___aomod@dividend+4)^0,f,c
 18598  003778  1E08               	comf	(___aomod@dividend+3)^0,f,c
 18599  00377A  1E07               	comf	(___aomod@dividend+2)^0,f,c
 18600  00377C  1E06               	comf	(___aomod@dividend+1)^0,f,c
 18601  00377E  6C05               	negf	___aomod@dividend^0,c
 18602  003780  0E00               	movlw	0
 18603  003782  2206               	addwfc	(___aomod@dividend+1)^0,f,c
 18604  003784  2207               	addwfc	(___aomod@dividend+2)^0,f,c
 18605  003786  2208               	addwfc	(___aomod@dividend+3)^0,f,c
 18606  003788  2209               	addwfc	(___aomod@dividend+4)^0,f,c
 18607  00378A  220A               	addwfc	(___aomod@dividend+5)^0,f,c
 18608  00378C  220B               	addwfc	(___aomod@dividend+6)^0,f,c
 18609  00378E  220C               	addwfc	(___aomod@dividend+7)^0,f,c
 18610  003790  0E01               	movlw	1
 18611  003792  6E16               	movwf	___aomod@sign^0,c
 18612  003794                     l6854:
 18613  003794  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
 18614  003796  EFD1  F01B         	goto	u6430
 18615  00379A  EFCF  F01B         	goto	u6431
 18616  00379E                     u6431:
 18617  00379E  EFE1  F01B         	goto	l6858
 18618  0037A2                     u6430:
 18619  0037A2  1E14               	comf	(___aomod@divisor+7)^0,f,c
 18620  0037A4  1E13               	comf	(___aomod@divisor+6)^0,f,c
 18621  0037A6  1E12               	comf	(___aomod@divisor+5)^0,f,c
 18622  0037A8  1E11               	comf	(___aomod@divisor+4)^0,f,c
 18623  0037AA  1E10               	comf	(___aomod@divisor+3)^0,f,c
 18624  0037AC  1E0F               	comf	(___aomod@divisor+2)^0,f,c
 18625  0037AE  1E0E               	comf	(___aomod@divisor+1)^0,f,c
 18626  0037B0  6C0D               	negf	___aomod@divisor^0,c
 18627  0037B2  0E00               	movlw	0
 18628  0037B4  220E               	addwfc	(___aomod@divisor+1)^0,f,c
 18629  0037B6  220F               	addwfc	(___aomod@divisor+2)^0,f,c
 18630  0037B8  2210               	addwfc	(___aomod@divisor+3)^0,f,c
 18631  0037BA  2211               	addwfc	(___aomod@divisor+4)^0,f,c
 18632  0037BC  2212               	addwfc	(___aomod@divisor+5)^0,f,c
 18633  0037BE  2213               	addwfc	(___aomod@divisor+6)^0,f,c
 18634  0037C0  2214               	addwfc	(___aomod@divisor+7)^0,f,c
 18635  0037C2                     l6858:
 18636  0037C2  500D               	movf	___aomod@divisor^0,w,c
 18637  0037C4  100E               	iorwf	(___aomod@divisor+1)^0,w,c
 18638  0037C6  100F               	iorwf	(___aomod@divisor+2)^0,w,c
 18639  0037C8  1010               	iorwf	(___aomod@divisor+3)^0,w,c
 18640  0037CA  1011               	iorwf	(___aomod@divisor+4)^0,w,c
 18641  0037CC  1012               	iorwf	(___aomod@divisor+5)^0,w,c
 18642  0037CE  1013               	iorwf	(___aomod@divisor+6)^0,w,c
 18643  0037D0  1014               	iorwf	(___aomod@divisor+7)^0,w,c
 18644  0037D2  B4D8               	btfsc	status,2,c
 18645  0037D4  EFEE  F01B         	goto	u6441
 18646  0037D8  EFF0  F01B         	goto	u6440
 18647  0037DC                     u6441:
 18648  0037DC  EF38  F01C         	goto	l6874
 18649  0037E0                     u6440:
 18650  0037E0  0E01               	movlw	1
 18651  0037E2  6E15               	movwf	___aomod@counter^0,c
 18652  0037E4  EFFE  F01B         	goto	l6864
 18653  0037E8                     l6862:
 18654  0037E8  90D8               	bcf	status,0,c
 18655  0037EA  360D               	rlcf	___aomod@divisor^0,f,c
 18656  0037EC  360E               	rlcf	(___aomod@divisor+1)^0,f,c
 18657  0037EE  360F               	rlcf	(___aomod@divisor+2)^0,f,c
 18658  0037F0  3610               	rlcf	(___aomod@divisor+3)^0,f,c
 18659  0037F2  3611               	rlcf	(___aomod@divisor+4)^0,f,c
 18660  0037F4  3612               	rlcf	(___aomod@divisor+5)^0,f,c
 18661  0037F6  3613               	rlcf	(___aomod@divisor+6)^0,f,c
 18662  0037F8  3614               	rlcf	(___aomod@divisor+7)^0,f,c
 18663  0037FA  2A15               	incf	___aomod@counter^0,f,c
 18664  0037FC                     l6864:
 18665  0037FC  AE14               	btfss	(___aomod@divisor+7)^0,7,c
 18666  0037FE  EF03  F01C         	goto	u6451
 18667  003802  EF05  F01C         	goto	u6450
 18668  003806                     u6451:
 18669  003806  EFF4  F01B         	goto	l6862
 18670  00380A                     u6450:
 18671  00380A                     l6866:
 18672  00380A  500D               	movf	___aomod@divisor^0,w,c
 18673  00380C  5C05               	subwf	___aomod@dividend^0,w,c
 18674  00380E  500E               	movf	(___aomod@divisor+1)^0,w,c
 18675  003810  5806               	subwfb	(___aomod@dividend+1)^0,w,c
 18676  003812  500F               	movf	(___aomod@divisor+2)^0,w,c
 18677  003814  5807               	subwfb	(___aomod@dividend+2)^0,w,c
 18678  003816  5010               	movf	(___aomod@divisor+3)^0,w,c
 18679  003818  5808               	subwfb	(___aomod@dividend+3)^0,w,c
 18680  00381A  5011               	movf	(___aomod@divisor+4)^0,w,c
 18681  00381C  5809               	subwfb	(___aomod@dividend+4)^0,w,c
 18682  00381E  5012               	movf	(___aomod@divisor+5)^0,w,c
 18683  003820  580A               	subwfb	(___aomod@dividend+5)^0,w,c
 18684  003822  5013               	movf	(___aomod@divisor+6)^0,w,c
 18685  003824  580B               	subwfb	(___aomod@dividend+6)^0,w,c
 18686  003826  5014               	movf	(___aomod@divisor+7)^0,w,c
 18687  003828  580C               	subwfb	(___aomod@dividend+7)^0,w,c
 18688  00382A  A0D8               	btfss	status,0,c
 18689  00382C  EF1A  F01C         	goto	u6461
 18690  003830  EF1C  F01C         	goto	u6460
 18691  003834                     u6461:
 18692  003834  EF2C  F01C         	goto	l6870
 18693  003838                     u6460:
 18694  003838  500D               	movf	___aomod@divisor^0,w,c
 18695  00383A  5E05               	subwf	___aomod@dividend^0,f,c
 18696  00383C  500E               	movf	(___aomod@divisor+1)^0,w,c
 18697  00383E  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
 18698  003840  500F               	movf	(___aomod@divisor+2)^0,w,c
 18699  003842  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
 18700  003844  5010               	movf	(___aomod@divisor+3)^0,w,c
 18701  003846  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
 18702  003848  5011               	movf	(___aomod@divisor+4)^0,w,c
 18703  00384A  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
 18704  00384C  5012               	movf	(___aomod@divisor+5)^0,w,c
 18705  00384E  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
 18706  003850  5013               	movf	(___aomod@divisor+6)^0,w,c
 18707  003852  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
 18708  003854  5014               	movf	(___aomod@divisor+7)^0,w,c
 18709  003856  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
 18710  003858                     l6870:
 18711  003858  90D8               	bcf	status,0,c
 18712  00385A  3214               	rrcf	(___aomod@divisor+7)^0,f,c
 18713  00385C  3213               	rrcf	(___aomod@divisor+6)^0,f,c
 18714  00385E  3212               	rrcf	(___aomod@divisor+5)^0,f,c
 18715  003860  3211               	rrcf	(___aomod@divisor+4)^0,f,c
 18716  003862  3210               	rrcf	(___aomod@divisor+3)^0,f,c
 18717  003864  320F               	rrcf	(___aomod@divisor+2)^0,f,c
 18718  003866  320E               	rrcf	(___aomod@divisor+1)^0,f,c
 18719  003868  320D               	rrcf	___aomod@divisor^0,f,c
 18720  00386A  2E15               	decfsz	___aomod@counter^0,f,c
 18721  00386C  EF05  F01C         	goto	l6866
 18722  003870                     l6874:
 18723  003870  5016               	movf	___aomod@sign^0,w,c
 18724  003872  B4D8               	btfsc	status,2,c
 18725  003874  EF3E  F01C         	goto	u6471
 18726  003878  EF40  F01C         	goto	u6470
 18727  00387C                     u6471:
 18728  00387C  EF50  F01C         	goto	l6878
 18729  003880                     u6470:
 18730  003880  1E0C               	comf	(___aomod@dividend+7)^0,f,c
 18731  003882  1E0B               	comf	(___aomod@dividend+6)^0,f,c
 18732  003884  1E0A               	comf	(___aomod@dividend+5)^0,f,c
 18733  003886  1E09               	comf	(___aomod@dividend+4)^0,f,c
 18734  003888  1E08               	comf	(___aomod@dividend+3)^0,f,c
 18735  00388A  1E07               	comf	(___aomod@dividend+2)^0,f,c
 18736  00388C  1E06               	comf	(___aomod@dividend+1)^0,f,c
 18737  00388E  6C05               	negf	___aomod@dividend^0,c
 18738  003890  0E00               	movlw	0
 18739  003892  2206               	addwfc	(___aomod@dividend+1)^0,f,c
 18740  003894  2207               	addwfc	(___aomod@dividend+2)^0,f,c
 18741  003896  2208               	addwfc	(___aomod@dividend+3)^0,f,c
 18742  003898  2209               	addwfc	(___aomod@dividend+4)^0,f,c
 18743  00389A  220A               	addwfc	(___aomod@dividend+5)^0,f,c
 18744  00389C  220B               	addwfc	(___aomod@dividend+6)^0,f,c
 18745  00389E  220C               	addwfc	(___aomod@dividend+7)^0,f,c
 18746  0038A0                     l6878:
 18747  0038A0  C005  F005         	movff	___aomod@dividend,?___aomod
 18748  0038A4  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
 18749  0038A8  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
 18750  0038AC  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
 18751  0038B0  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
 18752  0038B4  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
 18753  0038B8  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
 18754  0038BC  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
 18755  0038C0  0012               	return		;funcret
 18756  0038C2                     __end_of___aomod:
 18757                           	opt callstack 0
 18758                           
 18759 ;; *************** function ___aodiv *****************
 18760 ;; Defined at:
 18761 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
 18762 ;; Parameters:    Size  Location     Type
 18763 ;;  dividend        8    4[COMRAM] long long 
 18764 ;;  divisor         8   12[COMRAM] long long 
 18765 ;; Auto vars:     Size  Location     Type
 18766 ;;  quotient        8   22[COMRAM] long long 
 18767 ;;  sign            1   21[COMRAM] unsigned char 
 18768 ;;  counter         1   20[COMRAM] unsigned char 
 18769 ;; Return value:  Size  Location     Type
 18770 ;;                  8    4[COMRAM] long long 
 18771 ;; Registers used:
 18772 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18773 ;; Tracked objects:
 18774 ;;		On entry : 0/0
 18775 ;;		On exit  : 0/0
 18776 ;;		Unchanged: 0/0
 18777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18778 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18779 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18781 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18782 ;;Total ram usage:       26 bytes
 18783 ;; Hardware stack levels used:    1
 18784 ;; Hardware stack levels required when called:    4
 18785 ;; This function calls:
 18786 ;;		Nothing
 18787 ;; This function is called by:
 18788 ;;		_dtoa
 18789 ;; This function uses a non-reentrant model
 18790 ;;
 18791                           
 18792                           	psect	text74
 18793  003454                     __ptext74:
 18794                           	opt callstack 0
 18795  003454                     ___aodiv:
 18796                           	opt callstack 22
 18797  003454  0E00               	movlw	0
 18798  003456  6E16               	movwf	___aodiv@sign^0,c
 18799  003458  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
 18800  00345A  EF33  F01A         	goto	u6350
 18801  00345E  EF31  F01A         	goto	u6351
 18802  003462                     u6351:
 18803  003462  EF45  F01A         	goto	l6810
 18804  003466                     u6350:
 18805  003466  1E14               	comf	(___aodiv@divisor+7)^0,f,c
 18806  003468  1E13               	comf	(___aodiv@divisor+6)^0,f,c
 18807  00346A  1E12               	comf	(___aodiv@divisor+5)^0,f,c
 18808  00346C  1E11               	comf	(___aodiv@divisor+4)^0,f,c
 18809  00346E  1E10               	comf	(___aodiv@divisor+3)^0,f,c
 18810  003470  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
 18811  003472  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
 18812  003474  6C0D               	negf	___aodiv@divisor^0,c
 18813  003476  0E00               	movlw	0
 18814  003478  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
 18815  00347A  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
 18816  00347C  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
 18817  00347E  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
 18818  003480  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
 18819  003482  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
 18820  003484  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
 18821  003486  0E01               	movlw	1
 18822  003488  6E16               	movwf	___aodiv@sign^0,c
 18823  00348A                     l6810:
 18824  00348A  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
 18825  00348C  EF4C  F01A         	goto	u6360
 18826  003490  EF4A  F01A         	goto	u6361
 18827  003494                     u6361:
 18828  003494  EF5E  F01A         	goto	l6816
 18829  003498                     u6360:
 18830  003498  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
 18831  00349A  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
 18832  00349C  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
 18833  00349E  1E09               	comf	(___aodiv@dividend+4)^0,f,c
 18834  0034A0  1E08               	comf	(___aodiv@dividend+3)^0,f,c
 18835  0034A2  1E07               	comf	(___aodiv@dividend+2)^0,f,c
 18836  0034A4  1E06               	comf	(___aodiv@dividend+1)^0,f,c
 18837  0034A6  6C05               	negf	___aodiv@dividend^0,c
 18838  0034A8  0E00               	movlw	0
 18839  0034AA  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
 18840  0034AC  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
 18841  0034AE  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
 18842  0034B0  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
 18843  0034B2  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
 18844  0034B4  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
 18845  0034B6  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
 18846  0034B8  0E01               	movlw	1
 18847  0034BA  1A16               	xorwf	___aodiv@sign^0,f,c
 18848  0034BC                     l6816:
 18849  0034BC  EE20  F017         	lfsr	2,___aodiv@quotient
 18850  0034C0  0E07               	movlw	7
 18851  0034C2                     u6371:
 18852  0034C2  6ADE               	clrf	postinc2,c
 18853  0034C4  06E8               	decf	wreg,f,c
 18854  0034C6  E2FD               	bc	u6371
 18855  0034C8  500D               	movf	___aodiv@divisor^0,w,c
 18856  0034CA  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
 18857  0034CC  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
 18858  0034CE  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
 18859  0034D0  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
 18860  0034D2  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
 18861  0034D4  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
 18862  0034D6  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
 18863  0034D8  B4D8               	btfsc	status,2,c
 18864  0034DA  EF71  F01A         	goto	u6381
 18865  0034DE  EF73  F01A         	goto	u6380
 18866  0034E2                     u6381:
 18867  0034E2  EFC5  F01A         	goto	l6838
 18868  0034E6                     u6380:
 18869  0034E6  0E01               	movlw	1
 18870  0034E8  6E15               	movwf	___aodiv@counter^0,c
 18871  0034EA  EF81  F01A         	goto	l6824
 18872  0034EE                     l6822:
 18873  0034EE  90D8               	bcf	status,0,c
 18874  0034F0  360D               	rlcf	___aodiv@divisor^0,f,c
 18875  0034F2  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
 18876  0034F4  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
 18877  0034F6  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
 18878  0034F8  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
 18879  0034FA  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
 18880  0034FC  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
 18881  0034FE  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
 18882  003500  2A15               	incf	___aodiv@counter^0,f,c
 18883  003502                     l6824:
 18884  003502  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
 18885  003504  EF86  F01A         	goto	u6391
 18886  003508  EF88  F01A         	goto	u6390
 18887  00350C                     u6391:
 18888  00350C  EF77  F01A         	goto	l6822
 18889  003510                     u6390:
 18890  003510                     l6826:
 18891  003510  90D8               	bcf	status,0,c
 18892  003512  3617               	rlcf	___aodiv@quotient^0,f,c
 18893  003514  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
 18894  003516  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
 18895  003518  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
 18896  00351A  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
 18897  00351C  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
 18898  00351E  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
 18899  003520  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
 18900  003522  500D               	movf	___aodiv@divisor^0,w,c
 18901  003524  5C05               	subwf	___aodiv@dividend^0,w,c
 18902  003526  500E               	movf	(___aodiv@divisor+1)^0,w,c
 18903  003528  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
 18904  00352A  500F               	movf	(___aodiv@divisor+2)^0,w,c
 18905  00352C  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
 18906  00352E  5010               	movf	(___aodiv@divisor+3)^0,w,c
 18907  003530  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
 18908  003532  5011               	movf	(___aodiv@divisor+4)^0,w,c
 18909  003534  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
 18910  003536  5012               	movf	(___aodiv@divisor+5)^0,w,c
 18911  003538  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
 18912  00353A  5013               	movf	(___aodiv@divisor+6)^0,w,c
 18913  00353C  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
 18914  00353E  5014               	movf	(___aodiv@divisor+7)^0,w,c
 18915  003540  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
 18916  003542  A0D8               	btfss	status,0,c
 18917  003544  EFA6  F01A         	goto	u6401
 18918  003548  EFA8  F01A         	goto	u6400
 18919  00354C                     u6401:
 18920  00354C  EFB9  F01A         	goto	l6834
 18921  003550                     u6400:
 18922  003550  500D               	movf	___aodiv@divisor^0,w,c
 18923  003552  5E05               	subwf	___aodiv@dividend^0,f,c
 18924  003554  500E               	movf	(___aodiv@divisor+1)^0,w,c
 18925  003556  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
 18926  003558  500F               	movf	(___aodiv@divisor+2)^0,w,c
 18927  00355A  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
 18928  00355C  5010               	movf	(___aodiv@divisor+3)^0,w,c
 18929  00355E  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
 18930  003560  5011               	movf	(___aodiv@divisor+4)^0,w,c
 18931  003562  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
 18932  003564  5012               	movf	(___aodiv@divisor+5)^0,w,c
 18933  003566  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
 18934  003568  5013               	movf	(___aodiv@divisor+6)^0,w,c
 18935  00356A  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
 18936  00356C  5014               	movf	(___aodiv@divisor+7)^0,w,c
 18937  00356E  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
 18938  003570  8017               	bsf	___aodiv@quotient^0,0,c
 18939  003572                     l6834:
 18940  003572  90D8               	bcf	status,0,c
 18941  003574  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
 18942  003576  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
 18943  003578  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
 18944  00357A  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
 18945  00357C  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
 18946  00357E  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
 18947  003580  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
 18948  003582  320D               	rrcf	___aodiv@divisor^0,f,c
 18949  003584  2E15               	decfsz	___aodiv@counter^0,f,c
 18950  003586  EF88  F01A         	goto	l6826
 18951  00358A                     l6838:
 18952  00358A  5016               	movf	___aodiv@sign^0,w,c
 18953  00358C  B4D8               	btfsc	status,2,c
 18954  00358E  EFCB  F01A         	goto	u6411
 18955  003592  EFCD  F01A         	goto	u6410
 18956  003596                     u6411:
 18957  003596  EFDD  F01A         	goto	l6842
 18958  00359A                     u6410:
 18959  00359A  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
 18960  00359C  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
 18961  00359E  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
 18962  0035A0  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
 18963  0035A2  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
 18964  0035A4  1E19               	comf	(___aodiv@quotient+2)^0,f,c
 18965  0035A6  1E18               	comf	(___aodiv@quotient+1)^0,f,c
 18966  0035A8  6C17               	negf	___aodiv@quotient^0,c
 18967  0035AA  0E00               	movlw	0
 18968  0035AC  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
 18969  0035AE  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
 18970  0035B0  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
 18971  0035B2  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
 18972  0035B4  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
 18973  0035B6  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
 18974  0035B8  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
 18975  0035BA                     l6842:
 18976  0035BA  C017  F005         	movff	___aodiv@quotient,?___aodiv
 18977  0035BE  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
 18978  0035C2  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
 18979  0035C6  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
 18980  0035CA  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
 18981  0035CE  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
 18982  0035D2  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
 18983  0035D6  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
 18984  0035DA  0012               	return		;funcret
 18985  0035DC                     __end_of___aodiv:
 18986                           	opt callstack 0
 18987                           
 18988 ;; *************** function _atoi *****************
 18989 ;; Defined at:
 18990 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 18991 ;; Parameters:    Size  Location     Type
 18992 ;;  s               2   11[COMRAM] PTR const unsigned char 
 18993 ;;		 -> STR_135(12), STR_133(13), STR_132(17), STR_131(15), 
 18994 ;;		 -> STR_130(33), STR_128(38), STR_127(58), STR_126(19), 
 18995 ;;		 -> STR_125(18), STR_124(4), STR_123(16), STR_122(102), 
 18996 ;;		 -> STR_121(32), STR_120(33), STR_119(37), STR_118(44), 
 18997 ;;		 -> STR_117(22), STR_116(75), STR_115(67), STR_114(75), 
 18998 ;;		 -> STR_113(68), STR_112(69), STR_111(54), STR_110(52), 
 18999 ;;		 -> STR_109(53), STR_108(38), STR_107(51), STR_106(73), 
 19000 ;;		 -> STR_105(42), STR_104(36), STR_103(34), STR_100(42), 
 19001 ;;		 -> STR_99(22), STR_98(21), STR_97(20), STR_96(19), 
 19002 ;;		 -> STR_95(40), STR_85(33), STR_84(53), STR_83(52), 
 19003 ;;		 -> STR_82(26), STR_81(4), STR_80(24), STR_79(30), 
 19004 ;;		 -> STR_78(30), STR_77(37), STR_76(37), STR_75(38), 
 19005 ;;		 -> STR_74(38), STR_73(54), STR_72(36), STR_71(32), 
 19006 ;;		 -> STR_70(32), STR_69(35), STR_68(54), STR_67(38), 
 19007 ;;		 -> STR_66(54), STR_65(36), STR_64(19), STR_63(21), 
 19008 ;;		 -> STR_62(25), STR_61(54), STR_60(21), STR_59(25), 
 19009 ;;		 -> STR_58(15), STR_57(30), STR_56(52), STR_55(28), 
 19010 ;;		 -> STR_54(30), STR_53(52), STR_52(25), STR_51(30), 
 19011 ;;		 -> STR_50(52), STR_49(25), STR_48(30), STR_47(52), 
 19012 ;;		 -> STR_46(23), STR_45(30), STR_44(42), STR_43(21), 
 19013 ;;		 -> STR_42(30), STR_41(52), STR_40(21), STR_39(30), 
 19014 ;;		 -> STR_38(52), STR_37(25), STR_36(21), STR_35(25), 
 19015 ;;		 -> STR_34(30), STR_33(52), STR_32(3), STR_31(32), 
 19016 ;;		 -> STR_30(32), STR_29(35), STR_28(66), STR_27(38), 
 19017 ;;		 -> STR_26(37), STR_25(37), STR_24(38), STR_23(38), 
 19018 ;;		 -> STR_22(55), STR_21(36), STR_20(30), STR_19(30), 
 19019 ;;		 -> STR_18(37), STR_17(37), STR_16(38), STR_15(38), 
 19020 ;;		 -> STR_14(54), STR_13(36), STR_12(21), STR_11(27), 
 19021 ;;		 -> STR_9(19), STR_8(16), STR_7(28), STR_6(44), 
 19022 ;;		 -> STR_5(33), STR_4(34), STR_3(58), STR_2(53), 
 19023 ;;		 -> STR_1(17), 
 19024 ;; Auto vars:     Size  Location     Type
 19025 ;;  n               2   24[COMRAM] int 
 19026 ;;  neg             2   17[COMRAM] int 
 19027 ;; Return value:  Size  Location     Type
 19028 ;;                  2   11[COMRAM] int 
 19029 ;; Registers used:
 19030 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19031 ;; Tracked objects:
 19032 ;;		On entry : 0/0
 19033 ;;		On exit  : 0/0
 19034 ;;		Unchanged: 0/0
 19035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19036 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19037 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19038 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19039 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19040 ;;Total ram usage:       15 bytes
 19041 ;; Hardware stack levels used:    1
 19042 ;; Hardware stack levels required when called:    5
 19043 ;; This function calls:
 19044 ;;		___wmul
 19045 ;;		_isdigit
 19046 ;;		_isspace
 19047 ;; This function is called by:
 19048 ;;		_vfpfcnvrt
 19049 ;; This function uses a non-reentrant model
 19050 ;;
 19051                           
 19052                           	psect	text75
 19053  0032BA                     __ptext75:
 19054                           	opt callstack 0
 19055  0032BA                     _atoi:
 19056                           	opt callstack 22
 19057  0032BA  0E00               	movlw	0
 19058  0032BC  6E1A               	movwf	(atoi@n+1)^0,c
 19059  0032BE  0E00               	movlw	0
 19060  0032C0  6E19               	movwf	atoi@n^0,c
 19061  0032C2  0E00               	movlw	0
 19062  0032C4  6E13               	movwf	(atoi@neg+1)^0,c
 19063  0032C6  0E00               	movlw	0
 19064  0032C8  6E12               	movwf	atoi@neg^0,c
 19065  0032CA  EF69  F019         	goto	l7142
 19066  0032CE                     l7140:
 19067  0032CE  4A0C               	infsnz	atoi@s^0,f,c
 19068  0032D0  2A0D               	incf	(atoi@s+1)^0,f,c
 19069  0032D2                     l7142:
 19070  0032D2  0E01               	movlw	1
 19071  0032D4  6E18               	movwf	_atoi$2414^0,c
 19072  0032D6  C00C  FFF6         	movff	atoi@s,tblptrl
 19073  0032DA  C00D  FFF7         	movff	atoi@s+1,tblptrh
 19074  0032DE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19075  0032DE  6AF8               	clrf	tblptru,c
 19076  0032E0                     	endif
 19077  0032E0                     	if	0	;tblptru may be non-zero
 19078  0032E0                     	endif
 19079  0032E0  0008               	tblrd		*
 19080  0032E2  50F5               	movf	tablat,w,c
 19081  0032E4  0A20               	xorlw	32
 19082  0032E6  B4D8               	btfsc	status,2,c
 19083  0032E8  EF78  F019         	goto	u7061
 19084  0032EC  EF7A  F019         	goto	u7060
 19085  0032F0                     u7061:
 19086  0032F0  EF98  F019         	goto	l7150
 19087  0032F4                     u7060:
 19088  0032F4  0EF7               	movlw	247
 19089  0032F6  6E0E               	movwf	??_atoi^0,c
 19090  0032F8  0EFF               	movlw	255
 19091  0032FA  6E0F               	movwf	(??_atoi+1)^0,c
 19092  0032FC  C00C  FFF6         	movff	atoi@s,tblptrl
 19093  003300  C00D  FFF7         	movff	atoi@s+1,tblptrh
 19094  003304                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19095  003304  6AF8               	clrf	tblptru,c
 19096  003306                     	endif
 19097  003306                     	if	0	;tblptru may be non-zero
 19098  003306                     	endif
 19099  003306  0008               	tblrd		*
 19100  003308  50F5               	movf	tablat,w,c
 19101  00330A  6E10               	movwf	(??_atoi+2)^0,c
 19102  00330C  6A11               	clrf	(??_atoi+3)^0,c
 19103  00330E  500E               	movf	??_atoi^0,w,c
 19104  003310  2610               	addwf	(??_atoi+2)^0,f,c
 19105  003312  500F               	movf	(??_atoi+1)^0,w,c
 19106  003314  2211               	addwfc	(??_atoi+3)^0,f,c
 19107  003316  5011               	movf	(??_atoi+3)^0,w,c
 19108  003318  E109               	bnz	u7070
 19109  00331A  0E05               	movlw	5
 19110  00331C  5C10               	subwf	(??_atoi+2)^0,w,c
 19111  00331E  A0D8               	btfss	status,0,c
 19112  003320  EF94  F019         	goto	u7071
 19113  003324  EF96  F019         	goto	u7070
 19114  003328                     u7071:
 19115  003328  EF98  F019         	goto	l7150
 19116  00332C                     u7070:
 19117  00332C  0E00               	movlw	0
 19118  00332E  6E18               	movwf	_atoi$2414^0,c
 19119  003330                     l7150:
 19120  003330  C018  F014         	movff	_atoi$2414,_atoi$2413
 19121  003334  6A15               	clrf	(_atoi$2413+1)^0,c
 19122  003336  5014               	movf	_atoi$2413^0,w,c
 19123  003338  1015               	iorwf	(_atoi$2413+1)^0,w,c
 19124  00333A  A4D8               	btfss	status,2,c
 19125  00333C  EFA2  F019         	goto	u7081
 19126  003340  EFA4  F019         	goto	u7080
 19127  003344                     u7081:
 19128  003344  EF67  F019         	goto	l7140
 19129  003348                     u7080:
 19130  003348  EFAE  F019         	goto	l7160
 19131  00334C                     l7156:
 19132  00334C  0E00               	movlw	0
 19133  00334E  6E13               	movwf	(atoi@neg+1)^0,c
 19134  003350  0E01               	movlw	1
 19135  003352  6E12               	movwf	atoi@neg^0,c
 19136  003354                     l7158:
 19137  003354  4A0C               	infsnz	atoi@s^0,f,c
 19138  003356  2A0D               	incf	(atoi@s+1)^0,f,c
 19139  003358  EFE5  F019         	goto	l7166
 19140  00335C                     l7160:
 19141  00335C  C00C  FFF6         	movff	atoi@s,tblptrl
 19142  003360  C00D  FFF7         	movff	atoi@s+1,tblptrh
 19143  003364                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19144  003364  6AF8               	clrf	tblptru,c
 19145  003366                     	endif
 19146  003366                     	if	0	;tblptru may be non-zero
 19147  003366                     	endif
 19148  003366  0008               	tblrd		*
 19149  003368  50F5               	movf	tablat,w,c
 19150  00336A  6E0E               	movwf	??_atoi^0,c
 19151  00336C  6A0F               	clrf	(??_atoi+1)^0,c
 19152                           
 19153                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19154                           ; Switch size 1, requested type "simple"
 19155                           ; Number of cases is 1, Range of values is 0 to 0
 19156                           ; switch strategies available:
 19157                           ; Name         Instructions Cycles
 19158                           ; simple_byte            4     3 (average)
 19159                           ;	Chosen strategy is simple_byte
 19160  00336E  500F               	movf	(??_atoi+1)^0,w,c
 19161  003370  0A00               	xorlw	0	; case 0
 19162  003372  B4D8               	btfsc	status,2,c
 19163  003374  EFBE  F019         	goto	l8770
 19164  003378  EFE5  F019         	goto	l7166
 19165  00337C                     l8770:
 19166                           
 19167                           ; Switch size 1, requested type "simple"
 19168                           ; Number of cases is 2, Range of values is 43 to 45
 19169                           ; switch strategies available:
 19170                           ; Name         Instructions Cycles
 19171                           ; simple_byte            7     4 (average)
 19172                           ;	Chosen strategy is simple_byte
 19173  00337C  500E               	movf	??_atoi^0,w,c
 19174  00337E  0A2B               	xorlw	43	; case 43
 19175  003380  B4D8               	btfsc	status,2,c
 19176  003382  EFAA  F019         	goto	l7158
 19177  003386  0A06               	xorlw	6	; case 45
 19178  003388  B4D8               	btfsc	status,2,c
 19179  00338A  EFA6  F019         	goto	l7156
 19180  00338E  EFE5  F019         	goto	l7166
 19181  003392                     l7162:
 19182  003392  C019  F005         	movff	atoi@n,___wmul@multiplier
 19183  003396  C01A  F006         	movff	atoi@n+1,___wmul@multiplier+1
 19184  00339A  0E00               	movlw	0
 19185  00339C  6E08               	movwf	(___wmul@multiplicand+1)^0,c
 19186  00339E  0E0A               	movlw	10
 19187  0033A0  6E07               	movwf	___wmul@multiplicand^0,c
 19188  0033A2  ECB1  F028         	call	___wmul	;wreg free
 19189  0033A6  C00C  FFF6         	movff	atoi@s,tblptrl
 19190  0033AA  C00D  FFF7         	movff	atoi@s+1,tblptrh
 19191  0033AE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19192  0033AE  6AF8               	clrf	tblptru,c
 19193  0033B0                     	endif
 19194  0033B0                     	if	0	;tblptru may be non-zero
 19195  0033B0                     	endif
 19196  0033B0  0008               	tblrd		*
 19197  0033B2  50F5               	movf	tablat,w,c
 19198  0033B4  5E05               	subwf	?___wmul^0,f,c
 19199  0033B6  0E00               	movlw	0
 19200  0033B8  5A06               	subwfb	(?___wmul+1)^0,f,c
 19201  0033BA  0E30               	movlw	48
 19202  0033BC  2405               	addwf	?___wmul^0,w,c
 19203  0033BE  6E19               	movwf	atoi@n^0,c
 19204  0033C0  0E00               	movlw	0
 19205  0033C2  2006               	addwfc	(?___wmul+1)^0,w,c
 19206  0033C4  6E1A               	movwf	(atoi@n+1)^0,c
 19207  0033C6  EFAA  F019         	goto	l7158
 19208  0033CA                     l7166:
 19209  0033CA  0ED0               	movlw	208
 19210  0033CC  6E0E               	movwf	??_atoi^0,c
 19211  0033CE  0EFF               	movlw	255
 19212  0033D0  6E0F               	movwf	(??_atoi+1)^0,c
 19213  0033D2  C00C  FFF6         	movff	atoi@s,tblptrl
 19214  0033D6  C00D  FFF7         	movff	atoi@s+1,tblptrh
 19215  0033DA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19216  0033DA  6AF8               	clrf	tblptru,c
 19217  0033DC                     	endif
 19218  0033DC                     	if	0	;tblptru may be non-zero
 19219  0033DC                     	endif
 19220  0033DC  0008               	tblrd		*
 19221  0033DE  50F5               	movf	tablat,w,c
 19222  0033E0  6E10               	movwf	(??_atoi+2)^0,c
 19223  0033E2  6A11               	clrf	(??_atoi+3)^0,c
 19224  0033E4  500E               	movf	??_atoi^0,w,c
 19225  0033E6  2610               	addwf	(??_atoi+2)^0,f,c
 19226  0033E8  500F               	movf	(??_atoi+1)^0,w,c
 19227  0033EA  2211               	addwfc	(??_atoi+3)^0,f,c
 19228  0033EC  5011               	movf	(??_atoi+3)^0,w,c
 19229  0033EE  E10A               	bnz	u7090
 19230  0033F0  0E0A               	movlw	10
 19231  0033F2  5C10               	subwf	(??_atoi+2)^0,w,c
 19232  0033F4  A0D8               	btfss	status,0,c
 19233  0033F6  EFFF  F019         	goto	u7091
 19234  0033FA  EF02  F01A         	goto	u7090
 19235  0033FE                     u7091:
 19236  0033FE  0E01               	movlw	1
 19237  003400  EF03  F01A         	goto	u7100
 19238  003404                     u7090:
 19239  003404  0E00               	movlw	0
 19240  003406                     u7100:
 19241  003406  6E16               	movwf	_atoi$2415^0,c
 19242  003408  6A17               	clrf	(_atoi$2415+1)^0,c
 19243  00340A  5016               	movf	_atoi$2415^0,w,c
 19244  00340C  1017               	iorwf	(_atoi$2415+1)^0,w,c
 19245  00340E  A4D8               	btfss	status,2,c
 19246  003410  EF0C  F01A         	goto	u7111
 19247  003414  EF0E  F01A         	goto	u7110
 19248  003418                     u7111:
 19249  003418  EFC9  F019         	goto	l7162
 19250  00341C                     u7110:
 19251  00341C  5012               	movf	atoi@neg^0,w,c
 19252  00341E  1013               	iorwf	(atoi@neg+1)^0,w,c
 19253  003420  A4D8               	btfss	status,2,c
 19254  003422  EF15  F01A         	goto	u7121
 19255  003426  EF17  F01A         	goto	u7120
 19256  00342A                     u7121:
 19257  00342A  EF25  F01A         	goto	l2086
 19258  00342E                     u7120:
 19259  00342E  C019  F00E         	movff	atoi@n,??_atoi
 19260  003432  C01A  F00F         	movff	atoi@n+1,??_atoi+1
 19261  003436  1E0E               	comf	??_atoi^0,f,c
 19262  003438  1E0F               	comf	(??_atoi+1)^0,f,c
 19263  00343A  4A0E               	infsnz	??_atoi^0,f,c
 19264  00343C  2A0F               	incf	(??_atoi+1)^0,f,c
 19265  00343E  C00E  F00C         	movff	??_atoi,?_atoi
 19266  003442  C00F  F00D         	movff	??_atoi+1,?_atoi+1
 19267  003446  EF29  F01A         	goto	l2089
 19268  00344A                     l2086:
 19269  00344A  C019  F00C         	movff	atoi@n,?_atoi
 19270  00344E  C01A  F00D         	movff	atoi@n+1,?_atoi+1
 19271  003452                     l2089:
 19272  003452  0012               	return		;funcret
 19273  003454                     __end_of_atoi:
 19274                           	opt callstack 0
 19275                           
 19276 ;; *************** function _isspace *****************
 19277 ;; Defined at:
 19278 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 19279 ;; Parameters:    Size  Location     Type
 19280 ;;  c               2    4[COMRAM] int 
 19281 ;; Auto vars:     Size  Location     Type
 19282 ;;		None
 19283 ;; Return value:  Size  Location     Type
 19284 ;;                  2    4[COMRAM] int 
 19285 ;; Registers used:
 19286 ;;		wreg, status,2, status,0
 19287 ;; Tracked objects:
 19288 ;;		On entry : 0/0
 19289 ;;		On exit  : 0/0
 19290 ;;		Unchanged: 0/0
 19291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19292 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19293 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19294 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19295 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19296 ;;Total ram usage:        7 bytes
 19297 ;; Hardware stack levels used:    1
 19298 ;; Hardware stack levels required when called:    4
 19299 ;; This function calls:
 19300 ;;		Nothing
 19301 ;; This function is called by:
 19302 ;;		_atoi
 19303 ;; This function uses a non-reentrant model
 19304 ;;
 19305                           
 19306                           	psect	text76
 19307  004BD4                     __ptext76:
 19308                           	opt callstack 0
 19309  004BD4                     _isspace:
 19310                           	opt callstack 22
 19311  004BD4  0E01               	movlw	1
 19312  004BD6  6E0B               	movwf	_isspace$2440^0,c
 19313  004BD8  0E20               	movlw	32
 19314  004BDA  1805               	xorwf	isspace@c^0,w,c
 19315  004BDC  1006               	iorwf	(isspace@c+1)^0,w,c
 19316  004BDE  B4D8               	btfsc	status,2,c
 19317  004BE0  EFF4  F025         	goto	u6551
 19318  004BE4  EFF6  F025         	goto	u6550
 19319  004BE8                     u6551:
 19320  004BE8  EF0F  F026         	goto	l6928
 19321  004BEC                     u6550:
 19322  004BEC  0EF7               	movlw	247
 19323  004BEE  6E07               	movwf	??_isspace^0,c
 19324  004BF0  0EFF               	movlw	255
 19325  004BF2  6E08               	movwf	(??_isspace+1)^0,c
 19326  004BF4  C005  F009         	movff	isspace@c,??_isspace+2
 19327  004BF8  C006  F00A         	movff	isspace@c+1,??_isspace+3
 19328  004BFC  5007               	movf	??_isspace^0,w,c
 19329  004BFE  2609               	addwf	(??_isspace+2)^0,f,c
 19330  004C00  5008               	movf	(??_isspace+1)^0,w,c
 19331  004C02  220A               	addwfc	(??_isspace+3)^0,f,c
 19332  004C04  500A               	movf	(??_isspace+3)^0,w,c
 19333  004C06  E109               	bnz	u6560
 19334  004C08  0E05               	movlw	5
 19335  004C0A  5C09               	subwf	(??_isspace+2)^0,w,c
 19336  004C0C  A0D8               	btfss	status,0,c
 19337  004C0E  EF0B  F026         	goto	u6561
 19338  004C12  EF0D  F026         	goto	u6560
 19339  004C16                     u6561:
 19340  004C16  EF0F  F026         	goto	l6928
 19341  004C1A                     u6560:
 19342  004C1A  0E00               	movlw	0
 19343  004C1C  6E0B               	movwf	_isspace$2440^0,c
 19344  004C1E                     l6928:
 19345  004C1E  C00B  F005         	movff	_isspace$2440,?_isspace
 19346  004C22  6A06               	clrf	(?_isspace+1)^0,c
 19347  004C24  0012               	return		;funcret
 19348  004C26                     __end_of_isspace:
 19349                           	opt callstack 0
 19350                           
 19351 ;; *************** function _isdigit *****************
 19352 ;; Defined at:
 19353 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 19354 ;; Parameters:    Size  Location     Type
 19355 ;;  c               2    4[COMRAM] int 
 19356 ;; Auto vars:     Size  Location     Type
 19357 ;;		None
 19358 ;; Return value:  Size  Location     Type
 19359 ;;                  2    4[COMRAM] int 
 19360 ;; Registers used:
 19361 ;;		wreg, status,2, status,0
 19362 ;; Tracked objects:
 19363 ;;		On entry : 0/0
 19364 ;;		On exit  : 0/0
 19365 ;;		Unchanged: 0/0
 19366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19367 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19369 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19370 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19371 ;;Total ram usage:        6 bytes
 19372 ;; Hardware stack levels used:    1
 19373 ;; Hardware stack levels required when called:    4
 19374 ;; This function calls:
 19375 ;;		Nothing
 19376 ;; This function is called by:
 19377 ;;		_vfpfcnvrt
 19378 ;;		_atoi
 19379 ;; This function uses a non-reentrant model
 19380 ;;
 19381                           
 19382                           	psect	text77
 19383  005056                     __ptext77:
 19384                           	opt callstack 0
 19385  005056                     _isdigit:
 19386                           	opt callstack 23
 19387  005056  0ED0               	movlw	208
 19388  005058  6E07               	movwf	??_isdigit^0,c
 19389  00505A  0EFF               	movlw	255
 19390  00505C  6E08               	movwf	(??_isdigit+1)^0,c
 19391  00505E  C005  F009         	movff	isdigit@c,??_isdigit+2
 19392  005062  C006  F00A         	movff	isdigit@c+1,??_isdigit+3
 19393  005066  5007               	movf	??_isdigit^0,w,c
 19394  005068  2609               	addwf	(??_isdigit+2)^0,f,c
 19395  00506A  5008               	movf	(??_isdigit+1)^0,w,c
 19396  00506C  220A               	addwfc	(??_isdigit+3)^0,f,c
 19397  00506E  500A               	movf	(??_isdigit+3)^0,w,c
 19398  005070  E10A               	bnz	u6330
 19399  005072  0E0A               	movlw	10
 19400  005074  5C09               	subwf	(??_isdigit+2)^0,w,c
 19401  005076  A0D8               	btfss	status,0,c
 19402  005078  EF40  F028         	goto	u6331
 19403  00507C  EF43  F028         	goto	u6330
 19404  005080                     u6331:
 19405  005080  0E01               	movlw	1
 19406  005082  EF44  F028         	goto	u6340
 19407  005086                     u6330:
 19408  005086  0E00               	movlw	0
 19409  005088                     u6340:
 19410  005088  6E05               	movwf	?_isdigit^0,c
 19411  00508A  6A06               	clrf	(?_isdigit+1)^0,c
 19412  00508C  0012               	return		;funcret
 19413  00508E                     __end_of_isdigit:
 19414                           	opt callstack 0
 19415                           
 19416 ;; *************** function ___wmul *****************
 19417 ;; Defined at:
 19418 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 19419 ;; Parameters:    Size  Location     Type
 19420 ;;  multiplier      2    4[COMRAM] unsigned int 
 19421 ;;  multiplicand    2    6[COMRAM] unsigned int 
 19422 ;; Auto vars:     Size  Location     Type
 19423 ;;  product         2    8[COMRAM] unsigned int 
 19424 ;; Return value:  Size  Location     Type
 19425 ;;                  2    4[COMRAM] unsigned int 
 19426 ;; Registers used:
 19427 ;;		wreg, status,2, status,0, prodl, prodh
 19428 ;; Tracked objects:
 19429 ;;		On entry : 0/0
 19430 ;;		On exit  : 0/0
 19431 ;;		Unchanged: 0/0
 19432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19433 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19434 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19436 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19437 ;;Total ram usage:        6 bytes
 19438 ;; Hardware stack levels used:    1
 19439 ;; Hardware stack levels required when called:    4
 19440 ;; This function calls:
 19441 ;;		Nothing
 19442 ;; This function is called by:
 19443 ;;		_atoi
 19444 ;; This function uses a non-reentrant model
 19445 ;;
 19446                           
 19447                           	psect	text78
 19448  005162                     __ptext78:
 19449                           	opt callstack 0
 19450  005162                     ___wmul:
 19451                           	opt callstack 22
 19452  005162  5005               	movf	___wmul@multiplier^0,w,c
 19453  005164  0207               	mulwf	___wmul@multiplicand^0,c
 19454  005166  CFF3 F009          	movff	prodl,___wmul@product
 19455  00516A  CFF4 F00A          	movff	prodh,___wmul@product+1
 19456  00516E  5005               	movf	___wmul@multiplier^0,w,c
 19457  005170  0208               	mulwf	(___wmul@multiplicand+1)^0,c
 19458  005172  50F3               	movf	243,w,c
 19459  005174  260A               	addwf	(___wmul@product+1)^0,f,c
 19460  005176  5006               	movf	(___wmul@multiplier+1)^0,w,c
 19461  005178  0207               	mulwf	___wmul@multiplicand^0,c
 19462  00517A  50F3               	movf	243,w,c
 19463  00517C  260A               	addwf	(___wmul@product+1)^0,f,c
 19464  00517E  C009  F005         	movff	___wmul@product,?___wmul
 19465  005182  C00A  F006         	movff	___wmul@product+1,?___wmul+1
 19466  005186  0012               	return		;funcret
 19467  005188                     __end_of___wmul:
 19468                           	opt callstack 0
 19469                           
 19470 ;; *************** function _ModbusError *****************
 19471 ;; Defined at:
 19472 ;;		line 616 in file "Modbus.c"
 19473 ;; Parameters:    Size  Location     Type
 19474 ;;  ErrorCode       2   19[COMRAM] int 
 19475 ;; Auto vars:     Size  Location     Type
 19476 ;;  i               2    0        int 
 19477 ;; Return value:  Size  Location     Type
 19478 ;;                  1    wreg      void 
 19479 ;; Registers used:
 19480 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19481 ;; Tracked objects:
 19482 ;;		On entry : 0/0
 19483 ;;		On exit  : 0/0
 19484 ;;		Unchanged: 0/0
 19485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19486 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19487 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19489 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19490 ;;Total ram usage:        4 bytes
 19491 ;; Hardware stack levels used:    1
 19492 ;; Hardware stack levels required when called:    6
 19493 ;; This function calls:
 19494 ;;		_UART1_Write_string
 19495 ;;		_generateCRC
 19496 ;; This function is called by:
 19497 ;;		_main
 19498 ;;		_ModbusFC03
 19499 ;;		_ModbusFC04
 19500 ;;		_ModbusFC10
 19501 ;; This function uses a non-reentrant model
 19502 ;;
 19503                           
 19504                           	psect	text79
 19505  0041CE                     __ptext79:
 19506                           	opt callstack 0
 19507  0041CE                     _ModbusError:
 19508                           	opt callstack 23
 19509  0041CE                     
 19510                           ;Modbus.c: 621:     MBResCnt = 0;
 19511  0041CE  0E00               	movlw	0
 19512  0041D0  0100               	movlb	0	; () banked
 19513  0041D2  6FD8               	movwf	(_MBResCnt+1)& (0+255),b
 19514  0041D4  0E00               	movlw	0
 19515  0041D6  6FD7               	movwf	_MBResCnt& (0+255),b
 19516  0041D8                     
 19517                           ; BSR set to: 0
 19518                           ;Modbus.c: 622:     MBRespon[MBResCnt] = ModbusData[0];
 19519  0041D8  0E57               	movlw	low _MBRespon
 19520  0041DA  25D7               	addwf	_MBResCnt& (0+255),w,b
 19521  0041DC  6ED9               	movwf	fsr2l,c
 19522  0041DE  0E02               	movlw	high _MBRespon
 19523  0041E0  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 19524  0041E2  6EDA               	movwf	fsr2h,c
 19525  0041E4  C100  FFDF         	movff	_ModbusData,indf2
 19526  0041E8                     
 19527                           ; BSR set to: 0
 19528                           ;Modbus.c: 623:     MBResCnt++;
 19529  0041E8  4BD7               	infsnz	_MBResCnt& (0+255),f,b
 19530  0041EA  2BD8               	incf	(_MBResCnt+1)& (0+255),f,b
 19531  0041EC                     
 19532                           ; BSR set to: 0
 19533                           ;Modbus.c: 624:     MBRespon[MBResCnt] = ModbusData[1] + 128;
 19534  0041EC  0E57               	movlw	low _MBRespon
 19535  0041EE  25D7               	addwf	_MBResCnt& (0+255),w,b
 19536  0041F0  6ED9               	movwf	fsr2l,c
 19537  0041F2  0E02               	movlw	high _MBRespon
 19538  0041F4  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 19539  0041F6  6EDA               	movwf	fsr2h,c
 19540  0041F8  0101               	movlb	1	; () banked
 19541  0041FA  5101               	movf	(_ModbusData+1)& (0+255),w,b
 19542  0041FC  0F80               	addlw	128
 19543  0041FE  6EDF               	movwf	indf2,c
 19544  004200                     
 19545                           ; BSR set to: 1
 19546                           ;Modbus.c: 625:     MBResCnt++;
 19547  004200  0100               	movlb	0	; () banked
 19548  004202  4BD7               	infsnz	_MBResCnt& (0+255),f,b
 19549  004204  2BD8               	incf	(_MBResCnt+1)& (0+255),f,b
 19550  004206                     
 19551                           ; BSR set to: 0
 19552                           ;Modbus.c: 626:     MBRespon[MBResCnt] = ErrorCode;
 19553  004206  0E57               	movlw	low _MBRespon
 19554  004208  25D7               	addwf	_MBResCnt& (0+255),w,b
 19555  00420A  6ED9               	movwf	fsr2l,c
 19556  00420C  0E02               	movlw	high _MBRespon
 19557  00420E  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 19558  004210  6EDA               	movwf	fsr2h,c
 19559  004212  C014  FFDF         	movff	ModbusError@ErrorCode,indf2
 19560  004216                     
 19561                           ; BSR set to: 0
 19562                           ;Modbus.c: 627:     MBResCnt++;
 19563  004216  4BD7               	infsnz	_MBResCnt& (0+255),f,b
 19564  004218  2BD8               	incf	(_MBResCnt+1)& (0+255),f,b
 19565  00421A                     
 19566                           ; BSR set to: 0
 19567                           ;Modbus.c: 629:     ByteHi = generateCRC(MBResCnt, 1);
 19568  00421A  C0D7  F005         	movff	_MBResCnt,generateCRC@MessCnt
 19569  00421E  C0D8  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
 19570  004222  0E01               	movlw	1
 19571  004224  6E07               	movwf	generateCRC@HiOrLo^0,c
 19572  004226  ECEC  F01E         	call	_generateCRC	;wreg free
 19573  00422A  C005  F0D5         	movff	?_generateCRC,_ByteHi
 19574  00422E  C006  F0D6         	movff	?_generateCRC+1,_ByteHi+1
 19575  004232                     
 19576                           ;Modbus.c: 630:     ByteLo = generateCRC(MBResCnt, 0);
 19577  004232  C0D7  F005         	movff	_MBResCnt,generateCRC@MessCnt
 19578  004236  C0D8  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
 19579  00423A  0E00               	movlw	0
 19580  00423C  6E07               	movwf	generateCRC@HiOrLo^0,c
 19581  00423E  ECEC  F01E         	call	_generateCRC	;wreg free
 19582  004242  C005  F0EB         	movff	?_generateCRC,_ByteLo
 19583  004246  C006  F0EC         	movff	?_generateCRC+1,_ByteLo+1
 19584  00424A                     
 19585                           ;Modbus.c: 632:     MBRespon[MBResCnt] = ByteHi;
 19586  00424A  0E57               	movlw	low _MBRespon
 19587  00424C  0100               	movlb	0	; () banked
 19588  00424E  25D7               	addwf	_MBResCnt& (0+255),w,b
 19589  004250  6ED9               	movwf	fsr2l,c
 19590  004252  0E02               	movlw	high _MBRespon
 19591  004254  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 19592  004256  6EDA               	movwf	fsr2h,c
 19593  004258  C0D5  FFDF         	movff	_ByteHi,indf2
 19594  00425C                     
 19595                           ; BSR set to: 0
 19596                           ;Modbus.c: 633:     MBRespon[MBResCnt +1] = ByteLo;
 19597  00425C  0E58               	movlw	low (_MBRespon+1)
 19598  00425E  25D7               	addwf	_MBResCnt& (0+255),w,b
 19599  004260  6ED9               	movwf	fsr2l,c
 19600  004262  0E02               	movlw	high (_MBRespon+1)
 19601  004264  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 19602  004266  6EDA               	movwf	fsr2h,c
 19603  004268  C0EB  FFDF         	movff	_ByteLo,indf2
 19604  00426C                     
 19605                           ; BSR set to: 0
 19606                           ;Modbus.c: 634:     MBResCnt = MBResCnt +2;
 19607  00426C  0E02               	movlw	2
 19608  00426E  25D7               	addwf	_MBResCnt& (0+255),w,b
 19609  004270  6FD7               	movwf	_MBResCnt& (0+255),b
 19610  004272  0E00               	movlw	0
 19611  004274  21D8               	addwfc	(_MBResCnt+1)& (0+255),w,b
 19612  004276  6FD8               	movwf	(_MBResCnt+1)& (0+255),b
 19613  004278                     
 19614                           ; BSR set to: 0
 19615                           ;Modbus.c: 636:     UART1_Write_string(MBRespon,MBResCnt);
 19616  004278  0E57               	movlw	low _MBRespon
 19617  00427A  6E06               	movwf	UART1_Write_string@data^0,c
 19618  00427C  0E02               	movlw	high _MBRespon
 19619  00427E  6E07               	movwf	(UART1_Write_string@data+1)^0,c
 19620  004280  C0D7  F008         	movff	_MBResCnt,UART1_Write_string@data_len
 19621  004284  C0D8  F009         	movff	_MBResCnt+1,UART1_Write_string@data_len+1
 19622  004288  EC3F  F024         	call	_UART1_Write_string	;wreg free
 19623  00428C  0012               	return		;funcret
 19624  00428E                     __end_of_ModbusError:
 19625                           	opt callstack 0
 19626                           
 19627 ;; *************** function _generateCRC *****************
 19628 ;; Defined at:
 19629 ;;		line 508 in file "Modbus.c"
 19630 ;; Parameters:    Size  Location     Type
 19631 ;;  MessCnt         2    4[COMRAM] int 
 19632 ;;  HiOrLo          1    6[COMRAM] _Bool 
 19633 ;; Auto vars:     Size  Location     Type
 19634 ;;  crc             2   17[COMRAM] unsigned int 
 19635 ;;  j               2   15[COMRAM] int 
 19636 ;;  i               2   13[COMRAM] int 
 19637 ;;  crcLow          2   11[COMRAM] unsigned int 
 19638 ;;  crcHigh         2    9[COMRAM] unsigned int 
 19639 ;; Return value:  Size  Location     Type
 19640 ;;                  2    4[COMRAM] unsigned int 
 19641 ;; Registers used:
 19642 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19643 ;; Tracked objects:
 19644 ;;		On entry : 0/0
 19645 ;;		On exit  : 0/0
 19646 ;;		Unchanged: 0/0
 19647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19648 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19649 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19650 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19651 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19652 ;;Total ram usage:       15 bytes
 19653 ;; Hardware stack levels used:    1
 19654 ;; Hardware stack levels required when called:    4
 19655 ;; This function calls:
 19656 ;;		Nothing
 19657 ;; This function is called by:
 19658 ;;		_ModbusFC03
 19659 ;;		_ModbusFC04
 19660 ;;		_ModbusFC10
 19661 ;;		_ModbusError
 19662 ;; This function uses a non-reentrant model
 19663 ;;
 19664                           
 19665                           	psect	text80
 19666  003DD8                     __ptext80:
 19667                           	opt callstack 0
 19668  003DD8                     _generateCRC:
 19669                           	opt callstack 25
 19670  003DD8                     
 19671                           ;Modbus.c: 509:   unsigned int crc = 0xFFFF;
 19672  003DD8  6812               	setf	generateCRC@crc^0,c
 19673  003DDA  6813               	setf	(generateCRC@crc+1)^0,c
 19674  003DDC                     
 19675                           ;Modbus.c: 511:   unsigned int crcLow = 0;
 19676  003DDC  0E00               	movlw	0
 19677  003DDE  6E0D               	movwf	(generateCRC@crcLow+1)^0,c
 19678  003DE0  0E00               	movlw	0
 19679  003DE2  6E0C               	movwf	generateCRC@crcLow^0,c
 19680                           
 19681                           ;Modbus.c: 512:   int i,j = 0;
 19682  003DE4  0E00               	movlw	0
 19683  003DE6  6E11               	movwf	(generateCRC@j+1)^0,c
 19684  003DE8  0E00               	movlw	0
 19685  003DEA  6E10               	movwf	generateCRC@j^0,c
 19686                           
 19687                           ;Modbus.c: 514:     for(i=0;i<MessCnt;i++){
 19688  003DEC  0E00               	movlw	0
 19689  003DEE  6E0F               	movwf	(generateCRC@i+1)^0,c
 19690  003DF0  0E00               	movlw	0
 19691  003DF2  6E0E               	movwf	generateCRC@i^0,c
 19692  003DF4  EF2B  F01F         	goto	l7544
 19693  003DF8                     l7526:
 19694                           
 19695                           ;Modbus.c: 515:       crc ^= MBRespon[i];
 19696  003DF8  0E57               	movlw	low _MBRespon
 19697  003DFA  240E               	addwf	generateCRC@i^0,w,c
 19698  003DFC  6ED9               	movwf	fsr2l,c
 19699  003DFE  0E02               	movlw	high _MBRespon
 19700  003E00  200F               	addwfc	(generateCRC@i+1)^0,w,c
 19701  003E02  6EDA               	movwf	fsr2h,c
 19702  003E04  50DF               	movf	indf2,w,c
 19703  003E06  6E08               	movwf	??_generateCRC^0,c
 19704  003E08  5008               	movf	??_generateCRC^0,w,c
 19705  003E0A  1A12               	xorwf	generateCRC@crc^0,f,c
 19706  003E0C                     
 19707                           ;Modbus.c: 516:       for(j=8; j!=0; j--){
 19708  003E0C  0E00               	movlw	0
 19709  003E0E  6E11               	movwf	(generateCRC@j+1)^0,c
 19710  003E10  0E08               	movlw	8
 19711  003E12  6E10               	movwf	generateCRC@j^0,c
 19712  003E14                     l986:
 19713                           
 19714                           ;Modbus.c: 517:         if((crc & 0x0001) != 0){
 19715  003E14  A012               	btfss	generateCRC@crc^0,0,c
 19716  003E16  EF0F  F01F         	goto	u7591
 19717  003E1A  EF11  F01F         	goto	u7590
 19718  003E1E                     u7591:
 19719  003E1E  EF1A  F01F         	goto	l7538
 19720  003E22                     u7590:
 19721  003E22                     
 19722                           ;Modbus.c: 518:           crc >>= 1;
 19723  003E22  90D8               	bcf	status,0,c
 19724  003E24  3213               	rrcf	(generateCRC@crc+1)^0,f,c
 19725  003E26  3212               	rrcf	generateCRC@crc^0,f,c
 19726  003E28                     
 19727                           ;Modbus.c: 519:           crc ^= 0xA001;
 19728  003E28  0E01               	movlw	1
 19729  003E2A  1A12               	xorwf	generateCRC@crc^0,f,c
 19730  003E2C  0EA0               	movlw	160
 19731  003E2E  1A13               	xorwf	(generateCRC@crc+1)^0,f,c
 19732                           
 19733                           ;Modbus.c: 520:         }
 19734  003E30  EF1D  F01F         	goto	l989
 19735  003E34                     l7538:
 19736                           
 19737                           ;Modbus.c: 522:           crc >>= 1;
 19738  003E34  90D8               	bcf	status,0,c
 19739  003E36  3213               	rrcf	(generateCRC@crc+1)^0,f,c
 19740  003E38  3212               	rrcf	generateCRC@crc^0,f,c
 19741  003E3A                     l989:
 19742                           
 19743                           ;Modbus.c: 524:       }
 19744  003E3A  0610               	decf	generateCRC@j^0,f,c
 19745  003E3C  A0D8               	btfss	status,0,c
 19746  003E3E  0611               	decf	(generateCRC@j+1)^0,f,c
 19747  003E40  5010               	movf	generateCRC@j^0,w,c
 19748  003E42  1011               	iorwf	(generateCRC@j+1)^0,w,c
 19749  003E44  A4D8               	btfss	status,2,c
 19750  003E46  EF27  F01F         	goto	u7601
 19751  003E4A  EF29  F01F         	goto	u7600
 19752  003E4E                     u7601:
 19753  003E4E  EF0A  F01F         	goto	l986
 19754  003E52                     u7600:
 19755  003E52                     
 19756                           ;Modbus.c: 525:     }
 19757  003E52  4A0E               	infsnz	generateCRC@i^0,f,c
 19758  003E54  2A0F               	incf	(generateCRC@i+1)^0,f,c
 19759  003E56                     l7544:
 19760  003E56  5005               	movf	generateCRC@MessCnt^0,w,c
 19761  003E58  5C0E               	subwf	generateCRC@i^0,w,c
 19762  003E5A  500F               	movf	(generateCRC@i+1)^0,w,c
 19763  003E5C  0A80               	xorlw	128
 19764  003E5E  6E08               	movwf	??_generateCRC^0,c
 19765  003E60  5006               	movf	(generateCRC@MessCnt+1)^0,w,c
 19766  003E62  0A80               	xorlw	128
 19767  003E64  5808               	subwfb	??_generateCRC^0,w,c
 19768  003E66  A0D8               	btfss	status,0,c
 19769  003E68  EF38  F01F         	goto	u7611
 19770  003E6C  EF3A  F01F         	goto	u7610
 19771  003E70                     u7611:
 19772  003E70  EFFC  F01E         	goto	l7526
 19773  003E74                     u7610:
 19774  003E74                     
 19775                           ;Modbus.c: 527:     crcHigh = (crc & 0x00FF);
 19776  003E74  5012               	movf	generateCRC@crc^0,w,c
 19777  003E76  6E0A               	movwf	generateCRC@crcHigh^0,c
 19778  003E78  6A0B               	clrf	(generateCRC@crcHigh+1)^0,c
 19779                           
 19780                           ;Modbus.c: 528:     crcLow = (crc & 0xFF00) >>8;
 19781  003E7A  C012  F008         	movff	generateCRC@crc,??_generateCRC
 19782  003E7E  C013  F009         	movff	generateCRC@crc+1,??_generateCRC+1
 19783  003E82  C009  F008         	movff	??_generateCRC+1,??_generateCRC
 19784  003E86  6A09               	clrf	(??_generateCRC+1)^0,c
 19785  003E88  5008               	movf	??_generateCRC^0,w,c
 19786  003E8A  6E0C               	movwf	generateCRC@crcLow^0,c
 19787  003E8C  6A0D               	clrf	(generateCRC@crcLow+1)^0,c
 19788  003E8E                     
 19789                           ;Modbus.c: 530:     if(HiOrLo == 1){
 19790  003E8E  0407               	decf	generateCRC@HiOrLo^0,w,c
 19791  003E90  A4D8               	btfss	status,2,c
 19792  003E92  EF4D  F01F         	goto	u7621
 19793  003E96  EF4F  F01F         	goto	u7620
 19794  003E9A                     u7621:
 19795  003E9A  EF55  F01F         	goto	l991
 19796  003E9E                     u7620:
 19797  003E9E                     
 19798                           ;Modbus.c: 531:         return crcHigh;
 19799  003E9E  C00A  F005         	movff	generateCRC@crcHigh,?_generateCRC
 19800  003EA2  C00B  F006         	movff	generateCRC@crcHigh+1,?_generateCRC+1
 19801  003EA6  EF59  F01F         	goto	l992
 19802  003EAA                     l991:
 19803                           
 19804                           ;Modbus.c: 533:         return crcLow;
 19805  003EAA  C00C  F005         	movff	generateCRC@crcLow,?_generateCRC
 19806  003EAE  C00D  F006         	movff	generateCRC@crcLow+1,?_generateCRC+1
 19807  003EB2                     l992:
 19808  003EB2  0012               	return		;funcret
 19809  003EB4                     __end_of_generateCRC:
 19810                           	opt callstack 0
 19811                           
 19812 ;; *************** function _UART1_Write_string *****************
 19813 ;; Defined at:
 19814 ;;		line 538 in file "Modbus.c"
 19815 ;; Parameters:    Size  Location     Type
 19816 ;;  data            2    5[COMRAM] PTR unsigned char 
 19817 ;;		 -> MBRespon(75), 
 19818 ;;  data_len        2    7[COMRAM] int 
 19819 ;; Auto vars:     Size  Location     Type
 19820 ;;  i               2   10[COMRAM] int 
 19821 ;; Return value:  Size  Location     Type
 19822 ;;                  1    wreg      void 
 19823 ;; Registers used:
 19824 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19825 ;; Tracked objects:
 19826 ;;		On entry : 0/0
 19827 ;;		On exit  : 0/0
 19828 ;;		Unchanged: 0/0
 19829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19830 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19831 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19832 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19833 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19834 ;;Total ram usage:        7 bytes
 19835 ;; Hardware stack levels used:    1
 19836 ;; Hardware stack levels required when called:    5
 19837 ;; This function calls:
 19838 ;;		_EUSART1_Write
 19839 ;;		_EUSART1_is_tx_done
 19840 ;;		_EUSART1_is_tx_ready
 19841 ;;		_TXMode
 19842 ;; This function is called by:
 19843 ;;		_ModbusFC03
 19844 ;;		_ModbusFC04
 19845 ;;		_ModbusFC10
 19846 ;;		_ModbusError
 19847 ;; This function uses a non-reentrant model
 19848 ;;
 19849                           
 19850                           	psect	text81
 19851  00487E                     __ptext81:
 19852                           	opt callstack 0
 19853  00487E                     _UART1_Write_string:
 19854                           	opt callstack 24
 19855  00487E                     
 19856                           ;Modbus.c: 538: void UART1_Write_string(unsigned char * data, int data_len);Modbus.c: 53
      +                          9: {;Modbus.c: 540:     TXMode();
 19857  00487E  EC85  F029         	call	_TXMode	;wreg free
 19858  004882                     l7556:
 19859  004882  EC1F  F029         	call	_EUSART1_is_tx_ready	;wreg free
 19860  004886  0900               	iorlw	0
 19861  004888  B4D8               	btfsc	status,2,c
 19862  00488A  EF49  F024         	goto	u7631
 19863  00488E  EF4B  F024         	goto	u7630
 19864  004892                     u7631:
 19865  004892  EF41  F024         	goto	l7556
 19866  004896                     u7630:
 19867  004896                     
 19868                           ;Modbus.c: 542:     for (int i = 0; i < data_len; i++) {
 19869  004896  0E00               	movlw	0
 19870  004898  6E0C               	movwf	(UART1_Write_string@i+1)^0,c
 19871  00489A  0E00               	movlw	0
 19872  00489C  6E0B               	movwf	UART1_Write_string@i^0,c
 19873  00489E  EF66  F024         	goto	l7566
 19874  0048A2                     l7560:
 19875                           
 19876                           ;Modbus.c: 543:         EUSART1_Write(data[i]);
 19877  0048A2  500B               	movf	UART1_Write_string@i^0,w,c
 19878  0048A4  2406               	addwf	UART1_Write_string@data^0,w,c
 19879  0048A6  6ED9               	movwf	fsr2l,c
 19880  0048A8  500C               	movf	(UART1_Write_string@i+1)^0,w,c
 19881  0048AA  2007               	addwfc	(UART1_Write_string@data+1)^0,w,c
 19882  0048AC  6EDA               	movwf	fsr2h,c
 19883  0048AE  50DF               	movf	indf2,w,c
 19884  0048B0  EC35  F025         	call	_EUSART1_Write
 19885  0048B4                     l7562:
 19886  0048B4  EC36  F029         	call	_EUSART1_is_tx_done	;wreg free
 19887  0048B8  0900               	iorlw	0
 19888  0048BA  B4D8               	btfsc	status,2,c
 19889  0048BC  EF62  F024         	goto	u7641
 19890  0048C0  EF64  F024         	goto	u7640
 19891  0048C4                     u7641:
 19892  0048C4  EF5A  F024         	goto	l7562
 19893  0048C8                     u7640:
 19894  0048C8                     
 19895                           ;Modbus.c: 545:     }
 19896  0048C8  4A0B               	infsnz	UART1_Write_string@i^0,f,c
 19897  0048CA  2A0C               	incf	(UART1_Write_string@i+1)^0,f,c
 19898  0048CC                     l7566:
 19899  0048CC  5008               	movf	UART1_Write_string@data_len^0,w,c
 19900  0048CE  5C0B               	subwf	UART1_Write_string@i^0,w,c
 19901  0048D0  500C               	movf	(UART1_Write_string@i+1)^0,w,c
 19902  0048D2  0A80               	xorlw	128
 19903  0048D4  6E0A               	movwf	??_UART1_Write_string^0,c
 19904  0048D6  5009               	movf	(UART1_Write_string@data_len+1)^0,w,c
 19905  0048D8  0A80               	xorlw	128
 19906  0048DA  580A               	subwfb	??_UART1_Write_string^0,w,c
 19907  0048DC  A0D8               	btfss	status,0,c
 19908  0048DE  EF73  F024         	goto	u7651
 19909  0048E2  EF75  F024         	goto	u7650
 19910  0048E6                     u7651:
 19911  0048E6  EF51  F024         	goto	l7560
 19912  0048EA                     u7650:
 19913  0048EA  0012               	return		;funcret
 19914  0048EC                     __end_of_UART1_Write_string:
 19915                           	opt callstack 0
 19916                           
 19917 ;; *************** function _TXMode *****************
 19918 ;; Defined at:
 19919 ;;		line 49 in file "Modbus.c"
 19920 ;; Parameters:    Size  Location     Type
 19921 ;;		None
 19922 ;; Auto vars:     Size  Location     Type
 19923 ;;		None
 19924 ;; Return value:  Size  Location     Type
 19925 ;;                  1    wreg      void 
 19926 ;; Registers used:
 19927 ;;		None
 19928 ;; Tracked objects:
 19929 ;;		On entry : 0/0
 19930 ;;		On exit  : 0/0
 19931 ;;		Unchanged: 0/0
 19932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19937 ;;Total ram usage:        0 bytes
 19938 ;; Hardware stack levels used:    1
 19939 ;; Hardware stack levels required when called:    4
 19940 ;; This function calls:
 19941 ;;		Nothing
 19942 ;; This function is called by:
 19943 ;;		_UART1_Write_string
 19944 ;; This function uses a non-reentrant model
 19945 ;;
 19946                           
 19947                           	psect	text82
 19948  00530A                     __ptext82:
 19949                           	opt callstack 0
 19950  00530A                     _TXMode:
 19951                           	opt callstack 24
 19952  00530A  8086               	bsf	134,0,c	;volatile
 19953  00530C  8683               	bsf	131,3,c	;volatile
 19954  00530E  0012               	return		;funcret
 19955  005310                     __end_of_TXMode:
 19956                           	opt callstack 0
 19957                           
 19958 ;; *************** function _EUSART1_is_tx_ready *****************
 19959 ;; Defined at:
 19960 ;;		line 136 in file "mcc_generated_files/eusart1.c"
 19961 ;; Parameters:    Size  Location     Type
 19962 ;;		None
 19963 ;; Auto vars:     Size  Location     Type
 19964 ;;		None
 19965 ;; Return value:  Size  Location     Type
 19966 ;;                  1    wreg      _Bool 
 19967 ;; Registers used:
 19968 ;;		wreg, status,2
 19969 ;; Tracked objects:
 19970 ;;		On entry : 0/0
 19971 ;;		On exit  : 0/0
 19972 ;;		Unchanged: 0/0
 19973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19978 ;;Total ram usage:        0 bytes
 19979 ;; Hardware stack levels used:    1
 19980 ;; Hardware stack levels required when called:    4
 19981 ;; This function calls:
 19982 ;;		Nothing
 19983 ;; This function is called by:
 19984 ;;		_UART1_Write_string
 19985 ;; This function uses a non-reentrant model
 19986 ;;
 19987                           
 19988                           	psect	text83
 19989  00523E                     __ptext83:
 19990                           	opt callstack 0
 19991  00523E                     _EUSART1_is_tx_ready:
 19992                           	opt callstack 24
 19993  00523E                     
 19994                           ;mcc_generated_files/eusart1.c: 138:     return (eusart1TxBufferRemaining ? 1 : 0);
 19995  00523E  0100               	movlb	0	; () banked
 19996  005240  51FE               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
 19997  005242  A4D8               	btfss	status,2,c
 19998  005244  EF26  F029         	goto	u7371
 19999  005248  EF29  F029         	goto	u7370
 20000  00524C                     u7371:
 20001  00524C  0E01               	movlw	1
 20002  00524E  EF2A  F029         	goto	u7380
 20003  005252                     u7370:
 20004  005252  0E00               	movlw	0
 20005  005254                     u7380:
 20006  005254                     
 20007                           ; BSR set to: 0
 20008  005254  0012               	return		;funcret
 20009  005256                     __end_of_EUSART1_is_tx_ready:
 20010                           	opt callstack 0
 20011                           
 20012 ;; *************** function _EUSART1_is_tx_done *****************
 20013 ;; Defined at:
 20014 ;;		line 146 in file "mcc_generated_files/eusart1.c"
 20015 ;; Parameters:    Size  Location     Type
 20016 ;;		None
 20017 ;; Auto vars:     Size  Location     Type
 20018 ;;		None
 20019 ;; Return value:  Size  Location     Type
 20020 ;;                  1    wreg      _Bool 
 20021 ;; Registers used:
 20022 ;;		wreg
 20023 ;; Tracked objects:
 20024 ;;		On entry : 0/0
 20025 ;;		On exit  : 0/0
 20026 ;;		Unchanged: 0/0
 20027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20032 ;;Total ram usage:        0 bytes
 20033 ;; Hardware stack levels used:    1
 20034 ;; Hardware stack levels required when called:    4
 20035 ;; This function calls:
 20036 ;;		Nothing
 20037 ;; This function is called by:
 20038 ;;		_UART1_Write_string
 20039 ;; This function uses a non-reentrant model
 20040 ;;
 20041                           
 20042                           	psect	text84
 20043  00526C                     __ptext84:
 20044                           	opt callstack 0
 20045  00526C                     _EUSART1_is_tx_done:
 20046                           	opt callstack 24
 20047  00526C                     
 20048                           ;mcc_generated_files/eusart1.c: 148:     return TX1STAbits.TRMT;
 20049  00526C  B29E               	btfsc	158,1,c	;volatile
 20050  00526E  EF3B  F029         	goto	u7391
 20051  005272  EF3E  F029         	goto	u7390
 20052  005276                     u7391:
 20053  005276  0E01               	movlw	1
 20054  005278  EF3F  F029         	goto	u7396
 20055  00527C                     u7390:
 20056  00527C  0E00               	movlw	0
 20057  00527E                     u7396:
 20058  00527E  0012               	return		;funcret
 20059  005280                     __end_of_EUSART1_is_tx_done:
 20060                           	opt callstack 0
 20061                           
 20062 ;; *************** function _EUSART1_Write *****************
 20063 ;; Defined at:
 20064 ;;		line 177 in file "mcc_generated_files/eusart1.c"
 20065 ;; Parameters:    Size  Location     Type
 20066 ;;  txData          1    wreg     unsigned char 
 20067 ;; Auto vars:     Size  Location     Type
 20068 ;;  txData          1    4[COMRAM] unsigned char 
 20069 ;; Return value:  Size  Location     Type
 20070 ;;                  1    wreg      void 
 20071 ;; Registers used:
 20072 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20073 ;; Tracked objects:
 20074 ;;		On entry : 0/0
 20075 ;;		On exit  : 0/0
 20076 ;;		Unchanged: 0/0
 20077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20079 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20081 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20082 ;;Total ram usage:        1 bytes
 20083 ;; Hardware stack levels used:    1
 20084 ;; Hardware stack levels required when called:    4
 20085 ;; This function calls:
 20086 ;;		Nothing
 20087 ;; This function is called by:
 20088 ;;		_UART1_Write_string
 20089 ;; This function uses a non-reentrant model
 20090 ;;
 20091                           
 20092                           	psect	text85
 20093  004A6A                     __ptext85:
 20094                           	opt callstack 0
 20095  004A6A                     _EUSART1_Write:
 20096                           	opt callstack 24
 20097                           
 20098                           ;incstack = 0
 20099                           ;EUSART1_Write@txData stored from wreg
 20100  004A6A  6E05               	movwf	EUSART1_Write@txData^0,c
 20101  004A6C                     l7396:
 20102                           
 20103                           ;mcc_generated_files/eusart1.c: 179:     while(0 == eusart1TxBufferRemaining)
 20104  004A6C  0100               	movlb	0	; () banked
 20105  004A6E  51FE               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
 20106  004A70  B4D8               	btfsc	status,2,c
 20107  004A72  EF3D  F025         	goto	u7401
 20108  004A76  EF3F  F025         	goto	u7400
 20109  004A7A                     u7401:
 20110  004A7A  EF36  F025         	goto	l7396
 20111  004A7E                     u7400:
 20112  004A7E                     
 20113                           ; BSR set to: 0
 20114                           ;mcc_generated_files/eusart1.c: 183:     if(0 == PIE3bits.TX1IE)
 20115  004A7E  010E               	movlb	14	; () banked
 20116  004A80  B9C5               	btfsc	197,4,b	;volatile
 20117  004A82  EF45  F025         	goto	u7411
 20118  004A86  EF47  F025         	goto	u7410
 20119  004A8A                     u7411:
 20120  004A8A  EF4B  F025         	goto	l475
 20121  004A8E                     u7410:
 20122  004A8E                     
 20123                           ; BSR set to: 14
 20124                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         T
      +                          X1REG = txData;
 20125  004A8E  C005  FF9A         	movff	EUSART1_Write@txData,3994	;volatile
 20126                           
 20127                           ;mcc_generated_files/eusart1.c: 186:     }
 20128  004A92  EF61  F025         	goto	l7410
 20129  004A96                     l475:
 20130                           
 20131                           ; BSR set to: 14
 20132                           ;mcc_generated_files/eusart1.c: 188:     {;mcc_generated_files/eusart1.c: 189:         P
      +                          IE3bits.TX1IE = 0;
 20133  004A96  99C5               	bcf	197,4,b	;volatile
 20134  004A98                     
 20135                           ; BSR set to: 14
 20136                           ;mcc_generated_files/eusart1.c: 190:         eusart1TxBuffer[eusart1TxHead++] = txData;
 20137  004A98  0EC2               	movlw	low _eusart1TxBuffer
 20138  004A9A  0100               	movlb	0	; () banked
 20139  004A9C  25E3               	addwf	_eusart1TxHead& (0+255),w,b	;volatile
 20140  004A9E  6ED9               	movwf	fsr2l,c
 20141  004AA0  6ADA               	clrf	fsr2h,c
 20142  004AA2  0E02               	movlw	high _eusart1TxBuffer
 20143  004AA4  22DA               	addwfc	fsr2h,f,c
 20144  004AA6  C005  FFDF         	movff	EUSART1_Write@txData,indf2
 20145  004AAA                     
 20146                           ; BSR set to: 0
 20147  004AAA  2BE3               	incf	_eusart1TxHead& (0+255),f,b	;volatile
 20148  004AAC                     
 20149                           ; BSR set to: 0
 20150                           ;mcc_generated_files/eusart1.c: 191:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
 20151  004AAC  0E0F               	movlw	15
 20152  004AAE  65E3               	cpfsgt	_eusart1TxHead& (0+255),b	;volatile
 20153  004AB0  EF5C  F025         	goto	u7421
 20154  004AB4  EF5E  F025         	goto	u7420
 20155  004AB8                     u7421:
 20156  004AB8  EF60  F025         	goto	l7408
 20157  004ABC                     u7420:
 20158  004ABC                     
 20159                           ; BSR set to: 0
 20160                           ;mcc_generated_files/eusart1.c: 192:         {;mcc_generated_files/eusart1.c: 193:      
      +                                 eusart1TxHead = 0;
 20161  004ABC  0E00               	movlw	0
 20162  004ABE  6FE3               	movwf	_eusart1TxHead& (0+255),b	;volatile
 20163  004AC0                     l7408:
 20164                           
 20165                           ; BSR set to: 0
 20166                           ;mcc_generated_files/eusart1.c: 195:         eusart1TxBufferRemaining--;
 20167  004AC0  07FE               	decf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 20168  004AC2                     l7410:
 20169                           
 20170                           ;mcc_generated_files/eusart1.c: 197:     PIE3bits.TX1IE = 1;
 20171  004AC2  010E               	movlb	14	; () banked
 20172  004AC4  89C5               	bsf	197,4,b	;volatile
 20173  004AC6                     
 20174                           ; BSR set to: 14
 20175  004AC6  0012               	return		;funcret
 20176  004AC8                     __end_of_EUSART1_Write:
 20177                           	opt callstack 0
 20178                           
 20179 ;; *************** function _ClearModbusRespon *****************
 20180 ;; Defined at:
 20181 ;;		line 606 in file "Modbus.c"
 20182 ;; Parameters:    Size  Location     Type
 20183 ;;		None
 20184 ;; Auto vars:     Size  Location     Type
 20185 ;;  i               2    4[COMRAM] int 
 20186 ;; Return value:  Size  Location     Type
 20187 ;;                  1    wreg      void 
 20188 ;; Registers used:
 20189 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20190 ;; Tracked objects:
 20191 ;;		On entry : 0/0
 20192 ;;		On exit  : 0/0
 20193 ;;		Unchanged: 0/0
 20194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20196 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20198 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20199 ;;Total ram usage:        2 bytes
 20200 ;; Hardware stack levels used:    1
 20201 ;; Hardware stack levels required when called:    4
 20202 ;; This function calls:
 20203 ;;		Nothing
 20204 ;; This function is called by:
 20205 ;;		_main
 20206 ;; This function uses a non-reentrant model
 20207 ;;
 20208                           
 20209                           	psect	text86
 20210  004E70                     __ptext86:
 20211                           	opt callstack 0
 20212  004E70                     _ClearModbusRespon:
 20213                           	opt callstack 26
 20214  004E70                     
 20215                           ;Modbus.c: 607:     int i = 0;
 20216  004E70  0E00               	movlw	0
 20217  004E72  6E06               	movwf	(ClearModbusRespon@i+1)^0,c
 20218  004E74  0E00               	movlw	0
 20219  004E76  6E05               	movwf	ClearModbusRespon@i^0,c
 20220                           
 20221                           ;Modbus.c: 608:     for(i=0; i<32; i++ ){
 20222  004E78  0E00               	movlw	0
 20223  004E7A  6E06               	movwf	(ClearModbusRespon@i+1)^0,c
 20224  004E7C  0E00               	movlw	0
 20225  004E7E  6E05               	movwf	ClearModbusRespon@i^0,c
 20226  004E80                     l8032:
 20227                           
 20228                           ;Modbus.c: 609:         MBRespon[i] = 0xFF;
 20229  004E80  0E57               	movlw	low _MBRespon
 20230  004E82  2405               	addwf	ClearModbusRespon@i^0,w,c
 20231  004E84  6ED9               	movwf	fsr2l,c
 20232  004E86  0E02               	movlw	high _MBRespon
 20233  004E88  2006               	addwfc	(ClearModbusRespon@i+1)^0,w,c
 20234  004E8A  6EDA               	movwf	fsr2h,c
 20235  004E8C  0EFF               	movlw	255
 20236  004E8E  6EDF               	movwf	indf2,c
 20237  004E90                     
 20238                           ;Modbus.c: 610:     }
 20239  004E90  4A05               	infsnz	ClearModbusRespon@i^0,f,c
 20240  004E92  2A06               	incf	(ClearModbusRespon@i+1)^0,f,c
 20241  004E94  BE06               	btfsc	(ClearModbusRespon@i+1)^0,7,c
 20242  004E96  EF56  F027         	goto	u8111
 20243  004E9A  5006               	movf	(ClearModbusRespon@i+1)^0,w,c
 20244  004E9C  E109               	bnz	u8110
 20245  004E9E  0E20               	movlw	32
 20246  004EA0  5C05               	subwf	ClearModbusRespon@i^0,w,c
 20247  004EA2  A0D8               	btfss	status,0,c
 20248  004EA4  EF56  F027         	goto	u8111
 20249  004EA8  EF58  F027         	goto	u8110
 20250  004EAC                     u8111:
 20251  004EAC  EF40  F027         	goto	l8032
 20252  004EB0                     u8110:
 20253  004EB0  0012               	return		;funcret
 20254  004EB2                     __end_of_ClearModbusRespon:
 20255                           	opt callstack 0
 20256                           
 20257 ;; *************** function _INTERRUPT_InterruptManager *****************
 20258 ;; Defined at:
 20259 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 20260 ;; Parameters:    Size  Location     Type
 20261 ;;		None
 20262 ;; Auto vars:     Size  Location     Type
 20263 ;;		None
 20264 ;; Return value:  Size  Location     Type
 20265 ;;                  1    wreg      void 
 20266 ;; Registers used:
 20267 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 20268 ;; Tracked objects:
 20269 ;;		On entry : 0/0
 20270 ;;		On exit  : 0/0
 20271 ;;		Unchanged: 0/0
 20272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20275 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20276 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20277 ;;Total ram usage:        4 bytes
 20278 ;; Hardware stack levels used:    1
 20279 ;; Hardware stack levels required when called:    3
 20280 ;; This function calls:
 20281 ;;		Absolute function
 20282 ;;		_EUSART1_Receive_ISR
 20283 ;;		_EUSART1_Transmit_ISR
 20284 ;;		_EUSART2_Receive_ISR
 20285 ;;		_EUSART2_Transmit_ISR
 20286 ;; This function is called by:
 20287 ;;		Interrupt level 2
 20288 ;; This function uses a non-reentrant model
 20289 ;;
 20290                           
 20291                           	psect	intcode
 20292  000008                     __pintcode:
 20293                           	opt callstack 0
 20294  000008                     _INTERRUPT_InterruptManager:
 20295                           	opt callstack 15
 20296                           
 20297                           ;incstack = 0
 20298  000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 20299  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
 20300  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 20301  000012  CFD9 F003          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
 20302  000016  CFDA F004          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
 20303  00001A                     
 20304                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
 20305  00001A  ACF2               	btfss	242,6,c	;volatile
 20306  00001C  EF12  F000         	goto	i2u591_41
 20307  000020  EF14  F000         	goto	i2u591_40
 20308  000024                     i2u591_41:
 20309  000024  EF89  F000         	goto	i2l163
 20310  000028                     i2u591_40:
 20311  000028                     
 20312                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
 20313  000028  010E               	movlb	14	; () banked
 20314  00002A  ADC5               	btfss	197,6,b	;volatile
 20315  00002C  EF1A  F000         	goto	i2u592_41
 20316  000030  EF1C  F000         	goto	i2u592_40
 20317  000034                     i2u592_41:
 20318  000034  EF32  F000         	goto	i2l154
 20319  000038                     i2u592_40:
 20320  000038                     
 20321                           ; BSR set to: 14
 20322  000038  ADCD               	btfss	205,6,b	;volatile
 20323  00003A  EF21  F000         	goto	i2u593_41
 20324  00003E  EF23  F000         	goto	i2u593_40
 20325  000042                     i2u593_41:
 20326  000042  EF32  F000         	goto	i2l154
 20327  000046                     i2u593_40:
 20328  000046                     
 20329                           ; BSR set to: 14
 20330                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART2_TxDefaultInterruptHandler();
 20331  000046  D802               	call	i2u594_48
 20332  000048  EF30  F000         	goto	i2u594_49
 20333  00004C                     i2u594_48:
 20334  00004C  0005               	push	
 20335  00004E  6EFA               	movwf	pclath,c
 20336  000050  0100               	movlb	0	; () banked
 20337  000052  51FC               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
 20338  000054  6EFD               	movwf	tosl,c
 20339  000056  51FD               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
 20340  000058  6EFE               	movwf	tosh,c
 20341  00005A  6AFF               	clrf	tosu,c
 20342  00005C  50FA               	movf	pclath,w,c
 20343  00005E  0012               	return		;indir
 20344  000060                     i2u594_49:
 20345                           
 20346                           ;mcc_generated_files/interrupt_manager.c: 66:         }
 20347  000060  EF89  F000         	goto	i2l163
 20348  000064                     i2l154:
 20349                           
 20350                           ; BSR set to: 14
 20351  000064  AFC5               	btfss	197,7,b	;volatile
 20352  000066  EF37  F000         	goto	i2u595_41
 20353  00006A  EF39  F000         	goto	i2u595_40
 20354  00006E                     i2u595_41:
 20355  00006E  EF4F  F000         	goto	i2l156
 20356  000072                     i2u595_40:
 20357  000072                     
 20358                           ; BSR set to: 14
 20359  000072  AFCD               	btfss	205,7,b	;volatile
 20360  000074  EF3E  F000         	goto	i2u596_41
 20361  000078  EF40  F000         	goto	i2u596_40
 20362  00007C                     i2u596_41:
 20363  00007C  EF4F  F000         	goto	i2l156
 20364  000080                     i2u596_40:
 20365  000080                     
 20366                           ; BSR set to: 14
 20367                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART2_RxDefaultInterruptHandler();
 20368  000080  D802               	call	i2u597_48
 20369  000082  EF4D  F000         	goto	i2u597_49
 20370  000086                     i2u597_48:
 20371  000086  0005               	push	
 20372  000088  6EFA               	movwf	pclath,c
 20373  00008A  0100               	movlb	0	; () banked
 20374  00008C  51FA               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
 20375  00008E  6EFD               	movwf	tosl,c
 20376  000090  51FB               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
 20377  000092  6EFE               	movwf	tosh,c
 20378  000094  6AFF               	clrf	tosu,c
 20379  000096  50FA               	movf	pclath,w,c
 20380  000098  0012               	return		;indir
 20381  00009A                     i2u597_49:
 20382                           
 20383                           ;mcc_generated_files/interrupt_manager.c: 70:         }
 20384  00009A  EF89  F000         	goto	i2l163
 20385  00009E                     i2l156:
 20386                           
 20387                           ; BSR set to: 14
 20388  00009E  A9C5               	btfss	197,4,b	;volatile
 20389  0000A0  EF54  F000         	goto	i2u598_41
 20390  0000A4  EF56  F000         	goto	i2u598_40
 20391  0000A8                     i2u598_41:
 20392  0000A8  EF6C  F000         	goto	i2l158
 20393  0000AC                     i2u598_40:
 20394  0000AC                     
 20395                           ; BSR set to: 14
 20396  0000AC  A9CD               	btfss	205,4,b	;volatile
 20397  0000AE  EF5B  F000         	goto	i2u599_41
 20398  0000B2  EF5D  F000         	goto	i2u599_40
 20399  0000B6                     i2u599_41:
 20400  0000B6  EF6C  F000         	goto	i2l158
 20401  0000BA                     i2u599_40:
 20402  0000BA                     
 20403                           ; BSR set to: 14
 20404                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART1_TxDefaultInterruptHandler();
 20405  0000BA  D802               	call	i2u600_48
 20406  0000BC  EF6A  F000         	goto	i2u600_49
 20407  0000C0                     i2u600_48:
 20408  0000C0  0005               	push	
 20409  0000C2  6EFA               	movwf	pclath,c
 20410  0000C4  0100               	movlb	0	; () banked
 20411  0000C6  51F8               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
 20412  0000C8  6EFD               	movwf	tosl,c
 20413  0000CA  51F9               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
 20414  0000CC  6EFE               	movwf	tosh,c
 20415  0000CE  6AFF               	clrf	tosu,c
 20416  0000D0  50FA               	movf	pclath,w,c
 20417  0000D2  0012               	return		;indir
 20418  0000D4                     i2u600_49:
 20419                           
 20420                           ;mcc_generated_files/interrupt_manager.c: 74:         }
 20421  0000D4  EF89  F000         	goto	i2l163
 20422  0000D8                     i2l158:
 20423                           
 20424                           ; BSR set to: 14
 20425  0000D8  ABC5               	btfss	197,5,b	;volatile
 20426  0000DA  EF71  F000         	goto	i2u601_41
 20427  0000DE  EF73  F000         	goto	i2u601_40
 20428  0000E2                     i2u601_41:
 20429  0000E2  EF89  F000         	goto	i2l157
 20430  0000E6                     i2u601_40:
 20431  0000E6                     
 20432                           ; BSR set to: 14
 20433  0000E6  ABCD               	btfss	205,5,b	;volatile
 20434  0000E8  EF78  F000         	goto	i2u602_41
 20435  0000EC  EF7A  F000         	goto	i2u602_40
 20436  0000F0                     i2u602_41:
 20437  0000F0  EF89  F000         	goto	i2l157
 20438  0000F4                     i2u602_40:
 20439  0000F4                     
 20440                           ; BSR set to: 14
 20441                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             EUSART1_RxDefaultInterruptHandler();
 20442  0000F4  D802               	call	i2u603_48
 20443  0000F6  EF87  F000         	goto	i2u603_49
 20444  0000FA                     i2u603_48:
 20445  0000FA  0005               	push	
 20446  0000FC  6EFA               	movwf	pclath,c
 20447  0000FE  0100               	movlb	0	; () banked
 20448  000100  51F6               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
 20449  000102  6EFD               	movwf	tosl,c
 20450  000104  51F7               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
 20451  000106  6EFE               	movwf	tosh,c
 20452  000108  6AFF               	clrf	tosu,c
 20453  00010A  50FA               	movf	pclath,w,c
 20454  00010C  0012               	return		;indir
 20455  00010E                     i2u603_49:
 20456                           
 20457                           ;mcc_generated_files/interrupt_manager.c: 78:         }
 20458  00010E  EF89  F000         	goto	i2l163
 20459  000112                     i2l157:
 20460  000112                     i2l163:
 20461  000112  C004  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
 20462  000116  C003  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
 20463  00011A  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 20464  00011E  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 20465  000122  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 20466  000124  0011               	retfie		f
 20467  000126                     __end_of_INTERRUPT_InterruptManager:
 20468                           	opt callstack 0
 20469                           
 20470 ;; *************** function _EUSART2_Transmit_ISR *****************
 20471 ;; Defined at:
 20472 ;;		line 210 in file "mcc_generated_files/eusart2.c"
 20473 ;; Parameters:    Size  Location     Type
 20474 ;;		None
 20475 ;; Auto vars:     Size  Location     Type
 20476 ;;		None
 20477 ;; Return value:  Size  Location     Type
 20478 ;;                  1    wreg      void 
 20479 ;; Registers used:
 20480 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20481 ;; Tracked objects:
 20482 ;;		On entry : 0/0
 20483 ;;		On exit  : 0/0
 20484 ;;		Unchanged: 0/0
 20485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20490 ;;Total ram usage:        0 bytes
 20491 ;; Hardware stack levels used:    1
 20492 ;; This function calls:
 20493 ;;		Nothing
 20494 ;; This function is called by:
 20495 ;;		_EUSART2_Initialize
 20496 ;;		_INTERRUPT_InterruptManager
 20497 ;; This function uses a non-reentrant model
 20498 ;;
 20499                           
 20500                           	psect	text88
 20501  004D5C                     __ptext88:
 20502                           	opt callstack 0
 20503  004D5C                     _EUSART2_Transmit_ISR:
 20504                           	opt callstack 17
 20505  004D5C                     
 20506                           ;mcc_generated_files/eusart2.c: 214:     if(sizeof(eusart2TxBuffer) > eusart2TxBufferRem
      +                          aining)
 20507  004D5C  0E20               	movlw	32
 20508  004D5E  0100               	movlb	0	; () banked
 20509  004D60  61FF               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
 20510  004D62  EFB5  F026         	goto	i2u512_41
 20511  004D66  EFB7  F026         	goto	i2u512_40
 20512  004D6A                     i2u512_41:
 20513  004D6A  EFCF  F026         	goto	i2l337
 20514  004D6E                     i2u512_40:
 20515  004D6E                     
 20516                           ; BSR set to: 0
 20517                           ;mcc_generated_files/eusart2.c: 215:     {;mcc_generated_files/eusart2.c: 216:         T
      +                          X2REG = eusart2TxBuffer[eusart2TxTail++];
 20518  004D6E  0E84               	movlw	low _eusart2TxBuffer
 20519  004D70  25E7               	addwf	_eusart2TxTail& (0+255),w,b	;volatile
 20520  004D72  6ED9               	movwf	fsr2l,c
 20521  004D74  6ADA               	clrf	fsr2h,c
 20522  004D76  0E03               	movlw	high _eusart2TxBuffer
 20523  004D78  22DA               	addwfc	fsr2h,f,c
 20524  004D7A  50DF               	movf	indf2,w,c
 20525  004D7C  010E               	movlb	14	; () banked
 20526  004D7E  6F9A               	movwf	154,b	;volatile
 20527  004D80                     
 20528                           ; BSR set to: 14
 20529  004D80  0100               	movlb	0	; () banked
 20530  004D82  2BE7               	incf	_eusart2TxTail& (0+255),f,b	;volatile
 20531  004D84                     
 20532                           ; BSR set to: 0
 20533                           ;mcc_generated_files/eusart2.c: 217:         if(sizeof(eusart2TxBuffer) <= eusart2TxTail
      +                          )
 20534  004D84  0E1F               	movlw	31
 20535  004D86  65E7               	cpfsgt	_eusart2TxTail& (0+255),b	;volatile
 20536  004D88  EFC8  F026         	goto	i2u513_41
 20537  004D8C  EFCA  F026         	goto	i2u513_40
 20538  004D90                     i2u513_41:
 20539  004D90  EFCC  F026         	goto	i2l5894
 20540  004D94                     i2u513_40:
 20541  004D94                     
 20542                           ; BSR set to: 0
 20543                           ;mcc_generated_files/eusart2.c: 218:         {;mcc_generated_files/eusart2.c: 219:      
      +                                 eusart2TxTail = 0;
 20544  004D94  0E00               	movlw	0
 20545  004D96  6FE7               	movwf	_eusart2TxTail& (0+255),b	;volatile
 20546  004D98                     i2l5894:
 20547                           
 20548                           ; BSR set to: 0
 20549                           ;mcc_generated_files/eusart2.c: 221:         eusart2TxBufferRemaining++;
 20550  004D98  2BFF               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 20551                           
 20552                           ;mcc_generated_files/eusart2.c: 222:     }
 20553  004D9A  EFD1  F026         	goto	i2l340
 20554  004D9E                     i2l337:
 20555                           
 20556                           ; BSR set to: 0
 20557                           ;mcc_generated_files/eusart2.c: 224:     {;mcc_generated_files/eusart2.c: 225:         P
      +                          IE3bits.TX2IE = 0;
 20558  004D9E  010E               	movlb	14	; () banked
 20559  004DA0  9DC5               	bcf	197,6,b	;volatile
 20560  004DA2                     i2l340:
 20561  004DA2  0012               	return		;funcret
 20562  004DA4                     __end_of_EUSART2_Transmit_ISR:
 20563                           	opt callstack 0
 20564                           
 20565 ;; *************** function _EUSART2_Receive_ISR *****************
 20566 ;; Defined at:
 20567 ;;		line 229 in file "mcc_generated_files/eusart2.c"
 20568 ;; Parameters:    Size  Location     Type
 20569 ;;		None
 20570 ;; Auto vars:     Size  Location     Type
 20571 ;;		None
 20572 ;; Return value:  Size  Location     Type
 20573 ;;                  1    wreg      void 
 20574 ;; Registers used:
 20575 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 20576 ;; Tracked objects:
 20577 ;;		On entry : 0/0
 20578 ;;		On exit  : 0/0
 20579 ;;		Unchanged: 0/0
 20580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20585 ;;Total ram usage:        0 bytes
 20586 ;; Hardware stack levels used:    1
 20587 ;; Hardware stack levels required when called:    2
 20588 ;; This function calls:
 20589 ;;		Absolute function
 20590 ;;		_EUSART2_DefaultErrorHandler
 20591 ;;		_EUSART2_DefaultFramingErrorHandler
 20592 ;;		_EUSART2_DefaultOverrunErrorHandler
 20593 ;;		_EUSART2_RxDataHandler
 20594 ;; This function is called by:
 20595 ;;		_EUSART2_Initialize
 20596 ;;		_INTERRUPT_InterruptManager
 20597 ;; This function uses a non-reentrant model
 20598 ;;
 20599                           
 20600                           	psect	text89
 20601  004048                     __ptext89:
 20602                           	opt callstack 0
 20603  004048                     _EUSART2_Receive_ISR:
 20604                           	opt callstack 15
 20605  004048                     
 20606                           ;mcc_generated_files/eusart2.c: 232:     eusart2RxStatusBuffer[eusart2RxHead].status = 0
      +                          ;
 20607  004048  0EA2               	movlw	low _eusart2RxStatusBuffer
 20608  00404A  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
 20609  00404C  6ED9               	movwf	fsr2l,c
 20610  00404E  6ADA               	clrf	fsr2h,c
 20611  004050  0E02               	movlw	high _eusart2RxStatusBuffer
 20612  004052  22DA               	addwfc	fsr2h,f,c
 20613  004054  0E00               	movlw	0
 20614  004056  6EDF               	movwf	indf2,c
 20615  004058                     
 20616                           ;mcc_generated_files/eusart2.c: 234:     if(RC2STAbits.FERR){
 20617  004058  010E               	movlb	14	; () banked
 20618  00405A  A59D               	btfss	157,2,b	;volatile
 20619  00405C  EF32  F020         	goto	i2u514_41
 20620  004060  EF34  F020         	goto	i2u514_40
 20621  004064                     i2u514_41:
 20622  004064  EF49  F020         	goto	i2l5904
 20623  004068                     i2u514_40:
 20624  004068                     
 20625                           ; BSR set to: 14
 20626                           ;mcc_generated_files/eusart2.c: 235:         eusart2RxStatusBuffer[eusart2RxHead].ferr =
      +                           1;
 20627  004068  0EA2               	movlw	low _eusart2RxStatusBuffer
 20628  00406A  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
 20629  00406C  6ED9               	movwf	fsr2l,c
 20630  00406E  6ADA               	clrf	fsr2h,c
 20631  004070  0E02               	movlw	high _eusart2RxStatusBuffer
 20632  004072  22DA               	addwfc	fsr2h,f,c
 20633  004074  0102               	movlb	2	; () banked
 20634  004076  82DF               	bsf	indf2,1,c
 20635  004078                     
 20636                           ; BSR set to: 2
 20637                           ;mcc_generated_files/eusart2.c: 236:         EUSART2_FramingErrorHandler();
 20638  004078  D802               	call	i2u515_48
 20639  00407A  EF49  F020         	goto	i2u515_49
 20640  00407E                     i2u515_48:
 20641  00407E  0005               	push	
 20642  004080  6EFA               	movwf	pclath,c
 20643  004082  0101               	movlb	1	; () banked
 20644  004084  51FD               	movf	_EUSART2_FramingErrorHandler& (0+255),w,b
 20645  004086  6EFD               	movwf	tosl,c
 20646  004088  51FE               	movf	(_EUSART2_FramingErrorHandler+1)& (0+255),w,b
 20647  00408A  6EFE               	movwf	tosh,c
 20648  00408C  6AFF               	clrf	tosu,c
 20649  00408E  50FA               	movf	pclath,w,c
 20650  004090  0012               	return		;indir
 20651  004092                     i2u515_49:
 20652  004092                     i2l5904:
 20653                           
 20654                           ;mcc_generated_files/eusart2.c: 239:     if(RC2STAbits.OERR){
 20655  004092  010E               	movlb	14	; () banked
 20656  004094  A39D               	btfss	157,1,b	;volatile
 20657  004096  EF4F  F020         	goto	i2u516_41
 20658  00409A  EF51  F020         	goto	i2u516_40
 20659  00409E                     i2u516_41:
 20660  00409E  EF66  F020         	goto	i2l5910
 20661  0040A2                     i2u516_40:
 20662  0040A2                     
 20663                           ; BSR set to: 14
 20664                           ;mcc_generated_files/eusart2.c: 240:         eusart2RxStatusBuffer[eusart2RxHead].oerr =
      +                           1;
 20665  0040A2  0EA2               	movlw	low _eusart2RxStatusBuffer
 20666  0040A4  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
 20667  0040A6  6ED9               	movwf	fsr2l,c
 20668  0040A8  6ADA               	clrf	fsr2h,c
 20669  0040AA  0E02               	movlw	high _eusart2RxStatusBuffer
 20670  0040AC  22DA               	addwfc	fsr2h,f,c
 20671  0040AE  0102               	movlb	2	; () banked
 20672  0040B0  84DF               	bsf	indf2,2,c
 20673  0040B2                     
 20674                           ; BSR set to: 2
 20675                           ;mcc_generated_files/eusart2.c: 241:         EUSART2_OverrunErrorHandler();
 20676  0040B2  D802               	call	i2u517_48
 20677  0040B4  EF66  F020         	goto	i2u517_49
 20678  0040B8                     i2u517_48:
 20679  0040B8  0005               	push	
 20680  0040BA  6EFA               	movwf	pclath,c
 20681  0040BC  0101               	movlb	1	; () banked
 20682  0040BE  51FB               	movf	_EUSART2_OverrunErrorHandler& (0+255),w,b
 20683  0040C0  6EFD               	movwf	tosl,c
 20684  0040C2  51FC               	movf	(_EUSART2_OverrunErrorHandler+1)& (0+255),w,b
 20685  0040C4  6EFE               	movwf	tosh,c
 20686  0040C6  6AFF               	clrf	tosu,c
 20687  0040C8  50FA               	movf	pclath,w,c
 20688  0040CA  0012               	return		;indir
 20689  0040CC                     i2u517_49:
 20690  0040CC                     i2l5910:
 20691                           
 20692                           ;mcc_generated_files/eusart2.c: 244:     if(eusart2RxStatusBuffer[eusart2RxHead].status)
      +                          {
 20693  0040CC  0EA2               	movlw	low _eusart2RxStatusBuffer
 20694  0040CE  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
 20695  0040D0  6ED9               	movwf	fsr2l,c
 20696  0040D2  6ADA               	clrf	fsr2h,c
 20697  0040D4  0E02               	movlw	high _eusart2RxStatusBuffer
 20698  0040D6  22DA               	addwfc	fsr2h,f,c
 20699  0040D8  50DF               	movf	indf2,w,c
 20700  0040DA  B4D8               	btfsc	status,2,c
 20701  0040DC  EF72  F020         	goto	i2u518_41
 20702  0040E0  EF74  F020         	goto	i2u518_40
 20703  0040E4                     i2u518_41:
 20704  0040E4  EF83  F020         	goto	i2l5914
 20705  0040E8                     i2u518_40:
 20706  0040E8                     
 20707                           ;mcc_generated_files/eusart2.c: 245:         EUSART2_ErrorHandler();
 20708  0040E8  D802               	call	i2u519_48
 20709  0040EA  EF81  F020         	goto	i2u519_49
 20710  0040EE                     i2u519_48:
 20711  0040EE  0005               	push	
 20712  0040F0  6EFA               	movwf	pclath,c
 20713  0040F2  0101               	movlb	1	; () banked
 20714  0040F4  51F9               	movf	_EUSART2_ErrorHandler& (0+255),w,b
 20715  0040F6  6EFD               	movwf	tosl,c
 20716  0040F8  51FA               	movf	(_EUSART2_ErrorHandler+1)& (0+255),w,b
 20717  0040FA  6EFE               	movwf	tosh,c
 20718  0040FC  6AFF               	clrf	tosu,c
 20719  0040FE  50FA               	movf	pclath,w,c
 20720  004100  0012               	return		;indir
 20721  004102                     i2u519_49:
 20722                           
 20723                           ;mcc_generated_files/eusart2.c: 246:     } else {
 20724  004102  EF85  F020         	goto	i2l347
 20725  004106                     i2l5914:
 20726                           
 20727                           ;mcc_generated_files/eusart2.c: 247:         EUSART2_RxDataHandler();
 20728  004106  EC5E  F028         	call	_EUSART2_RxDataHandler	;wreg free
 20729  00410A                     i2l347:
 20730  00410A  0012               	return		;funcret
 20731  00410C                     __end_of_EUSART2_Receive_ISR:
 20732                           	opt callstack 0
 20733                           
 20734 ;; *************** function _EUSART2_DefaultOverrunErrorHandler *****************
 20735 ;; Defined at:
 20736 ;;		line 265 in file "mcc_generated_files/eusart2.c"
 20737 ;; Parameters:    Size  Location     Type
 20738 ;;		None
 20739 ;; Auto vars:     Size  Location     Type
 20740 ;;		None
 20741 ;; Return value:  Size  Location     Type
 20742 ;;                  1    wreg      void 
 20743 ;; Registers used:
 20744 ;;		None
 20745 ;; Tracked objects:
 20746 ;;		On entry : 0/0
 20747 ;;		On exit  : 0/0
 20748 ;;		Unchanged: 0/0
 20749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20754 ;;Total ram usage:        0 bytes
 20755 ;; Hardware stack levels used:    1
 20756 ;; This function calls:
 20757 ;;		Nothing
 20758 ;; This function is called by:
 20759 ;;		_EUSART2_Initialize
 20760 ;;		_EUSART2_Receive_ISR
 20761 ;; This function uses a non-reentrant model
 20762 ;;
 20763                           
 20764                           	psect	text90
 20765  0052FC                     __ptext90:
 20766                           	opt callstack 0
 20767  0052FC                     _EUSART2_DefaultOverrunErrorHandler:
 20768                           	opt callstack 16
 20769  0052FC                     
 20770                           ;mcc_generated_files/eusart2.c: 268:     RC2STAbits.CREN = 0;
 20771  0052FC  010E               	movlb	14	; () banked
 20772  0052FE  999D               	bcf	157,4,b	;volatile
 20773                           
 20774                           ;mcc_generated_files/eusart2.c: 269:     RC2STAbits.CREN = 1;
 20775  005300  899D               	bsf	157,4,b	;volatile
 20776  005302                     
 20777                           ; BSR set to: 14
 20778  005302  0012               	return		;funcret
 20779  005304                     __end_of_EUSART2_DefaultOverrunErrorHandler:
 20780                           	opt callstack 0
 20781                           
 20782 ;; *************** function _EUSART2_DefaultFramingErrorHandler *****************
 20783 ;; Defined at:
 20784 ;;		line 263 in file "mcc_generated_files/eusart2.c"
 20785 ;; Parameters:    Size  Location     Type
 20786 ;;		None
 20787 ;; Auto vars:     Size  Location     Type
 20788 ;;		None
 20789 ;; Return value:  Size  Location     Type
 20790 ;;                  1    wreg      void 
 20791 ;; Registers used:
 20792 ;;		None
 20793 ;; Tracked objects:
 20794 ;;		On entry : 0/0
 20795 ;;		On exit  : 0/0
 20796 ;;		Unchanged: 0/0
 20797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20802 ;;Total ram usage:        0 bytes
 20803 ;; Hardware stack levels used:    1
 20804 ;; This function calls:
 20805 ;;		Nothing
 20806 ;; This function is called by:
 20807 ;;		_EUSART2_Initialize
 20808 ;;		_EUSART2_Receive_ISR
 20809 ;; This function uses a non-reentrant model
 20810 ;;
 20811                           
 20812                           	psect	text91
 20813  00532A                     __ptext91:
 20814                           	opt callstack 0
 20815  00532A                     _EUSART2_DefaultFramingErrorHandler:
 20816                           	opt callstack 16
 20817  00532A  0012               	return		;funcret
 20818  00532C                     __end_of_EUSART2_DefaultFramingErrorHandler:
 20819                           	opt callstack 0
 20820                           
 20821 ;; *************** function _EUSART2_DefaultErrorHandler *****************
 20822 ;; Defined at:
 20823 ;;		line 273 in file "mcc_generated_files/eusart2.c"
 20824 ;; Parameters:    Size  Location     Type
 20825 ;;		None
 20826 ;; Auto vars:     Size  Location     Type
 20827 ;;		None
 20828 ;; Return value:  Size  Location     Type
 20829 ;;                  1    wreg      void 
 20830 ;; Registers used:
 20831 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20832 ;; Tracked objects:
 20833 ;;		On entry : 0/0
 20834 ;;		On exit  : 0/0
 20835 ;;		Unchanged: 0/0
 20836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20841 ;;Total ram usage:        0 bytes
 20842 ;; Hardware stack levels used:    1
 20843 ;; Hardware stack levels required when called:    1
 20844 ;; This function calls:
 20845 ;;		_EUSART2_RxDataHandler
 20846 ;; This function is called by:
 20847 ;;		_EUSART2_Initialize
 20848 ;;		_EUSART2_Receive_ISR
 20849 ;; This function uses a non-reentrant model
 20850 ;;
 20851                           
 20852                           	psect	text92
 20853  005310                     __ptext92:
 20854                           	opt callstack 0
 20855  005310                     _EUSART2_DefaultErrorHandler:
 20856                           	opt callstack 15
 20857  005310                     
 20858                           ;mcc_generated_files/eusart2.c: 274:     EUSART2_RxDataHandler();
 20859  005310  EC5E  F028         	call	_EUSART2_RxDataHandler	;wreg free
 20860  005314  0012               	return		;funcret
 20861  005316                     __end_of_EUSART2_DefaultErrorHandler:
 20862                           	opt callstack 0
 20863                           
 20864 ;; *************** function _EUSART2_RxDataHandler *****************
 20865 ;; Defined at:
 20866 ;;		line 253 in file "mcc_generated_files/eusart2.c"
 20867 ;; Parameters:    Size  Location     Type
 20868 ;;		None
 20869 ;; Auto vars:     Size  Location     Type
 20870 ;;		None
 20871 ;; Return value:  Size  Location     Type
 20872 ;;                  1    wreg      void 
 20873 ;; Registers used:
 20874 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20875 ;; Tracked objects:
 20876 ;;		On entry : 0/0
 20877 ;;		On exit  : 0/0
 20878 ;;		Unchanged: 0/0
 20879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20884 ;;Total ram usage:        0 bytes
 20885 ;; Hardware stack levels used:    1
 20886 ;; This function calls:
 20887 ;;		Nothing
 20888 ;; This function is called by:
 20889 ;;		_EUSART2_Receive_ISR
 20890 ;;		_EUSART2_DefaultErrorHandler
 20891 ;; This function uses a non-reentrant model
 20892 ;;
 20893                           
 20894                           	psect	text93
 20895  0050BC                     __ptext93:
 20896                           	opt callstack 0
 20897  0050BC                     _EUSART2_RxDataHandler:
 20898                           	opt callstack 16
 20899  0050BC                     
 20900                           ;mcc_generated_files/eusart2.c: 255:     eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 20901  0050BC  0E64               	movlw	low _eusart2RxBuffer
 20902  0050BE  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
 20903  0050C0  6ED9               	movwf	fsr2l,c
 20904  0050C2  6ADA               	clrf	fsr2h,c
 20905  0050C4  0E03               	movlw	high _eusart2RxBuffer
 20906  0050C6  22DA               	addwfc	fsr2h,f,c
 20907  0050C8  CE99 FFDF          	movff	3737,indf2	;volatile
 20908  0050CC  2A5A               	incf	_eusart2RxHead^0,f,c	;volatile
 20909  0050CE                     
 20910                           ;mcc_generated_files/eusart2.c: 256:     if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 20911  0050CE  0E1F               	movlw	31
 20912  0050D0  645A               	cpfsgt	_eusart2RxHead^0,c	;volatile
 20913  0050D2  EF6D  F028         	goto	i2u451_41
 20914  0050D6  EF6F  F028         	goto	i2u451_40
 20915  0050DA                     i2u451_41:
 20916  0050DA  EF71  F028         	goto	i2l5302
 20917  0050DE                     i2u451_40:
 20918  0050DE                     
 20919                           ;mcc_generated_files/eusart2.c: 257:     {;mcc_generated_files/eusart2.c: 258:         e
      +                          usart2RxHead = 0;
 20920  0050DE  0E00               	movlw	0
 20921  0050E0  6E5A               	movwf	_eusart2RxHead^0,c	;volatile
 20922  0050E2                     i2l5302:
 20923                           
 20924                           ;mcc_generated_files/eusart2.c: 260:     eusart2RxCount++;
 20925  0050E2  0100               	movlb	0	; () banked
 20926  0050E4  2BE5               	incf	_eusart2RxCount& (0+255),f,b	;volatile
 20927  0050E6                     
 20928                           ; BSR set to: 0
 20929  0050E6  0012               	return		;funcret
 20930  0050E8                     __end_of_EUSART2_RxDataHandler:
 20931                           	opt callstack 0
 20932                           
 20933 ;; *************** function _EUSART1_Transmit_ISR *****************
 20934 ;; Defined at:
 20935 ;;		line 201 in file "mcc_generated_files/eusart1.c"
 20936 ;; Parameters:    Size  Location     Type
 20937 ;;		None
 20938 ;; Auto vars:     Size  Location     Type
 20939 ;;		None
 20940 ;; Return value:  Size  Location     Type
 20941 ;;                  1    wreg      void 
 20942 ;; Registers used:
 20943 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20944 ;; Tracked objects:
 20945 ;;		On entry : 0/0
 20946 ;;		On exit  : 0/0
 20947 ;;		Unchanged: 0/0
 20948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20953 ;;Total ram usage:        0 bytes
 20954 ;; Hardware stack levels used:    1
 20955 ;; This function calls:
 20956 ;;		Nothing
 20957 ;; This function is called by:
 20958 ;;		_EUSART1_Initialize
 20959 ;;		_INTERRUPT_InterruptManager
 20960 ;; This function uses a non-reentrant model
 20961 ;;
 20962                           
 20963                           	psect	text94
 20964  004E2C                     __ptext94:
 20965                           	opt callstack 0
 20966  004E2C                     _EUSART1_Transmit_ISR:
 20967                           	opt callstack 17
 20968  004E2C                     
 20969                           ;mcc_generated_files/eusart1.c: 205:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 20970  004E2C  0E10               	movlw	16
 20971  004E2E  0100               	movlb	0	; () banked
 20972  004E30  61FE               	cpfslt	_eusart1TxBufferRemaining& (0+255),b	;volatile
 20973  004E32  EF1D  F027         	goto	i2u520_41
 20974  004E36  EF1F  F027         	goto	i2u520_40
 20975  004E3A                     i2u520_41:
 20976  004E3A  EF35  F027         	goto	i2l481
 20977  004E3E                     i2u520_40:
 20978  004E3E                     
 20979                           ; BSR set to: 0
 20980                           ;mcc_generated_files/eusart1.c: 206:     {;mcc_generated_files/eusart1.c: 207:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 20981  004E3E  0EC2               	movlw	low _eusart1TxBuffer
 20982  004E40  25E2               	addwf	_eusart1TxTail& (0+255),w,b	;volatile
 20983  004E42  6ED9               	movwf	fsr2l,c
 20984  004E44  6ADA               	clrf	fsr2h,c
 20985  004E46  0E02               	movlw	high _eusart1TxBuffer
 20986  004E48  22DA               	addwfc	fsr2h,f,c
 20987  004E4A  50DF               	movf	indf2,w,c
 20988  004E4C  6E9A               	movwf	154,c	;volatile
 20989  004E4E                     
 20990                           ; BSR set to: 0
 20991  004E4E  2BE2               	incf	_eusart1TxTail& (0+255),f,b	;volatile
 20992  004E50                     
 20993                           ; BSR set to: 0
 20994                           ;mcc_generated_files/eusart1.c: 208:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 20995  004E50  0E0F               	movlw	15
 20996  004E52  65E2               	cpfsgt	_eusart1TxTail& (0+255),b	;volatile
 20997  004E54  EF2E  F027         	goto	i2u521_41
 20998  004E58  EF30  F027         	goto	i2u521_40
 20999  004E5C                     i2u521_41:
 21000  004E5C  EF32  F027         	goto	i2l5926
 21001  004E60                     i2u521_40:
 21002  004E60                     
 21003                           ; BSR set to: 0
 21004                           ;mcc_generated_files/eusart1.c: 209:         {;mcc_generated_files/eusart1.c: 210:      
      +                                 eusart1TxTail = 0;
 21005  004E60  0E00               	movlw	0
 21006  004E62  6FE2               	movwf	_eusart1TxTail& (0+255),b	;volatile
 21007  004E64                     i2l5926:
 21008                           
 21009                           ; BSR set to: 0
 21010                           ;mcc_generated_files/eusart1.c: 212:         eusart1TxBufferRemaining++;
 21011  004E64  2BFE               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 21012                           
 21013                           ;mcc_generated_files/eusart1.c: 213:     }
 21014  004E66  EF37  F027         	goto	i2l484
 21015  004E6A                     i2l481:
 21016                           
 21017                           ; BSR set to: 0
 21018                           ;mcc_generated_files/eusart1.c: 215:     {;mcc_generated_files/eusart1.c: 216:         P
      +                          IE3bits.TX1IE = 0;
 21019  004E6A  010E               	movlb	14	; () banked
 21020  004E6C  99C5               	bcf	197,4,b	;volatile
 21021  004E6E                     i2l484:
 21022  004E6E  0012               	return		;funcret
 21023  004E70                     __end_of_EUSART1_Transmit_ISR:
 21024                           	opt callstack 0
 21025                           
 21026 ;; *************** function _EUSART1_Receive_ISR *****************
 21027 ;; Defined at:
 21028 ;;		line 220 in file "mcc_generated_files/eusart1.c"
 21029 ;; Parameters:    Size  Location     Type
 21030 ;;		None
 21031 ;; Auto vars:     Size  Location     Type
 21032 ;;		None
 21033 ;; Return value:  Size  Location     Type
 21034 ;;                  1    wreg      void 
 21035 ;; Registers used:
 21036 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 21037 ;; Tracked objects:
 21038 ;;		On entry : 0/0
 21039 ;;		On exit  : 0/0
 21040 ;;		Unchanged: 0/0
 21041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21046 ;;Total ram usage:        0 bytes
 21047 ;; Hardware stack levels used:    1
 21048 ;; Hardware stack levels required when called:    2
 21049 ;; This function calls:
 21050 ;;		Absolute function
 21051 ;;		_EUSART1_DefaultErrorHandler
 21052 ;;		_EUSART1_DefaultFramingErrorHandler
 21053 ;;		_EUSART1_DefaultOverrunErrorHandler
 21054 ;;		_EUSART1_RxDataHandler
 21055 ;; This function is called by:
 21056 ;;		_EUSART1_Initialize
 21057 ;;		_INTERRUPT_InterruptManager
 21058 ;; This function uses a non-reentrant model
 21059 ;;
 21060                           
 21061                           	psect	text95
 21062  00428E                     __ptext95:
 21063                           	opt callstack 0
 21064  00428E                     _EUSART1_Receive_ISR:
 21065                           	opt callstack 15
 21066  00428E                     
 21067                           ;mcc_generated_files/eusart1.c: 223:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 21068  00428E  0E00               	movlw	low _eusart1RxStatusBuffer
 21069  004290  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
 21070  004292  6ED9               	movwf	fsr2l,c
 21071  004294  6ADA               	clrf	fsr2h,c
 21072  004296  0E03               	movlw	high _eusart1RxStatusBuffer
 21073  004298  22DA               	addwfc	fsr2h,f,c
 21074  00429A  0E00               	movlw	0
 21075  00429C  6EDF               	movwf	indf2,c
 21076  00429E                     
 21077                           ;mcc_generated_files/eusart1.c: 225:     if(RC1STAbits.FERR){
 21078  00429E  A49D               	btfss	157,2,c	;volatile
 21079  0042A0  EF54  F021         	goto	i2u522_41
 21080  0042A4  EF56  F021         	goto	i2u522_40
 21081  0042A8                     i2u522_41:
 21082  0042A8  EF6B  F021         	goto	i2l5936
 21083  0042AC                     i2u522_40:
 21084  0042AC                     
 21085                           ;mcc_generated_files/eusart1.c: 226:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 21086  0042AC  0E00               	movlw	low _eusart1RxStatusBuffer
 21087  0042AE  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
 21088  0042B0  6ED9               	movwf	fsr2l,c
 21089  0042B2  6ADA               	clrf	fsr2h,c
 21090  0042B4  0E03               	movlw	high _eusart1RxStatusBuffer
 21091  0042B6  22DA               	addwfc	fsr2h,f,c
 21092  0042B8  0103               	movlb	3	; () banked
 21093  0042BA  82DF               	bsf	indf2,1,c
 21094  0042BC                     
 21095                           ; BSR set to: 3
 21096                           ;mcc_generated_files/eusart1.c: 227:         EUSART1_FramingErrorHandler();
 21097  0042BC  D802               	call	i2u523_48
 21098  0042BE  EF6B  F021         	goto	i2u523_49
 21099  0042C2                     i2u523_48:
 21100  0042C2  0005               	push	
 21101  0042C4  6EFA               	movwf	pclath,c
 21102  0042C6  0101               	movlb	1	; () banked
 21103  0042C8  51F7               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
 21104  0042CA  6EFD               	movwf	tosl,c
 21105  0042CC  51F8               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
 21106  0042CE  6EFE               	movwf	tosh,c
 21107  0042D0  6AFF               	clrf	tosu,c
 21108  0042D2  50FA               	movf	pclath,w,c
 21109  0042D4  0012               	return		;indir
 21110  0042D6                     i2u523_49:
 21111  0042D6                     i2l5936:
 21112                           
 21113                           ;mcc_generated_files/eusart1.c: 230:     if(RC1STAbits.OERR){
 21114  0042D6  A29D               	btfss	157,1,c	;volatile
 21115  0042D8  EF70  F021         	goto	i2u524_41
 21116  0042DC  EF72  F021         	goto	i2u524_40
 21117  0042E0                     i2u524_41:
 21118  0042E0  EF87  F021         	goto	i2l5942
 21119  0042E4                     i2u524_40:
 21120  0042E4                     
 21121                           ;mcc_generated_files/eusart1.c: 231:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 21122  0042E4  0E00               	movlw	low _eusart1RxStatusBuffer
 21123  0042E6  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
 21124  0042E8  6ED9               	movwf	fsr2l,c
 21125  0042EA  6ADA               	clrf	fsr2h,c
 21126  0042EC  0E03               	movlw	high _eusart1RxStatusBuffer
 21127  0042EE  22DA               	addwfc	fsr2h,f,c
 21128  0042F0  0103               	movlb	3	; () banked
 21129  0042F2  84DF               	bsf	indf2,2,c
 21130  0042F4                     
 21131                           ; BSR set to: 3
 21132                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_OverrunErrorHandler();
 21133  0042F4  D802               	call	i2u525_48
 21134  0042F6  EF87  F021         	goto	i2u525_49
 21135  0042FA                     i2u525_48:
 21136  0042FA  0005               	push	
 21137  0042FC  6EFA               	movwf	pclath,c
 21138  0042FE  0101               	movlb	1	; () banked
 21139  004300  51F5               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
 21140  004302  6EFD               	movwf	tosl,c
 21141  004304  51F6               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
 21142  004306  6EFE               	movwf	tosh,c
 21143  004308  6AFF               	clrf	tosu,c
 21144  00430A  50FA               	movf	pclath,w,c
 21145  00430C  0012               	return		;indir
 21146  00430E                     i2u525_49:
 21147  00430E                     i2l5942:
 21148                           
 21149                           ;mcc_generated_files/eusart1.c: 235:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 21150  00430E  0E00               	movlw	low _eusart1RxStatusBuffer
 21151  004310  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
 21152  004312  6ED9               	movwf	fsr2l,c
 21153  004314  6ADA               	clrf	fsr2h,c
 21154  004316  0E03               	movlw	high _eusart1RxStatusBuffer
 21155  004318  22DA               	addwfc	fsr2h,f,c
 21156  00431A  50DF               	movf	indf2,w,c
 21157  00431C  B4D8               	btfsc	status,2,c
 21158  00431E  EF93  F021         	goto	i2u526_41
 21159  004322  EF95  F021         	goto	i2u526_40
 21160  004326                     i2u526_41:
 21161  004326  EFA4  F021         	goto	i2l5946
 21162  00432A                     i2u526_40:
 21163  00432A                     
 21164                           ;mcc_generated_files/eusart1.c: 236:         EUSART1_ErrorHandler();
 21165  00432A  D802               	call	i2u527_48
 21166  00432C  EFA2  F021         	goto	i2u527_49
 21167  004330                     i2u527_48:
 21168  004330  0005               	push	
 21169  004332  6EFA               	movwf	pclath,c
 21170  004334  0101               	movlb	1	; () banked
 21171  004336  51F3               	movf	_EUSART1_ErrorHandler& (0+255),w,b
 21172  004338  6EFD               	movwf	tosl,c
 21173  00433A  51F4               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
 21174  00433C  6EFE               	movwf	tosh,c
 21175  00433E  6AFF               	clrf	tosu,c
 21176  004340  50FA               	movf	pclath,w,c
 21177  004342  0012               	return		;indir
 21178  004344                     i2u527_49:
 21179                           
 21180                           ;mcc_generated_files/eusart1.c: 237:     } else {
 21181  004344  EFA6  F021         	goto	i2l491
 21182  004348                     i2l5946:
 21183                           
 21184                           ;mcc_generated_files/eusart1.c: 238:         EUSART1_RxDataHandler();
 21185  004348  EC74  F028         	call	_EUSART1_RxDataHandler	;wreg free
 21186  00434C                     i2l491:
 21187  00434C  0012               	return		;funcret
 21188  00434E                     __end_of_EUSART1_Receive_ISR:
 21189                           	opt callstack 0
 21190                           
 21191 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 21192 ;; Defined at:
 21193 ;;		line 256 in file "mcc_generated_files/eusart1.c"
 21194 ;; Parameters:    Size  Location     Type
 21195 ;;		None
 21196 ;; Auto vars:     Size  Location     Type
 21197 ;;		None
 21198 ;; Return value:  Size  Location     Type
 21199 ;;                  1    wreg      void 
 21200 ;; Registers used:
 21201 ;;		None
 21202 ;; Tracked objects:
 21203 ;;		On entry : 0/0
 21204 ;;		On exit  : 0/0
 21205 ;;		Unchanged: 0/0
 21206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21211 ;;Total ram usage:        0 bytes
 21212 ;; Hardware stack levels used:    1
 21213 ;; This function calls:
 21214 ;;		Nothing
 21215 ;; This function is called by:
 21216 ;;		_EUSART1_Initialize
 21217 ;;		_EUSART1_Receive_ISR
 21218 ;; This function uses a non-reentrant model
 21219 ;;
 21220                           
 21221                           	psect	text96
 21222  005316                     __ptext96:
 21223                           	opt callstack 0
 21224  005316                     _EUSART1_DefaultOverrunErrorHandler:
 21225                           	opt callstack 16
 21226  005316                     
 21227                           ;mcc_generated_files/eusart1.c: 259:     RC1STAbits.CREN = 0;
 21228  005316  989D               	bcf	157,4,c	;volatile
 21229                           
 21230                           ;mcc_generated_files/eusart1.c: 260:     RC1STAbits.CREN = 1;
 21231  005318  889D               	bsf	157,4,c	;volatile
 21232  00531A  0012               	return		;funcret
 21233  00531C                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 21234                           	opt callstack 0
 21235                           
 21236 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 21237 ;; Defined at:
 21238 ;;		line 254 in file "mcc_generated_files/eusart1.c"
 21239 ;; Parameters:    Size  Location     Type
 21240 ;;		None
 21241 ;; Auto vars:     Size  Location     Type
 21242 ;;		None
 21243 ;; Return value:  Size  Location     Type
 21244 ;;                  1    wreg      void 
 21245 ;; Registers used:
 21246 ;;		None
 21247 ;; Tracked objects:
 21248 ;;		On entry : 0/0
 21249 ;;		On exit  : 0/0
 21250 ;;		Unchanged: 0/0
 21251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21256 ;;Total ram usage:        0 bytes
 21257 ;; Hardware stack levels used:    1
 21258 ;; This function calls:
 21259 ;;		Nothing
 21260 ;; This function is called by:
 21261 ;;		_EUSART1_Initialize
 21262 ;;		_EUSART1_Receive_ISR
 21263 ;; This function uses a non-reentrant model
 21264 ;;
 21265                           
 21266                           	psect	text97
 21267  00532C                     __ptext97:
 21268                           	opt callstack 0
 21269  00532C                     _EUSART1_DefaultFramingErrorHandler:
 21270                           	opt callstack 16
 21271  00532C  0012               	return		;funcret
 21272  00532E                     __end_of_EUSART1_DefaultFramingErrorHandler:
 21273                           	opt callstack 0
 21274                           
 21275 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 21276 ;; Defined at:
 21277 ;;		line 264 in file "mcc_generated_files/eusart1.c"
 21278 ;; Parameters:    Size  Location     Type
 21279 ;;		None
 21280 ;; Auto vars:     Size  Location     Type
 21281 ;;		None
 21282 ;; Return value:  Size  Location     Type
 21283 ;;                  1    wreg      void 
 21284 ;; Registers used:
 21285 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21286 ;; Tracked objects:
 21287 ;;		On entry : 0/0
 21288 ;;		On exit  : 0/0
 21289 ;;		Unchanged: 0/0
 21290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21295 ;;Total ram usage:        0 bytes
 21296 ;; Hardware stack levels used:    1
 21297 ;; Hardware stack levels required when called:    1
 21298 ;; This function calls:
 21299 ;;		_EUSART1_RxDataHandler
 21300 ;; This function is called by:
 21301 ;;		_EUSART1_Initialize
 21302 ;;		_EUSART1_Receive_ISR
 21303 ;; This function uses a non-reentrant model
 21304 ;;
 21305                           
 21306                           	psect	text98
 21307  00531C                     __ptext98:
 21308                           	opt callstack 0
 21309  00531C                     _EUSART1_DefaultErrorHandler:
 21310                           	opt callstack 15
 21311  00531C                     
 21312                           ;mcc_generated_files/eusart1.c: 265:     EUSART1_RxDataHandler();
 21313  00531C  EC74  F028         	call	_EUSART1_RxDataHandler	;wreg free
 21314  005320  0012               	return		;funcret
 21315  005322                     __end_of_EUSART1_DefaultErrorHandler:
 21316                           	opt callstack 0
 21317                           
 21318 ;; *************** function _EUSART1_RxDataHandler *****************
 21319 ;; Defined at:
 21320 ;;		line 244 in file "mcc_generated_files/eusart1.c"
 21321 ;; Parameters:    Size  Location     Type
 21322 ;;		None
 21323 ;; Auto vars:     Size  Location     Type
 21324 ;;		None
 21325 ;; Return value:  Size  Location     Type
 21326 ;;                  1    wreg      void 
 21327 ;; Registers used:
 21328 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21329 ;; Tracked objects:
 21330 ;;		On entry : 0/0
 21331 ;;		On exit  : 0/0
 21332 ;;		Unchanged: 0/0
 21333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21338 ;;Total ram usage:        0 bytes
 21339 ;; Hardware stack levels used:    1
 21340 ;; This function calls:
 21341 ;;		Nothing
 21342 ;; This function is called by:
 21343 ;;		_EUSART1_Receive_ISR
 21344 ;;		_EUSART1_DefaultErrorHandler
 21345 ;; This function uses a non-reentrant model
 21346 ;;
 21347                           
 21348                           	psect	text99
 21349  0050E8                     __ptext99:
 21350                           	opt callstack 0
 21351  0050E8                     _EUSART1_RxDataHandler:
 21352                           	opt callstack 16
 21353  0050E8                     
 21354                           ;mcc_generated_files/eusart1.c: 246:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 21355  0050E8  0E00               	movlw	low _eusart1RxBuffer
 21356  0050EA  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
 21357  0050EC  6ED9               	movwf	fsr2l,c
 21358  0050EE  6ADA               	clrf	fsr2h,c
 21359  0050F0  0E04               	movlw	high _eusart1RxBuffer
 21360  0050F2  22DA               	addwfc	fsr2h,f,c
 21361  0050F4  CF99 FFDF          	movff	3993,indf2	;volatile
 21362  0050F8  2A59               	incf	_eusart1RxHead^0,f,c	;volatile
 21363  0050FA                     
 21364                           ;mcc_generated_files/eusart1.c: 247:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 21365  0050FA  0E63               	movlw	99
 21366  0050FC  6459               	cpfsgt	_eusart1RxHead^0,c	;volatile
 21367  0050FE  EF83  F028         	goto	i2u452_41
 21368  005102  EF85  F028         	goto	i2u452_40
 21369  005106                     i2u452_41:
 21370  005106  EF87  F028         	goto	i2l5322
 21371  00510A                     i2u452_40:
 21372  00510A                     
 21373                           ;mcc_generated_files/eusart1.c: 248:     {;mcc_generated_files/eusart1.c: 249:         e
      +                          usart1RxHead = 0;
 21374  00510A  0E00               	movlw	0
 21375  00510C  6E59               	movwf	_eusart1RxHead^0,c	;volatile
 21376  00510E                     i2l5322:
 21377                           
 21378                           ;mcc_generated_files/eusart1.c: 251:     eusart1RxCount++;
 21379  00510E  0100               	movlb	0	; () banked
 21380  005110  2BE0               	incf	_eusart1RxCount& (0+255),f,b	;volatile
 21381  005112                     
 21382                           ; BSR set to: 0
 21383  005112  0012               	return		;funcret
 21384  005114                     __end_of_EUSART1_RxDataHandler:
 21385                           	opt callstack 0
 21386                           
 21387                           	psect	text100
 21388  000000                     __ptext100:
 21389                           	opt callstack 0
 21390  000000                     
 21391                           	psect	rparam
 21392  0000                     
 21393                           	psect	temp
 21394  00005B                     btemp:
 21395                           	opt callstack 0
 21396  00005B                     	ds	1
 21397  0000                     int$flags	set	btemp
 21398  0000                     wtemp8	set	btemp+1
 21399  0000                     ttemp5	set	btemp+1
 21400  0000                     ttemp6	set	btemp+4
 21401  0000                     ttemp7	set	btemp+8
 21402                           tosu	equ	0xFFF
 21403                           tosh	equ	0xFFE
 21404                           tosl	equ	0xFFD
 21405                           stkptr	equ	0xFFC
 21406                           pclatu	equ	0xFFB
 21407                           pclath	equ	0xFFA
 21408                           pcl	equ	0xFF9
 21409                           tblptru	equ	0xFF8
 21410                           tblptrh	equ	0xFF7
 21411                           tblptrl	equ	0xFF6
 21412                           tablat	equ	0xFF5
 21413                           prodh	equ	0xFF4
 21414                           prodl	equ	0xFF3
 21415                           indf0	equ	0xFEF
 21416                           postinc0	equ	0xFEE
 21417                           postdec0	equ	0xFED
 21418                           preinc0	equ	0xFEC
 21419                           plusw0	equ	0xFEB
 21420                           fsr0h	equ	0xFEA
 21421                           fsr0l	equ	0xFE9
 21422                           wreg	equ	0xFE8
 21423                           indf1	equ	0xFE7
 21424                           postinc1	equ	0xFE6
 21425                           postdec1	equ	0xFE5
 21426                           preinc1	equ	0xFE4
 21427                           plusw1	equ	0xFE3
 21428                           fsr1h	equ	0xFE2
 21429                           fsr1l	equ	0xFE1
 21430                           bsr	equ	0xFE0
 21431                           indf2	equ	0xFDF
 21432                           postinc2	equ	0xFDE
 21433                           postdec2	equ	0xFDD
 21434                           preinc2	equ	0xFDC
 21435                           plusw2	equ	0xFDB
 21436                           fsr2h	equ	0xFDA
 21437                           fsr2l	equ	0xFD9
 21438                           status	equ	0xFD8


Data Sizes:
    Strings     3408
    Constant    0
    Data        460
    BSS         522
    Persistent  22
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      90
    BANK0           160    109     160
    BANK1           256     71     256
    BANK2           256      0     253
    BANK3           256      0     247
    BANK4           256      0     164
    BANK5           256      0     100
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK2[32]), ValidateCmd@ConfName_1831(BANK1[20]), 
		 -> ValidateCmd@ConfName_1827(BANK1[20]), ValidateCmd@ConfName(BANK1[20]), STR_102(CODE[9]), STR_101(CODE[12]), 
		 -> InitialiseString@RevNum(BANK0[2]), InitialiseString@PartNum(BANK0[19]), InitialiseString@SerialNum(BANK0[11]), Command(BANK1[16]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK2[32]), ValidateCmd@ConfName_1831(BANK1[20]), 
		 -> ValidateCmd@ConfName_1827(BANK1[20]), ValidateCmd@ConfName(BANK1[20]), STR_102(CODE[9]), STR_101(CODE[12]), 
		 -> InitialiseString@RevNum(BANK0[2]), InitialiseString@PartNum(BANK0[19]), InitialiseString@SerialNum(BANK0[11]), Command(BANK1[16]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_134(CODE[1]), STR_129(CODE[1]), ReadRX232@temp(COMRAM[2]), STR_10(CODE[1]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_134(CODE[1]), STR_129(CODE[1]), ReadRX232@temp(COMRAM[2]), STR_10(CODE[1]), 

    strcmp@r	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_145(CODE[4]), STR_143(CODE[5]), STR_141(CODE[7]), STR_139(CODE[2]), 
		 -> STR_137(CODE[6]), STR_94(CODE[4]), STR_93(CODE[5]), STR_92(CODE[7]), 

    strcmp@l	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_91(CODE[4]), STR_89(CODE[5]), STR_87(CODE[7]), Command(BANK1[16]), 

    strcat@src	PTR const unsigned char  size(2) Largest target is 2
		 -> ReadRX232@temp(COMRAM[2]), 

    strcat@dest	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 102
		 -> STR_135(CODE[12]), STR_133(CODE[13]), STR_132(CODE[17]), STR_131(CODE[15]), 
		 -> STR_130(CODE[33]), STR_128(CODE[38]), STR_127(CODE[58]), STR_126(CODE[19]), 
		 -> STR_125(CODE[18]), STR_124(CODE[4]), STR_123(CODE[16]), STR_122(CODE[102]), 
		 -> STR_121(CODE[32]), STR_120(CODE[33]), STR_119(CODE[37]), STR_118(CODE[44]), 
		 -> STR_117(CODE[22]), STR_116(CODE[75]), STR_115(CODE[67]), STR_114(CODE[75]), 
		 -> STR_113(CODE[68]), STR_112(CODE[69]), STR_111(CODE[54]), STR_110(CODE[52]), 
		 -> STR_109(CODE[53]), STR_108(CODE[38]), STR_107(CODE[51]), STR_106(CODE[73]), 
		 -> STR_105(CODE[42]), STR_104(CODE[36]), STR_103(CODE[34]), STR_100(CODE[42]), 
		 -> STR_99(CODE[22]), STR_98(CODE[21]), STR_97(CODE[20]), STR_96(CODE[19]), 
		 -> STR_95(CODE[40]), STR_85(CODE[33]), STR_84(CODE[53]), STR_83(CODE[52]), 
		 -> STR_82(CODE[26]), STR_81(CODE[4]), STR_80(CODE[24]), STR_79(CODE[30]), 
		 -> STR_78(CODE[30]), STR_77(CODE[37]), STR_76(CODE[37]), STR_75(CODE[38]), 
		 -> STR_74(CODE[38]), STR_73(CODE[54]), STR_72(CODE[36]), STR_71(CODE[32]), 
		 -> STR_70(CODE[32]), STR_69(CODE[35]), STR_68(CODE[54]), STR_67(CODE[38]), 
		 -> STR_66(CODE[54]), STR_65(CODE[36]), STR_64(CODE[19]), STR_63(CODE[21]), 
		 -> STR_62(CODE[25]), STR_61(CODE[54]), STR_60(CODE[21]), STR_59(CODE[25]), 
		 -> STR_58(CODE[15]), STR_57(CODE[30]), STR_56(CODE[52]), STR_55(CODE[28]), 
		 -> STR_54(CODE[30]), STR_53(CODE[52]), STR_52(CODE[25]), STR_51(CODE[30]), 
		 -> STR_50(CODE[52]), STR_49(CODE[25]), STR_48(CODE[30]), STR_47(CODE[52]), 
		 -> STR_46(CODE[23]), STR_45(CODE[30]), STR_44(CODE[42]), STR_43(CODE[21]), 
		 -> STR_42(CODE[30]), STR_41(CODE[52]), STR_40(CODE[21]), STR_39(CODE[30]), 
		 -> STR_38(CODE[52]), STR_37(CODE[25]), STR_36(CODE[21]), STR_35(CODE[25]), 
		 -> STR_34(CODE[30]), STR_33(CODE[52]), STR_32(CODE[3]), STR_31(CODE[32]), 
		 -> STR_30(CODE[32]), STR_29(CODE[35]), STR_28(CODE[66]), STR_27(CODE[38]), 
		 -> STR_26(CODE[37]), STR_25(CODE[37]), STR_24(CODE[38]), STR_23(CODE[38]), 
		 -> STR_22(CODE[55]), STR_21(CODE[36]), STR_20(CODE[30]), STR_19(CODE[30]), 
		 -> STR_18(CODE[37]), STR_17(CODE[37]), STR_16(CODE[38]), STR_15(CODE[38]), 
		 -> STR_14(CODE[54]), STR_13(CODE[36]), STR_12(CODE[21]), STR_11(CODE[27]), 
		 -> STR_9(CODE[19]), STR_8(CODE[16]), STR_7(CODE[28]), STR_6(CODE[44]), 
		 -> STR_5(CODE[33]), STR_4(CODE[34]), STR_3(CODE[58]), STR_2(CODE[53]), 
		 -> STR_1(CODE[17]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2459_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    memmove@d1	PTR void  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    memmove@d	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    memmove@s1	PTR const void  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    memmove@s	PTR const unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 102
		 -> STR_135(CODE[12]), STR_133(CODE[13]), STR_132(CODE[17]), STR_131(CODE[15]), 
		 -> STR_130(CODE[33]), STR_128(CODE[38]), STR_127(CODE[58]), STR_126(CODE[19]), 
		 -> STR_125(CODE[18]), STR_124(CODE[4]), STR_123(CODE[16]), STR_122(CODE[102]), 
		 -> STR_121(CODE[32]), STR_120(CODE[33]), STR_119(CODE[37]), STR_118(CODE[44]), 
		 -> STR_117(CODE[22]), STR_116(CODE[75]), STR_115(CODE[67]), STR_114(CODE[75]), 
		 -> STR_113(CODE[68]), STR_112(CODE[69]), STR_111(CODE[54]), STR_110(CODE[52]), 
		 -> STR_109(CODE[53]), STR_108(CODE[38]), STR_107(CODE[51]), STR_106(CODE[73]), 
		 -> STR_105(CODE[42]), STR_104(CODE[36]), STR_103(CODE[34]), STR_100(CODE[42]), 
		 -> STR_99(CODE[22]), STR_98(CODE[21]), STR_97(CODE[20]), STR_96(CODE[19]), 
		 -> STR_95(CODE[40]), STR_85(CODE[33]), STR_84(CODE[53]), STR_83(CODE[52]), 
		 -> STR_82(CODE[26]), STR_81(CODE[4]), STR_80(CODE[24]), STR_79(CODE[30]), 
		 -> STR_78(CODE[30]), STR_77(CODE[37]), STR_76(CODE[37]), STR_75(CODE[38]), 
		 -> STR_74(CODE[38]), STR_73(CODE[54]), STR_72(CODE[36]), STR_71(CODE[32]), 
		 -> STR_70(CODE[32]), STR_69(CODE[35]), STR_68(CODE[54]), STR_67(CODE[38]), 
		 -> STR_66(CODE[54]), STR_65(CODE[36]), STR_64(CODE[19]), STR_63(CODE[21]), 
		 -> STR_62(CODE[25]), STR_61(CODE[54]), STR_60(CODE[21]), STR_59(CODE[25]), 
		 -> STR_58(CODE[15]), STR_57(CODE[30]), STR_56(CODE[52]), STR_55(CODE[28]), 
		 -> STR_54(CODE[30]), STR_53(CODE[52]), STR_52(CODE[25]), STR_51(CODE[30]), 
		 -> STR_50(CODE[52]), STR_49(CODE[25]), STR_48(CODE[30]), STR_47(CODE[52]), 
		 -> STR_46(CODE[23]), STR_45(CODE[30]), STR_44(CODE[42]), STR_43(CODE[21]), 
		 -> STR_42(CODE[30]), STR_41(CODE[52]), STR_40(CODE[21]), STR_39(CODE[30]), 
		 -> STR_38(CODE[52]), STR_37(CODE[25]), STR_36(CODE[21]), STR_35(CODE[25]), 
		 -> STR_34(CODE[30]), STR_33(CODE[52]), STR_32(CODE[3]), STR_31(CODE[32]), 
		 -> STR_30(CODE[32]), STR_29(CODE[35]), STR_28(CODE[66]), STR_27(CODE[38]), 
		 -> STR_26(CODE[37]), STR_25(CODE[37]), STR_24(CODE[38]), STR_23(CODE[38]), 
		 -> STR_22(CODE[55]), STR_21(CODE[36]), STR_20(CODE[30]), STR_19(CODE[30]), 
		 -> STR_18(CODE[37]), STR_17(CODE[37]), STR_16(CODE[38]), STR_15(CODE[38]), 
		 -> STR_14(CODE[54]), STR_13(CODE[36]), STR_12(CODE[21]), STR_11(CODE[27]), 
		 -> STR_9(CODE[19]), STR_8(CODE[16]), STR_7(CODE[28]), STR_6(CODE[44]), 
		 -> STR_5(CODE[33]), STR_4(CODE[34]), STR_3(CODE[58]), STR_2(CODE[53]), 
		 -> STR_1(CODE[17]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 102
		 -> STR_135(CODE[12]), STR_133(CODE[13]), STR_132(CODE[17]), STR_131(CODE[15]), 
		 -> STR_130(CODE[33]), STR_128(CODE[38]), STR_127(CODE[58]), STR_126(CODE[19]), 
		 -> STR_125(CODE[18]), STR_124(CODE[4]), STR_123(CODE[16]), STR_122(CODE[102]), 
		 -> STR_121(CODE[32]), STR_120(CODE[33]), STR_119(CODE[37]), STR_118(CODE[44]), 
		 -> STR_117(CODE[22]), STR_116(CODE[75]), STR_115(CODE[67]), STR_114(CODE[75]), 
		 -> STR_113(CODE[68]), STR_112(CODE[69]), STR_111(CODE[54]), STR_110(CODE[52]), 
		 -> STR_109(CODE[53]), STR_108(CODE[38]), STR_107(CODE[51]), STR_106(CODE[73]), 
		 -> STR_105(CODE[42]), STR_104(CODE[36]), STR_103(CODE[34]), STR_100(CODE[42]), 
		 -> STR_99(CODE[22]), STR_98(CODE[21]), STR_97(CODE[20]), STR_96(CODE[19]), 
		 -> STR_95(CODE[40]), STR_85(CODE[33]), STR_84(CODE[53]), STR_83(CODE[52]), 
		 -> STR_82(CODE[26]), STR_81(CODE[4]), STR_80(CODE[24]), STR_79(CODE[30]), 
		 -> STR_78(CODE[30]), STR_77(CODE[37]), STR_76(CODE[37]), STR_75(CODE[38]), 
		 -> STR_74(CODE[38]), STR_73(CODE[54]), STR_72(CODE[36]), STR_71(CODE[32]), 
		 -> STR_70(CODE[32]), STR_69(CODE[35]), STR_68(CODE[54]), STR_67(CODE[38]), 
		 -> STR_66(CODE[54]), STR_65(CODE[36]), STR_64(CODE[19]), STR_63(CODE[21]), 
		 -> STR_62(CODE[25]), STR_61(CODE[54]), STR_60(CODE[21]), STR_59(CODE[25]), 
		 -> STR_58(CODE[15]), STR_57(CODE[30]), STR_56(CODE[52]), STR_55(CODE[28]), 
		 -> STR_54(CODE[30]), STR_53(CODE[52]), STR_52(CODE[25]), STR_51(CODE[30]), 
		 -> STR_50(CODE[52]), STR_49(CODE[25]), STR_48(CODE[30]), STR_47(CODE[52]), 
		 -> STR_46(CODE[23]), STR_45(CODE[30]), STR_44(CODE[42]), STR_43(CODE[21]), 
		 -> STR_42(CODE[30]), STR_41(CODE[52]), STR_40(CODE[21]), STR_39(CODE[30]), 
		 -> STR_38(CODE[52]), STR_37(CODE[25]), STR_36(CODE[21]), STR_35(CODE[25]), 
		 -> STR_34(CODE[30]), STR_33(CODE[52]), STR_32(CODE[3]), STR_31(CODE[32]), 
		 -> STR_30(CODE[32]), STR_29(CODE[35]), STR_28(CODE[66]), STR_27(CODE[38]), 
		 -> STR_26(CODE[37]), STR_25(CODE[37]), STR_24(CODE[38]), STR_23(CODE[38]), 
		 -> STR_22(CODE[55]), STR_21(CODE[36]), STR_20(CODE[30]), STR_19(CODE[30]), 
		 -> STR_18(CODE[37]), STR_17(CODE[37]), STR_16(CODE[38]), STR_15(CODE[38]), 
		 -> STR_14(CODE[54]), STR_13(CODE[36]), STR_12(CODE[21]), STR_11(CODE[27]), 
		 -> STR_9(CODE[19]), STR_8(CODE[16]), STR_7(CODE[28]), STR_6(CODE[44]), 
		 -> STR_5(CODE[33]), STR_4(CODE[34]), STR_3(CODE[58]), STR_2(CODE[53]), 
		 -> STR_1(CODE[17]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 102
		 -> STR_135(CODE[12]), STR_133(CODE[13]), STR_132(CODE[17]), STR_131(CODE[15]), 
		 -> STR_130(CODE[33]), STR_128(CODE[38]), STR_127(CODE[58]), STR_126(CODE[19]), 
		 -> STR_125(CODE[18]), STR_124(CODE[4]), STR_123(CODE[16]), STR_122(CODE[102]), 
		 -> STR_121(CODE[32]), STR_120(CODE[33]), STR_119(CODE[37]), STR_118(CODE[44]), 
		 -> STR_117(CODE[22]), STR_116(CODE[75]), STR_115(CODE[67]), STR_114(CODE[75]), 
		 -> STR_113(CODE[68]), STR_112(CODE[69]), STR_111(CODE[54]), STR_110(CODE[52]), 
		 -> STR_109(CODE[53]), STR_108(CODE[38]), STR_107(CODE[51]), STR_106(CODE[73]), 
		 -> STR_105(CODE[42]), STR_104(CODE[36]), STR_103(CODE[34]), STR_100(CODE[42]), 
		 -> STR_99(CODE[22]), STR_98(CODE[21]), STR_97(CODE[20]), STR_96(CODE[19]), 
		 -> STR_95(CODE[40]), STR_85(CODE[33]), STR_84(CODE[53]), STR_83(CODE[52]), 
		 -> STR_82(CODE[26]), STR_81(CODE[4]), STR_80(CODE[24]), STR_79(CODE[30]), 
		 -> STR_78(CODE[30]), STR_77(CODE[37]), STR_76(CODE[37]), STR_75(CODE[38]), 
		 -> STR_74(CODE[38]), STR_73(CODE[54]), STR_72(CODE[36]), STR_71(CODE[32]), 
		 -> STR_70(CODE[32]), STR_69(CODE[35]), STR_68(CODE[54]), STR_67(CODE[38]), 
		 -> STR_66(CODE[54]), STR_65(CODE[36]), STR_64(CODE[19]), STR_63(CODE[21]), 
		 -> STR_62(CODE[25]), STR_61(CODE[54]), STR_60(CODE[21]), STR_59(CODE[25]), 
		 -> STR_58(CODE[15]), STR_57(CODE[30]), STR_56(CODE[52]), STR_55(CODE[28]), 
		 -> STR_54(CODE[30]), STR_53(CODE[52]), STR_52(CODE[25]), STR_51(CODE[30]), 
		 -> STR_50(CODE[52]), STR_49(CODE[25]), STR_48(CODE[30]), STR_47(CODE[52]), 
		 -> STR_46(CODE[23]), STR_45(CODE[30]), STR_44(CODE[42]), STR_43(CODE[21]), 
		 -> STR_42(CODE[30]), STR_41(CODE[52]), STR_40(CODE[21]), STR_39(CODE[30]), 
		 -> STR_38(CODE[52]), STR_37(CODE[25]), STR_36(CODE[21]), STR_35(CODE[25]), 
		 -> STR_34(CODE[30]), STR_33(CODE[52]), STR_32(CODE[3]), STR_31(CODE[32]), 
		 -> STR_30(CODE[32]), STR_29(CODE[35]), STR_28(CODE[66]), STR_27(CODE[38]), 
		 -> STR_26(CODE[37]), STR_25(CODE[37]), STR_24(CODE[38]), STR_23(CODE[38]), 
		 -> STR_22(CODE[55]), STR_21(CODE[36]), STR_20(CODE[30]), STR_19(CODE[30]), 
		 -> STR_18(CODE[37]), STR_17(CODE[37]), STR_16(CODE[38]), STR_15(CODE[38]), 
		 -> STR_14(CODE[54]), STR_13(CODE[36]), STR_12(CODE[21]), STR_11(CODE[27]), 
		 -> STR_9(CODE[19]), STR_8(CODE[16]), STR_7(CODE[28]), STR_6(CODE[44]), 
		 -> STR_5(CODE[33]), STR_4(CODE[34]), STR_3(CODE[58]), STR_2(CODE[53]), 
		 -> STR_1(CODE[17]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ValidateCmd@ConfName_1831(BANK1[20]), ValidateCmd@ConfName_1827(BANK1[20]), ValidateCmd@ConfName(BANK1[20]), 
		 -> STR_102(CODE[9]), STR_101(CODE[12]), InitialiseString@RevNum(BANK0[2]), InitialiseString@PartNum(BANK0[19]), 
		 -> InitialiseString@SerialNum(BANK0[11]), Command(BANK1[16]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ValidateCmd@ConfName_1831(BANK1[20]), ValidateCmd@ConfName_1827(BANK1[20]), ValidateCmd@ConfName(BANK1[20]), 
		 -> STR_102(CODE[9]), STR_101(CODE[12]), InitialiseString@RevNum(BANK0[2]), InitialiseString@PartNum(BANK0[19]), 
		 -> InitialiseString@SerialNum(BANK0[11]), Command(BANK1[16]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), ValidateCmd@ConfName_1831(BANK1[20]), ValidateCmd@ConfName_1827(BANK1[20]), 
		 -> ValidateCmd@ConfName(BANK1[20]), STR_102(CODE[9]), STR_101(CODE[12]), InitialiseString@RevNum(BANK0[2]), 
		 -> InitialiseString@PartNum(BANK0[19]), InitialiseString@SerialNum(BANK0[11]), Command(BANK1[16]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    SaveCardDat@Name	PTR unsigned char  size(2) Largest target is 20
		 -> ValidateCmd@ConfName_1831(BANK1[20]), ValidateCmd@ConfName_1827(BANK1[20]), ValidateCmd@ConfName(BANK1[20]), 

    sp__memmove	PTR void  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    CardConfigIni@Name	PTR unsigned char  size(2) Largest target is 7
		 -> STR_94(CODE[4]), STR_93(CODE[5]), STR_92(CODE[7]), 

    CardConfigIni@RetNum	PTR unsigned char  size(2) Largest target is 19
		 -> InitialiseString@RevNum(BANK0[2]), InitialiseString@PartNum(BANK0[19]), InitialiseString@SerialNum(BANK0[11]), 

    UART1_Write_string@data	PTR unsigned char  size(2) Largest target is 75
		 -> MBRespon(BANK2[75]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    EUSART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), 

    EUSART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), 

    EUSART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultErrorHandler(), 

    EUSART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultFramingErrorHandler(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_Receive_ISR(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _main->_InitialiseString
    _main->_ReadRX232
    _ValidateCmd->_InitialiseString
    _SaveCardDat->_ClearEEAddRange
    _SaveCardDat->_ReadRX232
    _strcat->_strcpy
    _strcpy->_strlen
    _memmove->_strlen
    _CardConfigIni->_strcmp
    _EUSART2_Initialize->_EUSART2_SetErrorHandler
    _EUSART2_Initialize->_EUSART2_SetFramingErrorHandler
    _EUSART2_Initialize->_EUSART2_SetOverrunErrorHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART2_Write
    _abs->___aomod
    _atoi->_isspace
    _ModbusError->_generateCRC
    _UART1_Write_string->_EUSART1_Write

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_InitialiseString
    _ValidateCmd->_InitialiseString
    _TogDebug->_printf
    _SaveCardDat->_ClearEEAddRange
    _ReadRX232->_printf
    _ClearEEAddRange->_printf
    _InitialiseString->_printf
    _PrintModbus->_printf
    _PrintModRespon->_printf
    _PrintMB400->_printf
    _ModbusRx->_printf
    _ModbusFC10->_printf
    _ModbusFC04->_printf
    _ModbusFC03->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_ValidateCmd

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  701526
                                             68 BANK1      3     3      0
                    _ClearModbusData
                  _ClearModbusRespon
                        _ClearRxBuff
                   _InitialiseString
                        _ModbusError
                         _ModbusFC03
                         _ModbusFC04
                         _ModbusFC10
                           _ModbusRx
                         _PrintMB400
                     _PrintModRespon
                        _PrintModbus
                             _RXMode
                          _ReadRX232
                  _SYSTEM_Initialize
                        _ValidateCmd
                             _printf
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _ValidateCmd                                         68    68      0  232503
                                              0 BANK1     68    68      0
                   _InitialiseString
                        _SaveCardDat
                           _TogDebug
                             _strcmp
 ---------------------------------------------------------------------------------
 (2) _TogDebug                                             0     0      0   43357
                             _printf
 ---------------------------------------------------------------------------------
 (2) _SaveCardDat                                         18    10      8  139167
                                             51 BANK0     17     9      8
                    _ClearEEAddRange
                   _DATAEE_WriteByte
                       _EUSART2_Read
                _EUSART2_is_rx_ready
                          _ReadRX232
                             _printf
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _ReadRX232                                            4     2      2   47673
                                             84 COMRAM     2     2      0
                                             47 BANK0      2     0      2
                       _EUSART2_Read
                      _EUSART2_Write
                _EUSART2_is_rx_ready
                            _memmove
                             _printf
                             _strcat
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strcat                                               4     0      4    2077
                                             18 COMRAM     4     0      4
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strcpy                                              10     6      4     857
                                              8 COMRAM    10     6      4
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (4) _memmove                                             12     6      6     791
                                              8 COMRAM    12     6      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (4) _EUSART2_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EUSART2_Read                                         1     1      0      37
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ClearEEAddRange                                      6     2      4   44216
                                             84 COMRAM     2     2      0
                                             47 BANK0      4     0      4
                   _DATAEE_WriteByte
                             _printf
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     4     1      3     487
                                              4 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (2) _InitialiseString                                    64    64      0   48153
                                             84 COMRAM     2     2      0
                                             47 BANK0     62    62      0
           _ADCC_GetSingleConversion
                      _CardConfigIni
                             _printf
 ---------------------------------------------------------------------------------
 (3) _CardConfigIni                                       16     8      8    3759
                                              9 COMRAM    16     8      8
                    _DATAEE_ReadByte
                             _strcmp
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               5     1      4    1601
                                              4 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) _DATAEE_ReadByte                                      2     0      2     242
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1210
   _ADCC_DisableContinuousConversion
                    _ADCC_Initialize
                 _EUSART1_Initialize
                 _EUSART2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     605
            _EUSART2_SetErrorHandler
     _EUSART2_SetFramingErrorHandler
     _EUSART2_SetOverrunErrorHandler
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetOverrunErrorHandler                       2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetFramingErrorHandler                       2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetErrorHandler                              2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     605
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_DisableContinuousConversion                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PrintModbus                                          9     9      0   43778
                                             47 BANK0      9     9      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _PrintModRespon                                       7     7      0   43846
                                             47 BANK0      7     7      0
                 _EUSART2_is_tx_done
                _EUSART2_is_tx_ready
                             _printf
 ---------------------------------------------------------------------------------
 (2) _EUSART2_is_tx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_is_tx_done                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PrintMB400                                           3     3      0   44081
                                             84 COMRAM     1     1      0
                                             47 BANK0      2     2      0
                            ___awdiv
                             _printf
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     625
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _ModbusRx                                             1     1      0   44021
                                             84 COMRAM     1     1      0
                  _AddRxBuffToModBus
                    _ClearModbusData
                        _ClearRxBuff
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                             _RXMode
                           _checkCRC
                             _printf
 ---------------------------------------------------------------------------------
 (2) _checkCRC                                            15    15      0     383
                                              4 COMRAM    15    15      0
 ---------------------------------------------------------------------------------
 (1) _RXMode                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         1     1      0      37
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ClearRxBuff                                          3     3      0      71
                                              4 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _ClearModbusData                                      2     2      0     102
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _AddRxBuffToModBus                                    3     3      0      71
                                              4 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ModbusFC10                                          11    11      0   49465
                                             47 BANK0     11    11      0
                        _ModbusError
                 _UART1_Write_string
                        _generateCRC
                             _printf
 ---------------------------------------------------------------------------------
 (1) _ModbusFC04                                          11    11      0   49815
                                             47 BANK0     11    11      0
           _ADCC_GetSingleConversion
                        _ModbusError
                 _UART1_Write_string
                        _generateCRC
                             _printf
 ---------------------------------------------------------------------------------
 (3) _ADCC_GetSingleConversion                             5     3      2      31
                                              4 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ModbusFC03                                           9     9      0   49360
                                             47 BANK0      9     9      0
                        _ModbusError
                 _UART1_Write_string
                        _generateCRC
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              18     4     14   43357
                                             29 BANK0     18     4     14
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   32362
                                             82 COMRAM     2     2      0
                                             23 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           45    39      6   31799
                                             72 COMRAM    10     4      6
                                              0 BANK0     23    23      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    7787
                                             33 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     512
                                             10 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    7169
                                             33 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     412
                                              4 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     421
                                              4 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _stoa                                                22    18      4    3362
                                             15 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    8023
                                             33 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    5757
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     940
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    2077
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1577
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      93
                                              5 COMRAM     1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART2_Write                                        1     1      0      62
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1815
                                             11 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     712
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _ModbusError                                          4     2      2    3129
                                             19 COMRAM     4     2      2
                 _UART1_Write_string
                        _generateCRC
 ---------------------------------------------------------------------------------
 (2) _generateCRC                                         15    12      3    1823
                                              4 COMRAM    15    12      3
 ---------------------------------------------------------------------------------
 (2) _UART1_Write_string                                   7     3      4     912
                                              5 COMRAM     7     3      4
                      _EUSART1_Write
                 _EUSART1_is_tx_done
                _EUSART1_is_tx_ready
                             _TXMode
 ---------------------------------------------------------------------------------
 (3) _TXMode                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART1_is_tx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART1_is_tx_done                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      62
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ClearModbusRespon                                    2     2      0     102
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManager                          4     4      0       0
                                              0 COMRAM     4     4      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                _EUSART2_Receive_ISR *
               _EUSART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (14) _EUSART2_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART2_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART2_DefaultErrorHandler *
 _EUSART2_DefaultFramingErrorHandler *
 _EUSART2_DefaultOverrunErrorHandler *
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART2_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART2_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART2_DefaultErrorHandler                         0     0      0       0
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART2_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearModbusData
   _ClearModbusRespon
   _ClearRxBuff
   _InitialiseString
     _ADCC_GetSingleConversion
     _CardConfigIni
       _DATAEE_ReadByte
       _strcmp
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _ModbusError
     _UART1_Write_string
       _EUSART1_Write
       _EUSART1_is_tx_done
       _EUSART1_is_tx_ready
       _TXMode
     _generateCRC
   _ModbusFC03
     _ModbusError
       _UART1_Write_string
         _EUSART1_Write
         _EUSART1_is_tx_done
         _EUSART1_is_tx_ready
         _TXMode
       _generateCRC
     _UART1_Write_string
       _EUSART1_Write
       _EUSART1_is_tx_done
       _EUSART1_is_tx_ready
       _TXMode
     _generateCRC
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _ModbusFC04
     _ADCC_GetSingleConversion
     _ModbusError
       _UART1_Write_string
         _EUSART1_Write
         _EUSART1_is_tx_done
         _EUSART1_is_tx_ready
         _TXMode
       _generateCRC
     _UART1_Write_string
       _EUSART1_Write
       _EUSART1_is_tx_done
       _EUSART1_is_tx_ready
       _TXMode
     _generateCRC
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _ModbusFC10
     _ModbusError
       _UART1_Write_string
         _EUSART1_Write
         _EUSART1_is_tx_done
         _EUSART1_is_tx_ready
         _TXMode
       _generateCRC
     _UART1_Write_string
       _EUSART1_Write
       _EUSART1_is_tx_done
       _EUSART1_is_tx_ready
       _TXMode
     _generateCRC
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _ModbusRx
     _AddRxBuffToModBus
     _ClearModbusData
     _ClearRxBuff
     _EUSART1_Read
     _EUSART1_is_rx_ready
     _RXMode
     _checkCRC
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _PrintMB400
     ___awdiv
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _PrintModRespon
     _EUSART2_is_tx_done
     _EUSART2_is_tx_ready
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _PrintModbus
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _RXMode
   _ReadRX232
     _EUSART2_Read
     _EUSART2_Write
     _EUSART2_is_rx_ready
     _memmove
       _strlen (ARG)
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
     _strcat
       _strcpy
         _strlen (ARG)
       _strlen
     _strlen
   _SYSTEM_Initialize
     _ADCC_DisableContinuousConversion
     _ADCC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetErrorHandler
       _EUSART2_SetFramingErrorHandler
       _EUSART2_SetOverrunErrorHandler
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _ValidateCmd
     _InitialiseString
       _ADCC_GetSingleConversion
       _CardConfigIni
         _DATAEE_ReadByte
         _strcmp
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _SaveCardDat
       _ClearEEAddRange
         _DATAEE_WriteByte
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
               _fputc
                 _putch
                   _EUSART2_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _EUSART2_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
                 _toupper
                   _islower
       _DATAEE_WriteByte
       _EUSART2_Read
       _EUSART2_is_rx_ready
       _ReadRX232
         _EUSART2_Read
         _EUSART2_Write
         _EUSART2_is_rx_ready
         _memmove
           _strlen (ARG)
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
               _fputc
                 _putch
                   _EUSART2_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _EUSART2_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
                 _toupper
                   _islower
         _strcat
           _strcpy
             _strlen (ARG)
           _strlen
         _strlen
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
       _strcpy
         _strlen (ARG)
       _strlen
     _TogDebug
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _strcmp
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART2_Write
             _fputs
               _fputc
                 _putch
                   _EUSART2_Write
             _strlen
         _fputc
           _putch
             _EUSART2_Write
         _isdigit
         _stoa
           _fputc
             _putch
               _EUSART2_Write
           _strlen
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _EUSART2_Write
             _fputs
               _fputc
                 _putch
                   _EUSART2_Write
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART2_Write
             _fputs
               _fputc
                 _putch
                   _EUSART2_Write
             _strlen
           _toupper
             _islower
   _strcpy
     _strlen (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _EUSART2_Receive_ISR *
     Absolute function(Fake) *
     _EUSART2_DefaultErrorHandler *
       _EUSART2_RxDataHandler
     _EUSART2_DefaultFramingErrorHandler *
     _EUSART2_DefaultOverrunErrorHandler *
     _EUSART2_RxDataHandler *
   _EUSART2_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      64      16       39.1%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      A4      14       64.1%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      F7      12       96.5%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      FD      10       98.8%
BITBANK1           100      0       0       7        0.0%
BANK1              100     47     100       8      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6D      A0       5      100.0%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     4F6       6        0.0%
DATA                 0      0     4F6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Apr 03 00:07:14 2021

                      _eusart1TxBufferRemaining 00FE                          ?_EUSART2_RxDataHandler 0001  
                                   __CFG_CP$OFF 000000                                              l81 470E  
                                  ___awdiv@sign 000A                                    generateCRC@i 000E  
                                  generateCRC@j 0010                             ___wmul@multiplicand 0007  
                                   __CFG_LVP$ON 000000                                             l131 51C4  
                                           l300 478C                                             l125 51A8  
                                           l222 51F4                                             l303 5224  
                                           l128 520C                                             l216 4DCC  
                                           l218 4DDA                                             l306 51DC  
                                           l219 4DE6                                             l324 4A20  
                                           l148 5324                                             l325 4A38  
                                           l309 526A                                             l334 52FA  
                                           l510 52DC                                             l319 4B7A  
                                           l328 4A68                                             l513 52F0  
                                           l450 4808                                             l507 52E6  
                                           l363 52B4                                             l604 509A  
                                           l516 52C8                                             l372 5296  
                                           l453 5254                                             l366 52AA  
                                           l607 50BA                                             l519 52D2  
                                           l375 52A0                                             l456 523C  
                                           l369 52BE                                             l474 4A7E  
                                           l475 4A96                                             l459 527E  
                                           l469 4BD2                                             l478 4AC6  
                                           l902 3924                                             l664 5328  
                                           l592 4C74                                             l921 1A38  
                                           l905 39EC                                             l851 530A  
                                           l763 2F7C                                             l860 5306  
                                           l853 530C                                             l918 1944  
                                           l862 5308                                             l758 2E6A  
                                           l855 530E                                             l848 487C  
                                           l873 4D5A                                             l858 5304  
                                           l883 454C                                             l867 4D10  
                                           l972 0DE6                                             l964 0CF2  
                                           l981 2818                                             l894 2018  
                                           l991 3EAA                                             l992 3EB2  
                                           l889 200A                                             l986 3E14  
                                           l899 38FE                                             l989 3E3A  
                                  __CFG_CPD$OFF 000000                    InitialiseString@readDataEven 00C6  
        __end_of_EUSART2_SetFramingErrorHandler 52B6         __size_of_EUSART2_SetFramingErrorHandler 000A  
                _EUSART2_SetFramingErrorHandler 52AC                                             _abs 4F32  
                                           _pad 410C                         __size_of_PMD_Initialize 001C  
                                           tosl 000FFD                                             wreg 000FE8  
                                  __CFG_ZCD$OFF 000000                                            l1005 48EA  
                                          l1031 4EB0                                            l1121 2C0A  
                                          l1034 428C                                            l1026 1D36  
                                          ?_abs 0017                                            l1054 375C  
                                          l1150 3B10                                            l1311 2332  
                                          l1240 4192                                            l2112 5054  
                                          l1320 23D0                                            l1313 233A  
                                          l2106 4C24                                            l1242 41CC  
                                          l1250 20C2                                            l1306 2A1A  
                                          l1162 4B22                                            l1139 1724  
                                          l1156 4FE4                                            l1237 4150  
                                          l2125 3DD6                                            l1181 2DDA  
                                          l1173 2CBA                                            l1334 256C  
                                          l1350 0EDE                                            l2055 4F68  
                                          l1248 20BA                                            l1336 25CE  
                                          l2152 513A                                            l2137 4680  
                                          l2145 4E2A                                            l1185 311E  
                                          l2058 4F70                                            l1507 38C0  
                                          l1291 32B8                                            l1275 31A0  
                                          l1611 4046                                            l1380 5186  
                                          l1268 22F8                                            l2092 4FAC  
                                          l1277 31A8                                            l1365 1370  
                                          l2173 49AC                                            l2086 344A  
                                          l1286 3268                                            l1287 32B0  
                                          l2167 440A                                            l2159 5160  
                                          l1296 2852                                            l2184 4A02  
                                          l1376 4946                                            l2089 3452  
                                          l1377 494E                                            l2098 508C  
                                          l1298 285A                                            l2179 4CC4  
                                          l2195 501C                                            l2189 4A0A  
                                          l1494 35DA                                            l1825 3CFA  
                                          l1818 3CDA                                            l1835 3F82  
                                          l1828 3F62                                            l7000 314C  
                                          l7002 3154                                            l7020 320C  
                                          l7012 31CA                                            l7004 3168  
                                          l7100 2404                                            l7030 327A  
                                          l7022 3242                                            l7014 31DE  
                                          l7006 3170                                            l7102 2416  
                                          l7110 2476                                            ?_pad 0017  
                                          l7032 328E                                            l7024 3246  
                                          l7016 31E2                                            l7008 317E  
                                          l7040 282C                                            l7120 250C  
                                          l7112 2486                                            l8000 401A  
                                          l7034 3292                                            l7026 324A  
                                          l7018 3200                                            l7050 289A  
                                          l7042 2846                                            l7130 2580  
                                          l7122 252A                                            l7114 248C  
                                          l7106 2450                                            l7210 0E6A  
                                          l7202 0E5E                                            l8002 4020  
                                          l7140 32CE                                            l7060 2992  
                                          l7052 2910                                            l7044 2882  
                                          l7036 281A                                            l7132 2590  
                                          l7124 2544                                            l7116 2492  
                                          l7108 2462                                            l7220 0EEE  
                                          l8004 4026                                            l8020 5198  
                                          l8012 5188                                            l7150 3330  
                                          l7142 32D2                                            l7062 29B0  
                                          l7054 2916                                            l7046 288A  
                                          l7038 282A                                            l7134 25A6  
                                          l7126 255E                                            l7118 24F0  
                                          l7230 0F86                                            l7222 0F14  
                                          l7214 0E76                                            l7206 0E64  
                                          l8110 1744                                            l8006 4036  
                                          l8022 519C                                            l8014 518C  
                                          l8032 4E80                                            l7400 4A98  
                                          l7160 335C                                            l7144 32D6  
                                          l7064 29CA                                            l7056 291C  
                                          l7048 2894                                            l7128 257A  
                                          l7080 2350                                            l7072 22FA  
                                          l7240 1016                                            l7232 0F94  
                                          l7224 0F4A                                            l7216 0ECC  
                                          l7320 4902                                            l8120 177C  
                                          l8112 1748                                            l8200 26AE  
                                          l8040 35E0                                            l8008 403E  
                                          l8024 51A0                                            l8016 5190  
                                          l7312 4950                                            l8034 4E90  
                                          l8026 4E70                                            l7402 4AAA  
                                          l7410 4AC2                                            l7170 340A  
                                          l7162 3392                                            l7154 3336  
                                          l7146 32F4                                            l7138 32BA  
                                          l7066 29E4                                            l7058 2980  
                                          l7090 2390                                            l7082 2358  
                                          l7074 230A                                            l7250 10E2  
                                          l7242 103C                                            l7226 0F58  
                                          l7218 0EEC                                            l7322 4928  
                                          l8122 17C0                                            l8130 1892  
                                          l8114 1758                                            l8106 1726  
                                          l8210 26E6                                            l8202 26B2  
                                          l8050 362A                                            l8042 35F4  
                                          l8018 5194                                            l7330 4DB6  
                                          l7314 4960                                            l8036 4E94  
                                          l7404 4AAC                                            l7172 341C  
                                          l7156 334C                                            l7148 332C  
                                          l6700 4A4C                                            l7068 29F2  
                                          l7092 2398                                            l7084 2378  
                                          l7076 230C                                            l7260 11A8  
                                          l7252 1118                                            l7244 1084  
                                          l7236 0FDE                                            l7228 0F66  
                                          l7180 0DE8                                            l7316 48EC  
                                          l7412 5114                                            l8140 1956  
                                          l8132 18B8                                            l8124 1812  
                                          l8116 175C                                            l8108 1734  
                                          l8300 0736                                            l8220 277A  
                                          l8212 2718                                            l8204 26C2  
                                          l8060 3672                                            l8052 3642  
                                          l8044 3606                                            l7420 4352  
                                          l7340 4DC6                                            l7332 4DBA  
                                          l7324 4DA4                                            l7500 3A74  
                                          l7406 4ABC                                            l7174 342E  
                                          l7166 33CA                                            l7158 3354  
                                          l6702 4A4E                                            l6710 52F4  
                                          l7094 23B4                                            l7086 2380  
                                          l7078 2326                                            l7270 1244  
                                          l7238 0FF0                                            l7190 0E3E  
                                          l7182 0E0E                                            l7318 48F4  
                                          l7414 511E                                            l8150 19DC  
                                          l8142 195A                                            l8134 18C8  
                                          l8126 1888                                            l8118 1774  
                                          l8310 085C                                            l8302 0742  
                                          l8230 27EC                                            l8222 27AA  
                                          l8214 2724                                            l8206 26C6  
                                          l8062 3676                                            l8070 36AA  
                                          l8054 3646                                            l8046 3612  
                                          l8038 35DC                                            l7350 51EC  
                                          l7422 435A                                            l7342 4DCA  
                                          l7334 4DBE                                            l7326 4DAC  
                                          l7430 513C                                            l7502 3A9C  
                                          l7510 3ABE                                            l7408 4AC0  
                                          l6704 4A5E                                            l6720 4638  
                                          l6712 45EC                                            l7096 23C4  
                                          l7088 238A                                            l7280 12F0  
                                          l7272 1252                                            l7264 11E0  
                                          l7256 1138                                            l7248 10BC  
                                          l7192 0E40                                            l7184 0E1C  
                                          l8160 1A2A                                            l8152 19EC  
                                          l8136 18D4                                            l8144 1972  
                                          l8312 0868                                            l8304 0790  
                                          l8240 0148                                            l8224 27BC  
                                          l8216 274E                                            l8208 26D6  
                                          l8232 27FE                                            l8080 371E  
                                          l8072 36C2                                            l8064 367A  
                                          l8056 365A                                            l8400 1D5A  
                                          l7352 51EE                                            l7344 51DE  
                                          l7424 439C                                            l7600 2B52  
                                          l7336 4DC0                                            l7328 4DB2  
                                          l7360 51C6                                            l7440 3D54  
                                          l7512 3AD0                                            l7504 3AAE  
                                          l7522 3DD8                                            l6810 348A  
                                          l6802 3454                                            l6706 4A62  
                                          l6722 466E                                            l6714 45FE  
                                          l6730 4C86                                            l7290 132C  
                                          l7282 12FE                                            l7274 128E  
                                          l7266 1206                                            l7258 115E  
                                          l7194 0E52                                            l7186 0E2E  
                                          l8154 19F8                                            l8146 199A  
                                          l8138 18E6                                            l8330 0A08  
                                          l8314 08B6                                            l8306 07E2  
                                          l8250 0180                                            l8322 0982  
                                          l8242 014C                                            l8234 280A  
                                          l8226 27CC                                            l8218 2752  
                                          l8090 3740                                            l8082 372C  
                                          l8074 36E6                                            l8066 3680  
                                          l8058 3660                                            l8170 4844  
                                          l8410 1EB8                                            l8402 1D6C  
                                          l7354 51F0                                            l7346 51E4  
                                          l7426 43CE                                            l7418 434E  
                                          l7610 2BFA                                            l7602 2B84  
                                          l7338 4DC2                                            l7370 4B56  
                                          l7450 3DBA                                            l7442 3D74  
                                          l7434 3CFC                                            l7514 3AEC  
                                          l7506 3AB2                                            l7540 3E40  
                                          l7524 3DDC                                            l6820 34E6  
                                          l6812 3498                                            l6804 3458  
                                          l6708 4A64                                            l6716 4610  
                                          l6740 4E06                                            l6732 4CB8  
                                          l6900 3CC2                                            l7284 1312  
                                          l7268 122C                                            l7188 0E32  
                                          l8156 1A0C                                            l8148 19CA  
                                          l8340 0B50                                            l8332 0A6A  
                                          l8316 0908                                            l8260 02A2  
                                          l8324 09D8                                            l8252 018C  
                                          l8244 015C                                            l8236 012A  
                                          l8228 27D8                                            l8180 2644  
                                          l8076 36FA                                            l8068 3688  
                                          l8092 3744                                            l8172 484A  
                                          l8420 1FB0                                            l8412 1EC4  
                                          l8404 1E10                                            l7700 5326  
                                          l7460 52A2                                            l7356 51F2  
                                          l7348 51E8                                            l7604 2BAA  
                                          l7620 4B0A                                            l7612 4AC8  
                                          l7380 4B74                                            l7372 4B58  
                                          l7364 4B24                                            l7452 3DBE  
                                          l7436 3D22                                            l7444 3D90  
                                          l7516 3AFA                                            l7390 526C  
                                          l7550 3E9E                                            l7542 3E52  
                                          l7534 3E22                                            l7526 3DF8  
                                          l6830 3550                                            l6822 34EE  
                                          l6814 34B8                                            l6806 3466  
                                          l6718 461A                                            l6742 4E0A  
                                          l6726 4C76                                            l6750 411A  
                                          l6902 3CD4                                            l6910 3EEE  
                                          l7278 12CA                                            l7198 0E58  
                                          l7294 1338                                            l8158 1A1E  
                                          l8350 0C48                                            l8342 0B62  
                                          l8334 0A7A                                            l8326 09E8  
                                          l8270 03C6                                            l8262 02AE  
                                          l8254 01D0                                            l8246 0160  
                                          l8238 0138                                            l8190 2676  
                                          l8182 264A                                            l8174 25D0  
                                          l7710 5226                                            l8078 370E  
                                          l8166 480A                                            l7702 520E  
                                          l8430 1A6E                                            l8422 1A3A  
                                          l8414 1F38                                            l8406 1E22  
                                          l7470 52D4                                            l7462 52B6  
                                          l7454 5298                                            l7630 46E6  
                                          l7622 4682                                            l7606 2BD8  
                                          l7614 4AE6                                            l7382 4B78  
                                          l7374 4B68                                            l7366 4B24  
                                          l7446 3DA2                                            l7438 3D44  
                                          l7518 3B06                                            l8510 30AA  
                                          l8502 304C                                            l7560 48A2  
                                          l7536 3E28                                            l7528 3E0C  
                                          l7544 3E56                                            l6920 4BD4  
                                          l6840 359A                                            l6832 3570  
                                          l6824 3502                                            l6816 34BC  
                                          l6808 3486                                            l6736 4DE8  
                                          l6728 4C82                                            l6760 4170  
                                          l6752 412E                                            l6912 3EFC  
                                          l6904 3EB4                                            l6744 4FE6  
                                          l7296 135E                                            l7288 131E  
                                          l7480 5098                                            l8360 0CE8  
                                          l8352 0CAA                                            l8344 0BC4  
                                          l8336 0ADC                                            l8328 09F4  
                                          l8280 04EA                                            l8272 03D2  
                                          l8264 02FA                                            l8256 0222  
                                          l8248 0178                                            l8192 2686  
                                          l8184 265A                                            l8176 25E6  
                                          l7800 4D12                                            l7720 4BAE  
                                          l8088 3732                                            l8096 374A  
                                          l8168 4816                                            l8440 1B22  
                                          l8432 1AAA                                            l8424 1A3A  
                                          l8416 1F3E                                            l8408 1EAE  
                                          l7472 52E8                                            l7464 52CA  
                                          l7456 528E                                            l7640 46F4  
                                          l7632 46E8                                            l7624 46AA  
                                          l7608 2BDC                                            l7616 4AF2  
                                          l7376 4B6C                                            l7368 4B36  
                                          l7448 3DB6                                            l8520 30DA  
                                          l8504 3072                                            l8600 2F0E  
                                          l7394 4A6C                                            l7386 523E  
                                          l7562 48B4                                            l7554 487E  
                                          l7546 3E74                                            l7538 3E34  
                                          l7810 41D8                                            l6922 4BD8  
                                          l6842 35BA                                            l6834 3572  
                                          l6826 3510                                            l6818 34C8  
                                          l6850 3770                                            l6770 4F32  
                                          l6738 4DF4                                            l6762 4174  
                                          l6754 413C                                            l6914 3F2A  
                                          l6906 3ED2                                            l7482 50A8  
                                          l7474 5090                                            l8370 0D1C  
                                          l8354 0CBC                                            l8346 0BD6  
                                          l8338 0AEE                                            l8362 0CF2  
                                          l8290 0610                                            l8282 04F6  
                                          l8274 0420                                            l8266 034C  
                                          l8258 0298                                            l8194 268A  
                                          l8186 2662                                            l8178 2638  
                                          l7802 4D26                                            l7730 4BCC  
                                          l7722 4BB0                                            l7714 4B7C  
                                          l7706 5256                                            l8450 1CA2  
                                          l8442 1B62                                            l8434 1AB4  
                                          l8426 1A48                                            l8418 1F7A  
                                          l7466 52C0                                            l7650 478E  
                                          l7458 52AC                                            l7642 46F6  
                                          l7634 46EA                                            l7626 46BA  
                                          l7570 2A38                                            l7618 4B06  
                                          l7378 4B70                                            l7490 3A0A  
                                          l8522 30EC                                            l8506 3084  
                                          l8602 2F16                                            l7396 4A6C  
                                          l7564 48C8                                            l7556 4882  
                                          l7548 3E8E                                            l7820 4216  
                                          l7812 41E8                                            l6924 4BEC  
                                          l6836 3584                                            l6828 3522  
                                          l6860 37E0                                            l6852 3790  
                                          l6772 4F4C                                            l6692 4A0E  
                                          l6764 41A0                                            l6756 4148  
                                          l6748 410C                                            l6940 2092  
                                          l6932 201A                                            l6916 3F4A  
                                          l6908 3EDA                                            l7476 5094  
                                          l8380 0D9A                                            l8364 0D04  
                                          l8356 0CCA                                            l8348 0C38  
                                          l8372 0D20                                            l8292 061C  
                                          l8284 0544                                            l8276 0470  
                                          l8196 269A                                            l8188 2672  
                                          l7804 4D36                                            l7732 4BD0  
                                          l7724 4BC0                                            l7716 4B7C  
                                          l8452 1CB0                                            l8460 1D0A  
                                          l8444 1B8A                                            l8436 1AC0  
                                          l8428 1A5C                                            l7468 52DE  
                                          l7660 47B6                                            l7652 4792  
                                          l7644 5322                                            l7636 46F0  
                                          l7628 46E4                                            l7580 2A82  
                                          l7572 2A46                                            l7740 13A6  
                                          l7492 3A1E                                            l8524 30EC  
                                          l8508 3084                                            l8612 2F56  
                                          l8604 2F1A                                            l7398 4A8E  
                                          l7566 48CC                                            l7558 4896  
                                          l7830 426C                                            l7822 421A  
                                          l7814 41EC                                            l6926 4C1A  
                                          l6838 358A                                            l6870 3858  
                                          l6862 37E8                                            l6854 3794  
                                          l6846 375E                                            l6694 4A0E  
                                          l6766 41B4                                            l6758 415C  
                                          l6950 20EA                                            l6942 2094  
                                          l6934 203A                                            l6918 3F5C  
                                          l6774 501E                                            l6782 49AE  
                                          l7478 5096                                            l8382 0DA6  
                                          l8374 0D48                                            l8366 0D08  
                                          l8358 0CE0                                            l8294 066A  
                                          l8286 0596                                            l8198 269E  
                                          l7806 4D3A                                            l7726 4BC4  
                                          l7718 4B8E                                            l8454 1CC4  
                                          l8462 1D28                                            l8438 1B1C  
                                          l8446 1BEC                                            l7670 47DA  
                                          l7662 47BA                                            l7654 479E  
                                          l7638 46F2                                            l7646 51AA  
                                          l7590 2AC0                                            l7582 2A86  
                                          l7574 2A5E                                            l7750 1428  
                                          l7742 13D6                                            l7494 3A2A  
                                          l7486 39EE                                            l7910 4FC0  
                                          l8526 3112                                            l8534 311C  
                                          l8518 30B4                                            l8470 2FAE  
                                          l8614 2F64                                            l8606 2F30  
                                          l8550 2DE2                                            l7832 4278  
                                          l7824 4232                                            l7816 4200  
                                          l7808 41CE                                            l6792 5056  
                                          l6928 4C1E                                            l6872 386A  
                                          l6864 37FC                                            l6856 37A2  
                                          l6848 3762                                            l6696 4A30  
                                          l6960 218A                                            l6952 20F0  
                                          l6944 20AE                                            l6936 2062  
                                          l8384 0DBA                                            l8376 0D78  
                                          l8368 0D18                                            l8296 06BC  
                                          l7840 4CD6                                            l7728 4BC8  
                                          l7904 39EA                                            l8456 1CF0  
                                          l8448 1BFE                                            l7672 4804  
                                          l7664 47BE                                            l7656 47AE  
                                          l7680 4730                                            l7648 51F6  
                                          l7592 2AD0                                            l7584 2A94  
                                          l7576 2A6E                                            l7568 2A1C  
                                          l7760 14A4                                            l7752 143E  
                                          l7744 13E0                                            l7736 1376  
                                          l7496 3A3C                                            l7488 39F6  
                                          l7920 2C0C                                            l7912 4FC4  
                                          l8464 2F84                                            l8608 2F52  
                                          l8560 2DEC                                            l8552 2DE4  
                                          l7826 424A                                            l7818 4206  
                                          l6866 380A                                            l6874 3870  
                                          l6858 37C2                                            l6698 4A3A  
                                          l6970 2232                                            l6962 2190  
                                          l6954 20F8                                            l6946 20CA  
                                          l6938 2082                                            l6890 3C52  
                                          l6882 3C0C                                            l6778 4F72  
                                          l6786 49E4                                            l8378 0D8A  
                                          l8386 0DCC                                            l7850 44C2  
                                          l7842 4CE6                                            l7834 4CC6  
                                          l8458 1D04                                            l8394 1D38  
                                          l7666 47C2                                            l7658 47B2  
                                          l7690 4746                                            l7682 4736  
                                          l7674 4710                                            l7594 2AD4  
                                          l7586 2A98                                            l7578 2A7E  
                                          l7770 150A                                            l7754 1454  
                                          l7746 1404                                            l7738 1382  
                                          l7498 3A50                                            l7930 2C7A  
                                          l7922 2C14                                            l7914 4FD4  
                                          l8490 301C                                            l8466 2F84  
                                          l8570 2DFE                                            l8562 2DF2  
                                          l8554 2DE6                                            l8546 2DDC  
                                          l7828 425C                                            l6796 5162  
                                          l6876 3880                                            l6868 3838  
                                          l6980 2294                                            l6972 224C  
                                          l6964 2196                                            l6956 2102  
                                          l6948 20DC                                            l6892 3C60  
                                          l6884 3C18                                            l6788 49F6  
                                          l8388 0DD8                                            l7860 451A  
                                          l7852 44DE                                            l7844 4CEA  
                                          l8396 1D38                                            l7668 47CE  
                                          l7692 4752                                            l7684 473A  
                                          l7676 4714                                            l7596 2AFA  
                                          l7588 2AB0                                            l7772 1516  
                                          l7756 1462                                            l7748 1412  
                                          l7940 2CCE                                            l7932 2C8E  
                                          l7924 2C32                                            l7916 4FD8  
                                          l7908 4FAE                                            l8492 301C  
                                          l8468 2FAA                                            l8476 2FB4  
                                          l8580 2E48                                            l8572 2E0C  
                                          l8564 2DF6                                            l8556 2DE8  
                                          l8548 2DE0                                            l6798 517E  
                                          l6878 38A0                                            l6982 229A  
                                          l6990 22D0                                            l6974 2266  
                                          l6958 2108                                            l6966 21FA  
                                          l6894 3C72                                            l6886 3C36  
                                          l7862 452C                                            l7854 44E2  
                                          l7846 4D06                                            l7870 38C6  
                                          l8398 1D46                                            l7694 475E  
                                          l7686 473E                                            l7678 4720  
                                          l7598 2B2C                                            l7790 15BE  
                                          l7774 1532                                            l7766 14AC  
                                          l7758 1492                                            l7950 2D36  
                                          l7942 2CE2                                            l7934 2C96  
                                          l7926 2C46                                            l7918 2C0C  
                                          l8494 3042                                            l8478 2FDA  
                                          l8486 2FE4                                            l8590 2EAA  
                                          l8582 2E5A                                            l8566 2DFA  
                                          l8558 2DEA                                            l6984 22AC  
                                          l6968 2214                                            l6976 2274  
                                          l6896 3CA0                                            l6888 3C3E  
                                          l7856 44E6                                            l7848 44AE  
                                          l7880 390C                                            l7872 38E2  
                                          l7696 4788                                            l7688 4742  
                                          l7792 15DA                                            l7784 1554  
                                          l7776 153A                                            l7768 1506  
                                          l7960 2D92                                            l7952 2D3C  
                                          l7944 2CF8                                            l7936 2CA8  
                                          l7928 2C66                                            l8488 300A  
                                          l8592 2EB8                                            l8584 2E6E  
                                          l8576 2E24                                            l8568 2DFE  
                                          l8770 337C                                            l6986 22B8  
                                          l6978 2286                                            l6994 3120  
                                          l6898 3CC0                                            l7866 4542  
                                          l7858 4506                                            l7882 3912  
                                          l7874 38F6                                            l7890 3940  
                                          l7970 3F88                                            l7698 4C26  
                                          l7794 15EA                                            l7786 15AE  
                                          l7778 154C                                            l7954 2D54  
                                          l7946 2D0C                                            l7938 2CBA  
                                          l7962 2DAA                                            l8762 2EDE  
                                          l8586 2E80                                            l8578 2E3A  
                                          l6988 22C0                                            l6996 3132  
                                          l8764 099A                                            l7892 3976  
                                          l7884 391E                                            l7868 38C2  
                                          l7980 3FB8                                            l7972 3F96  
                                          l7796 1700                                            l7788 15B2  
                                          l7964 2DBC                                            l7948 2D1A  
                                          l7956 2D5A                                            l8588 2E94  
                                          l8596 2EC8                                            l6998 313A  
                                          l8766 18AA                                            l7894 3990  
                                          l7886 392A                                            l7990 3FE6  
                                          l7982 3FBC                                            l7974 3F9E  
                                          l7798 170E                                            l7966 2DCE  
                                          l7958 2D7E                                            l8598 2EFC  
                                          l8768 0E9E                                            l7896 39BA  
                                          l7888 393C                                            l7992 3FF4  
                                          l7984 3FC4                                            l7976 3FA2  
                                          l7968 3F84                                            l7898 39E4  
                                          l7994 3FFA                                            l7986 3FD6  
                                          l7978 3FB0                                            l7996 4010  
                                          l7988 3FDE                                            l7998 4018  
                                          STR_1 FF37                                            STR_2 F6EF  
                                          STR_3 F53C                                            STR_4 FBD5  
                                          STR_5 FC5A                                            STR_6 F923  
                                          STR_7 FD6F                                            STR_8 FF7B  
                                          STR_9 FF35                                            _LATA 000F83  
                                          _LATB 000F84                                            _LATC 000F85  
                                          _LATD 000F86                                            _LATE 000F87  
                                          u6100 4A30                                            u6101 4A2C  
                                          u6110 4A5E                                            u6111 4A5A  
                                          u6120 45FE                                            u6200 5018  
                                          u7000 250C                                            u6121 45FA  
                                          u7001 2508                                            u6130 4610  
                                          u6210 411A                                            u7010 252A  
                                          u6131 460C                                            u6211 4116  
                                          u7011 2526                                            u7100 3406  
                                          u6140 4638                                            u6220 413C  
                                          u6300 49DE                                            u7020 2544  
                                          _PMD0 000EE1                                            u6141 4634  
                                          u6221 4138                                            u6301 49D8  
                                          u7021 2540                                            _PMD1 000EE2  
                                          u7110 341C                                            u6150 466E  
                                          u6230 4192                                            u6310 49E0  
                                          u7030 255E                                            _PMD2 000EE3  
                                          u7111 3418                                            u6151 466A  
                                          u6231 418E                                            u7031 255A  
                                          _PMD3 000EE4                                            u7120 342E  
                                          u6400 3550                                            u6160 4CA8  
                                          u6240 41A0                                            u6320 49F6  
                                          u7040 256C                                            u7200 0FF0  
                                          u8000 2CA8                                            _PMD4 000EE5  
                                          u7121 342A                                            u6401 354C  
                                          u6241 419C                                            u6321 49F2  
                                          u7041 2568                                            u7201 0FEC  
                                          u8001 2CA4                                            _PMD5 000EE6  
                                          u6330 5086                                            u6410 359A  
                                          u6250 4F4C                                            u6090 4A20  
                                          u6170 4CB8                                            u7050 257A  
                                          u7210 1016                                            u7130 0E0E  
                                          u8010 2CBA                                            u6331 5080  
                                          u6411 3596                                            u6251 4F48  
                                          u6091 4A1C                                            u6171 4CB4  
                                          u7051 2576                                            u7211 1012  
                                          u7131 0E0A                                            u8011 2CB6  
                                          u6340 5088                                            u7060 32F4  
                                          u6420 3770                                            u6180 4E2A  
                                          u6500 3C60                                            u6260 504E  
                                          u7220 103C                                            u7140 0EDE  
                                          u7300 4946                                            u8100 4036  
                                          u8020 2D7E                                            u7061 32F0  
                                          u6421 376C                                            u6181 4E26  
                                          u6501 3C5C                                            u6261 5048  
                                          u7221 1038                                            u7141 0EDA  
                                          u7301 4942                                            u8101 4032  
                                          u8021 2D7A                                            u8110 4EB0  
                                          u7070 332C                                            u6350 3466  
                                          u6430 37A2                                            u6510 3CA0  
                                          u6270 5050                                            u6190 5016  
                                          u7230 10E2                                            u7150 0EEC  
                                          u7310 4DDA                                            u8030 2DBC  
                                          u8111 4EAC                                            u7071 3328  
                                          u6351 3462                                            u6431 379E  
                                          u6167 4C9E                                            u6511 3C9C  
                                          u6191 5010                                            u7231 10DE  
                                          u7151 0EE8                                            u7311 4DD6  
                                          u8031 2DB8                                            u7400 4A7E  
                                          u7080 3348                                            u6360 3498  
                                          u6440 37E0                                            u6600 2092  
                                          u6520 3ED2                                            u6280 4FA6  
                                          u7240 115E                                            u7160 0F14  
                                          u8200 36FA                                            u8120 35F4  
                                          u8040 2DCE                                            u7401 4A7A  
                                          u7081 3344                                            u6361 3494  
                                          u6441 37DC                                            u6601 208E  
                                          u6521 3ECE                                            u6281 4FA0  
                                          u7241 115A                                            u7161 0F10  
                                          u8201 36F6                                            u8121 35F0  
                                          u8041 2DCA                                            u7410 4A8E  
                                          u7090 3404                                            u6450 380A  
                                          u6610 20AE                                            u6530 3EFC  
                                          u6290 4FA8                                            u7250 1206  
                                          u7170 0F58                                            u8210 370E  
                                          u8130 3606                                            u8050 3F96  
                                          u7330 51DA                                            u7411 4A8A  
                                          u7091 33FE                                            u6371 34C2  
                                          u6451 3806                                            u6611 20AA  
                                          u6531 3EF8                                            u7251 1202  
                                          u7171 0F54                                            u8211 370A  
                                          u8131 3602                                            u8051 3F92  
                                          u7331 51D4                                            u7420 4ABC  
                                          u6380 34E6                                            u6460 3838  
                                          u6700 2294                                            u6620 20DC  
                                          u6540 3F2A                                            u7260 122C  
                                          u7180 0FD6                                            u8300 265A  
                                          u8220 371E                                            u8140 3626  
                                          u8060 3FB0                                            u7340 51DC  
                                          u7500 3DA2                                            u7421 4AB8  
                                          u6381 34E2                                            u6461 3834  
                                          u6701 2290                                            u6621 20D8  
                                          u6541 3F26                                            u7261 1228  
                                          u7181 0FD0                                            u8301 2656  
                                          u8221 371A                                            u8141 3622  
                                          u8061 3FAC                                            u7325 4DE4  
                                          u7501 3D9E                                            u6550 4BEC  
                                          u6390 3510                                            u6470 3880  
                                          u6710 22AC                                            u6630 20EA  
                                          u7270 12F0                                            u7190 0FD8  
                                          u8230 17C0                                            u8310 277A  
                                          u8150 365A                                            u8070 3FD6  
                                          u7430 439C                                            u7326 4DE6  
                                          u7350 4B36                                            u7510 3DD6  
                                          u6551 4BE8                                            u6391 350C  
                                          u6471 387C                                            u6711 22A8  
                                          u6631 20E6                                            u7271 12EC  
                                          u8231 17BC                                            u8311 2776  
                                          u8151 3656                                            u8071 3FD2  
                                          u7431 4398                                            u7351 4B32  
                                          u7511 3DD2                                            u7600 3E52  
                                          u6560 4C1A                                            u6640 2214  
                                          u6800 3276                                            u8240 1812  
                                          u7520 50A8                                            u8400 066A  
                                          u8320 01D0                                            u8160 3672  
                                          u8080 3FF4                                            u7440 43BE  
                                          u7360 4B68                                            u7280 499A  
                                          u7601 3E4E                                            u6561 4C16  
                                          u6641 2210                                            u6801 3272  
                                          u6721 312A                                            u6481 3C12  
                                          u8241 180E                                            u7521 50A4  
                                          u8401 0666                                            u8321 01CC  
                                          u8161 366E                                            u8081 3FF0  
                                          u7361 4B64                                            u7370 5252  
                                          u7610 3E74                                            u6650 2232  
                                          u6570 204A                                            u6810 32B0  
                                          u6730 314C                                            u6490 3C36  
                                          u8250 18C8                                            u8410 06BC  
                                          u8330 0222                                            u8170 3698  
                                          u8090 4010                                            u7450 43CE  
                                          u7290 49AC                                            u7530 3A0A  
                                          u7371 524C                                            u7611 3E70  
                                          u6651 222E                                            u6571 2044  
                                          u6811 32AC                                            u6731 3148  
                                          u6491 3C32                                            u8251 18C4  
                                          u8411 06B8                                            u8331 021E  
                                          u8171 3692                                            u8091 400C  
                                          u7451 43CA                                            u7435 438C  
                                          u7291 49A8                                            u7531 3A06  
                                          u7380 5254                                            u7620 3E9E  
                                          u6660 224C                                            u6580 204C  
                                          u6740 317E                                            u6820 282A  
                                          u6900 2326                                            u8260 18E6  
                                          u8500 0B62                                            u8420 0790  
                                          u8340 02FA                                            u8180 36C2  
                                          u7460 43F0                                            u7700 2BAA  
                                          u7540 3A1E                                            u7621 3E9A  
                                          u6661 2248                                            u6741 317A  
                                          u6821 2826                                            u6901 2322  
                                          u8261 18E2                                            u8501 0B5E  
                                          u8421 078C                                            u8341 02F6  
                                          u8181 36BE                                            u7437 4382  
                                          u7701 2BA6                                            u7541 3A1A  
                                          u7390 527C                                            u7630 4896  
                                          u6670 2266                                            u6590 2062  
                                          u6750 319C                                            u6830 2846  
                                          u6910 2350                                            u8270 199A  
                                          u8510 0BD6                                            u8430 07E2  
                                          u8350 034C                                            u8190 36D2  
                                          u7710 2BFA                                            u7470 3D22  
                                          u7550 3A3C                                            u7391 5276  
                                          u7631 4892                                            u6671 2262  
                                          u6591 205E                                            u6751 3198  
                                          u6831 2842                                            u6911 234C  
                                          u8271 1996                                            u8511 0BD2  
                                          u8431 07DE                                            u8351 0348  
                                          u8191 36CC                                            u7447 43B4  
                                          u7711 2BF6                                            u7471 3D1E  
                                          u7287 4990                                            u7551 3A38  
                                          u7640 48C8                                            u6680 2274  
                                          u6760 31C6                                            u6840 2992  
                                          u6920 23B4                                            u8520 0C48  
                                          u8440 08B6                                            u8360 0420  
                                          u8176 369A                                            u8280 487C  
                                          u8600 1A6E                                            u7720 4B22  
                                          u7480 3D44                                            u7560 3A74  
                                          u7641 48C4                                            u6681 2270  
                                          u6761 31C2                                            u6841 298E  
                                          u6921 23B0                                            u8521 0C44  
                                          u8441 08B2                                            u8361 041C  
                                          u8281 4878                                            u8601 1A6A  
                                          u7801 137C                                            u7721 4B1E  
                                          u7481 3D40                                            u7561 3A70  
                                          u7650 48EA                                            u6690 2286  
                                          u6770 3200                                            u6850 29B0  
                                          u6930 23FE                                            u8530 0CBC  
                                          u8450 0908                                            u8370 0470  
                                          u8290 2638                                            u7730 5222  
                                          u8610 1B8A                                            u7490 3D8C  
                                          u7570 3AAE                                            u7651 48E6  
                                          u6691 2282                                            u6771 31FC  
                                          u6851 29AC                                            u6931 23F8  
                                          u8531 0CB8                                            u8451 0904  
                                          u8371 046C                                            u8291 2634  
                                          u7731 521C                                            u8611 1B86  
                                          u7467 43E6                                            u7811 13AC  
                                          u7491 3D88                                            u7571 3AAA  
                                          u7396 527E                                            u6780 322E  
                                          u6860 29CA                                            u6940 2400  
                                          u8540 0D48                                            u8460 09E8  
                                          u8380 0544                                            u7900 451A  
                                          u8196 36D4                                            u7740 5224  
                                          u8620 1BFE                                            u7660 2A6E  
                                          u7580 3AD0                                            u8700 3072  
                                          u6861 29C6                                            u8541 0D44  
                                          u8461 09E4                                            u8381 0540  
                                          u7901 4516                                            u8621 1BFA  
                                          u7661 2A6A                                            u7821 149C  
                                          u7581 3ACC                                            u8701 306E  
                                          u7590 3E22                                            u6790 3268  
                                          u6870 29E4                                            u6950 2416  
                                          u8470 0A08                                            u8390 0596  
                                          u7910 453E                                            u7750 5268  
                                          u8630 1CC4                                            u8550 1D5A  
                                          u7670 2AC0                                            u7830 1532  
                                          u7591 3E1E                                            u6791 3264  
                                          u6871 29E0                                            u6951 2412  
                                          u8471 0A04                                            u8391 0592  
                                          u7911 453A                                            u7751 5262  
                                          u8631 1CC0                                            u8551 1D56  
                                          u7671 2ABC                                            u7831 152E  
                                          u8711 307C                                            u6880 29F2  
                                          u6960 244A                                            u8480 0A7A  
                                          u7760 523A                                            u7920 390C  
                                          u8640 1D04                                            u8560 1D6C  
                                          u7680 2AFA                                            u8720 30DA  
                                          u6881 29EE                                            u6961 2444  
                                          u8481 0A76                                            u7761 5234  
                                          u7921 3908                                            u8641 1D00  
                                          u8561 1D68                                            u7681 2AF6  
                                          u7841 1544                                            u8721 30D6  
                                          u6970 244C                                            u6890 230A  
                                          u8490 0AEE                                            u7770 523C  
                                          u7930 393C                                            u8650 1D28  
                                          u8570 1E22                                            u7690 2B52  
                                          u7850 15DA                                            u6787 3224  
                                          u6891 2306                                            u8491 0AEA  
                                          u7931 3938                                            u8651 1D24  
                                          u8571 1E1E                                            u7691 2B4E  
                                          u7851 15D6                                            u8731 30E4  
                                          u6980 2462                                            u7780 4B8E  
                                          u7940 3976                                            u7756 526A  
                                          u8580 1FB0                                            u7860 15EA  
                                          u8660 2FAA                                            u8740 2E20  
                                          u6981 245E                                            u7781 4B8A  
                                          u7941 3972                                            u8581 1FAC  
                                          u7861 15E6                                            u8661 2FA6  
                                          u8741 2E1C                                            u6990 24CA  
                                          u7870 4D5A                                            u7790 4BC0  
                                          u7950 39BA                                            u8590 1A5C  
                                          u8670 2FDA                                            u8750 2E5A  
                                          u7871 4D56                                            u7791 4BBC  
                                          u7951 39B6                                            u8591 1A58  
                                          u8807 2A50                                            u8671 2FD6  
                                          u8751 2E56                                            u7880 4D06  
                                          u7960 39E4                                            u8680 300A  
                                          u8760 2E80                                            u7881 4D02  
                                          u7961 39E0                                            u8817 2AA2  
                                          u8681 3006                                            u8761 2E7C  
                                          u7890 4506                                            u7970 4FC0  
                                          u8770 2F0E                                            u6995 24B8  
                                          u7891 4502                                            u7971 4FBC  
                                          u8691 3014                                            u8771 2F0A  
                                          u7980 2C66                                            u8780 2F52  
                                          u7981 2C62                                            u8781 2F4E  
                                          u7990 2C8E                                            u7991 2C8A  
                                          u8797 2D48                             ValidateCmd@ConfName 019D  
                                          _WPUA 000F10                                            _WPUB 000F18  
                                          _WPUC 000F20                                            _WPUD 000F25  
                                          _WPUE 000F2D                           ??_EUSART2_Receive_ISR 0001  
                                 _EUSART1_Write 4A6A                                   __CFG_FCMEN$ON 000000  
                                 _EUSART2_Write 4A0C                              ClearModbusRespon@i 0005  
                                generateCRC@crc 0012                                            abs@a 0017  
                                          _dbuf 02DD                                            _atoi 32BA  
                                          _main 2DDC                                            _dtoa 201A  
                                 ?_EUSART1_Read 0001                                            _prec 00D1  
                                 ?_EUSART2_Read 0001                                            _nout 00CD  
                                          pad@i 001E                                            pad@p 001B  
                                          fsr0h 000FEA                                            fsr1h 000FE2  
                                          indf0 000FEF                                            fsr2h 000FDA  
                                          fsr0l 000FE9                                            indf1 000FE7  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 0020                                            fsr2l 000FD9  
                                          _stoa 3120                                            btemp 005B  
                                          _utoa 281A                                            _xtoa 22FA  
                                          prodh 000FF4                                            prodl 000FF3  
                                          start 0126                    __end_of_EUSART2_Transmit_ISR 4DA4  
                                 __CFG_CSWEN$ON 000000                             UART1_Write_string@i 000B  
                fp__EUSART1_DefaultErrorHandler 0000                                    ___param_bank 000000  
                                 __CFG_SCANE$ON 000000                                           ??_abs 0019  
                                         ??_pad 001D                       __size_of_DATAEE_WriteByte 0044  
                __size_of_OSCILLATOR_Initialize 0018                   __end_of_OSCILLATOR_Initialize 520E  
                         _eusart1RxStatusBuffer 0300                                 __end_of___aodiv 35DC  
                                         _ADACQ 000F5C                                           _ADCAP 000F5D  
                                         _ADACT 000F56                                           ?_atoi 000C  
                                         ?_main 0001                                           ?_dtoa 0022  
                                         _ADCLK 000F57                                 __end_of___aomod 38C2  
                                         _ADCNT 000F67                                           _ADPCH 000F5F  
                                         _ADREF 000F58                                 __end_of___awdiv 4048  
                                         _ADPRE 000F5E                                           STR_10 FEA8  
                                         STR_11 FD8B                                           STR_12 FEBE  
                                         STR_20 FD17                                           STR_21 FB6C  
                                         STR_13 FB6C                                           STR_30 FC9B  
                                         STR_14 F5E3                                           STR_22 F576  
                                         STR_23 FA8D                                           STR_31 FCBB  
                                         STR_15 FA8D                                           STR_32 FFB3  
                                         STR_24 FAB3                                           STR_40 FEA9  
                                         STR_16 FAB3                                           STR_25 FAFE  
                                         STR_17 FAFE                                           STR_41 F85C  
                                         STR_33 F758                                   __CFG_WDTE$OFF 000000  
                                         STR_26 FB23                                           STR_42 FD35  
                                         STR_34 FD35                                           STR_18 FB23  
                                         STR_50 F828                                           STR_51 FD35  
                                         STR_43 FED3                                           STR_35 FDC0  
                                         STR_19 FCDB                                           STR_27 FA67  
                                         STR_60 FE94                                           STR_36 FE94  
                                         STR_52 FDF2                                           STR_44 F9A3  
                                         STR_28 F4C0                                           STR_45 FD35  
                                         STR_37 FDD9                                           STR_29 FB90  
                                         STR_53 F7C0                                           STR_61 F64F  
                                         STR_62 FDC0                                           STR_38 F758  
                                         STR_70 FC9B                                           STR_54 FD35  
                                         STR_46 FE3C                                           STR_63 FE94  
                                         STR_71 FCBB                                           STR_39 FD35  
                                         STR_55 FD53                                           STR_47 F7F4  
                                         STR_72 FB6C                                           STR_48 FD35  
                                         STR_64 FF22                                           STR_80 FE24  
                                         STR_56 F78C                                           _ADRPT 000F66  
                                         STR_81 FEA5                                           STR_73 F5E3  
                                         STR_65 FB6C                                           STR_57 FD35  
                                         STR_49 FE0B                                           STR_66 F5E3  
                                         STR_74 FA8D                                           STR_90 FFF5  
                                         STR_58 FF9A                                           STR_82 FDA6  
                              ?_ClearModbusData 0001                                           STR_59 FDC0  
                                         STR_75 FAB3                                           STR_91 FFF5  
                                         STR_67 FA41                                           STR_83 F890  
                                         STR_76 FAFE                                           STR_92 FFD7  
                                         STR_84 F6BA                                           STR_68 F619  
                                         STR_77 FB23                                           STR_69 FB90  
                                         STR_93 FFEB                                           STR_85 FC39  
                                         STR_78 FCDB                                           STR_94 FFF5  
                                         STR_86 FFD7                                           STR_87 FFD7  
                                         STR_79 FCF9                                           STR_95 F9CD  
                                         STR_88 FFEB                                           STR_96 FEFC  
                                         STR_89 FFEB                                           STR_97 FEE8  
                                         STR_98 FE7F                                           STR_99 FE53  
                                         ?_stoa 0010                                           ?_utoa 0022  
                               __end_of___lodiv 3CFC                                 ___awdiv@divisor 0007  
                                         ?_xtoa 0022                                 __end_of___lomod 3F84  
                                __CFG_DEBUG$OFF 000000                                           i2l154 0064  
                                         i2l163 0112                                           i2l340 4DA2  
                                         i2l156 009E                                           i2l501 531A  
                                         i2l157 0112                                           i2l158 00D8  
                                         i2l351 50E6                                           i2l504 5320  
                                         i2l360 5314                                           i2l337 4D9E  
                                         i2l354 532A                                           i2l347 410A  
                                         i2l357 5302                                           i2l481 4E6A  
                                         i2l491 434C                                           i2l484 4E6E  
                                         i2l495 5112                                           i2l498 532C  
                   __size_of_EUSART1_is_tx_done 0014                                 ___awdiv@counter 0009  
                                         _OSCEN 000EDC                                    vfpfcnvrt@fmt 004B  
                                  vfpfcnvrt@llu 006F                                           _TRISA 000F88  
                                         _TRISB 000F89                                           _TRISC 000F8A  
                                         _TRISD 000F8B                                           _TRISE 000F8C  
                      CardConfigIni@readDataOdd 0018                                           _Debug 00F5  
                                 __CFG_WRT0$OFF 000000                                   __CFG_WRT1$OFF 000000  
                                 __CFG_WRT2$OFF 000000                                   __CFG_WRT3$OFF 000000  
                          _EUSART1_Transmit_ISR 4E2C                                  __CFG_EBTR0$OFF 000000  
                                __CFG_EBTR1$OFF 000000                                  __CFG_EBTR2$OFF 000000  
                                __CFG_EBTR3$OFF 000000                                   __CFG_WRTB$OFF 000000  
                                 __CFG_WRTC$OFF 000000                                   __CFG_WRTD$OFF 000000  
                               _DATAEE_ReadByte 51DE                                  __CFG_EBTRB$OFF 000000  
                                         _flags 0057                          __size_of_CardConfigIni 01F0  
                                         _fputc 45EC                                 __end_of_isalpha 4FAE  
                                         _fputs 4DE8                                 __end_of_isdigit 508E  
                      SaveCardDat@dataeeAddrWrk 009F                                 __end_of_memmove 3DD8  
                            __CFG_MCLRE$EXTMCLR 000000                                           atoi@n 0019  
                                         pad@fp 0017                                           atoi@s 000C  
                                         _width 00CF                                           _putch 52F2  
                      __size_of_ClearEEAddRange 005C                                           dtoa@d 0024  
                                         dtoa@i 0044                                           dtoa@n 003C  
                                         dtoa@p 0036                                           dtoa@s 003A  
                                         dtoa@w 0038                                 __end_of_islower 501E  
                               __end_of_isspace 4C26                                  ?_EUSART1_Write 0001  
                                ?_EUSART2_Write 0001                                 __end_of_isupper 5056  
                                         pclath 000FFA                                           tablat 000FF5  
                                   _ClearRxBuff 4D12                                  ??_EUSART1_Read 0005  
                                         plusw1 000FE3                                           plusw2 000FDB  
                                ??_EUSART2_Read 0005                                           stoa@i 001C  
                                         stoa@l 0024                                           stoa@p 0022  
                                         stoa@s 0012                                           stoa@w 001E  
                                         ttemp5 005C                                           ttemp6 005F  
                                         ttemp7 0063                                           utoa@d 0024  
                                         utoa@i 0040                                           utoa@n 0038  
                                         utoa@p 0034                                           utoa@w 0036  
                                         status 000FD8                                      _ModDataCnt 00DB  
                                 ??_ModbusError 0016                                           wtemp8 005C  
                                         xtoa@c 0047                                           xtoa@d 0024  
                                         xtoa@i 0045                                           xtoa@n 003D  
                                         xtoa@p 0039                                           xtoa@w 003B  
                                         xtoa@x 002C                                 __end_of_toupper 4A0C  
                              ___lodiv@dividend 0005           fp__EUSART1_DefaultFramingErrorHandler 0000  
    __end_of_EUSART1_DefaultFramingErrorHandler 532E     __size_of_EUSART1_DefaultFramingErrorHandler 0002  
          ??_EUSART1_DefaultFramingErrorHandler 0001             ?_EUSART1_DefaultFramingErrorHandler 0001  
            _EUSART1_DefaultFramingErrorHandler 532C                     __size_of_EUSART2_is_tx_done 0016  
                                 ??_SaveCardDat 009B                                  checkCRC@crcLow 000C  
         __end_of_EUSART2_SetTxInterruptHandler 5298          __size_of_EUSART2_SetTxInterruptHandler 000A  
                 _EUSART2_SetTxInterruptHandler 528E                                    _toupper$2527 0011  
                               __initialization 3B12                                    __end_of_atoi 3454  
                    __end_of_EUSART1_Initialize 480A                                    __end_of_main 2F84  
                                  __end_of_dtoa 22FA                       __size_of_InitialiseString 03B4  
                                  __end_of_stoa 32BA                                    __end_of_utoa 2A1C  
                                  __end_of_xtoa 25D0                     ?_INTERRUPT_InterruptManager 0001  
                              __end_of_ModbusRx 375E                                          ??_atoi 000E  
                                        ??_main 01E1                                          ??_dtoa 002C  
                                        ??_stoa 0014                                      _ModbusFC10 25D0  
                                    _ModbusFC03 1726                                      _ModbusFC04 012A  
                                        ??_utoa 002C                                          ??_xtoa 002D  
                                 __activetblptr 000003                                __end_of_TogDebug 4FE6  
                           SaveCardDat@NumBytes 0099             __end_of_EUSART2_DefaultErrorHandler 5316  
                   _EUSART2_DefaultErrorHandler 5310                                      _ModbusData 0100  
                         ?_EUSART1_Transmit_ISR 0001                                ___lodiv@quotient 0015  
                          SaveCardDat@MBAddress 0095                                          _ADACCH 000F71  
                                        _ADACCL 000F70                      __end_of_EUSART2_Initialize 478E  
                                        _ADCON0 000F60                                          _ADCON1 000F59  
                                        _ADCON2 000F5A                                          _ADCON3 000F5B  
                      _eusart2TxBufferRemaining 00FF                                          _ADERRH 000F6F  
                                        _ADERRL 000F6E                                          ?_fputc 0007  
                                        _ADLTHH 000F6B                                          STR_100 F94F  
                                        _ADLTHL 000F6A                                          STR_101 FFC2  
                                        STR_102 FFCE                                          STR_110 F724  
                                        ?_fputs 0010                                          STR_103 FBB3  
                                        STR_111 F5AD                                          STR_120 FBF7  
                                        STR_104 FB48                                          STR_112 F3F4  
                                        STR_121 FC7B                                          STR_105 F979  
                                        STR_113 F439                                          STR_130 FC18  
                                        STR_106 F3AB                                          STR_114 F360  
                                        STR_122 F2AF                                          _ADRESH 000F64  
                                        STR_131 FF8B                                          STR_123 FF6B  
                                        STR_107 F8C4                                          STR_115 F47D  
                                        STR_124 FEA5                                          STR_140 FFDE  
                                        STR_132 FF5A                                          STR_108 F9F5  
                                        STR_116 F315                                          STR_141 FFDE  
                                        STR_133 FFA9                                          STR_125 FF48  
                                        STR_117 FE69                                          STR_109 F685  
                                        STR_134 FEA8                                          STR_142 FFF0  
                                        STR_126 FF0F                                          STR_118 F8F7  
                                        _ADRESL 000F63                                          STR_143 FFF0  
                                        STR_135 FFB6                                          STR_119 FAD9  
                                        STR_127 F502                                          STR_144 FFF9  
                                        STR_136 FFE5                                          STR_128 FA1B  
                                        STR_129 FEA8                                          STR_137 FFE5  
                                        STR_145 FFF9                                          STR_138 FFFD  
                                        STR_139 FFFD                                          _ADSTAT 000F65  
                                        _ADUTHH 000F6D                                ___awdiv@dividend 0005  
                                        _ADUTHL 000F6C                                          _ANSELA 000F11  
                                        ?_putch 0001                                          _ANSELB 000F19  
                                        _ANSELC 000F21                                          _ANSELD 000F26  
                                        _ANSELE 000F2E                                          _RC1REG 000F99  
                                        _RC2REG 000E99                       InitialiseString@SerialNum 00B5  
                              ClearEEAddRange@i 0055                                          _RC1STA 000F9D  
                                        _RC2STA 000E9D                                          _RB6PPS 000EF5  
                                        _ODCONA 000F0F                                          _ODCONB 000F17  
                                        _ODCONC 000F1F                                          _RC6PPS 000EFD  
                                        _ODCOND 000F24                                          _ODCONE 000F2C  
                  __size_of_EUSART1_is_rx_ready 0018                              __size_of_ReadRX232 0124  
                                __CFG_WDTCCS$SC 000000                                          i2l5300 50DE  
                                        i2l5302 50E2                                          i2l5320 510A  
                                        i2l5322 510E                                          i2l5314 50E8  
                                        i2l5316 50F8                                          i2l5318 50FA  
                                        _INLVLA 000F0D                                          _INLVLB 000F15  
                                        _INLVLC 000F1D                                          _INLVLD 000F22  
                                        _INLVLE 000F2A                                          i2l5294 50BC  
                                        i2l5296 50CC                                          i2l5560 52FC  
                                        i2l5298 50CE                                          i2l5562 5310  
                                        i2l5900 4068                                          i2l5590 5316  
                                        i2l5910 40CC                                          i2l5902 4078  
                                        i2l6470 0046                                          i2l5592 531C  
                                        i2l5920 4E4E                                          i2l5912 40E8  
                                        i2l5904 4092                                          i2l6480 00E6  
                                        i2l6472 0072                                          i2l6464 001A  
                                        i2l5930 429E                                          i2l5922 4E50  
                                        i2l5914 4106                                          i2l5906 40A2  
                                        i2l6482 00F4                                          i2l6474 0080  
                                        i2l6466 0028                                          i2l5940 42F4  
                                        i2l5932 42AC                                          i2l5924 4E60  
                                        i2l5916 4E2C                                          i2l5908 40B2  
                                        i2l6476 00AC                                          i2l6468 0038  
                                        i2l5942 430E                                          i2l5934 42BC  
                                        i2l5926 4E64                                          i2l5918 4E3E  
                                        i2l6478 00BA                                          _TABLAT 000FF5  
                                        i2l5944 432A                                          i2l5936 42D6  
                                        i2l5928 428E                                          i2l5946 4348  
                                        i2l5938 42E4                                          i2l5890 4D84  
                                        i2l5892 4D94                                          i2l5884 4D5C  
                                        i2l5894 4D98                                          i2l5886 4D6E  
                                        i2l5896 4048                                          i2l5888 4D80  
                                        i2l5898 4058                                   ??_ValidateCmd 0057  
                                        _OSCFRQ 000EDE                                   vfpfcnvrt@done 006B  
                  __size_of_EUSART1_is_tx_ready 0018                                          _NVMDAT 000F80  
                                        _RX1PPS 000EB5                                          _RX2PPS 000E8D  
                                        _TX1REG 000F9A                                          _TX2REG 000E9A  
                              __end_of_checkCRC 39EE                                          _TX1STA 000F9E  
                                        _TX2STA 000E9E                                     ModbusFC10@i 0096  
                                   ModbusFC10@j 0098                                     ModbusFC03@i 0096  
                                   ModbusFC04@i 0098                                          _RXMode 5304  
                                        _TXMode 530A                                          _RXStat 00DE  
                                __CFG_PWRTE$OFF 000000                            __size_of_generateCRC 00DC  
                                        _ByteHi 00D5                                          _ByteLo 00EB  
                            _UART1_Write_string 487E                                  __CFG_XINST$OFF 000000  
                                  vfprintf@cfmt 0053                       __CFG_RSTOSC$HFINTOSC_1MHZ 000000  
                            AddRxBuffToModBus@i 0006                                   _CardConfigIni 2A1C  
                                    _PrintMB400 480A                             __end_of_ModbusError 428E  
                                     ??___aodiv 0015                                       ??___aomod 0015  
                                        ___wmul 5162                                       ??___awdiv 0009  
                                __CFG_STVREN$ON 000000                           CardConfigIni@NumBytes 0010  
                                     ??___lodiv 0015                                       ??___lomod 0015  
                           ?_UART1_Write_string 0006                        ?_EUSART1_SetErrorHandler 0005  
                           __end_of_SaveCardDat 2DDC                                          clear_0 3BB8  
                                        clear_1 3BC4                                          clear_2 3BD0  
                                        clear_3 3BDC                                          clear_4 3BE8  
                                        clear_5 3BF4                                          _rxData 0500  
                              ___awdiv@quotient 000B                     _EUSART2_FramingErrorHandler 01FD  
                                        _printf 5114                                          pad@buf 0019  
                                 ReadRX232@temp 0055                ??_EUSART1_SetOverrunErrorHandler 0007  
               ?_EUSART1_SetOverrunErrorHandler 0005                                          _strcat 513C  
                                        dtoa@fp 0022                         __end_of_DATAEE_ReadByte 51F6  
                                        _strcmp 434E                                          _strcpy 4950  
                                        _strlen 4C76                                   _ExpectedBytes 00EF  
                               _ADCC_Initialize 4C26                                          fputc@c 0007  
                                _PMD_Initialize 51AA                                          fputs@c 0014  
                                        fputs@i 0015                                          fputs@s 0010  
                                     ??_isalpha 0007                                       ??_isdigit 0007  
                                     ??_memmove 000F                                   ??_PrintModbus 008F  
                                     ??_islower 0007                                    __mediumconst F2AE  
                                     ??_isspace 0007                                          tblptrh 000FF7  
                                     ??_isupper 0007                                          tblptrl 000FF6  
                                        tblptru 000FF8                            _EUSART2_Transmit_ISR 4D5C  
             __size_of_ADCC_GetSingleConversion 002E                                          stoa@cp 0020  
                                        stoa@fp 0010                                __end_of_vfprintf 4950  
                     ?_ADCC_GetSingleConversion 0005                                 ??_EUSART1_Write 0005  
                                        utoa@fp 0022                                 ??_EUSART2_Write 0005  
                                        xtoa@fp 0022                                 _eusart1RxBuffer 0400  
                                     ??_toupper 000D                            ??_UART1_Write_string 000A  
                 __size_of_INTERRUPT_Initialize 0004                                 _eusart2RxBuffer 0364  
                               _eusart1TxBuffer 02C2                    __size_of_EUSART2_is_rx_ready 0018  
                             _SYSTEM_Initialize 5188                         __size_of_PrintModRespon 02FE  
                               _eusart2TxBuffer 0384                                      __accesstop 0060  
                       __end_of__initialization 3C02                    __size_of_EUSART2_is_tx_ready 0018  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                               checkCRC@crcHigh 000A                               ??_ClearEEAddRange 0055  
                       ??_EUSART2_RxDataHandler 0001                  __size_of_EUSART1_RxDataHandler 002C  
                 __end_of_EUSART1_RxDataHandler 5114                                  ?_CardConfigIni 000A  
                           __end_of_ValidateCmd 3120                                  __pcstackCOMRAM 0001  
                                  __pidataBANK0 5280                                    __pidataBANK1 454E  
                                  __pidataBANK2 440C                                    __pidataBANK3 4EB2  
                                  __pidataBANK4 4EF2                             ??_SYSTEM_Initialize 0007  
                              _DATAEE_WriteByte 4DA4                                   __end_of_fputc 4682  
                                 __end_of_fputs 4E2C                  ?_EUSART2_SetTxInterruptHandler 0005  
                                 __end_of_putch 52FC                               __end_of_ReadRX232 3B12  
                        __end_of_PMD_Initialize 51C6                            __end_of_EUSART1_Read 4BD4  
                          __end_of_EUSART2_Read 4B7C                                     ?_ModbusFC10 0001  
                                   ?_ModbusFC03 0001                                     ?_ModbusFC04 0001  
                        ??_EUSART1_Transmit_ISR 0001                        ?_EUSART2_SetErrorHandler 0005  
                         ?_EUSART2_Transmit_ISR 0001                     __end_of_EUSART1_Receive_ISR 434E  
                           CardConfigIni@RetNum 000C                            ModbusError@ErrorCode 0014  
                                       ??_fputc 000B                       __end_of_SYSTEM_Initialize 51AA  
                                       ??_fputs 0014                                         ??_putch 0006  
                                 _eusart1RxHead 0059                                   _eusart1TxHead 00E3  
                                 _eusart2RxHead 005A                                   _eusart1RxTail 00E1  
                                 _eusart2TxHead 00E8                                      __pbssBANK0 00CD  
                                    __pbssBANK1 01E3                                      __pbssBANK2 02A2  
                                    __pbssBANK3 0300                                      __pbssBANK4 0400  
                                    __pbssBANK5 0500                                   _eusart2RxTail 00E6  
                                 _eusart1TxTail 00E2               _EUSART1_TxDefaultInterruptHandler 00F8  
                                 _eusart2TxTail 00E7                 ??_EUSART1_SetRxInterruptHandler 0007  
                           __end_of_PrintModbus 201A                ??_EUSART2_SetFramingErrorHandler 0007  
               ?_EUSART2_SetFramingErrorHandler 0005                                     _ModbusError 41CE  
                                     ?_ModbusRx 0001                                         ?_RXMode 0001  
                                       ?_TXMode 0001                           EUSART2_Read@readValue 0005  
                                     ?_TogDebug 0001                 __end_of_EUSART1_SetErrorHandler 52F2  
                                   _SaveCardDat 2C0C                                     ?_PrintMB400 0001  
                              _InitialiseString 1372                                         ?___wmul 0005  
                               __CFG_PPS1WAY$ON 000000                         __end_of_ADCC_Initialize 4C76  
                                       _ADFLTRH 000F73                                         _ADFLTRL 000F72  
                                       _ADPREVH 000F62                                         _MB300xx 0464  
                                       _ADPREVL 000F61                                         _MB301xx 0164  
                                       _MB302xx 00F3                                         _MB303xx 017E  
                                       _MB400xx 03B7                                         _MB304xx 0172  
                                       _MB305xx 023C                                         _MB306xx 0197  
                                       _ADSTPTH 000F69                                         _ADSTPTL 000F68  
                                       ?_printf 007D                                 ?_PMD_Initialize 0001  
                             _ClearModbusRespon 4E70                                  CardConfigIni@i 0016  
                                CardConfigIni@j 0014                                         ?_strcat 0013  
                                       ?_strcmp 0005                                         ?_strcpy 0009  
                                       ?_strlen 0005          __end_of_EUSART1_SetFramingErrorHandler 52E8  
       __size_of_EUSART1_SetFramingErrorHandler 000A                  _EUSART1_SetFramingErrorHandler 52DE  
                              ?_DATAEE_ReadByte 0005                           _eusart2RxStatusBuffer 02A2  
                                     ?_checkCRC 0001                            InitialiseString@Date 00A2  
                            ?_ClearModbusRespon 0001                    ?_EUSART1_DefaultErrorHandler 0001  
                          InitialiseString@Time 00AD                                         _SP1BRGH 000F9C  
                                       _SP1BRGL 000F9B                                         _SP2BRGH 000E9C  
                                       _SP2BRGL 000E9B                                         _OSCCON1 000ED8  
                                       _OSCCON3 000EDA                     __end_of_EUSART2_Receive_ISR 410C  
                            __size_of_vfpfcnvrt 058A                                         _TBLPTRH 000FF7  
                                       _TBLPTRL 000FF6                                         _TBLPTRU 000FF8  
                                       _NVMADRH 000F7F                                         _NVMADRL 000F7E  
                                       _OSCTUNE 000EDD                                         _NVMCON2 000F82  
                                       _SLRCONA 000F0E                                         _SLRCONB 000F16  
                                       _SLRCONC 000F1E                                         _SLRCOND 000F23  
                                       _SLRCONE 000F2B                             ??_ClearModbusRespon 0005  
                              ___lomod@dividend 0005                                         _Address 00F1  
                                  ?_ClearRxBuff 0001                                     PrintMB400@i 008F  
                          DATAEE_WriteByte@bAdd 0005                                     _ValidateCmd 2F84  
                                       _Command 01E3                               generateCRC@HiOrLo 0007  
                                    ??_ModbusRx 0055                                         _ByteNum 00D9  
                           __size_of_ModbusFC10 024A                             __size_of_ModbusFC03 0314  
                           __size_of_ModbusFC04 0CBE                                 ??_CardConfigIni 0012  
                               __size_of_RXMode 0006                                 __size_of_TXMode 0006  
                                       __Hparam 0000                                      ??_TogDebug 0055  
                                       __Lparam 0000                  fp__EUSART2_DefaultErrorHandler 0000  
                                       ___aodiv 3454                                         ___aomod 375E  
                                       ___awdiv 3F84                               generateCRC@crcLow 000C  
                               __size_of___wmul 0026                                         ___lodiv 3C0C  
                                       ___lomod 3EB4                                       ?_vfprintf 0077  
                     __end_of_ClearModbusRespon 4EB2                             _EUSART1_is_rx_ready 5226  
                        InitialiseString@F10760 03A4                          InitialiseString@F10762 00D3  
                        InitialiseString@F10765 024C                          InitialiseString@F10758 02D2  
                        InitialiseString@F10768 0188                      __end_of_EUSART1_is_tx_done 5280  
                                       __pcinit 3B12                 __end_of_EUSART2_SetErrorHandler 52C0  
                                       __ramtop 0F00                             _EUSART1_is_tx_ready 523E  
                                       __ptext0 2DDC                                         __ptext1 2F84  
                                       __ptext2 4FAE                                         __ptext3 2C0C  
                                       __ptext4 39EE                                         __ptext5 513C  
                                       __ptext6 4950                                         __ptext7 3CFC  
                                       __ptext8 51C6                                         __ptext9 4B24  
                               __size_of_printf 0028                                 __size_of_strcat 0026  
                               __size_of_strcmp 00BE                                 __size_of_strcpy 005E  
                               __size_of_strlen 0050                               ReadRX232@NumChars 008F  
                                    ??_checkCRC 0005           fp__EUSART2_DefaultOverrunErrorHandler 0000  
    __end_of_EUSART2_DefaultOverrunErrorHandler 5304     __size_of_EUSART2_DefaultOverrunErrorHandler 0008  
          ??_EUSART2_DefaultOverrunErrorHandler 0001             ?_EUSART2_DefaultOverrunErrorHandler 0001  
            _EUSART2_DefaultOverrunErrorHandler 52FC                           _OSCILLATOR_Initialize 51F6  
                        ??_EUSART2_Transmit_ISR 0001                                    __size_of_abs 0040  
                                  __size_of_pad 00C2                                         _isalpha 4F72  
                                       _isdigit 5056                                         _memmove 3CFC  
                            _EUSART1_Initialize 478E                                         _islower 4FE6  
                      ??_PIN_MANAGER_Initialize 0005                                         _isspace 4BD4  
                                   _PrintModbus 1D38                                         _isupper 501E  
                 ??_EUSART1_DefaultErrorHandler 0001                                         atoi@neg 0012  
                InitialiseString@convertedValue 00C1                      __size_of_SYSTEM_Initialize 0022  
                      __size_of_ClearModbusData 004C                             __size_of_PrintMB400 0074  
                                       _toupper 49AE                            end_of_initialization 3C02  
                        InitialiseString@i_1759 00CB                            ?_EUSART1_is_rx_ready 0001  
                           ?_EUSART1_Initialize 0001                                  _PrintModRespon 1A3A  
                        InitialiseString@RevNum 00C3                      __end_of_EUSART2_is_tx_done 526C  
                          ?_EUSART1_is_tx_ready 0001                                         fputc@fp 0009  
                   _EUSART1_OverrunErrorHandler 01F5                                         fputs@fp 0012  
         __end_of_EUSART1_SetRxInterruptHandler 52D4          __size_of_EUSART1_SetRxInterruptHandler 000A  
                 _EUSART1_SetRxInterruptHandler 52CA                                    SaveCardDat@i 00A1  
                            _EUSART2_Initialize 4710                               __end_of_vfpfcnvrt 1372  
                                       postdec1 000FE5                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc1 000FE6  
                                       postinc2 000FDE                           __size_of_EUSART1_Read 0058  
                         __size_of_EUSART2_Read 0058                                ?_ADCC_Initialize 0001  
                                    ??_vfprintf 0053                __end_of_ADCC_GetSingleConversion 50BC  
                          ??_EUSART1_Initialize 0007                                         strcmp@l 0005  
                                       strcmp@r 0007                           __CFG_WDTCPS$WDTCPS_31 000000  
                           ?_EUSART2_Initialize 0001                                         strcpy@d 0011  
                                       strlen@a 0007                             _EUSART2_is_rx_ready 51C6  
                                       strcpy@s 000F                                         strlen@s 0005  
                             ValidateCmd@F10792 0228                               ValidateCmd@F10795 0214  
                             ValidateCmd@F10798 0200                             _EUSART2_is_tx_ready 520E  
                      ValidateCmd@ConfName_1831 01C5                        ValidateCmd@ConfName_1827 01B1  
                              ClearModbusData@i 0005                         fp__EUSART1_Transmit_ISR 0000  
                               _ClearEEAddRange 4AC8                          __end_of_PrintModRespon 1D38  
              __size_of_EUSART1_SetErrorHandler 000A                             EUSART1_Write@txData 0005  
                              __CFG_FEXTOSC$OFF 000000                           ??_EUSART1_is_rx_ready 0005  
                      __end_of_DATAEE_WriteByte 4DE8                            ??_EUSART2_Initialize 0007  
                          ?_EUSART2_is_rx_ready 0001                           ??_EUSART1_is_tx_ready 0005  
                                 ??_generateCRC 0008                            ?_EUSART2_is_tx_ready 0001  
                                  _EUSART1_Read 4B7C                                    _EUSART2_Read 4B24  
          __size_of_EUSART1_DefaultErrorHandler 0006                                  __end_of_RXMode 530A  
                                __end_of_TXMode 5310                          UART1_Write_string@data 0006  
                __size_of_EUSART2_RxDataHandler 002C                   __end_of_EUSART2_RxDataHandler 50E8  
                  __end_of_INTERRUPT_Initialize 5326                      __size_of_ClearModbusRespon 0042  
                                   vfpfcnvrt@ap 004D                                     vfpfcnvrt@cp 0068  
                                   vfpfcnvrt@fp 0049                                     vfpfcnvrt@ll 0060  
                                __end_of___wmul 5188                          ?_OSCILLATOR_Initialize 0001  
                                  ??_ModbusFC10 008F                                    ??_ModbusFC03 008F  
                                  ??_ModbusFC04 008F                                  __end_of_printf 513C  
                                __end_of_strcat 5162                                  __end_of_strcmp 440C  
                                __end_of_strcpy 49AE                                       _ReadRX232 39EE  
                                __end_of_strlen 4CC6                             start_initialization 3B12  
                               ___lodiv@divisor 000D                                 ___lodiv@counter 001D  
               __size_of_PIN_MANAGER_Initialize 008E                                     __end_of_abs 4F72  
                                   __end_of_pad 41CE                        __end_of_InitialiseString 1726  
 EUSART1_SetRxInterruptHandler@interruptHandler 0005   EUSART1_SetTxInterruptHandler@interruptHandler 0005  
 EUSART2_SetRxInterruptHandler@interruptHandler 0005   EUSART2_SetTxInterruptHandler@interruptHandler 0005  
                               ?_PrintModRespon 0001                                     putch@txData 0006  
                         ??_EUSART2_is_rx_ready 0005                           __end_of_EUSART1_Write 4AC8  
                   __size_of_UART1_Write_string 006E                           __end_of_EUSART2_Write 4A6A  
                         ??_EUSART2_is_tx_ready 0005                          fp__EUSART1_Receive_ISR 0000  
                                  ?_ModbusError 0014                __size_of_EUSART2_SetErrorHandler 000A  
                           DATAEE_ReadByte@bAdd 0005                                        ??_RXMode 0005  
                          __size_of_ClearRxBuff 004A                               ??_ClearModbusData 0005  
                                      ??_TXMode 0005          __end_of_EUSART2_SetOverrunErrorHandler 52AC  
       __size_of_EUSART2_SetOverrunErrorHandler 000A                  _EUSART2_SetOverrunErrorHandler 52A2  
                            __end_of_ModbusFC10 281A                              __end_of_ModbusFC03 1A3A  
                            __end_of_ModbusFC04 0DE8                                    ?_SaveCardDat 0093  
                              __CFG_LPBOREN$OFF 000000                                    ClearRxBuff@i 0006  
                              _SaveCardDat$2889 009D                               __size_of_ModbusRx 0182  
                                   vfprintf@fmt 0079                             __end_of_generateCRC 3EB4  
                                  ??_PrintMB400 0055                                ??_PMD_Initialize 0005  
                                      ??___wmul 0009                               __size_of_TogDebug 0038  
                         _EUSART1_RxDataHandler 50E8                  ?_EUSART1_SetRxInterruptHandler 0005  
                                   __pdataBANK0 00E9                                     __pdataBANK1 0100  
                                   __pdataBANK2 0200                                     __pdataBANK3 03B7  
                                   __pdataBANK4 0464                                        ??_printf 0055  
                                      ??_strcat 0017                                        ??_strcmp 0009  
                                      ??_strcpy 000D                                        ??_strlen 0007  
                                _eusart1RxCount 00E0                         __end_of_ClearEEAddRange 4B24  
                                _eusart2RxCount 00E5                        _ADCC_GetSingleConversion 508E  
                                    ?_ReadRX232 008F                                     __pbssCOMRAM 0057  
             _EUSART1_RxDefaultInterruptHandler 00F6                   __size_of_EUSART1_Transmit_ISR 0044  
                                 __pcstackBANK0 0060                                   __pcstackBANK1 019D  
                              ___aodiv@dividend 0005                               __size_of_checkCRC 012C  
                       fp__EUSART2_Transmit_ISR 0000                               _AddRxBuffToModBus 44AE  
                           EUSART2_Write@txData 0005                              __end_of_PrintMB400 487E  
               ??_EUSART1_SetTxInterruptHandler 0007                              ?_AddRxBuffToModBus 0001  
              ??_EUSART1_SetFramingErrorHandler 0007                 ?_EUSART1_SetFramingErrorHandler 0005  
               ??_EUSART2_SetRxInterruptHandler 0007                                    ?_ValidateCmd 0001  
                  __size_of_EUSART1_Receive_ISR 00C0                          fp__EUSART2_Receive_ISR 0000  
                                     _atoi$2413 0014                                       _atoi$2414 0018  
                                     _atoi$2415 0016                                       __pnvBANK0 00F6  
                                     __pnvBANK1 01F3        __end_of_ADCC_DisableContinuousConversion 532A  
     __size_of_ADCC_DisableContinuousConversion 0004              ??_ADCC_DisableContinuousConversion 0005  
             ?_ADCC_DisableContinuousConversion 0001                _ADCC_DisableContinuousConversion 5326  
                           ??_AddRxBuffToModBus 0005                          _PIN_MANAGER_Initialize 4682  
                                     _dtoa$1909 0034                                       __pintcode 0008  
                             InitialiseString@i 00C9                               InitialiseString@j 00C7  
                                 __pmediumconst F2AE                 ADCC_GetSingleConversion@channel 0009  
                                      ?___aodiv 0005                                        ?___aomod 0005  
                                      ?___awdiv 0005                                       __ptext100 0000  
                              ___aodiv@quotient 0017                                        ?___lodiv 0005  
                                      ?___lomod 0005               _EUSART2_TxDefaultInterruptHandler 00FC  
                  ??_INTERRUPT_InterruptManager 0001                               __size_of_vfprintf 0064  
                               ___lomod@divisor 000D                                        _BAUD1CON 000F9F  
                                      _BAUD2CON 000E9F                                       checkCRC@i 0012  
                                     checkCRC@j 000E                                 ___lomod@counter 0015  
         fp__EUSART1_DefaultOverrunErrorHandler 0000      __end_of_EUSART1_DefaultOverrunErrorHandler 531C  
   __size_of_EUSART1_DefaultOverrunErrorHandler 0006            ??_EUSART1_DefaultOverrunErrorHandler 0001  
           ?_EUSART1_DefaultOverrunErrorHandler 0001              _EUSART1_DefaultOverrunErrorHandler 5316  
                                      ?_isalpha 0005                                        ?_isdigit 0005  
                                      ?_memmove 0009                            _EUSART1_ErrorHandler 01F3  
                               SaveCardDat@Conf 00A3                    ?_EUSART2_DefaultErrorHandler 0001  
                               SaveCardDat@Name 0093                                        ?_islower 0005  
                                      ?_isspace 0005                                    ?_PrintModbus 0001  
                     __end_of_AddRxBuffToModBus 454E                                        ?_isupper 0005  
                       _EUSART1_SetErrorHandler 52E8                              _EUSART1_is_tx_done 526C  
                                __size_of_fputc 0096                                  __size_of_fputs 0044  
                      __size_of_DATAEE_ReadByte 0018                                        ?_toupper 000B  
                                __size_of_putch 000A                            _INTERRUPT_Initialize 5322  
                   InitialiseString@readDataOdd 00C5                    __size_of_EUSART2_Receive_ISR 00C4  
                                   _generateCRC 3DD8                                  ___wmul@product 0009  
                                      _LATAbits 000F83         EUSART1_SetErrorHandler@interruptHandler 0005  
       EUSART2_SetErrorHandler@interruptHandler 0005                                        _LATDbits 000F86  
                           ?_EUSART1_is_tx_done 0001                                        _PIE3bits 000EC5  
                           __CFG_BORV$VBOR_2P45 000000                      UART1_Write_string@data_len 0008  
                                      _MBResCRC 00ED             __size_of_INTERRUPT_InterruptManager 011E  
                                      _MBResCnt 00D7                                        i2u520_40 4E3E  
                                      i2u512_40 4D6E                                        i2u520_41 4E3A  
                                      i2u512_41 4D6A                                        i2u521_40 4E60  
                                      i2u513_40 4D94                                        i2u601_40 00E6  
                                      i2u600_48 00C0                                        i2u521_41 4E5C  
                                      i2u513_41 4D90                                        i2u601_41 00E2  
                                      i2u600_49 00D4                                        i2u522_40 42AC  
                                      i2u514_40 4068                                        i2u602_40 00F4  
                                      i2u522_41 42A8                                        i2u514_41 4064  
                                      i2u602_41 00F0                                        i2u451_40 50DE  
                                      i2u451_41 50DA                                        i2u452_40 510A  
                                      i2u524_40 42E4                                        i2u523_48 42C2  
                                      i2u516_40 40A2                                        i2u515_48 407E  
                                      i2u603_48 00FA                                        i2u452_41 5106  
                                      i2u524_41 42E0                                        i2u523_49 42D6  
                                      i2u516_41 409E                                        i2u515_49 4092  
                                      i2u603_49 010E                                        _PIR3bits 000ECD  
                                      i2u526_40 432A                                        i2u525_48 42FA  
                                      i2u518_40 40E8                                        i2u517_48 40B8  
                                      i2u526_41 4326                                        i2u525_49 430E  
                                      i2u518_41 40E4                                        i2u517_49 40CC  
                         __end_of_CardConfigIni 2C0C                                        i2u527_48 4330  
                                      i2u519_48 40EE                                        i2u527_49 4344  
                                      i2u519_49 4102                                        _PIR7bits 000ED1  
                                      i2u591_40 0028                                        i2u591_41 0024  
                                      i2u592_40 0038                                        i2u592_41 0034  
                                      i2u593_40 0046                                        i2u593_41 0042  
                                      i2u595_40 0072                                        i2u594_48 004C  
                                      i2u595_41 006E                                        i2u594_49 0060  
                                      i2u596_40 0080                                        _MBRespon 0257  
                                      i2u596_41 007C                                        i2u598_40 00AC  
                                      i2u597_48 0086                                        i2u598_41 00A8  
                                      i2u597_49 009A                                        i2u599_40 00BA  
                                      i2u599_41 00B6                          ?_EUSART1_RxDataHandler 0001  
                            _EUSART2_is_tx_done 5256                                       _vfpfcnvrt 0DE8  
                                     _xtoa$1938 0035                                       _xtoa$1939 0037  
                                    _ADCON0bits 000F60                                      _ADCON1bits 000F59  
                                    _ADCON2bits 000F5A                                      _ADCON3bits 000F5B  
                             ___wmul@multiplier 0005                            ??_EUSART1_is_tx_done 0005  
                              ?_ClearEEAddRange 008F                             ?_EUSART2_is_tx_done 0001  
                                   ??_ReadRX232 0055                           SaveCardDat@dataeeAddr 0097  
                                   checkCRC@crc 0010                   __size_of_EUSART2_Transmit_ISR 0048  
                         DATAEE_WriteByte@bData 0007                                    _isspace$2440 000B  
                 ??_EUSART2_DefaultErrorHandler 0001                                      vfpfcnvrt@c 006A  
                                     copy_data0 3B26                                       copy_data1 3B46  
                                     copy_data2 3B66                                       copy_data3 3B86  
                                     copy_data4 3BA6                              ModbusFC10@TempData 0093  
                         ?_INTERRUPT_Initialize 0001                       CardConfigIni@readDataEven 0019  
                             ?_DATAEE_WriteByte 0005                         _EUSART2_SetErrorHandler 52B6  
                         EUSART1_Read@readValue 0005                     _EUSART2_OverrunErrorHandler 01FB  
                            ??_DATAEE_WriteByte 0008                            ??_EUSART2_is_tx_done 0005  
                                      _ModbusRx 35DC                              generateCRC@MessCnt 0005  
                                    _ADSTATbits 000F65           __end_of_EUSART1_SetTxInterruptHandler 52CA  
        __size_of_EUSART1_SetTxInterruptHandler 000A                   _EUSART1_SetTxInterruptHandler 52C0  
                                      __Hrparam 0000                                        _TogDebug 4FAE  
         __end_of_EUSART2_SetRxInterruptHandler 52A2          __size_of_EUSART2_SetRxInterruptHandler 000A  
                 _EUSART2_SetRxInterruptHandler 5298                            __size_of_ModbusError 00C0  
                                    vfprintf@ap 007B                                        __Lrparam 0000  
                                    vfprintf@fp 0077                              __CFG_BOREN$SBORDIS 000000  
                          __size_of_SaveCardDat 01D0                         ??_OSCILLATOR_Initialize 0005  
                                     memmove@d1 0009                                       memmove@s1 000B  
                              __size_of___aodiv 0188                                __size_of___aomod 0164  
                              __size_of___awdiv 00C4                              generateCRC@crcHigh 000A  
                              __size_of___lodiv 00F0                                __size_of___lomod 00D0  
                   __size_of_EUSART1_Initialize 007C                                      ?_vfpfcnvrt 0049  
                               ___aodiv@divisor 000D                                 ___aodiv@counter 0015  
                               ReadRX232@F10774 00E9                       ??_EUSART1_SetErrorHandler 0007  
                             CardConfigIni@Name 000A                                        _checkCRC 38C2  
           __end_of_EUSART1_DefaultErrorHandler 5322                     _EUSART1_DefaultErrorHandler 531C  
                              ??_PrintModRespon 008F                     __end_of_EUSART1_is_rx_ready 523E  
                                    strcat@dest 0013                        __size_of_ADCC_Initialize 0050  
                          _EUSART2_ErrorHandler 01F9                                __size_of_isalpha 003C  
                              __size_of_isdigit 0038                     __end_of_EUSART1_is_tx_ready 5256  
                    __size_of_AddRxBuffToModBus 00A0                                __size_of_memmove 00DC  
                               _ClearModbusData 4CC6                                __size_of_islower 0038  
                              __size_of_isspace 0052                                        __ptext10 4AC8  
                                      __ptext11 4DA4                                        __ptext20 5322  
                                      __ptext12 1372                                        __ptext21 4710  
                                      __ptext13 2A1C                                        __ptext30 52D4  
                                      __ptext22 528E                                        __ptext14 434E  
                                      __ptext31 52DE                                        __ptext23 5298  
                                      __ptext15 51DE                                        __ptext40 3F84  
                                      __ptext32 52E8                                        __ptext24 52A2  
                                      __ptext16 5188                                        __ptext41 35DC  
                                      __ptext33 4C26                                        __ptext25 52AC  
                                      __ptext17 51AA                                        __ptext50 012A  
                                      __ptext42 38C2                                        __ptext34 5326  
                                      __ptext26 52B6                                        __ptext18 4682  
                                      __ptext51 508E                                        __ptext43 5304  
                                      __ptext35 1D38                                        __ptext27 478E  
                                      __ptext19 51F6                                        __ptext60 4F72  
                                      __ptext52 1726                                        __ptext44 5226  
                                      __ptext36 1A3A                                        __ptext28 52C0  
                                      __ptext61 281A                                        __ptext53 5114  
                                      __ptext45 4B7C                                        __ptext37 520E  
                                      __ptext29 52CA                                        __ptext70 52F2  
                                      __ptext62 3EB4                                        __ptext54 48EC  
                                      __ptext46 4D12                                        __ptext38 5256  
                                      __ptext71 4A0C                                        __ptext63 3C0C  
                                      __ptext55 0DE8                                        __ptext47 4CC6  
                                      __ptext39 480A                                        __ptext80 3DD8  
                                      __ptext72 4F32                                        __ptext64 3120  
                                      __ptext56 22FA                                        __ptext48 44AE  
                                      __ptext81 487E                                        __ptext73 375E  
                                      __ptext65 201A                                        __ptext57 49AE  
                                      __ptext49 25D0                                        __ptext90 52FC  
                                      __ptext82 530A                                        __ptext74 3454  
                                      __ptext66 410C                                        __ptext58 4FE6  
                                      __ptext91 532A                                        __ptext83 523E  
                                      __ptext75 32BA                                        __ptext67 4C76  
                                      __ptext59 501E                                        __ptext92 5310  
                                      __ptext84 526C                                        __ptext76 4BD4  
                                      __ptext68 4DE8                                        __ptext93 50BC  
                                      __ptext85 4A6A                                        __ptext77 5056  
                                      __ptext69 45EC                                        __ptext94 4E2C  
                                      __ptext86 4E70                                        __ptext78 5162  
                                      __ptext95 428E                                        __ptext79 41CE  
                                      __ptext96 5316                                        __ptext88 4D5C  
                                      __ptext97 532C                                        __ptext89 4048  
                                      __ptext98 531C                                        __ptext99 50E8  
                              __size_of_isupper 0038                               ?_InitialiseString 0001  
                   DATAEE_WriteByte@GIEBitValue 0008                                      strcpy@dest 0009  
                              __size_of_toupper 005E                     __size_of_EUSART2_Initialize 007E  
                       ClearEEAddRange@NumBytes 0091                              ??_InitialiseString 0055  
                                 __size_of_atoi 019A                                   __size_of_main 01A8  
                                 __size_of_dtoa 02E0                                   __size_of_stoa 019A  
         fp__EUSART2_DefaultFramingErrorHandler 0000      __end_of_EUSART2_DefaultFramingErrorHandler 532C  
   __size_of_EUSART2_DefaultFramingErrorHandler 0002            ??_EUSART2_DefaultFramingErrorHandler 0001  
           ?_EUSART2_DefaultFramingErrorHandler 0001              _EUSART2_DefaultFramingErrorHandler 532A  
                                 __size_of_utoa 0202                                   __size_of_xtoa 02D6  
                             ??_DATAEE_ReadByte 0007                            __size_of_ValidateCmd 019C  
                          __CFG_WDTCWS$WDTCWS_7 000000                         ClearEEAddRange@StartAdd 008F  
                                  PrintModbus@i 0096                                    PrintModbus@j 0094  
          __size_of_EUSART2_DefaultErrorHandler 0006                                      _RC1STAbits 000F9D  
                                     stoa@F1139 0190                                      _RC2STAbits 000E9D  
EUSART1_SetOverrunErrorHandler@interruptHandler 0005  EUSART2_SetOverrunErrorHandler@interruptHandler 0005  
                               PrintModRespon@i 0094                                 PrintModRespon@j 0092  
                    ??_ADCC_GetSingleConversion 0007                                        _rxStatus 00DD  
                                      int$flags 005B                      CardConfigIni@dataeeAddrWrk 000E  
                                      _vfprintf 48EC              __end_of_INTERRUPT_InterruptManager 0126  
                    _INTERRUPT_InterruptManager 0008                           _EUSART2_RxDataHandler 50BC  
                                     printf@fmt 007D                     _EUSART1_FramingErrorHandler 01F7  
                           _EUSART1_Receive_ISR 428E                                ___aomod@dividend 0005  
              ??_EUSART2_SetOverrunErrorHandler 0007                 ?_EUSART2_SetOverrunErrorHandler 0005  
                       InitialiseString@PartNum 008F                                  _vfpfcnvrt$1953 006D  
                       InitialiseString@Partial 00C0                                      _INTCONbits 000FF2  
                   __end_of_EUSART2_is_rx_ready 51DE                                     _NVMCON1bits 000F81  
                   __end_of_EUSART2_is_tx_ready 5226                                        isalpha@c 0005  
                    __end_of_UART1_Write_string 48EC                                        isdigit@c 0005  
                        ??_INTERRUPT_Initialize 0005                                        memmove@d 0011  
                                      memmove@n 000D                                        memmove@s 0013  
                     ??_EUSART2_SetErrorHandler 0007                            __size_of_PrintModbus 02E2  
                                      intlevel2 0000                                   ??_ClearRxBuff 0005  
                                     strcat@src 0015                            ?_EUSART1_Receive_ISR 0001  
                      ModbusFC04@convertedValue 0095                                        islower@c 0005  
                                      isspace@c 0005                         ?_PIN_MANAGER_Initialize 0001  
                             __CFG_CLKOUTEN$OFF 000000          __end_of_EUSART1_SetOverrunErrorHandler 52DE  
       __size_of_EUSART1_SetOverrunErrorHandler 000A                  _EUSART1_SetOverrunErrorHandler 52D4  
                                     strcpy@src 000B                                        isupper@c 0005  
                  __end_of_EUSART1_Transmit_ISR 4E70                                        printf@ap 008D  
EUSART1_SetFramingErrorHandler@interruptHandler 0005  EUSART2_SetFramingErrorHandler@interruptHandler 0005  
                ?_EUSART1_SetTxInterruptHandler 0005                  ?_EUSART2_SetRxInterruptHandler 0005  
                               ___aomod@divisor 000D                                     ??_vfpfcnvrt 004F  
                                      stoa@nuls 0015                                 ___aomod@counter 0015  
                        __size_of_EUSART1_Write 005E                              _eusart1RxLastError 00DF  
                        __size_of_EUSART2_Write 005E                             _EUSART2_Receive_ISR 4048  
                       __end_of_ClearModbusData 4D12                                        toupper@c 000B  
                                    _TX1STAbits 000F9E                                      _TX2STAbits 000E9E  
                                  ___aodiv@sign 0016                                 ModbusFC10@error 0095  
                         ??_EUSART1_Receive_ISR 0001                  __end_of_PIN_MANAGER_Initialize 4710  
                             ??_ADCC_Initialize 0005                                 ModbusFC03@error 0095  
                               ModbusFC04@error 0097                 ??_EUSART2_SetTxInterruptHandler 0007  
                          ?_EUSART2_Receive_ISR 0001                              _eusart2RxLastError 00E4  
                                  ?_generateCRC 0005                         ??_EUSART1_RxDataHandler 0001  
                                  ___aomod@sign 0016               _EUSART2_RxDefaultInterruptHandler 00FA  
                           __end_of_ClearRxBuff 4D5C  
