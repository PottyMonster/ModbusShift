

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Mar 26 00:12:20 2021

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F46K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
    10                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    13                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    14                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    22                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    23                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    24                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    25                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    26                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    27                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    28                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    29                           	psect	text0,global,reloc=2,class=CODE,delta=1
    30                           	psect	text1,global,reloc=2,class=CODE,delta=1
    31                           	psect	text2,global,reloc=2,class=CODE,delta=1
    32                           	psect	text3,global,reloc=2,class=CODE,delta=1
    33                           	psect	text4,global,reloc=2,class=CODE,delta=1
    34                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text8,global,reloc=2,class=CODE,delta=1
    38                           	psect	text9,global,reloc=2,class=CODE,delta=1
    39                           	psect	text10,global,reloc=2,class=CODE,delta=1
    40                           	psect	text11,global,reloc=2,class=CODE,delta=1
    41                           	psect	text12,global,reloc=2,class=CODE,delta=1
    42                           	psect	text13,global,reloc=2,class=CODE,delta=1
    43                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text15,global,reloc=2,class=CODE,delta=1
    45                           	psect	text16,global,reloc=2,class=CODE,delta=1
    46                           	psect	text17,global,reloc=2,class=CODE,delta=1
    47                           	psect	text18,global,reloc=2,class=CODE,delta=1
    48                           	psect	text19,global,reloc=2,class=CODE,delta=1
    49                           	psect	text20,global,reloc=2,class=CODE,delta=1
    50                           	psect	text21,global,reloc=2,class=CODE,delta=1
    51                           	psect	text22,global,reloc=2,class=CODE,delta=1
    52                           	psect	text23,global,reloc=2,class=CODE,delta=1
    53                           	psect	text24,global,reloc=2,class=CODE,delta=1
    54                           	psect	text25,global,reloc=2,class=CODE,delta=1
    55                           	psect	text26,global,reloc=2,class=CODE,delta=1
    56                           	psect	text27,global,reloc=2,class=CODE,delta=1
    57                           	psect	text28,global,reloc=2,class=CODE,delta=1
    58                           	psect	text29,global,reloc=2,class=CODE,delta=1
    59                           	psect	text30,global,reloc=2,class=CODE,delta=1
    60                           	psect	text31,global,reloc=2,class=CODE,delta=1
    61                           	psect	text32,global,reloc=2,class=CODE,delta=1
    62                           	psect	text33,global,reloc=2,class=CODE,delta=1
    63                           	psect	text34,global,reloc=2,class=CODE,delta=1
    64                           	psect	text35,global,reloc=2,class=CODE,delta=1
    65                           	psect	text36,global,reloc=2,class=CODE,delta=1
    66                           	psect	text37,global,reloc=2,class=CODE,delta=1
    67                           	psect	text38,global,reloc=2,class=CODE,delta=1
    68                           	psect	text39,global,reloc=2,class=CODE,delta=1
    69                           	psect	text40,global,reloc=2,class=CODE,delta=1
    70                           	psect	text41,global,reloc=2,class=CODE,delta=1
    71                           	psect	text42,global,reloc=2,class=CODE,delta=1
    72                           	psect	text43,global,reloc=2,class=CODE,delta=1
    73                           	psect	text44,global,reloc=2,class=CODE,delta=1
    74                           	psect	text45,global,reloc=2,class=CODE,delta=1
    75                           	psect	text46,global,reloc=2,class=CODE,delta=1
    76                           	psect	text47,global,reloc=2,class=CODE,delta=1
    77                           	psect	text48,global,reloc=2,class=CODE,delta=1
    78                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text50,global,reloc=2,class=CODE,delta=1
    80                           	psect	text51,global,reloc=2,class=CODE,delta=1
    81                           	psect	text52,global,reloc=2,class=CODE,delta=1
    82                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text57,global,reloc=2,class=CODE,delta=1
    87                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text60,global,reloc=2,class=CODE,delta=1
    90                           	psect	text61,global,reloc=2,class=CODE,delta=1
    91                           	psect	text62,global,reloc=2,class=CODE,delta=1
    92                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text66,global,reloc=2,class=CODE,delta=1
    96                           	psect	text67,global,reloc=2,class=CODE,delta=1
    97                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
    99                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=1
   100                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
   101                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
   103                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=1
   104                           	psect	text75,global,reloc=2,class=CODE,delta=1
   105                           	psect	text76,global,reloc=2,class=CODE,delta=1
   106                           	psect	text77,global,reloc=2,class=CODE,delta=1
   107                           	psect	text78,global,reloc=2,class=CODE,delta=1
   108                           	psect	text79,global,reloc=2,class=CODE,delta=1
   109                           	psect	text80,global,reloc=2,class=CODE,delta=1
   110                           	psect	text81,global,reloc=2,class=CODE,delta=1
   111                           	psect	text82,global,reloc=2,class=CODE,delta=1
   112                           	psect	text83,global,reloc=2,class=CODE,delta=1
   113                           	psect	text84,global,reloc=2,class=CODE,delta=1
   114                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   115                           	psect	text86,global,reloc=2,class=CODE,delta=1
   116                           	psect	text87,global,reloc=2,class=CODE,delta=1
   117                           	psect	text88,global,reloc=2,class=CODE,delta=1
   118                           	psect	text89,global,reloc=2,class=CODE,delta=1
   119                           	psect	text90,global,reloc=2,class=CODE,delta=1
   120                           	psect	text91,global,reloc=2,class=CODE,delta=1
   121                           	psect	text92,global,reloc=2,class=CODE,delta=1
   122                           	psect	text93,global,reloc=2,class=CODE,delta=1
   123                           	psect	text94,global,reloc=2,class=CODE,delta=1
   124                           	psect	text95,global,reloc=2,class=CODE,delta=1
   125                           	psect	text96,global,reloc=2,class=CODE,delta=1
   126                           	psect	text97,global,reloc=2,class=CODE,delta=1
   127                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   128                           	psect	text98,global,reloc=2,class=CODE,delta=1
   129                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   130                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   131  0000                     
   132                           ; Version 2.10
   133                           ; Generated 31/07/2019 GMT
   134                           ; 
   135                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   136                           ; All rights reserved.
   137                           ; 
   138                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   139                           ; 
   140                           ; Redistribution and use in source and binary forms, with or without modification, are
   141                           ; permitted provided that the following conditions are met:
   142                           ; 
   143                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   144                           ;        conditions and the following disclaimer.
   145                           ; 
   146                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   147                           ;        of conditions and the following disclaimer in the documentation and/or other
   148                           ;        materials provided with the distribution.
   149                           ; 
   150                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   151                           ;        software without specific prior written permission.
   152                           ; 
   153                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   154                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   155                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   156                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   157                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   158                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   159                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   160                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   161                           ; 
   162                           ; 
   163                           ; Code-generator required, PIC18F46K40 Definitions
   164                           ; 
   165                           ; SFR Addresses
   166  0000                     
   167                           	psect	idataBANK0
   168  0046B0                     __pidataBANK0:
   169                           	opt callstack 0
   170                           
   171                           ;initializer for _MB303xx
   172  0046B0  3132               	dw	12594
   173  0046B2  3334               	dw	13108
   174  0046B4  3536               	dw	13622
   175  0046B6  3738               	dw	14136
   176  0046B8  3930               	dw	14640
   177                           
   178                           ;initializer for ReadRX232@F10772
   179  0046BA  5A                 	db	90
   180  0046BB  00                 	db	0
   181                           
   182                           ;initializer for _ByteLo
   183  0046BC  00FF               	dw	255
   184                           
   185                           ;initializer for _MBResCRC
   186  0046BE  FFFF               	dw	65535
   187                           
   188                           ;initializer for _ExpectedBytes
   189  0046C0  0008               	dw	8
   190                           
   191                           ;initializer for _MB302xx
   192  0046C2  0004               	dw	4
   193                           
   194                           	psect	idataBANK1
   195  003A3A                     __pidataBANK1:
   196                           	opt callstack 0
   197                           
   198                           ;initializer for _ModbusData
   199  003A3A  FF                 	db	255
   200  003A3B  00                 	db	0
   201  003A3C  00                 	db	0
   202  003A3D  00                 	db	0
   203  003A3E  00                 	db	0
   204  003A3F  00                 	db	0
   205  003A40  00                 	db	0
   206  003A41  00                 	db	0
   207  003A42  00                 	db	0
   208  003A43  00                 	db	0
   209  003A44  00                 	db	0
   210  003A45  00                 	db	0
   211  003A46  00                 	db	0
   212  003A47  00                 	db	0
   213  003A48  00                 	db	0
   214  003A49  00                 	db	0
   215  003A4A  00                 	db	0
   216  003A4B  00                 	db	0
   217  003A4C  00                 	db	0
   218  003A4D  00                 	db	0
   219  003A4E  00                 	db	0
   220  003A4F  00                 	db	0
   221  003A50  00                 	db	0
   222  003A51  00                 	db	0
   223  003A52  00                 	db	0
   224  003A53  00                 	db	0
   225  003A54  00                 	db	0
   226  003A55  00                 	db	0
   227  003A56  00                 	db	0
   228  003A57  00                 	db	0
   229  003A58  00                 	db	0
   230  003A59  00                 	db	0
   231  003A5A  00                 	db	0
   232  003A5B  00                 	db	0
   233  003A5C  00                 	db	0
   234  003A5D  00                 	db	0
   235  003A5E  00                 	db	0
   236  003A5F  00                 	db	0
   237  003A60  00                 	db	0
   238  003A61  00                 	db	0
   239  003A62  00                 	db	0
   240  003A63  00                 	db	0
   241  003A64  00                 	db	0
   242  003A65  00                 	db	0
   243  003A66  00                 	db	0
   244  003A67  00                 	db	0
   245  003A68  00                 	db	0
   246  003A69  00                 	db	0
   247  003A6A  00                 	db	0
   248  003A6B  00                 	db	0
   249  003A6C  00                 	db	0
   250  003A6D  00                 	db	0
   251  003A6E  00                 	db	0
   252  003A6F  00                 	db	0
   253  003A70  00                 	db	0
   254  003A71  00                 	db	0
   255  003A72  00                 	db	0
   256  003A73  00                 	db	0
   257  003A74  00                 	db	0
   258  003A75  00                 	db	0
   259  003A76  00                 	db	0
   260  003A77  00                 	db	0
   261  003A78  00                 	db	0
   262  003A79  00                 	db	0
   263  003A7A  00                 	db	0
   264  003A7B  00                 	db	0
   265  003A7C  00                 	db	0
   266  003A7D  00                 	db	0
   267  003A7E  00                 	db	0
   268  003A7F  00                 	db	0
   269  003A80  00                 	db	0
   270  003A81  00                 	db	0
   271  003A82  00                 	db	0
   272  003A83  00                 	db	0
   273  003A84  00                 	db	0
   274  003A85  00                 	db	0
   275  003A86  00                 	db	0
   276  003A87  00                 	db	0
   277  003A88  00                 	db	0
   278  003A89  00                 	db	0
   279  003A8A  00                 	db	0
   280  003A8B  00                 	db	0
   281  003A8C  00                 	db	0
   282  003A8D  00                 	db	0
   283  003A8E  00                 	db	0
   284  003A8F  00                 	db	0
   285  003A90  00                 	db	0
   286  003A91  00                 	db	0
   287  003A92  00                 	db	0
   288  003A93  00                 	db	0
   289  003A94  00                 	db	0
   290  003A95  00                 	db	0
   291  003A96  00                 	db	0
   292  003A97  00                 	db	0
   293  003A98  00                 	db	0
   294  003A99  00                 	db	0
   295  003A9A  00                 	db	0
   296  003A9B  00                 	db	0
   297  003A9C  00                 	db	0
   298  003A9D  00                 	db	0
   299                           
   300                           ;initializer for _MB301xx
   301  003A9E  4150               	dw	16720
   302  003AA0  3030               	dw	12336
   303  003AA2  3036               	dw	12342
   304  003AA4  3033               	dw	12339
   305  003AA6  3033               	dw	12339
   306  003AA8  2D30               	dw	11568
   307  003AAA  3200               	dw	12800
   308                           
   309                           ;initializer for _MB304xx
   310  003AAC  00FF               	dw	255
   311  003AAE  00                 	db	0
   312  003AAF  00                 	db	0
   313  003AB0  00                 	db	0
   314  003AB1  00                 	db	0
   315  003AB2  00                 	db	0
   316  003AB3  00                 	db	0
   317  003AB4  00                 	db	0
   318  003AB5  00                 	db	0
   319  003AB6  00                 	db	0
   320  003AB7  00                 	db	0
   321                           
   322                           ;initializer for InitialiseString@F10766
   323  003AB8  30                 	db	48
   324  003AB9  30                 	db	48
   325  003ABA  3A                 	db	58
   326  003ABB  32                 	db	50
   327  003ABC  34                 	db	52
   328  003ABD  3A                 	db	58
   329  003ABE  30                 	db	48
   330  003ABF  30                 	db	48
   331                           
   332                           ;initializer for stoa@F1139
   333  003AC0  28                 	db	40
   334  003AC1  6E                 	db	110
   335  003AC2  75                 	db	117
   336  003AC3  6C                 	db	108
   337  003AC4  6C                 	db	108
   338  003AC5  29                 	db	41
   339  003AC6  00                 	db	0
   340                           
   341                           ;initializer for _MB306xx
   342  003AC7  00FF               	dw	255
   343  003AC9  00                 	db	0
   344  003ACA  00                 	db	0
   345  003ACB  00                 	db	0
   346  003ACC  00                 	db	0
   347                           
   348                           	psect	idataBANK2
   349  003902                     __pidataBANK2:
   350                           	opt callstack 0
   351                           
   352                           ;initializer for ValidateCmd@F10796
   353  003902  52                 	db	82
   354  003903  65                 	db	101
   355  003904  76                 	db	118
   356  003905  69                 	db	105
   357  003906  73                 	db	115
   358  003907  69                 	db	105
   359  003908  6F                 	db	111
   360  003909  6E                 	db	110
   361  00390A  00                 	db	0
   362  00390B  00                 	db	0
   363  00390C  00                 	db	0
   364  00390D  00                 	db	0
   365  00390E  00                 	db	0
   366  00390F  00                 	db	0
   367  003910  00                 	db	0
   368  003911  00                 	db	0
   369  003912  00                 	db	0
   370  003913  00                 	db	0
   371  003914  00                 	db	0
   372  003915  00                 	db	0
   373                           
   374                           ;initializer for ValidateCmd@F10793
   375  003916  50                 	db	80
   376  003917  61                 	db	97
   377  003918  72                 	db	114
   378  003919  74                 	db	116
   379  00391A  20                 	db	32
   380  00391B  4E                 	db	78
   381  00391C  75                 	db	117
   382  00391D  6D                 	db	109
   383  00391E  62                 	db	98
   384  00391F  65                 	db	101
   385  003920  72                 	db	114
   386  003921  00                 	db	0
   387  003922  00                 	db	0
   388  003923  00                 	db	0
   389  003924  00                 	db	0
   390  003925  00                 	db	0
   391  003926  00                 	db	0
   392  003927  00                 	db	0
   393  003928  00                 	db	0
   394  003929  00                 	db	0
   395                           
   396                           ;initializer for ValidateCmd@F10790
   397  00392A  53                 	db	83
   398  00392B  65                 	db	101
   399  00392C  72                 	db	114
   400  00392D  69                 	db	105
   401  00392E  61                 	db	97
   402  00392F  6C                 	db	108
   403  003930  20                 	db	32
   404  003931  4E                 	db	78
   405  003932  75                 	db	117
   406  003933  6D                 	db	109
   407  003934  62                 	db	98
   408  003935  65                 	db	101
   409  003936  72                 	db	114
   410  003937  00                 	db	0
   411  003938  00                 	db	0
   412  003939  00                 	db	0
   413  00393A  00                 	db	0
   414  00393B  00                 	db	0
   415  00393C  00                 	db	0
   416  00393D  00                 	db	0
   417                           
   418                           ;initializer for _MB305xx
   419  00393E  00FF               	dw	255
   420  003940  00                 	db	0
   421  003941  00                 	db	0
   422  003942  00                 	db	0
   423  003943  00                 	db	0
   424  003944  00                 	db	0
   425  003945  00                 	db	0
   426  003946  00                 	db	0
   427  003947  00                 	db	0
   428  003948  00                 	db	0
   429  003949  00                 	db	0
   430  00394A  00                 	db	0
   431  00394B  00                 	db	0
   432  00394C  00                 	db	0
   433  00394D  00                 	db	0
   434                           
   435                           ;initializer for InitialiseString@F10763
   436  00394E  4D                 	db	77
   437  00394F  61                 	db	97
   438  003950  72                 	db	114
   439  003951  20                 	db	32
   440  003952  32                 	db	50
   441  003953  35                 	db	53
   442  003954  20                 	db	32
   443  003955  32                 	db	50
   444  003956  30                 	db	48
   445  003957  32                 	db	50
   446  003958  31                 	db	49
   447                           
   448                           ;initializer for _MBRespon
   449  003959  FF                 	db	255
   450  00395A  00                 	db	0
   451  00395B  00                 	db	0
   452  00395C  00                 	db	0
   453  00395D  00                 	db	0
   454  00395E  00                 	db	0
   455  00395F  00                 	db	0
   456  003960  00                 	db	0
   457  003961  00                 	db	0
   458  003962  00                 	db	0
   459  003963  00                 	db	0
   460  003964  00                 	db	0
   461  003965  00                 	db	0
   462  003966  00                 	db	0
   463  003967  00                 	db	0
   464  003968  00                 	db	0
   465  003969  00                 	db	0
   466  00396A  00                 	db	0
   467  00396B  00                 	db	0
   468  00396C  00                 	db	0
   469  00396D  00                 	db	0
   470  00396E  00                 	db	0
   471  00396F  00                 	db	0
   472  003970  00                 	db	0
   473  003971  00                 	db	0
   474  003972  00                 	db	0
   475  003973  00                 	db	0
   476  003974  00                 	db	0
   477  003975  00                 	db	0
   478  003976  00                 	db	0
   479  003977  00                 	db	0
   480  003978  00                 	db	0
   481  003979  00                 	db	0
   482  00397A  00                 	db	0
   483  00397B  00                 	db	0
   484  00397C  00                 	db	0
   485  00397D  00                 	db	0
   486  00397E  00                 	db	0
   487  00397F  00                 	db	0
   488  003980  00                 	db	0
   489  003981  00                 	db	0
   490  003982  00                 	db	0
   491  003983  00                 	db	0
   492  003984  00                 	db	0
   493  003985  00                 	db	0
   494  003986  00                 	db	0
   495  003987  00                 	db	0
   496  003988  00                 	db	0
   497  003989  00                 	db	0
   498  00398A  00                 	db	0
   499  00398B  00                 	db	0
   500  00398C  00                 	db	0
   501  00398D  00                 	db	0
   502  00398E  00                 	db	0
   503  00398F  00                 	db	0
   504  003990  00                 	db	0
   505  003991  00                 	db	0
   506  003992  00                 	db	0
   507  003993  00                 	db	0
   508  003994  00                 	db	0
   509  003995  00                 	db	0
   510  003996  00                 	db	0
   511  003997  00                 	db	0
   512  003998  00                 	db	0
   513  003999  00                 	db	0
   514  00399A  00                 	db	0
   515  00399B  00                 	db	0
   516  00399C  00                 	db	0
   517  00399D  00                 	db	0
   518  00399E  00                 	db	0
   519  00399F  00                 	db	0
   520  0039A0  00                 	db	0
   521  0039A1  00                 	db	0
   522  0039A2  00                 	db	0
   523  0039A3  00                 	db	0
   524                           
   525                           	psect	idataBANK3
   526  0042F6                     __pidataBANK3:
   527                           	opt callstack 0
   528                           
   529                           ;initializer for _MB300xx
   530  0042F6  0001               	dw	1
   531  0042F8  0002               	dw	2
   532  0042FA  0003               	dw	3
   533  0042FC  0004               	dw	4
   534  0042FE  0005               	dw	5
   535  004300  0006               	dw	6
   536  004302  0007               	dw	7
   537  004304  0008               	dw	8
   538  004306  0009               	dw	9
   539  004308  000A               	dw	10
   540  00430A  000B               	dw	11
   541  00430C  000C               	dw	12
   542  00430E  000D               	dw	13
   543  004310  000E               	dw	14
   544  004312  000F               	dw	15
   545  004314  0010               	dw	16
   546  004316  0011               	dw	17
   547  004318  0012               	dw	18
   548  00431A  0013               	dw	19
   549  00431C  0014               	dw	20
   550  00431E  0015               	dw	21
   551  004320  0016               	dw	22
   552  004322  0017               	dw	23
   553  004324  0018               	dw	24
   554  004326  0019               	dw	25
   555  004328  001A               	dw	26
   556  00432A  001B               	dw	27
   557  00432C  001C               	dw	28
   558  00432E  001D               	dw	29
   559  004330  001E               	dw	30
   560  004332  001F               	dw	31
   561  004334  0020               	dw	32
   562                           
   563                           	psect	idataBANK4
   564  004336                     __pidataBANK4:
   565                           	opt callstack 0
   566                           
   567                           ;initializer for _MB400xx
   568  004336  0020               	dw	32
   569  004338  001F               	dw	31
   570  00433A  001E               	dw	30
   571  00433C  001D               	dw	29
   572  00433E  001C               	dw	28
   573  004340  001B               	dw	27
   574  004342  001A               	dw	26
   575  004344  0019               	dw	25
   576  004346  0018               	dw	24
   577  004348  0017               	dw	23
   578  00434A  0016               	dw	22
   579  00434C  0015               	dw	21
   580  00434E  0014               	dw	20
   581  004350  0013               	dw	19
   582  004352  0012               	dw	18
   583  004354  0011               	dw	17
   584  004356  0010               	dw	16
   585  004358  000F               	dw	15
   586  00435A  000E               	dw	14
   587  00435C  000D               	dw	13
   588  00435E  000C               	dw	12
   589  004360  000B               	dw	11
   590  004362  000A               	dw	10
   591  004364  0009               	dw	9
   592  004366  0008               	dw	8
   593  004368  0007               	dw	7
   594  00436A  0006               	dw	6
   595  00436C  0005               	dw	5
   596  00436E  0004               	dw	4
   597  004370  0003               	dw	3
   598  004372  0002               	dw	2
   599  004374  0001               	dw	1
   600                           
   601                           	psect	nvBANK0
   602  0000FC                     __pnvBANK0:
   603                           	opt callstack 0
   604  0000FC                     _EUSART2_TxDefaultInterruptHandler:
   605                           	opt callstack 0
   606  0000FC                     	ds	2
   607  0000FE                     _eusart1TxBufferRemaining:
   608                           	opt callstack 0
   609  0000FE                     	ds	1
   610  0000FF                     _eusart2TxBufferRemaining:
   611                           	opt callstack 0
   612  0000FF                     	ds	1
   613                           
   614                           	psect	nvBANK1
   615  0001D9                     __pnvBANK1:
   616                           	opt callstack 0
   617  0001D9                     _EUSART1_ErrorHandler:
   618                           	opt callstack 0
   619  0001D9                     	ds	2
   620  0001DB                     _EUSART1_OverrunErrorHandler:
   621                           	opt callstack 0
   622  0001DB                     	ds	2
   623  0001DD                     _EUSART1_FramingErrorHandler:
   624                           	opt callstack 0
   625  0001DD                     	ds	2
   626  0001DF                     _EUSART2_ErrorHandler:
   627                           	opt callstack 0
   628  0001DF                     	ds	2
   629  0001E1                     _EUSART2_OverrunErrorHandler:
   630                           	opt callstack 0
   631  0001E1                     	ds	2
   632  0001E3                     _EUSART2_FramingErrorHandler:
   633                           	opt callstack 0
   634  0001E3                     	ds	2
   635  0001E5                     _EUSART1_RxDefaultInterruptHandler:
   636                           	opt callstack 0
   637  0001E5                     	ds	2
   638  0001E7                     _EUSART1_TxDefaultInterruptHandler:
   639                           	opt callstack 0
   640  0001E7                     	ds	2
   641  0001E9                     _EUSART2_RxDefaultInterruptHandler:
   642                           	opt callstack 0
   643  0001E9                     	ds	2
   644  0000                     _RC2REG	set	3737
   645  0000                     _RC2STAbits	set	3741
   646  0000                     _TX2REG	set	3738
   647  0000                     _TX2STAbits	set	3742
   648  0000                     _SP2BRGH	set	3740
   649  0000                     _SP2BRGL	set	3739
   650  0000                     _TX2STA	set	3742
   651  0000                     _RC2STA	set	3741
   652  0000                     _BAUD2CON	set	3743
   653  0000                     _PIR7bits	set	3793
   654  0000                     _PIR3bits	set	3789
   655  0000                     _PIE3bits	set	3781
   656  0000                     _PMD5	set	3814
   657  0000                     _PMD4	set	3813
   658  0000                     _PMD3	set	3812
   659  0000                     _PMD2	set	3811
   660  0000                     _PMD1	set	3810
   661  0000                     _PMD0	set	3809
   662  0000                     _OSCTUNE	set	3805
   663  0000                     _OSCFRQ	set	3806
   664  0000                     _OSCEN	set	3804
   665  0000                     _OSCCON3	set	3802
   666  0000                     _OSCCON1	set	3800
   667  0000                     _RX2PPS	set	3725
   668  0000                     _RC6PPS	set	3837
   669  0000                     _RB6PPS	set	3829
   670  0000                     _RX1PPS	set	3765
   671  0000                     _ADCON1bits	set	3929
   672  0000                     _ADCON2bits	set	3930
   673  0000                     _ADCON3bits	set	3931
   674  0000                     _ADACQ	set	3932
   675  0000                     _ADCLK	set	3927
   676  0000                     _ADACT	set	3926
   677  0000                     _ADREF	set	3928
   678  0000                     _ADCON3	set	3931
   679  0000                     _ADCON2	set	3930
   680  0000                     _ADCON1	set	3929
   681  0000                     _ADPRE	set	3934
   682  0000                     _ADCAP	set	3933
   683  0000                     _ADPCH	set	3935
   684  0000                     _INLVLE	set	3882
   685  0000                     _INLVLD	set	3874
   686  0000                     _INLVLC	set	3869
   687  0000                     _INLVLB	set	3861
   688  0000                     _INLVLA	set	3853
   689  0000                     _SLRCONE	set	3883
   690  0000                     _SLRCOND	set	3875
   691  0000                     _SLRCONC	set	3870
   692  0000                     _SLRCONB	set	3862
   693  0000                     _SLRCONA	set	3854
   694  0000                     _ODCOND	set	3876
   695  0000                     _ODCONC	set	3871
   696  0000                     _ODCONB	set	3863
   697  0000                     _ODCONA	set	3855
   698  0000                     _ODCONE	set	3884
   699  0000                     _WPUC	set	3872
   700  0000                     _WPUA	set	3856
   701  0000                     _WPUB	set	3864
   702  0000                     _WPUE	set	3885
   703  0000                     _WPUD	set	3877
   704  0000                     _ANSELA	set	3857
   705  0000                     _ANSELE	set	3886
   706  0000                     _ANSELB	set	3865
   707  0000                     _ANSELC	set	3873
   708  0000                     _ANSELD	set	3878
   709  0000                     _ADERRL	set	3950
   710  0000                     _ADERRH	set	3951
   711  0000                     _ADPREVL	set	3937
   712  0000                     _ADPREVH	set	3938
   713  0000                     _ADFLTRL	set	3954
   714  0000                     _ADFLTRH	set	3955
   715  0000                     _ADSTATbits	set	3941
   716  0000                     _ADACCL	set	3952
   717  0000                     _ADACCH	set	3953
   718  0000                     _ADCNT	set	3943
   719  0000                     _ADRESL	set	3939
   720  0000                     _ADRESH	set	3940
   721  0000                     _ADCON0bits	set	3936
   722  0000                     _ADCON0	set	3936
   723  0000                     _ADSTAT	set	3941
   724  0000                     _ADRPT	set	3942
   725  0000                     _ADSTPTH	set	3945
   726  0000                     _ADSTPTL	set	3944
   727  0000                     _ADUTHH	set	3949
   728  0000                     _ADUTHL	set	3948
   729  0000                     _ADLTHH	set	3947
   730  0000                     _ADLTHL	set	3946
   731  0000                     _LATDbits	set	3974
   732  0000                     _LATAbits	set	3971
   733  0000                     _RC1REG	set	3993
   734  0000                     _RC1STAbits	set	3997
   735  0000                     _TX1REG	set	3994
   736  0000                     _TX1STAbits	set	3998
   737  0000                     _SP1BRGH	set	3996
   738  0000                     _SP1BRGL	set	3995
   739  0000                     _TX1STA	set	3998
   740  0000                     _RC1STA	set	3997
   741  0000                     _BAUD1CON	set	3999
   742  0000                     _NVMDAT	set	3968
   743  0000                     _NVMADRL	set	3966
   744  0000                     _NVMADRH	set	3967
   745  0000                     _NVMCON2	set	3970
   746  0000                     _TABLAT	set	4085
   747  0000                     _TBLPTRL	set	4086
   748  0000                     _TBLPTRH	set	4087
   749  0000                     _TBLPTRU	set	4088
   750  0000                     _NVMCON1bits	set	3969
   751  0000                     _INTCONbits	set	4082
   752  0000                     _TRISD	set	3979
   753  0000                     _TRISC	set	3978
   754  0000                     _TRISB	set	3977
   755  0000                     _TRISA	set	3976
   756  0000                     _TRISE	set	3980
   757  0000                     _LATC	set	3973
   758  0000                     _LATB	set	3972
   759  0000                     _LATA	set	3971
   760  0000                     _LATD	set	3974
   761  0000                     _LATE	set	3975
   762                           
   763                           	psect	mediumconst
   764  00F62A                     __pmediumconst:
   765                           	opt callstack 0
   766  00F62A  00                 	db	0
   767  00F62B                     STR_83:
   768                           
   769                           ; BSR set to: 0
   770  00F62B  20                 	db	32
   771  00F62C  20                 	db	32
   772  00F62D  20                 	db	32
   773  00F62E  20                 	db	32
   774  00F62F  20                 	db	32
   775  00F630  20                 	db	32
   776  00F631  41                 	db	65	;'A'
   777  00F632  64                 	db	100	;'d'
   778  00F633  64                 	db	100	;'d'
   779  00F634  20                 	db	32
   780  00F635  30                 	db	48	;'0'
   781  00F636  78                 	db	120	;'x'
   782  00F637  30                 	db	48	;'0'
   783  00F638  30                 	db	48	;'0'
   784  00F639  30                 	db	48	;'0'
   785  00F63A  30                 	db	48	;'0'
   786  00F63B  20                 	db	32
   787  00F63C  74                 	db	116	;'t'
   788  00F63D  6F                 	db	111	;'o'
   789  00F63E  20                 	db	32
   790  00F63F  30                 	db	48	;'0'
   791  00F640  78                 	db	120	;'x'
   792  00F641  30                 	db	48	;'0'
   793  00F642  30                 	db	48	;'0'
   794  00F643  33                 	db	51	;'3'
   795  00F644  31                 	db	49	;'1'
   796  00F645  20                 	db	32
   797  00F646  2D                 	db	45
   798  00F647  20                 	db	32
   799  00F648  33                 	db	51	;'3'
   800  00F649  32                 	db	50	;'2'
   801  00F64A  78                 	db	120	;'x'
   802  00F64B  20                 	db	32
   803  00F64C  43                 	db	67	;'C'
   804  00F64D  69                 	db	105	;'i'
   805  00F64E  72                 	db	114	;'r'
   806  00F64F  63                 	db	99	;'c'
   807  00F650  75                 	db	117	;'u'
   808  00F651  69                 	db	105	;'i'
   809  00F652  74                 	db	116	;'t'
   810  00F653  20                 	db	32
   811  00F654  53                 	db	83	;'S'
   812  00F655  65                 	db	101	;'e'
   813  00F656  74                 	db	116	;'t'
   814  00F657  20                 	db	32
   815  00F658  53                 	db	83	;'S'
   816  00F659  74                 	db	116	;'t'
   817  00F65A  61                 	db	97	;'a'
   818  00F65B  74                 	db	116	;'t'
   819  00F65C  75                 	db	117	;'u'
   820  00F65D  73                 	db	115	;'s'
   821  00F65E  20                 	db	32
   822  00F65F  20                 	db	32
   823  00F660  28                 	db	40
   824  00F661  6C                 	db	108	;'l'
   825  00F662  6F                 	db	111	;'o'
   826  00F663  77                 	db	119	;'w'
   827  00F664  65                 	db	101	;'e'
   828  00F665  72                 	db	114	;'r'
   829  00F666  20                 	db	32
   830  00F667  38                 	db	56	;'8'
   831  00F668  62                 	db	98	;'b'
   832  00F669  69                 	db	105	;'i'
   833  00F66A  74                 	db	116	;'t'
   834  00F66B  73                 	db	115	;'s'
   835  00F66C  20                 	db	32
   836  00F66D  6F                 	db	111	;'o'
   837  00F66E  6E                 	db	110	;'n'
   838  00F66F  6C                 	db	108	;'l'
   839  00F670  79                 	db	121	;'y'
   840  00F671  29                 	db	41
   841  00F672  0D                 	db	13
   842  00F673  0A                 	db	10
   843  00F674  0A                 	db	10
   844  00F675  00                 	db	0
   845  00F676                     STR_75:
   846                           
   847                           ; BSR set to: 0
   848  00F676  20                 	db	32
   849  00F677  20                 	db	32
   850  00F678  20                 	db	32
   851  00F679  20                 	db	32
   852  00F67A  20                 	db	32
   853  00F67B  20                 	db	32
   854  00F67C  41                 	db	65	;'A'
   855  00F67D  64                 	db	100	;'d'
   856  00F67E  64                 	db	100	;'d'
   857  00F67F  20                 	db	32
   858  00F680  30                 	db	48	;'0'
   859  00F681  78                 	db	120	;'x'
   860  00F682  30                 	db	48	;'0'
   861  00F683  30                 	db	48	;'0'
   862  00F684  30                 	db	48	;'0'
   863  00F685  30                 	db	48	;'0'
   864  00F686  20                 	db	32
   865  00F687  74                 	db	116	;'t'
   866  00F688  6F                 	db	111	;'o'
   867  00F689  20                 	db	32
   868  00F68A  30                 	db	48	;'0'
   869  00F68B  78                 	db	120	;'x'
   870  00F68C  30                 	db	48	;'0'
   871  00F68D  30                 	db	48	;'0'
   872  00F68E  33                 	db	51	;'3'
   873  00F68F  31                 	db	49	;'1'
   874  00F690  20                 	db	32
   875  00F691  2D                 	db	45
   876  00F692  20                 	db	32
   877  00F693  33                 	db	51	;'3'
   878  00F694  32                 	db	50	;'2'
   879  00F695  78                 	db	120	;'x'
   880  00F696  20                 	db	32
   881  00F697  43                 	db	67	;'C'
   882  00F698  69                 	db	105	;'i'
   883  00F699  72                 	db	114	;'r'
   884  00F69A  63                 	db	99	;'c'
   885  00F69B  75                 	db	117	;'u'
   886  00F69C  69                 	db	105	;'i'
   887  00F69D  74                 	db	116	;'t'
   888  00F69E  20                 	db	32
   889  00F69F  47                 	db	71	;'G'
   890  00F6A0  65                 	db	101	;'e'
   891  00F6A1  74                 	db	116	;'t'
   892  00F6A2  20                 	db	32
   893  00F6A3  53                 	db	83	;'S'
   894  00F6A4  74                 	db	116	;'t'
   895  00F6A5  61                 	db	97	;'a'
   896  00F6A6  74                 	db	116	;'t'
   897  00F6A7  75                 	db	117	;'u'
   898  00F6A8  73                 	db	115	;'s'
   899  00F6A9  20                 	db	32
   900  00F6AA  28                 	db	40
   901  00F6AB  6C                 	db	108	;'l'
   902  00F6AC  6F                 	db	111	;'o'
   903  00F6AD  77                 	db	119	;'w'
   904  00F6AE  65                 	db	101	;'e'
   905  00F6AF  72                 	db	114	;'r'
   906  00F6B0  20                 	db	32
   907  00F6B1  38                 	db	56	;'8'
   908  00F6B2  62                 	db	98	;'b'
   909  00F6B3  69                 	db	105	;'i'
   910  00F6B4  74                 	db	116	;'t'
   911  00F6B5  73                 	db	115	;'s'
   912  00F6B6  20                 	db	32
   913  00F6B7  6F                 	db	111	;'o'
   914  00F6B8  6E                 	db	110	;'n'
   915  00F6B9  6C                 	db	108	;'l'
   916  00F6BA  79                 	db	121	;'y'
   917  00F6BB  29                 	db	41
   918  00F6BC  0D                 	db	13
   919  00F6BD  0A                 	db	10
   920  00F6BE  00                 	db	0
   921  00F6BF                     STR_81:
   922                           
   923                           ; BSR set to: 0
   924  00F6BF  20                 	db	32
   925  00F6C0  20                 	db	32
   926  00F6C1  20                 	db	32
   927  00F6C2  20                 	db	32
   928  00F6C3  20                 	db	32
   929  00F6C4  20                 	db	32
   930  00F6C5  41                 	db	65	;'A'
   931  00F6C6  64                 	db	100	;'d'
   932  00F6C7  64                 	db	100	;'d'
   933  00F6C8  20                 	db	32
   934  00F6C9  30                 	db	48	;'0'
   935  00F6CA  78                 	db	120	;'x'
   936  00F6CB  30                 	db	48	;'0'
   937  00F6CC  36                 	db	54	;'6'
   938  00F6CD  30                 	db	48	;'0'
   939  00F6CE  30                 	db	48	;'0'
   940  00F6CF  20                 	db	32
   941  00F6D0  74                 	db	116	;'t'
   942  00F6D1  6F                 	db	111	;'o'
   943  00F6D2  20                 	db	32
   944  00F6D3  30                 	db	48	;'0'
   945  00F6D4  78                 	db	120	;'x'
   946  00F6D5  30                 	db	48	;'0'
   947  00F6D6  36                 	db	54	;'6'
   948  00F6D7  30                 	db	48	;'0'
   949  00F6D8  32                 	db	50	;'2'
   950  00F6D9  20                 	db	32
   951  00F6DA  2D                 	db	45
   952  00F6DB  20                 	db	32
   953  00F6DC  33                 	db	51	;'3'
   954  00F6DD  78                 	db	120	;'x'
   955  00F6DE  20                 	db	32
   956  00F6DF  41                 	db	65	;'A'
   957  00F6E0  6E                 	db	110	;'n'
   958  00F6E1  61                 	db	97	;'a'
   959  00F6E2  6C                 	db	108	;'l'
   960  00F6E3  6F                 	db	111	;'o'
   961  00F6E4  67                 	db	103	;'g'
   962  00F6E5  75                 	db	117	;'u'
   963  00F6E6  65                 	db	101	;'e'
   964  00F6E7  20                 	db	32
   965  00F6E8  49                 	db	73	;'I'
   966  00F6E9  6E                 	db	110	;'n'
   967  00F6EA  70                 	db	112	;'p'
   968  00F6EB  75                 	db	117	;'u'
   969  00F6EC  74                 	db	116	;'t'
   970  00F6ED  73                 	db	115	;'s'
   971  00F6EE  20                 	db	32
   972  00F6EF  28                 	db	40
   973  00F6F0  30                 	db	48	;'0'
   974  00F6F1  78                 	db	120	;'x'
   975  00F6F2  30                 	db	48	;'0'
   976  00F6F3  30                 	db	48	;'0'
   977  00F6F4  30                 	db	48	;'0'
   978  00F6F5  20                 	db	32
   979  00F6F6  74                 	db	116	;'t'
   980  00F6F7  6F                 	db	111	;'o'
   981  00F6F8  20                 	db	32
   982  00F6F9  30                 	db	48	;'0'
   983  00F6FA  78                 	db	120	;'x'
   984  00F6FB  30                 	db	48	;'0'
   985  00F6FC  33                 	db	51	;'3'
   986  00F6FD  66                 	db	102	;'f'
   987  00F6FE  66                 	db	102	;'f'
   988  00F6FF  29                 	db	41
   989  00F700  0D                 	db	13
   990  00F701  0A                 	db	10
   991  00F702  0A                 	db	10
   992  00F703  00                 	db	0
   993  00F704                     STR_20:
   994                           
   995                           ; BSR set to: 0
   996  00F704  20                 	db	32
   997  00F705  20                 	db	32
   998  00F706  20                 	db	32
   999  00F707  42                 	db	66	;'B'
  1000  00F708  79                 	db	121	;'y'
  1001  00F709  74                 	db	116	;'t'
  1002  00F70A  65                 	db	101	;'e'
  1003  00F70B  20                 	db	32
  1004  00F70C  30                 	db	48	;'0'
  1005  00F70D  32                 	db	50	;'2'
  1006  00F70E  3A                 	db	58	;':'
  1007  00F70F  20                 	db	32
  1008  00F710  30                 	db	48	;'0'
  1009  00F711  78                 	db	120	;'x'
  1010  00F712  25                 	db	37
  1011  00F713  30                 	db	48	;'0'
  1012  00F714  32                 	db	50	;'2'
  1013  00F715  78                 	db	120	;'x'
  1014  00F716  20                 	db	32
  1015  00F717  2D                 	db	45
  1016  00F718  20                 	db	32
  1017  00F719  46                 	db	70	;'F'
  1018  00F71A  75                 	db	117	;'u'
  1019  00F71B  6E                 	db	110	;'n'
  1020  00F71C  63                 	db	99	;'c'
  1021  00F71D  74                 	db	116	;'t'
  1022  00F71E  69                 	db	105	;'i'
  1023  00F71F  6F                 	db	111	;'o'
  1024  00F720  6E                 	db	110	;'n'
  1025  00F721  20                 	db	32
  1026  00F722  43                 	db	67	;'C'
  1027  00F723  6F                 	db	111	;'o'
  1028  00F724  64                 	db	100	;'d'
  1029  00F725  65                 	db	101	;'e'
  1030  00F726  20                 	db	32
  1031  00F727  28                 	db	40
  1032  00F728  57                 	db	87	;'W'
  1033  00F729  72                 	db	114	;'r'
  1034  00F72A  69                 	db	105	;'i'
  1035  00F72B  74                 	db	116	;'t'
  1036  00F72C  65                 	db	101	;'e'
  1037  00F72D  20                 	db	32
  1038  00F72E  4D                 	db	77	;'M'
  1039  00F72F  75                 	db	117	;'u'
  1040  00F730  6C                 	db	108	;'l'
  1041  00F731  74                 	db	116	;'t'
  1042  00F732  69                 	db	105	;'i'
  1043  00F733  70                 	db	112	;'p'
  1044  00F734  6C                 	db	108	;'l'
  1045  00F735  65                 	db	101	;'e'
  1046  00F736  20                 	db	32
  1047  00F737  52                 	db	82	;'R'
  1048  00F738  65                 	db	101	;'e'
  1049  00F739  67                 	db	103	;'g'
  1050  00F73A  69                 	db	105	;'i'
  1051  00F73B  73                 	db	115	;'s'
  1052  00F73C  74                 	db	116	;'t'
  1053  00F73D  65                 	db	101	;'e'
  1054  00F73E  72                 	db	114	;'r'
  1055  00F73F  73                 	db	115	;'s'
  1056  00F740  29                 	db	41
  1057  00F741  0D                 	db	13
  1058  00F742  0A                 	db	10
  1059  00F743  00                 	db	0
  1060  00F744                     STR_12:
  1061                           
  1062                           ; BSR set to: 0
  1063  00F744  20                 	db	32
  1064  00F745  20                 	db	32
  1065  00F746  20                 	db	32
  1066  00F747  42                 	db	66	;'B'
  1067  00F748  79                 	db	121	;'y'
  1068  00F749  74                 	db	116	;'t'
  1069  00F74A  65                 	db	101	;'e'
  1070  00F74B  20                 	db	32
  1071  00F74C  30                 	db	48	;'0'
  1072  00F74D  32                 	db	50	;'2'
  1073  00F74E  3A                 	db	58	;':'
  1074  00F74F  20                 	db	32
  1075  00F750  30                 	db	48	;'0'
  1076  00F751  78                 	db	120	;'x'
  1077  00F752  25                 	db	37
  1078  00F753  30                 	db	48	;'0'
  1079  00F754  32                 	db	50	;'2'
  1080  00F755  78                 	db	120	;'x'
  1081  00F756  20                 	db	32
  1082  00F757  2D                 	db	45
  1083  00F758  20                 	db	32
  1084  00F759  46                 	db	70	;'F'
  1085  00F75A  75                 	db	117	;'u'
  1086  00F75B  6E                 	db	110	;'n'
  1087  00F75C  63                 	db	99	;'c'
  1088  00F75D  74                 	db	116	;'t'
  1089  00F75E  69                 	db	105	;'i'
  1090  00F75F  6F                 	db	111	;'o'
  1091  00F760  6E                 	db	110	;'n'
  1092  00F761  20                 	db	32
  1093  00F762  43                 	db	67	;'C'
  1094  00F763  6F                 	db	111	;'o'
  1095  00F764  64                 	db	100	;'d'
  1096  00F765  65                 	db	101	;'e'
  1097  00F766  20                 	db	32
  1098  00F767  28                 	db	40
  1099  00F768  52                 	db	82	;'R'
  1100  00F769  65                 	db	101	;'e'
  1101  00F76A  61                 	db	97	;'a'
  1102  00F76B  64                 	db	100	;'d'
  1103  00F76C  20                 	db	32
  1104  00F76D  4D                 	db	77	;'M'
  1105  00F76E  75                 	db	117	;'u'
  1106  00F76F  6C                 	db	108	;'l'
  1107  00F770  74                 	db	116	;'t'
  1108  00F771  69                 	db	105	;'i'
  1109  00F772  70                 	db	112	;'p'
  1110  00F773  6C                 	db	108	;'l'
  1111  00F774  65                 	db	101	;'e'
  1112  00F775  20                 	db	32
  1113  00F776  52                 	db	82	;'R'
  1114  00F777  65                 	db	101	;'e'
  1115  00F778  67                 	db	103	;'g'
  1116  00F779  69                 	db	105	;'i'
  1117  00F77A  73                 	db	115	;'s'
  1118  00F77B  74                 	db	116	;'t'
  1119  00F77C  65                 	db	101	;'e'
  1120  00F77D  72                 	db	114	;'r'
  1121  00F77E  73                 	db	115	;'s'
  1122  00F77F  29                 	db	41
  1123  00F780  0D                 	db	13
  1124  00F781  0A                 	db	10
  1125  00F782  00                 	db	0
  1126  00F783                     STR_94:
  1127                           
  1128                           ; BSR set to: 0
  1129  00F783  43                 	db	67	;'C'
  1130  00F784  6C                 	db	108	;'l'
  1131  00F785  65                 	db	101	;'e'
  1132  00F786  61                 	db	97	;'a'
  1133  00F787  72                 	db	114	;'r'
  1134  00F788  69                 	db	105	;'i'
  1135  00F789  6E                 	db	110	;'n'
  1136  00F78A  67                 	db	103	;'g'
  1137  00F78B  20                 	db	32
  1138  00F78C  45                 	db	69	;'E'
  1139  00F78D  45                 	db	69	;'E'
  1140  00F78E  50                 	db	80	;'P'
  1141  00F78F  52                 	db	82	;'R'
  1142  00F790  4F                 	db	79	;'O'
  1143  00F791  4D                 	db	77	;'M'
  1144  00F792  20                 	db	32
  1145  00F793  66                 	db	102	;'f'
  1146  00F794  72                 	db	114	;'r'
  1147  00F795  6F                 	db	111	;'o'
  1148  00F796  6D                 	db	109	;'m'
  1149  00F797  20                 	db	32
  1150  00F798  41                 	db	65	;'A'
  1151  00F799  64                 	db	100	;'d'
  1152  00F79A  64                 	db	100	;'d'
  1153  00F79B  72                 	db	114	;'r'
  1154  00F79C  65                 	db	101	;'e'
  1155  00F79D  73                 	db	115	;'s'
  1156  00F79E  73                 	db	115	;'s'
  1157  00F79F  3A                 	db	58	;':'
  1158  00F7A0  20                 	db	32
  1159  00F7A1  30                 	db	48	;'0'
  1160  00F7A2  78                 	db	120	;'x'
  1161  00F7A3  25                 	db	37
  1162  00F7A4  30                 	db	48	;'0'
  1163  00F7A5  34                 	db	52	;'4'
  1164  00F7A6  78                 	db	120	;'x'
  1165  00F7A7  20                 	db	32
  1166  00F7A8  66                 	db	102	;'f'
  1167  00F7A9  6F                 	db	111	;'o'
  1168  00F7AA  72                 	db	114	;'r'
  1169  00F7AB  20                 	db	32
  1170  00F7AC  6E                 	db	110	;'n'
  1171  00F7AD  75                 	db	117	;'u'
  1172  00F7AE  6D                 	db	109	;'m'
  1173  00F7AF  20                 	db	32
  1174  00F7B0  62                 	db	98	;'b'
  1175  00F7B1  79                 	db	121	;'y'
  1176  00F7B2  74                 	db	116	;'t'
  1177  00F7B3  65                 	db	101	;'e'
  1178  00F7B4  73                 	db	115	;'s'
  1179  00F7B5  3A                 	db	58	;':'
  1180  00F7B6  20                 	db	32
  1181  00F7B7  25                 	db	37
  1182  00F7B8  69                 	db	105	;'i'
  1183  00F7B9  20                 	db	32
  1184  00F7BA  0D                 	db	13
  1185  00F7BB  0A                 	db	10
  1186  00F7BC  00                 	db	0
  1187  00F7BD                     STR_26:
  1188                           
  1189                           ; BSR set to: 0
  1190  00F7BD  20                 	db	32
  1191  00F7BE  20                 	db	32
  1192  00F7BF  20                 	db	32
  1193  00F7C0  42                 	db	66	;'B'
  1194  00F7C1  79                 	db	121	;'y'
  1195  00F7C2  74                 	db	116	;'t'
  1196  00F7C3  65                 	db	101	;'e'
  1197  00F7C4  20                 	db	32
  1198  00F7C5  25                 	db	37
  1199  00F7C6  30                 	db	48	;'0'
  1200  00F7C7  32                 	db	50	;'2'
  1201  00F7C8  69                 	db	105	;'i'
  1202  00F7C9  3A                 	db	58	;':'
  1203  00F7CA  20                 	db	32
  1204  00F7CB  30                 	db	48	;'0'
  1205  00F7CC  78                 	db	120	;'x'
  1206  00F7CD  25                 	db	37
  1207  00F7CE  30                 	db	48	;'0'
  1208  00F7CF  32                 	db	50	;'2'
  1209  00F7D0  78                 	db	120	;'x'
  1210  00F7D1  20                 	db	32
  1211  00F7D2  2D                 	db	45
  1212  00F7D3  20                 	db	32
  1213  00F7D4  52                 	db	82	;'R'
  1214  00F7D5  65                 	db	101	;'e'
  1215  00F7D6  67                 	db	103	;'g'
  1216  00F7D7  20                 	db	32
  1217  00F7D8  25                 	db	37
  1218  00F7D9  69                 	db	105	;'i'
  1219  00F7DA  20                 	db	32
  1220  00F7DB  48                 	db	72	;'H'
  1221  00F7DC  69                 	db	105	;'i'
  1222  00F7DD  20                 	db	32
  1223  00F7DE  28                 	db	40
  1224  00F7DF  41                 	db	65	;'A'
  1225  00F7E0  64                 	db	100	;'d'
  1226  00F7E1  64                 	db	100	;'d'
  1227  00F7E2  2E                 	db	46
  1228  00F7E3  20                 	db	32
  1229  00F7E4  30                 	db	48	;'0'
  1230  00F7E5  78                 	db	120	;'x'
  1231  00F7E6  25                 	db	37
  1232  00F7E7  30                 	db	48	;'0'
  1233  00F7E8  32                 	db	50	;'2'
  1234  00F7E9  78                 	db	120	;'x'
  1235  00F7EA  20                 	db	32
  1236  00F7EB  30                 	db	48	;'0'
  1237  00F7EC  78                 	db	120	;'x'
  1238  00F7ED  25                 	db	37
  1239  00F7EE  30                 	db	48	;'0'
  1240  00F7EF  32                 	db	50	;'2'
  1241  00F7F0  78                 	db	120	;'x'
  1242  00F7F1  29                 	db	41
  1243  00F7F2  0D                 	db	13
  1244  00F7F3  0A                 	db	10
  1245  00F7F4  00                 	db	0
  1246  00F7F5                     STR_80:
  1247                           
  1248                           ; BSR set to: 0
  1249  00F7F5  20                 	db	32
  1250  00F7F6  20                 	db	32
  1251  00F7F7  20                 	db	32
  1252  00F7F8  20                 	db	32
  1253  00F7F9  20                 	db	32
  1254  00F7FA  20                 	db	32
  1255  00F7FB  41                 	db	65	;'A'
  1256  00F7FC  64                 	db	100	;'d'
  1257  00F7FD  64                 	db	100	;'d'
  1258  00F7FE  20                 	db	32
  1259  00F7FF  30                 	db	48	;'0'
  1260  00F800  78                 	db	120	;'x'
  1261  00F801  30                 	db	48	;'0'
  1262  00F802  35                 	db	53	;'5'
  1263  00F803  30                 	db	48	;'0'
  1264  00F804  30                 	db	48	;'0'
  1265  00F805  20                 	db	32
  1266  00F806  74                 	db	116	;'t'
  1267  00F807  6F                 	db	111	;'o'
  1268  00F808  20                 	db	32
  1269  00F809  30                 	db	48	;'0'
  1270  00F80A  78                 	db	120	;'x'
  1271  00F80B  30                 	db	48	;'0'
  1272  00F80C  35                 	db	53	;'5'
  1273  00F80D  30                 	db	48	;'0'
  1274  00F80E  34                 	db	52	;'4'
  1275  00F80F  20                 	db	32
  1276  00F810  2D                 	db	45
  1277  00F811  20                 	db	32
  1278  00F812  43                 	db	67	;'C'
  1279  00F813  6F                 	db	111	;'o'
  1280  00F814  6D                 	db	109	;'m'
  1281  00F815  70                 	db	112	;'p'
  1282  00F816  69                 	db	105	;'i'
  1283  00F817  6C                 	db	108	;'l'
  1284  00F818  65                 	db	101	;'e'
  1285  00F819  20                 	db	32
  1286  00F81A  54                 	db	84	;'T'
  1287  00F81B  69                 	db	105	;'i'
  1288  00F81C  6D                 	db	109	;'m'
  1289  00F81D  65                 	db	101	;'e'
  1290  00F81E  20                 	db	32
  1291  00F81F  2D                 	db	45
  1292  00F820  20                 	db	32
  1293  00F821  28                 	db	40
  1294  00F822  41                 	db	65	;'A'
  1295  00F823  53                 	db	83	;'S'
  1296  00F824  43                 	db	67	;'C'
  1297  00F825  49                 	db	73	;'I'
  1298  00F826  49                 	db	73	;'I'
  1299  00F827  29                 	db	41
  1300  00F828  0D                 	db	13
  1301  00F829  0A                 	db	10
  1302  00F82A  00                 	db	0
  1303  00F82B                     STR_8:
  1304                           
  1305                           ; BSR set to: 0
  1306  00F82B  43                 	db	67	;'C'
  1307  00F82C  6F                 	db	111	;'o'
  1308  00F82D  6D                 	db	109	;'m'
  1309  00F82E  70                 	db	112	;'p'
  1310  00F82F  6C                 	db	108	;'l'
  1311  00F830  65                 	db	101	;'e'
  1312  00F831  74                 	db	116	;'t'
  1313  00F832  65                 	db	101	;'e'
  1314  00F833  64                 	db	100	;'d'
  1315  00F834  20                 	db	32
  1316  00F835  41                 	db	65	;'A'
  1317  00F836  64                 	db	100	;'d'
  1318  00F837  64                 	db	100	;'d'
  1319  00F838  69                 	db	105	;'i'
  1320  00F839  6E                 	db	110	;'n'
  1321  00F83A  67                 	db	103	;'g'
  1322  00F83B  20                 	db	32
  1323  00F83C  72                 	db	114	;'r'
  1324  00F83D  78                 	db	120	;'x'
  1325  00F83E  44                 	db	68	;'D'
  1326  00F83F  61                 	db	97	;'a'
  1327  00F840  74                 	db	116	;'t'
  1328  00F841  61                 	db	97	;'a'
  1329  00F842  20                 	db	32
  1330  00F843  42                 	db	66	;'B'
  1331  00F844  75                 	db	117	;'u'
  1332  00F845  66                 	db	102	;'f'
  1333  00F846  66                 	db	102	;'f'
  1334  00F847  65                 	db	101	;'e'
  1335  00F848  72                 	db	114	;'r'
  1336  00F849  20                 	db	32
  1337  00F84A  74                 	db	116	;'t'
  1338  00F84B  6F                 	db	111	;'o'
  1339  00F84C  20                 	db	32
  1340  00F84D  4D                 	db	77	;'M'
  1341  00F84E  6F                 	db	111	;'o'
  1342  00F84F  64                 	db	100	;'d'
  1343  00F850  62                 	db	98	;'b'
  1344  00F851  75                 	db	117	;'u'
  1345  00F852  73                 	db	115	;'s'
  1346  00F853  44                 	db	68	;'D'
  1347  00F854  61                 	db	97	;'a'
  1348  00F855  74                 	db	116	;'t'
  1349  00F856  61                 	db	97	;'a'
  1350  00F857  20                 	db	32
  1351  00F858  41                 	db	65	;'A'
  1352  00F859  72                 	db	114	;'r'
  1353  00F85A  72                 	db	114	;'r'
  1354  00F85B  61                 	db	97	;'a'
  1355  00F85C  79                 	db	121	;'y'
  1356  00F85D  0D                 	db	13
  1357  00F85E  0A                 	db	10
  1358  00F85F  0A                 	db	10
  1359  00F860  00                 	db	0
  1360  00F861                     STR_32:
  1361                           
  1362                           ; BSR set to: 0
  1363  00F861  52                 	db	82	;'R'
  1364  00F862  65                 	db	101	;'e'
  1365  00F863  71                 	db	113	;'q'
  1366  00F864  75                 	db	117	;'u'
  1367  00F865  65                 	db	101	;'e'
  1368  00F866  73                 	db	115	;'s'
  1369  00F867  74                 	db	116	;'t'
  1370  00F868  65                 	db	101	;'e'
  1371  00F869  64                 	db	100	;'d'
  1372  00F86A  20                 	db	32
  1373  00F86B  72                 	db	114	;'r'
  1374  00F86C  65                 	db	101	;'e'
  1375  00F86D  67                 	db	103	;'g'
  1376  00F86E  69                 	db	105	;'i'
  1377  00F86F  73                 	db	115	;'s'
  1378  00F870  74                 	db	116	;'t'
  1379  00F871  65                 	db	101	;'e'
  1380  00F872  72                 	db	114	;'r'
  1381  00F873  73                 	db	115	;'s'
  1382  00F874  20                 	db	32
  1383  00F875  6F                 	db	111	;'o'
  1384  00F876  75                 	db	117	;'u'
  1385  00F877  74                 	db	116	;'t'
  1386  00F878  20                 	db	32
  1387  00F879  6F                 	db	111	;'o'
  1388  00F87A  66                 	db	102	;'f'
  1389  00F87B  20                 	db	32
  1390  00F87C  72                 	db	114	;'r'
  1391  00F87D  61                 	db	97	;'a'
  1392  00F87E  6E                 	db	110	;'n'
  1393  00F87F  67                 	db	103	;'g'
  1394  00F880  65                 	db	101	;'e'
  1395  00F881  2E                 	db	46
  1396  00F882  20                 	db	32
  1397  00F883  20                 	db	32
  1398  00F884  30                 	db	48	;'0'
  1399  00F885  78                 	db	120	;'x'
  1400  00F886  30                 	db	48	;'0'
  1401  00F887  30                 	db	48	;'0'
  1402  00F888  30                 	db	48	;'0'
  1403  00F889  30                 	db	48	;'0'
  1404  00F88A  20                 	db	32
  1405  00F88B  74                 	db	116	;'t'
  1406  00F88C  6F                 	db	111	;'o'
  1407  00F88D  20                 	db	32
  1408  00F88E  30                 	db	48	;'0'
  1409  00F88F  78                 	db	120	;'x'
  1410  00F890  30                 	db	48	;'0'
  1411  00F891  32                 	db	50	;'2'
  1412  00F892  30                 	db	48	;'0'
  1413  00F893  2E                 	db	46
  1414  00F894  0D                 	db	13
  1415  00F895  0A                 	db	10
  1416  00F896  00                 	db	0
  1417  00F897                     STR_82:
  1418                           
  1419                           ; BSR set to: 0
  1420  00F897  20                 	db	32
  1421  00F898  20                 	db	32
  1422  00F899  20                 	db	32
  1423  00F89A  30                 	db	48	;'0'
  1424  00F89B  78                 	db	120	;'x'
  1425  00F89C  31                 	db	49	;'1'
  1426  00F89D  30                 	db	48	;'0'
  1427  00F89E  20                 	db	32
  1428  00F89F  2D                 	db	45
  1429  00F8A0  20                 	db	32
  1430  00F8A1  57                 	db	87	;'W'
  1431  00F8A2  72                 	db	114	;'r'
  1432  00F8A3  69                 	db	105	;'i'
  1433  00F8A4  74                 	db	116	;'t'
  1434  00F8A5  65                 	db	101	;'e'
  1435  00F8A6  20                 	db	32
  1436  00F8A7  4D                 	db	77	;'M'
  1437  00F8A8  75                 	db	117	;'u'
  1438  00F8A9  6C                 	db	108	;'l'
  1439  00F8AA  74                 	db	116	;'t'
  1440  00F8AB  69                 	db	105	;'i'
  1441  00F8AC  70                 	db	112	;'p'
  1442  00F8AD  6C                 	db	108	;'l'
  1443  00F8AE  65                 	db	101	;'e'
  1444  00F8AF  20                 	db	32
  1445  00F8B0  52                 	db	82	;'R'
  1446  00F8B1  65                 	db	101	;'e'
  1447  00F8B2  67                 	db	103	;'g'
  1448  00F8B3  69                 	db	105	;'i'
  1449  00F8B4  73                 	db	115	;'s'
  1450  00F8B5  74                 	db	116	;'t'
  1451  00F8B6  65                 	db	101	;'e'
  1452  00F8B7  72                 	db	114	;'r'
  1453  00F8B8  73                 	db	115	;'s'
  1454  00F8B9  20                 	db	32
  1455  00F8BA  28                 	db	40
  1456  00F8BB  4D                 	db	77	;'M'
  1457  00F8BC  61                 	db	97	;'a'
  1458  00F8BD  78                 	db	120	;'x'
  1459  00F8BE  20                 	db	32
  1460  00F8BF  33                 	db	51	;'3'
  1461  00F8C0  32                 	db	50	;'2'
  1462  00F8C1  78                 	db	120	;'x'
  1463  00F8C2  20                 	db	32
  1464  00F8C3  31                 	db	49	;'1'
  1465  00F8C4  36                 	db	54	;'6'
  1466  00F8C5  62                 	db	98	;'b'
  1467  00F8C6  69                 	db	105	;'i'
  1468  00F8C7  74                 	db	116	;'t'
  1469  00F8C8  29                 	db	41
  1470  00F8C9  0D                 	db	13
  1471  00F8CA  0A                 	db	10
  1472  00F8CB  00                 	db	0
  1473  00F8CC                     STR_79:
  1474                           
  1475                           ; BSR set to: 0
  1476  00F8CC  20                 	db	32
  1477  00F8CD  20                 	db	32
  1478  00F8CE  20                 	db	32
  1479  00F8CF  20                 	db	32
  1480  00F8D0  20                 	db	32
  1481  00F8D1  20                 	db	32
  1482  00F8D2  41                 	db	65	;'A'
  1483  00F8D3  64                 	db	100	;'d'
  1484  00F8D4  64                 	db	100	;'d'
  1485  00F8D5  20                 	db	32
  1486  00F8D6  30                 	db	48	;'0'
  1487  00F8D7  78                 	db	120	;'x'
  1488  00F8D8  30                 	db	48	;'0'
  1489  00F8D9  34                 	db	52	;'4'
  1490  00F8DA  30                 	db	48	;'0'
  1491  00F8DB  30                 	db	48	;'0'
  1492  00F8DC  20                 	db	32
  1493  00F8DD  74                 	db	116	;'t'
  1494  00F8DE  6F                 	db	111	;'o'
  1495  00F8DF  20                 	db	32
  1496  00F8E0  30                 	db	48	;'0'
  1497  00F8E1  78                 	db	120	;'x'
  1498  00F8E2  30                 	db	48	;'0'
  1499  00F8E3  34                 	db	52	;'4'
  1500  00F8E4  30                 	db	48	;'0'
  1501  00F8E5  35                 	db	53	;'5'
  1502  00F8E6  20                 	db	32
  1503  00F8E7  2D                 	db	45
  1504  00F8E8  20                 	db	32
  1505  00F8E9  43                 	db	67	;'C'
  1506  00F8EA  6F                 	db	111	;'o'
  1507  00F8EB  6D                 	db	109	;'m'
  1508  00F8EC  70                 	db	112	;'p'
  1509  00F8ED  69                 	db	105	;'i'
  1510  00F8EE  6C                 	db	108	;'l'
  1511  00F8EF  65                 	db	101	;'e'
  1512  00F8F0  20                 	db	32
  1513  00F8F1  44                 	db	68	;'D'
  1514  00F8F2  61                 	db	97	;'a'
  1515  00F8F3  74                 	db	116	;'t'
  1516  00F8F4  65                 	db	101	;'e'
  1517  00F8F5  20                 	db	32
  1518  00F8F6  28                 	db	40
  1519  00F8F7  41                 	db	65	;'A'
  1520  00F8F8  53                 	db	83	;'S'
  1521  00F8F9  43                 	db	67	;'C'
  1522  00F8FA  49                 	db	73	;'I'
  1523  00F8FB  49                 	db	73	;'I'
  1524  00F8FC  29                 	db	41
  1525  00F8FD  0D                 	db	13
  1526  00F8FE  0A                 	db	10
  1527  00F8FF  00                 	db	0
  1528  00F900                     STR_85:
  1529                           
  1530                           ; BSR set to: 0
  1531  00F900  20                 	db	32
  1532  00F901  20                 	db	32
  1533  00F902  20                 	db	32
  1534  00F903  3F                 	db	63	;'?'
  1535  00F904  20                 	db	32
  1536  00F905  2D                 	db	45
  1537  00F906  20                 	db	32
  1538  00F907  49                 	db	73	;'I'
  1539  00F908  6E                 	db	110	;'n'
  1540  00F909  69                 	db	105	;'i'
  1541  00F90A  74                 	db	116	;'t'
  1542  00F90B  61                 	db	97	;'a'
  1543  00F90C  6C                 	db	108	;'l'
  1544  00F90D  69                 	db	105	;'i'
  1545  00F90E  73                 	db	115	;'s'
  1546  00F90F  65                 	db	101	;'e'
  1547  00F910  20                 	db	32
  1548  00F911  61                 	db	97	;'a'
  1549  00F912  6E                 	db	110	;'n'
  1550  00F913  64                 	db	100	;'d'
  1551  00F914  20                 	db	32
  1552  00F915  64                 	db	100	;'d'
  1553  00F916  69                 	db	105	;'i'
  1554  00F917  73                 	db	115	;'s'
  1555  00F918  70                 	db	112	;'p'
  1556  00F919  6C                 	db	108	;'l'
  1557  00F91A  61                 	db	97	;'a'
  1558  00F91B  79                 	db	121	;'y'
  1559  00F91C  20                 	db	32
  1560  00F91D  63                 	db	99	;'c'
  1561  00F91E  61                 	db	97	;'a'
  1562  00F91F  72                 	db	114	;'r'
  1563  00F920  64                 	db	100	;'d'
  1564  00F921  20                 	db	32
  1565  00F922  64                 	db	100	;'d'
  1566  00F923  65                 	db	101	;'e'
  1567  00F924  74                 	db	116	;'t'
  1568  00F925  61                 	db	97	;'a'
  1569  00F926  69                 	db	105	;'i'
  1570  00F927  6C                 	db	108	;'l'
  1571  00F928  73                 	db	115	;'s'
  1572  00F929  0D                 	db	13
  1573  00F92A  0A                 	db	10
  1574  00F92B  00                 	db	0
  1575  00F92C                     STR_76:
  1576                           
  1577                           ; BSR set to: 0
  1578  00F92C  20                 	db	32
  1579  00F92D  20                 	db	32
  1580  00F92E  20                 	db	32
  1581  00F92F  20                 	db	32
  1582  00F930  20                 	db	32
  1583  00F931  20                 	db	32
  1584  00F932  41                 	db	65	;'A'
  1585  00F933  64                 	db	100	;'d'
  1586  00F934  64                 	db	100	;'d'
  1587  00F935  20                 	db	32
  1588  00F936  30                 	db	48	;'0'
  1589  00F937  78                 	db	120	;'x'
  1590  00F938  30                 	db	48	;'0'
  1591  00F939  31                 	db	49	;'1'
  1592  00F93A  30                 	db	48	;'0'
  1593  00F93B  30                 	db	48	;'0'
  1594  00F93C  20                 	db	32
  1595  00F93D  74                 	db	116	;'t'
  1596  00F93E  6F                 	db	111	;'o'
  1597  00F93F  20                 	db	32
  1598  00F940  30                 	db	48	;'0'
  1599  00F941  78                 	db	120	;'x'
  1600  00F942  30                 	db	48	;'0'
  1601  00F943  31                 	db	49	;'1'
  1602  00F944  30                 	db	48	;'0'
  1603  00F945  38                 	db	56	;'8'
  1604  00F946  20                 	db	32
  1605  00F947  2D                 	db	45
  1606  00F948  20                 	db	32
  1607  00F949  50                 	db	80	;'P'
  1608  00F94A  61                 	db	97	;'a'
  1609  00F94B  72                 	db	114	;'r'
  1610  00F94C  74                 	db	116	;'t'
  1611  00F94D  20                 	db	32
  1612  00F94E  4E                 	db	78	;'N'
  1613  00F94F  75                 	db	117	;'u'
  1614  00F950  6D                 	db	109	;'m'
  1615  00F951  62                 	db	98	;'b'
  1616  00F952  65                 	db	101	;'e'
  1617  00F953  72                 	db	114	;'r'
  1618  00F954  0D                 	db	13
  1619  00F955  0A                 	db	10
  1620  00F956  00                 	db	0
  1621  00F957                     STR_69:
  1622                           
  1623                           ; BSR set to: 0
  1624  00F957  43                 	db	67	;'C'
  1625  00F958  6F                 	db	111	;'o'
  1626  00F959  6D                 	db	109	;'m'
  1627  00F95A  70                 	db	112	;'p'
  1628  00F95B  69                 	db	105	;'i'
  1629  00F95C  6C                 	db	108	;'l'
  1630  00F95D  65                 	db	101	;'e'
  1631  00F95E  64                 	db	100	;'d'
  1632  00F95F  20                 	db	32
  1633  00F960  6F                 	db	111	;'o'
  1634  00F961  6E                 	db	110	;'n'
  1635  00F962  20                 	db	32
  1636  00F963  25                 	db	37
  1637  00F964  73                 	db	115	;'s'
  1638  00F965  20                 	db	32
  1639  00F966  61                 	db	97	;'a'
  1640  00F967  74                 	db	116	;'t'
  1641  00F968  20                 	db	32
  1642  00F969  25                 	db	37
  1643  00F96A  73                 	db	115	;'s'
  1644  00F96B  20                 	db	32
  1645  00F96C  62                 	db	98	;'b'
  1646  00F96D  79                 	db	121	;'y'
  1647  00F96E  20                 	db	32
  1648  00F96F  58                 	db	88	;'X'
  1649  00F970  43                 	db	67	;'C'
  1650  00F971  38                 	db	56	;'8'
  1651  00F972  20                 	db	32
  1652  00F973  76                 	db	118	;'v'
  1653  00F974  65                 	db	101	;'e'
  1654  00F975  72                 	db	114	;'r'
  1655  00F976  73                 	db	115	;'s'
  1656  00F977  69                 	db	105	;'i'
  1657  00F978  6F                 	db	111	;'o'
  1658  00F979  6E                 	db	110	;'n'
  1659  00F97A  20                 	db	32
  1660  00F97B  25                 	db	37
  1661  00F97C  75                 	db	117	;'u'
  1662  00F97D  0D                 	db	13
  1663  00F97E  0A                 	db	10
  1664  00F97F  0A                 	db	10
  1665  00F980  00                 	db	0
  1666  00F981                     STR_74:
  1667                           
  1668                           ; BSR set to: 0
  1669  00F981  20                 	db	32
  1670  00F982  20                 	db	32
  1671  00F983  20                 	db	32
  1672  00F984  30                 	db	48	;'0'
  1673  00F985  78                 	db	120	;'x'
  1674  00F986  30                 	db	48	;'0'
  1675  00F987  33                 	db	51	;'3'
  1676  00F988  20                 	db	32
  1677  00F989  2D                 	db	45
  1678  00F98A  20                 	db	32
  1679  00F98B  52                 	db	82	;'R'
  1680  00F98C  65                 	db	101	;'e'
  1681  00F98D  61                 	db	97	;'a'
  1682  00F98E  64                 	db	100	;'d'
  1683  00F98F  20                 	db	32
  1684  00F990  4D                 	db	77	;'M'
  1685  00F991  75                 	db	117	;'u'
  1686  00F992  6C                 	db	108	;'l'
  1687  00F993  74                 	db	116	;'t'
  1688  00F994  69                 	db	105	;'i'
  1689  00F995  70                 	db	112	;'p'
  1690  00F996  6C                 	db	108	;'l'
  1691  00F997  65                 	db	101	;'e'
  1692  00F998  20                 	db	32
  1693  00F999  31                 	db	49	;'1'
  1694  00F99A  36                 	db	54	;'6'
  1695  00F99B  62                 	db	98	;'b'
  1696  00F99C  69                 	db	105	;'i'
  1697  00F99D  74                 	db	116	;'t'
  1698  00F99E  20                 	db	32
  1699  00F99F  52                 	db	82	;'R'
  1700  00F9A0  65                 	db	101	;'e'
  1701  00F9A1  67                 	db	103	;'g'
  1702  00F9A2  69                 	db	105	;'i'
  1703  00F9A3  73                 	db	115	;'s'
  1704  00F9A4  74                 	db	116	;'t'
  1705  00F9A5  65                 	db	101	;'e'
  1706  00F9A6  72                 	db	114	;'r'
  1707  00F9A7  73                 	db	115	;'s'
  1708  00F9A8  0D                 	db	13
  1709  00F9A9  0A                 	db	10
  1710  00F9AA  00                 	db	0
  1711  00F9AB                     STR_78:
  1712                           
  1713                           ; BSR set to: 0
  1714  00F9AB  20                 	db	32
  1715  00F9AC  20                 	db	32
  1716  00F9AD  20                 	db	32
  1717  00F9AE  20                 	db	32
  1718  00F9AF  20                 	db	32
  1719  00F9B0  20                 	db	32
  1720  00F9B1  41                 	db	65	;'A'
  1721  00F9B2  64                 	db	100	;'d'
  1722  00F9B3  64                 	db	100	;'d'
  1723  00F9B4  20                 	db	32
  1724  00F9B5  30                 	db	48	;'0'
  1725  00F9B6  78                 	db	120	;'x'
  1726  00F9B7  30                 	db	48	;'0'
  1727  00F9B8  33                 	db	51	;'3'
  1728  00F9B9  30                 	db	48	;'0'
  1729  00F9BA  30                 	db	48	;'0'
  1730  00F9BB  20                 	db	32
  1731  00F9BC  74                 	db	116	;'t'
  1732  00F9BD  6F                 	db	111	;'o'
  1733  00F9BE  20                 	db	32
  1734  00F9BF  30                 	db	48	;'0'
  1735  00F9C0  78                 	db	120	;'x'
  1736  00F9C1  30                 	db	48	;'0'
  1737  00F9C2  33                 	db	51	;'3'
  1738  00F9C3  30                 	db	48	;'0'
  1739  00F9C4  34                 	db	52	;'4'
  1740  00F9C5  20                 	db	32
  1741  00F9C6  2D                 	db	45
  1742  00F9C7  20                 	db	32
  1743  00F9C8  52                 	db	82	;'R'
  1744  00F9C9  65                 	db	101	;'e'
  1745  00F9CA  76                 	db	118	;'v'
  1746  00F9CB  69                 	db	105	;'i'
  1747  00F9CC  73                 	db	115	;'s'
  1748  00F9CD  69                 	db	105	;'i'
  1749  00F9CE  6F                 	db	111	;'o'
  1750  00F9CF  6E                 	db	110	;'n'
  1751  00F9D0  0D                 	db	13
  1752  00F9D1  0A                 	db	10
  1753  00F9D2  00                 	db	0
  1754  00F9D3                     STR_64:
  1755                           
  1756                           ; BSR set to: 0
  1757  00F9D3  0D                 	db	13
  1758  00F9D4  0A                 	db	10
  1759  00F9D5  44                 	db	68	;'D'
  1760  00F9D6  61                 	db	97	;'a'
  1761  00F9D7  6E                 	db	110	;'n'
  1762  00F9D8  20                 	db	32
  1763  00F9D9  61                 	db	97	;'a'
  1764  00F9DA  6E                 	db	110	;'n'
  1765  00F9DB  64                 	db	100	;'d'
  1766  00F9DC  20                 	db	32
  1767  00F9DD  53                 	db	83	;'S'
  1768  00F9DE  61                 	db	97	;'a'
  1769  00F9DF  6D                 	db	109	;'m'
  1770  00F9E0  27                 	db	39
  1771  00F9E1  73                 	db	115	;'s'
  1772  00F9E2  20                 	db	32
  1773  00F9E3  4D                 	db	77	;'M'
  1774  00F9E4  6F                 	db	111	;'o'
  1775  00F9E5  64                 	db	100	;'d'
  1776  00F9E6  62                 	db	98	;'b'
  1777  00F9E7  75                 	db	117	;'u'
  1778  00F9E8  73                 	db	115	;'s'
  1779  00F9E9  20                 	db	32
  1780  00F9EA  47                 	db	71	;'G'
  1781  00F9EB  50                 	db	80	;'P'
  1782  00F9EC  49                 	db	73	;'I'
  1783  00F9ED  4F                 	db	79	;'O'
  1784  00F9EE  20                 	db	32
  1785  00F9EF  45                 	db	69	;'E'
  1786  00F9F0  78                 	db	120	;'x'
  1787  00F9F1  70                 	db	112	;'p'
  1788  00F9F2  61                 	db	97	;'a'
  1789  00F9F3  6E                 	db	110	;'n'
  1790  00F9F4  73                 	db	115	;'s'
  1791  00F9F5  69                 	db	105	;'i'
  1792  00F9F6  6F                 	db	111	;'o'
  1793  00F9F7  6E                 	db	110	;'n'
  1794  00F9F8  0D                 	db	13
  1795  00F9F9  0A                 	db	10
  1796  00F9FA  00                 	db	0
  1797  00F9FB                     STR_95:
  1798                           
  1799                           ; BSR set to: 0
  1800  00F9FB  0D                 	db	13
  1801  00F9FC  0A                 	db	10
  1802  00F9FD  45                 	db	69	;'E'
  1803  00F9FE  6E                 	db	110	;'n'
  1804  00F9FF  74                 	db	116	;'t'
  1805  00FA00  65                 	db	101	;'e'
  1806  00FA01  72                 	db	114	;'r'
  1807  00FA02  20                 	db	32
  1808  00FA03  63                 	db	99	;'c'
  1809  00FA04  61                 	db	97	;'a'
  1810  00FA05  72                 	db	114	;'r'
  1811  00FA06  64                 	db	100	;'d'
  1812  00FA07  20                 	db	32
  1813  00FA08  25                 	db	37
  1814  00FA09  73                 	db	115	;'s'
  1815  00FA0A  20                 	db	32
  1816  00FA0B  28                 	db	40
  1817  00FA0C  6D                 	db	109	;'m'
  1818  00FA0D  61                 	db	97	;'a'
  1819  00FA0E  78                 	db	120	;'x'
  1820  00FA0F  20                 	db	32
  1821  00FA10  25                 	db	37
  1822  00FA11  69                 	db	105	;'i'
  1823  00FA12  20                 	db	32
  1824  00FA13  63                 	db	99	;'c'
  1825  00FA14  68                 	db	104	;'h'
  1826  00FA15  61                 	db	97	;'a'
  1827  00FA16  72                 	db	114	;'r'
  1828  00FA17  61                 	db	97	;'a'
  1829  00FA18  63                 	db	99	;'c'
  1830  00FA19  74                 	db	116	;'t'
  1831  00FA1A  65                 	db	101	;'e'
  1832  00FA1B  72                 	db	114	;'r'
  1833  00FA1C  73                 	db	115	;'s'
  1834  00FA1D  29                 	db	41
  1835  00FA1E  3A                 	db	58	;':'
  1836  00FA1F  20                 	db	32
  1837  00FA20  00                 	db	0
  1838  00FA21                     STR_25:
  1839                           
  1840                           ; BSR set to: 0
  1841  00FA21  20                 	db	32
  1842  00FA22  20                 	db	32
  1843  00FA23  20                 	db	32
  1844  00FA24  42                 	db	66	;'B'
  1845  00FA25  79                 	db	121	;'y'
  1846  00FA26  74                 	db	116	;'t'
  1847  00FA27  65                 	db	101	;'e'
  1848  00FA28  20                 	db	32
  1849  00FA29  30                 	db	48	;'0'
  1850  00FA2A  37                 	db	55	;'7'
  1851  00FA2B  3A                 	db	58	;':'
  1852  00FA2C  20                 	db	32
  1853  00FA2D  30                 	db	48	;'0'
  1854  00FA2E  78                 	db	120	;'x'
  1855  00FA2F  25                 	db	37
  1856  00FA30  30                 	db	48	;'0'
  1857  00FA31  32                 	db	50	;'2'
  1858  00FA32  78                 	db	120	;'x'
  1859  00FA33  20                 	db	32
  1860  00FA34  2D                 	db	45
  1861  00FA35  20                 	db	32
  1862  00FA36  4E                 	db	78	;'N'
  1863  00FA37  75                 	db	117	;'u'
  1864  00FA38  6D                 	db	109	;'m'
  1865  00FA39  20                 	db	32
  1866  00FA3A  42                 	db	66	;'B'
  1867  00FA3B  79                 	db	121	;'y'
  1868  00FA3C  74                 	db	116	;'t'
  1869  00FA3D  65                 	db	101	;'e'
  1870  00FA3E  73                 	db	115	;'s'
  1871  00FA3F  20                 	db	32
  1872  00FA40  4D                 	db	77	;'M'
  1873  00FA41  6F                 	db	111	;'o'
  1874  00FA42  72                 	db	114	;'r'
  1875  00FA43  65                 	db	101	;'e'
  1876  00FA44  0D                 	db	13
  1877  00FA45  0A                 	db	10
  1878  00FA46  00                 	db	0
  1879  00FA47                     STR_13:
  1880                           
  1881                           ; BSR set to: 0
  1882  00FA47  20                 	db	32
  1883  00FA48  20                 	db	32
  1884  00FA49  20                 	db	32
  1885  00FA4A  42                 	db	66	;'B'
  1886  00FA4B  79                 	db	121	;'y'
  1887  00FA4C  74                 	db	116	;'t'
  1888  00FA4D  65                 	db	101	;'e'
  1889  00FA4E  20                 	db	32
  1890  00FA4F  30                 	db	48	;'0'
  1891  00FA50  33                 	db	51	;'3'
  1892  00FA51  3A                 	db	58	;':'
  1893  00FA52  20                 	db	32
  1894  00FA53  30                 	db	48	;'0'
  1895  00FA54  78                 	db	120	;'x'
  1896  00FA55  25                 	db	37
  1897  00FA56  30                 	db	48	;'0'
  1898  00FA57  32                 	db	50	;'2'
  1899  00FA58  78                 	db	120	;'x'
  1900  00FA59  20                 	db	32
  1901  00FA5A  2D                 	db	45
  1902  00FA5B  20                 	db	32
  1903  00FA5C  31                 	db	49	;'1'
  1904  00FA5D  73                 	db	115	;'s'
  1905  00FA5E  74                 	db	116	;'t'
  1906  00FA5F  20                 	db	32
  1907  00FA60  52                 	db	82	;'R'
  1908  00FA61  65                 	db	101	;'e'
  1909  00FA62  67                 	db	103	;'g'
  1910  00FA63  20                 	db	32
  1911  00FA64  41                 	db	65	;'A'
  1912  00FA65  64                 	db	100	;'d'
  1913  00FA66  64                 	db	100	;'d'
  1914  00FA67  20                 	db	32
  1915  00FA68  48                 	db	72	;'H'
  1916  00FA69  69                 	db	105	;'i'
  1917  00FA6A  0D                 	db	13
  1918  00FA6B  0A                 	db	10
  1919  00FA6C  00                 	db	0
  1920  00FA6D                     STR_14:
  1921                           
  1922                           ; BSR set to: 0
  1923  00FA6D  20                 	db	32
  1924  00FA6E  20                 	db	32
  1925  00FA6F  20                 	db	32
  1926  00FA70  42                 	db	66	;'B'
  1927  00FA71  79                 	db	121	;'y'
  1928  00FA72  74                 	db	116	;'t'
  1929  00FA73  65                 	db	101	;'e'
  1930  00FA74  20                 	db	32
  1931  00FA75  30                 	db	48	;'0'
  1932  00FA76  34                 	db	52	;'4'
  1933  00FA77  3A                 	db	58	;':'
  1934  00FA78  20                 	db	32
  1935  00FA79  30                 	db	48	;'0'
  1936  00FA7A  78                 	db	120	;'x'
  1937  00FA7B  25                 	db	37
  1938  00FA7C  30                 	db	48	;'0'
  1939  00FA7D  32                 	db	50	;'2'
  1940  00FA7E  78                 	db	120	;'x'
  1941  00FA7F  20                 	db	32
  1942  00FA80  2D                 	db	45
  1943  00FA81  20                 	db	32
  1944  00FA82  31                 	db	49	;'1'
  1945  00FA83  73                 	db	115	;'s'
  1946  00FA84  74                 	db	116	;'t'
  1947  00FA85  20                 	db	32
  1948  00FA86  52                 	db	82	;'R'
  1949  00FA87  65                 	db	101	;'e'
  1950  00FA88  67                 	db	103	;'g'
  1951  00FA89  20                 	db	32
  1952  00FA8A  41                 	db	65	;'A'
  1953  00FA8B  64                 	db	100	;'d'
  1954  00FA8C  64                 	db	100	;'d'
  1955  00FA8D  20                 	db	32
  1956  00FA8E  4C                 	db	76	;'L'
  1957  00FA8F  6F                 	db	111	;'o'
  1958  00FA90  0D                 	db	13
  1959  00FA91  0A                 	db	10
  1960  00FA92  00                 	db	0
  1961  00FA93                     STR_86:
  1962                           
  1963                           ; BSR set to: 0
  1964  00FA93  20                 	db	32
  1965  00FA94  20                 	db	32
  1966  00FA95  20                 	db	32
  1967  00FA96  73                 	db	115	;'s'
  1968  00FA97  65                 	db	101	;'e'
  1969  00FA98  72                 	db	114	;'r'
  1970  00FA99  69                 	db	105	;'i'
  1971  00FA9A  61                 	db	97	;'a'
  1972  00FA9B  6C                 	db	108	;'l'
  1973  00FA9C  20                 	db	32
  1974  00FA9D  2D                 	db	45
  1975  00FA9E  20                 	db	32
  1976  00FA9F  53                 	db	83	;'S'
  1977  00FAA0  65                 	db	101	;'e'
  1978  00FAA1  74                 	db	116	;'t'
  1979  00FAA2  20                 	db	32
  1980  00FAA3  63                 	db	99	;'c'
  1981  00FAA4  61                 	db	97	;'a'
  1982  00FAA5  72                 	db	114	;'r'
  1983  00FAA6  64                 	db	100	;'d'
  1984  00FAA7  20                 	db	32
  1985  00FAA8  73                 	db	115	;'s'
  1986  00FAA9  65                 	db	101	;'e'
  1987  00FAAA  72                 	db	114	;'r'
  1988  00FAAB  69                 	db	105	;'i'
  1989  00FAAC  61                 	db	97	;'a'
  1990  00FAAD  6C                 	db	108	;'l'
  1991  00FAAE  20                 	db	32
  1992  00FAAF  6E                 	db	110	;'n'
  1993  00FAB0  75                 	db	117	;'u'
  1994  00FAB1  6D                 	db	109	;'m'
  1995  00FAB2  62                 	db	98	;'b'
  1996  00FAB3  65                 	db	101	;'e'
  1997  00FAB4  72                 	db	114	;'r'
  1998  00FAB5  0D                 	db	13
  1999  00FAB6  0A                 	db	10
  2000  00FAB7  00                 	db	0
  2001  00FAB8                     STR_34:
  2002                           
  2003                           ; BSR set to: 0
  2004  00FAB8  52                 	db	82	;'R'
  2005  00FAB9  65                 	db	101	;'e'
  2006  00FABA  71                 	db	113	;'q'
  2007  00FABB  75                 	db	117	;'u'
  2008  00FABC  65                 	db	101	;'e'
  2009  00FABD  73                 	db	115	;'s'
  2010  00FABE  74                 	db	116	;'t'
  2011  00FABF  65                 	db	101	;'e'
  2012  00FAC0  64                 	db	100	;'d'
  2013  00FAC1  20                 	db	32
  2014  00FAC2  72                 	db	114	;'r'
  2015  00FAC3  65                 	db	101	;'e'
  2016  00FAC4  67                 	db	103	;'g'
  2017  00FAC5  69                 	db	105	;'i'
  2018  00FAC6  73                 	db	115	;'s'
  2019  00FAC7  74                 	db	116	;'t'
  2020  00FAC8  65                 	db	101	;'e'
  2021  00FAC9  72                 	db	114	;'r'
  2022  00FACA  73                 	db	115	;'s'
  2023  00FACB  20                 	db	32
  2024  00FACC  6F                 	db	111	;'o'
  2025  00FACD  75                 	db	117	;'u'
  2026  00FACE  74                 	db	116	;'t'
  2027  00FACF  20                 	db	32
  2028  00FAD0  6F                 	db	111	;'o'
  2029  00FAD1  66                 	db	102	;'f'
  2030  00FAD2  20                 	db	32
  2031  00FAD3  72                 	db	114	;'r'
  2032  00FAD4  61                 	db	97	;'a'
  2033  00FAD5  6E                 	db	110	;'n'
  2034  00FAD6  67                 	db	103	;'g'
  2035  00FAD7  65                 	db	101	;'e'
  2036  00FAD8  2E                 	db	46
  2037  00FAD9  20                 	db	32
  2038  00FADA  0D                 	db	13
  2039  00FADB  0A                 	db	10
  2040  00FADC  00                 	db	0
  2041  00FADD                     STR_53:
  2042                           
  2043                           ; BSR set to: 0
  2044  00FADD  0D                 	db	13
  2045  00FADE  0A                 	db	10
  2046  00FADF  52                 	db	82	;'R'
  2047  00FAE0  65                 	db	101	;'e'
  2048  00FAE1  63                 	db	99	;'c'
  2049  00FAE2  65                 	db	101	;'e'
  2050  00FAE3  69                 	db	105	;'i'
  2051  00FAE4  76                 	db	118	;'v'
  2052  00FAE5  65                 	db	101	;'e'
  2053  00FAE6  64                 	db	100	;'d'
  2054  00FAE7  20                 	db	32
  2055  00FAE8  4D                 	db	77	;'M'
  2056  00FAE9  6F                 	db	111	;'o'
  2057  00FAEA  64                 	db	100	;'d'
  2058  00FAEB  62                 	db	98	;'b'
  2059  00FAEC  75                 	db	117	;'u'
  2060  00FAED  73                 	db	115	;'s'
  2061  00FAEE  20                 	db	32
  2062  00FAEF  43                 	db	67	;'C'
  2063  00FAF0  52                 	db	82	;'R'
  2064  00FAF1  43                 	db	67	;'C'
  2065  00FAF2  20                 	db	32
  2066  00FAF3  63                 	db	99	;'c'
  2067  00FAF4  68                 	db	104	;'h'
  2068  00FAF5  65                 	db	101	;'e'
  2069  00FAF6  63                 	db	99	;'c'
  2070  00FAF7  6B                 	db	107	;'k'
  2071  00FAF8  65                 	db	101	;'e'
  2072  00FAF9  64                 	db	100	;'d'
  2073  00FAFA  20                 	db	32
  2074  00FAFB  6F                 	db	111	;'o'
  2075  00FAFC  75                 	db	117	;'u'
  2076  00FAFD  74                 	db	116	;'t'
  2077  00FAFE  2E                 	db	46
  2078  00FAFF  0D                 	db	13
  2079  00FB00  0A                 	db	10
  2080  00FB01  00                 	db	0
  2081  00FB02                     STR_15:
  2082                           
  2083                           ; BSR set to: 0
  2084  00FB02  20                 	db	32
  2085  00FB03  20                 	db	32
  2086  00FB04  20                 	db	32
  2087  00FB05  42                 	db	66	;'B'
  2088  00FB06  79                 	db	121	;'y'
  2089  00FB07  74                 	db	116	;'t'
  2090  00FB08  65                 	db	101	;'e'
  2091  00FB09  20                 	db	32
  2092  00FB0A  30                 	db	48	;'0'
  2093  00FB0B  35                 	db	53	;'5'
  2094  00FB0C  3A                 	db	58	;':'
  2095  00FB0D  20                 	db	32
  2096  00FB0E  30                 	db	48	;'0'
  2097  00FB0F  78                 	db	120	;'x'
  2098  00FB10  25                 	db	37
  2099  00FB11  30                 	db	48	;'0'
  2100  00FB12  32                 	db	50	;'2'
  2101  00FB13  78                 	db	120	;'x'
  2102  00FB14  20                 	db	32
  2103  00FB15  2D                 	db	45
  2104  00FB16  20                 	db	32
  2105  00FB17  4E                 	db	78	;'N'
  2106  00FB18  75                 	db	117	;'u'
  2107  00FB19  6D                 	db	109	;'m'
  2108  00FB1A  20                 	db	32
  2109  00FB1B  6F                 	db	111	;'o'
  2110  00FB1C  66                 	db	102	;'f'
  2111  00FB1D  20                 	db	32
  2112  00FB1E  52                 	db	82	;'R'
  2113  00FB1F  65                 	db	101	;'e'
  2114  00FB20  67                 	db	103	;'g'
  2115  00FB21  20                 	db	32
  2116  00FB22  48                 	db	72	;'H'
  2117  00FB23  69                 	db	105	;'i'
  2118  00FB24  0D                 	db	13
  2119  00FB25  0A                 	db	10
  2120  00FB26  00                 	db	0
  2121  00FB27                     STR_16:
  2122                           
  2123                           ; BSR set to: 0
  2124  00FB27  20                 	db	32
  2125  00FB28  20                 	db	32
  2126  00FB29  20                 	db	32
  2127  00FB2A  42                 	db	66	;'B'
  2128  00FB2B  79                 	db	121	;'y'
  2129  00FB2C  74                 	db	116	;'t'
  2130  00FB2D  65                 	db	101	;'e'
  2131  00FB2E  20                 	db	32
  2132  00FB2F  30                 	db	48	;'0'
  2133  00FB30  36                 	db	54	;'6'
  2134  00FB31  3A                 	db	58	;':'
  2135  00FB32  20                 	db	32
  2136  00FB33  30                 	db	48	;'0'
  2137  00FB34  78                 	db	120	;'x'
  2138  00FB35  25                 	db	37
  2139  00FB36  30                 	db	48	;'0'
  2140  00FB37  32                 	db	50	;'2'
  2141  00FB38  78                 	db	120	;'x'
  2142  00FB39  20                 	db	32
  2143  00FB3A  2D                 	db	45
  2144  00FB3B  20                 	db	32
  2145  00FB3C  4E                 	db	78	;'N'
  2146  00FB3D  75                 	db	117	;'u'
  2147  00FB3E  6D                 	db	109	;'m'
  2148  00FB3F  20                 	db	32
  2149  00FB40  6F                 	db	111	;'o'
  2150  00FB41  66                 	db	102	;'f'
  2151  00FB42  20                 	db	32
  2152  00FB43  52                 	db	82	;'R'
  2153  00FB44  65                 	db	101	;'e'
  2154  00FB45  67                 	db	103	;'g'
  2155  00FB46  20                 	db	32
  2156  00FB47  4C                 	db	76	;'L'
  2157  00FB48  6F                 	db	111	;'o'
  2158  00FB49  0D                 	db	13
  2159  00FB4A  0A                 	db	10
  2160  00FB4B  00                 	db	0
  2161  00FB4C                     STR_73:
  2162                           
  2163                           ; BSR set to: 0
  2164  00FB4C  4D                 	db	77	;'M'
  2165  00FB4D  6F                 	db	111	;'o'
  2166  00FB4E  64                 	db	100	;'d'
  2167  00FB4F  62                 	db	98	;'b'
  2168  00FB50  75                 	db	117	;'u'
  2169  00FB51  73                 	db	115	;'s'
  2170  00FB52  20                 	db	32
  2171  00FB53  46                 	db	70	;'F'
  2172  00FB54  75                 	db	117	;'u'
  2173  00FB55  6E                 	db	110	;'n'
  2174  00FB56  63                 	db	99	;'c'
  2175  00FB57  74                 	db	116	;'t'
  2176  00FB58  69                 	db	105	;'i'
  2177  00FB59  6F                 	db	111	;'o'
  2178  00FB5A  6E                 	db	110	;'n'
  2179  00FB5B  20                 	db	32
  2180  00FB5C  43                 	db	67	;'C'
  2181  00FB5D  6F                 	db	111	;'o'
  2182  00FB5E  64                 	db	100	;'d'
  2183  00FB5F  65                 	db	101	;'e'
  2184  00FB60  73                 	db	115	;'s'
  2185  00FB61  20                 	db	32
  2186  00FB62  53                 	db	83	;'S'
  2187  00FB63  75                 	db	117	;'u'
  2188  00FB64  70                 	db	112	;'p'
  2189  00FB65  70                 	db	112	;'p'
  2190  00FB66  6F                 	db	111	;'o'
  2191  00FB67  72                 	db	114	;'r'
  2192  00FB68  74                 	db	116	;'t'
  2193  00FB69  65                 	db	101	;'e'
  2194  00FB6A  64                 	db	100	;'d'
  2195  00FB6B  3A                 	db	58	;':'
  2196  00FB6C  0D                 	db	13
  2197  00FB6D  0A                 	db	10
  2198  00FB6E  0A                 	db	10
  2199  00FB6F  00                 	db	0
  2200  00FB70                     STR_31:
  2201                           
  2202                           ; BSR set to: 0
  2203  00FB70  63                 	db	99	;'c'
  2204  00FB71  72                 	db	114	;'r'
  2205  00FB72  63                 	db	99	;'c'
  2206  00FB73  48                 	db	72	;'H'
  2207  00FB74  69                 	db	105	;'i'
  2208  00FB75  67                 	db	103	;'g'
  2209  00FB76  68                 	db	104	;'h'
  2210  00FB77  3A                 	db	58	;':'
  2211  00FB78  20                 	db	32
  2212  00FB79  30                 	db	48	;'0'
  2213  00FB7A  78                 	db	120	;'x'
  2214  00FB7B  25                 	db	37
  2215  00FB7C  30                 	db	48	;'0'
  2216  00FB7D  32                 	db	50	;'2'
  2217  00FB7E  78                 	db	120	;'x'
  2218  00FB7F  20                 	db	32
  2219  00FB80  20                 	db	32
  2220  00FB81  63                 	db	99	;'c'
  2221  00FB82  72                 	db	114	;'r'
  2222  00FB83  63                 	db	99	;'c'
  2223  00FB84  4C                 	db	76	;'L'
  2224  00FB85  6F                 	db	111	;'o'
  2225  00FB86  77                 	db	119	;'w'
  2226  00FB87  3A                 	db	58	;':'
  2227  00FB88  20                 	db	32
  2228  00FB89  30                 	db	48	;'0'
  2229  00FB8A  78                 	db	120	;'x'
  2230  00FB8B  25                 	db	37
  2231  00FB8C  30                 	db	48	;'0'
  2232  00FB8D  32                 	db	50	;'2'
  2233  00FB8E  78                 	db	120	;'x'
  2234  00FB8F  20                 	db	32
  2235  00FB90  20                 	db	32
  2236  00FB91  0D                 	db	13
  2237  00FB92  0A                 	db	10
  2238  00FB93  00                 	db	0
  2239  00FB94                     STR_11:
  2240                           
  2241                           ; BSR set to: 0
  2242  00FB94  20                 	db	32
  2243  00FB95  20                 	db	32
  2244  00FB96  20                 	db	32
  2245  00FB97  42                 	db	66	;'B'
  2246  00FB98  79                 	db	121	;'y'
  2247  00FB99  74                 	db	116	;'t'
  2248  00FB9A  65                 	db	101	;'e'
  2249  00FB9B  20                 	db	32
  2250  00FB9C  30                 	db	48	;'0'
  2251  00FB9D  31                 	db	49	;'1'
  2252  00FB9E  3A                 	db	58	;':'
  2253  00FB9F  20                 	db	32
  2254  00FBA0  30                 	db	48	;'0'
  2255  00FBA1  78                 	db	120	;'x'
  2256  00FBA2  25                 	db	37
  2257  00FBA3  30                 	db	48	;'0'
  2258  00FBA4  32                 	db	50	;'2'
  2259  00FBA5  78                 	db	120	;'x'
  2260  00FBA6  20                 	db	32
  2261  00FBA7  2D                 	db	45
  2262  00FBA8  20                 	db	32
  2263  00FBA9  43                 	db	67	;'C'
  2264  00FBAA  61                 	db	97	;'a'
  2265  00FBAB  72                 	db	114	;'r'
  2266  00FBAC  64                 	db	100	;'d'
  2267  00FBAD  20                 	db	32
  2268  00FBAE  41                 	db	65	;'A'
  2269  00FBAF  64                 	db	100	;'d'
  2270  00FBB0  64                 	db	100	;'d'
  2271  00FBB1  72                 	db	114	;'r'
  2272  00FBB2  65                 	db	101	;'e'
  2273  00FBB3  73                 	db	115	;'s'
  2274  00FBB4  73                 	db	115	;'s'
  2275  00FBB5  0D                 	db	13
  2276  00FBB6  0A                 	db	10
  2277  00FBB7  00                 	db	0
  2278  00FBB8                     STR_27:
  2279                           
  2280                           ; BSR set to: 0
  2281  00FBB8  20                 	db	32
  2282  00FBB9  20                 	db	32
  2283  00FBBA  20                 	db	32
  2284  00FBBB  42                 	db	66	;'B'
  2285  00FBBC  79                 	db	121	;'y'
  2286  00FBBD  74                 	db	116	;'t'
  2287  00FBBE  65                 	db	101	;'e'
  2288  00FBBF  20                 	db	32
  2289  00FBC0  25                 	db	37
  2290  00FBC1  30                 	db	48	;'0'
  2291  00FBC2  32                 	db	50	;'2'
  2292  00FBC3  69                 	db	105	;'i'
  2293  00FBC4  3A                 	db	58	;':'
  2294  00FBC5  20                 	db	32
  2295  00FBC6  30                 	db	48	;'0'
  2296  00FBC7  78                 	db	120	;'x'
  2297  00FBC8  25                 	db	37
  2298  00FBC9  30                 	db	48	;'0'
  2299  00FBCA  32                 	db	50	;'2'
  2300  00FBCB  78                 	db	120	;'x'
  2301  00FBCC  20                 	db	32
  2302  00FBCD  2D                 	db	45
  2303  00FBCE  20                 	db	32
  2304  00FBCF  52                 	db	82	;'R'
  2305  00FBD0  65                 	db	101	;'e'
  2306  00FBD1  67                 	db	103	;'g'
  2307  00FBD2  20                 	db	32
  2308  00FBD3  25                 	db	37
  2309  00FBD4  69                 	db	105	;'i'
  2310  00FBD5  20                 	db	32
  2311  00FBD6  4C                 	db	76	;'L'
  2312  00FBD7  6F                 	db	111	;'o'
  2313  00FBD8  0D                 	db	13
  2314  00FBD9  0A                 	db	10
  2315  00FBDA  00                 	db	0
  2316  00FBDB                     STR_72:
  2317                           
  2318                           ; BSR set to: 0
  2319  00FBDB  49                 	db	73	;'I'
  2320  00FBDC  6E                 	db	110	;'n'
  2321  00FBDD  69                 	db	105	;'i'
  2322  00FBDE  74                 	db	116	;'t'
  2323  00FBDF  61                 	db	97	;'a'
  2324  00FBE0  6C                 	db	108	;'l'
  2325  00FBE1  69                 	db	105	;'i'
  2326  00FBE2  73                 	db	115	;'s'
  2327  00FBE3  61                 	db	97	;'a'
  2328  00FBE4  74                 	db	116	;'t'
  2329  00FBE5  69                 	db	105	;'i'
  2330  00FBE6  6F                 	db	111	;'o'
  2331  00FBE7  6E                 	db	110	;'n'
  2332  00FBE8  20                 	db	32
  2333  00FBE9  43                 	db	67	;'C'
  2334  00FBEA  6F                 	db	111	;'o'
  2335  00FBEB  6D                 	db	109	;'m'
  2336  00FBEC  70                 	db	112	;'p'
  2337  00FBED  6C                 	db	108	;'l'
  2338  00FBEE  65                 	db	101	;'e'
  2339  00FBEF  74                 	db	116	;'t'
  2340  00FBF0  65                 	db	101	;'e'
  2341  00FBF1  20                 	db	32
  2342  00FBF2  2D                 	db	45
  2343  00FBF3  20                 	db	32
  2344  00FBF4  52                 	db	82	;'R'
  2345  00FBF5  65                 	db	101	;'e'
  2346  00FBF6  61                 	db	97	;'a'
  2347  00FBF7  64                 	db	100	;'d'
  2348  00FBF8  79                 	db	121	;'y'
  2349  00FBF9  0D                 	db	13
  2350  00FBFA  0A                 	db	10
  2351  00FBFB  0A                 	db	10
  2352  00FBFC  00                 	db	0
  2353  00FBFD                     STR_10:
  2354                           
  2355                           ; BSR set to: 0
  2356  00FBFD  0D                 	db	13
  2357  00FBFE  0A                 	db	10
  2358  00FBFF  4D                 	db	77	;'M'
  2359  00FC00  6F                 	db	111	;'o'
  2360  00FC01  64                 	db	100	;'d'
  2361  00FC02  62                 	db	98	;'b'
  2362  00FC03  75                 	db	117	;'u'
  2363  00FC04  73                 	db	115	;'s'
  2364  00FC05  20                 	db	32
  2365  00FC06  44                 	db	68	;'D'
  2366  00FC07  61                 	db	97	;'a'
  2367  00FC08  74                 	db	116	;'t'
  2368  00FC09  61                 	db	97	;'a'
  2369  00FC0A  20                 	db	32
  2370  00FC0B  43                 	db	67	;'C'
  2371  00FC0C  61                 	db	97	;'a'
  2372  00FC0D  70                 	db	112	;'p'
  2373  00FC0E  74                 	db	116	;'t'
  2374  00FC0F  75                 	db	117	;'u'
  2375  00FC10  72                 	db	114	;'r'
  2376  00FC11  65                 	db	101	;'e'
  2377  00FC12  20                 	db	32
  2378  00FC13  43                 	db	67	;'C'
  2379  00FC14  6F                 	db	111	;'o'
  2380  00FC15  6D                 	db	109	;'m'
  2381  00FC16  70                 	db	112	;'p'
  2382  00FC17  6C                 	db	108	;'l'
  2383  00FC18  65                 	db	101	;'e'
  2384  00FC19  74                 	db	116	;'t'
  2385  00FC1A  65                 	db	101	;'e'
  2386  00FC1B  3A                 	db	58	;':'
  2387  00FC1C  0D                 	db	13
  2388  00FC1D  0A                 	db	10
  2389  00FC1E  00                 	db	0
  2390  00FC1F                     STR_87:
  2391                           
  2392                           ; BSR set to: 0
  2393  00FC1F  20                 	db	32
  2394  00FC20  20                 	db	32
  2395  00FC21  20                 	db	32
  2396  00FC22  70                 	db	112	;'p'
  2397  00FC23  61                 	db	97	;'a'
  2398  00FC24  72                 	db	114	;'r'
  2399  00FC25  74                 	db	116	;'t'
  2400  00FC26  20                 	db	32
  2401  00FC27  2D                 	db	45
  2402  00FC28  20                 	db	32
  2403  00FC29  53                 	db	83	;'S'
  2404  00FC2A  65                 	db	101	;'e'
  2405  00FC2B  74                 	db	116	;'t'
  2406  00FC2C  20                 	db	32
  2407  00FC2D  63                 	db	99	;'c'
  2408  00FC2E  61                 	db	97	;'a'
  2409  00FC2F  72                 	db	114	;'r'
  2410  00FC30  64                 	db	100	;'d'
  2411  00FC31  20                 	db	32
  2412  00FC32  70                 	db	112	;'p'
  2413  00FC33  61                 	db	97	;'a'
  2414  00FC34  72                 	db	114	;'r'
  2415  00FC35  74                 	db	116	;'t'
  2416  00FC36  20                 	db	32
  2417  00FC37  6E                 	db	110	;'n'
  2418  00FC38  75                 	db	117	;'u'
  2419  00FC39  6D                 	db	109	;'m'
  2420  00FC3A  62                 	db	98	;'b'
  2421  00FC3B  65                 	db	101	;'e'
  2422  00FC3C  72                 	db	114	;'r'
  2423  00FC3D  0D                 	db	13
  2424  00FC3E  0A                 	db	10
  2425  00FC3F  00                 	db	0
  2426  00FC40                     STR_97:
  2427                           
  2428                           ; BSR set to: 0
  2429  00FC40  0D                 	db	13
  2430  00FC41  0A                 	db	10
  2431  00FC42  45                 	db	69	;'E'
  2432  00FC43  6E                 	db	110	;'n'
  2433  00FC44  74                 	db	116	;'t'
  2434  00FC45  65                 	db	101	;'e'
  2435  00FC46  72                 	db	114	;'r'
  2436  00FC47  65                 	db	101	;'e'
  2437  00FC48  64                 	db	100	;'d'
  2438  00FC49  3A                 	db	58	;':'
  2439  00FC4A  20                 	db	32
  2440  00FC4B  25                 	db	37
  2441  00FC4C  73                 	db	115	;'s'
  2442  00FC4D  20                 	db	32
  2443  00FC4E  0D                 	db	13
  2444  00FC4F  0A                 	db	10
  2445  00FC50  20                 	db	32
  2446  00FC51  43                 	db	67	;'C'
  2447  00FC52  6F                 	db	111	;'o'
  2448  00FC53  6E                 	db	110	;'n'
  2449  00FC54  66                 	db	102	;'f'
  2450  00FC55  69                 	db	105	;'i'
  2451  00FC56  72                 	db	114	;'r'
  2452  00FC57  6D                 	db	109	;'m'
  2453  00FC58  20                 	db	32
  2454  00FC59  20                 	db	32
  2455  00FC5A  59                 	db	89	;'Y'
  2456  00FC5B  7C                 	db	124
  2457  00FC5C  4E                 	db	78	;'N'
  2458  00FC5D  3F                 	db	63	;'?'
  2459  00FC5E  3A                 	db	58	;':'
  2460  00FC5F  20                 	db	32
  2461  00FC60  00                 	db	0
  2462  00FC61                     STR_88:
  2463                           
  2464                           ; BSR set to: 0
  2465  00FC61  20                 	db	32
  2466  00FC62  20                 	db	32
  2467  00FC63  20                 	db	32
  2468  00FC64  72                 	db	114	;'r'
  2469  00FC65  65                 	db	101	;'e'
  2470  00FC66  76                 	db	118	;'v'
  2471  00FC67  20                 	db	32
  2472  00FC68  2D                 	db	45
  2473  00FC69  20                 	db	32
  2474  00FC6A  53                 	db	83	;'S'
  2475  00FC6B  65                 	db	101	;'e'
  2476  00FC6C  74                 	db	116	;'t'
  2477  00FC6D  20                 	db	32
  2478  00FC6E  63                 	db	99	;'c'
  2479  00FC6F  61                 	db	97	;'a'
  2480  00FC70  72                 	db	114	;'r'
  2481  00FC71  64                 	db	100	;'d'
  2482  00FC72  20                 	db	32
  2483  00FC73  70                 	db	112	;'p'
  2484  00FC74  61                 	db	97	;'a'
  2485  00FC75  72                 	db	114	;'r'
  2486  00FC76  74                 	db	116	;'t'
  2487  00FC77  20                 	db	32
  2488  00FC78  6E                 	db	110	;'n'
  2489  00FC79  75                 	db	117	;'u'
  2490  00FC7A  6D                 	db	109	;'m'
  2491  00FC7B  62                 	db	98	;'b'
  2492  00FC7C  65                 	db	101	;'e'
  2493  00FC7D  72                 	db	114	;'r'
  2494  00FC7E  0D                 	db	13
  2495  00FC7F  0A                 	db	10
  2496  00FC80  00                 	db	0
  2497  00FC81                     STR_54:
  2498                           
  2499                           ; BSR set to: 0
  2500  00FC81  0D                 	db	13
  2501  00FC82  0A                 	db	10
  2502  00FC83  52                 	db	82	;'R'
  2503  00FC84  65                 	db	101	;'e'
  2504  00FC85  63                 	db	99	;'c'
  2505  00FC86  65                 	db	101	;'e'
  2506  00FC87  69                 	db	105	;'i'
  2507  00FC88  76                 	db	118	;'v'
  2508  00FC89  65                 	db	101	;'e'
  2509  00FC8A  64                 	db	100	;'d'
  2510  00FC8B  20                 	db	32
  2511  00FC8C  4D                 	db	77	;'M'
  2512  00FC8D  6F                 	db	111	;'o'
  2513  00FC8E  64                 	db	100	;'d'
  2514  00FC8F  62                 	db	98	;'b'
  2515  00FC90  75                 	db	117	;'u'
  2516  00FC91  73                 	db	115	;'s'
  2517  00FC92  20                 	db	32
  2518  00FC93  43                 	db	67	;'C'
  2519  00FC94  52                 	db	82	;'R'
  2520  00FC95  43                 	db	67	;'C'
  2521  00FC96  20                 	db	32
  2522  00FC97  69                 	db	105	;'i'
  2523  00FC98  73                 	db	115	;'s'
  2524  00FC99  20                 	db	32
  2525  00FC9A  62                 	db	98	;'b'
  2526  00FC9B  61                 	db	97	;'a'
  2527  00FC9C  64                 	db	100	;'d'
  2528  00FC9D  2E                 	db	46
  2529  00FC9E  0D                 	db	13
  2530  00FC9F  0A                 	db	10
  2531  00FCA0  00                 	db	0
  2532  00FCA1                     STR_28:
  2533                           
  2534                           ; BSR set to: 0
  2535  00FCA1  20                 	db	32
  2536  00FCA2  20                 	db	32
  2537  00FCA3  20                 	db	32
  2538  00FCA4  42                 	db	66	;'B'
  2539  00FCA5  79                 	db	121	;'y'
  2540  00FCA6  74                 	db	116	;'t'
  2541  00FCA7  65                 	db	101	;'e'
  2542  00FCA8  20                 	db	32
  2543  00FCA9  25                 	db	37
  2544  00FCAA  30                 	db	48	;'0'
  2545  00FCAB  32                 	db	50	;'2'
  2546  00FCAC  69                 	db	105	;'i'
  2547  00FCAD  3A                 	db	58	;':'
  2548  00FCAE  20                 	db	32
  2549  00FCAF  30                 	db	48	;'0'
  2550  00FCB0  78                 	db	120	;'x'
  2551  00FCB1  25                 	db	37
  2552  00FCB2  30                 	db	48	;'0'
  2553  00FCB3  32                 	db	50	;'2'
  2554  00FCB4  78                 	db	120	;'x'
  2555  00FCB5  20                 	db	32
  2556  00FCB6  2D                 	db	45
  2557  00FCB7  20                 	db	32
  2558  00FCB8  43                 	db	67	;'C'
  2559  00FCB9  52                 	db	82	;'R'
  2560  00FCBA  43                 	db	67	;'C'
  2561  00FCBB  20                 	db	32
  2562  00FCBC  48                 	db	72	;'H'
  2563  00FCBD  69                 	db	105	;'i'
  2564  00FCBE  0D                 	db	13
  2565  00FCBF  0A                 	db	10
  2566  00FCC0  00                 	db	0
  2567  00FCC1                     STR_29:
  2568                           
  2569                           ; BSR set to: 0
  2570  00FCC1  20                 	db	32
  2571  00FCC2  20                 	db	32
  2572  00FCC3  20                 	db	32
  2573  00FCC4  42                 	db	66	;'B'
  2574  00FCC5  79                 	db	121	;'y'
  2575  00FCC6  74                 	db	116	;'t'
  2576  00FCC7  65                 	db	101	;'e'
  2577  00FCC8  20                 	db	32
  2578  00FCC9  25                 	db	37
  2579  00FCCA  30                 	db	48	;'0'
  2580  00FCCB  32                 	db	50	;'2'
  2581  00FCCC  69                 	db	105	;'i'
  2582  00FCCD  3A                 	db	58	;':'
  2583  00FCCE  20                 	db	32
  2584  00FCCF  30                 	db	48	;'0'
  2585  00FCD0  78                 	db	120	;'x'
  2586  00FCD1  25                 	db	37
  2587  00FCD2  30                 	db	48	;'0'
  2588  00FCD3  32                 	db	50	;'2'
  2589  00FCD4  78                 	db	120	;'x'
  2590  00FCD5  20                 	db	32
  2591  00FCD6  2D                 	db	45
  2592  00FCD7  20                 	db	32
  2593  00FCD8  43                 	db	67	;'C'
  2594  00FCD9  52                 	db	82	;'R'
  2595  00FCDA  43                 	db	67	;'C'
  2596  00FCDB  20                 	db	32
  2597  00FCDC  4C                 	db	76	;'L'
  2598  00FCDD  6F                 	db	111	;'o'
  2599  00FCDE  0D                 	db	13
  2600  00FCDF  0A                 	db	10
  2601  00FCE0  00                 	db	0
  2602  00FCE1                     STR_2:
  2603                           
  2604                           ; BSR set to: 0
  2605  00FCE1  4D                 	db	77	;'M'
  2606  00FCE2  6F                 	db	111	;'o'
  2607  00FCE3  64                 	db	100	;'d'
  2608  00FCE4  62                 	db	98	;'b'
  2609  00FCE5  75                 	db	117	;'u'
  2610  00FCE6  73                 	db	115	;'s'
  2611  00FCE7  20                 	db	32
  2612  00FCE8  52                 	db	82	;'R'
  2613  00FCE9  65                 	db	101	;'e'
  2614  00FCEA  67                 	db	103	;'g'
  2615  00FCEB  69                 	db	105	;'i'
  2616  00FCEC  73                 	db	115	;'s'
  2617  00FCED  74                 	db	116	;'t'
  2618  00FCEE  65                 	db	101	;'e'
  2619  00FCEF  72                 	db	114	;'r'
  2620  00FCF0  20                 	db	32
  2621  00FCF1  42                 	db	66	;'B'
  2622  00FCF2  65                 	db	101	;'e'
  2623  00FCF3  66                 	db	102	;'f'
  2624  00FCF4  6F                 	db	111	;'o'
  2625  00FCF5  72                 	db	114	;'r'
  2626  00FCF6  65                 	db	101	;'e'
  2627  00FCF7  20                 	db	32
  2628  00FCF8  55                 	db	85	;'U'
  2629  00FCF9  70                 	db	112	;'p'
  2630  00FCFA  64                 	db	100	;'d'
  2631  00FCFB  61                 	db	97	;'a'
  2632  00FCFC  74                 	db	116	;'t'
  2633  00FCFD  65                 	db	101	;'e'
  2634  00FCFE  3A                 	db	58	;':'
  2635  00FCFF  00                 	db	0
  2636  00FD00                     STR_77:
  2637                           
  2638                           ; BSR set to: 0
  2639  00FD00  20                 	db	32
  2640  00FD01  20                 	db	32
  2641  00FD02  20                 	db	32
  2642  00FD03  20                 	db	32
  2643  00FD04  20                 	db	32
  2644  00FD05  20                 	db	32
  2645  00FD06  41                 	db	65	;'A'
  2646  00FD07  64                 	db	100	;'d'
  2647  00FD08  64                 	db	100	;'d'
  2648  00FD09  20                 	db	32
  2649  00FD0A  30                 	db	48	;'0'
  2650  00FD0B  78                 	db	120	;'x'
  2651  00FD0C  30                 	db	48	;'0'
  2652  00FD0D  32                 	db	50	;'2'
  2653  00FD0E  30                 	db	48	;'0'
  2654  00FD0F  30                 	db	48	;'0'
  2655  00FD10  20                 	db	32
  2656  00FD11  2D                 	db	45
  2657  00FD12  20                 	db	32
  2658  00FD13  52                 	db	82	;'R'
  2659  00FD14  65                 	db	101	;'e'
  2660  00FD15  76                 	db	118	;'v'
  2661  00FD16  69                 	db	105	;'i'
  2662  00FD17  73                 	db	115	;'s'
  2663  00FD18  69                 	db	105	;'i'
  2664  00FD19  6F                 	db	111	;'o'
  2665  00FD1A  6E                 	db	110	;'n'
  2666  00FD1B  0D                 	db	13
  2667  00FD1C  0A                 	db	10
  2668  00FD1D  00                 	db	0
  2669  00FD1E                     STR_17:
  2670                           
  2671                           ; BSR set to: 0
  2672  00FD1E  20                 	db	32
  2673  00FD1F  20                 	db	32
  2674  00FD20  20                 	db	32
  2675  00FD21  42                 	db	66	;'B'
  2676  00FD22  79                 	db	121	;'y'
  2677  00FD23  74                 	db	116	;'t'
  2678  00FD24  65                 	db	101	;'e'
  2679  00FD25  20                 	db	32
  2680  00FD26  30                 	db	48	;'0'
  2681  00FD27  36                 	db	54	;'6'
  2682  00FD28  3A                 	db	58	;':'
  2683  00FD29  20                 	db	32
  2684  00FD2A  30                 	db	48	;'0'
  2685  00FD2B  78                 	db	120	;'x'
  2686  00FD2C  25                 	db	37
  2687  00FD2D  30                 	db	48	;'0'
  2688  00FD2E  32                 	db	50	;'2'
  2689  00FD2F  78                 	db	120	;'x'
  2690  00FD30  20                 	db	32
  2691  00FD31  2D                 	db	45
  2692  00FD32  20                 	db	32
  2693  00FD33  43                 	db	67	;'C'
  2694  00FD34  52                 	db	82	;'R'
  2695  00FD35  43                 	db	67	;'C'
  2696  00FD36  20                 	db	32
  2697  00FD37  48                 	db	72	;'H'
  2698  00FD38  69                 	db	105	;'i'
  2699  00FD39  0D                 	db	13
  2700  00FD3A  0A                 	db	10
  2701  00FD3B  00                 	db	0
  2702  00FD3C                     STR_18:
  2703                           
  2704                           ; BSR set to: 0
  2705  00FD3C  20                 	db	32
  2706  00FD3D  20                 	db	32
  2707  00FD3E  20                 	db	32
  2708  00FD3F  42                 	db	66	;'B'
  2709  00FD40  79                 	db	121	;'y'
  2710  00FD41  74                 	db	116	;'t'
  2711  00FD42  65                 	db	101	;'e'
  2712  00FD43  20                 	db	32
  2713  00FD44  30                 	db	48	;'0'
  2714  00FD45  37                 	db	55	;'7'
  2715  00FD46  3A                 	db	58	;':'
  2716  00FD47  20                 	db	32
  2717  00FD48  30                 	db	48	;'0'
  2718  00FD49  78                 	db	120	;'x'
  2719  00FD4A  25                 	db	37
  2720  00FD4B  30                 	db	48	;'0'
  2721  00FD4C  32                 	db	50	;'2'
  2722  00FD4D  78                 	db	120	;'x'
  2723  00FD4E  20                 	db	32
  2724  00FD4F  2D                 	db	45
  2725  00FD50  20                 	db	32
  2726  00FD51  43                 	db	67	;'C'
  2727  00FD52  52                 	db	82	;'R'
  2728  00FD53  43                 	db	67	;'C'
  2729  00FD54  20                 	db	32
  2730  00FD55  4C                 	db	76	;'L'
  2731  00FD56  6F                 	db	111	;'o'
  2732  00FD57  0D                 	db	13
  2733  00FD58  0A                 	db	10
  2734  00FD59  00                 	db	0
  2735  00FD5A                     STR_45:
  2736                           
  2737                           ; BSR set to: 0
  2738  00FD5A  52                 	db	82	;'R'
  2739  00FD5B  65                 	db	101	;'e'
  2740  00FD5C  71                 	db	113	;'q'
  2741  00FD5D  75                 	db	117	;'u'
  2742  00FD5E  65                 	db	101	;'e'
  2743  00FD5F  73                 	db	115	;'s'
  2744  00FD60  74                 	db	116	;'t'
  2745  00FD61  65                 	db	101	;'e'
  2746  00FD62  64                 	db	100	;'d'
  2747  00FD63  20                 	db	32
  2748  00FD64  41                 	db	65	;'A'
  2749  00FD65  6E                 	db	110	;'n'
  2750  00FD66  61                 	db	97	;'a'
  2751  00FD67  6C                 	db	108	;'l'
  2752  00FD68  6F                 	db	111	;'o'
  2753  00FD69  67                 	db	103	;'g'
  2754  00FD6A  75                 	db	117	;'u'
  2755  00FD6B  65                 	db	101	;'e'
  2756  00FD6C  20                 	db	32
  2757  00FD6D  49                 	db	73	;'I'
  2758  00FD6E  6E                 	db	110	;'n'
  2759  00FD6F  70                 	db	112	;'p'
  2760  00FD70  75                 	db	117	;'u'
  2761  00FD71  74                 	db	116	;'t'
  2762  00FD72  73                 	db	115	;'s'
  2763  00FD73  0D                 	db	13
  2764  00FD74  0A                 	db	10
  2765  00FD75  0A                 	db	10
  2766  00FD76  00                 	db	0
  2767  00FD77                     STR_9:
  2768                           
  2769                           ; BSR set to: 0
  2770  00FD77  4D                 	db	77	;'M'
  2771  00FD78  6F                 	db	111	;'o'
  2772  00FD79  64                 	db	100	;'d'
  2773  00FD7A  44                 	db	68	;'D'
  2774  00FD7B  61                 	db	97	;'a'
  2775  00FD7C  74                 	db	116	;'t'
  2776  00FD7D  61                 	db	97	;'a'
  2777  00FD7E  43                 	db	67	;'C'
  2778  00FD7F  6E                 	db	110	;'n'
  2779  00FD80  74                 	db	116	;'t'
  2780  00FD81  20                 	db	32
  2781  00FD82  73                 	db	115	;'s'
  2782  00FD83  69                 	db	105	;'i'
  2783  00FD84  74                 	db	116	;'t'
  2784  00FD85  74                 	db	116	;'t'
  2785  00FD86  69                 	db	105	;'i'
  2786  00FD87  6E                 	db	110	;'n'
  2787  00FD88  67                 	db	103	;'g'
  2788  00FD89  20                 	db	32
  2789  00FD8A  61                 	db	97	;'a'
  2790  00FD8B  74                 	db	116	;'t'
  2791  00FD8C  20                 	db	32
  2792  00FD8D  25                 	db	37
  2793  00FD8E  69                 	db	105	;'i'
  2794  00FD8F  0D                 	db	13
  2795  00FD90  0A                 	db	10
  2796  00FD91  0A                 	db	10
  2797  00FD92  00                 	db	0
  2798  00FD93                     STR_48:
  2799                           
  2800                           ; BSR set to: 0
  2801  00FD93  4D                 	db	77	;'M'
  2802  00FD94  6F                 	db	111	;'o'
  2803  00FD95  64                 	db	100	;'d'
  2804  00FD96  62                 	db	98	;'b'
  2805  00FD97  75                 	db	117	;'u'
  2806  00FD98  73                 	db	115	;'s'
  2807  00FD99  20                 	db	32
  2808  00FD9A  52                 	db	82	;'R'
  2809  00FD9B  65                 	db	101	;'e'
  2810  00FD9C  73                 	db	115	;'s'
  2811  00FD9D  70                 	db	112	;'p'
  2812  00FD9E  6F                 	db	111	;'o'
  2813  00FD9F  6E                 	db	110	;'n'
  2814  00FDA0  73                 	db	115	;'s'
  2815  00FDA1  65                 	db	101	;'e'
  2816  00FDA2  20                 	db	32
  2817  00FDA3  43                 	db	67	;'C'
  2818  00FDA4  6F                 	db	111	;'o'
  2819  00FDA5  75                 	db	117	;'u'
  2820  00FDA6  6E                 	db	110	;'n'
  2821  00FDA7  74                 	db	116	;'t'
  2822  00FDA8  20                 	db	32
  2823  00FDA9  25                 	db	37
  2824  00FDAA  69                 	db	105	;'i'
  2825  00FDAB  3A                 	db	58	;':'
  2826  00FDAC  0D                 	db	13
  2827  00FDAD  0A                 	db	10
  2828  00FDAE  00                 	db	0
  2829  00FDAF                     STR_3:
  2830                           
  2831                           ; BSR set to: 0
  2832  00FDAF  55                 	db	85	;'U'
  2833  00FDB0  6E                 	db	110	;'n'
  2834  00FDB1  73                 	db	115	;'s'
  2835  00FDB2  75                 	db	117	;'u'
  2836  00FDB3  70                 	db	112	;'p'
  2837  00FDB4  70                 	db	112	;'p'
  2838  00FDB5  6F                 	db	111	;'o'
  2839  00FDB6  72                 	db	114	;'r'
  2840  00FDB7  74                 	db	116	;'t'
  2841  00FDB8  65                 	db	101	;'e'
  2842  00FDB9  64                 	db	100	;'d'
  2843  00FDBA  20                 	db	32
  2844  00FDBB  46                 	db	70	;'F'
  2845  00FDBC  75                 	db	117	;'u'
  2846  00FDBD  6E                 	db	110	;'n'
  2847  00FDBE  63                 	db	99	;'c'
  2848  00FDBF  74                 	db	116	;'t'
  2849  00FDC0  69                 	db	105	;'i'
  2850  00FDC1  6F                 	db	111	;'o'
  2851  00FDC2  6E                 	db	110	;'n'
  2852  00FDC3  20                 	db	32
  2853  00FDC4  43                 	db	67	;'C'
  2854  00FDC5  6F                 	db	111	;'o'
  2855  00FDC6  64                 	db	100	;'d'
  2856  00FDC7  65                 	db	101	;'e'
  2857  00FDC8  0D                 	db	13
  2858  00FDC9  0A                 	db	10
  2859  00FDCA  00                 	db	0
  2860  00FDCB                     STR_7:
  2861                           
  2862                           ; BSR set to: 0
  2863  00FDCB  20                 	db	32
  2864  00FDCC  20                 	db	32
  2865  00FDCD  20                 	db	32
  2866  00FDCE  52                 	db	82	;'R'
  2867  00FDCF  65                 	db	101	;'e'
  2868  00FDD0  67                 	db	103	;'g'
  2869  00FDD1  3A                 	db	58	;':'
  2870  00FDD2  20                 	db	32
  2871  00FDD3  25                 	db	37
  2872  00FDD4  69                 	db	105	;'i'
  2873  00FDD5  20                 	db	32
  2874  00FDD6  44                 	db	68	;'D'
  2875  00FDD7  61                 	db	97	;'a'
  2876  00FDD8  74                 	db	116	;'t'
  2877  00FDD9  61                 	db	97	;'a'
  2878  00FDDA  3A                 	db	58	;':'
  2879  00FDDB  20                 	db	32
  2880  00FDDC  30                 	db	48	;'0'
  2881  00FDDD  78                 	db	120	;'x'
  2882  00FDDE  25                 	db	37
  2883  00FDDF  30                 	db	48	;'0'
  2884  00FDE0  34                 	db	52	;'4'
  2885  00FDE1  78                 	db	120	;'x'
  2886  00FDE2  20                 	db	32
  2887  00FDE3  0D                 	db	13
  2888  00FDE4  0A                 	db	10
  2889  00FDE5  00                 	db	0
  2890  00FDE6                     STR_33:
  2891                           
  2892                           ; BSR set to: 0
  2893  00FDE6  52                 	db	82	;'R'
  2894  00FDE7  65                 	db	101	;'e'
  2895  00FDE8  71                 	db	113	;'q'
  2896  00FDE9  75                 	db	117	;'u'
  2897  00FDEA  65                 	db	101	;'e'
  2898  00FDEB  73                 	db	115	;'s'
  2899  00FDEC  74                 	db	116	;'t'
  2900  00FDED  65                 	db	101	;'e'
  2901  00FDEE  64                 	db	100	;'d'
  2902  00FDEF  20                 	db	32
  2903  00FDF0  43                 	db	67	;'C'
  2904  00FDF1  69                 	db	105	;'i'
  2905  00FDF2  72                 	db	114	;'r'
  2906  00FDF3  63                 	db	99	;'c'
  2907  00FDF4  75                 	db	117	;'u'
  2908  00FDF5  69                 	db	105	;'i'
  2909  00FDF6  74                 	db	116	;'t'
  2910  00FDF7  20                 	db	32
  2911  00FDF8  44                 	db	68	;'D'
  2912  00FDF9  61                 	db	97	;'a'
  2913  00FDFA  74                 	db	116	;'t'
  2914  00FDFB  61                 	db	97	;'a'
  2915  00FDFC  0D                 	db	13
  2916  00FDFD  0A                 	db	10
  2917  00FDFE  0A                 	db	10
  2918  00FDFF  00                 	db	0
  2919  00FE00                     STR_43:
  2920                           
  2921                           ; BSR set to: 0
  2922  00FE00  52                 	db	82	;'R'
  2923  00FE01  65                 	db	101	;'e'
  2924  00FE02  71                 	db	113	;'q'
  2925  00FE03  75                 	db	117	;'u'
  2926  00FE04  65                 	db	101	;'e'
  2927  00FE05  73                 	db	115	;'s'
  2928  00FE06  74                 	db	116	;'t'
  2929  00FE07  65                 	db	101	;'e'
  2930  00FE08  64                 	db	100	;'d'
  2931  00FE09  20                 	db	32
  2932  00FE0A  43                 	db	67	;'C'
  2933  00FE0B  6F                 	db	111	;'o'
  2934  00FE0C  6D                 	db	109	;'m'
  2935  00FE0D  70                 	db	112	;'p'
  2936  00FE0E  69                 	db	105	;'i'
  2937  00FE0F  6C                 	db	108	;'l'
  2938  00FE10  65                 	db	101	;'e'
  2939  00FE11  20                 	db	32
  2940  00FE12  54                 	db	84	;'T'
  2941  00FE13  69                 	db	105	;'i'
  2942  00FE14  6D                 	db	109	;'m'
  2943  00FE15  65                 	db	101	;'e'
  2944  00FE16  0D                 	db	13
  2945  00FE17  0A                 	db	10
  2946  00FE18  0A                 	db	10
  2947  00FE19  00                 	db	0
  2948  00FE1A                     STR_41:
  2949                           
  2950                           ; BSR set to: 0
  2951  00FE1A  52                 	db	82	;'R'
  2952  00FE1B  65                 	db	101	;'e'
  2953  00FE1C  71                 	db	113	;'q'
  2954  00FE1D  75                 	db	117	;'u'
  2955  00FE1E  65                 	db	101	;'e'
  2956  00FE1F  73                 	db	115	;'s'
  2957  00FE20  74                 	db	116	;'t'
  2958  00FE21  65                 	db	101	;'e'
  2959  00FE22  64                 	db	100	;'d'
  2960  00FE23  20                 	db	32
  2961  00FE24  43                 	db	67	;'C'
  2962  00FE25  6F                 	db	111	;'o'
  2963  00FE26  6D                 	db	109	;'m'
  2964  00FE27  70                 	db	112	;'p'
  2965  00FE28  69                 	db	105	;'i'
  2966  00FE29  6C                 	db	108	;'l'
  2967  00FE2A  65                 	db	101	;'e'
  2968  00FE2B  20                 	db	32
  2969  00FE2C  44                 	db	68	;'D'
  2970  00FE2D  61                 	db	97	;'a'
  2971  00FE2E  74                 	db	116	;'t'
  2972  00FE2F  65                 	db	101	;'e'
  2973  00FE30  0D                 	db	13
  2974  00FE31  0A                 	db	10
  2975  00FE32  0A                 	db	10
  2976  00FE33  00                 	db	0
  2977  00FE34                     STR_49:
  2978                           
  2979                           ; BSR set to: 0
  2980  00FE34  20                 	db	32
  2981  00FE35  20                 	db	32
  2982  00FE36  20                 	db	32
  2983  00FE37  42                 	db	66	;'B'
  2984  00FE38  79                 	db	121	;'y'
  2985  00FE39  74                 	db	116	;'t'
  2986  00FE3A  65                 	db	101	;'e'
  2987  00FE3B  20                 	db	32
  2988  00FE3C  25                 	db	37
  2989  00FE3D  30                 	db	48	;'0'
  2990  00FE3E  32                 	db	50	;'2'
  2991  00FE3F  69                 	db	105	;'i'
  2992  00FE40  20                 	db	32
  2993  00FE41  3A                 	db	58	;':'
  2994  00FE42  20                 	db	32
  2995  00FE43  30                 	db	48	;'0'
  2996  00FE44  78                 	db	120	;'x'
  2997  00FE45  25                 	db	37
  2998  00FE46  30                 	db	48	;'0'
  2999  00FE47  32                 	db	50	;'2'
  3000  00FE48  78                 	db	120	;'x'
  3001  00FE49  20                 	db	32
  3002  00FE4A  0D                 	db	13
  3003  00FE4B  0A                 	db	10
  3004  00FE4C  00                 	db	0
  3005  00FE4D                     STR_39:
  3006                           
  3007                           ; BSR set to: 0
  3008  00FE4D  52                 	db	82	;'R'
  3009  00FE4E  65                 	db	101	;'e'
  3010  00FE4F  71                 	db	113	;'q'
  3011  00FE50  75                 	db	117	;'u'
  3012  00FE51  65                 	db	101	;'e'
  3013  00FE52  73                 	db	115	;'s'
  3014  00FE53  74                 	db	116	;'t'
  3015  00FE54  65                 	db	101	;'e'
  3016  00FE55  64                 	db	100	;'d'
  3017  00FE56  20                 	db	32
  3018  00FE57  53                 	db	83	;'S'
  3019  00FE58  65                 	db	101	;'e'
  3020  00FE59  72                 	db	114	;'r'
  3021  00FE5A  69                 	db	105	;'i'
  3022  00FE5B  61                 	db	97	;'a'
  3023  00FE5C  6C                 	db	108	;'l'
  3024  00FE5D  20                 	db	32
  3025  00FE5E  4E                 	db	78	;'N'
  3026  00FE5F  6F                 	db	111	;'o'
  3027  00FE60  2E                 	db	46
  3028  00FE61  0D                 	db	13
  3029  00FE62  0A                 	db	10
  3030  00FE63  0A                 	db	10
  3031  00FE64  00                 	db	0
  3032  00FE65                     STR_51:
  3033                           
  3034                           ; BSR set to: 0
  3035  00FE65  53                 	db	83	;'S'
  3036  00FE66  6F                 	db	111	;'o'
  3037  00FE67  6D                 	db	109	;'m'
  3038  00FE68  65                 	db	101	;'e'
  3039  00FE69  74                 	db	116	;'t'
  3040  00FE6A  68                 	db	104	;'h'
  3041  00FE6B  69                 	db	105	;'i'
  3042  00FE6C  6E                 	db	110	;'n'
  3043  00FE6D  67                 	db	103	;'g'
  3044  00FE6E  20                 	db	32
  3045  00FE6F  69                 	db	105	;'i'
  3046  00FE70  6E                 	db	110	;'n'
  3047  00FE71  20                 	db	32
  3048  00FE72  45                 	db	69	;'E'
  3049  00FE73  53                 	db	83	;'S'
  3050  00FE74  55                 	db	85	;'U'
  3051  00FE75  41                 	db	65	;'A'
  3052  00FE76  52                 	db	82	;'R'
  3053  00FE77  54                 	db	84	;'T'
  3054  00FE78  31                 	db	49	;'1'
  3055  00FE79  20                 	db	32
  3056  00FE7A  0D                 	db	13
  3057  00FE7B  0A                 	db	10
  3058  00FE7C  00                 	db	0
  3059  00FE7D                     STR_68:
  3060                           
  3061                           ; BSR set to: 0
  3062  00FE7D  43                 	db	67	;'C'
  3063  00FE7E  61                 	db	97	;'a'
  3064  00FE7F  72                 	db	114	;'r'
  3065  00FE80  64                 	db	100	;'d'
  3066  00FE81  20                 	db	32
  3067  00FE82  41                 	db	65	;'A'
  3068  00FE83  64                 	db	100	;'d'
  3069  00FE84  64                 	db	100	;'d'
  3070  00FE85  72                 	db	114	;'r'
  3071  00FE86  65                 	db	101	;'e'
  3072  00FE87  73                 	db	115	;'s'
  3073  00FE88  73                 	db	115	;'s'
  3074  00FE89  2E                 	db	46
  3075  00FE8A  20                 	db	32
  3076  00FE8B  30                 	db	48	;'0'
  3077  00FE8C  78                 	db	120	;'x'
  3078  00FE8D  30                 	db	48	;'0'
  3079  00FE8E  35                 	db	53	;'5'
  3080  00FE8F  20                 	db	32
  3081  00FE90  0D                 	db	13
  3082  00FE91  0A                 	db	10
  3083  00FE92  00                 	db	0
  3084  00FE93                     STR_84:
  3085                           
  3086                           ; BSR set to: 0
  3087  00FE93  43                 	db	67	;'C'
  3088  00FE94  6F                 	db	111	;'o'
  3089  00FE95  6D                 	db	109	;'m'
  3090  00FE96  6D                 	db	109	;'m'
  3091  00FE97  61                 	db	97	;'a'
  3092  00FE98  6E                 	db	110	;'n'
  3093  00FE99  64                 	db	100	;'d'
  3094  00FE9A  73                 	db	115	;'s'
  3095  00FE9B  20                 	db	32
  3096  00FE9C  53                 	db	83	;'S'
  3097  00FE9D  75                 	db	117	;'u'
  3098  00FE9E  70                 	db	112	;'p'
  3099  00FE9F  70                 	db	112	;'p'
  3100  00FEA0  6F                 	db	111	;'o'
  3101  00FEA1  72                 	db	114	;'r'
  3102  00FEA2  74                 	db	116	;'t'
  3103  00FEA3  65                 	db	101	;'e'
  3104  00FEA4  64                 	db	100	;'d'
  3105  00FEA5  3A                 	db	58	;':'
  3106  00FEA6  0D                 	db	13
  3107  00FEA7  0A                 	db	10
  3108  00FEA8  00                 	db	0
  3109  00FEA9                     STR_35:
  3110                           
  3111                           ; BSR set to: 0
  3112  00FEA9  52                 	db	82	;'R'
  3113  00FEAA  65                 	db	101	;'e'
  3114  00FEAB  71                 	db	113	;'q'
  3115  00FEAC  75                 	db	117	;'u'
  3116  00FEAD  65                 	db	101	;'e'
  3117  00FEAE  73                 	db	115	;'s'
  3118  00FEAF  74                 	db	116	;'t'
  3119  00FEB0  65                 	db	101	;'e'
  3120  00FEB1  64                 	db	100	;'d'
  3121  00FEB2  20                 	db	32
  3122  00FEB3  50                 	db	80	;'P'
  3123  00FEB4  61                 	db	97	;'a'
  3124  00FEB5  72                 	db	114	;'r'
  3125  00FEB6  74                 	db	116	;'t'
  3126  00FEB7  20                 	db	32
  3127  00FEB8  4E                 	db	78	;'N'
  3128  00FEB9  6F                 	db	111	;'o'
  3129  00FEBA  2E                 	db	46
  3130  00FEBB  0D                 	db	13
  3131  00FEBC  0A                 	db	10
  3132  00FEBD  0A                 	db	10
  3133  00FEBE  00                 	db	0
  3134  00FEBF                     STR_37:
  3135                           
  3136                           ; BSR set to: 0
  3137  00FEBF  52                 	db	82	;'R'
  3138  00FEC0  65                 	db	101	;'e'
  3139  00FEC1  71                 	db	113	;'q'
  3140  00FEC2  75                 	db	117	;'u'
  3141  00FEC3  65                 	db	101	;'e'
  3142  00FEC4  73                 	db	115	;'s'
  3143  00FEC5  74                 	db	116	;'t'
  3144  00FEC6  65                 	db	101	;'e'
  3145  00FEC7  64                 	db	100	;'d'
  3146  00FEC8  20                 	db	32
  3147  00FEC9  52                 	db	82	;'R'
  3148  00FECA  65                 	db	101	;'e'
  3149  00FECB  76                 	db	118	;'v'
  3150  00FECC  69                 	db	105	;'i'
  3151  00FECD  73                 	db	115	;'s'
  3152  00FECE  69                 	db	105	;'i'
  3153  00FECF  6F                 	db	111	;'o'
  3154  00FED0  6E                 	db	110	;'n'
  3155  00FED1  0D                 	db	13
  3156  00FED2  0A                 	db	10
  3157  00FED3  0A                 	db	10
  3158  00FED4  00                 	db	0
  3159  00FED5                     STR_67:
  3160                           
  3161                           ; BSR set to: 0
  3162  00FED5  43                 	db	67	;'C'
  3163  00FED6  61                 	db	97	;'a'
  3164  00FED7  72                 	db	114	;'r'
  3165  00FED8  64                 	db	100	;'d'
  3166  00FED9  20                 	db	32
  3167  00FEDA  52                 	db	82	;'R'
  3168  00FEDB  65                 	db	101	;'e'
  3169  00FEDC  76                 	db	118	;'v'
  3170  00FEDD  69                 	db	105	;'i'
  3171  00FEDE  73                 	db	115	;'s'
  3172  00FEDF  69                 	db	105	;'i'
  3173  00FEE0  6F                 	db	111	;'o'
  3174  00FEE1  6E                 	db	110	;'n'
  3175  00FEE2  2E                 	db	46
  3176  00FEE3  20                 	db	32
  3177  00FEE4  25                 	db	37
  3178  00FEE5  73                 	db	115	;'s'
  3179  00FEE6  20                 	db	32
  3180  00FEE7  0D                 	db	13
  3181  00FEE8  0A                 	db	10
  3182  00FEE9  00                 	db	0
  3183  00FEEA                     STR_1:
  3184                           
  3185                           ; BSR set to: 0
  3186  00FEEA  46                 	db	70	;'F'
  3187  00FEEB  75                 	db	117	;'u'
  3188  00FEEC  6E                 	db	110	;'n'
  3189  00FEED  63                 	db	99	;'c'
  3190  00FEEE  74                 	db	116	;'t'
  3191  00FEEF  69                 	db	105	;'i'
  3192  00FEF0  6F                 	db	111	;'o'
  3193  00FEF1  6E                 	db	110	;'n'
  3194  00FEF2  20                 	db	32
  3195  00FEF3  43                 	db	67	;'C'
  3196  00FEF4  6F                 	db	111	;'o'
  3197  00FEF5  64                 	db	100	;'d'
  3198  00FEF6  65                 	db	101	;'e'
  3199  00FEF7  20                 	db	32
  3200  00FEF8  30                 	db	48	;'0'
  3201  00FEF9  78                 	db	120	;'x'
  3202  00FEFA  31                 	db	49	;'1'
  3203  00FEFB  30                 	db	48	;'0'
  3204  00FEFC  0D                 	db	13
  3205  00FEFD  0A                 	db	10
  3206  00FEFE  00                 	db	0
  3207  00FEFF                     STR_66:
  3208                           
  3209                           ; BSR set to: 0
  3210  00FEFF  43                 	db	67	;'C'
  3211  00FF00  61                 	db	97	;'a'
  3212  00FF01  72                 	db	114	;'r'
  3213  00FF02  64                 	db	100	;'d'
  3214  00FF03  20                 	db	32
  3215  00FF04  50                 	db	80	;'P'
  3216  00FF05  61                 	db	97	;'a'
  3217  00FF06  72                 	db	114	;'r'
  3218  00FF07  74                 	db	116	;'t'
  3219  00FF08  20                 	db	32
  3220  00FF09  4E                 	db	78	;'N'
  3221  00FF0A  6F                 	db	111	;'o'
  3222  00FF0B  2E                 	db	46
  3223  00FF0C  20                 	db	32
  3224  00FF0D  25                 	db	37
  3225  00FF0E  73                 	db	115	;'s'
  3226  00FF0F  20                 	db	32
  3227  00FF10  0D                 	db	13
  3228  00FF11  0A                 	db	10
  3229  00FF12  00                 	db	0
  3230  00FF13                     STR_65:
  3231                           
  3232                           ; BSR set to: 0
  3233  00FF13  43                 	db	67	;'C'
  3234  00FF14  61                 	db	97	;'a'
  3235  00FF15  72                 	db	114	;'r'
  3236  00FF16  64                 	db	100	;'d'
  3237  00FF17  20                 	db	32
  3238  00FF18  53                 	db	83	;'S'
  3239  00FF19  65                 	db	101	;'e'
  3240  00FF1A  72                 	db	114	;'r'
  3241  00FF1B  20                 	db	32
  3242  00FF1C  4E                 	db	78	;'N'
  3243  00FF1D  6F                 	db	111	;'o'
  3244  00FF1E  2E                 	db	46
  3245  00FF1F  20                 	db	32
  3246  00FF20  25                 	db	37
  3247  00FF21  73                 	db	115	;'s'
  3248  00FF22  20                 	db	32
  3249  00FF23  0D                 	db	13
  3250  00FF24  0A                 	db	10
  3251  00FF25  00                 	db	0
  3252  00FF26                     STR_4:
  3253                           
  3254                           ; BSR set to: 0
  3255  00FF26  0D                 	db	13
  3256  00FF27  0A                 	db	10
  3257  00FF28  45                 	db	69	;'E'
  3258  00FF29  6E                 	db	110	;'n'
  3259  00FF2A  74                 	db	116	;'t'
  3260  00FF2B  65                 	db	101	;'e'
  3261  00FF2C  72                 	db	114	;'r'
  3262  00FF2D  20                 	db	32
  3263  00FF2E  43                 	db	67	;'C'
  3264  00FF2F  6F                 	db	111	;'o'
  3265  00FF30  6D                 	db	109	;'m'
  3266  00FF31  6D                 	db	109	;'m'
  3267  00FF32  61                 	db	97	;'a'
  3268  00FF33  6E                 	db	110	;'n'
  3269  00FF34  64                 	db	100	;'d'
  3270  00FF35  20                 	db	32
  3271  00FF36  3A                 	db	58	;':'
  3272  00FF37  20                 	db	32
  3273  00FF38  00                 	db	0
  3274  00FF39                     STR_99:
  3275                           
  3276                           ; BSR set to: 0
  3277  00FF39  4E                 	db	78	;'N'
  3278  00FF3A  75                 	db	117	;'u'
  3279  00FF3B  6D                 	db	109	;'m'
  3280  00FF3C  20                 	db	32
  3281  00FF3D  43                 	db	67	;'C'
  3282  00FF3E  68                 	db	104	;'h'
  3283  00FF3F  61                 	db	97	;'a'
  3284  00FF40  72                 	db	114	;'r'
  3285  00FF41  73                 	db	115	;'s'
  3286  00FF42  3A                 	db	58	;':'
  3287  00FF43  20                 	db	32
  3288  00FF44  25                 	db	37
  3289  00FF45  69                 	db	105	;'i'
  3290  00FF46  20                 	db	32
  3291  00FF47  0D                 	db	13
  3292  00FF48  0A                 	db	10
  3293  00FF49  00                 	db	0
  3294  00FF4A                     STR_93:
  3295                           
  3296                           ; BSR set to: 0
  3297  00FF4A  44                 	db	68	;'D'
  3298  00FF4B  65                 	db	101	;'e'
  3299  00FF4C  62                 	db	98	;'b'
  3300  00FF4D  75                 	db	117	;'u'
  3301  00FF4E  67                 	db	103	;'g'
  3302  00FF4F  20                 	db	32
  3303  00FF50  44                 	db	68	;'D'
  3304  00FF51  69                 	db	105	;'i'
  3305  00FF52  73                 	db	115	;'s'
  3306  00FF53  61                 	db	97	;'a'
  3307  00FF54  62                 	db	98	;'b'
  3308  00FF55  6C                 	db	108	;'l'
  3309  00FF56  65                 	db	101	;'e'
  3310  00FF57  64                 	db	100	;'d'
  3311  00FF58  0D                 	db	13
  3312  00FF59  0A                 	db	10
  3313  00FF5A  00                 	db	0
  3314  00FF5B                     STR_92:
  3315                           
  3316                           ; BSR set to: 0
  3317  00FF5B  44                 	db	68	;'D'
  3318  00FF5C  65                 	db	101	;'e'
  3319  00FF5D  62                 	db	98	;'b'
  3320  00FF5E  75                 	db	117	;'u'
  3321  00FF5F  67                 	db	103	;'g'
  3322  00FF60  20                 	db	32
  3323  00FF61  45                 	db	69	;'E'
  3324  00FF62  6E                 	db	110	;'n'
  3325  00FF63  61                 	db	97	;'a'
  3326  00FF64  62                 	db	98	;'b'
  3327  00FF65  6C                 	db	108	;'l'
  3328  00FF66  65                 	db	101	;'e'
  3329  00FF67  64                 	db	100	;'d'
  3330  00FF68  0D                 	db	13
  3331  00FF69  0A                 	db	10
  3332  00FF6A  00                 	db	0
  3333  00FF6B                     STR_6:
  3334                           
  3335                           ; BSR set to: 0
  3336  00FF6B  55                 	db	85	;'U'
  3337  00FF6C  70                 	db	112	;'p'
  3338  00FF6D  64                 	db	100	;'d'
  3339  00FF6E  61                 	db	97	;'a'
  3340  00FF6F  74                 	db	116	;'t'
  3341  00FF70  65                 	db	101	;'e'
  3342  00FF71  64                 	db	100	;'d'
  3343  00FF72  4D                 	db	77	;'M'
  3344  00FF73  42                 	db	66	;'B'
  3345  00FF74  34                 	db	52	;'4'
  3346  00FF75  30                 	db	48	;'0'
  3347  00FF76  30                 	db	48	;'0'
  3348  00FF77  20                 	db	32
  3349  00FF78  0D                 	db	13
  3350  00FF79  0A                 	db	10
  3351  00FF7A  00                 	db	0
  3352  00FF7B                     STR_52:
  3353                           
  3354                           ; BSR set to: 0
  3355  00FF7B  52                 	db	82	;'R'
  3356  00FF7C  65                 	db	101	;'e'
  3357  00FF7D  61                 	db	97	;'a'
  3358  00FF7E  64                 	db	100	;'d'
  3359  00FF7F  3A                 	db	58	;':'
  3360  00FF80  20                 	db	32
  3361  00FF81  30                 	db	48	;'0'
  3362  00FF82  78                 	db	120	;'x'
  3363  00FF83  25                 	db	37
  3364  00FF84  30                 	db	48	;'0'
  3365  00FF85  32                 	db	50	;'2'
  3366  00FF86  78                 	db	120	;'x'
  3367  00FF87  20                 	db	32
  3368  00FF88  0D                 	db	13
  3369  00FF89  0A                 	db	10
  3370  00FF8A  00                 	db	0
  3371  00FF8B                     STR_98:
  3372                           
  3373                           ; BSR set to: 0
  3374  00FF8B  59                 	db	89	;'Y'
  3375  00FF8C  0D                 	db	13
  3376  00FF8D  0A                 	db	10
  3377  00FF8E  53                 	db	83	;'S'
  3378  00FF8F  61                 	db	97	;'a'
  3379  00FF90  76                 	db	118	;'v'
  3380  00FF91  69                 	db	105	;'i'
  3381  00FF92  6E                 	db	110	;'n'
  3382  00FF93  67                 	db	103	;'g'
  3383  00FF94  20                 	db	32
  3384  00FF95  25                 	db	37
  3385  00FF96  73                 	db	115	;'s'
  3386  00FF97  0D                 	db	13
  3387  00FF98  0A                 	db	10
  3388  00FF99  00                 	db	0
  3389  00FF9A                     STR_46:
  3390                           
  3391                           ; BSR set to: 0
  3392  00FF9A  41                 	db	65	;'A'
  3393  00FF9B  44                 	db	68	;'D'
  3394  00FF9C  43                 	db	67	;'C'
  3395  00FF9D  3A                 	db	58	;':'
  3396  00FF9E  20                 	db	32
  3397  00FF9F  30                 	db	48	;'0'
  3398  00FFA0  78                 	db	120	;'x'
  3399  00FFA1  25                 	db	37
  3400  00FFA2  30                 	db	48	;'0'
  3401  00FFA3  34                 	db	52	;'4'
  3402  00FFA4  78                 	db	120	;'x'
  3403  00FFA5  20                 	db	32
  3404  00FFA6  0D                 	db	13
  3405  00FFA7  0A                 	db	10
  3406  00FFA8  00                 	db	0
  3407  00FFA9                     STR_100:
  3408                           
  3409                           ; BSR set to: 0
  3410  00FFA9  25                 	db	37
  3411  00FFAA  73                 	db	115	;'s'
  3412  00FFAB  20                 	db	32
  3413  00FFAC  53                 	db	83	;'S'
  3414  00FFAD  61                 	db	97	;'a'
  3415  00FFAE  76                 	db	118	;'v'
  3416  00FFAF  65                 	db	101	;'e'
  3417  00FFB0  64                 	db	100	;'d'
  3418  00FFB1  2E                 	db	46
  3419  00FFB2  20                 	db	32
  3420  00FFB3  0D                 	db	13
  3421  00FFB4  0A                 	db	10
  3422  00FFB5  00                 	db	0
  3423  00FFB6                     STR_102:
  3424                           
  3425                           ; BSR set to: 0
  3426  00FFB6  4E                 	db	78	;'N'
  3427  00FFB7  6F                 	db	111	;'o'
  3428  00FFB8  74                 	db	116	;'t'
  3429  00FFB9  20                 	db	32
  3430  00FFBA  73                 	db	115	;'s'
  3431  00FFBB  61                 	db	97	;'a'
  3432  00FFBC  76                 	db	118	;'v'
  3433  00FFBD  65                 	db	101	;'e'
  3434  00FFBE  64                 	db	100	;'d'
  3435  00FFBF  0D                 	db	13
  3436  00FFC0  0A                 	db	10
  3437  00FFC1  00                 	db	0
  3438  00FFC2                     STR_70:
  3439                           
  3440                           ; BSR set to: 0
  3441  00FFC2  4D                 	db	77	;'M'
  3442  00FFC3  61                 	db	97	;'a'
  3443  00FFC4  72                 	db	114	;'r'
  3444  00FFC5  20                 	db	32
  3445  00FFC6  32                 	db	50	;'2'
  3446  00FFC7  35                 	db	53	;'5'
  3447  00FFC8  20                 	db	32
  3448  00FFC9  32                 	db	50	;'2'
  3449  00FFCA  30                 	db	48	;'0'
  3450  00FFCB  32                 	db	50	;'2'
  3451  00FFCC  31                 	db	49	;'1'
  3452  00FFCD  00                 	db	0
  3453  00FFCE                     STR_71:
  3454                           
  3455                           ; BSR set to: 0
  3456  00FFCE  30                 	db	48	;'0'
  3457  00FFCF  30                 	db	48	;'0'
  3458  00FFD0  3A                 	db	58	;':'
  3459  00FFD1  32                 	db	50	;'2'
  3460  00FFD2  34                 	db	52	;'4'
  3461  00FFD3  3A                 	db	58	;':'
  3462  00FFD4  30                 	db	48	;'0'
  3463  00FFD5  30                 	db	48	;'0'
  3464  00FFD6  00                 	db	0
  3465  00FFD7                     STR_55:
  3466                           
  3467                           ; BSR set to: 0
  3468  00FFD7  53                 	db	83	;'S'
  3469  00FFD8  65                 	db	101	;'e'
  3470  00FFD9  72                 	db	114	;'r'
  3471  00FFDA  69                 	db	105	;'i'
  3472  00FFDB  61                 	db	97	;'a'
  3473  00FFDC  6C                 	db	108	;'l'
  3474  00FFDD  00                 	db	0
  3475  00FFDE                     STR_107:
  3476                           
  3477                           ; BSR set to: 0
  3478  00FFDE  73                 	db	115	;'s'
  3479  00FFDF  65                 	db	101	;'e'
  3480  00FFE0  72                 	db	114	;'r'
  3481  00FFE1  69                 	db	105	;'i'
  3482  00FFE2  61                 	db	97	;'a'
  3483  00FFE3  6C                 	db	108	;'l'
  3484  00FFE4  00                 	db	0
  3485  00FFE5                     STR_103:
  3486                           
  3487                           ; BSR set to: 0
  3488  00FFE5  64                 	db	100	;'d'
  3489  00FFE6  65                 	db	101	;'e'
  3490  00FFE7  62                 	db	98	;'b'
  3491  00FFE8  75                 	db	117	;'u'
  3492  00FFE9  67                 	db	103	;'g'
  3493  00FFEA  00                 	db	0
  3494  00FFEB                     STR_57:
  3495                           
  3496                           ; BSR set to: 0
  3497  00FFEB  50                 	db	80	;'P'
  3498  00FFEC  61                 	db	97	;'a'
  3499  00FFED  72                 	db	114	;'r'
  3500  00FFEE  74                 	db	116	;'t'
  3501  00FFEF  00                 	db	0
  3502  00FFF0                     STR_109:
  3503                           
  3504                           ; BSR set to: 0
  3505  00FFF0  70                 	db	112	;'p'
  3506  00FFF1  61                 	db	97	;'a'
  3507  00FFF2  72                 	db	114	;'r'
  3508  00FFF3  74                 	db	116	;'t'
  3509  00FFF4  00                 	db	0
  3510  00FFF5                     STR_59:
  3511                           
  3512                           ; BSR set to: 0
  3513  00FFF5  52                 	db	82	;'R'
  3514  00FFF6  65                 	db	101	;'e'
  3515  00FFF7  76                 	db	118	;'v'
  3516  00FFF8  00                 	db	0
  3517  00FFF9                     STR_111:
  3518                           
  3519                           ; BSR set to: 0
  3520  00FFF9  72                 	db	114	;'r'
  3521  00FFFA  65                 	db	101	;'e'
  3522  00FFFB  76                 	db	118	;'v'
  3523  00FFFC  00                 	db	0
  3524  00FFFD                     STR_105:
  3525                           
  3526                           ; BSR set to: 0
  3527  00FFFD  3F                 	db	63	;'?'
  3528  00FFFE  00                 	db	0
  3529  0000                     
  3530                           ; #config settings
  3531  00FFFF  00                 	db	0	; dummy byte at the end
  3532  0000                     
  3533                           	psect	cinit
  3534  002F50                     __pcinit:
  3535                           	opt callstack 0
  3536  002F50                     start_initialization:
  3537                           	opt callstack 0
  3538  002F50                     __initialization:
  3539                           	opt callstack 0
  3540                           
  3541                           ; Initialize objects allocated to BANK4 (64 bytes)
  3542                           ; load TBLPTR registers with __pidataBANK4
  3543  002F50  0E36               	movlw	low __pidataBANK4
  3544  002F52  6EF6               	movwf	tblptrl,c
  3545  002F54  0E43               	movlw	high __pidataBANK4
  3546  002F56  6EF7               	movwf	tblptrh,c
  3547  002F58  0E00               	movlw	low (__pidataBANK4 shr (0+16))
  3548  002F5A  6EF8               	movwf	tblptru,c
  3549  002F5C  EE04  F064         	lfsr	0,__pdataBANK4
  3550  002F60  EE10 F040          	lfsr	1,64
  3551  002F64                     copy_data0:
  3552  002F64  0009               	tblrd		*+
  3553  002F66  CFF5 FFEE          	movff	tablat,postinc0
  3554  002F6A  50E5               	movf	postdec1,w,c
  3555  002F6C  50E1               	movf	fsr1l,w,c
  3556  002F6E  E1FA               	bnz	copy_data0
  3557                           
  3558                           ; Initialize objects allocated to BANK3 (64 bytes)
  3559                           ; load TBLPTR registers with __pidataBANK3
  3560  002F70  0EF6               	movlw	low __pidataBANK3
  3561  002F72  6EF6               	movwf	tblptrl,c
  3562  002F74  0E42               	movlw	high __pidataBANK3
  3563  002F76  6EF7               	movwf	tblptrh,c
  3564  002F78  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  3565  002F7A  6EF8               	movwf	tblptru,c
  3566  002F7C  EE03  F0B7         	lfsr	0,__pdataBANK3
  3567  002F80  EE10 F040          	lfsr	1,64
  3568  002F84                     copy_data1:
  3569  002F84  0009               	tblrd		*+
  3570  002F86  CFF5 FFEE          	movff	tablat,postinc0
  3571  002F8A  50E5               	movf	postdec1,w,c
  3572  002F8C  50E1               	movf	fsr1l,w,c
  3573  002F8E  E1FA               	bnz	copy_data1
  3574                           
  3575                           ; Initialize objects allocated to BANK2 (162 bytes)
  3576                           ; load TBLPTR registers with __pidataBANK2
  3577  002F90  0E02               	movlw	low __pidataBANK2
  3578  002F92  6EF6               	movwf	tblptrl,c
  3579  002F94  0E39               	movlw	high __pidataBANK2
  3580  002F96  6EF7               	movwf	tblptrh,c
  3581  002F98  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  3582  002F9A  6EF8               	movwf	tblptru,c
  3583  002F9C  EE02  F000         	lfsr	0,__pdataBANK2
  3584  002FA0  EE10 F0A2          	lfsr	1,162
  3585  002FA4                     copy_data2:
  3586  002FA4  0009               	tblrd		*+
  3587  002FA6  CFF5 FFEE          	movff	tablat,postinc0
  3588  002FAA  50E5               	movf	postdec1,w,c
  3589  002FAC  50E1               	movf	fsr1l,w,c
  3590  002FAE  E1FA               	bnz	copy_data2
  3591                           
  3592                           ; Initialize objects allocated to BANK1 (147 bytes)
  3593                           ; load TBLPTR registers with __pidataBANK1
  3594  002FB0  0E3A               	movlw	low __pidataBANK1
  3595  002FB2  6EF6               	movwf	tblptrl,c
  3596  002FB4  0E3A               	movlw	high __pidataBANK1
  3597  002FB6  6EF7               	movwf	tblptrh,c
  3598  002FB8  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  3599  002FBA  6EF8               	movwf	tblptru,c
  3600  002FBC  EE01  F000         	lfsr	0,__pdataBANK1
  3601  002FC0  EE10 F093          	lfsr	1,147
  3602  002FC4                     copy_data3:
  3603  002FC4  0009               	tblrd		*+
  3604  002FC6  CFF5 FFEE          	movff	tablat,postinc0
  3605  002FCA  50E5               	movf	postdec1,w,c
  3606  002FCC  50E1               	movf	fsr1l,w,c
  3607  002FCE  E1FA               	bnz	copy_data3
  3608                           
  3609                           ; Initialize objects allocated to BANK0 (20 bytes)
  3610                           ; load TBLPTR registers with __pidataBANK0
  3611  002FD0  0EB0               	movlw	low __pidataBANK0
  3612  002FD2  6EF6               	movwf	tblptrl,c
  3613  002FD4  0E46               	movlw	high __pidataBANK0
  3614  002FD6  6EF7               	movwf	tblptrh,c
  3615  002FD8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  3616  002FDA  6EF8               	movwf	tblptru,c
  3617  002FDC  EE00  F0E8         	lfsr	0,__pdataBANK0
  3618  002FE0  EE10 F014          	lfsr	1,20
  3619  002FE4                     copy_data4:
  3620  002FE4  0009               	tblrd		*+
  3621  002FE6  CFF5 FFEE          	movff	tablat,postinc0
  3622  002FEA  50E5               	movf	postdec1,w,c
  3623  002FEC  50E1               	movf	fsr1l,w,c
  3624  002FEE  E1FA               	bnz	copy_data4
  3625                           
  3626                           ; Clear objects allocated to BANK5 (100 bytes)
  3627  002FF0  EE05  F000         	lfsr	0,__pbssBANK5
  3628  002FF4  0E64               	movlw	100
  3629  002FF6                     clear_0:
  3630  002FF6  6AEE               	clrf	postinc0,c
  3631  002FF8  06E8               	decf	wreg,f,c
  3632  002FFA  E1FD               	bnz	clear_0
  3633                           
  3634                           ; Clear objects allocated to BANK4 (100 bytes)
  3635  002FFC  EE04  F000         	lfsr	0,__pbssBANK4
  3636  003000  0E64               	movlw	100
  3637  003002                     clear_1:
  3638  003002  6AEE               	clrf	postinc0,c
  3639  003004  06E8               	decf	wreg,f,c
  3640  003006  E1FD               	bnz	clear_1
  3641                           
  3642                           ; Clear objects allocated to BANK3 (183 bytes)
  3643  003008  EE03  F000         	lfsr	0,__pbssBANK3
  3644  00300C  0EB7               	movlw	183
  3645  00300E                     clear_2:
  3646  00300E  6AEE               	clrf	postinc0,c
  3647  003010  06E8               	decf	wreg,f,c
  3648  003012  E1FD               	bnz	clear_2
  3649                           
  3650                           ; Clear objects allocated to BANK2 (91 bytes)
  3651  003014  EE02  F0A2         	lfsr	0,__pbssBANK2
  3652  003018  0E5B               	movlw	91
  3653  00301A                     clear_3:
  3654  00301A  6AEE               	clrf	postinc0,c
  3655  00301C  06E8               	decf	wreg,f,c
  3656  00301E  E1FD               	bnz	clear_3
  3657                           
  3658                           ; Clear objects allocated to BANK1 (16 bytes)
  3659  003020  EE01  F0EB         	lfsr	0,__pbssBANK1
  3660  003024  0E10               	movlw	16
  3661  003026                     clear_4:
  3662  003026  6AEE               	clrf	postinc0,c
  3663  003028  06E8               	decf	wreg,f,c
  3664  00302A  E1FD               	bnz	clear_4
  3665                           
  3666                           ; Clear objects allocated to BANK0 (29 bytes)
  3667  00302C  EE00  F0CB         	lfsr	0,__pbssBANK0
  3668  003030  0E1D               	movlw	29
  3669  003032                     clear_5:
  3670  003032  6AEE               	clrf	postinc0,c
  3671  003034  06E8               	decf	wreg,f,c
  3672  003036  E1FD               	bnz	clear_5
  3673                           
  3674                           ; Clear objects allocated to COMRAM (4 bytes)
  3675  003038  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
  3676  00303A  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
  3677  00303C  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
  3678  00303E  6A57               	clrf	__pbssCOMRAM& (0+255),c
  3679  003040                     end_of_initialization:
  3680                           	opt callstack 0
  3681  003040                     __end_of__initialization:
  3682                           	opt callstack 0
  3683  003040  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  3684  003042  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3685  003044  0100               	movlb	0
  3686  003046  EF1A  F017         	goto	_main	;jump to C main() function
  3687                           
  3688                           	psect	bssCOMRAM
  3689  000057                     __pbssCOMRAM:
  3690                           	opt callstack 0
  3691  000057                     _flags:
  3692                           	opt callstack 0
  3693  000057                     	ds	2
  3694  000059                     _eusart1RxHead:
  3695                           	opt callstack 0
  3696  000059                     	ds	1
  3697  00005A                     _eusart2RxHead:
  3698                           	opt callstack 0
  3699  00005A                     	ds	1
  3700                           
  3701                           	psect	bssBANK0
  3702  0000CB                     __pbssBANK0:
  3703                           	opt callstack 0
  3704  0000CB                     _nout:
  3705                           	opt callstack 0
  3706  0000CB                     	ds	2
  3707  0000CD                     _width:
  3708                           	opt callstack 0
  3709  0000CD                     	ds	2
  3710  0000CF                     _prec:
  3711                           	opt callstack 0
  3712  0000CF                     	ds	2
  3713  0000D1                     	ds	2
  3714  0000D3                     _ByteHi:
  3715                           	opt callstack 0
  3716  0000D3                     	ds	2
  3717  0000D5                     _MBResCnt:
  3718                           	opt callstack 0
  3719  0000D5                     	ds	2
  3720  0000D7                     _ByteNum:
  3721                           	opt callstack 0
  3722  0000D7                     	ds	2
  3723  0000D9                     _ModDataCnt:
  3724                           	opt callstack 0
  3725  0000D9                     	ds	2
  3726  0000DB                     _rxStatus:
  3727                           	opt callstack 0
  3728  0000DB                     	ds	1
  3729  0000DC                     _RXStat:
  3730                           	opt callstack 0
  3731  0000DC                     	ds	1
  3732  0000DD                     _Debug:
  3733                           	opt callstack 0
  3734  0000DD                     	ds	1
  3735  0000DE                     _eusart1RxLastError:
  3736                           	opt callstack 0
  3737  0000DE                     	ds	1
  3738  0000DF                     _eusart1RxCount:
  3739                           	opt callstack 0
  3740  0000DF                     	ds	1
  3741  0000E0                     _eusart1RxTail:
  3742                           	opt callstack 0
  3743  0000E0                     	ds	1
  3744  0000E1                     _eusart1TxTail:
  3745                           	opt callstack 0
  3746  0000E1                     	ds	1
  3747  0000E2                     _eusart1TxHead:
  3748                           	opt callstack 0
  3749  0000E2                     	ds	1
  3750  0000E3                     _eusart2RxLastError:
  3751                           	opt callstack 0
  3752  0000E3                     	ds	1
  3753  0000E4                     _eusart2RxCount:
  3754                           	opt callstack 0
  3755  0000E4                     	ds	1
  3756  0000E5                     _eusart2RxTail:
  3757                           	opt callstack 0
  3758  0000E5                     	ds	1
  3759  0000E6                     _eusart2TxTail:
  3760                           	opt callstack 0
  3761  0000E6                     	ds	1
  3762  0000E7                     _eusart2TxHead:
  3763                           	opt callstack 0
  3764  0000E7                     	ds	1
  3765                           
  3766                           	psect	dataBANK0
  3767  0000E8                     __pdataBANK0:
  3768                           	opt callstack 0
  3769  0000E8                     _MB303xx:
  3770                           	opt callstack 0
  3771  0000E8                     	ds	10
  3772  0000F2                     ReadRX232@F10772:
  3773                           	opt callstack 0
  3774  0000F2                     	ds	2
  3775  0000F4                     _ByteLo:
  3776                           	opt callstack 0
  3777  0000F4                     	ds	2
  3778  0000F6                     _MBResCRC:
  3779                           	opt callstack 0
  3780  0000F6                     	ds	2
  3781  0000F8                     _ExpectedBytes:
  3782                           	opt callstack 0
  3783  0000F8                     	ds	2
  3784  0000FA                     _MB302xx:
  3785                           	opt callstack 0
  3786  0000FA                     	ds	2
  3787                           
  3788                           	psect	bssBANK1
  3789  0001EB                     __pbssBANK1:
  3790                           	opt callstack 0
  3791  0001EB                     _Command:
  3792                           	opt callstack 0
  3793  0001EB                     	ds	16
  3794                           
  3795                           	psect	dataBANK1
  3796  000100                     __pdataBANK1:
  3797                           	opt callstack 0
  3798  000100                     _ModbusData:
  3799                           	opt callstack 0
  3800  000100                     	ds	100
  3801  000164                     _MB301xx:
  3802                           	opt callstack 0
  3803  000164                     	ds	14
  3804  000172                     _MB304xx:
  3805                           	opt callstack 0
  3806  000172                     	ds	12
  3807  00017E                     InitialiseString@F10766:
  3808                           	opt callstack 0
  3809  00017E                     	ds	8
  3810  000186                     stoa@F1139:
  3811                           	opt callstack 0
  3812  000186                     	ds	7
  3813  00018D                     _MB306xx:
  3814                           	opt callstack 0
  3815  00018D                     	ds	6
  3816                           
  3817                           	psect	bssBANK2
  3818  0002A2                     __pbssBANK2:
  3819                           	opt callstack 0
  3820  0002A2                     _eusart2RxStatusBuffer:
  3821                           	opt callstack 0
  3822  0002A2                     	ds	32
  3823  0002C2                     _eusart1TxBuffer:
  3824                           	opt callstack 0
  3825  0002C2                     	ds	16
  3826  0002D2                     	ds	11
  3827  0002DD                     _dbuf:
  3828                           	opt callstack 0
  3829  0002DD                     	ds	32
  3830                           
  3831                           	psect	dataBANK2
  3832  000200                     __pdataBANK2:
  3833                           	opt callstack 0
  3834  000200                     ValidateCmd@F10796:
  3835                           	opt callstack 0
  3836  000200                     	ds	20
  3837  000214                     ValidateCmd@F10793:
  3838                           	opt callstack 0
  3839  000214                     	ds	20
  3840  000228                     ValidateCmd@F10790:
  3841                           	opt callstack 0
  3842  000228                     	ds	20
  3843  00023C                     _MB305xx:
  3844                           	opt callstack 0
  3845  00023C                     	ds	16
  3846  00024C                     InitialiseString@F10763:
  3847                           	opt callstack 0
  3848  00024C                     	ds	11
  3849  000257                     _MBRespon:
  3850                           	opt callstack 0
  3851  000257                     	ds	75
  3852                           
  3853                           	psect	bssBANK3
  3854  000300                     __pbssBANK3:
  3855                           	opt callstack 0
  3856  000300                     _eusart1RxStatusBuffer:
  3857                           	opt callstack 0
  3858  000300                     	ds	100
  3859  000364                     _eusart2RxBuffer:
  3860                           	opt callstack 0
  3861  000364                     	ds	32
  3862  000384                     _eusart2TxBuffer:
  3863                           	opt callstack 0
  3864  000384                     	ds	32
  3865  0003A4                     	ds	19
  3866                           
  3867                           	psect	dataBANK3
  3868  0003B7                     __pdataBANK3:
  3869                           	opt callstack 0
  3870  0003B7                     _MB300xx:
  3871                           	opt callstack 0
  3872  0003B7                     	ds	64
  3873                           
  3874                           	psect	bssBANK4
  3875  000400                     __pbssBANK4:
  3876                           	opt callstack 0
  3877  000400                     _eusart1RxBuffer:
  3878                           	opt callstack 0
  3879  000400                     	ds	100
  3880                           
  3881                           	psect	dataBANK4
  3882  000464                     __pdataBANK4:
  3883                           	opt callstack 0
  3884  000464                     _MB400xx:
  3885                           	opt callstack 0
  3886  000464                     	ds	64
  3887                           
  3888                           	psect	bssBANK5
  3889  000500                     __pbssBANK5:
  3890                           	opt callstack 0
  3891  000500                     _rxData:
  3892                           	opt callstack 0
  3893  000500                     	ds	100
  3894                           
  3895                           	psect	cstackBANK1
  3896  000193                     __pcstackBANK1:
  3897                           	opt callstack 0
  3898  000193                     ValidateCmd@ConfName:
  3899                           	opt callstack 0
  3900                           
  3901                           ; 20 bytes @ 0x0
  3902  000193                     	ds	20
  3903  0001A7                     ValidateCmd@ConfName_1538:
  3904                           	opt callstack 0
  3905                           
  3906                           ; 20 bytes @ 0x14
  3907  0001A7                     	ds	20
  3908  0001BB                     ValidateCmd@ConfName_1542:
  3909                           	opt callstack 0
  3910                           
  3911                           ; 20 bytes @ 0x28
  3912  0001BB                     	ds	28
  3913  0001D7                     ??_main:
  3914                           
  3915                           ; 1 bytes @ 0x44
  3916  0001D7                     	ds	2
  3917                           
  3918                           	psect	cstackBANK0
  3919  000060                     __pcstackBANK0:
  3920                           	opt callstack 0
  3921  000060                     vfpfcnvrt@ll:
  3922                           	opt callstack 0
  3923                           
  3924                           ; 8 bytes @ 0x0
  3925  000060                     	ds	8
  3926  000068                     vfpfcnvrt@cp:
  3927                           	opt callstack 0
  3928                           
  3929                           ; 2 bytes @ 0x8
  3930  000068                     	ds	2
  3931  00006A                     vfpfcnvrt@c:
  3932                           	opt callstack 0
  3933                           
  3934                           ; 1 bytes @ 0xA
  3935  00006A                     	ds	1
  3936  00006B                     vfpfcnvrt@done:
  3937                           	opt callstack 0
  3938                           
  3939                           ; 2 bytes @ 0xB
  3940  00006B                     	ds	2
  3941  00006D                     _vfpfcnvrt$1912:
  3942                           	opt callstack 0
  3943                           
  3944                           ; 2 bytes @ 0xD
  3945  00006D                     	ds	2
  3946  00006F                     vfpfcnvrt@llu:
  3947                           	opt callstack 0
  3948                           
  3949                           ; 8 bytes @ 0xF
  3950  00006F                     	ds	8
  3951  000077                     ?_vfprintf:
  3952                           	opt callstack 0
  3953  000077                     vfprintf@fp:
  3954                           	opt callstack 0
  3955                           
  3956                           ; 2 bytes @ 0x17
  3957  000077                     	ds	2
  3958  000079                     vfprintf@fmt:
  3959                           	opt callstack 0
  3960                           
  3961                           ; 2 bytes @ 0x19
  3962  000079                     	ds	2
  3963  00007B                     vfprintf@ap:
  3964                           	opt callstack 0
  3965                           
  3966                           ; 2 bytes @ 0x1B
  3967  00007B                     	ds	2
  3968  00007D                     ?_printf:
  3969                           	opt callstack 0
  3970  00007D                     printf@fmt:
  3971                           	opt callstack 0
  3972                           
  3973                           ; 2 bytes @ 0x1D
  3974  00007D                     	ds	14
  3975  00008B                     printf@ap:
  3976                           	opt callstack 0
  3977                           
  3978                           ; 2 bytes @ 0x2B
  3979  00008B                     	ds	2
  3980  00008D                     ??_ModbusFC03:
  3981  00008D                     ??_ModbusFC10:
  3982  00008D                     ??_PrintModbus:
  3983  00008D                     ??_checkCRC:
  3984  00008D                     ?_ReadRX232:
  3985                           	opt callstack 0
  3986  00008D                     AddRxBuffToModBus@i:
  3987                           	opt callstack 0
  3988  00008D                     PrintModRespon@i:
  3989                           	opt callstack 0
  3990  00008D                     ReadRX232@NumChars:
  3991                           	opt callstack 0
  3992  00008D                     ClearEEAddRange@StartAdd:
  3993                           	opt callstack 0
  3994  00008D                     InitialiseString@PartNum:
  3995                           	opt callstack 0
  3996                           
  3997                           ; 19 bytes @ 0x2D
  3998  00008D                     	ds	2
  3999  00008F                     ClearEEAddRange@NumBytes:
  4000                           	opt callstack 0
  4001                           
  4002                           ; 2 bytes @ 0x2F
  4003  00008F                     	ds	2
  4004  000091                     ModbusFC03@convertedValue:
  4005                           	opt callstack 0
  4006  000091                     ModbusFC10@TempData:
  4007                           	opt callstack 0
  4008  000091                     SaveCardDat@Name:
  4009                           	opt callstack 0
  4010                           
  4011                           ; 2 bytes @ 0x31
  4012  000091                     	ds	1
  4013  000092                     PrintModbus@j:
  4014                           	opt callstack 0
  4015  000092                     checkCRC@crcHigh:
  4016                           	opt callstack 0
  4017                           
  4018                           ; 2 bytes @ 0x32
  4019  000092                     	ds	1
  4020  000093                     ModbusFC03@error:
  4021                           	opt callstack 0
  4022  000093                     ModbusFC10@error:
  4023                           	opt callstack 0
  4024  000093                     SaveCardDat@MBAddress:
  4025                           	opt callstack 0
  4026                           
  4027                           ; 2 bytes @ 0x33
  4028  000093                     	ds	1
  4029  000094                     PrintModbus@i:
  4030                           	opt callstack 0
  4031  000094                     checkCRC@crcLow:
  4032                           	opt callstack 0
  4033  000094                     ModbusFC03@i:
  4034                           	opt callstack 0
  4035  000094                     ModbusFC10@i:
  4036                           	opt callstack 0
  4037                           
  4038                           ; 2 bytes @ 0x34
  4039  000094                     	ds	1
  4040  000095                     SaveCardDat@dataeeAddr:
  4041                           	opt callstack 0
  4042                           
  4043                           ; 2 bytes @ 0x35
  4044  000095                     	ds	1
  4045  000096                     checkCRC@j:
  4046                           	opt callstack 0
  4047  000096                     ModbusFC10@j:
  4048                           	opt callstack 0
  4049                           
  4050                           ; 2 bytes @ 0x36
  4051  000096                     	ds	1
  4052  000097                     SaveCardDat@NumBytes:
  4053                           	opt callstack 0
  4054                           
  4055                           ; 2 bytes @ 0x37
  4056  000097                     	ds	1
  4057  000098                     checkCRC@crc:
  4058                           	opt callstack 0
  4059                           
  4060                           ; 2 bytes @ 0x38
  4061  000098                     	ds	1
  4062  000099                     ??_SaveCardDat:
  4063                           
  4064                           ; 1 bytes @ 0x39
  4065  000099                     	ds	1
  4066  00009A                     checkCRC@i:
  4067                           	opt callstack 0
  4068                           
  4069                           ; 2 bytes @ 0x3A
  4070  00009A                     	ds	1
  4071  00009B                     _SaveCardDat$2846:
  4072                           	opt callstack 0
  4073                           
  4074                           ; 2 bytes @ 0x3B
  4075  00009B                     	ds	2
  4076  00009D                     SaveCardDat@dataeeAddrWrk:
  4077                           	opt callstack 0
  4078                           
  4079                           ; 2 bytes @ 0x3D
  4080  00009D                     	ds	2
  4081  00009F                     SaveCardDat@i:
  4082                           	opt callstack 0
  4083                           
  4084                           ; 2 bytes @ 0x3F
  4085  00009F                     	ds	1
  4086  0000A0                     InitialiseString@Date:
  4087                           	opt callstack 0
  4088                           
  4089                           ; 11 bytes @ 0x40
  4090  0000A0                     	ds	1
  4091  0000A1                     SaveCardDat@Conf:
  4092                           	opt callstack 0
  4093                           
  4094                           ; 1 bytes @ 0x41
  4095  0000A1                     	ds	10
  4096  0000AB                     InitialiseString@Time:
  4097                           	opt callstack 0
  4098                           
  4099                           ; 8 bytes @ 0x4B
  4100  0000AB                     	ds	8
  4101  0000B3                     InitialiseString@SerialNum:
  4102                           	opt callstack 0
  4103                           
  4104                           ; 11 bytes @ 0x53
  4105  0000B3                     	ds	11
  4106  0000BE                     InitialiseString@Partial:
  4107                           	opt callstack 0
  4108                           
  4109                           ; 1 bytes @ 0x5E
  4110  0000BE                     	ds	1
  4111  0000BF                     InitialiseString@convertedValue:
  4112                           	opt callstack 0
  4113                           
  4114                           ; 2 bytes @ 0x5F
  4115  0000BF                     	ds	2
  4116  0000C1                     InitialiseString@RevNum:
  4117                           	opt callstack 0
  4118                           
  4119                           ; 2 bytes @ 0x61
  4120  0000C1                     	ds	2
  4121  0000C3                     InitialiseString@readDataOdd:
  4122                           	opt callstack 0
  4123                           
  4124                           ; 1 bytes @ 0x63
  4125  0000C3                     	ds	1
  4126  0000C4                     InitialiseString@readDataEven:
  4127                           	opt callstack 0
  4128                           
  4129                           ; 1 bytes @ 0x64
  4130  0000C4                     	ds	1
  4131  0000C5                     InitialiseString@j:
  4132                           	opt callstack 0
  4133                           
  4134                           ; 2 bytes @ 0x65
  4135  0000C5                     	ds	2
  4136  0000C7                     InitialiseString@i:
  4137                           	opt callstack 0
  4138                           
  4139                           ; 2 bytes @ 0x67
  4140  0000C7                     	ds	2
  4141  0000C9                     InitialiseString@i_1472:
  4142                           	opt callstack 0
  4143                           
  4144                           ; 2 bytes @ 0x69
  4145  0000C9                     	ds	2
  4146                           
  4147                           	psect	cstackCOMRAM
  4148  000001                     __pcstackCOMRAM:
  4149                           	opt callstack 0
  4150  000001                     ??_INTERRUPT_InterruptManager:
  4151  000001                     
  4152                           ; 1 bytes @ 0x0
  4153  000001                     	ds	4
  4154  000005                     ??_ClearRxBuff:
  4155  000005                     ?_ADCC_GetSingleConversion:
  4156                           	opt callstack 0
  4157  000005                     ?_generateCRC:
  4158                           	opt callstack 0
  4159  000005                     ?_strcmp:
  4160                           	opt callstack 0
  4161  000005                     ?_strlen:
  4162                           	opt callstack 0
  4163  000005                     ?_isupper:
  4164                           	opt callstack 0
  4165  000005                     ?_isalpha:
  4166                           	opt callstack 0
  4167  000005                     ?_isdigit:
  4168                           	opt callstack 0
  4169  000005                     ?_isspace:
  4170                           	opt callstack 0
  4171  000005                     ?_islower:
  4172                           	opt callstack 0
  4173  000005                     ?___wmul:
  4174                           	opt callstack 0
  4175  000005                     ?___aodiv:
  4176                           	opt callstack 0
  4177  000005                     ?___aomod:
  4178                           	opt callstack 0
  4179  000005                     ?___lodiv:
  4180                           	opt callstack 0
  4181  000005                     ?___lomod:
  4182                           	opt callstack 0
  4183  000005                     EUSART2_Read@readValue:
  4184                           	opt callstack 0
  4185  000005                     EUSART2_Write@txData:
  4186                           	opt callstack 0
  4187  000005                     EUSART1_Read@readValue:
  4188                           	opt callstack 0
  4189  000005                     EUSART1_Write@txData:
  4190                           	opt callstack 0
  4191  000005                     DATAEE_WriteByte@bAdd:
  4192                           	opt callstack 0
  4193  000005                     DATAEE_ReadByte@bAdd:
  4194                           	opt callstack 0
  4195  000005                     EUSART2_SetFramingErrorHandler@interruptHandler:
  4196                           	opt callstack 0
  4197  000005                     EUSART2_SetOverrunErrorHandler@interruptHandler:
  4198                           	opt callstack 0
  4199  000005                     EUSART2_SetErrorHandler@interruptHandler:
  4200                           	opt callstack 0
  4201  000005                     EUSART2_SetTxInterruptHandler@interruptHandler:
  4202                           	opt callstack 0
  4203  000005                     EUSART2_SetRxInterruptHandler@interruptHandler:
  4204                           	opt callstack 0
  4205  000005                     EUSART1_SetFramingErrorHandler@interruptHandler:
  4206                           	opt callstack 0
  4207  000005                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  4208                           	opt callstack 0
  4209  000005                     EUSART1_SetErrorHandler@interruptHandler:
  4210                           	opt callstack 0
  4211  000005                     EUSART1_SetTxInterruptHandler@interruptHandler:
  4212                           	opt callstack 0
  4213  000005                     EUSART1_SetRxInterruptHandler@interruptHandler:
  4214                           	opt callstack 0
  4215  000005                     ClearModbusData@i:
  4216                           	opt callstack 0
  4217  000005                     generateCRC@MessCnt:
  4218                           	opt callstack 0
  4219  000005                     ClearModbusRespon@i:
  4220                           	opt callstack 0
  4221  000005                     ___wmul@multiplier:
  4222                           	opt callstack 0
  4223  000005                     isalpha@c:
  4224                           	opt callstack 0
  4225  000005                     isdigit@c:
  4226                           	opt callstack 0
  4227  000005                     isspace@c:
  4228                           	opt callstack 0
  4229  000005                     isupper@c:
  4230                           	opt callstack 0
  4231  000005                     strcmp@l:
  4232                           	opt callstack 0
  4233  000005                     strlen@s:
  4234                           	opt callstack 0
  4235  000005                     islower@c:
  4236                           	opt callstack 0
  4237  000005                     ___aodiv@dividend:
  4238                           	opt callstack 0
  4239  000005                     ___aomod@dividend:
  4240                           	opt callstack 0
  4241  000005                     ___lodiv@dividend:
  4242                           	opt callstack 0
  4243  000005                     ___lomod@dividend:
  4244                           	opt callstack 0
  4245                           
  4246                           ; 8 bytes @ 0x4
  4247  000005                     	ds	1
  4248  000006                     putch@txData:
  4249                           	opt callstack 0
  4250  000006                     ClearRxBuff@i:
  4251                           	opt callstack 0
  4252  000006                     UART1_Write_string@data:
  4253                           	opt callstack 0
  4254                           
  4255                           ; 2 bytes @ 0x5
  4256  000006                     	ds	1
  4257  000007                     ??_ADCC_GetSingleConversion:
  4258  000007                     ??_isupper:
  4259  000007                     ??_isalpha:
  4260  000007                     ??_isdigit:
  4261  000007                     ??_isspace:
  4262  000007                     ??_islower:
  4263  000007                     DATAEE_WriteByte@bData:
  4264                           	opt callstack 0
  4265  000007                     generateCRC@HiOrLo:
  4266                           	opt callstack 0
  4267  000007                     ___wmul@multiplicand:
  4268                           	opt callstack 0
  4269  000007                     fputc@c:
  4270                           	opt callstack 0
  4271  000007                     strcmp@r:
  4272                           	opt callstack 0
  4273  000007                     strlen@a:
  4274                           	opt callstack 0
  4275                           
  4276                           ; 2 bytes @ 0x6
  4277  000007                     	ds	1
  4278  000008                     ??_generateCRC:
  4279  000008                     DATAEE_WriteByte@GIEBitValue:
  4280                           	opt callstack 0
  4281  000008                     UART1_Write_string@data_len:
  4282                           	opt callstack 0
  4283                           
  4284                           ; 2 bytes @ 0x7
  4285  000008                     	ds	1
  4286  000009                     ??_strcmp:
  4287  000009                     ADCC_GetSingleConversion@channel:
  4288                           	opt callstack 0
  4289  000009                     ___wmul@product:
  4290                           	opt callstack 0
  4291  000009                     memmove@d1:
  4292                           	opt callstack 0
  4293  000009                     fputc@fp:
  4294                           	opt callstack 0
  4295  000009                     strcpy@dest:
  4296                           	opt callstack 0
  4297                           
  4298                           ; 2 bytes @ 0x8
  4299  000009                     	ds	1
  4300  00000A                     ??_UART1_Write_string:
  4301  00000A                     generateCRC@crcHigh:
  4302                           	opt callstack 0
  4303  00000A                     CardConfigIni@Name:
  4304                           	opt callstack 0
  4305                           
  4306                           ; 2 bytes @ 0x9
  4307  00000A                     	ds	1
  4308  00000B                     ??_fputc:
  4309  00000B                     ?_toupper:
  4310                           	opt callstack 0
  4311  00000B                     _isspace$2399:
  4312                           	opt callstack 0
  4313  00000B                     UART1_Write_string@i:
  4314                           	opt callstack 0
  4315  00000B                     memmove@s1:
  4316                           	opt callstack 0
  4317  00000B                     strcpy@src:
  4318                           	opt callstack 0
  4319  00000B                     toupper@c:
  4320                           	opt callstack 0
  4321                           
  4322                           ; 2 bytes @ 0xA
  4323  00000B                     	ds	1
  4324  00000C                     ?_atoi:
  4325                           	opt callstack 0
  4326  00000C                     generateCRC@crcLow:
  4327                           	opt callstack 0
  4328  00000C                     CardConfigIni@RetNum:
  4329                           	opt callstack 0
  4330  00000C                     atoi@s:
  4331                           	opt callstack 0
  4332                           
  4333                           ; 2 bytes @ 0xB
  4334  00000C                     	ds	1
  4335  00000D                     ??_strcpy:
  4336  00000D                     ??_toupper:
  4337  00000D                     memmove@n:
  4338                           	opt callstack 0
  4339  00000D                     ___aodiv@divisor:
  4340                           	opt callstack 0
  4341  00000D                     ___aomod@divisor:
  4342                           	opt callstack 0
  4343  00000D                     ___lodiv@divisor:
  4344                           	opt callstack 0
  4345  00000D                     ___lomod@divisor:
  4346                           	opt callstack 0
  4347                           
  4348                           ; 8 bytes @ 0xC
  4349  00000D                     	ds	1
  4350  00000E                     ??_atoi:
  4351  00000E                     generateCRC@i:
  4352                           	opt callstack 0
  4353  00000E                     CardConfigIni@dataeeAddrWrk:
  4354                           	opt callstack 0
  4355                           
  4356                           ; 2 bytes @ 0xD
  4357  00000E                     	ds	1
  4358  00000F                     ??_memmove:
  4359  00000F                     strcpy@s:
  4360                           	opt callstack 0
  4361                           
  4362                           ; 2 bytes @ 0xE
  4363  00000F                     	ds	1
  4364  000010                     ?_stoa:
  4365                           	opt callstack 0
  4366  000010                     generateCRC@j:
  4367                           	opt callstack 0
  4368  000010                     CardConfigIni@NumBytes:
  4369                           	opt callstack 0
  4370  000010                     stoa@fp:
  4371                           	opt callstack 0
  4372  000010                     fputs@s:
  4373                           	opt callstack 0
  4374                           
  4375                           ; 2 bytes @ 0xF
  4376  000010                     	ds	1
  4377  000011                     memmove@d:
  4378                           	opt callstack 0
  4379  000011                     strcpy@d:
  4380                           	opt callstack 0
  4381  000011                     _toupper$2486:
  4382                           	opt callstack 0
  4383                           
  4384                           ; 2 bytes @ 0x10
  4385  000011                     	ds	1
  4386  000012                     ??_CardConfigIni:
  4387  000012                     generateCRC@crc:
  4388                           	opt callstack 0
  4389  000012                     stoa@s:
  4390                           	opt callstack 0
  4391  000012                     atoi@neg:
  4392                           	opt callstack 0
  4393  000012                     fputs@fp:
  4394                           	opt callstack 0
  4395                           
  4396                           ; 2 bytes @ 0x11
  4397  000012                     	ds	1
  4398  000013                     memmove@s:
  4399                           	opt callstack 0
  4400  000013                     strcat@dest:
  4401                           	opt callstack 0
  4402                           
  4403                           ; 2 bytes @ 0x12
  4404  000013                     	ds	1
  4405  000014                     ??_stoa:
  4406  000014                     fputs@c:
  4407                           	opt callstack 0
  4408  000014                     ModbusError@ErrorCode:
  4409                           	opt callstack 0
  4410  000014                     CardConfigIni@j:
  4411                           	opt callstack 0
  4412  000014                     _atoi$2372:
  4413                           	opt callstack 0
  4414                           
  4415                           ; 2 bytes @ 0x13
  4416  000014                     	ds	1
  4417  000015                     ___aodiv@counter:
  4418                           	opt callstack 0
  4419  000015                     ___aomod@counter:
  4420                           	opt callstack 0
  4421  000015                     ___lomod@counter:
  4422                           	opt callstack 0
  4423  000015                     fputs@i:
  4424                           	opt callstack 0
  4425  000015                     strcat@src:
  4426                           	opt callstack 0
  4427  000015                     stoa@nuls:
  4428                           	opt callstack 0
  4429  000015                     ___lodiv@quotient:
  4430                           	opt callstack 0
  4431                           
  4432                           ; 8 bytes @ 0x14
  4433  000015                     	ds	1
  4434  000016                     ___aodiv@sign:
  4435                           	opt callstack 0
  4436  000016                     ___aomod@sign:
  4437                           	opt callstack 0
  4438  000016                     CardConfigIni@i:
  4439                           	opt callstack 0
  4440  000016                     _atoi$2374:
  4441                           	opt callstack 0
  4442                           
  4443                           ; 2 bytes @ 0x15
  4444  000016                     	ds	1
  4445  000017                     ?_abs:
  4446                           	opt callstack 0
  4447  000017                     ?_pad:
  4448                           	opt callstack 0
  4449  000017                     pad@fp:
  4450                           	opt callstack 0
  4451  000017                     abs@a:
  4452                           	opt callstack 0
  4453  000017                     ___aodiv@quotient:
  4454                           	opt callstack 0
  4455                           
  4456                           ; 8 bytes @ 0x16
  4457  000017                     	ds	1
  4458  000018                     CardConfigIni@readDataOdd:
  4459                           	opt callstack 0
  4460  000018                     _atoi$2373:
  4461                           	opt callstack 0
  4462                           
  4463                           ; 1 bytes @ 0x17
  4464  000018                     	ds	1
  4465  000019                     ??_abs:
  4466  000019                     CardConfigIni@readDataEven:
  4467                           	opt callstack 0
  4468  000019                     pad@buf:
  4469                           	opt callstack 0
  4470  000019                     atoi@n:
  4471                           	opt callstack 0
  4472                           
  4473                           ; 2 bytes @ 0x18
  4474  000019                     	ds	2
  4475  00001B                     pad@p:
  4476                           	opt callstack 0
  4477                           
  4478                           ; 2 bytes @ 0x1A
  4479  00001B                     	ds	1
  4480  00001C                     stoa@i:
  4481                           	opt callstack 0
  4482                           
  4483                           ; 2 bytes @ 0x1B
  4484  00001C                     	ds	1
  4485  00001D                     ??_pad:
  4486  00001D                     ___lodiv@counter:
  4487                           	opt callstack 0
  4488                           
  4489                           ; 1 bytes @ 0x1C
  4490  00001D                     	ds	1
  4491  00001E                     pad@i:
  4492                           	opt callstack 0
  4493  00001E                     stoa@w:
  4494                           	opt callstack 0
  4495                           
  4496                           ; 2 bytes @ 0x1D
  4497  00001E                     	ds	2
  4498  000020                     pad@w:
  4499                           	opt callstack 0
  4500  000020                     stoa@cp:
  4501                           	opt callstack 0
  4502                           
  4503                           ; 2 bytes @ 0x1F
  4504  000020                     	ds	2
  4505  000022                     ?_dtoa:
  4506                           	opt callstack 0
  4507  000022                     ?_utoa:
  4508                           	opt callstack 0
  4509  000022                     ?_xtoa:
  4510                           	opt callstack 0
  4511  000022                     dtoa@fp:
  4512                           	opt callstack 0
  4513  000022                     stoa@p:
  4514                           	opt callstack 0
  4515  000022                     utoa@fp:
  4516                           	opt callstack 0
  4517  000022                     xtoa@fp:
  4518                           	opt callstack 0
  4519                           
  4520                           ; 2 bytes @ 0x21
  4521  000022                     	ds	2
  4522  000024                     stoa@l:
  4523                           	opt callstack 0
  4524  000024                     dtoa@d:
  4525                           	opt callstack 0
  4526  000024                     utoa@d:
  4527                           	opt callstack 0
  4528  000024                     xtoa@d:
  4529                           	opt callstack 0
  4530                           
  4531                           ; 8 bytes @ 0x23
  4532  000024                     	ds	8
  4533  00002C                     ??_dtoa:
  4534  00002C                     ??_utoa:
  4535  00002C                     xtoa@x:
  4536                           	opt callstack 0
  4537                           
  4538                           ; 1 bytes @ 0x2B
  4539  00002C                     	ds	1
  4540  00002D                     ??_xtoa:
  4541                           
  4542                           ; 1 bytes @ 0x2C
  4543  00002D                     	ds	7
  4544  000034                     _dtoa$1868:
  4545                           	opt callstack 0
  4546  000034                     utoa@p:
  4547                           	opt callstack 0
  4548                           
  4549                           ; 2 bytes @ 0x33
  4550  000034                     	ds	1
  4551  000035                     _xtoa$1897:
  4552                           	opt callstack 0
  4553                           
  4554                           ; 2 bytes @ 0x34
  4555  000035                     	ds	1
  4556  000036                     dtoa@p:
  4557                           	opt callstack 0
  4558  000036                     utoa@w:
  4559                           	opt callstack 0
  4560                           
  4561                           ; 2 bytes @ 0x35
  4562  000036                     	ds	1
  4563  000037                     _xtoa$1898:
  4564                           	opt callstack 0
  4565                           
  4566                           ; 2 bytes @ 0x36
  4567  000037                     	ds	1
  4568  000038                     dtoa@w:
  4569                           	opt callstack 0
  4570  000038                     utoa@n:
  4571                           	opt callstack 0
  4572                           
  4573                           ; 8 bytes @ 0x37
  4574  000038                     	ds	1
  4575  000039                     xtoa@p:
  4576                           	opt callstack 0
  4577                           
  4578                           ; 2 bytes @ 0x38
  4579  000039                     	ds	1
  4580  00003A                     dtoa@s:
  4581                           	opt callstack 0
  4582                           
  4583                           ; 2 bytes @ 0x39
  4584  00003A                     	ds	1
  4585  00003B                     xtoa@w:
  4586                           	opt callstack 0
  4587                           
  4588                           ; 2 bytes @ 0x3A
  4589  00003B                     	ds	1
  4590  00003C                     dtoa@n:
  4591                           	opt callstack 0
  4592                           
  4593                           ; 8 bytes @ 0x3B
  4594  00003C                     	ds	1
  4595  00003D                     xtoa@n:
  4596                           	opt callstack 0
  4597                           
  4598                           ; 8 bytes @ 0x3C
  4599  00003D                     	ds	3
  4600  000040                     utoa@i:
  4601                           	opt callstack 0
  4602                           
  4603                           ; 2 bytes @ 0x3F
  4604  000040                     	ds	4
  4605  000044                     dtoa@i:
  4606                           	opt callstack 0
  4607                           
  4608                           ; 2 bytes @ 0x43
  4609  000044                     	ds	1
  4610  000045                     xtoa@i:
  4611                           	opt callstack 0
  4612                           
  4613                           ; 2 bytes @ 0x44
  4614  000045                     	ds	2
  4615  000047                     xtoa@c:
  4616                           	opt callstack 0
  4617                           
  4618                           ; 2 bytes @ 0x46
  4619  000047                     	ds	2
  4620  000049                     ?_vfpfcnvrt:
  4621                           	opt callstack 0
  4622  000049                     vfpfcnvrt@fp:
  4623                           	opt callstack 0
  4624                           
  4625                           ; 2 bytes @ 0x48
  4626  000049                     	ds	2
  4627  00004B                     vfpfcnvrt@fmt:
  4628                           	opt callstack 0
  4629                           
  4630                           ; 2 bytes @ 0x4A
  4631  00004B                     	ds	2
  4632  00004D                     vfpfcnvrt@ap:
  4633                           	opt callstack 0
  4634                           
  4635                           ; 2 bytes @ 0x4C
  4636  00004D                     	ds	2
  4637  00004F                     ??_vfpfcnvrt:
  4638                           
  4639                           ; 1 bytes @ 0x4E
  4640  00004F                     	ds	4
  4641  000053                     vfprintf@cfmt:
  4642                           	opt callstack 0
  4643                           
  4644                           ; 2 bytes @ 0x52
  4645  000053                     	ds	2
  4646  000055                     ??_InitialiseString:
  4647  000055                     ??_PrintModRespon:
  4648  000055                     ??_AddRxBuffToModBus:
  4649  000055                     PrintMB400@i:
  4650                           	opt callstack 0
  4651  000055                     ReadRX232@temp:
  4652                           	opt callstack 0
  4653  000055                     ClearEEAddRange@i:
  4654                           	opt callstack 0
  4655                           
  4656                           ; 2 bytes @ 0x54
  4657  000055                     	ds	1
  4658  000056                     ??_ModbusRx:
  4659                           
  4660                           ; 1 bytes @ 0x55
  4661  000056                     	ds	1
  4662  000057                     
  4663                           ; 1 bytes @ 0x56
  4664 ;;
  4665 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  4666 ;;
  4667 ;; *************** function _main *****************
  4668 ;; Defined at:
  4669 ;;		line 14 in file "main.c"
  4670 ;; Parameters:    Size  Location     Type
  4671 ;;		None
  4672 ;; Auto vars:     Size  Location     Type
  4673 ;;  RXStat          1    0        _Bool 
  4674 ;; Return value:  Size  Location     Type
  4675 ;;                  1    wreg      void 
  4676 ;; Registers used:
  4677 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4678 ;; Tracked objects:
  4679 ;;		On entry : 0/0
  4680 ;;		On exit  : 0/0
  4681 ;;		Unchanged: 0/0
  4682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4684 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4685 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4686 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4687 ;;Total ram usage:        3 bytes
  4688 ;; Hardware stack levels required when called:   16
  4689 ;; This function calls:
  4690 ;;		_ClearModbusData
  4691 ;;		_ClearModbusRespon
  4692 ;;		_ClearRxBuff
  4693 ;;		_InitialiseString
  4694 ;;		_ModbusError
  4695 ;;		_ModbusFC03
  4696 ;;		_ModbusFC10
  4697 ;;		_ModbusRx
  4698 ;;		_PrintMB400
  4699 ;;		_PrintModRespon
  4700 ;;		_PrintModbus
  4701 ;;		_RXMode
  4702 ;;		_ReadRX232
  4703 ;;		_SYSTEM_Initialize
  4704 ;;		_ValidateCmd
  4705 ;;		_printf
  4706 ;;		_strcpy
  4707 ;; This function is called by:
  4708 ;;		Startup code after reset
  4709 ;; This function uses a non-reentrant model
  4710 ;;
  4711                           
  4712                           	psect	text0
  4713  002E34                     __ptext0:
  4714                           	opt callstack 0
  4715  002E34                     _main:
  4716                           	opt callstack 15
  4717  002E34                     
  4718                           ;main.c: 17:     SYSTEM_Initialize();
  4719  002E34  ECE6  F022         	call	_SYSTEM_Initialize	;wreg free
  4720  002E38                     
  4721                           ;main.c: 24:     (INTCONbits.GIE = 1);
  4722  002E38  8EF2               	bsf	242,7,c	;volatile
  4723  002E3A                     
  4724                           ;main.c: 30:     (INTCONbits.PEIE = 1);
  4725  002E3A  8CF2               	bsf	242,6,c	;volatile
  4726  002E3C  9883               	bcf	131,4,c	;volatile
  4727  002E3E  9A83               	bcf	131,5,c	;volatile
  4728  002E40  9C83               	bcf	131,6,c	;volatile
  4729  002E42  9E83               	bcf	131,7,c	;volatile
  4730  002E44                     
  4731                           ;main.c: 40:     InitialiseString(0);
  4732  002E44  0E00               	movlw	0
  4733  002E46  EC41  F007         	call	_InitialiseString
  4734  002E4A                     
  4735                           ;main.c: 43:     RXMode();
  4736  002E4A  ECA7  F023         	call	_RXMode	;wreg free
  4737  002E4E                     
  4738                           ;main.c: 44:     ClearRxBuff();
  4739  002E4E  ECAB  F020         	call	_ClearRxBuff	;wreg free
  4740  002E52                     
  4741                           ;main.c: 45:     ClearModbusRespon();
  4742  002E52  EC5A  F021         	call	_ClearModbusRespon	;wreg free
  4743  002E56                     l8028:
  4744                           
  4745                           ;main.c: 51:     {;main.c: 52:         if(ModbusRx() == 1){
  4746  002E56  EC6A  F014         	call	_ModbusRx	;wreg free
  4747  002E5A  06E8               	decf	wreg,f,c
  4748  002E5C  A4D8               	btfss	status,2,c
  4749  002E5E  EF33  F017         	goto	u8021
  4750  002E62  EF35  F017         	goto	u8020
  4751  002E66                     u8021:
  4752  002E66  EF7E  F017         	goto	l8050
  4753  002E6A                     u8020:
  4754  002E6A  EF5E  F017         	goto	l8042
  4755  002E6E                     l8032:
  4756                           
  4757                           ; BSR set to: 1
  4758                           ;main.c: 58:                 {;main.c: 62:                     ModbusFC03();
  4759  002E6E  EC95  F000         	call	_ModbusFC03	;wreg free
  4760                           
  4761                           ;main.c: 63:                     break;
  4762  002E72  EF74  F017         	goto	l8044
  4763  002E76                     l8034:
  4764                           
  4765                           ; BSR set to: 1
  4766                           ;main.c: 66:                 {;main.c: 67:                     printf("Function Code 0x1
      +                          0\r\n");
  4767  002E76  0EEA               	movlw	low STR_1
  4768  002E78  0100               	movlb	0	; () banked
  4769  002E7A  6F7D               	movwf	printf@fmt& (0+255),b
  4770  002E7C  0EFE               	movlw	high STR_1
  4771  002E7E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4772  002E80  ECAC  F022         	call	_printf	;wreg free
  4773                           
  4774                           ;main.c: 69:                     printf("Modbus Register Before Update:");
  4775  002E84  0EE1               	movlw	low STR_2
  4776  002E86  0100               	movlb	0	; () banked
  4777  002E88  6F7D               	movwf	printf@fmt& (0+255),b
  4778  002E8A  0EFC               	movlw	high STR_2
  4779  002E8C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4780  002E8E  ECAC  F022         	call	_printf	;wreg free
  4781                           
  4782                           ;main.c: 70:                     PrintMB400();
  4783  002E92  EC64  F01E         	call	_PrintMB400	;wreg free
  4784                           
  4785                           ;main.c: 71:                     ModbusFC10();
  4786  002E96  EC46  F00D         	call	_ModbusFC10	;wreg free
  4787                           
  4788                           ;main.c: 73:                     break;
  4789  002E9A  EF74  F017         	goto	l8044
  4790  002E9E                     l8036:
  4791                           
  4792                           ; BSR set to: 1
  4793                           ;main.c: 76:                 {;main.c: 77:                     printf("Unsupported Funct
      +                          ion Code\r\n");
  4794  002E9E  0EAF               	movlw	low STR_3
  4795  002EA0  0100               	movlb	0	; () banked
  4796  002EA2  6F7D               	movwf	printf@fmt& (0+255),b
  4797  002EA4  0EFD               	movlw	high STR_3
  4798  002EA6  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4799  002EA8  ECAC  F022         	call	_printf	;wreg free
  4800  002EAC                     
  4801                           ;main.c: 79:                     ModbusError(0x01);
  4802  002EAC  0E00               	movlw	0
  4803  002EAE  6E15               	movwf	(ModbusError@ErrorCode+1)^0,c
  4804  002EB0  0E01               	movlw	1
  4805  002EB2  6E14               	movwf	ModbusError@ErrorCode^0,c
  4806  002EB4  EC0D  F01B         	call	_ModbusError	;wreg free
  4807                           
  4808                           ;main.c: 80:                     break;
  4809  002EB8  EF74  F017         	goto	l8044
  4810  002EBC                     l8042:
  4811  002EBC  0101               	movlb	1	; () banked
  4812  002EBE  5101               	movf	(_ModbusData+1)& (0+255),w,b
  4813  002EC0  6FD7               	movwf	??_main& (0+255),b
  4814  002EC2  6BD8               	clrf	(??_main+1)& (0+255),b
  4815                           
  4816                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4817                           ; Switch size 1, requested type "simple"
  4818                           ; Number of cases is 1, Range of values is 0 to 0
  4819                           ; switch strategies available:
  4820                           ; Name         Instructions Cycles
  4821                           ; simple_byte            4     3 (average)
  4822                           ;	Chosen strategy is simple_byte
  4823  002EC4  51D8               	movf	(??_main+1)& (0+255),w,b
  4824  002EC6  0A00               	xorlw	0	; case 0
  4825  002EC8  B4D8               	btfsc	status,2,c
  4826  002ECA  EF69  F017         	goto	l8186
  4827  002ECE  EF4F  F017         	goto	l8036
  4828  002ED2                     l8186:
  4829                           
  4830                           ; BSR set to: 1
  4831                           ; Switch size 1, requested type "simple"
  4832                           ; Number of cases is 2, Range of values is 3 to 16
  4833                           ; switch strategies available:
  4834                           ; Name         Instructions Cycles
  4835                           ; simple_byte            7     4 (average)
  4836                           ;	Chosen strategy is simple_byte
  4837  002ED2  51D7               	movf	??_main& (0+255),w,b
  4838  002ED4  0A03               	xorlw	3	; case 3
  4839  002ED6  B4D8               	btfsc	status,2,c
  4840  002ED8  EF37  F017         	goto	l8032
  4841  002EDC  0A13               	xorlw	19	; case 16
  4842  002EDE  B4D8               	btfsc	status,2,c
  4843  002EE0  EF3B  F017         	goto	l8034
  4844  002EE4  EF4F  F017         	goto	l8036
  4845  002EE8                     l8044:
  4846                           
  4847                           ;main.c: 84:             PrintModbus();
  4848  002EE8  ECE8  F00B         	call	_PrintModbus	;wreg free
  4849                           
  4850                           ;main.c: 85:             PrintModRespon();
  4851  002EEC  EC2C  F01C         	call	_PrintModRespon	;wreg free
  4852  002EF0                     
  4853                           ;main.c: 89:             ClearModbusData();
  4854  002EF0  EC85  F020         	call	_ClearModbusData	;wreg free
  4855  002EF4                     
  4856                           ;main.c: 90:             ClearModbusRespon();
  4857  002EF4  EC5A  F021         	call	_ClearModbusRespon	;wreg free
  4858                           
  4859                           ;main.c: 92:         }else if(ReadRX232(16) != 0){
  4860  002EF8  EF2B  F017         	goto	l8028
  4861  002EFC                     l8050:
  4862  002EFC  0E00               	movlw	0
  4863  002EFE  0100               	movlb	0	; () banked
  4864  002F00  6F8E               	movwf	(ReadRX232@NumChars+1)& (0+255),b
  4865  002F02  0E10               	movlw	16
  4866  002F04  6F8D               	movwf	ReadRX232@NumChars& (0+255),b
  4867  002F06  EC88  F016         	call	_ReadRX232	;wreg free
  4868  002F0A  0100               	movlb	0	; () banked
  4869  002F0C  518D               	movf	?_ReadRX232& (0+255),w,b
  4870  002F0E  118E               	iorwf	(?_ReadRX232+1)& (0+255),w,b
  4871  002F10  B4D8               	btfsc	status,2,c
  4872  002F12  EF8D  F017         	goto	u8031
  4873  002F16  EF8F  F017         	goto	u8030
  4874  002F1A                     u8031:
  4875  002F1A  EFA4  F017         	goto	l601
  4876  002F1E                     u8030:
  4877  002F1E                     
  4878                           ; BSR set to: 0
  4879                           ;main.c: 94:             if(ValidateCmd() ==1){
  4880  002F1E  EC3E  F011         	call	_ValidateCmd	;wreg free
  4881  002F22                     
  4882                           ;main.c: 101:             printf("\r\nEnter Command : ");
  4883  002F22  0E26               	movlw	low STR_4
  4884  002F24  0100               	movlb	0	; () banked
  4885  002F26  6F7D               	movwf	printf@fmt& (0+255),b
  4886  002F28  0EFF               	movlw	high STR_4
  4887  002F2A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  4888  002F2C  ECAC  F022         	call	_printf	;wreg free
  4889  002F30                     
  4890                           ;main.c: 102:             strcpy(Command, "");
  4891  002F30  0EEB               	movlw	low _Command
  4892  002F32  6E09               	movwf	strcpy@dest^0,c
  4893  002F34  0E01               	movlw	high _Command
  4894  002F36  6E0A               	movwf	(strcpy@dest+1)^0,c
  4895  002F38  0E03               	movlw	low (STR_81+68)
  4896  002F3A  6E0B               	movwf	strcpy@src^0,c
  4897  002F3C  0EF7               	movlw	high (STR_81+68)
  4898  002F3E  6E0C               	movwf	(strcpy@src+1)^0,c
  4899  002F40  ECCA  F01E         	call	_strcpy	;wreg free
  4900                           
  4901                           ;main.c: 104:         }else{
  4902  002F44  EF2B  F017         	goto	l8028
  4903  002F48                     l601:
  4904                           
  4905                           ; BSR set to: 0
  4906  002F48  EF2B  F017         	goto	l8028
  4907  002F4C  EF93  F000         	goto	start
  4908  002F50                     __end_of_main:
  4909                           	opt callstack 0
  4910                           
  4911 ;; *************** function _ValidateCmd *****************
  4912 ;; Defined at:
  4913 ;;		line 277 in file "RS232.c"
  4914 ;; Parameters:    Size  Location     Type
  4915 ;;		None
  4916 ;; Auto vars:     Size  Location     Type
  4917 ;;  ConfName       20   40[BANK1 ] unsigned char [20]
  4918 ;;  MaxChars        2    0        int 
  4919 ;;  ConfName       20   20[BANK1 ] unsigned char [20]
  4920 ;;  MaxChars        2    0        int 
  4921 ;;  ConfName       20    0[BANK1 ] unsigned char [20]
  4922 ;;  MaxChars        2    0        int 
  4923 ;;  i               2    0        int 
  4924 ;; Return value:  Size  Location     Type
  4925 ;;                  1    wreg      _Bool 
  4926 ;; Registers used:
  4927 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4928 ;; Tracked objects:
  4929 ;;		On entry : 0/0
  4930 ;;		On exit  : 0/0
  4931 ;;		Unchanged: 0/0
  4932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4934 ;;      Locals:         0       0      68       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4936 ;;      Totals:         0       0      68       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4937 ;;Total ram usage:       68 bytes
  4938 ;; Hardware stack levels used:    1
  4939 ;; Hardware stack levels required when called:   15
  4940 ;; This function calls:
  4941 ;;		_InitialiseString
  4942 ;;		_SaveCardDat
  4943 ;;		_TogDebug
  4944 ;;		_strcmp
  4945 ;; This function is called by:
  4946 ;;		_main
  4947 ;; This function uses a non-reentrant model
  4948 ;;
  4949                           
  4950                           	psect	text1
  4951  00227C                     __ptext1:
  4952                           	opt callstack 0
  4953  00227C                     _ValidateCmd:
  4954                           	opt callstack 15
  4955  00227C                     
  4956                           ;RS232.c: 283:     if(!strcmp(Command,"debug")){
  4957  00227C  0EEB               	movlw	low _Command
  4958  00227E  6E05               	movwf	strcmp@l^0,c
  4959  002280  0E01               	movlw	high _Command
  4960  002282  6E06               	movwf	(strcmp@l+1)^0,c
  4961  002284  0EE5               	movlw	low STR_103
  4962  002286  6E07               	movwf	strcmp@r^0,c
  4963  002288  0EFF               	movlw	high STR_103
  4964  00228A  6E08               	movwf	(strcmp@r+1)^0,c
  4965  00228C  ECCD  F01B         	call	_strcmp	;wreg free
  4966  002290  5005               	movf	?_strcmp^0,w,c
  4967  002292  1006               	iorwf	(?_strcmp+1)^0,w,c
  4968  002294  A4D8               	btfss	status,2,c
  4969  002296  EF4F  F011         	goto	u7941
  4970  00229A  EF51  F011         	goto	u7940
  4971  00229E                     u7941:
  4972  00229E  EF56  F011         	goto	l7934
  4973  0022A2                     u7940:
  4974  0022A2                     
  4975                           ;RS232.c: 284:         TogDebug();
  4976  0022A2  ECF9  F021         	call	_TogDebug	;wreg free
  4977  0022A6                     l7928:
  4978                           
  4979                           ;RS232.c: 285:         return 1;
  4980  0022A6  0E01               	movlw	1
  4981  0022A8  EF0B  F012         	goto	l977
  4982  0022AC                     l7934:
  4983  0022AC  0EEB               	movlw	low _Command
  4984  0022AE  6E05               	movwf	strcmp@l^0,c
  4985  0022B0  0E01               	movlw	high _Command
  4986  0022B2  6E06               	movwf	(strcmp@l+1)^0,c
  4987  0022B4  0EFD               	movlw	low STR_105
  4988  0022B6  6E07               	movwf	strcmp@r^0,c
  4989  0022B8  0EFF               	movlw	high STR_105
  4990  0022BA  6E08               	movwf	(strcmp@r+1)^0,c
  4991  0022BC  ECCD  F01B         	call	_strcmp	;wreg free
  4992  0022C0  5005               	movf	?_strcmp^0,w,c
  4993  0022C2  1006               	iorwf	(?_strcmp+1)^0,w,c
  4994  0022C4  A4D8               	btfss	status,2,c
  4995  0022C6  EF67  F011         	goto	u7951
  4996  0022CA  EF69  F011         	goto	u7950
  4997  0022CE                     u7951:
  4998  0022CE  EF6E  F011         	goto	l7944
  4999  0022D2                     u7950:
  5000  0022D2                     
  5001                           ;RS232.c: 287:         InitialiseString(0);
  5002  0022D2  0E00               	movlw	0
  5003  0022D4  EC41  F007         	call	_InitialiseString
  5004  0022D8  EF53  F011         	goto	l7928
  5005  0022DC                     l7944:
  5006  0022DC  0EEB               	movlw	low _Command
  5007  0022DE  6E05               	movwf	strcmp@l^0,c
  5008  0022E0  0E01               	movlw	high _Command
  5009  0022E2  6E06               	movwf	(strcmp@l+1)^0,c
  5010  0022E4  0EDE               	movlw	low STR_107
  5011  0022E6  6E07               	movwf	strcmp@r^0,c
  5012  0022E8  0EFF               	movlw	high STR_107
  5013  0022EA  6E08               	movwf	(strcmp@r+1)^0,c
  5014  0022EC  ECCD  F01B         	call	_strcmp	;wreg free
  5015  0022F0  5005               	movf	?_strcmp^0,w,c
  5016  0022F2  1006               	iorwf	(?_strcmp+1)^0,w,c
  5017  0022F4  A4D8               	btfss	status,2,c
  5018  0022F6  EF7F  F011         	goto	u7961
  5019  0022FA  EF81  F011         	goto	u7960
  5020  0022FE                     u7961:
  5021  0022FE  EFA2  F011         	goto	l7960
  5022  002302                     u7960:
  5023  002302                     
  5024                           ;RS232.c: 290:         char ConfName[20] = "Serial Number";
  5025  002302  EE22  F028         	lfsr	2,ValidateCmd@F10790
  5026  002306  EE11  F093         	lfsr	1,ValidateCmd@ConfName
  5027  00230A  0E13               	movlw	19
  5028  00230C                     u7971:
  5029  00230C  CFDB FFE3          	movff	plusw2,plusw1
  5030  002310  06E8               	decf	wreg,f,c
  5031  002312  E2FC               	bc	u7971
  5032  002314                     
  5033                           ;RS232.c: 296:         SaveCardDat(ConfName,0x0300,0x0300,MaxChars);
  5034  002314  0E93               	movlw	low ValidateCmd@ConfName
  5035  002316  0100               	movlb	0	; () banked
  5036  002318  6F91               	movwf	SaveCardDat@Name& (0+255),b
  5037  00231A  0E01               	movlw	high ValidateCmd@ConfName
  5038  00231C  6F92               	movwf	(SaveCardDat@Name+1)& (0+255),b
  5039  00231E  0E03               	movlw	3
  5040  002320  6F94               	movwf	(SaveCardDat@MBAddress+1)& (0+255),b
  5041  002322  0E00               	movlw	0
  5042  002324  6F93               	movwf	SaveCardDat@MBAddress& (0+255),b
  5043  002326  0E03               	movlw	3
  5044  002328  6F96               	movwf	(SaveCardDat@dataeeAddr+1)& (0+255),b
  5045  00232A  0E00               	movlw	0
  5046  00232C  6F95               	movwf	SaveCardDat@dataeeAddr& (0+255),b
  5047  00232E  0E00               	movlw	0
  5048  002330  6F98               	movwf	(SaveCardDat@NumBytes+1)& (0+255),b
  5049  002332  0E0A               	movlw	10
  5050  002334  6F97               	movwf	SaveCardDat@NumBytes& (0+255),b
  5051  002336  EC56  F010         	call	_SaveCardDat	;wreg free
  5052  00233A                     
  5053                           ;RS232.c: 297:         InitialiseString(1);
  5054  00233A  0E01               	movlw	1
  5055  00233C  EC41  F007         	call	_InitialiseString
  5056  002340  EF53  F011         	goto	l7928
  5057  002344                     l7960:
  5058  002344  0EEB               	movlw	low _Command
  5059  002346  6E05               	movwf	strcmp@l^0,c
  5060  002348  0E01               	movlw	high _Command
  5061  00234A  6E06               	movwf	(strcmp@l+1)^0,c
  5062  00234C  0EF0               	movlw	low STR_109
  5063  00234E  6E07               	movwf	strcmp@r^0,c
  5064  002350  0EFF               	movlw	high STR_109
  5065  002352  6E08               	movwf	(strcmp@r+1)^0,c
  5066  002354  ECCD  F01B         	call	_strcmp	;wreg free
  5067  002358  5005               	movf	?_strcmp^0,w,c
  5068  00235A  1006               	iorwf	(?_strcmp+1)^0,w,c
  5069  00235C  A4D8               	btfss	status,2,c
  5070  00235E  EFB3  F011         	goto	u7981
  5071  002362  EFB5  F011         	goto	u7980
  5072  002366                     u7981:
  5073  002366  EFD6  F011         	goto	l7976
  5074  00236A                     u7980:
  5075  00236A                     
  5076                           ;RS232.c: 303:         char ConfName[20] = "Part Number";
  5077  00236A  EE22  F014         	lfsr	2,ValidateCmd@F10793
  5078  00236E  EE11  F0A7         	lfsr	1,ValidateCmd@ConfName_1538
  5079  002372  0E13               	movlw	19
  5080  002374                     u7991:
  5081  002374  CFDB FFE3          	movff	plusw2,plusw1
  5082  002378  06E8               	decf	wreg,f,c
  5083  00237A  E2FC               	bc	u7991
  5084  00237C                     
  5085                           ;RS232.c: 305:         SaveCardDat(ConfName,0x0100,0x0100,MaxChars);
  5086  00237C  0EA7               	movlw	low ValidateCmd@ConfName_1538
  5087  00237E  0100               	movlb	0	; () banked
  5088  002380  6F91               	movwf	SaveCardDat@Name& (0+255),b
  5089  002382  0E01               	movlw	high ValidateCmd@ConfName_1538
  5090  002384  6F92               	movwf	(SaveCardDat@Name+1)& (0+255),b
  5091  002386  0E01               	movlw	1
  5092  002388  6F94               	movwf	(SaveCardDat@MBAddress+1)& (0+255),b
  5093  00238A  0E00               	movlw	0
  5094  00238C  6F93               	movwf	SaveCardDat@MBAddress& (0+255),b
  5095  00238E  0E01               	movlw	1
  5096  002390  6F96               	movwf	(SaveCardDat@dataeeAddr+1)& (0+255),b
  5097  002392  0E00               	movlw	0
  5098  002394  6F95               	movwf	SaveCardDat@dataeeAddr& (0+255),b
  5099  002396  0E00               	movlw	0
  5100  002398  6F98               	movwf	(SaveCardDat@NumBytes+1)& (0+255),b
  5101  00239A  0E10               	movlw	16
  5102  00239C  6F97               	movwf	SaveCardDat@NumBytes& (0+255),b
  5103  00239E  EC56  F010         	call	_SaveCardDat	;wreg free
  5104  0023A2                     
  5105                           ;RS232.c: 306:         InitialiseString(1);
  5106  0023A2  0E01               	movlw	1
  5107  0023A4  EC41  F007         	call	_InitialiseString
  5108  0023A8  EF53  F011         	goto	l7928
  5109  0023AC                     l7976:
  5110  0023AC  0EEB               	movlw	low _Command
  5111  0023AE  6E05               	movwf	strcmp@l^0,c
  5112  0023B0  0E01               	movlw	high _Command
  5113  0023B2  6E06               	movwf	(strcmp@l+1)^0,c
  5114  0023B4  0EF9               	movlw	low STR_111
  5115  0023B6  6E07               	movwf	strcmp@r^0,c
  5116  0023B8  0EFF               	movlw	high STR_111
  5117  0023BA  6E08               	movwf	(strcmp@r+1)^0,c
  5118  0023BC  ECCD  F01B         	call	_strcmp	;wreg free
  5119  0023C0  5005               	movf	?_strcmp^0,w,c
  5120  0023C2  1006               	iorwf	(?_strcmp+1)^0,w,c
  5121  0023C4  A4D8               	btfss	status,2,c
  5122  0023C6  EFE7  F011         	goto	u8001
  5123  0023CA  EFE9  F011         	goto	u8000
  5124  0023CE                     u8001:
  5125  0023CE  EF0A  F012         	goto	l7992
  5126  0023D2                     u8000:
  5127  0023D2                     
  5128                           ;RS232.c: 313:         char ConfName[20] = "Revision";
  5129  0023D2  EE22  F000         	lfsr	2,ValidateCmd@F10796
  5130  0023D6  EE11  F0BB         	lfsr	1,ValidateCmd@ConfName_1542
  5131  0023DA  0E13               	movlw	19
  5132  0023DC                     u8011:
  5133  0023DC  CFDB FFE3          	movff	plusw2,plusw1
  5134  0023E0  06E8               	decf	wreg,f,c
  5135  0023E2  E2FC               	bc	u8011
  5136  0023E4                     
  5137                           ;RS232.c: 316:         SaveCardDat(ConfName,0x0200,0x0200,MaxChars);
  5138  0023E4  0EBB               	movlw	low ValidateCmd@ConfName_1542
  5139  0023E6  0100               	movlb	0	; () banked
  5140  0023E8  6F91               	movwf	SaveCardDat@Name& (0+255),b
  5141  0023EA  0E01               	movlw	high ValidateCmd@ConfName_1542
  5142  0023EC  6F92               	movwf	(SaveCardDat@Name+1)& (0+255),b
  5143  0023EE  0E02               	movlw	2
  5144  0023F0  6F94               	movwf	(SaveCardDat@MBAddress+1)& (0+255),b
  5145  0023F2  0E00               	movlw	0
  5146  0023F4  6F93               	movwf	SaveCardDat@MBAddress& (0+255),b
  5147  0023F6  0E02               	movlw	2
  5148  0023F8  6F96               	movwf	(SaveCardDat@dataeeAddr+1)& (0+255),b
  5149  0023FA  0E00               	movlw	0
  5150  0023FC  6F95               	movwf	SaveCardDat@dataeeAddr& (0+255),b
  5151  0023FE  0E00               	movlw	0
  5152  002400  6F98               	movwf	(SaveCardDat@NumBytes+1)& (0+255),b
  5153  002402  0E02               	movlw	2
  5154  002404  6F97               	movwf	SaveCardDat@NumBytes& (0+255),b
  5155  002406  EC56  F010         	call	_SaveCardDat	;wreg free
  5156  00240A                     
  5157                           ;RS232.c: 318:         InitialiseString(1);
  5158  00240A  0E01               	movlw	1
  5159  00240C  EC41  F007         	call	_InitialiseString
  5160  002410  EF53  F011         	goto	l7928
  5161  002414                     l7992:
  5162                           
  5163                           ;RS232.c: 322:         return 0;
  5164  002414  0E00               	movlw	0
  5165  002416                     l977:
  5166  002416  0012               	return		;funcret
  5167  002418                     __end_of_ValidateCmd:
  5168                           	opt callstack 0
  5169                           
  5170 ;; *************** function _TogDebug *****************
  5171 ;; Defined at:
  5172 ;;		line 192 in file "RS232.c"
  5173 ;; Parameters:    Size  Location     Type
  5174 ;;		None
  5175 ;; Auto vars:     Size  Location     Type
  5176 ;;		None
  5177 ;; Return value:  Size  Location     Type
  5178 ;;                  1    wreg      void 
  5179 ;; Registers used:
  5180 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5181 ;; Tracked objects:
  5182 ;;		On entry : 0/0
  5183 ;;		On exit  : 0/0
  5184 ;;		Unchanged: 0/0
  5185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5190 ;;Total ram usage:        0 bytes
  5191 ;; Hardware stack levels used:    1
  5192 ;; Hardware stack levels required when called:   13
  5193 ;; This function calls:
  5194 ;;		_printf
  5195 ;; This function is called by:
  5196 ;;		_ValidateCmd
  5197 ;; This function uses a non-reentrant model
  5198 ;;
  5199                           
  5200                           	psect	text2
  5201  0043F2                     __ptext2:
  5202                           	opt callstack 0
  5203  0043F2                     _TogDebug:
  5204                           	opt callstack 16
  5205  0043F2                     
  5206                           ;RS232.c: 194:     if(Debug==0){
  5207  0043F2  0100               	movlb	0	; () banked
  5208  0043F4  51DD               	movf	_Debug& (0+255),w,b
  5209  0043F6  A4D8               	btfss	status,2,c
  5210  0043F8  EF00  F022         	goto	u7481
  5211  0043FC  EF02  F022         	goto	u7480
  5212  004400                     u7481:
  5213  004400  EF0C  F022         	goto	l7516
  5214  004404                     u7480:
  5215  004404                     
  5216                           ; BSR set to: 0
  5217                           ;RS232.c: 195:         Debug =1;
  5218  004404  0E01               	movlw	1
  5219  004406  6FDD               	movwf	_Debug& (0+255),b
  5220  004408                     
  5221                           ; BSR set to: 0
  5222                           ;RS232.c: 196:         printf("Debug Enabled\r\n");
  5223  004408  0E5B               	movlw	low STR_92
  5224  00440A  6F7D               	movwf	printf@fmt& (0+255),b
  5225  00440C  0EFF               	movlw	high STR_92
  5226  00440E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5227  004410  ECAC  F022         	call	_printf	;wreg free
  5228                           
  5229                           ;RS232.c: 197:     }else{
  5230  004414  EF14  F022         	goto	l948
  5231  004418                     l7516:
  5232                           
  5233                           ; BSR set to: 0
  5234                           ;RS232.c: 198:         Debug =0;
  5235  004418  0E00               	movlw	0
  5236  00441A  6FDD               	movwf	_Debug& (0+255),b
  5237  00441C                     
  5238                           ; BSR set to: 0
  5239                           ;RS232.c: 199:         printf("Debug Disabled\r\n");
  5240  00441C  0E4A               	movlw	low STR_93
  5241  00441E  6F7D               	movwf	printf@fmt& (0+255),b
  5242  004420  0EFF               	movlw	high STR_93
  5243  004422  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5244  004424  ECAC  F022         	call	_printf	;wreg free
  5245  004428                     l948:
  5246  004428  0012               	return		;funcret
  5247  00442A                     __end_of_TogDebug:
  5248                           	opt callstack 0
  5249                           
  5250 ;; *************** function _SaveCardDat *****************
  5251 ;; Defined at:
  5252 ;;		line 217 in file "RS232.c"
  5253 ;; Parameters:    Size  Location     Type
  5254 ;;  Name            2   49[BANK0 ] PTR unsigned char 
  5255 ;;		 -> ValidateCmd@ConfName_1542(20), ValidateCmd@ConfName_1538(20), ValidateCmd@ConfName(20), 
  5256 ;;  MBAddress       2   51[BANK0 ] unsigned int 
  5257 ;;  dataeeAddr      2   53[BANK0 ] unsigned short 
  5258 ;;  NumBytes        2   55[BANK0 ] int 
  5259 ;; Auto vars:     Size  Location     Type
  5260 ;;  i               2   63[BANK0 ] int 
  5261 ;;  dataeeAddrWr    2   61[BANK0 ] unsigned short 
  5262 ;;  Conf            1   65[BANK0 ] unsigned char 
  5263 ;;  readData        1    0        unsigned char 
  5264 ;; Return value:  Size  Location     Type
  5265 ;;                  1    wreg      void 
  5266 ;; Registers used:
  5267 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5268 ;; Tracked objects:
  5269 ;;		On entry : 0/0
  5270 ;;		On exit  : 0/0
  5271 ;;		Unchanged: 0/0
  5272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5273 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5274 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5275 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5276 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5277 ;;Total ram usage:       17 bytes
  5278 ;; Hardware stack levels used:    1
  5279 ;; Hardware stack levels required when called:   14
  5280 ;; This function calls:
  5281 ;;		_ClearEEAddRange
  5282 ;;		_DATAEE_WriteByte
  5283 ;;		_EUSART2_Read
  5284 ;;		_EUSART2_is_rx_ready
  5285 ;;		_ReadRX232
  5286 ;;		_printf
  5287 ;;		_strcpy
  5288 ;;		_strlen
  5289 ;; This function is called by:
  5290 ;;		_ValidateCmd
  5291 ;; This function uses a non-reentrant model
  5292 ;;
  5293                           
  5294                           	psect	text3
  5295  0020AC                     __ptext3:
  5296                           	opt callstack 0
  5297  0020AC                     _SaveCardDat:
  5298                           	opt callstack 15
  5299  0020AC                     
  5300                           ;RS232.c: 220:     unsigned char Conf, readData;;RS232.c: 221:     uint16_t dataeeAddrWr
      +                          k = dataeeAddr;
  5301  0020AC  C095  F09D         	movff	SaveCardDat@dataeeAddr,SaveCardDat@dataeeAddrWrk
  5302  0020B0  C096  F09E         	movff	SaveCardDat@dataeeAddr+1,SaveCardDat@dataeeAddrWrk+1
  5303  0020B4                     
  5304                           ;RS232.c: 223:     printf("\r\nEnter card %s (max %i characters): ", Name, NumBytes);
  5305  0020B4  0EFB               	movlw	low STR_95
  5306  0020B6  0100               	movlb	0	; () banked
  5307  0020B8  6F7D               	movwf	printf@fmt& (0+255),b
  5308  0020BA  0EF9               	movlw	high STR_95
  5309  0020BC  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5310  0020BE  C091  F07F         	movff	SaveCardDat@Name,?_printf+2
  5311  0020C2  C092  F080         	movff	SaveCardDat@Name+1,?_printf+3
  5312  0020C6  C097  F081         	movff	SaveCardDat@NumBytes,?_printf+4
  5313  0020CA  C098  F082         	movff	SaveCardDat@NumBytes+1,?_printf+5
  5314  0020CE  ECAC  F022         	call	_printf	;wreg free
  5315  0020D2                     
  5316                           ;RS232.c: 225:     strcpy(Command, "");
  5317  0020D2  0EEB               	movlw	low _Command
  5318  0020D4  6E09               	movwf	strcpy@dest^0,c
  5319  0020D6  0E01               	movlw	high _Command
  5320  0020D8  6E0A               	movwf	(strcpy@dest+1)^0,c
  5321  0020DA  0E03               	movlw	low (STR_81+68)
  5322  0020DC  6E0B               	movwf	strcpy@src^0,c
  5323  0020DE  0EF7               	movlw	high (STR_81+68)
  5324  0020E0  6E0C               	movwf	(strcpy@src+1)^0,c
  5325  0020E2  ECCA  F01E         	call	_strcpy	;wreg free
  5326  0020E6                     l7528:
  5327  0020E6  C097  F08D         	movff	SaveCardDat@NumBytes,ReadRX232@NumChars
  5328  0020EA  C098  F08E         	movff	SaveCardDat@NumBytes+1,ReadRX232@NumChars+1
  5329  0020EE  EC88  F016         	call	_ReadRX232	;wreg free
  5330  0020F2  0100               	movlb	0	; () banked
  5331  0020F4  518D               	movf	?_ReadRX232& (0+255),w,b
  5332  0020F6  118E               	iorwf	(?_ReadRX232+1)& (0+255),w,b
  5333  0020F8  B4D8               	btfsc	status,2,c
  5334  0020FA  EF81  F010         	goto	u7491
  5335  0020FE  EF83  F010         	goto	u7490
  5336  002102                     u7491:
  5337  002102  EF73  F010         	goto	l7528
  5338  002106                     u7490:
  5339  002106                     
  5340                           ; BSR set to: 0
  5341                           ;RS232.c: 228:     printf("\r\nEntered: %s \r\n Confirm  Y|N?: ", Command);
  5342  002106  0E40               	movlw	low STR_97
  5343  002108  6F7D               	movwf	printf@fmt& (0+255),b
  5344  00210A  0EFC               	movlw	high STR_97
  5345  00210C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5346  00210E  0EEB               	movlw	low _Command
  5347  002110  6F7F               	movwf	(?_printf+2)& (0+255),b
  5348  002112  0E01               	movlw	high _Command
  5349  002114  6F80               	movwf	(?_printf+3)& (0+255),b
  5350  002116  ECAC  F022         	call	_printf	;wreg free
  5351  00211A                     l7532:
  5352  00211A  EC05  F023         	call	_EUSART2_is_rx_ready	;wreg free
  5353  00211E  0900               	iorlw	0
  5354  002120  B4D8               	btfsc	status,2,c
  5355  002122  EF95  F010         	goto	u7501
  5356  002126  EF97  F010         	goto	u7500
  5357  00212A                     u7501:
  5358  00212A  EF8D  F010         	goto	l7532
  5359  00212E                     u7500:
  5360  00212E                     
  5361                           ;RS232.c: 233:     Conf = EUSART2_Read();
  5362  00212E  ECB4  F01F         	call	_EUSART2_Read	;wreg free
  5363  002132  0100               	movlb	0	; () banked
  5364  002134  6FA1               	movwf	SaveCardDat@Conf& (0+255),b
  5365  002136                     
  5366                           ; BSR set to: 0
  5367                           ;RS232.c: 236:     if(Conf == 0x79 || Conf == 0x59){
  5368  002136  0E79               	movlw	121
  5369  002138  19A1               	xorwf	SaveCardDat@Conf& (0+255),w,b
  5370  00213A  B4D8               	btfsc	status,2,c
  5371  00213C  EFA2  F010         	goto	u7511
  5372  002140  EFA4  F010         	goto	u7510
  5373  002144                     u7511:
  5374  002144  EFAD  F010         	goto	l965
  5375  002148                     u7510:
  5376  002148                     
  5377                           ; BSR set to: 0
  5378  002148  0E59               	movlw	89
  5379  00214A  19A1               	xorwf	SaveCardDat@Conf& (0+255),w,b
  5380  00214C  A4D8               	btfss	status,2,c
  5381  00214E  EFAB  F010         	goto	u7521
  5382  002152  EFAD  F010         	goto	u7520
  5383  002156                     u7521:
  5384  002156  EF25  F011         	goto	l7564
  5385  00215A                     u7520:
  5386  00215A                     l965:
  5387  00215A                     
  5388                           ; BSR set to: 0
  5389                           ;RS232.c: 238:         printf("Y\r\nSaving %s\r\n", Name);
  5390  00215A  0E8B               	movlw	low STR_98
  5391  00215C  6F7D               	movwf	printf@fmt& (0+255),b
  5392  00215E  0EFF               	movlw	high STR_98
  5393  002160  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5394  002162  C091  F07F         	movff	SaveCardDat@Name,?_printf+2
  5395  002166  C092  F080         	movff	SaveCardDat@Name+1,?_printf+3
  5396  00216A  ECAC  F022         	call	_printf	;wreg free
  5397  00216E                     
  5398                           ;RS232.c: 239:         printf("Num Chars: %i \r\n", strlen(Command));
  5399  00216E  0EEB               	movlw	low _Command
  5400  002170  6E05               	movwf	strlen@s^0,c
  5401  002172  0E01               	movlw	high _Command
  5402  002174  6E06               	movwf	(strlen@s+1)^0,c
  5403  002176  EC5D  F020         	call	_strlen	;wreg free
  5404  00217A  C005  F09B         	movff	?_strlen,_SaveCardDat$2846
  5405  00217E  C006  F09C         	movff	?_strlen+1,_SaveCardDat$2846+1
  5406  002182                     
  5407                           ;RS232.c: 239:         printf("Num Chars: %i \r\n", strlen(Command));
  5408  002182  0E39               	movlw	low STR_99
  5409  002184  0100               	movlb	0	; () banked
  5410  002186  6F7D               	movwf	printf@fmt& (0+255),b
  5411  002188  0EFF               	movlw	high STR_99
  5412  00218A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5413  00218C  C09B  F07F         	movff	_SaveCardDat$2846,?_printf+2
  5414  002190  C09C  F080         	movff	_SaveCardDat$2846+1,?_printf+3
  5415  002194  ECAC  F022         	call	_printf	;wreg free
  5416  002198                     
  5417                           ;RS232.c: 243:         ClearEEAddRange(dataeeAddr,NumBytes);
  5418  002198  C095  F08D         	movff	SaveCardDat@dataeeAddr,ClearEEAddRange@StartAdd
  5419  00219C  C096  F08E         	movff	SaveCardDat@dataeeAddr+1,ClearEEAddRange@StartAdd+1
  5420  0021A0  C097  F08F         	movff	SaveCardDat@NumBytes,ClearEEAddRange@NumBytes
  5421  0021A4  C098  F090         	movff	SaveCardDat@NumBytes+1,ClearEEAddRange@NumBytes+1
  5422  0021A8  EC86  F01F         	call	_ClearEEAddRange	;wreg free
  5423  0021AC                     
  5424                           ;RS232.c: 246:         for (i = 0; i < strlen(Command); i++){
  5425  0021AC  0E00               	movlw	0
  5426  0021AE  0100               	movlb	0	; () banked
  5427  0021B0  6FA0               	movwf	(SaveCardDat@i+1)& (0+255),b
  5428  0021B2  0E00               	movlw	0
  5429  0021B4  6F9F               	movwf	SaveCardDat@i& (0+255),b
  5430  0021B6  EFFD  F010         	goto	l7558
  5431  0021BA                     l7550:
  5432                           
  5433                           ; BSR set to: 0
  5434                           ;RS232.c: 247:             DATAEE_WriteByte(dataeeAddrWrk, Command[i]);
  5435  0021BA  C09D  F005         	movff	SaveCardDat@dataeeAddrWrk,DATAEE_WriteByte@bAdd
  5436  0021BE  C09E  F006         	movff	SaveCardDat@dataeeAddrWrk+1,DATAEE_WriteByte@bAdd+1
  5437  0021C2  0EEB               	movlw	low _Command
  5438  0021C4  259F               	addwf	SaveCardDat@i& (0+255),w,b
  5439  0021C6  6ED9               	movwf	fsr2l,c
  5440  0021C8  0E01               	movlw	high _Command
  5441  0021CA  21A0               	addwfc	(SaveCardDat@i+1)& (0+255),w,b
  5442  0021CC  6EDA               	movwf	fsr2h,c
  5443  0021CE  50DF               	movf	indf2,w,c
  5444  0021D0  6E07               	movwf	DATAEE_WriteByte@bData^0,c
  5445  0021D2  ECF4  F020         	call	_DATAEE_WriteByte	;wreg free
  5446  0021D6                     
  5447                           ;RS232.c: 248:             dataeeAddrWrk++;
  5448  0021D6  0100               	movlb	0	; () banked
  5449  0021D8  4B9D               	infsnz	SaveCardDat@dataeeAddrWrk& (0+255),f,b
  5450  0021DA  2B9E               	incf	(SaveCardDat@dataeeAddrWrk+1)& (0+255),f,b
  5451  0021DC                     
  5452                           ; BSR set to: 0
  5453                           ;RS232.c: 249:             _delay((unsigned long)((50)*(32000000/4000.0)));
  5454  0021DC  0E03               	movlw	3
  5455  0021DE  0100               	movlb	0	; () banked
  5456  0021E0  6F9A               	movwf	(??_SaveCardDat+1)& (0+255),b
  5457  0021E2  0E08               	movlw	8
  5458  0021E4  6F99               	movwf	??_SaveCardDat& (0+255),b
  5459  0021E6  0E77               	movlw	119
  5460  0021E8                     u8047:
  5461  0021E8  2EE8               	decfsz	wreg,f,c
  5462  0021EA  D7FE               	bra	u8047
  5463  0021EC  2F99               	decfsz	??_SaveCardDat& (0+255),f,b
  5464  0021EE  D7FC               	bra	u8047
  5465  0021F0  2F9A               	decfsz	(??_SaveCardDat+1)& (0+255),f,b
  5466  0021F2  D7FA               	bra	u8047
  5467  0021F4                     
  5468                           ;RS232.c: 250:         }
  5469  0021F4  0100               	movlb	0	; () banked
  5470  0021F6  4B9F               	infsnz	SaveCardDat@i& (0+255),f,b
  5471  0021F8  2BA0               	incf	(SaveCardDat@i+1)& (0+255),f,b
  5472  0021FA                     l7558:
  5473                           
  5474                           ; BSR set to: 0
  5475  0021FA  0EEB               	movlw	low _Command
  5476  0021FC  6E05               	movwf	strlen@s^0,c
  5477  0021FE  0E01               	movlw	high _Command
  5478  002200  6E06               	movwf	(strlen@s+1)^0,c
  5479  002202  EC5D  F020         	call	_strlen	;wreg free
  5480  002206  5005               	movf	?_strlen^0,w,c
  5481  002208  0100               	movlb	0	; () banked
  5482  00220A  5D9F               	subwf	SaveCardDat@i& (0+255),w,b
  5483  00220C  5006               	movf	(?_strlen+1)^0,w,c
  5484  00220E  59A0               	subwfb	(SaveCardDat@i+1)& (0+255),w,b
  5485  002210  A0D8               	btfss	status,0,c
  5486  002212  EF0D  F011         	goto	u7531
  5487  002216  EF0F  F011         	goto	u7530
  5488  00221A                     u7531:
  5489  00221A  EFDD  F010         	goto	l7550
  5490  00221E                     u7530:
  5491  00221E                     
  5492                           ; BSR set to: 0
  5493                           ;RS232.c: 252:         printf("%s Saved. \r\n",Name);
  5494  00221E  0EA9               	movlw	low STR_100
  5495  002220  6F7D               	movwf	printf@fmt& (0+255),b
  5496  002222  0EFF               	movlw	high STR_100
  5497  002224  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5498  002226  C091  F07F         	movff	SaveCardDat@Name,?_printf+2
  5499  00222A  C092  F080         	movff	SaveCardDat@Name+1,?_printf+3
  5500  00222E  ECAC  F022         	call	_printf	;wreg free
  5501  002232                     
  5502                           ;RS232.c: 267:         strcpy(Command, "");
  5503  002232  0EEB               	movlw	low _Command
  5504  002234  6E09               	movwf	strcpy@dest^0,c
  5505  002236  0E01               	movlw	high _Command
  5506  002238  6E0A               	movwf	(strcpy@dest+1)^0,c
  5507  00223A  0E03               	movlw	low (STR_81+68)
  5508  00223C  6E0B               	movwf	strcpy@src^0,c
  5509  00223E  0EF7               	movlw	high (STR_81+68)
  5510  002240  6E0C               	movwf	(strcpy@src+1)^0,c
  5511  002242  ECCA  F01E         	call	_strcpy	;wreg free
  5512                           
  5513                           ;RS232.c: 269:     }else if(Conf == 0x4e || Conf == 0x6e){
  5514  002246  EF3D  F011         	goto	l973
  5515  00224A                     l7564:
  5516                           
  5517                           ; BSR set to: 0
  5518  00224A  0E4E               	movlw	78
  5519  00224C  19A1               	xorwf	SaveCardDat@Conf& (0+255),w,b
  5520  00224E  B4D8               	btfsc	status,2,c
  5521  002250  EF2C  F011         	goto	u7541
  5522  002254  EF2E  F011         	goto	u7540
  5523  002258                     u7541:
  5524  002258  EF37  F011         	goto	l7568
  5525  00225C                     u7540:
  5526  00225C                     
  5527                           ; BSR set to: 0
  5528  00225C  0E6E               	movlw	110
  5529  00225E  19A1               	xorwf	SaveCardDat@Conf& (0+255),w,b
  5530  002260  A4D8               	btfss	status,2,c
  5531  002262  EF35  F011         	goto	u7551
  5532  002266  EF37  F011         	goto	u7550
  5533  00226A                     u7551:
  5534  00226A  EF3D  F011         	goto	l973
  5535  00226E                     u7550:
  5536  00226E                     l7568:
  5537                           
  5538                           ; BSR set to: 0
  5539                           ;RS232.c: 270:         printf("Not saved\r\n");
  5540  00226E  0EB6               	movlw	low STR_102
  5541  002270  6F7D               	movwf	printf@fmt& (0+255),b
  5542  002272  0EFF               	movlw	high STR_102
  5543  002274  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5544  002276  ECAC  F022         	call	_printf	;wreg free
  5545  00227A                     l973:
  5546  00227A  0012               	return		;funcret
  5547  00227C                     __end_of_SaveCardDat:
  5548                           	opt callstack 0
  5549                           
  5550 ;; *************** function _ReadRX232 *****************
  5551 ;; Defined at:
  5552 ;;		line 137 in file "RS232.c"
  5553 ;; Parameters:    Size  Location     Type
  5554 ;;  NumChars        2   45[BANK0 ] int 
  5555 ;; Auto vars:     Size  Location     Type
  5556 ;;  temp            2   84[COMRAM] unsigned char [2]
  5557 ;; Return value:  Size  Location     Type
  5558 ;;                  2   45[BANK0 ] int 
  5559 ;; Registers used:
  5560 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5561 ;; Tracked objects:
  5562 ;;		On entry : 0/0
  5563 ;;		On exit  : 0/0
  5564 ;;		Unchanged: 0/0
  5565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5566 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5567 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5569 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5570 ;;Total ram usage:        4 bytes
  5571 ;; Hardware stack levels used:    1
  5572 ;; Hardware stack levels required when called:   13
  5573 ;; This function calls:
  5574 ;;		_EUSART2_Read
  5575 ;;		_EUSART2_Write
  5576 ;;		_EUSART2_is_rx_ready
  5577 ;;		_memmove
  5578 ;;		_printf
  5579 ;;		_strcat
  5580 ;;		_strlen
  5581 ;; This function is called by:
  5582 ;;		_main
  5583 ;;		_SaveCardDat
  5584 ;; This function uses a non-reentrant model
  5585 ;;
  5586                           
  5587                           	psect	text4
  5588  002D10                     __ptext4:
  5589                           	opt callstack 0
  5590  002D10                     _ReadRX232:
  5591                           	opt callstack 15
  5592  002D10                     
  5593                           ;RS232.c: 137: int ReadRX232(int NumChars);RS232.c: 138: {;RS232.c: 143:     char temp[2
      +                          ] = {'Z','\0'};
  5594  002D10  C0F2  F055         	movff	ReadRX232@F10772,ReadRX232@temp
  5595  002D14  C0F3  F056         	movff	ReadRX232@F10772+1,ReadRX232@temp+1
  5596  002D18                     
  5597                           ;RS232.c: 146:     if(EUSART2_is_rx_ready())
  5598  002D18  EC05  F023         	call	_EUSART2_is_rx_ready	;wreg free
  5599  002D1C  0900               	iorlw	0
  5600  002D1E  B4D8               	btfsc	status,2,c
  5601  002D20  EF94  F016         	goto	u7021
  5602  002D24  EF96  F016         	goto	u7020
  5603  002D28                     u7021:
  5604  002D28  EF14  F017         	goto	l7104
  5605  002D2C                     u7020:
  5606  002D2C                     l7076:
  5607                           
  5608                           ;RS232.c: 152:              if(EUSART2_is_rx_ready())
  5609  002D2C  EC05  F023         	call	_EUSART2_is_rx_ready	;wreg free
  5610  002D30  0900               	iorlw	0
  5611  002D32  B4D8               	btfsc	status,2,c
  5612  002D34  EF9E  F016         	goto	u7031
  5613  002D38  EFA0  F016         	goto	u7030
  5614  002D3C                     u7031:
  5615  002D3C  EFF0  F016         	goto	l7096
  5616  002D40                     u7030:
  5617  002D40                     
  5618                           ;RS232.c: 153:              {;RS232.c: 155:                 temp[0]=EUSART2_Read();
  5619  002D40  ECB4  F01F         	call	_EUSART2_Read	;wreg free
  5620  002D44  6E55               	movwf	ReadRX232@temp^0,c
  5621                           
  5622                           ;RS232.c: 158:                 EUSART2_Write(temp[0]);
  5623  002D46  5055               	movf	ReadRX232@temp^0,w,c
  5624  002D48  EC28  F01F         	call	_EUSART2_Write
  5625  002D4C                     
  5626                           ;RS232.c: 160:                 if(temp[0]!='\r'){
  5627  002D4C  0E0D               	movlw	13
  5628  002D4E  1855               	xorwf	ReadRX232@temp^0,w,c
  5629  002D50  B4D8               	btfsc	status,2,c
  5630  002D52  EFAD  F016         	goto	u7041
  5631  002D56  EFAF  F016         	goto	u7040
  5632  002D5A                     u7041:
  5633  002D5A  EFB9  F016         	goto	l7084
  5634  002D5E                     u7040:
  5635  002D5E                     
  5636                           ;RS232.c: 161:                     strcat(Command, temp);
  5637  002D5E  0EEB               	movlw	low _Command
  5638  002D60  6E13               	movwf	strcat@dest^0,c
  5639  002D62  0E01               	movlw	high _Command
  5640  002D64  6E14               	movwf	(strcat@dest+1)^0,c
  5641  002D66  0E55               	movlw	low ReadRX232@temp
  5642  002D68  6E15               	movwf	strcat@src^0,c
  5643  002D6A  0E00               	movlw	high ReadRX232@temp
  5644  002D6C  6E16               	movwf	(strcat@src+1)^0,c
  5645  002D6E  ECC0  F022         	call	_strcat	;wreg free
  5646  002D72                     l7084:
  5647                           
  5648                           ;RS232.c: 164:                 if(strlen(Command)>NumChars)
  5649  002D72  0EEB               	movlw	low _Command
  5650  002D74  6E05               	movwf	strlen@s^0,c
  5651  002D76  0E01               	movlw	high _Command
  5652  002D78  6E06               	movwf	(strlen@s+1)^0,c
  5653  002D7A  EC5D  F020         	call	_strlen	;wreg free
  5654  002D7E  5005               	movf	?_strlen^0,w,c
  5655  002D80  0100               	movlb	0	; () banked
  5656  002D82  5D8D               	subwf	ReadRX232@NumChars& (0+255),w,b
  5657  002D84  5006               	movf	(?_strlen+1)^0,w,c
  5658  002D86  598E               	subwfb	(ReadRX232@NumChars+1)& (0+255),w,b
  5659  002D88  B0D8               	btfsc	status,0,c
  5660  002D8A  EFC9  F016         	goto	u7051
  5661  002D8E  EFCB  F016         	goto	u7050
  5662  002D92                     u7051:
  5663  002D92  EFDF  F016         	goto	l7088
  5664  002D96                     u7050:
  5665  002D96                     
  5666                           ; BSR set to: 0
  5667                           ;RS232.c: 165:                 {;RS232.c: 167:                     memmove(Command, Comm
      +                          and+1, strlen(Command));
  5668  002D96  0EEB               	movlw	low _Command
  5669  002D98  6E09               	movwf	memmove@d1^0,c
  5670  002D9A  0E01               	movlw	high _Command
  5671  002D9C  6E0A               	movwf	(memmove@d1+1)^0,c
  5672  002D9E  0EEC               	movlw	low (_Command+1)
  5673  002DA0  6E0B               	movwf	memmove@s1^0,c
  5674  002DA2  0E01               	movlw	high (_Command+1)
  5675  002DA4  6E0C               	movwf	(memmove@s1+1)^0,c
  5676  002DA6  0EEB               	movlw	low _Command
  5677  002DA8  6E05               	movwf	strlen@s^0,c
  5678  002DAA  0E01               	movlw	high _Command
  5679  002DAC  6E06               	movwf	(strlen@s+1)^0,c
  5680  002DAE  EC5D  F020         	call	_strlen	;wreg free
  5681  002DB2  C005  F00D         	movff	?_strlen,memmove@n
  5682  002DB6  C006  F00E         	movff	?_strlen+1,memmove@n+1
  5683  002DBA  EC9D  F018         	call	_memmove	;wreg free
  5684  002DBE                     l7088:
  5685                           
  5686                           ;RS232.c: 171:                 if(temp[0]=='\r'){
  5687  002DBE  0E0D               	movlw	13
  5688  002DC0  1855               	xorwf	ReadRX232@temp^0,w,c
  5689  002DC2  A4D8               	btfss	status,2,c
  5690  002DC4  EFE6  F016         	goto	u7061
  5691  002DC8  EFE8  F016         	goto	u7060
  5692  002DCC                     u7061:
  5693  002DCC  EFF0  F016         	goto	l7096
  5694  002DD0                     u7060:
  5695  002DD0                     
  5696                           ;RS232.c: 173:                     temp[0]='z';
  5697  002DD0  0E7A               	movlw	122
  5698  002DD2  6E55               	movwf	ReadRX232@temp^0,c
  5699  002DD4                     
  5700                           ;RS232.c: 174:                     return NumChars;
  5701  002DD4  C08D  F08D         	movff	ReadRX232@NumChars,?_ReadRX232
  5702  002DD8  C08E  F08E         	movff	ReadRX232@NumChars+1,?_ReadRX232+1
  5703  002DDC  EF19  F017         	goto	l942
  5704  002DE0                     l7096:
  5705                           
  5706                           ;RS232.c: 177:         }while( temp[0] !='\r' );
  5707  002DE0  0E0D               	movlw	13
  5708  002DE2  1855               	xorwf	ReadRX232@temp^0,w,c
  5709  002DE4  A4D8               	btfss	status,2,c
  5710  002DE6  EFF7  F016         	goto	u7071
  5711  002DEA  EFF9  F016         	goto	u7070
  5712  002DEE                     u7071:
  5713  002DEE  EF96  F016         	goto	l7076
  5714  002DF2                     u7070:
  5715  002DF2                     
  5716                           ;RS232.c: 179:         Command[strlen(Command)-1] = '\0';
  5717  002DF2  0EEB               	movlw	low _Command
  5718  002DF4  6E05               	movwf	strlen@s^0,c
  5719  002DF6  0E01               	movlw	high _Command
  5720  002DF8  6E06               	movwf	(strlen@s+1)^0,c
  5721  002DFA  EC5D  F020         	call	_strlen	;wreg free
  5722  002DFE  0EEA               	movlw	low (_Command+65535)
  5723  002E00  2405               	addwf	?_strlen^0,w,c
  5724  002E02  6ED9               	movwf	fsr2l,c
  5725  002E04  0E01               	movlw	high (_Command+65535)
  5726  002E06  2006               	addwfc	(?_strlen+1)^0,w,c
  5727  002E08  6EDA               	movwf	fsr2h,c
  5728  002E0A  0E00               	movlw	0
  5729  002E0C  6EDF               	movwf	indf2,c
  5730  002E0E                     
  5731                           ;RS232.c: 181:         printf("\r\n\n");
  5732  002E0E  0E00               	movlw	low (STR_81+65)
  5733  002E10  0100               	movlb	0	; () banked
  5734  002E12  6F7D               	movwf	printf@fmt& (0+255),b
  5735  002E14  0EF7               	movlw	high (STR_81+65)
  5736  002E16  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  5737  002E18  ECAC  F022         	call	_printf	;wreg free
  5738  002E1C                     
  5739                           ;RS232.c: 183:         strlen(Command);
  5740  002E1C  0EEB               	movlw	low _Command
  5741  002E1E  6E05               	movwf	strlen@s^0,c
  5742  002E20  0E01               	movlw	high _Command
  5743  002E22  6E06               	movwf	(strlen@s+1)^0,c
  5744  002E24  EC5D  F020         	call	_strlen	;wreg free
  5745  002E28                     l7104:
  5746                           
  5747                           ;RS232.c: 186:     return 0;
  5748  002E28  0E00               	movlw	0
  5749  002E2A  0100               	movlb	0	; () banked
  5750  002E2C  6F8E               	movwf	(?_ReadRX232+1)& (0+255),b
  5751  002E2E  0E00               	movlw	0
  5752  002E30  6F8D               	movwf	?_ReadRX232& (0+255),b
  5753  002E32                     l942:
  5754  002E32  0012               	return		;funcret
  5755  002E34                     __end_of_ReadRX232:
  5756                           	opt callstack 0
  5757                           
  5758 ;; *************** function _strcat *****************
  5759 ;; Defined at:
  5760 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcat.c"
  5761 ;; Parameters:    Size  Location     Type
  5762 ;;  dest            2   18[COMRAM] PTR unsigned char 
  5763 ;;		 -> Command(16), 
  5764 ;;  src             2   20[COMRAM] PTR const unsigned char 
  5765 ;;		 -> ReadRX232@temp(2), 
  5766 ;; Auto vars:     Size  Location     Type
  5767 ;;		None
  5768 ;; Return value:  Size  Location     Type
  5769 ;;                  2   18[COMRAM] PTR unsigned char 
  5770 ;; Registers used:
  5771 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5772 ;; Tracked objects:
  5773 ;;		On entry : 0/0
  5774 ;;		On exit  : 0/0
  5775 ;;		Unchanged: 0/0
  5776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5777 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5780 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5781 ;;Total ram usage:        4 bytes
  5782 ;; Hardware stack levels used:    1
  5783 ;; Hardware stack levels required when called:    5
  5784 ;; This function calls:
  5785 ;;		_strcpy
  5786 ;;		_strlen
  5787 ;; This function is called by:
  5788 ;;		_ReadRX232
  5789 ;; This function uses a non-reentrant model
  5790 ;;
  5791                           
  5792                           	psect	text5
  5793  004580                     __ptext5:
  5794                           	opt callstack 0
  5795  004580                     _strcat:
  5796                           	opt callstack 22
  5797  004580  C013  F005         	movff	strcat@dest,strlen@s
  5798  004584  C014  F006         	movff	strcat@dest+1,strlen@s+1
  5799  004588  EC5D  F020         	call	_strlen	;wreg free
  5800  00458C  5005               	movf	?_strlen^0,w,c
  5801  00458E  2413               	addwf	strcat@dest^0,w,c
  5802  004590  6E09               	movwf	strcpy@dest^0,c
  5803  004592  5006               	movf	(?_strlen+1)^0,w,c
  5804  004594  2014               	addwfc	(strcat@dest+1)^0,w,c
  5805  004596  6E0A               	movwf	(strcpy@dest+1)^0,c
  5806  004598  C015  F00B         	movff	strcat@src,strcpy@src
  5807  00459C  C016  F00C         	movff	strcat@src+1,strcpy@src+1
  5808  0045A0  ECCA  F01E         	call	_strcpy	;wreg free
  5809  0045A4  0012               	return		;funcret
  5810  0045A6                     __end_of_strcat:
  5811                           	opt callstack 0
  5812                           
  5813 ;; *************** function _strcpy *****************
  5814 ;; Defined at:
  5815 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  5816 ;; Parameters:    Size  Location     Type
  5817 ;;  dest            2    8[COMRAM] PTR unsigned char 
  5818 ;;		 -> Command(16), 
  5819 ;;  src             2   10[COMRAM] PTR const unsigned char 
  5820 ;;		 -> STR_101(1), STR_96(1), ReadRX232@temp(2), STR_5(1), 
  5821 ;; Auto vars:     Size  Location     Type
  5822 ;;  d               2   16[COMRAM] PTR unsigned char 
  5823 ;;		 -> Command(16), 
  5824 ;;  s               2   14[COMRAM] PTR const unsigned char 
  5825 ;;		 -> STR_101(1), STR_96(1), ReadRX232@temp(2), STR_5(1), 
  5826 ;; Return value:  Size  Location     Type
  5827 ;;                  2    8[COMRAM] PTR unsigned char 
  5828 ;; Registers used:
  5829 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5830 ;; Tracked objects:
  5831 ;;		On entry : 0/0
  5832 ;;		On exit  : 0/0
  5833 ;;		Unchanged: 0/0
  5834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5835 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5836 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5837 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5838 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5839 ;;Total ram usage:       10 bytes
  5840 ;; Hardware stack levels used:    1
  5841 ;; Hardware stack levels required when called:    4
  5842 ;; This function calls:
  5843 ;;		Nothing
  5844 ;; This function is called by:
  5845 ;;		_main
  5846 ;;		_SaveCardDat
  5847 ;;		_strcat
  5848 ;; This function uses a non-reentrant model
  5849 ;;
  5850                           
  5851                           	psect	text6
  5852  003D94                     __ptext6:
  5853                           	opt callstack 0
  5854  003D94                     _strcpy:
  5855                           	opt callstack 26
  5856  003D94  C00B  F00F         	movff	strcpy@src,strcpy@s
  5857  003D98  C00C  F010         	movff	strcpy@src+1,strcpy@s+1
  5858  003D9C  C009  F011         	movff	strcpy@dest,strcpy@d
  5859  003DA0  C00A  F012         	movff	strcpy@dest+1,strcpy@d+1
  5860  003DA4                     l6912:
  5861  003DA4  500F               	movf	strcpy@s^0,w,c
  5862  003DA6  6E0D               	movwf	??_strcpy^0,c
  5863  003DA8  5010               	movf	(strcpy@s+1)^0,w,c
  5864  003DAA  6E0E               	movwf	(??_strcpy+1)^0,c
  5865  003DAC  4A0F               	infsnz	strcpy@s^0,f,c
  5866  003DAE  2A10               	incf	(strcpy@s+1)^0,f,c
  5867  003DB0  C00D  FFF6         	movff	??_strcpy,tblptrl
  5868  003DB4  C00E  FFF7         	movff	??_strcpy+1,tblptrh
  5869  003DB8  0E00               	movlw	low (__mediumconst shr (0+16))
  5870  003DBA  6EF8               	movwf	tblptru,c
  5871  003DBC  C011  FFD9         	movff	strcpy@d,fsr2l
  5872  003DC0  C012  FFDA         	movff	strcpy@d+1,fsr2h
  5873  003DC4  4A11               	infsnz	strcpy@d^0,f,c
  5874  003DC6  2A12               	incf	(strcpy@d+1)^0,f,c
  5875  003DC8  0E0E               	movlw	(high __ramtop+-1)
  5876  003DCA  64F7               	cpfsgt	tblptrh,c
  5877  003DCC  D003               	bra	u6787
  5878  003DCE  0008               	tblrd		*
  5879  003DD0  50F5               	movf	tablat,w,c
  5880  003DD2  D005               	bra	u6780
  5881  003DD4                     u6787:
  5882  003DD4  CFF6 FFE9          	movff	tblptrl,fsr0l
  5883  003DD8  CFF7 FFEA          	movff	tblptrh,fsr0h
  5884  003DDC  50EF               	movf	indf0,w,c
  5885  003DDE                     u6780:
  5886  003DDE  6EDF               	movwf	indf2,c
  5887  003DE0  50DF               	movf	indf2,w,c
  5888  003DE2  A4D8               	btfss	status,2,c
  5889  003DE4  EFF6  F01E         	goto	u6791
  5890  003DE8  EFF8  F01E         	goto	u6790
  5891  003DEC                     u6791:
  5892  003DEC  EFD2  F01E         	goto	l6912
  5893  003DF0                     u6790:
  5894  003DF0  0012               	return		;funcret
  5895  003DF2                     __end_of_strcpy:
  5896                           	opt callstack 0
  5897                           
  5898 ;; *************** function _memmove *****************
  5899 ;; Defined at:
  5900 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\memmove.c"
  5901 ;; Parameters:    Size  Location     Type
  5902 ;;  d1              2    8[COMRAM] PTR void 
  5903 ;;		 -> Command(16), 
  5904 ;;  s1              2   10[COMRAM] PTR const void 
  5905 ;;		 -> Command(16), 
  5906 ;;  n               2   12[COMRAM] unsigned int 
  5907 ;; Auto vars:     Size  Location     Type
  5908 ;;  s               2   18[COMRAM] PTR const unsigned char 
  5909 ;;		 -> Command(16), 
  5910 ;;  d               2   16[COMRAM] PTR unsigned char 
  5911 ;;		 -> Command(16), 
  5912 ;; Return value:  Size  Location     Type
  5913 ;;                  2    8[COMRAM] PTR void 
  5914 ;; Registers used:
  5915 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5916 ;; Tracked objects:
  5917 ;;		On entry : 0/0
  5918 ;;		On exit  : 0/0
  5919 ;;		Unchanged: 0/0
  5920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5921 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5922 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5923 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5924 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5925 ;;Total ram usage:       12 bytes
  5926 ;; Hardware stack levels used:    1
  5927 ;; Hardware stack levels required when called:    4
  5928 ;; This function calls:
  5929 ;;		Nothing
  5930 ;; This function is called by:
  5931 ;;		_ReadRX232
  5932 ;; This function uses a non-reentrant model
  5933 ;;
  5934                           
  5935                           	psect	text7
  5936  00313A                     __ptext7:
  5937                           	opt callstack 0
  5938  00313A                     _memmove:
  5939                           	opt callstack 23
  5940  00313A  C00B  F013         	movff	memmove@s1,memmove@s
  5941  00313E  C00C  F014         	movff	memmove@s1+1,memmove@s+1
  5942  003142  C009  F011         	movff	memmove@d1,memmove@d
  5943  003146  C00A  F012         	movff	memmove@d1+1,memmove@d+1
  5944  00314A  5011               	movf	memmove@d^0,w,c
  5945  00314C  5C13               	subwf	memmove@s^0,w,c
  5946  00314E  5012               	movf	(memmove@d+1)^0,w,c
  5947  003150  5814               	subwfb	(memmove@s+1)^0,w,c
  5948  003152  B0D8               	btfsc	status,0,c
  5949  003154  EFAE  F018         	goto	u6971
  5950  003158  EFB0  F018         	goto	u6970
  5951  00315C                     u6971:
  5952  00315C  EFE7  F018         	goto	l7042
  5953  003160                     u6970:
  5954  003160  500D               	movf	memmove@n^0,w,c
  5955  003162  2413               	addwf	memmove@s^0,w,c
  5956  003164  6E0F               	movwf	??_memmove^0,c
  5957  003166  500E               	movf	(memmove@n+1)^0,w,c
  5958  003168  2014               	addwfc	(memmove@s+1)^0,w,c
  5959  00316A  6E10               	movwf	(??_memmove+1)^0,c
  5960  00316C  500F               	movf	??_memmove^0,w,c
  5961  00316E  5C11               	subwf	memmove@d^0,w,c
  5962  003170  5010               	movf	(??_memmove+1)^0,w,c
  5963  003172  5812               	subwfb	(memmove@d+1)^0,w,c
  5964  003174  B0D8               	btfsc	status,0,c
  5965  003176  EFBF  F018         	goto	u6981
  5966  00317A  EFC1  F018         	goto	u6980
  5967  00317E                     u6981:
  5968  00317E  EFE7  F018         	goto	l7042
  5969  003182                     u6980:
  5970  003182  500D               	movf	memmove@n^0,w,c
  5971  003184  2613               	addwf	memmove@s^0,f,c
  5972  003186  500E               	movf	(memmove@n+1)^0,w,c
  5973  003188  2214               	addwfc	(memmove@s+1)^0,f,c
  5974  00318A  500D               	movf	memmove@n^0,w,c
  5975  00318C  2611               	addwf	memmove@d^0,f,c
  5976  00318E  500E               	movf	(memmove@n+1)^0,w,c
  5977  003190  2212               	addwfc	(memmove@d+1)^0,f,c
  5978  003192                     l7038:
  5979  003192  0613               	decf	memmove@s^0,f,c
  5980  003194  A0D8               	btfss	status,0,c
  5981  003196  0614               	decf	(memmove@s+1)^0,f,c
  5982  003198  C013  FFD9         	movff	memmove@s,fsr2l
  5983  00319C  C014  FFDA         	movff	memmove@s+1,fsr2h
  5984  0031A0  0611               	decf	memmove@d^0,f,c
  5985  0031A2  A0D8               	btfss	status,0,c
  5986  0031A4  0612               	decf	(memmove@d+1)^0,f,c
  5987  0031A6  C011  FFE1         	movff	memmove@d,fsr1l
  5988  0031AA  C012  FFE2         	movff	memmove@d+1,fsr1h
  5989  0031AE  CFDF FFE7          	movff	indf2,indf1
  5990  0031B2  060D               	decf	memmove@n^0,f,c
  5991  0031B4  A0D8               	btfss	status,0,c
  5992  0031B6  060E               	decf	(memmove@n+1)^0,f,c
  5993  0031B8  500D               	movf	memmove@n^0,w,c
  5994  0031BA  100E               	iorwf	(memmove@n+1)^0,w,c
  5995  0031BC  A4D8               	btfss	status,2,c
  5996  0031BE  EFE3  F018         	goto	u6991
  5997  0031C2  EFE5  F018         	goto	u6990
  5998  0031C6                     u6991:
  5999  0031C6  EFC9  F018         	goto	l7038
  6000  0031CA                     u6990:
  6001  0031CA  EF0A  F019         	goto	l2071
  6002  0031CE                     l7042:
  6003  0031CE  500D               	movf	memmove@n^0,w,c
  6004  0031D0  100E               	iorwf	(memmove@n+1)^0,w,c
  6005  0031D2  B4D8               	btfsc	status,2,c
  6006  0031D4  EFEE  F018         	goto	u7001
  6007  0031D8  EFF0  F018         	goto	u7000
  6008  0031DC                     u7001:
  6009  0031DC  EF0A  F019         	goto	l2071
  6010  0031E0                     u7000:
  6011  0031E0                     l7044:
  6012  0031E0  C013  FFD9         	movff	memmove@s,fsr2l
  6013  0031E4  C014  FFDA         	movff	memmove@s+1,fsr2h
  6014  0031E8  C011  FFE1         	movff	memmove@d,fsr1l
  6015  0031EC  C012  FFE2         	movff	memmove@d+1,fsr1h
  6016  0031F0  CFDF FFE7          	movff	indf2,indf1
  6017  0031F4  4A13               	infsnz	memmove@s^0,f,c
  6018  0031F6  2A14               	incf	(memmove@s+1)^0,f,c
  6019  0031F8  4A11               	infsnz	memmove@d^0,f,c
  6020  0031FA  2A12               	incf	(memmove@d+1)^0,f,c
  6021  0031FC  060D               	decf	memmove@n^0,f,c
  6022  0031FE  A0D8               	btfss	status,0,c
  6023  003200  060E               	decf	(memmove@n+1)^0,f,c
  6024  003202  500D               	movf	memmove@n^0,w,c
  6025  003204  100E               	iorwf	(memmove@n+1)^0,w,c
  6026  003206  A4D8               	btfss	status,2,c
  6027  003208  EF08  F019         	goto	u7011
  6028  00320C  EF0A  F019         	goto	u7010
  6029  003210                     u7011:
  6030  003210  EFF0  F018         	goto	l7044
  6031  003214                     u7010:
  6032  003214                     l2071:
  6033  003214  0012               	return		;funcret
  6034  003216                     __end_of_memmove:
  6035                           	opt callstack 0
  6036                           
  6037 ;; *************** function _EUSART2_is_rx_ready *****************
  6038 ;; Defined at:
  6039 ;;		line 139 in file "mcc_generated_files/eusart2.c"
  6040 ;; Parameters:    Size  Location     Type
  6041 ;;		None
  6042 ;; Auto vars:     Size  Location     Type
  6043 ;;		None
  6044 ;; Return value:  Size  Location     Type
  6045 ;;                  1    wreg      _Bool 
  6046 ;; Registers used:
  6047 ;;		wreg, status,2
  6048 ;; Tracked objects:
  6049 ;;		On entry : 0/0
  6050 ;;		On exit  : 0/0
  6051 ;;		Unchanged: 0/0
  6052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6057 ;;Total ram usage:        0 bytes
  6058 ;; Hardware stack levels used:    1
  6059 ;; Hardware stack levels required when called:    4
  6060 ;; This function calls:
  6061 ;;		Nothing
  6062 ;; This function is called by:
  6063 ;;		_ReadRX232
  6064 ;;		_SaveCardDat
  6065 ;; This function uses a non-reentrant model
  6066 ;;
  6067                           
  6068                           	psect	text8
  6069  00460A                     __ptext8:
  6070                           	opt callstack 0
  6071  00460A                     _EUSART2_is_rx_ready:
  6072                           	opt callstack 23
  6073  00460A                     
  6074                           ;mcc_generated_files/eusart2.c: 141:     return (eusart2RxCount ? 1 : 0);
  6075  00460A  0100               	movlb	0	; () banked
  6076  00460C  51E4               	movf	_eusart2RxCount& (0+255),w,b	;volatile
  6077  00460E  A4D8               	btfss	status,2,c
  6078  004610  EF0C  F023         	goto	u6831
  6079  004614  EF0F  F023         	goto	u6830
  6080  004618                     u6831:
  6081  004618  0E01               	movlw	1
  6082  00461A  EF10  F023         	goto	u6840
  6083  00461E                     u6830:
  6084  00461E  0E00               	movlw	0
  6085  004620                     u6840:
  6086  004620                     
  6087                           ; BSR set to: 0
  6088  004620  0012               	return		;funcret
  6089  004622                     __end_of_EUSART2_is_rx_ready:
  6090                           	opt callstack 0
  6091                           
  6092 ;; *************** function _EUSART2_Read *****************
  6093 ;; Defined at:
  6094 ;;		line 153 in file "mcc_generated_files/eusart2.c"
  6095 ;; Parameters:    Size  Location     Type
  6096 ;;		None
  6097 ;; Auto vars:     Size  Location     Type
  6098 ;;  readValue       1    4[COMRAM] unsigned char 
  6099 ;; Return value:  Size  Location     Type
  6100 ;;                  1    wreg      unsigned char 
  6101 ;; Registers used:
  6102 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6103 ;; Tracked objects:
  6104 ;;		On entry : 0/0
  6105 ;;		On exit  : 0/0
  6106 ;;		Unchanged: 0/0
  6107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6109 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6111 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6112 ;;Total ram usage:        1 bytes
  6113 ;; Hardware stack levels used:    1
  6114 ;; Hardware stack levels required when called:    4
  6115 ;; This function calls:
  6116 ;;		Nothing
  6117 ;; This function is called by:
  6118 ;;		_ReadRX232
  6119 ;;		_SaveCardDat
  6120 ;;		_getch
  6121 ;; This function uses a non-reentrant model
  6122 ;;
  6123                           
  6124                           	psect	text9
  6125  003F68                     __ptext9:
  6126                           	opt callstack 0
  6127  003F68                     _EUSART2_Read:
  6128                           	opt callstack 23
  6129  003F68                     l6964:
  6130                           
  6131                           ;mcc_generated_files/eusart2.c: 157:     while(0 == eusart2RxCount)
  6132  003F68  0100               	movlb	0	; () banked
  6133  003F6A  51E4               	movf	_eusart2RxCount& (0+255),w,b	;volatile
  6134  003F6C  B4D8               	btfsc	status,2,c
  6135  003F6E  EFBB  F01F         	goto	u6851
  6136  003F72  EFBD  F01F         	goto	u6850
  6137  003F76                     u6851:
  6138  003F76  EFB4  F01F         	goto	l6964
  6139  003F7A                     u6850:
  6140  003F7A                     
  6141                           ; BSR set to: 0
  6142                           ;mcc_generated_files/eusart2.c: 161:     eusart2RxLastError = eusart2RxStatusBuffer[eusa
      +                          rt2RxTail];
  6143  003F7A  0EA2               	movlw	low _eusart2RxStatusBuffer
  6144  003F7C  25E5               	addwf	_eusart2RxTail& (0+255),w,b	;volatile
  6145  003F7E  6ED9               	movwf	fsr2l,c
  6146  003F80  6ADA               	clrf	fsr2h,c
  6147  003F82  0E02               	movlw	high _eusart2RxStatusBuffer
  6148  003F84  22DA               	addwfc	fsr2h,f,c
  6149  003F86  50DF               	movf	indf2,w,c
  6150  003F88  6FE3               	movwf	_eusart2RxLastError& (0+255),b	;volatile
  6151                           
  6152                           ;mcc_generated_files/eusart2.c: 163:     readValue = eusart2RxBuffer[eusart2RxTail++];
  6153  003F8A  0E64               	movlw	low _eusart2RxBuffer
  6154  003F8C  25E5               	addwf	_eusart2RxTail& (0+255),w,b	;volatile
  6155  003F8E  6ED9               	movwf	fsr2l,c
  6156  003F90  6ADA               	clrf	fsr2h,c
  6157  003F92  0E03               	movlw	high _eusart2RxBuffer
  6158  003F94  22DA               	addwfc	fsr2h,f,c
  6159  003F96  50DF               	movf	indf2,w,c
  6160  003F98  6E05               	movwf	EUSART2_Read@readValue^0,c
  6161  003F9A                     
  6162                           ; BSR set to: 0
  6163  003F9A  2BE5               	incf	_eusart2RxTail& (0+255),f,b	;volatile
  6164  003F9C                     
  6165                           ; BSR set to: 0
  6166                           ;mcc_generated_files/eusart2.c: 164:     if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
  6167  003F9C  0E1F               	movlw	31
  6168  003F9E  65E5               	cpfsgt	_eusart2RxTail& (0+255),b	;volatile
  6169  003FA0  EFD4  F01F         	goto	u6861
  6170  003FA4  EFD6  F01F         	goto	u6860
  6171  003FA8                     u6861:
  6172  003FA8  EFD8  F01F         	goto	l6974
  6173  003FAC                     u6860:
  6174  003FAC                     
  6175                           ; BSR set to: 0
  6176                           ;mcc_generated_files/eusart2.c: 165:     {;mcc_generated_files/eusart2.c: 166:         e
      +                          usart2RxTail = 0;
  6177  003FAC  0E00               	movlw	0
  6178  003FAE  6FE5               	movwf	_eusart2RxTail& (0+255),b	;volatile
  6179  003FB0                     l6974:
  6180                           
  6181                           ; BSR set to: 0
  6182                           ;mcc_generated_files/eusart2.c: 168:     PIE3bits.RC2IE = 0;
  6183  003FB0  010E               	movlb	14	; () banked
  6184  003FB2  9FC5               	bcf	197,7,b	;volatile
  6185  003FB4                     
  6186                           ; BSR set to: 14
  6187                           ;mcc_generated_files/eusart2.c: 169:     eusart2RxCount--;
  6188  003FB4  0100               	movlb	0	; () banked
  6189  003FB6  07E4               	decf	_eusart2RxCount& (0+255),f,b	;volatile
  6190  003FB8                     
  6191                           ; BSR set to: 0
  6192                           ;mcc_generated_files/eusart2.c: 170:     PIE3bits.RC2IE = 1;
  6193  003FB8  010E               	movlb	14	; () banked
  6194  003FBA  8FC5               	bsf	197,7,b	;volatile
  6195  003FBC                     
  6196                           ; BSR set to: 14
  6197                           ;mcc_generated_files/eusart2.c: 172:     return readValue;
  6198  003FBC  5005               	movf	EUSART2_Read@readValue^0,w,c
  6199  003FBE                     
  6200                           ; BSR set to: 14
  6201  003FBE  0012               	return		;funcret
  6202  003FC0                     __end_of_EUSART2_Read:
  6203                           	opt callstack 0
  6204                           
  6205 ;; *************** function _ClearEEAddRange *****************
  6206 ;; Defined at:
  6207 ;;		line 205 in file "RS232.c"
  6208 ;; Parameters:    Size  Location     Type
  6209 ;;  StartAdd        2   45[BANK0 ] unsigned int 
  6210 ;;  NumBytes        2   47[BANK0 ] unsigned int 
  6211 ;; Auto vars:     Size  Location     Type
  6212 ;;  i               2   84[COMRAM] int 
  6213 ;; Return value:  Size  Location     Type
  6214 ;;                  1    wreg      void 
  6215 ;; Registers used:
  6216 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6217 ;; Tracked objects:
  6218 ;;		On entry : 0/0
  6219 ;;		On exit  : 0/0
  6220 ;;		Unchanged: 0/0
  6221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6222 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6223 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6225 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6226 ;;Total ram usage:        6 bytes
  6227 ;; Hardware stack levels used:    1
  6228 ;; Hardware stack levels required when called:   13
  6229 ;; This function calls:
  6230 ;;		_DATAEE_WriteByte
  6231 ;;		_printf
  6232 ;; This function is called by:
  6233 ;;		_SaveCardDat
  6234 ;; This function uses a non-reentrant model
  6235 ;;
  6236                           
  6237                           	psect	text10
  6238  003F0C                     __ptext10:
  6239                           	opt callstack 0
  6240  003F0C                     _ClearEEAddRange:
  6241                           	opt callstack 15
  6242  003F0C                     
  6243                           ;RS232.c: 208:     printf("Clearing EEPROM from Address: 0x%04x for num bytes: %i \r\n",
      +                           StartAdd, NumBytes);
  6244  003F0C  0E83               	movlw	low STR_94
  6245  003F0E  0100               	movlb	0	; () banked
  6246  003F10  6F7D               	movwf	printf@fmt& (0+255),b
  6247  003F12  0EF7               	movlw	high STR_94
  6248  003F14  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6249  003F16  C08D  F07F         	movff	ClearEEAddRange@StartAdd,?_printf+2
  6250  003F1A  C08E  F080         	movff	ClearEEAddRange@StartAdd+1,?_printf+3
  6251  003F1E  C08F  F081         	movff	ClearEEAddRange@NumBytes,?_printf+4
  6252  003F22  C090  F082         	movff	ClearEEAddRange@NumBytes+1,?_printf+5
  6253  003F26  ECAC  F022         	call	_printf	;wreg free
  6254  003F2A                     
  6255                           ;RS232.c: 210:     for(int i = 0; i<NumBytes; i++){
  6256  003F2A  0E00               	movlw	0
  6257  003F2C  6E56               	movwf	(ClearEEAddRange@i+1)^0,c
  6258  003F2E  0E00               	movlw	0
  6259  003F30  6E55               	movwf	ClearEEAddRange@i^0,c
  6260  003F32  EFA7  F01F         	goto	l7218
  6261  003F36                     l7214:
  6262                           
  6263                           ; BSR set to: 0
  6264                           ;RS232.c: 211:         DATAEE_WriteByte(StartAdd +i, 0xFF);
  6265  003F36  518D               	movf	ClearEEAddRange@StartAdd& (0+255),w,b
  6266  003F38  2455               	addwf	ClearEEAddRange@i^0,w,c
  6267  003F3A  6E05               	movwf	DATAEE_WriteByte@bAdd^0,c
  6268  003F3C  518E               	movf	(ClearEEAddRange@StartAdd+1)& (0+255),w,b
  6269  003F3E  2056               	addwfc	(ClearEEAddRange@i+1)^0,w,c
  6270  003F40  6E06               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
  6271  003F42  0EFF               	movlw	255
  6272  003F44  6E07               	movwf	DATAEE_WriteByte@bData^0,c
  6273  003F46  ECF4  F020         	call	_DATAEE_WriteByte	;wreg free
  6274  003F4A                     
  6275                           ;RS232.c: 212:     }
  6276  003F4A  4A55               	infsnz	ClearEEAddRange@i^0,f,c
  6277  003F4C  2A56               	incf	(ClearEEAddRange@i+1)^0,f,c
  6278  003F4E                     l7218:
  6279  003F4E  0100               	movlb	0	; () banked
  6280  003F50  518F               	movf	ClearEEAddRange@NumBytes& (0+255),w,b
  6281  003F52  5C55               	subwf	ClearEEAddRange@i^0,w,c
  6282  003F54  5190               	movf	(ClearEEAddRange@NumBytes+1)& (0+255),w,b
  6283  003F56  5856               	subwfb	(ClearEEAddRange@i+1)^0,w,c
  6284  003F58  A0D8               	btfss	status,0,c
  6285  003F5A  EFB1  F01F         	goto	u7221
  6286  003F5E  EFB3  F01F         	goto	u7220
  6287  003F62                     u7221:
  6288  003F62  EF9B  F01F         	goto	l7214
  6289  003F66                     u7220:
  6290  003F66                     
  6291                           ; BSR set to: 0
  6292  003F66  0012               	return		;funcret
  6293  003F68                     __end_of_ClearEEAddRange:
  6294                           	opt callstack 0
  6295                           
  6296 ;; *************** function _DATAEE_WriteByte *****************
  6297 ;; Defined at:
  6298 ;;		line 165 in file "mcc_generated_files/memory.c"
  6299 ;; Parameters:    Size  Location     Type
  6300 ;;  bAdd            2    4[COMRAM] unsigned short 
  6301 ;;  bData           1    6[COMRAM] unsigned char 
  6302 ;; Auto vars:     Size  Location     Type
  6303 ;;  GIEBitValue     1    7[COMRAM] unsigned char 
  6304 ;; Return value:  Size  Location     Type
  6305 ;;                  1    wreg      void 
  6306 ;; Registers used:
  6307 ;;		wreg, status,2, status,0
  6308 ;; Tracked objects:
  6309 ;;		On entry : 0/0
  6310 ;;		On exit  : 0/0
  6311 ;;		Unchanged: 0/0
  6312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6313 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6314 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6316 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6317 ;;Total ram usage:        4 bytes
  6318 ;; Hardware stack levels used:    1
  6319 ;; Hardware stack levels required when called:    4
  6320 ;; This function calls:
  6321 ;;		Nothing
  6322 ;; This function is called by:
  6323 ;;		_ClearEEAddRange
  6324 ;;		_SaveCardDat
  6325 ;; This function uses a non-reentrant model
  6326 ;;
  6327                           
  6328                           	psect	text11
  6329  0041E8                     __ptext11:
  6330                           	opt callstack 0
  6331  0041E8                     _DATAEE_WriteByte:
  6332                           	opt callstack 24
  6333  0041E8                     
  6334                           ;mcc_generated_files/memory.c: 165: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 166: {;mcc_generated_files/memory.c: 167:  uint8_t GIEBitV
      +                          alue = INTCONbits.GIE;
  6335  0041E8  0E00               	movlw	0
  6336  0041EA  BEF2               	btfsc	242,7,c	;volatile
  6337  0041EC  0E01               	movlw	1
  6338  0041EE  6E08               	movwf	DATAEE_WriteByte@GIEBitValue^0,c
  6339  0041F0                     
  6340                           ;mcc_generated_files/memory.c: 169:     NVMADRH = ((bAdd >> 8) & 0x03);
  6341  0041F0  5006               	movf	(DATAEE_WriteByte@bAdd+1)^0,w,c
  6342  0041F2  0B03               	andlw	3
  6343  0041F4  6E7F               	movwf	127,c	;volatile
  6344  0041F6                     
  6345                           ;mcc_generated_files/memory.c: 170:     NVMADRL = (bAdd & 0xFF);
  6346  0041F6  C005  FF7E         	movff	DATAEE_WriteByte@bAdd,3966	;volatile
  6347  0041FA                     
  6348                           ;mcc_generated_files/memory.c: 171:     NVMDAT = bData;
  6349  0041FA  C007  FF80         	movff	DATAEE_WriteByte@bData,3968	;volatile
  6350  0041FE                     
  6351                           ;mcc_generated_files/memory.c: 172:     NVMCON1bits.NVMREG = 0;
  6352  0041FE  0E3F               	movlw	-193
  6353  004200  1681               	andwf	129,f,c	;volsfr
  6354  004202                     
  6355                           ;mcc_generated_files/memory.c: 173:     NVMCON1bits.WREN = 1;
  6356  004202  8481               	bsf	129,2,c	;volsfr
  6357  004204                     
  6358                           ;mcc_generated_files/memory.c: 174:  INTCONbits.GIE = 0;
  6359  004204  9EF2               	bcf	242,7,c	;volatile
  6360  004206                     
  6361                           ;mcc_generated_files/memory.c: 175:     NVMCON2 = 0x55;
  6362  004206  0E55               	movlw	85
  6363  004208  6E82               	movwf	130,c	;volsfr
  6364  00420A                     
  6365                           ;mcc_generated_files/memory.c: 176:     NVMCON2 = 0xAA;
  6366  00420A  0EAA               	movlw	170
  6367  00420C  6E82               	movwf	130,c	;volsfr
  6368  00420E                     
  6369                           ;mcc_generated_files/memory.c: 177:     NVMCON1bits.WR = 1;
  6370  00420E  8281               	bsf	129,1,c	;volsfr
  6371  004210                     l216:
  6372                           
  6373                           ;mcc_generated_files/memory.c: 179:     while (NVMCON1bits.WR)
  6374  004210  B281               	btfsc	129,1,c	;volsfr
  6375  004212  EF0D  F021         	goto	u6811
  6376  004216  EF0F  F021         	goto	u6810
  6377  00421A                     u6811:
  6378  00421A  EF08  F021         	goto	l216
  6379  00421E                     u6810:
  6380  00421E                     
  6381                           ;mcc_generated_files/memory.c: 183:     NVMCON1bits.WREN = 0;
  6382  00421E  9481               	bcf	129,2,c	;volsfr
  6383                           
  6384                           ;mcc_generated_files/memory.c: 184:  INTCONbits.GIE = GIEBitValue;
  6385  004220  B008               	btfsc	DATAEE_WriteByte@GIEBitValue^0,0,c
  6386  004222  D002               	bra	u6825
  6387  004224  9EF2               	bcf	242,7,c	;volatile
  6388  004226  D001               	bra	u6826
  6389  004228                     u6825:
  6390  004228  8EF2               	bsf	242,7,c	;volatile
  6391  00422A                     u6826:
  6392  00422A  0012               	return		;funcret
  6393  00422C                     __end_of_DATAEE_WriteByte:
  6394                           	opt callstack 0
  6395                           
  6396 ;; *************** function _InitialiseString *****************
  6397 ;; Defined at:
  6398 ;;		line 59 in file "RS232.c"
  6399 ;; Parameters:    Size  Location     Type
  6400 ;;  Partial         1    wreg     _Bool 
  6401 ;; Auto vars:     Size  Location     Type
  6402 ;;  Partial         1   94[BANK0 ] _Bool 
  6403 ;;  convertedVal    2   95[BANK0 ] unsigned short 
  6404 ;;  i               2  105[BANK0 ] int 
  6405 ;;  i               2  103[BANK0 ] int 
  6406 ;;  PartNum        19   45[BANK0 ] unsigned char [19]
  6407 ;;  SerialNum      11   83[BANK0 ] unsigned char [11]
  6408 ;;  Date           11   64[BANK0 ] unsigned char [11]
  6409 ;;  Time            8   75[BANK0 ] unsigned char [8]
  6410 ;;  RevNum          2   97[BANK0 ] unsigned char [2]
  6411 ;;  j               2  101[BANK0 ] int 
  6412 ;;  readDataEven    1  100[BANK0 ] unsigned char 
  6413 ;;  readDataOdd     1   99[BANK0 ] unsigned char 
  6414 ;; Return value:  Size  Location     Type
  6415 ;;                  1    wreg      void 
  6416 ;; Registers used:
  6417 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6418 ;; Tracked objects:
  6419 ;;		On entry : 0/0
  6420 ;;		On exit  : 0/0
  6421 ;;		Unchanged: 0/0
  6422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6424 ;;      Locals:         0      62       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6425 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6426 ;;      Totals:         2      62       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6427 ;;Total ram usage:       64 bytes
  6428 ;; Hardware stack levels used:    1
  6429 ;; Hardware stack levels required when called:   13
  6430 ;; This function calls:
  6431 ;;		_ADCC_GetSingleConversion
  6432 ;;		_CardConfigIni
  6433 ;;		_printf
  6434 ;; This function is called by:
  6435 ;;		_main
  6436 ;;		_ValidateCmd
  6437 ;; This function uses a non-reentrant model
  6438 ;;
  6439                           
  6440                           	psect	text12
  6441  000E82                     __ptext12:
  6442                           	opt callstack 0
  6443  000E82                     _InitialiseString:
  6444                           	opt callstack 16
  6445                           
  6446                           ;incstack = 0
  6447                           ;InitialiseString@Partial stored from wreg
  6448  000E82  0100               	movlb	0	; () banked
  6449  000E84  6FBE               	movwf	InitialiseString@Partial& (0+255),b
  6450  000E86                     
  6451                           ;RS232.c: 61:     char readDataOdd, readDataEven;;RS232.c: 63:     char SerialNum[11] = 
      +                          { '\0' };
  6452  000E86  EE20  F0B3         	lfsr	2,InitialiseString@SerialNum
  6453  000E8A  0E0A               	movlw	10
  6454  000E8C                     u7301:
  6455  000E8C  6ADE               	clrf	postinc2,c
  6456  000E8E  06E8               	decf	wreg,f,c
  6457  000E90  E2FD               	bc	u7301
  6458  000E92                     
  6459                           ;RS232.c: 65:     CardConfigIni("Serial", SerialNum,0x0300,5);
  6460  000E92  0ED7               	movlw	low STR_55
  6461  000E94  6E0A               	movwf	CardConfigIni@Name^0,c
  6462  000E96  0EFF               	movlw	high STR_55
  6463  000E98  6E0B               	movwf	(CardConfigIni@Name+1)^0,c
  6464  000E9A  0EB3               	movlw	low InitialiseString@SerialNum
  6465  000E9C  6E0C               	movwf	CardConfigIni@RetNum^0,c
  6466  000E9E  0E00               	movlw	high InitialiseString@SerialNum
  6467  000EA0  6E0D               	movwf	(CardConfigIni@RetNum+1)^0,c
  6468  000EA2  0E03               	movlw	3
  6469  000EA4  6E0F               	movwf	(CardConfigIni@dataeeAddrWrk+1)^0,c
  6470  000EA6  0E00               	movlw	0
  6471  000EA8  6E0E               	movwf	CardConfigIni@dataeeAddrWrk^0,c
  6472  000EAA  0E00               	movlw	0
  6473  000EAC  6E11               	movwf	(CardConfigIni@NumBytes+1)^0,c
  6474  000EAE  0E05               	movlw	5
  6475  000EB0  6E10               	movwf	CardConfigIni@NumBytes^0,c
  6476  000EB2  EC5E  F00F         	call	_CardConfigIni	;wreg free
  6477  000EB6                     
  6478                           ;RS232.c: 67:     char PartNum[19] = { '\0' };
  6479  000EB6  EE20  F08D         	lfsr	2,InitialiseString@PartNum
  6480  000EBA  0E12               	movlw	18
  6481  000EBC                     u7311:
  6482  000EBC  6ADE               	clrf	postinc2,c
  6483  000EBE  06E8               	decf	wreg,f,c
  6484  000EC0  E2FD               	bc	u7311
  6485                           
  6486                           ;RS232.c: 68:     CardConfigIni("Part", PartNum,0x0100,8);
  6487  000EC2  0EEB               	movlw	low STR_57
  6488  000EC4  6E0A               	movwf	CardConfigIni@Name^0,c
  6489  000EC6  0EFF               	movlw	high STR_57
  6490  000EC8  6E0B               	movwf	(CardConfigIni@Name+1)^0,c
  6491  000ECA  0E8D               	movlw	low InitialiseString@PartNum
  6492  000ECC  6E0C               	movwf	CardConfigIni@RetNum^0,c
  6493  000ECE  0E00               	movlw	high InitialiseString@PartNum
  6494  000ED0  6E0D               	movwf	(CardConfigIni@RetNum+1)^0,c
  6495  000ED2  0E01               	movlw	1
  6496  000ED4  6E0F               	movwf	(CardConfigIni@dataeeAddrWrk+1)^0,c
  6497  000ED6  0E00               	movlw	0
  6498  000ED8  6E0E               	movwf	CardConfigIni@dataeeAddrWrk^0,c
  6499  000EDA  0E00               	movlw	0
  6500  000EDC  6E11               	movwf	(CardConfigIni@NumBytes+1)^0,c
  6501  000EDE  0E08               	movlw	8
  6502  000EE0  6E10               	movwf	CardConfigIni@NumBytes^0,c
  6503  000EE2  EC5E  F00F         	call	_CardConfigIni	;wreg free
  6504  000EE6                     
  6505                           ;RS232.c: 70:     char RevNum[2] = { '\0' };
  6506  000EE6  0E00               	movlw	0
  6507  000EE8  0100               	movlb	0	; () banked
  6508  000EEA  6FC2               	movwf	(InitialiseString@RevNum+1)& (0+255),b
  6509  000EEC  0E00               	movlw	0
  6510  000EEE  6FC1               	movwf	InitialiseString@RevNum& (0+255),b
  6511  000EF0                     
  6512                           ; BSR set to: 0
  6513                           ;RS232.c: 71:     CardConfigIni("Rev", RevNum,0x0200,1);
  6514  000EF0  0EF5               	movlw	low STR_59
  6515  000EF2  6E0A               	movwf	CardConfigIni@Name^0,c
  6516  000EF4  0EFF               	movlw	high STR_59
  6517  000EF6  6E0B               	movwf	(CardConfigIni@Name+1)^0,c
  6518  000EF8  0EC1               	movlw	low InitialiseString@RevNum
  6519  000EFA  6E0C               	movwf	CardConfigIni@RetNum^0,c
  6520  000EFC  0E00               	movlw	high InitialiseString@RevNum
  6521  000EFE  6E0D               	movwf	(CardConfigIni@RetNum+1)^0,c
  6522  000F00  0E02               	movlw	2
  6523  000F02  6E0F               	movwf	(CardConfigIni@dataeeAddrWrk+1)^0,c
  6524  000F04  0E00               	movlw	0
  6525  000F06  6E0E               	movwf	CardConfigIni@dataeeAddrWrk^0,c
  6526  000F08  0E00               	movlw	0
  6527  000F0A  6E11               	movwf	(CardConfigIni@NumBytes+1)^0,c
  6528  000F0C  0E01               	movlw	1
  6529  000F0E  6E10               	movwf	CardConfigIni@NumBytes^0,c
  6530  000F10  EC5E  F00F         	call	_CardConfigIni	;wreg free
  6531  000F14                     
  6532                           ;RS232.c: 75:     printf("\r\nDan and Sam's Modbus GPIO Expansion\r\n");
  6533  000F14  0ED3               	movlw	low STR_64
  6534  000F16  0100               	movlb	0	; () banked
  6535  000F18  6F7D               	movwf	printf@fmt& (0+255),b
  6536  000F1A  0EF9               	movlw	high STR_64
  6537  000F1C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6538  000F1E  ECAC  F022         	call	_printf	;wreg free
  6539  000F22                     
  6540                           ;RS232.c: 79:     printf("Card Ser No. %s \r\n",SerialNum);
  6541  000F22  0E13               	movlw	low STR_65
  6542  000F24  0100               	movlb	0	; () banked
  6543  000F26  6F7D               	movwf	printf@fmt& (0+255),b
  6544  000F28  0EFF               	movlw	high STR_65
  6545  000F2A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6546  000F2C  0EB3               	movlw	low InitialiseString@SerialNum
  6547  000F2E  6F7F               	movwf	(?_printf+2)& (0+255),b
  6548  000F30  0E00               	movlw	high InitialiseString@SerialNum
  6549  000F32  6F80               	movwf	(?_printf+3)& (0+255),b
  6550  000F34  ECAC  F022         	call	_printf	;wreg free
  6551  000F38                     
  6552                           ;RS232.c: 80:     printf("Card Part No. %s \r\n",PartNum);
  6553  000F38  0EFF               	movlw	low STR_66
  6554  000F3A  0100               	movlb	0	; () banked
  6555  000F3C  6F7D               	movwf	printf@fmt& (0+255),b
  6556  000F3E  0EFE               	movlw	high STR_66
  6557  000F40  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6558  000F42  0E8D               	movlw	low InitialiseString@PartNum
  6559  000F44  6F7F               	movwf	(?_printf+2)& (0+255),b
  6560  000F46  0E00               	movlw	high InitialiseString@PartNum
  6561  000F48  6F80               	movwf	(?_printf+3)& (0+255),b
  6562  000F4A  ECAC  F022         	call	_printf	;wreg free
  6563  000F4E                     
  6564                           ;RS232.c: 81:     printf("Card Revision. %s \r\n",RevNum);
  6565  000F4E  0ED5               	movlw	low STR_67
  6566  000F50  0100               	movlb	0	; () banked
  6567  000F52  6F7D               	movwf	printf@fmt& (0+255),b
  6568  000F54  0EFE               	movlw	high STR_67
  6569  000F56  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6570  000F58  0EC1               	movlw	low InitialiseString@RevNum
  6571  000F5A  6F7F               	movwf	(?_printf+2)& (0+255),b
  6572  000F5C  0E00               	movlw	high InitialiseString@RevNum
  6573  000F5E  6F80               	movwf	(?_printf+3)& (0+255),b
  6574  000F60  ECAC  F022         	call	_printf	;wreg free
  6575  000F64                     
  6576                           ;RS232.c: 82:     printf("Card Address. 0x05 \r\n");
  6577  000F64  0E7D               	movlw	low STR_68
  6578  000F66  0100               	movlb	0	; () banked
  6579  000F68  6F7D               	movwf	printf@fmt& (0+255),b
  6580  000F6A  0EFE               	movlw	high STR_68
  6581  000F6C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6582  000F6E  ECAC  F022         	call	_printf	;wreg free
  6583  000F72                     
  6584                           ;RS232.c: 83:     printf("Compiled on %s at %s by XC8 version %u\r\n\n",
  6585  000F72  0E57               	movlw	low STR_69
  6586  000F74  0100               	movlb	0	; () banked
  6587  000F76  6F7D               	movwf	printf@fmt& (0+255),b
  6588  000F78  0EF9               	movlw	high STR_69
  6589  000F7A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6590  000F7C  0EC2               	movlw	low STR_70
  6591  000F7E  6F7F               	movwf	(?_printf+2)& (0+255),b
  6592  000F80  0EFF               	movlw	high STR_70
  6593  000F82  6F80               	movwf	(?_printf+3)& (0+255),b
  6594  000F84  0ECE               	movlw	low STR_71
  6595  000F86  6F81               	movwf	(?_printf+4)& (0+255),b
  6596  000F88  0EFF               	movlw	high STR_71
  6597  000F8A  6F82               	movwf	(?_printf+5)& (0+255),b
  6598  000F8C  0E08               	movlw	8
  6599  000F8E  6F84               	movwf	(?_printf+7)& (0+255),b
  6600  000F90  0E34               	movlw	52
  6601  000F92  6F83               	movwf	(?_printf+6)& (0+255),b
  6602  000F94  ECAC  F022         	call	_printf	;wreg free
  6603                           
  6604                           ;RS232.c: 86:     int j = 0;
  6605  000F98  0E00               	movlw	0
  6606  000F9A  0100               	movlb	0	; () banked
  6607  000F9C  6FC6               	movwf	(InitialiseString@j+1)& (0+255),b
  6608  000F9E  0E00               	movlw	0
  6609  000FA0  6FC5               	movwf	InitialiseString@j& (0+255),b
  6610  000FA2                     
  6611                           ; BSR set to: 0
  6612                           ;RS232.c: 89:     char Date[11] = "Mar 25 2021";
  6613  000FA2  EE22  F04C         	lfsr	2,InitialiseString@F10763
  6614  000FA6  EE10  F0A0         	lfsr	1,InitialiseString@Date
  6615  000FAA  0E0A               	movlw	10
  6616  000FAC                     u7321:
  6617  000FAC  CFDB FFE3          	movff	plusw2,plusw1
  6618  000FB0  06E8               	decf	wreg,f,c
  6619  000FB2  E2FC               	bc	u7321
  6620  000FB4                     
  6621                           ; BSR set to: 0
  6622                           ;RS232.c: 90:     for(int i=0; i<12; i = i+2){
  6623  000FB4  0E00               	movlw	0
  6624  000FB6  6FC8               	movwf	(InitialiseString@i+1)& (0+255),b
  6625  000FB8  0E00               	movlw	0
  6626  000FBA  6FC7               	movwf	InitialiseString@i& (0+255),b
  6627  000FBC                     l7374:
  6628                           
  6629                           ; BSR set to: 0
  6630                           ;RS232.c: 91:         readDataOdd = Date[i];
  6631  000FBC  0EA0               	movlw	low InitialiseString@Date
  6632  000FBE  25C7               	addwf	InitialiseString@i& (0+255),w,b
  6633  000FC0  6ED9               	movwf	fsr2l,c
  6634  000FC2  0E00               	movlw	high InitialiseString@Date
  6635  000FC4  21C8               	addwfc	(InitialiseString@i+1)& (0+255),w,b
  6636  000FC6  6EDA               	movwf	fsr2h,c
  6637  000FC8  50DF               	movf	indf2,w,c
  6638  000FCA  6FC3               	movwf	InitialiseString@readDataOdd& (0+255),b
  6639                           
  6640                           ;RS232.c: 92:         readDataEven = Date[i +1];
  6641  000FCC  0E01               	movlw	1
  6642  000FCE  25C7               	addwf	InitialiseString@i& (0+255),w,b
  6643  000FD0  6E55               	movwf	??_InitialiseString^0,c
  6644  000FD2  0E00               	movlw	0
  6645  000FD4  21C8               	addwfc	(InitialiseString@i+1)& (0+255),w,b
  6646  000FD6  6E56               	movwf	(??_InitialiseString+1)^0,c
  6647  000FD8  0EA0               	movlw	low InitialiseString@Date
  6648  000FDA  2455               	addwf	??_InitialiseString^0,w,c
  6649  000FDC  6ED9               	movwf	fsr2l,c
  6650  000FDE  0E00               	movlw	high InitialiseString@Date
  6651  000FE0  2056               	addwfc	(??_InitialiseString+1)^0,w,c
  6652  000FE2  6EDA               	movwf	fsr2h,c
  6653  000FE4  50DF               	movf	indf2,w,c
  6654  000FE6  6FC4               	movwf	InitialiseString@readDataEven& (0+255),b
  6655                           
  6656                           ;RS232.c: 93:         MB304xx[j] = readDataOdd *256 + readDataEven;
  6657  000FE8  51C4               	movf	InitialiseString@readDataEven& (0+255),w,b
  6658  000FEA  C0C3  F055         	movff	InitialiseString@readDataOdd,??_InitialiseString
  6659  000FEE  6A56               	clrf	(??_InitialiseString+1)^0,c
  6660  000FF0  C055  F056         	movff	??_InitialiseString,??_InitialiseString+1
  6661  000FF4  6A55               	clrf	??_InitialiseString^0,c
  6662  000FF6  2655               	addwf	??_InitialiseString^0,f,c
  6663  000FF8  0E00               	movlw	0
  6664  000FFA  2256               	addwfc	(??_InitialiseString+1)^0,f,c
  6665  000FFC  90D8               	bcf	status,0,c
  6666  000FFE  35C5               	rlcf	InitialiseString@j& (0+255),w,b
  6667  001000  6ED9               	movwf	fsr2l,c
  6668  001002  35C6               	rlcf	(InitialiseString@j+1)& (0+255),w,b
  6669  001004  6EDA               	movwf	fsr2h,c
  6670  001006  0E72               	movlw	low _MB304xx
  6671  001008  26D9               	addwf	fsr2l,f,c
  6672  00100A  0E01               	movlw	high _MB304xx
  6673  00100C  22DA               	addwfc	fsr2h,f,c
  6674  00100E  C055  FFDE         	movff	??_InitialiseString,postinc2
  6675  001012  C056  FFDD         	movff	??_InitialiseString+1,postdec2
  6676  001016                     
  6677                           ; BSR set to: 0
  6678                           ;RS232.c: 94:         j++;
  6679  001016  4BC5               	infsnz	InitialiseString@j& (0+255),f,b
  6680  001018  2BC6               	incf	(InitialiseString@j+1)& (0+255),f,b
  6681  00101A                     
  6682                           ; BSR set to: 0
  6683                           ;RS232.c: 95:     }
  6684  00101A  0E02               	movlw	2
  6685  00101C  25C7               	addwf	InitialiseString@i& (0+255),w,b
  6686  00101E  6FC7               	movwf	InitialiseString@i& (0+255),b
  6687  001020  0E00               	movlw	0
  6688  001022  21C8               	addwfc	(InitialiseString@i+1)& (0+255),w,b
  6689  001024  6FC8               	movwf	(InitialiseString@i+1)& (0+255),b
  6690  001026                     
  6691                           ; BSR set to: 0
  6692  001026  BFC8               	btfsc	(InitialiseString@i+1)& (0+255),7,b
  6693  001028  EF1F  F008         	goto	u7331
  6694  00102C  51C8               	movf	(InitialiseString@i+1)& (0+255),w,b
  6695  00102E  E109               	bnz	u7330
  6696  001030  0E0C               	movlw	12
  6697  001032  5DC7               	subwf	InitialiseString@i& (0+255),w,b
  6698  001034  A0D8               	btfss	status,0,c
  6699  001036  EF1F  F008         	goto	u7331
  6700  00103A  EF21  F008         	goto	u7330
  6701  00103E                     u7331:
  6702  00103E  EFDE  F007         	goto	l7374
  6703  001042                     u7330:
  6704  001042                     
  6705                           ; BSR set to: 0
  6706                           ;RS232.c: 98:     j = 0;
  6707  001042  0E00               	movlw	0
  6708  001044  6FC6               	movwf	(InitialiseString@j+1)& (0+255),b
  6709  001046  0E00               	movlw	0
  6710  001048  6FC5               	movwf	InitialiseString@j& (0+255),b
  6711  00104A                     
  6712                           ; BSR set to: 0
  6713                           ;RS232.c: 99:     char Time[8] = "00:23:59";
  6714  00104A  EE21  F07E         	lfsr	2,InitialiseString@F10766
  6715  00104E  EE10  F0AB         	lfsr	1,InitialiseString@Time
  6716  001052  0E07               	movlw	7
  6717  001054                     u7341:
  6718  001054  CFDB FFE3          	movff	plusw2,plusw1
  6719  001058  06E8               	decf	wreg,f,c
  6720  00105A  E2FC               	bc	u7341
  6721  00105C                     
  6722                           ; BSR set to: 0
  6723                           ;RS232.c: 100:     for(int i=0; i<8; i = i+2){
  6724  00105C  0E00               	movlw	0
  6725  00105E  6FCA               	movwf	(InitialiseString@i_1472+1)& (0+255),b
  6726  001060  0E00               	movlw	0
  6727  001062  6FC9               	movwf	InitialiseString@i_1472& (0+255),b
  6728  001064                     l7392:
  6729                           
  6730                           ; BSR set to: 0
  6731                           ;RS232.c: 101:         readDataOdd = Time[i];
  6732  001064  0EAB               	movlw	low InitialiseString@Time
  6733  001066  25C9               	addwf	InitialiseString@i_1472& (0+255),w,b
  6734  001068  6ED9               	movwf	fsr2l,c
  6735  00106A  0E00               	movlw	high InitialiseString@Time
  6736  00106C  21CA               	addwfc	(InitialiseString@i_1472+1)& (0+255),w,b
  6737  00106E  6EDA               	movwf	fsr2h,c
  6738  001070  50DF               	movf	indf2,w,c
  6739  001072  6FC3               	movwf	InitialiseString@readDataOdd& (0+255),b
  6740                           
  6741                           ;RS232.c: 102:         readDataEven = Time[i +1];
  6742  001074  0E01               	movlw	1
  6743  001076  25C9               	addwf	InitialiseString@i_1472& (0+255),w,b
  6744  001078  6E55               	movwf	??_InitialiseString^0,c
  6745  00107A  0E00               	movlw	0
  6746  00107C  21CA               	addwfc	(InitialiseString@i_1472+1)& (0+255),w,b
  6747  00107E  6E56               	movwf	(??_InitialiseString+1)^0,c
  6748  001080  0EAB               	movlw	low InitialiseString@Time
  6749  001082  2455               	addwf	??_InitialiseString^0,w,c
  6750  001084  6ED9               	movwf	fsr2l,c
  6751  001086  0E00               	movlw	high InitialiseString@Time
  6752  001088  2056               	addwfc	(??_InitialiseString+1)^0,w,c
  6753  00108A  6EDA               	movwf	fsr2h,c
  6754  00108C  50DF               	movf	indf2,w,c
  6755  00108E  6FC4               	movwf	InitialiseString@readDataEven& (0+255),b
  6756                           
  6757                           ;RS232.c: 103:         MB305xx[j] = readDataOdd *256 + readDataEven;
  6758  001090  51C4               	movf	InitialiseString@readDataEven& (0+255),w,b
  6759  001092  C0C3  F055         	movff	InitialiseString@readDataOdd,??_InitialiseString
  6760  001096  6A56               	clrf	(??_InitialiseString+1)^0,c
  6761  001098  C055  F056         	movff	??_InitialiseString,??_InitialiseString+1
  6762  00109C  6A55               	clrf	??_InitialiseString^0,c
  6763  00109E  2655               	addwf	??_InitialiseString^0,f,c
  6764  0010A0  0E00               	movlw	0
  6765  0010A2  2256               	addwfc	(??_InitialiseString+1)^0,f,c
  6766  0010A4  90D8               	bcf	status,0,c
  6767  0010A6  35C5               	rlcf	InitialiseString@j& (0+255),w,b
  6768  0010A8  6ED9               	movwf	fsr2l,c
  6769  0010AA  35C6               	rlcf	(InitialiseString@j+1)& (0+255),w,b
  6770  0010AC  6EDA               	movwf	fsr2h,c
  6771  0010AE  0E3C               	movlw	low _MB305xx
  6772  0010B0  26D9               	addwf	fsr2l,f,c
  6773  0010B2  0E02               	movlw	high _MB305xx
  6774  0010B4  22DA               	addwfc	fsr2h,f,c
  6775  0010B6  C055  FFDE         	movff	??_InitialiseString,postinc2
  6776  0010BA  C056  FFDD         	movff	??_InitialiseString+1,postdec2
  6777  0010BE                     
  6778                           ; BSR set to: 0
  6779                           ;RS232.c: 104:         j++;
  6780  0010BE  4BC5               	infsnz	InitialiseString@j& (0+255),f,b
  6781  0010C0  2BC6               	incf	(InitialiseString@j+1)& (0+255),f,b
  6782  0010C2                     
  6783                           ; BSR set to: 0
  6784                           ;RS232.c: 105:     }
  6785  0010C2  0E02               	movlw	2
  6786  0010C4  25C9               	addwf	InitialiseString@i_1472& (0+255),w,b
  6787  0010C6  6FC9               	movwf	InitialiseString@i_1472& (0+255),b
  6788  0010C8  0E00               	movlw	0
  6789  0010CA  21CA               	addwfc	(InitialiseString@i_1472+1)& (0+255),w,b
  6790  0010CC  6FCA               	movwf	(InitialiseString@i_1472+1)& (0+255),b
  6791  0010CE                     
  6792                           ; BSR set to: 0
  6793  0010CE  BFCA               	btfsc	(InitialiseString@i_1472+1)& (0+255),7,b
  6794  0010D0  EF73  F008         	goto	u7351
  6795  0010D4  51CA               	movf	(InitialiseString@i_1472+1)& (0+255),w,b
  6796  0010D6  E109               	bnz	u7350
  6797  0010D8  0E08               	movlw	8
  6798  0010DA  5DC9               	subwf	InitialiseString@i_1472& (0+255),w,b
  6799  0010DC  A0D8               	btfss	status,0,c
  6800  0010DE  EF73  F008         	goto	u7351
  6801  0010E2  EF75  F008         	goto	u7350
  6802  0010E6                     u7351:
  6803  0010E6  EF32  F008         	goto	l7392
  6804  0010EA                     u7350:
  6805  0010EA                     
  6806                           ; BSR set to: 0
  6807                           ;RS232.c: 108:     if(Partial != 1){
  6808  0010EA  05BE               	decf	InitialiseString@Partial& (0+255),w,b
  6809  0010EC  B4D8               	btfsc	status,2,c
  6810  0010EE  EF7B  F008         	goto	u7361
  6811  0010F2  EF7D  F008         	goto	u7360
  6812  0010F6                     u7361:
  6813  0010F6  EF0C  F009         	goto	l931
  6814  0010FA                     u7360:
  6815  0010FA                     
  6816                           ; BSR set to: 0
  6817                           ;RS232.c: 109:         printf("Initalisation Complete - Ready\r\n\n");
  6818  0010FA  0EDB               	movlw	low STR_72
  6819  0010FC  6F7D               	movwf	printf@fmt& (0+255),b
  6820  0010FE  0EFB               	movlw	high STR_72
  6821  001100  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6822  001102  ECAC  F022         	call	_printf	;wreg free
  6823                           
  6824                           ;RS232.c: 110:         printf("Modbus Function Codes Supported:\r\n\n");
  6825  001106  0E4C               	movlw	low STR_73
  6826  001108  0100               	movlb	0	; () banked
  6827  00110A  6F7D               	movwf	printf@fmt& (0+255),b
  6828  00110C  0EFB               	movlw	high STR_73
  6829  00110E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6830  001110  ECAC  F022         	call	_printf	;wreg free
  6831                           
  6832                           ;RS232.c: 111:         printf("   0x03 - Read Multiple 16bit Registers\r\n");
  6833  001114  0E81               	movlw	low STR_74
  6834  001116  0100               	movlb	0	; () banked
  6835  001118  6F7D               	movwf	printf@fmt& (0+255),b
  6836  00111A  0EF9               	movlw	high STR_74
  6837  00111C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6838  00111E  ECAC  F022         	call	_printf	;wreg free
  6839                           
  6840                           ;RS232.c: 112:         printf("      Add 0x0000 to 0x0031 - 32x Circuit Get Status (lowe
      +                          r 8bits only)\r\n");
  6841  001122  0E76               	movlw	low STR_75
  6842  001124  0100               	movlb	0	; () banked
  6843  001126  6F7D               	movwf	printf@fmt& (0+255),b
  6844  001128  0EF6               	movlw	high STR_75
  6845  00112A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6846  00112C  ECAC  F022         	call	_printf	;wreg free
  6847                           
  6848                           ;RS232.c: 113:         printf("      Add 0x0100 to 0x0108 - Part Number\r\n");
  6849  001130  0E2C               	movlw	low STR_76
  6850  001132  0100               	movlb	0	; () banked
  6851  001134  6F7D               	movwf	printf@fmt& (0+255),b
  6852  001136  0EF9               	movlw	high STR_76
  6853  001138  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6854  00113A  ECAC  F022         	call	_printf	;wreg free
  6855                           
  6856                           ;RS232.c: 114:         printf("      Add 0x0200 - Revision\r\n");
  6857  00113E  0E00               	movlw	low STR_77
  6858  001140  0100               	movlb	0	; () banked
  6859  001142  6F7D               	movwf	printf@fmt& (0+255),b
  6860  001144  0EFD               	movlw	high STR_77
  6861  001146  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6862  001148  ECAC  F022         	call	_printf	;wreg free
  6863                           
  6864                           ;RS232.c: 115:         printf("      Add 0x0300 to 0x0304 - Revision\r\n");
  6865  00114C  0EAB               	movlw	low STR_78
  6866  00114E  0100               	movlb	0	; () banked
  6867  001150  6F7D               	movwf	printf@fmt& (0+255),b
  6868  001152  0EF9               	movlw	high STR_78
  6869  001154  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6870  001156  ECAC  F022         	call	_printf	;wreg free
  6871                           
  6872                           ;RS232.c: 116:         printf("      Add 0x0400 to 0x0405 - Compile Date (ASCII)\r\n");
  6873  00115A  0ECC               	movlw	low STR_79
  6874  00115C  0100               	movlb	0	; () banked
  6875  00115E  6F7D               	movwf	printf@fmt& (0+255),b
  6876  001160  0EF8               	movlw	high STR_79
  6877  001162  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6878  001164  ECAC  F022         	call	_printf	;wreg free
  6879                           
  6880                           ;RS232.c: 117:         printf("      Add 0x0500 to 0x0504 - Compile Time - (ASCII)\r\n")
      +                          ;
  6881  001168  0EF5               	movlw	low STR_80
  6882  00116A  0100               	movlb	0	; () banked
  6883  00116C  6F7D               	movwf	printf@fmt& (0+255),b
  6884  00116E  0EF7               	movlw	high STR_80
  6885  001170  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6886  001172  ECAC  F022         	call	_printf	;wreg free
  6887                           
  6888                           ;RS232.c: 118:         printf("      Add 0x0600 to 0x0602 - 3x Analogue Inputs (0x000 to
      +                           0x03ff)\r\n\n");
  6889  001176  0EBF               	movlw	low STR_81
  6890  001178  0100               	movlb	0	; () banked
  6891  00117A  6F7D               	movwf	printf@fmt& (0+255),b
  6892  00117C  0EF6               	movlw	high STR_81
  6893  00117E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6894  001180  ECAC  F022         	call	_printf	;wreg free
  6895                           
  6896                           ;RS232.c: 119:         printf("   0x10 - Write Multiple Registers (Max 32x 16bit)\r\n");
  6897  001184  0E97               	movlw	low STR_82
  6898  001186  0100               	movlb	0	; () banked
  6899  001188  6F7D               	movwf	printf@fmt& (0+255),b
  6900  00118A  0EF8               	movlw	high STR_82
  6901  00118C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6902  00118E  ECAC  F022         	call	_printf	;wreg free
  6903                           
  6904                           ;RS232.c: 120:         printf("      Add 0x0000 to 0x0031 - 32x Circuit Set Status  (low
      +                          er 8bits only)\r\n\n");
  6905  001192  0E2B               	movlw	low STR_83
  6906  001194  0100               	movlb	0	; () banked
  6907  001196  6F7D               	movwf	printf@fmt& (0+255),b
  6908  001198  0EF6               	movlw	high STR_83
  6909  00119A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6910  00119C  ECAC  F022         	call	_printf	;wreg free
  6911                           
  6912                           ;RS232.c: 122:         printf("Commands Supported:\r\n");
  6913  0011A0  0E93               	movlw	low STR_84
  6914  0011A2  0100               	movlb	0	; () banked
  6915  0011A4  6F7D               	movwf	printf@fmt& (0+255),b
  6916  0011A6  0EFE               	movlw	high STR_84
  6917  0011A8  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6918  0011AA  ECAC  F022         	call	_printf	;wreg free
  6919                           
  6920                           ;RS232.c: 123:         printf("   ? - Initalise and display card details\r\n");
  6921  0011AE  0E00               	movlw	low STR_85
  6922  0011B0  0100               	movlb	0	; () banked
  6923  0011B2  6F7D               	movwf	printf@fmt& (0+255),b
  6924  0011B4  0EF9               	movlw	high STR_85
  6925  0011B6  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6926  0011B8  ECAC  F022         	call	_printf	;wreg free
  6927                           
  6928                           ;RS232.c: 124:         printf("   serial - Set card serial number\r\n");
  6929  0011BC  0E93               	movlw	low STR_86
  6930  0011BE  0100               	movlb	0	; () banked
  6931  0011C0  6F7D               	movwf	printf@fmt& (0+255),b
  6932  0011C2  0EFA               	movlw	high STR_86
  6933  0011C4  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6934  0011C6  ECAC  F022         	call	_printf	;wreg free
  6935                           
  6936                           ;RS232.c: 125:         printf("   part - Set card part number\r\n");
  6937  0011CA  0E1F               	movlw	low STR_87
  6938  0011CC  0100               	movlb	0	; () banked
  6939  0011CE  6F7D               	movwf	printf@fmt& (0+255),b
  6940  0011D0  0EFC               	movlw	high STR_87
  6941  0011D2  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6942  0011D4  ECAC  F022         	call	_printf	;wreg free
  6943                           
  6944                           ;RS232.c: 126:         printf("   rev - Set card part number\r\n");
  6945  0011D8  0E61               	movlw	low STR_88
  6946  0011DA  0100               	movlb	0	; () banked
  6947  0011DC  6F7D               	movwf	printf@fmt& (0+255),b
  6948  0011DE  0EFC               	movlw	high STR_88
  6949  0011E0  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6950  0011E2  ECAC  F022         	call	_printf	;wreg free
  6951                           
  6952                           ;RS232.c: 128:         printf("\r\nEnter Command : ");
  6953  0011E6  0E26               	movlw	low STR_4
  6954  0011E8  0100               	movlb	0	; () banked
  6955  0011EA  6F7D               	movwf	printf@fmt& (0+255),b
  6956  0011EC  0EFF               	movlw	high STR_4
  6957  0011EE  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6958  0011F0  ECAC  F022         	call	_printf	;wreg free
  6959  0011F4                     
  6960                           ;RS232.c: 130:         uint16_t convertedValue;;RS232.c: 131:         convertedValue = A
      +                          DCC_GetSingleConversion(AIP_0);
  6961  0011F4  0E00               	movlw	0
  6962  0011F6  EC69  F022         	call	_ADCC_GetSingleConversion
  6963  0011FA  C005  F0BF         	movff	?_ADCC_GetSingleConversion,InitialiseString@convertedValue
  6964  0011FE  C006  F0C0         	movff	?_ADCC_GetSingleConversion+1,InitialiseString@convertedValue+1
  6965  001202                     
  6966                           ;RS232.c: 132:         printf("ADC: 0x%04x \r\n", convertedValue);
  6967  001202  0E9A               	movlw	low STR_46
  6968  001204  0100               	movlb	0	; () banked
  6969  001206  6F7D               	movwf	printf@fmt& (0+255),b
  6970  001208  0EFF               	movlw	high STR_46
  6971  00120A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  6972  00120C  C0BF  F07F         	movff	InitialiseString@convertedValue,?_printf+2
  6973  001210  C0C0  F080         	movff	InitialiseString@convertedValue+1,?_printf+3
  6974  001214  ECAC  F022         	call	_printf	;wreg free
  6975  001218                     l931:
  6976  001218  0012               	return		;funcret
  6977  00121A                     __end_of_InitialiseString:
  6978                           	opt callstack 0
  6979                           
  6980 ;; *************** function _CardConfigIni *****************
  6981 ;; Defined at:
  6982 ;;		line 10 in file "RS232.c"
  6983 ;; Parameters:    Size  Location     Type
  6984 ;;  Name            2    9[COMRAM] PTR unsigned char 
  6985 ;;		 -> STR_63(4), STR_62(5), STR_61(7), 
  6986 ;;  RetNum          2   11[COMRAM] PTR unsigned char 
  6987 ;;		 -> InitialiseString@RevNum(2), InitialiseString@PartNum(19), InitialiseString@SerialNum(11), 
  6988 ;;  dataeeAddrWr    2   13[COMRAM] unsigned short 
  6989 ;;  NumBytes        2   15[COMRAM] int 
  6990 ;; Auto vars:     Size  Location     Type
  6991 ;;  i               2   21[COMRAM] int 
  6992 ;;  j               2   19[COMRAM] int 
  6993 ;;  readDataEven    1   24[COMRAM] unsigned char 
  6994 ;;  readDataOdd     1   23[COMRAM] unsigned char 
  6995 ;; Return value:  Size  Location     Type
  6996 ;;                  1    wreg      void 
  6997 ;; Registers used:
  6998 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6999 ;; Tracked objects:
  7000 ;;		On entry : 0/0
  7001 ;;		On exit  : 0/0
  7002 ;;		Unchanged: 0/0
  7003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7004 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7005 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7006 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7007 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7008 ;;Total ram usage:       16 bytes
  7009 ;; Hardware stack levels used:    1
  7010 ;; Hardware stack levels required when called:    5
  7011 ;; This function calls:
  7012 ;;		_DATAEE_ReadByte
  7013 ;;		_strcmp
  7014 ;; This function is called by:
  7015 ;;		_InitialiseString
  7016 ;; This function uses a non-reentrant model
  7017 ;;
  7018                           
  7019                           	psect	text13
  7020  001EBC                     __ptext13:
  7021                           	opt callstack 0
  7022  001EBC                     _CardConfigIni:
  7023                           	opt callstack 23
  7024  001EBC                     
  7025                           ;RS232.c: 14:     char readDataOdd, readDataEven;;RS232.c: 15:     int i=0, j=0;
  7026  001EBC  0E00               	movlw	0
  7027  001EBE  6E17               	movwf	(CardConfigIni@i+1)^0,c
  7028  001EC0  0E00               	movlw	0
  7029  001EC2  6E16               	movwf	CardConfigIni@i^0,c
  7030  001EC4  0E00               	movlw	0
  7031  001EC6  6E15               	movwf	(CardConfigIni@j+1)^0,c
  7032  001EC8  0E00               	movlw	0
  7033  001ECA  6E14               	movwf	CardConfigIni@j^0,c
  7034                           
  7035                           ;RS232.c: 19:     for(i = 0; i < NumBytes; i++){
  7036  001ECC  0E00               	movlw	0
  7037  001ECE  6E17               	movwf	(CardConfigIni@i+1)^0,c
  7038  001ED0  0E00               	movlw	0
  7039  001ED2  6E16               	movwf	CardConfigIni@i^0,c
  7040  001ED4  EF3E  F010         	goto	l7206
  7041  001ED8                     l7168:
  7042                           
  7043                           ;RS232.c: 20:         readDataOdd = DATAEE_ReadByte(dataeeAddrWrk);
  7044  001ED8  C00E  F005         	movff	CardConfigIni@dataeeAddrWrk,DATAEE_ReadByte@bAdd
  7045  001EDC  C00F  F006         	movff	CardConfigIni@dataeeAddrWrk+1,DATAEE_ReadByte@bAdd+1
  7046  001EE0  EC11  F023         	call	_DATAEE_ReadByte	;wreg free
  7047  001EE4  6E18               	movwf	CardConfigIni@readDataOdd^0,c
  7048  001EE6                     
  7049                           ;RS232.c: 22:         _delay((unsigned long)((50)*(32000000/4000.0)));
  7050  001EE6  0E03               	movlw	3
  7051  001EE8  6E13               	movwf	(??_CardConfigIni+1)^0,c
  7052  001EEA  0E08               	movlw	8
  7053  001EEC  6E12               	movwf	??_CardConfigIni^0,c
  7054  001EEE  0E77               	movlw	119
  7055  001EF0                     u8057:
  7056  001EF0  2EE8               	decfsz	wreg,f,c
  7057  001EF2  D7FE               	bra	u8057
  7058  001EF4  2E12               	decfsz	??_CardConfigIni^0,f,c
  7059  001EF6  D7FC               	bra	u8057
  7060  001EF8  2E13               	decfsz	(??_CardConfigIni+1)^0,f,c
  7061  001EFA  D7FA               	bra	u8057
  7062  001EFC  F000               	nop	
  7063  001EFE                     
  7064                           ;RS232.c: 25:         if(readDataOdd != 0xFF){
  7065  001EFE  2818               	incf	CardConfigIni@readDataOdd^0,w,c
  7066  001F00  B4D8               	btfsc	status,2,c
  7067  001F02  EF85  F00F         	goto	u7161
  7068  001F06  EF87  F00F         	goto	u7160
  7069  001F0A                     u7161:
  7070  001F0A  EF91  F00F         	goto	l7178
  7071  001F0E                     u7160:
  7072  001F0E                     
  7073                           ;RS232.c: 26:             RetNum[j] = readDataOdd;
  7074  001F0E  5014               	movf	CardConfigIni@j^0,w,c
  7075  001F10  240C               	addwf	CardConfigIni@RetNum^0,w,c
  7076  001F12  6ED9               	movwf	fsr2l,c
  7077  001F14  5015               	movf	(CardConfigIni@j+1)^0,w,c
  7078  001F16  200D               	addwfc	(CardConfigIni@RetNum+1)^0,w,c
  7079  001F18  6EDA               	movwf	fsr2h,c
  7080  001F1A  C018  FFDF         	movff	CardConfigIni@readDataOdd,indf2
  7081  001F1E                     
  7082                           ;RS232.c: 27:             j++;
  7083  001F1E  4A14               	infsnz	CardConfigIni@j^0,f,c
  7084  001F20  2A15               	incf	(CardConfigIni@j+1)^0,f,c
  7085  001F22                     l7178:
  7086                           
  7087                           ;RS232.c: 30:         dataeeAddrWrk++;
  7088  001F22  4A0E               	infsnz	CardConfigIni@dataeeAddrWrk^0,f,c
  7089  001F24  2A0F               	incf	(CardConfigIni@dataeeAddrWrk+1)^0,f,c
  7090  001F26                     
  7091                           ;RS232.c: 31:         readDataEven = DATAEE_ReadByte(dataeeAddrWrk);
  7092  001F26  C00E  F005         	movff	CardConfigIni@dataeeAddrWrk,DATAEE_ReadByte@bAdd
  7093  001F2A  C00F  F006         	movff	CardConfigIni@dataeeAddrWrk+1,DATAEE_ReadByte@bAdd+1
  7094  001F2E  EC11  F023         	call	_DATAEE_ReadByte	;wreg free
  7095  001F32  6E19               	movwf	CardConfigIni@readDataEven^0,c
  7096  001F34                     
  7097                           ;RS232.c: 33:         dataeeAddrWrk++;
  7098  001F34  4A0E               	infsnz	CardConfigIni@dataeeAddrWrk^0,f,c
  7099  001F36  2A0F               	incf	(CardConfigIni@dataeeAddrWrk+1)^0,f,c
  7100  001F38                     
  7101                           ;RS232.c: 34:         _delay((unsigned long)((50)*(32000000/4000.0)));
  7102  001F38  0E03               	movlw	3
  7103  001F3A  6E13               	movwf	(??_CardConfigIni+1)^0,c
  7104  001F3C  0E08               	movlw	8
  7105  001F3E  6E12               	movwf	??_CardConfigIni^0,c
  7106  001F40  0E77               	movlw	119
  7107  001F42                     u8067:
  7108  001F42  2EE8               	decfsz	wreg,f,c
  7109  001F44  D7FE               	bra	u8067
  7110  001F46  2E12               	decfsz	??_CardConfigIni^0,f,c
  7111  001F48  D7FC               	bra	u8067
  7112  001F4A  2E13               	decfsz	(??_CardConfigIni+1)^0,f,c
  7113  001F4C  D7FA               	bra	u8067
  7114  001F4E  F000               	nop	
  7115  001F50                     
  7116                           ;RS232.c: 37:         if(readDataEven != 0xFF){
  7117  001F50  2819               	incf	CardConfigIni@readDataEven^0,w,c
  7118  001F52  B4D8               	btfsc	status,2,c
  7119  001F54  EFAE  F00F         	goto	u7171
  7120  001F58  EFB0  F00F         	goto	u7170
  7121  001F5C                     u7171:
  7122  001F5C  EFBA  F00F         	goto	l7192
  7123  001F60                     u7170:
  7124  001F60                     
  7125                           ;RS232.c: 38:             RetNum[j] = readDataEven;
  7126  001F60  5014               	movf	CardConfigIni@j^0,w,c
  7127  001F62  240C               	addwf	CardConfigIni@RetNum^0,w,c
  7128  001F64  6ED9               	movwf	fsr2l,c
  7129  001F66  5015               	movf	(CardConfigIni@j+1)^0,w,c
  7130  001F68  200D               	addwfc	(CardConfigIni@RetNum+1)^0,w,c
  7131  001F6A  6EDA               	movwf	fsr2h,c
  7132  001F6C  C019  FFDF         	movff	CardConfigIni@readDataEven,indf2
  7133  001F70                     
  7134                           ;RS232.c: 39:             j++;
  7135  001F70  4A14               	infsnz	CardConfigIni@j^0,f,c
  7136  001F72  2A15               	incf	(CardConfigIni@j+1)^0,f,c
  7137  001F74                     l7192:
  7138                           
  7139                           ;RS232.c: 42:         if(!strcmp("Serial",Name)){
  7140  001F74  0ED7               	movlw	low STR_55
  7141  001F76  6E05               	movwf	strcmp@l^0,c
  7142  001F78  0EFF               	movlw	high STR_55
  7143  001F7A  6E06               	movwf	(strcmp@l+1)^0,c
  7144  001F7C  C00A  F007         	movff	CardConfigIni@Name,strcmp@r
  7145  001F80  C00B  F008         	movff	CardConfigIni@Name+1,strcmp@r+1
  7146  001F84  ECCD  F01B         	call	_strcmp	;wreg free
  7147  001F88  5005               	movf	?_strcmp^0,w,c
  7148  001F8A  1006               	iorwf	(?_strcmp+1)^0,w,c
  7149  001F8C  A4D8               	btfss	status,2,c
  7150  001F8E  EFCB  F00F         	goto	u7181
  7151  001F92  EFCD  F00F         	goto	u7180
  7152  001F96                     u7181:
  7153  001F96  EFE6  F00F         	goto	l7196
  7154  001F9A                     u7180:
  7155  001F9A                     
  7156                           ;RS232.c: 43:             MB303xx[i] = readDataOdd *256 + readDataEven;
  7157  001F9A  5019               	movf	CardConfigIni@readDataEven^0,w,c
  7158  001F9C  C018  F012         	movff	CardConfigIni@readDataOdd,??_CardConfigIni
  7159  001FA0  6A13               	clrf	(??_CardConfigIni+1)^0,c
  7160  001FA2  C012  F013         	movff	??_CardConfigIni,??_CardConfigIni+1
  7161  001FA6  6A12               	clrf	??_CardConfigIni^0,c
  7162  001FA8  2612               	addwf	??_CardConfigIni^0,f,c
  7163  001FAA  0E00               	movlw	0
  7164  001FAC  2213               	addwfc	(??_CardConfigIni+1)^0,f,c
  7165  001FAE  90D8               	bcf	status,0,c
  7166  001FB0  3416               	rlcf	CardConfigIni@i^0,w,c
  7167  001FB2  6ED9               	movwf	fsr2l,c
  7168  001FB4  3417               	rlcf	(CardConfigIni@i+1)^0,w,c
  7169  001FB6  6EDA               	movwf	fsr2h,c
  7170  001FB8  0EE8               	movlw	low _MB303xx
  7171  001FBA  26D9               	addwf	fsr2l,f,c
  7172  001FBC  0E00               	movlw	high _MB303xx
  7173  001FBE  22DA               	addwfc	fsr2h,f,c
  7174  001FC0  C012  FFDE         	movff	??_CardConfigIni,postinc2
  7175  001FC4  C013  FFDD         	movff	??_CardConfigIni+1,postdec2
  7176                           
  7177                           ;RS232.c: 44:         }else if(!strcmp("Part",Name)){
  7178  001FC8  EF3C  F010         	goto	l7204
  7179  001FCC                     l7196:
  7180  001FCC  0EEB               	movlw	low STR_57
  7181  001FCE  6E05               	movwf	strcmp@l^0,c
  7182  001FD0  0EFF               	movlw	high STR_57
  7183  001FD2  6E06               	movwf	(strcmp@l+1)^0,c
  7184  001FD4  C00A  F007         	movff	CardConfigIni@Name,strcmp@r
  7185  001FD8  C00B  F008         	movff	CardConfigIni@Name+1,strcmp@r+1
  7186  001FDC  ECCD  F01B         	call	_strcmp	;wreg free
  7187  001FE0  5005               	movf	?_strcmp^0,w,c
  7188  001FE2  1006               	iorwf	(?_strcmp+1)^0,w,c
  7189  001FE4  A4D8               	btfss	status,2,c
  7190  001FE6  EFF7  F00F         	goto	u7191
  7191  001FEA  EFF9  F00F         	goto	u7190
  7192  001FEE                     u7191:
  7193  001FEE  EF12  F010         	goto	l7200
  7194  001FF2                     u7190:
  7195  001FF2                     
  7196                           ;RS232.c: 45:             MB301xx[i] = readDataOdd *256 + readDataEven;
  7197  001FF2  5019               	movf	CardConfigIni@readDataEven^0,w,c
  7198  001FF4  C018  F012         	movff	CardConfigIni@readDataOdd,??_CardConfigIni
  7199  001FF8  6A13               	clrf	(??_CardConfigIni+1)^0,c
  7200  001FFA  C012  F013         	movff	??_CardConfigIni,??_CardConfigIni+1
  7201  001FFE  6A12               	clrf	??_CardConfigIni^0,c
  7202  002000  2612               	addwf	??_CardConfigIni^0,f,c
  7203  002002  0E00               	movlw	0
  7204  002004  2213               	addwfc	(??_CardConfigIni+1)^0,f,c
  7205  002006  90D8               	bcf	status,0,c
  7206  002008  3416               	rlcf	CardConfigIni@i^0,w,c
  7207  00200A  6ED9               	movwf	fsr2l,c
  7208  00200C  3417               	rlcf	(CardConfigIni@i+1)^0,w,c
  7209  00200E  6EDA               	movwf	fsr2h,c
  7210  002010  0E64               	movlw	low _MB301xx
  7211  002012  26D9               	addwf	fsr2l,f,c
  7212  002014  0E01               	movlw	high _MB301xx
  7213  002016  22DA               	addwfc	fsr2h,f,c
  7214  002018  C012  FFDE         	movff	??_CardConfigIni,postinc2
  7215  00201C  C013  FFDD         	movff	??_CardConfigIni+1,postdec2
  7216                           
  7217                           ;RS232.c: 46:         }else if(!strcmp("Rev",Name)){
  7218  002020  EF3C  F010         	goto	l7204
  7219  002024                     l7200:
  7220  002024  0EF5               	movlw	low STR_59
  7221  002026  6E05               	movwf	strcmp@l^0,c
  7222  002028  0EFF               	movlw	high STR_59
  7223  00202A  6E06               	movwf	(strcmp@l+1)^0,c
  7224  00202C  C00A  F007         	movff	CardConfigIni@Name,strcmp@r
  7225  002030  C00B  F008         	movff	CardConfigIni@Name+1,strcmp@r+1
  7226  002034  ECCD  F01B         	call	_strcmp	;wreg free
  7227  002038  5005               	movf	?_strcmp^0,w,c
  7228  00203A  1006               	iorwf	(?_strcmp+1)^0,w,c
  7229  00203C  A4D8               	btfss	status,2,c
  7230  00203E  EF23  F010         	goto	u7201
  7231  002042  EF25  F010         	goto	u7200
  7232  002046                     u7201:
  7233  002046  EF3C  F010         	goto	l7204
  7234  00204A                     u7200:
  7235  00204A                     
  7236                           ;RS232.c: 47:             MB302xx[i] = readDataOdd *256 + readDataEven;
  7237  00204A  5019               	movf	CardConfigIni@readDataEven^0,w,c
  7238  00204C  C018  F012         	movff	CardConfigIni@readDataOdd,??_CardConfigIni
  7239  002050  6A13               	clrf	(??_CardConfigIni+1)^0,c
  7240  002052  C012  F013         	movff	??_CardConfigIni,??_CardConfigIni+1
  7241  002056  6A12               	clrf	??_CardConfigIni^0,c
  7242  002058  2612               	addwf	??_CardConfigIni^0,f,c
  7243  00205A  0E00               	movlw	0
  7244  00205C  2213               	addwfc	(??_CardConfigIni+1)^0,f,c
  7245  00205E  90D8               	bcf	status,0,c
  7246  002060  3416               	rlcf	CardConfigIni@i^0,w,c
  7247  002062  6ED9               	movwf	fsr2l,c
  7248  002064  3417               	rlcf	(CardConfigIni@i+1)^0,w,c
  7249  002066  6EDA               	movwf	fsr2h,c
  7250  002068  0EFA               	movlw	low _MB302xx
  7251  00206A  26D9               	addwf	fsr2l,f,c
  7252  00206C  0E00               	movlw	high _MB302xx
  7253  00206E  22DA               	addwfc	fsr2h,f,c
  7254  002070  C012  FFDE         	movff	??_CardConfigIni,postinc2
  7255  002074  C013  FFDD         	movff	??_CardConfigIni+1,postdec2
  7256  002078                     l7204:
  7257                           
  7258                           ;RS232.c: 51:     }
  7259  002078  4A16               	infsnz	CardConfigIni@i^0,f,c
  7260  00207A  2A17               	incf	(CardConfigIni@i+1)^0,f,c
  7261  00207C                     l7206:
  7262  00207C  5010               	movf	CardConfigIni@NumBytes^0,w,c
  7263  00207E  5C16               	subwf	CardConfigIni@i^0,w,c
  7264  002080  5017               	movf	(CardConfigIni@i+1)^0,w,c
  7265  002082  0A80               	xorlw	128
  7266  002084  6E12               	movwf	??_CardConfigIni^0,c
  7267  002086  5011               	movf	(CardConfigIni@NumBytes+1)^0,w,c
  7268  002088  0A80               	xorlw	128
  7269  00208A  5812               	subwfb	??_CardConfigIni^0,w,c
  7270  00208C  A0D8               	btfss	status,0,c
  7271  00208E  EF4B  F010         	goto	u7211
  7272  002092  EF4D  F010         	goto	u7210
  7273  002096                     u7211:
  7274  002096  EF6C  F00F         	goto	l7168
  7275  00209A                     u7210:
  7276  00209A                     
  7277                           ;RS232.c: 53:     RetNum[j] = '\0';
  7278  00209A  5014               	movf	CardConfigIni@j^0,w,c
  7279  00209C  240C               	addwf	CardConfigIni@RetNum^0,w,c
  7280  00209E  6ED9               	movwf	fsr2l,c
  7281  0020A0  5015               	movf	(CardConfigIni@j+1)^0,w,c
  7282  0020A2  200D               	addwfc	(CardConfigIni@RetNum+1)^0,w,c
  7283  0020A4  6EDA               	movwf	fsr2h,c
  7284  0020A6  0E00               	movlw	0
  7285  0020A8  6EDF               	movwf	indf2,c
  7286  0020AA  0012               	return		;funcret
  7287  0020AC                     __end_of_CardConfigIni:
  7288                           	opt callstack 0
  7289                           
  7290 ;; *************** function _strcmp *****************
  7291 ;; Defined at:
  7292 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcmp.c"
  7293 ;; Parameters:    Size  Location     Type
  7294 ;;  l               2    4[COMRAM] PTR const unsigned char 
  7295 ;;		 -> STR_60(4), STR_58(5), STR_56(7), Command(16), 
  7296 ;;  r               2    6[COMRAM] PTR const unsigned char 
  7297 ;;		 -> STR_112(4), STR_110(5), STR_108(7), STR_106(2), 
  7298 ;;		 -> STR_104(6), STR_63(4), STR_62(5), STR_61(7), 
  7299 ;; Auto vars:     Size  Location     Type
  7300 ;;		None
  7301 ;; Return value:  Size  Location     Type
  7302 ;;                  2    4[COMRAM] int 
  7303 ;; Registers used:
  7304 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  7305 ;; Tracked objects:
  7306 ;;		On entry : 0/0
  7307 ;;		On exit  : 0/0
  7308 ;;		Unchanged: 0/0
  7309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7310 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7312 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7313 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7314 ;;Total ram usage:        5 bytes
  7315 ;; Hardware stack levels used:    1
  7316 ;; Hardware stack levels required when called:    4
  7317 ;; This function calls:
  7318 ;;		Nothing
  7319 ;; This function is called by:
  7320 ;;		_CardConfigIni
  7321 ;;		_ValidateCmd
  7322 ;; This function uses a non-reentrant model
  7323 ;;
  7324                           
  7325                           	psect	text14
  7326  00379A                     __ptext14:
  7327                           	opt callstack 0
  7328  00379A                     _strcmp:
  7329                           	opt callstack 25
  7330  00379A  EFD3  F01B         	goto	l7020
  7331  00379E                     l7018:
  7332  00379E  4A05               	infsnz	strcmp@l^0,f,c
  7333  0037A0  2A06               	incf	(strcmp@l+1)^0,f,c
  7334  0037A2  4A07               	infsnz	strcmp@r^0,f,c
  7335  0037A4  2A08               	incf	(strcmp@r+1)^0,f,c
  7336  0037A6                     l7020:
  7337  0037A6  C007  FFF6         	movff	strcmp@r,tblptrl
  7338  0037AA  C008  FFF7         	movff	strcmp@r+1,tblptrh
  7339  0037AE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7340  0037AE  6AF8               	clrf	tblptru,c
  7341  0037B0                     	endif
  7342  0037B0                     	if	0	;tblptru may be non-zero
  7343  0037B0                     	endif
  7344  0037B0  0008               	tblrd		*
  7345  0037B2  CFF5 F009          	movff	tablat,??_strcmp
  7346  0037B6  C005  FFF6         	movff	strcmp@l,tblptrl
  7347  0037BA  C006  FFF7         	movff	strcmp@l+1,tblptrh
  7348  0037BE  0E00               	movlw	low (__mediumconst shr (0+16))
  7349  0037C0  6EF8               	movwf	tblptru,c
  7350  0037C2  0E0E               	movlw	(high __ramtop+-1)
  7351  0037C4  64F7               	cpfsgt	tblptrh,c
  7352  0037C6  D003               	bra	u6937
  7353  0037C8  0008               	tblrd		*
  7354  0037CA  50F5               	movf	tablat,w,c
  7355  0037CC  D005               	bra	u6935
  7356  0037CE                     u6937:
  7357  0037CE  CFF6 FFE9          	movff	tblptrl,fsr0l
  7358  0037D2  CFF7 FFEA          	movff	tblptrh,fsr0h
  7359  0037D6  50EF               	movf	indf0,w,c
  7360  0037D8                     u6935:
  7361  0037D8  1809               	xorwf	??_strcmp^0,w,c
  7362  0037DA  A4D8               	btfss	status,2,c
  7363  0037DC  EFF2  F01B         	goto	u6931
  7364  0037E0  EFF4  F01B         	goto	u6930
  7365  0037E4                     u6931:
  7366  0037E4  EF0D  F01C         	goto	l7024
  7367  0037E8                     u6930:
  7368  0037E8  C005  FFF6         	movff	strcmp@l,tblptrl
  7369  0037EC  C006  FFF7         	movff	strcmp@l+1,tblptrh
  7370  0037F0  0E00               	movlw	low (__mediumconst shr (0+16))
  7371  0037F2  6EF8               	movwf	tblptru,c
  7372  0037F4  0E0E               	movlw	(high __ramtop+-1)
  7373  0037F6  64F7               	cpfsgt	tblptrh,c
  7374  0037F8  D003               	bra	u6947
  7375  0037FA  0008               	tblrd		*
  7376  0037FC  50F5               	movf	tablat,w,c
  7377  0037FE  D005               	bra	u6940
  7378  003800                     u6947:
  7379  003800  CFF6 FFE9          	movff	tblptrl,fsr0l
  7380  003804  CFF7 FFEA          	movff	tblptrh,fsr0h
  7381  003808  50EF               	movf	indf0,w,c
  7382  00380A                     u6940:
  7383  00380A  0900               	iorlw	0
  7384  00380C  A4D8               	btfss	status,2,c
  7385  00380E  EF0B  F01C         	goto	u6951
  7386  003812  EF0D  F01C         	goto	u6950
  7387  003816                     u6951:
  7388  003816  EFCF  F01B         	goto	l7018
  7389  00381A                     u6950:
  7390  00381A                     l7024:
  7391  00381A  C005  FFF6         	movff	strcmp@l,tblptrl
  7392  00381E  C006  FFF7         	movff	strcmp@l+1,tblptrh
  7393  003822  0E00               	movlw	low (__mediumconst shr (0+16))
  7394  003824  6EF8               	movwf	tblptru,c
  7395  003826  0E0E               	movlw	(high __ramtop+-1)
  7396  003828  64F7               	cpfsgt	tblptrh,c
  7397  00382A  D003               	bra	u6967
  7398  00382C  0008               	tblrd		*
  7399  00382E  50F5               	movf	tablat,w,c
  7400  003830  D005               	bra	u6960
  7401  003832                     u6967:
  7402  003832  CFF6 FFE9          	movff	tblptrl,fsr0l
  7403  003836  CFF7 FFEA          	movff	tblptrh,fsr0h
  7404  00383A  50EF               	movf	indf0,w,c
  7405  00383C                     u6960:
  7406  00383C  6E09               	movwf	??_strcmp^0,c
  7407  00383E  C007  FFF6         	movff	strcmp@r,tblptrl
  7408  003842  C008  FFF7         	movff	strcmp@r+1,tblptrh
  7409  003846                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7410  003846  6AF8               	clrf	tblptru,c
  7411  003848                     	endif
  7412  003848                     	if	0	;tblptru may be non-zero
  7413  003848                     	endif
  7414  003848  0008               	tblrd		*
  7415  00384A  50F5               	movf	tablat,w,c
  7416  00384C  5C09               	subwf	??_strcmp^0,w,c
  7417  00384E  6E05               	movwf	?_strcmp^0,c
  7418  003850  6A06               	clrf	(?_strcmp+1)^0,c
  7419  003852  A0D8               	btfss	status,0,c
  7420  003854  0606               	decf	(?_strcmp+1)^0,f,c
  7421  003856  0012               	return		;funcret
  7422  003858                     __end_of_strcmp:
  7423                           	opt callstack 0
  7424                           
  7425 ;; *************** function _DATAEE_ReadByte *****************
  7426 ;; Defined at:
  7427 ;;		line 187 in file "mcc_generated_files/memory.c"
  7428 ;; Parameters:    Size  Location     Type
  7429 ;;  bAdd            2    4[COMRAM] unsigned short 
  7430 ;; Auto vars:     Size  Location     Type
  7431 ;;		None
  7432 ;; Return value:  Size  Location     Type
  7433 ;;                  1    wreg      unsigned char 
  7434 ;; Registers used:
  7435 ;;		wreg, status,2, status,0
  7436 ;; Tracked objects:
  7437 ;;		On entry : 0/0
  7438 ;;		On exit  : 0/0
  7439 ;;		Unchanged: 0/0
  7440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7441 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7444 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7445 ;;Total ram usage:        2 bytes
  7446 ;; Hardware stack levels used:    1
  7447 ;; Hardware stack levels required when called:    4
  7448 ;; This function calls:
  7449 ;;		Nothing
  7450 ;; This function is called by:
  7451 ;;		_CardConfigIni
  7452 ;; This function uses a non-reentrant model
  7453 ;;
  7454                           
  7455                           	psect	text15
  7456  004622                     __ptext15:
  7457                           	opt callstack 0
  7458  004622                     _DATAEE_ReadByte:
  7459                           	opt callstack 23
  7460  004622                     
  7461                           ;mcc_generated_files/memory.c: 187: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 188: {;mcc_generated_files/memory.c: 189:     NVMADRH = ((bAdd >> 8) & 
      +                          0x03);
  7462  004622  5006               	movf	(DATAEE_ReadByte@bAdd+1)^0,w,c
  7463  004624  0B03               	andlw	3
  7464  004626  6E7F               	movwf	127,c	;volatile
  7465  004628                     
  7466                           ;mcc_generated_files/memory.c: 190:     NVMADRL = (bAdd & 0xFF);
  7467  004628  C005  FF7E         	movff	DATAEE_ReadByte@bAdd,3966	;volatile
  7468  00462C                     
  7469                           ;mcc_generated_files/memory.c: 191:     NVMCON1bits.NVMREG = 0;
  7470  00462C  0E3F               	movlw	-193
  7471  00462E  1681               	andwf	129,f,c	;volsfr
  7472  004630                     
  7473                           ;mcc_generated_files/memory.c: 192:     NVMCON1bits.RD = 1;
  7474  004630  8081               	bsf	129,0,c	;volsfr
  7475  004632                     
  7476                           ;mcc_generated_files/memory.c: 193:     __nop();
  7477  004632  F000               	nop	
  7478  004634                     
  7479                           ;mcc_generated_files/memory.c: 194:     __nop();
  7480  004634  F000               	nop	
  7481  004636                     
  7482                           ;mcc_generated_files/memory.c: 196:     return (NVMDAT);
  7483  004636  5080               	movf	128,w,c	;volatile
  7484  004638  0012               	return		;funcret
  7485  00463A                     __end_of_DATAEE_ReadByte:
  7486                           	opt callstack 0
  7487                           
  7488 ;; *************** function _SYSTEM_Initialize *****************
  7489 ;; Defined at:
  7490 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7491 ;; Parameters:    Size  Location     Type
  7492 ;;		None
  7493 ;; Auto vars:     Size  Location     Type
  7494 ;;		None
  7495 ;; Return value:  Size  Location     Type
  7496 ;;                  1    wreg      void 
  7497 ;; Registers used:
  7498 ;;		wreg, status,2, status,0, cstack
  7499 ;; Tracked objects:
  7500 ;;		On entry : 0/0
  7501 ;;		On exit  : 0/0
  7502 ;;		Unchanged: 0/0
  7503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7508 ;;Total ram usage:        0 bytes
  7509 ;; Hardware stack levels used:    1
  7510 ;; Hardware stack levels required when called:    6
  7511 ;; This function calls:
  7512 ;;		_ADCC_DisableContinuousConversion
  7513 ;;		_ADCC_Initialize
  7514 ;;		_EUSART1_Initialize
  7515 ;;		_EUSART2_Initialize
  7516 ;;		_INTERRUPT_Initialize
  7517 ;;		_OSCILLATOR_Initialize
  7518 ;;		_PIN_MANAGER_Initialize
  7519 ;;		_PMD_Initialize
  7520 ;; This function is called by:
  7521 ;;		_main
  7522 ;; This function uses a non-reentrant model
  7523 ;;
  7524                           
  7525                           	psect	text16
  7526  0045CC                     __ptext16:
  7527                           	opt callstack 0
  7528  0045CC                     _SYSTEM_Initialize:
  7529                           	opt callstack 24
  7530  0045CC                     
  7531                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  7532  0045CC  ECB6  F023         	call	_INTERRUPT_Initialize	;wreg free
  7533  0045D0                     
  7534                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  7535  0045D0  ECF7  F022         	call	_PMD_Initialize	;wreg free
  7536  0045D4                     
  7537                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  7538  0045D4  EC67  F01D         	call	_PIN_MANAGER_Initialize	;wreg free
  7539  0045D8                     
  7540                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  7541  0045D8  EC1D  F023         	call	_OSCILLATOR_Initialize	;wreg free
  7542  0045DC                     
  7543                           ;mcc_generated_files/mcc.c: 56:     EUSART1_Initialize();
  7544  0045DC  ECAE  F01D         	call	_EUSART1_Initialize	;wreg free
  7545  0045E0                     
  7546                           ;mcc_generated_files/mcc.c: 57:     EUSART2_Initialize();
  7547  0045E0  ECEE  F01D         	call	_EUSART2_Initialize	;wreg free
  7548  0045E4                     
  7549                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
  7550  0045E4  EC35  F020         	call	_ADCC_Initialize	;wreg free
  7551                           
  7552                           ;mcc_generated_files/mcc.c: 59:     ADCC_DisableContinuousConversion();
  7553  0045E8  ECB8  F023         	call	_ADCC_DisableContinuousConversion	;wreg free
  7554  0045EC  0012               	return		;funcret
  7555  0045EE                     __end_of_SYSTEM_Initialize:
  7556                           	opt callstack 0
  7557                           
  7558 ;; *************** function _PMD_Initialize *****************
  7559 ;; Defined at:
  7560 ;;		line 76 in file "mcc_generated_files/mcc.c"
  7561 ;; Parameters:    Size  Location     Type
  7562 ;;		None
  7563 ;; Auto vars:     Size  Location     Type
  7564 ;;		None
  7565 ;; Return value:  Size  Location     Type
  7566 ;;                  1    wreg      void 
  7567 ;; Registers used:
  7568 ;;		wreg, status,2
  7569 ;; Tracked objects:
  7570 ;;		On entry : 0/0
  7571 ;;		On exit  : 0/0
  7572 ;;		Unchanged: 0/0
  7573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7578 ;;Total ram usage:        0 bytes
  7579 ;; Hardware stack levels used:    1
  7580 ;; Hardware stack levels required when called:    4
  7581 ;; This function calls:
  7582 ;;		Nothing
  7583 ;; This function is called by:
  7584 ;;		_SYSTEM_Initialize
  7585 ;; This function uses a non-reentrant model
  7586 ;;
  7587                           
  7588                           	psect	text17
  7589  0045EE                     __ptext17:
  7590                           	opt callstack 0
  7591  0045EE                     _PMD_Initialize:
  7592                           	opt callstack 25
  7593  0045EE                     
  7594                           ;mcc_generated_files/mcc.c: 79:     PMD0 = 0x00;
  7595  0045EE  0E00               	movlw	0
  7596  0045F0  010E               	movlb	14	; () banked
  7597  0045F2  6FE1               	movwf	225,b	;volatile
  7598                           
  7599                           ;mcc_generated_files/mcc.c: 81:     PMD1 = 0x00;
  7600  0045F4  0E00               	movlw	0
  7601  0045F6  6FE2               	movwf	226,b	;volatile
  7602                           
  7603                           ;mcc_generated_files/mcc.c: 83:     PMD2 = 0x00;
  7604  0045F8  0E00               	movlw	0
  7605  0045FA  6FE3               	movwf	227,b	;volatile
  7606                           
  7607                           ;mcc_generated_files/mcc.c: 85:     PMD3 = 0x00;
  7608  0045FC  0E00               	movlw	0
  7609  0045FE  6FE4               	movwf	228,b	;volatile
  7610                           
  7611                           ;mcc_generated_files/mcc.c: 87:     PMD4 = 0x00;
  7612  004600  0E00               	movlw	0
  7613  004602  6FE5               	movwf	229,b	;volatile
  7614                           
  7615                           ;mcc_generated_files/mcc.c: 89:     PMD5 = 0x00;
  7616  004604  0E00               	movlw	0
  7617  004606  6FE6               	movwf	230,b	;volatile
  7618  004608                     
  7619                           ; BSR set to: 14
  7620  004608  0012               	return		;funcret
  7621  00460A                     __end_of_PMD_Initialize:
  7622                           	opt callstack 0
  7623                           
  7624 ;; *************** function _PIN_MANAGER_Initialize *****************
  7625 ;; Defined at:
  7626 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  7627 ;; Parameters:    Size  Location     Type
  7628 ;;		None
  7629 ;; Auto vars:     Size  Location     Type
  7630 ;;		None
  7631 ;; Return value:  Size  Location     Type
  7632 ;;                  1    wreg      void 
  7633 ;; Registers used:
  7634 ;;		wreg, status,2
  7635 ;; Tracked objects:
  7636 ;;		On entry : 0/0
  7637 ;;		On exit  : 0/0
  7638 ;;		Unchanged: 0/0
  7639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7644 ;;Total ram usage:        0 bytes
  7645 ;; Hardware stack levels used:    1
  7646 ;; Hardware stack levels required when called:    4
  7647 ;; This function calls:
  7648 ;;		Nothing
  7649 ;; This function is called by:
  7650 ;;		_SYSTEM_Initialize
  7651 ;; This function uses a non-reentrant model
  7652 ;;
  7653                           
  7654                           	psect	text18
  7655  003ACE                     __ptext18:
  7656                           	opt callstack 0
  7657  003ACE                     _PIN_MANAGER_Initialize:
  7658                           	opt callstack 25
  7659  003ACE                     
  7660                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  7661  003ACE  0E00               	movlw	0
  7662  003AD0  6E87               	movwf	135,c	;volatile
  7663                           
  7664                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  7665  003AD2  0E00               	movlw	0
  7666  003AD4  6E86               	movwf	134,c	;volatile
  7667                           
  7668                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  7669  003AD6  0E00               	movlw	0
  7670  003AD8  6E83               	movwf	131,c	;volatile
  7671                           
  7672                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  7673  003ADA  0E00               	movlw	0
  7674  003ADC  6E84               	movwf	132,c	;volatile
  7675                           
  7676                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  7677  003ADE  0E00               	movlw	0
  7678  003AE0  6E85               	movwf	133,c	;volatile
  7679                           
  7680                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  7681  003AE2  0E07               	movlw	7
  7682  003AE4  6E8C               	movwf	140,c	;volatile
  7683                           
  7684                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x07;
  7685  003AE6  0E07               	movlw	7
  7686  003AE8  6E88               	movwf	136,c	;volatile
  7687                           
  7688                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xBF;
  7689  003AEA  0EBF               	movlw	191
  7690  003AEC  6E89               	movwf	137,c	;volatile
  7691                           
  7692                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  7693  003AEE  0EBF               	movlw	191
  7694  003AF0  6E8A               	movwf	138,c	;volatile
  7695                           
  7696                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFE;
  7697  003AF2  0EFE               	movlw	254
  7698  003AF4  6E8B               	movwf	139,c	;volatile
  7699  003AF6                     
  7700                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
  7701  003AF6  010F               	movlb	15	; () banked
  7702  003AF8  6926               	setf	38,b	;volatile
  7703                           
  7704                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x3B;
  7705  003AFA  0E3B               	movlw	59
  7706  003AFC  6F21               	movwf	33,b	;volatile
  7707                           
  7708                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x37;
  7709  003AFE  0E37               	movlw	55
  7710  003B00  6F19               	movwf	25,b	;volatile
  7711                           
  7712                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  7713  003B02  0E07               	movlw	7
  7714  003B04  6F2E               	movwf	46,b	;volatile
  7715  003B06                     
  7716                           ; BSR set to: 15
  7717                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
  7718  003B06  6911               	setf	17,b	;volatile
  7719                           
  7720                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  7721  003B08  0E00               	movlw	0
  7722  003B0A  6F25               	movwf	37,b	;volatile
  7723                           
  7724                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  7725  003B0C  0E00               	movlw	0
  7726  003B0E  6F2D               	movwf	45,b	;volatile
  7727                           
  7728                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  7729  003B10  0E00               	movlw	0
  7730  003B12  6F18               	movwf	24,b	;volatile
  7731                           
  7732                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  7733  003B14  0E00               	movlw	0
  7734  003B16  6F10               	movwf	16,b	;volatile
  7735                           
  7736                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  7737  003B18  0E00               	movlw	0
  7738  003B1A  6F20               	movwf	32,b	;volatile
  7739                           
  7740                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
  7741  003B1C  0E00               	movlw	0
  7742  003B1E  6F2C               	movwf	44,b	;volatile
  7743                           
  7744                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
  7745  003B20  0E00               	movlw	0
  7746  003B22  6F0F               	movwf	15,b	;volatile
  7747                           
  7748                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
  7749  003B24  0E00               	movlw	0
  7750  003B26  6F17               	movwf	23,b	;volatile
  7751                           
  7752                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
  7753  003B28  0E00               	movlw	0
  7754  003B2A  6F1F               	movwf	31,b	;volatile
  7755                           
  7756                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
  7757  003B2C  0E00               	movlw	0
  7758  003B2E  6F24               	movwf	36,b	;volatile
  7759  003B30                     
  7760                           ; BSR set to: 15
  7761                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
  7762  003B30  690E               	setf	14,b	;volatile
  7763  003B32                     
  7764                           ; BSR set to: 15
  7765                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
  7766  003B32  6916               	setf	22,b	;volatile
  7767  003B34                     
  7768                           ; BSR set to: 15
  7769                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
  7770  003B34  691E               	setf	30,b	;volatile
  7771  003B36                     
  7772                           ; BSR set to: 15
  7773                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
  7774  003B36  6923               	setf	35,b	;volatile
  7775                           
  7776                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
  7777  003B38  0E07               	movlw	7
  7778  003B3A  6F2B               	movwf	43,b	;volatile
  7779  003B3C                     
  7780                           ; BSR set to: 15
  7781                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
  7782  003B3C  690D               	setf	13,b	;volatile
  7783  003B3E                     
  7784                           ; BSR set to: 15
  7785                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
  7786  003B3E  6915               	setf	21,b	;volatile
  7787  003B40                     
  7788                           ; BSR set to: 15
  7789                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
  7790  003B40  691D               	setf	29,b	;volatile
  7791  003B42                     
  7792                           ; BSR set to: 15
  7793                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
  7794  003B42  6922               	setf	34,b	;volatile
  7795                           
  7796                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x0F;
  7797  003B44  0E0F               	movlw	15
  7798  003B46  6F2A               	movwf	42,b	;volatile
  7799                           
  7800                           ;mcc_generated_files/pin_manager.c: 127:     RX1PPS = 0x17;
  7801  003B48  0E17               	movlw	23
  7802  003B4A  010E               	movlb	14	; () banked
  7803  003B4C  6FB5               	movwf	181,b	;volatile
  7804                           
  7805                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x0B;
  7806  003B4E  0E0B               	movlw	11
  7807  003B50  6FF5               	movwf	245,b	;volatile
  7808                           
  7809                           ;mcc_generated_files/pin_manager.c: 129:     RC6PPS = 0x09;
  7810  003B52  0E09               	movlw	9
  7811  003B54  6FFD               	movwf	253,b	;volatile
  7812                           
  7813                           ;mcc_generated_files/pin_manager.c: 130:     RX2PPS = 0x0F;
  7814  003B56  0E0F               	movlw	15
  7815  003B58  6F8D               	movwf	141,b	;volatile
  7816  003B5A                     
  7817                           ; BSR set to: 14
  7818  003B5A  0012               	return		;funcret
  7819  003B5C                     __end_of_PIN_MANAGER_Initialize:
  7820                           	opt callstack 0
  7821                           
  7822 ;; *************** function _OSCILLATOR_Initialize *****************
  7823 ;; Defined at:
  7824 ;;		line 62 in file "mcc_generated_files/mcc.c"
  7825 ;; Parameters:    Size  Location     Type
  7826 ;;		None
  7827 ;; Auto vars:     Size  Location     Type
  7828 ;;		None
  7829 ;; Return value:  Size  Location     Type
  7830 ;;                  1    wreg      void 
  7831 ;; Registers used:
  7832 ;;		wreg, status,2
  7833 ;; Tracked objects:
  7834 ;;		On entry : 0/0
  7835 ;;		On exit  : 0/0
  7836 ;;		Unchanged: 0/0
  7837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7842 ;;Total ram usage:        0 bytes
  7843 ;; Hardware stack levels used:    1
  7844 ;; Hardware stack levels required when called:    4
  7845 ;; This function calls:
  7846 ;;		Nothing
  7847 ;; This function is called by:
  7848 ;;		_SYSTEM_Initialize
  7849 ;; This function uses a non-reentrant model
  7850 ;;
  7851                           
  7852                           	psect	text19
  7853  00463A                     __ptext19:
  7854                           	opt callstack 0
  7855  00463A                     _OSCILLATOR_Initialize:
  7856                           	opt callstack 25
  7857  00463A                     
  7858                           ;mcc_generated_files/mcc.c: 65:     OSCCON1 = 0x60;
  7859  00463A  0E60               	movlw	96
  7860  00463C  010E               	movlb	14	; () banked
  7861  00463E  6FD8               	movwf	216,b	;volatile
  7862                           
  7863                           ;mcc_generated_files/mcc.c: 67:     OSCCON3 = 0x00;
  7864  004640  0E00               	movlw	0
  7865  004642  6FDA               	movwf	218,b	;volatile
  7866                           
  7867                           ;mcc_generated_files/mcc.c: 69:     OSCEN = 0x00;
  7868  004644  0E00               	movlw	0
  7869  004646  6FDC               	movwf	220,b	;volatile
  7870                           
  7871                           ;mcc_generated_files/mcc.c: 71:     OSCFRQ = 0x06;
  7872  004648  0E06               	movlw	6
  7873  00464A  6FDE               	movwf	222,b	;volatile
  7874                           
  7875                           ;mcc_generated_files/mcc.c: 73:     OSCTUNE = 0x00;
  7876  00464C  0E00               	movlw	0
  7877  00464E  6FDD               	movwf	221,b	;volatile
  7878  004650                     
  7879                           ; BSR set to: 14
  7880  004650  0012               	return		;funcret
  7881  004652                     __end_of_OSCILLATOR_Initialize:
  7882                           	opt callstack 0
  7883                           
  7884 ;; *************** function _INTERRUPT_Initialize *****************
  7885 ;; Defined at:
  7886 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  7887 ;; Parameters:    Size  Location     Type
  7888 ;;		None
  7889 ;; Auto vars:     Size  Location     Type
  7890 ;;		None
  7891 ;; Return value:  Size  Location     Type
  7892 ;;                  1    wreg      void 
  7893 ;; Registers used:
  7894 ;;		None
  7895 ;; Tracked objects:
  7896 ;;		On entry : 0/0
  7897 ;;		On exit  : 0/0
  7898 ;;		Unchanged: 0/0
  7899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7904 ;;Total ram usage:        0 bytes
  7905 ;; Hardware stack levels used:    1
  7906 ;; Hardware stack levels required when called:    4
  7907 ;; This function calls:
  7908 ;;		Nothing
  7909 ;; This function is called by:
  7910 ;;		_SYSTEM_Initialize
  7911 ;; This function uses a non-reentrant model
  7912 ;;
  7913                           
  7914                           	psect	text20
  7915  00476C                     __ptext20:
  7916                           	opt callstack 0
  7917  00476C                     _INTERRUPT_Initialize:
  7918                           	opt callstack 25
  7919  00476C                     
  7920                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
  7921  00476C  9AF2               	bcf	242,5,c	;volatile
  7922  00476E  0012               	return		;funcret
  7923  004770                     __end_of_INTERRUPT_Initialize:
  7924                           	opt callstack 0
  7925                           
  7926 ;; *************** function _EUSART2_Initialize *****************
  7927 ;; Defined at:
  7928 ;;		line 88 in file "mcc_generated_files/eusart2.c"
  7929 ;; Parameters:    Size  Location     Type
  7930 ;;		None
  7931 ;; Auto vars:     Size  Location     Type
  7932 ;;		None
  7933 ;; Return value:  Size  Location     Type
  7934 ;;                  1    wreg      void 
  7935 ;; Registers used:
  7936 ;;		wreg, status,2, status,0, cstack
  7937 ;; Tracked objects:
  7938 ;;		On entry : 0/0
  7939 ;;		On exit  : 0/0
  7940 ;;		Unchanged: 0/0
  7941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7946 ;;Total ram usage:        0 bytes
  7947 ;; Hardware stack levels used:    1
  7948 ;; Hardware stack levels required when called:    5
  7949 ;; This function calls:
  7950 ;;		_EUSART2_SetErrorHandler
  7951 ;;		_EUSART2_SetFramingErrorHandler
  7952 ;;		_EUSART2_SetOverrunErrorHandler
  7953 ;;		_EUSART2_SetRxInterruptHandler
  7954 ;;		_EUSART2_SetTxInterruptHandler
  7955 ;; This function is called by:
  7956 ;;		_SYSTEM_Initialize
  7957 ;; This function uses a non-reentrant model
  7958 ;;
  7959                           
  7960                           	psect	text21
  7961  003BDC                     __ptext21:
  7962                           	opt callstack 0
  7963  003BDC                     _EUSART2_Initialize:
  7964                           	opt callstack 24
  7965  003BDC                     
  7966                           ;mcc_generated_files/eusart2.c: 91:     PIE3bits.RC2IE = 0;
  7967  003BDC  010E               	movlb	14	; () banked
  7968  003BDE  9FC5               	bcf	197,7,b	;volatile
  7969  003BE0                     
  7970                           ; BSR set to: 14
  7971                           ;mcc_generated_files/eusart2.c: 92:     EUSART2_SetRxInterruptHandler(EUSART2_Receive_IS
      +                          R);
  7972  003BE0  0E94               	movlw	low _EUSART2_Receive_ISR
  7973  003BE2  6E05               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler^0,c
  7974  003BE4  0E34               	movlw	high _EUSART2_Receive_ISR
  7975  003BE6  6E06               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)^0,c
  7976  003BE8  EC71  F023         	call	_EUSART2_SetRxInterruptHandler	;wreg free
  7977  003BEC                     
  7978                           ;mcc_generated_files/eusart2.c: 93:     PIE3bits.TX2IE = 0;
  7979  003BEC  010E               	movlb	14	; () banked
  7980  003BEE  9DC5               	bcf	197,6,b	;volatile
  7981                           
  7982                           ;mcc_generated_files/eusart2.c: 94:     EUSART2_SetTxInterruptHandler(EUSART2_Transmit_I
      +                          SR);
  7983  003BF0  0EA0               	movlw	low _EUSART2_Transmit_ISR
  7984  003BF2  6E05               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler^0,c
  7985  003BF4  0E41               	movlw	high _EUSART2_Transmit_ISR
  7986  003BF6  6E06               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)^0,c
  7987  003BF8  EC6C  F023         	call	_EUSART2_SetTxInterruptHandler	;wreg free
  7988  003BFC                     
  7989                           ;mcc_generated_files/eusart2.c: 98:     BAUD2CON = 0x08;
  7990  003BFC  0E08               	movlw	8
  7991  003BFE  010E               	movlb	14	; () banked
  7992  003C00  6F9F               	movwf	159,b	;volatile
  7993  003C02                     
  7994                           ; BSR set to: 14
  7995                           ;mcc_generated_files/eusart2.c: 101:     RC2STA = 0x90;
  7996  003C02  0E90               	movlw	144
  7997  003C04  6F9D               	movwf	157,b	;volatile
  7998  003C06                     
  7999                           ; BSR set to: 14
  8000                           ;mcc_generated_files/eusart2.c: 104:     TX2STA = 0x24;
  8001  003C06  0E24               	movlw	36
  8002  003C08  6F9E               	movwf	158,b	;volatile
  8003  003C0A                     
  8004                           ; BSR set to: 14
  8005                           ;mcc_generated_files/eusart2.c: 108:     SP2BRGL = 0xA0;
  8006  003C0A  0EA0               	movlw	160
  8007  003C0C  6F9B               	movwf	155,b	;volatile
  8008  003C0E                     
  8009                           ; BSR set to: 14
  8010                           ;mcc_generated_files/eusart2.c: 112:     SP2BRGH = 0x01;
  8011  003C0E  0E01               	movlw	1
  8012  003C10  6F9C               	movwf	156,b	;volatile
  8013  003C12                     
  8014                           ; BSR set to: 14
  8015                           ;mcc_generated_files/eusart2.c: 115:     EUSART2_SetFramingErrorHandler(EUSART2_DefaultF
      +                          ramingErrorHandler);
  8016  003C12  0E74               	movlw	low _EUSART2_DefaultFramingErrorHandler
  8017  003C14  6E05               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler^0,c
  8018  003C16  0E47               	movlw	high _EUSART2_DefaultFramingErrorHandler
  8019  003C18  6E06               	movwf	(EUSART2_SetFramingErrorHandler@interruptHandler+1)^0,c
  8020  003C1A  EC7B  F023         	call	_EUSART2_SetFramingErrorHandler	;wreg free
  8021  003C1E                     
  8022                           ;mcc_generated_files/eusart2.c: 116:     EUSART2_SetOverrunErrorHandler(EUSART2_DefaultO
      +                          verrunErrorHandler);
  8023  003C1E  0E46               	movlw	low _EUSART2_DefaultOverrunErrorHandler
  8024  003C20  6E05               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler^0,c
  8025  003C22  0E47               	movlw	high _EUSART2_DefaultOverrunErrorHandler
  8026  003C24  6E06               	movwf	(EUSART2_SetOverrunErrorHandler@interruptHandler+1)^0,c
  8027  003C26  EC76  F023         	call	_EUSART2_SetOverrunErrorHandler	;wreg free
  8028  003C2A                     
  8029                           ;mcc_generated_files/eusart2.c: 117:     EUSART2_SetErrorHandler(EUSART2_DefaultErrorHan
      +                          dler);
  8030  003C2A  0E5A               	movlw	low _EUSART2_DefaultErrorHandler
  8031  003C2C  6E05               	movwf	EUSART2_SetErrorHandler@interruptHandler^0,c
  8032  003C2E  0E47               	movlw	high _EUSART2_DefaultErrorHandler
  8033  003C30  6E06               	movwf	(EUSART2_SetErrorHandler@interruptHandler+1)^0,c
  8034  003C32  EC80  F023         	call	_EUSART2_SetErrorHandler	;wreg free
  8035                           
  8036                           ;mcc_generated_files/eusart2.c: 119:     eusart2RxLastError.status = 0;
  8037  003C36  0E00               	movlw	0
  8038  003C38  0100               	movlb	0	; () banked
  8039  003C3A  6FE3               	movwf	_eusart2RxLastError& (0+255),b	;volatile
  8040                           
  8041                           ;mcc_generated_files/eusart2.c: 122:     eusart2TxHead = 0;
  8042  003C3C  0E00               	movlw	0
  8043  003C3E  6FE7               	movwf	_eusart2TxHead& (0+255),b	;volatile
  8044                           
  8045                           ;mcc_generated_files/eusart2.c: 123:     eusart2TxTail = 0;
  8046  003C40  0E00               	movlw	0
  8047  003C42  6FE6               	movwf	_eusart2TxTail& (0+255),b	;volatile
  8048                           
  8049                           ;mcc_generated_files/eusart2.c: 124:     eusart2TxBufferRemaining = sizeof(eusart2TxBuff
      +                          er);
  8050  003C44  0E20               	movlw	32
  8051  003C46  6FFF               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
  8052                           
  8053                           ;mcc_generated_files/eusart2.c: 126:     eusart2RxHead = 0;
  8054  003C48  0E00               	movlw	0
  8055  003C4A  6E5A               	movwf	_eusart2RxHead^0,c	;volatile
  8056                           
  8057                           ;mcc_generated_files/eusart2.c: 127:     eusart2RxTail = 0;
  8058  003C4C  0E00               	movlw	0
  8059  003C4E  6FE5               	movwf	_eusart2RxTail& (0+255),b	;volatile
  8060                           
  8061                           ;mcc_generated_files/eusart2.c: 128:     eusart2RxCount = 0;
  8062  003C50  0E00               	movlw	0
  8063  003C52  6FE4               	movwf	_eusart2RxCount& (0+255),b	;volatile
  8064  003C54                     
  8065                           ; BSR set to: 0
  8066                           ;mcc_generated_files/eusart2.c: 131:     PIE3bits.RC2IE = 1;
  8067  003C54  010E               	movlb	14	; () banked
  8068  003C56  8FC5               	bsf	197,7,b	;volatile
  8069  003C58                     
  8070                           ; BSR set to: 14
  8071  003C58  0012               	return		;funcret
  8072  003C5A                     __end_of_EUSART2_Initialize:
  8073                           	opt callstack 0
  8074                           
  8075 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
  8076 ;; Defined at:
  8077 ;;		line 287 in file "mcc_generated_files/eusart2.c"
  8078 ;; Parameters:    Size  Location     Type
  8079 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  8080 ;;		 -> EUSART2_Transmit_ISR(1), 
  8081 ;; Auto vars:     Size  Location     Type
  8082 ;;		None
  8083 ;; Return value:  Size  Location     Type
  8084 ;;                  1    wreg      void 
  8085 ;; Registers used:
  8086 ;;		wreg, status,2, status,0
  8087 ;; Tracked objects:
  8088 ;;		On entry : 0/0
  8089 ;;		On exit  : 0/0
  8090 ;;		Unchanged: 0/0
  8091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8092 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8095 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8096 ;;Total ram usage:        2 bytes
  8097 ;; Hardware stack levels used:    1
  8098 ;; Hardware stack levels required when called:    4
  8099 ;; This function calls:
  8100 ;;		Nothing
  8101 ;; This function is called by:
  8102 ;;		_EUSART2_Initialize
  8103 ;; This function uses a non-reentrant model
  8104 ;;
  8105                           
  8106                           	psect	text22
  8107  0046D8                     __ptext22:
  8108                           	opt callstack 0
  8109  0046D8                     _EUSART2_SetTxInterruptHandler:
  8110                           	opt callstack 24
  8111  0046D8                     
  8112                           ;mcc_generated_files/eusart2.c: 288:     EUSART2_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  8113  0046D8  C005  F0FC         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
  8114  0046DC  C006  F0FD         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
  8115  0046E0  0012               	return		;funcret
  8116  0046E2                     __end_of_EUSART2_SetTxInterruptHandler:
  8117                           	opt callstack 0
  8118                           
  8119 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
  8120 ;; Defined at:
  8121 ;;		line 291 in file "mcc_generated_files/eusart2.c"
  8122 ;; Parameters:    Size  Location     Type
  8123 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  8124 ;;		 -> EUSART2_Receive_ISR(1), 
  8125 ;; Auto vars:     Size  Location     Type
  8126 ;;		None
  8127 ;; Return value:  Size  Location     Type
  8128 ;;                  1    wreg      void 
  8129 ;; Registers used:
  8130 ;;		wreg, status,2, status,0
  8131 ;; Tracked objects:
  8132 ;;		On entry : 0/0
  8133 ;;		On exit  : 0/0
  8134 ;;		Unchanged: 0/0
  8135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8136 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8139 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8140 ;;Total ram usage:        2 bytes
  8141 ;; Hardware stack levels used:    1
  8142 ;; Hardware stack levels required when called:    4
  8143 ;; This function calls:
  8144 ;;		Nothing
  8145 ;; This function is called by:
  8146 ;;		_EUSART2_Initialize
  8147 ;; This function uses a non-reentrant model
  8148 ;;
  8149                           
  8150                           	psect	text23
  8151  0046E2                     __ptext23:
  8152                           	opt callstack 0
  8153  0046E2                     _EUSART2_SetRxInterruptHandler:
  8154                           	opt callstack 24
  8155  0046E2                     
  8156                           ;mcc_generated_files/eusart2.c: 292:     EUSART2_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  8157  0046E2  C005  F1E9         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
  8158  0046E6  C006  F1EA         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
  8159  0046EA  0012               	return		;funcret
  8160  0046EC                     __end_of_EUSART2_SetRxInterruptHandler:
  8161                           	opt callstack 0
  8162                           
  8163 ;; *************** function _EUSART2_SetOverrunErrorHandler *****************
  8164 ;; Defined at:
  8165 ;;		line 279 in file "mcc_generated_files/eusart2.c"
  8166 ;; Parameters:    Size  Location     Type
  8167 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  8168 ;;		 -> EUSART2_DefaultOverrunErrorHandler(1), 
  8169 ;; Auto vars:     Size  Location     Type
  8170 ;;		None
  8171 ;; Return value:  Size  Location     Type
  8172 ;;                  1    wreg      void 
  8173 ;; Registers used:
  8174 ;;		wreg, status,2, status,0
  8175 ;; Tracked objects:
  8176 ;;		On entry : 0/0
  8177 ;;		On exit  : 0/0
  8178 ;;		Unchanged: 0/0
  8179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8180 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8183 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8184 ;;Total ram usage:        2 bytes
  8185 ;; Hardware stack levels used:    1
  8186 ;; Hardware stack levels required when called:    4
  8187 ;; This function calls:
  8188 ;;		Nothing
  8189 ;; This function is called by:
  8190 ;;		_EUSART2_Initialize
  8191 ;; This function uses a non-reentrant model
  8192 ;;
  8193                           
  8194                           	psect	text24
  8195  0046EC                     __ptext24:
  8196                           	opt callstack 0
  8197  0046EC                     _EUSART2_SetOverrunErrorHandler:
  8198                           	opt callstack 24
  8199  0046EC                     
  8200                           ;mcc_generated_files/eusart2.c: 280:     EUSART2_OverrunErrorHandler = interruptHandler;
  8201  0046EC  C005  F1E1         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler,_EUSART2_OverrunErrorHandler
  8202  0046F0  C006  F1E2         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler+1,_EUSART2_OverrunErrorHandler+1
  8203  0046F4  0012               	return		;funcret
  8204  0046F6                     __end_of_EUSART2_SetOverrunErrorHandler:
  8205                           	opt callstack 0
  8206                           
  8207 ;; *************** function _EUSART2_SetFramingErrorHandler *****************
  8208 ;; Defined at:
  8209 ;;		line 275 in file "mcc_generated_files/eusart2.c"
  8210 ;; Parameters:    Size  Location     Type
  8211 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  8212 ;;		 -> EUSART2_DefaultFramingErrorHandler(1), 
  8213 ;; Auto vars:     Size  Location     Type
  8214 ;;		None
  8215 ;; Return value:  Size  Location     Type
  8216 ;;                  1    wreg      void 
  8217 ;; Registers used:
  8218 ;;		wreg, status,2, status,0
  8219 ;; Tracked objects:
  8220 ;;		On entry : 0/0
  8221 ;;		On exit  : 0/0
  8222 ;;		Unchanged: 0/0
  8223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8224 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8227 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8228 ;;Total ram usage:        2 bytes
  8229 ;; Hardware stack levels used:    1
  8230 ;; Hardware stack levels required when called:    4
  8231 ;; This function calls:
  8232 ;;		Nothing
  8233 ;; This function is called by:
  8234 ;;		_EUSART2_Initialize
  8235 ;; This function uses a non-reentrant model
  8236 ;;
  8237                           
  8238                           	psect	text25
  8239  0046F6                     __ptext25:
  8240                           	opt callstack 0
  8241  0046F6                     _EUSART2_SetFramingErrorHandler:
  8242                           	opt callstack 24
  8243  0046F6                     
  8244                           ;mcc_generated_files/eusart2.c: 276:     EUSART2_FramingErrorHandler = interruptHandler;
  8245  0046F6  C005  F1E3         	movff	EUSART2_SetFramingErrorHandler@interruptHandler,_EUSART2_FramingErrorHandler
  8246  0046FA  C006  F1E4         	movff	EUSART2_SetFramingErrorHandler@interruptHandler+1,_EUSART2_FramingErrorHandler+1
  8247  0046FE  0012               	return		;funcret
  8248  004700                     __end_of_EUSART2_SetFramingErrorHandler:
  8249                           	opt callstack 0
  8250                           
  8251 ;; *************** function _EUSART2_SetErrorHandler *****************
  8252 ;; Defined at:
  8253 ;;		line 283 in file "mcc_generated_files/eusart2.c"
  8254 ;; Parameters:    Size  Location     Type
  8255 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  8256 ;;		 -> EUSART2_DefaultErrorHandler(1), 
  8257 ;; Auto vars:     Size  Location     Type
  8258 ;;		None
  8259 ;; Return value:  Size  Location     Type
  8260 ;;                  1    wreg      void 
  8261 ;; Registers used:
  8262 ;;		wreg, status,2, status,0
  8263 ;; Tracked objects:
  8264 ;;		On entry : 0/0
  8265 ;;		On exit  : 0/0
  8266 ;;		Unchanged: 0/0
  8267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8268 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8271 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8272 ;;Total ram usage:        2 bytes
  8273 ;; Hardware stack levels used:    1
  8274 ;; Hardware stack levels required when called:    4
  8275 ;; This function calls:
  8276 ;;		Nothing
  8277 ;; This function is called by:
  8278 ;;		_EUSART2_Initialize
  8279 ;; This function uses a non-reentrant model
  8280 ;;
  8281                           
  8282                           	psect	text26
  8283  004700                     __ptext26:
  8284                           	opt callstack 0
  8285  004700                     _EUSART2_SetErrorHandler:
  8286                           	opt callstack 24
  8287  004700                     
  8288                           ;mcc_generated_files/eusart2.c: 284:     EUSART2_ErrorHandler = interruptHandler;
  8289  004700  C005  F1DF         	movff	EUSART2_SetErrorHandler@interruptHandler,_EUSART2_ErrorHandler
  8290  004704  C006  F1E0         	movff	EUSART2_SetErrorHandler@interruptHandler+1,_EUSART2_ErrorHandler+1
  8291  004708  0012               	return		;funcret
  8292  00470A                     __end_of_EUSART2_SetErrorHandler:
  8293                           	opt callstack 0
  8294                           
  8295 ;; *************** function _EUSART1_Initialize *****************
  8296 ;; Defined at:
  8297 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  8298 ;; Parameters:    Size  Location     Type
  8299 ;;		None
  8300 ;; Auto vars:     Size  Location     Type
  8301 ;;		None
  8302 ;; Return value:  Size  Location     Type
  8303 ;;                  1    wreg      void 
  8304 ;; Registers used:
  8305 ;;		wreg, status,2, status,0, cstack
  8306 ;; Tracked objects:
  8307 ;;		On entry : 0/0
  8308 ;;		On exit  : 0/0
  8309 ;;		Unchanged: 0/0
  8310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8315 ;;Total ram usage:        0 bytes
  8316 ;; Hardware stack levels used:    1
  8317 ;; Hardware stack levels required when called:    5
  8318 ;; This function calls:
  8319 ;;		_EUSART1_SetErrorHandler
  8320 ;;		_EUSART1_SetFramingErrorHandler
  8321 ;;		_EUSART1_SetOverrunErrorHandler
  8322 ;;		_EUSART1_SetRxInterruptHandler
  8323 ;;		_EUSART1_SetTxInterruptHandler
  8324 ;; This function is called by:
  8325 ;;		_SYSTEM_Initialize
  8326 ;; This function uses a non-reentrant model
  8327 ;;
  8328                           
  8329                           	psect	text27
  8330  003B5C                     __ptext27:
  8331                           	opt callstack 0
  8332  003B5C                     _EUSART1_Initialize:
  8333                           	opt callstack 24
  8334  003B5C                     
  8335                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
  8336  003B5C  010E               	movlb	14	; () banked
  8337  003B5E  9BC5               	bcf	197,5,b	;volatile
  8338  003B60                     
  8339                           ; BSR set to: 14
  8340                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  8341  003B60  0EDA               	movlw	low _EUSART1_Receive_ISR
  8342  003B62  6E05               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
  8343  003B64  0E36               	movlw	high _EUSART1_Receive_ISR
  8344  003B66  6E06               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
  8345  003B68  EC8A  F023         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  8346  003B6C                     
  8347                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
  8348  003B6C  010E               	movlb	14	; () banked
  8349  003B6E  99C5               	bcf	197,4,b	;volatile
  8350                           
  8351                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  8352  003B70  0E70               	movlw	low _EUSART1_Transmit_ISR
  8353  003B72  6E05               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
  8354  003B74  0E42               	movlw	high _EUSART1_Transmit_ISR
  8355  003B76  6E06               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
  8356  003B78  EC85  F023         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  8357  003B7C                     
  8358                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
  8359  003B7C  0E08               	movlw	8
  8360  003B7E  6E9F               	movwf	159,c	;volatile
  8361  003B80                     
  8362                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
  8363  003B80  0E90               	movlw	144
  8364  003B82  6E9D               	movwf	157,c	;volatile
  8365  003B84                     
  8366                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
  8367  003B84  0E24               	movlw	36
  8368  003B86  6E9E               	movwf	158,c	;volatile
  8369  003B88                     
  8370                           ;mcc_generated_files/eusart1.c: 108:     SP1BRGL = 0xA0;
  8371  003B88  0EA0               	movlw	160
  8372  003B8A  6E9B               	movwf	155,c	;volatile
  8373  003B8C                     
  8374                           ;mcc_generated_files/eusart1.c: 111:     SP1BRGH = 0x03;
  8375  003B8C  0E03               	movlw	3
  8376  003B8E  6E9C               	movwf	156,c	;volatile
  8377  003B90                     
  8378                           ;mcc_generated_files/eusart1.c: 112:     SP1BRGH = 0x01;
  8379  003B90  0E01               	movlw	1
  8380  003B92  6E9C               	movwf	156,c	;volatile
  8381                           
  8382                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  8383  003B94  0E76               	movlw	low _EUSART1_DefaultFramingErrorHandler
  8384  003B96  6E05               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  8385  003B98  0E47               	movlw	high _EUSART1_DefaultFramingErrorHandler
  8386  003B9A  6E06               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  8387  003B9C  EC94  F023         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  8388                           
  8389                           ;mcc_generated_files/eusart1.c: 116:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  8390  003BA0  0E60               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  8391  003BA2  6E05               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  8392  003BA4  0E47               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  8393  003BA6  6E06               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  8394  003BA8  EC8F  F023         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  8395                           
  8396                           ;mcc_generated_files/eusart1.c: 117:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  8397  003BAC  0E66               	movlw	low _EUSART1_DefaultErrorHandler
  8398  003BAE  6E05               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  8399  003BB0  0E47               	movlw	high _EUSART1_DefaultErrorHandler
  8400  003BB2  6E06               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  8401  003BB4  EC99  F023         	call	_EUSART1_SetErrorHandler	;wreg free
  8402  003BB8                     
  8403                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  8404  003BB8  0E00               	movlw	0
  8405  003BBA  0100               	movlb	0	; () banked
  8406  003BBC  6FDE               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  8407  003BBE                     
  8408                           ; BSR set to: 0
  8409                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxHead = 0;
  8410  003BBE  0E00               	movlw	0
  8411  003BC0  6FE2               	movwf	_eusart1TxHead& (0+255),b	;volatile
  8412  003BC2                     
  8413                           ; BSR set to: 0
  8414                           ;mcc_generated_files/eusart1.c: 123:     eusart1TxTail = 0;
  8415  003BC2  0E00               	movlw	0
  8416  003BC4  6FE1               	movwf	_eusart1TxTail& (0+255),b	;volatile
  8417  003BC6                     
  8418                           ; BSR set to: 0
  8419                           ;mcc_generated_files/eusart1.c: 124:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  8420  003BC6  0E10               	movlw	16
  8421  003BC8  6FFE               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
  8422  003BCA                     
  8423                           ; BSR set to: 0
  8424                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxHead = 0;
  8425  003BCA  0E00               	movlw	0
  8426  003BCC  6E59               	movwf	_eusart1RxHead^0,c	;volatile
  8427  003BCE                     
  8428                           ; BSR set to: 0
  8429                           ;mcc_generated_files/eusart1.c: 127:     eusart1RxTail = 0;
  8430  003BCE  0E00               	movlw	0
  8431  003BD0  6FE0               	movwf	_eusart1RxTail& (0+255),b	;volatile
  8432  003BD2                     
  8433                           ; BSR set to: 0
  8434                           ;mcc_generated_files/eusart1.c: 128:     eusart1RxCount = 0;
  8435  003BD2  0E00               	movlw	0
  8436  003BD4  6FDF               	movwf	_eusart1RxCount& (0+255),b	;volatile
  8437  003BD6                     
  8438                           ; BSR set to: 0
  8439                           ;mcc_generated_files/eusart1.c: 131:     PIE3bits.RC1IE = 1;
  8440  003BD6  010E               	movlb	14	; () banked
  8441  003BD8  8BC5               	bsf	197,5,b	;volatile
  8442  003BDA                     
  8443                           ; BSR set to: 14
  8444  003BDA  0012               	return		;funcret
  8445  003BDC                     __end_of_EUSART1_Initialize:
  8446                           	opt callstack 0
  8447                           
  8448 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  8449 ;; Defined at:
  8450 ;;		line 278 in file "mcc_generated_files/eusart1.c"
  8451 ;; Parameters:    Size  Location     Type
  8452 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  8453 ;;		 -> EUSART1_Transmit_ISR(1), 
  8454 ;; Auto vars:     Size  Location     Type
  8455 ;;		None
  8456 ;; Return value:  Size  Location     Type
  8457 ;;                  1    wreg      void 
  8458 ;; Registers used:
  8459 ;;		wreg, status,2, status,0
  8460 ;; Tracked objects:
  8461 ;;		On entry : 0/0
  8462 ;;		On exit  : 0/0
  8463 ;;		Unchanged: 0/0
  8464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8465 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8468 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8469 ;;Total ram usage:        2 bytes
  8470 ;; Hardware stack levels used:    1
  8471 ;; Hardware stack levels required when called:    4
  8472 ;; This function calls:
  8473 ;;		Nothing
  8474 ;; This function is called by:
  8475 ;;		_EUSART1_Initialize
  8476 ;; This function uses a non-reentrant model
  8477 ;;
  8478                           
  8479                           	psect	text28
  8480  00470A                     __ptext28:
  8481                           	opt callstack 0
  8482  00470A                     _EUSART1_SetTxInterruptHandler:
  8483                           	opt callstack 24
  8484  00470A                     
  8485                           ;mcc_generated_files/eusart1.c: 279:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  8486  00470A  C005  F1E7         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  8487  00470E  C006  F1E8         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  8488  004712  0012               	return		;funcret
  8489  004714                     __end_of_EUSART1_SetTxInterruptHandler:
  8490                           	opt callstack 0
  8491                           
  8492 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  8493 ;; Defined at:
  8494 ;;		line 282 in file "mcc_generated_files/eusart1.c"
  8495 ;; Parameters:    Size  Location     Type
  8496 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  8497 ;;		 -> EUSART1_Receive_ISR(1), 
  8498 ;; Auto vars:     Size  Location     Type
  8499 ;;		None
  8500 ;; Return value:  Size  Location     Type
  8501 ;;                  1    wreg      void 
  8502 ;; Registers used:
  8503 ;;		wreg, status,2, status,0
  8504 ;; Tracked objects:
  8505 ;;		On entry : 0/0
  8506 ;;		On exit  : 0/0
  8507 ;;		Unchanged: 0/0
  8508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8509 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8512 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8513 ;;Total ram usage:        2 bytes
  8514 ;; Hardware stack levels used:    1
  8515 ;; Hardware stack levels required when called:    4
  8516 ;; This function calls:
  8517 ;;		Nothing
  8518 ;; This function is called by:
  8519 ;;		_EUSART1_Initialize
  8520 ;; This function uses a non-reentrant model
  8521 ;;
  8522                           
  8523                           	psect	text29
  8524  004714                     __ptext29:
  8525                           	opt callstack 0
  8526  004714                     _EUSART1_SetRxInterruptHandler:
  8527                           	opt callstack 24
  8528  004714                     
  8529                           ;mcc_generated_files/eusart1.c: 283:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  8530  004714  C005  F1E5         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  8531  004718  C006  F1E6         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  8532  00471C  0012               	return		;funcret
  8533  00471E                     __end_of_EUSART1_SetRxInterruptHandler:
  8534                           	opt callstack 0
  8535                           
  8536 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  8537 ;; Defined at:
  8538 ;;		line 270 in file "mcc_generated_files/eusart1.c"
  8539 ;; Parameters:    Size  Location     Type
  8540 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  8541 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  8542 ;; Auto vars:     Size  Location     Type
  8543 ;;		None
  8544 ;; Return value:  Size  Location     Type
  8545 ;;                  1    wreg      void 
  8546 ;; Registers used:
  8547 ;;		wreg, status,2, status,0
  8548 ;; Tracked objects:
  8549 ;;		On entry : 0/0
  8550 ;;		On exit  : 0/0
  8551 ;;		Unchanged: 0/0
  8552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8553 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8556 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8557 ;;Total ram usage:        2 bytes
  8558 ;; Hardware stack levels used:    1
  8559 ;; Hardware stack levels required when called:    4
  8560 ;; This function calls:
  8561 ;;		Nothing
  8562 ;; This function is called by:
  8563 ;;		_EUSART1_Initialize
  8564 ;; This function uses a non-reentrant model
  8565 ;;
  8566                           
  8567                           	psect	text30
  8568  00471E                     __ptext30:
  8569                           	opt callstack 0
  8570  00471E                     _EUSART1_SetOverrunErrorHandler:
  8571                           	opt callstack 24
  8572  00471E                     
  8573                           ;mcc_generated_files/eusart1.c: 271:     EUSART1_OverrunErrorHandler = interruptHandler;
  8574  00471E  C005  F1DB         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  8575  004722  C006  F1DC         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  8576  004726  0012               	return		;funcret
  8577  004728                     __end_of_EUSART1_SetOverrunErrorHandler:
  8578                           	opt callstack 0
  8579                           
  8580 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  8581 ;; Defined at:
  8582 ;;		line 266 in file "mcc_generated_files/eusart1.c"
  8583 ;; Parameters:    Size  Location     Type
  8584 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  8585 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  8586 ;; Auto vars:     Size  Location     Type
  8587 ;;		None
  8588 ;; Return value:  Size  Location     Type
  8589 ;;                  1    wreg      void 
  8590 ;; Registers used:
  8591 ;;		wreg, status,2, status,0
  8592 ;; Tracked objects:
  8593 ;;		On entry : 0/0
  8594 ;;		On exit  : 0/0
  8595 ;;		Unchanged: 0/0
  8596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8597 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8600 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8601 ;;Total ram usage:        2 bytes
  8602 ;; Hardware stack levels used:    1
  8603 ;; Hardware stack levels required when called:    4
  8604 ;; This function calls:
  8605 ;;		Nothing
  8606 ;; This function is called by:
  8607 ;;		_EUSART1_Initialize
  8608 ;; This function uses a non-reentrant model
  8609 ;;
  8610                           
  8611                           	psect	text31
  8612  004728                     __ptext31:
  8613                           	opt callstack 0
  8614  004728                     _EUSART1_SetFramingErrorHandler:
  8615                           	opt callstack 24
  8616  004728                     
  8617                           ;mcc_generated_files/eusart1.c: 267:     EUSART1_FramingErrorHandler = interruptHandler;
  8618  004728  C005  F1DD         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  8619  00472C  C006  F1DE         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  8620  004730  0012               	return		;funcret
  8621  004732                     __end_of_EUSART1_SetFramingErrorHandler:
  8622                           	opt callstack 0
  8623                           
  8624 ;; *************** function _EUSART1_SetErrorHandler *****************
  8625 ;; Defined at:
  8626 ;;		line 274 in file "mcc_generated_files/eusart1.c"
  8627 ;; Parameters:    Size  Location     Type
  8628 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  8629 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  8630 ;; Auto vars:     Size  Location     Type
  8631 ;;		None
  8632 ;; Return value:  Size  Location     Type
  8633 ;;                  1    wreg      void 
  8634 ;; Registers used:
  8635 ;;		wreg, status,2, status,0
  8636 ;; Tracked objects:
  8637 ;;		On entry : 0/0
  8638 ;;		On exit  : 0/0
  8639 ;;		Unchanged: 0/0
  8640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8641 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8644 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8645 ;;Total ram usage:        2 bytes
  8646 ;; Hardware stack levels used:    1
  8647 ;; Hardware stack levels required when called:    4
  8648 ;; This function calls:
  8649 ;;		Nothing
  8650 ;; This function is called by:
  8651 ;;		_EUSART1_Initialize
  8652 ;; This function uses a non-reentrant model
  8653 ;;
  8654                           
  8655                           	psect	text32
  8656  004732                     __ptext32:
  8657                           	opt callstack 0
  8658  004732                     _EUSART1_SetErrorHandler:
  8659                           	opt callstack 24
  8660  004732                     
  8661                           ;mcc_generated_files/eusart1.c: 275:     EUSART1_ErrorHandler = interruptHandler;
  8662  004732  C005  F1D9         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  8663  004736  C006  F1DA         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  8664  00473A  0012               	return		;funcret
  8665  00473C                     __end_of_EUSART1_SetErrorHandler:
  8666                           	opt callstack 0
  8667                           
  8668 ;; *************** function _ADCC_Initialize *****************
  8669 ;; Defined at:
  8670 ;;		line 62 in file "mcc_generated_files/adcc.c"
  8671 ;; Parameters:    Size  Location     Type
  8672 ;;		None
  8673 ;; Auto vars:     Size  Location     Type
  8674 ;;		None
  8675 ;; Return value:  Size  Location     Type
  8676 ;;                  1    wreg      void 
  8677 ;; Registers used:
  8678 ;;		wreg, status,2
  8679 ;; Tracked objects:
  8680 ;;		On entry : 0/0
  8681 ;;		On exit  : 0/0
  8682 ;;		Unchanged: 0/0
  8683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8688 ;;Total ram usage:        0 bytes
  8689 ;; Hardware stack levels used:    1
  8690 ;; Hardware stack levels required when called:    4
  8691 ;; This function calls:
  8692 ;;		Nothing
  8693 ;; This function is called by:
  8694 ;;		_SYSTEM_Initialize
  8695 ;; This function uses a non-reentrant model
  8696 ;;
  8697                           
  8698                           	psect	text33
  8699  00406A                     __ptext33:
  8700                           	opt callstack 0
  8701  00406A                     _ADCC_Initialize:
  8702                           	opt callstack 25
  8703  00406A                     
  8704                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
  8705  00406A  0E00               	movlw	0
  8706  00406C  6E6A               	movwf	106,c	;volatile
  8707                           
  8708                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
  8709  00406E  0E00               	movlw	0
  8710  004070  6E6B               	movwf	107,c	;volatile
  8711                           
  8712                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
  8713  004072  0E00               	movlw	0
  8714  004074  6E6C               	movwf	108,c	;volatile
  8715                           
  8716                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
  8717  004076  0E00               	movlw	0
  8718  004078  6E6D               	movwf	109,c	;volatile
  8719                           
  8720                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
  8721  00407A  0E00               	movlw	0
  8722  00407C  6E68               	movwf	104,c	;volatile
  8723                           
  8724                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
  8725  00407E  0E00               	movlw	0
  8726  004080  6E69               	movwf	105,c	;volatile
  8727                           
  8728                           ;mcc_generated_files/adcc.c: 78:     ADRPT = 0x00;
  8729  004082  0E00               	movlw	0
  8730  004084  6E66               	movwf	102,c	;volatile
  8731                           
  8732                           ;mcc_generated_files/adcc.c: 80:     ADPCH = 0x00;
  8733  004086  0E00               	movlw	0
  8734  004088  010F               	movlb	15	; () banked
  8735  00408A  6F5F               	movwf	95,b	;volatile
  8736                           
  8737                           ;mcc_generated_files/adcc.c: 82:     ADCAP = 0x00;
  8738  00408C  0E00               	movlw	0
  8739  00408E  6F5D               	movwf	93,b	;volatile
  8740                           
  8741                           ;mcc_generated_files/adcc.c: 84:     ADPRE = 0x00;
  8742  004090  0E00               	movlw	0
  8743  004092  6F5E               	movwf	94,b	;volatile
  8744                           
  8745                           ;mcc_generated_files/adcc.c: 86:     ADCON1 = 0x00;
  8746  004094  0E00               	movlw	0
  8747  004096  6F59               	movwf	89,b	;volatile
  8748                           
  8749                           ;mcc_generated_files/adcc.c: 88:     ADCON2 = 0x00;
  8750  004098  0E00               	movlw	0
  8751  00409A  6F5A               	movwf	90,b	;volatile
  8752                           
  8753                           ;mcc_generated_files/adcc.c: 90:     ADCON3 = 0x00;
  8754  00409C  0E00               	movlw	0
  8755  00409E  6F5B               	movwf	91,b	;volatile
  8756                           
  8757                           ;mcc_generated_files/adcc.c: 92:     ADSTAT = 0x00;
  8758  0040A0  0E00               	movlw	0
  8759  0040A2  6E65               	movwf	101,c	;volatile
  8760                           
  8761                           ;mcc_generated_files/adcc.c: 94:     ADREF = 0x00;
  8762  0040A4  0E00               	movlw	0
  8763  0040A6  6F58               	movwf	88,b	;volatile
  8764                           
  8765                           ;mcc_generated_files/adcc.c: 96:     ADACT = 0x00;
  8766  0040A8  0E00               	movlw	0
  8767  0040AA  6F56               	movwf	86,b	;volatile
  8768                           
  8769                           ;mcc_generated_files/adcc.c: 98:     ADCLK = 0x00;
  8770  0040AC  0E00               	movlw	0
  8771  0040AE  6F57               	movwf	87,b	;volatile
  8772                           
  8773                           ;mcc_generated_files/adcc.c: 100:     ADCON0 = 0x94;
  8774  0040B0  0E94               	movlw	148
  8775  0040B2  6E60               	movwf	96,c	;volatile
  8776                           
  8777                           ;mcc_generated_files/adcc.c: 102:     ADACQ = 0x0A;
  8778  0040B4  0E0A               	movlw	10
  8779  0040B6  6F5C               	movwf	92,b	;volatile
  8780  0040B8                     
  8781                           ; BSR set to: 15
  8782  0040B8  0012               	return		;funcret
  8783  0040BA                     __end_of_ADCC_Initialize:
  8784                           	opt callstack 0
  8785                           
  8786 ;; *************** function _ADCC_DisableContinuousConversion *****************
  8787 ;; Defined at:
  8788 ;;		line 267 in file "mcc_generated_files/adcc.c"
  8789 ;; Parameters:    Size  Location     Type
  8790 ;;		None
  8791 ;; Auto vars:     Size  Location     Type
  8792 ;;		None
  8793 ;; Return value:  Size  Location     Type
  8794 ;;                  1    wreg      void 
  8795 ;; Registers used:
  8796 ;;		None
  8797 ;; Tracked objects:
  8798 ;;		On entry : 0/0
  8799 ;;		On exit  : 0/0
  8800 ;;		Unchanged: 0/0
  8801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8806 ;;Total ram usage:        0 bytes
  8807 ;; Hardware stack levels used:    1
  8808 ;; Hardware stack levels required when called:    4
  8809 ;; This function calls:
  8810 ;;		Nothing
  8811 ;; This function is called by:
  8812 ;;		_SYSTEM_Initialize
  8813 ;; This function uses a non-reentrant model
  8814 ;;
  8815                           
  8816                           	psect	text34
  8817  004770                     __ptext34:
  8818                           	opt callstack 0
  8819  004770                     _ADCC_DisableContinuousConversion:
  8820                           	opt callstack 25
  8821  004770                     
  8822                           ;mcc_generated_files/adcc.c: 270:     ADCON0bits.ADCONT = 0;
  8823  004770  9C60               	bcf	96,6,c	;volatile
  8824  004772  0012               	return		;funcret
  8825  004774                     __end_of_ADCC_DisableContinuousConversion:
  8826                           	opt callstack 0
  8827                           
  8828 ;; *************** function _PrintModbus *****************
  8829 ;; Defined at:
  8830 ;;		line 90 in file "Modbus.c"
  8831 ;; Parameters:    Size  Location     Type
  8832 ;;		None
  8833 ;; Auto vars:     Size  Location     Type
  8834 ;;  j               2   50[BANK0 ] int 
  8835 ;;  i               2   52[BANK0 ] int 
  8836 ;; Return value:  Size  Location     Type
  8837 ;;                  1    wreg      void 
  8838 ;; Registers used:
  8839 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8840 ;; Tracked objects:
  8841 ;;		On entry : 0/0
  8842 ;;		On exit  : 0/0
  8843 ;;		Unchanged: 0/0
  8844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8846 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8847 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8848 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8849 ;;Total ram usage:        9 bytes
  8850 ;; Hardware stack levels used:    1
  8851 ;; Hardware stack levels required when called:   13
  8852 ;; This function calls:
  8853 ;;		_printf
  8854 ;; This function is called by:
  8855 ;;		_main
  8856 ;; This function uses a non-reentrant model
  8857 ;;
  8858                           
  8859                           	psect	text35
  8860  0017D0                     __ptext35:
  8861                           	opt callstack 0
  8862  0017D0                     _PrintModbus:
  8863                           	opt callstack 17
  8864  0017D0                     
  8865                           ;Modbus.c: 95:     printf("\r\nModbus Data Capture Complete:\r\n");
  8866  0017D0  0EFD               	movlw	low STR_10
  8867  0017D2  0100               	movlb	0	; () banked
  8868  0017D4  6F7D               	movwf	printf@fmt& (0+255),b
  8869  0017D6  0EFB               	movlw	high STR_10
  8870  0017D8  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8871  0017DA  ECAC  F022         	call	_printf	;wreg free
  8872  0017DE                     
  8873                           ;Modbus.c: 97:     if(ModbusData[1] == 0x03){
  8874  0017DE  0E03               	movlw	3
  8875  0017E0  0101               	movlb	1	; () banked
  8876  0017E2  1901               	xorwf	(_ModbusData+1)& (0+255),w,b
  8877  0017E4  A4D8               	btfss	status,2,c
  8878  0017E6  EFF7  F00B         	goto	u7871
  8879  0017EA  EFF9  F00B         	goto	u7870
  8880  0017EE                     u7871:
  8881  0017EE  EF4B  F00C         	goto	l7872
  8882  0017F2                     u7870:
  8883  0017F2                     
  8884                           ; BSR set to: 1
  8885                           ;Modbus.c: 99:         printf("   Byte 01: 0x%02x - Card Address\r\n",ModbusData[0]);
  8886  0017F2  0E94               	movlw	low STR_11
  8887  0017F4  0100               	movlb	0	; () banked
  8888  0017F6  6F7D               	movwf	printf@fmt& (0+255),b
  8889  0017F8  0EFB               	movlw	high STR_11
  8890  0017FA  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8891  0017FC  C100  F07F         	movff	_ModbusData,?_printf+2
  8892  001800  6B80               	clrf	(?_printf+3)& (0+255),b
  8893  001802  ECAC  F022         	call	_printf	;wreg free
  8894                           
  8895                           ;Modbus.c: 100:         printf("   Byte 02: 0x%02x - Function Code (Read Multiple Regist
      +                          ers)\r\n",ModbusData[1]);
  8896  001806  0E44               	movlw	low STR_12
  8897  001808  0100               	movlb	0	; () banked
  8898  00180A  6F7D               	movwf	printf@fmt& (0+255),b
  8899  00180C  0EF7               	movlw	high STR_12
  8900  00180E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8901  001810  C101  F07F         	movff	_ModbusData+1,?_printf+2
  8902  001814  6B80               	clrf	(?_printf+3)& (0+255),b
  8903  001816  ECAC  F022         	call	_printf	;wreg free
  8904                           
  8905                           ;Modbus.c: 101:         printf("   Byte 03: 0x%02x - 1st Reg Add Hi\r\n",ModbusData[2]);
  8906  00181A  0E47               	movlw	low STR_13
  8907  00181C  0100               	movlb	0	; () banked
  8908  00181E  6F7D               	movwf	printf@fmt& (0+255),b
  8909  001820  0EFA               	movlw	high STR_13
  8910  001822  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8911  001824  C102  F07F         	movff	_ModbusData+2,?_printf+2
  8912  001828  6B80               	clrf	(?_printf+3)& (0+255),b
  8913  00182A  ECAC  F022         	call	_printf	;wreg free
  8914                           
  8915                           ;Modbus.c: 102:         printf("   Byte 04: 0x%02x - 1st Reg Add Lo\r\n",ModbusData[3]);
  8916  00182E  0E6D               	movlw	low STR_14
  8917  001830  0100               	movlb	0	; () banked
  8918  001832  6F7D               	movwf	printf@fmt& (0+255),b
  8919  001834  0EFA               	movlw	high STR_14
  8920  001836  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8921  001838  C103  F07F         	movff	_ModbusData+3,?_printf+2
  8922  00183C  6B80               	clrf	(?_printf+3)& (0+255),b
  8923  00183E  ECAC  F022         	call	_printf	;wreg free
  8924                           
  8925                           ;Modbus.c: 103:         printf("   Byte 05: 0x%02x - Num of Reg Hi\r\n",ModbusData[4]);
  8926  001842  0E02               	movlw	low STR_15
  8927  001844  0100               	movlb	0	; () banked
  8928  001846  6F7D               	movwf	printf@fmt& (0+255),b
  8929  001848  0EFB               	movlw	high STR_15
  8930  00184A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8931  00184C  C104  F07F         	movff	_ModbusData+4,?_printf+2
  8932  001850  6B80               	clrf	(?_printf+3)& (0+255),b
  8933  001852  ECAC  F022         	call	_printf	;wreg free
  8934                           
  8935                           ;Modbus.c: 104:         printf("   Byte 06: 0x%02x - Num of Reg Lo\r\n",ModbusData[5]);
  8936  001856  0E27               	movlw	low STR_16
  8937  001858  0100               	movlb	0	; () banked
  8938  00185A  6F7D               	movwf	printf@fmt& (0+255),b
  8939  00185C  0EFB               	movlw	high STR_16
  8940  00185E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8941  001860  C105  F07F         	movff	_ModbusData+5,?_printf+2
  8942  001864  6B80               	clrf	(?_printf+3)& (0+255),b
  8943  001866  ECAC  F022         	call	_printf	;wreg free
  8944                           
  8945                           ;Modbus.c: 105:         printf("   Byte 06: 0x%02x - CRC Hi\r\n",ModbusData[6]);
  8946  00186A  0E1E               	movlw	low STR_17
  8947  00186C  0100               	movlb	0	; () banked
  8948  00186E  6F7D               	movwf	printf@fmt& (0+255),b
  8949  001870  0EFD               	movlw	high STR_17
  8950  001872  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8951  001874  C106  F07F         	movff	_ModbusData+6,?_printf+2
  8952  001878  6B80               	clrf	(?_printf+3)& (0+255),b
  8953  00187A  ECAC  F022         	call	_printf	;wreg free
  8954                           
  8955                           ;Modbus.c: 106:         printf("   Byte 07: 0x%02x - CRC Lo\r\n",ModbusData[7]);
  8956  00187E  0E3C               	movlw	low STR_18
  8957  001880  0100               	movlb	0	; () banked
  8958  001882  6F7D               	movwf	printf@fmt& (0+255),b
  8959  001884  0EFD               	movlw	high STR_18
  8960  001886  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8961  001888  C107  F07F         	movff	_ModbusData+7,?_printf+2
  8962  00188C  6B80               	clrf	(?_printf+3)& (0+255),b
  8963  00188E  ECAC  F022         	call	_printf	;wreg free
  8964                           
  8965                           ;Modbus.c: 108:     }else if(ModbusData[1] == 0x10){
  8966  001892  EF3E  F00D         	goto	l723
  8967  001896                     l7872:
  8968                           
  8969                           ; BSR set to: 1
  8970  001896  0E10               	movlw	16
  8971  001898  1901               	xorwf	(_ModbusData+1)& (0+255),w,b
  8972  00189A  A4D8               	btfss	status,2,c
  8973  00189C  EF52  F00C         	goto	u7881
  8974  0018A0  EF54  F00C         	goto	u7880
  8975  0018A4                     u7881:
  8976  0018A4  EF3E  F00D         	goto	l723
  8977  0018A8                     u7880:
  8978  0018A8                     
  8979                           ; BSR set to: 1
  8980                           ;Modbus.c: 110:         printf("   Byte 01: 0x%02x - Card Address\r\n",ModbusData[0]);
  8981  0018A8  0E94               	movlw	low STR_11
  8982  0018AA  0100               	movlb	0	; () banked
  8983  0018AC  6F7D               	movwf	printf@fmt& (0+255),b
  8984  0018AE  0EFB               	movlw	high STR_11
  8985  0018B0  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8986  0018B2  C100  F07F         	movff	_ModbusData,?_printf+2
  8987  0018B6  6B80               	clrf	(?_printf+3)& (0+255),b
  8988  0018B8  ECAC  F022         	call	_printf	;wreg free
  8989                           
  8990                           ;Modbus.c: 111:         printf("   Byte 02: 0x%02x - Function Code (Write Multiple Regis
      +                          ters)\r\n",ModbusData[1]);
  8991  0018BC  0E04               	movlw	low STR_20
  8992  0018BE  0100               	movlb	0	; () banked
  8993  0018C0  6F7D               	movwf	printf@fmt& (0+255),b
  8994  0018C2  0EF7               	movlw	high STR_20
  8995  0018C4  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  8996  0018C6  C101  F07F         	movff	_ModbusData+1,?_printf+2
  8997  0018CA  6B80               	clrf	(?_printf+3)& (0+255),b
  8998  0018CC  ECAC  F022         	call	_printf	;wreg free
  8999                           
  9000                           ;Modbus.c: 112:         printf("   Byte 03: 0x%02x - 1st Reg Add Hi\r\n",ModbusData[2]);
  9001  0018D0  0E47               	movlw	low STR_13
  9002  0018D2  0100               	movlb	0	; () banked
  9003  0018D4  6F7D               	movwf	printf@fmt& (0+255),b
  9004  0018D6  0EFA               	movlw	high STR_13
  9005  0018D8  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9006  0018DA  C102  F07F         	movff	_ModbusData+2,?_printf+2
  9007  0018DE  6B80               	clrf	(?_printf+3)& (0+255),b
  9008  0018E0  ECAC  F022         	call	_printf	;wreg free
  9009                           
  9010                           ;Modbus.c: 113:         printf("   Byte 04: 0x%02x - 1st Reg Add Lo\r\n",ModbusData[3]);
  9011  0018E4  0E6D               	movlw	low STR_14
  9012  0018E6  0100               	movlb	0	; () banked
  9013  0018E8  6F7D               	movwf	printf@fmt& (0+255),b
  9014  0018EA  0EFA               	movlw	high STR_14
  9015  0018EC  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9016  0018EE  C103  F07F         	movff	_ModbusData+3,?_printf+2
  9017  0018F2  6B80               	clrf	(?_printf+3)& (0+255),b
  9018  0018F4  ECAC  F022         	call	_printf	;wreg free
  9019                           
  9020                           ;Modbus.c: 114:         printf("   Byte 05: 0x%02x - Num of Reg Hi\r\n",ModbusData[4]);
  9021  0018F8  0E02               	movlw	low STR_15
  9022  0018FA  0100               	movlb	0	; () banked
  9023  0018FC  6F7D               	movwf	printf@fmt& (0+255),b
  9024  0018FE  0EFB               	movlw	high STR_15
  9025  001900  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9026  001902  C104  F07F         	movff	_ModbusData+4,?_printf+2
  9027  001906  6B80               	clrf	(?_printf+3)& (0+255),b
  9028  001908  ECAC  F022         	call	_printf	;wreg free
  9029                           
  9030                           ;Modbus.c: 115:         printf("   Byte 06: 0x%02x - Num of Reg Lo\r\n",ModbusData[5]);
  9031  00190C  0E27               	movlw	low STR_16
  9032  00190E  0100               	movlb	0	; () banked
  9033  001910  6F7D               	movwf	printf@fmt& (0+255),b
  9034  001912  0EFB               	movlw	high STR_16
  9035  001914  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9036  001916  C105  F07F         	movff	_ModbusData+5,?_printf+2
  9037  00191A  6B80               	clrf	(?_printf+3)& (0+255),b
  9038  00191C  ECAC  F022         	call	_printf	;wreg free
  9039                           
  9040                           ;Modbus.c: 116:         printf("   Byte 07: 0x%02x - Num Bytes More\r\n",ModbusData[6]);
  9041  001920  0E21               	movlw	low STR_25
  9042  001922  0100               	movlb	0	; () banked
  9043  001924  6F7D               	movwf	printf@fmt& (0+255),b
  9044  001926  0EFA               	movlw	high STR_25
  9045  001928  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9046  00192A  C106  F07F         	movff	_ModbusData+6,?_printf+2
  9047  00192E  6B80               	clrf	(?_printf+3)& (0+255),b
  9048  001930  ECAC  F022         	call	_printf	;wreg free
  9049  001934                     
  9050                           ;Modbus.c: 119:         int j = 1;
  9051  001934  0E00               	movlw	0
  9052  001936  0100               	movlb	0	; () banked
  9053  001938  6F93               	movwf	(PrintModbus@j+1)& (0+255),b
  9054  00193A  0E01               	movlw	1
  9055  00193C  6F92               	movwf	PrintModbus@j& (0+255),b
  9056  00193E                     
  9057                           ; BSR set to: 0
  9058                           ;Modbus.c: 120:         for(i=7; i< ModDataCnt -2 ; i++ ){
  9059  00193E  0E00               	movlw	0
  9060  001940  6F95               	movwf	(PrintModbus@i+1)& (0+255),b
  9061  001942  0E07               	movlw	7
  9062  001944  6F94               	movwf	PrintModbus@i& (0+255),b
  9063  001946  EFF4  F00C         	goto	l7886
  9064  00194A                     l7880:
  9065                           
  9066                           ; BSR set to: 0
  9067                           ;Modbus.c: 121:             printf("   Byte %02i: 0x%02x - Reg %i Hi (Add. 0x%02x 0x%02x
      +                          )\r\n", i+1, ModbusData[i],j, ModbusData[2], ModbusData[3] + j-1);
  9068  00194A  0EBD               	movlw	low STR_26
  9069  00194C  6F7D               	movwf	printf@fmt& (0+255),b
  9070  00194E  0EF7               	movlw	high STR_26
  9071  001950  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9072  001952  0E01               	movlw	1
  9073  001954  2594               	addwf	PrintModbus@i& (0+255),w,b
  9074  001956  6F7F               	movwf	(?_printf+2)& (0+255),b
  9075  001958  0E00               	movlw	0
  9076  00195A  2195               	addwfc	(PrintModbus@i+1)& (0+255),w,b
  9077  00195C  6F80               	movwf	(?_printf+3)& (0+255),b
  9078  00195E  0E00               	movlw	low _ModbusData
  9079  001960  2594               	addwf	PrintModbus@i& (0+255),w,b
  9080  001962  6ED9               	movwf	fsr2l,c
  9081  001964  0E01               	movlw	high _ModbusData
  9082  001966  2195               	addwfc	(PrintModbus@i+1)& (0+255),w,b
  9083  001968  6EDA               	movwf	fsr2h,c
  9084  00196A  50DF               	movf	indf2,w,c
  9085  00196C  6F8D               	movwf	??_PrintModbus& (0+255),b
  9086  00196E  518D               	movf	??_PrintModbus& (0+255),w,b
  9087  001970  6F81               	movwf	(?_printf+4)& (0+255),b
  9088  001972  6B82               	clrf	(?_printf+5)& (0+255),b
  9089  001974  C092  F083         	movff	PrintModbus@j,?_printf+6
  9090  001978  C093  F084         	movff	PrintModbus@j+1,?_printf+7
  9091  00197C  C102  F085         	movff	_ModbusData+2,?_printf+8
  9092  001980  6B86               	clrf	(?_printf+9)& (0+255),b
  9093  001982  0101               	movlb	1	; () banked
  9094  001984  5103               	movf	(_ModbusData+3)& (0+255),w,b
  9095  001986  0100               	movlb	0	; () banked
  9096  001988  2592               	addwf	PrintModbus@j& (0+255),w,b
  9097  00198A  6F8E               	movwf	(??_PrintModbus+1)& (0+255),b
  9098  00198C  0E00               	movlw	0
  9099  00198E  2193               	addwfc	(PrintModbus@j+1)& (0+255),w,b
  9100  001990  6F8F               	movwf	(??_PrintModbus+2)& (0+255),b
  9101  001992  0EFF               	movlw	255
  9102  001994  258E               	addwf	(??_PrintModbus+1)& (0+255),w,b
  9103  001996  6F87               	movwf	(?_printf+10)& (0+255),b
  9104  001998  0EFF               	movlw	255
  9105  00199A  218F               	addwfc	(??_PrintModbus+2)& (0+255),w,b
  9106  00199C  6F88               	movwf	(?_printf+11)& (0+255),b
  9107  00199E  ECAC  F022         	call	_printf	;wreg free
  9108  0019A2                     
  9109                           ;Modbus.c: 122:             i++;
  9110  0019A2  0100               	movlb	0	; () banked
  9111  0019A4  4B94               	infsnz	PrintModbus@i& (0+255),f,b
  9112  0019A6  2B95               	incf	(PrintModbus@i+1)& (0+255),f,b
  9113  0019A8                     
  9114                           ; BSR set to: 0
  9115                           ;Modbus.c: 123:             printf("   Byte %02i: 0x%02x - Reg %i Lo\r\n", i+1, ModbusDa
      +                          ta[i],j);
  9116  0019A8  0EB8               	movlw	low STR_27
  9117  0019AA  6F7D               	movwf	printf@fmt& (0+255),b
  9118  0019AC  0EFB               	movlw	high STR_27
  9119  0019AE  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9120  0019B0  0E01               	movlw	1
  9121  0019B2  2594               	addwf	PrintModbus@i& (0+255),w,b
  9122  0019B4  6F7F               	movwf	(?_printf+2)& (0+255),b
  9123  0019B6  0E00               	movlw	0
  9124  0019B8  2195               	addwfc	(PrintModbus@i+1)& (0+255),w,b
  9125  0019BA  6F80               	movwf	(?_printf+3)& (0+255),b
  9126  0019BC  0E00               	movlw	low _ModbusData
  9127  0019BE  2594               	addwf	PrintModbus@i& (0+255),w,b
  9128  0019C0  6ED9               	movwf	fsr2l,c
  9129  0019C2  0E01               	movlw	high _ModbusData
  9130  0019C4  2195               	addwfc	(PrintModbus@i+1)& (0+255),w,b
  9131  0019C6  6EDA               	movwf	fsr2h,c
  9132  0019C8  50DF               	movf	indf2,w,c
  9133  0019CA  6F8D               	movwf	??_PrintModbus& (0+255),b
  9134  0019CC  518D               	movf	??_PrintModbus& (0+255),w,b
  9135  0019CE  6F81               	movwf	(?_printf+4)& (0+255),b
  9136  0019D0  6B82               	clrf	(?_printf+5)& (0+255),b
  9137  0019D2  C092  F083         	movff	PrintModbus@j,?_printf+6
  9138  0019D6  C093  F084         	movff	PrintModbus@j+1,?_printf+7
  9139  0019DA  ECAC  F022         	call	_printf	;wreg free
  9140                           
  9141                           ;Modbus.c: 124:             j++;
  9142  0019DE  0100               	movlb	0	; () banked
  9143  0019E0  4B92               	infsnz	PrintModbus@j& (0+255),f,b
  9144  0019E2  2B93               	incf	(PrintModbus@j+1)& (0+255),f,b
  9145                           
  9146                           ;Modbus.c: 125:         }
  9147  0019E4  4B94               	infsnz	PrintModbus@i& (0+255),f,b
  9148  0019E6  2B95               	incf	(PrintModbus@i+1)& (0+255),f,b
  9149  0019E8                     l7886:
  9150                           
  9151                           ; BSR set to: 0
  9152  0019E8  0EFE               	movlw	254
  9153  0019EA  6F8D               	movwf	??_PrintModbus& (0+255),b
  9154  0019EC  0EFF               	movlw	255
  9155  0019EE  6F8E               	movwf	(??_PrintModbus+1)& (0+255),b
  9156  0019F0  C0D9  F08F         	movff	_ModDataCnt,??_PrintModbus+2
  9157  0019F4  C0DA  F090         	movff	_ModDataCnt+1,??_PrintModbus+3
  9158  0019F8  518D               	movf	??_PrintModbus& (0+255),w,b
  9159  0019FA  278F               	addwf	(??_PrintModbus+2)& (0+255),f,b
  9160  0019FC  518E               	movf	(??_PrintModbus+1)& (0+255),w,b
  9161  0019FE  2390               	addwfc	(??_PrintModbus+3)& (0+255),f,b
  9162  001A00  518F               	movf	(??_PrintModbus+2)& (0+255),w,b
  9163  001A02  5D94               	subwf	PrintModbus@i& (0+255),w,b
  9164  001A04  5195               	movf	(PrintModbus@i+1)& (0+255),w,b
  9165  001A06  0A80               	xorlw	128
  9166  001A08  6F91               	movwf	(??_PrintModbus+4)& (0+255),b
  9167  001A0A  5190               	movf	(??_PrintModbus+3)& (0+255),w,b
  9168  001A0C  0A80               	xorlw	128
  9169  001A0E  5991               	subwfb	(??_PrintModbus+4)& (0+255),w,b
  9170  001A10  A0D8               	btfss	status,0,c
  9171  001A12  EF0D  F00D         	goto	u7891
  9172  001A16  EF0F  F00D         	goto	u7890
  9173  001A1A                     u7891:
  9174  001A1A  EFA5  F00C         	goto	l7880
  9175  001A1E                     u7890:
  9176  001A1E                     
  9177                           ; BSR set to: 0
  9178                           ;Modbus.c: 127:         printf("   Byte %02i: 0x%02x - CRC Hi\r\n",i+1, ModbusData[i]);
  9179  001A1E  0EA1               	movlw	low STR_28
  9180  001A20  6F7D               	movwf	printf@fmt& (0+255),b
  9181  001A22  0EFC               	movlw	high STR_28
  9182  001A24  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9183  001A26  0E01               	movlw	1
  9184  001A28  2594               	addwf	PrintModbus@i& (0+255),w,b
  9185  001A2A  6F7F               	movwf	(?_printf+2)& (0+255),b
  9186  001A2C  0E00               	movlw	0
  9187  001A2E  2195               	addwfc	(PrintModbus@i+1)& (0+255),w,b
  9188  001A30  6F80               	movwf	(?_printf+3)& (0+255),b
  9189  001A32  0E00               	movlw	low _ModbusData
  9190  001A34  2594               	addwf	PrintModbus@i& (0+255),w,b
  9191  001A36  6ED9               	movwf	fsr2l,c
  9192  001A38  0E01               	movlw	high _ModbusData
  9193  001A3A  2195               	addwfc	(PrintModbus@i+1)& (0+255),w,b
  9194  001A3C  6EDA               	movwf	fsr2h,c
  9195  001A3E  50DF               	movf	indf2,w,c
  9196  001A40  6F8D               	movwf	??_PrintModbus& (0+255),b
  9197  001A42  518D               	movf	??_PrintModbus& (0+255),w,b
  9198  001A44  6F81               	movwf	(?_printf+4)& (0+255),b
  9199  001A46  6B82               	clrf	(?_printf+5)& (0+255),b
  9200  001A48  ECAC  F022         	call	_printf	;wreg free
  9201                           
  9202                           ;Modbus.c: 128:         printf("   Byte %02i: 0x%02x - CRC Lo\r\n",i + 2, ModbusData[i +
      +                           1]);
  9203  001A4C  0EC1               	movlw	low STR_29
  9204  001A4E  0100               	movlb	0	; () banked
  9205  001A50  6F7D               	movwf	printf@fmt& (0+255),b
  9206  001A52  0EFC               	movlw	high STR_29
  9207  001A54  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9208  001A56  0E02               	movlw	2
  9209  001A58  2594               	addwf	PrintModbus@i& (0+255),w,b
  9210  001A5A  6F7F               	movwf	(?_printf+2)& (0+255),b
  9211  001A5C  0E00               	movlw	0
  9212  001A5E  2195               	addwfc	(PrintModbus@i+1)& (0+255),w,b
  9213  001A60  6F80               	movwf	(?_printf+3)& (0+255),b
  9214  001A62  0E01               	movlw	low (_ModbusData+1)
  9215  001A64  2594               	addwf	PrintModbus@i& (0+255),w,b
  9216  001A66  6ED9               	movwf	fsr2l,c
  9217  001A68  0E01               	movlw	high (_ModbusData+1)
  9218  001A6A  2195               	addwfc	(PrintModbus@i+1)& (0+255),w,b
  9219  001A6C  6EDA               	movwf	fsr2h,c
  9220  001A6E  50DF               	movf	indf2,w,c
  9221  001A70  6F8D               	movwf	??_PrintModbus& (0+255),b
  9222  001A72  518D               	movf	??_PrintModbus& (0+255),w,b
  9223  001A74  6F81               	movwf	(?_printf+4)& (0+255),b
  9224  001A76  6B82               	clrf	(?_printf+5)& (0+255),b
  9225  001A78  ECAC  F022         	call	_printf	;wreg free
  9226  001A7C                     l723:
  9227                           
  9228                           ;Modbus.c: 132:     printf("\r\n");
  9229  001A7C  0E91               	movlw	low (STR_31+33)
  9230  001A7E  0100               	movlb	0	; () banked
  9231  001A80  6F7D               	movwf	printf@fmt& (0+255),b
  9232  001A82  0EFB               	movlw	high (STR_31+33)
  9233  001A84  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9234  001A86  ECAC  F022         	call	_printf	;wreg free
  9235  001A8A  0012               	return		;funcret
  9236  001A8C                     __end_of_PrintModbus:
  9237                           	opt callstack 0
  9238                           
  9239 ;; *************** function _PrintModRespon *****************
  9240 ;; Defined at:
  9241 ;;		line 440 in file "Modbus.c"
  9242 ;; Parameters:    Size  Location     Type
  9243 ;;		None
  9244 ;; Auto vars:     Size  Location     Type
  9245 ;;  i               2   45[BANK0 ] int 
  9246 ;; Return value:  Size  Location     Type
  9247 ;;                  1    wreg      void 
  9248 ;; Registers used:
  9249 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9250 ;; Tracked objects:
  9251 ;;		On entry : 0/0
  9252 ;;		On exit  : 0/0
  9253 ;;		Unchanged: 0/0
  9254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9256 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9257 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9258 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9259 ;;Total ram usage:        3 bytes
  9260 ;; Hardware stack levels used:    1
  9261 ;; Hardware stack levels required when called:   13
  9262 ;; This function calls:
  9263 ;;		_EUSART2_is_tx_done
  9264 ;;		_EUSART2_is_tx_ready
  9265 ;;		_printf
  9266 ;; This function is called by:
  9267 ;;		_main
  9268 ;; This function uses a non-reentrant model
  9269 ;;
  9270                           
  9271                           	psect	text36
  9272  003858                     __ptext36:
  9273                           	opt callstack 0
  9274  003858                     _PrintModRespon:
  9275                           	opt callstack 17
  9276  003858                     
  9277                           ;Modbus.c: 444:     printf("Modbus Response Count %i:\r\n",MBResCnt);
  9278  003858  0E93               	movlw	low STR_48
  9279  00385A  0100               	movlb	0	; () banked
  9280  00385C  6F7D               	movwf	printf@fmt& (0+255),b
  9281  00385E  0EFD               	movlw	high STR_48
  9282  003860  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9283  003862  C0D5  F07F         	movff	_MBResCnt,?_printf+2
  9284  003866  C0D6  F080         	movff	_MBResCnt+1,?_printf+3
  9285  00386A  ECAC  F022         	call	_printf	;wreg free
  9286  00386E                     
  9287                           ;Modbus.c: 446:     for(i=0; i< MBResCnt ; i++ ){
  9288  00386E  0E00               	movlw	0
  9289  003870  0100               	movlb	0	; () banked
  9290  003872  6F8E               	movwf	(PrintModRespon@i+1)& (0+255),b
  9291  003874  0E00               	movlw	0
  9292  003876  6F8D               	movwf	PrintModRespon@i& (0+255),b
  9293  003878  EF6B  F01C         	goto	l7904
  9294  00387C                     l7896:
  9295  00387C  EC29  F023         	call	_EUSART2_is_tx_ready	;wreg free
  9296  003880  0900               	iorlw	0
  9297  003882  B4D8               	btfsc	status,2,c
  9298  003884  EF46  F01C         	goto	u7901
  9299  003888  EF48  F01C         	goto	u7900
  9300  00388C                     u7901:
  9301  00388C  EF3E  F01C         	goto	l7896
  9302  003890                     u7900:
  9303  003890                     
  9304                           ;Modbus.c: 448:         printf("   Byte %02i : 0x%02x \r\n", i, MBRespon[i]);
  9305  003890  0E34               	movlw	low STR_49
  9306  003892  0100               	movlb	0	; () banked
  9307  003894  6F7D               	movwf	printf@fmt& (0+255),b
  9308  003896  0EFE               	movlw	high STR_49
  9309  003898  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9310  00389A  C08D  F07F         	movff	PrintModRespon@i,?_printf+2
  9311  00389E  C08E  F080         	movff	PrintModRespon@i+1,?_printf+3
  9312  0038A2  0E57               	movlw	low _MBRespon
  9313  0038A4  258D               	addwf	PrintModRespon@i& (0+255),w,b
  9314  0038A6  6ED9               	movwf	fsr2l,c
  9315  0038A8  0E02               	movlw	high _MBRespon
  9316  0038AA  218E               	addwfc	(PrintModRespon@i+1)& (0+255),w,b
  9317  0038AC  6EDA               	movwf	fsr2h,c
  9318  0038AE  50DF               	movf	indf2,w,c
  9319  0038B0  6E55               	movwf	??_PrintModRespon^0,c
  9320  0038B2  5055               	movf	??_PrintModRespon^0,w,c
  9321  0038B4  6F81               	movwf	(?_printf+4)& (0+255),b
  9322  0038B6  6B82               	clrf	(?_printf+5)& (0+255),b
  9323  0038B8  ECAC  F022         	call	_printf	;wreg free
  9324  0038BC                     l7900:
  9325  0038BC  EC4D  F023         	call	_EUSART2_is_tx_done	;wreg free
  9326  0038C0  0900               	iorlw	0
  9327  0038C2  B4D8               	btfsc	status,2,c
  9328  0038C4  EF66  F01C         	goto	u7911
  9329  0038C8  EF68  F01C         	goto	u7910
  9330  0038CC                     u7911:
  9331  0038CC  EF5E  F01C         	goto	l7900
  9332  0038D0                     u7910:
  9333  0038D0                     
  9334                           ;Modbus.c: 450:     }
  9335  0038D0  0100               	movlb	0	; () banked
  9336  0038D2  4B8D               	infsnz	PrintModRespon@i& (0+255),f,b
  9337  0038D4  2B8E               	incf	(PrintModRespon@i+1)& (0+255),f,b
  9338  0038D6                     l7904:
  9339                           
  9340                           ; BSR set to: 0
  9341  0038D6  51D5               	movf	_MBResCnt& (0+255),w,b
  9342  0038D8  5D8D               	subwf	PrintModRespon@i& (0+255),w,b
  9343  0038DA  518E               	movf	(PrintModRespon@i+1)& (0+255),w,b
  9344  0038DC  0A80               	xorlw	128
  9345  0038DE  6E55               	movwf	??_PrintModRespon^0,c
  9346  0038E0  51D6               	movf	(_MBResCnt+1)& (0+255),w,b
  9347  0038E2  0A80               	xorlw	128
  9348  0038E4  5855               	subwfb	??_PrintModRespon^0,w,c
  9349  0038E6  A0D8               	btfss	status,0,c
  9350  0038E8  EF78  F01C         	goto	u7921
  9351  0038EC  EF7A  F01C         	goto	u7920
  9352  0038F0                     u7921:
  9353  0038F0  EF3E  F01C         	goto	l7896
  9354  0038F4                     u7920:
  9355  0038F4                     
  9356                           ; BSR set to: 0
  9357                           ;Modbus.c: 452:     printf("\r\n\n");
  9358  0038F4  0E00               	movlw	low (STR_81+65)
  9359  0038F6  6F7D               	movwf	printf@fmt& (0+255),b
  9360  0038F8  0EF7               	movlw	high (STR_81+65)
  9361  0038FA  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9362  0038FC  ECAC  F022         	call	_printf	;wreg free
  9363  003900  0012               	return		;funcret
  9364  003902                     __end_of_PrintModRespon:
  9365                           	opt callstack 0
  9366                           
  9367 ;; *************** function _EUSART2_is_tx_ready *****************
  9368 ;; Defined at:
  9369 ;;		line 134 in file "mcc_generated_files/eusart2.c"
  9370 ;; Parameters:    Size  Location     Type
  9371 ;;		None
  9372 ;; Auto vars:     Size  Location     Type
  9373 ;;		None
  9374 ;; Return value:  Size  Location     Type
  9375 ;;                  1    wreg      _Bool 
  9376 ;; Registers used:
  9377 ;;		wreg, status,2
  9378 ;; Tracked objects:
  9379 ;;		On entry : 0/0
  9380 ;;		On exit  : 0/0
  9381 ;;		Unchanged: 0/0
  9382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9387 ;;Total ram usage:        0 bytes
  9388 ;; Hardware stack levels used:    1
  9389 ;; Hardware stack levels required when called:    4
  9390 ;; This function calls:
  9391 ;;		Nothing
  9392 ;; This function is called by:
  9393 ;;		_PrintModRespon
  9394 ;; This function uses a non-reentrant model
  9395 ;;
  9396                           
  9397                           	psect	text37
  9398  004652                     __ptext37:
  9399                           	opt callstack 0
  9400  004652                     _EUSART2_is_tx_ready:
  9401                           	opt callstack 25
  9402  004652                     
  9403                           ;mcc_generated_files/eusart2.c: 136:     return (eusart2TxBufferRemaining ? 1 : 0);
  9404  004652  0100               	movlb	0	; () banked
  9405  004654  51FF               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
  9406  004656  A4D8               	btfss	status,2,c
  9407  004658  EF30  F023         	goto	u7231
  9408  00465C  EF33  F023         	goto	u7230
  9409  004660                     u7231:
  9410  004660  0E01               	movlw	1
  9411  004662  EF34  F023         	goto	u7240
  9412  004666                     u7230:
  9413  004666  0E00               	movlw	0
  9414  004668                     u7240:
  9415  004668                     
  9416                           ; BSR set to: 0
  9417  004668  0012               	return		;funcret
  9418  00466A                     __end_of_EUSART2_is_tx_ready:
  9419                           	opt callstack 0
  9420                           
  9421 ;; *************** function _EUSART2_is_tx_done *****************
  9422 ;; Defined at:
  9423 ;;		line 144 in file "mcc_generated_files/eusart2.c"
  9424 ;; Parameters:    Size  Location     Type
  9425 ;;		None
  9426 ;; Auto vars:     Size  Location     Type
  9427 ;;		None
  9428 ;; Return value:  Size  Location     Type
  9429 ;;                  1    wreg      _Bool 
  9430 ;; Registers used:
  9431 ;;		wreg
  9432 ;; Tracked objects:
  9433 ;;		On entry : 0/0
  9434 ;;		On exit  : 0/0
  9435 ;;		Unchanged: 0/0
  9436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9441 ;;Total ram usage:        0 bytes
  9442 ;; Hardware stack levels used:    1
  9443 ;; Hardware stack levels required when called:    4
  9444 ;; This function calls:
  9445 ;;		Nothing
  9446 ;; This function is called by:
  9447 ;;		_PrintModRespon
  9448 ;; This function uses a non-reentrant model
  9449 ;;
  9450                           
  9451                           	psect	text38
  9452  00469A                     __ptext38:
  9453                           	opt callstack 0
  9454  00469A                     _EUSART2_is_tx_done:
  9455                           	opt callstack 25
  9456  00469A                     
  9457                           ;mcc_generated_files/eusart2.c: 146:     return TX2STAbits.TRMT;
  9458  00469A  010E               	movlb	14	; () banked
  9459  00469C  B39E               	btfsc	158,1,b	;volatile
  9460  00469E  EF53  F023         	goto	u7251
  9461  0046A2  EF56  F023         	goto	u7250
  9462  0046A6                     u7251:
  9463  0046A6  0E01               	movlw	1
  9464  0046A8  EF57  F023         	goto	u7256
  9465  0046AC                     u7250:
  9466  0046AC  0E00               	movlw	0
  9467  0046AE                     u7256:
  9468  0046AE                     
  9469                           ; BSR set to: 14
  9470  0046AE  0012               	return		;funcret
  9471  0046B0                     __end_of_EUSART2_is_tx_done:
  9472                           	opt callstack 0
  9473                           
  9474 ;; *************** function _PrintMB400 *****************
  9475 ;; Defined at:
  9476 ;;		line 23 in file "Modbus.c"
  9477 ;; Parameters:    Size  Location     Type
  9478 ;;		None
  9479 ;; Auto vars:     Size  Location     Type
  9480 ;;  i               2   84[COMRAM] int 
  9481 ;; Return value:  Size  Location     Type
  9482 ;;                  1    wreg      void 
  9483 ;; Registers used:
  9484 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9485 ;; Tracked objects:
  9486 ;;		On entry : 0/0
  9487 ;;		On exit  : 0/0
  9488 ;;		Unchanged: 0/0
  9489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9491 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9493 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9494 ;;Total ram usage:        2 bytes
  9495 ;; Hardware stack levels used:    1
  9496 ;; Hardware stack levels required when called:   13
  9497 ;; This function calls:
  9498 ;;		_printf
  9499 ;; This function is called by:
  9500 ;;		_main
  9501 ;; This function uses a non-reentrant model
  9502 ;;
  9503                           
  9504                           	psect	text39
  9505  003CC8                     __ptext39:
  9506                           	opt callstack 0
  9507  003CC8                     _PrintMB400:
  9508                           	opt callstack 17
  9509  003CC8                     
  9510                           ;Modbus.c: 25:     printf("UpdatedMB400 \r\n");
  9511  003CC8  0E6B               	movlw	low STR_6
  9512  003CCA  0100               	movlb	0	; () banked
  9513  003CCC  6F7D               	movwf	printf@fmt& (0+255),b
  9514  003CCE  0EFF               	movlw	high STR_6
  9515  003CD0  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9516  003CD2  ECAC  F022         	call	_printf	;wreg free
  9517  003CD6                     
  9518                           ;Modbus.c: 28:     for(i=0; i<32; i++ ){
  9519  003CD6  0E00               	movlw	0
  9520  003CD8  6E56               	movwf	(PrintMB400@i+1)^0,c
  9521  003CDA  0E00               	movlw	0
  9522  003CDC  6E55               	movwf	PrintMB400@i^0,c
  9523  003CDE                     l7800:
  9524                           
  9525                           ;Modbus.c: 29:         printf("   Reg: %i Data: 0x%04x \r\n", i, MB400xx[i]);
  9526  003CDE  0ECB               	movlw	low STR_7
  9527  003CE0  0100               	movlb	0	; () banked
  9528  003CE2  6F7D               	movwf	printf@fmt& (0+255),b
  9529  003CE4  0EFD               	movlw	high STR_7
  9530  003CE6  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9531  003CE8  C055  F07F         	movff	PrintMB400@i,?_printf+2
  9532  003CEC  C056  F080         	movff	PrintMB400@i+1,?_printf+3
  9533  003CF0  90D8               	bcf	status,0,c
  9534  003CF2  3455               	rlcf	PrintMB400@i^0,w,c
  9535  003CF4  6ED9               	movwf	fsr2l,c
  9536  003CF6  3456               	rlcf	(PrintMB400@i+1)^0,w,c
  9537  003CF8  6EDA               	movwf	fsr2h,c
  9538  003CFA  0E64               	movlw	low _MB400xx
  9539  003CFC  26D9               	addwf	fsr2l,f,c
  9540  003CFE  0E04               	movlw	high _MB400xx
  9541  003D00  22DA               	addwfc	fsr2h,f,c
  9542  003D02  CFDE F081          	movff	postinc2,?_printf+4
  9543  003D06  CFDD F082          	movff	postdec2,?_printf+5
  9544  003D0A  ECAC  F022         	call	_printf	;wreg free
  9545  003D0E                     
  9546                           ;Modbus.c: 30:     }
  9547  003D0E  4A55               	infsnz	PrintMB400@i^0,f,c
  9548  003D10  2A56               	incf	(PrintMB400@i+1)^0,f,c
  9549  003D12  BE56               	btfsc	(PrintMB400@i+1)^0,7,c
  9550  003D14  EF95  F01E         	goto	u7831
  9551  003D18  5056               	movf	(PrintMB400@i+1)^0,w,c
  9552  003D1A  E109               	bnz	u7830
  9553  003D1C  0E20               	movlw	32
  9554  003D1E  5C55               	subwf	PrintMB400@i^0,w,c
  9555  003D20  A0D8               	btfss	status,0,c
  9556  003D22  EF95  F01E         	goto	u7831
  9557  003D26  EF97  F01E         	goto	u7830
  9558  003D2A                     u7831:
  9559  003D2A  EF6F  F01E         	goto	l7800
  9560  003D2E                     u7830:
  9561  003D2E  0012               	return		;funcret
  9562  003D30                     __end_of_PrintMB400:
  9563                           	opt callstack 0
  9564                           
  9565 ;; *************** function _ModbusRx *****************
  9566 ;; Defined at:
  9567 ;;		line 494 in file "Modbus.c"
  9568 ;; Parameters:    Size  Location     Type
  9569 ;;		None
  9570 ;; Auto vars:     Size  Location     Type
  9571 ;;		None
  9572 ;; Return value:  Size  Location     Type
  9573 ;;                  1    wreg      _Bool 
  9574 ;; Registers used:
  9575 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9576 ;; Tracked objects:
  9577 ;;		On entry : 0/0
  9578 ;;		On exit  : 0/0
  9579 ;;		Unchanged: 0/0
  9580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9583 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9584 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9585 ;;Total ram usage:        1 bytes
  9586 ;; Hardware stack levels used:    1
  9587 ;; Hardware stack levels required when called:   14
  9588 ;; This function calls:
  9589 ;;		_AddRxBuffToModBus
  9590 ;;		_ClearRxBuff
  9591 ;;		_EUSART1_Read
  9592 ;;		_EUSART1_is_rx_ready
  9593 ;;		_RXMode
  9594 ;;		_checkCRC
  9595 ;;		_printf
  9596 ;; This function is called by:
  9597 ;;		_main
  9598 ;; This function uses a non-reentrant model
  9599 ;;
  9600                           
  9601                           	psect	text40
  9602  0028D4                     __ptext40:
  9603                           	opt callstack 0
  9604  0028D4                     _ModbusRx:
  9605                           	opt callstack 16
  9606  0028D4                     
  9607                           ;Modbus.c: 495:     RXMode();
  9608  0028D4  ECA7  F023         	call	_RXMode	;wreg free
  9609  0028D8                     
  9610                           ;Modbus.c: 496:     if(EUSART1_is_rx_ready()){
  9611  0028D8  EC35  F023         	call	_EUSART1_is_rx_ready	;wreg free
  9612  0028DC  0900               	iorlw	0
  9613  0028DE  B4D8               	btfsc	status,2,c
  9614  0028E0  EF74  F014         	goto	u7571
  9615  0028E4  EF76  F014         	goto	u7570
  9616  0028E8                     u7571:
  9617  0028E8  EF26  F015         	goto	l7646
  9618  0028EC                     u7570:
  9619  0028EC                     
  9620                           ;Modbus.c: 497:         if(Debug ==1){
  9621  0028EC  0100               	movlb	0	; () banked
  9622  0028EE  05DD               	decf	_Debug& (0+255),w,b
  9623  0028F0  A4D8               	btfss	status,2,c
  9624  0028F2  EF7D  F014         	goto	u7581
  9625  0028F6  EF7F  F014         	goto	u7580
  9626  0028FA                     u7581:
  9627  0028FA  EF85  F014         	goto	l7604
  9628  0028FE                     u7580:
  9629  0028FE                     
  9630                           ; BSR set to: 0
  9631                           ;Modbus.c: 498:             printf("Something in ESUART1 \r\n");
  9632  0028FE  0E65               	movlw	low STR_51
  9633  002900  6F7D               	movwf	printf@fmt& (0+255),b
  9634  002902  0EFE               	movlw	high STR_51
  9635  002904  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9636  002906  ECAC  F022         	call	_printf	;wreg free
  9637  00290A                     l7604:
  9638                           
  9639                           ;Modbus.c: 501:             if(EUSART1_is_rx_ready()){
  9640  00290A  EC35  F023         	call	_EUSART1_is_rx_ready	;wreg free
  9641  00290E  0900               	iorlw	0
  9642  002910  B4D8               	btfsc	status,2,c
  9643  002912  EF8D  F014         	goto	u7591
  9644  002916  EF8F  F014         	goto	u7590
  9645  00291A                     u7591:
  9646  00291A  EFC6  F014         	goto	l7620
  9647  00291E                     u7590:
  9648  00291E  EFB9  F014         	goto	l7616
  9649  002922                     l7608:
  9650                           
  9651                           ;Modbus.c: 505:                     rxData[ByteNum] = EUSART1_Read();
  9652  002922  ECE0  F01F         	call	_EUSART1_Read	;wreg free
  9653  002926  6E56               	movwf	??_ModbusRx^0,c
  9654  002928  0E00               	movlw	low _rxData
  9655  00292A  0100               	movlb	0	; () banked
  9656  00292C  25D7               	addwf	_ByteNum& (0+255),w,b
  9657  00292E  6ED9               	movwf	fsr2l,c
  9658  002930  0E05               	movlw	high _rxData
  9659  002932  21D8               	addwfc	(_ByteNum+1)& (0+255),w,b
  9660  002934  6EDA               	movwf	fsr2h,c
  9661  002936  C056  FFDF         	movff	??_ModbusRx,indf2
  9662  00293A                     
  9663                           ; BSR set to: 0
  9664                           ;Modbus.c: 507:                     if(Debug == 1){
  9665  00293A  05DD               	decf	_Debug& (0+255),w,b
  9666  00293C  A4D8               	btfss	status,2,c
  9667  00293E  EFA3  F014         	goto	u7601
  9668  002942  EFA5  F014         	goto	u7600
  9669  002946                     u7601:
  9670  002946  EFB6  F014         	goto	l7614
  9671  00294A                     u7600:
  9672  00294A                     
  9673                           ; BSR set to: 0
  9674                           ;Modbus.c: 508:                         printf("Read: 0x%02x \r\n",rxData[ByteNum]);
  9675  00294A  0E7B               	movlw	low STR_52
  9676  00294C  6F7D               	movwf	printf@fmt& (0+255),b
  9677  00294E  0EFF               	movlw	high STR_52
  9678  002950  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9679  002952  0E00               	movlw	low _rxData
  9680  002954  25D7               	addwf	_ByteNum& (0+255),w,b
  9681  002956  6ED9               	movwf	fsr2l,c
  9682  002958  0E05               	movlw	high _rxData
  9683  00295A  21D8               	addwfc	(_ByteNum+1)& (0+255),w,b
  9684  00295C  6EDA               	movwf	fsr2h,c
  9685  00295E  50DF               	movf	indf2,w,c
  9686  002960  6E56               	movwf	??_ModbusRx^0,c
  9687  002962  5056               	movf	??_ModbusRx^0,w,c
  9688  002964  6F7F               	movwf	(?_printf+2)& (0+255),b
  9689  002966  6B80               	clrf	(?_printf+3)& (0+255),b
  9690  002968  ECAC  F022         	call	_printf	;wreg free
  9691  00296C                     l7614:
  9692                           
  9693                           ;Modbus.c: 510:                     ByteNum++;
  9694  00296C  0100               	movlb	0	; () banked
  9695  00296E  4BD7               	infsnz	_ByteNum& (0+255),f,b
  9696  002970  2BD8               	incf	(_ByteNum+1)& (0+255),f,b
  9697  002972                     l7616:
  9698                           
  9699                           ;Modbus.c: 503:                 while(EUSART1_is_rx_ready()){
  9700  002972  EC35  F023         	call	_EUSART1_is_rx_ready	;wreg free
  9701  002976  0900               	iorlw	0
  9702  002978  A4D8               	btfss	status,2,c
  9703  00297A  EFC1  F014         	goto	u7611
  9704  00297E  EFC3  F014         	goto	u7610
  9705  002982                     u7611:
  9706  002982  EF91  F014         	goto	l7608
  9707  002986                     u7610:
  9708  002986                     
  9709                           ;Modbus.c: 513:                 RXStat = 1;
  9710  002986  0E01               	movlw	1
  9711  002988  0100               	movlb	0	; () banked
  9712  00298A  6FDC               	movwf	_RXStat& (0+255),b
  9713  00298C                     l7620:
  9714                           
  9715                           ;Modbus.c: 516:             if(RXStat ==1){
  9716  00298C  0100               	movlb	0	; () banked
  9717  00298E  05DC               	decf	_RXStat& (0+255),w,b
  9718  002990  A4D8               	btfss	status,2,c
  9719  002992  EFCD  F014         	goto	u7621
  9720  002996  EFCF  F014         	goto	u7620
  9721  00299A                     u7621:
  9722  00299A  EFEB  F014         	goto	l7632
  9723  00299E                     u7620:
  9724  00299E                     
  9725                           ; BSR set to: 0
  9726                           ;Modbus.c: 519:                 AddRxBuffToModBus();
  9727  00299E  EC79  F019         	call	_AddRxBuffToModBus	;wreg free
  9728  0029A2                     
  9729                           ;Modbus.c: 520:                 ClearRxBuff();
  9730  0029A2  ECAB  F020         	call	_ClearRxBuff	;wreg free
  9731  0029A6                     
  9732                           ;Modbus.c: 521:                 RXStat = 0;
  9733  0029A6  0E00               	movlw	0
  9734  0029A8  0100               	movlb	0	; () banked
  9735  0029AA  6FDC               	movwf	_RXStat& (0+255),b
  9736  0029AC                     
  9737                           ; BSR set to: 0
  9738                           ;Modbus.c: 522:                 ByteNum = 0;
  9739  0029AC  0E00               	movlw	0
  9740  0029AE  6FD8               	movwf	(_ByteNum+1)& (0+255),b
  9741  0029B0  0E00               	movlw	0
  9742  0029B2  6FD7               	movwf	_ByteNum& (0+255),b
  9743  0029B4                     
  9744                           ; BSR set to: 0
  9745  0029B4  B883               	btfsc	131,4,c	;volatile
  9746  0029B6  EFDF  F014         	goto	u7631
  9747  0029BA  EFE2  F014         	goto	u7630
  9748  0029BE                     u7631:
  9749  0029BE  0E01               	movlw	1
  9750  0029C0  EFE3  F014         	goto	u7636
  9751  0029C4                     u7630:
  9752  0029C4  0E00               	movlw	0
  9753  0029C6                     u7636:
  9754  0029C6  0AFF               	xorlw	255
  9755  0029C8  6E56               	movwf	??_ModbusRx^0,c
  9756  0029CA  3A56               	swapf	??_ModbusRx^0,f,c
  9757  0029CC  5083               	movf	131,w,c	;volatile
  9758  0029CE  1856               	xorwf	??_ModbusRx^0,w,c
  9759  0029D0  0BEF               	andlw	-17
  9760  0029D2  1856               	xorwf	??_ModbusRx^0,w,c
  9761  0029D4  6E83               	movwf	131,c	;volatile
  9762  0029D6                     l7632:
  9763                           
  9764                           ; BSR set to: 0
  9765                           ;Modbus.c: 527:         }while(ModDataCnt != ExpectedBytes);
  9766  0029D6  51F8               	movf	_ExpectedBytes& (0+255),w,b
  9767  0029D8  19D9               	xorwf	_ModDataCnt& (0+255),w,b
  9768  0029DA  E107               	bnz	u7641
  9769  0029DC  51F9               	movf	(_ExpectedBytes+1)& (0+255),w,b
  9770  0029DE  19DA               	xorwf	(_ModDataCnt+1)& (0+255),w,b
  9771  0029E0  A4D8               	btfss	status,2,c
  9772  0029E2  EFF5  F014         	goto	u7641
  9773  0029E6  EFF7  F014         	goto	u7640
  9774  0029EA                     u7641:
  9775  0029EA  EF85  F014         	goto	l7604
  9776  0029EE                     u7640:
  9777  0029EE                     
  9778                           ; BSR set to: 0
  9779  0029EE  BA83               	btfsc	131,5,c	;volatile
  9780  0029F0  EFFC  F014         	goto	u7651
  9781  0029F4  EFFF  F014         	goto	u7650
  9782  0029F8                     u7651:
  9783  0029F8  0E01               	movlw	1
  9784  0029FA  EF00  F015         	goto	u7656
  9785  0029FE                     u7650:
  9786  0029FE  0E00               	movlw	0
  9787  002A00                     u7656:
  9788  002A00  0AFF               	xorlw	255
  9789  002A02  6E56               	movwf	??_ModbusRx^0,c
  9790  002A04  3A56               	swapf	??_ModbusRx^0,f,c
  9791  002A06  4656               	rlncf	??_ModbusRx^0,f,c
  9792  002A08  5083               	movf	131,w,c	;volatile
  9793  002A0A  1856               	xorwf	??_ModbusRx^0,w,c
  9794  002A0C  0BDF               	andlw	-33
  9795  002A0E  1856               	xorwf	??_ModbusRx^0,w,c
  9796  002A10  6E83               	movwf	131,c	;volatile
  9797  002A12                     
  9798                           ; BSR set to: 0
  9799                           ;Modbus.c: 532:         if(checkCRC() == 1)
  9800  002A12  ECDA  F015         	call	_checkCRC	;wreg free
  9801  002A16  06E8               	decf	wreg,f,c
  9802  002A18  A4D8               	btfss	status,2,c
  9803  002A1A  EF11  F015         	goto	u7661
  9804  002A1E  EF13  F015         	goto	u7660
  9805  002A22                     u7661:
  9806  002A22  EF1C  F015         	goto	l7640
  9807  002A26                     u7660:
  9808  002A26                     
  9809                           ;Modbus.c: 533:         {;Modbus.c: 534:             printf("\r\nReceived Modbus CRC che
      +                          cked out.\r\n");
  9810  002A26  0EDD               	movlw	low STR_53
  9811  002A28  0100               	movlb	0	; () banked
  9812  002A2A  6F7D               	movwf	printf@fmt& (0+255),b
  9813  002A2C  0EFA               	movlw	high STR_53
  9814  002A2E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9815  002A30  ECAC  F022         	call	_printf	;wreg free
  9816                           
  9817                           ;Modbus.c: 535:         }else{
  9818  002A34  EF23  F015         	goto	l7642
  9819  002A38                     l7640:
  9820                           
  9821                           ;Modbus.c: 536:             printf("\r\nReceived Modbus CRC is bad.\r\n");
  9822  002A38  0E81               	movlw	low STR_54
  9823  002A3A  0100               	movlb	0	; () banked
  9824  002A3C  6F7D               	movwf	printf@fmt& (0+255),b
  9825  002A3E  0EFC               	movlw	high STR_54
  9826  002A40  6F7E               	movwf	(printf@fmt+1)& (0+255),b
  9827  002A42  ECAC  F022         	call	_printf	;wreg free
  9828  002A46                     l7642:
  9829                           
  9830                           ;Modbus.c: 540:         return 1;
  9831  002A46  0E01               	movlw	1
  9832  002A48  EF27  F015         	goto	l850
  9833  002A4C                     l7646:
  9834                           
  9835                           ;Modbus.c: 542:     return 0;
  9836  002A4C  0E00               	movlw	0
  9837  002A4E                     l850:
  9838  002A4E  0012               	return		;funcret
  9839  002A50                     __end_of_ModbusRx:
  9840                           	opt callstack 0
  9841                           
  9842 ;; *************** function _checkCRC *****************
  9843 ;; Defined at:
  9844 ;;		line 136 in file "Modbus.c"
  9845 ;; Parameters:    Size  Location     Type
  9846 ;;		None
  9847 ;; Auto vars:     Size  Location     Type
  9848 ;;  i               2   58[BANK0 ] int 
  9849 ;;  crc             2   56[BANK0 ] unsigned int 
  9850 ;;  j               2   54[BANK0 ] int 
  9851 ;;  crcLow          2   52[BANK0 ] unsigned int 
  9852 ;;  crcHigh         2   50[BANK0 ] unsigned int 
  9853 ;; Return value:  Size  Location     Type
  9854 ;;                  1    wreg      _Bool 
  9855 ;; Registers used:
  9856 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9857 ;; Tracked objects:
  9858 ;;		On entry : 0/0
  9859 ;;		On exit  : 0/0
  9860 ;;		Unchanged: 0/0
  9861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9863 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9864 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9865 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9866 ;;Total ram usage:       15 bytes
  9867 ;; Hardware stack levels used:    1
  9868 ;; Hardware stack levels required when called:   13
  9869 ;; This function calls:
  9870 ;;		_printf
  9871 ;; This function is called by:
  9872 ;;		_ModbusRx
  9873 ;; This function uses a non-reentrant model
  9874 ;;
  9875                           
  9876                           	psect	text41
  9877  002BB4                     __ptext41:
  9878                           	opt callstack 0
  9879  002BB4                     _checkCRC:
  9880                           	opt callstack 16
  9881  002BB4                     
  9882                           ;Modbus.c: 137:   unsigned int crc = 0xFFFF;
  9883  002BB4  0100               	movlb	0	; () banked
  9884  002BB6  6998               	setf	checkCRC@crc& (0+255),b
  9885  002BB8  6999               	setf	(checkCRC@crc+1)& (0+255),b
  9886  002BBA                     
  9887                           ; BSR set to: 0
  9888                           ;Modbus.c: 139:   unsigned int crcLow = 0;
  9889  002BBA  0E00               	movlw	0
  9890  002BBC  6F95               	movwf	(checkCRC@crcLow+1)& (0+255),b
  9891  002BBE  0E00               	movlw	0
  9892  002BC0  6F94               	movwf	checkCRC@crcLow& (0+255),b
  9893                           
  9894                           ;Modbus.c: 140:   int i,j = 0;
  9895  002BC2  0E00               	movlw	0
  9896  002BC4  6F97               	movwf	(checkCRC@j+1)& (0+255),b
  9897  002BC6  0E00               	movlw	0
  9898  002BC8  6F96               	movwf	checkCRC@j& (0+255),b
  9899                           
  9900                           ;Modbus.c: 142:     for(i=0;i<ModDataCnt-2;i++){
  9901  002BCA  0E00               	movlw	0
  9902  002BCC  6F9B               	movwf	(checkCRC@i+1)& (0+255),b
  9903  002BCE  0E00               	movlw	0
  9904  002BD0  6F9A               	movwf	checkCRC@i& (0+255),b
  9905  002BD2  EF1A  F016         	goto	l7488
  9906  002BD6                     l7470:
  9907                           
  9908                           ; BSR set to: 0
  9909                           ;Modbus.c: 143:       crc ^= ModbusData[i];
  9910  002BD6  0E00               	movlw	low _ModbusData
  9911  002BD8  259A               	addwf	checkCRC@i& (0+255),w,b
  9912  002BDA  6ED9               	movwf	fsr2l,c
  9913  002BDC  0E01               	movlw	high _ModbusData
  9914  002BDE  219B               	addwfc	(checkCRC@i+1)& (0+255),w,b
  9915  002BE0  6EDA               	movwf	fsr2h,c
  9916  002BE2  50DF               	movf	indf2,w,c
  9917  002BE4  6F8D               	movwf	??_checkCRC& (0+255),b
  9918  002BE6  518D               	movf	??_checkCRC& (0+255),w,b
  9919  002BE8  1B98               	xorwf	checkCRC@crc& (0+255),f,b
  9920  002BEA                     
  9921                           ; BSR set to: 0
  9922                           ;Modbus.c: 144:       for(j=8; j!=0; j--){
  9923  002BEA  0E00               	movlw	0
  9924  002BEC  6F97               	movwf	(checkCRC@j+1)& (0+255),b
  9925  002BEE  0E08               	movlw	8
  9926  002BF0  6F96               	movwf	checkCRC@j& (0+255),b
  9927  002BF2                     l733:
  9928                           
  9929                           ; BSR set to: 0
  9930                           ;Modbus.c: 145:         if((crc & 0x0001) != 0){
  9931  002BF2  A198               	btfss	checkCRC@crc& (0+255),0,b
  9932  002BF4  EFFE  F015         	goto	u7421
  9933  002BF8  EF00  F016         	goto	u7420
  9934  002BFC                     u7421:
  9935  002BFC  EF09  F016         	goto	l7482
  9936  002C00                     u7420:
  9937  002C00                     
  9938                           ; BSR set to: 0
  9939                           ;Modbus.c: 146:           crc >>= 1;
  9940  002C00  90D8               	bcf	status,0,c
  9941  002C02  3399               	rrcf	(checkCRC@crc+1)& (0+255),f,b
  9942  002C04  3398               	rrcf	checkCRC@crc& (0+255),f,b
  9943  002C06                     
  9944                           ; BSR set to: 0
  9945                           ;Modbus.c: 147:           crc ^= 0xA001;
  9946  002C06  0E01               	movlw	1
  9947  002C08  1B98               	xorwf	checkCRC@crc& (0+255),f,b
  9948  002C0A  0EA0               	movlw	160
  9949  002C0C  1B99               	xorwf	(checkCRC@crc+1)& (0+255),f,b
  9950                           
  9951                           ;Modbus.c: 148:         }
  9952  002C0E  EF0C  F016         	goto	l736
  9953  002C12                     l7482:
  9954                           
  9955                           ; BSR set to: 0
  9956                           ;Modbus.c: 150:           crc >>= 1;
  9957  002C12  90D8               	bcf	status,0,c
  9958  002C14  3399               	rrcf	(checkCRC@crc+1)& (0+255),f,b
  9959  002C16  3398               	rrcf	checkCRC@crc& (0+255),f,b
  9960  002C18                     l736:
  9961                           
  9962                           ; BSR set to: 0
  9963                           ;Modbus.c: 152:       }
  9964  002C18  0796               	decf	checkCRC@j& (0+255),f,b
  9965  002C1A  A0D8               	btfss	status,0,c
  9966  002C1C  0797               	decf	(checkCRC@j+1)& (0+255),f,b
  9967  002C1E                     
  9968                           ; BSR set to: 0
  9969  002C1E  5196               	movf	checkCRC@j& (0+255),w,b
  9970  002C20  1197               	iorwf	(checkCRC@j+1)& (0+255),w,b
  9971  002C22  A4D8               	btfss	status,2,c
  9972  002C24  EF16  F016         	goto	u7431
  9973  002C28  EF18  F016         	goto	u7430
  9974  002C2C                     u7431:
  9975  002C2C  EFF9  F015         	goto	l733
  9976  002C30                     u7430:
  9977  002C30                     
  9978                           ; BSR set to: 0
  9979                           ;Modbus.c: 153:     }
  9980  002C30  4B9A               	infsnz	checkCRC@i& (0+255),f,b
  9981  002C32  2B9B               	incf	(checkCRC@i+1)& (0+255),f,b
  9982  002C34                     l7488:
  9983                           
  9984                           ; BSR set to: 0
  9985  002C34  0EFE               	movlw	254
  9986  002C36  6F8D               	movwf	??_checkCRC& (0+255),b
  9987  002C38  0EFF               	movlw	255
  9988  002C3A  6F8E               	movwf	(??_checkCRC+1)& (0+255),b
  9989  002C3C  C0D9  F08F         	movff	_ModDataCnt,??_checkCRC+2
  9990  002C40  C0DA  F090         	movff	_ModDataCnt+1,??_checkCRC+3
  9991  002C44  518D               	movf	??_checkCRC& (0+255),w,b
  9992  002C46  278F               	addwf	(??_checkCRC+2)& (0+255),f,b
  9993  002C48  518E               	movf	(??_checkCRC+1)& (0+255),w,b
  9994  002C4A  2390               	addwfc	(??_checkCRC+3)& (0+255),f,b
  9995  002C4C  518F               	movf	(??_checkCRC+2)& (0+255),w,b
  9996  002C4E  5D9A               	subwf	checkCRC@i& (0+255),w,b
  9997  002C50  519B               	movf	(checkCRC@i+1)& (0+255),w,b
  9998  002C52  0A80               	xorlw	128
  9999  002C54  6F91               	movwf	(??_checkCRC+4)& (0+255),b
 10000  002C56  5190               	movf	(??_checkCRC+3)& (0+255),w,b
 10001  002C58  0A80               	xorlw	128
 10002  002C5A  5991               	subwfb	(??_checkCRC+4)& (0+255),w,b
 10003  002C5C  A0D8               	btfss	status,0,c
 10004  002C5E  EF33  F016         	goto	u7441
 10005  002C62  EF35  F016         	goto	u7440
 10006  002C66                     u7441:
 10007  002C66  EFEB  F015         	goto	l7470
 10008  002C6A                     u7440:
 10009  002C6A                     
 10010                           ; BSR set to: 0
 10011                           ;Modbus.c: 155:   crcHigh = (crc & 0x00FF);
 10012  002C6A  5198               	movf	checkCRC@crc& (0+255),w,b
 10013  002C6C  6F92               	movwf	checkCRC@crcHigh& (0+255),b
 10014  002C6E  6B93               	clrf	(checkCRC@crcHigh+1)& (0+255),b
 10015                           
 10016                           ;Modbus.c: 156:   crcLow = (crc & 0xFF00) >>8;
 10017  002C70  C098  F08D         	movff	checkCRC@crc,??_checkCRC
 10018  002C74  C099  F08E         	movff	checkCRC@crc+1,??_checkCRC+1
 10019  002C78  C08E  F08D         	movff	??_checkCRC+1,??_checkCRC
 10020  002C7C  6B8E               	clrf	(??_checkCRC+1)& (0+255),b
 10021  002C7E  518D               	movf	??_checkCRC& (0+255),w,b
 10022  002C80  6F94               	movwf	checkCRC@crcLow& (0+255),b
 10023  002C82  6B95               	clrf	(checkCRC@crcLow+1)& (0+255),b
 10024  002C84                     
 10025                           ; BSR set to: 0
 10026                           ;Modbus.c: 158:   if(Debug == 1){
 10027  002C84  05DD               	decf	_Debug& (0+255),w,b
 10028  002C86  A4D8               	btfss	status,2,c
 10029  002C88  EF48  F016         	goto	u7451
 10030  002C8C  EF4A  F016         	goto	u7450
 10031  002C90                     u7451:
 10032  002C90  EF58  F016         	goto	l7496
 10033  002C94                     u7450:
 10034  002C94                     
 10035                           ; BSR set to: 0
 10036                           ;Modbus.c: 159:     printf("crcHigh: 0x%02x  crcLow: 0x%02x  \r\n", crcHigh, crcLow);
 10037  002C94  0E70               	movlw	low STR_31
 10038  002C96  6F7D               	movwf	printf@fmt& (0+255),b
 10039  002C98  0EFB               	movlw	high STR_31
 10040  002C9A  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10041  002C9C  C092  F07F         	movff	checkCRC@crcHigh,?_printf+2
 10042  002CA0  C093  F080         	movff	checkCRC@crcHigh+1,?_printf+3
 10043  002CA4  C094  F081         	movff	checkCRC@crcLow,?_printf+4
 10044  002CA8  C095  F082         	movff	checkCRC@crcLow+1,?_printf+5
 10045  002CAC  ECAC  F022         	call	_printf	;wreg free
 10046  002CB0                     l7496:
 10047                           
 10048                           ;Modbus.c: 163:   if((crcHigh == ModbusData[i])&&(crcLow == ModbusData[i+1]))
 10049  002CB0  0E00               	movlw	low _ModbusData
 10050  002CB2  0100               	movlb	0	; () banked
 10051  002CB4  259A               	addwf	checkCRC@i& (0+255),w,b
 10052  002CB6  6ED9               	movwf	fsr2l,c
 10053  002CB8  0E01               	movlw	high _ModbusData
 10054  002CBA  219B               	addwfc	(checkCRC@i+1)& (0+255),w,b
 10055  002CBC  6EDA               	movwf	fsr2h,c
 10056  002CBE  50DF               	movf	indf2,w,c
 10057  002CC0  6F8D               	movwf	??_checkCRC& (0+255),b
 10058  002CC2  6B8E               	clrf	(??_checkCRC+1)& (0+255),b
 10059  002CC4  5192               	movf	checkCRC@crcHigh& (0+255),w,b
 10060  002CC6  198D               	xorwf	??_checkCRC& (0+255),w,b
 10061  002CC8  E107               	bnz	u7461
 10062  002CCA  5193               	movf	(checkCRC@crcHigh+1)& (0+255),w,b
 10063  002CCC  198E               	xorwf	(??_checkCRC+1)& (0+255),w,b
 10064  002CCE  A4D8               	btfss	status,2,c
 10065  002CD0  EF6C  F016         	goto	u7461
 10066  002CD4  EF6E  F016         	goto	u7460
 10067  002CD8                     u7461:
 10068  002CD8  EF86  F016         	goto	l7506
 10069  002CDC                     u7460:
 10070  002CDC                     
 10071                           ; BSR set to: 0
 10072  002CDC  0E01               	movlw	low (_ModbusData+1)
 10073  002CDE  259A               	addwf	checkCRC@i& (0+255),w,b
 10074  002CE0  6ED9               	movwf	fsr2l,c
 10075  002CE2  0E01               	movlw	high (_ModbusData+1)
 10076  002CE4  219B               	addwfc	(checkCRC@i+1)& (0+255),w,b
 10077  002CE6  6EDA               	movwf	fsr2h,c
 10078  002CE8  50DF               	movf	indf2,w,c
 10079  002CEA  6F8D               	movwf	??_checkCRC& (0+255),b
 10080  002CEC  6B8E               	clrf	(??_checkCRC+1)& (0+255),b
 10081  002CEE  5194               	movf	checkCRC@crcLow& (0+255),w,b
 10082  002CF0  198D               	xorwf	??_checkCRC& (0+255),w,b
 10083  002CF2  E107               	bnz	u7471
 10084  002CF4  5195               	movf	(checkCRC@crcLow+1)& (0+255),w,b
 10085  002CF6  198E               	xorwf	(??_checkCRC+1)& (0+255),w,b
 10086  002CF8  A4D8               	btfss	status,2,c
 10087  002CFA  EF81  F016         	goto	u7471
 10088  002CFE  EF83  F016         	goto	u7470
 10089  002D02                     u7471:
 10090  002D02  EF86  F016         	goto	l7506
 10091  002D06                     u7470:
 10092  002D06                     
 10093                           ; BSR set to: 0
 10094                           ;Modbus.c: 164:   {;Modbus.c: 165:     return 1;
 10095  002D06  0E01               	movlw	1
 10096  002D08  EF87  F016         	goto	l740
 10097  002D0C                     l7506:
 10098                           
 10099                           ; BSR set to: 0
 10100                           ;Modbus.c: 168:     return 0;
 10101  002D0C  0E00               	movlw	0
 10102  002D0E                     l740:
 10103                           
 10104                           ; BSR set to: 0
 10105  002D0E  0012               	return		;funcret
 10106  002D10                     __end_of_checkCRC:
 10107                           	opt callstack 0
 10108                           
 10109 ;; *************** function _RXMode *****************
 10110 ;; Defined at:
 10111 ;;		line 42 in file "Modbus.c"
 10112 ;; Parameters:    Size  Location     Type
 10113 ;;		None
 10114 ;; Auto vars:     Size  Location     Type
 10115 ;;		None
 10116 ;; Return value:  Size  Location     Type
 10117 ;;                  1    wreg      void 
 10118 ;; Registers used:
 10119 ;;		None
 10120 ;; Tracked objects:
 10121 ;;		On entry : 0/0
 10122 ;;		On exit  : 0/0
 10123 ;;		Unchanged: 0/0
 10124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10129 ;;Total ram usage:        0 bytes
 10130 ;; Hardware stack levels used:    1
 10131 ;; Hardware stack levels required when called:    4
 10132 ;; This function calls:
 10133 ;;		Nothing
 10134 ;; This function is called by:
 10135 ;;		_main
 10136 ;;		_ModbusRx
 10137 ;; This function uses a non-reentrant model
 10138 ;;
 10139                           
 10140                           	psect	text42
 10141  00474E                     __ptext42:
 10142                           	opt callstack 0
 10143  00474E                     _RXMode:
 10144                           	opt callstack 26
 10145  00474E  9086               	bcf	134,0,c	;volatile
 10146  004750  9683               	bcf	131,3,c	;volatile
 10147  004752  0012               	return		;funcret
 10148  004754                     __end_of_RXMode:
 10149                           	opt callstack 0
 10150                           
 10151 ;; *************** function _EUSART1_is_rx_ready *****************
 10152 ;; Defined at:
 10153 ;;		line 139 in file "mcc_generated_files/eusart1.c"
 10154 ;; Parameters:    Size  Location     Type
 10155 ;;		None
 10156 ;; Auto vars:     Size  Location     Type
 10157 ;;		None
 10158 ;; Return value:  Size  Location     Type
 10159 ;;                  1    wreg      _Bool 
 10160 ;; Registers used:
 10161 ;;		wreg, status,2
 10162 ;; Tracked objects:
 10163 ;;		On entry : 0/0
 10164 ;;		On exit  : 0/0
 10165 ;;		Unchanged: 0/0
 10166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10171 ;;Total ram usage:        0 bytes
 10172 ;; Hardware stack levels used:    1
 10173 ;; Hardware stack levels required when called:    4
 10174 ;; This function calls:
 10175 ;;		Nothing
 10176 ;; This function is called by:
 10177 ;;		_ModbusRx
 10178 ;; This function uses a non-reentrant model
 10179 ;;
 10180                           
 10181                           	psect	text43
 10182  00466A                     __ptext43:
 10183                           	opt callstack 0
 10184  00466A                     _EUSART1_is_rx_ready:
 10185                           	opt callstack 25
 10186  00466A                     
 10187                           ;mcc_generated_files/eusart1.c: 141:     return (eusart1RxCount ? 1 : 0);
 10188  00466A  0100               	movlb	0	; () banked
 10189  00466C  51DF               	movf	_eusart1RxCount& (0+255),w,b	;volatile
 10190  00466E  A4D8               	btfss	status,2,c
 10191  004670  EF3C  F023         	goto	u7261
 10192  004674  EF3F  F023         	goto	u7260
 10193  004678                     u7261:
 10194  004678  0E01               	movlw	1
 10195  00467A  EF40  F023         	goto	u7270
 10196  00467E                     u7260:
 10197  00467E  0E00               	movlw	0
 10198  004680                     u7270:
 10199  004680                     
 10200                           ; BSR set to: 0
 10201  004680  0012               	return		;funcret
 10202  004682                     __end_of_EUSART1_is_rx_ready:
 10203                           	opt callstack 0
 10204                           
 10205 ;; *************** function _EUSART1_Read *****************
 10206 ;; Defined at:
 10207 ;;		line 153 in file "mcc_generated_files/eusart1.c"
 10208 ;; Parameters:    Size  Location     Type
 10209 ;;		None
 10210 ;; Auto vars:     Size  Location     Type
 10211 ;;  readValue       1    4[COMRAM] unsigned char 
 10212 ;; Return value:  Size  Location     Type
 10213 ;;                  1    wreg      unsigned char 
 10214 ;; Registers used:
 10215 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10216 ;; Tracked objects:
 10217 ;;		On entry : 0/0
 10218 ;;		On exit  : 0/0
 10219 ;;		Unchanged: 0/0
 10220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10222 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10224 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10225 ;;Total ram usage:        1 bytes
 10226 ;; Hardware stack levels used:    1
 10227 ;; Hardware stack levels required when called:    4
 10228 ;; This function calls:
 10229 ;;		Nothing
 10230 ;; This function is called by:
 10231 ;;		_ModbusRx
 10232 ;; This function uses a non-reentrant model
 10233 ;;
 10234                           
 10235                           	psect	text44
 10236  003FC0                     __ptext44:
 10237                           	opt callstack 0
 10238  003FC0                     _EUSART1_Read:
 10239                           	opt callstack 25
 10240  003FC0                     l7324:
 10241                           
 10242                           ;mcc_generated_files/eusart1.c: 157:     while(0 == eusart1RxCount)
 10243  003FC0  0100               	movlb	0	; () banked
 10244  003FC2  51DF               	movf	_eusart1RxCount& (0+255),w,b	;volatile
 10245  003FC4  B4D8               	btfsc	status,2,c
 10246  003FC6  EFE7  F01F         	goto	u7281
 10247  003FCA  EFE9  F01F         	goto	u7280
 10248  003FCE                     u7281:
 10249  003FCE  EFE0  F01F         	goto	l7324
 10250  003FD2                     u7280:
 10251  003FD2                     
 10252                           ; BSR set to: 0
 10253                           ;mcc_generated_files/eusart1.c: 161:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
 10254  003FD2  0E00               	movlw	low _eusart1RxStatusBuffer
 10255  003FD4  25E0               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
 10256  003FD6  6ED9               	movwf	fsr2l,c
 10257  003FD8  6ADA               	clrf	fsr2h,c
 10258  003FDA  0E03               	movlw	high _eusart1RxStatusBuffer
 10259  003FDC  22DA               	addwfc	fsr2h,f,c
 10260  003FDE  50DF               	movf	indf2,w,c
 10261  003FE0  6FDE               	movwf	_eusart1RxLastError& (0+255),b	;volatile
 10262                           
 10263                           ;mcc_generated_files/eusart1.c: 163:     readValue = eusart1RxBuffer[eusart1RxTail++];
 10264  003FE2  0E00               	movlw	low _eusart1RxBuffer
 10265  003FE4  25E0               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
 10266  003FE6  6ED9               	movwf	fsr2l,c
 10267  003FE8  6ADA               	clrf	fsr2h,c
 10268  003FEA  0E04               	movlw	high _eusart1RxBuffer
 10269  003FEC  22DA               	addwfc	fsr2h,f,c
 10270  003FEE  50DF               	movf	indf2,w,c
 10271  003FF0  6E05               	movwf	EUSART1_Read@readValue^0,c
 10272  003FF2                     
 10273                           ; BSR set to: 0
 10274  003FF2  2BE0               	incf	_eusart1RxTail& (0+255),f,b	;volatile
 10275  003FF4                     
 10276                           ; BSR set to: 0
 10277                           ;mcc_generated_files/eusart1.c: 164:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
 10278  003FF4  0E63               	movlw	99
 10279  003FF6  65E0               	cpfsgt	_eusart1RxTail& (0+255),b	;volatile
 10280  003FF8  EF00  F020         	goto	u7291
 10281  003FFC  EF02  F020         	goto	u7290
 10282  004000                     u7291:
 10283  004000  EF04  F020         	goto	l7334
 10284  004004                     u7290:
 10285  004004                     
 10286                           ; BSR set to: 0
 10287                           ;mcc_generated_files/eusart1.c: 165:     {;mcc_generated_files/eusart1.c: 166:         e
      +                          usart1RxTail = 0;
 10288  004004  0E00               	movlw	0
 10289  004006  6FE0               	movwf	_eusart1RxTail& (0+255),b	;volatile
 10290  004008                     l7334:
 10291                           
 10292                           ; BSR set to: 0
 10293                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 0;
 10294  004008  010E               	movlb	14	; () banked
 10295  00400A  9BC5               	bcf	197,5,b	;volatile
 10296  00400C                     
 10297                           ; BSR set to: 14
 10298                           ;mcc_generated_files/eusart1.c: 169:     eusart1RxCount--;
 10299  00400C  0100               	movlb	0	; () banked
 10300  00400E  07DF               	decf	_eusart1RxCount& (0+255),f,b	;volatile
 10301  004010                     
 10302                           ; BSR set to: 0
 10303                           ;mcc_generated_files/eusart1.c: 170:     PIE3bits.RC1IE = 1;
 10304  004010  010E               	movlb	14	; () banked
 10305  004012  8BC5               	bsf	197,5,b	;volatile
 10306  004014                     
 10307                           ; BSR set to: 14
 10308                           ;mcc_generated_files/eusart1.c: 172:     return readValue;
 10309  004014  5005               	movf	EUSART1_Read@readValue^0,w,c
 10310  004016                     
 10311                           ; BSR set to: 14
 10312  004016  0012               	return		;funcret
 10313  004018                     __end_of_EUSART1_Read:
 10314                           	opt callstack 0
 10315                           
 10316 ;; *************** function _ClearRxBuff *****************
 10317 ;; Defined at:
 10318 ;;		line 58 in file "Modbus.c"
 10319 ;; Parameters:    Size  Location     Type
 10320 ;;		None
 10321 ;; Auto vars:     Size  Location     Type
 10322 ;;  i               2    5[COMRAM] int 
 10323 ;; Return value:  Size  Location     Type
 10324 ;;                  1    wreg      void 
 10325 ;; Registers used:
 10326 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10327 ;; Tracked objects:
 10328 ;;		On entry : 0/0
 10329 ;;		On exit  : 0/0
 10330 ;;		Unchanged: 0/0
 10331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10333 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10334 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10335 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10336 ;;Total ram usage:        3 bytes
 10337 ;; Hardware stack levels used:    1
 10338 ;; Hardware stack levels required when called:    4
 10339 ;; This function calls:
 10340 ;;		Nothing
 10341 ;; This function is called by:
 10342 ;;		_main
 10343 ;;		_ModbusRx
 10344 ;; This function uses a non-reentrant model
 10345 ;;
 10346                           
 10347                           	psect	text45
 10348  004156                     __ptext45:
 10349                           	opt callstack 0
 10350  004156                     _ClearRxBuff:
 10351                           	opt callstack 25
 10352  004156                     
 10353                           ;Modbus.c: 60:     int i = 0;
 10354  004156  0E00               	movlw	0
 10355  004158  6E07               	movwf	(ClearRxBuff@i+1)^0,c
 10356  00415A  0E00               	movlw	0
 10357  00415C  6E06               	movwf	ClearRxBuff@i^0,c
 10358                           
 10359                           ;Modbus.c: 61:     for(i=0; i<ByteNum; i++ ){
 10360  00415E  0E00               	movlw	0
 10361  004160  6E07               	movwf	(ClearRxBuff@i+1)^0,c
 10362  004162  0E00               	movlw	0
 10363  004164  6E06               	movwf	ClearRxBuff@i^0,c
 10364  004166  EFBF  F020         	goto	l7414
 10365  00416A                     l7410:
 10366                           
 10367                           ; BSR set to: 0
 10368                           ;Modbus.c: 62:         rxData[i] = 0xFF;
 10369  00416A  0E00               	movlw	low _rxData
 10370  00416C  2406               	addwf	ClearRxBuff@i^0,w,c
 10371  00416E  6ED9               	movwf	fsr2l,c
 10372  004170  0E05               	movlw	high _rxData
 10373  004172  2007               	addwfc	(ClearRxBuff@i+1)^0,w,c
 10374  004174  6EDA               	movwf	fsr2h,c
 10375  004176  0EFF               	movlw	255
 10376  004178  6EDF               	movwf	indf2,c
 10377  00417A                     
 10378                           ; BSR set to: 0
 10379                           ;Modbus.c: 63:     }
 10380  00417A  4A06               	infsnz	ClearRxBuff@i^0,f,c
 10381  00417C  2A07               	incf	(ClearRxBuff@i+1)^0,f,c
 10382  00417E                     l7414:
 10383  00417E  0100               	movlb	0	; () banked
 10384  004180  51D7               	movf	_ByteNum& (0+255),w,b
 10385  004182  5C06               	subwf	ClearRxBuff@i^0,w,c
 10386  004184  5007               	movf	(ClearRxBuff@i+1)^0,w,c
 10387  004186  0A80               	xorlw	128
 10388  004188  6E05               	movwf	??_ClearRxBuff^0,c
 10389  00418A  51D8               	movf	(_ByteNum+1)& (0+255),w,b
 10390  00418C  0A80               	xorlw	128
 10391  00418E  5805               	subwfb	??_ClearRxBuff^0,w,c
 10392  004190  A0D8               	btfss	status,0,c
 10393  004192  EFCD  F020         	goto	u7371
 10394  004196  EFCF  F020         	goto	u7370
 10395  00419A                     u7371:
 10396  00419A  EFB5  F020         	goto	l7410
 10397  00419E                     u7370:
 10398  00419E                     
 10399                           ; BSR set to: 0
 10400  00419E  0012               	return		;funcret
 10401  0041A0                     __end_of_ClearRxBuff:
 10402                           	opt callstack 0
 10403                           
 10404 ;; *************** function _AddRxBuffToModBus *****************
 10405 ;; Defined at:
 10406 ;;		line 67 in file "Modbus.c"
 10407 ;; Parameters:    Size  Location     Type
 10408 ;;		None
 10409 ;; Auto vars:     Size  Location     Type
 10410 ;;  i               2   45[BANK0 ] int 
 10411 ;; Return value:  Size  Location     Type
 10412 ;;                  1    wreg      void 
 10413 ;; Registers used:
 10414 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10415 ;; Tracked objects:
 10416 ;;		On entry : 0/0
 10417 ;;		On exit  : 0/0
 10418 ;;		Unchanged: 0/0
 10419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10421 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10422 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10423 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10424 ;;Total ram usage:        3 bytes
 10425 ;; Hardware stack levels used:    1
 10426 ;; Hardware stack levels required when called:   13
 10427 ;; This function calls:
 10428 ;;		_printf
 10429 ;; This function is called by:
 10430 ;;		_ModbusRx
 10431 ;; This function uses a non-reentrant model
 10432 ;;
 10433                           
 10434                           	psect	text46
 10435  0032F2                     __ptext46:
 10436                           	opt callstack 0
 10437  0032F2                     _AddRxBuffToModBus:
 10438                           	opt callstack 16
 10439  0032F2                     
 10440                           ;Modbus.c: 68:     int i = 0;
 10441  0032F2  0E00               	movlw	0
 10442  0032F4  0100               	movlb	0	; () banked
 10443  0032F6  6F8E               	movwf	(AddRxBuffToModBus@i+1)& (0+255),b
 10444  0032F8  0E00               	movlw	0
 10445  0032FA  6F8D               	movwf	AddRxBuffToModBus@i& (0+255),b
 10446                           
 10447                           ;Modbus.c: 70:     for(i=0l; i<ByteNum; i++){
 10448  0032FC  0E00               	movlw	0
 10449  0032FE  6F8E               	movwf	(AddRxBuffToModBus@i+1)& (0+255),b
 10450  003300  0E00               	movlw	0
 10451  003302  6F8D               	movwf	AddRxBuffToModBus@i& (0+255),b
 10452  003304  EF96  F019         	goto	l7450
 10453  003308                     l7444:
 10454                           
 10455                           ; BSR set to: 0
 10456                           ;Modbus.c: 71:         ModbusData[ModDataCnt] = rxData[i];
 10457  003308  0E00               	movlw	low _rxData
 10458  00330A  258D               	addwf	AddRxBuffToModBus@i& (0+255),w,b
 10459  00330C  6ED9               	movwf	fsr2l,c
 10460  00330E  0E05               	movlw	high _rxData
 10461  003310  218E               	addwfc	(AddRxBuffToModBus@i+1)& (0+255),w,b
 10462  003312  6EDA               	movwf	fsr2h,c
 10463  003314  0E00               	movlw	low _ModbusData
 10464  003316  25D9               	addwf	_ModDataCnt& (0+255),w,b
 10465  003318  6EE1               	movwf	fsr1l,c
 10466  00331A  0E01               	movlw	high _ModbusData
 10467  00331C  21DA               	addwfc	(_ModDataCnt+1)& (0+255),w,b
 10468  00331E  6EE2               	movwf	fsr1h,c
 10469  003320  CFDF FFE7          	movff	indf2,indf1
 10470  003324                     
 10471                           ; BSR set to: 0
 10472                           ;Modbus.c: 72:         ModDataCnt++;
 10473  003324  4BD9               	infsnz	_ModDataCnt& (0+255),f,b
 10474  003326  2BDA               	incf	(_ModDataCnt+1)& (0+255),f,b
 10475  003328                     
 10476                           ; BSR set to: 0
 10477                           ;Modbus.c: 73:     }
 10478  003328  4B8D               	infsnz	AddRxBuffToModBus@i& (0+255),f,b
 10479  00332A  2B8E               	incf	(AddRxBuffToModBus@i+1)& (0+255),f,b
 10480  00332C                     l7450:
 10481                           
 10482                           ; BSR set to: 0
 10483  00332C  51D7               	movf	_ByteNum& (0+255),w,b
 10484  00332E  5D8D               	subwf	AddRxBuffToModBus@i& (0+255),w,b
 10485  003330  518E               	movf	(AddRxBuffToModBus@i+1)& (0+255),w,b
 10486  003332  0A80               	xorlw	128
 10487  003334  6E55               	movwf	??_AddRxBuffToModBus^0,c
 10488  003336  51D8               	movf	(_ByteNum+1)& (0+255),w,b
 10489  003338  0A80               	xorlw	128
 10490  00333A  5855               	subwfb	??_AddRxBuffToModBus^0,w,c
 10491  00333C  A0D8               	btfss	status,0,c
 10492  00333E  EFA3  F019         	goto	u7381
 10493  003342  EFA5  F019         	goto	u7380
 10494  003346                     u7381:
 10495  003346  EF84  F019         	goto	l7444
 10496  00334A                     u7380:
 10497  00334A                     
 10498                           ; BSR set to: 0
 10499                           ;Modbus.c: 75:     if(Debug ==1){
 10500  00334A  05DD               	decf	_Debug& (0+255),w,b
 10501  00334C  A4D8               	btfss	status,2,c
 10502  00334E  EFAB  F019         	goto	u7391
 10503  003352  EFAD  F019         	goto	u7390
 10504  003356                     u7391:
 10505  003356  EFBE  F019         	goto	l7456
 10506  00335A                     u7390:
 10507  00335A                     
 10508                           ; BSR set to: 0
 10509                           ;Modbus.c: 76:         printf("Completed Adding rxData Buffer to ModbusData Array\r\n\n"
      +                          );
 10510  00335A  0E2B               	movlw	low STR_8
 10511  00335C  6F7D               	movwf	printf@fmt& (0+255),b
 10512  00335E  0EF8               	movlw	high STR_8
 10513  003360  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10514  003362  ECAC  F022         	call	_printf	;wreg free
 10515                           
 10516                           ;Modbus.c: 77:         printf("ModDataCnt sitting at %i\r\n\n", ModDataCnt);
 10517  003366  0E77               	movlw	low STR_9
 10518  003368  0100               	movlb	0	; () banked
 10519  00336A  6F7D               	movwf	printf@fmt& (0+255),b
 10520  00336C  0EFD               	movlw	high STR_9
 10521  00336E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10522  003370  C0D9  F07F         	movff	_ModDataCnt,?_printf+2
 10523  003374  C0DA  F080         	movff	_ModDataCnt+1,?_printf+3
 10524  003378  ECAC  F022         	call	_printf	;wreg free
 10525  00337C                     l7456:
 10526                           
 10527                           ;Modbus.c: 80:     if(ModbusData[1] == 0x0F){
 10528  00337C  0E0F               	movlw	15
 10529  00337E  0101               	movlb	1	; () banked
 10530  003380  1901               	xorwf	(_ModbusData+1)& (0+255),w,b
 10531  003382  A4D8               	btfss	status,2,c
 10532  003384  EFC6  F019         	goto	u7401
 10533  003388  EFC8  F019         	goto	u7400
 10534  00338C                     u7401:
 10535  00338C  EFD1  F019         	goto	l7460
 10536  003390                     u7400:
 10537  003390                     l7458:
 10538                           
 10539                           ; BSR set to: 1
 10540                           ;Modbus.c: 81:         ExpectedBytes = ModbusData[6] + 9;
 10541  003390  0E09               	movlw	9
 10542  003392  2506               	addwf	(_ModbusData+6)& (0+255),w,b
 10543  003394  0100               	movlb	0	; () banked
 10544  003396  6FF8               	movwf	_ExpectedBytes& (0+255),b
 10545  003398  6BF9               	clrf	(_ExpectedBytes+1)& (0+255),b
 10546  00339A  0E00               	movlw	0
 10547  00339C  23F9               	addwfc	(_ExpectedBytes+1)& (0+255),f,b
 10548                           
 10549                           ;Modbus.c: 82:     }else if (ModbusData[1] == 0x10){
 10550  00339E  EFE1  F019         	goto	l719
 10551  0033A2                     l7460:
 10552                           
 10553                           ; BSR set to: 1
 10554  0033A2  0E10               	movlw	16
 10555  0033A4  1901               	xorwf	(_ModbusData+1)& (0+255),w,b
 10556  0033A6  A4D8               	btfss	status,2,c
 10557  0033A8  EFD8  F019         	goto	u7411
 10558  0033AC  EFDA  F019         	goto	u7410
 10559  0033B0                     u7411:
 10560  0033B0  EFDC  F019         	goto	l7464
 10561  0033B4                     u7410:
 10562  0033B4  EFC8  F019         	goto	l7458
 10563  0033B8                     l7464:
 10564                           
 10565                           ; BSR set to: 1
 10566                           ;Modbus.c: 85:         ExpectedBytes = 8;
 10567  0033B8  0E00               	movlw	0
 10568  0033BA  0100               	movlb	0	; () banked
 10569  0033BC  6FF9               	movwf	(_ExpectedBytes+1)& (0+255),b
 10570  0033BE  0E08               	movlw	8
 10571  0033C0  6FF8               	movwf	_ExpectedBytes& (0+255),b
 10572  0033C2                     l719:
 10573                           
 10574                           ; BSR set to: 0
 10575  0033C2  0012               	return		;funcret
 10576  0033C4                     __end_of_AddRxBuffToModBus:
 10577                           	opt callstack 0
 10578                           
 10579 ;; *************** function _ModbusFC10 *****************
 10580 ;; Defined at:
 10581 ;;		line 339 in file "Modbus.c"
 10582 ;; Parameters:    Size  Location     Type
 10583 ;;		None
 10584 ;; Auto vars:     Size  Location     Type
 10585 ;;  j               2   54[BANK0 ] int 
 10586 ;;  i               2   52[BANK0 ] int 
 10587 ;;  TempData        2   49[BANK0 ] unsigned int 
 10588 ;;  error           1   51[BANK0 ] _Bool 
 10589 ;; Return value:  Size  Location     Type
 10590 ;;                  1    wreg      void 
 10591 ;; Registers used:
 10592 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10593 ;; Tracked objects:
 10594 ;;		On entry : 0/0
 10595 ;;		On exit  : 0/0
 10596 ;;		Unchanged: 0/0
 10597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10599 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10600 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10601 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10602 ;;Total ram usage:       11 bytes
 10603 ;; Hardware stack levels used:    1
 10604 ;; Hardware stack levels required when called:   13
 10605 ;; This function calls:
 10606 ;;		_ModbusError
 10607 ;;		_UART1_Write_string
 10608 ;;		_generateCRC
 10609 ;;		_printf
 10610 ;; This function is called by:
 10611 ;;		_main
 10612 ;; This function uses a non-reentrant model
 10613 ;;
 10614                           
 10615                           	psect	text47
 10616  001A8C                     __ptext47:
 10617                           	opt callstack 0
 10618  001A8C                     _ModbusFC10:
 10619                           	opt callstack 17
 10620  001A8C                     
 10621                           ;Modbus.c: 344:     int j = 0;
 10622  001A8C  0E00               	movlw	0
 10623  001A8E  0100               	movlb	0	; () banked
 10624  001A90  6F97               	movwf	(ModbusFC10@j+1)& (0+255),b
 10625  001A92  0E00               	movlw	0
 10626  001A94  6F96               	movwf	ModbusFC10@j& (0+255),b
 10627                           
 10628                           ;Modbus.c: 345:     unsigned int TempData = 0x0000;
 10629  001A96  0E00               	movlw	0
 10630  001A98  6F92               	movwf	(ModbusFC10@TempData+1)& (0+255),b
 10631  001A9A  0E00               	movlw	0
 10632  001A9C  6F91               	movwf	ModbusFC10@TempData& (0+255),b
 10633                           
 10634                           ;Modbus.c: 346:     _Bool error = 0;
 10635  001A9E  0E00               	movlw	0
 10636  001AA0  6F93               	movwf	ModbusFC10@error& (0+255),b
 10637  001AA2                     
 10638                           ; BSR set to: 0
 10639                           ;Modbus.c: 348:     if(((ModbusData[2] * 256) + ModbusData[3]) + ((ModbusData[4] * 256) 
      +                          + ModbusData[5]) > 32){
 10640  001AA2  0101               	movlb	1	; () banked
 10641  001AA4  5102               	movf	(_ModbusData+2)& (0+255),w,b
 10642  001AA6  0100               	movlb	0	; () banked
 10643  001AA8  6F8E               	movwf	(??_ModbusFC10+1)& (0+255),b
 10644  001AAA  6B8D               	clrf	??_ModbusFC10& (0+255),b
 10645  001AAC  0101               	movlb	1	; () banked
 10646  001AAE  5105               	movf	(_ModbusData+5)& (0+255),w,b
 10647  001AB0  C104  F08F         	movff	_ModbusData+4,??_ModbusFC10+2
 10648  001AB4  0100               	movlb	0	; () banked
 10649  001AB6  6B90               	clrf	(??_ModbusFC10+3)& (0+255),b
 10650  001AB8  C08F  F090         	movff	??_ModbusFC10+2,??_ModbusFC10+3
 10651  001ABC  6B8F               	clrf	(??_ModbusFC10+2)& (0+255),b
 10652  001ABE  278F               	addwf	(??_ModbusFC10+2)& (0+255),f,b
 10653  001AC0  0E00               	movlw	0
 10654  001AC2  2390               	addwfc	(??_ModbusFC10+3)& (0+255),f,b
 10655  001AC4  518D               	movf	??_ModbusFC10& (0+255),w,b
 10656  001AC6  278F               	addwf	(??_ModbusFC10+2)& (0+255),f,b
 10657  001AC8  518E               	movf	(??_ModbusFC10+1)& (0+255),w,b
 10658  001ACA  2390               	addwfc	(??_ModbusFC10+3)& (0+255),f,b
 10659  001ACC  0101               	movlb	1	; () banked
 10660  001ACE  5103               	movf	(_ModbusData+3)& (0+255),w,b
 10661  001AD0  0100               	movlb	0	; () banked
 10662  001AD2  278F               	addwf	(??_ModbusFC10+2)& (0+255),f,b
 10663  001AD4  0E00               	movlw	0
 10664  001AD6  2390               	addwfc	(??_ModbusFC10+3)& (0+255),f,b
 10665  001AD8  BF90               	btfsc	(??_ModbusFC10+3)& (0+255),7,b
 10666  001ADA  EF78  F00D         	goto	u7841
 10667  001ADE  5190               	movf	(??_ModbusFC10+3)& (0+255),w,b
 10668  001AE0  E109               	bnz	u7840
 10669  001AE2  0E21               	movlw	33
 10670  001AE4  5D8F               	subwf	(??_ModbusFC10+2)& (0+255),w,b
 10671  001AE6  A0D8               	btfss	status,0,c
 10672  001AE8  EF78  F00D         	goto	u7841
 10673  001AEC  EF7A  F00D         	goto	u7840
 10674  001AF0                     u7841:
 10675  001AF0  EF83  F00D         	goto	l7814
 10676  001AF4                     u7840:
 10677  001AF4                     
 10678                           ; BSR set to: 0
 10679                           ;Modbus.c: 349:          printf("Requested registers out of range.  0x0000 to 0x020.\r\n
      +                          ");
 10680  001AF4  0E61               	movlw	low STR_32
 10681  001AF6  6F7D               	movwf	printf@fmt& (0+255),b
 10682  001AF8  0EF8               	movlw	high STR_32
 10683  001AFA  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 10684  001AFC  ECAC  F022         	call	_printf	;wreg free
 10685  001B00                     
 10686                           ;Modbus.c: 350:          error = 1;
 10687  001B00  0E01               	movlw	1
 10688  001B02  0100               	movlb	0	; () banked
 10689  001B04  6F93               	movwf	ModbusFC10@error& (0+255),b
 10690  001B06                     l7814:
 10691                           
 10692                           ; BSR set to: 0
 10693                           ;Modbus.c: 353:     if(error == 0){
 10694  001B06  5193               	movf	ModbusFC10@error& (0+255),w,b
 10695  001B08  A4D8               	btfss	status,2,c
 10696  001B0A  EF89  F00D         	goto	u7851
 10697  001B0E  EF8B  F00D         	goto	u7850
 10698  001B12                     u7851:
 10699  001B12  EF56  F00E         	goto	l7862
 10700  001B16                     u7850:
 10701  001B16                     
 10702                           ; BSR set to: 0
 10703                           ;Modbus.c: 355:         MBResCnt = 0;
 10704  001B16  0E00               	movlw	0
 10705  001B18  6FD6               	movwf	(_MBResCnt+1)& (0+255),b
 10706  001B1A  0E00               	movlw	0
 10707  001B1C  6FD5               	movwf	_MBResCnt& (0+255),b
 10708  001B1E                     
 10709                           ; BSR set to: 0
 10710                           ;Modbus.c: 356:         MBRespon[MBResCnt] = ModbusData[0];
 10711  001B1E  0E57               	movlw	low _MBRespon
 10712  001B20  25D5               	addwf	_MBResCnt& (0+255),w,b
 10713  001B22  6ED9               	movwf	fsr2l,c
 10714  001B24  0E02               	movlw	high _MBRespon
 10715  001B26  21D6               	addwfc	(_MBResCnt+1)& (0+255),w,b
 10716  001B28  6EDA               	movwf	fsr2h,c
 10717  001B2A  C100  FFDF         	movff	_ModbusData,indf2
 10718  001B2E                     
 10719                           ; BSR set to: 0
 10720                           ;Modbus.c: 357:         MBResCnt++;
 10721  001B2E  4BD5               	infsnz	_MBResCnt& (0+255),f,b
 10722  001B30  2BD6               	incf	(_MBResCnt+1)& (0+255),f,b
 10723  001B32                     
 10724                           ; BSR set to: 0
 10725                           ;Modbus.c: 358:         MBRespon[MBResCnt] = ModbusData[1];
 10726  001B32  0E57               	movlw	low _MBRespon
 10727  001B34  25D5               	addwf	_MBResCnt& (0+255),w,b
 10728  001B36  6ED9               	movwf	fsr2l,c
 10729  001B38  0E02               	movlw	high _MBRespon
 10730  001B3A  21D6               	addwfc	(_MBResCnt+1)& (0+255),w,b
 10731  001B3C  6EDA               	movwf	fsr2h,c
 10732  001B3E  C101  FFDF         	movff	_ModbusData+1,indf2
 10733  001B42                     
 10734                           ; BSR set to: 0
 10735                           ;Modbus.c: 359:         MBResCnt++;
 10736  001B42  4BD5               	infsnz	_MBResCnt& (0+255),f,b
 10737  001B44  2BD6               	incf	(_MBResCnt+1)& (0+255),f,b
 10738  001B46                     
 10739                           ; BSR set to: 0
 10740                           ;Modbus.c: 360:         MBRespon[MBResCnt] = ModbusData[2];
 10741  001B46  0E57               	movlw	low _MBRespon
 10742  001B48  25D5               	addwf	_MBResCnt& (0+255),w,b
 10743  001B4A  6ED9               	movwf	fsr2l,c
 10744  001B4C  0E02               	movlw	high _MBRespon
 10745  001B4E  21D6               	addwfc	(_MBResCnt+1)& (0+255),w,b
 10746  001B50  6EDA               	movwf	fsr2h,c
 10747  001B52  C102  FFDF         	movff	_ModbusData+2,indf2
 10748  001B56                     
 10749                           ; BSR set to: 0
 10750                           ;Modbus.c: 361:         MBResCnt++;
 10751  001B56  4BD5               	infsnz	_MBResCnt& (0+255),f,b
 10752  001B58  2BD6               	incf	(_MBResCnt+1)& (0+255),f,b
 10753  001B5A                     
 10754                           ; BSR set to: 0
 10755                           ;Modbus.c: 362:         MBRespon[MBResCnt] = ModbusData[3];
 10756  001B5A  0E57               	movlw	low _MBRespon
 10757  001B5C  25D5               	addwf	_MBResCnt& (0+255),w,b
 10758  001B5E  6ED9               	movwf	fsr2l,c
 10759  001B60  0E02               	movlw	high _MBRespon
 10760  001B62  21D6               	addwfc	(_MBResCnt+1)& (0+255),w,b
 10761  001B64  6EDA               	movwf	fsr2h,c
 10762  001B66  C103  FFDF         	movff	_ModbusData+3,indf2
 10763  001B6A                     
 10764                           ; BSR set to: 0
 10765                           ;Modbus.c: 363:         MBResCnt++;
 10766  001B6A  4BD5               	infsnz	_MBResCnt& (0+255),f,b
 10767  001B6C  2BD6               	incf	(_MBResCnt+1)& (0+255),f,b
 10768  001B6E                     
 10769                           ; BSR set to: 0
 10770                           ;Modbus.c: 364:         MBRespon[MBResCnt] = ModbusData[4];
 10771  001B6E  0E57               	movlw	low _MBRespon
 10772  001B70  25D5               	addwf	_MBResCnt& (0+255),w,b
 10773  001B72  6ED9               	movwf	fsr2l,c
 10774  001B74  0E02               	movlw	high _MBRespon
 10775  001B76  21D6               	addwfc	(_MBResCnt+1)& (0+255),w,b
 10776  001B78  6EDA               	movwf	fsr2h,c
 10777  001B7A  C104  FFDF         	movff	_ModbusData+4,indf2
 10778  001B7E                     
 10779                           ; BSR set to: 0
 10780                           ;Modbus.c: 365:         MBResCnt++;
 10781  001B7E  4BD5               	infsnz	_MBResCnt& (0+255),f,b
 10782  001B80  2BD6               	incf	(_MBResCnt+1)& (0+255),f,b
 10783  001B82                     
 10784                           ; BSR set to: 0
 10785                           ;Modbus.c: 366:         MBRespon[MBResCnt] = ModbusData[5];
 10786  001B82  0E57               	movlw	low _MBRespon
 10787  001B84  25D5               	addwf	_MBResCnt& (0+255),w,b
 10788  001B86  6ED9               	movwf	fsr2l,c
 10789  001B88  0E02               	movlw	high _MBRespon
 10790  001B8A  21D6               	addwfc	(_MBResCnt+1)& (0+255),w,b
 10791  001B8C  6EDA               	movwf	fsr2h,c
 10792  001B8E  C105  FFDF         	movff	_ModbusData+5,indf2
 10793  001B92                     
 10794                           ; BSR set to: 0
 10795                           ;Modbus.c: 367:         MBResCnt++;
 10796  001B92  4BD5               	infsnz	_MBResCnt& (0+255),f,b
 10797  001B94  2BD6               	incf	(_MBResCnt+1)& (0+255),f,b
 10798                           
 10799                           ;Modbus.c: 369:         for(i=0; i< (ModbusData[5]) ; i++ ){
 10800  001B96  0E00               	movlw	0
 10801  001B98  6F95               	movwf	(ModbusFC10@i+1)& (0+255),b
 10802  001B9A  0E00               	movlw	0
 10803  001B9C  6F94               	movwf	ModbusFC10@i& (0+255),b
 10804  001B9E  EF07  F00E         	goto	l7850
 10805  001BA2                     l7842:
 10806                           
 10807                           ; BSR set to: 0
 10808                           ;Modbus.c: 376:             TempData = ModbusData[7 +j] *256 + ModbusData[8 +j];
 10809  001BA2  0E08               	movlw	low (_ModbusData+8)
 10810  001BA4  2596               	addwf	ModbusFC10@j& (0+255),w,b
 10811  001BA6  6ED9               	movwf	fsr2l,c
 10812  001BA8  0E01               	movlw	high (_ModbusData+8)
 10813  001BAA  2197               	addwfc	(ModbusFC10@j+1)& (0+255),w,b
 10814  001BAC  6EDA               	movwf	fsr2h,c
 10815  001BAE  50DF               	movf	indf2,w,c
 10816  001BB0  6F8D               	movwf	??_ModbusFC10& (0+255),b
 10817  001BB2  0E07               	movlw	low (_ModbusData+7)
 10818  001BB4  2596               	addwf	ModbusFC10@j& (0+255),w,b
 10819  001BB6  6ED9               	movwf	fsr2l,c
 10820  001BB8  0E01               	movlw	high (_ModbusData+7)
 10821  001BBA  2197               	addwfc	(ModbusFC10@j+1)& (0+255),w,b
 10822  001BBC  6EDA               	movwf	fsr2h,c
 10823  001BBE  50DF               	movf	indf2,w,c
 10824  001BC0  6F8E               	movwf	(??_ModbusFC10+1)& (0+255),b
 10825  001BC2  518E               	movf	(??_ModbusFC10+1)& (0+255),w,b
 10826  001BC4  6F90               	movwf	(??_ModbusFC10+3)& (0+255),b
 10827  001BC6  6B8F               	clrf	(??_ModbusFC10+2)& (0+255),b
 10828  001BC8  518D               	movf	??_ModbusFC10& (0+255),w,b
 10829  001BCA  258F               	addwf	(??_ModbusFC10+2)& (0+255),w,b
 10830  001BCC  6F91               	movwf	ModbusFC10@TempData& (0+255),b
 10831  001BCE  0E00               	movlw	0
 10832  001BD0  2190               	addwfc	(??_ModbusFC10+3)& (0+255),w,b
 10833  001BD2  6F92               	movwf	(ModbusFC10@TempData+1)& (0+255),b
 10834  001BD4                     
 10835                           ; BSR set to: 0
 10836                           ;Modbus.c: 377:             j = j+2;
 10837  001BD4  0E02               	movlw	2
 10838  001BD6  2596               	addwf	ModbusFC10@j& (0+255),w,b
 10839  001BD8  6F96               	movwf	ModbusFC10@j& (0+255),b
 10840  001BDA  0E00               	movlw	0
 10841  001BDC  2197               	addwfc	(ModbusFC10@j+1)& (0+255),w,b
 10842  001BDE  6F97               	movwf	(ModbusFC10@j+1)& (0+255),b
 10843  001BE0                     
 10844                           ; BSR set to: 0
 10845                           ;Modbus.c: 378:             MB400xx[ModbusData[3] +i] = TempData;
 10846  001BE0  0101               	movlb	1	; () banked
 10847  001BE2  5103               	movf	(_ModbusData+3)& (0+255),w,b
 10848  001BE4  0100               	movlb	0	; () banked
 10849  001BE6  2594               	addwf	ModbusFC10@i& (0+255),w,b
 10850  001BE8  6F8D               	movwf	??_ModbusFC10& (0+255),b
 10851  001BEA  0E00               	movlw	0
 10852  001BEC  2195               	addwfc	(ModbusFC10@i+1)& (0+255),w,b
 10853  001BEE  6F8E               	movwf	(??_ModbusFC10+1)& (0+255),b
 10854  001BF0  90D8               	bcf	status,0,c
 10855  001BF2  378D               	rlcf	??_ModbusFC10& (0+255),f,b
 10856  001BF4  378E               	rlcf	(??_ModbusFC10+1)& (0+255),f,b
 10857  001BF6  0E64               	movlw	low _MB400xx
 10858  001BF8  258D               	addwf	??_ModbusFC10& (0+255),w,b
 10859  001BFA  6ED9               	movwf	fsr2l,c
 10860  001BFC  0E04               	movlw	high _MB400xx
 10861  001BFE  218E               	addwfc	(??_ModbusFC10+1)& (0+255),w,b
 10862  001C00  6EDA               	movwf	fsr2h,c
 10863  001C02  C091  FFDE         	movff	ModbusFC10@TempData,postinc2
 10864  001C06  C092  FFDD         	movff	ModbusFC10@TempData+1,postdec2
 10865  001C0A                     
 10866                           ; BSR set to: 0
 10867                           ;Modbus.c: 379:         }
 10868  001C0A  4B94               	infsnz	ModbusFC10@i& (0+255),f,b
 10869  001C0C  2B95               	incf	(ModbusFC10@i+1)& (0+255),f,b
 10870  001C0E                     l7850:
 10871                           
 10872                           ; BSR set to: 0
 10873  001C0E  0101               	movlb	1	; () banked
 10874  001C10  5105               	movf	(_ModbusData+5)& (0+255),w,b
 10875  001C12  0100               	movlb	0	; () banked
 10876  001C14  6F8D               	movwf	??_ModbusFC10& (0+255),b
 10877  001C16  6B8E               	clrf	(??_ModbusFC10+1)& (0+255),b
 10878  001C18  518D               	movf	??_ModbusFC10& (0+255),w,b
 10879  001C1A  5D94               	subwf	ModbusFC10@i& (0+255),w,b
 10880  001C1C  5195               	movf	(ModbusFC10@i+1)& (0+255),w,b
 10881  001C1E  0A80               	xorlw	128
 10882  001C20  6F8F               	movwf	(??_ModbusFC10+2)& (0+255),b
 10883  001C22  518E               	movf	(??_ModbusFC10+1)& (0+255),w,b
 10884  001C24  0A80               	xorlw	128
 10885  001C26  598F               	subwfb	(??_ModbusFC10+2)& (0+255),w,b
 10886  001C28  A0D8               	btfss	status,0,c
 10887  001C2A  EF19  F00E         	goto	u7861
 10888  001C2E  EF1B  F00E         	goto	u7860
 10889  001C32                     u7861:
 10890  001C32  EFD1  F00D         	goto	l7842
 10891  001C36                     u7860:
 10892  001C36                     
 10893                           ; BSR set to: 0
 10894                           ;Modbus.c: 381:         ByteHi = generateCRC(MBResCnt, 1);
 10895  001C36  C0D5  F005         	movff	_MBResCnt,generateCRC@MessCnt
 10896  001C3A  C0D6  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
 10897  001C3E  0E01               	movlw	1
 10898  001C40  6E07               	movwf	generateCRC@HiOrLo^0,c
 10899  001C42  EC0B  F019         	call	_generateCRC	;wreg free
 10900  001C46  C005  F0D3         	movff	?_generateCRC,_ByteHi
 10901  001C4A  C006  F0D4         	movff	?_generateCRC+1,_ByteHi+1
 10902                           
 10903                           ;Modbus.c: 382:         ByteLo = generateCRC(MBResCnt, 0);
 10904  001C4E  C0D5  F005         	movff	_MBResCnt,generateCRC@MessCnt
 10905  001C52  C0D6  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
 10906  001C56  0E00               	movlw	0
 10907  001C58  6E07               	movwf	generateCRC@HiOrLo^0,c
 10908  001C5A  EC0B  F019         	call	_generateCRC	;wreg free
 10909  001C5E  C005  F0F4         	movff	?_generateCRC,_ByteLo
 10910  001C62  C006  F0F5         	movff	?_generateCRC+1,_ByteLo+1
 10911  001C66                     
 10912                           ;Modbus.c: 384:         MBRespon[MBResCnt] = ByteHi;
 10913  001C66  0E57               	movlw	low _MBRespon
 10914  001C68  0100               	movlb	0	; () banked
 10915  001C6A  25D5               	addwf	_MBResCnt& (0+255),w,b
 10916  001C6C  6ED9               	movwf	fsr2l,c
 10917  001C6E  0E02               	movlw	high _MBRespon
 10918  001C70  21D6               	addwfc	(_MBResCnt+1)& (0+255),w,b
 10919  001C72  6EDA               	movwf	fsr2h,c
 10920  001C74  C0D3  FFDF         	movff	_ByteHi,indf2
 10921  001C78                     
 10922                           ; BSR set to: 0
 10923                           ;Modbus.c: 385:         MBRespon[MBResCnt +1] = ByteLo;
 10924  001C78  0E58               	movlw	low (_MBRespon+1)
 10925  001C7A  25D5               	addwf	_MBResCnt& (0+255),w,b
 10926  001C7C  6ED9               	movwf	fsr2l,c
 10927  001C7E  0E02               	movlw	high (_MBRespon+1)
 10928  001C80  21D6               	addwfc	(_MBResCnt+1)& (0+255),w,b
 10929  001C82  6EDA               	movwf	fsr2h,c
 10930  001C84  C0F4  FFDF         	movff	_ByteLo,indf2
 10931  001C88                     
 10932                           ; BSR set to: 0
 10933                           ;Modbus.c: 386:         MBResCnt = MBResCnt +2;
 10934  001C88  0E02               	movlw	2
 10935  001C8A  25D5               	addwf	_MBResCnt& (0+255),w,b
 10936  001C8C  6FD5               	movwf	_MBResCnt& (0+255),b
 10937  001C8E  0E00               	movlw	0
 10938  001C90  21D6               	addwfc	(_MBResCnt+1)& (0+255),w,b
 10939  001C92  6FD6               	movwf	(_MBResCnt+1)& (0+255),b
 10940  001C94                     
 10941                           ; BSR set to: 0
 10942                           ;Modbus.c: 388:         UART1_Write_string(MBRespon,MBResCnt);
 10943  001C94  0E57               	movlw	low _MBRespon
 10944  001C96  6E06               	movwf	UART1_Write_string@data^0,c
 10945  001C98  0E02               	movlw	high _MBRespon
 10946  001C9A  6E07               	movwf	(UART1_Write_string@data+1)^0,c
 10947  001C9C  C0D5  F008         	movff	_MBResCnt,UART1_Write_string@data_len
 10948  001CA0  C0D6  F009         	movff	_MBResCnt+1,UART1_Write_string@data_len+1
 10949  001CA4  EC2D  F01E         	call	_UART1_Write_string	;wreg free
 10950                           
 10951                           ;Modbus.c: 389:     }else{
 10952  001CA8  EF5C  F00E         	goto	l787
 10953  001CAC                     l7862:
 10954                           
 10955                           ; BSR set to: 0
 10956                           ;Modbus.c: 390:         ModbusError(0x02);
 10957  001CAC  0E00               	movlw	0
 10958  001CAE  6E15               	movwf	(ModbusError@ErrorCode+1)^0,c
 10959  001CB0  0E02               	movlw	2
 10960  001CB2  6E14               	movwf	ModbusError@ErrorCode^0,c
 10961  001CB4  EC0D  F01B         	call	_ModbusError	;wreg free
 10962  001CB8                     l787:
 10963  001CB8  0012               	return		;funcret
 10964  001CBA                     __end_of_ModbusFC10:
 10965                           	opt callstack 0
 10966                           
 10967 ;; *************** function _ModbusFC03 *****************
 10968 ;; Defined at:
 10969 ;;		line 173 in file "Modbus.c"
 10970 ;; Parameters:    Size  Location     Type
 10971 ;;		None
 10972 ;; Auto vars:     Size  Location     Type
 10973 ;;  convertedVal    2   49[BANK0 ] unsigned short 
 10974 ;;  i               2   52[BANK0 ] int 
 10975 ;;  error           1   51[BANK0 ] _Bool 
 10976 ;; Return value:  Size  Location     Type
 10977 ;;                  1    wreg      void 
 10978 ;; Registers used:
 10979 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10980 ;; Tracked objects:
 10981 ;;		On entry : 0/0
 10982 ;;		On exit  : 0/0
 10983 ;;		Unchanged: 0/0
 10984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10986 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10987 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10988 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10989 ;;Total ram usage:        9 bytes
 10990 ;; Hardware stack levels used:    1
 10991 ;; Hardware stack levels required when called:   13
 10992 ;; This function calls:
 10993 ;;		_ADCC_GetSingleConversion
 10994 ;;		_ModbusError
 10995 ;;		_UART1_Write_string
 10996 ;;		_generateCRC
 10997 ;;		_printf
 10998 ;; This function is called by:
 10999 ;;		_main
 11000 ;; This function uses a non-reentrant model
 11001 ;;
 11002                           
 11003                           	psect	text48
 11004  00012A                     __ptext48:
 11005                           	opt callstack 0
 11006  00012A                     _ModbusFC03:
 11007                           	opt callstack 17
 11008  00012A                     
 11009                           ;Modbus.c: 177:     _Bool error = 0;
 11010  00012A  0E00               	movlw	0
 11011  00012C  0100               	movlb	0	; () banked
 11012  00012E  6F93               	movwf	ModbusFC03@error& (0+255),b
 11013                           
 11014                           ;Modbus.c: 179:     MBResCnt = 0;
 11015  000130  0E00               	movlw	0
 11016  000132  6FD6               	movwf	(_MBResCnt+1)& (0+255),b
 11017  000134  0E00               	movlw	0
 11018  000136  6FD5               	movwf	_MBResCnt& (0+255),b
 11019  000138                     
 11020                           ; BSR set to: 0
 11021                           ;Modbus.c: 180:     MBRespon[MBResCnt] = ModbusData[0];
 11022  000138  0E57               	movlw	low _MBRespon
 11023  00013A  25D5               	addwf	_MBResCnt& (0+255),w,b
 11024  00013C  6ED9               	movwf	fsr2l,c
 11025  00013E  0E02               	movlw	high _MBRespon
 11026  000140  21D6               	addwfc	(_MBResCnt+1)& (0+255),w,b
 11027  000142  6EDA               	movwf	fsr2h,c
 11028  000144  C100  FFDF         	movff	_ModbusData,indf2
 11029  000148                     
 11030                           ; BSR set to: 0
 11031                           ;Modbus.c: 181:     MBResCnt++;
 11032  000148  4BD5               	infsnz	_MBResCnt& (0+255),f,b
 11033  00014A  2BD6               	incf	(_MBResCnt+1)& (0+255),f,b
 11034  00014C                     
 11035                           ; BSR set to: 0
 11036                           ;Modbus.c: 182:     MBRespon[MBResCnt] = ModbusData[1];
 11037  00014C  0E57               	movlw	low _MBRespon
 11038  00014E  25D5               	addwf	_MBResCnt& (0+255),w,b
 11039  000150  6ED9               	movwf	fsr2l,c
 11040  000152  0E02               	movlw	high _MBRespon
 11041  000154  21D6               	addwfc	(_MBResCnt+1)& (0+255),w,b
 11042  000156  6EDA               	movwf	fsr2h,c
 11043  000158  C101  FFDF         	movff	_ModbusData+1,indf2
 11044  00015C                     
 11045                           ; BSR set to: 0
 11046                           ;Modbus.c: 183:     MBResCnt++;
 11047  00015C  4BD5               	infsnz	_MBResCnt& (0+255),f,b
 11048  00015E  2BD6               	incf	(_MBResCnt+1)& (0+255),f,b
 11049  000160                     
 11050                           ; BSR set to: 0
 11051                           ;Modbus.c: 184:     MBRespon[MBResCnt] = ModbusData[5] *2;
 11052  000160  0101               	movlb	1	; () banked
 11053  000162  5105               	movf	(_ModbusData+5)& (0+255),w,b
 11054  000164  0D02               	mullw	2
 11055  000166  0E57               	movlw	low _MBRespon
 11056  000168  0100               	movlb	0	; () banked
 11057  00016A  25D5               	addwf	_MBResCnt& (0+255),w,b
 11058  00016C  6ED9               	movwf	fsr2l,c
 11059  00016E  0E02               	movlw	high _MBRespon
 11060  000170  21D6               	addwfc	(_MBResCnt+1)& (0+255),w,b
 11061  000172  6EDA               	movwf	fsr2h,c
 11062  000174  CFF3 FFDF          	movff	prodl,indf2
 11063  000178                     
 11064                           ; BSR set to: 0
 11065                           ;Modbus.c: 185:     MBResCnt++;
 11066  000178  4BD5               	infsnz	_MBResCnt& (0+255),f,b
 11067  00017A  2BD6               	incf	(_MBResCnt+1)& (0+255),f,b
 11068                           
 11069                           ;Modbus.c: 189:     switch(ModbusData[2]){
 11070  00017C  EF56  F002         	goto	l7722
 11071  000180                     l7664:
 11072                           
 11073                           ; BSR set to: 0
 11074                           ;Modbus.c: 192:         {;Modbus.c: 193:            if(((ModbusData[2] * 256) + ModbusDa
      +                          ta[3]) + ((ModbusData[4] * 256) + ModbusData[5]) > 32){
 11075  000180  0101               	movlb	1	; () banked
 11076  000182  5102               	movf	(_ModbusData+2)& (0+255),w,b
 11077  000184  0100               	movlb	0	; () banked
 11078  000186  6F8E               	movwf	(??_ModbusFC03+1)& (0+255),b
 11079  000188  6B8D               	clrf	??_ModbusFC03& (0+255),b
 11080  00018A  0101               	movlb	1	; () banked
 11081  00018C  5105               	movf	(_ModbusData+5)& (0+255),w,b
 11082  00018E  C104  F08F         	movff	_ModbusData+4,??_ModbusFC03+2
 11083  000192  0100               	movlb	0	; () banked
 11084  000194  6B90               	clrf	(??_ModbusFC03+3)& (0+255),b
 11085  000196  C08F  F090         	movff	??_ModbusFC03+2,??_ModbusFC03+3
 11086  00019A  6B8F               	clrf	(??_ModbusFC03+2)& (0+255),b
 11087  00019C  278F               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 11088  00019E  0E00               	movlw	0
 11089  0001A0  2390               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 11090  0001A2  518D               	movf	??_ModbusFC03& (0+255),w,b
 11091  0001A4  278F               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 11092  0001A6  518E               	movf	(??_ModbusFC03+1)& (0+255),w,b
 11093  0001A8  2390               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 11094  0001AA  0101               	movlb	1	; () banked
 11095  0001AC  5103               	movf	(_ModbusData+3)& (0+255),w,b
 11096  0001AE  0100               	movlb	0	; () banked
 11097  0001B0  278F               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 11098  0001B2  0E00               	movlw	0
 11099  0001B4  2390               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 11100  0001B6  BF90               	btfsc	(??_ModbusFC03+3)& (0+255),7,b
 11101  0001B8  EFE7  F000         	goto	u7671
 11102  0001BC  5190               	movf	(??_ModbusFC03+3)& (0+255),w,b
 11103  0001BE  E109               	bnz	u7670
 11104  0001C0  0E21               	movlw	33
 11105  0001C2  5D8F               	subwf	(??_ModbusFC03+2)& (0+255),w,b
 11106  0001C4  A0D8               	btfss	status,0,c
 11107  0001C6  EFE7  F000         	goto	u7671
 11108  0001CA  EFE9  F000         	goto	u7670
 11109  0001CE                     u7671:
 11110  0001CE  EFF2  F000         	goto	l7670
 11111  0001D2                     u7670:
 11112  0001D2                     
 11113                           ; BSR set to: 0
 11114                           ;Modbus.c: 194:                 printf("Requested registers out of range.  0x0000 to 0x0
      +                          20.\r\n");
 11115  0001D2  0E61               	movlw	low STR_32
 11116  0001D4  6F7D               	movwf	printf@fmt& (0+255),b
 11117  0001D6  0EF8               	movlw	high STR_32
 11118  0001D8  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 11119  0001DA  ECAC  F022         	call	_printf	;wreg free
 11120  0001DE                     
 11121                           ;Modbus.c: 195:                 error = 1;
 11122  0001DE  0E01               	movlw	1
 11123  0001E0  0100               	movlb	0	; () banked
 11124  0001E2  6F93               	movwf	ModbusFC03@error& (0+255),b
 11125  0001E4                     l7670:
 11126                           
 11127                           ; BSR set to: 0
 11128                           ;Modbus.c: 197:             printf("Requested Circuit Data\r\n\n");
 11129  0001E4  0EE6               	movlw	low STR_33
 11130  0001E6  6F7D               	movwf	printf@fmt& (0+255),b
 11131  0001E8  0EFD               	movlw	high STR_33
 11132  0001EA  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 11133  0001EC  ECAC  F022         	call	_printf	;wreg free
 11134                           
 11135                           ;Modbus.c: 198:             break;
 11136  0001F0  EF81  F002         	goto	l7724
 11137  0001F4                     l7672:
 11138                           
 11139                           ; BSR set to: 0
 11140                           ;Modbus.c: 201:         {;Modbus.c: 202:            if(((ModbusData[2] * 256) + ModbusDa
      +                          ta[3]) + ((ModbusData[4] * 256) + ModbusData[5]) > 9){
 11141  0001F4  0101               	movlb	1	; () banked
 11142  0001F6  5102               	movf	(_ModbusData+2)& (0+255),w,b
 11143  0001F8  0100               	movlb	0	; () banked
 11144  0001FA  6F8E               	movwf	(??_ModbusFC03+1)& (0+255),b
 11145  0001FC  6B8D               	clrf	??_ModbusFC03& (0+255),b
 11146  0001FE  0101               	movlb	1	; () banked
 11147  000200  5105               	movf	(_ModbusData+5)& (0+255),w,b
 11148  000202  C104  F08F         	movff	_ModbusData+4,??_ModbusFC03+2
 11149  000206  0100               	movlb	0	; () banked
 11150  000208  6B90               	clrf	(??_ModbusFC03+3)& (0+255),b
 11151  00020A  C08F  F090         	movff	??_ModbusFC03+2,??_ModbusFC03+3
 11152  00020E  6B8F               	clrf	(??_ModbusFC03+2)& (0+255),b
 11153  000210  278F               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 11154  000212  0E00               	movlw	0
 11155  000214  2390               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 11156  000216  518D               	movf	??_ModbusFC03& (0+255),w,b
 11157  000218  278F               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 11158  00021A  518E               	movf	(??_ModbusFC03+1)& (0+255),w,b
 11159  00021C  2390               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 11160  00021E  0101               	movlb	1	; () banked
 11161  000220  5103               	movf	(_ModbusData+3)& (0+255),w,b
 11162  000222  0100               	movlb	0	; () banked
 11163  000224  278F               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 11164  000226  0E00               	movlw	0
 11165  000228  2390               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 11166  00022A  BF90               	btfsc	(??_ModbusFC03+3)& (0+255),7,b
 11167  00022C  EF21  F001         	goto	u7681
 11168  000230  5190               	movf	(??_ModbusFC03+3)& (0+255),w,b
 11169  000232  E109               	bnz	u7680
 11170  000234  0E0A               	movlw	10
 11171  000236  5D8F               	subwf	(??_ModbusFC03+2)& (0+255),w,b
 11172  000238  A0D8               	btfss	status,0,c
 11173  00023A  EF21  F001         	goto	u7681
 11174  00023E  EF23  F001         	goto	u7680
 11175  000242                     u7681:
 11176  000242  EF2C  F001         	goto	l7678
 11177  000246                     u7680:
 11178  000246                     
 11179                           ; BSR set to: 0
 11180                           ;Modbus.c: 203:                 printf("Requested registers out of range. \r\n");
 11181  000246  0EB8               	movlw	low STR_34
 11182  000248  6F7D               	movwf	printf@fmt& (0+255),b
 11183  00024A  0EFA               	movlw	high STR_34
 11184  00024C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 11185  00024E  ECAC  F022         	call	_printf	;wreg free
 11186  000252                     
 11187                           ;Modbus.c: 204:                 error = 1;
 11188  000252  0E01               	movlw	1
 11189  000254  0100               	movlb	0	; () banked
 11190  000256  6F93               	movwf	ModbusFC03@error& (0+255),b
 11191  000258                     l7678:
 11192                           
 11193                           ; BSR set to: 0
 11194                           ;Modbus.c: 206:             printf("Requested Part No.\r\n\n");
 11195  000258  0EA9               	movlw	low STR_35
 11196  00025A  6F7D               	movwf	printf@fmt& (0+255),b
 11197  00025C  0EFE               	movlw	high STR_35
 11198  00025E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 11199  000260  ECAC  F022         	call	_printf	;wreg free
 11200                           
 11201                           ;Modbus.c: 207:             break;
 11202  000264  EF81  F002         	goto	l7724
 11203  000268                     l7680:
 11204                           
 11205                           ; BSR set to: 0
 11206                           ;Modbus.c: 210:         {;Modbus.c: 211:            if(((ModbusData[2] * 256) + ModbusDa
      +                          ta[3]) + ((ModbusData[4] * 256) + ModbusData[5]) > 1){
 11207  000268  0101               	movlb	1	; () banked
 11208  00026A  5102               	movf	(_ModbusData+2)& (0+255),w,b
 11209  00026C  0100               	movlb	0	; () banked
 11210  00026E  6F8E               	movwf	(??_ModbusFC03+1)& (0+255),b
 11211  000270  6B8D               	clrf	??_ModbusFC03& (0+255),b
 11212  000272  0101               	movlb	1	; () banked
 11213  000274  5105               	movf	(_ModbusData+5)& (0+255),w,b
 11214  000276  C104  F08F         	movff	_ModbusData+4,??_ModbusFC03+2
 11215  00027A  0100               	movlb	0	; () banked
 11216  00027C  6B90               	clrf	(??_ModbusFC03+3)& (0+255),b
 11217  00027E  C08F  F090         	movff	??_ModbusFC03+2,??_ModbusFC03+3
 11218  000282  6B8F               	clrf	(??_ModbusFC03+2)& (0+255),b
 11219  000284  278F               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 11220  000286  0E00               	movlw	0
 11221  000288  2390               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 11222  00028A  518D               	movf	??_ModbusFC03& (0+255),w,b
 11223  00028C  278F               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 11224  00028E  518E               	movf	(??_ModbusFC03+1)& (0+255),w,b
 11225  000290  2390               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 11226  000292  0101               	movlb	1	; () banked
 11227  000294  5103               	movf	(_ModbusData+3)& (0+255),w,b
 11228  000296  0100               	movlb	0	; () banked
 11229  000298  278F               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 11230  00029A  0E00               	movlw	0
 11231  00029C  2390               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 11232  00029E  BF90               	btfsc	(??_ModbusFC03+3)& (0+255),7,b
 11233  0002A0  EF5B  F001         	goto	u7691
 11234  0002A4  5190               	movf	(??_ModbusFC03+3)& (0+255),w,b
 11235  0002A6  E109               	bnz	u7690
 11236  0002A8  0E02               	movlw	2
 11237  0002AA  5D8F               	subwf	(??_ModbusFC03+2)& (0+255),w,b
 11238  0002AC  A0D8               	btfss	status,0,c
 11239  0002AE  EF5B  F001         	goto	u7691
 11240  0002B2  EF5D  F001         	goto	u7690
 11241  0002B6                     u7691:
 11242  0002B6  EF66  F001         	goto	l7686
 11243  0002BA                     u7690:
 11244  0002BA                     
 11245                           ; BSR set to: 0
 11246                           ;Modbus.c: 212:                 printf("Requested registers out of range. \r\n");
 11247  0002BA  0EB8               	movlw	low STR_34
 11248  0002BC  6F7D               	movwf	printf@fmt& (0+255),b
 11249  0002BE  0EFA               	movlw	high STR_34
 11250  0002C0  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 11251  0002C2  ECAC  F022         	call	_printf	;wreg free
 11252  0002C6                     
 11253                           ;Modbus.c: 213:                 error = 1;
 11254  0002C6  0E01               	movlw	1
 11255  0002C8  0100               	movlb	0	; () banked
 11256  0002CA  6F93               	movwf	ModbusFC03@error& (0+255),b
 11257  0002CC                     l7686:
 11258                           
 11259                           ; BSR set to: 0
 11260                           ;Modbus.c: 215:             printf("Requested Revision\r\n\n");
 11261  0002CC  0EBF               	movlw	low STR_37
 11262  0002CE  6F7D               	movwf	printf@fmt& (0+255),b
 11263  0002D0  0EFE               	movlw	high STR_37
 11264  0002D2  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 11265  0002D4  ECAC  F022         	call	_printf	;wreg free
 11266                           
 11267                           ;Modbus.c: 216:             break;
 11268  0002D8  EF81  F002         	goto	l7724
 11269  0002DC                     l7688:
 11270                           
 11271                           ; BSR set to: 0
 11272                           ;Modbus.c: 219:         {;Modbus.c: 220:            if(((ModbusData[2] * 256) + ModbusDa
      +                          ta[3]) + ((ModbusData[4] * 256) + ModbusData[5]) > 5){
 11273  0002DC  0101               	movlb	1	; () banked
 11274  0002DE  5102               	movf	(_ModbusData+2)& (0+255),w,b
 11275  0002E0  0100               	movlb	0	; () banked
 11276  0002E2  6F8E               	movwf	(??_ModbusFC03+1)& (0+255),b
 11277  0002E4  6B8D               	clrf	??_ModbusFC03& (0+255),b
 11278  0002E6  0101               	movlb	1	; () banked
 11279  0002E8  5105               	movf	(_ModbusData+5)& (0+255),w,b
 11280  0002EA  C104  F08F         	movff	_ModbusData+4,??_ModbusFC03+2
 11281  0002EE  0100               	movlb	0	; () banked
 11282  0002F0  6B90               	clrf	(??_ModbusFC03+3)& (0+255),b
 11283  0002F2  C08F  F090         	movff	??_ModbusFC03+2,??_ModbusFC03+3
 11284  0002F6  6B8F               	clrf	(??_ModbusFC03+2)& (0+255),b
 11285  0002F8  278F               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 11286  0002FA  0E00               	movlw	0
 11287  0002FC  2390               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 11288  0002FE  518D               	movf	??_ModbusFC03& (0+255),w,b
 11289  000300  278F               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 11290  000302  518E               	movf	(??_ModbusFC03+1)& (0+255),w,b
 11291  000304  2390               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 11292  000306  0101               	movlb	1	; () banked
 11293  000308  5103               	movf	(_ModbusData+3)& (0+255),w,b
 11294  00030A  0100               	movlb	0	; () banked
 11295  00030C  278F               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 11296  00030E  0E00               	movlw	0
 11297  000310  2390               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 11298  000312  BF90               	btfsc	(??_ModbusFC03+3)& (0+255),7,b
 11299  000314  EF95  F001         	goto	u7701
 11300  000318  5190               	movf	(??_ModbusFC03+3)& (0+255),w,b
 11301  00031A  E109               	bnz	u7700
 11302  00031C  0E06               	movlw	6
 11303  00031E  5D8F               	subwf	(??_ModbusFC03+2)& (0+255),w,b
 11304  000320  A0D8               	btfss	status,0,c
 11305  000322  EF95  F001         	goto	u7701
 11306  000326  EF97  F001         	goto	u7700
 11307  00032A                     u7701:
 11308  00032A  EFA0  F001         	goto	l7694
 11309  00032E                     u7700:
 11310  00032E                     
 11311                           ; BSR set to: 0
 11312                           ;Modbus.c: 221:                 printf("Requested registers out of range. \r\n");
 11313  00032E  0EB8               	movlw	low STR_34
 11314  000330  6F7D               	movwf	printf@fmt& (0+255),b
 11315  000332  0EFA               	movlw	high STR_34
 11316  000334  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 11317  000336  ECAC  F022         	call	_printf	;wreg free
 11318  00033A                     
 11319                           ;Modbus.c: 222:                 error = 1;
 11320  00033A  0E01               	movlw	1
 11321  00033C  0100               	movlb	0	; () banked
 11322  00033E  6F93               	movwf	ModbusFC03@error& (0+255),b
 11323  000340                     l7694:
 11324                           
 11325                           ; BSR set to: 0
 11326                           ;Modbus.c: 224:             printf("Requested Serial No.\r\n\n");
 11327  000340  0E4D               	movlw	low STR_39
 11328  000342  6F7D               	movwf	printf@fmt& (0+255),b
 11329  000344  0EFE               	movlw	high STR_39
 11330  000346  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 11331  000348  ECAC  F022         	call	_printf	;wreg free
 11332                           
 11333                           ;Modbus.c: 225:             break;
 11334  00034C  EF81  F002         	goto	l7724
 11335  000350                     l7696:
 11336                           
 11337                           ; BSR set to: 0
 11338                           ;Modbus.c: 228:         {;Modbus.c: 229:            if(((ModbusData[2] * 256) + ModbusDa
      +                          ta[3]) + ((ModbusData[4] * 256) + ModbusData[5]) > 6){
 11339  000350  0101               	movlb	1	; () banked
 11340  000352  5102               	movf	(_ModbusData+2)& (0+255),w,b
 11341  000354  0100               	movlb	0	; () banked
 11342  000356  6F8E               	movwf	(??_ModbusFC03+1)& (0+255),b
 11343  000358  6B8D               	clrf	??_ModbusFC03& (0+255),b
 11344  00035A  0101               	movlb	1	; () banked
 11345  00035C  5105               	movf	(_ModbusData+5)& (0+255),w,b
 11346  00035E  C104  F08F         	movff	_ModbusData+4,??_ModbusFC03+2
 11347  000362  0100               	movlb	0	; () banked
 11348  000364  6B90               	clrf	(??_ModbusFC03+3)& (0+255),b
 11349  000366  C08F  F090         	movff	??_ModbusFC03+2,??_ModbusFC03+3
 11350  00036A  6B8F               	clrf	(??_ModbusFC03+2)& (0+255),b
 11351  00036C  278F               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 11352  00036E  0E00               	movlw	0
 11353  000370  2390               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 11354  000372  518D               	movf	??_ModbusFC03& (0+255),w,b
 11355  000374  278F               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 11356  000376  518E               	movf	(??_ModbusFC03+1)& (0+255),w,b
 11357  000378  2390               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 11358  00037A  0101               	movlb	1	; () banked
 11359  00037C  5103               	movf	(_ModbusData+3)& (0+255),w,b
 11360  00037E  0100               	movlb	0	; () banked
 11361  000380  278F               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 11362  000382  0E00               	movlw	0
 11363  000384  2390               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 11364  000386  BF90               	btfsc	(??_ModbusFC03+3)& (0+255),7,b
 11365  000388  EFCF  F001         	goto	u7711
 11366  00038C  5190               	movf	(??_ModbusFC03+3)& (0+255),w,b
 11367  00038E  E109               	bnz	u7710
 11368  000390  0E07               	movlw	7
 11369  000392  5D8F               	subwf	(??_ModbusFC03+2)& (0+255),w,b
 11370  000394  A0D8               	btfss	status,0,c
 11371  000396  EFCF  F001         	goto	u7711
 11372  00039A  EFD1  F001         	goto	u7710
 11373  00039E                     u7711:
 11374  00039E  EFDA  F001         	goto	l7702
 11375  0003A2                     u7710:
 11376  0003A2                     
 11377                           ; BSR set to: 0
 11378                           ;Modbus.c: 230:                 printf("Requested registers out of range. \r\n");
 11379  0003A2  0EB8               	movlw	low STR_34
 11380  0003A4  6F7D               	movwf	printf@fmt& (0+255),b
 11381  0003A6  0EFA               	movlw	high STR_34
 11382  0003A8  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 11383  0003AA  ECAC  F022         	call	_printf	;wreg free
 11384  0003AE                     
 11385                           ;Modbus.c: 231:                 error = 1;
 11386  0003AE  0E01               	movlw	1
 11387  0003B0  0100               	movlb	0	; () banked
 11388  0003B2  6F93               	movwf	ModbusFC03@error& (0+255),b
 11389  0003B4                     l7702:
 11390                           
 11391                           ; BSR set to: 0
 11392                           ;Modbus.c: 233:             printf("Requested Compile Date\r\n\n");
 11393  0003B4  0E1A               	movlw	low STR_41
 11394  0003B6  6F7D               	movwf	printf@fmt& (0+255),b
 11395  0003B8  0EFE               	movlw	high STR_41
 11396  0003BA  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 11397  0003BC  ECAC  F022         	call	_printf	;wreg free
 11398                           
 11399                           ;Modbus.c: 234:             break;
 11400  0003C0  EF81  F002         	goto	l7724
 11401  0003C4                     l7704:
 11402                           
 11403                           ; BSR set to: 0
 11404                           ;Modbus.c: 237:         {;Modbus.c: 238:            if(((ModbusData[2] * 256) + ModbusDa
      +                          ta[3]) + ((ModbusData[4] * 256) + ModbusData[5]) > 4){
 11405  0003C4  0101               	movlb	1	; () banked
 11406  0003C6  5102               	movf	(_ModbusData+2)& (0+255),w,b
 11407  0003C8  0100               	movlb	0	; () banked
 11408  0003CA  6F8E               	movwf	(??_ModbusFC03+1)& (0+255),b
 11409  0003CC  6B8D               	clrf	??_ModbusFC03& (0+255),b
 11410  0003CE  0101               	movlb	1	; () banked
 11411  0003D0  5105               	movf	(_ModbusData+5)& (0+255),w,b
 11412  0003D2  C104  F08F         	movff	_ModbusData+4,??_ModbusFC03+2
 11413  0003D6  0100               	movlb	0	; () banked
 11414  0003D8  6B90               	clrf	(??_ModbusFC03+3)& (0+255),b
 11415  0003DA  C08F  F090         	movff	??_ModbusFC03+2,??_ModbusFC03+3
 11416  0003DE  6B8F               	clrf	(??_ModbusFC03+2)& (0+255),b
 11417  0003E0  278F               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 11418  0003E2  0E00               	movlw	0
 11419  0003E4  2390               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 11420  0003E6  518D               	movf	??_ModbusFC03& (0+255),w,b
 11421  0003E8  278F               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 11422  0003EA  518E               	movf	(??_ModbusFC03+1)& (0+255),w,b
 11423  0003EC  2390               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 11424  0003EE  0101               	movlb	1	; () banked
 11425  0003F0  5103               	movf	(_ModbusData+3)& (0+255),w,b
 11426  0003F2  0100               	movlb	0	; () banked
 11427  0003F4  278F               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 11428  0003F6  0E00               	movlw	0
 11429  0003F8  2390               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 11430  0003FA  BF90               	btfsc	(??_ModbusFC03+3)& (0+255),7,b
 11431  0003FC  EF09  F002         	goto	u7721
 11432  000400  5190               	movf	(??_ModbusFC03+3)& (0+255),w,b
 11433  000402  E109               	bnz	u7720
 11434  000404  0E05               	movlw	5
 11435  000406  5D8F               	subwf	(??_ModbusFC03+2)& (0+255),w,b
 11436  000408  A0D8               	btfss	status,0,c
 11437  00040A  EF09  F002         	goto	u7721
 11438  00040E  EF0B  F002         	goto	u7720
 11439  000412                     u7721:
 11440  000412  EF14  F002         	goto	l7710
 11441  000416                     u7720:
 11442  000416                     
 11443                           ; BSR set to: 0
 11444                           ;Modbus.c: 239:                 printf("Requested registers out of range. \r\n");
 11445  000416  0EB8               	movlw	low STR_34
 11446  000418  6F7D               	movwf	printf@fmt& (0+255),b
 11447  00041A  0EFA               	movlw	high STR_34
 11448  00041C  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 11449  00041E  ECAC  F022         	call	_printf	;wreg free
 11450  000422                     
 11451                           ;Modbus.c: 240:                 error = 1;
 11452  000422  0E01               	movlw	1
 11453  000424  0100               	movlb	0	; () banked
 11454  000426  6F93               	movwf	ModbusFC03@error& (0+255),b
 11455  000428                     l7710:
 11456                           
 11457                           ; BSR set to: 0
 11458                           ;Modbus.c: 242:             printf("Requested Compile Time\r\n\n");
 11459  000428  0E00               	movlw	low STR_43
 11460  00042A  6F7D               	movwf	printf@fmt& (0+255),b
 11461  00042C  0EFE               	movlw	high STR_43
 11462  00042E  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 11463  000430  ECAC  F022         	call	_printf	;wreg free
 11464                           
 11465                           ;Modbus.c: 243:             break;
 11466  000434  EF81  F002         	goto	l7724
 11467  000438                     l7712:
 11468                           
 11469                           ; BSR set to: 0
 11470                           ;Modbus.c: 246:         {;Modbus.c: 247:            if(((ModbusData[2] * 256) + ModbusDa
      +                          ta[3]) + ((ModbusData[4] * 256) + ModbusData[5]) > 3){
 11471  000438  0101               	movlb	1	; () banked
 11472  00043A  5102               	movf	(_ModbusData+2)& (0+255),w,b
 11473  00043C  0100               	movlb	0	; () banked
 11474  00043E  6F8E               	movwf	(??_ModbusFC03+1)& (0+255),b
 11475  000440  6B8D               	clrf	??_ModbusFC03& (0+255),b
 11476  000442  0101               	movlb	1	; () banked
 11477  000444  5105               	movf	(_ModbusData+5)& (0+255),w,b
 11478  000446  C104  F08F         	movff	_ModbusData+4,??_ModbusFC03+2
 11479  00044A  0100               	movlb	0	; () banked
 11480  00044C  6B90               	clrf	(??_ModbusFC03+3)& (0+255),b
 11481  00044E  C08F  F090         	movff	??_ModbusFC03+2,??_ModbusFC03+3
 11482  000452  6B8F               	clrf	(??_ModbusFC03+2)& (0+255),b
 11483  000454  278F               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 11484  000456  0E00               	movlw	0
 11485  000458  2390               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 11486  00045A  518D               	movf	??_ModbusFC03& (0+255),w,b
 11487  00045C  278F               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 11488  00045E  518E               	movf	(??_ModbusFC03+1)& (0+255),w,b
 11489  000460  2390               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 11490  000462  0101               	movlb	1	; () banked
 11491  000464  5103               	movf	(_ModbusData+3)& (0+255),w,b
 11492  000466  0100               	movlb	0	; () banked
 11493  000468  278F               	addwf	(??_ModbusFC03+2)& (0+255),f,b
 11494  00046A  0E00               	movlw	0
 11495  00046C  2390               	addwfc	(??_ModbusFC03+3)& (0+255),f,b
 11496  00046E  BF90               	btfsc	(??_ModbusFC03+3)& (0+255),7,b
 11497  000470  EF43  F002         	goto	u7731
 11498  000474  5190               	movf	(??_ModbusFC03+3)& (0+255),w,b
 11499  000476  E109               	bnz	u7730
 11500  000478  0E04               	movlw	4
 11501  00047A  5D8F               	subwf	(??_ModbusFC03+2)& (0+255),w,b
 11502  00047C  A0D8               	btfss	status,0,c
 11503  00047E  EF43  F002         	goto	u7731
 11504  000482  EF45  F002         	goto	u7730
 11505  000486                     u7731:
 11506  000486  EF4E  F002         	goto	l7718
 11507  00048A                     u7730:
 11508  00048A                     
 11509                           ; BSR set to: 0
 11510                           ;Modbus.c: 248:                 printf("Requested registers out of range. \r\n");
 11511  00048A  0EB8               	movlw	low STR_34
 11512  00048C  6F7D               	movwf	printf@fmt& (0+255),b
 11513  00048E  0EFA               	movlw	high STR_34
 11514  000490  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 11515  000492  ECAC  F022         	call	_printf	;wreg free
 11516  000496                     
 11517                           ;Modbus.c: 249:                 error = 1;
 11518  000496  0E01               	movlw	1
 11519  000498  0100               	movlb	0	; () banked
 11520  00049A  6F93               	movwf	ModbusFC03@error& (0+255),b
 11521  00049C                     l7718:
 11522                           
 11523                           ; BSR set to: 0
 11524                           ;Modbus.c: 251:             printf("Requested Analogue Inputs\r\n\n");
 11525  00049C  0E5A               	movlw	low STR_45
 11526  00049E  6F7D               	movwf	printf@fmt& (0+255),b
 11527  0004A0  0EFD               	movlw	high STR_45
 11528  0004A2  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 11529  0004A4  ECAC  F022         	call	_printf	;wreg free
 11530                           
 11531                           ;Modbus.c: 252:             break;
 11532  0004A8  EF81  F002         	goto	l7724
 11533  0004AC                     l7722:
 11534                           
 11535                           ; BSR set to: 0
 11536  0004AC  0101               	movlb	1	; () banked
 11537  0004AE  5102               	movf	(_ModbusData+2)& (0+255),w,b
 11538  0004B0  0100               	movlb	0	; () banked
 11539  0004B2  6F8D               	movwf	??_ModbusFC03& (0+255),b
 11540  0004B4  6B8E               	clrf	(??_ModbusFC03+1)& (0+255),b
 11541                           
 11542                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11543                           ; Switch size 1, requested type "simple"
 11544                           ; Number of cases is 1, Range of values is 0 to 0
 11545                           ; switch strategies available:
 11546                           ; Name         Instructions Cycles
 11547                           ; simple_byte            4     3 (average)
 11548                           ;	Chosen strategy is simple_byte
 11549  0004B6  518E               	movf	(??_ModbusFC03+1)& (0+255),w,b
 11550  0004B8  0A00               	xorlw	0	; case 0
 11551  0004BA  B4D8               	btfsc	status,2,c
 11552  0004BC  EF62  F002         	goto	l8188
 11553  0004C0  EF81  F002         	goto	l7724
 11554  0004C4                     l8188:
 11555                           
 11556                           ; BSR set to: 0
 11557                           ; Switch size 1, requested type "simple"
 11558                           ; Number of cases is 7, Range of values is 0 to 6
 11559                           ; switch strategies available:
 11560                           ; Name         Instructions Cycles
 11561                           ; simple_byte           22    12 (average)
 11562                           ;	Chosen strategy is simple_byte
 11563  0004C4  518D               	movf	??_ModbusFC03& (0+255),w,b
 11564  0004C6  0A00               	xorlw	0	; case 0
 11565  0004C8  B4D8               	btfsc	status,2,c
 11566  0004CA  EFC0  F000         	goto	l7664
 11567  0004CE  0A01               	xorlw	1	; case 1
 11568  0004D0  B4D8               	btfsc	status,2,c
 11569  0004D2  EFFA  F000         	goto	l7672
 11570  0004D6  0A03               	xorlw	3	; case 2
 11571  0004D8  B4D8               	btfsc	status,2,c
 11572  0004DA  EF34  F001         	goto	l7680
 11573  0004DE  0A01               	xorlw	1	; case 3
 11574  0004E0  B4D8               	btfsc	status,2,c
 11575  0004E2  EF6E  F001         	goto	l7688
 11576  0004E6  0A07               	xorlw	7	; case 4
 11577  0004E8  B4D8               	btfsc	status,2,c
 11578  0004EA  EFA8  F001         	goto	l7696
 11579  0004EE  0A01               	xorlw	1	; case 5
 11580  0004F0  B4D8               	btfsc	status,2,c
 11581  0004F2  EFE2  F001         	goto	l7704
 11582  0004F6  0A03               	xorlw	3	; case 6
 11583  0004F8  B4D8               	btfsc	status,2,c
 11584  0004FA  EF1C  F002         	goto	l7712
 11585  0004FE  EF81  F002         	goto	l7724
 11586  000502                     l7724:
 11587                           
 11588                           ;Modbus.c: 256:     if(error == 0){
 11589  000502  0100               	movlb	0	; () banked
 11590  000504  5193               	movf	ModbusFC03@error& (0+255),w,b
 11591  000506  A4D8               	btfss	status,2,c
 11592  000508  EF88  F002         	goto	u7741
 11593  00050C  EF8A  F002         	goto	u7740
 11594  000510                     u7741:
 11595  000510  EF75  F004         	goto	l7784
 11596  000514                     u7740:
 11597  000514                     
 11598                           ; BSR set to: 0
 11599                           ;Modbus.c: 257:         for(i=0; i< (ModbusData[5]) ; i++ ){
 11600  000514  0E00               	movlw	0
 11601  000516  6F95               	movwf	(ModbusFC03@i+1)& (0+255),b
 11602  000518  0E00               	movlw	0
 11603  00051A  6F94               	movwf	ModbusFC03@i& (0+255),b
 11604  00051C  EF26  F004         	goto	l7772
 11605  000520                     l7728:
 11606                           
 11607                           ; BSR set to: 0
 11608                           ;Modbus.c: 262:             if(ModbusData[2] == 0x03){
 11609  000520  0E03               	movlw	3
 11610  000522  0101               	movlb	1	; () banked
 11611  000524  1902               	xorwf	(_ModbusData+2)& (0+255),w,b
 11612  000526  A4D8               	btfss	status,2,c
 11613  000528  EF98  F002         	goto	u7751
 11614  00052C  EF9A  F002         	goto	u7750
 11615  000530                     u7751:
 11616  000530  EFCB  F002         	goto	l7732
 11617  000534                     u7750:
 11618  000534                     
 11619                           ; BSR set to: 1
 11620                           ;Modbus.c: 264:                 ByteLo = MB303xx[ModbusData[3] +i] & 0x00FF;
 11621  000534  5103               	movf	(_ModbusData+3)& (0+255),w,b
 11622  000536  0100               	movlb	0	; () banked
 11623  000538  2594               	addwf	ModbusFC03@i& (0+255),w,b
 11624  00053A  6F8D               	movwf	??_ModbusFC03& (0+255),b
 11625  00053C  0E00               	movlw	0
 11626  00053E  2195               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
 11627  000540  6F8E               	movwf	(??_ModbusFC03+1)& (0+255),b
 11628  000542  90D8               	bcf	status,0,c
 11629  000544  378D               	rlcf	??_ModbusFC03& (0+255),f,b
 11630  000546  378E               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
 11631  000548  0EE8               	movlw	low _MB303xx
 11632  00054A  258D               	addwf	??_ModbusFC03& (0+255),w,b
 11633  00054C  6ED9               	movwf	fsr2l,c
 11634  00054E  0E00               	movlw	high _MB303xx
 11635  000550  218E               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
 11636  000552  6EDA               	movwf	fsr2h,c
 11637  000554  CFDE F08F          	movff	postinc2,??_ModbusFC03+2
 11638  000558  CFDD F090          	movff	postdec2,??_ModbusFC03+3
 11639  00055C  518F               	movf	(??_ModbusFC03+2)& (0+255),w,b
 11640  00055E  6FF4               	movwf	_ByteLo& (0+255),b
 11641  000560  6BF5               	clrf	(_ByteLo+1)& (0+255),b
 11642                           
 11643                           ;Modbus.c: 265:                 ByteHi = MB303xx[ModbusData[3] +i] >> 8;
 11644  000562  0101               	movlb	1	; () banked
 11645  000564  5103               	movf	(_ModbusData+3)& (0+255),w,b
 11646  000566  0100               	movlb	0	; () banked
 11647  000568  2594               	addwf	ModbusFC03@i& (0+255),w,b
 11648  00056A  6F8D               	movwf	??_ModbusFC03& (0+255),b
 11649  00056C  0E00               	movlw	0
 11650  00056E  2195               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
 11651  000570  6F8E               	movwf	(??_ModbusFC03+1)& (0+255),b
 11652  000572  90D8               	bcf	status,0,c
 11653  000574  378D               	rlcf	??_ModbusFC03& (0+255),f,b
 11654  000576  378E               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
 11655  000578  0EE8               	movlw	low _MB303xx
 11656  00057A  258D               	addwf	??_ModbusFC03& (0+255),w,b
 11657  00057C  6ED9               	movwf	fsr2l,c
 11658  00057E  0E00               	movlw	high _MB303xx
 11659  000580  218E               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
 11660  000582  6EDA               	movwf	fsr2h,c
 11661  000584  CFDE F08F          	movff	postinc2,??_ModbusFC03+2
 11662  000588  CFDD F090          	movff	postdec2,??_ModbusFC03+3
 11663  00058C  5190               	movf	(??_ModbusFC03+3)& (0+255),w,b
 11664  00058E  6FD3               	movwf	_ByteHi& (0+255),b
 11665  000590  6BD4               	clrf	(_ByteHi+1)& (0+255),b
 11666                           
 11667                           ;Modbus.c: 268:             }else if(ModbusData[2] == 0x01){
 11668  000592  EF0F  F004         	goto	l7762
 11669  000596                     l7732:
 11670                           
 11671                           ; BSR set to: 1
 11672  000596  0502               	decf	(_ModbusData+2)& (0+255),w,b
 11673  000598  A4D8               	btfss	status,2,c
 11674  00059A  EFD1  F002         	goto	u7761
 11675  00059E  EFD3  F002         	goto	u7760
 11676  0005A2                     u7761:
 11677  0005A2  EF04  F003         	goto	l7736
 11678  0005A6                     u7760:
 11679  0005A6                     
 11680                           ; BSR set to: 1
 11681                           ;Modbus.c: 275:                 ByteLo = MB301xx[ModbusData[3] +i] & 0x00FF;
 11682  0005A6  5103               	movf	(_ModbusData+3)& (0+255),w,b
 11683  0005A8  0100               	movlb	0	; () banked
 11684  0005AA  2594               	addwf	ModbusFC03@i& (0+255),w,b
 11685  0005AC  6F8D               	movwf	??_ModbusFC03& (0+255),b
 11686  0005AE  0E00               	movlw	0
 11687  0005B0  2195               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
 11688  0005B2  6F8E               	movwf	(??_ModbusFC03+1)& (0+255),b
 11689  0005B4  90D8               	bcf	status,0,c
 11690  0005B6  378D               	rlcf	??_ModbusFC03& (0+255),f,b
 11691  0005B8  378E               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
 11692  0005BA  0E64               	movlw	low _MB301xx
 11693  0005BC  258D               	addwf	??_ModbusFC03& (0+255),w,b
 11694  0005BE  6ED9               	movwf	fsr2l,c
 11695  0005C0  0E01               	movlw	high _MB301xx
 11696  0005C2  218E               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
 11697  0005C4  6EDA               	movwf	fsr2h,c
 11698  0005C6  CFDE F08F          	movff	postinc2,??_ModbusFC03+2
 11699  0005CA  CFDD F090          	movff	postdec2,??_ModbusFC03+3
 11700  0005CE  518F               	movf	(??_ModbusFC03+2)& (0+255),w,b
 11701  0005D0  6FF4               	movwf	_ByteLo& (0+255),b
 11702  0005D2  6BF5               	clrf	(_ByteLo+1)& (0+255),b
 11703                           
 11704                           ;Modbus.c: 276:                 ByteHi = MB301xx[ModbusData[3] +i] >> 8;
 11705  0005D4  0101               	movlb	1	; () banked
 11706  0005D6  5103               	movf	(_ModbusData+3)& (0+255),w,b
 11707  0005D8  0100               	movlb	0	; () banked
 11708  0005DA  2594               	addwf	ModbusFC03@i& (0+255),w,b
 11709  0005DC  6F8D               	movwf	??_ModbusFC03& (0+255),b
 11710  0005DE  0E00               	movlw	0
 11711  0005E0  2195               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
 11712  0005E2  6F8E               	movwf	(??_ModbusFC03+1)& (0+255),b
 11713  0005E4  90D8               	bcf	status,0,c
 11714  0005E6  378D               	rlcf	??_ModbusFC03& (0+255),f,b
 11715  0005E8  378E               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
 11716  0005EA  0E64               	movlw	low _MB301xx
 11717  0005EC  258D               	addwf	??_ModbusFC03& (0+255),w,b
 11718  0005EE  6ED9               	movwf	fsr2l,c
 11719  0005F0  0E01               	movlw	high _MB301xx
 11720  0005F2  218E               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
 11721  0005F4  6EDA               	movwf	fsr2h,c
 11722  0005F6  CFDE F08F          	movff	postinc2,??_ModbusFC03+2
 11723  0005FA  CFDD F090          	movff	postdec2,??_ModbusFC03+3
 11724  0005FE  5190               	movf	(??_ModbusFC03+3)& (0+255),w,b
 11725  000600  6FD3               	movwf	_ByteHi& (0+255),b
 11726  000602  6BD4               	clrf	(_ByteHi+1)& (0+255),b
 11727                           
 11728                           ;Modbus.c: 278:             }
 11729  000604  EF0F  F004         	goto	l7762
 11730  000608                     l7736:
 11731                           
 11732                           ; BSR set to: 1
 11733  000608  0E02               	movlw	2
 11734  00060A  1902               	xorwf	(_ModbusData+2)& (0+255),w,b
 11735  00060C  A4D8               	btfss	status,2,c
 11736  00060E  EF0B  F003         	goto	u7771
 11737  000612  EF0D  F003         	goto	u7770
 11738  000616                     u7771:
 11739  000616  EF3E  F003         	goto	l7740
 11740  00061A                     u7770:
 11741  00061A                     
 11742                           ; BSR set to: 1
 11743                           ;Modbus.c: 285:                 ByteLo = MB302xx[ModbusData[3] +i] & 0x00FF;
 11744  00061A  5103               	movf	(_ModbusData+3)& (0+255),w,b
 11745  00061C  0100               	movlb	0	; () banked
 11746  00061E  2594               	addwf	ModbusFC03@i& (0+255),w,b
 11747  000620  6F8D               	movwf	??_ModbusFC03& (0+255),b
 11748  000622  0E00               	movlw	0
 11749  000624  2195               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
 11750  000626  6F8E               	movwf	(??_ModbusFC03+1)& (0+255),b
 11751  000628  90D8               	bcf	status,0,c
 11752  00062A  378D               	rlcf	??_ModbusFC03& (0+255),f,b
 11753  00062C  378E               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
 11754  00062E  0EFA               	movlw	low _MB302xx
 11755  000630  258D               	addwf	??_ModbusFC03& (0+255),w,b
 11756  000632  6ED9               	movwf	fsr2l,c
 11757  000634  0E00               	movlw	high _MB302xx
 11758  000636  218E               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
 11759  000638  6EDA               	movwf	fsr2h,c
 11760  00063A  CFDE F08F          	movff	postinc2,??_ModbusFC03+2
 11761  00063E  CFDD F090          	movff	postdec2,??_ModbusFC03+3
 11762  000642  518F               	movf	(??_ModbusFC03+2)& (0+255),w,b
 11763  000644  6FF4               	movwf	_ByteLo& (0+255),b
 11764  000646  6BF5               	clrf	(_ByteLo+1)& (0+255),b
 11765                           
 11766                           ;Modbus.c: 286:                 ByteHi = MB302xx[ModbusData[3] +i] >> 8;
 11767  000648  0101               	movlb	1	; () banked
 11768  00064A  5103               	movf	(_ModbusData+3)& (0+255),w,b
 11769  00064C  0100               	movlb	0	; () banked
 11770  00064E  2594               	addwf	ModbusFC03@i& (0+255),w,b
 11771  000650  6F8D               	movwf	??_ModbusFC03& (0+255),b
 11772  000652  0E00               	movlw	0
 11773  000654  2195               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
 11774  000656  6F8E               	movwf	(??_ModbusFC03+1)& (0+255),b
 11775  000658  90D8               	bcf	status,0,c
 11776  00065A  378D               	rlcf	??_ModbusFC03& (0+255),f,b
 11777  00065C  378E               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
 11778  00065E  0EFA               	movlw	low _MB302xx
 11779  000660  258D               	addwf	??_ModbusFC03& (0+255),w,b
 11780  000662  6ED9               	movwf	fsr2l,c
 11781  000664  0E00               	movlw	high _MB302xx
 11782  000666  218E               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
 11783  000668  6EDA               	movwf	fsr2h,c
 11784  00066A  CFDE F08F          	movff	postinc2,??_ModbusFC03+2
 11785  00066E  CFDD F090          	movff	postdec2,??_ModbusFC03+3
 11786  000672  5190               	movf	(??_ModbusFC03+3)& (0+255),w,b
 11787  000674  6FD3               	movwf	_ByteHi& (0+255),b
 11788  000676  6BD4               	clrf	(_ByteHi+1)& (0+255),b
 11789                           
 11790                           ;Modbus.c: 288:             }else if(ModbusData[2] == 0x04){
 11791  000678  EF0F  F004         	goto	l7762
 11792  00067C                     l7740:
 11793                           
 11794                           ; BSR set to: 1
 11795  00067C  0E04               	movlw	4
 11796  00067E  1902               	xorwf	(_ModbusData+2)& (0+255),w,b
 11797  000680  A4D8               	btfss	status,2,c
 11798  000682  EF45  F003         	goto	u7781
 11799  000686  EF47  F003         	goto	u7780
 11800  00068A                     u7781:
 11801  00068A  EF78  F003         	goto	l7744
 11802  00068E                     u7780:
 11803  00068E                     
 11804                           ; BSR set to: 1
 11805                           ;Modbus.c: 290:                 ByteLo = MB304xx[ModbusData[3] +i] & 0x00FF;
 11806  00068E  5103               	movf	(_ModbusData+3)& (0+255),w,b
 11807  000690  0100               	movlb	0	; () banked
 11808  000692  2594               	addwf	ModbusFC03@i& (0+255),w,b
 11809  000694  6F8D               	movwf	??_ModbusFC03& (0+255),b
 11810  000696  0E00               	movlw	0
 11811  000698  2195               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
 11812  00069A  6F8E               	movwf	(??_ModbusFC03+1)& (0+255),b
 11813  00069C  90D8               	bcf	status,0,c
 11814  00069E  378D               	rlcf	??_ModbusFC03& (0+255),f,b
 11815  0006A0  378E               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
 11816  0006A2  0E72               	movlw	low _MB304xx
 11817  0006A4  258D               	addwf	??_ModbusFC03& (0+255),w,b
 11818  0006A6  6ED9               	movwf	fsr2l,c
 11819  0006A8  0E01               	movlw	high _MB304xx
 11820  0006AA  218E               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
 11821  0006AC  6EDA               	movwf	fsr2h,c
 11822  0006AE  CFDE F08F          	movff	postinc2,??_ModbusFC03+2
 11823  0006B2  CFDD F090          	movff	postdec2,??_ModbusFC03+3
 11824  0006B6  518F               	movf	(??_ModbusFC03+2)& (0+255),w,b
 11825  0006B8  6FF4               	movwf	_ByteLo& (0+255),b
 11826  0006BA  6BF5               	clrf	(_ByteLo+1)& (0+255),b
 11827                           
 11828                           ;Modbus.c: 291:                 ByteHi = MB304xx[ModbusData[3] +i] >> 8;
 11829  0006BC  0101               	movlb	1	; () banked
 11830  0006BE  5103               	movf	(_ModbusData+3)& (0+255),w,b
 11831  0006C0  0100               	movlb	0	; () banked
 11832  0006C2  2594               	addwf	ModbusFC03@i& (0+255),w,b
 11833  0006C4  6F8D               	movwf	??_ModbusFC03& (0+255),b
 11834  0006C6  0E00               	movlw	0
 11835  0006C8  2195               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
 11836  0006CA  6F8E               	movwf	(??_ModbusFC03+1)& (0+255),b
 11837  0006CC  90D8               	bcf	status,0,c
 11838  0006CE  378D               	rlcf	??_ModbusFC03& (0+255),f,b
 11839  0006D0  378E               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
 11840  0006D2  0E72               	movlw	low _MB304xx
 11841  0006D4  258D               	addwf	??_ModbusFC03& (0+255),w,b
 11842  0006D6  6ED9               	movwf	fsr2l,c
 11843  0006D8  0E01               	movlw	high _MB304xx
 11844  0006DA  218E               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
 11845  0006DC  6EDA               	movwf	fsr2h,c
 11846  0006DE  CFDE F08F          	movff	postinc2,??_ModbusFC03+2
 11847  0006E2  CFDD F090          	movff	postdec2,??_ModbusFC03+3
 11848  0006E6  5190               	movf	(??_ModbusFC03+3)& (0+255),w,b
 11849  0006E8  6FD3               	movwf	_ByteHi& (0+255),b
 11850  0006EA  6BD4               	clrf	(_ByteHi+1)& (0+255),b
 11851                           
 11852                           ;Modbus.c: 293:             }else if(ModbusData[2] == 0x05){
 11853  0006EC  EF0F  F004         	goto	l7762
 11854  0006F0                     l7744:
 11855                           
 11856                           ; BSR set to: 1
 11857  0006F0  0E05               	movlw	5
 11858  0006F2  1902               	xorwf	(_ModbusData+2)& (0+255),w,b
 11859  0006F4  A4D8               	btfss	status,2,c
 11860  0006F6  EF7F  F003         	goto	u7791
 11861  0006FA  EF81  F003         	goto	u7790
 11862  0006FE                     u7791:
 11863  0006FE  EFB2  F003         	goto	l7748
 11864  000702                     u7790:
 11865  000702                     
 11866                           ; BSR set to: 1
 11867                           ;Modbus.c: 295:                 ByteLo = MB305xx[ModbusData[3] +i] & 0x00FF;
 11868  000702  5103               	movf	(_ModbusData+3)& (0+255),w,b
 11869  000704  0100               	movlb	0	; () banked
 11870  000706  2594               	addwf	ModbusFC03@i& (0+255),w,b
 11871  000708  6F8D               	movwf	??_ModbusFC03& (0+255),b
 11872  00070A  0E00               	movlw	0
 11873  00070C  2195               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
 11874  00070E  6F8E               	movwf	(??_ModbusFC03+1)& (0+255),b
 11875  000710  90D8               	bcf	status,0,c
 11876  000712  378D               	rlcf	??_ModbusFC03& (0+255),f,b
 11877  000714  378E               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
 11878  000716  0E3C               	movlw	low _MB305xx
 11879  000718  258D               	addwf	??_ModbusFC03& (0+255),w,b
 11880  00071A  6ED9               	movwf	fsr2l,c
 11881  00071C  0E02               	movlw	high _MB305xx
 11882  00071E  218E               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
 11883  000720  6EDA               	movwf	fsr2h,c
 11884  000722  CFDE F08F          	movff	postinc2,??_ModbusFC03+2
 11885  000726  CFDD F090          	movff	postdec2,??_ModbusFC03+3
 11886  00072A  518F               	movf	(??_ModbusFC03+2)& (0+255),w,b
 11887  00072C  6FF4               	movwf	_ByteLo& (0+255),b
 11888  00072E  6BF5               	clrf	(_ByteLo+1)& (0+255),b
 11889                           
 11890                           ;Modbus.c: 296:                 ByteHi = MB305xx[ModbusData[3] +i] >> 8;
 11891  000730  0101               	movlb	1	; () banked
 11892  000732  5103               	movf	(_ModbusData+3)& (0+255),w,b
 11893  000734  0100               	movlb	0	; () banked
 11894  000736  2594               	addwf	ModbusFC03@i& (0+255),w,b
 11895  000738  6F8D               	movwf	??_ModbusFC03& (0+255),b
 11896  00073A  0E00               	movlw	0
 11897  00073C  2195               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
 11898  00073E  6F8E               	movwf	(??_ModbusFC03+1)& (0+255),b
 11899  000740  90D8               	bcf	status,0,c
 11900  000742  378D               	rlcf	??_ModbusFC03& (0+255),f,b
 11901  000744  378E               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
 11902  000746  0E3C               	movlw	low _MB305xx
 11903  000748  258D               	addwf	??_ModbusFC03& (0+255),w,b
 11904  00074A  6ED9               	movwf	fsr2l,c
 11905  00074C  0E02               	movlw	high _MB305xx
 11906  00074E  218E               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
 11907  000750  6EDA               	movwf	fsr2h,c
 11908  000752  CFDE F08F          	movff	postinc2,??_ModbusFC03+2
 11909  000756  CFDD F090          	movff	postdec2,??_ModbusFC03+3
 11910  00075A  5190               	movf	(??_ModbusFC03+3)& (0+255),w,b
 11911  00075C  6FD3               	movwf	_ByteHi& (0+255),b
 11912  00075E  6BD4               	clrf	(_ByteHi+1)& (0+255),b
 11913                           
 11914                           ;Modbus.c: 298:             }
 11915  000760  EF0F  F004         	goto	l7762
 11916  000764                     l7748:
 11917                           
 11918                           ; BSR set to: 1
 11919  000764  5102               	movf	(_ModbusData+2)& (0+255),w,b
 11920  000766  A4D8               	btfss	status,2,c
 11921  000768  EFB8  F003         	goto	u7801
 11922  00076C  EFBA  F003         	goto	u7800
 11923  000770                     u7801:
 11924  000770  EFEB  F003         	goto	l7752
 11925  000774                     u7800:
 11926  000774                     
 11927                           ; BSR set to: 1
 11928                           ;Modbus.c: 301:                 ByteLo = MB300xx[ModbusData[3] +i] & 0x00FF;
 11929  000774  5103               	movf	(_ModbusData+3)& (0+255),w,b
 11930  000776  0100               	movlb	0	; () banked
 11931  000778  2594               	addwf	ModbusFC03@i& (0+255),w,b
 11932  00077A  6F8D               	movwf	??_ModbusFC03& (0+255),b
 11933  00077C  0E00               	movlw	0
 11934  00077E  2195               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
 11935  000780  6F8E               	movwf	(??_ModbusFC03+1)& (0+255),b
 11936  000782  90D8               	bcf	status,0,c
 11937  000784  378D               	rlcf	??_ModbusFC03& (0+255),f,b
 11938  000786  378E               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
 11939  000788  0EB7               	movlw	low _MB300xx
 11940  00078A  258D               	addwf	??_ModbusFC03& (0+255),w,b
 11941  00078C  6ED9               	movwf	fsr2l,c
 11942  00078E  0E03               	movlw	high _MB300xx
 11943  000790  218E               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
 11944  000792  6EDA               	movwf	fsr2h,c
 11945  000794  CFDE F08F          	movff	postinc2,??_ModbusFC03+2
 11946  000798  CFDD F090          	movff	postdec2,??_ModbusFC03+3
 11947  00079C  518F               	movf	(??_ModbusFC03+2)& (0+255),w,b
 11948  00079E  6FF4               	movwf	_ByteLo& (0+255),b
 11949  0007A0  6BF5               	clrf	(_ByteLo+1)& (0+255),b
 11950                           
 11951                           ;Modbus.c: 302:                 ByteHi = MB300xx[ModbusData[3] +i] >> 8;
 11952  0007A2  0101               	movlb	1	; () banked
 11953  0007A4  5103               	movf	(_ModbusData+3)& (0+255),w,b
 11954  0007A6  0100               	movlb	0	; () banked
 11955  0007A8  2594               	addwf	ModbusFC03@i& (0+255),w,b
 11956  0007AA  6F8D               	movwf	??_ModbusFC03& (0+255),b
 11957  0007AC  0E00               	movlw	0
 11958  0007AE  2195               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
 11959  0007B0  6F8E               	movwf	(??_ModbusFC03+1)& (0+255),b
 11960  0007B2  90D8               	bcf	status,0,c
 11961  0007B4  378D               	rlcf	??_ModbusFC03& (0+255),f,b
 11962  0007B6  378E               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
 11963  0007B8  0EB7               	movlw	low _MB300xx
 11964  0007BA  258D               	addwf	??_ModbusFC03& (0+255),w,b
 11965  0007BC  6ED9               	movwf	fsr2l,c
 11966  0007BE  0E03               	movlw	high _MB300xx
 11967  0007C0  218E               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
 11968  0007C2  6EDA               	movwf	fsr2h,c
 11969  0007C4  CFDE F08F          	movff	postinc2,??_ModbusFC03+2
 11970  0007C8  CFDD F090          	movff	postdec2,??_ModbusFC03+3
 11971  0007CC  5190               	movf	(??_ModbusFC03+3)& (0+255),w,b
 11972  0007CE  6FD3               	movwf	_ByteHi& (0+255),b
 11973  0007D0  6BD4               	clrf	(_ByteHi+1)& (0+255),b
 11974                           
 11975                           ;Modbus.c: 304:             }else if(ModbusData[2] == 0x06){
 11976  0007D2  EF0F  F004         	goto	l7762
 11977  0007D6                     l7752:
 11978                           
 11979                           ; BSR set to: 1
 11980  0007D6  0E06               	movlw	6
 11981  0007D8  1902               	xorwf	(_ModbusData+2)& (0+255),w,b
 11982  0007DA  A4D8               	btfss	status,2,c
 11983  0007DC  EFF2  F003         	goto	u7811
 11984  0007E0  EFF4  F003         	goto	u7810
 11985  0007E4                     u7811:
 11986  0007E4  EF0F  F004         	goto	l770
 11987  0007E8                     u7810:
 11988  0007E8                     
 11989                           ; BSR set to: 1
 11990                           ;Modbus.c: 306:                 uint16_t convertedValue;;Modbus.c: 307:                 
      +                          convertedValue = ADCC_GetSingleConversion(AIP_0);
 11991  0007E8  0E00               	movlw	0
 11992  0007EA  EC69  F022         	call	_ADCC_GetSingleConversion
 11993  0007EE  C005  F091         	movff	?_ADCC_GetSingleConversion,ModbusFC03@convertedValue
 11994  0007F2  C006  F092         	movff	?_ADCC_GetSingleConversion+1,ModbusFC03@convertedValue+1
 11995  0007F6                     
 11996                           ;Modbus.c: 308:                 printf("ADC: 0x%04x \r\n", convertedValue);
 11997  0007F6  0E9A               	movlw	low STR_46
 11998  0007F8  0100               	movlb	0	; () banked
 11999  0007FA  6F7D               	movwf	printf@fmt& (0+255),b
 12000  0007FC  0EFF               	movlw	high STR_46
 12001  0007FE  6F7E               	movwf	(printf@fmt+1)& (0+255),b
 12002  000800  C091  F07F         	movff	ModbusFC03@convertedValue,?_printf+2
 12003  000804  C092  F080         	movff	ModbusFC03@convertedValue+1,?_printf+3
 12004  000808  ECAC  F022         	call	_printf	;wreg free
 12005  00080C                     
 12006                           ;Modbus.c: 310:                 ByteLo = convertedValue & 0x00FF;
 12007  00080C  0100               	movlb	0	; () banked
 12008  00080E  5191               	movf	ModbusFC03@convertedValue& (0+255),w,b
 12009  000810  6FF4               	movwf	_ByteLo& (0+255),b
 12010  000812  6BF5               	clrf	(_ByteLo+1)& (0+255),b
 12011  000814                     
 12012                           ; BSR set to: 0
 12013                           ;Modbus.c: 311:                 ByteHi = convertedValue >> 8;
 12014  000814  5192               	movf	(ModbusFC03@convertedValue+1)& (0+255),w,b
 12015  000816  6FD3               	movwf	_ByteHi& (0+255),b
 12016  000818  6BD4               	clrf	(_ByteHi+1)& (0+255),b
 12017  00081A  EF0F  F004         	goto	l7762
 12018  00081E                     l770:
 12019  00081E                     l7762:
 12020                           
 12021                           ;Modbus.c: 314:             MBRespon[MBResCnt] = ByteHi;
 12022  00081E  0E57               	movlw	low _MBRespon
 12023  000820  0100               	movlb	0	; () banked
 12024  000822  25D5               	addwf	_MBResCnt& (0+255),w,b
 12025  000824  6ED9               	movwf	fsr2l,c
 12026  000826  0E02               	movlw	high _MBRespon
 12027  000828  21D6               	addwfc	(_MBResCnt+1)& (0+255),w,b
 12028  00082A  6EDA               	movwf	fsr2h,c
 12029  00082C  C0D3  FFDF         	movff	_ByteHi,indf2
 12030  000830                     
 12031                           ; BSR set to: 0
 12032                           ;Modbus.c: 315:             MBResCnt++;
 12033  000830  4BD5               	infsnz	_MBResCnt& (0+255),f,b
 12034  000832  2BD6               	incf	(_MBResCnt+1)& (0+255),f,b
 12035  000834                     
 12036                           ; BSR set to: 0
 12037                           ;Modbus.c: 316:             MBRespon[MBResCnt] = ByteLo;
 12038  000834  0E57               	movlw	low _MBRespon
 12039  000836  25D5               	addwf	_MBResCnt& (0+255),w,b
 12040  000838  6ED9               	movwf	fsr2l,c
 12041  00083A  0E02               	movlw	high _MBRespon
 12042  00083C  21D6               	addwfc	(_MBResCnt+1)& (0+255),w,b
 12043  00083E  6EDA               	movwf	fsr2h,c
 12044  000840  C0F4  FFDF         	movff	_ByteLo,indf2
 12045  000844                     
 12046                           ; BSR set to: 0
 12047                           ;Modbus.c: 317:             MBResCnt++;
 12048  000844  4BD5               	infsnz	_MBResCnt& (0+255),f,b
 12049  000846  2BD6               	incf	(_MBResCnt+1)& (0+255),f,b
 12050  000848                     
 12051                           ; BSR set to: 0
 12052                           ;Modbus.c: 319:         }
 12053  000848  4B94               	infsnz	ModbusFC03@i& (0+255),f,b
 12054  00084A  2B95               	incf	(ModbusFC03@i+1)& (0+255),f,b
 12055  00084C                     l7772:
 12056                           
 12057                           ; BSR set to: 0
 12058  00084C  0101               	movlb	1	; () banked
 12059  00084E  5105               	movf	(_ModbusData+5)& (0+255),w,b
 12060  000850  0100               	movlb	0	; () banked
 12061  000852  6F8D               	movwf	??_ModbusFC03& (0+255),b
 12062  000854  6B8E               	clrf	(??_ModbusFC03+1)& (0+255),b
 12063  000856  518D               	movf	??_ModbusFC03& (0+255),w,b
 12064  000858  5D94               	subwf	ModbusFC03@i& (0+255),w,b
 12065  00085A  5195               	movf	(ModbusFC03@i+1)& (0+255),w,b
 12066  00085C  0A80               	xorlw	128
 12067  00085E  6F8F               	movwf	(??_ModbusFC03+2)& (0+255),b
 12068  000860  518E               	movf	(??_ModbusFC03+1)& (0+255),w,b
 12069  000862  0A80               	xorlw	128
 12070  000864  598F               	subwfb	(??_ModbusFC03+2)& (0+255),w,b
 12071  000866  A0D8               	btfss	status,0,c
 12072  000868  EF38  F004         	goto	u7821
 12073  00086C  EF3A  F004         	goto	u7820
 12074  000870                     u7821:
 12075  000870  EF90  F002         	goto	l7728
 12076  000874                     u7820:
 12077  000874                     
 12078                           ; BSR set to: 0
 12079                           ;Modbus.c: 321:         ByteHi = generateCRC(MBResCnt, 1);
 12080  000874  C0D5  F005         	movff	_MBResCnt,generateCRC@MessCnt
 12081  000878  C0D6  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
 12082  00087C  0E01               	movlw	1
 12083  00087E  6E07               	movwf	generateCRC@HiOrLo^0,c
 12084  000880  EC0B  F019         	call	_generateCRC	;wreg free
 12085  000884  C005  F0D3         	movff	?_generateCRC,_ByteHi
 12086  000888  C006  F0D4         	movff	?_generateCRC+1,_ByteHi+1
 12087                           
 12088                           ;Modbus.c: 322:         ByteLo = generateCRC(MBResCnt, 0);
 12089  00088C  C0D5  F005         	movff	_MBResCnt,generateCRC@MessCnt
 12090  000890  C0D6  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
 12091  000894  0E00               	movlw	0
 12092  000896  6E07               	movwf	generateCRC@HiOrLo^0,c
 12093  000898  EC0B  F019         	call	_generateCRC	;wreg free
 12094  00089C  C005  F0F4         	movff	?_generateCRC,_ByteLo
 12095  0008A0  C006  F0F5         	movff	?_generateCRC+1,_ByteLo+1
 12096  0008A4                     
 12097                           ;Modbus.c: 324:         MBRespon[MBResCnt] = ByteHi;
 12098  0008A4  0E57               	movlw	low _MBRespon
 12099  0008A6  0100               	movlb	0	; () banked
 12100  0008A8  25D5               	addwf	_MBResCnt& (0+255),w,b
 12101  0008AA  6ED9               	movwf	fsr2l,c
 12102  0008AC  0E02               	movlw	high _MBRespon
 12103  0008AE  21D6               	addwfc	(_MBResCnt+1)& (0+255),w,b
 12104  0008B0  6EDA               	movwf	fsr2h,c
 12105  0008B2  C0D3  FFDF         	movff	_ByteHi,indf2
 12106  0008B6                     
 12107                           ; BSR set to: 0
 12108                           ;Modbus.c: 325:         MBRespon[MBResCnt +1] = ByteLo;
 12109  0008B6  0E58               	movlw	low (_MBRespon+1)
 12110  0008B8  25D5               	addwf	_MBResCnt& (0+255),w,b
 12111  0008BA  6ED9               	movwf	fsr2l,c
 12112  0008BC  0E02               	movlw	high (_MBRespon+1)
 12113  0008BE  21D6               	addwfc	(_MBResCnt+1)& (0+255),w,b
 12114  0008C0  6EDA               	movwf	fsr2h,c
 12115  0008C2  C0F4  FFDF         	movff	_ByteLo,indf2
 12116  0008C6                     
 12117                           ; BSR set to: 0
 12118                           ;Modbus.c: 326:         MBResCnt = MBResCnt +2;
 12119  0008C6  0E02               	movlw	2
 12120  0008C8  25D5               	addwf	_MBResCnt& (0+255),w,b
 12121  0008CA  6FD5               	movwf	_MBResCnt& (0+255),b
 12122  0008CC  0E00               	movlw	0
 12123  0008CE  21D6               	addwfc	(_MBResCnt+1)& (0+255),w,b
 12124  0008D0  6FD6               	movwf	(_MBResCnt+1)& (0+255),b
 12125  0008D2                     
 12126                           ; BSR set to: 0
 12127                           ;Modbus.c: 332:         UART1_Write_string(MBRespon,MBResCnt);
 12128  0008D2  0E57               	movlw	low _MBRespon
 12129  0008D4  6E06               	movwf	UART1_Write_string@data^0,c
 12130  0008D6  0E02               	movlw	high _MBRespon
 12131  0008D8  6E07               	movwf	(UART1_Write_string@data+1)^0,c
 12132  0008DA  C0D5  F008         	movff	_MBResCnt,UART1_Write_string@data_len
 12133  0008DE  C0D6  F009         	movff	_MBResCnt+1,UART1_Write_string@data_len+1
 12134  0008E2  EC2D  F01E         	call	_UART1_Write_string	;wreg free
 12135                           
 12136                           ;Modbus.c: 333:     }else{
 12137  0008E6  EF7B  F004         	goto	l778
 12138  0008EA                     l7784:
 12139                           
 12140                           ; BSR set to: 0
 12141                           ;Modbus.c: 334:         ModbusError(0x02);
 12142  0008EA  0E00               	movlw	0
 12143  0008EC  6E15               	movwf	(ModbusError@ErrorCode+1)^0,c
 12144  0008EE  0E02               	movlw	2
 12145  0008F0  6E14               	movwf	ModbusError@ErrorCode^0,c
 12146  0008F2  EC0D  F01B         	call	_ModbusError	;wreg free
 12147  0008F6                     l778:
 12148  0008F6  0012               	return		;funcret
 12149  0008F8                     __end_of_ModbusFC03:
 12150                           	opt callstack 0
 12151                           
 12152 ;; *************** function _printf *****************
 12153 ;; Defined at:
 12154 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
 12155 ;; Parameters:    Size  Location     Type
 12156 ;;  fmt             2   29[BANK0 ] PTR const unsigned char 
 12157 ;;		 -> STR_102(12), STR_100(13), STR_99(17), STR_98(15), 
 12158 ;;		 -> STR_97(33), STR_95(38), STR_94(58), STR_93(17), 
 12159 ;;		 -> STR_92(16), STR_91(4), STR_90(15), STR_89(19), 
 12160 ;;		 -> STR_88(32), STR_87(33), STR_86(37), STR_85(44), 
 12161 ;;		 -> STR_84(22), STR_83(75), STR_82(53), STR_81(69), 
 12162 ;;		 -> STR_80(54), STR_79(52), STR_78(40), STR_77(30), 
 12163 ;;		 -> STR_76(43), STR_75(73), STR_74(42), STR_73(36), 
 12164 ;;		 -> STR_72(34), STR_69(42), STR_68(22), STR_67(21), 
 12165 ;;		 -> STR_66(20), STR_65(19), STR_64(40), STR_54(32), 
 12166 ;;		 -> STR_53(37), STR_52(16), STR_51(24), STR_50(4), 
 12167 ;;		 -> STR_49(25), STR_48(28), STR_47(54), STR_46(15), 
 12168 ;;		 -> STR_45(29), STR_44(37), STR_43(26), STR_42(37), 
 12169 ;;		 -> STR_41(26), STR_40(37), STR_39(24), STR_38(37), 
 12170 ;;		 -> STR_37(22), STR_36(37), STR_35(22), STR_34(37), 
 12171 ;;		 -> STR_33(26), STR_32(54), STR_31(36), STR_30(3), 
 12172 ;;		 -> STR_29(32), STR_28(32), STR_27(35), STR_26(56), 
 12173 ;;		 -> STR_25(38), STR_24(37), STR_23(37), STR_22(38), 
 12174 ;;		 -> STR_21(38), STR_20(64), STR_19(36), STR_18(30), 
 12175 ;;		 -> STR_17(30), STR_16(37), STR_15(37), STR_14(38), 
 12176 ;;		 -> STR_13(38), STR_12(63), STR_11(36), STR_10(34), 
 12177 ;;		 -> STR_9(28), STR_8(54), STR_7(27), STR_6(16), 
 12178 ;;		 -> STR_4(19), STR_3(28), STR_2(31), STR_1(21), 
 12179 ;; Auto vars:     Size  Location     Type
 12180 ;;  ap              2   43[BANK0 ] PTR void [1]
 12181 ;;		 -> ?_printf(2), 
 12182 ;;  ret             2    0        int 
 12183 ;; Return value:  Size  Location     Type
 12184 ;;                  2   29[BANK0 ] int 
 12185 ;; Registers used:
 12186 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12187 ;; Tracked objects:
 12188 ;;		On entry : 0/0
 12189 ;;		On exit  : 0/0
 12190 ;;		Unchanged: 0/0
 12191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12192 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12193 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12195 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12196 ;;Total ram usage:       16 bytes
 12197 ;; Hardware stack levels used:    1
 12198 ;; Hardware stack levels required when called:   12
 12199 ;; This function calls:
 12200 ;;		_vfprintf
 12201 ;; This function is called by:
 12202 ;;		_main
 12203 ;;		_PrintMB400
 12204 ;;		_AddRxBuffToModBus
 12205 ;;		_PrintModbus
 12206 ;;		_checkCRC
 12207 ;;		_ModbusFC03
 12208 ;;		_ModbusFC10
 12209 ;;		_PrintModRespon
 12210 ;;		_ModbusRx
 12211 ;;		_InitialiseString
 12212 ;;		_ReadRX232
 12213 ;;		_TogDebug
 12214 ;;		_ClearEEAddRange
 12215 ;;		_SaveCardDat
 12216 ;; This function uses a non-reentrant model
 12217 ;;
 12218                           
 12219                           	psect	text49
 12220  004558                     __ptext49:
 12221                           	opt callstack 0
 12222  004558                     _printf:
 12223                           	opt callstack 18
 12224  004558  0E7F               	movlw	low (?_printf+2)
 12225  00455A  0100               	movlb	0	; () banked
 12226  00455C  6F8B               	movwf	printf@ap& (0+255),b
 12227  00455E  0E00               	movlw	high (?_printf+2)
 12228  004560  6F8C               	movwf	(printf@ap+1)& (0+255),b
 12229  004562                     
 12230                           ; BSR set to: 0
 12231  004562  0E00               	movlw	0
 12232  004564  6F77               	movwf	vfprintf@fp& (0+255),b
 12233  004566  0E00               	movlw	0
 12234  004568  6F78               	movwf	(vfprintf@fp+1)& (0+255),b
 12235  00456A  C07D  F079         	movff	printf@fmt,vfprintf@fmt
 12236  00456E  C07E  F07A         	movff	printf@fmt+1,vfprintf@fmt+1
 12237  004572  0E8B               	movlw	low printf@ap
 12238  004574  6F7B               	movwf	vfprintf@ap& (0+255),b
 12239  004576  0E00               	movlw	high printf@ap
 12240  004578  6F7C               	movwf	(vfprintf@ap+1)& (0+255),b
 12241  00457A  EC98  F01E         	call	_vfprintf	;wreg free
 12242  00457E  0012               	return		;funcret
 12243  004580                     __end_of_printf:
 12244                           	opt callstack 0
 12245                           
 12246 ;; *************** function _vfprintf *****************
 12247 ;; Defined at:
 12248 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 12249 ;; Parameters:    Size  Location     Type
 12250 ;;  fp              2   23[BANK0 ] PTR struct _IO_FILE
 12251 ;;		 -> NULL(0), 
 12252 ;;  fmt             2   25[BANK0 ] PTR const unsigned char 
 12253 ;;		 -> STR_102(12), STR_100(13), STR_99(17), STR_98(15), 
 12254 ;;		 -> STR_97(33), STR_95(38), STR_94(58), STR_93(17), 
 12255 ;;		 -> STR_92(16), STR_91(4), STR_90(15), STR_89(19), 
 12256 ;;		 -> STR_88(32), STR_87(33), STR_86(37), STR_85(44), 
 12257 ;;		 -> STR_84(22), STR_83(75), STR_82(53), STR_81(69), 
 12258 ;;		 -> STR_80(54), STR_79(52), STR_78(40), STR_77(30), 
 12259 ;;		 -> STR_76(43), STR_75(73), STR_74(42), STR_73(36), 
 12260 ;;		 -> STR_72(34), STR_69(42), STR_68(22), STR_67(21), 
 12261 ;;		 -> STR_66(20), STR_65(19), STR_64(40), STR_54(32), 
 12262 ;;		 -> STR_53(37), STR_52(16), STR_51(24), STR_50(4), 
 12263 ;;		 -> STR_49(25), STR_48(28), STR_47(54), STR_46(15), 
 12264 ;;		 -> STR_45(29), STR_44(37), STR_43(26), STR_42(37), 
 12265 ;;		 -> STR_41(26), STR_40(37), STR_39(24), STR_38(37), 
 12266 ;;		 -> STR_37(22), STR_36(37), STR_35(22), STR_34(37), 
 12267 ;;		 -> STR_33(26), STR_32(54), STR_31(36), STR_30(3), 
 12268 ;;		 -> STR_29(32), STR_28(32), STR_27(35), STR_26(56), 
 12269 ;;		 -> STR_25(38), STR_24(37), STR_23(37), STR_22(38), 
 12270 ;;		 -> STR_21(38), STR_20(64), STR_19(36), STR_18(30), 
 12271 ;;		 -> STR_17(30), STR_16(37), STR_15(37), STR_14(38), 
 12272 ;;		 -> STR_13(38), STR_12(63), STR_11(36), STR_10(34), 
 12273 ;;		 -> STR_9(28), STR_8(54), STR_7(27), STR_6(16), 
 12274 ;;		 -> STR_4(19), STR_3(28), STR_2(31), STR_1(21), 
 12275 ;;  ap              2   27[BANK0 ] PTR PTR void 
 12276 ;;		 -> printf@ap(2), 
 12277 ;; Auto vars:     Size  Location     Type
 12278 ;;  cfmt            2   82[COMRAM] PTR unsigned char 
 12279 ;;		 -> STR_102(12), STR_100(13), STR_99(17), STR_98(15), 
 12280 ;;		 -> STR_97(33), STR_95(38), STR_94(58), STR_93(17), 
 12281 ;;		 -> STR_92(16), STR_91(4), STR_90(15), STR_89(19), 
 12282 ;;		 -> STR_88(32), STR_87(33), STR_86(37), STR_85(44), 
 12283 ;;		 -> STR_84(22), STR_83(75), STR_82(53), STR_81(69), 
 12284 ;;		 -> STR_80(54), STR_79(52), STR_78(40), STR_77(30), 
 12285 ;;		 -> STR_76(43), STR_75(73), STR_74(42), STR_73(36), 
 12286 ;;		 -> STR_72(34), STR_69(42), STR_68(22), STR_67(21), 
 12287 ;;		 -> STR_66(20), STR_65(19), STR_64(40), STR_54(32), 
 12288 ;;		 -> STR_53(37), STR_52(16), STR_51(24), STR_50(4), 
 12289 ;;		 -> STR_49(25), STR_48(28), STR_47(54), STR_46(15), 
 12290 ;;		 -> STR_45(29), STR_44(37), STR_43(26), STR_42(37), 
 12291 ;;		 -> STR_41(26), STR_40(37), STR_39(24), STR_38(37), 
 12292 ;;		 -> STR_37(22), STR_36(37), STR_35(22), STR_34(37), 
 12293 ;;		 -> STR_33(26), STR_32(54), STR_31(36), STR_30(3), 
 12294 ;;		 -> STR_29(32), STR_28(32), STR_27(35), STR_26(56), 
 12295 ;;		 -> STR_25(38), STR_24(37), STR_23(37), STR_22(38), 
 12296 ;;		 -> STR_21(38), STR_20(64), STR_19(36), STR_18(30), 
 12297 ;;		 -> STR_17(30), STR_16(37), STR_15(37), STR_14(38), 
 12298 ;;		 -> STR_13(38), STR_12(63), STR_11(36), STR_10(34), 
 12299 ;;		 -> STR_9(28), STR_8(54), STR_7(27), STR_6(16), 
 12300 ;;		 -> STR_4(19), STR_3(28), STR_2(31), STR_1(21), 
 12301 ;; Return value:  Size  Location     Type
 12302 ;;                  2   23[BANK0 ] int 
 12303 ;; Registers used:
 12304 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12305 ;; Tracked objects:
 12306 ;;		On entry : 0/0
 12307 ;;		On exit  : 0/0
 12308 ;;		Unchanged: 0/0
 12309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12310 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12311 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12313 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12314 ;;Total ram usage:        8 bytes
 12315 ;; Hardware stack levels used:    1
 12316 ;; Hardware stack levels required when called:   11
 12317 ;; This function calls:
 12318 ;;		_vfpfcnvrt
 12319 ;; This function is called by:
 12320 ;;		_printf
 12321 ;; This function uses a non-reentrant model
 12322 ;;
 12323                           
 12324                           	psect	text50
 12325  003D30                     __ptext50:
 12326                           	opt callstack 0
 12327  003D30                     _vfprintf:
 12328                           	opt callstack 18
 12329  003D30                     
 12330                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
 12331  003D30  C079  F053         	movff	vfprintf@fmt,vfprintf@cfmt
 12332  003D34  C07A  F054         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 12333  003D38                     
 12334                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
 12335  003D38  0E00               	movlw	0
 12336  003D3A  0100               	movlb	0	; () banked
 12337  003D3C  6FCC               	movwf	(_nout+1)& (0+255),b
 12338  003D3E  0E00               	movlw	0
 12339  003D40  6FCB               	movwf	_nout& (0+255),b
 12340                           
 12341                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 12342  003D42  EFB6  F01E         	goto	l6920
 12343  003D46                     l6918:
 12344                           
 12345                           ; BSR set to: 0
 12346                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
 12347  003D46  C077  F049         	movff	vfprintf@fp,vfpfcnvrt@fp
 12348  003D4A  C078  F04A         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 12349  003D4E  0E53               	movlw	low vfprintf@cfmt
 12350  003D50  6E4B               	movwf	vfpfcnvrt@fmt^0,c
 12351  003D52  0E00               	movlw	high vfprintf@cfmt
 12352  003D54  6E4C               	movwf	(vfpfcnvrt@fmt+1)^0,c
 12353  003D56  C07B  F04D         	movff	vfprintf@ap,vfpfcnvrt@ap
 12354  003D5A  C07C  F04E         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
 12355  003D5E  EC7C  F004         	call	_vfpfcnvrt	;wreg free
 12356  003D62  5049               	movf	?_vfpfcnvrt^0,w,c
 12357  003D64  0100               	movlb	0	; () banked
 12358  003D66  27CB               	addwf	_nout& (0+255),f,b
 12359  003D68  504A               	movf	(?_vfpfcnvrt+1)^0,w,c
 12360  003D6A  23CC               	addwfc	(_nout+1)& (0+255),f,b
 12361  003D6C                     l6920:
 12362                           
 12363                           ; BSR set to: 0
 12364                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 12365  003D6C  C053  FFF6         	movff	vfprintf@cfmt,tblptrl
 12366  003D70  C054  FFF7         	movff	vfprintf@cfmt+1,tblptrh
 12367  003D74                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12368  003D74  6AF8               	clrf	tblptru,c
 12369  003D76                     	endif
 12370  003D76                     	if	0	;tblptru may be non-zero
 12371  003D76                     	endif
 12372  003D76  0008               	tblrd		*
 12373  003D78  50F5               	movf	tablat,w,c
 12374  003D7A  0900               	iorlw	0
 12375  003D7C  A4D8               	btfss	status,2,c
 12376  003D7E  EFC3  F01E         	goto	u6801
 12377  003D82  EFC5  F01E         	goto	u6800
 12378  003D86                     u6801:
 12379  003D86  EFA3  F01E         	goto	l6918
 12380  003D8A                     u6800:
 12381  003D8A                     
 12382                           ; BSR set to: 0
 12383                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
 12384  003D8A  C0CB  F077         	movff	_nout,?_vfprintf
 12385  003D8E  C0CC  F078         	movff	_nout+1,?_vfprintf+1
 12386  003D92                     
 12387                           ; BSR set to: 0
 12388  003D92  0012               	return		;funcret
 12389  003D94                     __end_of_vfprintf:
 12390                           	opt callstack 0
 12391                           
 12392 ;; *************** function _vfpfcnvrt *****************
 12393 ;; Defined at:
 12394 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 12395 ;; Parameters:    Size  Location     Type
 12396 ;;  fp              2   72[COMRAM] PTR struct _IO_FILE
 12397 ;;		 -> NULL(0), 
 12398 ;;  fmt             2   74[COMRAM] PTR PTR unsigned char 
 12399 ;;		 -> vfprintf@cfmt(2), 
 12400 ;;  ap              2   76[COMRAM] PTR PTR void 
 12401 ;;		 -> printf@ap(2), 
 12402 ;; Auto vars:     Size  Location     Type
 12403 ;;  llu             8   15[BANK0 ] unsigned long long 
 12404 ;;  ll              8    0[BANK0 ] long long 
 12405 ;;  f               4    0        long long 
 12406 ;;  vp              3    0        PTR void 
 12407 ;;  ct              3    0        unsigned char [3]
 12408 ;;  done            2   11[BANK0 ] int 
 12409 ;;  cp              2    8[BANK0 ] PTR unsigned char 
 12410 ;;		 -> ?_printf(2), ValidateCmd@ConfName_1542(20), ValidateCmd@ConfName_1538(20), ValidateCmd@ConfName(20), 
 12411 ;;		 -> STR_71(9), STR_70(12), InitialiseString@RevNum(2), InitialiseString@PartNum(19), 
 12412 ;;		 -> InitialiseString@SerialNum(11), Command(16), 
 12413 ;;  i               2    0        int 
 12414 ;;  c               1   10[BANK0 ] unsigned char 
 12415 ;; Return value:  Size  Location     Type
 12416 ;;                  2   72[COMRAM] int 
 12417 ;; Registers used:
 12418 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12419 ;; Tracked objects:
 12420 ;;		On entry : 0/0
 12421 ;;		On exit  : 0/0
 12422 ;;		Unchanged: 0/0
 12423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12424 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12425 ;;      Locals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12426 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12427 ;;      Totals:        10      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12428 ;;Total ram usage:       33 bytes
 12429 ;; Hardware stack levels used:    1
 12430 ;; Hardware stack levels required when called:   10
 12431 ;; This function calls:
 12432 ;;		_atoi
 12433 ;;		_dtoa
 12434 ;;		_fputc
 12435 ;;		_isdigit
 12436 ;;		_stoa
 12437 ;;		_utoa
 12438 ;;		_xtoa
 12439 ;; This function is called by:
 12440 ;;		_vfprintf
 12441 ;; This function uses a non-reentrant model
 12442 ;;
 12443                           
 12444                           	psect	text51
 12445  0008F8                     __ptext51:
 12446                           	opt callstack 0
 12447  0008F8                     _vfpfcnvrt:
 12448                           	opt callstack 18
 12449  0008F8                     
 12450                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
 12451  0008F8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12452  0008FC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12453  000900  CFDE FFF6          	movff	postinc2,tblptrl
 12454  000904  CFDD FFF7          	movff	postdec2,tblptrh
 12455  000908                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12456  000908  6AF8               	clrf	tblptru,c
 12457  00090A                     	endif
 12458  00090A                     	if	0	;tblptru may be non-zero
 12459  00090A                     	endif
 12460  00090A  0008               	tblrd		*
 12461  00090C  50F5               	movf	tablat,w,c
 12462  00090E  0A25               	xorlw	37
 12463  000910  A4D8               	btfss	status,2,c
 12464  000912  EF8D  F004         	goto	u6631
 12465  000916  EF8F  F004         	goto	u6630
 12466  00091A                     u6631:
 12467  00091A  EF24  F007         	goto	l6892
 12468  00091E                     u6630:
 12469  00091E                     
 12470                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
 12471  00091E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12472  000922  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12473  000926  2ADE               	incf	postinc2,f,c
 12474  000928  0E00               	movlw	0
 12475  00092A  22DD               	addwfc	postdec2,f,c
 12476  00092C                     
 12477                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
 12478  00092C  0E00               	movlw	0
 12479  00092E  0100               	movlb	0	; () banked
 12480  000930  6FCE               	movwf	(_width+1)& (0+255),b
 12481  000932  0E00               	movlw	0
 12482  000934  6FCD               	movwf	_width& (0+255),b
 12483  000936  C0CD  F057         	movff	_width,_flags
 12484  00093A  C0CE  F058         	movff	_width+1,_flags+1
 12485  00093E                     
 12486                           ; BSR set to: 0
 12487                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
 12488  00093E  69CF               	setf	_prec& (0+255),b
 12489  000940  69D0               	setf	(_prec+1)& (0+255),b
 12490  000942                     
 12491                           ; BSR set to: 0
 12492                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
 12493  000942  0E00               	movlw	0
 12494  000944  6F6C               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 12495  000946  0E00               	movlw	0
 12496  000948  6F6B               	movwf	vfpfcnvrt@done& (0+255),b
 12497                           
 12498                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
 12499  00094A  EFEE  F004         	goto	l6814
 12500  00094E                     l6788:
 12501                           
 12502                           ; BSR set to: 0
 12503                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
 12504  00094E  8057               	bsf	_flags^0,0,c
 12505  000950                     l6790:
 12506                           
 12507                           ; BSR set to: 0
 12508                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
 12509  000950  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12510  000954  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12511  000958  2ADE               	incf	postinc2,f,c
 12512  00095A  0E00               	movlw	0
 12513  00095C  22DD               	addwfc	postdec2,f,c
 12514                           
 12515                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
 12516  00095E  EFEE  F004         	goto	l6814
 12517  000962                     l6792:
 12518                           
 12519                           ; BSR set to: 0
 12520                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
 12521  000962  8257               	bsf	_flags^0,1,c
 12522  000964  EFA8  F004         	goto	l6790
 12523  000968                     l6796:
 12524                           
 12525                           ; BSR set to: 0
 12526                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
 12527  000968  8457               	bsf	_flags^0,2,c
 12528  00096A  EFA8  F004         	goto	l6790
 12529  00096E                     l6800:
 12530                           
 12531                           ; BSR set to: 0
 12532                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
 12533  00096E  8657               	bsf	_flags^0,3,c
 12534  000970  EFA8  F004         	goto	l6790
 12535  000974                     l6804:
 12536                           
 12537                           ; BSR set to: 0
 12538                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
 12539  000974  8857               	bsf	_flags^0,4,c
 12540  000976  EFA8  F004         	goto	l6790
 12541  00097A                     l6808:
 12542                           
 12543                           ; BSR set to: 0
 12544                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
 12545  00097A  0E00               	movlw	0
 12546  00097C  6F6C               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 12547  00097E  0E01               	movlw	1
 12548  000980  6F6B               	movwf	vfpfcnvrt@done& (0+255),b
 12549                           
 12550                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
 12551  000982  EFEE  F004         	goto	l6814
 12552  000986                     l6812:
 12553                           
 12554                           ; BSR set to: 0
 12555  000986  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12556  00098A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12557  00098E  CFDE FFF6          	movff	postinc2,tblptrl
 12558  000992  CFDD FFF7          	movff	postdec2,tblptrh
 12559  000996                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12560  000996  6AF8               	clrf	tblptru,c
 12561  000998                     	endif
 12562  000998                     	if	0	;tblptru may be non-zero
 12563  000998                     	endif
 12564  000998  0008               	tblrd		*
 12565  00099A  50F5               	movf	tablat,w,c
 12566  00099C  6E4F               	movwf	??_vfpfcnvrt^0,c
 12567  00099E  6A50               	clrf	(??_vfpfcnvrt+1)^0,c
 12568                           
 12569                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12570                           ; Switch size 1, requested type "simple"
 12571                           ; Number of cases is 1, Range of values is 0 to 0
 12572                           ; switch strategies available:
 12573                           ; Name         Instructions Cycles
 12574                           ; simple_byte            4     3 (average)
 12575                           ;	Chosen strategy is simple_byte
 12576  0009A0  5050               	movf	(??_vfpfcnvrt+1)^0,w,c
 12577  0009A2  0A00               	xorlw	0	; case 0
 12578  0009A4  B4D8               	btfsc	status,2,c
 12579  0009A6  EFD7  F004         	goto	l8190
 12580  0009AA  EFBD  F004         	goto	l6808
 12581  0009AE                     l8190:
 12582                           
 12583                           ; BSR set to: 0
 12584                           ; Switch size 1, requested type "simple"
 12585                           ; Number of cases is 5, Range of values is 32 to 48
 12586                           ; switch strategies available:
 12587                           ; Name         Instructions Cycles
 12588                           ; simple_byte           16     9 (average)
 12589                           ;	Chosen strategy is simple_byte
 12590  0009AE  504F               	movf	??_vfpfcnvrt^0,w,c
 12591  0009B0  0A20               	xorlw	32	; case 32
 12592  0009B2  B4D8               	btfsc	status,2,c
 12593  0009B4  EFB7  F004         	goto	l6800
 12594  0009B8  0A03               	xorlw	3	; case 35
 12595  0009BA  B4D8               	btfsc	status,2,c
 12596  0009BC  EFBA  F004         	goto	l6804
 12597  0009C0  0A08               	xorlw	8	; case 43
 12598  0009C2  B4D8               	btfsc	status,2,c
 12599  0009C4  EFB4  F004         	goto	l6796
 12600  0009C8  0A06               	xorlw	6	; case 45
 12601  0009CA  B4D8               	btfsc	status,2,c
 12602  0009CC  EFA7  F004         	goto	l6788
 12603  0009D0  0A1D               	xorlw	29	; case 48
 12604  0009D2  B4D8               	btfsc	status,2,c
 12605  0009D4  EFB1  F004         	goto	l6792
 12606  0009D8  EFBD  F004         	goto	l6808
 12607  0009DC                     l6814:
 12608                           
 12609                           ; BSR set to: 0
 12610                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
 12611  0009DC  516B               	movf	vfpfcnvrt@done& (0+255),w,b
 12612  0009DE  116C               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
 12613  0009E0  B4D8               	btfsc	status,2,c
 12614  0009E2  EFF5  F004         	goto	u6641
 12615  0009E6  EFF7  F004         	goto	u6640
 12616  0009EA                     u6641:
 12617  0009EA  EFC3  F004         	goto	l6812
 12618  0009EE                     u6640:
 12619  0009EE                     
 12620                           ; BSR set to: 0
 12621                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
 12622  0009EE  A057               	btfss	_flags^0,0,c
 12623  0009F0  EFFC  F004         	goto	u6651
 12624  0009F4  EFFE  F004         	goto	u6650
 12625  0009F8                     u6651:
 12626  0009F8  EFFF  F004         	goto	l6818
 12627  0009FC                     u6650:
 12628  0009FC                     
 12629                           ; BSR set to: 0
 12630                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
 12631  0009FC  9257               	bcf	_flags^0,1,c
 12632  0009FE                     l6818:
 12633                           
 12634                           ; BSR set to: 0
 12635                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
 12636  0009FE  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12637  000A02  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12638  000A06  CFDE FFF6          	movff	postinc2,tblptrl
 12639  000A0A  CFDD FFF7          	movff	postdec2,tblptrh
 12640  000A0E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12641  000A0E  6AF8               	clrf	tblptru,c
 12642  000A10                     	endif
 12643  000A10                     	if	0	;tblptru may be non-zero
 12644  000A10                     	endif
 12645  000A10  0008               	tblrd		*
 12646  000A12  50F5               	movf	tablat,w,c
 12647  000A14  0A2A               	xorlw	42
 12648  000A16  A4D8               	btfss	status,2,c
 12649  000A18  EF10  F005         	goto	u6661
 12650  000A1C  EF12  F005         	goto	u6660
 12651  000A20                     u6661:
 12652  000A20  EF3B  F005         	goto	l6826
 12653  000A24                     u6660:
 12654  000A24                     
 12655                           ; BSR set to: 0
 12656                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
 12657  000A24  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12658  000A28  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12659  000A2C  2ADE               	incf	postinc2,f,c
 12660  000A2E  0E00               	movlw	0
 12661  000A30  22DD               	addwfc	postdec2,f,c
 12662                           
 12663                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
 12664  000A32  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 12665  000A36  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 12666  000A3A  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 12667  000A3E  0E02               	movlw	2
 12668  000A40  26DE               	addwf	postinc2,f,c
 12669  000A42  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 12670  000A46  0E00               	movlw	0
 12671  000A48  22DD               	addwfc	postdec2,f,c
 12672  000A4A  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 12673  000A4E  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 12674  000A52  CFDE F0CD          	movff	postinc2,_width
 12675  000A56  CFDD F0CE          	movff	postdec2,_width+1
 12676  000A5A                     
 12677                           ; BSR set to: 0
 12678                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
 12679  000A5A  BFCE               	btfsc	(_width+1)& (0+255),7,b
 12680  000A5C  EF34  F005         	goto	u6670
 12681  000A60  EF32  F005         	goto	u6671
 12682  000A64                     u6671:
 12683  000A64  EF80  F005         	goto	l6836
 12684  000A68                     u6670:
 12685  000A68                     
 12686                           ; BSR set to: 0
 12687                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
 12688  000A68  8057               	bsf	_flags^0,0,c
 12689                           
 12690                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
 12691  000A6A  6DCD               	negf	_width& (0+255),b
 12692  000A6C  1FCE               	comf	(_width+1)& (0+255),f,b
 12693  000A6E  B0D8               	btfsc	status,0,c
 12694  000A70  2BCE               	incf	(_width+1)& (0+255),f,b
 12695  000A72  EF80  F005         	goto	l6836
 12696  000A76                     l6826:
 12697                           
 12698                           ; BSR set to: 0
 12699                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
 12700  000A76  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12701  000A7A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12702  000A7E  CFDE F00C          	movff	postinc2,atoi@s
 12703  000A82  CFDD F00D          	movff	postdec2,atoi@s+1
 12704  000A86  ECD9  F012         	call	_atoi	;wreg free
 12705  000A8A  C00C  F0CD         	movff	?_atoi,_width
 12706  000A8E  C00D  F0CE         	movff	?_atoi+1,_width+1
 12707                           
 12708                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 12709  000A92  EF52  F005         	goto	l6830
 12710  000A96                     l6828:
 12711                           
 12712                           ; BSR set to: 0
 12713                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
 12714  000A96  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12715  000A9A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12716  000A9E  2ADE               	incf	postinc2,f,c
 12717  000AA0  0E00               	movlw	0
 12718  000AA2  22DD               	addwfc	postdec2,f,c
 12719  000AA4                     l6830:
 12720  000AA4  0ED0               	movlw	208
 12721  000AA6  6E4F               	movwf	??_vfpfcnvrt^0,c
 12722  000AA8  0EFF               	movlw	255
 12723  000AAA  6E50               	movwf	(??_vfpfcnvrt+1)^0,c
 12724  000AAC  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12725  000AB0  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12726  000AB4  CFDE FFF6          	movff	postinc2,tblptrl
 12727  000AB8  CFDD FFF7          	movff	postdec2,tblptrh
 12728  000ABC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12729  000ABC  6AF8               	clrf	tblptru,c
 12730  000ABE                     	endif
 12731  000ABE                     	if	0	;tblptru may be non-zero
 12732  000ABE                     	endif
 12733  000ABE  0008               	tblrd		*
 12734  000AC0  50F5               	movf	tablat,w,c
 12735  000AC2  6E51               	movwf	(??_vfpfcnvrt+2)^0,c
 12736  000AC4  6A52               	clrf	(??_vfpfcnvrt+3)^0,c
 12737  000AC6  504F               	movf	??_vfpfcnvrt^0,w,c
 12738  000AC8  2651               	addwf	(??_vfpfcnvrt+2)^0,f,c
 12739  000ACA  5050               	movf	(??_vfpfcnvrt+1)^0,w,c
 12740  000ACC  2252               	addwfc	(??_vfpfcnvrt+3)^0,f,c
 12741  000ACE  5052               	movf	(??_vfpfcnvrt+3)^0,w,c
 12742  000AD0  E10A               	bnz	u6680
 12743  000AD2  0E0A               	movlw	10
 12744  000AD4  5C51               	subwf	(??_vfpfcnvrt+2)^0,w,c
 12745  000AD6  A0D8               	btfss	status,0,c
 12746  000AD8  EF70  F005         	goto	u6681
 12747  000ADC  EF73  F005         	goto	u6680
 12748  000AE0                     u6681:
 12749  000AE0  0E01               	movlw	1
 12750  000AE2  EF74  F005         	goto	u6690
 12751  000AE6                     u6680:
 12752  000AE6  0E00               	movlw	0
 12753  000AE8                     u6690:
 12754  000AE8  0100               	movlb	0	; () banked
 12755  000AEA  6F6D               	movwf	_vfpfcnvrt$1912& (0+255),b
 12756  000AEC  6B6E               	clrf	(_vfpfcnvrt$1912+1)& (0+255),b
 12757  000AEE                     
 12758                           ; BSR set to: 0
 12759  000AEE  516D               	movf	_vfpfcnvrt$1912& (0+255),w,b
 12760  000AF0  116E               	iorwf	(_vfpfcnvrt$1912+1)& (0+255),w,b
 12761  000AF2  A4D8               	btfss	status,2,c
 12762  000AF4  EF7E  F005         	goto	u6701
 12763  000AF8  EF80  F005         	goto	u6700
 12764  000AFC                     u6701:
 12765  000AFC  EF4B  F005         	goto	l6828
 12766  000B00                     u6700:
 12767  000B00                     l6836:
 12768                           
 12769                           ; BSR set to: 0
 12770                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 12771  000B00  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12772  000B04  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12773  000B08  CFDE FFF6          	movff	postinc2,tblptrl
 12774  000B0C  CFDD FFF7          	movff	postdec2,tblptrh
 12775  000B10                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12776  000B10  6AF8               	clrf	tblptru,c
 12777  000B12                     	endif
 12778  000B12                     	if	0	;tblptru may be non-zero
 12779  000B12                     	endif
 12780  000B12  0008               	tblrd		*
 12781  000B14  50F5               	movf	tablat,w,c
 12782  000B16  0A64               	xorlw	100
 12783  000B18  B4D8               	btfsc	status,2,c
 12784  000B1A  EF91  F005         	goto	u6711
 12785  000B1E  EF93  F005         	goto	u6710
 12786  000B22                     u6711:
 12787  000B22  EFA6  F005         	goto	l6840
 12788  000B26                     u6710:
 12789  000B26                     
 12790                           ; BSR set to: 0
 12791  000B26  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12792  000B2A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12793  000B2E  CFDE FFF6          	movff	postinc2,tblptrl
 12794  000B32  CFDD FFF7          	movff	postdec2,tblptrh
 12795  000B36                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12796  000B36  6AF8               	clrf	tblptru,c
 12797  000B38                     	endif
 12798  000B38                     	if	0	;tblptru may be non-zero
 12799  000B38                     	endif
 12800  000B38  0008               	tblrd		*
 12801  000B3A  50F5               	movf	tablat,w,c
 12802  000B3C  0A69               	xorlw	105
 12803  000B3E  A4D8               	btfss	status,2,c
 12804  000B40  EFA4  F005         	goto	u6721
 12805  000B44  EFA6  F005         	goto	u6720
 12806  000B48                     u6721:
 12807  000B48  EFE6  F005         	goto	l6846
 12808  000B4C                     u6720:
 12809  000B4C                     l6840:
 12810                           
 12811                           ; BSR set to: 0
 12812                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
 12813  000B4C  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12814  000B50  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12815  000B54  2ADE               	incf	postinc2,f,c
 12816  000B56  0E00               	movlw	0
 12817  000B58  22DD               	addwfc	postdec2,f,c
 12818                           
 12819                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 12820  000B5A  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 12821  000B5E  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 12822  000B62  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 12823  000B66  0E02               	movlw	2
 12824  000B68  26DE               	addwf	postinc2,f,c
 12825  000B6A  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 12826  000B6E  0E00               	movlw	0
 12827  000B70  22DD               	addwfc	postdec2,f,c
 12828  000B72  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 12829  000B76  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 12830  000B7A  CFDE F060          	movff	postinc2,vfpfcnvrt@ll
 12831  000B7E  CFDD F061          	movff	postdec2,vfpfcnvrt@ll+1
 12832  000B82  0E00               	movlw	0
 12833  000B84  BF61               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
 12834  000B86  0EFF               	movlw	-1
 12835  000B88  6F62               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
 12836  000B8A  6F63               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
 12837  000B8C  6F64               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
 12838  000B8E  6F65               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
 12839  000B90  6F66               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
 12840  000B92  6F67               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
 12841  000B94                     
 12842                           ; BSR set to: 0
 12843                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
 12844  000B94  C049  F022         	movff	vfpfcnvrt@fp,dtoa@fp
 12845  000B98  C04A  F023         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 12846  000B9C  C060  F024         	movff	vfpfcnvrt@ll,dtoa@d
 12847  000BA0  C061  F025         	movff	vfpfcnvrt@ll+1,dtoa@d+1
 12848  000BA4  C062  F026         	movff	vfpfcnvrt@ll+2,dtoa@d+2
 12849  000BA8  C063  F027         	movff	vfpfcnvrt@ll+3,dtoa@d+3
 12850  000BAC  C064  F028         	movff	vfpfcnvrt@ll+4,dtoa@d+4
 12851  000BB0  C065  F029         	movff	vfpfcnvrt@ll+5,dtoa@d+5
 12852  000BB4  C066  F02A         	movff	vfpfcnvrt@ll+6,dtoa@d+6
 12853  000BB8  C067  F02B         	movff	vfpfcnvrt@ll+7,dtoa@d+7
 12854  000BBC  EC0D  F009         	call	_dtoa	;wreg free
 12855  000BC0  C022  F049         	movff	?_dtoa,?_vfpfcnvrt
 12856  000BC4  C023  F04A         	movff	?_dtoa+1,?_vfpfcnvrt+1
 12857  000BC8  EF40  F007         	goto	l1311
 12858  000BCC                     l6846:
 12859                           
 12860                           ; BSR set to: 0
 12861                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
 12862  000BCC  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12863  000BD0  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12864  000BD4  CFDE FFF6          	movff	postinc2,tblptrl
 12865  000BD8  CFDD FFF7          	movff	postdec2,tblptrh
 12866  000BDC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12867  000BDC  6AF8               	clrf	tblptru,c
 12868  000BDE                     	endif
 12869  000BDE                     	if	0	;tblptru may be non-zero
 12870  000BDE                     	endif
 12871  000BDE  0008               	tblrd		*
 12872  000BE0  50F5               	movf	tablat,w,c
 12873  000BE2  0A73               	xorlw	115
 12874  000BE4  A4D8               	btfss	status,2,c
 12875  000BE6  EFF7  F005         	goto	u6731
 12876  000BEA  EFF9  F005         	goto	u6730
 12877  000BEE                     u6731:
 12878  000BEE  EF24  F006         	goto	l6854
 12879  000BF2                     u6730:
 12880  000BF2                     
 12881                           ; BSR set to: 0
 12882                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
 12883  000BF2  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12884  000BF6  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12885  000BFA  2ADE               	incf	postinc2,f,c
 12886  000BFC  0E00               	movlw	0
 12887  000BFE  22DD               	addwfc	postdec2,f,c
 12888                           
 12889                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 12890  000C00  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 12891  000C04  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 12892  000C08  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 12893  000C0C  0E02               	movlw	2
 12894  000C0E  26DE               	addwf	postinc2,f,c
 12895  000C10  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 12896  000C14  0E00               	movlw	0
 12897  000C16  22DD               	addwfc	postdec2,f,c
 12898  000C18  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 12899  000C1C  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 12900  000C20  CFDE F068          	movff	postinc2,vfpfcnvrt@cp
 12901  000C24  CFDD F069          	movff	postdec2,vfpfcnvrt@cp+1
 12902  000C28                     
 12903                           ; BSR set to: 0
 12904                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
 12905  000C28  C049  F010         	movff	vfpfcnvrt@fp,stoa@fp
 12906  000C2C  C04A  F011         	movff	vfpfcnvrt@fp+1,stoa@fp+1
 12907  000C30  C068  F012         	movff	vfpfcnvrt@cp,stoa@s
 12908  000C34  C069  F013         	movff	vfpfcnvrt@cp+1,stoa@s+1
 12909  000C38  EC0C  F012         	call	_stoa	;wreg free
 12910  000C3C  C010  F049         	movff	?_stoa,?_vfpfcnvrt
 12911  000C40  C011  F04A         	movff	?_stoa+1,?_vfpfcnvrt+1
 12912  000C44  EF40  F007         	goto	l1311
 12913  000C48                     l6854:
 12914                           
 12915                           ; BSR set to: 0
 12916                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
 12917  000C48  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12918  000C4C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12919  000C50  CFDE FFF6          	movff	postinc2,tblptrl
 12920  000C54  CFDD FFF7          	movff	postdec2,tblptrh
 12921  000C58                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12922  000C58  6AF8               	clrf	tblptru,c
 12923  000C5A                     	endif
 12924  000C5A                     	if	0	;tblptru may be non-zero
 12925  000C5A                     	endif
 12926  000C5A  0008               	tblrd		*
 12927  000C5C  50F5               	movf	tablat,w,c
 12928  000C5E  0A75               	xorlw	117
 12929  000C60  A4D8               	btfss	status,2,c
 12930  000C62  EF35  F006         	goto	u6741
 12931  000C66  EF37  F006         	goto	u6740
 12932  000C6A                     u6741:
 12933  000C6A  EF78  F006         	goto	l6862
 12934  000C6E                     u6740:
 12935  000C6E                     
 12936                           ; BSR set to: 0
 12937                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
 12938  000C6E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12939  000C72  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12940  000C76  2ADE               	incf	postinc2,f,c
 12941  000C78  0E00               	movlw	0
 12942  000C7A  22DD               	addwfc	postdec2,f,c
 12943                           
 12944                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 12945  000C7C  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 12946  000C80  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 12947  000C84  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 12948  000C88  0E02               	movlw	2
 12949  000C8A  26DE               	addwf	postinc2,f,c
 12950  000C8C  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 12951  000C90  0E00               	movlw	0
 12952  000C92  22DD               	addwfc	postdec2,f,c
 12953  000C94  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 12954  000C98  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 12955  000C9C  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
 12956  000CA0  CFDD F052          	movff	postdec2,??_vfpfcnvrt+3
 12957  000CA4  C051  F06F         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
 12958  000CA8  C052  F070         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
 12959  000CAC  6B71               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 12960  000CAE  6B72               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 12961  000CB0  6B73               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 12962  000CB2  6B74               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 12963  000CB4  6B75               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 12964  000CB6  6B76               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 12965  000CB8                     
 12966                           ; BSR set to: 0
 12967                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
 12968  000CB8  C049  F022         	movff	vfpfcnvrt@fp,utoa@fp
 12969  000CBC  C04A  F023         	movff	vfpfcnvrt@fp+1,utoa@fp+1
 12970  000CC0  C06F  F024         	movff	vfpfcnvrt@llu,utoa@d
 12971  000CC4  C070  F025         	movff	vfpfcnvrt@llu+1,utoa@d+1
 12972  000CC8  C071  F026         	movff	vfpfcnvrt@llu+2,utoa@d+2
 12973  000CCC  C072  F027         	movff	vfpfcnvrt@llu+3,utoa@d+3
 12974  000CD0  C073  F028         	movff	vfpfcnvrt@llu+4,utoa@d+4
 12975  000CD4  C074  F029         	movff	vfpfcnvrt@llu+5,utoa@d+5
 12976  000CD8  C075  F02A         	movff	vfpfcnvrt@llu+6,utoa@d+6
 12977  000CDC  C076  F02B         	movff	vfpfcnvrt@llu+7,utoa@d+7
 12978  000CE0  EC5D  F00E         	call	_utoa	;wreg free
 12979  000CE4  C022  F049         	movff	?_utoa,?_vfpfcnvrt
 12980  000CE8  C023  F04A         	movff	?_utoa+1,?_vfpfcnvrt+1
 12981  000CEC  EF40  F007         	goto	l1311
 12982  000CF0                     l6862:
 12983                           
 12984                           ; BSR set to: 0
 12985                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 12986  000CF0  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12987  000CF4  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12988  000CF8  CFDE FFF6          	movff	postinc2,tblptrl
 12989  000CFC  CFDD FFF7          	movff	postdec2,tblptrh
 12990  000D00                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12991  000D00  6AF8               	clrf	tblptru,c
 12992  000D02                     	endif
 12993  000D02                     	if	0	;tblptru may be non-zero
 12994  000D02                     	endif
 12995  000D02  0008               	tblrd		*
 12996  000D04  50F5               	movf	tablat,w,c
 12997  000D06  0A78               	xorlw	120
 12998  000D08  B4D8               	btfsc	status,2,c
 12999  000D0A  EF89  F006         	goto	u6751
 13000  000D0E  EF8B  F006         	goto	u6750
 13001  000D12                     u6751:
 13002  000D12  EF9E  F006         	goto	l6866
 13003  000D16                     u6750:
 13004  000D16                     
 13005                           ; BSR set to: 0
 13006  000D16  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13007  000D1A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13008  000D1E  CFDE FFF6          	movff	postinc2,tblptrl
 13009  000D22  CFDD FFF7          	movff	postdec2,tblptrh
 13010  000D26                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13011  000D26  6AF8               	clrf	tblptru,c
 13012  000D28                     	endif
 13013  000D28                     	if	0	;tblptru may be non-zero
 13014  000D28                     	endif
 13015  000D28  0008               	tblrd		*
 13016  000D2A  50F5               	movf	tablat,w,c
 13017  000D2C  0A58               	xorlw	88
 13018  000D2E  A4D8               	btfss	status,2,c
 13019  000D30  EF9C  F006         	goto	u6761
 13020  000D34  EF9E  F006         	goto	u6760
 13021  000D38                     u6761:
 13022  000D38  EFED  F006         	goto	l6876
 13023  000D3C                     u6760:
 13024  000D3C                     l6866:
 13025                           
 13026                           ; BSR set to: 0
 13027                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
 13028  000D3C  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13029  000D40  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13030  000D44  CFDE FFF6          	movff	postinc2,tblptrl
 13031  000D48  CFDD FFF7          	movff	postdec2,tblptrh
 13032  000D4C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13033  000D4C  6AF8               	clrf	tblptru,c
 13034  000D4E                     	endif
 13035  000D4E                     	if	0	;tblptru may be non-zero
 13036  000D4E                     	endif
 13037  000D4E  0008               	tblrd		*
 13038  000D50  CFF5 F06A          	movff	tablat,vfpfcnvrt@c
 13039  000D54                     
 13040                           ; BSR set to: 0
 13041                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
 13042  000D54  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13043  000D58  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13044  000D5C  2ADE               	incf	postinc2,f,c
 13045  000D5E  0E00               	movlw	0
 13046  000D60  22DD               	addwfc	postdec2,f,c
 13047  000D62                     
 13048                           ; BSR set to: 0
 13049                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 13050  000D62  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 13051  000D66  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 13052  000D6A  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 13053  000D6E  0E02               	movlw	2
 13054  000D70  26DE               	addwf	postinc2,f,c
 13055  000D72  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 13056  000D76  0E00               	movlw	0
 13057  000D78  22DD               	addwfc	postdec2,f,c
 13058  000D7A  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 13059  000D7E  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 13060  000D82  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
 13061  000D86  CFDD F052          	movff	postdec2,??_vfpfcnvrt+3
 13062  000D8A  C051  F06F         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
 13063  000D8E  C052  F070         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
 13064  000D92  6B71               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 13065  000D94  6B72               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 13066  000D96  6B73               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 13067  000D98  6B74               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 13068  000D9A  6B75               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 13069  000D9C  6B76               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 13070  000D9E                     
 13071                           ; BSR set to: 0
 13072                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
 13073  000D9E  C049  F022         	movff	vfpfcnvrt@fp,xtoa@fp
 13074  000DA2  C04A  F023         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
 13075  000DA6  C06F  F024         	movff	vfpfcnvrt@llu,xtoa@d
 13076  000DAA  C070  F025         	movff	vfpfcnvrt@llu+1,xtoa@d+1
 13077  000DAE  C071  F026         	movff	vfpfcnvrt@llu+2,xtoa@d+2
 13078  000DB2  C072  F027         	movff	vfpfcnvrt@llu+3,xtoa@d+3
 13079  000DB6  C073  F028         	movff	vfpfcnvrt@llu+4,xtoa@d+4
 13080  000DBA  C074  F029         	movff	vfpfcnvrt@llu+5,xtoa@d+5
 13081  000DBE  C075  F02A         	movff	vfpfcnvrt@llu+6,xtoa@d+6
 13082  000DC2  C076  F02B         	movff	vfpfcnvrt@llu+7,xtoa@d+7
 13083  000DC6  C06A  F02C         	movff	vfpfcnvrt@c,xtoa@x
 13084  000DCA  EC7D  F00A         	call	_xtoa	;wreg free
 13085  000DCE  C022  F049         	movff	?_xtoa,?_vfpfcnvrt
 13086  000DD2  C023  F04A         	movff	?_xtoa+1,?_vfpfcnvrt+1
 13087  000DD6  EF40  F007         	goto	l1311
 13088  000DDA                     l6876:
 13089                           
 13090                           ; BSR set to: 0
 13091                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 13092  000DDA  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13093  000DDE  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13094  000DE2  CFDE FFF6          	movff	postinc2,tblptrl
 13095  000DE6  CFDD FFF7          	movff	postdec2,tblptrh
 13096  000DEA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13097  000DEA  6AF8               	clrf	tblptru,c
 13098  000DEC                     	endif
 13099  000DEC                     	if	0	;tblptru may be non-zero
 13100  000DEC                     	endif
 13101  000DEC  0008               	tblrd		*
 13102  000DEE  50F5               	movf	tablat,w,c
 13103  000DF0  0A25               	xorlw	37
 13104  000DF2  A4D8               	btfss	status,2,c
 13105  000DF4  EFFE  F006         	goto	u6771
 13106  000DF8  EF00  F007         	goto	u6770
 13107  000DFC                     u6771:
 13108  000DFC  EF17  F007         	goto	l6886
 13109  000E00                     u6770:
 13110  000E00                     
 13111                           ; BSR set to: 0
 13112                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 13113  000E00  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13114  000E04  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13115  000E08  2ADE               	incf	postinc2,f,c
 13116  000E0A  0E00               	movlw	0
 13117  000E0C  22DD               	addwfc	postdec2,f,c
 13118  000E0E                     
 13119                           ; BSR set to: 0
 13120                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 13121  000E0E  0E00               	movlw	0
 13122  000E10  6E08               	movwf	(fputc@c+1)^0,c
 13123  000E12  0E25               	movlw	37
 13124  000E14  6E07               	movwf	fputc@c^0,c
 13125  000E16  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
 13126  000E1A  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 13127  000E1E  ECD2  F01C         	call	_fputc	;wreg free
 13128  000E22                     l6882:
 13129                           
 13130                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 13131  000E22  0E00               	movlw	0
 13132  000E24  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
 13133  000E26  0E01               	movlw	1
 13134  000E28  6E49               	movwf	?_vfpfcnvrt^0,c
 13135  000E2A  EF40  F007         	goto	l1311
 13136  000E2E                     l6886:
 13137                           
 13138                           ; BSR set to: 0
 13139                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 13140  000E2E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13141  000E32  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13142  000E36  2ADE               	incf	postinc2,f,c
 13143  000E38  0E00               	movlw	0
 13144  000E3A  22DD               	addwfc	postdec2,f,c
 13145  000E3C                     
 13146                           ; BSR set to: 0
 13147                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
 13148  000E3C  0E00               	movlw	0
 13149  000E3E  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
 13150  000E40  0E00               	movlw	0
 13151  000E42  6E49               	movwf	?_vfpfcnvrt^0,c
 13152  000E44  EF40  F007         	goto	l1311
 13153  000E48                     l6892:
 13154                           
 13155                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 13156  000E48  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13157  000E4C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13158  000E50  CFDE FFF6          	movff	postinc2,tblptrl
 13159  000E54  CFDD FFF7          	movff	postdec2,tblptrh
 13160  000E58                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13161  000E58  6AF8               	clrf	tblptru,c
 13162  000E5A                     	endif
 13163  000E5A                     	if	0	;tblptru may be non-zero
 13164  000E5A                     	endif
 13165  000E5A  0008               	tblrd		*
 13166  000E5C  50F5               	movf	tablat,w,c
 13167  000E5E  6E07               	movwf	fputc@c^0,c
 13168  000E60  6A08               	clrf	(fputc@c+1)^0,c
 13169  000E62  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
 13170  000E66  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 13171  000E6A  ECD2  F01C         	call	_fputc	;wreg free
 13172  000E6E                     
 13173                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 13174  000E6E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13175  000E72  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13176  000E76  2ADE               	incf	postinc2,f,c
 13177  000E78  0E00               	movlw	0
 13178  000E7A  22DD               	addwfc	postdec2,f,c
 13179  000E7C  EF11  F007         	goto	l6882
 13180  000E80                     l1311:
 13181  000E80  0012               	return		;funcret
 13182  000E82                     __end_of_vfpfcnvrt:
 13183                           	opt callstack 0
 13184                           
 13185 ;; *************** function _xtoa *****************
 13186 ;; Defined at:
 13187 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 13188 ;; Parameters:    Size  Location     Type
 13189 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
 13190 ;;		 -> NULL(0), 
 13191 ;;  d               8   35[COMRAM] unsigned long long 
 13192 ;;  x               1   43[COMRAM] unsigned char 
 13193 ;; Auto vars:     Size  Location     Type
 13194 ;;  n               8   60[COMRAM] unsigned long long 
 13195 ;;  c               2   70[COMRAM] int 
 13196 ;;  i               2   68[COMRAM] int 
 13197 ;;  w               2   58[COMRAM] int 
 13198 ;;  p               2   56[COMRAM] int 
 13199 ;; Return value:  Size  Location     Type
 13200 ;;                  2   33[COMRAM] int 
 13201 ;; Registers used:
 13202 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13203 ;; Tracked objects:
 13204 ;;		On entry : 0/0
 13205 ;;		On exit  : 0/0
 13206 ;;		Unchanged: 0/0
 13207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13208 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13209 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13210 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13211 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13212 ;;Total ram usage:       39 bytes
 13213 ;; Hardware stack levels used:    1
 13214 ;; Hardware stack levels required when called:    9
 13215 ;; This function calls:
 13216 ;;		_isalpha
 13217 ;;		_isupper
 13218 ;;		_pad
 13219 ;;		_toupper
 13220 ;; This function is called by:
 13221 ;;		_vfpfcnvrt
 13222 ;; This function uses a non-reentrant model
 13223 ;;
 13224                           
 13225                           	psect	text52
 13226  0014FA                     __ptext52:
 13227                           	opt callstack 0
 13228  0014FA                     _xtoa:
 13229                           	opt callstack 18
 13230  0014FA                     
 13231                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
 13232  0014FA  0100               	movlb	0	; () banked
 13233  0014FC  BFD0               	btfsc	(_prec+1)& (0+255),7,b
 13234  0014FE  EF83  F00A         	goto	u6391
 13235  001502  EF85  F00A         	goto	u6390
 13236  001506                     u6391:
 13237  001506  EF86  F00A         	goto	l6674
 13238  00150A                     u6390:
 13239  00150A                     
 13240                           ; BSR set to: 0
 13241                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
 13242  00150A  9257               	bcf	_flags^0,1,c
 13243  00150C                     l6674:
 13244                           
 13245                           ; BSR set to: 0
 13246                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
 13247  00150C  BFD0               	btfsc	(_prec+1)& (0+255),7,b
 13248  00150E  EF93  F00A         	goto	u6400
 13249  001512  51D0               	movf	(_prec+1)& (0+255),w,b
 13250  001514  E106               	bnz	u6401
 13251  001516  05CF               	decf	_prec& (0+255),w,b
 13252  001518  B0D8               	btfsc	status,0,c
 13253  00151A  EF91  F00A         	goto	u6401
 13254  00151E  EF93  F00A         	goto	u6400
 13255  001522                     u6401:
 13256  001522  EF99  F00A         	goto	l1257
 13257  001526                     u6400:
 13258  001526                     
 13259                           ; BSR set to: 0
 13260  001526  0E00               	movlw	0
 13261  001528  6E3A               	movwf	(xtoa@p+1)^0,c
 13262  00152A  0E01               	movlw	1
 13263  00152C  6E39               	movwf	xtoa@p^0,c
 13264  00152E  EF9D  F00A         	goto	l1259
 13265  001532                     l1257:
 13266                           
 13267                           ; BSR set to: 0
 13268  001532  C0CF  F039         	movff	_prec,xtoa@p
 13269  001536  C0D0  F03A         	movff	_prec+1,xtoa@p+1
 13270  00153A                     l1259:
 13271                           
 13272                           ; BSR set to: 0
 13273                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
 13274  00153A  C0CD  F03B         	movff	_width,xtoa@w
 13275  00153E  C0CE  F03C         	movff	_width+1,xtoa@w+1
 13276                           
 13277                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
 13278  001542  A857               	btfss	_flags^0,4,c
 13279  001544  EFA6  F00A         	goto	u6411
 13280  001548  EFA8  F00A         	goto	u6410
 13281  00154C                     u6411:
 13282  00154C  EFAC  F00A         	goto	l6680
 13283  001550                     u6410:
 13284  001550                     
 13285                           ; BSR set to: 0
 13286                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
 13287  001550  0EFE               	movlw	254
 13288  001552  263B               	addwf	xtoa@w^0,f,c
 13289  001554  0EFF               	movlw	255
 13290  001556  223C               	addwfc	(xtoa@w+1)^0,f,c
 13291  001558                     l6680:
 13292                           
 13293                           ; BSR set to: 0
 13294                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
 13295  001558  C024  F03D         	movff	xtoa@d,xtoa@n
 13296  00155C  C025  F03E         	movff	xtoa@d+1,xtoa@n+1
 13297  001560  C026  F03F         	movff	xtoa@d+2,xtoa@n+2
 13298  001564  C027  F040         	movff	xtoa@d+3,xtoa@n+3
 13299  001568  C028  F041         	movff	xtoa@d+4,xtoa@n+4
 13300  00156C  C029  F042         	movff	xtoa@d+5,xtoa@n+5
 13301  001570  C02A  F043         	movff	xtoa@d+6,xtoa@n+6
 13302  001574  C02B  F044         	movff	xtoa@d+7,xtoa@n+7
 13303  001578                     
 13304                           ; BSR set to: 0
 13305                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
 13306  001578  0E00               	movlw	0
 13307  00157A  6E46               	movwf	(xtoa@i+1)^0,c
 13308  00157C  0E1F               	movlw	31
 13309  00157E  6E45               	movwf	xtoa@i^0,c
 13310  001580                     
 13311                           ; BSR set to: 0
 13312                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
 13313  001580  0E00               	movlw	0
 13314  001582  0102               	movlb	2	; () banked
 13315  001584  6FFC               	movwf	(_dbuf+31)& (0+255),b
 13316                           
 13317                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13318  001586  EF78  F00B         	goto	l6716
 13319  00158A                     l6686:
 13320                           
 13321                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
 13322  00158A  0645               	decf	xtoa@i^0,f,c
 13323  00158C  A0D8               	btfss	status,0,c
 13324  00158E  0646               	decf	(xtoa@i+1)^0,f,c
 13325  001590                     
 13326                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
 13327  001590  0E0F               	movlw	15
 13328  001592  143D               	andwf	xtoa@n^0,w,c
 13329  001594  6E47               	movwf	xtoa@c^0,c
 13330  001596  6A48               	clrf	(xtoa@c+1)^0,c
 13331  001598                     
 13332                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
 13333  001598  BE48               	btfsc	(xtoa@c+1)^0,7,c
 13334  00159A  EFD8  F00A         	goto	u6421
 13335  00159E  5048               	movf	(xtoa@c+1)^0,w,c
 13336  0015A0  E109               	bnz	u6420
 13337  0015A2  0E0A               	movlw	10
 13338  0015A4  5C47               	subwf	xtoa@c^0,w,c
 13339  0015A6  A0D8               	btfss	status,0,c
 13340  0015A8  EFD8  F00A         	goto	u6421
 13341  0015AC  EFDA  F00A         	goto	u6420
 13342  0015B0                     u6421:
 13343  0015B0  EFE2  F00A         	goto	l6694
 13344  0015B4                     u6420:
 13345  0015B4  0E57               	movlw	87
 13346  0015B6  2447               	addwf	xtoa@c^0,w,c
 13347  0015B8  6E47               	movwf	xtoa@c^0,c
 13348  0015BA  0E00               	movlw	0
 13349  0015BC  2048               	addwfc	(xtoa@c+1)^0,w,c
 13350  0015BE  6E48               	movwf	(xtoa@c+1)^0,c
 13351  0015C0  EFE8  F00A         	goto	l1266
 13352  0015C4                     l6694:
 13353  0015C4  0E30               	movlw	48
 13354  0015C6  2447               	addwf	xtoa@c^0,w,c
 13355  0015C8  6E47               	movwf	xtoa@c^0,c
 13356  0015CA  0E00               	movlw	0
 13357  0015CC  2048               	addwfc	(xtoa@c+1)^0,w,c
 13358  0015CE  6E48               	movwf	(xtoa@c+1)^0,c
 13359  0015D0                     l1266:
 13360  0015D0  0EBF               	movlw	191
 13361  0015D2  6E2D               	movwf	??_xtoa^0,c
 13362  0015D4  0EFF               	movlw	255
 13363  0015D6  6E2E               	movwf	(??_xtoa+1)^0,c
 13364  0015D8  502C               	movf	xtoa@x^0,w,c
 13365  0015DA  6E2F               	movwf	(??_xtoa+2)^0,c
 13366  0015DC  6A30               	clrf	(??_xtoa+3)^0,c
 13367  0015DE  502D               	movf	??_xtoa^0,w,c
 13368  0015E0  262F               	addwf	(??_xtoa+2)^0,f,c
 13369  0015E2  502E               	movf	(??_xtoa+1)^0,w,c
 13370  0015E4  2230               	addwfc	(??_xtoa+3)^0,f,c
 13371  0015E6  5030               	movf	(??_xtoa+3)^0,w,c
 13372  0015E8  E10A               	bnz	u6430
 13373  0015EA  0E1A               	movlw	26
 13374  0015EC  5C2F               	subwf	(??_xtoa+2)^0,w,c
 13375  0015EE  A0D8               	btfss	status,0,c
 13376  0015F0  EFFC  F00A         	goto	u6431
 13377  0015F4  EFFF  F00A         	goto	u6430
 13378  0015F8                     u6431:
 13379  0015F8  0E01               	movlw	1
 13380  0015FA  EF00  F00B         	goto	u6440
 13381  0015FE                     u6430:
 13382  0015FE  0E00               	movlw	0
 13383  001600                     u6440:
 13384  001600  6E35               	movwf	_xtoa$1897^0,c
 13385  001602  6A36               	clrf	(_xtoa$1897+1)^0,c
 13386  001604  5035               	movf	_xtoa$1897^0,w,c
 13387  001606  1036               	iorwf	(_xtoa$1897+1)^0,w,c
 13388  001608  B4D8               	btfsc	status,2,c
 13389  00160A  EF09  F00B         	goto	u6451
 13390  00160E  EF0B  F00B         	goto	u6450
 13391  001612                     u6451:
 13392  001612  EF3B  F00B         	goto	l6708
 13393  001616                     u6450:
 13394  001616  0E9F               	movlw	159
 13395  001618  6E2D               	movwf	??_xtoa^0,c
 13396  00161A  0EFF               	movlw	255
 13397  00161C  6E2E               	movwf	(??_xtoa+1)^0,c
 13398  00161E  0E20               	movlw	32
 13399  001620  1047               	iorwf	xtoa@c^0,w,c
 13400  001622  6E2F               	movwf	(??_xtoa+2)^0,c
 13401  001624  0E00               	movlw	0
 13402  001626  1048               	iorwf	(xtoa@c+1)^0,w,c
 13403  001628  6E30               	movwf	(??_xtoa+3)^0,c
 13404  00162A  502D               	movf	??_xtoa^0,w,c
 13405  00162C  262F               	addwf	(??_xtoa+2)^0,f,c
 13406  00162E  502E               	movf	(??_xtoa+1)^0,w,c
 13407  001630  2230               	addwfc	(??_xtoa+3)^0,f,c
 13408  001632  5030               	movf	(??_xtoa+3)^0,w,c
 13409  001634  E10A               	bnz	u6460
 13410  001636  0E1A               	movlw	26
 13411  001638  5C2F               	subwf	(??_xtoa+2)^0,w,c
 13412  00163A  A0D8               	btfss	status,0,c
 13413  00163C  EF22  F00B         	goto	u6461
 13414  001640  EF25  F00B         	goto	u6460
 13415  001644                     u6461:
 13416  001644  0E01               	movlw	1
 13417  001646  EF26  F00B         	goto	u6470
 13418  00164A                     u6460:
 13419  00164A  0E00               	movlw	0
 13420  00164C                     u6470:
 13421  00164C  6E37               	movwf	_xtoa$1898^0,c
 13422  00164E  6A38               	clrf	(_xtoa$1898+1)^0,c
 13423  001650  5037               	movf	_xtoa$1898^0,w,c
 13424  001652  1038               	iorwf	(_xtoa$1898+1)^0,w,c
 13425  001654  B4D8               	btfsc	status,2,c
 13426  001656  EF2F  F00B         	goto	u6481
 13427  00165A  EF31  F00B         	goto	u6480
 13428  00165E                     u6481:
 13429  00165E  EF3B  F00B         	goto	l6708
 13430  001662                     u6480:
 13431  001662                     
 13432                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
 13433  001662  C047  F00B         	movff	xtoa@c,toupper@c
 13434  001666  C048  F00C         	movff	xtoa@c+1,toupper@c+1
 13435  00166A  ECF9  F01E         	call	_toupper	;wreg free
 13436  00166E  C00B  F047         	movff	?_toupper,xtoa@c
 13437  001672  C00C  F048         	movff	?_toupper+1,xtoa@c+1
 13438  001676                     l6708:
 13439                           
 13440                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
 13441  001676  0EDD               	movlw	low _dbuf
 13442  001678  2445               	addwf	xtoa@i^0,w,c
 13443  00167A  6ED9               	movwf	fsr2l,c
 13444  00167C  0E02               	movlw	high _dbuf
 13445  00167E  2046               	addwfc	(xtoa@i+1)^0,w,c
 13446  001680  6EDA               	movwf	fsr2h,c
 13447  001682  C047  FFDF         	movff	xtoa@c,indf2
 13448  001686                     
 13449                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
 13450  001686  0639               	decf	xtoa@p^0,f,c
 13451  001688  A0D8               	btfss	status,0,c
 13452  00168A  063A               	decf	(xtoa@p+1)^0,f,c
 13453  00168C                     
 13454                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
 13455  00168C  063B               	decf	xtoa@w^0,f,c
 13456  00168E  A0D8               	btfss	status,0,c
 13457  001690  063C               	decf	(xtoa@w+1)^0,f,c
 13458  001692                     
 13459                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
 13460  001692  C03D  F02D         	movff	xtoa@n,??_xtoa
 13461  001696  C03E  F02E         	movff	xtoa@n+1,??_xtoa+1
 13462  00169A  C03F  F02F         	movff	xtoa@n+2,??_xtoa+2
 13463  00169E  C040  F030         	movff	xtoa@n+3,??_xtoa+3
 13464  0016A2  C041  F031         	movff	xtoa@n+4,??_xtoa+4
 13465  0016A6  C042  F032         	movff	xtoa@n+5,??_xtoa+5
 13466  0016AA  C043  F033         	movff	xtoa@n+6,??_xtoa+6
 13467  0016AE  C044  F034         	movff	xtoa@n+7,??_xtoa+7
 13468  0016B2  0E05               	movlw	5
 13469  0016B4  EF65  F00B         	goto	u6490
 13470  0016B8                     u6495:
 13471  0016B8  90D8               	bcf	status,0,c
 13472  0016BA  3234               	rrcf	(??_xtoa+7)^0,f,c
 13473  0016BC  3233               	rrcf	(??_xtoa+6)^0,f,c
 13474  0016BE  3232               	rrcf	(??_xtoa+5)^0,f,c
 13475  0016C0  3231               	rrcf	(??_xtoa+4)^0,f,c
 13476  0016C2  3230               	rrcf	(??_xtoa+3)^0,f,c
 13477  0016C4  322F               	rrcf	(??_xtoa+2)^0,f,c
 13478  0016C6  322E               	rrcf	(??_xtoa+1)^0,f,c
 13479  0016C8  322D               	rrcf	??_xtoa^0,f,c
 13480  0016CA                     u6490:
 13481  0016CA  2EE8               	decfsz	wreg,f,c
 13482  0016CC  EF5C  F00B         	goto	u6495
 13483  0016D0  C02D  F03D         	movff	??_xtoa,xtoa@n
 13484  0016D4  C02E  F03E         	movff	??_xtoa+1,xtoa@n+1
 13485  0016D8  C02F  F03F         	movff	??_xtoa+2,xtoa@n+2
 13486  0016DC  C030  F040         	movff	??_xtoa+3,xtoa@n+3
 13487  0016E0  C031  F041         	movff	??_xtoa+4,xtoa@n+4
 13488  0016E4  C032  F042         	movff	??_xtoa+5,xtoa@n+5
 13489  0016E8  C033  F043         	movff	??_xtoa+6,xtoa@n+6
 13490  0016EC  C034  F044         	movff	??_xtoa+7,xtoa@n+7
 13491  0016F0                     l6716:
 13492                           
 13493                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13494  0016F0  BE46               	btfsc	(xtoa@i+1)^0,7,c
 13495  0016F2  EF84  F00B         	goto	u6501
 13496  0016F6  5046               	movf	(xtoa@i+1)^0,w,c
 13497  0016F8  E109               	bnz	u6500
 13498  0016FA  0E02               	movlw	2
 13499  0016FC  5C45               	subwf	xtoa@i^0,w,c
 13500  0016FE  A0D8               	btfss	status,0,c
 13501  001700  EF84  F00B         	goto	u6501
 13502  001704  EF86  F00B         	goto	u6500
 13503  001708                     u6501:
 13504  001708  EFB6  F00B         	goto	l1280
 13505  00170C                     u6500:
 13506  00170C  503D               	movf	xtoa@n^0,w,c
 13507  00170E  103E               	iorwf	(xtoa@n+1)^0,w,c
 13508  001710  103F               	iorwf	(xtoa@n+2)^0,w,c
 13509  001712  1040               	iorwf	(xtoa@n+3)^0,w,c
 13510  001714  1041               	iorwf	(xtoa@n+4)^0,w,c
 13511  001716  1042               	iorwf	(xtoa@n+5)^0,w,c
 13512  001718  1043               	iorwf	(xtoa@n+6)^0,w,c
 13513  00171A  1044               	iorwf	(xtoa@n+7)^0,w,c
 13514  00171C  A4D8               	btfss	status,2,c
 13515  00171E  EF93  F00B         	goto	u6511
 13516  001722  EF95  F00B         	goto	u6510
 13517  001726                     u6511:
 13518  001726  EFC5  F00A         	goto	l6686
 13519  00172A                     u6510:
 13520  00172A  BE3A               	btfsc	(xtoa@p+1)^0,7,c
 13521  00172C  EFA2  F00B         	goto	u6520
 13522  001730  503A               	movf	(xtoa@p+1)^0,w,c
 13523  001732  E106               	bnz	u6521
 13524  001734  0439               	decf	xtoa@p^0,w,c
 13525  001736  B0D8               	btfsc	status,0,c
 13526  001738  EFA0  F00B         	goto	u6521
 13527  00173C  EFA2  F00B         	goto	u6520
 13528  001740                     u6521:
 13529  001740  EFC5  F00A         	goto	l6686
 13530  001744                     u6520:
 13531  001744  BE3C               	btfsc	(xtoa@w+1)^0,7,c
 13532  001746  EFAD  F00B         	goto	u6531
 13533  00174A  503C               	movf	(xtoa@w+1)^0,w,c
 13534  00174C  E108               	bnz	u6530
 13535  00174E  043B               	decf	xtoa@w^0,w,c
 13536  001750  A0D8               	btfss	status,0,c
 13537  001752  EFAD  F00B         	goto	u6531
 13538  001756  EFAF  F00B         	goto	u6530
 13539  00175A                     u6531:
 13540  00175A  EFB6  F00B         	goto	l1280
 13541  00175E                     u6530:
 13542  00175E  B257               	btfsc	_flags^0,1,c
 13543  001760  EFB4  F00B         	goto	u6541
 13544  001764  EFB6  F00B         	goto	u6540
 13545  001768                     u6541:
 13546  001768  EFC5  F00A         	goto	l6686
 13547  00176C                     u6540:
 13548  00176C                     l1280:
 13549                           
 13550                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
 13551  00176C  A857               	btfss	_flags^0,4,c
 13552  00176E  EFBB  F00B         	goto	u6551
 13553  001772  EFBD  F00B         	goto	u6550
 13554  001776                     u6551:
 13555  001776  EFD3  F00B         	goto	l6732
 13556  00177A                     u6550:
 13557  00177A                     
 13558                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
 13559  00177A  0645               	decf	xtoa@i^0,f,c
 13560  00177C  A0D8               	btfss	status,0,c
 13561  00177E  0646               	decf	(xtoa@i+1)^0,f,c
 13562  001780                     
 13563                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
 13564  001780  0EDD               	movlw	low _dbuf
 13565  001782  2445               	addwf	xtoa@i^0,w,c
 13566  001784  6ED9               	movwf	fsr2l,c
 13567  001786  0E02               	movlw	high _dbuf
 13568  001788  2046               	addwfc	(xtoa@i+1)^0,w,c
 13569  00178A  6EDA               	movwf	fsr2h,c
 13570  00178C  C02C  FFDF         	movff	xtoa@x,indf2
 13571  001790                     
 13572                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
 13573  001790  0645               	decf	xtoa@i^0,f,c
 13574  001792  A0D8               	btfss	status,0,c
 13575  001794  0646               	decf	(xtoa@i+1)^0,f,c
 13576                           
 13577                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
 13578  001796  0EDD               	movlw	low _dbuf
 13579  001798  2445               	addwf	xtoa@i^0,w,c
 13580  00179A  6ED9               	movwf	fsr2l,c
 13581  00179C  0E02               	movlw	high _dbuf
 13582  00179E  2046               	addwfc	(xtoa@i+1)^0,w,c
 13583  0017A0  6EDA               	movwf	fsr2h,c
 13584  0017A2  0E30               	movlw	48
 13585  0017A4  6EDF               	movwf	indf2,c
 13586  0017A6                     l6732:
 13587                           
 13588                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
 13589  0017A6  C022  F017         	movff	xtoa@fp,pad@fp
 13590  0017AA  C023  F018         	movff	xtoa@fp+1,pad@fp+1
 13591  0017AE  0EDD               	movlw	low _dbuf
 13592  0017B0  2445               	addwf	xtoa@i^0,w,c
 13593  0017B2  6E19               	movwf	pad@buf^0,c
 13594  0017B4  0E02               	movlw	high _dbuf
 13595  0017B6  2046               	addwfc	(xtoa@i+1)^0,w,c
 13596  0017B8  6E1A               	movwf	(pad@buf+1)^0,c
 13597  0017BA  C03B  F01B         	movff	xtoa@w,pad@p
 13598  0017BE  C03C  F01C         	movff	xtoa@w+1,pad@p+1
 13599  0017C2  ECAC  F01A         	call	_pad	;wreg free
 13600  0017C6  C017  F022         	movff	?_pad,?_xtoa
 13601  0017CA  C018  F023         	movff	?_pad+1,?_xtoa+1
 13602  0017CE  0012               	return		;funcret
 13603  0017D0                     __end_of_xtoa:
 13604                           	opt callstack 0
 13605                           
 13606 ;; *************** function _toupper *****************
 13607 ;; Defined at:
 13608 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
 13609 ;; Parameters:    Size  Location     Type
 13610 ;;  c               2   10[COMRAM] int 
 13611 ;; Auto vars:     Size  Location     Type
 13612 ;;		None
 13613 ;; Return value:  Size  Location     Type
 13614 ;;                  2   10[COMRAM] int 
 13615 ;; Registers used:
 13616 ;;		wreg, status,2, status,0
 13617 ;; Tracked objects:
 13618 ;;		On entry : 0/0
 13619 ;;		On exit  : 0/0
 13620 ;;		Unchanged: 0/0
 13621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13622 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13623 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13624 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13625 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13626 ;;Total ram usage:        8 bytes
 13627 ;; Hardware stack levels used:    1
 13628 ;; Hardware stack levels required when called:    5
 13629 ;; This function calls:
 13630 ;;		_islower
 13631 ;; This function is called by:
 13632 ;;		_xtoa
 13633 ;; This function uses a non-reentrant model
 13634 ;;
 13635                           
 13636                           	psect	text53
 13637  003DF2                     __ptext53:
 13638                           	opt callstack 0
 13639  003DF2                     _toupper:
 13640                           	opt callstack 21
 13641  003DF2  0E9F               	movlw	159
 13642  003DF4  6E0D               	movwf	??_toupper^0,c
 13643  003DF6  0EFF               	movlw	255
 13644  003DF8  6E0E               	movwf	(??_toupper+1)^0,c
 13645  003DFA  C00B  F00F         	movff	toupper@c,??_toupper+2
 13646  003DFE  C00C  F010         	movff	toupper@c+1,??_toupper+3
 13647  003E02  500D               	movf	??_toupper^0,w,c
 13648  003E04  260F               	addwf	(??_toupper+2)^0,f,c
 13649  003E06  500E               	movf	(??_toupper+1)^0,w,c
 13650  003E08  2210               	addwfc	(??_toupper+3)^0,f,c
 13651  003E0A  5010               	movf	(??_toupper+3)^0,w,c
 13652  003E0C  E10A               	bnz	u5800
 13653  003E0E  0E1A               	movlw	26
 13654  003E10  5C0F               	subwf	(??_toupper+2)^0,w,c
 13655  003E12  A0D8               	btfss	status,0,c
 13656  003E14  EF0E  F01F         	goto	u5801
 13657  003E18  EF11  F01F         	goto	u5800
 13658  003E1C                     u5801:
 13659  003E1C  0E01               	movlw	1
 13660  003E1E  EF12  F01F         	goto	u5810
 13661  003E22                     u5800:
 13662  003E22  0E00               	movlw	0
 13663  003E24                     u5810:
 13664  003E24  6E11               	movwf	_toupper$2486^0,c
 13665  003E26  6A12               	clrf	(_toupper$2486+1)^0,c
 13666  003E28  5011               	movf	_toupper$2486^0,w,c
 13667  003E2A  1012               	iorwf	(_toupper$2486+1)^0,w,c
 13668  003E2C  B4D8               	btfsc	status,2,c
 13669  003E2E  EF1B  F01F         	goto	u5821
 13670  003E32  EF1D  F01F         	goto	u5820
 13671  003E36                     u5821:
 13672  003E36  EF23  F01F         	goto	l2130
 13673  003E3A                     u5820:
 13674  003E3A  0E5F               	movlw	95
 13675  003E3C  140B               	andwf	toupper@c^0,w,c
 13676  003E3E  6E0B               	movwf	?_toupper^0,c
 13677  003E40  6A0C               	clrf	(?_toupper+1)^0,c
 13678  003E42  EF27  F01F         	goto	l2135
 13679  003E46                     l2130:
 13680  003E46  C00B  F00B         	movff	toupper@c,?_toupper
 13681  003E4A  C00C  F00C         	movff	toupper@c+1,?_toupper+1
 13682  003E4E                     l2135:
 13683  003E4E  0012               	return		;funcret
 13684  003E50                     __end_of_toupper:
 13685                           	opt callstack 0
 13686                           
 13687 ;; *************** function _islower *****************
 13688 ;; Defined at:
 13689 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
 13690 ;; Parameters:    Size  Location     Type
 13691 ;;  c               2    4[COMRAM] int 
 13692 ;; Auto vars:     Size  Location     Type
 13693 ;;		None
 13694 ;; Return value:  Size  Location     Type
 13695 ;;                  2    4[COMRAM] int 
 13696 ;; Registers used:
 13697 ;;		wreg, status,2, status,0
 13698 ;; Tracked objects:
 13699 ;;		On entry : 0/0
 13700 ;;		On exit  : 0/0
 13701 ;;		Unchanged: 0/0
 13702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13703 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13705 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13706 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13707 ;;Total ram usage:        6 bytes
 13708 ;; Hardware stack levels used:    1
 13709 ;; Hardware stack levels required when called:    4
 13710 ;; This function calls:
 13711 ;;		Nothing
 13712 ;; This function is called by:
 13713 ;;		_toupper
 13714 ;; This function uses a non-reentrant model
 13715 ;;
 13716                           
 13717                           	psect	text54
 13718  00442A                     __ptext54:
 13719                           	opt callstack 0
 13720  00442A                     _islower:
 13721                           	opt callstack 21
 13722  00442A  0E9F               	movlw	159
 13723  00442C  6E07               	movwf	??_islower^0,c
 13724  00442E  0EFF               	movlw	255
 13725  004430  6E08               	movwf	(??_islower+1)^0,c
 13726  004432  C005  F009         	movff	islower@c,??_islower+2
 13727  004436  C006  F00A         	movff	islower@c+1,??_islower+3
 13728  00443A  5007               	movf	??_islower^0,w,c
 13729  00443C  2609               	addwf	(??_islower+2)^0,f,c
 13730  00443E  5008               	movf	(??_islower+1)^0,w,c
 13731  004440  220A               	addwfc	(??_islower+3)^0,f,c
 13732  004442  500A               	movf	(??_islower+3)^0,w,c
 13733  004444  E10A               	bnz	u5690
 13734  004446  0E1A               	movlw	26
 13735  004448  5C09               	subwf	(??_islower+2)^0,w,c
 13736  00444A  A0D8               	btfss	status,0,c
 13737  00444C  EF2A  F022         	goto	u5691
 13738  004450  EF2D  F022         	goto	u5690
 13739  004454                     u5691:
 13740  004454  0E01               	movlw	1
 13741  004456  EF2E  F022         	goto	u5700
 13742  00445A                     u5690:
 13743  00445A  0E00               	movlw	0
 13744  00445C                     u5700:
 13745  00445C  6E05               	movwf	?_islower^0,c
 13746  00445E  6A06               	clrf	(?_islower+1)^0,c
 13747  004460  0012               	return		;funcret
 13748  004462                     __end_of_islower:
 13749                           	opt callstack 0
 13750                           
 13751 ;; *************** function _isupper *****************
 13752 ;; Defined at:
 13753 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
 13754 ;; Parameters:    Size  Location     Type
 13755 ;;  c               2    4[COMRAM] int 
 13756 ;; Auto vars:     Size  Location     Type
 13757 ;;		None
 13758 ;; Return value:  Size  Location     Type
 13759 ;;                  2    4[COMRAM] int 
 13760 ;; Registers used:
 13761 ;;		wreg, status,2, status,0
 13762 ;; Tracked objects:
 13763 ;;		On entry : 0/0
 13764 ;;		On exit  : 0/0
 13765 ;;		Unchanged: 0/0
 13766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13767 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13769 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13770 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13771 ;;Total ram usage:        6 bytes
 13772 ;; Hardware stack levels used:    1
 13773 ;; Hardware stack levels required when called:    4
 13774 ;; This function calls:
 13775 ;;		Nothing
 13776 ;; This function is called by:
 13777 ;;		_xtoa
 13778 ;; This function uses a non-reentrant model
 13779 ;;
 13780                           
 13781                           	psect	text55
 13782  004462                     __ptext55:
 13783                           	opt callstack 0
 13784  004462                     _isupper:
 13785                           	opt callstack 22
 13786  004462  0EBF               	movlw	191
 13787  004464  6E07               	movwf	??_isupper^0,c
 13788  004466  0EFF               	movlw	255
 13789  004468  6E08               	movwf	(??_isupper+1)^0,c
 13790  00446A  C005  F009         	movff	isupper@c,??_isupper+2
 13791  00446E  C006  F00A         	movff	isupper@c+1,??_isupper+3
 13792  004472  5007               	movf	??_isupper^0,w,c
 13793  004474  2609               	addwf	(??_isupper+2)^0,f,c
 13794  004476  5008               	movf	(??_isupper+1)^0,w,c
 13795  004478  220A               	addwfc	(??_isupper+3)^0,f,c
 13796  00447A  500A               	movf	(??_isupper+3)^0,w,c
 13797  00447C  E10A               	bnz	u5760
 13798  00447E  0E1A               	movlw	26
 13799  004480  5C09               	subwf	(??_isupper+2)^0,w,c
 13800  004482  A0D8               	btfss	status,0,c
 13801  004484  EF46  F022         	goto	u5761
 13802  004488  EF49  F022         	goto	u5760
 13803  00448C                     u5761:
 13804  00448C  0E01               	movlw	1
 13805  00448E  EF4A  F022         	goto	u5770
 13806  004492                     u5760:
 13807  004492  0E00               	movlw	0
 13808  004494                     u5770:
 13809  004494  6E05               	movwf	?_isupper^0,c
 13810  004496  6A06               	clrf	(?_isupper+1)^0,c
 13811  004498  0012               	return		;funcret
 13812  00449A                     __end_of_isupper:
 13813                           	opt callstack 0
 13814                           
 13815 ;; *************** function _isalpha *****************
 13816 ;; Defined at:
 13817 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
 13818 ;; Parameters:    Size  Location     Type
 13819 ;;  c               2    4[COMRAM] int 
 13820 ;; Auto vars:     Size  Location     Type
 13821 ;;		None
 13822 ;; Return value:  Size  Location     Type
 13823 ;;                  2    4[COMRAM] int 
 13824 ;; Registers used:
 13825 ;;		wreg, status,2, status,0
 13826 ;; Tracked objects:
 13827 ;;		On entry : 0/0
 13828 ;;		On exit  : 0/0
 13829 ;;		Unchanged: 0/0
 13830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13831 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13833 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13834 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13835 ;;Total ram usage:        6 bytes
 13836 ;; Hardware stack levels used:    1
 13837 ;; Hardware stack levels required when called:    4
 13838 ;; This function calls:
 13839 ;;		Nothing
 13840 ;; This function is called by:
 13841 ;;		_xtoa
 13842 ;; This function uses a non-reentrant model
 13843 ;;
 13844                           
 13845                           	psect	text56
 13846  0043B6                     __ptext56:
 13847                           	opt callstack 0
 13848  0043B6                     _isalpha:
 13849                           	opt callstack 22
 13850  0043B6  0E9F               	movlw	159
 13851  0043B8  6E07               	movwf	??_isalpha^0,c
 13852  0043BA  0EFF               	movlw	255
 13853  0043BC  6E08               	movwf	(??_isalpha+1)^0,c
 13854  0043BE  0E20               	movlw	32
 13855  0043C0  1005               	iorwf	isalpha@c^0,w,c
 13856  0043C2  6E09               	movwf	(??_isalpha+2)^0,c
 13857  0043C4  0E00               	movlw	0
 13858  0043C6  1006               	iorwf	(isalpha@c+1)^0,w,c
 13859  0043C8  6E0A               	movwf	(??_isalpha+3)^0,c
 13860  0043CA  5007               	movf	??_isalpha^0,w,c
 13861  0043CC  2609               	addwf	(??_isalpha+2)^0,f,c
 13862  0043CE  5008               	movf	(??_isalpha+1)^0,w,c
 13863  0043D0  220A               	addwfc	(??_isalpha+3)^0,f,c
 13864  0043D2  500A               	movf	(??_isalpha+3)^0,w,c
 13865  0043D4  E10A               	bnz	u5780
 13866  0043D6  0E1A               	movlw	26
 13867  0043D8  5C09               	subwf	(??_isalpha+2)^0,w,c
 13868  0043DA  A0D8               	btfss	status,0,c
 13869  0043DC  EFF2  F021         	goto	u5781
 13870  0043E0  EFF5  F021         	goto	u5780
 13871  0043E4                     u5781:
 13872  0043E4  0E01               	movlw	1
 13873  0043E6  EFF6  F021         	goto	u5790
 13874  0043EA                     u5780:
 13875  0043EA  0E00               	movlw	0
 13876  0043EC                     u5790:
 13877  0043EC  6E05               	movwf	?_isalpha^0,c
 13878  0043EE  6A06               	clrf	(?_isalpha+1)^0,c
 13879  0043F0  0012               	return		;funcret
 13880  0043F2                     __end_of_isalpha:
 13881                           	opt callstack 0
 13882                           
 13883 ;; *************** function _utoa *****************
 13884 ;; Defined at:
 13885 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 13886 ;; Parameters:    Size  Location     Type
 13887 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
 13888 ;;		 -> NULL(0), 
 13889 ;;  d               8   35[COMRAM] unsigned long long 
 13890 ;; Auto vars:     Size  Location     Type
 13891 ;;  n               8   55[COMRAM] unsigned long long 
 13892 ;;  i               2   63[COMRAM] int 
 13893 ;;  w               2   53[COMRAM] int 
 13894 ;;  p               2   51[COMRAM] int 
 13895 ;; Return value:  Size  Location     Type
 13896 ;;                  2   33[COMRAM] int 
 13897 ;; Registers used:
 13898 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13899 ;; Tracked objects:
 13900 ;;		On entry : 0/0
 13901 ;;		On exit  : 0/0
 13902 ;;		Unchanged: 0/0
 13903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13904 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13905 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13906 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13907 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13908 ;;Total ram usage:       32 bytes
 13909 ;; Hardware stack levels used:    1
 13910 ;; Hardware stack levels required when called:    9
 13911 ;; This function calls:
 13912 ;;		___lodiv
 13913 ;;		___lomod
 13914 ;;		_pad
 13915 ;; This function is called by:
 13916 ;;		_vfpfcnvrt
 13917 ;; This function uses a non-reentrant model
 13918 ;;
 13919                           
 13920                           	psect	text57
 13921  001CBA                     __ptext57:
 13922                           	opt callstack 0
 13923  001CBA                     _utoa:
 13924                           	opt callstack 18
 13925  001CBA                     
 13926                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
 13927  001CBA  0100               	movlb	0	; () banked
 13928  001CBC  BFD0               	btfsc	(_prec+1)& (0+255),7,b
 13929  001CBE  EF63  F00E         	goto	u6321
 13930  001CC2  EF65  F00E         	goto	u6320
 13931  001CC6                     u6321:
 13932  001CC6  EF66  F00E         	goto	l6638
 13933  001CCA                     u6320:
 13934  001CCA                     
 13935                           ; BSR set to: 0
 13936                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
 13937  001CCA  9257               	bcf	_flags^0,1,c
 13938  001CCC                     l6638:
 13939                           
 13940                           ; BSR set to: 0
 13941                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
 13942  001CCC  BFD0               	btfsc	(_prec+1)& (0+255),7,b
 13943  001CCE  EF73  F00E         	goto	u6330
 13944  001CD2  51D0               	movf	(_prec+1)& (0+255),w,b
 13945  001CD4  E106               	bnz	u6331
 13946  001CD6  05CF               	decf	_prec& (0+255),w,b
 13947  001CD8  B0D8               	btfsc	status,0,c
 13948  001CDA  EF71  F00E         	goto	u6331
 13949  001CDE  EF73  F00E         	goto	u6330
 13950  001CE2                     u6331:
 13951  001CE2  EF79  F00E         	goto	l1242
 13952  001CE6                     u6330:
 13953  001CE6                     
 13954                           ; BSR set to: 0
 13955  001CE6  0E00               	movlw	0
 13956  001CE8  6E35               	movwf	(utoa@p+1)^0,c
 13957  001CEA  0E01               	movlw	1
 13958  001CEC  6E34               	movwf	utoa@p^0,c
 13959  001CEE  EF7D  F00E         	goto	l1244
 13960  001CF2                     l1242:
 13961                           
 13962                           ; BSR set to: 0
 13963  001CF2  C0CF  F034         	movff	_prec,utoa@p
 13964  001CF6  C0D0  F035         	movff	_prec+1,utoa@p+1
 13965  001CFA                     l1244:
 13966                           
 13967                           ; BSR set to: 0
 13968                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
 13969  001CFA  C0CD  F036         	movff	_width,utoa@w
 13970  001CFE  C0CE  F037         	movff	_width+1,utoa@w+1
 13971                           
 13972                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
 13973  001D02  C024  F038         	movff	utoa@d,utoa@n
 13974  001D06  C025  F039         	movff	utoa@d+1,utoa@n+1
 13975  001D0A  C026  F03A         	movff	utoa@d+2,utoa@n+2
 13976  001D0E  C027  F03B         	movff	utoa@d+3,utoa@n+3
 13977  001D12  C028  F03C         	movff	utoa@d+4,utoa@n+4
 13978  001D16  C029  F03D         	movff	utoa@d+5,utoa@n+5
 13979  001D1A  C02A  F03E         	movff	utoa@d+6,utoa@n+6
 13980  001D1E  C02B  F03F         	movff	utoa@d+7,utoa@n+7
 13981  001D22                     
 13982                           ; BSR set to: 0
 13983                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
 13984  001D22  0E00               	movlw	0
 13985  001D24  6E41               	movwf	(utoa@i+1)^0,c
 13986  001D26  0E1F               	movlw	31
 13987  001D28  6E40               	movwf	utoa@i^0,c
 13988  001D2A                     
 13989                           ; BSR set to: 0
 13990                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
 13991  001D2A  0E00               	movlw	0
 13992  001D2C  0102               	movlb	2	; () banked
 13993  001D2E  6FFC               	movwf	(_dbuf+31)& (0+255),b
 13994                           
 13995                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13996  001D30  EF10  F00F         	goto	l6656
 13997  001D34                     l6646:
 13998                           
 13999                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
 14000  001D34  0640               	decf	utoa@i^0,f,c
 14001  001D36  A0D8               	btfss	status,0,c
 14002  001D38  0641               	decf	(utoa@i+1)^0,f,c
 14003  001D3A                     
 14004                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
 14005  001D3A  0EDD               	movlw	low _dbuf
 14006  001D3C  2440               	addwf	utoa@i^0,w,c
 14007  001D3E  6ED9               	movwf	fsr2l,c
 14008  001D40  0E02               	movlw	high _dbuf
 14009  001D42  2041               	addwfc	(utoa@i+1)^0,w,c
 14010  001D44  6EDA               	movwf	fsr2h,c
 14011  001D46  C038  F005         	movff	utoa@n,___lomod@dividend
 14012  001D4A  C039  F006         	movff	utoa@n+1,___lomod@dividend+1
 14013  001D4E  C03A  F007         	movff	utoa@n+2,___lomod@dividend+2
 14014  001D52  C03B  F008         	movff	utoa@n+3,___lomod@dividend+3
 14015  001D56  C03C  F009         	movff	utoa@n+4,___lomod@dividend+4
 14016  001D5A  C03D  F00A         	movff	utoa@n+5,___lomod@dividend+5
 14017  001D5E  C03E  F00B         	movff	utoa@n+6,___lomod@dividend+6
 14018  001D62  C03F  F00C         	movff	utoa@n+7,___lomod@dividend+7
 14019  001D66  0E0A               	movlw	10
 14020  001D68  6E0D               	movwf	___lomod@divisor^0,c
 14021  001D6A  0E00               	movlw	0
 14022  001D6C  6E0E               	movwf	(___lomod@divisor+1)^0,c
 14023  001D6E  0E00               	movlw	0
 14024  001D70  6E0F               	movwf	(___lomod@divisor+2)^0,c
 14025  001D72  0E00               	movlw	0
 14026  001D74  6E10               	movwf	(___lomod@divisor+3)^0,c
 14027  001D76  0E00               	movlw	0
 14028  001D78  6E11               	movwf	(___lomod@divisor+4)^0,c
 14029  001D7A  0E00               	movlw	0
 14030  001D7C  6E12               	movwf	(___lomod@divisor+5)^0,c
 14031  001D7E  0E00               	movlw	0
 14032  001D80  6E13               	movwf	(___lomod@divisor+6)^0,c
 14033  001D82  0E00               	movlw	0
 14034  001D84  6E14               	movwf	(___lomod@divisor+7)^0,c
 14035  001D86  ECE2  F019         	call	___lomod	;wreg free
 14036  001D8A  C005  F02C         	movff	?___lomod,??_utoa
 14037  001D8E  C006  F02D         	movff	?___lomod+1,??_utoa+1
 14038  001D92  C007  F02E         	movff	?___lomod+2,??_utoa+2
 14039  001D96  C008  F02F         	movff	?___lomod+3,??_utoa+3
 14040  001D9A  C009  F030         	movff	?___lomod+4,??_utoa+4
 14041  001D9E  C00A  F031         	movff	?___lomod+5,??_utoa+5
 14042  001DA2  C00B  F032         	movff	?___lomod+6,??_utoa+6
 14043  001DA6  C00C  F033         	movff	?___lomod+7,??_utoa+7
 14044  001DAA  502C               	movf	??_utoa^0,w,c
 14045  001DAC  0F30               	addlw	48
 14046  001DAE  6EDF               	movwf	indf2,c
 14047  001DB0                     
 14048                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
 14049  001DB0  0634               	decf	utoa@p^0,f,c
 14050  001DB2  A0D8               	btfss	status,0,c
 14051  001DB4  0635               	decf	(utoa@p+1)^0,f,c
 14052  001DB6                     
 14053                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
 14054  001DB6  0636               	decf	utoa@w^0,f,c
 14055  001DB8  A0D8               	btfss	status,0,c
 14056  001DBA  0637               	decf	(utoa@w+1)^0,f,c
 14057  001DBC                     
 14058                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
 14059  001DBC  C038  F005         	movff	utoa@n,___lodiv@dividend
 14060  001DC0  C039  F006         	movff	utoa@n+1,___lodiv@dividend+1
 14061  001DC4  C03A  F007         	movff	utoa@n+2,___lodiv@dividend+2
 14062  001DC8  C03B  F008         	movff	utoa@n+3,___lodiv@dividend+3
 14063  001DCC  C03C  F009         	movff	utoa@n+4,___lodiv@dividend+4
 14064  001DD0  C03D  F00A         	movff	utoa@n+5,___lodiv@dividend+5
 14065  001DD4  C03E  F00B         	movff	utoa@n+6,___lodiv@dividend+6
 14066  001DD8  C03F  F00C         	movff	utoa@n+7,___lodiv@dividend+7
 14067  001DDC  0E0A               	movlw	10
 14068  001DDE  6E0D               	movwf	___lodiv@divisor^0,c
 14069  001DE0  0E00               	movlw	0
 14070  001DE2  6E0E               	movwf	(___lodiv@divisor+1)^0,c
 14071  001DE4  0E00               	movlw	0
 14072  001DE6  6E0F               	movwf	(___lodiv@divisor+2)^0,c
 14073  001DE8  0E00               	movlw	0
 14074  001DEA  6E10               	movwf	(___lodiv@divisor+3)^0,c
 14075  001DEC  0E00               	movlw	0
 14076  001DEE  6E11               	movwf	(___lodiv@divisor+4)^0,c
 14077  001DF0  0E00               	movlw	0
 14078  001DF2  6E12               	movwf	(___lodiv@divisor+5)^0,c
 14079  001DF4  0E00               	movlw	0
 14080  001DF6  6E13               	movwf	(___lodiv@divisor+6)^0,c
 14081  001DF8  0E00               	movlw	0
 14082  001DFA  6E14               	movwf	(___lodiv@divisor+7)^0,c
 14083  001DFC  EC25  F018         	call	___lodiv	;wreg free
 14084  001E00  C005  F038         	movff	?___lodiv,utoa@n
 14085  001E04  C006  F039         	movff	?___lodiv+1,utoa@n+1
 14086  001E08  C007  F03A         	movff	?___lodiv+2,utoa@n+2
 14087  001E0C  C008  F03B         	movff	?___lodiv+3,utoa@n+3
 14088  001E10  C009  F03C         	movff	?___lodiv+4,utoa@n+4
 14089  001E14  C00A  F03D         	movff	?___lodiv+5,utoa@n+5
 14090  001E18  C00B  F03E         	movff	?___lodiv+6,utoa@n+6
 14091  001E1C  C00C  F03F         	movff	?___lodiv+7,utoa@n+7
 14092  001E20                     l6656:
 14093                           
 14094                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 14095  001E20  5040               	movf	utoa@i^0,w,c
 14096  001E22  1041               	iorwf	(utoa@i+1)^0,w,c
 14097  001E24  B4D8               	btfsc	status,2,c
 14098  001E26  EF17  F00F         	goto	u6341
 14099  001E2A  EF19  F00F         	goto	u6340
 14100  001E2E                     u6341:
 14101  001E2E  EF49  F00F         	goto	l6666
 14102  001E32                     u6340:
 14103  001E32  5038               	movf	utoa@n^0,w,c
 14104  001E34  1039               	iorwf	(utoa@n+1)^0,w,c
 14105  001E36  103A               	iorwf	(utoa@n+2)^0,w,c
 14106  001E38  103B               	iorwf	(utoa@n+3)^0,w,c
 14107  001E3A  103C               	iorwf	(utoa@n+4)^0,w,c
 14108  001E3C  103D               	iorwf	(utoa@n+5)^0,w,c
 14109  001E3E  103E               	iorwf	(utoa@n+6)^0,w,c
 14110  001E40  103F               	iorwf	(utoa@n+7)^0,w,c
 14111  001E42  A4D8               	btfss	status,2,c
 14112  001E44  EF26  F00F         	goto	u6351
 14113  001E48  EF28  F00F         	goto	u6350
 14114  001E4C                     u6351:
 14115  001E4C  EF9A  F00E         	goto	l6646
 14116  001E50                     u6350:
 14117  001E50  BE35               	btfsc	(utoa@p+1)^0,7,c
 14118  001E52  EF35  F00F         	goto	u6360
 14119  001E56  5035               	movf	(utoa@p+1)^0,w,c
 14120  001E58  E106               	bnz	u6361
 14121  001E5A  0434               	decf	utoa@p^0,w,c
 14122  001E5C  B0D8               	btfsc	status,0,c
 14123  001E5E  EF33  F00F         	goto	u6361
 14124  001E62  EF35  F00F         	goto	u6360
 14125  001E66                     u6361:
 14126  001E66  EF9A  F00E         	goto	l6646
 14127  001E6A                     u6360:
 14128  001E6A  BE37               	btfsc	(utoa@w+1)^0,7,c
 14129  001E6C  EF40  F00F         	goto	u6371
 14130  001E70  5037               	movf	(utoa@w+1)^0,w,c
 14131  001E72  E108               	bnz	u6370
 14132  001E74  0436               	decf	utoa@w^0,w,c
 14133  001E76  A0D8               	btfss	status,0,c
 14134  001E78  EF40  F00F         	goto	u6371
 14135  001E7C  EF42  F00F         	goto	u6370
 14136  001E80                     u6371:
 14137  001E80  EF49  F00F         	goto	l6666
 14138  001E84                     u6370:
 14139  001E84  B257               	btfsc	_flags^0,1,c
 14140  001E86  EF47  F00F         	goto	u6381
 14141  001E8A  EF49  F00F         	goto	u6380
 14142  001E8E                     u6381:
 14143  001E8E  EF9A  F00E         	goto	l6646
 14144  001E92                     u6380:
 14145  001E92                     l6666:
 14146                           
 14147                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
 14148  001E92  C022  F017         	movff	utoa@fp,pad@fp
 14149  001E96  C023  F018         	movff	utoa@fp+1,pad@fp+1
 14150  001E9A  0EDD               	movlw	low _dbuf
 14151  001E9C  2440               	addwf	utoa@i^0,w,c
 14152  001E9E  6E19               	movwf	pad@buf^0,c
 14153  001EA0  0E02               	movlw	high _dbuf
 14154  001EA2  2041               	addwfc	(utoa@i+1)^0,w,c
 14155  001EA4  6E1A               	movwf	(pad@buf+1)^0,c
 14156  001EA6  C036  F01B         	movff	utoa@w,pad@p
 14157  001EAA  C037  F01C         	movff	utoa@w+1,pad@p+1
 14158  001EAE  ECAC  F01A         	call	_pad	;wreg free
 14159  001EB2  C017  F022         	movff	?_pad,?_utoa
 14160  001EB6  C018  F023         	movff	?_pad+1,?_utoa+1
 14161  001EBA  0012               	return		;funcret
 14162  001EBC                     __end_of_utoa:
 14163                           	opt callstack 0
 14164                           
 14165 ;; *************** function ___lomod *****************
 14166 ;; Defined at:
 14167 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
 14168 ;; Parameters:    Size  Location     Type
 14169 ;;  dividend        8    4[COMRAM] unsigned long long 
 14170 ;;  divisor         8   12[COMRAM] unsigned long long 
 14171 ;; Auto vars:     Size  Location     Type
 14172 ;;  counter         1   20[COMRAM] unsigned char 
 14173 ;; Return value:  Size  Location     Type
 14174 ;;                  8    4[COMRAM] unsigned long long 
 14175 ;; Registers used:
 14176 ;;		wreg, status,2, status,0
 14177 ;; Tracked objects:
 14178 ;;		On entry : 0/0
 14179 ;;		On exit  : 0/0
 14180 ;;		Unchanged: 0/0
 14181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14182 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14183 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14185 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14186 ;;Total ram usage:       17 bytes
 14187 ;; Hardware stack levels used:    1
 14188 ;; Hardware stack levels required when called:    4
 14189 ;; This function calls:
 14190 ;;		Nothing
 14191 ;; This function is called by:
 14192 ;;		_utoa
 14193 ;; This function uses a non-reentrant model
 14194 ;;
 14195                           
 14196                           	psect	text58
 14197  0033C4                     __ptext58:
 14198                           	opt callstack 0
 14199  0033C4                     ___lomod:
 14200                           	opt callstack 22
 14201  0033C4  500D               	movf	___lomod@divisor^0,w,c
 14202  0033C6  100E               	iorwf	(___lomod@divisor+1)^0,w,c
 14203  0033C8  100F               	iorwf	(___lomod@divisor+2)^0,w,c
 14204  0033CA  1010               	iorwf	(___lomod@divisor+3)^0,w,c
 14205  0033CC  1011               	iorwf	(___lomod@divisor+4)^0,w,c
 14206  0033CE  1012               	iorwf	(___lomod@divisor+5)^0,w,c
 14207  0033D0  1013               	iorwf	(___lomod@divisor+6)^0,w,c
 14208  0033D2  1014               	iorwf	(___lomod@divisor+7)^0,w,c
 14209  0033D4  B4D8               	btfsc	status,2,c
 14210  0033D6  EFEF  F019         	goto	u6021
 14211  0033DA  EFF1  F019         	goto	u6020
 14212  0033DE                     u6021:
 14213  0033DE  EF39  F01A         	goto	l1774
 14214  0033E2                     u6020:
 14215  0033E2  0E01               	movlw	1
 14216  0033E4  6E15               	movwf	___lomod@counter^0,c
 14217  0033E6  EFFF  F019         	goto	l6508
 14218  0033EA                     l6506:
 14219  0033EA  90D8               	bcf	status,0,c
 14220  0033EC  360D               	rlcf	___lomod@divisor^0,f,c
 14221  0033EE  360E               	rlcf	(___lomod@divisor+1)^0,f,c
 14222  0033F0  360F               	rlcf	(___lomod@divisor+2)^0,f,c
 14223  0033F2  3610               	rlcf	(___lomod@divisor+3)^0,f,c
 14224  0033F4  3611               	rlcf	(___lomod@divisor+4)^0,f,c
 14225  0033F6  3612               	rlcf	(___lomod@divisor+5)^0,f,c
 14226  0033F8  3613               	rlcf	(___lomod@divisor+6)^0,f,c
 14227  0033FA  3614               	rlcf	(___lomod@divisor+7)^0,f,c
 14228  0033FC  2A15               	incf	___lomod@counter^0,f,c
 14229  0033FE                     l6508:
 14230  0033FE  AE14               	btfss	(___lomod@divisor+7)^0,7,c
 14231  003400  EF04  F01A         	goto	u6031
 14232  003404  EF06  F01A         	goto	u6030
 14233  003408                     u6031:
 14234  003408  EFF5  F019         	goto	l6506
 14235  00340C                     u6030:
 14236  00340C                     l6510:
 14237  00340C  500D               	movf	___lomod@divisor^0,w,c
 14238  00340E  5C05               	subwf	___lomod@dividend^0,w,c
 14239  003410  500E               	movf	(___lomod@divisor+1)^0,w,c
 14240  003412  5806               	subwfb	(___lomod@dividend+1)^0,w,c
 14241  003414  500F               	movf	(___lomod@divisor+2)^0,w,c
 14242  003416  5807               	subwfb	(___lomod@dividend+2)^0,w,c
 14243  003418  5010               	movf	(___lomod@divisor+3)^0,w,c
 14244  00341A  5808               	subwfb	(___lomod@dividend+3)^0,w,c
 14245  00341C  5011               	movf	(___lomod@divisor+4)^0,w,c
 14246  00341E  5809               	subwfb	(___lomod@dividend+4)^0,w,c
 14247  003420  5012               	movf	(___lomod@divisor+5)^0,w,c
 14248  003422  580A               	subwfb	(___lomod@dividend+5)^0,w,c
 14249  003424  5013               	movf	(___lomod@divisor+6)^0,w,c
 14250  003426  580B               	subwfb	(___lomod@dividend+6)^0,w,c
 14251  003428  5014               	movf	(___lomod@divisor+7)^0,w,c
 14252  00342A  580C               	subwfb	(___lomod@dividend+7)^0,w,c
 14253  00342C  A0D8               	btfss	status,0,c
 14254  00342E  EF1B  F01A         	goto	u6041
 14255  003432  EF1D  F01A         	goto	u6040
 14256  003436                     u6041:
 14257  003436  EF2D  F01A         	goto	l6514
 14258  00343A                     u6040:
 14259  00343A  500D               	movf	___lomod@divisor^0,w,c
 14260  00343C  5E05               	subwf	___lomod@dividend^0,f,c
 14261  00343E  500E               	movf	(___lomod@divisor+1)^0,w,c
 14262  003440  5A06               	subwfb	(___lomod@dividend+1)^0,f,c
 14263  003442  500F               	movf	(___lomod@divisor+2)^0,w,c
 14264  003444  5A07               	subwfb	(___lomod@dividend+2)^0,f,c
 14265  003446  5010               	movf	(___lomod@divisor+3)^0,w,c
 14266  003448  5A08               	subwfb	(___lomod@dividend+3)^0,f,c
 14267  00344A  5011               	movf	(___lomod@divisor+4)^0,w,c
 14268  00344C  5A09               	subwfb	(___lomod@dividend+4)^0,f,c
 14269  00344E  5012               	movf	(___lomod@divisor+5)^0,w,c
 14270  003450  5A0A               	subwfb	(___lomod@dividend+5)^0,f,c
 14271  003452  5013               	movf	(___lomod@divisor+6)^0,w,c
 14272  003454  5A0B               	subwfb	(___lomod@dividend+6)^0,f,c
 14273  003456  5014               	movf	(___lomod@divisor+7)^0,w,c
 14274  003458  5A0C               	subwfb	(___lomod@dividend+7)^0,f,c
 14275  00345A                     l6514:
 14276  00345A  90D8               	bcf	status,0,c
 14277  00345C  3214               	rrcf	(___lomod@divisor+7)^0,f,c
 14278  00345E  3213               	rrcf	(___lomod@divisor+6)^0,f,c
 14279  003460  3212               	rrcf	(___lomod@divisor+5)^0,f,c
 14280  003462  3211               	rrcf	(___lomod@divisor+4)^0,f,c
 14281  003464  3210               	rrcf	(___lomod@divisor+3)^0,f,c
 14282  003466  320F               	rrcf	(___lomod@divisor+2)^0,f,c
 14283  003468  320E               	rrcf	(___lomod@divisor+1)^0,f,c
 14284  00346A  320D               	rrcf	___lomod@divisor^0,f,c
 14285  00346C  2E15               	decfsz	___lomod@counter^0,f,c
 14286  00346E  EF06  F01A         	goto	l6510
 14287  003472                     l1774:
 14288  003472  C005  F005         	movff	___lomod@dividend,?___lomod
 14289  003476  C006  F006         	movff	___lomod@dividend+1,?___lomod+1
 14290  00347A  C007  F007         	movff	___lomod@dividend+2,?___lomod+2
 14291  00347E  C008  F008         	movff	___lomod@dividend+3,?___lomod+3
 14292  003482  C009  F009         	movff	___lomod@dividend+4,?___lomod+4
 14293  003486  C00A  F00A         	movff	___lomod@dividend+5,?___lomod+5
 14294  00348A  C00B  F00B         	movff	___lomod@dividend+6,?___lomod+6
 14295  00348E  C00C  F00C         	movff	___lomod@dividend+7,?___lomod+7
 14296  003492  0012               	return		;funcret
 14297  003494                     __end_of___lomod:
 14298                           	opt callstack 0
 14299                           
 14300 ;; *************** function ___lodiv *****************
 14301 ;; Defined at:
 14302 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
 14303 ;; Parameters:    Size  Location     Type
 14304 ;;  dividend        8    4[COMRAM] unsigned long long 
 14305 ;;  divisor         8   12[COMRAM] unsigned long long 
 14306 ;; Auto vars:     Size  Location     Type
 14307 ;;  quotient        8   20[COMRAM] unsigned long long 
 14308 ;;  counter         1   28[COMRAM] unsigned char 
 14309 ;; Return value:  Size  Location     Type
 14310 ;;                  8    4[COMRAM] unsigned long long 
 14311 ;; Registers used:
 14312 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14313 ;; Tracked objects:
 14314 ;;		On entry : 0/0
 14315 ;;		On exit  : 0/0
 14316 ;;		Unchanged: 0/0
 14317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14318 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14319 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14321 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14322 ;;Total ram usage:       25 bytes
 14323 ;; Hardware stack levels used:    1
 14324 ;; Hardware stack levels required when called:    4
 14325 ;; This function calls:
 14326 ;;		Nothing
 14327 ;; This function is called by:
 14328 ;;		_utoa
 14329 ;; This function uses a non-reentrant model
 14330 ;;
 14331                           
 14332                           	psect	text59
 14333  00304A                     __ptext59:
 14334                           	opt callstack 0
 14335  00304A                     ___lodiv:
 14336                           	opt callstack 22
 14337  00304A  EE20  F015         	lfsr	2,___lodiv@quotient
 14338  00304E  0E07               	movlw	7
 14339  003050                     u5981:
 14340  003050  6ADE               	clrf	postinc2,c
 14341  003052  06E8               	decf	wreg,f,c
 14342  003054  E2FD               	bc	u5981
 14343  003056  500D               	movf	___lodiv@divisor^0,w,c
 14344  003058  100E               	iorwf	(___lodiv@divisor+1)^0,w,c
 14345  00305A  100F               	iorwf	(___lodiv@divisor+2)^0,w,c
 14346  00305C  1010               	iorwf	(___lodiv@divisor+3)^0,w,c
 14347  00305E  1011               	iorwf	(___lodiv@divisor+4)^0,w,c
 14348  003060  1012               	iorwf	(___lodiv@divisor+5)^0,w,c
 14349  003062  1013               	iorwf	(___lodiv@divisor+6)^0,w,c
 14350  003064  1014               	iorwf	(___lodiv@divisor+7)^0,w,c
 14351  003066  B4D8               	btfsc	status,2,c
 14352  003068  EF38  F018         	goto	u5991
 14353  00306C  EF3A  F018         	goto	u5990
 14354  003070                     u5991:
 14355  003070  EF8C  F018         	goto	l1764
 14356  003074                     u5990:
 14357  003074  0E01               	movlw	1
 14358  003076  6E1D               	movwf	___lodiv@counter^0,c
 14359  003078  EF48  F018         	goto	l6488
 14360  00307C                     l6486:
 14361  00307C  90D8               	bcf	status,0,c
 14362  00307E  360D               	rlcf	___lodiv@divisor^0,f,c
 14363  003080  360E               	rlcf	(___lodiv@divisor+1)^0,f,c
 14364  003082  360F               	rlcf	(___lodiv@divisor+2)^0,f,c
 14365  003084  3610               	rlcf	(___lodiv@divisor+3)^0,f,c
 14366  003086  3611               	rlcf	(___lodiv@divisor+4)^0,f,c
 14367  003088  3612               	rlcf	(___lodiv@divisor+5)^0,f,c
 14368  00308A  3613               	rlcf	(___lodiv@divisor+6)^0,f,c
 14369  00308C  3614               	rlcf	(___lodiv@divisor+7)^0,f,c
 14370  00308E  2A1D               	incf	___lodiv@counter^0,f,c
 14371  003090                     l6488:
 14372  003090  AE14               	btfss	(___lodiv@divisor+7)^0,7,c
 14373  003092  EF4D  F018         	goto	u6001
 14374  003096  EF4F  F018         	goto	u6000
 14375  00309A                     u6001:
 14376  00309A  EF3E  F018         	goto	l6486
 14377  00309E                     u6000:
 14378  00309E                     l6490:
 14379  00309E  90D8               	bcf	status,0,c
 14380  0030A0  3615               	rlcf	___lodiv@quotient^0,f,c
 14381  0030A2  3616               	rlcf	(___lodiv@quotient+1)^0,f,c
 14382  0030A4  3617               	rlcf	(___lodiv@quotient+2)^0,f,c
 14383  0030A6  3618               	rlcf	(___lodiv@quotient+3)^0,f,c
 14384  0030A8  3619               	rlcf	(___lodiv@quotient+4)^0,f,c
 14385  0030AA  361A               	rlcf	(___lodiv@quotient+5)^0,f,c
 14386  0030AC  361B               	rlcf	(___lodiv@quotient+6)^0,f,c
 14387  0030AE  361C               	rlcf	(___lodiv@quotient+7)^0,f,c
 14388  0030B0  500D               	movf	___lodiv@divisor^0,w,c
 14389  0030B2  5C05               	subwf	___lodiv@dividend^0,w,c
 14390  0030B4  500E               	movf	(___lodiv@divisor+1)^0,w,c
 14391  0030B6  5806               	subwfb	(___lodiv@dividend+1)^0,w,c
 14392  0030B8  500F               	movf	(___lodiv@divisor+2)^0,w,c
 14393  0030BA  5807               	subwfb	(___lodiv@dividend+2)^0,w,c
 14394  0030BC  5010               	movf	(___lodiv@divisor+3)^0,w,c
 14395  0030BE  5808               	subwfb	(___lodiv@dividend+3)^0,w,c
 14396  0030C0  5011               	movf	(___lodiv@divisor+4)^0,w,c
 14397  0030C2  5809               	subwfb	(___lodiv@dividend+4)^0,w,c
 14398  0030C4  5012               	movf	(___lodiv@divisor+5)^0,w,c
 14399  0030C6  580A               	subwfb	(___lodiv@dividend+5)^0,w,c
 14400  0030C8  5013               	movf	(___lodiv@divisor+6)^0,w,c
 14401  0030CA  580B               	subwfb	(___lodiv@dividend+6)^0,w,c
 14402  0030CC  5014               	movf	(___lodiv@divisor+7)^0,w,c
 14403  0030CE  580C               	subwfb	(___lodiv@dividend+7)^0,w,c
 14404  0030D0  A0D8               	btfss	status,0,c
 14405  0030D2  EF6D  F018         	goto	u6011
 14406  0030D6  EF6F  F018         	goto	u6010
 14407  0030DA                     u6011:
 14408  0030DA  EF80  F018         	goto	l6498
 14409  0030DE                     u6010:
 14410  0030DE  500D               	movf	___lodiv@divisor^0,w,c
 14411  0030E0  5E05               	subwf	___lodiv@dividend^0,f,c
 14412  0030E2  500E               	movf	(___lodiv@divisor+1)^0,w,c
 14413  0030E4  5A06               	subwfb	(___lodiv@dividend+1)^0,f,c
 14414  0030E6  500F               	movf	(___lodiv@divisor+2)^0,w,c
 14415  0030E8  5A07               	subwfb	(___lodiv@dividend+2)^0,f,c
 14416  0030EA  5010               	movf	(___lodiv@divisor+3)^0,w,c
 14417  0030EC  5A08               	subwfb	(___lodiv@dividend+3)^0,f,c
 14418  0030EE  5011               	movf	(___lodiv@divisor+4)^0,w,c
 14419  0030F0  5A09               	subwfb	(___lodiv@dividend+4)^0,f,c
 14420  0030F2  5012               	movf	(___lodiv@divisor+5)^0,w,c
 14421  0030F4  5A0A               	subwfb	(___lodiv@dividend+5)^0,f,c
 14422  0030F6  5013               	movf	(___lodiv@divisor+6)^0,w,c
 14423  0030F8  5A0B               	subwfb	(___lodiv@dividend+6)^0,f,c
 14424  0030FA  5014               	movf	(___lodiv@divisor+7)^0,w,c
 14425  0030FC  5A0C               	subwfb	(___lodiv@dividend+7)^0,f,c
 14426  0030FE  8015               	bsf	___lodiv@quotient^0,0,c
 14427  003100                     l6498:
 14428  003100  90D8               	bcf	status,0,c
 14429  003102  3214               	rrcf	(___lodiv@divisor+7)^0,f,c
 14430  003104  3213               	rrcf	(___lodiv@divisor+6)^0,f,c
 14431  003106  3212               	rrcf	(___lodiv@divisor+5)^0,f,c
 14432  003108  3211               	rrcf	(___lodiv@divisor+4)^0,f,c
 14433  00310A  3210               	rrcf	(___lodiv@divisor+3)^0,f,c
 14434  00310C  320F               	rrcf	(___lodiv@divisor+2)^0,f,c
 14435  00310E  320E               	rrcf	(___lodiv@divisor+1)^0,f,c
 14436  003110  320D               	rrcf	___lodiv@divisor^0,f,c
 14437  003112  2E1D               	decfsz	___lodiv@counter^0,f,c
 14438  003114  EF4F  F018         	goto	l6490
 14439  003118                     l1764:
 14440  003118  C015  F005         	movff	___lodiv@quotient,?___lodiv
 14441  00311C  C016  F006         	movff	___lodiv@quotient+1,?___lodiv+1
 14442  003120  C017  F007         	movff	___lodiv@quotient+2,?___lodiv+2
 14443  003124  C018  F008         	movff	___lodiv@quotient+3,?___lodiv+3
 14444  003128  C019  F009         	movff	___lodiv@quotient+4,?___lodiv+4
 14445  00312C  C01A  F00A         	movff	___lodiv@quotient+5,?___lodiv+5
 14446  003130  C01B  F00B         	movff	___lodiv@quotient+6,?___lodiv+6
 14447  003134  C01C  F00C         	movff	___lodiv@quotient+7,?___lodiv+7
 14448  003138  0012               	return		;funcret
 14449  00313A                     __end_of___lodiv:
 14450                           	opt callstack 0
 14451                           
 14452 ;; *************** function _stoa *****************
 14453 ;; Defined at:
 14454 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 14455 ;; Parameters:    Size  Location     Type
 14456 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
 14457 ;;		 -> NULL(0), 
 14458 ;;  s               2   17[COMRAM] PTR unsigned char 
 14459 ;;		 -> ?_printf(2), ValidateCmd@ConfName_1542(20), ValidateCmd@ConfName_1538(20), ValidateCmd@ConfName(20), 
 14460 ;;		 -> STR_71(9), STR_70(12), InitialiseString@RevNum(2), InitialiseString@PartNum(19), 
 14461 ;;		 -> InitialiseString@SerialNum(11), Command(16), 
 14462 ;; Auto vars:     Size  Location     Type
 14463 ;;  nuls            7   20[COMRAM] unsigned char [7]
 14464 ;;  l               2   35[COMRAM] int 
 14465 ;;  p               2   33[COMRAM] int 
 14466 ;;  cp              2   31[COMRAM] PTR unsigned char 
 14467 ;;		 -> ?_printf(2), stoa@nuls(7), ValidateCmd@ConfName_1542(20), ValidateCmd@ConfName_1538(20), 
 14468 ;;		 -> ValidateCmd@ConfName(20), STR_71(9), STR_70(12), InitialiseString@RevNum(2), 
 14469 ;;		 -> InitialiseString@PartNum(19), InitialiseString@SerialNum(11), Command(16), 
 14470 ;;  w               2   29[COMRAM] int 
 14471 ;;  i               2   27[COMRAM] int 
 14472 ;; Return value:  Size  Location     Type
 14473 ;;                  2   15[COMRAM] int 
 14474 ;; Registers used:
 14475 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14476 ;; Tracked objects:
 14477 ;;		On entry : 0/0
 14478 ;;		On exit  : 0/0
 14479 ;;		Unchanged: 0/0
 14480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14481 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14482 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14483 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14484 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14485 ;;Total ram usage:       22 bytes
 14486 ;; Hardware stack levels used:    1
 14487 ;; Hardware stack levels required when called:    7
 14488 ;; This function calls:
 14489 ;;		_fputc
 14490 ;;		_strlen
 14491 ;; This function is called by:
 14492 ;;		_vfpfcnvrt
 14493 ;; This function uses a non-reentrant model
 14494 ;;
 14495                           
 14496                           	psect	text60
 14497  002418                     __ptext60:
 14498                           	opt callstack 0
 14499  002418                     _stoa:
 14500                           	opt callstack 20
 14501  002418                     
 14502                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
 14503  002418  EE21  F086         	lfsr	2,stoa@F1139
 14504  00241C  EE10  F015         	lfsr	1,stoa@nuls
 14505  002420  0E06               	movlw	6
 14506  002422                     u6221:
 14507  002422  CFDB FFE3          	movff	plusw2,plusw1
 14508  002426  06E8               	decf	wreg,f,c
 14509  002428  E2FC               	bc	u6221
 14510  00242A                     
 14511                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
 14512  00242A  C012  F020         	movff	stoa@s,stoa@cp
 14513  00242E  C013  F021         	movff	stoa@s+1,stoa@cp+1
 14514  002432                     
 14515                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
 14516  002432  5020               	movf	stoa@cp^0,w,c
 14517  002434  1021               	iorwf	(stoa@cp+1)^0,w,c
 14518  002436  A4D8               	btfss	status,2,c
 14519  002438  EF20  F012         	goto	u6231
 14520  00243C  EF22  F012         	goto	u6230
 14521  002440                     u6231:
 14522  002440  EF26  F012         	goto	l6600
 14523  002444                     u6230:
 14524  002444                     
 14525                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
 14526  002444  0E15               	movlw	low stoa@nuls
 14527  002446  6E20               	movwf	stoa@cp^0,c
 14528  002448  0E00               	movlw	high stoa@nuls
 14529  00244A  6E21               	movwf	(stoa@cp+1)^0,c
 14530  00244C                     l6600:
 14531                           
 14532                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
 14533  00244C  C020  F005         	movff	stoa@cp,strlen@s
 14534  002450  C021  F006         	movff	stoa@cp+1,strlen@s+1
 14535  002454  EC5D  F020         	call	_strlen	;wreg free
 14536  002458  C005  F024         	movff	?_strlen,stoa@l
 14537  00245C  C006  F025         	movff	?_strlen+1,stoa@l+1
 14538  002460                     
 14539                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
 14540  002460  C0CF  F022         	movff	_prec,stoa@p
 14541  002464  C0D0  F023         	movff	_prec+1,stoa@p+1
 14542  002468                     
 14543                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
 14544  002468  BE23               	btfsc	(stoa@p+1)^0,7,c
 14545  00246A  EF39  F012         	goto	u6241
 14546  00246E  EF3B  F012         	goto	u6240
 14547  002472                     u6241:
 14548  002472  EF50  F012         	goto	l1223
 14549  002476                     u6240:
 14550  002476  5024               	movf	stoa@l^0,w,c
 14551  002478  5C22               	subwf	stoa@p^0,w,c
 14552  00247A  5023               	movf	(stoa@p+1)^0,w,c
 14553  00247C  0A80               	xorlw	128
 14554  00247E  6E14               	movwf	??_stoa^0,c
 14555  002480  5025               	movf	(stoa@l+1)^0,w,c
 14556  002482  0A80               	xorlw	128
 14557  002484  5814               	subwfb	??_stoa^0,w,c
 14558  002486  A0D8               	btfss	status,0,c
 14559  002488  EF48  F012         	goto	u6251
 14560  00248C  EF4A  F012         	goto	u6250
 14561  002490                     u6251:
 14562  002490  EF4C  F012         	goto	l1221
 14563  002494                     u6250:
 14564  002494  EF50  F012         	goto	l1223
 14565  002498                     l1221:
 14566  002498  C022  F024         	movff	stoa@p,stoa@l
 14567  00249C  C023  F025         	movff	stoa@p+1,stoa@l+1
 14568  0024A0                     l1223:
 14569                           
 14570                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
 14571  0024A0  C024  F022         	movff	stoa@l,stoa@p
 14572  0024A4  C025  F023         	movff	stoa@l+1,stoa@p+1
 14573                           
 14574                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
 14575  0024A8  C0CD  F01E         	movff	_width,stoa@w
 14576  0024AC  C0CE  F01F         	movff	_width+1,stoa@w+1
 14577                           
 14578                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
 14579  0024B0  B057               	btfsc	_flags^0,0,c
 14580  0024B2  EF5D  F012         	goto	u6261
 14581  0024B6  EF5F  F012         	goto	u6260
 14582  0024BA                     u6261:
 14583  0024BA  EF7C  F012         	goto	l6616
 14584  0024BE                     u6260:
 14585  0024BE  EF6D  F012         	goto	l6614
 14586  0024C2                     l6610:
 14587                           
 14588                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
 14589  0024C2  0E00               	movlw	0
 14590  0024C4  6E08               	movwf	(fputc@c+1)^0,c
 14591  0024C6  0E20               	movlw	32
 14592  0024C8  6E07               	movwf	fputc@c^0,c
 14593  0024CA  C010  F009         	movff	stoa@fp,fputc@fp
 14594  0024CE  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
 14595  0024D2  ECD2  F01C         	call	_fputc	;wreg free
 14596  0024D6                     
 14597                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
 14598  0024D6  4A24               	infsnz	stoa@l^0,f,c
 14599  0024D8  2A25               	incf	(stoa@l+1)^0,f,c
 14600  0024DA                     l6614:
 14601                           
 14602                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
 14603  0024DA  501E               	movf	stoa@w^0,w,c
 14604  0024DC  5C24               	subwf	stoa@l^0,w,c
 14605  0024DE  5025               	movf	(stoa@l+1)^0,w,c
 14606  0024E0  0A80               	xorlw	128
 14607  0024E2  6E14               	movwf	??_stoa^0,c
 14608  0024E4  501F               	movf	(stoa@w+1)^0,w,c
 14609  0024E6  0A80               	xorlw	128
 14610  0024E8  5814               	subwfb	??_stoa^0,w,c
 14611  0024EA  A0D8               	btfss	status,0,c
 14612  0024EC  EF7A  F012         	goto	u6271
 14613  0024F0  EF7C  F012         	goto	u6270
 14614  0024F4                     u6271:
 14615  0024F4  EF61  F012         	goto	l6610
 14616  0024F8                     u6270:
 14617  0024F8                     l6616:
 14618                           
 14619                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
 14620  0024F8  0E00               	movlw	0
 14621  0024FA  6E1D               	movwf	(stoa@i+1)^0,c
 14622  0024FC  0E00               	movlw	0
 14623  0024FE  6E1C               	movwf	stoa@i^0,c
 14624                           
 14625                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 14626  002500  EFA1  F012         	goto	l6624
 14627  002504                     l6618:
 14628                           
 14629                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
 14630  002504  C020  FFF6         	movff	stoa@cp,tblptrl
 14631  002508  C021  FFF7         	movff	stoa@cp+1,tblptrh
 14632  00250C  0E00               	movlw	low (__mediumconst shr (0+16))
 14633  00250E  6EF8               	movwf	tblptru,c
 14634  002510  0E0E               	movlw	(high __ramtop+-1)
 14635  002512  64F7               	cpfsgt	tblptrh,c
 14636  002514  D003               	bra	u6287
 14637  002516  0008               	tblrd		*
 14638  002518  50F5               	movf	tablat,w,c
 14639  00251A  D005               	bra	u6280
 14640  00251C                     u6287:
 14641  00251C  CFF6 FFE9          	movff	tblptrl,fsr0l
 14642  002520  CFF7 FFEA          	movff	tblptrh,fsr0h
 14643  002524  50EF               	movf	indf0,w,c
 14644  002526                     u6280:
 14645  002526  6E14               	movwf	??_stoa^0,c
 14646  002528  5014               	movf	??_stoa^0,w,c
 14647  00252A  6E07               	movwf	fputc@c^0,c
 14648  00252C  6A08               	clrf	(fputc@c+1)^0,c
 14649  00252E  C010  F009         	movff	stoa@fp,fputc@fp
 14650  002532  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
 14651  002536  ECD2  F01C         	call	_fputc	;wreg free
 14652  00253A                     
 14653                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
 14654  00253A  4A20               	infsnz	stoa@cp^0,f,c
 14655  00253C  2A21               	incf	(stoa@cp+1)^0,f,c
 14656  00253E                     
 14657                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
 14658  00253E  4A1C               	infsnz	stoa@i^0,f,c
 14659  002540  2A1D               	incf	(stoa@i+1)^0,f,c
 14660  002542                     l6624:
 14661                           
 14662                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 14663  002542  5022               	movf	stoa@p^0,w,c
 14664  002544  5C1C               	subwf	stoa@i^0,w,c
 14665  002546  501D               	movf	(stoa@i+1)^0,w,c
 14666  002548  0A80               	xorlw	128
 14667  00254A  6E14               	movwf	??_stoa^0,c
 14668  00254C  5023               	movf	(stoa@p+1)^0,w,c
 14669  00254E  0A80               	xorlw	128
 14670  002550  5814               	subwfb	??_stoa^0,w,c
 14671  002552  A0D8               	btfss	status,0,c
 14672  002554  EFAE  F012         	goto	u6291
 14673  002558  EFB0  F012         	goto	u6290
 14674  00255C                     u6291:
 14675  00255C  EF82  F012         	goto	l6618
 14676  002560                     u6290:
 14677  002560                     
 14678                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
 14679  002560  A057               	btfss	_flags^0,0,c
 14680  002562  EFB5  F012         	goto	u6301
 14681  002566  EFB7  F012         	goto	u6300
 14682  00256A                     u6301:
 14683  00256A  EFD4  F012         	goto	l1233
 14684  00256E                     u6300:
 14685  00256E  EFC5  F012         	goto	l6632
 14686  002572                     l6628:
 14687                           
 14688                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
 14689  002572  0E00               	movlw	0
 14690  002574  6E08               	movwf	(fputc@c+1)^0,c
 14691  002576  0E20               	movlw	32
 14692  002578  6E07               	movwf	fputc@c^0,c
 14693  00257A  C010  F009         	movff	stoa@fp,fputc@fp
 14694  00257E  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
 14695  002582  ECD2  F01C         	call	_fputc	;wreg free
 14696  002586                     
 14697                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
 14698  002586  4A24               	infsnz	stoa@l^0,f,c
 14699  002588  2A25               	incf	(stoa@l+1)^0,f,c
 14700  00258A                     l6632:
 14701                           
 14702                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
 14703  00258A  501E               	movf	stoa@w^0,w,c
 14704  00258C  5C24               	subwf	stoa@l^0,w,c
 14705  00258E  5025               	movf	(stoa@l+1)^0,w,c
 14706  002590  0A80               	xorlw	128
 14707  002592  6E14               	movwf	??_stoa^0,c
 14708  002594  501F               	movf	(stoa@w+1)^0,w,c
 14709  002596  0A80               	xorlw	128
 14710  002598  5814               	subwfb	??_stoa^0,w,c
 14711  00259A  A0D8               	btfss	status,0,c
 14712  00259C  EFD2  F012         	goto	u6311
 14713  0025A0  EFD4  F012         	goto	u6310
 14714  0025A4                     u6311:
 14715  0025A4  EFB9  F012         	goto	l6628
 14716  0025A8                     u6310:
 14717  0025A8                     l1233:
 14718                           
 14719                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
 14720  0025A8  C024  F010         	movff	stoa@l,?_stoa
 14721  0025AC  C025  F011         	movff	stoa@l+1,?_stoa+1
 14722  0025B0  0012               	return		;funcret
 14723  0025B2                     __end_of_stoa:
 14724                           	opt callstack 0
 14725                           
 14726 ;; *************** function _dtoa *****************
 14727 ;; Defined at:
 14728 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 14729 ;; Parameters:    Size  Location     Type
 14730 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
 14731 ;;		 -> NULL(0), 
 14732 ;;  d               8   35[COMRAM] long long 
 14733 ;; Auto vars:     Size  Location     Type
 14734 ;;  n               8   59[COMRAM] long long 
 14735 ;;  i               2   67[COMRAM] int 
 14736 ;;  s               2   57[COMRAM] int 
 14737 ;;  w               2   55[COMRAM] int 
 14738 ;;  p               2   53[COMRAM] int 
 14739 ;; Return value:  Size  Location     Type
 14740 ;;                  2   33[COMRAM] int 
 14741 ;; Registers used:
 14742 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14743 ;; Tracked objects:
 14744 ;;		On entry : 0/0
 14745 ;;		On exit  : 0/0
 14746 ;;		Unchanged: 0/0
 14747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14748 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14749 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14750 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14751 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14752 ;;Total ram usage:       36 bytes
 14753 ;; Hardware stack levels used:    1
 14754 ;; Hardware stack levels required when called:    9
 14755 ;; This function calls:
 14756 ;;		___aodiv
 14757 ;;		___aomod
 14758 ;;		_abs
 14759 ;;		_pad
 14760 ;; This function is called by:
 14761 ;;		_vfpfcnvrt
 14762 ;; This function uses a non-reentrant model
 14763 ;;
 14764                           
 14765                           	psect	text61
 14766  00121A                     __ptext61:
 14767                           	opt callstack 0
 14768  00121A                     _dtoa:
 14769                           	opt callstack 18
 14770  00121A                     
 14771                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
 14772  00121A  C024  F03C         	movff	dtoa@d,dtoa@n
 14773  00121E  C025  F03D         	movff	dtoa@d+1,dtoa@n+1
 14774  001222  C026  F03E         	movff	dtoa@d+2,dtoa@n+2
 14775  001226  C027  F03F         	movff	dtoa@d+3,dtoa@n+3
 14776  00122A  C028  F040         	movff	dtoa@d+4,dtoa@n+4
 14777  00122E  C029  F041         	movff	dtoa@d+5,dtoa@n+5
 14778  001232  C02A  F042         	movff	dtoa@d+6,dtoa@n+6
 14779  001236  C02B  F043         	movff	dtoa@d+7,dtoa@n+7
 14780  00123A                     
 14781                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 14782  00123A  BE43               	btfsc	(dtoa@n+7)^0,7,c
 14783  00123C  EF22  F009         	goto	u6071
 14784  001240  EF25  F009         	goto	u6070
 14785  001244                     u6071:
 14786  001244  0E01               	movlw	1
 14787  001246  EF26  F009         	goto	u6080
 14788  00124A                     u6070:
 14789  00124A  0E00               	movlw	0
 14790  00124C                     u6080:
 14791  00124C  6E3A               	movwf	dtoa@s^0,c
 14792  00124E  6A3B               	clrf	(dtoa@s+1)^0,c
 14793                           
 14794                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 14795  001250  503A               	movf	dtoa@s^0,w,c
 14796  001252  103B               	iorwf	(dtoa@s+1)^0,w,c
 14797  001254  B4D8               	btfsc	status,2,c
 14798  001256  EF2F  F009         	goto	u6091
 14799  00125A  EF31  F009         	goto	u6090
 14800  00125E                     u6091:
 14801  00125E  EF41  F009         	goto	l6536
 14802  001262                     u6090:
 14803  001262                     
 14804                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 14805  001262  1E43               	comf	(dtoa@n+7)^0,f,c
 14806  001264  1E42               	comf	(dtoa@n+6)^0,f,c
 14807  001266  1E41               	comf	(dtoa@n+5)^0,f,c
 14808  001268  1E40               	comf	(dtoa@n+4)^0,f,c
 14809  00126A  1E3F               	comf	(dtoa@n+3)^0,f,c
 14810  00126C  1E3E               	comf	(dtoa@n+2)^0,f,c
 14811  00126E  1E3D               	comf	(dtoa@n+1)^0,f,c
 14812  001270  6C3C               	negf	dtoa@n^0,c
 14813  001272  0E00               	movlw	0
 14814  001274  223D               	addwfc	(dtoa@n+1)^0,f,c
 14815  001276  223E               	addwfc	(dtoa@n+2)^0,f,c
 14816  001278  223F               	addwfc	(dtoa@n+3)^0,f,c
 14817  00127A  2240               	addwfc	(dtoa@n+4)^0,f,c
 14818  00127C  2241               	addwfc	(dtoa@n+5)^0,f,c
 14819  00127E  2242               	addwfc	(dtoa@n+6)^0,f,c
 14820  001280  2243               	addwfc	(dtoa@n+7)^0,f,c
 14821  001282                     l6536:
 14822                           
 14823                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 14824  001282  0100               	movlb	0	; () banked
 14825  001284  BFD0               	btfsc	(_prec+1)& (0+255),7,b
 14826  001286  EF47  F009         	goto	u6101
 14827  00128A  EF49  F009         	goto	u6100
 14828  00128E                     u6101:
 14829  00128E  EF4A  F009         	goto	l6540
 14830  001292                     u6100:
 14831  001292                     
 14832                           ; BSR set to: 0
 14833                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 14834  001292  9257               	bcf	_flags^0,1,c
 14835  001294                     l6540:
 14836                           
 14837                           ; BSR set to: 0
 14838                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 14839  001294  BFD0               	btfsc	(_prec+1)& (0+255),7,b
 14840  001296  EF57  F009         	goto	u6110
 14841  00129A  51D0               	movf	(_prec+1)& (0+255),w,b
 14842  00129C  E106               	bnz	u6111
 14843  00129E  05CF               	decf	_prec& (0+255),w,b
 14844  0012A0  B0D8               	btfsc	status,0,c
 14845  0012A2  EF55  F009         	goto	u6111
 14846  0012A6  EF57  F009         	goto	u6110
 14847  0012AA                     u6111:
 14848  0012AA  EF5D  F009         	goto	l1194
 14849  0012AE                     u6110:
 14850  0012AE                     
 14851                           ; BSR set to: 0
 14852  0012AE  0E00               	movlw	0
 14853  0012B0  6E37               	movwf	(dtoa@p+1)^0,c
 14854  0012B2  0E01               	movlw	1
 14855  0012B4  6E36               	movwf	dtoa@p^0,c
 14856  0012B6  EF61  F009         	goto	l1196
 14857  0012BA                     l1194:
 14858                           
 14859                           ; BSR set to: 0
 14860  0012BA  C0CF  F036         	movff	_prec,dtoa@p
 14861  0012BE  C0D0  F037         	movff	_prec+1,dtoa@p+1
 14862  0012C2                     l1196:
 14863                           
 14864                           ; BSR set to: 0
 14865                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 14866  0012C2  C0CD  F038         	movff	_width,dtoa@w
 14867  0012C6  C0CE  F039         	movff	_width+1,dtoa@w+1
 14868  0012CA                     
 14869                           ; BSR set to: 0
 14870                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 14871  0012CA  503A               	movf	dtoa@s^0,w,c
 14872  0012CC  103B               	iorwf	(dtoa@s+1)^0,w,c
 14873  0012CE  A4D8               	btfss	status,2,c
 14874  0012D0  EF6C  F009         	goto	u6121
 14875  0012D4  EF6E  F009         	goto	u6120
 14876  0012D8                     u6121:
 14877  0012D8  EF75  F009         	goto	l6548
 14878  0012DC                     u6120:
 14879  0012DC                     
 14880                           ; BSR set to: 0
 14881  0012DC  A457               	btfss	_flags^0,2,c
 14882  0012DE  EF73  F009         	goto	u6131
 14883  0012E2  EF75  F009         	goto	u6130
 14884  0012E6                     u6131:
 14885  0012E6  EF78  F009         	goto	l6550
 14886  0012EA                     u6130:
 14887  0012EA                     l6548:
 14888                           
 14889                           ; BSR set to: 0
 14890                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 14891  0012EA  0638               	decf	dtoa@w^0,f,c
 14892  0012EC  A0D8               	btfss	status,0,c
 14893  0012EE  0639               	decf	(dtoa@w+1)^0,f,c
 14894  0012F0                     l6550:
 14895                           
 14896                           ; BSR set to: 0
 14897                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 14898  0012F0  0E00               	movlw	0
 14899  0012F2  6E45               	movwf	(dtoa@i+1)^0,c
 14900  0012F4  0E1F               	movlw	31
 14901  0012F6  6E44               	movwf	dtoa@i^0,c
 14902  0012F8                     
 14903                           ; BSR set to: 0
 14904                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 14905  0012F8  0E00               	movlw	0
 14906  0012FA  0102               	movlb	2	; () banked
 14907  0012FC  6FFC               	movwf	(_dbuf+31)& (0+255),b
 14908                           
 14909                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 14910  0012FE  EFFD  F009         	goto	l6564
 14911  001302                     l6554:
 14912                           
 14913                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 14914  001302  0644               	decf	dtoa@i^0,f,c
 14915  001304  A0D8               	btfss	status,0,c
 14916  001306  0645               	decf	(dtoa@i+1)^0,f,c
 14917  001308                     
 14918                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 14919  001308  0EDD               	movlw	low _dbuf
 14920  00130A  2444               	addwf	dtoa@i^0,w,c
 14921  00130C  6ED9               	movwf	fsr2l,c
 14922  00130E  0E02               	movlw	high _dbuf
 14923  001310  2045               	addwfc	(dtoa@i+1)^0,w,c
 14924  001312  6EDA               	movwf	fsr2h,c
 14925  001314  C03C  F005         	movff	dtoa@n,___aomod@dividend
 14926  001318  C03D  F006         	movff	dtoa@n+1,___aomod@dividend+1
 14927  00131C  C03E  F007         	movff	dtoa@n+2,___aomod@dividend+2
 14928  001320  C03F  F008         	movff	dtoa@n+3,___aomod@dividend+3
 14929  001324  C040  F009         	movff	dtoa@n+4,___aomod@dividend+4
 14930  001328  C041  F00A         	movff	dtoa@n+5,___aomod@dividend+5
 14931  00132C  C042  F00B         	movff	dtoa@n+6,___aomod@dividend+6
 14932  001330  C043  F00C         	movff	dtoa@n+7,___aomod@dividend+7
 14933  001334  0E0A               	movlw	10
 14934  001336  6E0D               	movwf	___aomod@divisor^0,c
 14935  001338  0E00               	movlw	0
 14936  00133A  6E0E               	movwf	(___aomod@divisor+1)^0,c
 14937  00133C  0E00               	movlw	0
 14938  00133E  6E0F               	movwf	(___aomod@divisor+2)^0,c
 14939  001340  0E00               	movlw	0
 14940  001342  6E10               	movwf	(___aomod@divisor+3)^0,c
 14941  001344  0E00               	movlw	0
 14942  001346  6E11               	movwf	(___aomod@divisor+4)^0,c
 14943  001348  0E00               	movlw	0
 14944  00134A  6E12               	movwf	(___aomod@divisor+5)^0,c
 14945  00134C  0E00               	movlw	0
 14946  00134E  6E13               	movwf	(___aomod@divisor+6)^0,c
 14947  001350  0E00               	movlw	0
 14948  001352  6E14               	movwf	(___aomod@divisor+7)^0,c
 14949  001354  EC28  F015         	call	___aomod	;wreg free
 14950  001358  C005  F02C         	movff	?___aomod,??_dtoa
 14951  00135C  C006  F02D         	movff	?___aomod+1,??_dtoa+1
 14952  001360  C007  F02E         	movff	?___aomod+2,??_dtoa+2
 14953  001364  C008  F02F         	movff	?___aomod+3,??_dtoa+3
 14954  001368  C009  F030         	movff	?___aomod+4,??_dtoa+4
 14955  00136C  C00A  F031         	movff	?___aomod+5,??_dtoa+5
 14956  001370  C00B  F032         	movff	?___aomod+6,??_dtoa+6
 14957  001374  C00C  F033         	movff	?___aomod+7,??_dtoa+7
 14958  001378  C02C  F017         	movff	??_dtoa,abs@a
 14959  00137C  C02E  F018         	movff	??_dtoa+2,abs@a+1
 14960  001380  ECBB  F021         	call	_abs	;wreg free
 14961  001384  5017               	movf	?_abs^0,w,c
 14962  001386  0F30               	addlw	48
 14963  001388  6EDF               	movwf	indf2,c
 14964  00138A                     
 14965                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 14966  00138A  0636               	decf	dtoa@p^0,f,c
 14967  00138C  A0D8               	btfss	status,0,c
 14968  00138E  0637               	decf	(dtoa@p+1)^0,f,c
 14969  001390                     
 14970                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 14971  001390  0638               	decf	dtoa@w^0,f,c
 14972  001392  A0D8               	btfss	status,0,c
 14973  001394  0639               	decf	(dtoa@w+1)^0,f,c
 14974  001396                     
 14975                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 14976  001396  C03C  F005         	movff	dtoa@n,___aodiv@dividend
 14977  00139A  C03D  F006         	movff	dtoa@n+1,___aodiv@dividend+1
 14978  00139E  C03E  F007         	movff	dtoa@n+2,___aodiv@dividend+2
 14979  0013A2  C03F  F008         	movff	dtoa@n+3,___aodiv@dividend+3
 14980  0013A6  C040  F009         	movff	dtoa@n+4,___aodiv@dividend+4
 14981  0013AA  C041  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
 14982  0013AE  C042  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
 14983  0013B2  C043  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
 14984  0013B6  0E0A               	movlw	10
 14985  0013B8  6E0D               	movwf	___aodiv@divisor^0,c
 14986  0013BA  0E00               	movlw	0
 14987  0013BC  6E0E               	movwf	(___aodiv@divisor+1)^0,c
 14988  0013BE  0E00               	movlw	0
 14989  0013C0  6E0F               	movwf	(___aodiv@divisor+2)^0,c
 14990  0013C2  0E00               	movlw	0
 14991  0013C4  6E10               	movwf	(___aodiv@divisor+3)^0,c
 14992  0013C6  0E00               	movlw	0
 14993  0013C8  6E11               	movwf	(___aodiv@divisor+4)^0,c
 14994  0013CA  0E00               	movlw	0
 14995  0013CC  6E12               	movwf	(___aodiv@divisor+5)^0,c
 14996  0013CE  0E00               	movlw	0
 14997  0013D0  6E13               	movwf	(___aodiv@divisor+6)^0,c
 14998  0013D2  0E00               	movlw	0
 14999  0013D4  6E14               	movwf	(___aodiv@divisor+7)^0,c
 15000  0013D6  ECA6  F013         	call	___aodiv	;wreg free
 15001  0013DA  C005  F03C         	movff	?___aodiv,dtoa@n
 15002  0013DE  C006  F03D         	movff	?___aodiv+1,dtoa@n+1
 15003  0013E2  C007  F03E         	movff	?___aodiv+2,dtoa@n+2
 15004  0013E6  C008  F03F         	movff	?___aodiv+3,dtoa@n+3
 15005  0013EA  C009  F040         	movff	?___aodiv+4,dtoa@n+4
 15006  0013EE  C00A  F041         	movff	?___aodiv+5,dtoa@n+5
 15007  0013F2  C00B  F042         	movff	?___aodiv+6,dtoa@n+6
 15008  0013F6  C00C  F043         	movff	?___aodiv+7,dtoa@n+7
 15009  0013FA                     l6564:
 15010                           
 15011                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 15012  0013FA  BE45               	btfsc	(dtoa@i+1)^0,7,c
 15013  0013FC  EF08  F00A         	goto	u6141
 15014  001400  5045               	movf	(dtoa@i+1)^0,w,c
 15015  001402  E108               	bnz	u6140
 15016  001404  0444               	decf	dtoa@i^0,w,c
 15017  001406  A0D8               	btfss	status,0,c
 15018  001408  EF08  F00A         	goto	u6141
 15019  00140C  EF0A  F00A         	goto	u6140
 15020  001410                     u6141:
 15021  001410  EF3A  F00A         	goto	l6574
 15022  001414                     u6140:
 15023  001414  503C               	movf	dtoa@n^0,w,c
 15024  001416  103D               	iorwf	(dtoa@n+1)^0,w,c
 15025  001418  103E               	iorwf	(dtoa@n+2)^0,w,c
 15026  00141A  103F               	iorwf	(dtoa@n+3)^0,w,c
 15027  00141C  1040               	iorwf	(dtoa@n+4)^0,w,c
 15028  00141E  1041               	iorwf	(dtoa@n+5)^0,w,c
 15029  001420  1042               	iorwf	(dtoa@n+6)^0,w,c
 15030  001422  1043               	iorwf	(dtoa@n+7)^0,w,c
 15031  001424  A4D8               	btfss	status,2,c
 15032  001426  EF17  F00A         	goto	u6151
 15033  00142A  EF19  F00A         	goto	u6150
 15034  00142E                     u6151:
 15035  00142E  EF81  F009         	goto	l6554
 15036  001432                     u6150:
 15037  001432  BE37               	btfsc	(dtoa@p+1)^0,7,c
 15038  001434  EF26  F00A         	goto	u6160
 15039  001438  5037               	movf	(dtoa@p+1)^0,w,c
 15040  00143A  E106               	bnz	u6161
 15041  00143C  0436               	decf	dtoa@p^0,w,c
 15042  00143E  B0D8               	btfsc	status,0,c
 15043  001440  EF24  F00A         	goto	u6161
 15044  001444  EF26  F00A         	goto	u6160
 15045  001448                     u6161:
 15046  001448  EF81  F009         	goto	l6554
 15047  00144C                     u6160:
 15048  00144C  BE39               	btfsc	(dtoa@w+1)^0,7,c
 15049  00144E  EF31  F00A         	goto	u6171
 15050  001452  5039               	movf	(dtoa@w+1)^0,w,c
 15051  001454  E108               	bnz	u6170
 15052  001456  0438               	decf	dtoa@w^0,w,c
 15053  001458  A0D8               	btfss	status,0,c
 15054  00145A  EF31  F00A         	goto	u6171
 15055  00145E  EF33  F00A         	goto	u6170
 15056  001462                     u6171:
 15057  001462  EF3A  F00A         	goto	l6574
 15058  001466                     u6170:
 15059  001466  B257               	btfsc	_flags^0,1,c
 15060  001468  EF38  F00A         	goto	u6181
 15061  00146C  EF3A  F00A         	goto	u6180
 15062  001470                     u6181:
 15063  001470  EF81  F009         	goto	l6554
 15064  001474                     u6180:
 15065  001474                     l6574:
 15066                           
 15067                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 15068  001474  503A               	movf	dtoa@s^0,w,c
 15069  001476  103B               	iorwf	(dtoa@s+1)^0,w,c
 15070  001478  A4D8               	btfss	status,2,c
 15071  00147A  EF41  F00A         	goto	u6191
 15072  00147E  EF43  F00A         	goto	u6190
 15073  001482                     u6191:
 15074  001482  EF4A  F00A         	goto	l6578
 15075  001486                     u6190:
 15076  001486  A457               	btfss	_flags^0,2,c
 15077  001488  EF48  F00A         	goto	u6201
 15078  00148C  EF4A  F00A         	goto	u6200
 15079  001490                     u6201:
 15080  001490  EF68  F00A         	goto	l6588
 15081  001494                     u6200:
 15082  001494                     l6578:
 15083                           
 15084                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 15085  001494  0644               	decf	dtoa@i^0,f,c
 15086  001496  A0D8               	btfss	status,0,c
 15087  001498  0645               	decf	(dtoa@i+1)^0,f,c
 15088  00149A                     
 15089                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 15090  00149A  503A               	movf	dtoa@s^0,w,c
 15091  00149C  103B               	iorwf	(dtoa@s+1)^0,w,c
 15092  00149E  A4D8               	btfss	status,2,c
 15093  0014A0  EF54  F00A         	goto	u6211
 15094  0014A4  EF56  F00A         	goto	u6210
 15095  0014A8                     u6211:
 15096  0014A8  EF5C  F00A         	goto	l6584
 15097  0014AC                     u6210:
 15098  0014AC  0E00               	movlw	0
 15099  0014AE  6E35               	movwf	(_dtoa$1868+1)^0,c
 15100  0014B0  0E2B               	movlw	43
 15101  0014B2  6E34               	movwf	_dtoa$1868^0,c
 15102  0014B4  EF60  F00A         	goto	l6586
 15103  0014B8                     l6584:
 15104  0014B8  0E00               	movlw	0
 15105  0014BA  6E35               	movwf	(_dtoa$1868+1)^0,c
 15106  0014BC  0E2D               	movlw	45
 15107  0014BE  6E34               	movwf	_dtoa$1868^0,c
 15108  0014C0                     l6586:
 15109  0014C0  0EDD               	movlw	low _dbuf
 15110  0014C2  2444               	addwf	dtoa@i^0,w,c
 15111  0014C4  6ED9               	movwf	fsr2l,c
 15112  0014C6  0E02               	movlw	high _dbuf
 15113  0014C8  2045               	addwfc	(dtoa@i+1)^0,w,c
 15114  0014CA  6EDA               	movwf	fsr2h,c
 15115  0014CC  C034  FFDF         	movff	_dtoa$1868,indf2
 15116  0014D0                     l6588:
 15117                           
 15118                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 15119  0014D0  C022  F017         	movff	dtoa@fp,pad@fp
 15120  0014D4  C023  F018         	movff	dtoa@fp+1,pad@fp+1
 15121  0014D8  0EDD               	movlw	low _dbuf
 15122  0014DA  2444               	addwf	dtoa@i^0,w,c
 15123  0014DC  6E19               	movwf	pad@buf^0,c
 15124  0014DE  0E02               	movlw	high _dbuf
 15125  0014E0  2045               	addwfc	(dtoa@i+1)^0,w,c
 15126  0014E2  6E1A               	movwf	(pad@buf+1)^0,c
 15127  0014E4  C038  F01B         	movff	dtoa@w,pad@p
 15128  0014E8  C039  F01C         	movff	dtoa@w+1,pad@p+1
 15129  0014EC  ECAC  F01A         	call	_pad	;wreg free
 15130  0014F0  C017  F022         	movff	?_pad,?_dtoa
 15131  0014F4  C018  F023         	movff	?_pad+1,?_dtoa+1
 15132  0014F8  0012               	return		;funcret
 15133  0014FA                     __end_of_dtoa:
 15134                           	opt callstack 0
 15135                           
 15136 ;; *************** function _pad *****************
 15137 ;; Defined at:
 15138 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 15139 ;; Parameters:    Size  Location     Type
 15140 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
 15141 ;;		 -> NULL(0), 
 15142 ;;  buf             2   24[COMRAM] PTR unsigned char 
 15143 ;;		 -> dbuf(32), 
 15144 ;;  p               2   26[COMRAM] int 
 15145 ;; Auto vars:     Size  Location     Type
 15146 ;;  w               2   31[COMRAM] int 
 15147 ;;  i               2   29[COMRAM] int 
 15148 ;; Return value:  Size  Location     Type
 15149 ;;                  2   22[COMRAM] int 
 15150 ;; Registers used:
 15151 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15152 ;; Tracked objects:
 15153 ;;		On entry : 0/0
 15154 ;;		On exit  : 0/0
 15155 ;;		Unchanged: 0/0
 15156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15157 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15158 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15159 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15160 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15161 ;;Total ram usage:       11 bytes
 15162 ;; Hardware stack levels used:    1
 15163 ;; Hardware stack levels required when called:    8
 15164 ;; This function calls:
 15165 ;;		_fputc
 15166 ;;		_fputs
 15167 ;;		_strlen
 15168 ;; This function is called by:
 15169 ;;		_dtoa
 15170 ;;		_utoa
 15171 ;;		_xtoa
 15172 ;; This function uses a non-reentrant model
 15173 ;;
 15174                           
 15175                           	psect	text62
 15176  003558                     __ptext62:
 15177                           	opt callstack 0
 15178  003558                     _pad:
 15179                           	opt callstack 18
 15180  003558                     
 15181                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 15182  003558  A057               	btfss	_flags^0,0,c
 15183  00355A  EFB1  F01A         	goto	u5711
 15184  00355E  EFB3  F01A         	goto	u5710
 15185  003562                     u5711:
 15186  003562  EFBD  F01A         	goto	l6350
 15187  003566                     u5710:
 15188  003566                     
 15189                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 15190  003566  C019  F010         	movff	pad@buf,fputs@s
 15191  00356A  C01A  F011         	movff	pad@buf+1,fputs@s+1
 15192  00356E  C017  F012         	movff	pad@fp,fputs@fp
 15193  003572  C018  F013         	movff	pad@fp+1,fputs@fp+1
 15194  003576  EC16  F021         	call	_fputs	;wreg free
 15195  00357A                     l6350:
 15196                           
 15197                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 15198  00357A  BE1C               	btfsc	(pad@p+1)^0,7,c
 15199  00357C  EFC2  F01A         	goto	u5721
 15200  003580  EFC4  F01A         	goto	u5720
 15201  003584                     u5721:
 15202  003584  EFCA  F01A         	goto	l6354
 15203  003588                     u5720:
 15204  003588  C01B  F020         	movff	pad@p,pad@w
 15205  00358C  C01C  F021         	movff	pad@p+1,pad@w+1
 15206  003590  EFCE  F01A         	goto	l1183
 15207  003594                     l6354:
 15208  003594  0E00               	movlw	0
 15209  003596  6E21               	movwf	(pad@w+1)^0,c
 15210  003598  0E00               	movlw	0
 15211  00359A  6E20               	movwf	pad@w^0,c
 15212  00359C                     l1183:
 15213                           
 15214                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 15215  00359C  0E00               	movlw	0
 15216  00359E  6E1F               	movwf	(pad@i+1)^0,c
 15217  0035A0  0E00               	movlw	0
 15218  0035A2  6E1E               	movwf	pad@i^0,c
 15219                           
 15220                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 15221  0035A4  EFE0  F01A         	goto	l6360
 15222  0035A8                     l6356:
 15223                           
 15224                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 15225  0035A8  0E00               	movlw	0
 15226  0035AA  6E08               	movwf	(fputc@c+1)^0,c
 15227  0035AC  0E20               	movlw	32
 15228  0035AE  6E07               	movwf	fputc@c^0,c
 15229  0035B0  C017  F009         	movff	pad@fp,fputc@fp
 15230  0035B4  C018  F00A         	movff	pad@fp+1,fputc@fp+1
 15231  0035B8  ECD2  F01C         	call	_fputc	;wreg free
 15232  0035BC                     
 15233                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 15234  0035BC  4A1E               	infsnz	pad@i^0,f,c
 15235  0035BE  2A1F               	incf	(pad@i+1)^0,f,c
 15236  0035C0                     l6360:
 15237                           
 15238                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 15239  0035C0  5020               	movf	pad@w^0,w,c
 15240  0035C2  5C1E               	subwf	pad@i^0,w,c
 15241  0035C4  501F               	movf	(pad@i+1)^0,w,c
 15242  0035C6  0A80               	xorlw	128
 15243  0035C8  6E1D               	movwf	??_pad^0,c
 15244  0035CA  5021               	movf	(pad@w+1)^0,w,c
 15245  0035CC  0A80               	xorlw	128
 15246  0035CE  581D               	subwfb	??_pad^0,w,c
 15247  0035D0  A0D8               	btfss	status,0,c
 15248  0035D2  EFED  F01A         	goto	u5731
 15249  0035D6  EFEF  F01A         	goto	u5730
 15250  0035DA                     u5731:
 15251  0035DA  EFD4  F01A         	goto	l6356
 15252  0035DE                     u5730:
 15253  0035DE                     
 15254                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 15255  0035DE  B057               	btfsc	_flags^0,0,c
 15256  0035E0  EFF4  F01A         	goto	u5741
 15257  0035E4  EFF6  F01A         	goto	u5740
 15258  0035E8                     u5741:
 15259  0035E8  EF00  F01B         	goto	l6364
 15260  0035EC                     u5740:
 15261  0035EC                     
 15262                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 15263  0035EC  C019  F010         	movff	pad@buf,fputs@s
 15264  0035F0  C01A  F011         	movff	pad@buf+1,fputs@s+1
 15265  0035F4  C017  F012         	movff	pad@fp,fputs@fp
 15266  0035F8  C018  F013         	movff	pad@fp+1,fputs@fp+1
 15267  0035FC  EC16  F021         	call	_fputs	;wreg free
 15268  003600                     l6364:
 15269                           
 15270                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 15271  003600  C019  F005         	movff	pad@buf,strlen@s
 15272  003604  C01A  F006         	movff	pad@buf+1,strlen@s+1
 15273  003608  EC5D  F020         	call	_strlen	;wreg free
 15274  00360C  5020               	movf	pad@w^0,w,c
 15275  00360E  2405               	addwf	?_strlen^0,w,c
 15276  003610  6E17               	movwf	?_pad^0,c
 15277  003612  5021               	movf	(pad@w+1)^0,w,c
 15278  003614  2006               	addwfc	(?_strlen+1)^0,w,c
 15279  003616  6E18               	movwf	(?_pad+1)^0,c
 15280  003618  0012               	return		;funcret
 15281  00361A                     __end_of_pad:
 15282                           	opt callstack 0
 15283                           
 15284 ;; *************** function _strlen *****************
 15285 ;; Defined at:
 15286 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 15287 ;; Parameters:    Size  Location     Type
 15288 ;;  s               2    4[COMRAM] PTR const unsigned char 
 15289 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), ValidateCmd@ConfName_1542(20), 
 15290 ;;		 -> ValidateCmd@ConfName_1538(20), ValidateCmd@ConfName(20), STR_71(9), STR_70(12), 
 15291 ;;		 -> InitialiseString@RevNum(2), InitialiseString@PartNum(19), InitialiseString@SerialNum(11), Command(16), 
 15292 ;; Auto vars:     Size  Location     Type
 15293 ;;  a               2    6[COMRAM] PTR const unsigned char 
 15294 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), ValidateCmd@ConfName_1542(20), 
 15295 ;;		 -> ValidateCmd@ConfName_1538(20), ValidateCmd@ConfName(20), STR_71(9), STR_70(12), 
 15296 ;;		 -> InitialiseString@RevNum(2), InitialiseString@PartNum(19), InitialiseString@SerialNum(11), Command(16), 
 15297 ;; Return value:  Size  Location     Type
 15298 ;;                  2    4[COMRAM] unsigned int 
 15299 ;; Registers used:
 15300 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 15301 ;; Tracked objects:
 15302 ;;		On entry : 0/0
 15303 ;;		On exit  : 0/0
 15304 ;;		Unchanged: 0/0
 15305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15306 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15307 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15309 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15310 ;;Total ram usage:        4 bytes
 15311 ;; Hardware stack levels used:    1
 15312 ;; Hardware stack levels required when called:    4
 15313 ;; This function calls:
 15314 ;;		Nothing
 15315 ;; This function is called by:
 15316 ;;		_ReadRX232
 15317 ;;		_SaveCardDat
 15318 ;;		_pad
 15319 ;;		_stoa
 15320 ;;		_strcat
 15321 ;; This function uses a non-reentrant model
 15322 ;;
 15323                           
 15324                           	psect	text63
 15325  0040BA                     __ptext63:
 15326                           	opt callstack 0
 15327  0040BA                     _strlen:
 15328                           	opt callstack 21
 15329  0040BA  C005  F007         	movff	strlen@s,strlen@a
 15330  0040BE  C006  F008         	movff	strlen@s+1,strlen@a+1
 15331  0040C2  EF65  F020         	goto	l6328
 15332  0040C6                     l6326:
 15333  0040C6  4A05               	infsnz	strlen@s^0,f,c
 15334  0040C8  2A06               	incf	(strlen@s+1)^0,f,c
 15335  0040CA                     l6328:
 15336  0040CA  C005  FFF6         	movff	strlen@s,tblptrl
 15337  0040CE  C006  FFF7         	movff	strlen@s+1,tblptrh
 15338  0040D2  0E00               	movlw	low (__mediumconst shr (0+16))
 15339  0040D4  6EF8               	movwf	tblptru,c
 15340  0040D6  0E0E               	movlw	(high __ramtop+-1)
 15341  0040D8  64F7               	cpfsgt	tblptrh,c
 15342  0040DA  D003               	bra	u5667
 15343  0040DC  0008               	tblrd		*
 15344  0040DE  50F5               	movf	tablat,w,c
 15345  0040E0  D005               	bra	u5660
 15346  0040E2                     u5667:
 15347  0040E2  CFF6 FFE9          	movff	tblptrl,fsr0l
 15348  0040E6  CFF7 FFEA          	movff	tblptrh,fsr0h
 15349  0040EA  50EF               	movf	indf0,w,c
 15350  0040EC                     u5660:
 15351  0040EC  0900               	iorlw	0
 15352  0040EE  A4D8               	btfss	status,2,c
 15353  0040F0  EF7C  F020         	goto	u5671
 15354  0040F4  EF7E  F020         	goto	u5670
 15355  0040F8                     u5671:
 15356  0040F8  EF63  F020         	goto	l6326
 15357  0040FC                     u5670:
 15358  0040FC  5007               	movf	strlen@a^0,w,c
 15359  0040FE  5C05               	subwf	strlen@s^0,w,c
 15360  004100  6E05               	movwf	?_strlen^0,c
 15361  004102  5008               	movf	(strlen@a+1)^0,w,c
 15362  004104  5806               	subwfb	(strlen@s+1)^0,w,c
 15363  004106  6E06               	movwf	(?_strlen+1)^0,c
 15364  004108  0012               	return		;funcret
 15365  00410A                     __end_of_strlen:
 15366                           	opt callstack 0
 15367                           
 15368 ;; *************** function _fputs *****************
 15369 ;; Defined at:
 15370 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
 15371 ;; Parameters:    Size  Location     Type
 15372 ;;  s               2   15[COMRAM] PTR const unsigned char 
 15373 ;;		 -> dbuf(32), 
 15374 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
 15375 ;;		 -> NULL(0), 
 15376 ;; Auto vars:     Size  Location     Type
 15377 ;;  i               2   20[COMRAM] int 
 15378 ;;  c               1   19[COMRAM] unsigned char 
 15379 ;; Return value:  Size  Location     Type
 15380 ;;                  2   15[COMRAM] int 
 15381 ;; Registers used:
 15382 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 15383 ;; Tracked objects:
 15384 ;;		On entry : 0/0
 15385 ;;		On exit  : 0/0
 15386 ;;		Unchanged: 0/0
 15387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15388 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15389 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15391 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15392 ;;Total ram usage:        7 bytes
 15393 ;; Hardware stack levels used:    1
 15394 ;; Hardware stack levels required when called:    7
 15395 ;; This function calls:
 15396 ;;		_fputc
 15397 ;; This function is called by:
 15398 ;;		_pad
 15399 ;; This function uses a non-reentrant model
 15400 ;;
 15401                           
 15402                           	psect	text64
 15403  00422C                     __ptext64:
 15404                           	opt callstack 0
 15405  00422C                     _fputs:
 15406                           	opt callstack 18
 15407  00422C  0E00               	movlw	0
 15408  00422E  6E16               	movwf	(fputs@i+1)^0,c
 15409  004230  0E00               	movlw	0
 15410  004232  6E15               	movwf	fputs@i^0,c
 15411  004234  EF27  F021         	goto	l6340
 15412  004238                     l6336:
 15413  004238  C014  F007         	movff	fputs@c,fputc@c
 15414  00423C  6A08               	clrf	(fputc@c+1)^0,c
 15415  00423E  C012  F009         	movff	fputs@fp,fputc@fp
 15416  004242  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
 15417  004246  ECD2  F01C         	call	_fputc	;wreg free
 15418  00424A  4A15               	infsnz	fputs@i^0,f,c
 15419  00424C  2A16               	incf	(fputs@i+1)^0,f,c
 15420  00424E                     l6340:
 15421  00424E  5015               	movf	fputs@i^0,w,c
 15422  004250  2410               	addwf	fputs@s^0,w,c
 15423  004252  6ED9               	movwf	fsr2l,c
 15424  004254  5016               	movf	(fputs@i+1)^0,w,c
 15425  004256  2011               	addwfc	(fputs@s+1)^0,w,c
 15426  004258  6EDA               	movwf	fsr2h,c
 15427  00425A  50DF               	movf	indf2,w,c
 15428  00425C  6E14               	movwf	fputs@c^0,c
 15429  00425E  5014               	movf	fputs@c^0,w,c
 15430  004260  A4D8               	btfss	status,2,c
 15431  004262  EF35  F021         	goto	u5681
 15432  004266  EF37  F021         	goto	u5680
 15433  00426A                     u5681:
 15434  00426A  EF1C  F021         	goto	l6336
 15435  00426E                     u5680:
 15436  00426E  0012               	return		;funcret
 15437  004270                     __end_of_fputs:
 15438                           	opt callstack 0
 15439                           
 15440 ;; *************** function _fputc *****************
 15441 ;; Defined at:
 15442 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
 15443 ;; Parameters:    Size  Location     Type
 15444 ;;  c               2    6[COMRAM] int 
 15445 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
 15446 ;;		 -> NULL(0), 
 15447 ;; Auto vars:     Size  Location     Type
 15448 ;;		None
 15449 ;; Return value:  Size  Location     Type
 15450 ;;                  2    6[COMRAM] int 
 15451 ;; Registers used:
 15452 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 15453 ;; Tracked objects:
 15454 ;;		On entry : 0/0
 15455 ;;		On exit  : 0/0
 15456 ;;		Unchanged: 0/0
 15457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15458 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15460 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15461 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15462 ;;Total ram usage:        9 bytes
 15463 ;; Hardware stack levels used:    1
 15464 ;; Hardware stack levels required when called:    6
 15465 ;; This function calls:
 15466 ;;		_putch
 15467 ;; This function is called by:
 15468 ;;		_pad
 15469 ;;		_stoa
 15470 ;;		_vfpfcnvrt
 15471 ;;		_fputs
 15472 ;; This function uses a non-reentrant model
 15473 ;;
 15474                           
 15475                           	psect	text65
 15476  0039A4                     __ptext65:
 15477                           	opt callstack 0
 15478  0039A4                     _fputc:
 15479                           	opt callstack 18
 15480  0039A4  5009               	movf	fputc@fp^0,w,c
 15481  0039A6  100A               	iorwf	(fputc@fp+1)^0,w,c
 15482  0039A8  B4D8               	btfsc	status,2,c
 15483  0039AA  EFD9  F01C         	goto	u5621
 15484  0039AE  EFDB  F01C         	goto	u5620
 15485  0039B2                     u5621:
 15486  0039B2  EFE4  F01C         	goto	l6314
 15487  0039B6                     u5620:
 15488  0039B6  5009               	movf	fputc@fp^0,w,c
 15489  0039B8  100A               	iorwf	(fputc@fp+1)^0,w,c
 15490  0039BA  A4D8               	btfss	status,2,c
 15491  0039BC  EFE2  F01C         	goto	u5631
 15492  0039C0  EFE4  F01C         	goto	u5630
 15493  0039C4                     u5631:
 15494  0039C4  EFE9  F01C         	goto	l6316
 15495  0039C8                     u5630:
 15496  0039C8                     l6314:
 15497  0039C8  5007               	movf	fputc@c^0,w,c
 15498  0039CA  EC9E  F023         	call	_putch
 15499  0039CE  EF1C  F01D         	goto	l2083
 15500  0039D2                     l6316:
 15501  0039D2  EE20 F004          	lfsr	2,4
 15502  0039D6  5009               	movf	fputc@fp^0,w,c
 15503  0039D8  26D9               	addwf	fsr2l,f,c
 15504  0039DA  500A               	movf	(fputc@fp+1)^0,w,c
 15505  0039DC  22DA               	addwfc	fsr2h,f,c
 15506  0039DE  50DE               	movf	postinc2,w,c
 15507  0039E0  10DE               	iorwf	postinc2,w,c
 15508  0039E2  B4D8               	btfsc	status,2,c
 15509  0039E4  EFF6  F01C         	goto	u5641
 15510  0039E8  EFF8  F01C         	goto	u5640
 15511  0039EC                     u5641:
 15512  0039EC  EF13  F01D         	goto	l6320
 15513  0039F0                     u5640:
 15514  0039F0  EE20 F004          	lfsr	2,4
 15515  0039F4  5009               	movf	fputc@fp^0,w,c
 15516  0039F6  26D9               	addwf	fsr2l,f,c
 15517  0039F8  500A               	movf	(fputc@fp+1)^0,w,c
 15518  0039FA  22DA               	addwfc	fsr2h,f,c
 15519  0039FC  EE10 F002          	lfsr	1,2
 15520  003A00  5009               	movf	fputc@fp^0,w,c
 15521  003A02  26E1               	addwf	fsr1l,f,c
 15522  003A04  500A               	movf	(fputc@fp+1)^0,w,c
 15523  003A06  22E2               	addwfc	fsr1h,f,c
 15524  003A08  50DE               	movf	postinc2,w,c
 15525  003A0A  5CE6               	subwf	postinc1,w,c
 15526  003A0C  50E6               	movf	postinc1,w,c
 15527  003A0E  0A80               	xorlw	128
 15528  003A10  6E0F               	movwf	(??_fputc+4)^0,c
 15529  003A12  50DE               	movf	postinc2,w,c
 15530  003A14  0A80               	xorlw	128
 15531  003A16  580F               	subwfb	(??_fputc+4)^0,w,c
 15532  003A18  B0D8               	btfsc	status,0,c
 15533  003A1A  EF11  F01D         	goto	u5651
 15534  003A1E  EF13  F01D         	goto	u5650
 15535  003A22                     u5651:
 15536  003A22  EF1C  F01D         	goto	l2083
 15537  003A26                     u5650:
 15538  003A26                     l6320:
 15539  003A26  EE20 F002          	lfsr	2,2
 15540  003A2A  5009               	movf	fputc@fp^0,w,c
 15541  003A2C  26D9               	addwf	fsr2l,f,c
 15542  003A2E  500A               	movf	(fputc@fp+1)^0,w,c
 15543  003A30  22DA               	addwfc	fsr2h,f,c
 15544  003A32  2ADE               	incf	postinc2,f,c
 15545  003A34  0E00               	movlw	0
 15546  003A36  22DD               	addwfc	postdec2,f,c
 15547  003A38                     l2083:
 15548  003A38  0012               	return		;funcret
 15549  003A3A                     __end_of_fputc:
 15550                           	opt callstack 0
 15551                           
 15552 ;; *************** function _putch *****************
 15553 ;; Defined at:
 15554 ;;		line 203 in file "mcc_generated_files/eusart2.c"
 15555 ;; Parameters:    Size  Location     Type
 15556 ;;  txData          1    wreg     unsigned char 
 15557 ;; Auto vars:     Size  Location     Type
 15558 ;;  txData          1    5[COMRAM] unsigned char 
 15559 ;; Return value:  Size  Location     Type
 15560 ;;                  1    wreg      void 
 15561 ;; Registers used:
 15562 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15563 ;; Tracked objects:
 15564 ;;		On entry : 0/0
 15565 ;;		On exit  : 0/0
 15566 ;;		Unchanged: 0/0
 15567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15569 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15571 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15572 ;;Total ram usage:        1 bytes
 15573 ;; Hardware stack levels used:    1
 15574 ;; Hardware stack levels required when called:    5
 15575 ;; This function calls:
 15576 ;;		_EUSART2_Write
 15577 ;; This function is called by:
 15578 ;;		_fputc
 15579 ;; This function uses a non-reentrant model
 15580 ;;
 15581                           
 15582                           	psect	text66
 15583  00473C                     __ptext66:
 15584                           	opt callstack 0
 15585  00473C                     _putch:
 15586                           	opt callstack 18
 15587                           
 15588                           ;incstack = 0
 15589                           ;putch@txData stored from wreg
 15590  00473C  6E06               	movwf	putch@txData^0,c
 15591  00473E                     
 15592                           ;mcc_generated_files/eusart2.c: 203: void putch(char txData);mcc_generated_files/eusart2
      +                          .c: 204: {;mcc_generated_files/eusart2.c: 205:     EUSART2_Write(txData);
 15593  00473E  5006               	movf	putch@txData^0,w,c
 15594  004740  EC28  F01F         	call	_EUSART2_Write
 15595  004744  0012               	return		;funcret
 15596  004746                     __end_of_putch:
 15597                           	opt callstack 0
 15598                           
 15599 ;; *************** function _EUSART2_Write *****************
 15600 ;; Defined at:
 15601 ;;		line 175 in file "mcc_generated_files/eusart2.c"
 15602 ;; Parameters:    Size  Location     Type
 15603 ;;  txData          1    wreg     unsigned char 
 15604 ;; Auto vars:     Size  Location     Type
 15605 ;;  txData          1    4[COMRAM] unsigned char 
 15606 ;; Return value:  Size  Location     Type
 15607 ;;                  1    wreg      void 
 15608 ;; Registers used:
 15609 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15610 ;; Tracked objects:
 15611 ;;		On entry : 0/0
 15612 ;;		On exit  : 0/0
 15613 ;;		Unchanged: 0/0
 15614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15616 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15618 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15619 ;;Total ram usage:        1 bytes
 15620 ;; Hardware stack levels used:    1
 15621 ;; Hardware stack levels required when called:    4
 15622 ;; This function calls:
 15623 ;;		Nothing
 15624 ;; This function is called by:
 15625 ;;		_putch
 15626 ;;		_ReadRX232
 15627 ;; This function uses a non-reentrant model
 15628 ;;
 15629                           
 15630                           	psect	text67
 15631  003E50                     __ptext67:
 15632                           	opt callstack 0
 15633  003E50                     _EUSART2_Write:
 15634                           	opt callstack 18
 15635                           
 15636                           ;incstack = 0
 15637                           ;EUSART2_Write@txData stored from wreg
 15638  003E50  6E05               	movwf	EUSART2_Write@txData^0,c
 15639  003E52                     l6292:
 15640                           
 15641                           ;mcc_generated_files/eusart2.c: 177:     while(0 == eusart2TxBufferRemaining)
 15642  003E52  0100               	movlb	0	; () banked
 15643  003E54  51FF               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 15644  003E56  B4D8               	btfsc	status,2,c
 15645  003E58  EF30  F01F         	goto	u5591
 15646  003E5C  EF32  F01F         	goto	u5590
 15647  003E60                     u5591:
 15648  003E60  EF29  F01F         	goto	l6292
 15649  003E64                     u5590:
 15650  003E64                     
 15651                           ; BSR set to: 0
 15652                           ;mcc_generated_files/eusart2.c: 181:     if(0 == PIE3bits.TX2IE)
 15653  003E64  010E               	movlb	14	; () banked
 15654  003E66  BDC5               	btfsc	197,6,b	;volatile
 15655  003E68  EF38  F01F         	goto	u5601
 15656  003E6C  EF3A  F01F         	goto	u5600
 15657  003E70                     u5601:
 15658  003E70  EF3E  F01F         	goto	l325
 15659  003E74                     u5600:
 15660  003E74                     
 15661                           ; BSR set to: 14
 15662                           ;mcc_generated_files/eusart2.c: 182:     {;mcc_generated_files/eusart2.c: 183:         T
      +                          X2REG = txData;
 15663  003E74  C005  FE9A         	movff	EUSART2_Write@txData,3738	;volatile
 15664                           
 15665                           ;mcc_generated_files/eusart2.c: 184:     }
 15666  003E78  EF54  F01F         	goto	l6306
 15667  003E7C                     l325:
 15668                           
 15669                           ; BSR set to: 14
 15670                           ;mcc_generated_files/eusart2.c: 186:     {;mcc_generated_files/eusart2.c: 187:         P
      +                          IE3bits.TX2IE = 0;
 15671  003E7C  9DC5               	bcf	197,6,b	;volatile
 15672  003E7E                     
 15673                           ; BSR set to: 14
 15674                           ;mcc_generated_files/eusart2.c: 188:         eusart2TxBuffer[eusart2TxHead++] = txData;
 15675  003E7E  0E84               	movlw	low _eusart2TxBuffer
 15676  003E80  0100               	movlb	0	; () banked
 15677  003E82  25E7               	addwf	_eusart2TxHead& (0+255),w,b	;volatile
 15678  003E84  6ED9               	movwf	fsr2l,c
 15679  003E86  6ADA               	clrf	fsr2h,c
 15680  003E88  0E03               	movlw	high _eusart2TxBuffer
 15681  003E8A  22DA               	addwfc	fsr2h,f,c
 15682  003E8C  C005  FFDF         	movff	EUSART2_Write@txData,indf2
 15683  003E90                     
 15684                           ; BSR set to: 0
 15685  003E90  2BE7               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 15686  003E92                     
 15687                           ; BSR set to: 0
 15688                           ;mcc_generated_files/eusart2.c: 189:         if(sizeof(eusart2TxBuffer) <= eusart2TxHead
      +                          )
 15689  003E92  0E1F               	movlw	31
 15690  003E94  65E7               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 15691  003E96  EF4F  F01F         	goto	u5611
 15692  003E9A  EF51  F01F         	goto	u5610
 15693  003E9E                     u5611:
 15694  003E9E  EF53  F01F         	goto	l6304
 15695  003EA2                     u5610:
 15696  003EA2                     
 15697                           ; BSR set to: 0
 15698                           ;mcc_generated_files/eusart2.c: 190:         {;mcc_generated_files/eusart2.c: 191:      
      +                                 eusart2TxHead = 0;
 15699  003EA2  0E00               	movlw	0
 15700  003EA4  6FE7               	movwf	_eusart2TxHead& (0+255),b	;volatile
 15701  003EA6                     l6304:
 15702                           
 15703                           ; BSR set to: 0
 15704                           ;mcc_generated_files/eusart2.c: 193:         eusart2TxBufferRemaining--;
 15705  003EA6  07FF               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 15706  003EA8                     l6306:
 15707                           
 15708                           ;mcc_generated_files/eusart2.c: 195:     PIE3bits.TX2IE = 1;
 15709  003EA8  010E               	movlb	14	; () banked
 15710  003EAA  8DC5               	bsf	197,6,b	;volatile
 15711  003EAC                     
 15712                           ; BSR set to: 14
 15713  003EAC  0012               	return		;funcret
 15714  003EAE                     __end_of_EUSART2_Write:
 15715                           	opt callstack 0
 15716                           
 15717 ;; *************** function _abs *****************
 15718 ;; Defined at:
 15719 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
 15720 ;; Parameters:    Size  Location     Type
 15721 ;;  a               2   22[COMRAM] int 
 15722 ;; Auto vars:     Size  Location     Type
 15723 ;;		None
 15724 ;; Return value:  Size  Location     Type
 15725 ;;                  2   22[COMRAM] int 
 15726 ;; Registers used:
 15727 ;;		wreg, status,2, status,0
 15728 ;; Tracked objects:
 15729 ;;		On entry : 0/0
 15730 ;;		On exit  : 0/0
 15731 ;;		Unchanged: 0/0
 15732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15733 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15735 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15736 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15737 ;;Total ram usage:        4 bytes
 15738 ;; Hardware stack levels used:    1
 15739 ;; Hardware stack levels required when called:    4
 15740 ;; This function calls:
 15741 ;;		Nothing
 15742 ;; This function is called by:
 15743 ;;		_dtoa
 15744 ;; This function uses a non-reentrant model
 15745 ;;
 15746                           
 15747                           	psect	text68
 15748  004376                     __ptext68:
 15749                           	opt callstack 0
 15750  004376                     _abs:
 15751                           	opt callstack 22
 15752  004376  BE18               	btfsc	(abs@a+1)^0,7,c
 15753  004378  EFC8  F021         	goto	u5750
 15754  00437C  5018               	movf	(abs@a+1)^0,w,c
 15755  00437E  E106               	bnz	u5751
 15756  004380  0417               	decf	abs@a^0,w,c
 15757  004382  B0D8               	btfsc	status,0,c
 15758  004384  EFC6  F021         	goto	u5751
 15759  004388  EFC8  F021         	goto	u5750
 15760  00438C                     u5751:
 15761  00438C  EFD6  F021         	goto	l2001
 15762  004390                     u5750:
 15763  004390  C017  F019         	movff	abs@a,??_abs
 15764  004394  C018  F01A         	movff	abs@a+1,??_abs+1
 15765  004398  1E19               	comf	??_abs^0,f,c
 15766  00439A  1E1A               	comf	(??_abs+1)^0,f,c
 15767  00439C  4A19               	infsnz	??_abs^0,f,c
 15768  00439E  2A1A               	incf	(??_abs+1)^0,f,c
 15769  0043A0  C019  F017         	movff	??_abs,?_abs
 15770  0043A4  C01A  F018         	movff	??_abs+1,?_abs+1
 15771  0043A8  EFDA  F021         	goto	l2004
 15772  0043AC                     l2001:
 15773  0043AC  C017  F017         	movff	abs@a,?_abs
 15774  0043B0  C018  F018         	movff	abs@a+1,?_abs+1
 15775  0043B4                     l2004:
 15776  0043B4  0012               	return		;funcret
 15777  0043B6                     __end_of_abs:
 15778                           	opt callstack 0
 15779                           
 15780 ;; *************** function ___aomod *****************
 15781 ;; Defined at:
 15782 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
 15783 ;; Parameters:    Size  Location     Type
 15784 ;;  dividend        8    4[COMRAM] long long 
 15785 ;;  divisor         8   12[COMRAM] long long 
 15786 ;; Auto vars:     Size  Location     Type
 15787 ;;  sign            1   21[COMRAM] unsigned char 
 15788 ;;  counter         1   20[COMRAM] unsigned char 
 15789 ;; Return value:  Size  Location     Type
 15790 ;;                  8    4[COMRAM] long long 
 15791 ;; Registers used:
 15792 ;;		wreg, status,2, status,0
 15793 ;; Tracked objects:
 15794 ;;		On entry : 0/0
 15795 ;;		On exit  : 0/0
 15796 ;;		Unchanged: 0/0
 15797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15798 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15799 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15801 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15802 ;;Total ram usage:       18 bytes
 15803 ;; Hardware stack levels used:    1
 15804 ;; Hardware stack levels required when called:    4
 15805 ;; This function calls:
 15806 ;;		Nothing
 15807 ;; This function is called by:
 15808 ;;		_dtoa
 15809 ;; This function uses a non-reentrant model
 15810 ;;
 15811                           
 15812                           	psect	text69
 15813  002A50                     __ptext69:
 15814                           	opt callstack 0
 15815  002A50                     ___aomod:
 15816                           	opt callstack 22
 15817  002A50  0E00               	movlw	0
 15818  002A52  6E16               	movwf	___aomod@sign^0,c
 15819  002A54  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
 15820  002A56  EF31  F015         	goto	u5920
 15821  002A5A  EF2F  F015         	goto	u5921
 15822  002A5E                     u5921:
 15823  002A5E  EF43  F015         	goto	l6452
 15824  002A62                     u5920:
 15825  002A62  1E0C               	comf	(___aomod@dividend+7)^0,f,c
 15826  002A64  1E0B               	comf	(___aomod@dividend+6)^0,f,c
 15827  002A66  1E0A               	comf	(___aomod@dividend+5)^0,f,c
 15828  002A68  1E09               	comf	(___aomod@dividend+4)^0,f,c
 15829  002A6A  1E08               	comf	(___aomod@dividend+3)^0,f,c
 15830  002A6C  1E07               	comf	(___aomod@dividend+2)^0,f,c
 15831  002A6E  1E06               	comf	(___aomod@dividend+1)^0,f,c
 15832  002A70  6C05               	negf	___aomod@dividend^0,c
 15833  002A72  0E00               	movlw	0
 15834  002A74  2206               	addwfc	(___aomod@dividend+1)^0,f,c
 15835  002A76  2207               	addwfc	(___aomod@dividend+2)^0,f,c
 15836  002A78  2208               	addwfc	(___aomod@dividend+3)^0,f,c
 15837  002A7A  2209               	addwfc	(___aomod@dividend+4)^0,f,c
 15838  002A7C  220A               	addwfc	(___aomod@dividend+5)^0,f,c
 15839  002A7E  220B               	addwfc	(___aomod@dividend+6)^0,f,c
 15840  002A80  220C               	addwfc	(___aomod@dividend+7)^0,f,c
 15841  002A82  0E01               	movlw	1
 15842  002A84  6E16               	movwf	___aomod@sign^0,c
 15843  002A86                     l6452:
 15844  002A86  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
 15845  002A88  EF4A  F015         	goto	u5930
 15846  002A8C  EF48  F015         	goto	u5931
 15847  002A90                     u5931:
 15848  002A90  EF5A  F015         	goto	l6456
 15849  002A94                     u5930:
 15850  002A94  1E14               	comf	(___aomod@divisor+7)^0,f,c
 15851  002A96  1E13               	comf	(___aomod@divisor+6)^0,f,c
 15852  002A98  1E12               	comf	(___aomod@divisor+5)^0,f,c
 15853  002A9A  1E11               	comf	(___aomod@divisor+4)^0,f,c
 15854  002A9C  1E10               	comf	(___aomod@divisor+3)^0,f,c
 15855  002A9E  1E0F               	comf	(___aomod@divisor+2)^0,f,c
 15856  002AA0  1E0E               	comf	(___aomod@divisor+1)^0,f,c
 15857  002AA2  6C0D               	negf	___aomod@divisor^0,c
 15858  002AA4  0E00               	movlw	0
 15859  002AA6  220E               	addwfc	(___aomod@divisor+1)^0,f,c
 15860  002AA8  220F               	addwfc	(___aomod@divisor+2)^0,f,c
 15861  002AAA  2210               	addwfc	(___aomod@divisor+3)^0,f,c
 15862  002AAC  2211               	addwfc	(___aomod@divisor+4)^0,f,c
 15863  002AAE  2212               	addwfc	(___aomod@divisor+5)^0,f,c
 15864  002AB0  2213               	addwfc	(___aomod@divisor+6)^0,f,c
 15865  002AB2  2214               	addwfc	(___aomod@divisor+7)^0,f,c
 15866  002AB4                     l6456:
 15867  002AB4  500D               	movf	___aomod@divisor^0,w,c
 15868  002AB6  100E               	iorwf	(___aomod@divisor+1)^0,w,c
 15869  002AB8  100F               	iorwf	(___aomod@divisor+2)^0,w,c
 15870  002ABA  1010               	iorwf	(___aomod@divisor+3)^0,w,c
 15871  002ABC  1011               	iorwf	(___aomod@divisor+4)^0,w,c
 15872  002ABE  1012               	iorwf	(___aomod@divisor+5)^0,w,c
 15873  002AC0  1013               	iorwf	(___aomod@divisor+6)^0,w,c
 15874  002AC2  1014               	iorwf	(___aomod@divisor+7)^0,w,c
 15875  002AC4  B4D8               	btfsc	status,2,c
 15876  002AC6  EF67  F015         	goto	u5941
 15877  002ACA  EF69  F015         	goto	u5940
 15878  002ACE                     u5941:
 15879  002ACE  EFB1  F015         	goto	l6472
 15880  002AD2                     u5940:
 15881  002AD2  0E01               	movlw	1
 15882  002AD4  6E15               	movwf	___aomod@counter^0,c
 15883  002AD6  EF77  F015         	goto	l6462
 15884  002ADA                     l6460:
 15885  002ADA  90D8               	bcf	status,0,c
 15886  002ADC  360D               	rlcf	___aomod@divisor^0,f,c
 15887  002ADE  360E               	rlcf	(___aomod@divisor+1)^0,f,c
 15888  002AE0  360F               	rlcf	(___aomod@divisor+2)^0,f,c
 15889  002AE2  3610               	rlcf	(___aomod@divisor+3)^0,f,c
 15890  002AE4  3611               	rlcf	(___aomod@divisor+4)^0,f,c
 15891  002AE6  3612               	rlcf	(___aomod@divisor+5)^0,f,c
 15892  002AE8  3613               	rlcf	(___aomod@divisor+6)^0,f,c
 15893  002AEA  3614               	rlcf	(___aomod@divisor+7)^0,f,c
 15894  002AEC  2A15               	incf	___aomod@counter^0,f,c
 15895  002AEE                     l6462:
 15896  002AEE  AE14               	btfss	(___aomod@divisor+7)^0,7,c
 15897  002AF0  EF7C  F015         	goto	u5951
 15898  002AF4  EF7E  F015         	goto	u5950
 15899  002AF8                     u5951:
 15900  002AF8  EF6D  F015         	goto	l6460
 15901  002AFC                     u5950:
 15902  002AFC                     l6464:
 15903  002AFC  500D               	movf	___aomod@divisor^0,w,c
 15904  002AFE  5C05               	subwf	___aomod@dividend^0,w,c
 15905  002B00  500E               	movf	(___aomod@divisor+1)^0,w,c
 15906  002B02  5806               	subwfb	(___aomod@dividend+1)^0,w,c
 15907  002B04  500F               	movf	(___aomod@divisor+2)^0,w,c
 15908  002B06  5807               	subwfb	(___aomod@dividend+2)^0,w,c
 15909  002B08  5010               	movf	(___aomod@divisor+3)^0,w,c
 15910  002B0A  5808               	subwfb	(___aomod@dividend+3)^0,w,c
 15911  002B0C  5011               	movf	(___aomod@divisor+4)^0,w,c
 15912  002B0E  5809               	subwfb	(___aomod@dividend+4)^0,w,c
 15913  002B10  5012               	movf	(___aomod@divisor+5)^0,w,c
 15914  002B12  580A               	subwfb	(___aomod@dividend+5)^0,w,c
 15915  002B14  5013               	movf	(___aomod@divisor+6)^0,w,c
 15916  002B16  580B               	subwfb	(___aomod@dividend+6)^0,w,c
 15917  002B18  5014               	movf	(___aomod@divisor+7)^0,w,c
 15918  002B1A  580C               	subwfb	(___aomod@dividend+7)^0,w,c
 15919  002B1C  A0D8               	btfss	status,0,c
 15920  002B1E  EF93  F015         	goto	u5961
 15921  002B22  EF95  F015         	goto	u5960
 15922  002B26                     u5961:
 15923  002B26  EFA5  F015         	goto	l6468
 15924  002B2A                     u5960:
 15925  002B2A  500D               	movf	___aomod@divisor^0,w,c
 15926  002B2C  5E05               	subwf	___aomod@dividend^0,f,c
 15927  002B2E  500E               	movf	(___aomod@divisor+1)^0,w,c
 15928  002B30  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
 15929  002B32  500F               	movf	(___aomod@divisor+2)^0,w,c
 15930  002B34  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
 15931  002B36  5010               	movf	(___aomod@divisor+3)^0,w,c
 15932  002B38  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
 15933  002B3A  5011               	movf	(___aomod@divisor+4)^0,w,c
 15934  002B3C  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
 15935  002B3E  5012               	movf	(___aomod@divisor+5)^0,w,c
 15936  002B40  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
 15937  002B42  5013               	movf	(___aomod@divisor+6)^0,w,c
 15938  002B44  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
 15939  002B46  5014               	movf	(___aomod@divisor+7)^0,w,c
 15940  002B48  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
 15941  002B4A                     l6468:
 15942  002B4A  90D8               	bcf	status,0,c
 15943  002B4C  3214               	rrcf	(___aomod@divisor+7)^0,f,c
 15944  002B4E  3213               	rrcf	(___aomod@divisor+6)^0,f,c
 15945  002B50  3212               	rrcf	(___aomod@divisor+5)^0,f,c
 15946  002B52  3211               	rrcf	(___aomod@divisor+4)^0,f,c
 15947  002B54  3210               	rrcf	(___aomod@divisor+3)^0,f,c
 15948  002B56  320F               	rrcf	(___aomod@divisor+2)^0,f,c
 15949  002B58  320E               	rrcf	(___aomod@divisor+1)^0,f,c
 15950  002B5A  320D               	rrcf	___aomod@divisor^0,f,c
 15951  002B5C  2E15               	decfsz	___aomod@counter^0,f,c
 15952  002B5E  EF7E  F015         	goto	l6464
 15953  002B62                     l6472:
 15954  002B62  5016               	movf	___aomod@sign^0,w,c
 15955  002B64  B4D8               	btfsc	status,2,c
 15956  002B66  EFB7  F015         	goto	u5971
 15957  002B6A  EFB9  F015         	goto	u5970
 15958  002B6E                     u5971:
 15959  002B6E  EFC9  F015         	goto	l6476
 15960  002B72                     u5970:
 15961  002B72  1E0C               	comf	(___aomod@dividend+7)^0,f,c
 15962  002B74  1E0B               	comf	(___aomod@dividend+6)^0,f,c
 15963  002B76  1E0A               	comf	(___aomod@dividend+5)^0,f,c
 15964  002B78  1E09               	comf	(___aomod@dividend+4)^0,f,c
 15965  002B7A  1E08               	comf	(___aomod@dividend+3)^0,f,c
 15966  002B7C  1E07               	comf	(___aomod@dividend+2)^0,f,c
 15967  002B7E  1E06               	comf	(___aomod@dividend+1)^0,f,c
 15968  002B80  6C05               	negf	___aomod@dividend^0,c
 15969  002B82  0E00               	movlw	0
 15970  002B84  2206               	addwfc	(___aomod@dividend+1)^0,f,c
 15971  002B86  2207               	addwfc	(___aomod@dividend+2)^0,f,c
 15972  002B88  2208               	addwfc	(___aomod@dividend+3)^0,f,c
 15973  002B8A  2209               	addwfc	(___aomod@dividend+4)^0,f,c
 15974  002B8C  220A               	addwfc	(___aomod@dividend+5)^0,f,c
 15975  002B8E  220B               	addwfc	(___aomod@dividend+6)^0,f,c
 15976  002B90  220C               	addwfc	(___aomod@dividend+7)^0,f,c
 15977  002B92                     l6476:
 15978  002B92  C005  F005         	movff	___aomod@dividend,?___aomod
 15979  002B96  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
 15980  002B9A  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
 15981  002B9E  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
 15982  002BA2  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
 15983  002BA6  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
 15984  002BAA  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
 15985  002BAE  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
 15986  002BB2  0012               	return		;funcret
 15987  002BB4                     __end_of___aomod:
 15988                           	opt callstack 0
 15989                           
 15990 ;; *************** function ___aodiv *****************
 15991 ;; Defined at:
 15992 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
 15993 ;; Parameters:    Size  Location     Type
 15994 ;;  dividend        8    4[COMRAM] long long 
 15995 ;;  divisor         8   12[COMRAM] long long 
 15996 ;; Auto vars:     Size  Location     Type
 15997 ;;  quotient        8   22[COMRAM] long long 
 15998 ;;  sign            1   21[COMRAM] unsigned char 
 15999 ;;  counter         1   20[COMRAM] unsigned char 
 16000 ;; Return value:  Size  Location     Type
 16001 ;;                  8    4[COMRAM] long long 
 16002 ;; Registers used:
 16003 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16004 ;; Tracked objects:
 16005 ;;		On entry : 0/0
 16006 ;;		On exit  : 0/0
 16007 ;;		Unchanged: 0/0
 16008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16009 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16010 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16012 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16013 ;;Total ram usage:       26 bytes
 16014 ;; Hardware stack levels used:    1
 16015 ;; Hardware stack levels required when called:    4
 16016 ;; This function calls:
 16017 ;;		Nothing
 16018 ;; This function is called by:
 16019 ;;		_dtoa
 16020 ;; This function uses a non-reentrant model
 16021 ;;
 16022                           
 16023                           	psect	text70
 16024  00274C                     __ptext70:
 16025                           	opt callstack 0
 16026  00274C                     ___aodiv:
 16027                           	opt callstack 22
 16028  00274C  0E00               	movlw	0
 16029  00274E  6E16               	movwf	___aodiv@sign^0,c
 16030  002750  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
 16031  002752  EFAF  F013         	goto	u5850
 16032  002756  EFAD  F013         	goto	u5851
 16033  00275A                     u5851:
 16034  00275A  EFC1  F013         	goto	l6408
 16035  00275E                     u5850:
 16036  00275E  1E14               	comf	(___aodiv@divisor+7)^0,f,c
 16037  002760  1E13               	comf	(___aodiv@divisor+6)^0,f,c
 16038  002762  1E12               	comf	(___aodiv@divisor+5)^0,f,c
 16039  002764  1E11               	comf	(___aodiv@divisor+4)^0,f,c
 16040  002766  1E10               	comf	(___aodiv@divisor+3)^0,f,c
 16041  002768  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
 16042  00276A  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
 16043  00276C  6C0D               	negf	___aodiv@divisor^0,c
 16044  00276E  0E00               	movlw	0
 16045  002770  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
 16046  002772  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
 16047  002774  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
 16048  002776  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
 16049  002778  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
 16050  00277A  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
 16051  00277C  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
 16052  00277E  0E01               	movlw	1
 16053  002780  6E16               	movwf	___aodiv@sign^0,c
 16054  002782                     l6408:
 16055  002782  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
 16056  002784  EFC8  F013         	goto	u5860
 16057  002788  EFC6  F013         	goto	u5861
 16058  00278C                     u5861:
 16059  00278C  EFDA  F013         	goto	l6414
 16060  002790                     u5860:
 16061  002790  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
 16062  002792  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
 16063  002794  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
 16064  002796  1E09               	comf	(___aodiv@dividend+4)^0,f,c
 16065  002798  1E08               	comf	(___aodiv@dividend+3)^0,f,c
 16066  00279A  1E07               	comf	(___aodiv@dividend+2)^0,f,c
 16067  00279C  1E06               	comf	(___aodiv@dividend+1)^0,f,c
 16068  00279E  6C05               	negf	___aodiv@dividend^0,c
 16069  0027A0  0E00               	movlw	0
 16070  0027A2  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
 16071  0027A4  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
 16072  0027A6  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
 16073  0027A8  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
 16074  0027AA  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
 16075  0027AC  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
 16076  0027AE  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
 16077  0027B0  0E01               	movlw	1
 16078  0027B2  1A16               	xorwf	___aodiv@sign^0,f,c
 16079  0027B4                     l6414:
 16080  0027B4  EE20  F017         	lfsr	2,___aodiv@quotient
 16081  0027B8  0E07               	movlw	7
 16082  0027BA                     u5871:
 16083  0027BA  6ADE               	clrf	postinc2,c
 16084  0027BC  06E8               	decf	wreg,f,c
 16085  0027BE  E2FD               	bc	u5871
 16086  0027C0  500D               	movf	___aodiv@divisor^0,w,c
 16087  0027C2  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
 16088  0027C4  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
 16089  0027C6  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
 16090  0027C8  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
 16091  0027CA  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
 16092  0027CC  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
 16093  0027CE  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
 16094  0027D0  B4D8               	btfsc	status,2,c
 16095  0027D2  EFED  F013         	goto	u5881
 16096  0027D6  EFEF  F013         	goto	u5880
 16097  0027DA                     u5881:
 16098  0027DA  EF41  F014         	goto	l6436
 16099  0027DE                     u5880:
 16100  0027DE  0E01               	movlw	1
 16101  0027E0  6E15               	movwf	___aodiv@counter^0,c
 16102  0027E2  EFFD  F013         	goto	l6422
 16103  0027E6                     l6420:
 16104  0027E6  90D8               	bcf	status,0,c
 16105  0027E8  360D               	rlcf	___aodiv@divisor^0,f,c
 16106  0027EA  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
 16107  0027EC  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
 16108  0027EE  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
 16109  0027F0  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
 16110  0027F2  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
 16111  0027F4  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
 16112  0027F6  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
 16113  0027F8  2A15               	incf	___aodiv@counter^0,f,c
 16114  0027FA                     l6422:
 16115  0027FA  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
 16116  0027FC  EF02  F014         	goto	u5891
 16117  002800  EF04  F014         	goto	u5890
 16118  002804                     u5891:
 16119  002804  EFF3  F013         	goto	l6420
 16120  002808                     u5890:
 16121  002808                     l6424:
 16122  002808  90D8               	bcf	status,0,c
 16123  00280A  3617               	rlcf	___aodiv@quotient^0,f,c
 16124  00280C  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
 16125  00280E  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
 16126  002810  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
 16127  002812  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
 16128  002814  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
 16129  002816  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
 16130  002818  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
 16131  00281A  500D               	movf	___aodiv@divisor^0,w,c
 16132  00281C  5C05               	subwf	___aodiv@dividend^0,w,c
 16133  00281E  500E               	movf	(___aodiv@divisor+1)^0,w,c
 16134  002820  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
 16135  002822  500F               	movf	(___aodiv@divisor+2)^0,w,c
 16136  002824  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
 16137  002826  5010               	movf	(___aodiv@divisor+3)^0,w,c
 16138  002828  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
 16139  00282A  5011               	movf	(___aodiv@divisor+4)^0,w,c
 16140  00282C  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
 16141  00282E  5012               	movf	(___aodiv@divisor+5)^0,w,c
 16142  002830  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
 16143  002832  5013               	movf	(___aodiv@divisor+6)^0,w,c
 16144  002834  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
 16145  002836  5014               	movf	(___aodiv@divisor+7)^0,w,c
 16146  002838  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
 16147  00283A  A0D8               	btfss	status,0,c
 16148  00283C  EF22  F014         	goto	u5901
 16149  002840  EF24  F014         	goto	u5900
 16150  002844                     u5901:
 16151  002844  EF35  F014         	goto	l6432
 16152  002848                     u5900:
 16153  002848  500D               	movf	___aodiv@divisor^0,w,c
 16154  00284A  5E05               	subwf	___aodiv@dividend^0,f,c
 16155  00284C  500E               	movf	(___aodiv@divisor+1)^0,w,c
 16156  00284E  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
 16157  002850  500F               	movf	(___aodiv@divisor+2)^0,w,c
 16158  002852  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
 16159  002854  5010               	movf	(___aodiv@divisor+3)^0,w,c
 16160  002856  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
 16161  002858  5011               	movf	(___aodiv@divisor+4)^0,w,c
 16162  00285A  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
 16163  00285C  5012               	movf	(___aodiv@divisor+5)^0,w,c
 16164  00285E  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
 16165  002860  5013               	movf	(___aodiv@divisor+6)^0,w,c
 16166  002862  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
 16167  002864  5014               	movf	(___aodiv@divisor+7)^0,w,c
 16168  002866  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
 16169  002868  8017               	bsf	___aodiv@quotient^0,0,c
 16170  00286A                     l6432:
 16171  00286A  90D8               	bcf	status,0,c
 16172  00286C  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
 16173  00286E  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
 16174  002870  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
 16175  002872  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
 16176  002874  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
 16177  002876  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
 16178  002878  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
 16179  00287A  320D               	rrcf	___aodiv@divisor^0,f,c
 16180  00287C  2E15               	decfsz	___aodiv@counter^0,f,c
 16181  00287E  EF04  F014         	goto	l6424
 16182  002882                     l6436:
 16183  002882  5016               	movf	___aodiv@sign^0,w,c
 16184  002884  B4D8               	btfsc	status,2,c
 16185  002886  EF47  F014         	goto	u5911
 16186  00288A  EF49  F014         	goto	u5910
 16187  00288E                     u5911:
 16188  00288E  EF59  F014         	goto	l6440
 16189  002892                     u5910:
 16190  002892  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
 16191  002894  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
 16192  002896  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
 16193  002898  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
 16194  00289A  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
 16195  00289C  1E19               	comf	(___aodiv@quotient+2)^0,f,c
 16196  00289E  1E18               	comf	(___aodiv@quotient+1)^0,f,c
 16197  0028A0  6C17               	negf	___aodiv@quotient^0,c
 16198  0028A2  0E00               	movlw	0
 16199  0028A4  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
 16200  0028A6  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
 16201  0028A8  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
 16202  0028AA  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
 16203  0028AC  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
 16204  0028AE  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
 16205  0028B0  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
 16206  0028B2                     l6440:
 16207  0028B2  C017  F005         	movff	___aodiv@quotient,?___aodiv
 16208  0028B6  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
 16209  0028BA  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
 16210  0028BE  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
 16211  0028C2  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
 16212  0028C6  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
 16213  0028CA  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
 16214  0028CE  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
 16215  0028D2  0012               	return		;funcret
 16216  0028D4                     __end_of___aodiv:
 16217                           	opt callstack 0
 16218                           
 16219 ;; *************** function _atoi *****************
 16220 ;; Defined at:
 16221 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 16222 ;; Parameters:    Size  Location     Type
 16223 ;;  s               2   11[COMRAM] PTR const unsigned char 
 16224 ;;		 -> STR_102(12), STR_100(13), STR_99(17), STR_98(15), 
 16225 ;;		 -> STR_97(33), STR_95(38), STR_94(58), STR_93(17), 
 16226 ;;		 -> STR_92(16), STR_91(4), STR_90(15), STR_89(19), 
 16227 ;;		 -> STR_88(32), STR_87(33), STR_86(37), STR_85(44), 
 16228 ;;		 -> STR_84(22), STR_83(75), STR_82(53), STR_81(69), 
 16229 ;;		 -> STR_80(54), STR_79(52), STR_78(40), STR_77(30), 
 16230 ;;		 -> STR_76(43), STR_75(73), STR_74(42), STR_73(36), 
 16231 ;;		 -> STR_72(34), STR_69(42), STR_68(22), STR_67(21), 
 16232 ;;		 -> STR_66(20), STR_65(19), STR_64(40), STR_54(32), 
 16233 ;;		 -> STR_53(37), STR_52(16), STR_51(24), STR_50(4), 
 16234 ;;		 -> STR_49(25), STR_48(28), STR_47(54), STR_46(15), 
 16235 ;;		 -> STR_45(29), STR_44(37), STR_43(26), STR_42(37), 
 16236 ;;		 -> STR_41(26), STR_40(37), STR_39(24), STR_38(37), 
 16237 ;;		 -> STR_37(22), STR_36(37), STR_35(22), STR_34(37), 
 16238 ;;		 -> STR_33(26), STR_32(54), STR_31(36), STR_30(3), 
 16239 ;;		 -> STR_29(32), STR_28(32), STR_27(35), STR_26(56), 
 16240 ;;		 -> STR_25(38), STR_24(37), STR_23(37), STR_22(38), 
 16241 ;;		 -> STR_21(38), STR_20(64), STR_19(36), STR_18(30), 
 16242 ;;		 -> STR_17(30), STR_16(37), STR_15(37), STR_14(38), 
 16243 ;;		 -> STR_13(38), STR_12(63), STR_11(36), STR_10(34), 
 16244 ;;		 -> STR_9(28), STR_8(54), STR_7(27), STR_6(16), 
 16245 ;;		 -> STR_4(19), STR_3(28), STR_2(31), STR_1(21), 
 16246 ;; Auto vars:     Size  Location     Type
 16247 ;;  n               2   24[COMRAM] int 
 16248 ;;  neg             2   17[COMRAM] int 
 16249 ;; Return value:  Size  Location     Type
 16250 ;;                  2   11[COMRAM] int 
 16251 ;; Registers used:
 16252 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16253 ;; Tracked objects:
 16254 ;;		On entry : 0/0
 16255 ;;		On exit  : 0/0
 16256 ;;		Unchanged: 0/0
 16257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16258 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16259 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16260 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16261 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16262 ;;Total ram usage:       15 bytes
 16263 ;; Hardware stack levels used:    1
 16264 ;; Hardware stack levels required when called:    5
 16265 ;; This function calls:
 16266 ;;		___wmul
 16267 ;;		_isdigit
 16268 ;;		_isspace
 16269 ;; This function is called by:
 16270 ;;		_vfpfcnvrt
 16271 ;; This function uses a non-reentrant model
 16272 ;;
 16273                           
 16274                           	psect	text71
 16275  0025B2                     __ptext71:
 16276                           	opt callstack 0
 16277  0025B2                     _atoi:
 16278                           	opt callstack 22
 16279  0025B2  0E00               	movlw	0
 16280  0025B4  6E1A               	movwf	(atoi@n+1)^0,c
 16281  0025B6  0E00               	movlw	0
 16282  0025B8  6E19               	movwf	atoi@n^0,c
 16283  0025BA  0E00               	movlw	0
 16284  0025BC  6E13               	movwf	(atoi@neg+1)^0,c
 16285  0025BE  0E00               	movlw	0
 16286  0025C0  6E12               	movwf	atoi@neg^0,c
 16287  0025C2  EFE5  F012         	goto	l6740
 16288  0025C6                     l6738:
 16289  0025C6  4A0C               	infsnz	atoi@s^0,f,c
 16290  0025C8  2A0D               	incf	(atoi@s+1)^0,f,c
 16291  0025CA                     l6740:
 16292  0025CA  0E01               	movlw	1
 16293  0025CC  6E18               	movwf	_atoi$2373^0,c
 16294  0025CE  C00C  FFF6         	movff	atoi@s,tblptrl
 16295  0025D2  C00D  FFF7         	movff	atoi@s+1,tblptrh
 16296  0025D6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16297  0025D6  6AF8               	clrf	tblptru,c
 16298  0025D8                     	endif
 16299  0025D8                     	if	0	;tblptru may be non-zero
 16300  0025D8                     	endif
 16301  0025D8  0008               	tblrd		*
 16302  0025DA  50F5               	movf	tablat,w,c
 16303  0025DC  0A20               	xorlw	32
 16304  0025DE  B4D8               	btfsc	status,2,c
 16305  0025E0  EFF4  F012         	goto	u6561
 16306  0025E4  EFF6  F012         	goto	u6560
 16307  0025E8                     u6561:
 16308  0025E8  EF14  F013         	goto	l6748
 16309  0025EC                     u6560:
 16310  0025EC  0EF7               	movlw	247
 16311  0025EE  6E0E               	movwf	??_atoi^0,c
 16312  0025F0  0EFF               	movlw	255
 16313  0025F2  6E0F               	movwf	(??_atoi+1)^0,c
 16314  0025F4  C00C  FFF6         	movff	atoi@s,tblptrl
 16315  0025F8  C00D  FFF7         	movff	atoi@s+1,tblptrh
 16316  0025FC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16317  0025FC  6AF8               	clrf	tblptru,c
 16318  0025FE                     	endif
 16319  0025FE                     	if	0	;tblptru may be non-zero
 16320  0025FE                     	endif
 16321  0025FE  0008               	tblrd		*
 16322  002600  50F5               	movf	tablat,w,c
 16323  002602  6E10               	movwf	(??_atoi+2)^0,c
 16324  002604  6A11               	clrf	(??_atoi+3)^0,c
 16325  002606  500E               	movf	??_atoi^0,w,c
 16326  002608  2610               	addwf	(??_atoi+2)^0,f,c
 16327  00260A  500F               	movf	(??_atoi+1)^0,w,c
 16328  00260C  2211               	addwfc	(??_atoi+3)^0,f,c
 16329  00260E  5011               	movf	(??_atoi+3)^0,w,c
 16330  002610  E109               	bnz	u6570
 16331  002612  0E05               	movlw	5
 16332  002614  5C10               	subwf	(??_atoi+2)^0,w,c
 16333  002616  A0D8               	btfss	status,0,c
 16334  002618  EF10  F013         	goto	u6571
 16335  00261C  EF12  F013         	goto	u6570
 16336  002620                     u6571:
 16337  002620  EF14  F013         	goto	l6748
 16338  002624                     u6570:
 16339  002624  0E00               	movlw	0
 16340  002626  6E18               	movwf	_atoi$2373^0,c
 16341  002628                     l6748:
 16342  002628  C018  F014         	movff	_atoi$2373,_atoi$2372
 16343  00262C  6A15               	clrf	(_atoi$2372+1)^0,c
 16344  00262E  5014               	movf	_atoi$2372^0,w,c
 16345  002630  1015               	iorwf	(_atoi$2372+1)^0,w,c
 16346  002632  A4D8               	btfss	status,2,c
 16347  002634  EF1E  F013         	goto	u6581
 16348  002638  EF20  F013         	goto	u6580
 16349  00263C                     u6581:
 16350  00263C  EFE3  F012         	goto	l6738
 16351  002640                     u6580:
 16352  002640  EF2A  F013         	goto	l6758
 16353  002644                     l6754:
 16354  002644  0E00               	movlw	0
 16355  002646  6E13               	movwf	(atoi@neg+1)^0,c
 16356  002648  0E01               	movlw	1
 16357  00264A  6E12               	movwf	atoi@neg^0,c
 16358  00264C                     l6756:
 16359  00264C  4A0C               	infsnz	atoi@s^0,f,c
 16360  00264E  2A0D               	incf	(atoi@s+1)^0,f,c
 16361  002650  EF61  F013         	goto	l6764
 16362  002654                     l6758:
 16363  002654  C00C  FFF6         	movff	atoi@s,tblptrl
 16364  002658  C00D  FFF7         	movff	atoi@s+1,tblptrh
 16365  00265C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16366  00265C  6AF8               	clrf	tblptru,c
 16367  00265E                     	endif
 16368  00265E                     	if	0	;tblptru may be non-zero
 16369  00265E                     	endif
 16370  00265E  0008               	tblrd		*
 16371  002660  50F5               	movf	tablat,w,c
 16372  002662  6E0E               	movwf	??_atoi^0,c
 16373  002664  6A0F               	clrf	(??_atoi+1)^0,c
 16374                           
 16375                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16376                           ; Switch size 1, requested type "simple"
 16377                           ; Number of cases is 1, Range of values is 0 to 0
 16378                           ; switch strategies available:
 16379                           ; Name         Instructions Cycles
 16380                           ; simple_byte            4     3 (average)
 16381                           ;	Chosen strategy is simple_byte
 16382  002666  500F               	movf	(??_atoi+1)^0,w,c
 16383  002668  0A00               	xorlw	0	; case 0
 16384  00266A  B4D8               	btfsc	status,2,c
 16385  00266C  EF3A  F013         	goto	l8192
 16386  002670  EF61  F013         	goto	l6764
 16387  002674                     l8192:
 16388                           
 16389                           ; Switch size 1, requested type "simple"
 16390                           ; Number of cases is 2, Range of values is 43 to 45
 16391                           ; switch strategies available:
 16392                           ; Name         Instructions Cycles
 16393                           ; simple_byte            7     4 (average)
 16394                           ;	Chosen strategy is simple_byte
 16395  002674  500E               	movf	??_atoi^0,w,c
 16396  002676  0A2B               	xorlw	43	; case 43
 16397  002678  B4D8               	btfsc	status,2,c
 16398  00267A  EF26  F013         	goto	l6756
 16399  00267E  0A06               	xorlw	6	; case 45
 16400  002680  B4D8               	btfsc	status,2,c
 16401  002682  EF22  F013         	goto	l6754
 16402  002686  EF61  F013         	goto	l6764
 16403  00268A                     l6760:
 16404  00268A  C019  F005         	movff	atoi@n,___wmul@multiplier
 16405  00268E  C01A  F006         	movff	atoi@n+1,___wmul@multiplier+1
 16406  002692  0E00               	movlw	0
 16407  002694  6E08               	movwf	(___wmul@multiplicand+1)^0,c
 16408  002696  0E0A               	movlw	10
 16409  002698  6E07               	movwf	___wmul@multiplicand^0,c
 16410  00269A  ECD3  F022         	call	___wmul	;wreg free
 16411  00269E  C00C  FFF6         	movff	atoi@s,tblptrl
 16412  0026A2  C00D  FFF7         	movff	atoi@s+1,tblptrh
 16413  0026A6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16414  0026A6  6AF8               	clrf	tblptru,c
 16415  0026A8                     	endif
 16416  0026A8                     	if	0	;tblptru may be non-zero
 16417  0026A8                     	endif
 16418  0026A8  0008               	tblrd		*
 16419  0026AA  50F5               	movf	tablat,w,c
 16420  0026AC  5E05               	subwf	?___wmul^0,f,c
 16421  0026AE  0E00               	movlw	0
 16422  0026B0  5A06               	subwfb	(?___wmul+1)^0,f,c
 16423  0026B2  0E30               	movlw	48
 16424  0026B4  2405               	addwf	?___wmul^0,w,c
 16425  0026B6  6E19               	movwf	atoi@n^0,c
 16426  0026B8  0E00               	movlw	0
 16427  0026BA  2006               	addwfc	(?___wmul+1)^0,w,c
 16428  0026BC  6E1A               	movwf	(atoi@n+1)^0,c
 16429  0026BE  EF26  F013         	goto	l6756
 16430  0026C2                     l6764:
 16431  0026C2  0ED0               	movlw	208
 16432  0026C4  6E0E               	movwf	??_atoi^0,c
 16433  0026C6  0EFF               	movlw	255
 16434  0026C8  6E0F               	movwf	(??_atoi+1)^0,c
 16435  0026CA  C00C  FFF6         	movff	atoi@s,tblptrl
 16436  0026CE  C00D  FFF7         	movff	atoi@s+1,tblptrh
 16437  0026D2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16438  0026D2  6AF8               	clrf	tblptru,c
 16439  0026D4                     	endif
 16440  0026D4                     	if	0	;tblptru may be non-zero
 16441  0026D4                     	endif
 16442  0026D4  0008               	tblrd		*
 16443  0026D6  50F5               	movf	tablat,w,c
 16444  0026D8  6E10               	movwf	(??_atoi+2)^0,c
 16445  0026DA  6A11               	clrf	(??_atoi+3)^0,c
 16446  0026DC  500E               	movf	??_atoi^0,w,c
 16447  0026DE  2610               	addwf	(??_atoi+2)^0,f,c
 16448  0026E0  500F               	movf	(??_atoi+1)^0,w,c
 16449  0026E2  2211               	addwfc	(??_atoi+3)^0,f,c
 16450  0026E4  5011               	movf	(??_atoi+3)^0,w,c
 16451  0026E6  E10A               	bnz	u6590
 16452  0026E8  0E0A               	movlw	10
 16453  0026EA  5C10               	subwf	(??_atoi+2)^0,w,c
 16454  0026EC  A0D8               	btfss	status,0,c
 16455  0026EE  EF7B  F013         	goto	u6591
 16456  0026F2  EF7E  F013         	goto	u6590
 16457  0026F6                     u6591:
 16458  0026F6  0E01               	movlw	1
 16459  0026F8  EF7F  F013         	goto	u6600
 16460  0026FC                     u6590:
 16461  0026FC  0E00               	movlw	0
 16462  0026FE                     u6600:
 16463  0026FE  6E16               	movwf	_atoi$2374^0,c
 16464  002700  6A17               	clrf	(_atoi$2374+1)^0,c
 16465  002702  5016               	movf	_atoi$2374^0,w,c
 16466  002704  1017               	iorwf	(_atoi$2374+1)^0,w,c
 16467  002706  A4D8               	btfss	status,2,c
 16468  002708  EF88  F013         	goto	u6611
 16469  00270C  EF8A  F013         	goto	u6610
 16470  002710                     u6611:
 16471  002710  EF45  F013         	goto	l6760
 16472  002714                     u6610:
 16473  002714  5012               	movf	atoi@neg^0,w,c
 16474  002716  1013               	iorwf	(atoi@neg+1)^0,w,c
 16475  002718  A4D8               	btfss	status,2,c
 16476  00271A  EF91  F013         	goto	u6621
 16477  00271E  EF93  F013         	goto	u6620
 16478  002722                     u6621:
 16479  002722  EFA1  F013         	goto	l2032
 16480  002726                     u6620:
 16481  002726  C019  F00E         	movff	atoi@n,??_atoi
 16482  00272A  C01A  F00F         	movff	atoi@n+1,??_atoi+1
 16483  00272E  1E0E               	comf	??_atoi^0,f,c
 16484  002730  1E0F               	comf	(??_atoi+1)^0,f,c
 16485  002732  4A0E               	infsnz	??_atoi^0,f,c
 16486  002734  2A0F               	incf	(??_atoi+1)^0,f,c
 16487  002736  C00E  F00C         	movff	??_atoi,?_atoi
 16488  00273A  C00F  F00D         	movff	??_atoi+1,?_atoi+1
 16489  00273E  EFA5  F013         	goto	l2035
 16490  002742                     l2032:
 16491  002742  C019  F00C         	movff	atoi@n,?_atoi
 16492  002746  C01A  F00D         	movff	atoi@n+1,?_atoi+1
 16493  00274A                     l2035:
 16494  00274A  0012               	return		;funcret
 16495  00274C                     __end_of_atoi:
 16496                           	opt callstack 0
 16497                           
 16498 ;; *************** function _isspace *****************
 16499 ;; Defined at:
 16500 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 16501 ;; Parameters:    Size  Location     Type
 16502 ;;  c               2    4[COMRAM] int 
 16503 ;; Auto vars:     Size  Location     Type
 16504 ;;		None
 16505 ;; Return value:  Size  Location     Type
 16506 ;;                  2    4[COMRAM] int 
 16507 ;; Registers used:
 16508 ;;		wreg, status,2, status,0
 16509 ;; Tracked objects:
 16510 ;;		On entry : 0/0
 16511 ;;		On exit  : 0/0
 16512 ;;		Unchanged: 0/0
 16513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16514 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16515 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16516 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16517 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16518 ;;Total ram usage:        7 bytes
 16519 ;; Hardware stack levels used:    1
 16520 ;; Hardware stack levels required when called:    4
 16521 ;; This function calls:
 16522 ;;		Nothing
 16523 ;; This function is called by:
 16524 ;;		_atoi
 16525 ;; This function uses a non-reentrant model
 16526 ;;
 16527                           
 16528                           	psect	text72
 16529  004018                     __ptext72:
 16530                           	opt callstack 0
 16531  004018                     _isspace:
 16532                           	opt callstack 22
 16533  004018  0E01               	movlw	1
 16534  00401A  6E0B               	movwf	_isspace$2399^0,c
 16535  00401C  0E20               	movlw	32
 16536  00401E  1805               	xorwf	isspace@c^0,w,c
 16537  004020  1006               	iorwf	(isspace@c+1)^0,w,c
 16538  004022  B4D8               	btfsc	status,2,c
 16539  004024  EF16  F020         	goto	u6051
 16540  004028  EF18  F020         	goto	u6050
 16541  00402C                     u6051:
 16542  00402C  EF31  F020         	goto	l6526
 16543  004030                     u6050:
 16544  004030  0EF7               	movlw	247
 16545  004032  6E07               	movwf	??_isspace^0,c
 16546  004034  0EFF               	movlw	255
 16547  004036  6E08               	movwf	(??_isspace+1)^0,c
 16548  004038  C005  F009         	movff	isspace@c,??_isspace+2
 16549  00403C  C006  F00A         	movff	isspace@c+1,??_isspace+3
 16550  004040  5007               	movf	??_isspace^0,w,c
 16551  004042  2609               	addwf	(??_isspace+2)^0,f,c
 16552  004044  5008               	movf	(??_isspace+1)^0,w,c
 16553  004046  220A               	addwfc	(??_isspace+3)^0,f,c
 16554  004048  500A               	movf	(??_isspace+3)^0,w,c
 16555  00404A  E109               	bnz	u6060
 16556  00404C  0E05               	movlw	5
 16557  00404E  5C09               	subwf	(??_isspace+2)^0,w,c
 16558  004050  A0D8               	btfss	status,0,c
 16559  004052  EF2D  F020         	goto	u6061
 16560  004056  EF2F  F020         	goto	u6060
 16561  00405A                     u6061:
 16562  00405A  EF31  F020         	goto	l6526
 16563  00405E                     u6060:
 16564  00405E  0E00               	movlw	0
 16565  004060  6E0B               	movwf	_isspace$2399^0,c
 16566  004062                     l6526:
 16567  004062  C00B  F005         	movff	_isspace$2399,?_isspace
 16568  004066  6A06               	clrf	(?_isspace+1)^0,c
 16569  004068  0012               	return		;funcret
 16570  00406A                     __end_of_isspace:
 16571                           	opt callstack 0
 16572                           
 16573 ;; *************** function _isdigit *****************
 16574 ;; Defined at:
 16575 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 16576 ;; Parameters:    Size  Location     Type
 16577 ;;  c               2    4[COMRAM] int 
 16578 ;; Auto vars:     Size  Location     Type
 16579 ;;		None
 16580 ;; Return value:  Size  Location     Type
 16581 ;;                  2    4[COMRAM] int 
 16582 ;; Registers used:
 16583 ;;		wreg, status,2, status,0
 16584 ;; Tracked objects:
 16585 ;;		On entry : 0/0
 16586 ;;		On exit  : 0/0
 16587 ;;		Unchanged: 0/0
 16588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16589 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16591 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16592 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16593 ;;Total ram usage:        6 bytes
 16594 ;; Hardware stack levels used:    1
 16595 ;; Hardware stack levels required when called:    4
 16596 ;; This function calls:
 16597 ;;		Nothing
 16598 ;; This function is called by:
 16599 ;;		_vfpfcnvrt
 16600 ;;		_atoi
 16601 ;; This function uses a non-reentrant model
 16602 ;;
 16603                           
 16604                           	psect	text73
 16605  00449A                     __ptext73:
 16606                           	opt callstack 0
 16607  00449A                     _isdigit:
 16608                           	opt callstack 23
 16609  00449A  0ED0               	movlw	208
 16610  00449C  6E07               	movwf	??_isdigit^0,c
 16611  00449E  0EFF               	movlw	255
 16612  0044A0  6E08               	movwf	(??_isdigit+1)^0,c
 16613  0044A2  C005  F009         	movff	isdigit@c,??_isdigit+2
 16614  0044A6  C006  F00A         	movff	isdigit@c+1,??_isdigit+3
 16615  0044AA  5007               	movf	??_isdigit^0,w,c
 16616  0044AC  2609               	addwf	(??_isdigit+2)^0,f,c
 16617  0044AE  5008               	movf	(??_isdigit+1)^0,w,c
 16618  0044B0  220A               	addwfc	(??_isdigit+3)^0,f,c
 16619  0044B2  500A               	movf	(??_isdigit+3)^0,w,c
 16620  0044B4  E10A               	bnz	u5830
 16621  0044B6  0E0A               	movlw	10
 16622  0044B8  5C09               	subwf	(??_isdigit+2)^0,w,c
 16623  0044BA  A0D8               	btfss	status,0,c
 16624  0044BC  EF62  F022         	goto	u5831
 16625  0044C0  EF65  F022         	goto	u5830
 16626  0044C4                     u5831:
 16627  0044C4  0E01               	movlw	1
 16628  0044C6  EF66  F022         	goto	u5840
 16629  0044CA                     u5830:
 16630  0044CA  0E00               	movlw	0
 16631  0044CC                     u5840:
 16632  0044CC  6E05               	movwf	?_isdigit^0,c
 16633  0044CE  6A06               	clrf	(?_isdigit+1)^0,c
 16634  0044D0  0012               	return		;funcret
 16635  0044D2                     __end_of_isdigit:
 16636                           	opt callstack 0
 16637                           
 16638 ;; *************** function ___wmul *****************
 16639 ;; Defined at:
 16640 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 16641 ;; Parameters:    Size  Location     Type
 16642 ;;  multiplier      2    4[COMRAM] unsigned int 
 16643 ;;  multiplicand    2    6[COMRAM] unsigned int 
 16644 ;; Auto vars:     Size  Location     Type
 16645 ;;  product         2    8[COMRAM] unsigned int 
 16646 ;; Return value:  Size  Location     Type
 16647 ;;                  2    4[COMRAM] unsigned int 
 16648 ;; Registers used:
 16649 ;;		wreg, status,2, status,0, prodl, prodh
 16650 ;; Tracked objects:
 16651 ;;		On entry : 0/0
 16652 ;;		On exit  : 0/0
 16653 ;;		Unchanged: 0/0
 16654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16655 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16656 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16658 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16659 ;;Total ram usage:        6 bytes
 16660 ;; Hardware stack levels used:    1
 16661 ;; Hardware stack levels required when called:    4
 16662 ;; This function calls:
 16663 ;;		Nothing
 16664 ;; This function is called by:
 16665 ;;		_atoi
 16666 ;; This function uses a non-reentrant model
 16667 ;;
 16668                           
 16669                           	psect	text74
 16670  0045A6                     __ptext74:
 16671                           	opt callstack 0
 16672  0045A6                     ___wmul:
 16673                           	opt callstack 22
 16674  0045A6  5005               	movf	___wmul@multiplier^0,w,c
 16675  0045A8  0207               	mulwf	___wmul@multiplicand^0,c
 16676  0045AA  CFF3 F009          	movff	prodl,___wmul@product
 16677  0045AE  CFF4 F00A          	movff	prodh,___wmul@product+1
 16678  0045B2  5005               	movf	___wmul@multiplier^0,w,c
 16679  0045B4  0208               	mulwf	(___wmul@multiplicand+1)^0,c
 16680  0045B6  50F3               	movf	243,w,c
 16681  0045B8  260A               	addwf	(___wmul@product+1)^0,f,c
 16682  0045BA  5006               	movf	(___wmul@multiplier+1)^0,w,c
 16683  0045BC  0207               	mulwf	___wmul@multiplicand^0,c
 16684  0045BE  50F3               	movf	243,w,c
 16685  0045C0  260A               	addwf	(___wmul@product+1)^0,f,c
 16686  0045C2  C009  F005         	movff	___wmul@product,?___wmul
 16687  0045C6  C00A  F006         	movff	___wmul@product+1,?___wmul+1
 16688  0045CA  0012               	return		;funcret
 16689  0045CC                     __end_of___wmul:
 16690                           	opt callstack 0
 16691                           
 16692 ;; *************** function _ModbusError *****************
 16693 ;; Defined at:
 16694 ;;		line 468 in file "Modbus.c"
 16695 ;; Parameters:    Size  Location     Type
 16696 ;;  ErrorCode       2   19[COMRAM] int 
 16697 ;; Auto vars:     Size  Location     Type
 16698 ;;  i               2    0        int 
 16699 ;; Return value:  Size  Location     Type
 16700 ;;                  1    wreg      void 
 16701 ;; Registers used:
 16702 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16703 ;; Tracked objects:
 16704 ;;		On entry : 0/0
 16705 ;;		On exit  : 0/0
 16706 ;;		Unchanged: 0/0
 16707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16708 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16709 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16711 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16712 ;;Total ram usage:        4 bytes
 16713 ;; Hardware stack levels used:    1
 16714 ;; Hardware stack levels required when called:    6
 16715 ;; This function calls:
 16716 ;;		_UART1_Write_string
 16717 ;;		_generateCRC
 16718 ;; This function is called by:
 16719 ;;		_main
 16720 ;;		_ModbusFC03
 16721 ;;		_ModbusFC10
 16722 ;; This function uses a non-reentrant model
 16723 ;;
 16724                           
 16725                           	psect	text75
 16726  00361A                     __ptext75:
 16727                           	opt callstack 0
 16728  00361A                     _ModbusError:
 16729                           	opt callstack 23
 16730  00361A                     
 16731                           ;Modbus.c: 473:     MBResCnt = 0;
 16732  00361A  0E00               	movlw	0
 16733  00361C  0100               	movlb	0	; () banked
 16734  00361E  6FD6               	movwf	(_MBResCnt+1)& (0+255),b
 16735  003620  0E00               	movlw	0
 16736  003622  6FD5               	movwf	_MBResCnt& (0+255),b
 16737  003624                     
 16738                           ; BSR set to: 0
 16739                           ;Modbus.c: 474:     MBRespon[MBResCnt] = ModbusData[0];
 16740  003624  0E57               	movlw	low _MBRespon
 16741  003626  25D5               	addwf	_MBResCnt& (0+255),w,b
 16742  003628  6ED9               	movwf	fsr2l,c
 16743  00362A  0E02               	movlw	high _MBRespon
 16744  00362C  21D6               	addwfc	(_MBResCnt+1)& (0+255),w,b
 16745  00362E  6EDA               	movwf	fsr2h,c
 16746  003630  C100  FFDF         	movff	_ModbusData,indf2
 16747  003634                     
 16748                           ; BSR set to: 0
 16749                           ;Modbus.c: 475:     MBResCnt++;
 16750  003634  4BD5               	infsnz	_MBResCnt& (0+255),f,b
 16751  003636  2BD6               	incf	(_MBResCnt+1)& (0+255),f,b
 16752  003638                     
 16753                           ; BSR set to: 0
 16754                           ;Modbus.c: 476:     MBRespon[MBResCnt] = ModbusData[1] + 128;
 16755  003638  0E57               	movlw	low _MBRespon
 16756  00363A  25D5               	addwf	_MBResCnt& (0+255),w,b
 16757  00363C  6ED9               	movwf	fsr2l,c
 16758  00363E  0E02               	movlw	high _MBRespon
 16759  003640  21D6               	addwfc	(_MBResCnt+1)& (0+255),w,b
 16760  003642  6EDA               	movwf	fsr2h,c
 16761  003644  0101               	movlb	1	; () banked
 16762  003646  5101               	movf	(_ModbusData+1)& (0+255),w,b
 16763  003648  0F80               	addlw	128
 16764  00364A  6EDF               	movwf	indf2,c
 16765  00364C                     
 16766                           ; BSR set to: 1
 16767                           ;Modbus.c: 477:     MBResCnt++;
 16768  00364C  0100               	movlb	0	; () banked
 16769  00364E  4BD5               	infsnz	_MBResCnt& (0+255),f,b
 16770  003650  2BD6               	incf	(_MBResCnt+1)& (0+255),f,b
 16771  003652                     
 16772                           ; BSR set to: 0
 16773                           ;Modbus.c: 478:     MBRespon[MBResCnt] = ErrorCode;
 16774  003652  0E57               	movlw	low _MBRespon
 16775  003654  25D5               	addwf	_MBResCnt& (0+255),w,b
 16776  003656  6ED9               	movwf	fsr2l,c
 16777  003658  0E02               	movlw	high _MBRespon
 16778  00365A  21D6               	addwfc	(_MBResCnt+1)& (0+255),w,b
 16779  00365C  6EDA               	movwf	fsr2h,c
 16780  00365E  C014  FFDF         	movff	ModbusError@ErrorCode,indf2
 16781  003662                     
 16782                           ; BSR set to: 0
 16783                           ;Modbus.c: 479:     MBResCnt++;
 16784  003662  4BD5               	infsnz	_MBResCnt& (0+255),f,b
 16785  003664  2BD6               	incf	(_MBResCnt+1)& (0+255),f,b
 16786  003666                     
 16787                           ; BSR set to: 0
 16788                           ;Modbus.c: 481:     ByteHi = generateCRC(MBResCnt, 1);
 16789  003666  C0D5  F005         	movff	_MBResCnt,generateCRC@MessCnt
 16790  00366A  C0D6  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
 16791  00366E  0E01               	movlw	1
 16792  003670  6E07               	movwf	generateCRC@HiOrLo^0,c
 16793  003672  EC0B  F019         	call	_generateCRC	;wreg free
 16794  003676  C005  F0D3         	movff	?_generateCRC,_ByteHi
 16795  00367A  C006  F0D4         	movff	?_generateCRC+1,_ByteHi+1
 16796  00367E                     
 16797                           ;Modbus.c: 482:     ByteLo = generateCRC(MBResCnt, 0);
 16798  00367E  C0D5  F005         	movff	_MBResCnt,generateCRC@MessCnt
 16799  003682  C0D6  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
 16800  003686  0E00               	movlw	0
 16801  003688  6E07               	movwf	generateCRC@HiOrLo^0,c
 16802  00368A  EC0B  F019         	call	_generateCRC	;wreg free
 16803  00368E  C005  F0F4         	movff	?_generateCRC,_ByteLo
 16804  003692  C006  F0F5         	movff	?_generateCRC+1,_ByteLo+1
 16805  003696                     
 16806                           ;Modbus.c: 484:     MBRespon[MBResCnt] = ByteHi;
 16807  003696  0E57               	movlw	low _MBRespon
 16808  003698  0100               	movlb	0	; () banked
 16809  00369A  25D5               	addwf	_MBResCnt& (0+255),w,b
 16810  00369C  6ED9               	movwf	fsr2l,c
 16811  00369E  0E02               	movlw	high _MBRespon
 16812  0036A0  21D6               	addwfc	(_MBResCnt+1)& (0+255),w,b
 16813  0036A2  6EDA               	movwf	fsr2h,c
 16814  0036A4  C0D3  FFDF         	movff	_ByteHi,indf2
 16815  0036A8                     
 16816                           ; BSR set to: 0
 16817                           ;Modbus.c: 485:     MBRespon[MBResCnt +1] = ByteLo;
 16818  0036A8  0E58               	movlw	low (_MBRespon+1)
 16819  0036AA  25D5               	addwf	_MBResCnt& (0+255),w,b
 16820  0036AC  6ED9               	movwf	fsr2l,c
 16821  0036AE  0E02               	movlw	high (_MBRespon+1)
 16822  0036B0  21D6               	addwfc	(_MBResCnt+1)& (0+255),w,b
 16823  0036B2  6EDA               	movwf	fsr2h,c
 16824  0036B4  C0F4  FFDF         	movff	_ByteLo,indf2
 16825  0036B8                     
 16826                           ; BSR set to: 0
 16827                           ;Modbus.c: 486:     MBResCnt = MBResCnt +2;
 16828  0036B8  0E02               	movlw	2
 16829  0036BA  25D5               	addwf	_MBResCnt& (0+255),w,b
 16830  0036BC  6FD5               	movwf	_MBResCnt& (0+255),b
 16831  0036BE  0E00               	movlw	0
 16832  0036C0  21D6               	addwfc	(_MBResCnt+1)& (0+255),w,b
 16833  0036C2  6FD6               	movwf	(_MBResCnt+1)& (0+255),b
 16834  0036C4                     
 16835                           ; BSR set to: 0
 16836                           ;Modbus.c: 488:     UART1_Write_string(MBRespon,MBResCnt);
 16837  0036C4  0E57               	movlw	low _MBRespon
 16838  0036C6  6E06               	movwf	UART1_Write_string@data^0,c
 16839  0036C8  0E02               	movlw	high _MBRespon
 16840  0036CA  6E07               	movwf	(UART1_Write_string@data+1)^0,c
 16841  0036CC  C0D5  F008         	movff	_MBResCnt,UART1_Write_string@data_len
 16842  0036D0  C0D6  F009         	movff	_MBResCnt+1,UART1_Write_string@data_len+1
 16843  0036D4  EC2D  F01E         	call	_UART1_Write_string	;wreg free
 16844  0036D8  0012               	return		;funcret
 16845  0036DA                     __end_of_ModbusError:
 16846                           	opt callstack 0
 16847                           
 16848 ;; *************** function _generateCRC *****************
 16849 ;; Defined at:
 16850 ;;		line 396 in file "Modbus.c"
 16851 ;; Parameters:    Size  Location     Type
 16852 ;;  MessCnt         2    4[COMRAM] int 
 16853 ;;  HiOrLo          1    6[COMRAM] _Bool 
 16854 ;; Auto vars:     Size  Location     Type
 16855 ;;  crc             2   17[COMRAM] unsigned int 
 16856 ;;  j               2   15[COMRAM] int 
 16857 ;;  i               2   13[COMRAM] int 
 16858 ;;  crcLow          2   11[COMRAM] unsigned int 
 16859 ;;  crcHigh         2    9[COMRAM] unsigned int 
 16860 ;; Return value:  Size  Location     Type
 16861 ;;                  2    4[COMRAM] unsigned int 
 16862 ;; Registers used:
 16863 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16864 ;; Tracked objects:
 16865 ;;		On entry : 0/0
 16866 ;;		On exit  : 0/0
 16867 ;;		Unchanged: 0/0
 16868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16869 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16870 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16871 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16872 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16873 ;;Total ram usage:       15 bytes
 16874 ;; Hardware stack levels used:    1
 16875 ;; Hardware stack levels required when called:    4
 16876 ;; This function calls:
 16877 ;;		Nothing
 16878 ;; This function is called by:
 16879 ;;		_ModbusFC03
 16880 ;;		_ModbusFC10
 16881 ;;		_ModbusError
 16882 ;; This function uses a non-reentrant model
 16883 ;;
 16884                           
 16885                           	psect	text76
 16886  003216                     __ptext76:
 16887                           	opt callstack 0
 16888  003216                     _generateCRC:
 16889                           	opt callstack 25
 16890  003216                     
 16891                           ;Modbus.c: 397:   unsigned int crc = 0xFFFF;
 16892  003216  6812               	setf	generateCRC@crc^0,c
 16893  003218  6813               	setf	(generateCRC@crc+1)^0,c
 16894  00321A                     
 16895                           ;Modbus.c: 399:   unsigned int crcLow = 0;
 16896  00321A  0E00               	movlw	0
 16897  00321C  6E0D               	movwf	(generateCRC@crcLow+1)^0,c
 16898  00321E  0E00               	movlw	0
 16899  003220  6E0C               	movwf	generateCRC@crcLow^0,c
 16900                           
 16901                           ;Modbus.c: 400:   int i,j = 0;
 16902  003222  0E00               	movlw	0
 16903  003224  6E11               	movwf	(generateCRC@j+1)^0,c
 16904  003226  0E00               	movlw	0
 16905  003228  6E10               	movwf	generateCRC@j^0,c
 16906                           
 16907                           ;Modbus.c: 402:     for(i=0;i<MessCnt;i++){
 16908  00322A  0E00               	movlw	0
 16909  00322C  6E0F               	movwf	(generateCRC@i+1)^0,c
 16910  00322E  0E00               	movlw	0
 16911  003230  6E0E               	movwf	generateCRC@i^0,c
 16912  003232  EF4A  F019         	goto	l7142
 16913  003236                     l7124:
 16914                           
 16915                           ;Modbus.c: 403:       crc ^= MBRespon[i];
 16916  003236  0E57               	movlw	low _MBRespon
 16917  003238  240E               	addwf	generateCRC@i^0,w,c
 16918  00323A  6ED9               	movwf	fsr2l,c
 16919  00323C  0E02               	movlw	high _MBRespon
 16920  00323E  200F               	addwfc	(generateCRC@i+1)^0,w,c
 16921  003240  6EDA               	movwf	fsr2h,c
 16922  003242  50DF               	movf	indf2,w,c
 16923  003244  6E08               	movwf	??_generateCRC^0,c
 16924  003246  5008               	movf	??_generateCRC^0,w,c
 16925  003248  1A12               	xorwf	generateCRC@crc^0,f,c
 16926  00324A                     
 16927                           ;Modbus.c: 404:       for(j=8; j!=0; j--){
 16928  00324A  0E00               	movlw	0
 16929  00324C  6E11               	movwf	(generateCRC@j+1)^0,c
 16930  00324E  0E08               	movlw	8
 16931  003250  6E10               	movwf	generateCRC@j^0,c
 16932  003252                     l792:
 16933                           
 16934                           ;Modbus.c: 405:         if((crc & 0x0001) != 0){
 16935  003252  A012               	btfss	generateCRC@crc^0,0,c
 16936  003254  EF2E  F019         	goto	u7091
 16937  003258  EF30  F019         	goto	u7090
 16938  00325C                     u7091:
 16939  00325C  EF39  F019         	goto	l7136
 16940  003260                     u7090:
 16941  003260                     
 16942                           ;Modbus.c: 406:           crc >>= 1;
 16943  003260  90D8               	bcf	status,0,c
 16944  003262  3213               	rrcf	(generateCRC@crc+1)^0,f,c
 16945  003264  3212               	rrcf	generateCRC@crc^0,f,c
 16946  003266                     
 16947                           ;Modbus.c: 407:           crc ^= 0xA001;
 16948  003266  0E01               	movlw	1
 16949  003268  1A12               	xorwf	generateCRC@crc^0,f,c
 16950  00326A  0EA0               	movlw	160
 16951  00326C  1A13               	xorwf	(generateCRC@crc+1)^0,f,c
 16952                           
 16953                           ;Modbus.c: 408:         }
 16954  00326E  EF3C  F019         	goto	l795
 16955  003272                     l7136:
 16956                           
 16957                           ;Modbus.c: 410:           crc >>= 1;
 16958  003272  90D8               	bcf	status,0,c
 16959  003274  3213               	rrcf	(generateCRC@crc+1)^0,f,c
 16960  003276  3212               	rrcf	generateCRC@crc^0,f,c
 16961  003278                     l795:
 16962                           
 16963                           ;Modbus.c: 412:       }
 16964  003278  0610               	decf	generateCRC@j^0,f,c
 16965  00327A  A0D8               	btfss	status,0,c
 16966  00327C  0611               	decf	(generateCRC@j+1)^0,f,c
 16967  00327E  5010               	movf	generateCRC@j^0,w,c
 16968  003280  1011               	iorwf	(generateCRC@j+1)^0,w,c
 16969  003282  A4D8               	btfss	status,2,c
 16970  003284  EF46  F019         	goto	u7101
 16971  003288  EF48  F019         	goto	u7100
 16972  00328C                     u7101:
 16973  00328C  EF29  F019         	goto	l792
 16974  003290                     u7100:
 16975  003290                     
 16976                           ;Modbus.c: 413:     }
 16977  003290  4A0E               	infsnz	generateCRC@i^0,f,c
 16978  003292  2A0F               	incf	(generateCRC@i+1)^0,f,c
 16979  003294                     l7142:
 16980  003294  5005               	movf	generateCRC@MessCnt^0,w,c
 16981  003296  5C0E               	subwf	generateCRC@i^0,w,c
 16982  003298  500F               	movf	(generateCRC@i+1)^0,w,c
 16983  00329A  0A80               	xorlw	128
 16984  00329C  6E08               	movwf	??_generateCRC^0,c
 16985  00329E  5006               	movf	(generateCRC@MessCnt+1)^0,w,c
 16986  0032A0  0A80               	xorlw	128
 16987  0032A2  5808               	subwfb	??_generateCRC^0,w,c
 16988  0032A4  A0D8               	btfss	status,0,c
 16989  0032A6  EF57  F019         	goto	u7111
 16990  0032AA  EF59  F019         	goto	u7110
 16991  0032AE                     u7111:
 16992  0032AE  EF1B  F019         	goto	l7124
 16993  0032B2                     u7110:
 16994  0032B2                     
 16995                           ;Modbus.c: 415:     crcHigh = (crc & 0x00FF);
 16996  0032B2  5012               	movf	generateCRC@crc^0,w,c
 16997  0032B4  6E0A               	movwf	generateCRC@crcHigh^0,c
 16998  0032B6  6A0B               	clrf	(generateCRC@crcHigh+1)^0,c
 16999                           
 17000                           ;Modbus.c: 416:     crcLow = (crc & 0xFF00) >>8;
 17001  0032B8  C012  F008         	movff	generateCRC@crc,??_generateCRC
 17002  0032BC  C013  F009         	movff	generateCRC@crc+1,??_generateCRC+1
 17003  0032C0  C009  F008         	movff	??_generateCRC+1,??_generateCRC
 17004  0032C4  6A09               	clrf	(??_generateCRC+1)^0,c
 17005  0032C6  5008               	movf	??_generateCRC^0,w,c
 17006  0032C8  6E0C               	movwf	generateCRC@crcLow^0,c
 17007  0032CA  6A0D               	clrf	(generateCRC@crcLow+1)^0,c
 17008  0032CC                     
 17009                           ;Modbus.c: 418:     if(HiOrLo == 1){
 17010  0032CC  0407               	decf	generateCRC@HiOrLo^0,w,c
 17011  0032CE  A4D8               	btfss	status,2,c
 17012  0032D0  EF6C  F019         	goto	u7121
 17013  0032D4  EF6E  F019         	goto	u7120
 17014  0032D8                     u7121:
 17015  0032D8  EF74  F019         	goto	l797
 17016  0032DC                     u7120:
 17017  0032DC                     
 17018                           ;Modbus.c: 419:         return crcHigh;
 17019  0032DC  C00A  F005         	movff	generateCRC@crcHigh,?_generateCRC
 17020  0032E0  C00B  F006         	movff	generateCRC@crcHigh+1,?_generateCRC+1
 17021  0032E4  EF78  F019         	goto	l798
 17022  0032E8                     l797:
 17023                           
 17024                           ;Modbus.c: 421:         return crcLow;
 17025  0032E8  C00C  F005         	movff	generateCRC@crcLow,?_generateCRC
 17026  0032EC  C00D  F006         	movff	generateCRC@crcLow+1,?_generateCRC+1
 17027  0032F0                     l798:
 17028  0032F0  0012               	return		;funcret
 17029  0032F2                     __end_of_generateCRC:
 17030                           	opt callstack 0
 17031                           
 17032 ;; *************** function _UART1_Write_string *****************
 17033 ;; Defined at:
 17034 ;;		line 426 in file "Modbus.c"
 17035 ;; Parameters:    Size  Location     Type
 17036 ;;  data            2    5[COMRAM] PTR unsigned char 
 17037 ;;		 -> MBRespon(75), 
 17038 ;;  data_len        2    7[COMRAM] int 
 17039 ;; Auto vars:     Size  Location     Type
 17040 ;;  i               2   10[COMRAM] int 
 17041 ;; Return value:  Size  Location     Type
 17042 ;;                  1    wreg      void 
 17043 ;; Registers used:
 17044 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17045 ;; Tracked objects:
 17046 ;;		On entry : 0/0
 17047 ;;		On exit  : 0/0
 17048 ;;		Unchanged: 0/0
 17049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17050 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17051 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17052 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17053 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17054 ;;Total ram usage:        7 bytes
 17055 ;; Hardware stack levels used:    1
 17056 ;; Hardware stack levels required when called:    5
 17057 ;; This function calls:
 17058 ;;		_EUSART1_Write
 17059 ;;		_EUSART1_is_tx_done
 17060 ;;		_EUSART1_is_tx_ready
 17061 ;;		_TXMode
 17062 ;; This function is called by:
 17063 ;;		_ModbusFC03
 17064 ;;		_ModbusFC10
 17065 ;;		_ModbusError
 17066 ;; This function uses a non-reentrant model
 17067 ;;
 17068                           
 17069                           	psect	text77
 17070  003C5A                     __ptext77:
 17071                           	opt callstack 0
 17072  003C5A                     _UART1_Write_string:
 17073                           	opt callstack 24
 17074  003C5A                     
 17075                           ;Modbus.c: 426: void UART1_Write_string(unsigned char * data, int data_len);Modbus.c: 42
      +                          7: {;Modbus.c: 428:     TXMode();
 17076  003C5A  ECAA  F023         	call	_TXMode	;wreg free
 17077  003C5E                     l7154:
 17078  003C5E  EC41  F023         	call	_EUSART1_is_tx_ready	;wreg free
 17079  003C62  0900               	iorlw	0
 17080  003C64  B4D8               	btfsc	status,2,c
 17081  003C66  EF37  F01E         	goto	u7131
 17082  003C6A  EF39  F01E         	goto	u7130
 17083  003C6E                     u7131:
 17084  003C6E  EF2F  F01E         	goto	l7154
 17085  003C72                     u7130:
 17086  003C72                     
 17087                           ;Modbus.c: 430:     for (int i = 0; i < data_len; i++) {
 17088  003C72  0E00               	movlw	0
 17089  003C74  6E0C               	movwf	(UART1_Write_string@i+1)^0,c
 17090  003C76  0E00               	movlw	0
 17091  003C78  6E0B               	movwf	UART1_Write_string@i^0,c
 17092  003C7A  EF54  F01E         	goto	l7164
 17093  003C7E                     l7158:
 17094                           
 17095                           ;Modbus.c: 431:         EUSART1_Write(data[i]);
 17096  003C7E  500B               	movf	UART1_Write_string@i^0,w,c
 17097  003C80  2406               	addwf	UART1_Write_string@data^0,w,c
 17098  003C82  6ED9               	movwf	fsr2l,c
 17099  003C84  500C               	movf	(UART1_Write_string@i+1)^0,w,c
 17100  003C86  2007               	addwfc	(UART1_Write_string@data+1)^0,w,c
 17101  003C88  6EDA               	movwf	fsr2h,c
 17102  003C8A  50DF               	movf	indf2,w,c
 17103  003C8C  EC57  F01F         	call	_EUSART1_Write
 17104  003C90                     l7160:
 17105  003C90  EC62  F023         	call	_EUSART1_is_tx_done	;wreg free
 17106  003C94  0900               	iorlw	0
 17107  003C96  B4D8               	btfsc	status,2,c
 17108  003C98  EF50  F01E         	goto	u7141
 17109  003C9C  EF52  F01E         	goto	u7140
 17110  003CA0                     u7141:
 17111  003CA0  EF48  F01E         	goto	l7160
 17112  003CA4                     u7140:
 17113  003CA4                     
 17114                           ;Modbus.c: 433:     }
 17115  003CA4  4A0B               	infsnz	UART1_Write_string@i^0,f,c
 17116  003CA6  2A0C               	incf	(UART1_Write_string@i+1)^0,f,c
 17117  003CA8                     l7164:
 17118  003CA8  5008               	movf	UART1_Write_string@data_len^0,w,c
 17119  003CAA  5C0B               	subwf	UART1_Write_string@i^0,w,c
 17120  003CAC  500C               	movf	(UART1_Write_string@i+1)^0,w,c
 17121  003CAE  0A80               	xorlw	128
 17122  003CB0  6E0A               	movwf	??_UART1_Write_string^0,c
 17123  003CB2  5009               	movf	(UART1_Write_string@data_len+1)^0,w,c
 17124  003CB4  0A80               	xorlw	128
 17125  003CB6  580A               	subwfb	??_UART1_Write_string^0,w,c
 17126  003CB8  A0D8               	btfss	status,0,c
 17127  003CBA  EF61  F01E         	goto	u7151
 17128  003CBE  EF63  F01E         	goto	u7150
 17129  003CC2                     u7151:
 17130  003CC2  EF3F  F01E         	goto	l7158
 17131  003CC6                     u7150:
 17132  003CC6  0012               	return		;funcret
 17133  003CC8                     __end_of_UART1_Write_string:
 17134                           	opt callstack 0
 17135                           
 17136 ;; *************** function _TXMode *****************
 17137 ;; Defined at:
 17138 ;;		line 36 in file "Modbus.c"
 17139 ;; Parameters:    Size  Location     Type
 17140 ;;		None
 17141 ;; Auto vars:     Size  Location     Type
 17142 ;;		None
 17143 ;; Return value:  Size  Location     Type
 17144 ;;                  1    wreg      void 
 17145 ;; Registers used:
 17146 ;;		None
 17147 ;; Tracked objects:
 17148 ;;		On entry : 0/0
 17149 ;;		On exit  : 0/0
 17150 ;;		Unchanged: 0/0
 17151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17156 ;;Total ram usage:        0 bytes
 17157 ;; Hardware stack levels used:    1
 17158 ;; Hardware stack levels required when called:    4
 17159 ;; This function calls:
 17160 ;;		Nothing
 17161 ;; This function is called by:
 17162 ;;		_UART1_Write_string
 17163 ;; This function uses a non-reentrant model
 17164 ;;
 17165                           
 17166                           	psect	text78
 17167  004754                     __ptext78:
 17168                           	opt callstack 0
 17169  004754                     _TXMode:
 17170                           	opt callstack 24
 17171  004754  8086               	bsf	134,0,c	;volatile
 17172  004756  8683               	bsf	131,3,c	;volatile
 17173  004758  0012               	return		;funcret
 17174  00475A                     __end_of_TXMode:
 17175                           	opt callstack 0
 17176                           
 17177 ;; *************** function _EUSART1_is_tx_ready *****************
 17178 ;; Defined at:
 17179 ;;		line 134 in file "mcc_generated_files/eusart1.c"
 17180 ;; Parameters:    Size  Location     Type
 17181 ;;		None
 17182 ;; Auto vars:     Size  Location     Type
 17183 ;;		None
 17184 ;; Return value:  Size  Location     Type
 17185 ;;                  1    wreg      _Bool 
 17186 ;; Registers used:
 17187 ;;		wreg, status,2
 17188 ;; Tracked objects:
 17189 ;;		On entry : 0/0
 17190 ;;		On exit  : 0/0
 17191 ;;		Unchanged: 0/0
 17192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17197 ;;Total ram usage:        0 bytes
 17198 ;; Hardware stack levels used:    1
 17199 ;; Hardware stack levels required when called:    4
 17200 ;; This function calls:
 17201 ;;		Nothing
 17202 ;; This function is called by:
 17203 ;;		_UART1_Write_string
 17204 ;; This function uses a non-reentrant model
 17205 ;;
 17206                           
 17207                           	psect	text79
 17208  004682                     __ptext79:
 17209                           	opt callstack 0
 17210  004682                     _EUSART1_is_tx_ready:
 17211                           	opt callstack 24
 17212  004682                     
 17213                           ;mcc_generated_files/eusart1.c: 136:     return (eusart1TxBufferRemaining ? 1 : 0);
 17214  004682  0100               	movlb	0	; () banked
 17215  004684  51FE               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
 17216  004686  A4D8               	btfss	status,2,c
 17217  004688  EF48  F023         	goto	u6871
 17218  00468C  EF4B  F023         	goto	u6870
 17219  004690                     u6871:
 17220  004690  0E01               	movlw	1
 17221  004692  EF4C  F023         	goto	u6880
 17222  004696                     u6870:
 17223  004696  0E00               	movlw	0
 17224  004698                     u6880:
 17225  004698                     
 17226                           ; BSR set to: 0
 17227  004698  0012               	return		;funcret
 17228  00469A                     __end_of_EUSART1_is_tx_ready:
 17229                           	opt callstack 0
 17230                           
 17231 ;; *************** function _EUSART1_is_tx_done *****************
 17232 ;; Defined at:
 17233 ;;		line 144 in file "mcc_generated_files/eusart1.c"
 17234 ;; Parameters:    Size  Location     Type
 17235 ;;		None
 17236 ;; Auto vars:     Size  Location     Type
 17237 ;;		None
 17238 ;; Return value:  Size  Location     Type
 17239 ;;                  1    wreg      _Bool 
 17240 ;; Registers used:
 17241 ;;		wreg
 17242 ;; Tracked objects:
 17243 ;;		On entry : 0/0
 17244 ;;		On exit  : 0/0
 17245 ;;		Unchanged: 0/0
 17246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17251 ;;Total ram usage:        0 bytes
 17252 ;; Hardware stack levels used:    1
 17253 ;; Hardware stack levels required when called:    4
 17254 ;; This function calls:
 17255 ;;		Nothing
 17256 ;; This function is called by:
 17257 ;;		_UART1_Write_string
 17258 ;; This function uses a non-reentrant model
 17259 ;;
 17260                           
 17261                           	psect	text80
 17262  0046C4                     __ptext80:
 17263                           	opt callstack 0
 17264  0046C4                     _EUSART1_is_tx_done:
 17265                           	opt callstack 24
 17266  0046C4                     
 17267                           ;mcc_generated_files/eusart1.c: 146:     return TX1STAbits.TRMT;
 17268  0046C4  B29E               	btfsc	158,1,c	;volatile
 17269  0046C6  EF67  F023         	goto	u6891
 17270  0046CA  EF6A  F023         	goto	u6890
 17271  0046CE                     u6891:
 17272  0046CE  0E01               	movlw	1
 17273  0046D0  EF6B  F023         	goto	u6896
 17274  0046D4                     u6890:
 17275  0046D4  0E00               	movlw	0
 17276  0046D6                     u6896:
 17277  0046D6  0012               	return		;funcret
 17278  0046D8                     __end_of_EUSART1_is_tx_done:
 17279                           	opt callstack 0
 17280                           
 17281 ;; *************** function _EUSART1_Write *****************
 17282 ;; Defined at:
 17283 ;;		line 175 in file "mcc_generated_files/eusart1.c"
 17284 ;; Parameters:    Size  Location     Type
 17285 ;;  txData          1    wreg     unsigned char 
 17286 ;; Auto vars:     Size  Location     Type
 17287 ;;  txData          1    4[COMRAM] unsigned char 
 17288 ;; Return value:  Size  Location     Type
 17289 ;;                  1    wreg      void 
 17290 ;; Registers used:
 17291 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17292 ;; Tracked objects:
 17293 ;;		On entry : 0/0
 17294 ;;		On exit  : 0/0
 17295 ;;		Unchanged: 0/0
 17296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17298 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17300 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17301 ;;Total ram usage:        1 bytes
 17302 ;; Hardware stack levels used:    1
 17303 ;; Hardware stack levels required when called:    4
 17304 ;; This function calls:
 17305 ;;		Nothing
 17306 ;; This function is called by:
 17307 ;;		_UART1_Write_string
 17308 ;; This function uses a non-reentrant model
 17309 ;;
 17310                           
 17311                           	psect	text81
 17312  003EAE                     __ptext81:
 17313                           	opt callstack 0
 17314  003EAE                     _EUSART1_Write:
 17315                           	opt callstack 24
 17316                           
 17317                           ;incstack = 0
 17318                           ;EUSART1_Write@txData stored from wreg
 17319  003EAE  6E05               	movwf	EUSART1_Write@txData^0,c
 17320  003EB0                     l6994:
 17321                           
 17322                           ;mcc_generated_files/eusart1.c: 177:     while(0 == eusart1TxBufferRemaining)
 17323  003EB0  0100               	movlb	0	; () banked
 17324  003EB2  51FE               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
 17325  003EB4  B4D8               	btfsc	status,2,c
 17326  003EB6  EF5F  F01F         	goto	u6901
 17327  003EBA  EF61  F01F         	goto	u6900
 17328  003EBE                     u6901:
 17329  003EBE  EF58  F01F         	goto	l6994
 17330  003EC2                     u6900:
 17331  003EC2                     
 17332                           ; BSR set to: 0
 17333                           ;mcc_generated_files/eusart1.c: 181:     if(0 == PIE3bits.TX1IE)
 17334  003EC2  010E               	movlb	14	; () banked
 17335  003EC4  B9C5               	btfsc	197,4,b	;volatile
 17336  003EC6  EF67  F01F         	goto	u6911
 17337  003ECA  EF69  F01F         	goto	u6910
 17338  003ECE                     u6911:
 17339  003ECE  EF6D  F01F         	goto	l475
 17340  003ED2                     u6910:
 17341  003ED2                     
 17342                           ; BSR set to: 14
 17343                           ;mcc_generated_files/eusart1.c: 182:     {;mcc_generated_files/eusart1.c: 183:         T
      +                          X1REG = txData;
 17344  003ED2  C005  FF9A         	movff	EUSART1_Write@txData,3994	;volatile
 17345                           
 17346                           ;mcc_generated_files/eusart1.c: 184:     }
 17347  003ED6  EF83  F01F         	goto	l7008
 17348  003EDA                     l475:
 17349                           
 17350                           ; BSR set to: 14
 17351                           ;mcc_generated_files/eusart1.c: 186:     {;mcc_generated_files/eusart1.c: 187:         P
      +                          IE3bits.TX1IE = 0;
 17352  003EDA  99C5               	bcf	197,4,b	;volatile
 17353  003EDC                     
 17354                           ; BSR set to: 14
 17355                           ;mcc_generated_files/eusart1.c: 188:         eusart1TxBuffer[eusart1TxHead++] = txData;
 17356  003EDC  0EC2               	movlw	low _eusart1TxBuffer
 17357  003EDE  0100               	movlb	0	; () banked
 17358  003EE0  25E2               	addwf	_eusart1TxHead& (0+255),w,b	;volatile
 17359  003EE2  6ED9               	movwf	fsr2l,c
 17360  003EE4  6ADA               	clrf	fsr2h,c
 17361  003EE6  0E02               	movlw	high _eusart1TxBuffer
 17362  003EE8  22DA               	addwfc	fsr2h,f,c
 17363  003EEA  C005  FFDF         	movff	EUSART1_Write@txData,indf2
 17364  003EEE                     
 17365                           ; BSR set to: 0
 17366  003EEE  2BE2               	incf	_eusart1TxHead& (0+255),f,b	;volatile
 17367  003EF0                     
 17368                           ; BSR set to: 0
 17369                           ;mcc_generated_files/eusart1.c: 189:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
 17370  003EF0  0E0F               	movlw	15
 17371  003EF2  65E2               	cpfsgt	_eusart1TxHead& (0+255),b	;volatile
 17372  003EF4  EF7E  F01F         	goto	u6921
 17373  003EF8  EF80  F01F         	goto	u6920
 17374  003EFC                     u6921:
 17375  003EFC  EF82  F01F         	goto	l7006
 17376  003F00                     u6920:
 17377  003F00                     
 17378                           ; BSR set to: 0
 17379                           ;mcc_generated_files/eusart1.c: 190:         {;mcc_generated_files/eusart1.c: 191:      
      +                                 eusart1TxHead = 0;
 17380  003F00  0E00               	movlw	0
 17381  003F02  6FE2               	movwf	_eusart1TxHead& (0+255),b	;volatile
 17382  003F04                     l7006:
 17383                           
 17384                           ; BSR set to: 0
 17385                           ;mcc_generated_files/eusart1.c: 193:         eusart1TxBufferRemaining--;
 17386  003F04  07FE               	decf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 17387  003F06                     l7008:
 17388                           
 17389                           ;mcc_generated_files/eusart1.c: 195:     PIE3bits.TX1IE = 1;
 17390  003F06  010E               	movlb	14	; () banked
 17391  003F08  89C5               	bsf	197,4,b	;volatile
 17392  003F0A                     
 17393                           ; BSR set to: 14
 17394  003F0A  0012               	return		;funcret
 17395  003F0C                     __end_of_EUSART1_Write:
 17396                           	opt callstack 0
 17397                           
 17398 ;; *************** function _ADCC_GetSingleConversion *****************
 17399 ;; Defined at:
 17400 ;;		line 131 in file "mcc_generated_files/adcc.c"
 17401 ;; Parameters:    Size  Location     Type
 17402 ;;  channel         1    wreg     enum E10046
 17403 ;; Auto vars:     Size  Location     Type
 17404 ;;  channel         1    8[COMRAM] enum E10046
 17405 ;; Return value:  Size  Location     Type
 17406 ;;                  2    4[COMRAM] unsigned short 
 17407 ;; Registers used:
 17408 ;;		wreg, status,2, status,0
 17409 ;; Tracked objects:
 17410 ;;		On entry : 0/0
 17411 ;;		On exit  : 0/0
 17412 ;;		Unchanged: 0/0
 17413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17414 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17415 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17416 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17417 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17418 ;;Total ram usage:        5 bytes
 17419 ;; Hardware stack levels used:    1
 17420 ;; Hardware stack levels required when called:    4
 17421 ;; This function calls:
 17422 ;;		Nothing
 17423 ;; This function is called by:
 17424 ;;		_ModbusFC03
 17425 ;;		_InitialiseString
 17426 ;; This function uses a non-reentrant model
 17427 ;;
 17428                           
 17429                           	psect	text82
 17430  0044D2                     __ptext82:
 17431                           	opt callstack 0
 17432  0044D2                     _ADCC_GetSingleConversion:
 17433                           	opt callstack 24
 17434                           
 17435                           ; BSR set to: 14
 17436                           ;incstack = 0
 17437                           ;ADCC_GetSingleConversion@channel stored from wreg
 17438  0044D2  6E09               	movwf	ADCC_GetSingleConversion@channel^0,c
 17439  0044D4                     
 17440                           ;mcc_generated_files/adcc.c: 131: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 132: {;mcc_generated_files/adcc.c: 134:     ADPCH = 
      +                          channel;
 17441  0044D4  C009  FF5F         	movff	ADCC_GetSingleConversion@channel,3935	;volatile
 17442  0044D8                     
 17443                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADON = 1;
 17444  0044D8  8E60               	bsf	96,7,c	;volatile
 17445  0044DA                     
 17446                           ;mcc_generated_files/adcc.c: 140:     ADCON0bits.ADCONT = 0;
 17447  0044DA  9C60               	bcf	96,6,c	;volatile
 17448  0044DC                     
 17449                           ;mcc_generated_files/adcc.c: 143:     ADCON0bits.ADGO = 1;
 17450  0044DC  8060               	bsf	96,0,c	;volatile
 17451  0044DE                     l1077:
 17452                           
 17453                           ;mcc_generated_files/adcc.c: 147:     while (ADCON0bits.ADGO)
 17454  0044DE  B060               	btfsc	96,0,c	;volatile
 17455  0044E0  EF74  F022         	goto	u7081
 17456  0044E4  EF76  F022         	goto	u7080
 17457  0044E8                     u7081:
 17458  0044E8  EF6F  F022         	goto	l1077
 17459  0044EC                     u7080:
 17460  0044EC                     
 17461                           ;mcc_generated_files/adcc.c: 153:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 17462  0044EC  5064               	movf	100,w,c	;volatile
 17463  0044EE  6E08               	movwf	(??_ADCC_GetSingleConversion+1)^0,c
 17464  0044F0  6A07               	clrf	??_ADCC_GetSingleConversion^0,c
 17465  0044F2  5063               	movf	99,w,c	;volatile
 17466  0044F4  2407               	addwf	??_ADCC_GetSingleConversion^0,w,c
 17467  0044F6  6E05               	movwf	?_ADCC_GetSingleConversion^0,c
 17468  0044F8  0E00               	movlw	0
 17469  0044FA  2008               	addwfc	(??_ADCC_GetSingleConversion+1)^0,w,c
 17470  0044FC  6E06               	movwf	(?_ADCC_GetSingleConversion+1)^0,c
 17471  0044FE  0012               	return		;funcret
 17472  004500                     __end_of_ADCC_GetSingleConversion:
 17473                           	opt callstack 0
 17474                           
 17475 ;; *************** function _ClearModbusRespon *****************
 17476 ;; Defined at:
 17477 ;;		line 458 in file "Modbus.c"
 17478 ;; Parameters:    Size  Location     Type
 17479 ;;		None
 17480 ;; Auto vars:     Size  Location     Type
 17481 ;;  i               2    4[COMRAM] int 
 17482 ;; Return value:  Size  Location     Type
 17483 ;;                  1    wreg      void 
 17484 ;; Registers used:
 17485 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17486 ;; Tracked objects:
 17487 ;;		On entry : 0/0
 17488 ;;		On exit  : 0/0
 17489 ;;		Unchanged: 0/0
 17490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17492 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17494 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17495 ;;Total ram usage:        2 bytes
 17496 ;; Hardware stack levels used:    1
 17497 ;; Hardware stack levels required when called:    4
 17498 ;; This function calls:
 17499 ;;		Nothing
 17500 ;; This function is called by:
 17501 ;;		_main
 17502 ;; This function uses a non-reentrant model
 17503 ;;
 17504                           
 17505                           	psect	text83
 17506  0042B4                     __ptext83:
 17507                           	opt callstack 0
 17508  0042B4                     _ClearModbusRespon:
 17509                           	opt callstack 26
 17510  0042B4                     
 17511                           ;Modbus.c: 459:     int i = 0;
 17512  0042B4  0E00               	movlw	0
 17513  0042B6  6E06               	movwf	(ClearModbusRespon@i+1)^0,c
 17514  0042B8  0E00               	movlw	0
 17515  0042BA  6E05               	movwf	ClearModbusRespon@i^0,c
 17516                           
 17517                           ;Modbus.c: 460:     for(i=0; i<32; i++ ){
 17518  0042BC  0E00               	movlw	0
 17519  0042BE  6E06               	movwf	(ClearModbusRespon@i+1)^0,c
 17520  0042C0  0E00               	movlw	0
 17521  0042C2  6E05               	movwf	ClearModbusRespon@i^0,c
 17522  0042C4                     l7590:
 17523                           
 17524                           ;Modbus.c: 461:         MBRespon[i] = 0xFF;
 17525  0042C4  0E57               	movlw	low _MBRespon
 17526  0042C6  2405               	addwf	ClearModbusRespon@i^0,w,c
 17527  0042C8  6ED9               	movwf	fsr2l,c
 17528  0042CA  0E02               	movlw	high _MBRespon
 17529  0042CC  2006               	addwfc	(ClearModbusRespon@i+1)^0,w,c
 17530  0042CE  6EDA               	movwf	fsr2h,c
 17531  0042D0  0EFF               	movlw	255
 17532  0042D2  6EDF               	movwf	indf2,c
 17533  0042D4                     
 17534                           ;Modbus.c: 462:     }
 17535  0042D4  4A05               	infsnz	ClearModbusRespon@i^0,f,c
 17536  0042D6  2A06               	incf	(ClearModbusRespon@i+1)^0,f,c
 17537  0042D8  BE06               	btfsc	(ClearModbusRespon@i+1)^0,7,c
 17538  0042DA  EF78  F021         	goto	u7561
 17539  0042DE  5006               	movf	(ClearModbusRespon@i+1)^0,w,c
 17540  0042E0  E109               	bnz	u7560
 17541  0042E2  0E20               	movlw	32
 17542  0042E4  5C05               	subwf	ClearModbusRespon@i^0,w,c
 17543  0042E6  A0D8               	btfss	status,0,c
 17544  0042E8  EF78  F021         	goto	u7561
 17545  0042EC  EF7A  F021         	goto	u7560
 17546  0042F0                     u7561:
 17547  0042F0  EF62  F021         	goto	l7590
 17548  0042F4                     u7560:
 17549  0042F4  0012               	return		;funcret
 17550  0042F6                     __end_of_ClearModbusRespon:
 17551                           	opt callstack 0
 17552                           
 17553 ;; *************** function _ClearModbusData *****************
 17554 ;; Defined at:
 17555 ;;		line 48 in file "Modbus.c"
 17556 ;; Parameters:    Size  Location     Type
 17557 ;;		None
 17558 ;; Auto vars:     Size  Location     Type
 17559 ;;  i               2    4[COMRAM] int 
 17560 ;; Return value:  Size  Location     Type
 17561 ;;                  1    wreg      void 
 17562 ;; Registers used:
 17563 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17564 ;; Tracked objects:
 17565 ;;		On entry : 0/0
 17566 ;;		On exit  : 0/0
 17567 ;;		Unchanged: 0/0
 17568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17570 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17572 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17573 ;;Total ram usage:        2 bytes
 17574 ;; Hardware stack levels used:    1
 17575 ;; Hardware stack levels required when called:    4
 17576 ;; This function calls:
 17577 ;;		Nothing
 17578 ;; This function is called by:
 17579 ;;		_main
 17580 ;; This function uses a non-reentrant model
 17581 ;;
 17582                           
 17583                           	psect	text84
 17584  00410A                     __ptext84:
 17585                           	opt callstack 0
 17586  00410A                     _ClearModbusData:
 17587                           	opt callstack 26
 17588  00410A                     
 17589                           ;Modbus.c: 49:     int i = 0;
 17590  00410A  0E00               	movlw	0
 17591  00410C  6E06               	movwf	(ClearModbusData@i+1)^0,c
 17592  00410E  0E00               	movlw	0
 17593  004110  6E05               	movwf	ClearModbusData@i^0,c
 17594                           
 17595                           ;Modbus.c: 50:     for(i=0; i<99; i++ ){
 17596  004112  0E00               	movlw	0
 17597  004114  6E06               	movwf	(ClearModbusData@i+1)^0,c
 17598  004116  0E00               	movlw	0
 17599  004118  6E05               	movwf	ClearModbusData@i^0,c
 17600  00411A                     l7914:
 17601                           
 17602                           ;Modbus.c: 51:         ModbusData[i] = 0xFF;
 17603  00411A  0E00               	movlw	low _ModbusData
 17604  00411C  2405               	addwf	ClearModbusData@i^0,w,c
 17605  00411E  6ED9               	movwf	fsr2l,c
 17606  004120  0E01               	movlw	high _ModbusData
 17607  004122  2006               	addwfc	(ClearModbusData@i+1)^0,w,c
 17608  004124  6EDA               	movwf	fsr2h,c
 17609  004126  0EFF               	movlw	255
 17610  004128  6EDF               	movwf	indf2,c
 17611  00412A                     
 17612                           ;Modbus.c: 52:     }
 17613  00412A  4A05               	infsnz	ClearModbusData@i^0,f,c
 17614  00412C  2A06               	incf	(ClearModbusData@i+1)^0,f,c
 17615  00412E  BE06               	btfsc	(ClearModbusData@i+1)^0,7,c
 17616  004130  EFA3  F020         	goto	u7931
 17617  004134  5006               	movf	(ClearModbusData@i+1)^0,w,c
 17618  004136  E109               	bnz	u7930
 17619  004138  0E63               	movlw	99
 17620  00413A  5C05               	subwf	ClearModbusData@i^0,w,c
 17621  00413C  A0D8               	btfss	status,0,c
 17622  00413E  EFA3  F020         	goto	u7931
 17623  004142  EFA5  F020         	goto	u7930
 17624  004146                     u7931:
 17625  004146  EF8D  F020         	goto	l7914
 17626  00414A                     u7930:
 17627  00414A                     
 17628                           ;Modbus.c: 54:     ModDataCnt = 0;
 17629  00414A  0E00               	movlw	0
 17630  00414C  0100               	movlb	0	; () banked
 17631  00414E  6FDA               	movwf	(_ModDataCnt+1)& (0+255),b
 17632  004150  0E00               	movlw	0
 17633  004152  6FD9               	movwf	_ModDataCnt& (0+255),b
 17634  004154                     
 17635                           ; BSR set to: 0
 17636  004154  0012               	return		;funcret
 17637  004156                     __end_of_ClearModbusData:
 17638                           	opt callstack 0
 17639                           
 17640 ;; *************** function _INTERRUPT_InterruptManager *****************
 17641 ;; Defined at:
 17642 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 17643 ;; Parameters:    Size  Location     Type
 17644 ;;		None
 17645 ;; Auto vars:     Size  Location     Type
 17646 ;;		None
 17647 ;; Return value:  Size  Location     Type
 17648 ;;                  1    wreg      void 
 17649 ;; Registers used:
 17650 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 17651 ;; Tracked objects:
 17652 ;;		On entry : 0/0
 17653 ;;		On exit  : 0/0
 17654 ;;		Unchanged: 0/0
 17655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17658 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17659 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17660 ;;Total ram usage:        4 bytes
 17661 ;; Hardware stack levels used:    1
 17662 ;; Hardware stack levels required when called:    3
 17663 ;; This function calls:
 17664 ;;		Absolute function
 17665 ;;		_EUSART1_Receive_ISR
 17666 ;;		_EUSART1_Transmit_ISR
 17667 ;;		_EUSART2_Receive_ISR
 17668 ;;		_EUSART2_Transmit_ISR
 17669 ;; This function is called by:
 17670 ;;		Interrupt level 2
 17671 ;; This function uses a non-reentrant model
 17672 ;;
 17673                           
 17674                           	psect	intcode
 17675  000008                     __pintcode:
 17676                           	opt callstack 0
 17677  000008                     _INTERRUPT_InterruptManager:
 17678                           	opt callstack 15
 17679                           
 17680                           ; BSR set to: 0
 17681                           ;incstack = 0
 17682  000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 17683  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
 17684  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 17685  000012  CFD9 F003          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
 17686  000016  CFDA F004          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
 17687  00001A                     
 17688                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
 17689  00001A  ACF2               	btfss	242,6,c	;volatile
 17690  00001C  EF12  F000         	goto	i2u544_41
 17691  000020  EF14  F000         	goto	i2u544_40
 17692  000024                     i2u544_41:
 17693  000024  EF89  F000         	goto	i2l163
 17694  000028                     i2u544_40:
 17695  000028                     
 17696                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
 17697  000028  010E               	movlb	14	; () banked
 17698  00002A  ADC5               	btfss	197,6,b	;volatile
 17699  00002C  EF1A  F000         	goto	i2u545_41
 17700  000030  EF1C  F000         	goto	i2u545_40
 17701  000034                     i2u545_41:
 17702  000034  EF32  F000         	goto	i2l154
 17703  000038                     i2u545_40:
 17704  000038                     
 17705                           ; BSR set to: 14
 17706  000038  ADCD               	btfss	205,6,b	;volatile
 17707  00003A  EF21  F000         	goto	i2u546_41
 17708  00003E  EF23  F000         	goto	i2u546_40
 17709  000042                     i2u546_41:
 17710  000042  EF32  F000         	goto	i2l154
 17711  000046                     i2u546_40:
 17712  000046                     
 17713                           ; BSR set to: 14
 17714                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART2_TxDefaultInterruptHandler();
 17715  000046  D802               	call	i2u547_48
 17716  000048  EF30  F000         	goto	i2u547_49
 17717  00004C                     i2u547_48:
 17718  00004C  0005               	push	
 17719  00004E  6EFA               	movwf	pclath,c
 17720  000050  0100               	movlb	0	; () banked
 17721  000052  51FC               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
 17722  000054  6EFD               	movwf	tosl,c
 17723  000056  51FD               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
 17724  000058  6EFE               	movwf	tosh,c
 17725  00005A  6AFF               	clrf	tosu,c
 17726  00005C  50FA               	movf	pclath,w,c
 17727  00005E  0012               	return		;indir
 17728  000060                     i2u547_49:
 17729                           
 17730                           ;mcc_generated_files/interrupt_manager.c: 66:         }
 17731  000060  EF89  F000         	goto	i2l163
 17732  000064                     i2l154:
 17733                           
 17734                           ; BSR set to: 14
 17735  000064  AFC5               	btfss	197,7,b	;volatile
 17736  000066  EF37  F000         	goto	i2u548_41
 17737  00006A  EF39  F000         	goto	i2u548_40
 17738  00006E                     i2u548_41:
 17739  00006E  EF4F  F000         	goto	i2l156
 17740  000072                     i2u548_40:
 17741  000072                     
 17742                           ; BSR set to: 14
 17743  000072  AFCD               	btfss	205,7,b	;volatile
 17744  000074  EF3E  F000         	goto	i2u549_41
 17745  000078  EF40  F000         	goto	i2u549_40
 17746  00007C                     i2u549_41:
 17747  00007C  EF4F  F000         	goto	i2l156
 17748  000080                     i2u549_40:
 17749  000080                     
 17750                           ; BSR set to: 14
 17751                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART2_RxDefaultInterruptHandler();
 17752  000080  D802               	call	i2u550_48
 17753  000082  EF4D  F000         	goto	i2u550_49
 17754  000086                     i2u550_48:
 17755  000086  0005               	push	
 17756  000088  6EFA               	movwf	pclath,c
 17757  00008A  0101               	movlb	1	; () banked
 17758  00008C  51E9               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
 17759  00008E  6EFD               	movwf	tosl,c
 17760  000090  51EA               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
 17761  000092  6EFE               	movwf	tosh,c
 17762  000094  6AFF               	clrf	tosu,c
 17763  000096  50FA               	movf	pclath,w,c
 17764  000098  0012               	return		;indir
 17765  00009A                     i2u550_49:
 17766                           
 17767                           ;mcc_generated_files/interrupt_manager.c: 70:         }
 17768  00009A  EF89  F000         	goto	i2l163
 17769  00009E                     i2l156:
 17770                           
 17771                           ; BSR set to: 14
 17772  00009E  A9C5               	btfss	197,4,b	;volatile
 17773  0000A0  EF54  F000         	goto	i2u551_41
 17774  0000A4  EF56  F000         	goto	i2u551_40
 17775  0000A8                     i2u551_41:
 17776  0000A8  EF6C  F000         	goto	i2l158
 17777  0000AC                     i2u551_40:
 17778  0000AC                     
 17779                           ; BSR set to: 14
 17780  0000AC  A9CD               	btfss	205,4,b	;volatile
 17781  0000AE  EF5B  F000         	goto	i2u552_41
 17782  0000B2  EF5D  F000         	goto	i2u552_40
 17783  0000B6                     i2u552_41:
 17784  0000B6  EF6C  F000         	goto	i2l158
 17785  0000BA                     i2u552_40:
 17786  0000BA                     
 17787                           ; BSR set to: 14
 17788                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART1_TxDefaultInterruptHandler();
 17789  0000BA  D802               	call	i2u553_48
 17790  0000BC  EF6A  F000         	goto	i2u553_49
 17791  0000C0                     i2u553_48:
 17792  0000C0  0005               	push	
 17793  0000C2  6EFA               	movwf	pclath,c
 17794  0000C4  0101               	movlb	1	; () banked
 17795  0000C6  51E7               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
 17796  0000C8  6EFD               	movwf	tosl,c
 17797  0000CA  51E8               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
 17798  0000CC  6EFE               	movwf	tosh,c
 17799  0000CE  6AFF               	clrf	tosu,c
 17800  0000D0  50FA               	movf	pclath,w,c
 17801  0000D2  0012               	return		;indir
 17802  0000D4                     i2u553_49:
 17803                           
 17804                           ;mcc_generated_files/interrupt_manager.c: 74:         }
 17805  0000D4  EF89  F000         	goto	i2l163
 17806  0000D8                     i2l158:
 17807                           
 17808                           ; BSR set to: 14
 17809  0000D8  ABC5               	btfss	197,5,b	;volatile
 17810  0000DA  EF71  F000         	goto	i2u554_41
 17811  0000DE  EF73  F000         	goto	i2u554_40
 17812  0000E2                     i2u554_41:
 17813  0000E2  EF89  F000         	goto	i2l157
 17814  0000E6                     i2u554_40:
 17815  0000E6                     
 17816                           ; BSR set to: 14
 17817  0000E6  ABCD               	btfss	205,5,b	;volatile
 17818  0000E8  EF78  F000         	goto	i2u555_41
 17819  0000EC  EF7A  F000         	goto	i2u555_40
 17820  0000F0                     i2u555_41:
 17821  0000F0  EF89  F000         	goto	i2l157
 17822  0000F4                     i2u555_40:
 17823  0000F4                     
 17824                           ; BSR set to: 14
 17825                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             EUSART1_RxDefaultInterruptHandler();
 17826  0000F4  D802               	call	i2u556_48
 17827  0000F6  EF87  F000         	goto	i2u556_49
 17828  0000FA                     i2u556_48:
 17829  0000FA  0005               	push	
 17830  0000FC  6EFA               	movwf	pclath,c
 17831  0000FE  0101               	movlb	1	; () banked
 17832  000100  51E5               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
 17833  000102  6EFD               	movwf	tosl,c
 17834  000104  51E6               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
 17835  000106  6EFE               	movwf	tosh,c
 17836  000108  6AFF               	clrf	tosu,c
 17837  00010A  50FA               	movf	pclath,w,c
 17838  00010C  0012               	return		;indir
 17839  00010E                     i2u556_49:
 17840                           
 17841                           ;mcc_generated_files/interrupt_manager.c: 78:         }
 17842  00010E  EF89  F000         	goto	i2l163
 17843  000112                     i2l157:
 17844  000112                     i2l163:
 17845  000112  C004  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
 17846  000116  C003  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
 17847  00011A  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 17848  00011E  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 17849  000122  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 17850  000124  0011               	retfie		f
 17851  000126                     __end_of_INTERRUPT_InterruptManager:
 17852                           	opt callstack 0
 17853                           
 17854 ;; *************** function _EUSART2_Transmit_ISR *****************
 17855 ;; Defined at:
 17856 ;;		line 208 in file "mcc_generated_files/eusart2.c"
 17857 ;; Parameters:    Size  Location     Type
 17858 ;;		None
 17859 ;; Auto vars:     Size  Location     Type
 17860 ;;		None
 17861 ;; Return value:  Size  Location     Type
 17862 ;;                  1    wreg      void 
 17863 ;; Registers used:
 17864 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17865 ;; Tracked objects:
 17866 ;;		On entry : 0/0
 17867 ;;		On exit  : 0/0
 17868 ;;		Unchanged: 0/0
 17869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17874 ;;Total ram usage:        0 bytes
 17875 ;; Hardware stack levels used:    1
 17876 ;; This function calls:
 17877 ;;		Nothing
 17878 ;; This function is called by:
 17879 ;;		_EUSART2_Initialize
 17880 ;;		_INTERRUPT_InterruptManager
 17881 ;; This function uses a non-reentrant model
 17882 ;;
 17883                           
 17884                           	psect	text86
 17885  0041A0                     __ptext86:
 17886                           	opt callstack 0
 17887  0041A0                     _EUSART2_Transmit_ISR:
 17888                           	opt callstack 17
 17889  0041A0                     
 17890                           ;mcc_generated_files/eusart2.c: 212:     if(sizeof(eusart2TxBuffer) > eusart2TxBufferRem
      +                          aining)
 17891  0041A0  0E20               	movlw	32
 17892  0041A2  0100               	movlb	0	; () banked
 17893  0041A4  61FF               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
 17894  0041A6  EFD7  F020         	goto	i2u482_41
 17895  0041AA  EFD9  F020         	goto	i2u482_40
 17896  0041AE                     i2u482_41:
 17897  0041AE  EFF1  F020         	goto	i2l337
 17898  0041B2                     i2u482_40:
 17899  0041B2                     
 17900                           ; BSR set to: 0
 17901                           ;mcc_generated_files/eusart2.c: 213:     {;mcc_generated_files/eusart2.c: 214:         T
      +                          X2REG = eusart2TxBuffer[eusart2TxTail++];
 17902  0041B2  0E84               	movlw	low _eusart2TxBuffer
 17903  0041B4  25E6               	addwf	_eusart2TxTail& (0+255),w,b	;volatile
 17904  0041B6  6ED9               	movwf	fsr2l,c
 17905  0041B8  6ADA               	clrf	fsr2h,c
 17906  0041BA  0E03               	movlw	high _eusart2TxBuffer
 17907  0041BC  22DA               	addwfc	fsr2h,f,c
 17908  0041BE  50DF               	movf	indf2,w,c
 17909  0041C0  010E               	movlb	14	; () banked
 17910  0041C2  6F9A               	movwf	154,b	;volatile
 17911  0041C4                     
 17912                           ; BSR set to: 14
 17913  0041C4  0100               	movlb	0	; () banked
 17914  0041C6  2BE6               	incf	_eusart2TxTail& (0+255),f,b	;volatile
 17915  0041C8                     
 17916                           ; BSR set to: 0
 17917                           ;mcc_generated_files/eusart2.c: 215:         if(sizeof(eusart2TxBuffer) <= eusart2TxTail
      +                          )
 17918  0041C8  0E1F               	movlw	31
 17919  0041CA  65E6               	cpfsgt	_eusart2TxTail& (0+255),b	;volatile
 17920  0041CC  EFEA  F020         	goto	i2u483_41
 17921  0041D0  EFEC  F020         	goto	i2u483_40
 17922  0041D4                     i2u483_41:
 17923  0041D4  EFEE  F020         	goto	i2l5626
 17924  0041D8                     i2u483_40:
 17925  0041D8                     
 17926                           ; BSR set to: 0
 17927                           ;mcc_generated_files/eusart2.c: 216:         {;mcc_generated_files/eusart2.c: 217:      
      +                                 eusart2TxTail = 0;
 17928  0041D8  0E00               	movlw	0
 17929  0041DA  6FE6               	movwf	_eusart2TxTail& (0+255),b	;volatile
 17930  0041DC                     i2l5626:
 17931                           
 17932                           ; BSR set to: 0
 17933                           ;mcc_generated_files/eusart2.c: 219:         eusart2TxBufferRemaining++;
 17934  0041DC  2BFF               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 17935                           
 17936                           ;mcc_generated_files/eusart2.c: 220:     }
 17937  0041DE  EFF3  F020         	goto	i2l340
 17938  0041E2                     i2l337:
 17939                           
 17940                           ; BSR set to: 0
 17941                           ;mcc_generated_files/eusart2.c: 222:     {;mcc_generated_files/eusart2.c: 223:         P
      +                          IE3bits.TX2IE = 0;
 17942  0041E2  010E               	movlb	14	; () banked
 17943  0041E4  9DC5               	bcf	197,6,b	;volatile
 17944  0041E6                     i2l340:
 17945  0041E6  0012               	return		;funcret
 17946  0041E8                     __end_of_EUSART2_Transmit_ISR:
 17947                           	opt callstack 0
 17948                           
 17949 ;; *************** function _EUSART2_Receive_ISR *****************
 17950 ;; Defined at:
 17951 ;;		line 227 in file "mcc_generated_files/eusart2.c"
 17952 ;; Parameters:    Size  Location     Type
 17953 ;;		None
 17954 ;; Auto vars:     Size  Location     Type
 17955 ;;		None
 17956 ;; Return value:  Size  Location     Type
 17957 ;;                  1    wreg      void 
 17958 ;; Registers used:
 17959 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 17960 ;; Tracked objects:
 17961 ;;		On entry : 0/0
 17962 ;;		On exit  : 0/0
 17963 ;;		Unchanged: 0/0
 17964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17969 ;;Total ram usage:        0 bytes
 17970 ;; Hardware stack levels used:    1
 17971 ;; Hardware stack levels required when called:    2
 17972 ;; This function calls:
 17973 ;;		Absolute function
 17974 ;;		_EUSART2_DefaultErrorHandler
 17975 ;;		_EUSART2_DefaultFramingErrorHandler
 17976 ;;		_EUSART2_DefaultOverrunErrorHandler
 17977 ;;		_EUSART2_RxDataHandler
 17978 ;; This function is called by:
 17979 ;;		_EUSART2_Initialize
 17980 ;;		_INTERRUPT_InterruptManager
 17981 ;; This function uses a non-reentrant model
 17982 ;;
 17983                           
 17984                           	psect	text87
 17985  003494                     __ptext87:
 17986                           	opt callstack 0
 17987  003494                     _EUSART2_Receive_ISR:
 17988                           	opt callstack 15
 17989  003494                     
 17990                           ;mcc_generated_files/eusart2.c: 230:     eusart2RxStatusBuffer[eusart2RxHead].status = 0
      +                          ;
 17991  003494  0EA2               	movlw	low _eusart2RxStatusBuffer
 17992  003496  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
 17993  003498  6ED9               	movwf	fsr2l,c
 17994  00349A  6ADA               	clrf	fsr2h,c
 17995  00349C  0E02               	movlw	high _eusart2RxStatusBuffer
 17996  00349E  22DA               	addwfc	fsr2h,f,c
 17997  0034A0  0E00               	movlw	0
 17998  0034A2  6EDF               	movwf	indf2,c
 17999  0034A4                     
 18000                           ;mcc_generated_files/eusart2.c: 232:     if(RC2STAbits.FERR){
 18001  0034A4  010E               	movlb	14	; () banked
 18002  0034A6  A59D               	btfss	157,2,b	;volatile
 18003  0034A8  EF58  F01A         	goto	i2u484_41
 18004  0034AC  EF5A  F01A         	goto	i2u484_40
 18005  0034B0                     i2u484_41:
 18006  0034B0  EF6F  F01A         	goto	i2l5636
 18007  0034B4                     i2u484_40:
 18008  0034B4                     
 18009                           ; BSR set to: 14
 18010                           ;mcc_generated_files/eusart2.c: 233:         eusart2RxStatusBuffer[eusart2RxHead].ferr =
      +                           1;
 18011  0034B4  0EA2               	movlw	low _eusart2RxStatusBuffer
 18012  0034B6  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
 18013  0034B8  6ED9               	movwf	fsr2l,c
 18014  0034BA  6ADA               	clrf	fsr2h,c
 18015  0034BC  0E02               	movlw	high _eusart2RxStatusBuffer
 18016  0034BE  22DA               	addwfc	fsr2h,f,c
 18017  0034C0  0102               	movlb	2	; () banked
 18018  0034C2  82DF               	bsf	indf2,1,c
 18019  0034C4                     
 18020                           ; BSR set to: 2
 18021                           ;mcc_generated_files/eusart2.c: 234:         EUSART2_FramingErrorHandler();
 18022  0034C4  D802               	call	i2u485_48
 18023  0034C6  EF6F  F01A         	goto	i2u485_49
 18024  0034CA                     i2u485_48:
 18025  0034CA  0005               	push	
 18026  0034CC  6EFA               	movwf	pclath,c
 18027  0034CE  0101               	movlb	1	; () banked
 18028  0034D0  51E3               	movf	_EUSART2_FramingErrorHandler& (0+255),w,b
 18029  0034D2  6EFD               	movwf	tosl,c
 18030  0034D4  51E4               	movf	(_EUSART2_FramingErrorHandler+1)& (0+255),w,b
 18031  0034D6  6EFE               	movwf	tosh,c
 18032  0034D8  6AFF               	clrf	tosu,c
 18033  0034DA  50FA               	movf	pclath,w,c
 18034  0034DC  0012               	return		;indir
 18035  0034DE                     i2u485_49:
 18036  0034DE                     i2l5636:
 18037                           
 18038                           ;mcc_generated_files/eusart2.c: 237:     if(RC2STAbits.OERR){
 18039  0034DE  010E               	movlb	14	; () banked
 18040  0034E0  A39D               	btfss	157,1,b	;volatile
 18041  0034E2  EF75  F01A         	goto	i2u486_41
 18042  0034E6  EF77  F01A         	goto	i2u486_40
 18043  0034EA                     i2u486_41:
 18044  0034EA  EF8C  F01A         	goto	i2l5642
 18045  0034EE                     i2u486_40:
 18046  0034EE                     
 18047                           ; BSR set to: 14
 18048                           ;mcc_generated_files/eusart2.c: 238:         eusart2RxStatusBuffer[eusart2RxHead].oerr =
      +                           1;
 18049  0034EE  0EA2               	movlw	low _eusart2RxStatusBuffer
 18050  0034F0  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
 18051  0034F2  6ED9               	movwf	fsr2l,c
 18052  0034F4  6ADA               	clrf	fsr2h,c
 18053  0034F6  0E02               	movlw	high _eusart2RxStatusBuffer
 18054  0034F8  22DA               	addwfc	fsr2h,f,c
 18055  0034FA  0102               	movlb	2	; () banked
 18056  0034FC  84DF               	bsf	indf2,2,c
 18057  0034FE                     
 18058                           ; BSR set to: 2
 18059                           ;mcc_generated_files/eusart2.c: 239:         EUSART2_OverrunErrorHandler();
 18060  0034FE  D802               	call	i2u487_48
 18061  003500  EF8C  F01A         	goto	i2u487_49
 18062  003504                     i2u487_48:
 18063  003504  0005               	push	
 18064  003506  6EFA               	movwf	pclath,c
 18065  003508  0101               	movlb	1	; () banked
 18066  00350A  51E1               	movf	_EUSART2_OverrunErrorHandler& (0+255),w,b
 18067  00350C  6EFD               	movwf	tosl,c
 18068  00350E  51E2               	movf	(_EUSART2_OverrunErrorHandler+1)& (0+255),w,b
 18069  003510  6EFE               	movwf	tosh,c
 18070  003512  6AFF               	clrf	tosu,c
 18071  003514  50FA               	movf	pclath,w,c
 18072  003516  0012               	return		;indir
 18073  003518                     i2u487_49:
 18074  003518                     i2l5642:
 18075                           
 18076                           ;mcc_generated_files/eusart2.c: 242:     if(eusart2RxStatusBuffer[eusart2RxHead].status)
      +                          {
 18077  003518  0EA2               	movlw	low _eusart2RxStatusBuffer
 18078  00351A  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
 18079  00351C  6ED9               	movwf	fsr2l,c
 18080  00351E  6ADA               	clrf	fsr2h,c
 18081  003520  0E02               	movlw	high _eusart2RxStatusBuffer
 18082  003522  22DA               	addwfc	fsr2h,f,c
 18083  003524  50DF               	movf	indf2,w,c
 18084  003526  B4D8               	btfsc	status,2,c
 18085  003528  EF98  F01A         	goto	i2u488_41
 18086  00352C  EF9A  F01A         	goto	i2u488_40
 18087  003530                     i2u488_41:
 18088  003530  EFA9  F01A         	goto	i2l5646
 18089  003534                     i2u488_40:
 18090  003534                     
 18091                           ;mcc_generated_files/eusart2.c: 243:         EUSART2_ErrorHandler();
 18092  003534  D802               	call	i2u489_48
 18093  003536  EFA7  F01A         	goto	i2u489_49
 18094  00353A                     i2u489_48:
 18095  00353A  0005               	push	
 18096  00353C  6EFA               	movwf	pclath,c
 18097  00353E  0101               	movlb	1	; () banked
 18098  003540  51DF               	movf	_EUSART2_ErrorHandler& (0+255),w,b
 18099  003542  6EFD               	movwf	tosl,c
 18100  003544  51E0               	movf	(_EUSART2_ErrorHandler+1)& (0+255),w,b
 18101  003546  6EFE               	movwf	tosh,c
 18102  003548  6AFF               	clrf	tosu,c
 18103  00354A  50FA               	movf	pclath,w,c
 18104  00354C  0012               	return		;indir
 18105  00354E                     i2u489_49:
 18106                           
 18107                           ;mcc_generated_files/eusart2.c: 244:     } else {
 18108  00354E  EFAB  F01A         	goto	i2l347
 18109  003552                     i2l5646:
 18110                           
 18111                           ;mcc_generated_files/eusart2.c: 245:         EUSART2_RxDataHandler();
 18112  003552  EC80  F022         	call	_EUSART2_RxDataHandler	;wreg free
 18113  003556                     i2l347:
 18114  003556  0012               	return		;funcret
 18115  003558                     __end_of_EUSART2_Receive_ISR:
 18116                           	opt callstack 0
 18117                           
 18118 ;; *************** function _EUSART2_DefaultOverrunErrorHandler *****************
 18119 ;; Defined at:
 18120 ;;		line 263 in file "mcc_generated_files/eusart2.c"
 18121 ;; Parameters:    Size  Location     Type
 18122 ;;		None
 18123 ;; Auto vars:     Size  Location     Type
 18124 ;;		None
 18125 ;; Return value:  Size  Location     Type
 18126 ;;                  1    wreg      void 
 18127 ;; Registers used:
 18128 ;;		None
 18129 ;; Tracked objects:
 18130 ;;		On entry : 0/0
 18131 ;;		On exit  : 0/0
 18132 ;;		Unchanged: 0/0
 18133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18138 ;;Total ram usage:        0 bytes
 18139 ;; Hardware stack levels used:    1
 18140 ;; This function calls:
 18141 ;;		Nothing
 18142 ;; This function is called by:
 18143 ;;		_EUSART2_Initialize
 18144 ;;		_EUSART2_Receive_ISR
 18145 ;; This function uses a non-reentrant model
 18146 ;;
 18147                           
 18148                           	psect	text88
 18149  004746                     __ptext88:
 18150                           	opt callstack 0
 18151  004746                     _EUSART2_DefaultOverrunErrorHandler:
 18152                           	opt callstack 16
 18153  004746                     
 18154                           ;mcc_generated_files/eusart2.c: 266:     RC2STAbits.CREN = 0;
 18155  004746  010E               	movlb	14	; () banked
 18156  004748  999D               	bcf	157,4,b	;volatile
 18157                           
 18158                           ;mcc_generated_files/eusart2.c: 267:     RC2STAbits.CREN = 1;
 18159  00474A  899D               	bsf	157,4,b	;volatile
 18160  00474C                     
 18161                           ; BSR set to: 14
 18162  00474C  0012               	return		;funcret
 18163  00474E                     __end_of_EUSART2_DefaultOverrunErrorHandler:
 18164                           	opt callstack 0
 18165                           
 18166 ;; *************** function _EUSART2_DefaultFramingErrorHandler *****************
 18167 ;; Defined at:
 18168 ;;		line 261 in file "mcc_generated_files/eusart2.c"
 18169 ;; Parameters:    Size  Location     Type
 18170 ;;		None
 18171 ;; Auto vars:     Size  Location     Type
 18172 ;;		None
 18173 ;; Return value:  Size  Location     Type
 18174 ;;                  1    wreg      void 
 18175 ;; Registers used:
 18176 ;;		None
 18177 ;; Tracked objects:
 18178 ;;		On entry : 0/0
 18179 ;;		On exit  : 0/0
 18180 ;;		Unchanged: 0/0
 18181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18186 ;;Total ram usage:        0 bytes
 18187 ;; Hardware stack levels used:    1
 18188 ;; This function calls:
 18189 ;;		Nothing
 18190 ;; This function is called by:
 18191 ;;		_EUSART2_Initialize
 18192 ;;		_EUSART2_Receive_ISR
 18193 ;; This function uses a non-reentrant model
 18194 ;;
 18195                           
 18196                           	psect	text89
 18197  004774                     __ptext89:
 18198                           	opt callstack 0
 18199  004774                     _EUSART2_DefaultFramingErrorHandler:
 18200                           	opt callstack 16
 18201  004774  0012               	return		;funcret
 18202  004776                     __end_of_EUSART2_DefaultFramingErrorHandler:
 18203                           	opt callstack 0
 18204                           
 18205 ;; *************** function _EUSART2_DefaultErrorHandler *****************
 18206 ;; Defined at:
 18207 ;;		line 271 in file "mcc_generated_files/eusart2.c"
 18208 ;; Parameters:    Size  Location     Type
 18209 ;;		None
 18210 ;; Auto vars:     Size  Location     Type
 18211 ;;		None
 18212 ;; Return value:  Size  Location     Type
 18213 ;;                  1    wreg      void 
 18214 ;; Registers used:
 18215 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18216 ;; Tracked objects:
 18217 ;;		On entry : 0/0
 18218 ;;		On exit  : 0/0
 18219 ;;		Unchanged: 0/0
 18220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18225 ;;Total ram usage:        0 bytes
 18226 ;; Hardware stack levels used:    1
 18227 ;; Hardware stack levels required when called:    1
 18228 ;; This function calls:
 18229 ;;		_EUSART2_RxDataHandler
 18230 ;; This function is called by:
 18231 ;;		_EUSART2_Initialize
 18232 ;;		_EUSART2_Receive_ISR
 18233 ;; This function uses a non-reentrant model
 18234 ;;
 18235                           
 18236                           	psect	text90
 18237  00475A                     __ptext90:
 18238                           	opt callstack 0
 18239  00475A                     _EUSART2_DefaultErrorHandler:
 18240                           	opt callstack 15
 18241  00475A                     
 18242                           ;mcc_generated_files/eusart2.c: 272:     EUSART2_RxDataHandler();
 18243  00475A  EC80  F022         	call	_EUSART2_RxDataHandler	;wreg free
 18244  00475E  0012               	return		;funcret
 18245  004760                     __end_of_EUSART2_DefaultErrorHandler:
 18246                           	opt callstack 0
 18247                           
 18248 ;; *************** function _EUSART2_RxDataHandler *****************
 18249 ;; Defined at:
 18250 ;;		line 251 in file "mcc_generated_files/eusart2.c"
 18251 ;; Parameters:    Size  Location     Type
 18252 ;;		None
 18253 ;; Auto vars:     Size  Location     Type
 18254 ;;		None
 18255 ;; Return value:  Size  Location     Type
 18256 ;;                  1    wreg      void 
 18257 ;; Registers used:
 18258 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18259 ;; Tracked objects:
 18260 ;;		On entry : 0/0
 18261 ;;		On exit  : 0/0
 18262 ;;		Unchanged: 0/0
 18263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18268 ;;Total ram usage:        0 bytes
 18269 ;; Hardware stack levels used:    1
 18270 ;; This function calls:
 18271 ;;		Nothing
 18272 ;; This function is called by:
 18273 ;;		_EUSART2_Receive_ISR
 18274 ;;		_EUSART2_DefaultErrorHandler
 18275 ;; This function uses a non-reentrant model
 18276 ;;
 18277                           
 18278                           	psect	text91
 18279  004500                     __ptext91:
 18280                           	opt callstack 0
 18281  004500                     _EUSART2_RxDataHandler:
 18282                           	opt callstack 16
 18283  004500                     
 18284                           ;mcc_generated_files/eusart2.c: 253:     eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 18285  004500  0E64               	movlw	low _eusart2RxBuffer
 18286  004502  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
 18287  004504  6ED9               	movwf	fsr2l,c
 18288  004506  6ADA               	clrf	fsr2h,c
 18289  004508  0E03               	movlw	high _eusart2RxBuffer
 18290  00450A  22DA               	addwfc	fsr2h,f,c
 18291  00450C  CE99 FFDF          	movff	3737,indf2	;volatile
 18292  004510  2A5A               	incf	_eusart2RxHead^0,f,c	;volatile
 18293  004512                     
 18294                           ;mcc_generated_files/eusart2.c: 254:     if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 18295  004512  0E1F               	movlw	31
 18296  004514  645A               	cpfsgt	_eusart2RxHead^0,c	;volatile
 18297  004516  EF8F  F022         	goto	i2u426_41
 18298  00451A  EF91  F022         	goto	i2u426_40
 18299  00451E                     i2u426_41:
 18300  00451E  EF93  F022         	goto	i2l5074
 18301  004522                     i2u426_40:
 18302  004522                     
 18303                           ;mcc_generated_files/eusart2.c: 255:     {;mcc_generated_files/eusart2.c: 256:         e
      +                          usart2RxHead = 0;
 18304  004522  0E00               	movlw	0
 18305  004524  6E5A               	movwf	_eusart2RxHead^0,c	;volatile
 18306  004526                     i2l5074:
 18307                           
 18308                           ;mcc_generated_files/eusart2.c: 258:     eusart2RxCount++;
 18309  004526  0100               	movlb	0	; () banked
 18310  004528  2BE4               	incf	_eusart2RxCount& (0+255),f,b	;volatile
 18311  00452A                     
 18312                           ; BSR set to: 0
 18313  00452A  0012               	return		;funcret
 18314  00452C                     __end_of_EUSART2_RxDataHandler:
 18315                           	opt callstack 0
 18316                           
 18317 ;; *************** function _EUSART1_Transmit_ISR *****************
 18318 ;; Defined at:
 18319 ;;		line 199 in file "mcc_generated_files/eusart1.c"
 18320 ;; Parameters:    Size  Location     Type
 18321 ;;		None
 18322 ;; Auto vars:     Size  Location     Type
 18323 ;;		None
 18324 ;; Return value:  Size  Location     Type
 18325 ;;                  1    wreg      void 
 18326 ;; Registers used:
 18327 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18328 ;; Tracked objects:
 18329 ;;		On entry : 0/0
 18330 ;;		On exit  : 0/0
 18331 ;;		Unchanged: 0/0
 18332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18337 ;;Total ram usage:        0 bytes
 18338 ;; Hardware stack levels used:    1
 18339 ;; This function calls:
 18340 ;;		Nothing
 18341 ;; This function is called by:
 18342 ;;		_EUSART1_Initialize
 18343 ;;		_INTERRUPT_InterruptManager
 18344 ;; This function uses a non-reentrant model
 18345 ;;
 18346                           
 18347                           	psect	text92
 18348  004270                     __ptext92:
 18349                           	opt callstack 0
 18350  004270                     _EUSART1_Transmit_ISR:
 18351                           	opt callstack 17
 18352  004270                     
 18353                           ;mcc_generated_files/eusart1.c: 203:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 18354  004270  0E10               	movlw	16
 18355  004272  0100               	movlb	0	; () banked
 18356  004274  61FE               	cpfslt	_eusart1TxBufferRemaining& (0+255),b	;volatile
 18357  004276  EF3F  F021         	goto	i2u490_41
 18358  00427A  EF41  F021         	goto	i2u490_40
 18359  00427E                     i2u490_41:
 18360  00427E  EF57  F021         	goto	i2l481
 18361  004282                     i2u490_40:
 18362  004282                     
 18363                           ; BSR set to: 0
 18364                           ;mcc_generated_files/eusart1.c: 204:     {;mcc_generated_files/eusart1.c: 205:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 18365  004282  0EC2               	movlw	low _eusart1TxBuffer
 18366  004284  25E1               	addwf	_eusart1TxTail& (0+255),w,b	;volatile
 18367  004286  6ED9               	movwf	fsr2l,c
 18368  004288  6ADA               	clrf	fsr2h,c
 18369  00428A  0E02               	movlw	high _eusart1TxBuffer
 18370  00428C  22DA               	addwfc	fsr2h,f,c
 18371  00428E  50DF               	movf	indf2,w,c
 18372  004290  6E9A               	movwf	154,c	;volatile
 18373  004292                     
 18374                           ; BSR set to: 0
 18375  004292  2BE1               	incf	_eusart1TxTail& (0+255),f,b	;volatile
 18376  004294                     
 18377                           ; BSR set to: 0
 18378                           ;mcc_generated_files/eusart1.c: 206:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 18379  004294  0E0F               	movlw	15
 18380  004296  65E1               	cpfsgt	_eusart1TxTail& (0+255),b	;volatile
 18381  004298  EF50  F021         	goto	i2u491_41
 18382  00429C  EF52  F021         	goto	i2u491_40
 18383  0042A0                     i2u491_41:
 18384  0042A0  EF54  F021         	goto	i2l5658
 18385  0042A4                     i2u491_40:
 18386  0042A4                     
 18387                           ; BSR set to: 0
 18388                           ;mcc_generated_files/eusart1.c: 207:         {;mcc_generated_files/eusart1.c: 208:      
      +                                 eusart1TxTail = 0;
 18389  0042A4  0E00               	movlw	0
 18390  0042A6  6FE1               	movwf	_eusart1TxTail& (0+255),b	;volatile
 18391  0042A8                     i2l5658:
 18392                           
 18393                           ; BSR set to: 0
 18394                           ;mcc_generated_files/eusart1.c: 210:         eusart1TxBufferRemaining++;
 18395  0042A8  2BFE               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 18396                           
 18397                           ;mcc_generated_files/eusart1.c: 211:     }
 18398  0042AA  EF59  F021         	goto	i2l484
 18399  0042AE                     i2l481:
 18400                           
 18401                           ; BSR set to: 0
 18402                           ;mcc_generated_files/eusart1.c: 213:     {;mcc_generated_files/eusart1.c: 214:         P
      +                          IE3bits.TX1IE = 0;
 18403  0042AE  010E               	movlb	14	; () banked
 18404  0042B0  99C5               	bcf	197,4,b	;volatile
 18405  0042B2                     i2l484:
 18406  0042B2  0012               	return		;funcret
 18407  0042B4                     __end_of_EUSART1_Transmit_ISR:
 18408                           	opt callstack 0
 18409                           
 18410 ;; *************** function _EUSART1_Receive_ISR *****************
 18411 ;; Defined at:
 18412 ;;		line 218 in file "mcc_generated_files/eusart1.c"
 18413 ;; Parameters:    Size  Location     Type
 18414 ;;		None
 18415 ;; Auto vars:     Size  Location     Type
 18416 ;;		None
 18417 ;; Return value:  Size  Location     Type
 18418 ;;                  1    wreg      void 
 18419 ;; Registers used:
 18420 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 18421 ;; Tracked objects:
 18422 ;;		On entry : 0/0
 18423 ;;		On exit  : 0/0
 18424 ;;		Unchanged: 0/0
 18425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18430 ;;Total ram usage:        0 bytes
 18431 ;; Hardware stack levels used:    1
 18432 ;; Hardware stack levels required when called:    2
 18433 ;; This function calls:
 18434 ;;		Absolute function
 18435 ;;		_EUSART1_DefaultErrorHandler
 18436 ;;		_EUSART1_DefaultFramingErrorHandler
 18437 ;;		_EUSART1_DefaultOverrunErrorHandler
 18438 ;;		_EUSART1_RxDataHandler
 18439 ;; This function is called by:
 18440 ;;		_EUSART1_Initialize
 18441 ;;		_INTERRUPT_InterruptManager
 18442 ;; This function uses a non-reentrant model
 18443 ;;
 18444                           
 18445                           	psect	text93
 18446  0036DA                     __ptext93:
 18447                           	opt callstack 0
 18448  0036DA                     _EUSART1_Receive_ISR:
 18449                           	opt callstack 15
 18450  0036DA                     
 18451                           ;mcc_generated_files/eusart1.c: 221:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 18452  0036DA  0E00               	movlw	low _eusart1RxStatusBuffer
 18453  0036DC  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
 18454  0036DE  6ED9               	movwf	fsr2l,c
 18455  0036E0  6ADA               	clrf	fsr2h,c
 18456  0036E2  0E03               	movlw	high _eusart1RxStatusBuffer
 18457  0036E4  22DA               	addwfc	fsr2h,f,c
 18458  0036E6  0E00               	movlw	0
 18459  0036E8  6EDF               	movwf	indf2,c
 18460  0036EA                     
 18461                           ;mcc_generated_files/eusart1.c: 223:     if(RC1STAbits.FERR){
 18462  0036EA  A49D               	btfss	157,2,c	;volatile
 18463  0036EC  EF7A  F01B         	goto	i2u492_41
 18464  0036F0  EF7C  F01B         	goto	i2u492_40
 18465  0036F4                     i2u492_41:
 18466  0036F4  EF91  F01B         	goto	i2l5668
 18467  0036F8                     i2u492_40:
 18468  0036F8                     
 18469                           ;mcc_generated_files/eusart1.c: 224:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 18470  0036F8  0E00               	movlw	low _eusart1RxStatusBuffer
 18471  0036FA  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
 18472  0036FC  6ED9               	movwf	fsr2l,c
 18473  0036FE  6ADA               	clrf	fsr2h,c
 18474  003700  0E03               	movlw	high _eusart1RxStatusBuffer
 18475  003702  22DA               	addwfc	fsr2h,f,c
 18476  003704  0103               	movlb	3	; () banked
 18477  003706  82DF               	bsf	indf2,1,c
 18478  003708                     
 18479                           ; BSR set to: 3
 18480                           ;mcc_generated_files/eusart1.c: 225:         EUSART1_FramingErrorHandler();
 18481  003708  D802               	call	i2u493_48
 18482  00370A  EF91  F01B         	goto	i2u493_49
 18483  00370E                     i2u493_48:
 18484  00370E  0005               	push	
 18485  003710  6EFA               	movwf	pclath,c
 18486  003712  0101               	movlb	1	; () banked
 18487  003714  51DD               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
 18488  003716  6EFD               	movwf	tosl,c
 18489  003718  51DE               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
 18490  00371A  6EFE               	movwf	tosh,c
 18491  00371C  6AFF               	clrf	tosu,c
 18492  00371E  50FA               	movf	pclath,w,c
 18493  003720  0012               	return		;indir
 18494  003722                     i2u493_49:
 18495  003722                     i2l5668:
 18496                           
 18497                           ;mcc_generated_files/eusart1.c: 228:     if(RC1STAbits.OERR){
 18498  003722  A29D               	btfss	157,1,c	;volatile
 18499  003724  EF96  F01B         	goto	i2u494_41
 18500  003728  EF98  F01B         	goto	i2u494_40
 18501  00372C                     i2u494_41:
 18502  00372C  EFAD  F01B         	goto	i2l5674
 18503  003730                     i2u494_40:
 18504  003730                     
 18505                           ;mcc_generated_files/eusart1.c: 229:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 18506  003730  0E00               	movlw	low _eusart1RxStatusBuffer
 18507  003732  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
 18508  003734  6ED9               	movwf	fsr2l,c
 18509  003736  6ADA               	clrf	fsr2h,c
 18510  003738  0E03               	movlw	high _eusart1RxStatusBuffer
 18511  00373A  22DA               	addwfc	fsr2h,f,c
 18512  00373C  0103               	movlb	3	; () banked
 18513  00373E  84DF               	bsf	indf2,2,c
 18514  003740                     
 18515                           ; BSR set to: 3
 18516                           ;mcc_generated_files/eusart1.c: 230:         EUSART1_OverrunErrorHandler();
 18517  003740  D802               	call	i2u495_48
 18518  003742  EFAD  F01B         	goto	i2u495_49
 18519  003746                     i2u495_48:
 18520  003746  0005               	push	
 18521  003748  6EFA               	movwf	pclath,c
 18522  00374A  0101               	movlb	1	; () banked
 18523  00374C  51DB               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
 18524  00374E  6EFD               	movwf	tosl,c
 18525  003750  51DC               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
 18526  003752  6EFE               	movwf	tosh,c
 18527  003754  6AFF               	clrf	tosu,c
 18528  003756  50FA               	movf	pclath,w,c
 18529  003758  0012               	return		;indir
 18530  00375A                     i2u495_49:
 18531  00375A                     i2l5674:
 18532                           
 18533                           ;mcc_generated_files/eusart1.c: 233:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 18534  00375A  0E00               	movlw	low _eusart1RxStatusBuffer
 18535  00375C  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
 18536  00375E  6ED9               	movwf	fsr2l,c
 18537  003760  6ADA               	clrf	fsr2h,c
 18538  003762  0E03               	movlw	high _eusart1RxStatusBuffer
 18539  003764  22DA               	addwfc	fsr2h,f,c
 18540  003766  50DF               	movf	indf2,w,c
 18541  003768  B4D8               	btfsc	status,2,c
 18542  00376A  EFB9  F01B         	goto	i2u496_41
 18543  00376E  EFBB  F01B         	goto	i2u496_40
 18544  003772                     i2u496_41:
 18545  003772  EFCA  F01B         	goto	i2l5678
 18546  003776                     i2u496_40:
 18547  003776                     
 18548                           ;mcc_generated_files/eusart1.c: 234:         EUSART1_ErrorHandler();
 18549  003776  D802               	call	i2u497_48
 18550  003778  EFC8  F01B         	goto	i2u497_49
 18551  00377C                     i2u497_48:
 18552  00377C  0005               	push	
 18553  00377E  6EFA               	movwf	pclath,c
 18554  003780  0101               	movlb	1	; () banked
 18555  003782  51D9               	movf	_EUSART1_ErrorHandler& (0+255),w,b
 18556  003784  6EFD               	movwf	tosl,c
 18557  003786  51DA               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
 18558  003788  6EFE               	movwf	tosh,c
 18559  00378A  6AFF               	clrf	tosu,c
 18560  00378C  50FA               	movf	pclath,w,c
 18561  00378E  0012               	return		;indir
 18562  003790                     i2u497_49:
 18563                           
 18564                           ;mcc_generated_files/eusart1.c: 235:     } else {
 18565  003790  EFCC  F01B         	goto	i2l491
 18566  003794                     i2l5678:
 18567                           
 18568                           ;mcc_generated_files/eusart1.c: 236:         EUSART1_RxDataHandler();
 18569  003794  EC96  F022         	call	_EUSART1_RxDataHandler	;wreg free
 18570  003798                     i2l491:
 18571  003798  0012               	return		;funcret
 18572  00379A                     __end_of_EUSART1_Receive_ISR:
 18573                           	opt callstack 0
 18574                           
 18575 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 18576 ;; Defined at:
 18577 ;;		line 254 in file "mcc_generated_files/eusart1.c"
 18578 ;; Parameters:    Size  Location     Type
 18579 ;;		None
 18580 ;; Auto vars:     Size  Location     Type
 18581 ;;		None
 18582 ;; Return value:  Size  Location     Type
 18583 ;;                  1    wreg      void 
 18584 ;; Registers used:
 18585 ;;		None
 18586 ;; Tracked objects:
 18587 ;;		On entry : 0/0
 18588 ;;		On exit  : 0/0
 18589 ;;		Unchanged: 0/0
 18590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18595 ;;Total ram usage:        0 bytes
 18596 ;; Hardware stack levels used:    1
 18597 ;; This function calls:
 18598 ;;		Nothing
 18599 ;; This function is called by:
 18600 ;;		_EUSART1_Initialize
 18601 ;;		_EUSART1_Receive_ISR
 18602 ;; This function uses a non-reentrant model
 18603 ;;
 18604                           
 18605                           	psect	text94
 18606  004760                     __ptext94:
 18607                           	opt callstack 0
 18608  004760                     _EUSART1_DefaultOverrunErrorHandler:
 18609                           	opt callstack 16
 18610  004760                     
 18611                           ;mcc_generated_files/eusart1.c: 257:     RC1STAbits.CREN = 0;
 18612  004760  989D               	bcf	157,4,c	;volatile
 18613                           
 18614                           ;mcc_generated_files/eusart1.c: 258:     RC1STAbits.CREN = 1;
 18615  004762  889D               	bsf	157,4,c	;volatile
 18616  004764  0012               	return		;funcret
 18617  004766                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 18618                           	opt callstack 0
 18619                           
 18620 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 18621 ;; Defined at:
 18622 ;;		line 252 in file "mcc_generated_files/eusart1.c"
 18623 ;; Parameters:    Size  Location     Type
 18624 ;;		None
 18625 ;; Auto vars:     Size  Location     Type
 18626 ;;		None
 18627 ;; Return value:  Size  Location     Type
 18628 ;;                  1    wreg      void 
 18629 ;; Registers used:
 18630 ;;		None
 18631 ;; Tracked objects:
 18632 ;;		On entry : 0/0
 18633 ;;		On exit  : 0/0
 18634 ;;		Unchanged: 0/0
 18635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18640 ;;Total ram usage:        0 bytes
 18641 ;; Hardware stack levels used:    1
 18642 ;; This function calls:
 18643 ;;		Nothing
 18644 ;; This function is called by:
 18645 ;;		_EUSART1_Initialize
 18646 ;;		_EUSART1_Receive_ISR
 18647 ;; This function uses a non-reentrant model
 18648 ;;
 18649                           
 18650                           	psect	text95
 18651  004776                     __ptext95:
 18652                           	opt callstack 0
 18653  004776                     _EUSART1_DefaultFramingErrorHandler:
 18654                           	opt callstack 16
 18655  004776  0012               	return		;funcret
 18656  004778                     __end_of_EUSART1_DefaultFramingErrorHandler:
 18657                           	opt callstack 0
 18658                           
 18659 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 18660 ;; Defined at:
 18661 ;;		line 262 in file "mcc_generated_files/eusart1.c"
 18662 ;; Parameters:    Size  Location     Type
 18663 ;;		None
 18664 ;; Auto vars:     Size  Location     Type
 18665 ;;		None
 18666 ;; Return value:  Size  Location     Type
 18667 ;;                  1    wreg      void 
 18668 ;; Registers used:
 18669 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18670 ;; Tracked objects:
 18671 ;;		On entry : 0/0
 18672 ;;		On exit  : 0/0
 18673 ;;		Unchanged: 0/0
 18674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18679 ;;Total ram usage:        0 bytes
 18680 ;; Hardware stack levels used:    1
 18681 ;; Hardware stack levels required when called:    1
 18682 ;; This function calls:
 18683 ;;		_EUSART1_RxDataHandler
 18684 ;; This function is called by:
 18685 ;;		_EUSART1_Initialize
 18686 ;;		_EUSART1_Receive_ISR
 18687 ;; This function uses a non-reentrant model
 18688 ;;
 18689                           
 18690                           	psect	text96
 18691  004766                     __ptext96:
 18692                           	opt callstack 0
 18693  004766                     _EUSART1_DefaultErrorHandler:
 18694                           	opt callstack 15
 18695  004766                     
 18696                           ;mcc_generated_files/eusart1.c: 263:     EUSART1_RxDataHandler();
 18697  004766  EC96  F022         	call	_EUSART1_RxDataHandler	;wreg free
 18698  00476A  0012               	return		;funcret
 18699  00476C                     __end_of_EUSART1_DefaultErrorHandler:
 18700                           	opt callstack 0
 18701                           
 18702 ;; *************** function _EUSART1_RxDataHandler *****************
 18703 ;; Defined at:
 18704 ;;		line 242 in file "mcc_generated_files/eusart1.c"
 18705 ;; Parameters:    Size  Location     Type
 18706 ;;		None
 18707 ;; Auto vars:     Size  Location     Type
 18708 ;;		None
 18709 ;; Return value:  Size  Location     Type
 18710 ;;                  1    wreg      void 
 18711 ;; Registers used:
 18712 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18713 ;; Tracked objects:
 18714 ;;		On entry : 0/0
 18715 ;;		On exit  : 0/0
 18716 ;;		Unchanged: 0/0
 18717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18722 ;;Total ram usage:        0 bytes
 18723 ;; Hardware stack levels used:    1
 18724 ;; This function calls:
 18725 ;;		Nothing
 18726 ;; This function is called by:
 18727 ;;		_EUSART1_Receive_ISR
 18728 ;;		_EUSART1_DefaultErrorHandler
 18729 ;; This function uses a non-reentrant model
 18730 ;;
 18731                           
 18732                           	psect	text97
 18733  00452C                     __ptext97:
 18734                           	opt callstack 0
 18735  00452C                     _EUSART1_RxDataHandler:
 18736                           	opt callstack 16
 18737  00452C                     
 18738                           ;mcc_generated_files/eusart1.c: 244:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 18739  00452C  0E00               	movlw	low _eusart1RxBuffer
 18740  00452E  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
 18741  004530  6ED9               	movwf	fsr2l,c
 18742  004532  6ADA               	clrf	fsr2h,c
 18743  004534  0E04               	movlw	high _eusart1RxBuffer
 18744  004536  22DA               	addwfc	fsr2h,f,c
 18745  004538  CF99 FFDF          	movff	3993,indf2	;volatile
 18746  00453C  2A59               	incf	_eusart1RxHead^0,f,c	;volatile
 18747  00453E                     
 18748                           ;mcc_generated_files/eusart1.c: 245:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 18749  00453E  0E63               	movlw	99
 18750  004540  6459               	cpfsgt	_eusart1RxHead^0,c	;volatile
 18751  004542  EFA5  F022         	goto	i2u427_41
 18752  004546  EFA7  F022         	goto	i2u427_40
 18753  00454A                     i2u427_41:
 18754  00454A  EFA9  F022         	goto	i2l5094
 18755  00454E                     i2u427_40:
 18756  00454E                     
 18757                           ;mcc_generated_files/eusart1.c: 246:     {;mcc_generated_files/eusart1.c: 247:         e
      +                          usart1RxHead = 0;
 18758  00454E  0E00               	movlw	0
 18759  004550  6E59               	movwf	_eusart1RxHead^0,c	;volatile
 18760  004552                     i2l5094:
 18761                           
 18762                           ;mcc_generated_files/eusart1.c: 249:     eusart1RxCount++;
 18763  004552  0100               	movlb	0	; () banked
 18764  004554  2BDF               	incf	_eusart1RxCount& (0+255),f,b	;volatile
 18765  004556                     
 18766                           ; BSR set to: 0
 18767  004556  0012               	return		;funcret
 18768  004558                     __end_of_EUSART1_RxDataHandler:
 18769                           	opt callstack 0
 18770                           
 18771                           	psect	text98
 18772  000000                     __ptext98:
 18773                           	opt callstack 0
 18774  000000                     
 18775                           	psect	rparam
 18776  0000                     
 18777                           	psect	temp
 18778  00005B                     btemp:
 18779                           	opt callstack 0
 18780  00005B                     	ds	1
 18781  0000                     int$flags	set	btemp
 18782  0000                     wtemp8	set	btemp+1
 18783  0000                     ttemp5	set	btemp+1
 18784  0000                     ttemp6	set	btemp+4
 18785  0000                     ttemp7	set	btemp+8
 18786                           tosu	equ	0xFFF
 18787                           tosh	equ	0xFFE
 18788                           tosl	equ	0xFFD
 18789                           stkptr	equ	0xFFC
 18790                           pclatu	equ	0xFFB
 18791                           pclath	equ	0xFFA
 18792                           pcl	equ	0xFF9
 18793                           tblptru	equ	0xFF8
 18794                           tblptrh	equ	0xFF7
 18795                           tblptrl	equ	0xFF6
 18796                           tablat	equ	0xFF5
 18797                           prodh	equ	0xFF4
 18798                           prodl	equ	0xFF3
 18799                           indf0	equ	0xFEF
 18800                           postinc0	equ	0xFEE
 18801                           postdec0	equ	0xFED
 18802                           preinc0	equ	0xFEC
 18803                           plusw0	equ	0xFEB
 18804                           fsr0h	equ	0xFEA
 18805                           fsr0l	equ	0xFE9
 18806                           wreg	equ	0xFE8
 18807                           indf1	equ	0xFE7
 18808                           postinc1	equ	0xFE6
 18809                           postdec1	equ	0xFE5
 18810                           preinc1	equ	0xFE4
 18811                           plusw1	equ	0xFE3
 18812                           fsr1h	equ	0xFE2
 18813                           fsr1l	equ	0xFE1
 18814                           bsr	equ	0xFE0
 18815                           indf2	equ	0xFDF
 18816                           postinc2	equ	0xFDE
 18817                           postdec2	equ	0xFDD
 18818                           preinc2	equ	0xFDC
 18819                           plusw2	equ	0xFDB
 18820                           fsr2h	equ	0xFDA
 18821                           fsr2l	equ	0xFD9
 18822                           status	equ	0xFD8


Data Sizes:
    Strings     2516
    Constant    0
    Data        457
    BSS         523
    Persistent  22
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      90
    BANK0           160    107     160
    BANK1           256     71     252
    BANK2           256      0     253
    BANK3           256      0     247
    BANK4           256      0     164
    BANK5           256      0     100
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK2[32]), ValidateCmd@ConfName_1542(BANK1[20]), 
		 -> ValidateCmd@ConfName_1538(BANK1[20]), ValidateCmd@ConfName(BANK1[20]), STR_71(CODE[9]), STR_70(CODE[12]), 
		 -> InitialiseString@RevNum(BANK0[2]), InitialiseString@PartNum(BANK0[19]), InitialiseString@SerialNum(BANK0[11]), Command(BANK1[16]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK2[32]), ValidateCmd@ConfName_1542(BANK1[20]), 
		 -> ValidateCmd@ConfName_1538(BANK1[20]), ValidateCmd@ConfName(BANK1[20]), STR_71(CODE[9]), STR_70(CODE[12]), 
		 -> InitialiseString@RevNum(BANK0[2]), InitialiseString@PartNum(BANK0[19]), InitialiseString@SerialNum(BANK0[11]), Command(BANK1[16]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_101(CODE[1]), STR_96(CODE[1]), ReadRX232@temp(COMRAM[2]), STR_5(CODE[1]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_101(CODE[1]), STR_96(CODE[1]), ReadRX232@temp(COMRAM[2]), STR_5(CODE[1]), 

    strcmp@r	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_112(CODE[4]), STR_110(CODE[5]), STR_108(CODE[7]), STR_106(CODE[2]), 
		 -> STR_104(CODE[6]), STR_63(CODE[4]), STR_62(CODE[5]), STR_61(CODE[7]), 

    strcmp@l	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_60(CODE[4]), STR_58(CODE[5]), STR_56(CODE[7]), Command(BANK1[16]), 

    strcat@src	PTR const unsigned char  size(2) Largest target is 2
		 -> ReadRX232@temp(COMRAM[2]), 

    strcat@dest	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 75
		 -> STR_102(CODE[12]), STR_100(CODE[13]), STR_99(CODE[17]), STR_98(CODE[15]), 
		 -> STR_97(CODE[33]), STR_95(CODE[38]), STR_94(CODE[58]), STR_93(CODE[17]), 
		 -> STR_92(CODE[16]), STR_91(CODE[4]), STR_90(CODE[15]), STR_89(CODE[19]), 
		 -> STR_88(CODE[32]), STR_87(CODE[33]), STR_86(CODE[37]), STR_85(CODE[44]), 
		 -> STR_84(CODE[22]), STR_83(CODE[75]), STR_82(CODE[53]), STR_81(CODE[69]), 
		 -> STR_80(CODE[54]), STR_79(CODE[52]), STR_78(CODE[40]), STR_77(CODE[30]), 
		 -> STR_76(CODE[43]), STR_75(CODE[73]), STR_74(CODE[42]), STR_73(CODE[36]), 
		 -> STR_72(CODE[34]), STR_69(CODE[42]), STR_68(CODE[22]), STR_67(CODE[21]), 
		 -> STR_66(CODE[20]), STR_65(CODE[19]), STR_64(CODE[40]), STR_54(CODE[32]), 
		 -> STR_53(CODE[37]), STR_52(CODE[16]), STR_51(CODE[24]), STR_50(CODE[4]), 
		 -> STR_49(CODE[25]), STR_48(CODE[28]), STR_47(CODE[54]), STR_46(CODE[15]), 
		 -> STR_45(CODE[29]), STR_44(CODE[37]), STR_43(CODE[26]), STR_42(CODE[37]), 
		 -> STR_41(CODE[26]), STR_40(CODE[37]), STR_39(CODE[24]), STR_38(CODE[37]), 
		 -> STR_37(CODE[22]), STR_36(CODE[37]), STR_35(CODE[22]), STR_34(CODE[37]), 
		 -> STR_33(CODE[26]), STR_32(CODE[54]), STR_31(CODE[36]), STR_30(CODE[3]), 
		 -> STR_29(CODE[32]), STR_28(CODE[32]), STR_27(CODE[35]), STR_26(CODE[56]), 
		 -> STR_25(CODE[38]), STR_24(CODE[37]), STR_23(CODE[37]), STR_22(CODE[38]), 
		 -> STR_21(CODE[38]), STR_20(CODE[64]), STR_19(CODE[36]), STR_18(CODE[30]), 
		 -> STR_17(CODE[30]), STR_16(CODE[37]), STR_15(CODE[37]), STR_14(CODE[38]), 
		 -> STR_13(CODE[38]), STR_12(CODE[63]), STR_11(CODE[36]), STR_10(CODE[34]), 
		 -> STR_9(CODE[28]), STR_8(CODE[54]), STR_7(CODE[27]), STR_6(CODE[16]), 
		 -> STR_4(CODE[19]), STR_3(CODE[28]), STR_2(CODE[31]), STR_1(CODE[21]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2418_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    memmove@d1	PTR void  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    memmove@d	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    memmove@s1	PTR const void  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    memmove@s	PTR const unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 75
		 -> STR_102(CODE[12]), STR_100(CODE[13]), STR_99(CODE[17]), STR_98(CODE[15]), 
		 -> STR_97(CODE[33]), STR_95(CODE[38]), STR_94(CODE[58]), STR_93(CODE[17]), 
		 -> STR_92(CODE[16]), STR_91(CODE[4]), STR_90(CODE[15]), STR_89(CODE[19]), 
		 -> STR_88(CODE[32]), STR_87(CODE[33]), STR_86(CODE[37]), STR_85(CODE[44]), 
		 -> STR_84(CODE[22]), STR_83(CODE[75]), STR_82(CODE[53]), STR_81(CODE[69]), 
		 -> STR_80(CODE[54]), STR_79(CODE[52]), STR_78(CODE[40]), STR_77(CODE[30]), 
		 -> STR_76(CODE[43]), STR_75(CODE[73]), STR_74(CODE[42]), STR_73(CODE[36]), 
		 -> STR_72(CODE[34]), STR_69(CODE[42]), STR_68(CODE[22]), STR_67(CODE[21]), 
		 -> STR_66(CODE[20]), STR_65(CODE[19]), STR_64(CODE[40]), STR_54(CODE[32]), 
		 -> STR_53(CODE[37]), STR_52(CODE[16]), STR_51(CODE[24]), STR_50(CODE[4]), 
		 -> STR_49(CODE[25]), STR_48(CODE[28]), STR_47(CODE[54]), STR_46(CODE[15]), 
		 -> STR_45(CODE[29]), STR_44(CODE[37]), STR_43(CODE[26]), STR_42(CODE[37]), 
		 -> STR_41(CODE[26]), STR_40(CODE[37]), STR_39(CODE[24]), STR_38(CODE[37]), 
		 -> STR_37(CODE[22]), STR_36(CODE[37]), STR_35(CODE[22]), STR_34(CODE[37]), 
		 -> STR_33(CODE[26]), STR_32(CODE[54]), STR_31(CODE[36]), STR_30(CODE[3]), 
		 -> STR_29(CODE[32]), STR_28(CODE[32]), STR_27(CODE[35]), STR_26(CODE[56]), 
		 -> STR_25(CODE[38]), STR_24(CODE[37]), STR_23(CODE[37]), STR_22(CODE[38]), 
		 -> STR_21(CODE[38]), STR_20(CODE[64]), STR_19(CODE[36]), STR_18(CODE[30]), 
		 -> STR_17(CODE[30]), STR_16(CODE[37]), STR_15(CODE[37]), STR_14(CODE[38]), 
		 -> STR_13(CODE[38]), STR_12(CODE[63]), STR_11(CODE[36]), STR_10(CODE[34]), 
		 -> STR_9(CODE[28]), STR_8(CODE[54]), STR_7(CODE[27]), STR_6(CODE[16]), 
		 -> STR_4(CODE[19]), STR_3(CODE[28]), STR_2(CODE[31]), STR_1(CODE[21]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 75
		 -> STR_102(CODE[12]), STR_100(CODE[13]), STR_99(CODE[17]), STR_98(CODE[15]), 
		 -> STR_97(CODE[33]), STR_95(CODE[38]), STR_94(CODE[58]), STR_93(CODE[17]), 
		 -> STR_92(CODE[16]), STR_91(CODE[4]), STR_90(CODE[15]), STR_89(CODE[19]), 
		 -> STR_88(CODE[32]), STR_87(CODE[33]), STR_86(CODE[37]), STR_85(CODE[44]), 
		 -> STR_84(CODE[22]), STR_83(CODE[75]), STR_82(CODE[53]), STR_81(CODE[69]), 
		 -> STR_80(CODE[54]), STR_79(CODE[52]), STR_78(CODE[40]), STR_77(CODE[30]), 
		 -> STR_76(CODE[43]), STR_75(CODE[73]), STR_74(CODE[42]), STR_73(CODE[36]), 
		 -> STR_72(CODE[34]), STR_69(CODE[42]), STR_68(CODE[22]), STR_67(CODE[21]), 
		 -> STR_66(CODE[20]), STR_65(CODE[19]), STR_64(CODE[40]), STR_54(CODE[32]), 
		 -> STR_53(CODE[37]), STR_52(CODE[16]), STR_51(CODE[24]), STR_50(CODE[4]), 
		 -> STR_49(CODE[25]), STR_48(CODE[28]), STR_47(CODE[54]), STR_46(CODE[15]), 
		 -> STR_45(CODE[29]), STR_44(CODE[37]), STR_43(CODE[26]), STR_42(CODE[37]), 
		 -> STR_41(CODE[26]), STR_40(CODE[37]), STR_39(CODE[24]), STR_38(CODE[37]), 
		 -> STR_37(CODE[22]), STR_36(CODE[37]), STR_35(CODE[22]), STR_34(CODE[37]), 
		 -> STR_33(CODE[26]), STR_32(CODE[54]), STR_31(CODE[36]), STR_30(CODE[3]), 
		 -> STR_29(CODE[32]), STR_28(CODE[32]), STR_27(CODE[35]), STR_26(CODE[56]), 
		 -> STR_25(CODE[38]), STR_24(CODE[37]), STR_23(CODE[37]), STR_22(CODE[38]), 
		 -> STR_21(CODE[38]), STR_20(CODE[64]), STR_19(CODE[36]), STR_18(CODE[30]), 
		 -> STR_17(CODE[30]), STR_16(CODE[37]), STR_15(CODE[37]), STR_14(CODE[38]), 
		 -> STR_13(CODE[38]), STR_12(CODE[63]), STR_11(CODE[36]), STR_10(CODE[34]), 
		 -> STR_9(CODE[28]), STR_8(CODE[54]), STR_7(CODE[27]), STR_6(CODE[16]), 
		 -> STR_4(CODE[19]), STR_3(CODE[28]), STR_2(CODE[31]), STR_1(CODE[21]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 75
		 -> STR_102(CODE[12]), STR_100(CODE[13]), STR_99(CODE[17]), STR_98(CODE[15]), 
		 -> STR_97(CODE[33]), STR_95(CODE[38]), STR_94(CODE[58]), STR_93(CODE[17]), 
		 -> STR_92(CODE[16]), STR_91(CODE[4]), STR_90(CODE[15]), STR_89(CODE[19]), 
		 -> STR_88(CODE[32]), STR_87(CODE[33]), STR_86(CODE[37]), STR_85(CODE[44]), 
		 -> STR_84(CODE[22]), STR_83(CODE[75]), STR_82(CODE[53]), STR_81(CODE[69]), 
		 -> STR_80(CODE[54]), STR_79(CODE[52]), STR_78(CODE[40]), STR_77(CODE[30]), 
		 -> STR_76(CODE[43]), STR_75(CODE[73]), STR_74(CODE[42]), STR_73(CODE[36]), 
		 -> STR_72(CODE[34]), STR_69(CODE[42]), STR_68(CODE[22]), STR_67(CODE[21]), 
		 -> STR_66(CODE[20]), STR_65(CODE[19]), STR_64(CODE[40]), STR_54(CODE[32]), 
		 -> STR_53(CODE[37]), STR_52(CODE[16]), STR_51(CODE[24]), STR_50(CODE[4]), 
		 -> STR_49(CODE[25]), STR_48(CODE[28]), STR_47(CODE[54]), STR_46(CODE[15]), 
		 -> STR_45(CODE[29]), STR_44(CODE[37]), STR_43(CODE[26]), STR_42(CODE[37]), 
		 -> STR_41(CODE[26]), STR_40(CODE[37]), STR_39(CODE[24]), STR_38(CODE[37]), 
		 -> STR_37(CODE[22]), STR_36(CODE[37]), STR_35(CODE[22]), STR_34(CODE[37]), 
		 -> STR_33(CODE[26]), STR_32(CODE[54]), STR_31(CODE[36]), STR_30(CODE[3]), 
		 -> STR_29(CODE[32]), STR_28(CODE[32]), STR_27(CODE[35]), STR_26(CODE[56]), 
		 -> STR_25(CODE[38]), STR_24(CODE[37]), STR_23(CODE[37]), STR_22(CODE[38]), 
		 -> STR_21(CODE[38]), STR_20(CODE[64]), STR_19(CODE[36]), STR_18(CODE[30]), 
		 -> STR_17(CODE[30]), STR_16(CODE[37]), STR_15(CODE[37]), STR_14(CODE[38]), 
		 -> STR_13(CODE[38]), STR_12(CODE[63]), STR_11(CODE[36]), STR_10(CODE[34]), 
		 -> STR_9(CODE[28]), STR_8(CODE[54]), STR_7(CODE[27]), STR_6(CODE[16]), 
		 -> STR_4(CODE[19]), STR_3(CODE[28]), STR_2(CODE[31]), STR_1(CODE[21]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ValidateCmd@ConfName_1542(BANK1[20]), ValidateCmd@ConfName_1538(BANK1[20]), ValidateCmd@ConfName(BANK1[20]), 
		 -> STR_71(CODE[9]), STR_70(CODE[12]), InitialiseString@RevNum(BANK0[2]), InitialiseString@PartNum(BANK0[19]), 
		 -> InitialiseString@SerialNum(BANK0[11]), Command(BANK1[16]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ValidateCmd@ConfName_1542(BANK1[20]), ValidateCmd@ConfName_1538(BANK1[20]), ValidateCmd@ConfName(BANK1[20]), 
		 -> STR_71(CODE[9]), STR_70(CODE[12]), InitialiseString@RevNum(BANK0[2]), InitialiseString@PartNum(BANK0[19]), 
		 -> InitialiseString@SerialNum(BANK0[11]), Command(BANK1[16]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), ValidateCmd@ConfName_1542(BANK1[20]), ValidateCmd@ConfName_1538(BANK1[20]), 
		 -> ValidateCmd@ConfName(BANK1[20]), STR_71(CODE[9]), STR_70(CODE[12]), InitialiseString@RevNum(BANK0[2]), 
		 -> InitialiseString@PartNum(BANK0[19]), InitialiseString@SerialNum(BANK0[11]), Command(BANK1[16]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    SaveCardDat@Name	PTR unsigned char  size(2) Largest target is 20
		 -> ValidateCmd@ConfName_1542(BANK1[20]), ValidateCmd@ConfName_1538(BANK1[20]), ValidateCmd@ConfName(BANK1[20]), 

    sp__memmove	PTR void  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    CardConfigIni@Name	PTR unsigned char  size(2) Largest target is 7
		 -> STR_63(CODE[4]), STR_62(CODE[5]), STR_61(CODE[7]), 

    CardConfigIni@RetNum	PTR unsigned char  size(2) Largest target is 19
		 -> InitialiseString@RevNum(BANK0[2]), InitialiseString@PartNum(BANK0[19]), InitialiseString@SerialNum(BANK0[11]), 

    UART1_Write_string@data	PTR unsigned char  size(2) Largest target is 75
		 -> MBRespon(BANK2[75]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 16
		 -> Command(BANK1[16]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    EUSART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), 

    EUSART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), 

    EUSART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultErrorHandler(), 

    EUSART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultFramingErrorHandler(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_Receive_ISR(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _main->_InitialiseString
    _main->_ModbusRx
    _main->_PrintMB400
    _main->_ReadRX232
    _ValidateCmd->_InitialiseString
    _SaveCardDat->_ClearEEAddRange
    _SaveCardDat->_ReadRX232
    _strcat->_strcpy
    _strcpy->_strlen
    _memmove->_strlen
    _CardConfigIni->_strcmp
    _EUSART2_Initialize->_EUSART2_SetErrorHandler
    _EUSART2_Initialize->_EUSART2_SetFramingErrorHandler
    _EUSART2_Initialize->_EUSART2_SetOverrunErrorHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _ModbusRx->_AddRxBuffToModBus
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART2_Write
    _abs->___aomod
    _atoi->_isspace
    _ModbusError->_generateCRC
    _UART1_Write_string->_EUSART1_Write

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_InitialiseString
    _ValidateCmd->_InitialiseString
    _TogDebug->_printf
    _SaveCardDat->_ClearEEAddRange
    _ReadRX232->_printf
    _ClearEEAddRange->_printf
    _InitialiseString->_printf
    _PrintModbus->_printf
    _PrintModRespon->_printf
    _PrintMB400->_printf
    _ModbusRx->_checkCRC
    _checkCRC->_printf
    _AddRxBuffToModBus->_printf
    _ModbusFC10->_printf
    _ModbusFC03->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_ValidateCmd

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  687341
                                             68 BANK1      3     3      0
                    _ClearModbusData
                  _ClearModbusRespon
                        _ClearRxBuff
                   _InitialiseString
                        _ModbusError
                         _ModbusFC03
                         _ModbusFC10
                           _ModbusRx
                         _PrintMB400
                     _PrintModRespon
                        _PrintModbus
                             _RXMode
                          _ReadRX232
                  _SYSTEM_Initialize
                        _ValidateCmd
                             _printf
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _ValidateCmd                                         68    68      0  217653
                                              0 BANK1     68    68      0
                   _InitialiseString
                        _SaveCardDat
                           _TogDebug
                             _strcmp
 ---------------------------------------------------------------------------------
 (2) _TogDebug                                             0     0      0   40387
                             _printf
 ---------------------------------------------------------------------------------
 (2) _SaveCardDat                                         18    10      8  130257
                                             49 BANK0     17     9      8
                    _ClearEEAddRange
                   _DATAEE_WriteByte
                       _EUSART2_Read
                _EUSART2_is_rx_ready
                          _ReadRX232
                             _printf
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _ReadRX232                                            4     2      2   44703
                                             84 COMRAM     2     2      0
                                             45 BANK0      2     0      2
                       _EUSART2_Read
                      _EUSART2_Write
                _EUSART2_is_rx_ready
                            _memmove
                             _printf
                             _strcat
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strcat                                               4     0      4    2077
                                             18 COMRAM     4     0      4
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strcpy                                              10     6      4     857
                                              8 COMRAM    10     6      4
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (4) _memmove                                             12     6      6     791
                                              8 COMRAM    12     6      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (4) _EUSART2_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EUSART2_Read                                         1     1      0      37
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ClearEEAddRange                                      6     2      4   41246
                                             84 COMRAM     2     2      0
                                             45 BANK0      4     0      4
                   _DATAEE_WriteByte
                             _printf
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     4     1      3     487
                                              4 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (2) _InitialiseString                                    64    64      0   45183
                                             84 COMRAM     2     2      0
                                             45 BANK0     62    62      0
           _ADCC_GetSingleConversion
                      _CardConfigIni
                             _printf
 ---------------------------------------------------------------------------------
 (3) _CardConfigIni                                       16     8      8    3759
                                              9 COMRAM    16     8      8
                    _DATAEE_ReadByte
                             _strcmp
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               5     1      4    1601
                                              4 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) _DATAEE_ReadByte                                      2     0      2     242
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1210
   _ADCC_DisableContinuousConversion
                    _ADCC_Initialize
                 _EUSART1_Initialize
                 _EUSART2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     605
            _EUSART2_SetErrorHandler
     _EUSART2_SetFramingErrorHandler
     _EUSART2_SetOverrunErrorHandler
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetOverrunErrorHandler                       2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetFramingErrorHandler                       2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetErrorHandler                              2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     605
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_DisableContinuousConversion                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PrintModbus                                          9     9      0   40777
                                             45 BANK0      9     9      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _PrintModRespon                                       3     3      0   40489
                                             84 COMRAM     1     1      0
                                             45 BANK0      2     2      0
                 _EUSART2_is_tx_done
                _EUSART2_is_tx_ready
                             _printf
 ---------------------------------------------------------------------------------
 (2) _EUSART2_is_tx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_is_tx_done                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PrintMB400                                           2     2      0   40520
                                             84 COMRAM     2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _ModbusRx                                             1     1      0  121785
                                             85 COMRAM     1     1      0
                  _AddRxBuffToModBus
                        _ClearRxBuff
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                             _RXMode
                           _checkCRC
                             _printf
 ---------------------------------------------------------------------------------
 (2) _checkCRC                                            15    15      0   40832
                                             45 BANK0     15    15      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _RXMode                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         1     1      0      37
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ClearRxBuff                                          3     3      0      71
                                              4 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _AddRxBuffToModBus                                    3     3      0   40458
                                             84 COMRAM     1     1      0
                                             45 BANK0      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _ModbusFC10                                          11    11      0   45325
                                             45 BANK0     11    11      0
                        _ModbusError
                 _UART1_Write_string
                        _generateCRC
                             _printf
 ---------------------------------------------------------------------------------
 (1) _ModbusFC03                                           9     9      0   45675
                                             45 BANK0      9     9      0
           _ADCC_GetSingleConversion
                        _ModbusError
                 _UART1_Write_string
                        _generateCRC
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              16     4     12   40387
                                             29 BANK0     16     4     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   32362
                                             82 COMRAM     2     2      0
                                             23 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           45    39      6   31799
                                             72 COMRAM    10     4      6
                                              0 BANK0     23    23      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    7787
                                             33 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     512
                                             10 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    7169
                                             33 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     412
                                              4 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     421
                                              4 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _stoa                                                22    18      4    3362
                                             15 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    8023
                                             33 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    5757
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     940
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    2077
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1577
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      93
                                              5 COMRAM     1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART2_Write                                        1     1      0      62
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1815
                                             11 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     712
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _ModbusError                                          4     2      2    2499
                                             19 COMRAM     4     2      2
                 _UART1_Write_string
                        _generateCRC
 ---------------------------------------------------------------------------------
 (2) _generateCRC                                         15    12      3    1463
                                              4 COMRAM    15    12      3
 ---------------------------------------------------------------------------------
 (2) _UART1_Write_string                                   7     3      4     732
                                              5 COMRAM     7     3      4
                      _EUSART1_Write
                 _EUSART1_is_tx_done
                _EUSART1_is_tx_ready
                             _TXMode
 ---------------------------------------------------------------------------------
 (3) _TXMode                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART1_is_tx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART1_is_tx_done                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      62
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ADCC_GetSingleConversion                             5     3      2      31
                                              4 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ClearModbusRespon                                    2     2      0     102
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ClearModbusData                                      2     2      0     102
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManager                          4     4      0       0
                                              0 COMRAM     4     4      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                _EUSART2_Receive_ISR *
               _EUSART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (14) _EUSART2_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART2_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART2_DefaultErrorHandler *
 _EUSART2_DefaultFramingErrorHandler *
 _EUSART2_DefaultOverrunErrorHandler *
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART2_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART2_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART2_DefaultErrorHandler                         0     0      0       0
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART2_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearModbusData
   _ClearModbusRespon
   _ClearRxBuff
   _InitialiseString
     _ADCC_GetSingleConversion
     _CardConfigIni
       _DATAEE_ReadByte
       _strcmp
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _ModbusError
     _UART1_Write_string
       _EUSART1_Write
       _EUSART1_is_tx_done
       _EUSART1_is_tx_ready
       _TXMode
     _generateCRC
   _ModbusFC03
     _ADCC_GetSingleConversion
     _ModbusError
       _UART1_Write_string
         _EUSART1_Write
         _EUSART1_is_tx_done
         _EUSART1_is_tx_ready
         _TXMode
       _generateCRC
     _UART1_Write_string
       _EUSART1_Write
       _EUSART1_is_tx_done
       _EUSART1_is_tx_ready
       _TXMode
     _generateCRC
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _ModbusFC10
     _ModbusError
       _UART1_Write_string
         _EUSART1_Write
         _EUSART1_is_tx_done
         _EUSART1_is_tx_ready
         _TXMode
       _generateCRC
     _UART1_Write_string
       _EUSART1_Write
       _EUSART1_is_tx_done
       _EUSART1_is_tx_ready
       _TXMode
     _generateCRC
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _ModbusRx
     _AddRxBuffToModBus
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _ClearRxBuff
     _EUSART1_Read
     _EUSART1_is_rx_ready
     _RXMode
     _checkCRC
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _PrintMB400
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _PrintModRespon
     _EUSART2_is_tx_done
     _EUSART2_is_tx_ready
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _PrintModbus
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _RXMode
   _ReadRX232
     _EUSART2_Read
     _EUSART2_Write
     _EUSART2_is_rx_ready
     _memmove
       _strlen (ARG)
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
     _strcat
       _strcpy
         _strlen (ARG)
       _strlen
     _strlen
   _SYSTEM_Initialize
     _ADCC_DisableContinuousConversion
     _ADCC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetErrorHandler
       _EUSART2_SetFramingErrorHandler
       _EUSART2_SetOverrunErrorHandler
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _ValidateCmd
     _InitialiseString
       _ADCC_GetSingleConversion
       _CardConfigIni
         _DATAEE_ReadByte
         _strcmp
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _SaveCardDat
       _ClearEEAddRange
         _DATAEE_WriteByte
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
               _fputc
                 _putch
                   _EUSART2_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _EUSART2_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
                 _toupper
                   _islower
       _DATAEE_WriteByte
       _EUSART2_Read
       _EUSART2_is_rx_ready
       _ReadRX232
         _EUSART2_Read
         _EUSART2_Write
         _EUSART2_is_rx_ready
         _memmove
           _strlen (ARG)
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
               _fputc
                 _putch
                   _EUSART2_Write
               _isdigit
               _stoa
                 _fputc
                   _putch
                     _EUSART2_Write
                 _strlen
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _EUSART2_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART2_Write
                   _strlen
                 _toupper
                   _islower
         _strcat
           _strcpy
             _strlen (ARG)
           _strlen
         _strlen
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
       _strcpy
         _strlen (ARG)
       _strlen
     _TogDebug
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _strcmp
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART2_Write
             _fputs
               _fputc
                 _putch
                   _EUSART2_Write
             _strlen
         _fputc
           _putch
             _EUSART2_Write
         _isdigit
         _stoa
           _fputc
             _putch
               _EUSART2_Write
           _strlen
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _EUSART2_Write
             _fputs
               _fputc
                 _putch
                   _EUSART2_Write
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART2_Write
             _fputs
               _fputc
                 _putch
                   _EUSART2_Write
             _strlen
           _toupper
             _islower
   _strcpy
     _strlen (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _EUSART2_Receive_ISR *
     Absolute function(Fake) *
     _EUSART2_DefaultErrorHandler *
       _EUSART2_RxDataHandler
     _EUSART2_DefaultFramingErrorHandler *
     _EUSART2_DefaultOverrunErrorHandler *
     _EUSART2_RxDataHandler *
   _EUSART2_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      64      16       39.1%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      A4      14       64.1%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      F7      12       96.5%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      FD      10       98.8%
BITBANK1           100      0       0       7        0.0%
BANK1              100     47      FC       8       98.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6B      A0       5      100.0%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     4F2       6        0.0%
DATA                 0      0     4F2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Mar 26 00:12:20 2021

                      _eusart1TxBufferRemaining 00FE                          ?_EUSART2_RxDataHandler 0001  
                                   __CFG_CP$OFF 000000                                              l81 3B5A  
                                  generateCRC@i 000E                                    generateCRC@j 0010  
                           ___wmul@multiplicand 0007                                     __CFG_LVP$ON 000000  
                                           l131 4608                                             l300 3C58  
                                           l125 45EC                                             l222 4638  
                                           l303 4668                                             l128 4650  
                                           l216 4210                                             l218 421E  
                                           l306 4620                                             l219 422A  
                                           l324 3E64                                             l148 476E  
                                           l325 3E7C                                             l309 46AE  
                                           l334 4744                                             l510 4726  
                                           l319 3FBE                                             l328 3EAC  
                                           l513 473A                                             l601 2F48  
                                           l450 3BDA                                             l507 4730  
                                           l363 46FE                                             l516 4712  
                                           l372 46E0                                             l453 4698  
                                           l702 4154                                             l366 46F4  
                                           l519 471C                                             l375 46EA  
                                           l456 4680                                             l369 4708  
                                           l474 3EC2                                             l475 3EDA  
                                           l459 46D6                                             l811 3CC6  
                                           l723 1A7C                                             l708 419E  
                                           l740 2D0E                                             l469 4016  
                                           l733 2BF2                                             l478 3F0A  
                                           l831 36D8                                             l719 33C2  
                                           l823 3900                                             l736 2C18  
                                           l728 1A8A                                             l913 20AA  
                                           l690 4758                                             l770 081E  
                                           l850 2A4E                                             l683 3D2E  
                                           l931 1218                                             l828 42F4  
                                           l693 474E                                             l686 4754  
                                           l942 2E32                                             l695 4750  
                                           l688 4756                                             l792 3252  
                                           l697 4752                                             l778 08F6  
                                           l954 3F66                                             l795 3278  
                                           l787 1CB8                                             l948 4428  
                                           l797 32E8                                             l973 227A  
                                           l965 215A                                             l798 32F0  
                                           l977 2416                                    __CFG_CPD$OFF 000000  
                  InitialiseString@readDataEven 00C4          __end_of_EUSART2_SetFramingErrorHandler 4700  
       __size_of_EUSART2_SetFramingErrorHandler 000A                  _EUSART2_SetFramingErrorHandler 46F6  
                                           _abs 4376                                             _pad 3558  
                       __size_of_PMD_Initialize 001C                                             tosl 000FFD  
                                           wreg 000FE8                                    __CFG_ZCD$OFF 000000  
                                          l2001 43AC                                            ?_abs 0017  
                                          l2004 43B4                                            l1221 2498  
                                          l1214 14F8                                            l1223 24A0  
                                          l1311 0E80                                            l1080 44FE  
                                          l2032 2742                                            l1232 2560  
                                          l1233 25A8                                            l1137 4772  
                                          l1065 40B8                                            l2113 3856  
                                          l2105 45A4                                            l1242 1CF2  
                                          l2130 3E46                                            l1322 3D8A  
                                          l2035 274A                                            l1323 3D92  
                                          l2044 44D0                                            l2052 4068  
                                          l1252 1EBA                                            l1244 1CFA  
                                          l1077 44DE                                            l2125 4108  
                                          l1237 25B0                                            l2141 4460  
                                          l1326 45CA                                            l2038 43F0  
                                          l1183 359C                                            l2135 3E4E  
                                          l2071 3214                                            l2119 3DF0  
                                          l1440 28D2                                            l1280 176C  
                                          l1257 1532                                            l1186 35DE  
                                          l1194 12BA                                            l2058 4498  
                                          l1282 17CE                                            l1266 15D0  
                                          l2083 3A38                                            l2091 426E  
                                          l1259 153A                                            l1188 3618  
                                          l1196 12C2                                            l1453 2BB2  
                                          l1296 09EE                                            l2098 457E  
                                          l1771 3138                                            l1764 3118  
                                          l1781 3492                                            l1774 3472  
                                          l7000 3EEE                                            l7002 3EF0  
                                          l7010 4558                                            l7004 3F00  
                                          l6300 3E92                                            l7012 4562  
                                          l7020 37A6                                            l7100 2E0E  
                                          l7110 44D8                                            l7006 3F04  
                                          l6302 3EA2                                            l6310 39A4  
                                          l7022 37E8                                            l7102 2E1C  
                                          ?_pad 0017                                            l7112 44DA  
                                          l7008 3F06                                            l7120 3216  
                                          l6400 274C                                            l6304 3EA6  
                                          l6320 3A26                                            l6312 39B6  
                                          l7024 381A                                            l7016 379A  
                                          l7200 2024                                            l7040 31B2  
                                          l7032 313A                                            l7104 2E28  
                                          l7114 44DC                                            l7122 321A  
                                          l6410 2790                                            l6402 2750  
                                          l6306 3EA8                                            l6314 39C8  
                                          l6330 40FC                                            l7018 379E  
                                          l7202 204A                                            l7210 3F0C  
                                          l7050 31FC                                            l7034 3160  
                                          l7042 31CE                                            l8010 2E3C  
                                          l7116 44EC                                            l7108 44D4  
                                          l7140 3290                                            l7132 3260  
                                          l7124 3236                                            l6420 27E6  
                                          l6412 27B0                                            l6404 275E  
                                          l6308 473E                                            l6316 39D2  
                                          l6340 424E                                            l6324 40BA  
                                          l6500 3112                                            l7060 4700  
                                          l7052 46E2                                            l7300 3C1E  
                                          l7220 3ACE                                            l7204 2078  
                                          l7212 3F2A                                            l7044 31E0  
                                          l7036 3182                                            l7028 4580  
                                          l8020 2E4A                                            l8012 2E3E  
                                          l8004 2E34                                            l7134 3266  
                                          l7126 324A                                            l7142 3294  
                                          l6430 2868                                            l6422 27FA  
                                          l6414 27B4                                            l6406 277E  
                                          l6318 39F0                                            l6334 422C  
                                          l6326 40C6                                            l6350 357A  
                                          l6510 340C                                            l6502 33C4  
                                          l6342 442A                                            l7310 4652  
                                          l7070 4732                                            l7062 4714  
                                          l7054 46D8                                            l7302 3C2A  
                                          l7230 3B34                                            l7222 3AF6  
                                          l7206 207C                                            l7214 3F36  
                                          l7046 31F4                                            l7038 3192  
                                          l8022 2E4E                                            l8014 2E40  
                                          l8006 2E38                                            l7160 3C90  
                                          l7152 3C5A                                            l7144 32B2  
                                          l7136 3272                                            l6520 401C  
                                          l6440 28B2                                            l6432 286A  
                                          l6424 2808                                            l6416 27C0  
                                          l6408 2782                                            l6336 4238  
                                          l6328 40CA                                            l6360 35C0  
                                          l6352 3588                                            l6600 244C  
                                          l6512 343A                                            l6504 33E2  
                                          l7064 470A                                            l7056 46F6  
                                          l7304 3C54                                            l7240 3B42  
                                          l7232 3B36                                            l7224 3B06  
                                          l7208 209A                                            l7400 10EA  
                                          l7216 3F4A                                            l7048 31F8  
                                          l7080 2D4C                                            l7072 2D10  
                                          l8032 2E6E                                            l8024 2E52  
                                          l8016 2E42                                            l8008 2E3A  
                                          l7162 3CA4                                            l7154 3C5E  
                                          l7146 32CC                                            l7138 327E  
                                          l6522 4030                                            l6434 287C  
                                          l6426 281A                                            l6418 27DE  
                                          l6450 2A82                                            l6370 4390  
                                          l6290 3E52                                            l6338 424A  
                                          l6362 35EC                                            l6354 3594  
                                          l6346 3558                                            l6530 121A  
                                          l6610 24C2                                            l6602 2460  
                                          l6514 345A                                            l6506 33EA  
                                          l7410 416A                                            l7330 3FF4  
                                          l7322 3FC0                                            l7314 469A  
                                          l7306 406A                                            l7066 4728  
                                          l7250 3B60                                            l7058 46EC  
                                          l7242 476C                                            l7234 3B3C  
                                          l7226 3B30                                            l7170 1EE6  
                                          l7402 10FA                                            l7218 3F4E  
                                          l7090 2DD0                                            l7082 2D5E  
                                          l7074 2D18                                            l8034 2E76  
                                          l8042 2EBC                                            l8050 2EFC  
                                          l8026 2E56                                            l8018 2E44  
                                          l7164 3CA8                                            l7156 3C72  
                                          l7148 32DC                                            l7420 3634  
                                          l6524 405E                                            l6428 2848  
                                          l6436 2882                                            l6460 2ADA  
                                          l6452 2A86                                            l6444 2A50  
                                          l6292 3E52                                            l6364 3600  
                                          l6356 35A8                                            l6348 3566  
                                          l6540 1294                                            l6532 123A  
                                          l6620 253A                                            l6612 24D6  
                                          l6604 2468                                            l6516 346C  
                                          l6508 33FE                                            l6372 4462  
                                          l6380 3DF2                                            l6700 1616  
                                          l7412 417A                                            l7340 4014  
                                          l7332 4004                                            l7324 3FC0  
                                          l7500 2D06                                            l7308 4770  
                                          l7068 471E                                            l7260 3B88  
                                          l7252 3B6C                                            l7236 3B3E  
                                          l7228 3B32                                            l7244 45EE  
                                          l7180 1F26                                            l7172 1EFE  
                                          l7404 11F4                                            l7092 2DD4  
                                          l7084 2D72                                            l7076 2D2C  
                                          l8052 2F1E                                            l8036 2E9E  
                                          l8044 2EE8                                            l8028 2E56  
                                          l7158 3C7E                                            l7430 3666  
                                          l7422 3638                                            l6390 449A  
                                          l6526 4062                                            l6518 4018  
                                          l6438 2892                                            l6470 2B5C  
                                          l6462 2AEE                                            l6454 2A94  
                                          l6446 2A54                                            l6294 3E74  
                                          l6358 35BC                                            l6550 12F0  
                                          l6542 12AE                                            l6534 1262  
                                          l6630 2586                                            l6622 253E  
                                          l6614 24DA                                            l6606 2476  
                                          l6710 1686                                            l7414 417E  
                                          l7334 4008                                            l7326 3FD2  
                                          l7318 466A                                            l7270 3BC2  
                                          l7262 3B8C                                            l7254 3B7C  
                                          l7246 463A                                            l7238 3B40  
                                          l7190 1F70                                            l7182 1F34  
                                          l7174 1F0E                                            l7166 1EBC  
                                          l7406 1202                                            l7350 0EE6  
                                          l7086 2D96                                            l7078 2D40  
                                          l7510 43F2                                            l8046 2EF0  
                                          l8038 2EAC                                            l7440 36C4  
                                          l7432 367E                                            l7424 364C  
                                          l7416 361A                                            l6464 2AFC  
                                          l6472 2B62                                            l6456 2AB4  
                                          l6448 2A62                                            l6368 4376  
                                          l6296 3E7E                                            l6560 1390  
                                          l6552 12F8                                            l6544 12CA  
                                          l6536 1282                                            l6632 258A  
                                          l6624 2542                                            l6616 24F8  
                                          l6480 304A                                            l6640 1CE6  
                                          l6376 43B6                                            l6384 3E28  
                                          l6720 172A                                            l6712 168C  
                                          l6704 1650                                            l6800 096E  
                                          l7408 4156                                            l7336 400C  
                                          l7328 3FF2                                            l7600 28EC  
                                          l7280 3BD6                                            l7272 3BC6  
                                          l7264 3B90                                            l7256 3B80  
                                          l7248 3B5C                                            l7192 1F74  
                                          l7184 1F38                                            l7176 1F1E  
                                          l7168 1ED8                                            l7360 0F4E  
                                          l7352 0EF0                                            l7344 0E86  
                                          l7088 2DBE                                            l7096 2DE0  
                                          l7520 20AC                                            l7512 4404  
                                          l8056 2F22                                            l8048 2EF4  
                                          l7434 3696                                            l7426 3652  
                                          l7418 3624                                            l6394 45A6  
                                          l6474 2B72                                            l6466 2B2A  
                                          l6458 2AD2                                            l6298 3E90  
                                          l6570 144C                                            l6562 1396  
                                          l6554 1302                                            l6546 12DC  
                                          l6538 1292                                            l6618 2504  
                                          l6490 309E                                            l6482 3056  
                                          l6650 1DB0                                            l6642 1D22  
                                          l6634 1CBA                                            l6386 3E3A  
                                          l6730 1790                                            l6722 1744  
                                          l6714 1692                                            l6706 1662  
                                          l7450 332C                                            l7442 32F2  
                                          l7338 4010                                            l7506 2D0C  
                                          l7610 293A                                            l7602 28FE  
                                          l7274 3BCA                                            l7266 3BB8  
                                          l7258 3B84                                            l7290 3C02  
                                          l7282 3BDC                                            l7194 1F9A  
                                          l7186 1F50                                            l7178 1F22  
                                          l7362 0F64                                            l7354 0F14  
                                          l7346 0E92                                            l7098 2DF2  
                                          l7530 2106                                            l7522 20AC  
                                          l7514 4408                                            l8058 2F30  
                                          l7436 36A8                                            l7428 3662  
                                          l6396 45C2                                            l6740 25CA  
                                          l6476 2B92                                            l6468 2B4A  
                                          l6580 149A                                            l6572 1466  
                                          l6556 1308                                            l6564 13FA  
                                          l6548 12EA                                            l6628 2572  
                                          l6492 30B0                                            l6484 3074  
                                          l6660 1E50                                            l6652 1DB6  
                                          l6644 1D2A                                            l6636 1CCA  
                                          l6732 17A6                                            l6724 175E  
                                          l6708 1676                                            l6716 16F0  
                                          l6820 0A24                                            l6812 0986  
                                          l6804 0974                                            l7700 03AE  
                                          l7460 33A2                                            l7452 334A  
                                          l7444 3308                                            l7612 294A  
                                          l7620 298C                                            l7604 290A  
                                          l7276 3BCE                                            l7268 3BBE  
                                          l7292 3C06                                            l7284 3BE0  
                                          l7196 1FCC                                            l7188 1F60  
                                          l7380 1026                                            l7364 0F72  
                                          l7356 0F22                                            l7348 0EB6  
                                          l7540 215A                                            l7532 211A  
                                          l7524 20B4                                            l7516 4418  
                                          l7438 36B8                                            l6742 25CE  
                                          l6582 14AC                                            l6566 1414  
                                          l6574 1474                                            l6558 138A  
                                          l6494 30DE                                            l6486 307C  
                                          l6662 1E6A                                            l6654 1DBC  
                                          l6646 1D34                                            l6638 1CCC  
                                          l6726 177A                                            l6718 170C  
                                          l6670 14FA                                            l6830 0AA4  
                                          l6822 0A5A                                            l8190 09AE  
                                          l6814 09DC                                            l7710 0428  
                                          l7702 03B4                                            l7454 335A  
                                          l7446 3324                                            l7470 2BD6  
                                          l7630 29B4                                            l7622 299E  
                                          l7614 296C                                            l7278 3BD2  
                                          l7294 3C0A                                            l7286 3BEC  
                                          l7198 1FF2                                            l7382 1042  
                                          l7374 0FBC                                            l7366 0FA2  
                                          l7358 0F38                                            l6910 3D94  
                                          l7550 21BA                                            l7542 216E  
                                          l7534 212E                                            l7526 20D2  
                                          l7518 441C                                            l6760 268A  
                                          l8192 2674                                            l6752 262E  
                                          l6744 25EC                                            l6736 25B2  
                                          l6584 14B8                                            l6576 1486  
                                          l6568 1432                                            l6592 2418  
                                          l6496 30FE                                            l6488 3090  
                                          l6664 1E84                                            l6648 1D3A  
                                          l6656 1E20                                            l6728 1780  
                                          l6680 1558                                            l6672 150A  
                                          l6840 0B4C                                            l6824 0A68  
                                          l6816 09FC                                            l6808 097A  
                                          l6920 3D6C                                            l7712 0438  
                                          l7704 03C4                                            l7464 33B8  
                                          l7456 337C                                            l7448 3328  
                                          l7480 2C06                                            l7472 2BEA  
                                          l7640 2A38                                            l7624 29A2  
                                          l7632 29D6                                            l7608 2922  
                                          l7616 2972                                            l7800 3CDE  
                                          l7296 3C0E                                            l7288 3BFC  
                                          l7392 1064                                            l7384 104A  
                                          l7376 1016                                            l7368 0FB4  
                                          l6912 3DA4                                            l7560 221E  
                                          l7552 21D6                                            l7544 2182  
                                          l7536 2136                                            l7528 20E6  
                                          l6770 2714                                            l6754 2644  
                                          l6746 2624                                            l6738 25C6  
                                          l6586 14C0                                            l6578 1494  
                                          l6594 242A                                            l6498 3100  
                                          l6658 1E32                                            l6666 1E92  
                                          l6690 1598                                            l6682 1578  
                                          l6674 150C                                            l6850 0C28  
                                          l6842 0B94                                            l6834 0AEE  
                                          l6826 0A76                                            l6818 09FE  
                                          l6914 3D30                                            l7730 0534  
                                          l7714 048A                                            l7706 0416  
                                          l7722 04AC                                            l7650 012A  
                                          l7810 1AF4                                            l7458 3390  
                                          l7490 2C6A                                            l7482 2C12  
                                          l7466 2BB4                                            l7642 2A46  
                                          l7634 29EE                                            l7626 29A6  
                                          l7618 2986                                            l7802 3D0E  
                                          l7298 3C12                                            l7570 45CC  
                                          l7394 10BE                                            l7386 105C  
                                          l7378 101A                                            l6930 41FE  
                                          l6922 41E8                                            l7562 2232  
                                          l7554 21DC                                            l7546 2198  
                                          l7538 2148                                            l8186 2ED2  
                                          l6772 2726                                            l6764 26C2  
                                          l6756 264C                                            l6748 2628  
                                          l6588 14D0                                            l6596 2432  
                                          l6692 15B4                                            l6684 1580  
                                          l6676 1526                                            l6828 0A96  
                                          l6836 0B00                                            l6780 091E  
                                          l6916 3D38                                            l7740 067C  
                                          l7732 0596                                            l8188 04C4  
                                          l7716 0496                                            l7708 0422  
                                          l7724 0502                                            l7660 0160  
                                          l7652 0138                                            l7820 1B2E  
                                          l7812 1B00                                            l7492 2C84  
                                          l7484 2C1E                                            l7468 2BBA  
                                          l7636 2A12                                            l7628 29AC  
                                          l7804 3D12                                            l7900 38BC  
                                          l7580 45E0                                            l7572 45D0  
                                          l7396 10C2                                            l6940 420E  
                                          l6932 4202                                            l6924 41F0  
                                          l7556 21F4                                            l7548 21AC  
                                          l7564 224A                                            l7590 42C4  
                                          l6758 2654                                            l6598 2444  
                                          l6694 15C4                                            l6686 158A  
                                          l6678 1550                                            l6870 0D62  
                                          l6862 0CF0                                            l6854 0C48  
                                          l6846 0BCC                                            l6838 0B26  
                                          l6790 0950                                            l6782 092C  
                                          l6918 3D46                                            l7750 0774  
                                          l7742 068E                                            l7734 05A6  
                                          l7726 0514                                            l7718 049C  
                                          l7670 01E4                                            l7662 0178  
                                          l7654 0148                                            l7830 1B5A  
                                          l7822 1B32                                            l7814 1B06  
                                          l7806 1A8C                                            l7494 2C94  
                                          l7486 2C30                                            l7478 2C00  
                                          l7638 2A26                                            l7646 2A4C  
                                          l7902 38D0                                            l7582 45E4  
                                          l7574 45D4                                            l6950 4632  
                                          l6942 4622                                            l7398 10CE  
                                          l6934 4204                                            l6926 41F6  
                                          l7566 225C                                            l7558 21FA  
                                          l7920 414A                                            l7592 42D4  
                                          l7584 42B4                                            l6768 2702  
                                          l6688 1590                                            l6880 0E0E  
                                          l6872 0D9E                                            l6864 0D16  
                                          l6856 0C6E                                            l6848 0BF2  
                                          l6792 0962                                            l6784 093E  
                                          l7760 0814                                            l7752 07D6  
                                          l7744 06F0                                            l7736 0608  
                                          l7728 0520                                            l7680 0268  
                                          l7672 01F4                                            l7664 0180  
                                          l7656 014C                                            l7840 1B92  
                                          l7832 1B6A                                            l7824 1B42  
                                          l7816 1B16                                            l7808 1AA2  
                                          l7496 2CB0                                            l7488 2C34  
                                          l7904 38D6                                            l7576 45D8  
                                          l6952 4634                                            l6944 4628  
                                          l6936 4206                                            l6928 41FA  
                                          l7568 226E                                            l7914 411A  
                                          l7594 42D8                                            l6698 1604  
                                          l6882 0E22                                            l6866 0D3C  
                                          l6858 0CB8                                            l6786 0942  
                                          l6778 08F8                                            l7770 0848  
                                          l7754 07E8                                            l7746 0702  
                                          l7738 061A                                            l7762 081E  
                                          l7690 032E                                            l7682 02BA  
                                          l7674 0246                                            l7666 01D2  
                                          l7658 015C                                            l7842 1BA2  
                                          l7850 1C0E                                            l7834 1B6E  
                                          l7826 1B46                                            l7818 1B1E  
                                          l7498 2CDC                                            l7906 38F4  
                                          l7578 45DC                                            l6954 4636  
                                          l6946 462C                                            l6938 420A  
                                          l6970 3F9C                                            l6962 3F68  
                                          l7922 227C                                            l7916 412A  
                                          l7908 410A                                            l6868 0D54  
                                          l6876 0DDA                                            l6796 0968  
                                          l6788 094E                                            l6892 0E48  
                                          l7780 08C6                                            l7764 0830  
                                          l7756 07F6                                            l7748 0764  
                                          l7772 084C                                            l7692 033A  
                                          l7684 02C6                                            l7676 0252  
                                          l7668 01DE                                            l7860 1C94  
                                          l7852 1C36                                            l7844 1BD4  
                                          l7836 1B7E                                            l7828 1B56  
                                          l7596 28D4                                            l6948 4630  
                                          l6980 3FBC                                            l6972 3FAC  
                                          l6964 3F68                                            l7924 227C  
                                          l7918 412E                                            l6894 0E6E  
                                          l6878 0E00                                            l6886 0E2E  
                                          l7782 08D2                                            l7774 0874  
                                          l7766 0834                                            l7758 080C  
                                          l7694 0340                                            l7686 02CC  
                                          l7678 0258                                            l7854 1C66  
                                          l7846 1BE0                                            l7838 1B82  
                                          l7862 1CAC                                            l7598 28D8  
                                          l7790 3CC8                                            l7870 17F2  
                                          l6974 3FB0                                            l6966 3F7A  
                                          l6958 460A                                            l7950 2314  
                                          l7926 22A2                                            l7934 22AC  
                                          l6992 3EB0                                            l6984 4682  
                                          l6888 0E3C                                            l7776 08A4  
                                          l7768 0844                                            l7784 08EA  
                                          l7696 0350                                            l7688 02DC  
                                          l7856 1C78                                            l7848 1C0A  
                                          l7792 3CD6                                            l7880 194A  
                                          l7872 1896                                            l7864 17D0  
                                          l6976 3FB4                                            l6968 3F9A  
                                          l7952 233A                                            l7960 2344  
                                          l7936 22D2                                            l7944 22DC  
                                          l7928 22A6                                            l6994 3EB0  
                                          l7778 08B6                                            l7698 03A2  
                                          l7858 1C88                                            l7794 3CD6  
                                          l7890 3858                                            l7882 19A2  
                                          l7874 18A8                                            l7866 17D0  
                                          l6978 3FB8                                            l7962 236A  
                                          l7946 2302                                            l6996 3ED2  
                                          l6988 46C4                                            l7892 3858  
                                          l7884 19A8                                            l7876 1934  
                                          l7868 17DE                                            l7980 23E4  
                                          l7964 237C                                            l7948 2314  
                                          l6998 3EDC                                            l7894 386E  
                                          l7886 19E8                                            l7878 193E  
                                          l7982 23E4                                            l7966 237C  
                                          l7896 387C                                            l7888 1A1E  
                                          l7984 240A                                            l7992 2414  
                                          l7968 23A2                                            l7976 23AC  
                                          l7898 3890                                            l7978 23D2  
                                          STR_1 FEEA                                            STR_2 FCE1  
                                          STR_3 FDAF                                            STR_4 FF26  
                                          STR_5 F703                                            STR_6 FF6B  
                                          STR_7 FDCB                                            STR_8 F82B  
                                          STR_9 FD77                                            _LATA 000F83  
                                          _LATB 000F84                                            _LATC 000F85  
                                          _LATD 000F86                                            _LATE 000F87  
                                          u6000 309E                                            u6001 309A  
                                          u6010 30DE                                            u6011 30DA  
                                          u6100 1292                                            u6020 33E2  
                                          u6101 128E                                            u6021 33DE  
                                          u6110 12AE                                            u6030 340C  
                                          u6111 12AA                                            u6031 3408  
                                          u6200 1494                                            u6120 12DC  
                                          u6040 343A                                            u7000 31E0  
                                          u6201 1490                                            u6121 12D8  
                                          u6041 3436                                            u7001 31DC  
                                          u6050 4030                                            u6210 14AC  
                                          u6130 12EA                                            u7010 3214  
                                          u6051 402C                                            u6211 14A8  
                                          u6131 12E6                                            u7011 3210  
                                          u7100 3290                                            u6060 405E  
                                          u6140 1414                                            u6300 256E  
                                          u7020 2D2C                                            _PMD0 000EE1  
                                          u7101 328C                                            u6061 405A  
                                          u6141 1410                                            u6301 256A  
                                          u6221 2422                                            u7021 2D28  
                                          _PMD1 000EE2                                            u7110 32B2  
                                          u6150 1432                                            u6070 124A  
                                          u6310 25A8                                            u6230 2444  
                                          u7030 2D40                                            _PMD2 000EE3  
                                          u7111 32AE                                            u6151 142E  
                                          u6071 1244                                            u6311 25A4  
                                          u6231 2440                                            u7031 2D3C  
                                          _PMD3 000EE4                                            u7120 32DC  
                                          u5600 3E74                                            u6160 144C  
                                          u6080 124C                                            u6240 2476  
                                          u6320 1CCA                                            u6400 1526  
                                          u7200 204A                                            u7040 2D5E  
                                          u8000 23D2                                            _PMD4 000EE5  
                                          u7121 32D8                                            u5601 3E70  
                                          u6161 1448                                            u6241 2472  
                                          u6321 1CC6                                            u6401 1522  
                                          u7201 2046                                            u7041 2D5A  
                                          u8001 23CE                                            _PMD5 000EE6  
                                          u7130 3C72                                            u5610 3EA2  
                                          u6170 1466                                            u6090 1262  
                                          u6250 2494                                            u6330 1CE6  
                                          u6410 1550                                            u7210 209A  
                                          u7050 2D96                                            u7131 3C6E  
                                          u5611 3E9E                                            u6171 1462  
                                          u6091 125E                                            u6251 2490  
                                          u6331 1CE2                                            u6411 154C  
                                          u7211 2096                                            u7051 2D92  
                                          u8011 23DC                                            u7140 3CA4  
                                          u5620 39B6                                            u6180 1474  
                                          u6260 24BE                                            u6340 1E32  
                                          u5700 445C                                            u6500 170C  
                                          u6420 15B4                                            u7220 3F66  
                                          u7060 2DD0                                            u8020 2E6A  
                                          u7141 3CA0                                            u5621 39B2  
                                          u6181 1470                                            u6261 24BA  
                                          u6341 1E2E                                            u6501 1708  
                                          u6421 15B0                                            u7301 0E8C  
                                          u7221 3F62                                            u7061 2DCC  
                                          u8021 2E66                                            u7150 3CC6  
                                          u5630 39C8                                            u5710 3566  
                                          u6190 1486                                            u6270 24F8  
                                          u6350 1E50                                            u6510 172A  
                                          u6430 15FE                                            u7230 4666  
                                          u7070 2DF2                                            u8030 2F1E  
                                          u7151 3CC2                                            u5631 39C4  
                                          u5711 3562                                            u6191 1482  
                                          u6271 24F4                                            u6351 1E4C  
                                          u6511 1726                                            u6431 15F8  
                                          u7231 4660                                            u7311 0EBC  
                                          u7071 2DEE                                            u8031 2F1A  
                                          u7080 44EC                                            u6600 26FE  
                                          u5640 39F0                                            u5720 3588  
                                          u6280 2526                                            u6360 1E6A  
                                          u5800 3E22                                            u6520 1744  
                                          u6440 1600                                            u7400 3390  
                                          u7240 4668                                            u7160 1F0E  
                                          u7081 44E8                                            u5641 39EC  
                                          u5721 3584                                            u6361 1E66  
                                          u5801 3E1C                                            u6521 1740  
                                          u7401 338C                                            u7161 1F0A  
                                          u7321 0FAC                                            u7090 3260  
                                          u6610 2714                                            u5650 3A26  
                                          u5730 35DE                                            u6290 2560  
                                          u6370 1E84                                            u5810 3E24  
                                          u6530 175E                                            u6450 1616  
                                          u7410 33B4                                            u7250 46AC  
                                          u7170 1F60                                            u7330 1042  
                                          u7091 325C                                            u6611 2710  
                                          u5651 3A22                                            u5731 35DA  
                                          u6291 255C                                            u6371 1E80  
                                          u6531 175A                                            u6451 1612  
                                          u7411 33B0                                            u7251 46A6  
                                          u7171 1F5C                                            u7331 103E  
                                          u6620 2726                                            u5900 2848  
                                          u5660 40EC                                            u5740 35EC  
                                          u6380 1E92                                            u5820 3E3A  
                                          u6540 176C                                            u6460 164A  
                                          u6700 0B00                                            u7260 467E  
                                          u7420 2C00                                            u7180 1F9A  
                                          u7500 212E                                            u6621 2722  
                                          u5901 2844                                            u5741 35E8  
                                          u6381 1E8E                                            u5821 3E36  
                                          u6541 1768                                            u6461 1644  
                                          u6701 0AFC                                            u7261 4678  
                                          u7421 2BFC                                            u7181 1F96  
                                          u7341 1054                                            u7501 212A  
                                          u5830 44CA                                            u5910 2892  
                                          u5750 4390                                            u5590 3E64  
                                          u5670 40FC                                            u6550 177A  
                                          u6470 164C                                            u6390 150A  
                                          u6710 0B26                                            u6630 091E  
                                          u7270 4680                                            u7430 2C30  
                                          u7190 1FF2                                            u7350 10EA  
                                          u7510 2148                                            u5831 44C4  
                                          u5911 288E                                            u5751 438C  
                                          u5591 3E60                                            u5671 40F8  
                                          u6287 251C                                            u6551 1776  
                                          u6391 1506                                            u6711 0B22  
                                          u6631 091A                                            u7431 2C2C  
                                          u7191 1FEE                                            u7351 10E6  
                                          u8047 21E8                                            u7511 2144  
                                          u5840 44CC                                            u6560 25EC  
                                          u5920 2A62                                            u5680 426E  
                                          u5760 4492                                            u6480 1662  
                                          u6720 0B4C                                            u6640 09EE  
                                          u6800 3D8A                                            u7280 3FD2  
                                          u7440 2C6A                                            u7600 294A  
                                          u7256 46AE                                            u7360 10FA  
                                          u7520 215A                                            u6561 25E8  
                                          u5921 2A5E                                            u5681 426A  
                                          u5761 448C                                            u6481 165E  
                                          u6721 0B48                                            u6641 09EA  
                                          u6801 3D86                                            u7281 3FCE  
                                          u7441 2C66                                            u7601 2946  
                                          u8057 1EF0                                            u7361 10F6  
                                          u7521 2156                                            u6570 2624  
                                          u5850 275E                                            u5930 2A94  
                                          u5770 4494                                            u5690 445A  
                                          u6490 16CA                                            u6730 0BF2  
                                          u6650 09FC                                            u7370 419E  
                                          u7290 4004                                            u7450 2C94  
                                          u7610 2986                                            u6810 421E  
                                          u7530 221E                                            u6571 2620  
                                          u5851 275A                                            u5931 2A90  
                                          u5667 40E2                                            u5691 4454  
                                          u6731 0BEE                                            u6651 09F8  
                                          u7371 419A                                            u7291 4000  
                                          u7451 2C90                                            u7611 2982  
                                          u8067 1F42                                            u6811 421A  
                                          u7531 221A                                            u6900 3EC2  
                                          u6580 2640                                            u5860 2790  
                                          u5940 2AD2                                            u5780 43EA  
                                          u6740 0C6E                                            u6660 0A24  
                                          u7700 032E                                            u7380 334A  
                                          u7460 2CDC                                            u7620 299E  
                                          u7540 225C                                            u6901 3EBE  
                                          u6581 263C                                            u5861 278C  
                                          u5941 2ACE                                            u5781 43E4  
                                          u6741 0C6A                                            u6661 0A20  
                                          u7701 032A                                            u7381 3346  
                                          u7461 2CD8                                            u7621 299A  
                                          u7541 2258                                            u6910 3ED2  
                                          u6590 26FC                                            u5950 2AFC  
                                          u5790 43EC                                            u6750 0D16  
                                          u6670 0A68                                            u7710 03A2  
                                          u7390 335A                                            u7470 2D06  
                                          u7630 29C4                                            u6830 461E  
                                          u7550 226E                                            u6911 3ECE  
                                          u6591 26F6                                            u5871 27BA  
                                          u5951 2AF8                                            u6495 16B8  
                                          u6751 0D12                                            u6671 0A64  
                                          u7711 039E                                            u7391 3356  
                                          u7471 2D02                                            u7631 29BE  
                                          u6831 4618                                            u7551 226A  
                                          u7560 42F4                                            u6920 3F00  
                                          u5880 27DE                                            u5960 2B2A  
                                          u6760 0D3C                                            u6680 0AE6  
                                          u7800 0774                                            u7720 0416  
                                          u7640 29EE                                            u6840 4620  
                                          u7480 4404                                            u7561 42F0  
                                          u6921 3EFC                                            u5881 27DA  
                                          u5961 2B26                                            u6761 0D38  
                                          u6681 0AE0                                            u7801 0770  
                                          u7721 0412                                            u7641 29EA  
                                          u6825 4228                                            u7481 4400  
                                          u5890 2808                                            u5970 2B72  
                                          u6770 0E00                                            u6690 0AE8  
                                          u7810 07E8                                            u7730 048A  
                                          u7650 29FE                                            u7570 28EC  
                                          u6930 37E8                                            u6826 422A  
                                          u6850 3F7A                                            u7490 2106  
                                          u5891 2804                                            u5971 2B6E  
                                          u6771 0DFC                                            u7811 07E4  
                                          u7731 0486                                            u7651 29F8  
                                          u7571 28E8                                            u6931 37E4  
                                          u6851 3F76                                            u7491 2102  
                                          u7820 0874                                            u7740 0514  
                                          u7660 2A26                                            u7636 29C6  
                                          u7580 28FE                                            u7900 3890  
                                          u6940 380A                                            u6860 3FAC  
                                          u6780 3DDE                                            u5981 3050  
                                          u7821 0870                                            u7741 0510  
                                          u7661 2A22                                            u7581 28FA  
                                          u7901 388C                                            u6861 3FA8  
                                          u6870 4696                                            u5990 3074  
                                          u7750 0534                                            u7670 01D2  
                                          u7590 291E                                            u7830 3D2E  
                                          u7910 38D0                                            u6950 381A  
                                          u6790 3DF0                                            u6871 4690  
                                          u5991 3070                                            u7751 0530  
                                          u7671 01CE                                            u7591 291A  
                                          u7831 3D2A                                            u7911 38CC  
                                          u6951 3816                                            u6935 37D8  
                                          u6791 3DEC                                            u6880 4698  
                                          u7760 05A6                                            u7680 0246  
                                          u7840 1AF4                                            u7656 2A00  
                                          u7920 38F4                                            u6960 383C  
                                          u7761 05A2                                            u7681 0242  
                                          u7841 1AF0                                            u7921 38F0  
                                          u6937 37CE                                            u7930 414A  
                                          u6890 46D4                                            u7770 061A  
                                          u7690 02BA                                            u7850 1B16  
                                          u6970 3160                                            u7931 4146  
                                          u6891 46CE                                            u7771 0616  
                                          u7691 02B6                                            u7851 1B12  
                                          u6947 3800                                            u6971 315C  
                                          u6787 3DD4                                            u7780 068E  
                                          u7860 1C36                                            u6980 3182  
                                          u7940 22A2                                            u7781 068A  
                                          u7861 1C32                                            u6981 317E  
                                          u7941 229E                                            u7790 0702  
                                          u7870 17F2                                            u6990 31CA  
                                          u7950 22D2                                            u7791 06FE  
                                          u7871 17EE                                            u6967 3832  
                                          u6991 31C6                                            u7951 22CE  
                                          u6896 46D6                                            u7880 18A8  
                                          u7960 2302                                            u7881 18A4  
                                          u7961 22FE                                            u7890 1A1E  
                                          u7891 1A1A                                            u7971 230C  
                                          u7980 236A                                            u7981 2366  
                                          u7991 2374                             ValidateCmd@ConfName 0193  
                                          _WPUA 000F10                                            _WPUB 000F18  
                                          _WPUC 000F20                                            _WPUD 000F25  
                                          _WPUE 000F2D                           ??_EUSART2_Receive_ISR 0001  
                                 _EUSART1_Write 3EAE                                   __CFG_FCMEN$ON 000000  
                                 _EUSART2_Write 3E50                              ClearModbusRespon@i 0005  
                                generateCRC@crc 0012                                            abs@a 0017  
                                          _dbuf 02DD                                            _atoi 25B2  
                                          _main 2E34                                            _dtoa 121A  
                                 ?_EUSART1_Read 0001                                            _prec 00CF  
                                 ?_EUSART2_Read 0001                                            _nout 00CB  
                                          pad@i 001E                                            pad@p 001B  
                                          fsr0h 000FEA                                            fsr1h 000FE2  
                                          indf0 000FEF                                            fsr2h 000FDA  
                                          fsr0l 000FE9                                            indf1 000FE7  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 0020                                            fsr2l 000FD9  
                                          _stoa 2418                                            btemp 005B  
                                          _utoa 1CBA                                            _xtoa 14FA  
                                          prodh 000FF4                                            prodl 000FF3  
                                          start 0126                    __end_of_EUSART2_Transmit_ISR 41E8  
                                 __CFG_CSWEN$ON 000000                             UART1_Write_string@i 000B  
                fp__EUSART1_DefaultErrorHandler 0000                                    ___param_bank 000000  
                                 __CFG_SCANE$ON 000000                                           ??_abs 0019  
                                         ??_pad 001D                       __size_of_DATAEE_WriteByte 0044  
                __size_of_OSCILLATOR_Initialize 0018                   __end_of_OSCILLATOR_Initialize 4652  
                         _eusart1RxStatusBuffer 0300                                 __end_of___aodiv 28D4  
                                         _ADACQ 000F5C                                           _ADCAP 000F5D  
                                         _ADACT 000F56                                           ?_atoi 000C  
                                         ?_main 0001                                           ?_dtoa 0022  
                                         _ADCLK 000F57                                 __end_of___aomod 2BB4  
                                         _ADCNT 000F67                                           _ADPCH 000F5F  
                                         _ADREF 000F58                                           _ADPRE 000F5E  
                                         STR_10 FBFD                                           STR_11 FB94  
                                         STR_12 F744                                           STR_20 F704  
                                         STR_21 FA47                                           STR_13 FA47  
                                         STR_30 FB91                                           STR_22 FA6D  
                                         STR_14 FA6D                                           STR_23 FB02  
                                         STR_31 FB70                                           STR_15 FB02  
                                         STR_40 FAB8                                           STR_24 FB27  
                                         STR_16 FB27                                           STR_32 F861  
                                         STR_41 FE1A                                           STR_33 FDE6  
                                         STR_17 FD1E                                           STR_25 FA21  
                                 __CFG_WDTE$OFF 000000                                           STR_50 F700  
                                         STR_42 FAB8                                           STR_18 FD3C  
                                         STR_34 FAB8                                           STR_26 F7BD  
                                         STR_19 FB94                                           STR_35 FEA9  
                                         STR_51 FE65                                           STR_43 FE00  
                                         STR_27 FBB8                                           STR_44 FAB8  
                                         STR_36 FAB8                                           STR_60 FFF5  
                                         STR_52 FF7B                                           STR_28 FCA1  
                                         STR_61 FFD7                                           STR_37 FEBF  
                                         STR_45 FD5A                                           STR_29 FCC1  
                                         STR_53 FADD                                           STR_38 FAB8  
                                         STR_62 FFEB                                           STR_70 FFC2  
                                         STR_46 FF9A                                           STR_54 FC81  
                                         STR_47 F861                                           STR_63 FFF5  
                                         STR_55 FFD7                                           STR_71 FFCE  
                                         STR_39 FE4D                                           STR_56 FFD7  
                                         STR_48 FD93                                           STR_72 FBDB  
                                         STR_64 F9D3                                           STR_80 F7F5  
                                         _ADRPT 000F66                                           STR_57 FFEB  
                                         STR_65 FF13                                           STR_49 FE34  
                                         STR_73 FB4C                                           STR_81 F6BF  
                                         STR_90 FF9A                                           STR_58 FFEB  
                                         STR_66 FEFF                                           STR_74 F981  
                                         STR_82 F897                                ?_ClearModbusData 0001  
                                         STR_91 F700                                           STR_59 FFF5  
                                         STR_67 FED5                                           STR_75 F676  
                                         STR_83 F62B                                           STR_92 FF5B  
                                         STR_84 FE93                                           STR_68 FE7D  
                                         STR_76 F92C                                           STR_93 FF4A  
                                         STR_77 FD00                                           STR_69 F957  
                                         STR_85 F900                                           STR_86 FA93  
                                         STR_78 F9AB                                           STR_94 F783  
                                         STR_87 FC1F                                           STR_95 F9FB  
                                         STR_79 F8CC                                           STR_96 F703  
                                         STR_88 FC61                                           STR_89 FF26  
                                         STR_97 FC40                                           STR_98 FF8B  
                                         STR_99 FF39                                           ?_stoa 0010  
                                         ?_utoa 0022                                 __end_of___lodiv 313A  
                                         ?_xtoa 0022                                 __end_of___lomod 3494  
                                __CFG_DEBUG$OFF 000000                                           i2l154 0064  
                                         i2l163 0112                                           i2l340 41E6  
                                         i2l156 009E                                           i2l501 4764  
                                         i2l157 0112                                           i2l158 00D8  
                                         i2l351 452A                                           i2l504 476A  
                                         i2l360 475E                                           i2l337 41E2  
                                         i2l354 4774                                           i2l347 3556  
                                         i2l357 474C                                           i2l481 42AE  
                                         i2l491 3798                                           i2l484 42B2  
                                         i2l495 4556                                           i2l498 4776  
                   __size_of_EUSART1_is_tx_done 0014                                           _OSCEN 000EDC  
                                  vfpfcnvrt@fmt 004B                                    vfpfcnvrt@llu 006F  
                                         _TRISA 000F88                                           _TRISB 000F89  
                                         _TRISC 000F8A                                           _TRISD 000F8B  
                                         _TRISE 000F8C                        CardConfigIni@readDataOdd 0018  
                                         _Debug 00DD                                   __CFG_WRT0$OFF 000000  
                                 __CFG_WRT1$OFF 000000                                   __CFG_WRT2$OFF 000000  
                                 __CFG_WRT3$OFF 000000                            _EUSART1_Transmit_ISR 4270  
                                __CFG_EBTR0$OFF 000000                                  __CFG_EBTR1$OFF 000000  
                                __CFG_EBTR2$OFF 000000                                  __CFG_EBTR3$OFF 000000  
                                 __CFG_WRTB$OFF 000000                                   __CFG_WRTC$OFF 000000  
                                 __CFG_WRTD$OFF 000000                                 _DATAEE_ReadByte 4622  
                                __CFG_EBTRB$OFF 000000                                           _flags 0057  
                        __size_of_CardConfigIni 01F0                                           _fputc 39A4  
                               __end_of_isalpha 43F2                                           _fputs 422C  
                               __end_of_isdigit 44D2                        SaveCardDat@dataeeAddrWrk 009D  
                               __end_of_memmove 3216                              __CFG_MCLRE$EXTMCLR 000000  
                                         atoi@n 0019                                           pad@fp 0017  
                                         atoi@s 000C                                           _width 00CD  
                                         _putch 473C                        __size_of_ClearEEAddRange 005C  
                                         dtoa@d 0024                                           dtoa@i 0044  
                                         dtoa@n 003C                                           dtoa@p 0036  
                                         dtoa@s 003A                                           dtoa@w 0038  
                               __end_of_islower 4462                                 __end_of_isspace 406A  
                                ?_EUSART1_Write 0001                                  ?_EUSART2_Write 0001  
                               __end_of_isupper 449A                                           pclath 000FFA  
                                         tablat 000FF5                                     _ClearRxBuff 4156  
                                ??_EUSART1_Read 0005                                           plusw1 000FE3  
                                         plusw2 000FDB                                  ??_EUSART2_Read 0005  
                                         stoa@i 001C                                           stoa@l 0024  
                                         stoa@p 0022                                           stoa@s 0012  
                                         stoa@w 001E                                           ttemp5 005C  
                                         ttemp6 005F                                           ttemp7 0063  
                                         utoa@d 0024                                           utoa@i 0040  
                                         utoa@n 0038                                           utoa@p 0034  
                                         utoa@w 0036                                           status 000FD8  
                                    _ModDataCnt 00D9                                   ??_ModbusError 0016  
                                         wtemp8 005C                                           xtoa@c 0047  
                                         xtoa@d 0024                                           xtoa@i 0045  
                                         xtoa@n 003D                                           xtoa@p 0039  
                                         xtoa@w 003B                                           xtoa@x 002C  
                               __end_of_toupper 3E50                                ___lodiv@dividend 0005  
         fp__EUSART1_DefaultFramingErrorHandler 0000      __end_of_EUSART1_DefaultFramingErrorHandler 4778  
   __size_of_EUSART1_DefaultFramingErrorHandler 0002            ??_EUSART1_DefaultFramingErrorHandler 0001  
           ?_EUSART1_DefaultFramingErrorHandler 0001              _EUSART1_DefaultFramingErrorHandler 4776  
                   __size_of_EUSART2_is_tx_done 0016                                   ??_SaveCardDat 0099  
                                checkCRC@crcLow 0094           __end_of_EUSART2_SetTxInterruptHandler 46E2  
        __size_of_EUSART2_SetTxInterruptHandler 000A                   _EUSART2_SetTxInterruptHandler 46D8  
                                  _toupper$2486 0011                                 __initialization 2F50  
                                  __end_of_atoi 274C                      __end_of_EUSART1_Initialize 3BDC  
                                  __end_of_main 2F50                                    __end_of_dtoa 14FA  
                     __size_of_InitialiseString 0398                                    __end_of_stoa 25B2  
                                  __end_of_utoa 1EBC                                    __end_of_xtoa 17D0  
                   ?_INTERRUPT_InterruptManager 0001                                __end_of_ModbusRx 2A50  
                                        ??_atoi 000E                                          ??_main 01D7  
                                        ??_dtoa 002C                                          ??_stoa 0014  
                                    _ModbusFC10 1A8C                                      _ModbusFC03 012A  
                                        ??_utoa 002C                                          ??_xtoa 002D  
                                 __activetblptr 000003                                __end_of_TogDebug 442A  
                           SaveCardDat@NumBytes 0097             __end_of_EUSART2_DefaultErrorHandler 4760  
                   _EUSART2_DefaultErrorHandler 475A                                      _ModbusData 0100  
                         ?_EUSART1_Transmit_ISR 0001                                ___lodiv@quotient 0015  
                          SaveCardDat@MBAddress 0093                                          _ADACCH 000F71  
                                        _ADACCL 000F70                      __end_of_EUSART2_Initialize 3C5A  
                                        _ADCON0 000F60                                          _ADCON1 000F59  
                                        _ADCON2 000F5A                                          _ADCON3 000F5B  
                      _eusart2TxBufferRemaining 00FF                                          _ADERRH 000F6F  
                                        _ADERRL 000F6E                                          ?_fputc 0007  
                                        _ADLTHH 000F6B                                          STR_100 FFA9  
                                        _ADLTHL 000F6A                                          STR_101 F703  
                                        STR_110 FFF0                                          STR_102 FFB6  
                                        ?_fputs 0010                                          STR_111 FFF9  
                                        STR_103 FFE5                                          STR_104 FFE5  
                                        STR_112 FFF9                                          STR_105 FFFD  
                                        STR_106 FFFD                                          _ADRESH 000F64  
                                        STR_107 FFDE                                          STR_108 FFDE  
                                        STR_109 FFF0                                          _ADRESL 000F63  
                                        _ADSTAT 000F65                                          _ADUTHH 000F6D  
                                        _ADUTHL 000F6C                                          _ANSELA 000F11  
                                        ?_putch 0001                                          _ANSELB 000F19  
                                        _ANSELC 000F21                                          _ANSELD 000F26  
                                        _ANSELE 000F2E                                          _RC1REG 000F99  
                                        _RC2REG 000E99                       InitialiseString@SerialNum 00B3  
                              ClearEEAddRange@i 0055                                          _RC1STA 000F9D  
                                        _RC2STA 000E9D                                          _RB6PPS 000EF5  
                                        _ODCONA 000F0F                                          _ODCONB 000F17  
                                        _ODCONC 000F1F                                          _RC6PPS 000EFD  
                                        _ODCOND 000F24                                          _ODCONE 000F2C  
                  __size_of_EUSART1_is_rx_ready 0018                              __size_of_ReadRX232 0124  
                                __CFG_WDTCCS$SC 000000                                          i2l6100 0038  
                                        i2l5070 4512                                          i2l6110 00BA  
                                        i2l6102 0046                                          i2l5072 4522  
                                        i2l6112 00E6                                          i2l6104 0072  
                                        i2l5090 453E                                          i2l5074 4526  
                                        i2l5066 4500                                          i2l6114 00F4  
                                        i2l6106 0080                                          i2l5092 454E  
                                        i2l5068 4510                                          i2l6108 00AC  
                                        i2l5094 4552                                          i2l5086 452C  
                                        i2l5342 4746                                          i2l5088 453C  
                                        i2l5344 475A                                          _INLVLA 000F0D  
                                        _INLVLB 000F15                                          _INLVLC 000F1D  
                                        i2l5372 4760                                          i2l5620 41C4  
                                        _INLVLD 000F22                                          _INLVLE 000F2A  
                                        i2l5374 4766                                          i2l5630 34A4  
                                        i2l5622 41C8                                          i2l5640 34FE  
                                        i2l5632 34B4                                          i2l5624 41D8  
                                        i2l5616 41A0                                          i2l6096 001A  
                                        i2l5650 4282                                          i2l5642 3518  
                                        i2l5634 34C4                                          i2l5626 41DC  
                                        i2l5618 41B2                                          i2l6098 0028  
                                        i2l5660 36DA                                          i2l5652 4292  
                                        i2l5644 3534                                          i2l5636 34DE  
                                        i2l5628 3494                                          i2l5670 3730  
                                        i2l5662 36EA                                          i2l5654 4294  
                                        i2l5646 3552                                          i2l5638 34EE  
                                        i2l5672 3740                                          i2l5664 36F8  
                                        i2l5656 42A4                                          i2l5648 4270  
                                        i2l5674 375A                                          i2l5666 3708  
                                        i2l5658 42A8                                          i2l5676 3776  
                                        i2l5668 3722                                          i2l5678 3794  
                                        _TABLAT 000FF5                                   ??_ValidateCmd 0057  
                                        _OSCFRQ 000EDE                                   vfpfcnvrt@done 006B  
                  __size_of_EUSART1_is_tx_ready 0018                                          _NVMDAT 000F80  
                                        _RX1PPS 000EB5                                          _RX2PPS 000E8D  
                                        _TX1REG 000F9A                                          _TX2REG 000E9A  
                              __end_of_checkCRC 2D10                                          _TX1STA 000F9E  
                                        _TX2STA 000E9E                                     ModbusFC10@i 0094  
                                   ModbusFC10@j 0096                                     ModbusFC03@i 0094  
                                        _RXMode 474E                                          _TXMode 4754  
                                        _RXStat 00DC                                  __CFG_PWRTE$OFF 000000  
                          __size_of_generateCRC 00DC                                          _ByteHi 00D3  
                                        _ByteLo 00F4                              _UART1_Write_string 3C5A  
                                __CFG_XINST$OFF 000000                                    vfprintf@cfmt 0053  
                     __CFG_RSTOSC$HFINTOSC_1MHZ 000000                              AddRxBuffToModBus@i 008D  
                                 _CardConfigIni 1EBC                                      _PrintMB400 3CC8  
                           __end_of_ModbusError 36DA                                       ??___aodiv 0015  
                                     ??___aomod 0015                                          ___wmul 45A6  
                                __CFG_STVREN$ON 000000                           CardConfigIni@NumBytes 0010  
                                     ??___lodiv 0015                                       ??___lomod 0015  
                           ?_UART1_Write_string 0006                        ?_EUSART1_SetErrorHandler 0005  
                           __end_of_SaveCardDat 227C                                          clear_0 2FF6  
                                        clear_1 3002                                          clear_2 300E  
                                        clear_3 301A                                          clear_4 3026  
                                        clear_5 3032                                          _rxData 0500  
                   _EUSART2_FramingErrorHandler 01E3                                          _printf 4558  
                                        pad@buf 0019                                   ReadRX232@temp 0055  
              ??_EUSART1_SetOverrunErrorHandler 0007                 ?_EUSART1_SetOverrunErrorHandler 0005  
                                        _strcat 4580                                          dtoa@fp 0022  
                       __end_of_DATAEE_ReadByte 463A                                          _strcmp 379A  
                                        _strcpy 3D94                                          _strlen 40BA  
                                 _ExpectedBytes 00F8                                 _ADCC_Initialize 406A  
                                        fputc@c 0007                                  _PMD_Initialize 45EE  
                                        fputs@c 0014                                          fputs@i 0015  
                                        fputs@s 0010                                       ??_isalpha 0007  
                                     ??_isdigit 0007                                       ??_memmove 000F  
                                 ??_PrintModbus 008D                                       ??_islower 0007  
                                  __mediumconst F62A                                       ??_isspace 0007  
                                        tblptrh 000FF7                                       ??_isupper 0007  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                          _EUSART2_Transmit_ISR 41A0               __size_of_ADCC_GetSingleConversion 002E  
                                        stoa@cp 0020                                          stoa@fp 0010  
                              __end_of_vfprintf 3D94                       ?_ADCC_GetSingleConversion 0005  
                               ??_EUSART1_Write 0005                                          utoa@fp 0022  
                               ??_EUSART2_Write 0005                                          xtoa@fp 0022  
                               _eusart1RxBuffer 0400                                       ??_toupper 000D  
                          ??_UART1_Write_string 000A                   __size_of_INTERRUPT_Initialize 0004  
                               _eusart2RxBuffer 0364                                 _eusart1TxBuffer 02C2  
                  __size_of_EUSART2_is_rx_ready 0018                               _SYSTEM_Initialize 45CC  
                       __size_of_PrintModRespon 00AA                                 _eusart2TxBuffer 0384  
                                    __accesstop 0060                         __end_of__initialization 3040  
                  __size_of_EUSART2_is_tx_ready 0018                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                                 checkCRC@crcHigh 0092  
                             ??_ClearEEAddRange 0055                         ??_EUSART2_RxDataHandler 0001  
                __size_of_EUSART1_RxDataHandler 002C                   __end_of_EUSART1_RxDataHandler 4558  
                                ?_CardConfigIni 000A                             __end_of_ValidateCmd 2418  
                                __pcstackCOMRAM 0001                                    __pidataBANK0 46B0  
                                  __pidataBANK1 3A3A                                    __pidataBANK2 3902  
                                  __pidataBANK3 42F6                                    __pidataBANK4 4336  
                           ??_SYSTEM_Initialize 0007                                _DATAEE_WriteByte 41E8  
                                 __end_of_fputc 3A3A                                   __end_of_fputs 4270  
                ?_EUSART2_SetTxInterruptHandler 0005                                   __end_of_putch 4746  
                             __end_of_ReadRX232 2E34                          __end_of_PMD_Initialize 460A  
                          __end_of_EUSART1_Read 4018                            __end_of_EUSART2_Read 3FC0  
                                   ?_ModbusFC10 0001                                     ?_ModbusFC03 0001  
                        ??_EUSART1_Transmit_ISR 0001                        ?_EUSART2_SetErrorHandler 0005  
                         ?_EUSART2_Transmit_ISR 0001                     __end_of_EUSART1_Receive_ISR 379A  
                           CardConfigIni@RetNum 000C                            ModbusError@ErrorCode 0014  
                                       ??_fputc 000B                       __end_of_SYSTEM_Initialize 45EE  
                                       ??_fputs 0014                                         ??_putch 0006  
                                 _eusart1RxHead 0059                                   _eusart1TxHead 00E2  
                                 _eusart2RxHead 005A                                   _eusart1RxTail 00E0  
                                 _eusart2TxHead 00E7                                      __pbssBANK0 00CB  
                                    __pbssBANK1 01EB                                      __pbssBANK2 02A2  
                                    __pbssBANK3 0300                                      __pbssBANK4 0400  
                                    __pbssBANK5 0500                                   _eusart2RxTail 00E5  
                                 _eusart1TxTail 00E1               _EUSART1_TxDefaultInterruptHandler 01E7  
                                 _eusart2TxTail 00E6                 ??_EUSART1_SetRxInterruptHandler 0007  
                           __end_of_PrintModbus 1A8C                ??_EUSART2_SetFramingErrorHandler 0007  
               ?_EUSART2_SetFramingErrorHandler 0005                                     _ModbusError 361A  
                                     ?_ModbusRx 0001                                         ?_RXMode 0001  
                                       ?_TXMode 0001                           EUSART2_Read@readValue 0005  
                                     ?_TogDebug 0001                 __end_of_EUSART1_SetErrorHandler 473C  
                                   _SaveCardDat 20AC                                     ?_PrintMB400 0001  
                              _InitialiseString 0E82                                         ?___wmul 0005  
                               __CFG_PPS1WAY$ON 000000                         __end_of_ADCC_Initialize 40BA  
                                       _ADFLTRH 000F73                                         _ADFLTRL 000F72  
                                       _ADPREVH 000F62                                         _MB300xx 03B7  
                                       _ADPREVL 000F61                                         _MB301xx 0164  
                                       _MB302xx 00FA                                         _MB303xx 00E8  
                                       _MB400xx 0464                                         _MB304xx 0172  
                                       _MB305xx 023C                                         _MB306xx 018D  
                                       _ADSTPTH 000F69                                         _ADSTPTL 000F68  
                                       ?_printf 007D                                 ?_PMD_Initialize 0001  
                             _ClearModbusRespon 42B4                                  CardConfigIni@i 0016  
                                CardConfigIni@j 0014                                         ?_strcat 0013  
                                       ?_strcmp 0005                                         ?_strcpy 0009  
                                       ?_strlen 0005          __end_of_EUSART1_SetFramingErrorHandler 4732  
       __size_of_EUSART1_SetFramingErrorHandler 000A                  _EUSART1_SetFramingErrorHandler 4728  
                              ?_DATAEE_ReadByte 0005                           _eusart2RxStatusBuffer 02A2  
                                     ?_checkCRC 0001                            InitialiseString@Date 00A0  
                            ?_ClearModbusRespon 0001                    ?_EUSART1_DefaultErrorHandler 0001  
                          InitialiseString@Time 00AB                                         _SP1BRGH 000F9C  
                                       _SP1BRGL 000F9B                                         _SP2BRGH 000E9C  
                                       _SP2BRGL 000E9B                                         _OSCCON1 000ED8  
                                       _OSCCON3 000EDA                     __end_of_EUSART2_Receive_ISR 3558  
                            __size_of_vfpfcnvrt 058A                                         _TBLPTRH 000FF7  
                                       _TBLPTRL 000FF6                                         _TBLPTRU 000FF8  
                                       _NVMADRH 000F7F                                         _NVMADRL 000F7E  
                                       _OSCTUNE 000EDD                                         _NVMCON2 000F82  
                                       _SLRCONA 000F0E                                         _SLRCONB 000F16  
                                       _SLRCONC 000F1E                                         _SLRCOND 000F23  
                                       _SLRCONE 000F2B                        ModbusFC03@convertedValue 0091  
                           ??_ClearModbusRespon 0005                                ___lomod@dividend 0005  
                                  ?_ClearRxBuff 0001                                     PrintMB400@i 0055  
                          DATAEE_WriteByte@bAdd 0005                                     _ValidateCmd 227C  
                                       _Command 01EB                               generateCRC@HiOrLo 0007  
                                    ??_ModbusRx 0056                                         _ByteNum 00D7  
                           __size_of_ModbusFC10 022E                             __size_of_ModbusFC03 07CE  
                               ??_CardConfigIni 0012                                 __size_of_RXMode 0006  
                               __size_of_TXMode 0006                                         __Hparam 0000  
                                    ??_TogDebug 0055                                         __Lparam 0000  
                fp__EUSART2_DefaultErrorHandler 0000                                         ___aodiv 274C  
                                       ___aomod 2A50                               generateCRC@crcLow 000C  
                               __size_of___wmul 0026                                         ___lodiv 304A  
                                       ___lomod 33C4                                       ?_vfprintf 0077  
                     __end_of_ClearModbusRespon 42F6                             _EUSART1_is_rx_ready 466A  
                        InitialiseString@F10760 00D1                          InitialiseString@F10763 024C  
                        InitialiseString@F10756 02D2                          InitialiseString@F10758 03A4  
                        InitialiseString@F10766 017E                      __end_of_EUSART1_is_tx_done 46D8  
                                       __pcinit 2F50                 __end_of_EUSART2_SetErrorHandler 470A  
                                       __ramtop 0F00                             _EUSART1_is_tx_ready 4682  
                                       __ptext0 2E34                                         __ptext1 227C  
                                       __ptext2 43F2                                         __ptext3 20AC  
                                       __ptext4 2D10                                         __ptext5 4580  
                                       __ptext6 3D94                                         __ptext7 313A  
                                       __ptext8 460A                                         __ptext9 3F68  
                               __size_of_printf 0028                                 __size_of_strcat 0026  
                               __size_of_strcmp 00BE                                 __size_of_strcpy 005E  
                               __size_of_strlen 0050                               ReadRX232@NumChars 008D  
                                    ??_checkCRC 008D           fp__EUSART2_DefaultOverrunErrorHandler 0000  
    __end_of_EUSART2_DefaultOverrunErrorHandler 474E     __size_of_EUSART2_DefaultOverrunErrorHandler 0008  
          ??_EUSART2_DefaultOverrunErrorHandler 0001             ?_EUSART2_DefaultOverrunErrorHandler 0001  
            _EUSART2_DefaultOverrunErrorHandler 4746                           _OSCILLATOR_Initialize 463A  
                        ??_EUSART2_Transmit_ISR 0001                                    __size_of_abs 0040  
                                  __size_of_pad 00C2                                         _isalpha 43B6  
                                       _isdigit 449A                                         _memmove 313A  
                            _EUSART1_Initialize 3B5C                                         _islower 442A  
                      ??_PIN_MANAGER_Initialize 0005                                         _isspace 4018  
                                   _PrintModbus 17D0                                         _isupper 4462  
                 ??_EUSART1_DefaultErrorHandler 0001                                         atoi@neg 0012  
                InitialiseString@convertedValue 00BF                      __size_of_SYSTEM_Initialize 0022  
                      __size_of_ClearModbusData 004C                             __size_of_PrintMB400 0068  
                                       _toupper 3DF2                            end_of_initialization 3040  
                        InitialiseString@i_1472 00C9                            ?_EUSART1_is_rx_ready 0001  
                           ?_EUSART1_Initialize 0001                                  _PrintModRespon 3858  
                        InitialiseString@RevNum 00C1                      __end_of_EUSART2_is_tx_done 46B0  
                          ?_EUSART1_is_tx_ready 0001                                         fputc@fp 0009  
                   _EUSART1_OverrunErrorHandler 01DB                                         fputs@fp 0012  
         __end_of_EUSART1_SetRxInterruptHandler 471E          __size_of_EUSART1_SetRxInterruptHandler 000A  
                 _EUSART1_SetRxInterruptHandler 4714                                    SaveCardDat@i 009F  
                            _EUSART2_Initialize 3BDC                               __end_of_vfpfcnvrt 0E82  
                                       postdec1 000FE5                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc1 000FE6  
                                       postinc2 000FDE                           __size_of_EUSART1_Read 0058  
                         __size_of_EUSART2_Read 0058                                ?_ADCC_Initialize 0001  
                                    ??_vfprintf 0053                __end_of_ADCC_GetSingleConversion 4500  
                          ??_EUSART1_Initialize 0007                                         strcmp@l 0005  
                                       strcmp@r 0007                           __CFG_WDTCPS$WDTCPS_31 000000  
                           ?_EUSART2_Initialize 0001                                         strcpy@d 0011  
                                       strlen@a 0007                             _EUSART2_is_rx_ready 460A  
                                       strcpy@s 000F                                         strlen@s 0005  
                             ValidateCmd@F10790 0228                               ValidateCmd@F10793 0214  
                             ValidateCmd@F10796 0200                             _EUSART2_is_tx_ready 4652  
                      ValidateCmd@ConfName_1542 01BB                        ValidateCmd@ConfName_1538 01A7  
                              ClearModbusData@i 0005                         fp__EUSART1_Transmit_ISR 0000  
                               _ClearEEAddRange 3F0C                          __end_of_PrintModRespon 3902  
              __size_of_EUSART1_SetErrorHandler 000A                             EUSART1_Write@txData 0005  
                              __CFG_FEXTOSC$OFF 000000                           ??_EUSART1_is_rx_ready 0005  
                      __end_of_DATAEE_WriteByte 422C                            ??_EUSART2_Initialize 0007  
                          ?_EUSART2_is_rx_ready 0001                           ??_EUSART1_is_tx_ready 0005  
                                 ??_generateCRC 0008                            ?_EUSART2_is_tx_ready 0001  
                                  _EUSART1_Read 3FC0                                    _EUSART2_Read 3F68  
          __size_of_EUSART1_DefaultErrorHandler 0006                                  __end_of_RXMode 4754  
                                __end_of_TXMode 475A                          UART1_Write_string@data 0006  
                __size_of_EUSART2_RxDataHandler 002C                   __end_of_EUSART2_RxDataHandler 452C  
                  __end_of_INTERRUPT_Initialize 4770                      __size_of_ClearModbusRespon 0042  
                                   vfpfcnvrt@ap 004D                                     vfpfcnvrt@cp 0068  
                                   vfpfcnvrt@fp 0049                                     vfpfcnvrt@ll 0060  
                                __end_of___wmul 45CC                          ?_OSCILLATOR_Initialize 0001  
                                  ??_ModbusFC10 008D                                    ??_ModbusFC03 008D  
                                __end_of_printf 4580                                  __end_of_strcat 45A6  
                                __end_of_strcmp 3858                                  __end_of_strcpy 3DF2  
                                     _ReadRX232 2D10                                  __end_of_strlen 410A  
                           start_initialization 2F50                                 ___lodiv@divisor 000D  
                               ___lodiv@counter 001D                 __size_of_PIN_MANAGER_Initialize 008E  
                                   __end_of_abs 43B6                                     __end_of_pad 361A  
                      __end_of_InitialiseString 121A   EUSART1_SetRxInterruptHandler@interruptHandler 0005  
 EUSART1_SetTxInterruptHandler@interruptHandler 0005   EUSART2_SetRxInterruptHandler@interruptHandler 0005  
 EUSART2_SetTxInterruptHandler@interruptHandler 0005                                 ?_PrintModRespon 0001  
                                   putch@txData 0006                           ??_EUSART2_is_rx_ready 0005  
                         __end_of_EUSART1_Write 3F0C                     __size_of_UART1_Write_string 006E  
                         __end_of_EUSART2_Write 3EAE                           ??_EUSART2_is_tx_ready 0005  
                        fp__EUSART1_Receive_ISR 0000                                    ?_ModbusError 0014  
              __size_of_EUSART2_SetErrorHandler 000A                             DATAEE_ReadByte@bAdd 0005  
                                      ??_RXMode 0005                            __size_of_ClearRxBuff 004A  
                             ??_ClearModbusData 0005                                        ??_TXMode 0005  
        __end_of_EUSART2_SetOverrunErrorHandler 46F6         __size_of_EUSART2_SetOverrunErrorHandler 000A  
                _EUSART2_SetOverrunErrorHandler 46EC                              __end_of_ModbusFC10 1CBA  
                            __end_of_ModbusFC03 08F8                                    ?_SaveCardDat 0091  
                              __CFG_LPBOREN$OFF 000000                                    ClearRxBuff@i 0006  
                              _SaveCardDat$2846 009B                               __size_of_ModbusRx 017C  
                                   vfprintf@fmt 0079                             __end_of_generateCRC 32F2  
                                  ??_PrintMB400 0055                                ??_PMD_Initialize 0005  
                                      ??___wmul 0009                               __size_of_TogDebug 0038  
                         _EUSART1_RxDataHandler 452C                  ?_EUSART1_SetRxInterruptHandler 0005  
                                   __pdataBANK0 00E8                                     __pdataBANK1 0100  
                                   __pdataBANK2 0200                                     __pdataBANK3 03B7  
                                   __pdataBANK4 0464                                        ??_printf 0055  
                                      ??_strcat 0017                                        ??_strcmp 0009  
                                      ??_strcpy 000D                                        ??_strlen 0007  
                                _eusart1RxCount 00DF                         __end_of_ClearEEAddRange 3F68  
                                _eusart2RxCount 00E4                        _ADCC_GetSingleConversion 44D2  
                                    ?_ReadRX232 008D                                     __pbssCOMRAM 0057  
             _EUSART1_RxDefaultInterruptHandler 01E5                   __size_of_EUSART1_Transmit_ISR 0044  
                                 __pcstackBANK0 0060                                   __pcstackBANK1 0193  
                              ___aodiv@dividend 0005                               __size_of_checkCRC 015C  
                       fp__EUSART2_Transmit_ISR 0000                               _AddRxBuffToModBus 32F2  
                           EUSART2_Write@txData 0005                              __end_of_PrintMB400 3D30  
               ??_EUSART1_SetTxInterruptHandler 0007                              ?_AddRxBuffToModBus 0001  
              ??_EUSART1_SetFramingErrorHandler 0007                 ?_EUSART1_SetFramingErrorHandler 0005  
               ??_EUSART2_SetRxInterruptHandler 0007                                    ?_ValidateCmd 0001  
                  __size_of_EUSART1_Receive_ISR 00C0                          fp__EUSART2_Receive_ISR 0000  
                                     _atoi$2372 0014                                       _atoi$2373 0018  
                                     _atoi$2374 0016                                       __pnvBANK0 00FC  
                                     __pnvBANK1 01D9        __end_of_ADCC_DisableContinuousConversion 4774  
     __size_of_ADCC_DisableContinuousConversion 0004              ??_ADCC_DisableContinuousConversion 0005  
             ?_ADCC_DisableContinuousConversion 0001                _ADCC_DisableContinuousConversion 4770  
                           ??_AddRxBuffToModBus 0055                          _PIN_MANAGER_Initialize 3ACE  
                                     _dtoa$1868 0034                                       __pintcode 0008  
                             InitialiseString@i 00C7                               InitialiseString@j 00C5  
                                 __pmediumconst F62A                 ADCC_GetSingleConversion@channel 0009  
                                      ?___aodiv 0005                                        ?___aomod 0005  
                              ___aodiv@quotient 0017                                        ?___lodiv 0005  
                                      ?___lomod 0005               _EUSART2_TxDefaultInterruptHandler 00FC  
                  ??_INTERRUPT_InterruptManager 0001                               __size_of_vfprintf 0064  
                               ___lomod@divisor 000D                                        _BAUD1CON 000F9F  
                                      _BAUD2CON 000E9F                                       checkCRC@i 009A  
                                     checkCRC@j 0096                                 ___lomod@counter 0015  
         fp__EUSART1_DefaultOverrunErrorHandler 0000      __end_of_EUSART1_DefaultOverrunErrorHandler 4766  
   __size_of_EUSART1_DefaultOverrunErrorHandler 0006            ??_EUSART1_DefaultOverrunErrorHandler 0001  
           ?_EUSART1_DefaultOverrunErrorHandler 0001              _EUSART1_DefaultOverrunErrorHandler 4760  
                                      ?_isalpha 0005                                        ?_isdigit 0005  
                                      ?_memmove 0009                            _EUSART1_ErrorHandler 01D9  
                               SaveCardDat@Conf 00A1                    ?_EUSART2_DefaultErrorHandler 0001  
                               SaveCardDat@Name 0091                                        ?_islower 0005  
                                      ?_isspace 0005                                    ?_PrintModbus 0001  
                     __end_of_AddRxBuffToModBus 33C4                                        ?_isupper 0005  
                       _EUSART1_SetErrorHandler 4732                              _EUSART1_is_tx_done 46C4  
                                __size_of_fputc 0096                                  __size_of_fputs 0044  
                      __size_of_DATAEE_ReadByte 0018                                        ?_toupper 000B  
                                __size_of_putch 000A                            _INTERRUPT_Initialize 476C  
                   InitialiseString@readDataOdd 00C3                    __size_of_EUSART2_Receive_ISR 00C4  
                                   _generateCRC 3216                                  ___wmul@product 0009  
                                      _LATAbits 000F83         EUSART1_SetErrorHandler@interruptHandler 0005  
       EUSART2_SetErrorHandler@interruptHandler 0005                                        _LATDbits 000F86  
                           ?_EUSART1_is_tx_done 0001                                        _PIE3bits 000EC5  
                           __CFG_BORV$VBOR_2P45 000000                      UART1_Write_string@data_len 0008  
                                      _MBResCRC 00F6             __size_of_INTERRUPT_InterruptManager 011E  
                                      _MBResCnt 00D5                                        i2u426_40 4522  
                                      i2u426_41 451E                                        i2u427_40 454E  
                                      i2u427_41 454A                                        _PIR3bits 000ECD  
                         __end_of_CardConfigIni 20AC                                        i2u551_40 00AC  
                                      i2u550_48 0086                                        i2u551_41 00A8  
                                      i2u550_49 009A                                        i2u552_40 00BA  
                                      i2u544_40 0028                                        i2u552_41 00B6  
                                      i2u544_41 0024                                        i2u545_40 0038  
                                      i2u545_41 0034                                        i2u490_40 4282  
                                      i2u482_40 41B2                                        i2u554_40 00E6  
                                      i2u553_48 00C0                                        i2u546_40 0046  
                                      i2u490_41 427E                                        i2u482_41 41AE  
                                      i2u554_41 00E2                                        i2u553_49 00D4  
                                      i2u546_41 0042                                        i2u491_40 42A4  
                                      i2u483_40 41D8                                        i2u555_40 00F4  
                                      i2u491_41 42A0                                        i2u483_41 41D4  
                                      i2u555_41 00F0                                        i2u492_40 36F8  
                                      i2u484_40 34B4                                        i2u548_40 0072  
                                      i2u547_48 004C                                        i2u492_41 36F4  
                                      i2u484_41 34B0                                        i2u548_41 006E  
                                      i2u547_49 0060                                        i2u556_48 00FA  
                                      i2u549_40 0080                                        i2u556_49 010E  
                                      i2u549_41 007C                                        _PIR7bits 000ED1  
                                      i2u494_40 3730                                        i2u493_48 370E  
                                      i2u486_40 34EE                                        i2u485_48 34CA  
                                      i2u494_41 372C                                        i2u493_49 3722  
                                      i2u486_41 34EA                                        i2u485_49 34DE  
                                      i2u496_40 3776                                        i2u495_48 3746  
                                      i2u488_40 3534                                        i2u487_48 3504  
                                      i2u496_41 3772                                        i2u495_49 375A  
                                      i2u488_41 3530                                        i2u487_49 3518  
                                      i2u497_48 377C                                        i2u489_48 353A  
                                      i2u497_49 3790                                        i2u489_49 354E  
                                      _MBRespon 0257                          ?_EUSART1_RxDataHandler 0001  
                            _EUSART2_is_tx_done 469A                                       _vfpfcnvrt 08F8  
                                     _xtoa$1897 0035                                       _xtoa$1898 0037  
                                    _ADCON0bits 000F60                                      _ADCON1bits 000F59  
                                    _ADCON2bits 000F5A                                      _ADCON3bits 000F5B  
                             ___wmul@multiplier 0005                            ??_EUSART1_is_tx_done 0005  
                              ?_ClearEEAddRange 008D                             ?_EUSART2_is_tx_done 0001  
                                   ??_ReadRX232 0055                           SaveCardDat@dataeeAddr 0095  
                                   checkCRC@crc 0098                   __size_of_EUSART2_Transmit_ISR 0048  
                         DATAEE_WriteByte@bData 0007                                    _isspace$2399 000B  
                 ??_EUSART2_DefaultErrorHandler 0001                                      vfpfcnvrt@c 006A  
                                     copy_data0 2F64                                       copy_data1 2F84  
                                     copy_data2 2FA4                                       copy_data3 2FC4  
                                     copy_data4 2FE4                              ModbusFC10@TempData 0091  
                         ?_INTERRUPT_Initialize 0001                       CardConfigIni@readDataEven 0019  
                             ?_DATAEE_WriteByte 0005                         _EUSART2_SetErrorHandler 4700  
                         EUSART1_Read@readValue 0005                     _EUSART2_OverrunErrorHandler 01E1  
                            ??_DATAEE_WriteByte 0008                            ??_EUSART2_is_tx_done 0005  
                                      _ModbusRx 28D4                              generateCRC@MessCnt 0005  
                                    _ADSTATbits 000F65           __end_of_EUSART1_SetTxInterruptHandler 4714  
        __size_of_EUSART1_SetTxInterruptHandler 000A                   _EUSART1_SetTxInterruptHandler 470A  
                                      __Hrparam 0000                                        _TogDebug 43F2  
         __end_of_EUSART2_SetRxInterruptHandler 46EC          __size_of_EUSART2_SetRxInterruptHandler 000A  
                 _EUSART2_SetRxInterruptHandler 46E2                            __size_of_ModbusError 00C0  
                                    vfprintf@ap 007B                                        __Lrparam 0000  
                                    vfprintf@fp 0077                              __CFG_BOREN$SBORDIS 000000  
                          __size_of_SaveCardDat 01D0                         ??_OSCILLATOR_Initialize 0005  
                                     memmove@d1 0009                                       memmove@s1 000B  
                              __size_of___aodiv 0188                                __size_of___aomod 0164  
                            generateCRC@crcHigh 000A                                __size_of___lodiv 00F0  
                              __size_of___lomod 00D0                     __size_of_EUSART1_Initialize 0080  
                                    ?_vfpfcnvrt 0049                                 ___aodiv@divisor 000D  
                               ___aodiv@counter 0015                                 ReadRX232@F10772 00F2  
                     ??_EUSART1_SetErrorHandler 0007                               CardConfigIni@Name 000A  
                                      _checkCRC 2BB4             __end_of_EUSART1_DefaultErrorHandler 476C  
                   _EUSART1_DefaultErrorHandler 4766                                ??_PrintModRespon 0055  
                   __end_of_EUSART1_is_rx_ready 4682                                      strcat@dest 0013  
                      __size_of_ADCC_Initialize 0050                            _EUSART2_ErrorHandler 01DF  
                              __size_of_isalpha 003C                                __size_of_isdigit 0038  
                   __end_of_EUSART1_is_tx_ready 469A                      __size_of_AddRxBuffToModBus 00D2  
                              __size_of_memmove 00DC                                 _ClearModbusData 410A  
                              __size_of_islower 0038                                __size_of_isspace 0052  
                                      __ptext10 3F0C                                        __ptext11 41E8  
                                      __ptext20 476C                                        __ptext12 0E82  
                                      __ptext21 3BDC                                        __ptext13 1EBC  
                                      __ptext30 471E                                        __ptext22 46D8  
                                      __ptext14 379A                                        __ptext31 4728  
                                      __ptext23 46E2                                        __ptext15 4622  
                                      __ptext40 28D4                                        __ptext32 4732  
                                      __ptext24 46EC                                        __ptext16 45CC  
                                      __ptext41 2BB4                                        __ptext33 406A  
                                      __ptext25 46F6                                        __ptext17 45EE  
                                      __ptext50 3D30                                        __ptext42 474E  
                                      __ptext34 4770                                        __ptext26 4700  
                                      __ptext18 3ACE                                        __ptext51 08F8  
                                      __ptext43 466A                                        __ptext35 17D0  
                                      __ptext27 3B5C                                        __ptext19 463A  
                                      __ptext60 2418                                        __ptext52 14FA  
                                      __ptext44 3FC0                                        __ptext36 3858  
                                      __ptext28 470A                                        __ptext61 121A  
                                      __ptext53 3DF2                                        __ptext45 4156  
                                      __ptext37 4652                                        __ptext29 4714  
                                      __ptext70 274C                                        __ptext62 3558  
                                      __ptext54 442A                                        __ptext46 32F2  
                                      __ptext38 469A                                        __ptext71 25B2  
                                      __ptext63 40BA                                        __ptext55 4462  
                                      __ptext47 1A8C                                        __ptext39 3CC8  
                                      __ptext80 46C4                                        __ptext72 4018  
                                      __ptext64 422C                                        __ptext56 43B6  
                                      __ptext48 012A                                        __ptext81 3EAE  
                                      __ptext73 449A                                        __ptext65 39A4  
                                      __ptext57 1CBA                                        __ptext49 4558  
                                      __ptext90 475A                                        __ptext82 44D2  
                                      __ptext74 45A6                                        __ptext66 473C  
                                      __ptext58 33C4                                        __ptext91 4500  
                                      __ptext83 42B4                                        __ptext75 361A  
                                      __ptext67 3E50                                        __ptext59 304A  
                                      __ptext92 4270                                        __ptext84 410A  
                                      __ptext76 3216                                        __ptext68 4376  
                                      __ptext93 36DA                                        __ptext77 3C5A  
                                      __ptext69 2A50                                        __ptext94 4760  
                                      __ptext86 41A0                                        __ptext78 4754  
                                      __ptext95 4776                                        __ptext87 3494  
                                      __ptext79 4682                                        __ptext96 4766  
                                      __ptext88 4746                                        __ptext97 452C  
                                      __ptext89 4774                                        __ptext98 0000  
                              __size_of_isupper 0038                               ?_InitialiseString 0001  
                   DATAEE_WriteByte@GIEBitValue 0008                                      strcpy@dest 0009  
                              __size_of_toupper 005E                     __size_of_EUSART2_Initialize 007E  
                       ClearEEAddRange@NumBytes 008F                              ??_InitialiseString 0055  
                                 __size_of_atoi 019A                                   __size_of_main 011C  
                                 __size_of_dtoa 02E0                                   __size_of_stoa 019A  
         fp__EUSART2_DefaultFramingErrorHandler 0000      __end_of_EUSART2_DefaultFramingErrorHandler 4776  
   __size_of_EUSART2_DefaultFramingErrorHandler 0002            ??_EUSART2_DefaultFramingErrorHandler 0001  
           ?_EUSART2_DefaultFramingErrorHandler 0001              _EUSART2_DefaultFramingErrorHandler 4774  
                                 __size_of_utoa 0202                                   __size_of_xtoa 02D6  
                             ??_DATAEE_ReadByte 0007                            __size_of_ValidateCmd 019C  
                          __CFG_WDTCWS$WDTCWS_7 000000                         ClearEEAddRange@StartAdd 008D  
                                  PrintModbus@i 0094                                    PrintModbus@j 0092  
          __size_of_EUSART2_DefaultErrorHandler 0006                                      _RC1STAbits 000F9D  
                                     stoa@F1139 0186                                      _RC2STAbits 000E9D  
EUSART1_SetOverrunErrorHandler@interruptHandler 0005  EUSART2_SetOverrunErrorHandler@interruptHandler 0005  
                               PrintModRespon@i 008D                      ??_ADCC_GetSingleConversion 0007  
                                      _rxStatus 00DB                                        int$flags 005B  
                    CardConfigIni@dataeeAddrWrk 000E                                        _vfprintf 3D30  
            __end_of_INTERRUPT_InterruptManager 0126                      _INTERRUPT_InterruptManager 0008  
                         _EUSART2_RxDataHandler 4500                                       printf@fmt 007D  
                   _EUSART1_FramingErrorHandler 01DD                             _EUSART1_Receive_ISR 36DA  
                              ___aomod@dividend 0005                ??_EUSART2_SetOverrunErrorHandler 0007  
               ?_EUSART2_SetOverrunErrorHandler 0005                         InitialiseString@PartNum 008D  
                                _vfpfcnvrt$1912 006D                         InitialiseString@Partial 00BE  
                                    _INTCONbits 000FF2                     __end_of_EUSART2_is_rx_ready 4622  
                                   _NVMCON1bits 000F81                     __end_of_EUSART2_is_tx_ready 466A  
                                      isalpha@c 0005                      __end_of_UART1_Write_string 3CC8  
                                      isdigit@c 0005                          ??_INTERRUPT_Initialize 0005  
                                      memmove@d 0011                                        memmove@n 000D  
                                      memmove@s 0013                       ??_EUSART2_SetErrorHandler 0007  
                          __size_of_PrintModbus 02BC                                        intlevel2 0000  
                                 ??_ClearRxBuff 0005                                       strcat@src 0015  
                          ?_EUSART1_Receive_ISR 0001                                        islower@c 0005  
                                      isspace@c 0005                         ?_PIN_MANAGER_Initialize 0001  
                             __CFG_CLKOUTEN$OFF 000000          __end_of_EUSART1_SetOverrunErrorHandler 4728  
       __size_of_EUSART1_SetOverrunErrorHandler 000A                  _EUSART1_SetOverrunErrorHandler 471E  
                                     strcpy@src 000B                                        isupper@c 0005  
                  __end_of_EUSART1_Transmit_ISR 42B4                                        printf@ap 008B  
EUSART1_SetFramingErrorHandler@interruptHandler 0005  EUSART2_SetFramingErrorHandler@interruptHandler 0005  
                ?_EUSART1_SetTxInterruptHandler 0005                  ?_EUSART2_SetRxInterruptHandler 0005  
                               ___aomod@divisor 000D                                     ??_vfpfcnvrt 004F  
                                      stoa@nuls 0015                                 ___aomod@counter 0015  
                        __size_of_EUSART1_Write 005E                              _eusart1RxLastError 00DE  
                        __size_of_EUSART2_Write 005E                             _EUSART2_Receive_ISR 3494  
                       __end_of_ClearModbusData 4156                                        toupper@c 000B  
                                    _TX1STAbits 000F9E                                      _TX2STAbits 000E9E  
                                  ___aodiv@sign 0016                                 ModbusFC10@error 0093  
                         ??_EUSART1_Receive_ISR 0001                  __end_of_PIN_MANAGER_Initialize 3B5C  
                             ??_ADCC_Initialize 0005                                 ModbusFC03@error 0093  
               ??_EUSART2_SetTxInterruptHandler 0007                            ?_EUSART2_Receive_ISR 0001  
                            _eusart2RxLastError 00E3                                    ?_generateCRC 0005  
                       ??_EUSART1_RxDataHandler 0001                                    ___aomod@sign 0016  
             _EUSART2_RxDefaultInterruptHandler 01E9                             __end_of_ClearRxBuff 41A0  
