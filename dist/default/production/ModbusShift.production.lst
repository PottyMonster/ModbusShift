

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Mar 06 10:18:41 2021

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F46K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    85                           	psect	text67,global,reloc=2,class=CODE,delta=1
    86                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    87                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    88  0000                     
    89                           ; Version 2.10
    90                           ; Generated 31/07/2019 GMT
    91                           ; 
    92                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    93                           ; All rights reserved.
    94                           ; 
    95                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    96                           ; 
    97                           ; Redistribution and use in source and binary forms, with or without modification, are
    98                           ; permitted provided that the following conditions are met:
    99                           ; 
   100                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   101                           ;        conditions and the following disclaimer.
   102                           ; 
   103                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   104                           ;        of conditions and the following disclaimer in the documentation and/or other
   105                           ;        materials provided with the distribution.
   106                           ; 
   107                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   108                           ;        software without specific prior written permission.
   109                           ; 
   110                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   111                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   112                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   113                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   114                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   115                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   116                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   117                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   118                           ; 
   119                           ; 
   120                           ; Code-generator required, PIC18F46K40 Definitions
   121                           ; 
   122                           ; SFR Addresses
   123  0000                     
   124                           	psect	idataBANK0
   125  002516                     __pidataBANK0:
   126                           	opt callstack 0
   127                           
   128                           ;initializer for _data1
   129  002516  11                 	db	17
   130  002517  03                 	db	3
   131  002518  06                 	db	6
   132  002519  AE                 	db	174
   133  00251A  41                 	db	65
   134  00251B  56                 	db	86
   135  00251C  52                 	db	82
   136  00251D  43                 	db	67
   137  00251E  40                 	db	64
   138  00251F  49                 	db	73
   139  002520  AD                 	db	173
   140                           
   141                           ;initializer for stoa@F1139
   142  002521  28                 	db	40
   143  002522  6E                 	db	110
   144  002523  75                 	db	117
   145  002524  6C                 	db	108
   146  002525  6C                 	db	108
   147  002526  29                 	db	41
   148  002527  00                 	db	0
   149                           
   150                           ;initializer for _ExpectedBytes
   151  002528  0008               	dw	8
   152                           
   153                           	psect	nvBANK0
   154  0000CD                     __pnvBANK0:
   155                           	opt callstack 0
   156  0000CD                     _EUSART1_ErrorHandler:
   157                           	opt callstack 0
   158  0000CD                     	ds	2
   159  0000CF                     _EUSART1_OverrunErrorHandler:
   160                           	opt callstack 0
   161  0000CF                     	ds	2
   162  0000D1                     _EUSART1_FramingErrorHandler:
   163                           	opt callstack 0
   164  0000D1                     	ds	2
   165  0000D3                     _EUSART2_ErrorHandler:
   166                           	opt callstack 0
   167  0000D3                     	ds	2
   168  0000D5                     _EUSART2_OverrunErrorHandler:
   169                           	opt callstack 0
   170  0000D5                     	ds	2
   171  0000D7                     _EUSART2_FramingErrorHandler:
   172                           	opt callstack 0
   173  0000D7                     	ds	2
   174  0000D9                     _EUSART1_RxDefaultInterruptHandler:
   175                           	opt callstack 0
   176  0000D9                     	ds	2
   177  0000DB                     _EUSART1_TxDefaultInterruptHandler:
   178                           	opt callstack 0
   179  0000DB                     	ds	2
   180  0000DD                     _EUSART2_RxDefaultInterruptHandler:
   181                           	opt callstack 0
   182  0000DD                     	ds	2
   183  0000DF                     _EUSART2_TxDefaultInterruptHandler:
   184                           	opt callstack 0
   185  0000DF                     	ds	2
   186  0000E1                     _eusart1TxBufferRemaining:
   187                           	opt callstack 0
   188  0000E1                     	ds	1
   189  0000E2                     _eusart2TxBufferRemaining:
   190                           	opt callstack 0
   191  0000E2                     	ds	1
   192  0000                     _RC2REG	set	3737
   193  0000                     _RC2STAbits	set	3741
   194  0000                     _TX2REG	set	3738
   195  0000                     _TX2STAbits	set	3742
   196  0000                     _SP2BRGH	set	3740
   197  0000                     _SP2BRGL	set	3739
   198  0000                     _TX2STA	set	3742
   199  0000                     _RC2STA	set	3741
   200  0000                     _BAUD2CON	set	3743
   201  0000                     _PIR7bits	set	3793
   202  0000                     _PIR3bits	set	3789
   203  0000                     _PIE3bits	set	3781
   204  0000                     _PMD5	set	3814
   205  0000                     _PMD4	set	3813
   206  0000                     _PMD3	set	3812
   207  0000                     _PMD2	set	3811
   208  0000                     _PMD1	set	3810
   209  0000                     _PMD0	set	3809
   210  0000                     _OSCTUNE	set	3805
   211  0000                     _OSCFRQ	set	3806
   212  0000                     _OSCEN	set	3804
   213  0000                     _OSCCON3	set	3802
   214  0000                     _OSCCON1	set	3800
   215  0000                     _RX2PPS	set	3725
   216  0000                     _RC6PPS	set	3837
   217  0000                     _RB6PPS	set	3829
   218  0000                     _RX1PPS	set	3765
   219  0000                     _INLVLE	set	3882
   220  0000                     _INLVLD	set	3874
   221  0000                     _INLVLC	set	3869
   222  0000                     _INLVLB	set	3861
   223  0000                     _INLVLA	set	3853
   224  0000                     _SLRCONE	set	3883
   225  0000                     _SLRCOND	set	3875
   226  0000                     _SLRCONC	set	3870
   227  0000                     _SLRCONB	set	3862
   228  0000                     _SLRCONA	set	3854
   229  0000                     _ODCOND	set	3876
   230  0000                     _ODCONC	set	3871
   231  0000                     _ODCONB	set	3863
   232  0000                     _ODCONA	set	3855
   233  0000                     _ODCONE	set	3884
   234  0000                     _WPUC	set	3872
   235  0000                     _WPUA	set	3856
   236  0000                     _WPUB	set	3864
   237  0000                     _WPUE	set	3885
   238  0000                     _WPUD	set	3877
   239  0000                     _ANSELA	set	3857
   240  0000                     _ANSELE	set	3886
   241  0000                     _ANSELB	set	3865
   242  0000                     _ANSELC	set	3873
   243  0000                     _ANSELD	set	3878
   244  0000                     _LATDbits	set	3974
   245  0000                     _LATAbits	set	3971
   246  0000                     _RC1REG	set	3993
   247  0000                     _RC1STAbits	set	3997
   248  0000                     _TX1REG	set	3994
   249  0000                     _TX1STAbits	set	3998
   250  0000                     _SP1BRGH	set	3996
   251  0000                     _SP1BRGL	set	3995
   252  0000                     _TX1STA	set	3998
   253  0000                     _RC1STA	set	3997
   254  0000                     _BAUD1CON	set	3999
   255  0000                     _NVMDAT	set	3968
   256  0000                     _NVMADRL	set	3966
   257  0000                     _NVMADRH	set	3967
   258  0000                     _NVMCON2	set	3970
   259  0000                     _TABLAT	set	4085
   260  0000                     _TBLPTRL	set	4086
   261  0000                     _TBLPTRH	set	4087
   262  0000                     _TBLPTRU	set	4088
   263  0000                     _NVMCON1bits	set	3969
   264  0000                     _INTCONbits	set	4082
   265  0000                     _TRISD	set	3979
   266  0000                     _TRISC	set	3978
   267  0000                     _TRISB	set	3977
   268  0000                     _TRISA	set	3976
   269  0000                     _TRISE	set	3980
   270  0000                     _LATC	set	3973
   271  0000                     _LATB	set	3972
   272  0000                     _LATA	set	3971
   273  0000                     _LATD	set	3974
   274  0000                     _LATE	set	3975
   275                           
   276                           	psect	mediumconst
   277  00FE22                     __pmediumconst:
   278                           	opt callstack 0
   279  00FE22  00                 	db	0
   280  00FE23                     STR_1:
   281                           
   282                           ; BSR set to: 0
   283  00FE23  0D                 	db	13
   284  00FE24  44                 	db	68	;'D'
   285  00FE25  61                 	db	97	;'a'
   286  00FE26  6E                 	db	110	;'n'
   287  00FE27  20                 	db	32
   288  00FE28  61                 	db	97	;'a'
   289  00FE29  6E                 	db	110	;'n'
   290  00FE2A  64                 	db	100	;'d'
   291  00FE2B  20                 	db	32
   292  00FE2C  53                 	db	83	;'S'
   293  00FE2D  61                 	db	97	;'a'
   294  00FE2E  6D                 	db	109	;'m'
   295  00FE2F  27                 	db	39
   296  00FE30  73                 	db	115	;'s'
   297  00FE31  20                 	db	32
   298  00FE32  4D                 	db	77	;'M'
   299  00FE33  6F                 	db	111	;'o'
   300  00FE34  64                 	db	100	;'d'
   301  00FE35  62                 	db	98	;'b'
   302  00FE36  75                 	db	117	;'u'
   303  00FE37  73                 	db	115	;'s'
   304  00FE38  20                 	db	32
   305  00FE39  47                 	db	71	;'G'
   306  00FE3A  50                 	db	80	;'P'
   307  00FE3B  49                 	db	73	;'I'
   308  00FE3C  4F                 	db	79	;'O'
   309  00FE3D  20                 	db	32
   310  00FE3E  45                 	db	69	;'E'
   311  00FE3F  78                 	db	120	;'x'
   312  00FE40  70                 	db	112	;'p'
   313  00FE41  61                 	db	97	;'a'
   314  00FE42  6E                 	db	110	;'n'
   315  00FE43  73                 	db	115	;'s'
   316  00FE44  69                 	db	105	;'i'
   317  00FE45  6F                 	db	111	;'o'
   318  00FE46  6E                 	db	110	;'n'
   319  00FE47  20                 	db	32
   320  00FE48  2D                 	db	45
   321  00FE49  20                 	db	32
   322  00FE4A  41                 	db	65	;'A'
   323  00FE4B  50                 	db	80	;'P'
   324  00FE4C  30                 	db	48	;'0'
   325  00FE4D  30                 	db	48	;'0'
   326  00FE4E  30                 	db	48	;'0'
   327  00FE4F  78                 	db	120	;'x'
   328  00FE50  78                 	db	120	;'x'
   329  00FE51  78                 	db	120	;'x'
   330  00FE52  78                 	db	120	;'x'
   331  00FE53  78                 	db	120	;'x'
   332  00FE54  20                 	db	32
   333  00FE55  56                 	db	86	;'V'
   334  00FE56  30                 	db	48	;'0'
   335  00FE57  2E                 	db	46
   336  00FE58  31                 	db	49	;'1'
   337  00FE59  0D                 	db	13
   338  00FE5A  0A                 	db	10
   339  00FE5B  00                 	db	0
   340  00FE5C                     STR_8:
   341                           
   342                           ; BSR set to: 0
   343  00FE5C  0D                 	db	13
   344  00FE5D  20                 	db	32
   345  00FE5E  20                 	db	32
   346  00FE5F  20                 	db	32
   347  00FE60  30                 	db	48	;'0'
   348  00FE61  78                 	db	120	;'x'
   349  00FE62  31                 	db	49	;'1'
   350  00FE63  30                 	db	48	;'0'
   351  00FE64  20                 	db	32
   352  00FE65  2D                 	db	45
   353  00FE66  20                 	db	32
   354  00FE67  57                 	db	87	;'W'
   355  00FE68  72                 	db	114	;'r'
   356  00FE69  69                 	db	105	;'i'
   357  00FE6A  74                 	db	116	;'t'
   358  00FE6B  65                 	db	101	;'e'
   359  00FE6C  20                 	db	32
   360  00FE6D  4D                 	db	77	;'M'
   361  00FE6E  75                 	db	117	;'u'
   362  00FE6F  6C                 	db	108	;'l'
   363  00FE70  74                 	db	116	;'t'
   364  00FE71  69                 	db	105	;'i'
   365  00FE72  70                 	db	112	;'p'
   366  00FE73  6C                 	db	108	;'l'
   367  00FE74  65                 	db	101	;'e'
   368  00FE75  20                 	db	32
   369  00FE76  52                 	db	82	;'R'
   370  00FE77  65                 	db	101	;'e'
   371  00FE78  67                 	db	103	;'g'
   372  00FE79  69                 	db	105	;'i'
   373  00FE7A  73                 	db	115	;'s'
   374  00FE7B  74                 	db	116	;'t'
   375  00FE7C  65                 	db	101	;'e'
   376  00FE7D  72                 	db	114	;'r'
   377  00FE7E  73                 	db	115	;'s'
   378  00FE7F  20                 	db	32
   379  00FE80  28                 	db	40
   380  00FE81  4D                 	db	77	;'M'
   381  00FE82  61                 	db	97	;'a'
   382  00FE83  78                 	db	120	;'x'
   383  00FE84  20                 	db	32
   384  00FE85  33                 	db	51	;'3'
   385  00FE86  32                 	db	50	;'2'
   386  00FE87  78                 	db	120	;'x'
   387  00FE88  20                 	db	32
   388  00FE89  31                 	db	49	;'1'
   389  00FE8A  36                 	db	54	;'6'
   390  00FE8B  62                 	db	98	;'b'
   391  00FE8C  69                 	db	105	;'i'
   392  00FE8D  74                 	db	116	;'t'
   393  00FE8E  29                 	db	41
   394  00FE8F  0D                 	db	13
   395  00FE90  0A                 	db	10
   396  00FE91  0A                 	db	10
   397  00FE92  00                 	db	0
   398  00FE93                     STR_7:
   399                           
   400                           ; BSR set to: 0
   401  00FE93  0D                 	db	13
   402  00FE94  20                 	db	32
   403  00FE95  20                 	db	32
   404  00FE96  20                 	db	32
   405  00FE97  30                 	db	48	;'0'
   406  00FE98  78                 	db	120	;'x'
   407  00FE99  30                 	db	48	;'0'
   408  00FE9A  33                 	db	51	;'3'
   409  00FE9B  20                 	db	32
   410  00FE9C  2D                 	db	45
   411  00FE9D  20                 	db	32
   412  00FE9E  52                 	db	82	;'R'
   413  00FE9F  65                 	db	101	;'e'
   414  00FEA0  61                 	db	97	;'a'
   415  00FEA1  64                 	db	100	;'d'
   416  00FEA2  20                 	db	32
   417  00FEA3  4D                 	db	77	;'M'
   418  00FEA4  75                 	db	117	;'u'
   419  00FEA5  6C                 	db	108	;'l'
   420  00FEA6  74                 	db	116	;'t'
   421  00FEA7  69                 	db	105	;'i'
   422  00FEA8  70                 	db	112	;'p'
   423  00FEA9  6C                 	db	108	;'l'
   424  00FEAA  65                 	db	101	;'e'
   425  00FEAB  20                 	db	32
   426  00FEAC  52                 	db	82	;'R'
   427  00FEAD  65                 	db	101	;'e'
   428  00FEAE  67                 	db	103	;'g'
   429  00FEAF  69                 	db	105	;'i'
   430  00FEB0  73                 	db	115	;'s'
   431  00FEB1  74                 	db	116	;'t'
   432  00FEB2  65                 	db	101	;'e'
   433  00FEB3  72                 	db	114	;'r'
   434  00FEB4  73                 	db	115	;'s'
   435  00FEB5  20                 	db	32
   436  00FEB6  28                 	db	40
   437  00FEB7  4D                 	db	77	;'M'
   438  00FEB8  61                 	db	97	;'a'
   439  00FEB9  78                 	db	120	;'x'
   440  00FEBA  20                 	db	32
   441  00FEBB  33                 	db	51	;'3'
   442  00FEBC  32                 	db	50	;'2'
   443  00FEBD  78                 	db	120	;'x'
   444  00FEBE  20                 	db	32
   445  00FEBF  31                 	db	49	;'1'
   446  00FEC0  36                 	db	54	;'6'
   447  00FEC1  62                 	db	98	;'b'
   448  00FEC2  69                 	db	105	;'i'
   449  00FEC3  74                 	db	116	;'t'
   450  00FEC4  29                 	db	41
   451  00FEC5  0D                 	db	13
   452  00FEC6  0A                 	db	10
   453  00FEC7  00                 	db	0
   454  00FEC8                     STR_3:
   455                           
   456                           ; BSR set to: 0
   457  00FEC8  0D                 	db	13
   458  00FEC9  43                 	db	67	;'C'
   459  00FECA  6F                 	db	111	;'o'
   460  00FECB  6D                 	db	109	;'m'
   461  00FECC  70                 	db	112	;'p'
   462  00FECD  69                 	db	105	;'i'
   463  00FECE  6C                 	db	108	;'l'
   464  00FECF  65                 	db	101	;'e'
   465  00FED0  64                 	db	100	;'d'
   466  00FED1  20                 	db	32
   467  00FED2  6F                 	db	111	;'o'
   468  00FED3  6E                 	db	110	;'n'
   469  00FED4  20                 	db	32
   470  00FED5  25                 	db	37
   471  00FED6  73                 	db	115	;'s'
   472  00FED7  20                 	db	32
   473  00FED8  61                 	db	97	;'a'
   474  00FED9  74                 	db	116	;'t'
   475  00FEDA  20                 	db	32
   476  00FEDB  25                 	db	37
   477  00FEDC  73                 	db	115	;'s'
   478  00FEDD  20                 	db	32
   479  00FEDE  62                 	db	98	;'b'
   480  00FEDF  79                 	db	121	;'y'
   481  00FEE0  20                 	db	32
   482  00FEE1  58                 	db	88	;'X'
   483  00FEE2  43                 	db	67	;'C'
   484  00FEE3  38                 	db	56	;'8'
   485  00FEE4  20                 	db	32
   486  00FEE5  76                 	db	118	;'v'
   487  00FEE6  65                 	db	101	;'e'
   488  00FEE7  72                 	db	114	;'r'
   489  00FEE8  73                 	db	115	;'s'
   490  00FEE9  69                 	db	105	;'i'
   491  00FEEA  6F                 	db	111	;'o'
   492  00FEEB  6E                 	db	110	;'n'
   493  00FEEC  20                 	db	32
   494  00FEED  25                 	db	37
   495  00FEEE  75                 	db	117	;'u'
   496  00FEEF  0D                 	db	13
   497  00FEF0  0A                 	db	10
   498  00FEF1  0A                 	db	10
   499  00FEF2  00                 	db	0
   500  00FEF3                     STR_13:
   501                           
   502                           ; BSR set to: 0
   503  00FEF3  63                 	db	99	;'c'
   504  00FEF4  72                 	db	114	;'r'
   505  00FEF5  63                 	db	99	;'c'
   506  00FEF6  48                 	db	72	;'H'
   507  00FEF7  69                 	db	105	;'i'
   508  00FEF8  67                 	db	103	;'g'
   509  00FEF9  68                 	db	104	;'h'
   510  00FEFA  3A                 	db	58	;':'
   511  00FEFB  20                 	db	32
   512  00FEFC  30                 	db	48	;'0'
   513  00FEFD  78                 	db	120	;'x'
   514  00FEFE  25                 	db	37
   515  00FEFF  30                 	db	48	;'0'
   516  00FF00  34                 	db	52	;'4'
   517  00FF01  78                 	db	120	;'x'
   518  00FF02  20                 	db	32
   519  00FF03  20                 	db	32
   520  00FF04  63                 	db	99	;'c'
   521  00FF05  72                 	db	114	;'r'
   522  00FF06  63                 	db	99	;'c'
   523  00FF07  4C                 	db	76	;'L'
   524  00FF08  6F                 	db	111	;'o'
   525  00FF09  77                 	db	119	;'w'
   526  00FF0A  3A                 	db	58	;':'
   527  00FF0B  20                 	db	32
   528  00FF0C  30                 	db	48	;'0'
   529  00FF0D  78                 	db	120	;'x'
   530  00FF0E  25                 	db	37
   531  00FF0F  30                 	db	48	;'0'
   532  00FF10  34                 	db	52	;'4'
   533  00FF11  78                 	db	120	;'x'
   534  00FF12  20                 	db	32
   535  00FF13  20                 	db	32
   536  00FF14  0D                 	db	13
   537  00FF15  0A                 	db	10
   538  00FF16  0A                 	db	10
   539  00FF17  00                 	db	0
   540  00FF18                     STR_9:
   541                           
   542                           ; BSR set to: 0
   543  00FF18  0D                 	db	13
   544  00FF19  49                 	db	73	;'I'
   545  00FF1A  6E                 	db	110	;'n'
   546  00FF1B  69                 	db	105	;'i'
   547  00FF1C  74                 	db	116	;'t'
   548  00FF1D  61                 	db	97	;'a'
   549  00FF1E  6C                 	db	108	;'l'
   550  00FF1F  69                 	db	105	;'i'
   551  00FF20  73                 	db	115	;'s'
   552  00FF21  61                 	db	97	;'a'
   553  00FF22  74                 	db	116	;'t'
   554  00FF23  69                 	db	105	;'i'
   555  00FF24  6F                 	db	111	;'o'
   556  00FF25  6E                 	db	110	;'n'
   557  00FF26  20                 	db	32
   558  00FF27  43                 	db	67	;'C'
   559  00FF28  6F                 	db	111	;'o'
   560  00FF29  6D                 	db	109	;'m'
   561  00FF2A  70                 	db	112	;'p'
   562  00FF2B  6C                 	db	108	;'l'
   563  00FF2C  65                 	db	101	;'e'
   564  00FF2D  74                 	db	116	;'t'
   565  00FF2E  65                 	db	101	;'e'
   566  00FF2F  20                 	db	32
   567  00FF30  2D                 	db	45
   568  00FF31  20                 	db	32
   569  00FF32  52                 	db	82	;'R'
   570  00FF33  65                 	db	101	;'e'
   571  00FF34  61                 	db	97	;'a'
   572  00FF35  64                 	db	100	;'d'
   573  00FF36  79                 	db	121	;'y'
   574  00FF37  0D                 	db	13
   575  00FF38  0A                 	db	10
   576  00FF39  0A                 	db	10
   577  00FF3A  00                 	db	0
   578  00FF3B                     STR_10:
   579                           
   580                           ; BSR set to: 0
   581  00FF3B  0D                 	db	13
   582  00FF3C  0A                 	db	10
   583  00FF3D  4D                 	db	77	;'M'
   584  00FF3E  6F                 	db	111	;'o'
   585  00FF3F  64                 	db	100	;'d'
   586  00FF40  62                 	db	98	;'b'
   587  00FF41  75                 	db	117	;'u'
   588  00FF42  73                 	db	115	;'s'
   589  00FF43  20                 	db	32
   590  00FF44  44                 	db	68	;'D'
   591  00FF45  61                 	db	97	;'a'
   592  00FF46  74                 	db	116	;'t'
   593  00FF47  61                 	db	97	;'a'
   594  00FF48  20                 	db	32
   595  00FF49  43                 	db	67	;'C'
   596  00FF4A  61                 	db	97	;'a'
   597  00FF4B  70                 	db	112	;'p'
   598  00FF4C  74                 	db	116	;'t'
   599  00FF4D  75                 	db	117	;'u'
   600  00FF4E  72                 	db	114	;'r'
   601  00FF4F  65                 	db	101	;'e'
   602  00FF50  20                 	db	32
   603  00FF51  43                 	db	67	;'C'
   604  00FF52  6F                 	db	111	;'o'
   605  00FF53  6D                 	db	109	;'m'
   606  00FF54  70                 	db	112	;'p'
   607  00FF55  6C                 	db	108	;'l'
   608  00FF56  65                 	db	101	;'e'
   609  00FF57  74                 	db	116	;'t'
   610  00FF58  65                 	db	101	;'e'
   611  00FF59  3A                 	db	58	;':'
   612  00FF5A  0D                 	db	13
   613  00FF5B  0A                 	db	10
   614  00FF5C  00                 	db	0
   615  00FF5D                     STR_11:
   616                           
   617                           ; BSR set to: 0
   618  00FF5D  20                 	db	32
   619  00FF5E  20                 	db	32
   620  00FF5F  20                 	db	32
   621  00FF60  42                 	db	66	;'B'
   622  00FF61  79                 	db	121	;'y'
   623  00FF62  74                 	db	116	;'t'
   624  00FF63  65                 	db	101	;'e'
   625  00FF64  20                 	db	32
   626  00FF65  4E                 	db	78	;'N'
   627  00FF66  75                 	db	117	;'u'
   628  00FF67  6D                 	db	109	;'m'
   629  00FF68  3A                 	db	58	;':'
   630  00FF69  20                 	db	32
   631  00FF6A  25                 	db	37
   632  00FF6B  69                 	db	105	;'i'
   633  00FF6C  20                 	db	32
   634  00FF6D  56                 	db	86	;'V'
   635  00FF6E  61                 	db	97	;'a'
   636  00FF6F  6C                 	db	108	;'l'
   637  00FF70  3A                 	db	58	;':'
   638  00FF71  20                 	db	32
   639  00FF72  30                 	db	48	;'0'
   640  00FF73  78                 	db	120	;'x'
   641  00FF74  25                 	db	37
   642  00FF75  30                 	db	48	;'0'
   643  00FF76  32                 	db	50	;'2'
   644  00FF77  78                 	db	120	;'x'
   645  00FF78  20                 	db	32
   646  00FF79  0D                 	db	13
   647  00FF7A  0A                 	db	10
   648  00FF7B  00                 	db	0
   649  00FF7C                     STR_6:
   650                           
   651                           ; BSR set to: 0
   652  00FF7C  0D                 	db	13
   653  00FF7D  46                 	db	70	;'F'
   654  00FF7E  75                 	db	117	;'u'
   655  00FF7F  6E                 	db	110	;'n'
   656  00FF80  63                 	db	99	;'c'
   657  00FF81  74                 	db	116	;'t'
   658  00FF82  69                 	db	105	;'i'
   659  00FF83  6F                 	db	111	;'o'
   660  00FF84  6E                 	db	110	;'n'
   661  00FF85  20                 	db	32
   662  00FF86  43                 	db	67	;'C'
   663  00FF87  6F                 	db	111	;'o'
   664  00FF88  64                 	db	100	;'d'
   665  00FF89  65                 	db	101	;'e'
   666  00FF8A  73                 	db	115	;'s'
   667  00FF8B  20                 	db	32
   668  00FF8C  53                 	db	83	;'S'
   669  00FF8D  75                 	db	117	;'u'
   670  00FF8E  70                 	db	112	;'p'
   671  00FF8F  70                 	db	112	;'p'
   672  00FF90  6F                 	db	111	;'o'
   673  00FF91  72                 	db	114	;'r'
   674  00FF92  74                 	db	116	;'t'
   675  00FF93  65                 	db	101	;'e'
   676  00FF94  64                 	db	100	;'d'
   677  00FF95  3A                 	db	58	;':'
   678  00FF96  0D                 	db	13
   679  00FF97  0A                 	db	10
   680  00FF98  00                 	db	0
   681  00FF99                     STR_15:
   682                           
   683                           ; BSR set to: 0
   684  00FF99  43                 	db	67	;'C'
   685  00FF9A  52                 	db	82	;'R'
   686  00FF9B  43                 	db	67	;'C'
   687  00FF9C  20                 	db	32
   688  00FF9D  64                 	db	100	;'d'
   689  00FF9E  69                 	db	105	;'i'
   690  00FF9F  64                 	db	100	;'d'
   691  00FFA0  20                 	db	32
   692  00FFA1  4E                 	db	78	;'N'
   693  00FFA2  4F                 	db	79	;'O'
   694  00FFA3  54                 	db	84	;'T'
   695  00FFA4  20                 	db	32
   696  00FFA5  63                 	db	99	;'c'
   697  00FFA6  68                 	db	104	;'h'
   698  00FFA7  65                 	db	101	;'e'
   699  00FFA8  63                 	db	99	;'c'
   700  00FFA9  6B                 	db	107	;'k'
   701  00FFAA  20                 	db	32
   702  00FFAB  6F                 	db	111	;'o'
   703  00FFAC  75                 	db	117	;'u'
   704  00FFAD  74                 	db	116	;'t'
   705  00FFAE  2E                 	db	46
   706  00FFAF  20                 	db	32
   707  00FFB0  0D                 	db	13
   708  00FFB1  0A                 	db	10
   709  00FFB2  0A                 	db	10
   710  00FFB3  00                 	db	0
   711  00FFB4                     STR_2:
   712                           
   713                           ; BSR set to: 0
   714  00FFB4  0D                 	db	13
   715  00FFB5  43                 	db	67	;'C'
   716  00FFB6  61                 	db	97	;'a'
   717  00FFB7  72                 	db	114	;'r'
   718  00FFB8  64                 	db	100	;'d'
   719  00FFB9  20                 	db	32
   720  00FFBA  53                 	db	83	;'S'
   721  00FFBB  65                 	db	101	;'e'
   722  00FFBC  72                 	db	114	;'r'
   723  00FFBD  20                 	db	32
   724  00FFBE  4E                 	db	78	;'N'
   725  00FFBF  6F                 	db	111	;'o'
   726  00FFC0  2E                 	db	46
   727  00FFC1  20                 	db	32
   728  00FFC2  78                 	db	120	;'x'
   729  00FFC3  78                 	db	120	;'x'
   730  00FFC4  78                 	db	120	;'x'
   731  00FFC5  78                 	db	120	;'x'
   732  00FFC6  78                 	db	120	;'x'
   733  00FFC7  78                 	db	120	;'x'
   734  00FFC8  78                 	db	120	;'x'
   735  00FFC9  20                 	db	32
   736  00FFCA  0D                 	db	13
   737  00FFCB  0A                 	db	10
   738  00FFCC  00                 	db	0
   739  00FFCD                     STR_14:
   740                           
   741                           ; BSR set to: 0
   742  00FFCD  43                 	db	67	;'C'
   743  00FFCE  52                 	db	82	;'R'
   744  00FFCF  43                 	db	67	;'C'
   745  00FFD0  20                 	db	32
   746  00FFD1  43                 	db	67	;'C'
   747  00FFD2  68                 	db	104	;'h'
   748  00FFD3  65                 	db	101	;'e'
   749  00FFD4  63                 	db	99	;'c'
   750  00FFD5  6B                 	db	107	;'k'
   751  00FFD6  65                 	db	101	;'e'
   752  00FFD7  64                 	db	100	;'d'
   753  00FFD8  20                 	db	32
   754  00FFD9  4F                 	db	79	;'O'
   755  00FFDA  75                 	db	117	;'u'
   756  00FFDB  74                 	db	116	;'t'
   757  00FFDC  2E                 	db	46
   758  00FFDD  20                 	db	32
   759  00FFDE  0D                 	db	13
   760  00FFDF  0A                 	db	10
   761  00FFE0  0A                 	db	10
   762  00FFE1  00                 	db	0
   763  00FFE2                     STR_4:
   764                           
   765                           ; BSR set to: 0
   766  00FFE2  4D                 	db	77	;'M'
   767  00FFE3  61                 	db	97	;'a'
   768  00FFE4  72                 	db	114	;'r'
   769  00FFE5  20                 	db	32
   770  00FFE6  20                 	db	32
   771  00FFE7  36                 	db	54	;'6'
   772  00FFE8  20                 	db	32
   773  00FFE9  32                 	db	50	;'2'
   774  00FFEA  30                 	db	48	;'0'
   775  00FFEB  32                 	db	50	;'2'
   776  00FFEC  31                 	db	49	;'1'
   777  00FFED  00                 	db	0
   778  00FFEE                     STR_5:
   779                           
   780                           ; BSR set to: 0
   781  00FFEE  31                 	db	49	;'1'
   782  00FFEF  30                 	db	48	;'0'
   783  00FFF0  3A                 	db	58	;':'
   784  00FFF1  30                 	db	48	;'0'
   785  00FFF2  39                 	db	57	;'9'
   786  00FFF3  3A                 	db	58	;':'
   787  00FFF4  34                 	db	52	;'4'
   788  00FFF5  35                 	db	53	;'5'
   789  00FFF6  00                 	db	0
   790  00FFF7                     
   791                           ; BSR set to: 0
   792  00FFF7  43                 	db	67	;'C'
   793  00FFF8  52                 	db	82	;'R'
   794  00FFF9  43                 	db	67	;'C'
   795  00FFFA  3A                 	db	58	;':'
   796  00FFFB  20                 	db	32
   797  00FFFC  25                 	db	37
   798  00FFFD  69                 	db	105	;'i'
   799  00FFFE  00                 	db	0
   800                           
   801                           ; #config settings
   802  00FFFF  00                 	db	0	; dummy byte at the end
   803  0000                     
   804                           	psect	cinit
   805  002048                     __pcinit:
   806                           	opt callstack 0
   807  002048                     start_initialization:
   808                           	opt callstack 0
   809  002048                     __initialization:
   810                           	opt callstack 0
   811                           
   812                           ; Initialize objects allocated to BANK0 (20 bytes)
   813                           ; load TBLPTR registers with __pidataBANK0
   814  002048  0E16               	movlw	low __pidataBANK0
   815  00204A  6EF6               	movwf	tblptrl,c
   816  00204C  0E25               	movlw	high __pidataBANK0
   817  00204E  6EF7               	movwf	tblptrh,c
   818  002050  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   819  002052  6EF8               	movwf	tblptru,c
   820  002054  EE00  F0E3         	lfsr	0,__pdataBANK0
   821  002058  EE10 F014          	lfsr	1,20
   822  00205C                     copy_data0:
   823  00205C  0009               	tblrd		*+
   824  00205E  CFF5 FFEE          	movff	tablat,postinc0
   825  002062  50E5               	movf	postdec1,w,c
   826  002064  50E1               	movf	fsr1l,w,c
   827  002066  E1FA               	bnz	copy_data0
   828                           
   829                           ; Clear objects allocated to BANK2 (200 bytes)
   830  002068  EE02  F000         	lfsr	0,__pbssBANK2
   831  00206C  0EC8               	movlw	200
   832  00206E                     clear_0:
   833  00206E  6AEE               	clrf	postinc0,c
   834  002070  06E8               	decf	wreg,f,c
   835  002072  E1FD               	bnz	clear_0
   836                           
   837                           ; Clear objects allocated to BANK1 (232 bytes)
   838  002074  EE01  F000         	lfsr	0,__pbssBANK1
   839  002078  0EE8               	movlw	232
   840  00207A                     clear_1:
   841  00207A  6AEE               	clrf	postinc0,c
   842  00207C  06E8               	decf	wreg,f,c
   843  00207E  E1FD               	bnz	clear_1
   844                           
   845                           ; Clear objects allocated to BANK0 (63 bytes)
   846  002080  EE00  F060         	lfsr	0,__pbssBANK0
   847  002084  0E3F               	movlw	63
   848  002086                     clear_2:
   849  002086  6AEE               	clrf	postinc0,c
   850  002088  06E8               	decf	wreg,f,c
   851  00208A  E1FD               	bnz	clear_2
   852                           
   853                           ; Clear objects allocated to COMRAM (4 bytes)
   854  00208C  6A59               	clrf	(__pbssCOMRAM+3)& (0+255),c
   855  00208E  6A58               	clrf	(__pbssCOMRAM+2)& (0+255),c
   856  002090  6A57               	clrf	(__pbssCOMRAM+1)& (0+255),c
   857  002092  6A56               	clrf	__pbssCOMRAM& (0+255),c
   858  002094                     end_of_initialization:
   859                           	opt callstack 0
   860  002094                     __end_of__initialization:
   861                           	opt callstack 0
   862  002094  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   863  002096  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   864  002098  0100               	movlb	0
   865  00209A  EF53  F011         	goto	_main	;jump to C main() function
   866                           
   867                           	psect	bssCOMRAM
   868  000056                     __pbssCOMRAM:
   869                           	opt callstack 0
   870  000056                     _flags:
   871                           	opt callstack 0
   872  000056                     	ds	2
   873  000058                     _eusart1RxHead:
   874                           	opt callstack 0
   875  000058                     	ds	1
   876  000059                     _eusart2RxHead:
   877                           	opt callstack 0
   878  000059                     	ds	1
   879                           
   880                           	psect	bssBANK0
   881  000060                     __pbssBANK0:
   882                           	opt callstack 0
   883  000060                     _eusart1TxBuffer:
   884                           	opt callstack 0
   885  000060                     	ds	16
   886  000070                     _eusart2RxStatusBuffer:
   887                           	opt callstack 0
   888  000070                     	ds	8
   889  000078                     _eusart2RxBuffer:
   890                           	opt callstack 0
   891  000078                     	ds	8
   892  000080                     _eusart2TxBuffer:
   893                           	opt callstack 0
   894  000080                     	ds	8
   895  000088                     _nout:
   896                           	opt callstack 0
   897  000088                     	ds	2
   898  00008A                     _width:
   899                           	opt callstack 0
   900  00008A                     	ds	2
   901  00008C                     _prec:
   902                           	opt callstack 0
   903  00008C                     	ds	2
   904  00008E                     _ByteNum:
   905                           	opt callstack 0
   906  00008E                     	ds	2
   907  000090                     _ModDataCnt:
   908                           	opt callstack 0
   909  000090                     	ds	2
   910  000092                     _rxStatus:
   911                           	opt callstack 0
   912  000092                     	ds	1
   913  000093                     _RXStat:
   914                           	opt callstack 0
   915  000093                     	ds	1
   916  000094                     _Debug:
   917                           	opt callstack 0
   918  000094                     	ds	1
   919  000095                     _eusart1RxLastError:
   920                           	opt callstack 0
   921  000095                     	ds	1
   922  000096                     _eusart1RxCount:
   923                           	opt callstack 0
   924  000096                     	ds	1
   925  000097                     _eusart1RxTail:
   926                           	opt callstack 0
   927  000097                     	ds	1
   928  000098                     _eusart1TxTail:
   929                           	opt callstack 0
   930  000098                     	ds	1
   931  000099                     _eusart1TxHead:
   932                           	opt callstack 0
   933  000099                     	ds	1
   934  00009A                     _eusart2RxLastError:
   935                           	opt callstack 0
   936  00009A                     	ds	1
   937  00009B                     _eusart2RxCount:
   938                           	opt callstack 0
   939  00009B                     	ds	1
   940  00009C                     _eusart2RxTail:
   941                           	opt callstack 0
   942  00009C                     	ds	1
   943  00009D                     _eusart2TxTail:
   944                           	opt callstack 0
   945  00009D                     	ds	1
   946  00009E                     _eusart2TxHead:
   947                           	opt callstack 0
   948  00009E                     	ds	1
   949                           
   950                           	psect	dataBANK0
   951  0000E3                     __pdataBANK0:
   952                           	opt callstack 0
   953  0000E3                     _data1:
   954                           	opt callstack 0
   955  0000E3                     	ds	11
   956  0000EE                     stoa@F1139:
   957                           	opt callstack 0
   958  0000EE                     	ds	7
   959  0000F5                     _ExpectedBytes:
   960                           	opt callstack 0
   961  0000F5                     	ds	2
   962                           
   963                           	psect	bssBANK1
   964  000100                     __pbssBANK1:
   965                           	opt callstack 0
   966  000100                     _ModbusData:
   967                           	opt callstack 0
   968  000100                     	ds	100
   969  000164                     _eusart1RxStatusBuffer:
   970                           	opt callstack 0
   971  000164                     	ds	100
   972  0001C8                     _dbuf:
   973                           	opt callstack 0
   974  0001C8                     	ds	32
   975                           
   976                           	psect	bssBANK2
   977  000200                     __pbssBANK2:
   978                           	opt callstack 0
   979  000200                     _rxData:
   980                           	opt callstack 0
   981  000200                     	ds	100
   982  000264                     _eusart1RxBuffer:
   983                           	opt callstack 0
   984  000264                     	ds	100
   985                           
   986                           	psect	cstackBANK1
   987  0001E8                     __pcstackBANK1:
   988                           	opt callstack 0
   989  0001E8                     checkCRC@crcHigh:
   990                           	opt callstack 0
   991                           
   992                           ; 2 bytes @ 0x0
   993  0001E8                     	ds	2
   994  0001EA                     checkCRC@crcLow:
   995                           	opt callstack 0
   996                           
   997                           ; 2 bytes @ 0x2
   998  0001EA                     	ds	2
   999  0001EC                     checkCRC@j:
  1000                           	opt callstack 0
  1001                           
  1002                           ; 2 bytes @ 0x4
  1003  0001EC                     	ds	2
  1004  0001EE                     checkCRC@crc:
  1005                           	opt callstack 0
  1006                           
  1007                           ; 2 bytes @ 0x6
  1008  0001EE                     	ds	2
  1009  0001F0                     checkCRC@i:
  1010                           	opt callstack 0
  1011                           
  1012                           ; 2 bytes @ 0x8
  1013  0001F0                     	ds	2
  1014                           
  1015                           	psect	cstackBANK0
  1016  00009F                     __pcstackBANK0:
  1017                           	opt callstack 0
  1018  00009F                     vfpfcnvrt@ll:
  1019                           	opt callstack 0
  1020                           
  1021                           ; 8 bytes @ 0x0
  1022  00009F                     	ds	8
  1023  0000A7                     vfpfcnvrt@cp:
  1024                           	opt callstack 0
  1025                           
  1026                           ; 2 bytes @ 0x8
  1027  0000A7                     	ds	2
  1028  0000A9                     vfpfcnvrt@c:
  1029                           	opt callstack 0
  1030                           
  1031                           ; 1 bytes @ 0xA
  1032  0000A9                     	ds	1
  1033  0000AA                     vfpfcnvrt@done:
  1034                           	opt callstack 0
  1035                           
  1036                           ; 2 bytes @ 0xB
  1037  0000AA                     	ds	2
  1038  0000AC                     _vfpfcnvrt$1323:
  1039                           	opt callstack 0
  1040                           
  1041                           ; 2 bytes @ 0xD
  1042  0000AC                     	ds	2
  1043  0000AE                     vfpfcnvrt@llu:
  1044                           	opt callstack 0
  1045                           
  1046                           ; 8 bytes @ 0xF
  1047  0000AE                     	ds	8
  1048  0000B6                     ?_vfprintf:
  1049                           	opt callstack 0
  1050  0000B6                     vfprintf@fp:
  1051                           	opt callstack 0
  1052                           
  1053                           ; 2 bytes @ 0x17
  1054  0000B6                     	ds	2
  1055  0000B8                     vfprintf@fmt:
  1056                           	opt callstack 0
  1057                           
  1058                           ; 2 bytes @ 0x19
  1059  0000B8                     	ds	2
  1060  0000BA                     vfprintf@ap:
  1061                           	opt callstack 0
  1062                           
  1063                           ; 2 bytes @ 0x1B
  1064  0000BA                     	ds	2
  1065  0000BC                     ?_printf:
  1066                           	opt callstack 0
  1067  0000BC                     printf@fmt:
  1068                           	opt callstack 0
  1069                           
  1070                           ; 2 bytes @ 0x1D
  1071  0000BC                     	ds	10
  1072  0000C6                     printf@ap:
  1073                           	opt callstack 0
  1074                           
  1075                           ; 2 bytes @ 0x27
  1076  0000C6                     	ds	2
  1077  0000C8                     ??_checkCRC:
  1078  0000C8                     PrintModbus@i:
  1079                           	opt callstack 0
  1080                           
  1081                           ; 2 bytes @ 0x29
  1082  0000C8                     	ds	5
  1083                           
  1084                           	psect	cstackCOMRAM
  1085  000001                     __pcstackCOMRAM:
  1086                           	opt callstack 0
  1087  000001                     ??_INTERRUPT_InterruptManager:
  1088  000001                     
  1089                           ; 1 bytes @ 0x0
  1090  000001                     	ds	4
  1091  000005                     ??_ClearRxBuff:
  1092  000005                     ??_AddRxBuffToModBus:
  1093  000005                     ?_strlen:
  1094                           	opt callstack 0
  1095  000005                     ?_isupper:
  1096                           	opt callstack 0
  1097  000005                     ?_isalpha:
  1098                           	opt callstack 0
  1099  000005                     ?_isdigit:
  1100                           	opt callstack 0
  1101  000005                     ?_isspace:
  1102                           	opt callstack 0
  1103  000005                     ?_islower:
  1104                           	opt callstack 0
  1105  000005                     ?___wmul:
  1106                           	opt callstack 0
  1107  000005                     ?___aodiv:
  1108                           	opt callstack 0
  1109  000005                     ?___aomod:
  1110                           	opt callstack 0
  1111  000005                     ?___lodiv:
  1112                           	opt callstack 0
  1113  000005                     ?___lomod:
  1114                           	opt callstack 0
  1115  000005                     EUSART2_Write@txData:
  1116                           	opt callstack 0
  1117  000005                     EUSART1_Read@readValue:
  1118                           	opt callstack 0
  1119  000005                     EUSART2_SetFramingErrorHandler@interruptHandler:
  1120                           	opt callstack 0
  1121  000005                     EUSART2_SetOverrunErrorHandler@interruptHandler:
  1122                           	opt callstack 0
  1123  000005                     EUSART2_SetErrorHandler@interruptHandler:
  1124                           	opt callstack 0
  1125  000005                     EUSART2_SetTxInterruptHandler@interruptHandler:
  1126                           	opt callstack 0
  1127  000005                     EUSART2_SetRxInterruptHandler@interruptHandler:
  1128                           	opt callstack 0
  1129  000005                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1130                           	opt callstack 0
  1131  000005                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1132                           	opt callstack 0
  1133  000005                     EUSART1_SetErrorHandler@interruptHandler:
  1134                           	opt callstack 0
  1135  000005                     EUSART1_SetTxInterruptHandler@interruptHandler:
  1136                           	opt callstack 0
  1137  000005                     EUSART1_SetRxInterruptHandler@interruptHandler:
  1138                           	opt callstack 0
  1139  000005                     ClearModbusData@i:
  1140                           	opt callstack 0
  1141  000005                     ___wmul@multiplier:
  1142                           	opt callstack 0
  1143  000005                     isalpha@c:
  1144                           	opt callstack 0
  1145  000005                     isdigit@c:
  1146                           	opt callstack 0
  1147  000005                     isspace@c:
  1148                           	opt callstack 0
  1149  000005                     isupper@c:
  1150                           	opt callstack 0
  1151  000005                     strlen@s:
  1152                           	opt callstack 0
  1153  000005                     islower@c:
  1154                           	opt callstack 0
  1155  000005                     ___aodiv@dividend:
  1156                           	opt callstack 0
  1157  000005                     ___aomod@dividend:
  1158                           	opt callstack 0
  1159  000005                     ___lodiv@dividend:
  1160                           	opt callstack 0
  1161  000005                     ___lomod@dividend:
  1162                           	opt callstack 0
  1163                           
  1164                           ; 8 bytes @ 0x4
  1165  000005                     	ds	1
  1166  000006                     putch@txData:
  1167                           	opt callstack 0
  1168  000006                     ClearRxBuff@i:
  1169                           	opt callstack 0
  1170  000006                     AddRxBuffToModBus@i:
  1171                           	opt callstack 0
  1172                           
  1173                           ; 2 bytes @ 0x5
  1174  000006                     	ds	1
  1175  000007                     ??_isupper:
  1176  000007                     ??_isalpha:
  1177  000007                     ??_isdigit:
  1178  000007                     ??_isspace:
  1179  000007                     ??_islower:
  1180  000007                     ___wmul@multiplicand:
  1181                           	opt callstack 0
  1182  000007                     fputc@c:
  1183                           	opt callstack 0
  1184  000007                     strlen@a:
  1185                           	opt callstack 0
  1186                           
  1187                           ; 2 bytes @ 0x6
  1188  000007                     	ds	2
  1189  000009                     ___wmul@product:
  1190                           	opt callstack 0
  1191  000009                     fputc@fp:
  1192                           	opt callstack 0
  1193                           
  1194                           ; 2 bytes @ 0x8
  1195  000009                     	ds	2
  1196  00000B                     ??_fputc:
  1197  00000B                     ?_toupper:
  1198                           	opt callstack 0
  1199  00000B                     _isspace$1810:
  1200                           	opt callstack 0
  1201  00000B                     toupper@c:
  1202                           	opt callstack 0
  1203                           
  1204                           ; 2 bytes @ 0xA
  1205  00000B                     	ds	1
  1206  00000C                     ?_atoi:
  1207                           	opt callstack 0
  1208  00000C                     atoi@s:
  1209                           	opt callstack 0
  1210                           
  1211                           ; 2 bytes @ 0xB
  1212  00000C                     	ds	1
  1213  00000D                     ??_toupper:
  1214  00000D                     ___aodiv@divisor:
  1215                           	opt callstack 0
  1216  00000D                     ___aomod@divisor:
  1217                           	opt callstack 0
  1218  00000D                     ___lodiv@divisor:
  1219                           	opt callstack 0
  1220  00000D                     ___lomod@divisor:
  1221                           	opt callstack 0
  1222                           
  1223                           ; 8 bytes @ 0xC
  1224  00000D                     	ds	1
  1225  00000E                     ??_atoi:
  1226                           
  1227                           ; 1 bytes @ 0xD
  1228  00000E                     	ds	2
  1229  000010                     ?_stoa:
  1230                           	opt callstack 0
  1231  000010                     stoa@fp:
  1232                           	opt callstack 0
  1233  000010                     fputs@s:
  1234                           	opt callstack 0
  1235                           
  1236                           ; 2 bytes @ 0xF
  1237  000010                     	ds	1
  1238  000011                     _toupper$1874:
  1239                           	opt callstack 0
  1240                           
  1241                           ; 2 bytes @ 0x10
  1242  000011                     	ds	1
  1243  000012                     stoa@s:
  1244                           	opt callstack 0
  1245  000012                     atoi@neg:
  1246                           	opt callstack 0
  1247  000012                     fputs@fp:
  1248                           	opt callstack 0
  1249                           
  1250                           ; 2 bytes @ 0x11
  1251  000012                     	ds	2
  1252  000014                     ??_stoa:
  1253  000014                     fputs@c:
  1254                           	opt callstack 0
  1255  000014                     _atoi$1783:
  1256                           	opt callstack 0
  1257                           
  1258                           ; 2 bytes @ 0x13
  1259  000014                     	ds	1
  1260  000015                     ___aodiv@counter:
  1261                           	opt callstack 0
  1262  000015                     ___aomod@counter:
  1263                           	opt callstack 0
  1264  000015                     ___lomod@counter:
  1265                           	opt callstack 0
  1266  000015                     fputs@i:
  1267                           	opt callstack 0
  1268  000015                     stoa@nuls:
  1269                           	opt callstack 0
  1270  000015                     ___lodiv@quotient:
  1271                           	opt callstack 0
  1272                           
  1273                           ; 8 bytes @ 0x14
  1274  000015                     	ds	1
  1275  000016                     ___aodiv@sign:
  1276                           	opt callstack 0
  1277  000016                     ___aomod@sign:
  1278                           	opt callstack 0
  1279  000016                     _atoi$1785:
  1280                           	opt callstack 0
  1281                           
  1282                           ; 2 bytes @ 0x15
  1283  000016                     	ds	1
  1284  000017                     ?_abs:
  1285                           	opt callstack 0
  1286  000017                     ?_pad:
  1287                           	opt callstack 0
  1288  000017                     pad@fp:
  1289                           	opt callstack 0
  1290  000017                     abs@a:
  1291                           	opt callstack 0
  1292  000017                     ___aodiv@quotient:
  1293                           	opt callstack 0
  1294                           
  1295                           ; 8 bytes @ 0x16
  1296  000017                     	ds	1
  1297  000018                     _atoi$1784:
  1298                           	opt callstack 0
  1299                           
  1300                           ; 1 bytes @ 0x17
  1301  000018                     	ds	1
  1302  000019                     ??_abs:
  1303  000019                     pad@buf:
  1304                           	opt callstack 0
  1305  000019                     atoi@n:
  1306                           	opt callstack 0
  1307                           
  1308                           ; 2 bytes @ 0x18
  1309  000019                     	ds	2
  1310  00001B                     pad@p:
  1311                           	opt callstack 0
  1312                           
  1313                           ; 2 bytes @ 0x1A
  1314  00001B                     	ds	1
  1315  00001C                     stoa@i:
  1316                           	opt callstack 0
  1317                           
  1318                           ; 2 bytes @ 0x1B
  1319  00001C                     	ds	1
  1320  00001D                     ??_pad:
  1321  00001D                     ___lodiv@counter:
  1322                           	opt callstack 0
  1323                           
  1324                           ; 1 bytes @ 0x1C
  1325  00001D                     	ds	1
  1326  00001E                     pad@i:
  1327                           	opt callstack 0
  1328  00001E                     stoa@w:
  1329                           	opt callstack 0
  1330                           
  1331                           ; 2 bytes @ 0x1D
  1332  00001E                     	ds	2
  1333  000020                     pad@w:
  1334                           	opt callstack 0
  1335  000020                     stoa@cp:
  1336                           	opt callstack 0
  1337                           
  1338                           ; 2 bytes @ 0x1F
  1339  000020                     	ds	2
  1340  000022                     ?_dtoa:
  1341                           	opt callstack 0
  1342  000022                     ?_utoa:
  1343                           	opt callstack 0
  1344  000022                     ?_xtoa:
  1345                           	opt callstack 0
  1346  000022                     dtoa@fp:
  1347                           	opt callstack 0
  1348  000022                     stoa@p:
  1349                           	opt callstack 0
  1350  000022                     utoa@fp:
  1351                           	opt callstack 0
  1352  000022                     xtoa@fp:
  1353                           	opt callstack 0
  1354                           
  1355                           ; 2 bytes @ 0x21
  1356  000022                     	ds	2
  1357  000024                     stoa@l:
  1358                           	opt callstack 0
  1359  000024                     dtoa@d:
  1360                           	opt callstack 0
  1361  000024                     utoa@d:
  1362                           	opt callstack 0
  1363  000024                     xtoa@d:
  1364                           	opt callstack 0
  1365                           
  1366                           ; 8 bytes @ 0x23
  1367  000024                     	ds	8
  1368  00002C                     ??_dtoa:
  1369  00002C                     ??_utoa:
  1370  00002C                     xtoa@x:
  1371                           	opt callstack 0
  1372                           
  1373                           ; 1 bytes @ 0x2B
  1374  00002C                     	ds	1
  1375  00002D                     ??_xtoa:
  1376                           
  1377                           ; 1 bytes @ 0x2C
  1378  00002D                     	ds	7
  1379  000034                     _dtoa$1279:
  1380                           	opt callstack 0
  1381  000034                     utoa@p:
  1382                           	opt callstack 0
  1383                           
  1384                           ; 2 bytes @ 0x33
  1385  000034                     	ds	1
  1386  000035                     _xtoa$1308:
  1387                           	opt callstack 0
  1388                           
  1389                           ; 2 bytes @ 0x34
  1390  000035                     	ds	1
  1391  000036                     dtoa@p:
  1392                           	opt callstack 0
  1393  000036                     utoa@w:
  1394                           	opt callstack 0
  1395                           
  1396                           ; 2 bytes @ 0x35
  1397  000036                     	ds	1
  1398  000037                     _xtoa$1309:
  1399                           	opt callstack 0
  1400                           
  1401                           ; 2 bytes @ 0x36
  1402  000037                     	ds	1
  1403  000038                     dtoa@w:
  1404                           	opt callstack 0
  1405  000038                     utoa@n:
  1406                           	opt callstack 0
  1407                           
  1408                           ; 8 bytes @ 0x37
  1409  000038                     	ds	1
  1410  000039                     xtoa@p:
  1411                           	opt callstack 0
  1412                           
  1413                           ; 2 bytes @ 0x38
  1414  000039                     	ds	1
  1415  00003A                     dtoa@s:
  1416                           	opt callstack 0
  1417                           
  1418                           ; 2 bytes @ 0x39
  1419  00003A                     	ds	1
  1420  00003B                     xtoa@w:
  1421                           	opt callstack 0
  1422                           
  1423                           ; 2 bytes @ 0x3A
  1424  00003B                     	ds	1
  1425  00003C                     dtoa@n:
  1426                           	opt callstack 0
  1427                           
  1428                           ; 8 bytes @ 0x3B
  1429  00003C                     	ds	1
  1430  00003D                     xtoa@n:
  1431                           	opt callstack 0
  1432                           
  1433                           ; 8 bytes @ 0x3C
  1434  00003D                     	ds	3
  1435  000040                     utoa@i:
  1436                           	opt callstack 0
  1437                           
  1438                           ; 2 bytes @ 0x3F
  1439  000040                     	ds	4
  1440  000044                     dtoa@i:
  1441                           	opt callstack 0
  1442                           
  1443                           ; 2 bytes @ 0x43
  1444  000044                     	ds	1
  1445  000045                     xtoa@i:
  1446                           	opt callstack 0
  1447                           
  1448                           ; 2 bytes @ 0x44
  1449  000045                     	ds	2
  1450  000047                     xtoa@c:
  1451                           	opt callstack 0
  1452                           
  1453                           ; 2 bytes @ 0x46
  1454  000047                     	ds	2
  1455  000049                     ?_vfpfcnvrt:
  1456                           	opt callstack 0
  1457  000049                     vfpfcnvrt@fp:
  1458                           	opt callstack 0
  1459                           
  1460                           ; 2 bytes @ 0x48
  1461  000049                     	ds	2
  1462  00004B                     vfpfcnvrt@fmt:
  1463                           	opt callstack 0
  1464                           
  1465                           ; 2 bytes @ 0x4A
  1466  00004B                     	ds	2
  1467  00004D                     vfpfcnvrt@ap:
  1468                           	opt callstack 0
  1469                           
  1470                           ; 2 bytes @ 0x4C
  1471  00004D                     	ds	2
  1472  00004F                     ??_vfpfcnvrt:
  1473                           
  1474                           ; 1 bytes @ 0x4E
  1475  00004F                     	ds	4
  1476  000053                     vfprintf@cfmt:
  1477                           	opt callstack 0
  1478                           
  1479                           ; 2 bytes @ 0x52
  1480  000053                     	ds	2
  1481  000055                     ??_ModbusRx:
  1482  000055                     ??_PrintModbus:
  1483                           
  1484                           ; 1 bytes @ 0x54
  1485  000055                     	ds	1
  1486  000056                     
  1487                           ; 1 bytes @ 0x55
  1488 ;;
  1489 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1490 ;;
  1491 ;; *************** function _main *****************
  1492 ;; Defined at:
  1493 ;;		line 59 in file "main.c"
  1494 ;; Parameters:    Size  Location     Type
  1495 ;;		None
  1496 ;; Auto vars:     Size  Location     Type
  1497 ;;  RXStat          1    0        _Bool 
  1498 ;; Return value:  Size  Location     Type
  1499 ;;                  1    wreg      void 
  1500 ;; Registers used:
  1501 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1502 ;; Tracked objects:
  1503 ;;		On entry : 0/0
  1504 ;;		On exit  : 0/0
  1505 ;;		Unchanged: 0/0
  1506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1508 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1510 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1511 ;;Total ram usage:        1 bytes
  1512 ;; Hardware stack levels required when called:   15
  1513 ;; This function calls:
  1514 ;;		_ClearModbusData
  1515 ;;		_ClearRxBuff
  1516 ;;		_InitialiseString
  1517 ;;		_ModbusRx
  1518 ;;		_PrintModbus
  1519 ;;		_RXMode
  1520 ;;		_SYSTEM_Initialize
  1521 ;; This function is called by:
  1522 ;;		Startup code after reset
  1523 ;; This function uses a non-reentrant model
  1524 ;;
  1525                           
  1526                           	psect	text0
  1527  0022A6                     __ptext0:
  1528                           	opt callstack 0
  1529  0022A6                     _main:
  1530                           	opt callstack 16
  1531  0022A6                     
  1532                           ;main.c: 62:     SYSTEM_Initialize();
  1533  0022A6  EC66  F012         	call	_SYSTEM_Initialize	;wreg free
  1534  0022AA                     
  1535                           ;main.c: 69:     (INTCONbits.GIE = 1);
  1536  0022AA  8EF2               	bsf	242,7,c	;volatile
  1537  0022AC                     
  1538                           ;main.c: 75:     (INTCONbits.PEIE = 1);
  1539  0022AC  8CF2               	bsf	242,6,c	;volatile
  1540  0022AE  9883               	bcf	131,4,c	;volatile
  1541  0022B0  9A83               	bcf	131,5,c	;volatile
  1542  0022B2  9C83               	bcf	131,6,c	;volatile
  1543  0022B4  9E83               	bcf	131,7,c	;volatile
  1544  0022B6                     
  1545                           ;main.c: 85:     InitialiseString();
  1546  0022B6  ECF4  F00E         	call	_InitialiseString	;wreg free
  1547  0022BA                     
  1548                           ;main.c: 88:     RXMode();
  1549  0022BA  ECD0  F012         	call	_RXMode	;wreg free
  1550  0022BE                     
  1551                           ;main.c: 89:     ClearRxBuff();
  1552  0022BE  ECC6  F010         	call	_ClearRxBuff	;wreg free
  1553  0022C2                     l5106:
  1554                           
  1555                           ;main.c: 94:     {;main.c: 95:         if(ModbusRx() == 1){
  1556  0022C2  EC01  F00B         	call	_ModbusRx	;wreg free
  1557  0022C6  06E8               	decf	wreg,f,c
  1558  0022C8  A4D8               	btfss	status,2,c
  1559  0022CA  EF69  F011         	goto	u5201
  1560  0022CE  EF6B  F011         	goto	u5200
  1561  0022D2                     u5201:
  1562  0022D2  EF61  F011         	goto	l5106
  1563  0022D6                     u5200:
  1564  0022D6                     
  1565                           ;main.c: 97:             PrintModbus();
  1566  0022D6  EC32  F00F         	call	_PrintModbus	;wreg free
  1567  0022DA                     
  1568                           ;main.c: 100:             ClearModbusData();
  1569  0022DA  ECA0  F010         	call	_ClearModbusData	;wreg free
  1570  0022DE  EF61  F011         	goto	l5106
  1571  0022E2  EF93  F000         	goto	start
  1572  0022E6                     __end_of_main:
  1573                           	opt callstack 0
  1574                           
  1575 ;; *************** function _SYSTEM_Initialize *****************
  1576 ;; Defined at:
  1577 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1578 ;; Parameters:    Size  Location     Type
  1579 ;;		None
  1580 ;; Auto vars:     Size  Location     Type
  1581 ;;		None
  1582 ;; Return value:  Size  Location     Type
  1583 ;;                  1    wreg      void 
  1584 ;; Registers used:
  1585 ;;		wreg, status,2, status,0, cstack
  1586 ;; Tracked objects:
  1587 ;;		On entry : 0/0
  1588 ;;		On exit  : 0/0
  1589 ;;		Unchanged: 0/0
  1590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1595 ;;Total ram usage:        0 bytes
  1596 ;; Hardware stack levels used:    1
  1597 ;; Hardware stack levels required when called:    6
  1598 ;; This function calls:
  1599 ;;		_EUSART1_Initialize
  1600 ;;		_EUSART2_Initialize
  1601 ;;		_INTERRUPT_Initialize
  1602 ;;		_OSCILLATOR_Initialize
  1603 ;;		_PIN_MANAGER_Initialize
  1604 ;;		_PMD_Initialize
  1605 ;; This function is called by:
  1606 ;;		_main
  1607 ;; This function uses a non-reentrant model
  1608 ;;
  1609                           
  1610                           	psect	text1
  1611  0024CC                     __ptext1:
  1612                           	opt callstack 0
  1613  0024CC                     _SYSTEM_Initialize:
  1614                           	opt callstack 24
  1615  0024CC                     
  1616                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  1617  0024CC  ECDC  F012         	call	_INTERRUPT_Initialize	;wreg free
  1618  0024D0                     
  1619                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  1620  0024D0  EC58  F012         	call	_PMD_Initialize	;wreg free
  1621  0024D4                     
  1622                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  1623  0024D4  EC30  F00E         	call	_PIN_MANAGER_Initialize	;wreg free
  1624  0024D8                     
  1625                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  1626  0024D8  EC73  F012         	call	_OSCILLATOR_Initialize	;wreg free
  1627  0024DC                     
  1628                           ;mcc_generated_files/mcc.c: 56:     EUSART1_Initialize();
  1629  0024DC  ECB6  F00E         	call	_EUSART1_Initialize	;wreg free
  1630  0024E0                     
  1631                           ;mcc_generated_files/mcc.c: 57:     EUSART2_Initialize();
  1632  0024E0  EC77  F00E         	call	_EUSART2_Initialize	;wreg free
  1633  0024E4  0012               	return		;funcret
  1634  0024E6                     __end_of_SYSTEM_Initialize:
  1635                           	opt callstack 0
  1636                           
  1637 ;; *************** function _PMD_Initialize *****************
  1638 ;; Defined at:
  1639 ;;		line 74 in file "mcc_generated_files/mcc.c"
  1640 ;; Parameters:    Size  Location     Type
  1641 ;;		None
  1642 ;; Auto vars:     Size  Location     Type
  1643 ;;		None
  1644 ;; Return value:  Size  Location     Type
  1645 ;;                  1    wreg      void 
  1646 ;; Registers used:
  1647 ;;		wreg, status,2
  1648 ;; Tracked objects:
  1649 ;;		On entry : 0/0
  1650 ;;		On exit  : 0/0
  1651 ;;		Unchanged: 0/0
  1652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1657 ;;Total ram usage:        0 bytes
  1658 ;; Hardware stack levels used:    1
  1659 ;; Hardware stack levels required when called:    4
  1660 ;; This function calls:
  1661 ;;		Nothing
  1662 ;; This function is called by:
  1663 ;;		_SYSTEM_Initialize
  1664 ;; This function uses a non-reentrant model
  1665 ;;
  1666                           
  1667                           	psect	text2
  1668  0024B0                     __ptext2:
  1669                           	opt callstack 0
  1670  0024B0                     _PMD_Initialize:
  1671                           	opt callstack 25
  1672  0024B0                     
  1673                           ;mcc_generated_files/mcc.c: 77:     PMD0 = 0x00;
  1674  0024B0  0E00               	movlw	0
  1675  0024B2  010E               	movlb	14	; () banked
  1676  0024B4  6FE1               	movwf	225,b	;volatile
  1677                           
  1678                           ;mcc_generated_files/mcc.c: 79:     PMD1 = 0x00;
  1679  0024B6  0E00               	movlw	0
  1680  0024B8  6FE2               	movwf	226,b	;volatile
  1681                           
  1682                           ;mcc_generated_files/mcc.c: 81:     PMD2 = 0x00;
  1683  0024BA  0E00               	movlw	0
  1684  0024BC  6FE3               	movwf	227,b	;volatile
  1685                           
  1686                           ;mcc_generated_files/mcc.c: 83:     PMD3 = 0x00;
  1687  0024BE  0E00               	movlw	0
  1688  0024C0  6FE4               	movwf	228,b	;volatile
  1689                           
  1690                           ;mcc_generated_files/mcc.c: 85:     PMD4 = 0x00;
  1691  0024C2  0E00               	movlw	0
  1692  0024C4  6FE5               	movwf	229,b	;volatile
  1693                           
  1694                           ;mcc_generated_files/mcc.c: 87:     PMD5 = 0x00;
  1695  0024C6  0E00               	movlw	0
  1696  0024C8  6FE6               	movwf	230,b	;volatile
  1697  0024CA                     
  1698                           ; BSR set to: 14
  1699  0024CA  0012               	return		;funcret
  1700  0024CC                     __end_of_PMD_Initialize:
  1701                           	opt callstack 0
  1702                           
  1703 ;; *************** function _PIN_MANAGER_Initialize *****************
  1704 ;; Defined at:
  1705 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1706 ;; Parameters:    Size  Location     Type
  1707 ;;		None
  1708 ;; Auto vars:     Size  Location     Type
  1709 ;;		None
  1710 ;; Return value:  Size  Location     Type
  1711 ;;                  1    wreg      void 
  1712 ;; Registers used:
  1713 ;;		wreg, status,2
  1714 ;; Tracked objects:
  1715 ;;		On entry : 0/0
  1716 ;;		On exit  : 0/0
  1717 ;;		Unchanged: 0/0
  1718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1723 ;;Total ram usage:        0 bytes
  1724 ;; Hardware stack levels used:    1
  1725 ;; Hardware stack levels required when called:    4
  1726 ;; This function calls:
  1727 ;;		Nothing
  1728 ;; This function is called by:
  1729 ;;		_SYSTEM_Initialize
  1730 ;; This function uses a non-reentrant model
  1731 ;;
  1732                           
  1733                           	psect	text3
  1734  001C60                     __ptext3:
  1735                           	opt callstack 0
  1736  001C60                     _PIN_MANAGER_Initialize:
  1737                           	opt callstack 25
  1738  001C60                     
  1739                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  1740  001C60  0E00               	movlw	0
  1741  001C62  6E87               	movwf	135,c	;volatile
  1742                           
  1743                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  1744  001C64  0E00               	movlw	0
  1745  001C66  6E86               	movwf	134,c	;volatile
  1746                           
  1747                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  1748  001C68  0E00               	movlw	0
  1749  001C6A  6E83               	movwf	131,c	;volatile
  1750                           
  1751                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  1752  001C6C  0E00               	movlw	0
  1753  001C6E  6E84               	movwf	132,c	;volatile
  1754                           
  1755                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  1756  001C70  0E00               	movlw	0
  1757  001C72  6E85               	movwf	133,c	;volatile
  1758                           
  1759                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  1760  001C74  0E07               	movlw	7
  1761  001C76  6E8C               	movwf	140,c	;volatile
  1762                           
  1763                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x07;
  1764  001C78  0E07               	movlw	7
  1765  001C7A  6E88               	movwf	136,c	;volatile
  1766                           
  1767                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xBF;
  1768  001C7C  0EBF               	movlw	191
  1769  001C7E  6E89               	movwf	137,c	;volatile
  1770                           
  1771                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  1772  001C80  0EBF               	movlw	191
  1773  001C82  6E8A               	movwf	138,c	;volatile
  1774                           
  1775                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFE;
  1776  001C84  0EFE               	movlw	254
  1777  001C86  6E8B               	movwf	139,c	;volatile
  1778  001C88                     
  1779                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
  1780  001C88  010F               	movlb	15	; () banked
  1781  001C8A  6926               	setf	38,b	;volatile
  1782                           
  1783                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x3B;
  1784  001C8C  0E3B               	movlw	59
  1785  001C8E  6F21               	movwf	33,b	;volatile
  1786                           
  1787                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x37;
  1788  001C90  0E37               	movlw	55
  1789  001C92  6F19               	movwf	25,b	;volatile
  1790                           
  1791                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  1792  001C94  0E07               	movlw	7
  1793  001C96  6F2E               	movwf	46,b	;volatile
  1794  001C98                     
  1795                           ; BSR set to: 15
  1796                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
  1797  001C98  6911               	setf	17,b	;volatile
  1798                           
  1799                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  1800  001C9A  0E00               	movlw	0
  1801  001C9C  6F25               	movwf	37,b	;volatile
  1802                           
  1803                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  1804  001C9E  0E00               	movlw	0
  1805  001CA0  6F2D               	movwf	45,b	;volatile
  1806                           
  1807                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  1808  001CA2  0E00               	movlw	0
  1809  001CA4  6F18               	movwf	24,b	;volatile
  1810                           
  1811                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  1812  001CA6  0E00               	movlw	0
  1813  001CA8  6F10               	movwf	16,b	;volatile
  1814                           
  1815                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  1816  001CAA  0E00               	movlw	0
  1817  001CAC  6F20               	movwf	32,b	;volatile
  1818                           
  1819                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
  1820  001CAE  0E00               	movlw	0
  1821  001CB0  6F2C               	movwf	44,b	;volatile
  1822                           
  1823                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
  1824  001CB2  0E00               	movlw	0
  1825  001CB4  6F0F               	movwf	15,b	;volatile
  1826                           
  1827                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
  1828  001CB6  0E00               	movlw	0
  1829  001CB8  6F17               	movwf	23,b	;volatile
  1830                           
  1831                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
  1832  001CBA  0E00               	movlw	0
  1833  001CBC  6F1F               	movwf	31,b	;volatile
  1834                           
  1835                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
  1836  001CBE  0E00               	movlw	0
  1837  001CC0  6F24               	movwf	36,b	;volatile
  1838  001CC2                     
  1839                           ; BSR set to: 15
  1840                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
  1841  001CC2  690E               	setf	14,b	;volatile
  1842  001CC4                     
  1843                           ; BSR set to: 15
  1844                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
  1845  001CC4  6916               	setf	22,b	;volatile
  1846  001CC6                     
  1847                           ; BSR set to: 15
  1848                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
  1849  001CC6  691E               	setf	30,b	;volatile
  1850  001CC8                     
  1851                           ; BSR set to: 15
  1852                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
  1853  001CC8  6923               	setf	35,b	;volatile
  1854                           
  1855                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
  1856  001CCA  0E07               	movlw	7
  1857  001CCC  6F2B               	movwf	43,b	;volatile
  1858  001CCE                     
  1859                           ; BSR set to: 15
  1860                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
  1861  001CCE  690D               	setf	13,b	;volatile
  1862  001CD0                     
  1863                           ; BSR set to: 15
  1864                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
  1865  001CD0  6915               	setf	21,b	;volatile
  1866  001CD2                     
  1867                           ; BSR set to: 15
  1868                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
  1869  001CD2  691D               	setf	29,b	;volatile
  1870  001CD4                     
  1871                           ; BSR set to: 15
  1872                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
  1873  001CD4  6922               	setf	34,b	;volatile
  1874                           
  1875                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x0F;
  1876  001CD6  0E0F               	movlw	15
  1877  001CD8  6F2A               	movwf	42,b	;volatile
  1878                           
  1879                           ;mcc_generated_files/pin_manager.c: 127:     RX1PPS = 0x17;
  1880  001CDA  0E17               	movlw	23
  1881  001CDC  010E               	movlb	14	; () banked
  1882  001CDE  6FB5               	movwf	181,b	;volatile
  1883                           
  1884                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x0B;
  1885  001CE0  0E0B               	movlw	11
  1886  001CE2  6FF5               	movwf	245,b	;volatile
  1887                           
  1888                           ;mcc_generated_files/pin_manager.c: 129:     RC6PPS = 0x09;
  1889  001CE4  0E09               	movlw	9
  1890  001CE6  6FFD               	movwf	253,b	;volatile
  1891                           
  1892                           ;mcc_generated_files/pin_manager.c: 130:     RX2PPS = 0x0F;
  1893  001CE8  0E0F               	movlw	15
  1894  001CEA  6F8D               	movwf	141,b	;volatile
  1895  001CEC                     
  1896                           ; BSR set to: 14
  1897  001CEC  0012               	return		;funcret
  1898  001CEE                     __end_of_PIN_MANAGER_Initialize:
  1899                           	opt callstack 0
  1900                           
  1901 ;; *************** function _OSCILLATOR_Initialize *****************
  1902 ;; Defined at:
  1903 ;;		line 60 in file "mcc_generated_files/mcc.c"
  1904 ;; Parameters:    Size  Location     Type
  1905 ;;		None
  1906 ;; Auto vars:     Size  Location     Type
  1907 ;;		None
  1908 ;; Return value:  Size  Location     Type
  1909 ;;                  1    wreg      void 
  1910 ;; Registers used:
  1911 ;;		wreg, status,2
  1912 ;; Tracked objects:
  1913 ;;		On entry : 0/0
  1914 ;;		On exit  : 0/0
  1915 ;;		Unchanged: 0/0
  1916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1921 ;;Total ram usage:        0 bytes
  1922 ;; Hardware stack levels used:    1
  1923 ;; Hardware stack levels required when called:    4
  1924 ;; This function calls:
  1925 ;;		Nothing
  1926 ;; This function is called by:
  1927 ;;		_SYSTEM_Initialize
  1928 ;; This function uses a non-reentrant model
  1929 ;;
  1930                           
  1931                           	psect	text4
  1932  0024E6                     __ptext4:
  1933                           	opt callstack 0
  1934  0024E6                     _OSCILLATOR_Initialize:
  1935                           	opt callstack 25
  1936  0024E6                     
  1937                           ;mcc_generated_files/mcc.c: 63:     OSCCON1 = 0x60;
  1938  0024E6  0E60               	movlw	96
  1939  0024E8  010E               	movlb	14	; () banked
  1940  0024EA  6FD8               	movwf	216,b	;volatile
  1941                           
  1942                           ;mcc_generated_files/mcc.c: 65:     OSCCON3 = 0x00;
  1943  0024EC  0E00               	movlw	0
  1944  0024EE  6FDA               	movwf	218,b	;volatile
  1945                           
  1946                           ;mcc_generated_files/mcc.c: 67:     OSCEN = 0x00;
  1947  0024F0  0E00               	movlw	0
  1948  0024F2  6FDC               	movwf	220,b	;volatile
  1949                           
  1950                           ;mcc_generated_files/mcc.c: 69:     OSCFRQ = 0x06;
  1951  0024F4  0E06               	movlw	6
  1952  0024F6  6FDE               	movwf	222,b	;volatile
  1953                           
  1954                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  1955  0024F8  0E00               	movlw	0
  1956  0024FA  6FDD               	movwf	221,b	;volatile
  1957  0024FC                     
  1958                           ; BSR set to: 14
  1959  0024FC  0012               	return		;funcret
  1960  0024FE                     __end_of_OSCILLATOR_Initialize:
  1961                           	opt callstack 0
  1962                           
  1963 ;; *************** function _INTERRUPT_Initialize *****************
  1964 ;; Defined at:
  1965 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1966 ;; Parameters:    Size  Location     Type
  1967 ;;		None
  1968 ;; Auto vars:     Size  Location     Type
  1969 ;;		None
  1970 ;; Return value:  Size  Location     Type
  1971 ;;                  1    wreg      void 
  1972 ;; Registers used:
  1973 ;;		None
  1974 ;; Tracked objects:
  1975 ;;		On entry : 0/0
  1976 ;;		On exit  : 0/0
  1977 ;;		Unchanged: 0/0
  1978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1983 ;;Total ram usage:        0 bytes
  1984 ;; Hardware stack levels used:    1
  1985 ;; Hardware stack levels required when called:    4
  1986 ;; This function calls:
  1987 ;;		Nothing
  1988 ;; This function is called by:
  1989 ;;		_SYSTEM_Initialize
  1990 ;; This function uses a non-reentrant model
  1991 ;;
  1992                           
  1993                           	psect	text5
  1994  0025B8                     __ptext5:
  1995                           	opt callstack 0
  1996  0025B8                     _INTERRUPT_Initialize:
  1997                           	opt callstack 25
  1998  0025B8                     
  1999                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
  2000  0025B8  9AF2               	bcf	242,5,c	;volatile
  2001  0025BA  0012               	return		;funcret
  2002  0025BC                     __end_of_INTERRUPT_Initialize:
  2003                           	opt callstack 0
  2004                           
  2005 ;; *************** function _EUSART2_Initialize *****************
  2006 ;; Defined at:
  2007 ;;		line 88 in file "mcc_generated_files/eusart2.c"
  2008 ;; Parameters:    Size  Location     Type
  2009 ;;		None
  2010 ;; Auto vars:     Size  Location     Type
  2011 ;;		None
  2012 ;; Return value:  Size  Location     Type
  2013 ;;                  1    wreg      void 
  2014 ;; Registers used:
  2015 ;;		wreg, status,2, status,0, cstack
  2016 ;; Tracked objects:
  2017 ;;		On entry : 0/0
  2018 ;;		On exit  : 0/0
  2019 ;;		Unchanged: 0/0
  2020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2025 ;;Total ram usage:        0 bytes
  2026 ;; Hardware stack levels used:    1
  2027 ;; Hardware stack levels required when called:    5
  2028 ;; This function calls:
  2029 ;;		_EUSART2_SetErrorHandler
  2030 ;;		_EUSART2_SetFramingErrorHandler
  2031 ;;		_EUSART2_SetOverrunErrorHandler
  2032 ;;		_EUSART2_SetRxInterruptHandler
  2033 ;;		_EUSART2_SetTxInterruptHandler
  2034 ;; This function is called by:
  2035 ;;		_SYSTEM_Initialize
  2036 ;; This function uses a non-reentrant model
  2037 ;;
  2038                           
  2039                           	psect	text6
  2040  001CEE                     __ptext6:
  2041                           	opt callstack 0
  2042  001CEE                     _EUSART2_Initialize:
  2043                           	opt callstack 24
  2044  001CEE                     
  2045                           ;mcc_generated_files/eusart2.c: 91:     PIE3bits.RC2IE = 0;
  2046  001CEE  010E               	movlb	14	; () banked
  2047  001CF0  9FC5               	bcf	197,7,b	;volatile
  2048  001CF2                     
  2049                           ; BSR set to: 14
  2050                           ;mcc_generated_files/eusart2.c: 92:     EUSART2_SetRxInterruptHandler(EUSART2_Receive_IS
      +                          R);
  2051  001CF2  0EAA               	movlw	low _EUSART2_Receive_ISR
  2052  001CF4  6E05               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler^0,c
  2053  001CF6  0E19               	movlw	high _EUSART2_Receive_ISR
  2054  001CF8  6E06               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)^0,c
  2055  001CFA  EC9A  F012         	call	_EUSART2_SetRxInterruptHandler	;wreg free
  2056  001CFE                     
  2057                           ;mcc_generated_files/eusart2.c: 93:     PIE3bits.TX2IE = 0;
  2058  001CFE  010E               	movlb	14	; () banked
  2059  001D00  9DC5               	bcf	197,6,b	;volatile
  2060                           
  2061                           ;mcc_generated_files/eusart2.c: 94:     EUSART2_SetTxInterruptHandler(EUSART2_Transmit_I
      +                          SR);
  2062  001D02  0ED6               	movlw	low _EUSART2_Transmit_ISR
  2063  001D04  6E05               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler^0,c
  2064  001D06  0E21               	movlw	high _EUSART2_Transmit_ISR
  2065  001D08  6E06               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)^0,c
  2066  001D0A  EC95  F012         	call	_EUSART2_SetTxInterruptHandler	;wreg free
  2067  001D0E                     
  2068                           ;mcc_generated_files/eusart2.c: 98:     BAUD2CON = 0x08;
  2069  001D0E  0E08               	movlw	8
  2070  001D10  010E               	movlb	14	; () banked
  2071  001D12  6F9F               	movwf	159,b	;volatile
  2072  001D14                     
  2073                           ; BSR set to: 14
  2074                           ;mcc_generated_files/eusart2.c: 101:     RC2STA = 0x90;
  2075  001D14  0E90               	movlw	144
  2076  001D16  6F9D               	movwf	157,b	;volatile
  2077  001D18                     
  2078                           ; BSR set to: 14
  2079                           ;mcc_generated_files/eusart2.c: 104:     TX2STA = 0x24;
  2080  001D18  0E24               	movlw	36
  2081  001D1A  6F9E               	movwf	158,b	;volatile
  2082  001D1C                     
  2083                           ; BSR set to: 14
  2084                           ;mcc_generated_files/eusart2.c: 107:     SP2BRGL = 0x40;
  2085  001D1C  0E40               	movlw	64
  2086  001D1E  6F9B               	movwf	155,b	;volatile
  2087  001D20                     
  2088                           ; BSR set to: 14
  2089                           ;mcc_generated_files/eusart2.c: 110:     SP2BRGH = 0x03;
  2090  001D20  0E03               	movlw	3
  2091  001D22  6F9C               	movwf	156,b	;volatile
  2092  001D24                     
  2093                           ; BSR set to: 14
  2094                           ;mcc_generated_files/eusart2.c: 113:     EUSART2_SetFramingErrorHandler(EUSART2_DefaultF
      +                          ramingErrorHandler);
  2095  001D24  0EBC               	movlw	low _EUSART2_DefaultFramingErrorHandler
  2096  001D26  6E05               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler^0,c
  2097  001D28  0E25               	movlw	high _EUSART2_DefaultFramingErrorHandler
  2098  001D2A  6E06               	movwf	(EUSART2_SetFramingErrorHandler@interruptHandler+1)^0,c
  2099  001D2C  ECA4  F012         	call	_EUSART2_SetFramingErrorHandler	;wreg free
  2100  001D30                     
  2101                           ;mcc_generated_files/eusart2.c: 114:     EUSART2_SetOverrunErrorHandler(EUSART2_DefaultO
      +                          verrunErrorHandler);
  2102  001D30  0E98               	movlw	low _EUSART2_DefaultOverrunErrorHandler
  2103  001D32  6E05               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler^0,c
  2104  001D34  0E25               	movlw	high _EUSART2_DefaultOverrunErrorHandler
  2105  001D36  6E06               	movwf	(EUSART2_SetOverrunErrorHandler@interruptHandler+1)^0,c
  2106  001D38  EC9F  F012         	call	_EUSART2_SetOverrunErrorHandler	;wreg free
  2107  001D3C                     
  2108                           ;mcc_generated_files/eusart2.c: 115:     EUSART2_SetErrorHandler(EUSART2_DefaultErrorHan
      +                          dler);
  2109  001D3C  0EA6               	movlw	low _EUSART2_DefaultErrorHandler
  2110  001D3E  6E05               	movwf	EUSART2_SetErrorHandler@interruptHandler^0,c
  2111  001D40  0E25               	movlw	high _EUSART2_DefaultErrorHandler
  2112  001D42  6E06               	movwf	(EUSART2_SetErrorHandler@interruptHandler+1)^0,c
  2113  001D44  ECA9  F012         	call	_EUSART2_SetErrorHandler	;wreg free
  2114                           
  2115                           ;mcc_generated_files/eusart2.c: 117:     eusart2RxLastError.status = 0;
  2116  001D48  0E00               	movlw	0
  2117  001D4A  0100               	movlb	0	; () banked
  2118  001D4C  6F9A               	movwf	_eusart2RxLastError& (0+255),b	;volatile
  2119                           
  2120                           ;mcc_generated_files/eusart2.c: 120:     eusart2TxHead = 0;
  2121  001D4E  0E00               	movlw	0
  2122  001D50  6F9E               	movwf	_eusart2TxHead& (0+255),b	;volatile
  2123                           
  2124                           ;mcc_generated_files/eusart2.c: 121:     eusart2TxTail = 0;
  2125  001D52  0E00               	movlw	0
  2126  001D54  6F9D               	movwf	_eusart2TxTail& (0+255),b	;volatile
  2127                           
  2128                           ;mcc_generated_files/eusart2.c: 122:     eusart2TxBufferRemaining = sizeof(eusart2TxBuff
      +                          er);
  2129  001D56  0E08               	movlw	8
  2130  001D58  6FE2               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
  2131                           
  2132                           ;mcc_generated_files/eusart2.c: 124:     eusart2RxHead = 0;
  2133  001D5A  0E00               	movlw	0
  2134  001D5C  6E59               	movwf	_eusart2RxHead^0,c	;volatile
  2135                           
  2136                           ;mcc_generated_files/eusart2.c: 125:     eusart2RxTail = 0;
  2137  001D5E  0E00               	movlw	0
  2138  001D60  6F9C               	movwf	_eusart2RxTail& (0+255),b	;volatile
  2139                           
  2140                           ;mcc_generated_files/eusart2.c: 126:     eusart2RxCount = 0;
  2141  001D62  0E00               	movlw	0
  2142  001D64  6F9B               	movwf	_eusart2RxCount& (0+255),b	;volatile
  2143  001D66                     
  2144                           ; BSR set to: 0
  2145                           ;mcc_generated_files/eusart2.c: 129:     PIE3bits.RC2IE = 1;
  2146  001D66  010E               	movlb	14	; () banked
  2147  001D68  8FC5               	bsf	197,7,b	;volatile
  2148  001D6A                     
  2149                           ; BSR set to: 14
  2150  001D6A  0012               	return		;funcret
  2151  001D6C                     __end_of_EUSART2_Initialize:
  2152                           	opt callstack 0
  2153                           
  2154 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
  2155 ;; Defined at:
  2156 ;;		line 285 in file "mcc_generated_files/eusart2.c"
  2157 ;; Parameters:    Size  Location     Type
  2158 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2159 ;;		 -> EUSART2_Transmit_ISR(1), 
  2160 ;; Auto vars:     Size  Location     Type
  2161 ;;		None
  2162 ;; Return value:  Size  Location     Type
  2163 ;;                  1    wreg      void 
  2164 ;; Registers used:
  2165 ;;		wreg, status,2, status,0
  2166 ;; Tracked objects:
  2167 ;;		On entry : 0/0
  2168 ;;		On exit  : 0/0
  2169 ;;		Unchanged: 0/0
  2170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2171 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2174 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2175 ;;Total ram usage:        2 bytes
  2176 ;; Hardware stack levels used:    1
  2177 ;; Hardware stack levels required when called:    4
  2178 ;; This function calls:
  2179 ;;		Nothing
  2180 ;; This function is called by:
  2181 ;;		_EUSART2_Initialize
  2182 ;; This function uses a non-reentrant model
  2183 ;;
  2184                           
  2185                           	psect	text7
  2186  00252A                     __ptext7:
  2187                           	opt callstack 0
  2188  00252A                     _EUSART2_SetTxInterruptHandler:
  2189                           	opt callstack 24
  2190  00252A                     
  2191                           ;mcc_generated_files/eusart2.c: 286:     EUSART2_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  2192  00252A  C005  F0DF         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
  2193  00252E  C006  F0E0         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
  2194  002532  0012               	return		;funcret
  2195  002534                     __end_of_EUSART2_SetTxInterruptHandler:
  2196                           	opt callstack 0
  2197                           
  2198 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
  2199 ;; Defined at:
  2200 ;;		line 289 in file "mcc_generated_files/eusart2.c"
  2201 ;; Parameters:    Size  Location     Type
  2202 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2203 ;;		 -> EUSART2_Receive_ISR(1), 
  2204 ;; Auto vars:     Size  Location     Type
  2205 ;;		None
  2206 ;; Return value:  Size  Location     Type
  2207 ;;                  1    wreg      void 
  2208 ;; Registers used:
  2209 ;;		wreg, status,2, status,0
  2210 ;; Tracked objects:
  2211 ;;		On entry : 0/0
  2212 ;;		On exit  : 0/0
  2213 ;;		Unchanged: 0/0
  2214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2215 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2218 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2219 ;;Total ram usage:        2 bytes
  2220 ;; Hardware stack levels used:    1
  2221 ;; Hardware stack levels required when called:    4
  2222 ;; This function calls:
  2223 ;;		Nothing
  2224 ;; This function is called by:
  2225 ;;		_EUSART2_Initialize
  2226 ;; This function uses a non-reentrant model
  2227 ;;
  2228                           
  2229                           	psect	text8
  2230  002534                     __ptext8:
  2231                           	opt callstack 0
  2232  002534                     _EUSART2_SetRxInterruptHandler:
  2233                           	opt callstack 24
  2234  002534                     
  2235                           ;mcc_generated_files/eusart2.c: 290:     EUSART2_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  2236  002534  C005  F0DD         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
  2237  002538  C006  F0DE         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
  2238  00253C  0012               	return		;funcret
  2239  00253E                     __end_of_EUSART2_SetRxInterruptHandler:
  2240                           	opt callstack 0
  2241                           
  2242 ;; *************** function _EUSART2_SetOverrunErrorHandler *****************
  2243 ;; Defined at:
  2244 ;;		line 277 in file "mcc_generated_files/eusart2.c"
  2245 ;; Parameters:    Size  Location     Type
  2246 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2247 ;;		 -> EUSART2_DefaultOverrunErrorHandler(1), 
  2248 ;; Auto vars:     Size  Location     Type
  2249 ;;		None
  2250 ;; Return value:  Size  Location     Type
  2251 ;;                  1    wreg      void 
  2252 ;; Registers used:
  2253 ;;		wreg, status,2, status,0
  2254 ;; Tracked objects:
  2255 ;;		On entry : 0/0
  2256 ;;		On exit  : 0/0
  2257 ;;		Unchanged: 0/0
  2258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2259 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2262 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2263 ;;Total ram usage:        2 bytes
  2264 ;; Hardware stack levels used:    1
  2265 ;; Hardware stack levels required when called:    4
  2266 ;; This function calls:
  2267 ;;		Nothing
  2268 ;; This function is called by:
  2269 ;;		_EUSART2_Initialize
  2270 ;; This function uses a non-reentrant model
  2271 ;;
  2272                           
  2273                           	psect	text9
  2274  00253E                     __ptext9:
  2275                           	opt callstack 0
  2276  00253E                     _EUSART2_SetOverrunErrorHandler:
  2277                           	opt callstack 24
  2278  00253E                     
  2279                           ;mcc_generated_files/eusart2.c: 278:     EUSART2_OverrunErrorHandler = interruptHandler;
  2280  00253E  C005  F0D5         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler,_EUSART2_OverrunErrorHandler
  2281  002542  C006  F0D6         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler+1,_EUSART2_OverrunErrorHandler+1
  2282  002546  0012               	return		;funcret
  2283  002548                     __end_of_EUSART2_SetOverrunErrorHandler:
  2284                           	opt callstack 0
  2285                           
  2286 ;; *************** function _EUSART2_SetFramingErrorHandler *****************
  2287 ;; Defined at:
  2288 ;;		line 273 in file "mcc_generated_files/eusart2.c"
  2289 ;; Parameters:    Size  Location     Type
  2290 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2291 ;;		 -> EUSART2_DefaultFramingErrorHandler(1), 
  2292 ;; Auto vars:     Size  Location     Type
  2293 ;;		None
  2294 ;; Return value:  Size  Location     Type
  2295 ;;                  1    wreg      void 
  2296 ;; Registers used:
  2297 ;;		wreg, status,2, status,0
  2298 ;; Tracked objects:
  2299 ;;		On entry : 0/0
  2300 ;;		On exit  : 0/0
  2301 ;;		Unchanged: 0/0
  2302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2303 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2306 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2307 ;;Total ram usage:        2 bytes
  2308 ;; Hardware stack levels used:    1
  2309 ;; Hardware stack levels required when called:    4
  2310 ;; This function calls:
  2311 ;;		Nothing
  2312 ;; This function is called by:
  2313 ;;		_EUSART2_Initialize
  2314 ;; This function uses a non-reentrant model
  2315 ;;
  2316                           
  2317                           	psect	text10
  2318  002548                     __ptext10:
  2319                           	opt callstack 0
  2320  002548                     _EUSART2_SetFramingErrorHandler:
  2321                           	opt callstack 24
  2322  002548                     
  2323                           ;mcc_generated_files/eusart2.c: 274:     EUSART2_FramingErrorHandler = interruptHandler;
  2324  002548  C005  F0D7         	movff	EUSART2_SetFramingErrorHandler@interruptHandler,_EUSART2_FramingErrorHandler
  2325  00254C  C006  F0D8         	movff	EUSART2_SetFramingErrorHandler@interruptHandler+1,_EUSART2_FramingErrorHandler+1
  2326  002550  0012               	return		;funcret
  2327  002552                     __end_of_EUSART2_SetFramingErrorHandler:
  2328                           	opt callstack 0
  2329                           
  2330 ;; *************** function _EUSART2_SetErrorHandler *****************
  2331 ;; Defined at:
  2332 ;;		line 281 in file "mcc_generated_files/eusart2.c"
  2333 ;; Parameters:    Size  Location     Type
  2334 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2335 ;;		 -> EUSART2_DefaultErrorHandler(1), 
  2336 ;; Auto vars:     Size  Location     Type
  2337 ;;		None
  2338 ;; Return value:  Size  Location     Type
  2339 ;;                  1    wreg      void 
  2340 ;; Registers used:
  2341 ;;		wreg, status,2, status,0
  2342 ;; Tracked objects:
  2343 ;;		On entry : 0/0
  2344 ;;		On exit  : 0/0
  2345 ;;		Unchanged: 0/0
  2346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2347 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2350 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2351 ;;Total ram usage:        2 bytes
  2352 ;; Hardware stack levels used:    1
  2353 ;; Hardware stack levels required when called:    4
  2354 ;; This function calls:
  2355 ;;		Nothing
  2356 ;; This function is called by:
  2357 ;;		_EUSART2_Initialize
  2358 ;; This function uses a non-reentrant model
  2359 ;;
  2360                           
  2361                           	psect	text11
  2362  002552                     __ptext11:
  2363                           	opt callstack 0
  2364  002552                     _EUSART2_SetErrorHandler:
  2365                           	opt callstack 24
  2366  002552                     
  2367                           ;mcc_generated_files/eusart2.c: 282:     EUSART2_ErrorHandler = interruptHandler;
  2368  002552  C005  F0D3         	movff	EUSART2_SetErrorHandler@interruptHandler,_EUSART2_ErrorHandler
  2369  002556  C006  F0D4         	movff	EUSART2_SetErrorHandler@interruptHandler+1,_EUSART2_ErrorHandler+1
  2370  00255A  0012               	return		;funcret
  2371  00255C                     __end_of_EUSART2_SetErrorHandler:
  2372                           	opt callstack 0
  2373                           
  2374 ;; *************** function _EUSART1_Initialize *****************
  2375 ;; Defined at:
  2376 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  2377 ;; Parameters:    Size  Location     Type
  2378 ;;		None
  2379 ;; Auto vars:     Size  Location     Type
  2380 ;;		None
  2381 ;; Return value:  Size  Location     Type
  2382 ;;                  1    wreg      void 
  2383 ;; Registers used:
  2384 ;;		wreg, status,2, status,0, cstack
  2385 ;; Tracked objects:
  2386 ;;		On entry : 0/0
  2387 ;;		On exit  : 0/0
  2388 ;;		Unchanged: 0/0
  2389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2394 ;;Total ram usage:        0 bytes
  2395 ;; Hardware stack levels used:    1
  2396 ;; Hardware stack levels required when called:    5
  2397 ;; This function calls:
  2398 ;;		_EUSART1_SetErrorHandler
  2399 ;;		_EUSART1_SetFramingErrorHandler
  2400 ;;		_EUSART1_SetOverrunErrorHandler
  2401 ;;		_EUSART1_SetRxInterruptHandler
  2402 ;;		_EUSART1_SetTxInterruptHandler
  2403 ;; This function is called by:
  2404 ;;		_SYSTEM_Initialize
  2405 ;; This function uses a non-reentrant model
  2406 ;;
  2407                           
  2408                           	psect	text12
  2409  001D6C                     __ptext12:
  2410                           	opt callstack 0
  2411  001D6C                     _EUSART1_Initialize:
  2412                           	opt callstack 24
  2413  001D6C                     
  2414                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
  2415  001D6C  010E               	movlb	14	; () banked
  2416  001D6E  9BC5               	bcf	197,5,b	;volatile
  2417  001D70                     
  2418                           ; BSR set to: 14
  2419                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  2420  001D70  0E6A               	movlw	low _EUSART1_Receive_ISR
  2421  001D72  6E05               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
  2422  001D74  0E1A               	movlw	high _EUSART1_Receive_ISR
  2423  001D76  6E06               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
  2424  001D78  ECB3  F012         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  2425  001D7C                     
  2426                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
  2427  001D7C  010E               	movlb	14	; () banked
  2428  001D7E  99C5               	bcf	197,4,b	;volatile
  2429                           
  2430                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  2431  001D80  0E62               	movlw	low _EUSART1_Transmit_ISR
  2432  001D82  6E05               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
  2433  001D84  0E22               	movlw	high _EUSART1_Transmit_ISR
  2434  001D86  6E06               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
  2435  001D88  ECAE  F012         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  2436  001D8C                     
  2437                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
  2438  001D8C  0E08               	movlw	8
  2439  001D8E  6E9F               	movwf	159,c	;volatile
  2440  001D90                     
  2441                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
  2442  001D90  0E90               	movlw	144
  2443  001D92  6E9D               	movwf	157,c	;volatile
  2444  001D94                     
  2445                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
  2446  001D94  0E24               	movlw	36
  2447  001D96  6E9E               	movwf	158,c	;volatile
  2448  001D98                     
  2449                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x40;
  2450  001D98  0E40               	movlw	64
  2451  001D9A  6E9B               	movwf	155,c	;volatile
  2452  001D9C                     
  2453                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x03;
  2454  001D9C  0E03               	movlw	3
  2455  001D9E  6E9C               	movwf	156,c	;volatile
  2456  001DA0                     
  2457                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  2458  001DA0  0EBE               	movlw	low _EUSART1_DefaultFramingErrorHandler
  2459  001DA2  6E05               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  2460  001DA4  0E25               	movlw	high _EUSART1_DefaultFramingErrorHandler
  2461  001DA6  6E06               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  2462  001DA8  ECBD  F012         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  2463  001DAC                     
  2464                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  2465  001DAC  0EAC               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  2466  001DAE  6E05               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  2467  001DB0  0E25               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  2468  001DB2  6E06               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  2469  001DB4  ECB8  F012         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  2470  001DB8                     
  2471                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  2472  001DB8  0EB2               	movlw	low _EUSART1_DefaultErrorHandler
  2473  001DBA  6E05               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  2474  001DBC  0E25               	movlw	high _EUSART1_DefaultErrorHandler
  2475  001DBE  6E06               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  2476  001DC0  ECC2  F012         	call	_EUSART1_SetErrorHandler	;wreg free
  2477                           
  2478                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
  2479  001DC4  0E00               	movlw	0
  2480  001DC6  0100               	movlb	0	; () banked
  2481  001DC8  6F95               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  2482                           
  2483                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
  2484  001DCA  0E00               	movlw	0
  2485  001DCC  6F99               	movwf	_eusart1TxHead& (0+255),b	;volatile
  2486                           
  2487                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
  2488  001DCE  0E00               	movlw	0
  2489  001DD0  6F98               	movwf	_eusart1TxTail& (0+255),b	;volatile
  2490                           
  2491                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  2492  001DD2  0E10               	movlw	16
  2493  001DD4  6FE1               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
  2494                           
  2495                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
  2496  001DD6  0E00               	movlw	0
  2497  001DD8  6E58               	movwf	_eusart1RxHead^0,c	;volatile
  2498                           
  2499                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
  2500  001DDA  0E00               	movlw	0
  2501  001DDC  6F97               	movwf	_eusart1RxTail& (0+255),b	;volatile
  2502                           
  2503                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
  2504  001DDE  0E00               	movlw	0
  2505  001DE0  6F96               	movwf	_eusart1RxCount& (0+255),b	;volatile
  2506  001DE2                     
  2507                           ; BSR set to: 0
  2508                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
  2509  001DE2  010E               	movlb	14	; () banked
  2510  001DE4  8BC5               	bsf	197,5,b	;volatile
  2511  001DE6                     
  2512                           ; BSR set to: 14
  2513  001DE6  0012               	return		;funcret
  2514  001DE8                     __end_of_EUSART1_Initialize:
  2515                           	opt callstack 0
  2516                           
  2517 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  2518 ;; Defined at:
  2519 ;;		line 276 in file "mcc_generated_files/eusart1.c"
  2520 ;; Parameters:    Size  Location     Type
  2521 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2522 ;;		 -> EUSART1_Transmit_ISR(1), 
  2523 ;; Auto vars:     Size  Location     Type
  2524 ;;		None
  2525 ;; Return value:  Size  Location     Type
  2526 ;;                  1    wreg      void 
  2527 ;; Registers used:
  2528 ;;		wreg, status,2, status,0
  2529 ;; Tracked objects:
  2530 ;;		On entry : 0/0
  2531 ;;		On exit  : 0/0
  2532 ;;		Unchanged: 0/0
  2533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2534 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2537 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2538 ;;Total ram usage:        2 bytes
  2539 ;; Hardware stack levels used:    1
  2540 ;; Hardware stack levels required when called:    4
  2541 ;; This function calls:
  2542 ;;		Nothing
  2543 ;; This function is called by:
  2544 ;;		_EUSART1_Initialize
  2545 ;; This function uses a non-reentrant model
  2546 ;;
  2547                           
  2548                           	psect	text13
  2549  00255C                     __ptext13:
  2550                           	opt callstack 0
  2551  00255C                     _EUSART1_SetTxInterruptHandler:
  2552                           	opt callstack 24
  2553  00255C                     
  2554                           ;mcc_generated_files/eusart1.c: 277:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  2555  00255C  C005  F0DB         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  2556  002560  C006  F0DC         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  2557  002564  0012               	return		;funcret
  2558  002566                     __end_of_EUSART1_SetTxInterruptHandler:
  2559                           	opt callstack 0
  2560                           
  2561 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  2562 ;; Defined at:
  2563 ;;		line 280 in file "mcc_generated_files/eusart1.c"
  2564 ;; Parameters:    Size  Location     Type
  2565 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2566 ;;		 -> EUSART1_Receive_ISR(1), 
  2567 ;; Auto vars:     Size  Location     Type
  2568 ;;		None
  2569 ;; Return value:  Size  Location     Type
  2570 ;;                  1    wreg      void 
  2571 ;; Registers used:
  2572 ;;		wreg, status,2, status,0
  2573 ;; Tracked objects:
  2574 ;;		On entry : 0/0
  2575 ;;		On exit  : 0/0
  2576 ;;		Unchanged: 0/0
  2577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2578 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2581 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2582 ;;Total ram usage:        2 bytes
  2583 ;; Hardware stack levels used:    1
  2584 ;; Hardware stack levels required when called:    4
  2585 ;; This function calls:
  2586 ;;		Nothing
  2587 ;; This function is called by:
  2588 ;;		_EUSART1_Initialize
  2589 ;; This function uses a non-reentrant model
  2590 ;;
  2591                           
  2592                           	psect	text14
  2593  002566                     __ptext14:
  2594                           	opt callstack 0
  2595  002566                     _EUSART1_SetRxInterruptHandler:
  2596                           	opt callstack 24
  2597  002566                     
  2598                           ;mcc_generated_files/eusart1.c: 281:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  2599  002566  C005  F0D9         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  2600  00256A  C006  F0DA         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  2601  00256E  0012               	return		;funcret
  2602  002570                     __end_of_EUSART1_SetRxInterruptHandler:
  2603                           	opt callstack 0
  2604                           
  2605 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  2606 ;; Defined at:
  2607 ;;		line 268 in file "mcc_generated_files/eusart1.c"
  2608 ;; Parameters:    Size  Location     Type
  2609 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2610 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  2611 ;; Auto vars:     Size  Location     Type
  2612 ;;		None
  2613 ;; Return value:  Size  Location     Type
  2614 ;;                  1    wreg      void 
  2615 ;; Registers used:
  2616 ;;		wreg, status,2, status,0
  2617 ;; Tracked objects:
  2618 ;;		On entry : 0/0
  2619 ;;		On exit  : 0/0
  2620 ;;		Unchanged: 0/0
  2621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2622 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2625 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2626 ;;Total ram usage:        2 bytes
  2627 ;; Hardware stack levels used:    1
  2628 ;; Hardware stack levels required when called:    4
  2629 ;; This function calls:
  2630 ;;		Nothing
  2631 ;; This function is called by:
  2632 ;;		_EUSART1_Initialize
  2633 ;; This function uses a non-reentrant model
  2634 ;;
  2635                           
  2636                           	psect	text15
  2637  002570                     __ptext15:
  2638                           	opt callstack 0
  2639  002570                     _EUSART1_SetOverrunErrorHandler:
  2640                           	opt callstack 24
  2641  002570                     
  2642                           ;mcc_generated_files/eusart1.c: 269:     EUSART1_OverrunErrorHandler = interruptHandler;
  2643  002570  C005  F0CF         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  2644  002574  C006  F0D0         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  2645  002578  0012               	return		;funcret
  2646  00257A                     __end_of_EUSART1_SetOverrunErrorHandler:
  2647                           	opt callstack 0
  2648                           
  2649 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  2650 ;; Defined at:
  2651 ;;		line 264 in file "mcc_generated_files/eusart1.c"
  2652 ;; Parameters:    Size  Location     Type
  2653 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2654 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  2655 ;; Auto vars:     Size  Location     Type
  2656 ;;		None
  2657 ;; Return value:  Size  Location     Type
  2658 ;;                  1    wreg      void 
  2659 ;; Registers used:
  2660 ;;		wreg, status,2, status,0
  2661 ;; Tracked objects:
  2662 ;;		On entry : 0/0
  2663 ;;		On exit  : 0/0
  2664 ;;		Unchanged: 0/0
  2665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2666 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2669 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2670 ;;Total ram usage:        2 bytes
  2671 ;; Hardware stack levels used:    1
  2672 ;; Hardware stack levels required when called:    4
  2673 ;; This function calls:
  2674 ;;		Nothing
  2675 ;; This function is called by:
  2676 ;;		_EUSART1_Initialize
  2677 ;; This function uses a non-reentrant model
  2678 ;;
  2679                           
  2680                           	psect	text16
  2681  00257A                     __ptext16:
  2682                           	opt callstack 0
  2683  00257A                     _EUSART1_SetFramingErrorHandler:
  2684                           	opt callstack 24
  2685  00257A                     
  2686                           ;mcc_generated_files/eusart1.c: 265:     EUSART1_FramingErrorHandler = interruptHandler;
  2687  00257A  C005  F0D1         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  2688  00257E  C006  F0D2         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  2689  002582  0012               	return		;funcret
  2690  002584                     __end_of_EUSART1_SetFramingErrorHandler:
  2691                           	opt callstack 0
  2692                           
  2693 ;; *************** function _EUSART1_SetErrorHandler *****************
  2694 ;; Defined at:
  2695 ;;		line 272 in file "mcc_generated_files/eusart1.c"
  2696 ;; Parameters:    Size  Location     Type
  2697 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2698 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  2699 ;; Auto vars:     Size  Location     Type
  2700 ;;		None
  2701 ;; Return value:  Size  Location     Type
  2702 ;;                  1    wreg      void 
  2703 ;; Registers used:
  2704 ;;		wreg, status,2, status,0
  2705 ;; Tracked objects:
  2706 ;;		On entry : 0/0
  2707 ;;		On exit  : 0/0
  2708 ;;		Unchanged: 0/0
  2709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2710 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2713 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2714 ;;Total ram usage:        2 bytes
  2715 ;; Hardware stack levels used:    1
  2716 ;; Hardware stack levels required when called:    4
  2717 ;; This function calls:
  2718 ;;		Nothing
  2719 ;; This function is called by:
  2720 ;;		_EUSART1_Initialize
  2721 ;; This function uses a non-reentrant model
  2722 ;;
  2723                           
  2724                           	psect	text17
  2725  002584                     __ptext17:
  2726                           	opt callstack 0
  2727  002584                     _EUSART1_SetErrorHandler:
  2728                           	opt callstack 24
  2729  002584                     
  2730                           ;mcc_generated_files/eusart1.c: 273:     EUSART1_ErrorHandler = interruptHandler;
  2731  002584  C005  F0CD         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  2732  002588  C006  F0CE         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  2733  00258C  0012               	return		;funcret
  2734  00258E                     __end_of_EUSART1_SetErrorHandler:
  2735                           	opt callstack 0
  2736                           
  2737 ;; *************** function _RXMode *****************
  2738 ;; Defined at:
  2739 ;;		line 21 in file "Modbus.c"
  2740 ;; Parameters:    Size  Location     Type
  2741 ;;		None
  2742 ;; Auto vars:     Size  Location     Type
  2743 ;;		None
  2744 ;; Return value:  Size  Location     Type
  2745 ;;                  1    wreg      void 
  2746 ;; Registers used:
  2747 ;;		None
  2748 ;; Tracked objects:
  2749 ;;		On entry : 0/0
  2750 ;;		On exit  : 0/0
  2751 ;;		Unchanged: 0/0
  2752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2757 ;;Total ram usage:        0 bytes
  2758 ;; Hardware stack levels used:    1
  2759 ;; Hardware stack levels required when called:    4
  2760 ;; This function calls:
  2761 ;;		Nothing
  2762 ;; This function is called by:
  2763 ;;		_main
  2764 ;; This function uses a non-reentrant model
  2765 ;;
  2766                           
  2767                           	psect	text18
  2768  0025A0                     __ptext18:
  2769                           	opt callstack 0
  2770  0025A0                     _RXMode:
  2771                           	opt callstack 26
  2772  0025A0  9086               	bcf	134,0,c	;volatile
  2773  0025A2  9683               	bcf	131,3,c	;volatile
  2774  0025A4  0012               	return		;funcret
  2775  0025A6                     __end_of_RXMode:
  2776                           	opt callstack 0
  2777                           
  2778 ;; *************** function _PrintModbus *****************
  2779 ;; Defined at:
  2780 ;;		line 45 in file "main.c"
  2781 ;; Parameters:    Size  Location     Type
  2782 ;;		None
  2783 ;; Auto vars:     Size  Location     Type
  2784 ;;  i               2   41[BANK0 ] int 
  2785 ;; Return value:  Size  Location     Type
  2786 ;;                  1    wreg      void 
  2787 ;; Registers used:
  2788 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2789 ;; Tracked objects:
  2790 ;;		On entry : 0/0
  2791 ;;		On exit  : 0/0
  2792 ;;		Unchanged: 0/0
  2793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2795 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2796 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2797 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2798 ;;Total ram usage:        3 bytes
  2799 ;; Hardware stack levels used:    1
  2800 ;; Hardware stack levels required when called:   13
  2801 ;; This function calls:
  2802 ;;		_printf
  2803 ;; This function is called by:
  2804 ;;		_main
  2805 ;; This function uses a non-reentrant model
  2806 ;;
  2807                           
  2808                           	psect	text19
  2809  001E64                     __ptext19:
  2810                           	opt callstack 0
  2811  001E64                     _PrintModbus:
  2812                           	opt callstack 17
  2813  001E64                     
  2814                           ;main.c: 50:     printf("\r\nModbus Data Capture Complete:\r\n");
  2815  001E64  0E3B               	movlw	low STR_10
  2816  001E66  0100               	movlb	0	; () banked
  2817  001E68  6FBC               	movwf	printf@fmt& (0+255),b
  2818  001E6A  0EFF               	movlw	high STR_10
  2819  001E6C  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  2820  001E6E  EC31  F012         	call	_printf	;wreg free
  2821  001E72                     
  2822                           ;main.c: 51:     for(i=0; i< ModDataCnt ; i++ ){
  2823  001E72  0E00               	movlw	0
  2824  001E74  0100               	movlb	0	; () banked
  2825  001E76  6FC9               	movwf	(PrintModbus@i+1)& (0+255),b
  2826  001E78  0E00               	movlw	0
  2827  001E7A  6FC8               	movwf	PrintModbus@i& (0+255),b
  2828  001E7C  EF58  F00F         	goto	l5024
  2829  001E80                     l5020:
  2830                           
  2831                           ; BSR set to: 0
  2832                           ;main.c: 52:         printf("   Byte Num: %i Val: 0x%02x \r\n", i, ModbusData[i]);
  2833  001E80  0E5D               	movlw	low STR_11
  2834  001E82  6FBC               	movwf	printf@fmt& (0+255),b
  2835  001E84  0EFF               	movlw	high STR_11
  2836  001E86  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  2837  001E88  C0C8  F0BE         	movff	PrintModbus@i,?_printf+2
  2838  001E8C  C0C9  F0BF         	movff	PrintModbus@i+1,?_printf+3
  2839  001E90  0E00               	movlw	low _ModbusData
  2840  001E92  25C8               	addwf	PrintModbus@i& (0+255),w,b
  2841  001E94  6ED9               	movwf	fsr2l,c
  2842  001E96  0E01               	movlw	high _ModbusData
  2843  001E98  21C9               	addwfc	(PrintModbus@i+1)& (0+255),w,b
  2844  001E9A  6EDA               	movwf	fsr2h,c
  2845  001E9C  50DF               	movf	indf2,w,c
  2846  001E9E  6E55               	movwf	??_PrintModbus^0,c
  2847  001EA0  5055               	movf	??_PrintModbus^0,w,c
  2848  001EA2  6FC0               	movwf	(?_printf+4)& (0+255),b
  2849  001EA4  6BC1               	clrf	(?_printf+5)& (0+255),b
  2850  001EA6  EC31  F012         	call	_printf	;wreg free
  2851  001EAA                     
  2852                           ;main.c: 53:     }
  2853  001EAA  0100               	movlb	0	; () banked
  2854  001EAC  4BC8               	infsnz	PrintModbus@i& (0+255),f,b
  2855  001EAE  2BC9               	incf	(PrintModbus@i+1)& (0+255),f,b
  2856  001EB0                     l5024:
  2857                           
  2858                           ; BSR set to: 0
  2859  001EB0  5190               	movf	_ModDataCnt& (0+255),w,b
  2860  001EB2  5DC8               	subwf	PrintModbus@i& (0+255),w,b
  2861  001EB4  51C9               	movf	(PrintModbus@i+1)& (0+255),w,b
  2862  001EB6  0A80               	xorlw	128
  2863  001EB8  6E55               	movwf	??_PrintModbus^0,c
  2864  001EBA  5191               	movf	(_ModDataCnt+1)& (0+255),w,b
  2865  001EBC  0A80               	xorlw	128
  2866  001EBE  5855               	subwfb	??_PrintModbus^0,w,c
  2867  001EC0  A0D8               	btfss	status,0,c
  2868  001EC2  EF65  F00F         	goto	u5101
  2869  001EC6  EF67  F00F         	goto	u5100
  2870  001ECA                     u5101:
  2871  001ECA  EF40  F00F         	goto	l5020
  2872  001ECE                     u5100:
  2873  001ECE                     
  2874                           ; BSR set to: 0
  2875  001ECE  0012               	return		;funcret
  2876  001ED0                     __end_of_PrintModbus:
  2877                           	opt callstack 0
  2878                           
  2879 ;; *************** function _ModbusRx *****************
  2880 ;; Defined at:
  2881 ;;		line 141 in file "Modbus.c"
  2882 ;; Parameters:    Size  Location     Type
  2883 ;;		None
  2884 ;; Auto vars:     Size  Location     Type
  2885 ;;		None
  2886 ;; Return value:  Size  Location     Type
  2887 ;;                  1    wreg      _Bool 
  2888 ;; Registers used:
  2889 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2890 ;; Tracked objects:
  2891 ;;		On entry : 0/0
  2892 ;;		On exit  : 0/0
  2893 ;;		Unchanged: 0/0
  2894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2897 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2898 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2899 ;;Total ram usage:        1 bytes
  2900 ;; Hardware stack levels used:    1
  2901 ;; Hardware stack levels required when called:   14
  2902 ;; This function calls:
  2903 ;;		_AddRxBuffToModBus
  2904 ;;		_ClearRxBuff
  2905 ;;		_EUSART1_Read
  2906 ;;		_EUSART1_is_rx_ready
  2907 ;;		_checkCRC
  2908 ;;		_printf
  2909 ;; This function is called by:
  2910 ;;		_main
  2911 ;; This function uses a non-reentrant model
  2912 ;;
  2913                           
  2914                           	psect	text20
  2915  001602                     __ptext20:
  2916                           	opt callstack 0
  2917  001602                     _ModbusRx:
  2918                           	opt callstack 16
  2919  001602                     
  2920                           ;Modbus.c: 143:     if(EUSART1_is_rx_ready()){
  2921  001602  EC7F  F012         	call	_EUSART1_is_rx_ready	;wreg free
  2922  001606  0900               	iorlw	0
  2923  001608  B4D8               	btfsc	status,2,c
  2924  00160A  EF09  F00B         	goto	u5111
  2925  00160E  EF0B  F00B         	goto	u5110
  2926  001612                     u5111:
  2927  001612  EF92  F00B         	goto	l5066
  2928  001616                     u5110:
  2929  001616                     l5028:
  2930                           
  2931                           ;Modbus.c: 145:             if(EUSART1_is_rx_ready()){
  2932  001616  EC7F  F012         	call	_EUSART1_is_rx_ready	;wreg free
  2933  00161A  0900               	iorlw	0
  2934  00161C  B4D8               	btfsc	status,2,c
  2935  00161E  EF13  F00B         	goto	u5121
  2936  001622  EF15  F00B         	goto	u5120
  2937  001626                     u5121:
  2938  001626  EF32  F00B         	goto	l5040
  2939  00162A                     u5120:
  2940  00162A  EF25  F00B         	goto	l5036
  2941  00162E                     l5032:
  2942                           
  2943                           ;Modbus.c: 149:                     rxData[ByteNum] = EUSART1_Read();
  2944  00162E  ECF8  F00F         	call	_EUSART1_Read	;wreg free
  2945  001632  6E55               	movwf	??_ModbusRx^0,c
  2946  001634  0E00               	movlw	low _rxData
  2947  001636  0100               	movlb	0	; () banked
  2948  001638  258E               	addwf	_ByteNum& (0+255),w,b
  2949  00163A  6ED9               	movwf	fsr2l,c
  2950  00163C  0E02               	movlw	high _rxData
  2951  00163E  218F               	addwfc	(_ByteNum+1)& (0+255),w,b
  2952  001640  6EDA               	movwf	fsr2h,c
  2953  001642  C055  FFDF         	movff	??_ModbusRx,indf2
  2954  001646                     
  2955                           ; BSR set to: 0
  2956                           ;Modbus.c: 150:                     ByteNum++;
  2957  001646  4B8E               	infsnz	_ByteNum& (0+255),f,b
  2958  001648  2B8F               	incf	(_ByteNum+1)& (0+255),f,b
  2959  00164A                     l5036:
  2960                           
  2961                           ;Modbus.c: 147:                 while(EUSART1_is_rx_ready()){
  2962  00164A  EC7F  F012         	call	_EUSART1_is_rx_ready	;wreg free
  2963  00164E  0900               	iorlw	0
  2964  001650  A4D8               	btfss	status,2,c
  2965  001652  EF2D  F00B         	goto	u5131
  2966  001656  EF2F  F00B         	goto	u5130
  2967  00165A                     u5131:
  2968  00165A  EF17  F00B         	goto	l5032
  2969  00165E                     u5130:
  2970  00165E                     
  2971                           ;Modbus.c: 153:                 RXStat = 1;
  2972  00165E  0E01               	movlw	1
  2973  001660  0100               	movlb	0	; () banked
  2974  001662  6F93               	movwf	_RXStat& (0+255),b
  2975  001664                     l5040:
  2976                           
  2977                           ;Modbus.c: 156:             if(RXStat ==1){
  2978  001664  0100               	movlb	0	; () banked
  2979  001666  0593               	decf	_RXStat& (0+255),w,b
  2980  001668  A4D8               	btfss	status,2,c
  2981  00166A  EF39  F00B         	goto	u5141
  2982  00166E  EF3B  F00B         	goto	u5140
  2983  001672                     u5141:
  2984  001672  EF57  F00B         	goto	l5052
  2985  001676                     u5140:
  2986  001676                     
  2987                           ; BSR set to: 0
  2988                           ;Modbus.c: 159:                 AddRxBuffToModBus();
  2989  001676  EC95  F00D         	call	_AddRxBuffToModBus	;wreg free
  2990  00167A                     
  2991                           ;Modbus.c: 160:                 ClearRxBuff();
  2992  00167A  ECC6  F010         	call	_ClearRxBuff	;wreg free
  2993  00167E                     
  2994                           ;Modbus.c: 161:                 RXStat = 0;
  2995  00167E  0E00               	movlw	0
  2996  001680  0100               	movlb	0	; () banked
  2997  001682  6F93               	movwf	_RXStat& (0+255),b
  2998  001684                     
  2999                           ; BSR set to: 0
  3000                           ;Modbus.c: 162:                 ByteNum = 0;
  3001  001684  0E00               	movlw	0
  3002  001686  6F8F               	movwf	(_ByteNum+1)& (0+255),b
  3003  001688  0E00               	movlw	0
  3004  00168A  6F8E               	movwf	_ByteNum& (0+255),b
  3005  00168C                     
  3006                           ; BSR set to: 0
  3007  00168C  B883               	btfsc	131,4,c	;volatile
  3008  00168E  EF4B  F00B         	goto	u5151
  3009  001692  EF4E  F00B         	goto	u5150
  3010  001696                     u5151:
  3011  001696  0E01               	movlw	1
  3012  001698  EF4F  F00B         	goto	u5156
  3013  00169C                     u5150:
  3014  00169C  0E00               	movlw	0
  3015  00169E                     u5156:
  3016  00169E  0AFF               	xorlw	255
  3017  0016A0  6E55               	movwf	??_ModbusRx^0,c
  3018  0016A2  3A55               	swapf	??_ModbusRx^0,f,c
  3019  0016A4  5083               	movf	131,w,c	;volatile
  3020  0016A6  1855               	xorwf	??_ModbusRx^0,w,c
  3021  0016A8  0BEF               	andlw	-17
  3022  0016AA  1855               	xorwf	??_ModbusRx^0,w,c
  3023  0016AC  6E83               	movwf	131,c	;volatile
  3024  0016AE                     l5052:
  3025                           
  3026                           ; BSR set to: 0
  3027                           ;Modbus.c: 165:         }while(ModDataCnt != ExpectedBytes);
  3028  0016AE  51F5               	movf	_ExpectedBytes& (0+255),w,b
  3029  0016B0  1990               	xorwf	_ModDataCnt& (0+255),w,b
  3030  0016B2  E107               	bnz	u5161
  3031  0016B4  51F6               	movf	(_ExpectedBytes+1)& (0+255),w,b
  3032  0016B6  1991               	xorwf	(_ModDataCnt+1)& (0+255),w,b
  3033  0016B8  A4D8               	btfss	status,2,c
  3034  0016BA  EF61  F00B         	goto	u5161
  3035  0016BE  EF63  F00B         	goto	u5160
  3036  0016C2                     u5161:
  3037  0016C2  EF0B  F00B         	goto	l5028
  3038  0016C6                     u5160:
  3039  0016C6                     
  3040                           ; BSR set to: 0
  3041  0016C6  BA83               	btfsc	131,5,c	;volatile
  3042  0016C8  EF68  F00B         	goto	u5171
  3043  0016CC  EF6B  F00B         	goto	u5170
  3044  0016D0                     u5171:
  3045  0016D0  0E01               	movlw	1
  3046  0016D2  EF6C  F00B         	goto	u5176
  3047  0016D6                     u5170:
  3048  0016D6  0E00               	movlw	0
  3049  0016D8                     u5176:
  3050  0016D8  0AFF               	xorlw	255
  3051  0016DA  6E55               	movwf	??_ModbusRx^0,c
  3052  0016DC  3A55               	swapf	??_ModbusRx^0,f,c
  3053  0016DE  4655               	rlncf	??_ModbusRx^0,f,c
  3054  0016E0  5083               	movf	131,w,c	;volatile
  3055  0016E2  1855               	xorwf	??_ModbusRx^0,w,c
  3056  0016E4  0BDF               	andlw	-33
  3057  0016E6  1855               	xorwf	??_ModbusRx^0,w,c
  3058  0016E8  6E83               	movwf	131,c	;volatile
  3059  0016EA                     
  3060                           ; BSR set to: 0
  3061                           ;Modbus.c: 170:         if(checkCRC() == 1)
  3062  0016EA  EC94  F009         	call	_checkCRC	;wreg free
  3063  0016EE  06E8               	decf	wreg,f,c
  3064  0016F0  A4D8               	btfss	status,2,c
  3065  0016F2  EF7D  F00B         	goto	u5181
  3066  0016F6  EF7F  F00B         	goto	u5180
  3067  0016FA                     u5181:
  3068  0016FA  EF88  F00B         	goto	l5060
  3069  0016FE                     u5180:
  3070  0016FE                     
  3071                           ;Modbus.c: 171:         {;Modbus.c: 172:             printf("CRC Checked Out. \r\n\n");
  3072  0016FE  0ECD               	movlw	low STR_14
  3073  001700  0100               	movlb	0	; () banked
  3074  001702  6FBC               	movwf	printf@fmt& (0+255),b
  3075  001704  0EFF               	movlw	high STR_14
  3076  001706  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  3077  001708  EC31  F012         	call	_printf	;wreg free
  3078                           
  3079                           ;Modbus.c: 173:         }else{
  3080  00170C  EF8F  F00B         	goto	l5062
  3081  001710                     l5060:
  3082                           
  3083                           ;Modbus.c: 174:             printf("CRC did NOT check out. \r\n\n");
  3084  001710  0E99               	movlw	low STR_15
  3085  001712  0100               	movlb	0	; () banked
  3086  001714  6FBC               	movwf	printf@fmt& (0+255),b
  3087  001716  0EFF               	movlw	high STR_15
  3088  001718  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  3089  00171A  EC31  F012         	call	_printf	;wreg free
  3090  00171E                     l5062:
  3091                           
  3092                           ;Modbus.c: 180:         return 1;
  3093  00171E  0E01               	movlw	1
  3094  001720  EF93  F00B         	goto	l671
  3095  001724                     l5066:
  3096                           
  3097                           ;Modbus.c: 182:     return 0;
  3098  001724  0E00               	movlw	0
  3099  001726                     l671:
  3100  001726  0012               	return		;funcret
  3101  001728                     __end_of_ModbusRx:
  3102                           	opt callstack 0
  3103                           
  3104 ;; *************** function _checkCRC *****************
  3105 ;; Defined at:
  3106 ;;		line 109 in file "Modbus.c"
  3107 ;; Parameters:    Size  Location     Type
  3108 ;;		None
  3109 ;; Auto vars:     Size  Location     Type
  3110 ;;  i               2    8[BANK1 ] int 
  3111 ;;  crc             2    6[BANK1 ] unsigned int 
  3112 ;;  j               2    4[BANK1 ] int 
  3113 ;;  crcLow          2    2[BANK1 ] unsigned int 
  3114 ;;  crcHigh         2    0[BANK1 ] unsigned int 
  3115 ;; Return value:  Size  Location     Type
  3116 ;;                  1    wreg      unsigned char 
  3117 ;; Registers used:
  3118 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3119 ;; Tracked objects:
  3120 ;;		On entry : 0/0
  3121 ;;		On exit  : 0/0
  3122 ;;		Unchanged: 0/0
  3123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3125 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3126 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3127 ;;      Totals:         0       5      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3128 ;;Total ram usage:       15 bytes
  3129 ;; Hardware stack levels used:    1
  3130 ;; Hardware stack levels required when called:   13
  3131 ;; This function calls:
  3132 ;;		_printf
  3133 ;; This function is called by:
  3134 ;;		_ModbusRx
  3135 ;; This function uses a non-reentrant model
  3136 ;;
  3137                           
  3138                           	psect	text21
  3139  001328                     __ptext21:
  3140                           	opt callstack 0
  3141  001328                     _checkCRC:
  3142                           	opt callstack 16
  3143  001328                     
  3144                           ;Modbus.c: 110:   unsigned int crc = 0xFFFF;
  3145  001328  0101               	movlb	1	; () banked
  3146  00132A  69EE               	setf	checkCRC@crc& (0+255),b
  3147  00132C  69EF               	setf	(checkCRC@crc+1)& (0+255),b
  3148  00132E                     
  3149                           ; BSR set to: 1
  3150                           ;Modbus.c: 112:   unsigned int crcLow = 0;
  3151  00132E  0E00               	movlw	0
  3152  001330  6FEB               	movwf	(checkCRC@crcLow+1)& (0+255),b
  3153  001332  0E00               	movlw	0
  3154  001334  6FEA               	movwf	checkCRC@crcLow& (0+255),b
  3155                           
  3156                           ;Modbus.c: 113:   int i,j = 0;
  3157  001336  0E00               	movlw	0
  3158  001338  6FED               	movwf	(checkCRC@j+1)& (0+255),b
  3159  00133A  0E00               	movlw	0
  3160  00133C  6FEC               	movwf	checkCRC@j& (0+255),b
  3161                           
  3162                           ;Modbus.c: 115:     for(i=0;i<ModDataCnt-2;i++){
  3163  00133E  0E00               	movlw	0
  3164  001340  6FF1               	movwf	(checkCRC@i+1)& (0+255),b
  3165  001342  0E00               	movlw	0
  3166  001344  6FF0               	movwf	checkCRC@i& (0+255),b
  3167  001346  EFD7  F009         	goto	l4980
  3168  00134A                     l4962:
  3169                           
  3170                           ; BSR set to: 0
  3171                           ;Modbus.c: 116:       crc ^= ModbusData[i];
  3172  00134A  0E00               	movlw	low _ModbusData
  3173  00134C  0101               	movlb	1	; () banked
  3174  00134E  25F0               	addwf	checkCRC@i& (0+255),w,b
  3175  001350  6ED9               	movwf	fsr2l,c
  3176  001352  0E01               	movlw	high _ModbusData
  3177  001354  21F1               	addwfc	(checkCRC@i+1)& (0+255),w,b
  3178  001356  6EDA               	movwf	fsr2h,c
  3179  001358  50DF               	movf	indf2,w,c
  3180  00135A  0100               	movlb	0	; () banked
  3181  00135C  6FC8               	movwf	??_checkCRC& (0+255),b
  3182  00135E  51C8               	movf	??_checkCRC& (0+255),w,b
  3183  001360  0101               	movlb	1	; () banked
  3184  001362  1BEE               	xorwf	checkCRC@crc& (0+255),f,b
  3185  001364                     
  3186                           ; BSR set to: 1
  3187                           ;Modbus.c: 117:       for(j=8; j!=0; j--){
  3188  001364  0E00               	movlw	0
  3189  001366  6FED               	movwf	(checkCRC@j+1)& (0+255),b
  3190  001368  0E08               	movlw	8
  3191  00136A  6FEC               	movwf	checkCRC@j& (0+255),b
  3192  00136C                     l647:
  3193                           
  3194                           ; BSR set to: 1
  3195                           ;Modbus.c: 118:         if((crc & 0x0001) != 0){
  3196  00136C  A1EE               	btfss	checkCRC@crc& (0+255),0,b
  3197  00136E  EFBB  F009         	goto	u5051
  3198  001372  EFBD  F009         	goto	u5050
  3199  001376                     u5051:
  3200  001376  EFC6  F009         	goto	l4974
  3201  00137A                     u5050:
  3202  00137A                     
  3203                           ; BSR set to: 1
  3204                           ;Modbus.c: 119:           crc >>= 1;
  3205  00137A  90D8               	bcf	status,0,c
  3206  00137C  33EF               	rrcf	(checkCRC@crc+1)& (0+255),f,b
  3207  00137E  33EE               	rrcf	checkCRC@crc& (0+255),f,b
  3208  001380                     
  3209                           ; BSR set to: 1
  3210                           ;Modbus.c: 120:           crc ^= 0xA001;
  3211  001380  0E01               	movlw	1
  3212  001382  1BEE               	xorwf	checkCRC@crc& (0+255),f,b
  3213  001384  0EA0               	movlw	160
  3214  001386  1BEF               	xorwf	(checkCRC@crc+1)& (0+255),f,b
  3215                           
  3216                           ;Modbus.c: 121:         }
  3217  001388  EFC9  F009         	goto	l650
  3218  00138C                     l4974:
  3219                           
  3220                           ; BSR set to: 1
  3221                           ;Modbus.c: 123:           crc >>= 1;
  3222  00138C  90D8               	bcf	status,0,c
  3223  00138E  33EF               	rrcf	(checkCRC@crc+1)& (0+255),f,b
  3224  001390  33EE               	rrcf	checkCRC@crc& (0+255),f,b
  3225  001392                     l650:
  3226                           
  3227                           ; BSR set to: 1
  3228                           ;Modbus.c: 125:       }
  3229  001392  07EC               	decf	checkCRC@j& (0+255),f,b
  3230  001394  A0D8               	btfss	status,0,c
  3231  001396  07ED               	decf	(checkCRC@j+1)& (0+255),f,b
  3232  001398                     
  3233                           ; BSR set to: 1
  3234  001398  51EC               	movf	checkCRC@j& (0+255),w,b
  3235  00139A  11ED               	iorwf	(checkCRC@j+1)& (0+255),w,b
  3236  00139C  A4D8               	btfss	status,2,c
  3237  00139E  EFD3  F009         	goto	u5061
  3238  0013A2  EFD5  F009         	goto	u5060
  3239  0013A6                     u5061:
  3240  0013A6  EFB6  F009         	goto	l647
  3241  0013AA                     u5060:
  3242  0013AA                     
  3243                           ; BSR set to: 1
  3244                           ;Modbus.c: 126:     }
  3245  0013AA  4BF0               	infsnz	checkCRC@i& (0+255),f,b
  3246  0013AC  2BF1               	incf	(checkCRC@i+1)& (0+255),f,b
  3247  0013AE                     l4980:
  3248                           
  3249                           ; BSR set to: 1
  3250  0013AE  0EFE               	movlw	254
  3251  0013B0  0100               	movlb	0	; () banked
  3252  0013B2  6FC8               	movwf	??_checkCRC& (0+255),b
  3253  0013B4  0EFF               	movlw	255
  3254  0013B6  6FC9               	movwf	(??_checkCRC+1)& (0+255),b
  3255  0013B8  C090  F0CA         	movff	_ModDataCnt,??_checkCRC+2
  3256  0013BC  C091  F0CB         	movff	_ModDataCnt+1,??_checkCRC+3
  3257  0013C0  51C8               	movf	??_checkCRC& (0+255),w,b
  3258  0013C2  27CA               	addwf	(??_checkCRC+2)& (0+255),f,b
  3259  0013C4  51C9               	movf	(??_checkCRC+1)& (0+255),w,b
  3260  0013C6  23CB               	addwfc	(??_checkCRC+3)& (0+255),f,b
  3261  0013C8  51CA               	movf	(??_checkCRC+2)& (0+255),w,b
  3262  0013CA  0101               	movlb	1	; () banked
  3263  0013CC  5DF0               	subwf	checkCRC@i& (0+255),w,b
  3264  0013CE  51F1               	movf	(checkCRC@i+1)& (0+255),w,b
  3265  0013D0  0A80               	xorlw	128
  3266  0013D2  0100               	movlb	0	; () banked
  3267  0013D4  6FCC               	movwf	(??_checkCRC+4)& (0+255),b
  3268  0013D6  51CB               	movf	(??_checkCRC+3)& (0+255),w,b
  3269  0013D8  0A80               	xorlw	128
  3270  0013DA  59CC               	subwfb	(??_checkCRC+4)& (0+255),w,b
  3271  0013DC  A0D8               	btfss	status,0,c
  3272  0013DE  EFF3  F009         	goto	u5071
  3273  0013E2  EFF5  F009         	goto	u5070
  3274  0013E6                     u5071:
  3275  0013E6  EFA5  F009         	goto	l4962
  3276  0013EA                     u5070:
  3277  0013EA                     
  3278                           ; BSR set to: 0
  3279                           ;Modbus.c: 128:   crcHigh = (crc & 0x00FF);
  3280  0013EA  0101               	movlb	1	; () banked
  3281  0013EC  51EE               	movf	checkCRC@crc& (0+255),w,b
  3282  0013EE  6FE8               	movwf	checkCRC@crcHigh& (0+255),b
  3283  0013F0  6BE9               	clrf	(checkCRC@crcHigh+1)& (0+255),b
  3284                           
  3285                           ;Modbus.c: 129:   crcLow = (crc & 0xFF00) >>8;
  3286  0013F2  C1EE  F0C8         	movff	checkCRC@crc,??_checkCRC
  3287  0013F6  C1EF  F0C9         	movff	checkCRC@crc+1,??_checkCRC+1
  3288  0013FA  C0C9  F0C8         	movff	??_checkCRC+1,??_checkCRC
  3289  0013FE  0100               	movlb	0	; () banked
  3290  001400  6BC9               	clrf	(??_checkCRC+1)& (0+255),b
  3291  001402  51C8               	movf	??_checkCRC& (0+255),w,b
  3292  001404  0101               	movlb	1	; () banked
  3293  001406  6FEA               	movwf	checkCRC@crcLow& (0+255),b
  3294  001408  6BEB               	clrf	(checkCRC@crcLow+1)& (0+255),b
  3295  00140A                     
  3296                           ; BSR set to: 1
  3297                           ;Modbus.c: 130:   printf("crcHigh: 0x%04x  crcLow: 0x%04x  \r\n\n", crcHigh, crcLow);
  3298  00140A  0EF3               	movlw	low STR_13
  3299  00140C  0100               	movlb	0	; () banked
  3300  00140E  6FBC               	movwf	printf@fmt& (0+255),b
  3301  001410  0EFE               	movlw	high STR_13
  3302  001412  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  3303  001414  C1E8  F0BE         	movff	checkCRC@crcHigh,?_printf+2
  3304  001418  C1E9  F0BF         	movff	checkCRC@crcHigh+1,?_printf+3
  3305  00141C  C1EA  F0C0         	movff	checkCRC@crcLow,?_printf+4
  3306  001420  C1EB  F0C1         	movff	checkCRC@crcLow+1,?_printf+5
  3307  001424  EC31  F012         	call	_printf	;wreg free
  3308  001428                     
  3309                           ;Modbus.c: 131:   if((crcHigh == ModbusData[i])&&(crcLow == ModbusData[i+1]))
  3310  001428  0E00               	movlw	low _ModbusData
  3311  00142A  0101               	movlb	1	; () banked
  3312  00142C  25F0               	addwf	checkCRC@i& (0+255),w,b
  3313  00142E  6ED9               	movwf	fsr2l,c
  3314  001430  0E01               	movlw	high _ModbusData
  3315  001432  21F1               	addwfc	(checkCRC@i+1)& (0+255),w,b
  3316  001434  6EDA               	movwf	fsr2h,c
  3317  001436  50DF               	movf	indf2,w,c
  3318  001438  0100               	movlb	0	; () banked
  3319  00143A  6FC8               	movwf	??_checkCRC& (0+255),b
  3320  00143C  6BC9               	clrf	(??_checkCRC+1)& (0+255),b
  3321  00143E  0101               	movlb	1	; () banked
  3322  001440  51E8               	movf	checkCRC@crcHigh& (0+255),w,b
  3323  001442  0100               	movlb	0	; () banked
  3324  001444  19C8               	xorwf	??_checkCRC& (0+255),w,b
  3325  001446  E109               	bnz	u5081
  3326  001448  0101               	movlb	1	; () banked
  3327  00144A  51E9               	movf	(checkCRC@crcHigh+1)& (0+255),w,b
  3328  00144C  0100               	movlb	0	; () banked
  3329  00144E  19C9               	xorwf	(??_checkCRC+1)& (0+255),w,b
  3330  001450  A4D8               	btfss	status,2,c
  3331  001452  EF2D  F00A         	goto	u5081
  3332  001456  EF2F  F00A         	goto	u5080
  3333  00145A                     u5081:
  3334  00145A  EF4D  F00A         	goto	l4996
  3335  00145E                     u5080:
  3336  00145E                     
  3337                           ; BSR set to: 0
  3338  00145E  0E01               	movlw	low (_ModbusData+1)
  3339  001460  0101               	movlb	1	; () banked
  3340  001462  25F0               	addwf	checkCRC@i& (0+255),w,b
  3341  001464  6ED9               	movwf	fsr2l,c
  3342  001466  0E01               	movlw	high (_ModbusData+1)
  3343  001468  21F1               	addwfc	(checkCRC@i+1)& (0+255),w,b
  3344  00146A  6EDA               	movwf	fsr2h,c
  3345  00146C  50DF               	movf	indf2,w,c
  3346  00146E  0100               	movlb	0	; () banked
  3347  001470  6FC8               	movwf	??_checkCRC& (0+255),b
  3348  001472  6BC9               	clrf	(??_checkCRC+1)& (0+255),b
  3349  001474  0101               	movlb	1	; () banked
  3350  001476  51EA               	movf	checkCRC@crcLow& (0+255),w,b
  3351  001478  0100               	movlb	0	; () banked
  3352  00147A  19C8               	xorwf	??_checkCRC& (0+255),w,b
  3353  00147C  E109               	bnz	u5091
  3354  00147E  0101               	movlb	1	; () banked
  3355  001480  51EB               	movf	(checkCRC@crcLow+1)& (0+255),w,b
  3356  001482  0100               	movlb	0	; () banked
  3357  001484  19C9               	xorwf	(??_checkCRC+1)& (0+255),w,b
  3358  001486  A4D8               	btfss	status,2,c
  3359  001488  EF48  F00A         	goto	u5091
  3360  00148C  EF4A  F00A         	goto	u5090
  3361  001490                     u5091:
  3362  001490  EF4D  F00A         	goto	l4996
  3363  001494                     u5090:
  3364  001494                     
  3365                           ; BSR set to: 0
  3366                           ;Modbus.c: 132:   {;Modbus.c: 133:     return 1;
  3367  001494  0E01               	movlw	1
  3368  001496  EF4E  F00A         	goto	l653
  3369  00149A                     l4996:
  3370                           
  3371                           ; BSR set to: 0
  3372                           ;Modbus.c: 136:     return 0;
  3373  00149A  0E00               	movlw	0
  3374  00149C                     l653:
  3375                           
  3376                           ; BSR set to: 0
  3377  00149C  0012               	return		;funcret
  3378  00149E                     __end_of_checkCRC:
  3379                           	opt callstack 0
  3380                           
  3381 ;; *************** function _EUSART1_is_rx_ready *****************
  3382 ;; Defined at:
  3383 ;;		line 137 in file "mcc_generated_files/eusart1.c"
  3384 ;; Parameters:    Size  Location     Type
  3385 ;;		None
  3386 ;; Auto vars:     Size  Location     Type
  3387 ;;		None
  3388 ;; Return value:  Size  Location     Type
  3389 ;;                  1    wreg      _Bool 
  3390 ;; Registers used:
  3391 ;;		wreg, status,2
  3392 ;; Tracked objects:
  3393 ;;		On entry : 0/0
  3394 ;;		On exit  : 0/0
  3395 ;;		Unchanged: 0/0
  3396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3401 ;;Total ram usage:        0 bytes
  3402 ;; Hardware stack levels used:    1
  3403 ;; Hardware stack levels required when called:    4
  3404 ;; This function calls:
  3405 ;;		Nothing
  3406 ;; This function is called by:
  3407 ;;		_ModbusRx
  3408 ;; This function uses a non-reentrant model
  3409 ;;
  3410                           
  3411                           	psect	text22
  3412  0024FE                     __ptext22:
  3413                           	opt callstack 0
  3414  0024FE                     _EUSART1_is_rx_ready:
  3415                           	opt callstack 25
  3416  0024FE                     
  3417                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
  3418  0024FE  0100               	movlb	0	; () banked
  3419  002500  5196               	movf	_eusart1RxCount& (0+255),w,b	;volatile
  3420  002502  A4D8               	btfss	status,2,c
  3421  002504  EF86  F012         	goto	u4971
  3422  002508  EF89  F012         	goto	u4970
  3423  00250C                     u4971:
  3424  00250C  0E01               	movlw	1
  3425  00250E  EF8A  F012         	goto	u4980
  3426  002512                     u4970:
  3427  002512  0E00               	movlw	0
  3428  002514                     u4980:
  3429  002514                     
  3430                           ; BSR set to: 0
  3431  002514  0012               	return		;funcret
  3432  002516                     __end_of_EUSART1_is_rx_ready:
  3433                           	opt callstack 0
  3434                           
  3435 ;; *************** function _EUSART1_Read *****************
  3436 ;; Defined at:
  3437 ;;		line 151 in file "mcc_generated_files/eusart1.c"
  3438 ;; Parameters:    Size  Location     Type
  3439 ;;		None
  3440 ;; Auto vars:     Size  Location     Type
  3441 ;;  readValue       1    4[COMRAM] unsigned char 
  3442 ;; Return value:  Size  Location     Type
  3443 ;;                  1    wreg      unsigned char 
  3444 ;; Registers used:
  3445 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3446 ;; Tracked objects:
  3447 ;;		On entry : 0/0
  3448 ;;		On exit  : 0/0
  3449 ;;		Unchanged: 0/0
  3450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3452 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3454 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3455 ;;Total ram usage:        1 bytes
  3456 ;; Hardware stack levels used:    1
  3457 ;; Hardware stack levels required when called:    4
  3458 ;; This function calls:
  3459 ;;		Nothing
  3460 ;; This function is called by:
  3461 ;;		_ModbusRx
  3462 ;; This function uses a non-reentrant model
  3463 ;;
  3464                           
  3465                           	psect	text23
  3466  001FF0                     __ptext23:
  3467                           	opt callstack 0
  3468  001FF0                     _EUSART1_Read:
  3469                           	opt callstack 25
  3470  001FF0                     l4910:
  3471                           
  3472                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
  3473  001FF0  0100               	movlb	0	; () banked
  3474  001FF2  5196               	movf	_eusart1RxCount& (0+255),w,b	;volatile
  3475  001FF4  B4D8               	btfsc	status,2,c
  3476  001FF6  EFFF  F00F         	goto	u4991
  3477  001FFA  EF01  F010         	goto	u4990
  3478  001FFE                     u4991:
  3479  001FFE  EFF8  F00F         	goto	l4910
  3480  002002                     u4990:
  3481  002002                     
  3482                           ; BSR set to: 0
  3483                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
  3484  002002  0E64               	movlw	low _eusart1RxStatusBuffer
  3485  002004  2597               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
  3486  002006  6ED9               	movwf	fsr2l,c
  3487  002008  6ADA               	clrf	fsr2h,c
  3488  00200A  0E01               	movlw	high _eusart1RxStatusBuffer
  3489  00200C  22DA               	addwfc	fsr2h,f,c
  3490  00200E  50DF               	movf	indf2,w,c
  3491  002010  6F95               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  3492                           
  3493                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
  3494  002012  0E64               	movlw	low _eusart1RxBuffer
  3495  002014  2597               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
  3496  002016  6ED9               	movwf	fsr2l,c
  3497  002018  6ADA               	clrf	fsr2h,c
  3498  00201A  0E02               	movlw	high _eusart1RxBuffer
  3499  00201C  22DA               	addwfc	fsr2h,f,c
  3500  00201E  50DF               	movf	indf2,w,c
  3501  002020  6E05               	movwf	EUSART1_Read@readValue^0,c
  3502  002022                     
  3503                           ; BSR set to: 0
  3504  002022  2B97               	incf	_eusart1RxTail& (0+255),f,b	;volatile
  3505  002024                     
  3506                           ; BSR set to: 0
  3507                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
  3508  002024  0E63               	movlw	99
  3509  002026  6597               	cpfsgt	_eusart1RxTail& (0+255),b	;volatile
  3510  002028  EF18  F010         	goto	u5001
  3511  00202C  EF1A  F010         	goto	u5000
  3512  002030                     u5001:
  3513  002030  EF1C  F010         	goto	l4920
  3514  002034                     u5000:
  3515  002034                     
  3516                           ; BSR set to: 0
  3517                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
  3518  002034  0E00               	movlw	0
  3519  002036  6F97               	movwf	_eusart1RxTail& (0+255),b	;volatile
  3520  002038                     l4920:
  3521                           
  3522                           ; BSR set to: 0
  3523                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
  3524  002038  010E               	movlb	14	; () banked
  3525  00203A  9BC5               	bcf	197,5,b	;volatile
  3526  00203C                     
  3527                           ; BSR set to: 14
  3528                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
  3529  00203C  0100               	movlb	0	; () banked
  3530  00203E  0796               	decf	_eusart1RxCount& (0+255),f,b	;volatile
  3531  002040                     
  3532                           ; BSR set to: 0
  3533                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
  3534  002040  010E               	movlb	14	; () banked
  3535  002042  8BC5               	bsf	197,5,b	;volatile
  3536  002044                     
  3537                           ; BSR set to: 14
  3538                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
  3539  002044  5005               	movf	EUSART1_Read@readValue^0,w,c
  3540  002046                     
  3541                           ; BSR set to: 14
  3542  002046  0012               	return		;funcret
  3543  002048                     __end_of_EUSART1_Read:
  3544                           	opt callstack 0
  3545                           
  3546 ;; *************** function _ClearRxBuff *****************
  3547 ;; Defined at:
  3548 ;;		line 37 in file "Modbus.c"
  3549 ;; Parameters:    Size  Location     Type
  3550 ;;		None
  3551 ;; Auto vars:     Size  Location     Type
  3552 ;;  i               2    5[COMRAM] int 
  3553 ;; Return value:  Size  Location     Type
  3554 ;;                  1    wreg      void 
  3555 ;; Registers used:
  3556 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3557 ;; Tracked objects:
  3558 ;;		On entry : 0/0
  3559 ;;		On exit  : 0/0
  3560 ;;		Unchanged: 0/0
  3561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3563 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3564 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3565 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3566 ;;Total ram usage:        3 bytes
  3567 ;; Hardware stack levels used:    1
  3568 ;; Hardware stack levels required when called:    4
  3569 ;; This function calls:
  3570 ;;		Nothing
  3571 ;; This function is called by:
  3572 ;;		_main
  3573 ;;		_ModbusRx
  3574 ;; This function uses a non-reentrant model
  3575 ;;
  3576                           
  3577                           	psect	text24
  3578  00218C                     __ptext24:
  3579                           	opt callstack 0
  3580  00218C                     _ClearRxBuff:
  3581                           	opt callstack 25
  3582  00218C                     
  3583                           ;Modbus.c: 39:     int i = 0;
  3584  00218C  0E00               	movlw	0
  3585  00218E  6E07               	movwf	(ClearRxBuff@i+1)^0,c
  3586  002190  0E00               	movlw	0
  3587  002192  6E06               	movwf	ClearRxBuff@i^0,c
  3588                           
  3589                           ;Modbus.c: 40:     for(i=0; i<ByteNum; i++ ){
  3590  002194  0E00               	movlw	0
  3591  002196  6E07               	movwf	(ClearRxBuff@i+1)^0,c
  3592  002198  0E00               	movlw	0
  3593  00219A  6E06               	movwf	ClearRxBuff@i^0,c
  3594  00219C  EFDA  F010         	goto	l4936
  3595  0021A0                     l4932:
  3596                           
  3597                           ; BSR set to: 0
  3598                           ;Modbus.c: 41:         rxData[i] = 0xFF;
  3599  0021A0  0E00               	movlw	low _rxData
  3600  0021A2  2406               	addwf	ClearRxBuff@i^0,w,c
  3601  0021A4  6ED9               	movwf	fsr2l,c
  3602  0021A6  0E02               	movlw	high _rxData
  3603  0021A8  2007               	addwfc	(ClearRxBuff@i+1)^0,w,c
  3604  0021AA  6EDA               	movwf	fsr2h,c
  3605  0021AC  0EFF               	movlw	255
  3606  0021AE  6EDF               	movwf	indf2,c
  3607  0021B0                     
  3608                           ; BSR set to: 0
  3609                           ;Modbus.c: 42:     }
  3610  0021B0  4A06               	infsnz	ClearRxBuff@i^0,f,c
  3611  0021B2  2A07               	incf	(ClearRxBuff@i+1)^0,f,c
  3612  0021B4                     l4936:
  3613  0021B4  0100               	movlb	0	; () banked
  3614  0021B6  518E               	movf	_ByteNum& (0+255),w,b
  3615  0021B8  5C06               	subwf	ClearRxBuff@i^0,w,c
  3616  0021BA  5007               	movf	(ClearRxBuff@i+1)^0,w,c
  3617  0021BC  0A80               	xorlw	128
  3618  0021BE  6E05               	movwf	??_ClearRxBuff^0,c
  3619  0021C0  518F               	movf	(_ByteNum+1)& (0+255),w,b
  3620  0021C2  0A80               	xorlw	128
  3621  0021C4  5805               	subwfb	??_ClearRxBuff^0,w,c
  3622  0021C6  A0D8               	btfss	status,0,c
  3623  0021C8  EFE8  F010         	goto	u5011
  3624  0021CC  EFEA  F010         	goto	u5010
  3625  0021D0                     u5011:
  3626  0021D0  EFD0  F010         	goto	l4932
  3627  0021D4                     u5010:
  3628  0021D4                     
  3629                           ; BSR set to: 0
  3630  0021D4  0012               	return		;funcret
  3631  0021D6                     __end_of_ClearRxBuff:
  3632                           	opt callstack 0
  3633                           
  3634 ;; *************** function _AddRxBuffToModBus *****************
  3635 ;; Defined at:
  3636 ;;		line 46 in file "Modbus.c"
  3637 ;; Parameters:    Size  Location     Type
  3638 ;;		None
  3639 ;; Auto vars:     Size  Location     Type
  3640 ;;  i               2    5[COMRAM] int 
  3641 ;; Return value:  Size  Location     Type
  3642 ;;                  1    wreg      void 
  3643 ;; Registers used:
  3644 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3645 ;; Tracked objects:
  3646 ;;		On entry : 0/0
  3647 ;;		On exit  : 0/0
  3648 ;;		Unchanged: 0/0
  3649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3651 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3652 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3653 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3654 ;;Total ram usage:        3 bytes
  3655 ;; Hardware stack levels used:    1
  3656 ;; Hardware stack levels required when called:    4
  3657 ;; This function calls:
  3658 ;;		Nothing
  3659 ;; This function is called by:
  3660 ;;		_ModbusRx
  3661 ;; This function uses a non-reentrant model
  3662 ;;
  3663                           
  3664                           	psect	text25
  3665  001B2A                     __ptext25:
  3666                           	opt callstack 0
  3667  001B2A                     _AddRxBuffToModBus:
  3668                           	opt callstack 25
  3669  001B2A                     
  3670                           ;Modbus.c: 50:     int i = 0;
  3671  001B2A  0E00               	movlw	0
  3672  001B2C  6E07               	movwf	(AddRxBuffToModBus@i+1)^0,c
  3673  001B2E  0E00               	movlw	0
  3674  001B30  6E06               	movwf	AddRxBuffToModBus@i^0,c
  3675                           
  3676                           ;Modbus.c: 52:     for(i=0l; i<ByteNum; i++){
  3677  001B32  0E00               	movlw	0
  3678  001B34  6E07               	movwf	(AddRxBuffToModBus@i+1)^0,c
  3679  001B36  0E00               	movlw	0
  3680  001B38  6E06               	movwf	AddRxBuffToModBus@i^0,c
  3681  001B3A  EFB1  F00D         	goto	l4946
  3682  001B3E                     l4940:
  3683                           
  3684                           ; BSR set to: 0
  3685                           ;Modbus.c: 53:         ModbusData[ModDataCnt] = rxData[i];
  3686  001B3E  0E00               	movlw	low _rxData
  3687  001B40  2406               	addwf	AddRxBuffToModBus@i^0,w,c
  3688  001B42  6ED9               	movwf	fsr2l,c
  3689  001B44  0E02               	movlw	high _rxData
  3690  001B46  2007               	addwfc	(AddRxBuffToModBus@i+1)^0,w,c
  3691  001B48  6EDA               	movwf	fsr2h,c
  3692  001B4A  0E00               	movlw	low _ModbusData
  3693  001B4C  2590               	addwf	_ModDataCnt& (0+255),w,b
  3694  001B4E  6EE1               	movwf	fsr1l,c
  3695  001B50  0E01               	movlw	high _ModbusData
  3696  001B52  2191               	addwfc	(_ModDataCnt+1)& (0+255),w,b
  3697  001B54  6EE2               	movwf	fsr1h,c
  3698  001B56  CFDF FFE7          	movff	indf2,indf1
  3699  001B5A                     
  3700                           ; BSR set to: 0
  3701                           ;Modbus.c: 54:         ModDataCnt++;
  3702  001B5A  4B90               	infsnz	_ModDataCnt& (0+255),f,b
  3703  001B5C  2B91               	incf	(_ModDataCnt+1)& (0+255),f,b
  3704  001B5E                     
  3705                           ; BSR set to: 0
  3706                           ;Modbus.c: 55:     }
  3707  001B5E  4A06               	infsnz	AddRxBuffToModBus@i^0,f,c
  3708  001B60  2A07               	incf	(AddRxBuffToModBus@i+1)^0,f,c
  3709  001B62                     l4946:
  3710  001B62  0100               	movlb	0	; () banked
  3711  001B64  518E               	movf	_ByteNum& (0+255),w,b
  3712  001B66  5C06               	subwf	AddRxBuffToModBus@i^0,w,c
  3713  001B68  5007               	movf	(AddRxBuffToModBus@i+1)^0,w,c
  3714  001B6A  0A80               	xorlw	128
  3715  001B6C  6E05               	movwf	??_AddRxBuffToModBus^0,c
  3716  001B6E  518F               	movf	(_ByteNum+1)& (0+255),w,b
  3717  001B70  0A80               	xorlw	128
  3718  001B72  5805               	subwfb	??_AddRxBuffToModBus^0,w,c
  3719  001B74  A0D8               	btfss	status,0,c
  3720  001B76  EFBF  F00D         	goto	u5021
  3721  001B7A  EFC1  F00D         	goto	u5020
  3722  001B7E                     u5021:
  3723  001B7E  EF9F  F00D         	goto	l4940
  3724  001B82                     u5020:
  3725  001B82                     
  3726                           ; BSR set to: 0
  3727                           ;Modbus.c: 60:     if(ModbusData[1] == 0x0F){
  3728  001B82  0E0F               	movlw	15
  3729  001B84  0101               	movlb	1	; () banked
  3730  001B86  1901               	xorwf	(_ModbusData+1)& (0+255),w,b
  3731  001B88  A4D8               	btfss	status,2,c
  3732  001B8A  EFC9  F00D         	goto	u5031
  3733  001B8E  EFCB  F00D         	goto	u5030
  3734  001B92                     u5031:
  3735  001B92  EFD4  F00D         	goto	l4952
  3736  001B96                     u5030:
  3737  001B96                     l4950:
  3738                           
  3739                           ; BSR set to: 1
  3740                           ;Modbus.c: 61:         ExpectedBytes = ModbusData[6] + 9;
  3741  001B96  0E09               	movlw	9
  3742  001B98  2506               	addwf	(_ModbusData+6)& (0+255),w,b
  3743  001B9A  0100               	movlb	0	; () banked
  3744  001B9C  6FF5               	movwf	_ExpectedBytes& (0+255),b
  3745  001B9E  6BF6               	clrf	(_ExpectedBytes+1)& (0+255),b
  3746  001BA0  0E00               	movlw	0
  3747  001BA2  23F6               	addwfc	(_ExpectedBytes+1)& (0+255),f,b
  3748                           
  3749                           ;Modbus.c: 62:     }else if (ModbusData[1] == 0x10){
  3750  001BA4  EFE4  F00D         	goto	l632
  3751  001BA8                     l4952:
  3752                           
  3753                           ; BSR set to: 1
  3754  001BA8  0E10               	movlw	16
  3755  001BAA  1901               	xorwf	(_ModbusData+1)& (0+255),w,b
  3756  001BAC  A4D8               	btfss	status,2,c
  3757  001BAE  EFDB  F00D         	goto	u5041
  3758  001BB2  EFDD  F00D         	goto	u5040
  3759  001BB6                     u5041:
  3760  001BB6  EFDF  F00D         	goto	l4956
  3761  001BBA                     u5040:
  3762  001BBA  EFCB  F00D         	goto	l4950
  3763  001BBE                     l4956:
  3764                           
  3765                           ; BSR set to: 1
  3766                           ;Modbus.c: 65:         ExpectedBytes = 8;
  3767  001BBE  0E00               	movlw	0
  3768  001BC0  0100               	movlb	0	; () banked
  3769  001BC2  6FF6               	movwf	(_ExpectedBytes+1)& (0+255),b
  3770  001BC4  0E08               	movlw	8
  3771  001BC6  6FF5               	movwf	_ExpectedBytes& (0+255),b
  3772  001BC8                     l632:
  3773                           
  3774                           ; BSR set to: 0
  3775  001BC8  0012               	return		;funcret
  3776  001BCA                     __end_of_AddRxBuffToModBus:
  3777                           	opt callstack 0
  3778                           
  3779 ;; *************** function _InitialiseString *****************
  3780 ;; Defined at:
  3781 ;;		line 22 in file "main.c"
  3782 ;; Parameters:    Size  Location     Type
  3783 ;;		None
  3784 ;; Auto vars:     Size  Location     Type
  3785 ;;		None
  3786 ;; Return value:  Size  Location     Type
  3787 ;;                  1    wreg      void 
  3788 ;; Registers used:
  3789 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3790 ;; Tracked objects:
  3791 ;;		On entry : 0/0
  3792 ;;		On exit  : 0/0
  3793 ;;		Unchanged: 0/0
  3794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3799 ;;Total ram usage:        0 bytes
  3800 ;; Hardware stack levels used:    1
  3801 ;; Hardware stack levels required when called:   13
  3802 ;; This function calls:
  3803 ;;		_printf
  3804 ;; This function is called by:
  3805 ;;		_main
  3806 ;; This function uses a non-reentrant model
  3807 ;;
  3808                           
  3809                           	psect	text26
  3810  001DE8                     __ptext26:
  3811                           	opt callstack 0
  3812  001DE8                     _InitialiseString:
  3813                           	opt callstack 17
  3814  001DE8                     
  3815                           ;main.c: 25:     printf("\rDan and Sam's Modbus GPIO Expansion - AP000xxxxx V0.1\r\n");
  3816  001DE8  0E23               	movlw	low STR_1
  3817  001DEA  0100               	movlb	0	; () banked
  3818  001DEC  6FBC               	movwf	printf@fmt& (0+255),b
  3819  001DEE  0EFE               	movlw	high STR_1
  3820  001DF0  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  3821  001DF2  EC31  F012         	call	_printf	;wreg free
  3822                           
  3823                           ;main.c: 26:     printf("\rCard Ser No. xxxxxxx \r\n");
  3824  001DF6  0EB4               	movlw	low STR_2
  3825  001DF8  0100               	movlb	0	; () banked
  3826  001DFA  6FBC               	movwf	printf@fmt& (0+255),b
  3827  001DFC  0EFF               	movlw	high STR_2
  3828  001DFE  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  3829  001E00  EC31  F012         	call	_printf	;wreg free
  3830                           
  3831                           ;main.c: 27:     printf("\rCompiled on %s at %s by XC8 version %u\r\n\n",
  3832  001E04  0EC8               	movlw	low STR_3
  3833  001E06  0100               	movlb	0	; () banked
  3834  001E08  6FBC               	movwf	printf@fmt& (0+255),b
  3835  001E0A  0EFE               	movlw	high STR_3
  3836  001E0C  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  3837  001E0E  0EE2               	movlw	low STR_4
  3838  001E10  6FBE               	movwf	(?_printf+2)& (0+255),b
  3839  001E12  0EFF               	movlw	high STR_4
  3840  001E14  6FBF               	movwf	(?_printf+3)& (0+255),b
  3841  001E16  0EEE               	movlw	low STR_5
  3842  001E18  6FC0               	movwf	(?_printf+4)& (0+255),b
  3843  001E1A  0EFF               	movlw	high STR_5
  3844  001E1C  6FC1               	movwf	(?_printf+5)& (0+255),b
  3845  001E1E  0E08               	movlw	8
  3846  001E20  6FC3               	movwf	(?_printf+7)& (0+255),b
  3847  001E22  0E34               	movlw	52
  3848  001E24  6FC2               	movwf	(?_printf+6)& (0+255),b
  3849  001E26  EC31  F012         	call	_printf	;wreg free
  3850                           
  3851                           ;main.c: 29:     printf("\rFunction Codes Supported:\r\n");
  3852  001E2A  0E7C               	movlw	low STR_6
  3853  001E2C  0100               	movlb	0	; () banked
  3854  001E2E  6FBC               	movwf	printf@fmt& (0+255),b
  3855  001E30  0EFF               	movlw	high STR_6
  3856  001E32  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  3857  001E34  EC31  F012         	call	_printf	;wreg free
  3858                           
  3859                           ;main.c: 30:     printf("\r   0x03 - Read Multiple Registers (Max 32x 16bit)\r\n");
  3860  001E38  0E93               	movlw	low STR_7
  3861  001E3A  0100               	movlb	0	; () banked
  3862  001E3C  6FBC               	movwf	printf@fmt& (0+255),b
  3863  001E3E  0EFE               	movlw	high STR_7
  3864  001E40  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  3865  001E42  EC31  F012         	call	_printf	;wreg free
  3866                           
  3867                           ;main.c: 31:     printf("\r   0x10 - Write Multiple Registers (Max 32x 16bit)\r\n\n");
  3868  001E46  0E5C               	movlw	low STR_8
  3869  001E48  0100               	movlb	0	; () banked
  3870  001E4A  6FBC               	movwf	printf@fmt& (0+255),b
  3871  001E4C  0EFE               	movlw	high STR_8
  3872  001E4E  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  3873  001E50  EC31  F012         	call	_printf	;wreg free
  3874                           
  3875                           ;main.c: 32:     printf("\rInitalisation Complete - Ready\r\n\n");
  3876  001E54  0E18               	movlw	low STR_9
  3877  001E56  0100               	movlb	0	; () banked
  3878  001E58  6FBC               	movwf	printf@fmt& (0+255),b
  3879  001E5A  0EFF               	movlw	high STR_9
  3880  001E5C  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  3881  001E5E  EC31  F012         	call	_printf	;wreg free
  3882  001E62  0012               	return		;funcret
  3883  001E64                     __end_of_InitialiseString:
  3884                           	opt callstack 0
  3885                           
  3886 ;; *************** function _printf *****************
  3887 ;; Defined at:
  3888 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
  3889 ;; Parameters:    Size  Location     Type
  3890 ;;  fmt             2   29[BANK0 ] PTR const unsigned char 
  3891 ;;		 -> STR_15(27), STR_14(21), STR_13(37), STR_12(8), 
  3892 ;;		 -> STR_11(31), STR_10(34), STR_9(35), STR_8(55), 
  3893 ;;		 -> STR_7(53), STR_6(29), STR_3(43), STR_2(25), 
  3894 ;;		 -> STR_1(57), 
  3895 ;; Auto vars:     Size  Location     Type
  3896 ;;  ap              2   39[BANK0 ] PTR void [1]
  3897 ;;		 -> ?_printf(2), 
  3898 ;;  ret             2    0        int 
  3899 ;; Return value:  Size  Location     Type
  3900 ;;                  2   29[BANK0 ] int 
  3901 ;; Registers used:
  3902 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3903 ;; Tracked objects:
  3904 ;;		On entry : 0/0
  3905 ;;		On exit  : 0/0
  3906 ;;		Unchanged: 0/0
  3907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3908 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3909 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3911 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3912 ;;Total ram usage:       12 bytes
  3913 ;; Hardware stack levels used:    1
  3914 ;; Hardware stack levels required when called:   12
  3915 ;; This function calls:
  3916 ;;		_vfprintf
  3917 ;; This function is called by:
  3918 ;;		_InitialiseString
  3919 ;;		_PrintModbus
  3920 ;;		_checkCRC
  3921 ;;		_ModbusRx
  3922 ;;		_generateCRC
  3923 ;; This function uses a non-reentrant model
  3924 ;;
  3925                           
  3926                           	psect	text27
  3927  002462                     __ptext27:
  3928                           	opt callstack 0
  3929  002462                     _printf:
  3930                           	opt callstack 17
  3931  002462  0EBE               	movlw	low (?_printf+2)
  3932  002464  0100               	movlb	0	; () banked
  3933  002466  6FC6               	movwf	printf@ap& (0+255),b
  3934  002468  0E00               	movlw	high (?_printf+2)
  3935  00246A  6FC7               	movwf	(printf@ap+1)& (0+255),b
  3936  00246C                     
  3937                           ; BSR set to: 0
  3938  00246C  0E00               	movlw	0
  3939  00246E  6FB6               	movwf	vfprintf@fp& (0+255),b
  3940  002470  0E00               	movlw	0
  3941  002472  6FB7               	movwf	(vfprintf@fp+1)& (0+255),b
  3942  002474  C0BC  F0B8         	movff	printf@fmt,vfprintf@fmt
  3943  002478  C0BD  F0B9         	movff	printf@fmt+1,vfprintf@fmt+1
  3944  00247C  0EC6               	movlw	low printf@ap
  3945  00247E  6FBA               	movwf	vfprintf@ap& (0+255),b
  3946  002480  0E00               	movlw	high printf@ap
  3947  002482  6FBB               	movwf	(vfprintf@ap+1)& (0+255),b
  3948  002484  EC68  F00F         	call	_vfprintf	;wreg free
  3949  002488  0012               	return		;funcret
  3950  00248A                     __end_of_printf:
  3951                           	opt callstack 0
  3952                           
  3953 ;; *************** function _vfprintf *****************
  3954 ;; Defined at:
  3955 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3956 ;; Parameters:    Size  Location     Type
  3957 ;;  fp              2   23[BANK0 ] PTR struct _IO_FILE
  3958 ;;		 -> NULL(0), 
  3959 ;;  fmt             2   25[BANK0 ] PTR const unsigned char 
  3960 ;;		 -> STR_15(27), STR_14(21), STR_13(37), STR_12(8), 
  3961 ;;		 -> STR_11(31), STR_10(34), STR_9(35), STR_8(55), 
  3962 ;;		 -> STR_7(53), STR_6(29), STR_3(43), STR_2(25), 
  3963 ;;		 -> STR_1(57), 
  3964 ;;  ap              2   27[BANK0 ] PTR PTR void 
  3965 ;;		 -> printf@ap(2), 
  3966 ;; Auto vars:     Size  Location     Type
  3967 ;;  cfmt            2   82[COMRAM] PTR unsigned char 
  3968 ;;		 -> STR_15(27), STR_14(21), STR_13(37), STR_12(8), 
  3969 ;;		 -> STR_11(31), STR_10(34), STR_9(35), STR_8(55), 
  3970 ;;		 -> STR_7(53), STR_6(29), STR_3(43), STR_2(25), 
  3971 ;;		 -> STR_1(57), 
  3972 ;; Return value:  Size  Location     Type
  3973 ;;                  2   23[BANK0 ] int 
  3974 ;; Registers used:
  3975 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3976 ;; Tracked objects:
  3977 ;;		On entry : 0/0
  3978 ;;		On exit  : 0/0
  3979 ;;		Unchanged: 0/0
  3980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3981 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3982 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3984 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3985 ;;Total ram usage:        8 bytes
  3986 ;; Hardware stack levels used:    1
  3987 ;; Hardware stack levels required when called:   11
  3988 ;; This function calls:
  3989 ;;		_vfpfcnvrt
  3990 ;; This function is called by:
  3991 ;;		_printf
  3992 ;; This function uses a non-reentrant model
  3993 ;;
  3994                           
  3995                           	psect	text28
  3996  001ED0                     __ptext28:
  3997                           	opt callstack 0
  3998  001ED0                     _vfprintf:
  3999                           	opt callstack 17
  4000  001ED0                     
  4001                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  4002  001ED0  C0B8  F053         	movff	vfprintf@fmt,vfprintf@cfmt
  4003  001ED4  C0B9  F054         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4004  001ED8                     
  4005                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  4006  001ED8  0E00               	movlw	0
  4007  001EDA  0100               	movlb	0	; () banked
  4008  001EDC  6F89               	movwf	(_nout+1)& (0+255),b
  4009  001EDE  0E00               	movlw	0
  4010  001EE0  6F88               	movwf	_nout& (0+255),b
  4011                           
  4012                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4013  001EE2  EF86  F00F         	goto	l4800
  4014  001EE6                     l4798:
  4015                           
  4016                           ; BSR set to: 0
  4017                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  4018  001EE6  C0B6  F049         	movff	vfprintf@fp,vfpfcnvrt@fp
  4019  001EEA  C0B7  F04A         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4020  001EEE  0E53               	movlw	low vfprintf@cfmt
  4021  001EF0  6E4B               	movwf	vfpfcnvrt@fmt^0,c
  4022  001EF2  0E00               	movlw	high vfprintf@cfmt
  4023  001EF4  6E4C               	movwf	(vfpfcnvrt@fmt+1)^0,c
  4024  001EF6  C0BA  F04D         	movff	vfprintf@ap,vfpfcnvrt@ap
  4025  001EFA  C0BB  F04E         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4026  001EFE  EC95  F000         	call	_vfpfcnvrt	;wreg free
  4027  001F02  5049               	movf	?_vfpfcnvrt^0,w,c
  4028  001F04  0100               	movlb	0	; () banked
  4029  001F06  2788               	addwf	_nout& (0+255),f,b
  4030  001F08  504A               	movf	(?_vfpfcnvrt+1)^0,w,c
  4031  001F0A  2389               	addwfc	(_nout+1)& (0+255),f,b
  4032  001F0C                     l4800:
  4033                           
  4034                           ; BSR set to: 0
  4035                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4036  001F0C  C053  FFF6         	movff	vfprintf@cfmt,tblptrl
  4037  001F10  C054  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4038  001F14                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4039  001F14  6AF8               	clrf	tblptru,c
  4040  001F16                     	endif
  4041  001F16                     	if	0	;tblptru may be non-zero
  4042  001F16                     	endif
  4043  001F16  0008               	tblrd		*
  4044  001F18  50F5               	movf	tablat,w,c
  4045  001F1A  0900               	iorlw	0
  4046  001F1C  A4D8               	btfss	status,2,c
  4047  001F1E  EF93  F00F         	goto	u4961
  4048  001F22  EF95  F00F         	goto	u4960
  4049  001F26                     u4961:
  4050  001F26  EF73  F00F         	goto	l4798
  4051  001F2A                     u4960:
  4052  001F2A                     
  4053                           ; BSR set to: 0
  4054                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  4055  001F2A  C088  F0B6         	movff	_nout,?_vfprintf
  4056  001F2E  C089  F0B7         	movff	_nout+1,?_vfprintf+1
  4057  001F32                     
  4058                           ; BSR set to: 0
  4059  001F32  0012               	return		;funcret
  4060  001F34                     __end_of_vfprintf:
  4061                           	opt callstack 0
  4062                           
  4063 ;; *************** function _vfpfcnvrt *****************
  4064 ;; Defined at:
  4065 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4066 ;; Parameters:    Size  Location     Type
  4067 ;;  fp              2   72[COMRAM] PTR struct _IO_FILE
  4068 ;;		 -> NULL(0), 
  4069 ;;  fmt             2   74[COMRAM] PTR PTR unsigned char 
  4070 ;;		 -> vfprintf@cfmt(2), 
  4071 ;;  ap              2   76[COMRAM] PTR PTR void 
  4072 ;;		 -> printf@ap(2), 
  4073 ;; Auto vars:     Size  Location     Type
  4074 ;;  llu             8   15[BANK0 ] unsigned long long 
  4075 ;;  ll              8    0[BANK0 ] long long 
  4076 ;;  f               4    0        long long 
  4077 ;;  vp              3    0        PTR void 
  4078 ;;  ct              3    0        unsigned char [3]
  4079 ;;  done            2   11[BANK0 ] int 
  4080 ;;  cp              2    8[BANK0 ] PTR unsigned char 
  4081 ;;		 -> ?_printf(2), STR_5(9), STR_4(12), 
  4082 ;;  i               2    0        int 
  4083 ;;  c               1   10[BANK0 ] unsigned char 
  4084 ;; Return value:  Size  Location     Type
  4085 ;;                  2   72[COMRAM] int 
  4086 ;; Registers used:
  4087 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4088 ;; Tracked objects:
  4089 ;;		On entry : 0/0
  4090 ;;		On exit  : 0/0
  4091 ;;		Unchanged: 0/0
  4092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4093 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4094 ;;      Locals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4095 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4096 ;;      Totals:        10      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4097 ;;Total ram usage:       33 bytes
  4098 ;; Hardware stack levels used:    1
  4099 ;; Hardware stack levels required when called:   10
  4100 ;; This function calls:
  4101 ;;		_atoi
  4102 ;;		_dtoa
  4103 ;;		_fputc
  4104 ;;		_isdigit
  4105 ;;		_stoa
  4106 ;;		_utoa
  4107 ;;		_xtoa
  4108 ;; This function is called by:
  4109 ;;		_vfprintf
  4110 ;; This function uses a non-reentrant model
  4111 ;;
  4112                           
  4113                           	psect	text29
  4114  00012A                     __ptext29:
  4115                           	opt callstack 0
  4116  00012A                     _vfpfcnvrt:
  4117                           	opt callstack 17
  4118  00012A                     
  4119                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  4120  00012A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4121  00012E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4122  000132  CFDE FFF6          	movff	postinc2,tblptrl
  4123  000136  CFDD FFF7          	movff	postdec2,tblptrh
  4124  00013A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4125  00013A  6AF8               	clrf	tblptru,c
  4126  00013C                     	endif
  4127  00013C                     	if	0	;tblptru may be non-zero
  4128  00013C                     	endif
  4129  00013C  0008               	tblrd		*
  4130  00013E  50F5               	movf	tablat,w,c
  4131  000140  0A25               	xorlw	37
  4132  000142  A4D8               	btfss	status,2,c
  4133  000144  EFA6  F000         	goto	u4811
  4134  000148  EFA8  F000         	goto	u4810
  4135  00014C                     u4811:
  4136  00014C  EF3D  F003         	goto	l4776
  4137  000150                     u4810:
  4138  000150                     
  4139                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  4140  000150  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4141  000154  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4142  000158  2ADE               	incf	postinc2,f,c
  4143  00015A  0E00               	movlw	0
  4144  00015C  22DD               	addwfc	postdec2,f,c
  4145  00015E                     
  4146                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  4147  00015E  0E00               	movlw	0
  4148  000160  0100               	movlb	0	; () banked
  4149  000162  6F8B               	movwf	(_width+1)& (0+255),b
  4150  000164  0E00               	movlw	0
  4151  000166  6F8A               	movwf	_width& (0+255),b
  4152  000168  C08A  F056         	movff	_width,_flags
  4153  00016C  C08B  F057         	movff	_width+1,_flags+1
  4154  000170                     
  4155                           ; BSR set to: 0
  4156                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  4157  000170  698C               	setf	_prec& (0+255),b
  4158  000172  698D               	setf	(_prec+1)& (0+255),b
  4159  000174                     
  4160                           ; BSR set to: 0
  4161                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  4162  000174  0E00               	movlw	0
  4163  000176  6FAB               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  4164  000178  0E00               	movlw	0
  4165  00017A  6FAA               	movwf	vfpfcnvrt@done& (0+255),b
  4166                           
  4167                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  4168  00017C  EF07  F001         	goto	l4698
  4169  000180                     l4672:
  4170                           
  4171                           ; BSR set to: 0
  4172                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  4173  000180  8056               	bsf	_flags^0,0,c
  4174  000182                     l4674:
  4175                           
  4176                           ; BSR set to: 0
  4177                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  4178  000182  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4179  000186  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4180  00018A  2ADE               	incf	postinc2,f,c
  4181  00018C  0E00               	movlw	0
  4182  00018E  22DD               	addwfc	postdec2,f,c
  4183                           
  4184                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  4185  000190  EF07  F001         	goto	l4698
  4186  000194                     l4676:
  4187                           
  4188                           ; BSR set to: 0
  4189                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  4190  000194  8256               	bsf	_flags^0,1,c
  4191  000196  EFC1  F000         	goto	l4674
  4192  00019A                     l4680:
  4193                           
  4194                           ; BSR set to: 0
  4195                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  4196  00019A  8456               	bsf	_flags^0,2,c
  4197  00019C  EFC1  F000         	goto	l4674
  4198  0001A0                     l4684:
  4199                           
  4200                           ; BSR set to: 0
  4201                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  4202  0001A0  8656               	bsf	_flags^0,3,c
  4203  0001A2  EFC1  F000         	goto	l4674
  4204  0001A6                     l4688:
  4205                           
  4206                           ; BSR set to: 0
  4207                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  4208  0001A6  8856               	bsf	_flags^0,4,c
  4209  0001A8  EFC1  F000         	goto	l4674
  4210  0001AC                     l4692:
  4211                           
  4212                           ; BSR set to: 0
  4213                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  4214  0001AC  0E00               	movlw	0
  4215  0001AE  6FAB               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  4216  0001B0  0E01               	movlw	1
  4217  0001B2  6FAA               	movwf	vfpfcnvrt@done& (0+255),b
  4218                           
  4219                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  4220  0001B4  EF07  F001         	goto	l4698
  4221  0001B8                     l4696:
  4222                           
  4223                           ; BSR set to: 0
  4224  0001B8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4225  0001BC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4226  0001C0  CFDE FFF6          	movff	postinc2,tblptrl
  4227  0001C4  CFDD FFF7          	movff	postdec2,tblptrh
  4228  0001C8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4229  0001C8  6AF8               	clrf	tblptru,c
  4230  0001CA                     	endif
  4231  0001CA                     	if	0	;tblptru may be non-zero
  4232  0001CA                     	endif
  4233  0001CA  0008               	tblrd		*
  4234  0001CC  50F5               	movf	tablat,w,c
  4235  0001CE  6E4F               	movwf	??_vfpfcnvrt^0,c
  4236  0001D0  6A50               	clrf	(??_vfpfcnvrt+1)^0,c
  4237                           
  4238                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4239                           ; Switch size 1, requested type "simple"
  4240                           ; Number of cases is 1, Range of values is 0 to 0
  4241                           ; switch strategies available:
  4242                           ; Name         Instructions Cycles
  4243                           ; simple_byte            4     3 (average)
  4244                           ;	Chosen strategy is simple_byte
  4245  0001D2  5050               	movf	(??_vfpfcnvrt+1)^0,w,c
  4246  0001D4  0A00               	xorlw	0	; case 0
  4247  0001D6  B4D8               	btfsc	status,2,c
  4248  0001D8  EFF0  F000         	goto	l5216
  4249  0001DC  EFD6  F000         	goto	l4692
  4250  0001E0                     l5216:
  4251                           
  4252                           ; BSR set to: 0
  4253                           ; Switch size 1, requested type "simple"
  4254                           ; Number of cases is 5, Range of values is 32 to 48
  4255                           ; switch strategies available:
  4256                           ; Name         Instructions Cycles
  4257                           ; simple_byte           16     9 (average)
  4258                           ;	Chosen strategy is simple_byte
  4259  0001E0  504F               	movf	??_vfpfcnvrt^0,w,c
  4260  0001E2  0A20               	xorlw	32	; case 32
  4261  0001E4  B4D8               	btfsc	status,2,c
  4262  0001E6  EFD0  F000         	goto	l4684
  4263  0001EA  0A03               	xorlw	3	; case 35
  4264  0001EC  B4D8               	btfsc	status,2,c
  4265  0001EE  EFD3  F000         	goto	l4688
  4266  0001F2  0A08               	xorlw	8	; case 43
  4267  0001F4  B4D8               	btfsc	status,2,c
  4268  0001F6  EFCD  F000         	goto	l4680
  4269  0001FA  0A06               	xorlw	6	; case 45
  4270  0001FC  B4D8               	btfsc	status,2,c
  4271  0001FE  EFC0  F000         	goto	l4672
  4272  000202  0A1D               	xorlw	29	; case 48
  4273  000204  B4D8               	btfsc	status,2,c
  4274  000206  EFCA  F000         	goto	l4676
  4275  00020A  EFD6  F000         	goto	l4692
  4276  00020E                     l4698:
  4277                           
  4278                           ; BSR set to: 0
  4279                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  4280  00020E  51AA               	movf	vfpfcnvrt@done& (0+255),w,b
  4281  000210  11AB               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  4282  000212  B4D8               	btfsc	status,2,c
  4283  000214  EF0E  F001         	goto	u4821
  4284  000218  EF10  F001         	goto	u4820
  4285  00021C                     u4821:
  4286  00021C  EFDC  F000         	goto	l4696
  4287  000220                     u4820:
  4288  000220                     
  4289                           ; BSR set to: 0
  4290                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  4291  000220  A056               	btfss	_flags^0,0,c
  4292  000222  EF15  F001         	goto	u4831
  4293  000226  EF17  F001         	goto	u4830
  4294  00022A                     u4831:
  4295  00022A  EF18  F001         	goto	l4702
  4296  00022E                     u4830:
  4297  00022E                     
  4298                           ; BSR set to: 0
  4299                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  4300  00022E  9256               	bcf	_flags^0,1,c
  4301  000230                     l4702:
  4302                           
  4303                           ; BSR set to: 0
  4304                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  4305  000230  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4306  000234  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4307  000238  CFDE FFF6          	movff	postinc2,tblptrl
  4308  00023C  CFDD FFF7          	movff	postdec2,tblptrh
  4309  000240                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4310  000240  6AF8               	clrf	tblptru,c
  4311  000242                     	endif
  4312  000242                     	if	0	;tblptru may be non-zero
  4313  000242                     	endif
  4314  000242  0008               	tblrd		*
  4315  000244  50F5               	movf	tablat,w,c
  4316  000246  0A2A               	xorlw	42
  4317  000248  A4D8               	btfss	status,2,c
  4318  00024A  EF29  F001         	goto	u4841
  4319  00024E  EF2B  F001         	goto	u4840
  4320  000252                     u4841:
  4321  000252  EF54  F001         	goto	l4710
  4322  000256                     u4840:
  4323  000256                     
  4324                           ; BSR set to: 0
  4325                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  4326  000256  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4327  00025A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4328  00025E  2ADE               	incf	postinc2,f,c
  4329  000260  0E00               	movlw	0
  4330  000262  22DD               	addwfc	postdec2,f,c
  4331                           
  4332                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  4333  000264  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4334  000268  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4335  00026C  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  4336  000270  0E02               	movlw	2
  4337  000272  26DE               	addwf	postinc2,f,c
  4338  000274  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  4339  000278  0E00               	movlw	0
  4340  00027A  22DD               	addwfc	postdec2,f,c
  4341  00027C  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4342  000280  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4343  000284  CFDE F08A          	movff	postinc2,_width
  4344  000288  CFDD F08B          	movff	postdec2,_width+1
  4345  00028C                     
  4346                           ; BSR set to: 0
  4347                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  4348  00028C  BF8B               	btfsc	(_width+1)& (0+255),7,b
  4349  00028E  EF4D  F001         	goto	u4850
  4350  000292  EF4B  F001         	goto	u4851
  4351  000296                     u4851:
  4352  000296  EF99  F001         	goto	l4720
  4353  00029A                     u4850:
  4354  00029A                     
  4355                           ; BSR set to: 0
  4356                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  4357  00029A  8056               	bsf	_flags^0,0,c
  4358                           
  4359                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  4360  00029C  6D8A               	negf	_width& (0+255),b
  4361  00029E  1F8B               	comf	(_width+1)& (0+255),f,b
  4362  0002A0  B0D8               	btfsc	status,0,c
  4363  0002A2  2B8B               	incf	(_width+1)& (0+255),f,b
  4364  0002A4  EF99  F001         	goto	l4720
  4365  0002A8                     l4710:
  4366                           
  4367                           ; BSR set to: 0
  4368                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  4369  0002A8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4370  0002AC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4371  0002B0  CFDE F00C          	movff	postinc2,atoi@s
  4372  0002B4  CFDD F00D          	movff	postdec2,atoi@s+1
  4373  0002B8  EC03  F008         	call	_atoi	;wreg free
  4374  0002BC  C00C  F08A         	movff	?_atoi,_width
  4375  0002C0  C00D  F08B         	movff	?_atoi+1,_width+1
  4376                           
  4377                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4378  0002C4  EF6B  F001         	goto	l4714
  4379  0002C8                     l4712:
  4380                           
  4381                           ; BSR set to: 0
  4382                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  4383  0002C8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4384  0002CC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4385  0002D0  2ADE               	incf	postinc2,f,c
  4386  0002D2  0E00               	movlw	0
  4387  0002D4  22DD               	addwfc	postdec2,f,c
  4388  0002D6                     l4714:
  4389  0002D6  0ED0               	movlw	208
  4390  0002D8  6E4F               	movwf	??_vfpfcnvrt^0,c
  4391  0002DA  0EFF               	movlw	255
  4392  0002DC  6E50               	movwf	(??_vfpfcnvrt+1)^0,c
  4393  0002DE  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4394  0002E2  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4395  0002E6  CFDE FFF6          	movff	postinc2,tblptrl
  4396  0002EA  CFDD FFF7          	movff	postdec2,tblptrh
  4397  0002EE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4398  0002EE  6AF8               	clrf	tblptru,c
  4399  0002F0                     	endif
  4400  0002F0                     	if	0	;tblptru may be non-zero
  4401  0002F0                     	endif
  4402  0002F0  0008               	tblrd		*
  4403  0002F2  50F5               	movf	tablat,w,c
  4404  0002F4  6E51               	movwf	(??_vfpfcnvrt+2)^0,c
  4405  0002F6  6A52               	clrf	(??_vfpfcnvrt+3)^0,c
  4406  0002F8  504F               	movf	??_vfpfcnvrt^0,w,c
  4407  0002FA  2651               	addwf	(??_vfpfcnvrt+2)^0,f,c
  4408  0002FC  5050               	movf	(??_vfpfcnvrt+1)^0,w,c
  4409  0002FE  2252               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  4410  000300  5052               	movf	(??_vfpfcnvrt+3)^0,w,c
  4411  000302  E10A               	bnz	u4860
  4412  000304  0E0A               	movlw	10
  4413  000306  5C51               	subwf	(??_vfpfcnvrt+2)^0,w,c
  4414  000308  A0D8               	btfss	status,0,c
  4415  00030A  EF89  F001         	goto	u4861
  4416  00030E  EF8C  F001         	goto	u4860
  4417  000312                     u4861:
  4418  000312  0E01               	movlw	1
  4419  000314  EF8D  F001         	goto	u4870
  4420  000318                     u4860:
  4421  000318  0E00               	movlw	0
  4422  00031A                     u4870:
  4423  00031A  0100               	movlb	0	; () banked
  4424  00031C  6FAC               	movwf	_vfpfcnvrt$1323& (0+255),b
  4425  00031E  6BAD               	clrf	(_vfpfcnvrt$1323+1)& (0+255),b
  4426  000320                     
  4427                           ; BSR set to: 0
  4428  000320  51AC               	movf	_vfpfcnvrt$1323& (0+255),w,b
  4429  000322  11AD               	iorwf	(_vfpfcnvrt$1323+1)& (0+255),w,b
  4430  000324  A4D8               	btfss	status,2,c
  4431  000326  EF97  F001         	goto	u4881
  4432  00032A  EF99  F001         	goto	u4880
  4433  00032E                     u4881:
  4434  00032E  EF64  F001         	goto	l4712
  4435  000332                     u4880:
  4436  000332                     l4720:
  4437                           
  4438                           ; BSR set to: 0
  4439                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4440  000332  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4441  000336  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4442  00033A  CFDE FFF6          	movff	postinc2,tblptrl
  4443  00033E  CFDD FFF7          	movff	postdec2,tblptrh
  4444  000342                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4445  000342  6AF8               	clrf	tblptru,c
  4446  000344                     	endif
  4447  000344                     	if	0	;tblptru may be non-zero
  4448  000344                     	endif
  4449  000344  0008               	tblrd		*
  4450  000346  50F5               	movf	tablat,w,c
  4451  000348  0A64               	xorlw	100
  4452  00034A  B4D8               	btfsc	status,2,c
  4453  00034C  EFAA  F001         	goto	u4891
  4454  000350  EFAC  F001         	goto	u4890
  4455  000354                     u4891:
  4456  000354  EFBF  F001         	goto	l4724
  4457  000358                     u4890:
  4458  000358                     
  4459                           ; BSR set to: 0
  4460  000358  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4461  00035C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4462  000360  CFDE FFF6          	movff	postinc2,tblptrl
  4463  000364  CFDD FFF7          	movff	postdec2,tblptrh
  4464  000368                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4465  000368  6AF8               	clrf	tblptru,c
  4466  00036A                     	endif
  4467  00036A                     	if	0	;tblptru may be non-zero
  4468  00036A                     	endif
  4469  00036A  0008               	tblrd		*
  4470  00036C  50F5               	movf	tablat,w,c
  4471  00036E  0A69               	xorlw	105
  4472  000370  A4D8               	btfss	status,2,c
  4473  000372  EFBD  F001         	goto	u4901
  4474  000376  EFBF  F001         	goto	u4900
  4475  00037A                     u4901:
  4476  00037A  EFFF  F001         	goto	l4730
  4477  00037E                     u4900:
  4478  00037E                     l4724:
  4479                           
  4480                           ; BSR set to: 0
  4481                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  4482  00037E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4483  000382  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4484  000386  2ADE               	incf	postinc2,f,c
  4485  000388  0E00               	movlw	0
  4486  00038A  22DD               	addwfc	postdec2,f,c
  4487                           
  4488                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4489  00038C  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4490  000390  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4491  000394  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  4492  000398  0E02               	movlw	2
  4493  00039A  26DE               	addwf	postinc2,f,c
  4494  00039C  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  4495  0003A0  0E00               	movlw	0
  4496  0003A2  22DD               	addwfc	postdec2,f,c
  4497  0003A4  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4498  0003A8  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4499  0003AC  CFDE F09F          	movff	postinc2,vfpfcnvrt@ll
  4500  0003B0  CFDD F0A0          	movff	postdec2,vfpfcnvrt@ll+1
  4501  0003B4  0E00               	movlw	0
  4502  0003B6  BFA0               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  4503  0003B8  0EFF               	movlw	-1
  4504  0003BA  6FA1               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4505  0003BC  6FA2               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4506  0003BE  6FA3               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4507  0003C0  6FA4               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4508  0003C2  6FA5               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4509  0003C4  6FA6               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4510  0003C6                     
  4511                           ; BSR set to: 0
  4512                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  4513  0003C6  C049  F022         	movff	vfpfcnvrt@fp,dtoa@fp
  4514  0003CA  C04A  F023         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4515  0003CE  C09F  F024         	movff	vfpfcnvrt@ll,dtoa@d
  4516  0003D2  C0A0  F025         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4517  0003D6  C0A1  F026         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4518  0003DA  C0A2  F027         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4519  0003DE  C0A3  F028         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4520  0003E2  C0A4  F029         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4521  0003E6  C0A5  F02A         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4522  0003EA  C0A6  F02B         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4523  0003EE  EC5A  F003         	call	_dtoa	;wreg free
  4524  0003F2  C022  F049         	movff	?_dtoa,?_vfpfcnvrt
  4525  0003F6  C023  F04A         	movff	?_dtoa+1,?_vfpfcnvrt+1
  4526  0003FA  EF59  F003         	goto	l836
  4527  0003FE                     l4730:
  4528                           
  4529                           ; BSR set to: 0
  4530                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  4531  0003FE  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4532  000402  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4533  000406  CFDE FFF6          	movff	postinc2,tblptrl
  4534  00040A  CFDD FFF7          	movff	postdec2,tblptrh
  4535  00040E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4536  00040E  6AF8               	clrf	tblptru,c
  4537  000410                     	endif
  4538  000410                     	if	0	;tblptru may be non-zero
  4539  000410                     	endif
  4540  000410  0008               	tblrd		*
  4541  000412  50F5               	movf	tablat,w,c
  4542  000414  0A73               	xorlw	115
  4543  000416  A4D8               	btfss	status,2,c
  4544  000418  EF10  F002         	goto	u4911
  4545  00041C  EF12  F002         	goto	u4910
  4546  000420                     u4911:
  4547  000420  EF3D  F002         	goto	l4738
  4548  000424                     u4910:
  4549  000424                     
  4550                           ; BSR set to: 0
  4551                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  4552  000424  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4553  000428  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4554  00042C  2ADE               	incf	postinc2,f,c
  4555  00042E  0E00               	movlw	0
  4556  000430  22DD               	addwfc	postdec2,f,c
  4557                           
  4558                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  4559  000432  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4560  000436  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4561  00043A  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  4562  00043E  0E02               	movlw	2
  4563  000440  26DE               	addwf	postinc2,f,c
  4564  000442  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  4565  000446  0E00               	movlw	0
  4566  000448  22DD               	addwfc	postdec2,f,c
  4567  00044A  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4568  00044E  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4569  000452  CFDE F0A7          	movff	postinc2,vfpfcnvrt@cp
  4570  000456  CFDD F0A8          	movff	postdec2,vfpfcnvrt@cp+1
  4571  00045A                     
  4572                           ; BSR set to: 0
  4573                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  4574  00045A  C049  F010         	movff	vfpfcnvrt@fp,stoa@fp
  4575  00045E  C04A  F011         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  4576  000462  C0A7  F012         	movff	vfpfcnvrt@cp,stoa@s
  4577  000466  C0A8  F013         	movff	vfpfcnvrt@cp+1,stoa@s+1
  4578  00046A  EC36  F007         	call	_stoa	;wreg free
  4579  00046E  C010  F049         	movff	?_stoa,?_vfpfcnvrt
  4580  000472  C011  F04A         	movff	?_stoa+1,?_vfpfcnvrt+1
  4581  000476  EF59  F003         	goto	l836
  4582  00047A                     l4738:
  4583                           
  4584                           ; BSR set to: 0
  4585                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  4586  00047A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4587  00047E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4588  000482  CFDE FFF6          	movff	postinc2,tblptrl
  4589  000486  CFDD FFF7          	movff	postdec2,tblptrh
  4590  00048A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4591  00048A  6AF8               	clrf	tblptru,c
  4592  00048C                     	endif
  4593  00048C                     	if	0	;tblptru may be non-zero
  4594  00048C                     	endif
  4595  00048C  0008               	tblrd		*
  4596  00048E  50F5               	movf	tablat,w,c
  4597  000490  0A75               	xorlw	117
  4598  000492  A4D8               	btfss	status,2,c
  4599  000494  EF4E  F002         	goto	u4921
  4600  000498  EF50  F002         	goto	u4920
  4601  00049C                     u4921:
  4602  00049C  EF91  F002         	goto	l4746
  4603  0004A0                     u4920:
  4604  0004A0                     
  4605                           ; BSR set to: 0
  4606                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  4607  0004A0  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4608  0004A4  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4609  0004A8  2ADE               	incf	postinc2,f,c
  4610  0004AA  0E00               	movlw	0
  4611  0004AC  22DD               	addwfc	postdec2,f,c
  4612                           
  4613                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  4614  0004AE  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4615  0004B2  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4616  0004B6  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  4617  0004BA  0E02               	movlw	2
  4618  0004BC  26DE               	addwf	postinc2,f,c
  4619  0004BE  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  4620  0004C2  0E00               	movlw	0
  4621  0004C4  22DD               	addwfc	postdec2,f,c
  4622  0004C6  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4623  0004CA  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4624  0004CE  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
  4625  0004D2  CFDD F052          	movff	postdec2,??_vfpfcnvrt+3
  4626  0004D6  C051  F0AE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4627  0004DA  C052  F0AF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4628  0004DE  6BB0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  4629  0004E0  6BB1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  4630  0004E2  6BB2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  4631  0004E4  6BB3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  4632  0004E6  6BB4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  4633  0004E8  6BB5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  4634  0004EA                     
  4635                           ; BSR set to: 0
  4636                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
  4637  0004EA  C049  F022         	movff	vfpfcnvrt@fp,utoa@fp
  4638  0004EE  C04A  F023         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  4639  0004F2  C0AE  F024         	movff	vfpfcnvrt@llu,utoa@d
  4640  0004F6  C0AF  F025         	movff	vfpfcnvrt@llu+1,utoa@d+1
  4641  0004FA  C0B0  F026         	movff	vfpfcnvrt@llu+2,utoa@d+2
  4642  0004FE  C0B1  F027         	movff	vfpfcnvrt@llu+3,utoa@d+3
  4643  000502  C0B2  F028         	movff	vfpfcnvrt@llu+4,utoa@d+4
  4644  000506  C0B3  F029         	movff	vfpfcnvrt@llu+5,utoa@d+5
  4645  00050A  C0B4  F02A         	movff	vfpfcnvrt@llu+6,utoa@d+6
  4646  00050E  C0B5  F02B         	movff	vfpfcnvrt@llu+7,utoa@d+7
  4647  000512  EC35  F006         	call	_utoa	;wreg free
  4648  000516  C022  F049         	movff	?_utoa,?_vfpfcnvrt
  4649  00051A  C023  F04A         	movff	?_utoa+1,?_vfpfcnvrt+1
  4650  00051E  EF59  F003         	goto	l836
  4651  000522                     l4746:
  4652                           
  4653                           ; BSR set to: 0
  4654                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  4655  000522  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4656  000526  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4657  00052A  CFDE FFF6          	movff	postinc2,tblptrl
  4658  00052E  CFDD FFF7          	movff	postdec2,tblptrh
  4659  000532                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4660  000532  6AF8               	clrf	tblptru,c
  4661  000534                     	endif
  4662  000534                     	if	0	;tblptru may be non-zero
  4663  000534                     	endif
  4664  000534  0008               	tblrd		*
  4665  000536  50F5               	movf	tablat,w,c
  4666  000538  0A78               	xorlw	120
  4667  00053A  B4D8               	btfsc	status,2,c
  4668  00053C  EFA2  F002         	goto	u4931
  4669  000540  EFA4  F002         	goto	u4930
  4670  000544                     u4931:
  4671  000544  EFB7  F002         	goto	l4750
  4672  000548                     u4930:
  4673  000548                     
  4674                           ; BSR set to: 0
  4675  000548  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4676  00054C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4677  000550  CFDE FFF6          	movff	postinc2,tblptrl
  4678  000554  CFDD FFF7          	movff	postdec2,tblptrh
  4679  000558                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4680  000558  6AF8               	clrf	tblptru,c
  4681  00055A                     	endif
  4682  00055A                     	if	0	;tblptru may be non-zero
  4683  00055A                     	endif
  4684  00055A  0008               	tblrd		*
  4685  00055C  50F5               	movf	tablat,w,c
  4686  00055E  0A58               	xorlw	88
  4687  000560  A4D8               	btfss	status,2,c
  4688  000562  EFB5  F002         	goto	u4941
  4689  000566  EFB7  F002         	goto	u4940
  4690  00056A                     u4941:
  4691  00056A  EF06  F003         	goto	l4760
  4692  00056E                     u4940:
  4693  00056E                     l4750:
  4694                           
  4695                           ; BSR set to: 0
  4696                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  4697  00056E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4698  000572  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4699  000576  CFDE FFF6          	movff	postinc2,tblptrl
  4700  00057A  CFDD FFF7          	movff	postdec2,tblptrh
  4701  00057E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4702  00057E  6AF8               	clrf	tblptru,c
  4703  000580                     	endif
  4704  000580                     	if	0	;tblptru may be non-zero
  4705  000580                     	endif
  4706  000580  0008               	tblrd		*
  4707  000582  CFF5 F0A9          	movff	tablat,vfpfcnvrt@c
  4708  000586                     
  4709                           ; BSR set to: 0
  4710                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  4711  000586  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4712  00058A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4713  00058E  2ADE               	incf	postinc2,f,c
  4714  000590  0E00               	movlw	0
  4715  000592  22DD               	addwfc	postdec2,f,c
  4716  000594                     
  4717                           ; BSR set to: 0
  4718                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  4719  000594  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4720  000598  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4721  00059C  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  4722  0005A0  0E02               	movlw	2
  4723  0005A2  26DE               	addwf	postinc2,f,c
  4724  0005A4  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  4725  0005A8  0E00               	movlw	0
  4726  0005AA  22DD               	addwfc	postdec2,f,c
  4727  0005AC  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4728  0005B0  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4729  0005B4  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
  4730  0005B8  CFDD F052          	movff	postdec2,??_vfpfcnvrt+3
  4731  0005BC  C051  F0AE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4732  0005C0  C052  F0AF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4733  0005C4  6BB0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  4734  0005C6  6BB1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  4735  0005C8  6BB2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  4736  0005CA  6BB3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  4737  0005CC  6BB4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  4738  0005CE  6BB5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  4739  0005D0                     
  4740                           ; BSR set to: 0
  4741                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
  4742  0005D0  C049  F022         	movff	vfpfcnvrt@fp,xtoa@fp
  4743  0005D4  C04A  F023         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  4744  0005D8  C0AE  F024         	movff	vfpfcnvrt@llu,xtoa@d
  4745  0005DC  C0AF  F025         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  4746  0005E0  C0B0  F026         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  4747  0005E4  C0B1  F027         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  4748  0005E8  C0B2  F028         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  4749  0005EC  C0B3  F029         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  4750  0005F0  C0B4  F02A         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  4751  0005F4  C0B5  F02B         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  4752  0005F8  C0A9  F02C         	movff	vfpfcnvrt@c,xtoa@x
  4753  0005FC  ECCA  F004         	call	_xtoa	;wreg free
  4754  000600  C022  F049         	movff	?_xtoa,?_vfpfcnvrt
  4755  000604  C023  F04A         	movff	?_xtoa+1,?_vfpfcnvrt+1
  4756  000608  EF59  F003         	goto	l836
  4757  00060C                     l4760:
  4758                           
  4759                           ; BSR set to: 0
  4760                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  4761  00060C  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4762  000610  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4763  000614  CFDE FFF6          	movff	postinc2,tblptrl
  4764  000618  CFDD FFF7          	movff	postdec2,tblptrh
  4765  00061C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4766  00061C  6AF8               	clrf	tblptru,c
  4767  00061E                     	endif
  4768  00061E                     	if	0	;tblptru may be non-zero
  4769  00061E                     	endif
  4770  00061E  0008               	tblrd		*
  4771  000620  50F5               	movf	tablat,w,c
  4772  000622  0A25               	xorlw	37
  4773  000624  A4D8               	btfss	status,2,c
  4774  000626  EF17  F003         	goto	u4951
  4775  00062A  EF19  F003         	goto	u4950
  4776  00062E                     u4951:
  4777  00062E  EF30  F003         	goto	l4770
  4778  000632                     u4950:
  4779  000632                     
  4780                           ; BSR set to: 0
  4781                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  4782  000632  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4783  000636  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4784  00063A  2ADE               	incf	postinc2,f,c
  4785  00063C  0E00               	movlw	0
  4786  00063E  22DD               	addwfc	postdec2,f,c
  4787  000640                     
  4788                           ; BSR set to: 0
  4789                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  4790  000640  0E00               	movlw	0
  4791  000642  6E08               	movwf	(fputc@c+1)^0,c
  4792  000644  0E25               	movlw	37
  4793  000646  6E07               	movwf	fputc@c^0,c
  4794  000648  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
  4795  00064C  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4796  000650  ECE5  F00D         	call	_fputc	;wreg free
  4797  000654                     l4766:
  4798                           
  4799                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  4800  000654  0E00               	movlw	0
  4801  000656  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
  4802  000658  0E01               	movlw	1
  4803  00065A  6E49               	movwf	?_vfpfcnvrt^0,c
  4804  00065C  EF59  F003         	goto	l836
  4805  000660                     l4770:
  4806                           
  4807                           ; BSR set to: 0
  4808                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  4809  000660  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4810  000664  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4811  000668  2ADE               	incf	postinc2,f,c
  4812  00066A  0E00               	movlw	0
  4813  00066C  22DD               	addwfc	postdec2,f,c
  4814  00066E                     
  4815                           ; BSR set to: 0
  4816                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  4817  00066E  0E00               	movlw	0
  4818  000670  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
  4819  000672  0E00               	movlw	0
  4820  000674  6E49               	movwf	?_vfpfcnvrt^0,c
  4821  000676  EF59  F003         	goto	l836
  4822  00067A                     l4776:
  4823                           
  4824                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  4825  00067A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4826  00067E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4827  000682  CFDE FFF6          	movff	postinc2,tblptrl
  4828  000686  CFDD FFF7          	movff	postdec2,tblptrh
  4829  00068A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4830  00068A  6AF8               	clrf	tblptru,c
  4831  00068C                     	endif
  4832  00068C                     	if	0	;tblptru may be non-zero
  4833  00068C                     	endif
  4834  00068C  0008               	tblrd		*
  4835  00068E  50F5               	movf	tablat,w,c
  4836  000690  6E07               	movwf	fputc@c^0,c
  4837  000692  6A08               	clrf	(fputc@c+1)^0,c
  4838  000694  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
  4839  000698  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4840  00069C  ECE5  F00D         	call	_fputc	;wreg free
  4841  0006A0                     
  4842                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  4843  0006A0  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4844  0006A4  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4845  0006A8  2ADE               	incf	postinc2,f,c
  4846  0006AA  0E00               	movlw	0
  4847  0006AC  22DD               	addwfc	postdec2,f,c
  4848  0006AE  EF2A  F003         	goto	l4766
  4849  0006B2                     l836:
  4850  0006B2  0012               	return		;funcret
  4851  0006B4                     __end_of_vfpfcnvrt:
  4852                           	opt callstack 0
  4853                           
  4854 ;; *************** function _xtoa *****************
  4855 ;; Defined at:
  4856 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4857 ;; Parameters:    Size  Location     Type
  4858 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  4859 ;;		 -> NULL(0), 
  4860 ;;  d               8   35[COMRAM] unsigned long long 
  4861 ;;  x               1   43[COMRAM] unsigned char 
  4862 ;; Auto vars:     Size  Location     Type
  4863 ;;  n               8   60[COMRAM] unsigned long long 
  4864 ;;  c               2   70[COMRAM] int 
  4865 ;;  i               2   68[COMRAM] int 
  4866 ;;  w               2   58[COMRAM] int 
  4867 ;;  p               2   56[COMRAM] int 
  4868 ;; Return value:  Size  Location     Type
  4869 ;;                  2   33[COMRAM] int 
  4870 ;; Registers used:
  4871 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4872 ;; Tracked objects:
  4873 ;;		On entry : 0/0
  4874 ;;		On exit  : 0/0
  4875 ;;		Unchanged: 0/0
  4876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4877 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4878 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4879 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4880 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4881 ;;Total ram usage:       39 bytes
  4882 ;; Hardware stack levels used:    1
  4883 ;; Hardware stack levels required when called:    9
  4884 ;; This function calls:
  4885 ;;		_isalpha
  4886 ;;		_isupper
  4887 ;;		_pad
  4888 ;;		_toupper
  4889 ;; This function is called by:
  4890 ;;		_vfpfcnvrt
  4891 ;; This function uses a non-reentrant model
  4892 ;;
  4893                           
  4894                           	psect	text30
  4895  000994                     __ptext30:
  4896                           	opt callstack 0
  4897  000994                     _xtoa:
  4898                           	opt callstack 17
  4899  000994                     
  4900                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  4901  000994  0100               	movlb	0	; () banked
  4902  000996  BF8D               	btfsc	(_prec+1)& (0+255),7,b
  4903  000998  EFD0  F004         	goto	u4571
  4904  00099C  EFD2  F004         	goto	u4570
  4905  0009A0                     u4571:
  4906  0009A0  EFD3  F004         	goto	l4558
  4907  0009A4                     u4570:
  4908  0009A4                     
  4909                           ; BSR set to: 0
  4910                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  4911  0009A4  9256               	bcf	_flags^0,1,c
  4912  0009A6                     l4558:
  4913                           
  4914                           ; BSR set to: 0
  4915                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  4916  0009A6  BF8D               	btfsc	(_prec+1)& (0+255),7,b
  4917  0009A8  EFE0  F004         	goto	u4580
  4918  0009AC  518D               	movf	(_prec+1)& (0+255),w,b
  4919  0009AE  E106               	bnz	u4581
  4920  0009B0  058C               	decf	_prec& (0+255),w,b
  4921  0009B2  B0D8               	btfsc	status,0,c
  4922  0009B4  EFDE  F004         	goto	u4581
  4923  0009B8  EFE0  F004         	goto	u4580
  4924  0009BC                     u4581:
  4925  0009BC  EFE6  F004         	goto	l782
  4926  0009C0                     u4580:
  4927  0009C0                     
  4928                           ; BSR set to: 0
  4929  0009C0  0E00               	movlw	0
  4930  0009C2  6E3A               	movwf	(xtoa@p+1)^0,c
  4931  0009C4  0E01               	movlw	1
  4932  0009C6  6E39               	movwf	xtoa@p^0,c
  4933  0009C8  EFEA  F004         	goto	l784
  4934  0009CC                     l782:
  4935                           
  4936                           ; BSR set to: 0
  4937  0009CC  C08C  F039         	movff	_prec,xtoa@p
  4938  0009D0  C08D  F03A         	movff	_prec+1,xtoa@p+1
  4939  0009D4                     l784:
  4940                           
  4941                           ; BSR set to: 0
  4942                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  4943  0009D4  C08A  F03B         	movff	_width,xtoa@w
  4944  0009D8  C08B  F03C         	movff	_width+1,xtoa@w+1
  4945                           
  4946                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  4947  0009DC  A856               	btfss	_flags^0,4,c
  4948  0009DE  EFF3  F004         	goto	u4591
  4949  0009E2  EFF5  F004         	goto	u4590
  4950  0009E6                     u4591:
  4951  0009E6  EFF9  F004         	goto	l4564
  4952  0009EA                     u4590:
  4953  0009EA                     
  4954                           ; BSR set to: 0
  4955                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  4956  0009EA  0EFE               	movlw	254
  4957  0009EC  263B               	addwf	xtoa@w^0,f,c
  4958  0009EE  0EFF               	movlw	255
  4959  0009F0  223C               	addwfc	(xtoa@w+1)^0,f,c
  4960  0009F2                     l4564:
  4961                           
  4962                           ; BSR set to: 0
  4963                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  4964  0009F2  C024  F03D         	movff	xtoa@d,xtoa@n
  4965  0009F6  C025  F03E         	movff	xtoa@d+1,xtoa@n+1
  4966  0009FA  C026  F03F         	movff	xtoa@d+2,xtoa@n+2
  4967  0009FE  C027  F040         	movff	xtoa@d+3,xtoa@n+3
  4968  000A02  C028  F041         	movff	xtoa@d+4,xtoa@n+4
  4969  000A06  C029  F042         	movff	xtoa@d+5,xtoa@n+5
  4970  000A0A  C02A  F043         	movff	xtoa@d+6,xtoa@n+6
  4971  000A0E  C02B  F044         	movff	xtoa@d+7,xtoa@n+7
  4972  000A12                     
  4973                           ; BSR set to: 0
  4974                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  4975  000A12  0E00               	movlw	0
  4976  000A14  6E46               	movwf	(xtoa@i+1)^0,c
  4977  000A16  0E1F               	movlw	31
  4978  000A18  6E45               	movwf	xtoa@i^0,c
  4979  000A1A                     
  4980                           ; BSR set to: 0
  4981                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  4982  000A1A  0E00               	movlw	0
  4983  000A1C  0101               	movlb	1	; () banked
  4984  000A1E  6FE7               	movwf	(_dbuf+31)& (0+255),b
  4985                           
  4986                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4987  000A20  EFC5  F005         	goto	l4600
  4988  000A24                     l4570:
  4989                           
  4990                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  4991  000A24  0645               	decf	xtoa@i^0,f,c
  4992  000A26  A0D8               	btfss	status,0,c
  4993  000A28  0646               	decf	(xtoa@i+1)^0,f,c
  4994  000A2A                     
  4995                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  4996  000A2A  0E0F               	movlw	15
  4997  000A2C  143D               	andwf	xtoa@n^0,w,c
  4998  000A2E  6E47               	movwf	xtoa@c^0,c
  4999  000A30  6A48               	clrf	(xtoa@c+1)^0,c
  5000  000A32                     
  5001                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  5002  000A32  BE48               	btfsc	(xtoa@c+1)^0,7,c
  5003  000A34  EF25  F005         	goto	u4601
  5004  000A38  5048               	movf	(xtoa@c+1)^0,w,c
  5005  000A3A  E109               	bnz	u4600
  5006  000A3C  0E0A               	movlw	10
  5007  000A3E  5C47               	subwf	xtoa@c^0,w,c
  5008  000A40  A0D8               	btfss	status,0,c
  5009  000A42  EF25  F005         	goto	u4601
  5010  000A46  EF27  F005         	goto	u4600
  5011  000A4A                     u4601:
  5012  000A4A  EF2F  F005         	goto	l4578
  5013  000A4E                     u4600:
  5014  000A4E  0E57               	movlw	87
  5015  000A50  2447               	addwf	xtoa@c^0,w,c
  5016  000A52  6E47               	movwf	xtoa@c^0,c
  5017  000A54  0E00               	movlw	0
  5018  000A56  2048               	addwfc	(xtoa@c+1)^0,w,c
  5019  000A58  6E48               	movwf	(xtoa@c+1)^0,c
  5020  000A5A  EF35  F005         	goto	l791
  5021  000A5E                     l4578:
  5022  000A5E  0E30               	movlw	48
  5023  000A60  2447               	addwf	xtoa@c^0,w,c
  5024  000A62  6E47               	movwf	xtoa@c^0,c
  5025  000A64  0E00               	movlw	0
  5026  000A66  2048               	addwfc	(xtoa@c+1)^0,w,c
  5027  000A68  6E48               	movwf	(xtoa@c+1)^0,c
  5028  000A6A                     l791:
  5029  000A6A  0EBF               	movlw	191
  5030  000A6C  6E2D               	movwf	??_xtoa^0,c
  5031  000A6E  0EFF               	movlw	255
  5032  000A70  6E2E               	movwf	(??_xtoa+1)^0,c
  5033  000A72  502C               	movf	xtoa@x^0,w,c
  5034  000A74  6E2F               	movwf	(??_xtoa+2)^0,c
  5035  000A76  6A30               	clrf	(??_xtoa+3)^0,c
  5036  000A78  502D               	movf	??_xtoa^0,w,c
  5037  000A7A  262F               	addwf	(??_xtoa+2)^0,f,c
  5038  000A7C  502E               	movf	(??_xtoa+1)^0,w,c
  5039  000A7E  2230               	addwfc	(??_xtoa+3)^0,f,c
  5040  000A80  5030               	movf	(??_xtoa+3)^0,w,c
  5041  000A82  E10A               	bnz	u4610
  5042  000A84  0E1A               	movlw	26
  5043  000A86  5C2F               	subwf	(??_xtoa+2)^0,w,c
  5044  000A88  A0D8               	btfss	status,0,c
  5045  000A8A  EF49  F005         	goto	u4611
  5046  000A8E  EF4C  F005         	goto	u4610
  5047  000A92                     u4611:
  5048  000A92  0E01               	movlw	1
  5049  000A94  EF4D  F005         	goto	u4620
  5050  000A98                     u4610:
  5051  000A98  0E00               	movlw	0
  5052  000A9A                     u4620:
  5053  000A9A  6E35               	movwf	_xtoa$1308^0,c
  5054  000A9C  6A36               	clrf	(_xtoa$1308+1)^0,c
  5055  000A9E  5035               	movf	_xtoa$1308^0,w,c
  5056  000AA0  1036               	iorwf	(_xtoa$1308+1)^0,w,c
  5057  000AA2  B4D8               	btfsc	status,2,c
  5058  000AA4  EF56  F005         	goto	u4631
  5059  000AA8  EF58  F005         	goto	u4630
  5060  000AAC                     u4631:
  5061  000AAC  EF88  F005         	goto	l4592
  5062  000AB0                     u4630:
  5063  000AB0  0E9F               	movlw	159
  5064  000AB2  6E2D               	movwf	??_xtoa^0,c
  5065  000AB4  0EFF               	movlw	255
  5066  000AB6  6E2E               	movwf	(??_xtoa+1)^0,c
  5067  000AB8  0E20               	movlw	32
  5068  000ABA  1047               	iorwf	xtoa@c^0,w,c
  5069  000ABC  6E2F               	movwf	(??_xtoa+2)^0,c
  5070  000ABE  0E00               	movlw	0
  5071  000AC0  1048               	iorwf	(xtoa@c+1)^0,w,c
  5072  000AC2  6E30               	movwf	(??_xtoa+3)^0,c
  5073  000AC4  502D               	movf	??_xtoa^0,w,c
  5074  000AC6  262F               	addwf	(??_xtoa+2)^0,f,c
  5075  000AC8  502E               	movf	(??_xtoa+1)^0,w,c
  5076  000ACA  2230               	addwfc	(??_xtoa+3)^0,f,c
  5077  000ACC  5030               	movf	(??_xtoa+3)^0,w,c
  5078  000ACE  E10A               	bnz	u4640
  5079  000AD0  0E1A               	movlw	26
  5080  000AD2  5C2F               	subwf	(??_xtoa+2)^0,w,c
  5081  000AD4  A0D8               	btfss	status,0,c
  5082  000AD6  EF6F  F005         	goto	u4641
  5083  000ADA  EF72  F005         	goto	u4640
  5084  000ADE                     u4641:
  5085  000ADE  0E01               	movlw	1
  5086  000AE0  EF73  F005         	goto	u4650
  5087  000AE4                     u4640:
  5088  000AE4  0E00               	movlw	0
  5089  000AE6                     u4650:
  5090  000AE6  6E37               	movwf	_xtoa$1309^0,c
  5091  000AE8  6A38               	clrf	(_xtoa$1309+1)^0,c
  5092  000AEA  5037               	movf	_xtoa$1309^0,w,c
  5093  000AEC  1038               	iorwf	(_xtoa$1309+1)^0,w,c
  5094  000AEE  B4D8               	btfsc	status,2,c
  5095  000AF0  EF7C  F005         	goto	u4661
  5096  000AF4  EF7E  F005         	goto	u4660
  5097  000AF8                     u4661:
  5098  000AF8  EF88  F005         	goto	l4592
  5099  000AFC                     u4660:
  5100  000AFC                     
  5101                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  5102  000AFC  C047  F00B         	movff	xtoa@c,toupper@c
  5103  000B00  C048  F00C         	movff	xtoa@c+1,toupper@c+1
  5104  000B04  EC9A  F00F         	call	_toupper	;wreg free
  5105  000B08  C00B  F047         	movff	?_toupper,xtoa@c
  5106  000B0C  C00C  F048         	movff	?_toupper+1,xtoa@c+1
  5107  000B10                     l4592:
  5108                           
  5109                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  5110  000B10  0EC8               	movlw	low _dbuf
  5111  000B12  2445               	addwf	xtoa@i^0,w,c
  5112  000B14  6ED9               	movwf	fsr2l,c
  5113  000B16  0E01               	movlw	high _dbuf
  5114  000B18  2046               	addwfc	(xtoa@i+1)^0,w,c
  5115  000B1A  6EDA               	movwf	fsr2h,c
  5116  000B1C  C047  FFDF         	movff	xtoa@c,indf2
  5117  000B20                     
  5118                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  5119  000B20  0639               	decf	xtoa@p^0,f,c
  5120  000B22  A0D8               	btfss	status,0,c
  5121  000B24  063A               	decf	(xtoa@p+1)^0,f,c
  5122  000B26                     
  5123                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  5124  000B26  063B               	decf	xtoa@w^0,f,c
  5125  000B28  A0D8               	btfss	status,0,c
  5126  000B2A  063C               	decf	(xtoa@w+1)^0,f,c
  5127  000B2C                     
  5128                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  5129  000B2C  C03D  F02D         	movff	xtoa@n,??_xtoa
  5130  000B30  C03E  F02E         	movff	xtoa@n+1,??_xtoa+1
  5131  000B34  C03F  F02F         	movff	xtoa@n+2,??_xtoa+2
  5132  000B38  C040  F030         	movff	xtoa@n+3,??_xtoa+3
  5133  000B3C  C041  F031         	movff	xtoa@n+4,??_xtoa+4
  5134  000B40  C042  F032         	movff	xtoa@n+5,??_xtoa+5
  5135  000B44  C043  F033         	movff	xtoa@n+6,??_xtoa+6
  5136  000B48  C044  F034         	movff	xtoa@n+7,??_xtoa+7
  5137  000B4C  0E05               	movlw	5
  5138  000B4E  EFB2  F005         	goto	u4670
  5139  000B52                     u4675:
  5140  000B52  90D8               	bcf	status,0,c
  5141  000B54  3234               	rrcf	(??_xtoa+7)^0,f,c
  5142  000B56  3233               	rrcf	(??_xtoa+6)^0,f,c
  5143  000B58  3232               	rrcf	(??_xtoa+5)^0,f,c
  5144  000B5A  3231               	rrcf	(??_xtoa+4)^0,f,c
  5145  000B5C  3230               	rrcf	(??_xtoa+3)^0,f,c
  5146  000B5E  322F               	rrcf	(??_xtoa+2)^0,f,c
  5147  000B60  322E               	rrcf	(??_xtoa+1)^0,f,c
  5148  000B62  322D               	rrcf	??_xtoa^0,f,c
  5149  000B64                     u4670:
  5150  000B64  2EE8               	decfsz	wreg,f,c
  5151  000B66  EFA9  F005         	goto	u4675
  5152  000B6A  C02D  F03D         	movff	??_xtoa,xtoa@n
  5153  000B6E  C02E  F03E         	movff	??_xtoa+1,xtoa@n+1
  5154  000B72  C02F  F03F         	movff	??_xtoa+2,xtoa@n+2
  5155  000B76  C030  F040         	movff	??_xtoa+3,xtoa@n+3
  5156  000B7A  C031  F041         	movff	??_xtoa+4,xtoa@n+4
  5157  000B7E  C032  F042         	movff	??_xtoa+5,xtoa@n+5
  5158  000B82  C033  F043         	movff	??_xtoa+6,xtoa@n+6
  5159  000B86  C034  F044         	movff	??_xtoa+7,xtoa@n+7
  5160  000B8A                     l4600:
  5161                           
  5162                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5163  000B8A  BE46               	btfsc	(xtoa@i+1)^0,7,c
  5164  000B8C  EFD1  F005         	goto	u4681
  5165  000B90  5046               	movf	(xtoa@i+1)^0,w,c
  5166  000B92  E109               	bnz	u4680
  5167  000B94  0E02               	movlw	2
  5168  000B96  5C45               	subwf	xtoa@i^0,w,c
  5169  000B98  A0D8               	btfss	status,0,c
  5170  000B9A  EFD1  F005         	goto	u4681
  5171  000B9E  EFD3  F005         	goto	u4680
  5172  000BA2                     u4681:
  5173  000BA2  EF03  F006         	goto	l805
  5174  000BA6                     u4680:
  5175  000BA6  503D               	movf	xtoa@n^0,w,c
  5176  000BA8  103E               	iorwf	(xtoa@n+1)^0,w,c
  5177  000BAA  103F               	iorwf	(xtoa@n+2)^0,w,c
  5178  000BAC  1040               	iorwf	(xtoa@n+3)^0,w,c
  5179  000BAE  1041               	iorwf	(xtoa@n+4)^0,w,c
  5180  000BB0  1042               	iorwf	(xtoa@n+5)^0,w,c
  5181  000BB2  1043               	iorwf	(xtoa@n+6)^0,w,c
  5182  000BB4  1044               	iorwf	(xtoa@n+7)^0,w,c
  5183  000BB6  A4D8               	btfss	status,2,c
  5184  000BB8  EFE0  F005         	goto	u4691
  5185  000BBC  EFE2  F005         	goto	u4690
  5186  000BC0                     u4691:
  5187  000BC0  EF12  F005         	goto	l4570
  5188  000BC4                     u4690:
  5189  000BC4  BE3A               	btfsc	(xtoa@p+1)^0,7,c
  5190  000BC6  EFEF  F005         	goto	u4700
  5191  000BCA  503A               	movf	(xtoa@p+1)^0,w,c
  5192  000BCC  E106               	bnz	u4701
  5193  000BCE  0439               	decf	xtoa@p^0,w,c
  5194  000BD0  B0D8               	btfsc	status,0,c
  5195  000BD2  EFED  F005         	goto	u4701
  5196  000BD6  EFEF  F005         	goto	u4700
  5197  000BDA                     u4701:
  5198  000BDA  EF12  F005         	goto	l4570
  5199  000BDE                     u4700:
  5200  000BDE  BE3C               	btfsc	(xtoa@w+1)^0,7,c
  5201  000BE0  EFFA  F005         	goto	u4711
  5202  000BE4  503C               	movf	(xtoa@w+1)^0,w,c
  5203  000BE6  E108               	bnz	u4710
  5204  000BE8  043B               	decf	xtoa@w^0,w,c
  5205  000BEA  A0D8               	btfss	status,0,c
  5206  000BEC  EFFA  F005         	goto	u4711
  5207  000BF0  EFFC  F005         	goto	u4710
  5208  000BF4                     u4711:
  5209  000BF4  EF03  F006         	goto	l805
  5210  000BF8                     u4710:
  5211  000BF8  B256               	btfsc	_flags^0,1,c
  5212  000BFA  EF01  F006         	goto	u4721
  5213  000BFE  EF03  F006         	goto	u4720
  5214  000C02                     u4721:
  5215  000C02  EF12  F005         	goto	l4570
  5216  000C06                     u4720:
  5217  000C06                     l805:
  5218                           
  5219                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  5220  000C06  A856               	btfss	_flags^0,4,c
  5221  000C08  EF08  F006         	goto	u4731
  5222  000C0C  EF0A  F006         	goto	u4730
  5223  000C10                     u4731:
  5224  000C10  EF20  F006         	goto	l4616
  5225  000C14                     u4730:
  5226  000C14                     
  5227                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  5228  000C14  0645               	decf	xtoa@i^0,f,c
  5229  000C16  A0D8               	btfss	status,0,c
  5230  000C18  0646               	decf	(xtoa@i+1)^0,f,c
  5231  000C1A                     
  5232                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  5233  000C1A  0EC8               	movlw	low _dbuf
  5234  000C1C  2445               	addwf	xtoa@i^0,w,c
  5235  000C1E  6ED9               	movwf	fsr2l,c
  5236  000C20  0E01               	movlw	high _dbuf
  5237  000C22  2046               	addwfc	(xtoa@i+1)^0,w,c
  5238  000C24  6EDA               	movwf	fsr2h,c
  5239  000C26  C02C  FFDF         	movff	xtoa@x,indf2
  5240  000C2A                     
  5241                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  5242  000C2A  0645               	decf	xtoa@i^0,f,c
  5243  000C2C  A0D8               	btfss	status,0,c
  5244  000C2E  0646               	decf	(xtoa@i+1)^0,f,c
  5245                           
  5246                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  5247  000C30  0EC8               	movlw	low _dbuf
  5248  000C32  2445               	addwf	xtoa@i^0,w,c
  5249  000C34  6ED9               	movwf	fsr2l,c
  5250  000C36  0E01               	movlw	high _dbuf
  5251  000C38  2046               	addwfc	(xtoa@i+1)^0,w,c
  5252  000C3A  6EDA               	movwf	fsr2h,c
  5253  000C3C  0E30               	movlw	48
  5254  000C3E  6EDF               	movwf	indf2,c
  5255  000C40                     l4616:
  5256                           
  5257                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  5258  000C40  C022  F017         	movff	xtoa@fp,pad@fp
  5259  000C44  C023  F018         	movff	xtoa@fp+1,pad@fp+1
  5260  000C48  0EC8               	movlw	low _dbuf
  5261  000C4A  2445               	addwf	xtoa@i^0,w,c
  5262  000C4C  6E19               	movwf	pad@buf^0,c
  5263  000C4E  0E01               	movlw	high _dbuf
  5264  000C50  2046               	addwfc	(xtoa@i+1)^0,w,c
  5265  000C52  6E1A               	movwf	(pad@buf+1)^0,c
  5266  000C54  C03B  F01B         	movff	xtoa@w,pad@p
  5267  000C58  C03C  F01C         	movff	xtoa@w+1,pad@p+1
  5268  000C5C  EC74  F00C         	call	_pad	;wreg free
  5269  000C60  C017  F022         	movff	?_pad,?_xtoa
  5270  000C64  C018  F023         	movff	?_pad+1,?_xtoa+1
  5271  000C68  0012               	return		;funcret
  5272  000C6A                     __end_of_xtoa:
  5273                           	opt callstack 0
  5274                           
  5275 ;; *************** function _toupper *****************
  5276 ;; Defined at:
  5277 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
  5278 ;; Parameters:    Size  Location     Type
  5279 ;;  c               2   10[COMRAM] int 
  5280 ;; Auto vars:     Size  Location     Type
  5281 ;;		None
  5282 ;; Return value:  Size  Location     Type
  5283 ;;                  2   10[COMRAM] int 
  5284 ;; Registers used:
  5285 ;;		wreg, status,2, status,0
  5286 ;; Tracked objects:
  5287 ;;		On entry : 0/0
  5288 ;;		On exit  : 0/0
  5289 ;;		Unchanged: 0/0
  5290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5291 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5292 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5293 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5294 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5295 ;;Total ram usage:        8 bytes
  5296 ;; Hardware stack levels used:    1
  5297 ;; Hardware stack levels required when called:    5
  5298 ;; This function calls:
  5299 ;;		_islower
  5300 ;; This function is called by:
  5301 ;;		_xtoa
  5302 ;; This function uses a non-reentrant model
  5303 ;;
  5304                           
  5305                           	psect	text31
  5306  001F34                     __ptext31:
  5307                           	opt callstack 0
  5308  001F34                     _toupper:
  5309                           	opt callstack 20
  5310  001F34  0E9F               	movlw	159
  5311  001F36  6E0D               	movwf	??_toupper^0,c
  5312  001F38  0EFF               	movlw	255
  5313  001F3A  6E0E               	movwf	(??_toupper+1)^0,c
  5314  001F3C  C00B  F00F         	movff	toupper@c,??_toupper+2
  5315  001F40  C00C  F010         	movff	toupper@c+1,??_toupper+3
  5316  001F44  500D               	movf	??_toupper^0,w,c
  5317  001F46  260F               	addwf	(??_toupper+2)^0,f,c
  5318  001F48  500E               	movf	(??_toupper+1)^0,w,c
  5319  001F4A  2210               	addwfc	(??_toupper+3)^0,f,c
  5320  001F4C  5010               	movf	(??_toupper+3)^0,w,c
  5321  001F4E  E10A               	bnz	u3980
  5322  001F50  0E1A               	movlw	26
  5323  001F52  5C0F               	subwf	(??_toupper+2)^0,w,c
  5324  001F54  A0D8               	btfss	status,0,c
  5325  001F56  EFAF  F00F         	goto	u3981
  5326  001F5A  EFB2  F00F         	goto	u3980
  5327  001F5E                     u3981:
  5328  001F5E  0E01               	movlw	1
  5329  001F60  EFB3  F00F         	goto	u3990
  5330  001F64                     u3980:
  5331  001F64  0E00               	movlw	0
  5332  001F66                     u3990:
  5333  001F66  6E11               	movwf	_toupper$1874^0,c
  5334  001F68  6A12               	clrf	(_toupper$1874+1)^0,c
  5335  001F6A  5011               	movf	_toupper$1874^0,w,c
  5336  001F6C  1012               	iorwf	(_toupper$1874+1)^0,w,c
  5337  001F6E  B4D8               	btfsc	status,2,c
  5338  001F70  EFBC  F00F         	goto	u4001
  5339  001F74  EFBE  F00F         	goto	u4000
  5340  001F78                     u4001:
  5341  001F78  EFC4  F00F         	goto	l1624
  5342  001F7C                     u4000:
  5343  001F7C  0E5F               	movlw	95
  5344  001F7E  140B               	andwf	toupper@c^0,w,c
  5345  001F80  6E0B               	movwf	?_toupper^0,c
  5346  001F82  6A0C               	clrf	(?_toupper+1)^0,c
  5347  001F84  EFC8  F00F         	goto	l1629
  5348  001F88                     l1624:
  5349  001F88  C00B  F00B         	movff	toupper@c,?_toupper
  5350  001F8C  C00C  F00C         	movff	toupper@c+1,?_toupper+1
  5351  001F90                     l1629:
  5352  001F90  0012               	return		;funcret
  5353  001F92                     __end_of_toupper:
  5354                           	opt callstack 0
  5355                           
  5356 ;; *************** function _islower *****************
  5357 ;; Defined at:
  5358 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
  5359 ;; Parameters:    Size  Location     Type
  5360 ;;  c               2    4[COMRAM] int 
  5361 ;; Auto vars:     Size  Location     Type
  5362 ;;		None
  5363 ;; Return value:  Size  Location     Type
  5364 ;;                  2    4[COMRAM] int 
  5365 ;; Registers used:
  5366 ;;		wreg, status,2, status,0
  5367 ;; Tracked objects:
  5368 ;;		On entry : 0/0
  5369 ;;		On exit  : 0/0
  5370 ;;		Unchanged: 0/0
  5371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5372 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5374 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5375 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5376 ;;Total ram usage:        6 bytes
  5377 ;; Hardware stack levels used:    1
  5378 ;; Hardware stack levels required when called:    4
  5379 ;; This function calls:
  5380 ;;		Nothing
  5381 ;; This function is called by:
  5382 ;;		_toupper
  5383 ;; This function uses a non-reentrant model
  5384 ;;
  5385                           
  5386                           	psect	text32
  5387  002362                     __ptext32:
  5388                           	opt callstack 0
  5389  002362                     _islower:
  5390                           	opt callstack 20
  5391  002362  0E9F               	movlw	159
  5392  002364  6E07               	movwf	??_islower^0,c
  5393  002366  0EFF               	movlw	255
  5394  002368  6E08               	movwf	(??_islower+1)^0,c
  5395  00236A  C005  F009         	movff	islower@c,??_islower+2
  5396  00236E  C006  F00A         	movff	islower@c+1,??_islower+3
  5397  002372  5007               	movf	??_islower^0,w,c
  5398  002374  2609               	addwf	(??_islower+2)^0,f,c
  5399  002376  5008               	movf	(??_islower+1)^0,w,c
  5400  002378  220A               	addwfc	(??_islower+3)^0,f,c
  5401  00237A  500A               	movf	(??_islower+3)^0,w,c
  5402  00237C  E10A               	bnz	u3870
  5403  00237E  0E1A               	movlw	26
  5404  002380  5C09               	subwf	(??_islower+2)^0,w,c
  5405  002382  A0D8               	btfss	status,0,c
  5406  002384  EFC6  F011         	goto	u3871
  5407  002388  EFC9  F011         	goto	u3870
  5408  00238C                     u3871:
  5409  00238C  0E01               	movlw	1
  5410  00238E  EFCA  F011         	goto	u3880
  5411  002392                     u3870:
  5412  002392  0E00               	movlw	0
  5413  002394                     u3880:
  5414  002394  6E05               	movwf	?_islower^0,c
  5415  002396  6A06               	clrf	(?_islower+1)^0,c
  5416  002398  0012               	return		;funcret
  5417  00239A                     __end_of_islower:
  5418                           	opt callstack 0
  5419                           
  5420 ;; *************** function _isupper *****************
  5421 ;; Defined at:
  5422 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  5423 ;; Parameters:    Size  Location     Type
  5424 ;;  c               2    4[COMRAM] int 
  5425 ;; Auto vars:     Size  Location     Type
  5426 ;;		None
  5427 ;; Return value:  Size  Location     Type
  5428 ;;                  2    4[COMRAM] int 
  5429 ;; Registers used:
  5430 ;;		wreg, status,2, status,0
  5431 ;; Tracked objects:
  5432 ;;		On entry : 0/0
  5433 ;;		On exit  : 0/0
  5434 ;;		Unchanged: 0/0
  5435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5436 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5438 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5439 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5440 ;;Total ram usage:        6 bytes
  5441 ;; Hardware stack levels used:    1
  5442 ;; Hardware stack levels required when called:    4
  5443 ;; This function calls:
  5444 ;;		Nothing
  5445 ;; This function is called by:
  5446 ;;		_xtoa
  5447 ;; This function uses a non-reentrant model
  5448 ;;
  5449                           
  5450                           	psect	text33
  5451  00239A                     __ptext33:
  5452                           	opt callstack 0
  5453  00239A                     _isupper:
  5454                           	opt callstack 21
  5455  00239A  0EBF               	movlw	191
  5456  00239C  6E07               	movwf	??_isupper^0,c
  5457  00239E  0EFF               	movlw	255
  5458  0023A0  6E08               	movwf	(??_isupper+1)^0,c
  5459  0023A2  C005  F009         	movff	isupper@c,??_isupper+2
  5460  0023A6  C006  F00A         	movff	isupper@c+1,??_isupper+3
  5461  0023AA  5007               	movf	??_isupper^0,w,c
  5462  0023AC  2609               	addwf	(??_isupper+2)^0,f,c
  5463  0023AE  5008               	movf	(??_isupper+1)^0,w,c
  5464  0023B0  220A               	addwfc	(??_isupper+3)^0,f,c
  5465  0023B2  500A               	movf	(??_isupper+3)^0,w,c
  5466  0023B4  E10A               	bnz	u3940
  5467  0023B6  0E1A               	movlw	26
  5468  0023B8  5C09               	subwf	(??_isupper+2)^0,w,c
  5469  0023BA  A0D8               	btfss	status,0,c
  5470  0023BC  EFE2  F011         	goto	u3941
  5471  0023C0  EFE5  F011         	goto	u3940
  5472  0023C4                     u3941:
  5473  0023C4  0E01               	movlw	1
  5474  0023C6  EFE6  F011         	goto	u3950
  5475  0023CA                     u3940:
  5476  0023CA  0E00               	movlw	0
  5477  0023CC                     u3950:
  5478  0023CC  6E05               	movwf	?_isupper^0,c
  5479  0023CE  6A06               	clrf	(?_isupper+1)^0,c
  5480  0023D0  0012               	return		;funcret
  5481  0023D2                     __end_of_isupper:
  5482                           	opt callstack 0
  5483                           
  5484 ;; *************** function _isalpha *****************
  5485 ;; Defined at:
  5486 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
  5487 ;; Parameters:    Size  Location     Type
  5488 ;;  c               2    4[COMRAM] int 
  5489 ;; Auto vars:     Size  Location     Type
  5490 ;;		None
  5491 ;; Return value:  Size  Location     Type
  5492 ;;                  2    4[COMRAM] int 
  5493 ;; Registers used:
  5494 ;;		wreg, status,2, status,0
  5495 ;; Tracked objects:
  5496 ;;		On entry : 0/0
  5497 ;;		On exit  : 0/0
  5498 ;;		Unchanged: 0/0
  5499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5500 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5502 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5503 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5504 ;;Total ram usage:        6 bytes
  5505 ;; Hardware stack levels used:    1
  5506 ;; Hardware stack levels required when called:    4
  5507 ;; This function calls:
  5508 ;;		Nothing
  5509 ;; This function is called by:
  5510 ;;		_xtoa
  5511 ;; This function uses a non-reentrant model
  5512 ;;
  5513                           
  5514                           	psect	text34
  5515  002326                     __ptext34:
  5516                           	opt callstack 0
  5517  002326                     _isalpha:
  5518                           	opt callstack 21
  5519  002326  0E9F               	movlw	159
  5520  002328  6E07               	movwf	??_isalpha^0,c
  5521  00232A  0EFF               	movlw	255
  5522  00232C  6E08               	movwf	(??_isalpha+1)^0,c
  5523  00232E  0E20               	movlw	32
  5524  002330  1005               	iorwf	isalpha@c^0,w,c
  5525  002332  6E09               	movwf	(??_isalpha+2)^0,c
  5526  002334  0E00               	movlw	0
  5527  002336  1006               	iorwf	(isalpha@c+1)^0,w,c
  5528  002338  6E0A               	movwf	(??_isalpha+3)^0,c
  5529  00233A  5007               	movf	??_isalpha^0,w,c
  5530  00233C  2609               	addwf	(??_isalpha+2)^0,f,c
  5531  00233E  5008               	movf	(??_isalpha+1)^0,w,c
  5532  002340  220A               	addwfc	(??_isalpha+3)^0,f,c
  5533  002342  500A               	movf	(??_isalpha+3)^0,w,c
  5534  002344  E10A               	bnz	u3960
  5535  002346  0E1A               	movlw	26
  5536  002348  5C09               	subwf	(??_isalpha+2)^0,w,c
  5537  00234A  A0D8               	btfss	status,0,c
  5538  00234C  EFAA  F011         	goto	u3961
  5539  002350  EFAD  F011         	goto	u3960
  5540  002354                     u3961:
  5541  002354  0E01               	movlw	1
  5542  002356  EFAE  F011         	goto	u3970
  5543  00235A                     u3960:
  5544  00235A  0E00               	movlw	0
  5545  00235C                     u3970:
  5546  00235C  6E05               	movwf	?_isalpha^0,c
  5547  00235E  6A06               	clrf	(?_isalpha+1)^0,c
  5548  002360  0012               	return		;funcret
  5549  002362                     __end_of_isalpha:
  5550                           	opt callstack 0
  5551                           
  5552 ;; *************** function _utoa *****************
  5553 ;; Defined at:
  5554 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5555 ;; Parameters:    Size  Location     Type
  5556 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  5557 ;;		 -> NULL(0), 
  5558 ;;  d               8   35[COMRAM] unsigned long long 
  5559 ;; Auto vars:     Size  Location     Type
  5560 ;;  n               8   55[COMRAM] unsigned long long 
  5561 ;;  i               2   63[COMRAM] int 
  5562 ;;  w               2   53[COMRAM] int 
  5563 ;;  p               2   51[COMRAM] int 
  5564 ;; Return value:  Size  Location     Type
  5565 ;;                  2   33[COMRAM] int 
  5566 ;; Registers used:
  5567 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5568 ;; Tracked objects:
  5569 ;;		On entry : 0/0
  5570 ;;		On exit  : 0/0
  5571 ;;		Unchanged: 0/0
  5572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5573 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5574 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5575 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5576 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5577 ;;Total ram usage:       32 bytes
  5578 ;; Hardware stack levels used:    1
  5579 ;; Hardware stack levels required when called:    9
  5580 ;; This function calls:
  5581 ;;		___lodiv
  5582 ;;		___lomod
  5583 ;;		_pad
  5584 ;; This function is called by:
  5585 ;;		_vfpfcnvrt
  5586 ;; This function uses a non-reentrant model
  5587 ;;
  5588                           
  5589                           	psect	text35
  5590  000C6A                     __ptext35:
  5591                           	opt callstack 0
  5592  000C6A                     _utoa:
  5593                           	opt callstack 17
  5594  000C6A                     
  5595                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  5596  000C6A  0100               	movlb	0	; () banked
  5597  000C6C  BF8D               	btfsc	(_prec+1)& (0+255),7,b
  5598  000C6E  EF3B  F006         	goto	u4501
  5599  000C72  EF3D  F006         	goto	u4500
  5600  000C76                     u4501:
  5601  000C76  EF3E  F006         	goto	l4522
  5602  000C7A                     u4500:
  5603  000C7A                     
  5604                           ; BSR set to: 0
  5605                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  5606  000C7A  9256               	bcf	_flags^0,1,c
  5607  000C7C                     l4522:
  5608                           
  5609                           ; BSR set to: 0
  5610                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  5611  000C7C  BF8D               	btfsc	(_prec+1)& (0+255),7,b
  5612  000C7E  EF4B  F006         	goto	u4510
  5613  000C82  518D               	movf	(_prec+1)& (0+255),w,b
  5614  000C84  E106               	bnz	u4511
  5615  000C86  058C               	decf	_prec& (0+255),w,b
  5616  000C88  B0D8               	btfsc	status,0,c
  5617  000C8A  EF49  F006         	goto	u4511
  5618  000C8E  EF4B  F006         	goto	u4510
  5619  000C92                     u4511:
  5620  000C92  EF51  F006         	goto	l767
  5621  000C96                     u4510:
  5622  000C96                     
  5623                           ; BSR set to: 0
  5624  000C96  0E00               	movlw	0
  5625  000C98  6E35               	movwf	(utoa@p+1)^0,c
  5626  000C9A  0E01               	movlw	1
  5627  000C9C  6E34               	movwf	utoa@p^0,c
  5628  000C9E  EF55  F006         	goto	l769
  5629  000CA2                     l767:
  5630                           
  5631                           ; BSR set to: 0
  5632  000CA2  C08C  F034         	movff	_prec,utoa@p
  5633  000CA6  C08D  F035         	movff	_prec+1,utoa@p+1
  5634  000CAA                     l769:
  5635                           
  5636                           ; BSR set to: 0
  5637                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  5638  000CAA  C08A  F036         	movff	_width,utoa@w
  5639  000CAE  C08B  F037         	movff	_width+1,utoa@w+1
  5640                           
  5641                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  5642  000CB2  C024  F038         	movff	utoa@d,utoa@n
  5643  000CB6  C025  F039         	movff	utoa@d+1,utoa@n+1
  5644  000CBA  C026  F03A         	movff	utoa@d+2,utoa@n+2
  5645  000CBE  C027  F03B         	movff	utoa@d+3,utoa@n+3
  5646  000CC2  C028  F03C         	movff	utoa@d+4,utoa@n+4
  5647  000CC6  C029  F03D         	movff	utoa@d+5,utoa@n+5
  5648  000CCA  C02A  F03E         	movff	utoa@d+6,utoa@n+6
  5649  000CCE  C02B  F03F         	movff	utoa@d+7,utoa@n+7
  5650  000CD2                     
  5651                           ; BSR set to: 0
  5652                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  5653  000CD2  0E00               	movlw	0
  5654  000CD4  6E41               	movwf	(utoa@i+1)^0,c
  5655  000CD6  0E1F               	movlw	31
  5656  000CD8  6E40               	movwf	utoa@i^0,c
  5657  000CDA                     
  5658                           ; BSR set to: 0
  5659                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  5660  000CDA  0E00               	movlw	0
  5661  000CDC  0101               	movlb	1	; () banked
  5662  000CDE  6FE7               	movwf	(_dbuf+31)& (0+255),b
  5663                           
  5664                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5665  000CE0  EFE8  F006         	goto	l4540
  5666  000CE4                     l4530:
  5667                           
  5668                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  5669  000CE4  0640               	decf	utoa@i^0,f,c
  5670  000CE6  A0D8               	btfss	status,0,c
  5671  000CE8  0641               	decf	(utoa@i+1)^0,f,c
  5672  000CEA                     
  5673                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  5674  000CEA  0EC8               	movlw	low _dbuf
  5675  000CEC  2440               	addwf	utoa@i^0,w,c
  5676  000CEE  6ED9               	movwf	fsr2l,c
  5677  000CF0  0E01               	movlw	high _dbuf
  5678  000CF2  2041               	addwfc	(utoa@i+1)^0,w,c
  5679  000CF4  6EDA               	movwf	fsr2h,c
  5680  000CF6  C038  F005         	movff	utoa@n,___lomod@dividend
  5681  000CFA  C039  F006         	movff	utoa@n+1,___lomod@dividend+1
  5682  000CFE  C03A  F007         	movff	utoa@n+2,___lomod@dividend+2
  5683  000D02  C03B  F008         	movff	utoa@n+3,___lomod@dividend+3
  5684  000D06  C03C  F009         	movff	utoa@n+4,___lomod@dividend+4
  5685  000D0A  C03D  F00A         	movff	utoa@n+5,___lomod@dividend+5
  5686  000D0E  C03E  F00B         	movff	utoa@n+6,___lomod@dividend+6
  5687  000D12  C03F  F00C         	movff	utoa@n+7,___lomod@dividend+7
  5688  000D16  0E0A               	movlw	10
  5689  000D18  6E0D               	movwf	___lomod@divisor^0,c
  5690  000D1A  0E00               	movlw	0
  5691  000D1C  6E0E               	movwf	(___lomod@divisor+1)^0,c
  5692  000D1E  0E00               	movlw	0
  5693  000D20  6E0F               	movwf	(___lomod@divisor+2)^0,c
  5694  000D22  0E00               	movlw	0
  5695  000D24  6E10               	movwf	(___lomod@divisor+3)^0,c
  5696  000D26  0E00               	movlw	0
  5697  000D28  6E11               	movwf	(___lomod@divisor+4)^0,c
  5698  000D2A  0E00               	movlw	0
  5699  000D2C  6E12               	movwf	(___lomod@divisor+5)^0,c
  5700  000D2E  0E00               	movlw	0
  5701  000D30  6E13               	movwf	(___lomod@divisor+6)^0,c
  5702  000D32  0E00               	movlw	0
  5703  000D34  6E14               	movwf	(___lomod@divisor+7)^0,c
  5704  000D36  EC0C  F00C         	call	___lomod	;wreg free
  5705  000D3A  C005  F02C         	movff	?___lomod,??_utoa
  5706  000D3E  C006  F02D         	movff	?___lomod+1,??_utoa+1
  5707  000D42  C007  F02E         	movff	?___lomod+2,??_utoa+2
  5708  000D46  C008  F02F         	movff	?___lomod+3,??_utoa+3
  5709  000D4A  C009  F030         	movff	?___lomod+4,??_utoa+4
  5710  000D4E  C00A  F031         	movff	?___lomod+5,??_utoa+5
  5711  000D52  C00B  F032         	movff	?___lomod+6,??_utoa+6
  5712  000D56  C00C  F033         	movff	?___lomod+7,??_utoa+7
  5713  000D5A  502C               	movf	??_utoa^0,w,c
  5714  000D5C  0F30               	addlw	48
  5715  000D5E  6EDF               	movwf	indf2,c
  5716  000D60                     
  5717                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  5718  000D60  0634               	decf	utoa@p^0,f,c
  5719  000D62  A0D8               	btfss	status,0,c
  5720  000D64  0635               	decf	(utoa@p+1)^0,f,c
  5721  000D66                     
  5722                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  5723  000D66  0636               	decf	utoa@w^0,f,c
  5724  000D68  A0D8               	btfss	status,0,c
  5725  000D6A  0637               	decf	(utoa@w+1)^0,f,c
  5726  000D6C                     
  5727                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  5728  000D6C  C038  F005         	movff	utoa@n,___lodiv@dividend
  5729  000D70  C039  F006         	movff	utoa@n+1,___lodiv@dividend+1
  5730  000D74  C03A  F007         	movff	utoa@n+2,___lodiv@dividend+2
  5731  000D78  C03B  F008         	movff	utoa@n+3,___lodiv@dividend+3
  5732  000D7C  C03C  F009         	movff	utoa@n+4,___lodiv@dividend+4
  5733  000D80  C03D  F00A         	movff	utoa@n+5,___lodiv@dividend+5
  5734  000D84  C03E  F00B         	movff	utoa@n+6,___lodiv@dividend+6
  5735  000D88  C03F  F00C         	movff	utoa@n+7,___lodiv@dividend+7
  5736  000D8C  0E0A               	movlw	10
  5737  000D8E  6E0D               	movwf	___lodiv@divisor^0,c
  5738  000D90  0E00               	movlw	0
  5739  000D92  6E0E               	movwf	(___lodiv@divisor+1)^0,c
  5740  000D94  0E00               	movlw	0
  5741  000D96  6E0F               	movwf	(___lodiv@divisor+2)^0,c
  5742  000D98  0E00               	movlw	0
  5743  000D9A  6E10               	movwf	(___lodiv@divisor+3)^0,c
  5744  000D9C  0E00               	movlw	0
  5745  000D9E  6E11               	movwf	(___lodiv@divisor+4)^0,c
  5746  000DA0  0E00               	movlw	0
  5747  000DA2  6E12               	movwf	(___lodiv@divisor+5)^0,c
  5748  000DA4  0E00               	movlw	0
  5749  000DA6  6E13               	movwf	(___lodiv@divisor+6)^0,c
  5750  000DA8  0E00               	movlw	0
  5751  000DAA  6E14               	movwf	(___lodiv@divisor+7)^0,c
  5752  000DAC  EC94  F00B         	call	___lodiv	;wreg free
  5753  000DB0  C005  F038         	movff	?___lodiv,utoa@n
  5754  000DB4  C006  F039         	movff	?___lodiv+1,utoa@n+1
  5755  000DB8  C007  F03A         	movff	?___lodiv+2,utoa@n+2
  5756  000DBC  C008  F03B         	movff	?___lodiv+3,utoa@n+3
  5757  000DC0  C009  F03C         	movff	?___lodiv+4,utoa@n+4
  5758  000DC4  C00A  F03D         	movff	?___lodiv+5,utoa@n+5
  5759  000DC8  C00B  F03E         	movff	?___lodiv+6,utoa@n+6
  5760  000DCC  C00C  F03F         	movff	?___lodiv+7,utoa@n+7
  5761  000DD0                     l4540:
  5762                           
  5763                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5764  000DD0  5040               	movf	utoa@i^0,w,c
  5765  000DD2  1041               	iorwf	(utoa@i+1)^0,w,c
  5766  000DD4  B4D8               	btfsc	status,2,c
  5767  000DD6  EFEF  F006         	goto	u4521
  5768  000DDA  EFF1  F006         	goto	u4520
  5769  000DDE                     u4521:
  5770  000DDE  EF21  F007         	goto	l4550
  5771  000DE2                     u4520:
  5772  000DE2  5038               	movf	utoa@n^0,w,c
  5773  000DE4  1039               	iorwf	(utoa@n+1)^0,w,c
  5774  000DE6  103A               	iorwf	(utoa@n+2)^0,w,c
  5775  000DE8  103B               	iorwf	(utoa@n+3)^0,w,c
  5776  000DEA  103C               	iorwf	(utoa@n+4)^0,w,c
  5777  000DEC  103D               	iorwf	(utoa@n+5)^0,w,c
  5778  000DEE  103E               	iorwf	(utoa@n+6)^0,w,c
  5779  000DF0  103F               	iorwf	(utoa@n+7)^0,w,c
  5780  000DF2  A4D8               	btfss	status,2,c
  5781  000DF4  EFFE  F006         	goto	u4531
  5782  000DF8  EF00  F007         	goto	u4530
  5783  000DFC                     u4531:
  5784  000DFC  EF72  F006         	goto	l4530
  5785  000E00                     u4530:
  5786  000E00  BE35               	btfsc	(utoa@p+1)^0,7,c
  5787  000E02  EF0D  F007         	goto	u4540
  5788  000E06  5035               	movf	(utoa@p+1)^0,w,c
  5789  000E08  E106               	bnz	u4541
  5790  000E0A  0434               	decf	utoa@p^0,w,c
  5791  000E0C  B0D8               	btfsc	status,0,c
  5792  000E0E  EF0B  F007         	goto	u4541
  5793  000E12  EF0D  F007         	goto	u4540
  5794  000E16                     u4541:
  5795  000E16  EF72  F006         	goto	l4530
  5796  000E1A                     u4540:
  5797  000E1A  BE37               	btfsc	(utoa@w+1)^0,7,c
  5798  000E1C  EF18  F007         	goto	u4551
  5799  000E20  5037               	movf	(utoa@w+1)^0,w,c
  5800  000E22  E108               	bnz	u4550
  5801  000E24  0436               	decf	utoa@w^0,w,c
  5802  000E26  A0D8               	btfss	status,0,c
  5803  000E28  EF18  F007         	goto	u4551
  5804  000E2C  EF1A  F007         	goto	u4550
  5805  000E30                     u4551:
  5806  000E30  EF21  F007         	goto	l4550
  5807  000E34                     u4550:
  5808  000E34  B256               	btfsc	_flags^0,1,c
  5809  000E36  EF1F  F007         	goto	u4561
  5810  000E3A  EF21  F007         	goto	u4560
  5811  000E3E                     u4561:
  5812  000E3E  EF72  F006         	goto	l4530
  5813  000E42                     u4560:
  5814  000E42                     l4550:
  5815                           
  5816                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  5817  000E42  C022  F017         	movff	utoa@fp,pad@fp
  5818  000E46  C023  F018         	movff	utoa@fp+1,pad@fp+1
  5819  000E4A  0EC8               	movlw	low _dbuf
  5820  000E4C  2440               	addwf	utoa@i^0,w,c
  5821  000E4E  6E19               	movwf	pad@buf^0,c
  5822  000E50  0E01               	movlw	high _dbuf
  5823  000E52  2041               	addwfc	(utoa@i+1)^0,w,c
  5824  000E54  6E1A               	movwf	(pad@buf+1)^0,c
  5825  000E56  C036  F01B         	movff	utoa@w,pad@p
  5826  000E5A  C037  F01C         	movff	utoa@w+1,pad@p+1
  5827  000E5E  EC74  F00C         	call	_pad	;wreg free
  5828  000E62  C017  F022         	movff	?_pad,?_utoa
  5829  000E66  C018  F023         	movff	?_pad+1,?_utoa+1
  5830  000E6A  0012               	return		;funcret
  5831  000E6C                     __end_of_utoa:
  5832                           	opt callstack 0
  5833                           
  5834 ;; *************** function ___lomod *****************
  5835 ;; Defined at:
  5836 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
  5837 ;; Parameters:    Size  Location     Type
  5838 ;;  dividend        8    4[COMRAM] unsigned long long 
  5839 ;;  divisor         8   12[COMRAM] unsigned long long 
  5840 ;; Auto vars:     Size  Location     Type
  5841 ;;  counter         1   20[COMRAM] unsigned char 
  5842 ;; Return value:  Size  Location     Type
  5843 ;;                  8    4[COMRAM] unsigned long long 
  5844 ;; Registers used:
  5845 ;;		wreg, status,2, status,0
  5846 ;; Tracked objects:
  5847 ;;		On entry : 0/0
  5848 ;;		On exit  : 0/0
  5849 ;;		Unchanged: 0/0
  5850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5851 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5852 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5854 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5855 ;;Total ram usage:       17 bytes
  5856 ;; Hardware stack levels used:    1
  5857 ;; Hardware stack levels required when called:    4
  5858 ;; This function calls:
  5859 ;;		Nothing
  5860 ;; This function is called by:
  5861 ;;		_utoa
  5862 ;; This function uses a non-reentrant model
  5863 ;;
  5864                           
  5865                           	psect	text36
  5866  001818                     __ptext36:
  5867                           	opt callstack 0
  5868  001818                     ___lomod:
  5869                           	opt callstack 21
  5870  001818  500D               	movf	___lomod@divisor^0,w,c
  5871  00181A  100E               	iorwf	(___lomod@divisor+1)^0,w,c
  5872  00181C  100F               	iorwf	(___lomod@divisor+2)^0,w,c
  5873  00181E  1010               	iorwf	(___lomod@divisor+3)^0,w,c
  5874  001820  1011               	iorwf	(___lomod@divisor+4)^0,w,c
  5875  001822  1012               	iorwf	(___lomod@divisor+5)^0,w,c
  5876  001824  1013               	iorwf	(___lomod@divisor+6)^0,w,c
  5877  001826  1014               	iorwf	(___lomod@divisor+7)^0,w,c
  5878  001828  B4D8               	btfsc	status,2,c
  5879  00182A  EF19  F00C         	goto	u4201
  5880  00182E  EF1B  F00C         	goto	u4200
  5881  001832                     u4201:
  5882  001832  EF63  F00C         	goto	l1299
  5883  001836                     u4200:
  5884  001836  0E01               	movlw	1
  5885  001838  6E15               	movwf	___lomod@counter^0,c
  5886  00183A  EF29  F00C         	goto	l4392
  5887  00183E                     l4390:
  5888  00183E  90D8               	bcf	status,0,c
  5889  001840  360D               	rlcf	___lomod@divisor^0,f,c
  5890  001842  360E               	rlcf	(___lomod@divisor+1)^0,f,c
  5891  001844  360F               	rlcf	(___lomod@divisor+2)^0,f,c
  5892  001846  3610               	rlcf	(___lomod@divisor+3)^0,f,c
  5893  001848  3611               	rlcf	(___lomod@divisor+4)^0,f,c
  5894  00184A  3612               	rlcf	(___lomod@divisor+5)^0,f,c
  5895  00184C  3613               	rlcf	(___lomod@divisor+6)^0,f,c
  5896  00184E  3614               	rlcf	(___lomod@divisor+7)^0,f,c
  5897  001850  2A15               	incf	___lomod@counter^0,f,c
  5898  001852                     l4392:
  5899  001852  AE14               	btfss	(___lomod@divisor+7)^0,7,c
  5900  001854  EF2E  F00C         	goto	u4211
  5901  001858  EF30  F00C         	goto	u4210
  5902  00185C                     u4211:
  5903  00185C  EF1F  F00C         	goto	l4390
  5904  001860                     u4210:
  5905  001860                     l4394:
  5906  001860  500D               	movf	___lomod@divisor^0,w,c
  5907  001862  5C05               	subwf	___lomod@dividend^0,w,c
  5908  001864  500E               	movf	(___lomod@divisor+1)^0,w,c
  5909  001866  5806               	subwfb	(___lomod@dividend+1)^0,w,c
  5910  001868  500F               	movf	(___lomod@divisor+2)^0,w,c
  5911  00186A  5807               	subwfb	(___lomod@dividend+2)^0,w,c
  5912  00186C  5010               	movf	(___lomod@divisor+3)^0,w,c
  5913  00186E  5808               	subwfb	(___lomod@dividend+3)^0,w,c
  5914  001870  5011               	movf	(___lomod@divisor+4)^0,w,c
  5915  001872  5809               	subwfb	(___lomod@dividend+4)^0,w,c
  5916  001874  5012               	movf	(___lomod@divisor+5)^0,w,c
  5917  001876  580A               	subwfb	(___lomod@dividend+5)^0,w,c
  5918  001878  5013               	movf	(___lomod@divisor+6)^0,w,c
  5919  00187A  580B               	subwfb	(___lomod@dividend+6)^0,w,c
  5920  00187C  5014               	movf	(___lomod@divisor+7)^0,w,c
  5921  00187E  580C               	subwfb	(___lomod@dividend+7)^0,w,c
  5922  001880  A0D8               	btfss	status,0,c
  5923  001882  EF45  F00C         	goto	u4221
  5924  001886  EF47  F00C         	goto	u4220
  5925  00188A                     u4221:
  5926  00188A  EF57  F00C         	goto	l4398
  5927  00188E                     u4220:
  5928  00188E  500D               	movf	___lomod@divisor^0,w,c
  5929  001890  5E05               	subwf	___lomod@dividend^0,f,c
  5930  001892  500E               	movf	(___lomod@divisor+1)^0,w,c
  5931  001894  5A06               	subwfb	(___lomod@dividend+1)^0,f,c
  5932  001896  500F               	movf	(___lomod@divisor+2)^0,w,c
  5933  001898  5A07               	subwfb	(___lomod@dividend+2)^0,f,c
  5934  00189A  5010               	movf	(___lomod@divisor+3)^0,w,c
  5935  00189C  5A08               	subwfb	(___lomod@dividend+3)^0,f,c
  5936  00189E  5011               	movf	(___lomod@divisor+4)^0,w,c
  5937  0018A0  5A09               	subwfb	(___lomod@dividend+4)^0,f,c
  5938  0018A2  5012               	movf	(___lomod@divisor+5)^0,w,c
  5939  0018A4  5A0A               	subwfb	(___lomod@dividend+5)^0,f,c
  5940  0018A6  5013               	movf	(___lomod@divisor+6)^0,w,c
  5941  0018A8  5A0B               	subwfb	(___lomod@dividend+6)^0,f,c
  5942  0018AA  5014               	movf	(___lomod@divisor+7)^0,w,c
  5943  0018AC  5A0C               	subwfb	(___lomod@dividend+7)^0,f,c
  5944  0018AE                     l4398:
  5945  0018AE  90D8               	bcf	status,0,c
  5946  0018B0  3214               	rrcf	(___lomod@divisor+7)^0,f,c
  5947  0018B2  3213               	rrcf	(___lomod@divisor+6)^0,f,c
  5948  0018B4  3212               	rrcf	(___lomod@divisor+5)^0,f,c
  5949  0018B6  3211               	rrcf	(___lomod@divisor+4)^0,f,c
  5950  0018B8  3210               	rrcf	(___lomod@divisor+3)^0,f,c
  5951  0018BA  320F               	rrcf	(___lomod@divisor+2)^0,f,c
  5952  0018BC  320E               	rrcf	(___lomod@divisor+1)^0,f,c
  5953  0018BE  320D               	rrcf	___lomod@divisor^0,f,c
  5954  0018C0  2E15               	decfsz	___lomod@counter^0,f,c
  5955  0018C2  EF30  F00C         	goto	l4394
  5956  0018C6                     l1299:
  5957  0018C6  C005  F005         	movff	___lomod@dividend,?___lomod
  5958  0018CA  C006  F006         	movff	___lomod@dividend+1,?___lomod+1
  5959  0018CE  C007  F007         	movff	___lomod@dividend+2,?___lomod+2
  5960  0018D2  C008  F008         	movff	___lomod@dividend+3,?___lomod+3
  5961  0018D6  C009  F009         	movff	___lomod@dividend+4,?___lomod+4
  5962  0018DA  C00A  F00A         	movff	___lomod@dividend+5,?___lomod+5
  5963  0018DE  C00B  F00B         	movff	___lomod@dividend+6,?___lomod+6
  5964  0018E2  C00C  F00C         	movff	___lomod@dividend+7,?___lomod+7
  5965  0018E6  0012               	return		;funcret
  5966  0018E8                     __end_of___lomod:
  5967                           	opt callstack 0
  5968                           
  5969 ;; *************** function ___lodiv *****************
  5970 ;; Defined at:
  5971 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
  5972 ;; Parameters:    Size  Location     Type
  5973 ;;  dividend        8    4[COMRAM] unsigned long long 
  5974 ;;  divisor         8   12[COMRAM] unsigned long long 
  5975 ;; Auto vars:     Size  Location     Type
  5976 ;;  quotient        8   20[COMRAM] unsigned long long 
  5977 ;;  counter         1   28[COMRAM] unsigned char 
  5978 ;; Return value:  Size  Location     Type
  5979 ;;                  8    4[COMRAM] unsigned long long 
  5980 ;; Registers used:
  5981 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5982 ;; Tracked objects:
  5983 ;;		On entry : 0/0
  5984 ;;		On exit  : 0/0
  5985 ;;		Unchanged: 0/0
  5986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5987 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5988 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5990 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5991 ;;Total ram usage:       25 bytes
  5992 ;; Hardware stack levels used:    1
  5993 ;; Hardware stack levels required when called:    4
  5994 ;; This function calls:
  5995 ;;		Nothing
  5996 ;; This function is called by:
  5997 ;;		_utoa
  5998 ;; This function uses a non-reentrant model
  5999 ;;
  6000                           
  6001                           	psect	text37
  6002  001728                     __ptext37:
  6003                           	opt callstack 0
  6004  001728                     ___lodiv:
  6005                           	opt callstack 21
  6006  001728  EE20  F015         	lfsr	2,___lodiv@quotient
  6007  00172C  0E07               	movlw	7
  6008  00172E                     u4161:
  6009  00172E  6ADE               	clrf	postinc2,c
  6010  001730  06E8               	decf	wreg,f,c
  6011  001732  E2FD               	bc	u4161
  6012  001734  500D               	movf	___lodiv@divisor^0,w,c
  6013  001736  100E               	iorwf	(___lodiv@divisor+1)^0,w,c
  6014  001738  100F               	iorwf	(___lodiv@divisor+2)^0,w,c
  6015  00173A  1010               	iorwf	(___lodiv@divisor+3)^0,w,c
  6016  00173C  1011               	iorwf	(___lodiv@divisor+4)^0,w,c
  6017  00173E  1012               	iorwf	(___lodiv@divisor+5)^0,w,c
  6018  001740  1013               	iorwf	(___lodiv@divisor+6)^0,w,c
  6019  001742  1014               	iorwf	(___lodiv@divisor+7)^0,w,c
  6020  001744  B4D8               	btfsc	status,2,c
  6021  001746  EFA7  F00B         	goto	u4171
  6022  00174A  EFA9  F00B         	goto	u4170
  6023  00174E                     u4171:
  6024  00174E  EFFB  F00B         	goto	l1289
  6025  001752                     u4170:
  6026  001752  0E01               	movlw	1
  6027  001754  6E1D               	movwf	___lodiv@counter^0,c
  6028  001756  EFB7  F00B         	goto	l4372
  6029  00175A                     l4370:
  6030  00175A  90D8               	bcf	status,0,c
  6031  00175C  360D               	rlcf	___lodiv@divisor^0,f,c
  6032  00175E  360E               	rlcf	(___lodiv@divisor+1)^0,f,c
  6033  001760  360F               	rlcf	(___lodiv@divisor+2)^0,f,c
  6034  001762  3610               	rlcf	(___lodiv@divisor+3)^0,f,c
  6035  001764  3611               	rlcf	(___lodiv@divisor+4)^0,f,c
  6036  001766  3612               	rlcf	(___lodiv@divisor+5)^0,f,c
  6037  001768  3613               	rlcf	(___lodiv@divisor+6)^0,f,c
  6038  00176A  3614               	rlcf	(___lodiv@divisor+7)^0,f,c
  6039  00176C  2A1D               	incf	___lodiv@counter^0,f,c
  6040  00176E                     l4372:
  6041  00176E  AE14               	btfss	(___lodiv@divisor+7)^0,7,c
  6042  001770  EFBC  F00B         	goto	u4181
  6043  001774  EFBE  F00B         	goto	u4180
  6044  001778                     u4181:
  6045  001778  EFAD  F00B         	goto	l4370
  6046  00177C                     u4180:
  6047  00177C                     l4374:
  6048  00177C  90D8               	bcf	status,0,c
  6049  00177E  3615               	rlcf	___lodiv@quotient^0,f,c
  6050  001780  3616               	rlcf	(___lodiv@quotient+1)^0,f,c
  6051  001782  3617               	rlcf	(___lodiv@quotient+2)^0,f,c
  6052  001784  3618               	rlcf	(___lodiv@quotient+3)^0,f,c
  6053  001786  3619               	rlcf	(___lodiv@quotient+4)^0,f,c
  6054  001788  361A               	rlcf	(___lodiv@quotient+5)^0,f,c
  6055  00178A  361B               	rlcf	(___lodiv@quotient+6)^0,f,c
  6056  00178C  361C               	rlcf	(___lodiv@quotient+7)^0,f,c
  6057  00178E  500D               	movf	___lodiv@divisor^0,w,c
  6058  001790  5C05               	subwf	___lodiv@dividend^0,w,c
  6059  001792  500E               	movf	(___lodiv@divisor+1)^0,w,c
  6060  001794  5806               	subwfb	(___lodiv@dividend+1)^0,w,c
  6061  001796  500F               	movf	(___lodiv@divisor+2)^0,w,c
  6062  001798  5807               	subwfb	(___lodiv@dividend+2)^0,w,c
  6063  00179A  5010               	movf	(___lodiv@divisor+3)^0,w,c
  6064  00179C  5808               	subwfb	(___lodiv@dividend+3)^0,w,c
  6065  00179E  5011               	movf	(___lodiv@divisor+4)^0,w,c
  6066  0017A0  5809               	subwfb	(___lodiv@dividend+4)^0,w,c
  6067  0017A2  5012               	movf	(___lodiv@divisor+5)^0,w,c
  6068  0017A4  580A               	subwfb	(___lodiv@dividend+5)^0,w,c
  6069  0017A6  5013               	movf	(___lodiv@divisor+6)^0,w,c
  6070  0017A8  580B               	subwfb	(___lodiv@dividend+6)^0,w,c
  6071  0017AA  5014               	movf	(___lodiv@divisor+7)^0,w,c
  6072  0017AC  580C               	subwfb	(___lodiv@dividend+7)^0,w,c
  6073  0017AE  A0D8               	btfss	status,0,c
  6074  0017B0  EFDC  F00B         	goto	u4191
  6075  0017B4  EFDE  F00B         	goto	u4190
  6076  0017B8                     u4191:
  6077  0017B8  EFEF  F00B         	goto	l4382
  6078  0017BC                     u4190:
  6079  0017BC  500D               	movf	___lodiv@divisor^0,w,c
  6080  0017BE  5E05               	subwf	___lodiv@dividend^0,f,c
  6081  0017C0  500E               	movf	(___lodiv@divisor+1)^0,w,c
  6082  0017C2  5A06               	subwfb	(___lodiv@dividend+1)^0,f,c
  6083  0017C4  500F               	movf	(___lodiv@divisor+2)^0,w,c
  6084  0017C6  5A07               	subwfb	(___lodiv@dividend+2)^0,f,c
  6085  0017C8  5010               	movf	(___lodiv@divisor+3)^0,w,c
  6086  0017CA  5A08               	subwfb	(___lodiv@dividend+3)^0,f,c
  6087  0017CC  5011               	movf	(___lodiv@divisor+4)^0,w,c
  6088  0017CE  5A09               	subwfb	(___lodiv@dividend+4)^0,f,c
  6089  0017D0  5012               	movf	(___lodiv@divisor+5)^0,w,c
  6090  0017D2  5A0A               	subwfb	(___lodiv@dividend+5)^0,f,c
  6091  0017D4  5013               	movf	(___lodiv@divisor+6)^0,w,c
  6092  0017D6  5A0B               	subwfb	(___lodiv@dividend+6)^0,f,c
  6093  0017D8  5014               	movf	(___lodiv@divisor+7)^0,w,c
  6094  0017DA  5A0C               	subwfb	(___lodiv@dividend+7)^0,f,c
  6095  0017DC  8015               	bsf	___lodiv@quotient^0,0,c
  6096  0017DE                     l4382:
  6097  0017DE  90D8               	bcf	status,0,c
  6098  0017E0  3214               	rrcf	(___lodiv@divisor+7)^0,f,c
  6099  0017E2  3213               	rrcf	(___lodiv@divisor+6)^0,f,c
  6100  0017E4  3212               	rrcf	(___lodiv@divisor+5)^0,f,c
  6101  0017E6  3211               	rrcf	(___lodiv@divisor+4)^0,f,c
  6102  0017E8  3210               	rrcf	(___lodiv@divisor+3)^0,f,c
  6103  0017EA  320F               	rrcf	(___lodiv@divisor+2)^0,f,c
  6104  0017EC  320E               	rrcf	(___lodiv@divisor+1)^0,f,c
  6105  0017EE  320D               	rrcf	___lodiv@divisor^0,f,c
  6106  0017F0  2E1D               	decfsz	___lodiv@counter^0,f,c
  6107  0017F2  EFBE  F00B         	goto	l4374
  6108  0017F6                     l1289:
  6109  0017F6  C015  F005         	movff	___lodiv@quotient,?___lodiv
  6110  0017FA  C016  F006         	movff	___lodiv@quotient+1,?___lodiv+1
  6111  0017FE  C017  F007         	movff	___lodiv@quotient+2,?___lodiv+2
  6112  001802  C018  F008         	movff	___lodiv@quotient+3,?___lodiv+3
  6113  001806  C019  F009         	movff	___lodiv@quotient+4,?___lodiv+4
  6114  00180A  C01A  F00A         	movff	___lodiv@quotient+5,?___lodiv+5
  6115  00180E  C01B  F00B         	movff	___lodiv@quotient+6,?___lodiv+6
  6116  001812  C01C  F00C         	movff	___lodiv@quotient+7,?___lodiv+7
  6117  001816  0012               	return		;funcret
  6118  001818                     __end_of___lodiv:
  6119                           	opt callstack 0
  6120                           
  6121 ;; *************** function _stoa *****************
  6122 ;; Defined at:
  6123 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6124 ;; Parameters:    Size  Location     Type
  6125 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  6126 ;;		 -> NULL(0), 
  6127 ;;  s               2   17[COMRAM] PTR unsigned char 
  6128 ;;		 -> ?_printf(2), STR_5(9), STR_4(12), 
  6129 ;; Auto vars:     Size  Location     Type
  6130 ;;  nuls            7   20[COMRAM] unsigned char [7]
  6131 ;;  l               2   35[COMRAM] int 
  6132 ;;  p               2   33[COMRAM] int 
  6133 ;;  cp              2   31[COMRAM] PTR unsigned char 
  6134 ;;		 -> ?_printf(2), stoa@nuls(7), STR_5(9), STR_4(12), 
  6135 ;;  w               2   29[COMRAM] int 
  6136 ;;  i               2   27[COMRAM] int 
  6137 ;; Return value:  Size  Location     Type
  6138 ;;                  2   15[COMRAM] int 
  6139 ;; Registers used:
  6140 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6141 ;; Tracked objects:
  6142 ;;		On entry : 0/0
  6143 ;;		On exit  : 0/0
  6144 ;;		Unchanged: 0/0
  6145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6146 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6147 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6148 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6149 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6150 ;;Total ram usage:       22 bytes
  6151 ;; Hardware stack levels used:    1
  6152 ;; Hardware stack levels required when called:    7
  6153 ;; This function calls:
  6154 ;;		_fputc
  6155 ;;		_strlen
  6156 ;; This function is called by:
  6157 ;;		_vfpfcnvrt
  6158 ;; This function uses a non-reentrant model
  6159 ;;
  6160                           
  6161                           	psect	text38
  6162  000E6C                     __ptext38:
  6163                           	opt callstack 0
  6164  000E6C                     _stoa:
  6165                           	opt callstack 19
  6166  000E6C                     
  6167                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  6168  000E6C  EE20  F0EE         	lfsr	2,stoa@F1139
  6169  000E70  EE10  F015         	lfsr	1,stoa@nuls
  6170  000E74  0E06               	movlw	6
  6171  000E76                     u4401:
  6172  000E76  CFDB FFE3          	movff	plusw2,plusw1
  6173  000E7A  06E8               	decf	wreg,f,c
  6174  000E7C  E2FC               	bc	u4401
  6175  000E7E                     
  6176                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  6177  000E7E  C012  F020         	movff	stoa@s,stoa@cp
  6178  000E82  C013  F021         	movff	stoa@s+1,stoa@cp+1
  6179  000E86                     
  6180                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  6181  000E86  5020               	movf	stoa@cp^0,w,c
  6182  000E88  1021               	iorwf	(stoa@cp+1)^0,w,c
  6183  000E8A  A4D8               	btfss	status,2,c
  6184  000E8C  EF4A  F007         	goto	u4411
  6185  000E90  EF4C  F007         	goto	u4410
  6186  000E94                     u4411:
  6187  000E94  EF50  F007         	goto	l4484
  6188  000E98                     u4410:
  6189  000E98                     
  6190                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  6191  000E98  0E15               	movlw	low stoa@nuls
  6192  000E9A  6E20               	movwf	stoa@cp^0,c
  6193  000E9C  0E00               	movlw	high stoa@nuls
  6194  000E9E  6E21               	movwf	(stoa@cp+1)^0,c
  6195  000EA0                     l4484:
  6196                           
  6197                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  6198  000EA0  C020  F005         	movff	stoa@cp,strlen@s
  6199  000EA4  C021  F006         	movff	stoa@cp+1,strlen@s+1
  6200  000EA8  EC78  F010         	call	_strlen	;wreg free
  6201  000EAC  C005  F024         	movff	?_strlen,stoa@l
  6202  000EB0  C006  F025         	movff	?_strlen+1,stoa@l+1
  6203  000EB4                     
  6204                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  6205  000EB4  C08C  F022         	movff	_prec,stoa@p
  6206  000EB8  C08D  F023         	movff	_prec+1,stoa@p+1
  6207  000EBC                     
  6208                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  6209  000EBC  BE23               	btfsc	(stoa@p+1)^0,7,c
  6210  000EBE  EF63  F007         	goto	u4421
  6211  000EC2  EF65  F007         	goto	u4420
  6212  000EC6                     u4421:
  6213  000EC6  EF7A  F007         	goto	l748
  6214  000ECA                     u4420:
  6215  000ECA  5024               	movf	stoa@l^0,w,c
  6216  000ECC  5C22               	subwf	stoa@p^0,w,c
  6217  000ECE  5023               	movf	(stoa@p+1)^0,w,c
  6218  000ED0  0A80               	xorlw	128
  6219  000ED2  6E14               	movwf	??_stoa^0,c
  6220  000ED4  5025               	movf	(stoa@l+1)^0,w,c
  6221  000ED6  0A80               	xorlw	128
  6222  000ED8  5814               	subwfb	??_stoa^0,w,c
  6223  000EDA  A0D8               	btfss	status,0,c
  6224  000EDC  EF72  F007         	goto	u4431
  6225  000EE0  EF74  F007         	goto	u4430
  6226  000EE4                     u4431:
  6227  000EE4  EF76  F007         	goto	l746
  6228  000EE8                     u4430:
  6229  000EE8  EF7A  F007         	goto	l748
  6230  000EEC                     l746:
  6231  000EEC  C022  F024         	movff	stoa@p,stoa@l
  6232  000EF0  C023  F025         	movff	stoa@p+1,stoa@l+1
  6233  000EF4                     l748:
  6234                           
  6235                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  6236  000EF4  C024  F022         	movff	stoa@l,stoa@p
  6237  000EF8  C025  F023         	movff	stoa@l+1,stoa@p+1
  6238                           
  6239                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  6240  000EFC  C08A  F01E         	movff	_width,stoa@w
  6241  000F00  C08B  F01F         	movff	_width+1,stoa@w+1
  6242                           
  6243                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  6244  000F04  B056               	btfsc	_flags^0,0,c
  6245  000F06  EF87  F007         	goto	u4441
  6246  000F0A  EF89  F007         	goto	u4440
  6247  000F0E                     u4441:
  6248  000F0E  EFA6  F007         	goto	l4500
  6249  000F12                     u4440:
  6250  000F12  EF97  F007         	goto	l4498
  6251  000F16                     l4494:
  6252                           
  6253                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  6254  000F16  0E00               	movlw	0
  6255  000F18  6E08               	movwf	(fputc@c+1)^0,c
  6256  000F1A  0E20               	movlw	32
  6257  000F1C  6E07               	movwf	fputc@c^0,c
  6258  000F1E  C010  F009         	movff	stoa@fp,fputc@fp
  6259  000F22  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  6260  000F26  ECE5  F00D         	call	_fputc	;wreg free
  6261  000F2A                     
  6262                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  6263  000F2A  4A24               	infsnz	stoa@l^0,f,c
  6264  000F2C  2A25               	incf	(stoa@l+1)^0,f,c
  6265  000F2E                     l4498:
  6266                           
  6267                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  6268  000F2E  501E               	movf	stoa@w^0,w,c
  6269  000F30  5C24               	subwf	stoa@l^0,w,c
  6270  000F32  5025               	movf	(stoa@l+1)^0,w,c
  6271  000F34  0A80               	xorlw	128
  6272  000F36  6E14               	movwf	??_stoa^0,c
  6273  000F38  501F               	movf	(stoa@w+1)^0,w,c
  6274  000F3A  0A80               	xorlw	128
  6275  000F3C  5814               	subwfb	??_stoa^0,w,c
  6276  000F3E  A0D8               	btfss	status,0,c
  6277  000F40  EFA4  F007         	goto	u4451
  6278  000F44  EFA6  F007         	goto	u4450
  6279  000F48                     u4451:
  6280  000F48  EF8B  F007         	goto	l4494
  6281  000F4C                     u4450:
  6282  000F4C                     l4500:
  6283                           
  6284                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  6285  000F4C  0E00               	movlw	0
  6286  000F4E  6E1D               	movwf	(stoa@i+1)^0,c
  6287  000F50  0E00               	movlw	0
  6288  000F52  6E1C               	movwf	stoa@i^0,c
  6289                           
  6290                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  6291  000F54  EFCB  F007         	goto	l4508
  6292  000F58                     l4502:
  6293                           
  6294                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  6295  000F58  C020  FFF6         	movff	stoa@cp,tblptrl
  6296  000F5C  C021  FFF7         	movff	stoa@cp+1,tblptrh
  6297  000F60  0E00               	movlw	low (__mediumconst shr (0+16))
  6298  000F62  6EF8               	movwf	tblptru,c
  6299  000F64  0E0E               	movlw	(high __ramtop+-1)
  6300  000F66  64F7               	cpfsgt	tblptrh,c
  6301  000F68  D003               	bra	u4467
  6302  000F6A  0008               	tblrd		*
  6303  000F6C  50F5               	movf	tablat,w,c
  6304  000F6E  D005               	bra	u4460
  6305  000F70                     u4467:
  6306  000F70  CFF6 FFE9          	movff	tblptrl,fsr0l
  6307  000F74  CFF7 FFEA          	movff	tblptrh,fsr0h
  6308  000F78  50EF               	movf	indf0,w,c
  6309  000F7A                     u4460:
  6310  000F7A  6E14               	movwf	??_stoa^0,c
  6311  000F7C  5014               	movf	??_stoa^0,w,c
  6312  000F7E  6E07               	movwf	fputc@c^0,c
  6313  000F80  6A08               	clrf	(fputc@c+1)^0,c
  6314  000F82  C010  F009         	movff	stoa@fp,fputc@fp
  6315  000F86  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  6316  000F8A  ECE5  F00D         	call	_fputc	;wreg free
  6317  000F8E                     
  6318                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  6319  000F8E  4A20               	infsnz	stoa@cp^0,f,c
  6320  000F90  2A21               	incf	(stoa@cp+1)^0,f,c
  6321  000F92                     
  6322                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  6323  000F92  4A1C               	infsnz	stoa@i^0,f,c
  6324  000F94  2A1D               	incf	(stoa@i+1)^0,f,c
  6325  000F96                     l4508:
  6326                           
  6327                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  6328  000F96  5022               	movf	stoa@p^0,w,c
  6329  000F98  5C1C               	subwf	stoa@i^0,w,c
  6330  000F9A  501D               	movf	(stoa@i+1)^0,w,c
  6331  000F9C  0A80               	xorlw	128
  6332  000F9E  6E14               	movwf	??_stoa^0,c
  6333  000FA0  5023               	movf	(stoa@p+1)^0,w,c
  6334  000FA2  0A80               	xorlw	128
  6335  000FA4  5814               	subwfb	??_stoa^0,w,c
  6336  000FA6  A0D8               	btfss	status,0,c
  6337  000FA8  EFD8  F007         	goto	u4471
  6338  000FAC  EFDA  F007         	goto	u4470
  6339  000FB0                     u4471:
  6340  000FB0  EFAC  F007         	goto	l4502
  6341  000FB4                     u4470:
  6342  000FB4                     
  6343                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  6344  000FB4  A056               	btfss	_flags^0,0,c
  6345  000FB6  EFDF  F007         	goto	u4481
  6346  000FBA  EFE1  F007         	goto	u4480
  6347  000FBE                     u4481:
  6348  000FBE  EFFE  F007         	goto	l758
  6349  000FC2                     u4480:
  6350  000FC2  EFEF  F007         	goto	l4516
  6351  000FC6                     l4512:
  6352                           
  6353                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  6354  000FC6  0E00               	movlw	0
  6355  000FC8  6E08               	movwf	(fputc@c+1)^0,c
  6356  000FCA  0E20               	movlw	32
  6357  000FCC  6E07               	movwf	fputc@c^0,c
  6358  000FCE  C010  F009         	movff	stoa@fp,fputc@fp
  6359  000FD2  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  6360  000FD6  ECE5  F00D         	call	_fputc	;wreg free
  6361  000FDA                     
  6362                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  6363  000FDA  4A24               	infsnz	stoa@l^0,f,c
  6364  000FDC  2A25               	incf	(stoa@l+1)^0,f,c
  6365  000FDE                     l4516:
  6366                           
  6367                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  6368  000FDE  501E               	movf	stoa@w^0,w,c
  6369  000FE0  5C24               	subwf	stoa@l^0,w,c
  6370  000FE2  5025               	movf	(stoa@l+1)^0,w,c
  6371  000FE4  0A80               	xorlw	128
  6372  000FE6  6E14               	movwf	??_stoa^0,c
  6373  000FE8  501F               	movf	(stoa@w+1)^0,w,c
  6374  000FEA  0A80               	xorlw	128
  6375  000FEC  5814               	subwfb	??_stoa^0,w,c
  6376  000FEE  A0D8               	btfss	status,0,c
  6377  000FF0  EFFC  F007         	goto	u4491
  6378  000FF4  EFFE  F007         	goto	u4490
  6379  000FF8                     u4491:
  6380  000FF8  EFE3  F007         	goto	l4512
  6381  000FFC                     u4490:
  6382  000FFC                     l758:
  6383                           
  6384                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  6385  000FFC  C024  F010         	movff	stoa@l,?_stoa
  6386  001000  C025  F011         	movff	stoa@l+1,?_stoa+1
  6387  001004  0012               	return		;funcret
  6388  001006                     __end_of_stoa:
  6389                           	opt callstack 0
  6390                           
  6391 ;; *************** function _dtoa *****************
  6392 ;; Defined at:
  6393 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6394 ;; Parameters:    Size  Location     Type
  6395 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  6396 ;;		 -> NULL(0), 
  6397 ;;  d               8   35[COMRAM] long long 
  6398 ;; Auto vars:     Size  Location     Type
  6399 ;;  n               8   59[COMRAM] long long 
  6400 ;;  i               2   67[COMRAM] int 
  6401 ;;  s               2   57[COMRAM] int 
  6402 ;;  w               2   55[COMRAM] int 
  6403 ;;  p               2   53[COMRAM] int 
  6404 ;; Return value:  Size  Location     Type
  6405 ;;                  2   33[COMRAM] int 
  6406 ;; Registers used:
  6407 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6408 ;; Tracked objects:
  6409 ;;		On entry : 0/0
  6410 ;;		On exit  : 0/0
  6411 ;;		Unchanged: 0/0
  6412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6413 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6414 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6415 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6416 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6417 ;;Total ram usage:       36 bytes
  6418 ;; Hardware stack levels used:    1
  6419 ;; Hardware stack levels required when called:    9
  6420 ;; This function calls:
  6421 ;;		___aodiv
  6422 ;;		___aomod
  6423 ;;		_abs
  6424 ;;		_pad
  6425 ;; This function is called by:
  6426 ;;		_vfpfcnvrt
  6427 ;; This function uses a non-reentrant model
  6428 ;;
  6429                           
  6430                           	psect	text39
  6431  0006B4                     __ptext39:
  6432                           	opt callstack 0
  6433  0006B4                     _dtoa:
  6434                           	opt callstack 17
  6435  0006B4                     
  6436                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  6437  0006B4  C024  F03C         	movff	dtoa@d,dtoa@n
  6438  0006B8  C025  F03D         	movff	dtoa@d+1,dtoa@n+1
  6439  0006BC  C026  F03E         	movff	dtoa@d+2,dtoa@n+2
  6440  0006C0  C027  F03F         	movff	dtoa@d+3,dtoa@n+3
  6441  0006C4  C028  F040         	movff	dtoa@d+4,dtoa@n+4
  6442  0006C8  C029  F041         	movff	dtoa@d+5,dtoa@n+5
  6443  0006CC  C02A  F042         	movff	dtoa@d+6,dtoa@n+6
  6444  0006D0  C02B  F043         	movff	dtoa@d+7,dtoa@n+7
  6445  0006D4                     
  6446                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  6447  0006D4  BE43               	btfsc	(dtoa@n+7)^0,7,c
  6448  0006D6  EF6F  F003         	goto	u4251
  6449  0006DA  EF72  F003         	goto	u4250
  6450  0006DE                     u4251:
  6451  0006DE  0E01               	movlw	1
  6452  0006E0  EF73  F003         	goto	u4260
  6453  0006E4                     u4250:
  6454  0006E4  0E00               	movlw	0
  6455  0006E6                     u4260:
  6456  0006E6  6E3A               	movwf	dtoa@s^0,c
  6457  0006E8  6A3B               	clrf	(dtoa@s+1)^0,c
  6458                           
  6459                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  6460  0006EA  503A               	movf	dtoa@s^0,w,c
  6461  0006EC  103B               	iorwf	(dtoa@s+1)^0,w,c
  6462  0006EE  B4D8               	btfsc	status,2,c
  6463  0006F0  EF7C  F003         	goto	u4271
  6464  0006F4  EF7E  F003         	goto	u4270
  6465  0006F8                     u4271:
  6466  0006F8  EF8E  F003         	goto	l4420
  6467  0006FC                     u4270:
  6468  0006FC                     
  6469                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  6470  0006FC  1E43               	comf	(dtoa@n+7)^0,f,c
  6471  0006FE  1E42               	comf	(dtoa@n+6)^0,f,c
  6472  000700  1E41               	comf	(dtoa@n+5)^0,f,c
  6473  000702  1E40               	comf	(dtoa@n+4)^0,f,c
  6474  000704  1E3F               	comf	(dtoa@n+3)^0,f,c
  6475  000706  1E3E               	comf	(dtoa@n+2)^0,f,c
  6476  000708  1E3D               	comf	(dtoa@n+1)^0,f,c
  6477  00070A  6C3C               	negf	dtoa@n^0,c
  6478  00070C  0E00               	movlw	0
  6479  00070E  223D               	addwfc	(dtoa@n+1)^0,f,c
  6480  000710  223E               	addwfc	(dtoa@n+2)^0,f,c
  6481  000712  223F               	addwfc	(dtoa@n+3)^0,f,c
  6482  000714  2240               	addwfc	(dtoa@n+4)^0,f,c
  6483  000716  2241               	addwfc	(dtoa@n+5)^0,f,c
  6484  000718  2242               	addwfc	(dtoa@n+6)^0,f,c
  6485  00071A  2243               	addwfc	(dtoa@n+7)^0,f,c
  6486  00071C                     l4420:
  6487                           
  6488                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  6489  00071C  0100               	movlb	0	; () banked
  6490  00071E  BF8D               	btfsc	(_prec+1)& (0+255),7,b
  6491  000720  EF94  F003         	goto	u4281
  6492  000724  EF96  F003         	goto	u4280
  6493  000728                     u4281:
  6494  000728  EF97  F003         	goto	l4424
  6495  00072C                     u4280:
  6496  00072C                     
  6497                           ; BSR set to: 0
  6498                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  6499  00072C  9256               	bcf	_flags^0,1,c
  6500  00072E                     l4424:
  6501                           
  6502                           ; BSR set to: 0
  6503                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  6504  00072E  BF8D               	btfsc	(_prec+1)& (0+255),7,b
  6505  000730  EFA4  F003         	goto	u4290
  6506  000734  518D               	movf	(_prec+1)& (0+255),w,b
  6507  000736  E106               	bnz	u4291
  6508  000738  058C               	decf	_prec& (0+255),w,b
  6509  00073A  B0D8               	btfsc	status,0,c
  6510  00073C  EFA2  F003         	goto	u4291
  6511  000740  EFA4  F003         	goto	u4290
  6512  000744                     u4291:
  6513  000744  EFAA  F003         	goto	l719
  6514  000748                     u4290:
  6515  000748                     
  6516                           ; BSR set to: 0
  6517  000748  0E00               	movlw	0
  6518  00074A  6E37               	movwf	(dtoa@p+1)^0,c
  6519  00074C  0E01               	movlw	1
  6520  00074E  6E36               	movwf	dtoa@p^0,c
  6521  000750  EFAE  F003         	goto	l721
  6522  000754                     l719:
  6523                           
  6524                           ; BSR set to: 0
  6525  000754  C08C  F036         	movff	_prec,dtoa@p
  6526  000758  C08D  F037         	movff	_prec+1,dtoa@p+1
  6527  00075C                     l721:
  6528                           
  6529                           ; BSR set to: 0
  6530                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  6531  00075C  C08A  F038         	movff	_width,dtoa@w
  6532  000760  C08B  F039         	movff	_width+1,dtoa@w+1
  6533  000764                     
  6534                           ; BSR set to: 0
  6535                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  6536  000764  503A               	movf	dtoa@s^0,w,c
  6537  000766  103B               	iorwf	(dtoa@s+1)^0,w,c
  6538  000768  A4D8               	btfss	status,2,c
  6539  00076A  EFB9  F003         	goto	u4301
  6540  00076E  EFBB  F003         	goto	u4300
  6541  000772                     u4301:
  6542  000772  EFC2  F003         	goto	l4432
  6543  000776                     u4300:
  6544  000776                     
  6545                           ; BSR set to: 0
  6546  000776  A456               	btfss	_flags^0,2,c
  6547  000778  EFC0  F003         	goto	u4311
  6548  00077C  EFC2  F003         	goto	u4310
  6549  000780                     u4311:
  6550  000780  EFC5  F003         	goto	l4434
  6551  000784                     u4310:
  6552  000784                     l4432:
  6553                           
  6554                           ; BSR set to: 0
  6555                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  6556  000784  0638               	decf	dtoa@w^0,f,c
  6557  000786  A0D8               	btfss	status,0,c
  6558  000788  0639               	decf	(dtoa@w+1)^0,f,c
  6559  00078A                     l4434:
  6560                           
  6561                           ; BSR set to: 0
  6562                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  6563  00078A  0E00               	movlw	0
  6564  00078C  6E45               	movwf	(dtoa@i+1)^0,c
  6565  00078E  0E1F               	movlw	31
  6566  000790  6E44               	movwf	dtoa@i^0,c
  6567  000792                     
  6568                           ; BSR set to: 0
  6569                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  6570  000792  0E00               	movlw	0
  6571  000794  0101               	movlb	1	; () banked
  6572  000796  6FE7               	movwf	(_dbuf+31)& (0+255),b
  6573                           
  6574                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6575  000798  EF4A  F004         	goto	l4448
  6576  00079C                     l4438:
  6577                           
  6578                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  6579  00079C  0644               	decf	dtoa@i^0,f,c
  6580  00079E  A0D8               	btfss	status,0,c
  6581  0007A0  0645               	decf	(dtoa@i+1)^0,f,c
  6582  0007A2                     
  6583                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  6584  0007A2  0EC8               	movlw	low _dbuf
  6585  0007A4  2444               	addwf	dtoa@i^0,w,c
  6586  0007A6  6ED9               	movwf	fsr2l,c
  6587  0007A8  0E01               	movlw	high _dbuf
  6588  0007AA  2045               	addwfc	(dtoa@i+1)^0,w,c
  6589  0007AC  6EDA               	movwf	fsr2h,c
  6590  0007AE  C03C  F005         	movff	dtoa@n,___aomod@dividend
  6591  0007B2  C03D  F006         	movff	dtoa@n+1,___aomod@dividend+1
  6592  0007B6  C03E  F007         	movff	dtoa@n+2,___aomod@dividend+2
  6593  0007BA  C03F  F008         	movff	dtoa@n+3,___aomod@dividend+3
  6594  0007BE  C040  F009         	movff	dtoa@n+4,___aomod@dividend+4
  6595  0007C2  C041  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  6596  0007C6  C042  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  6597  0007CA  C043  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  6598  0007CE  0E0A               	movlw	10
  6599  0007D0  6E0D               	movwf	___aomod@divisor^0,c
  6600  0007D2  0E00               	movlw	0
  6601  0007D4  6E0E               	movwf	(___aomod@divisor+1)^0,c
  6602  0007D6  0E00               	movlw	0
  6603  0007D8  6E0F               	movwf	(___aomod@divisor+2)^0,c
  6604  0007DA  0E00               	movlw	0
  6605  0007DC  6E10               	movwf	(___aomod@divisor+3)^0,c
  6606  0007DE  0E00               	movlw	0
  6607  0007E0  6E11               	movwf	(___aomod@divisor+4)^0,c
  6608  0007E2  0E00               	movlw	0
  6609  0007E4  6E12               	movwf	(___aomod@divisor+5)^0,c
  6610  0007E6  0E00               	movlw	0
  6611  0007E8  6E13               	movwf	(___aomod@divisor+6)^0,c
  6612  0007EA  0E00               	movlw	0
  6613  0007EC  6E14               	movwf	(___aomod@divisor+7)^0,c
  6614  0007EE  EC4F  F00A         	call	___aomod	;wreg free
  6615  0007F2  C005  F02C         	movff	?___aomod,??_dtoa
  6616  0007F6  C006  F02D         	movff	?___aomod+1,??_dtoa+1
  6617  0007FA  C007  F02E         	movff	?___aomod+2,??_dtoa+2
  6618  0007FE  C008  F02F         	movff	?___aomod+3,??_dtoa+3
  6619  000802  C009  F030         	movff	?___aomod+4,??_dtoa+4
  6620  000806  C00A  F031         	movff	?___aomod+5,??_dtoa+5
  6621  00080A  C00B  F032         	movff	?___aomod+6,??_dtoa+6
  6622  00080E  C00C  F033         	movff	?___aomod+7,??_dtoa+7
  6623  000812  C02C  F017         	movff	??_dtoa,abs@a
  6624  000816  C02E  F018         	movff	??_dtoa+2,abs@a+1
  6625  00081A  EC73  F011         	call	_abs	;wreg free
  6626  00081E  5017               	movf	?_abs^0,w,c
  6627  000820  0F30               	addlw	48
  6628  000822  6EDF               	movwf	indf2,c
  6629  000824                     
  6630                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  6631  000824  0636               	decf	dtoa@p^0,f,c
  6632  000826  A0D8               	btfss	status,0,c
  6633  000828  0637               	decf	(dtoa@p+1)^0,f,c
  6634  00082A                     
  6635                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  6636  00082A  0638               	decf	dtoa@w^0,f,c
  6637  00082C  A0D8               	btfss	status,0,c
  6638  00082E  0639               	decf	(dtoa@w+1)^0,f,c
  6639  000830                     
  6640                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  6641  000830  C03C  F005         	movff	dtoa@n,___aodiv@dividend
  6642  000834  C03D  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  6643  000838  C03E  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  6644  00083C  C03F  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  6645  000840  C040  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  6646  000844  C041  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  6647  000848  C042  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  6648  00084C  C043  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  6649  000850  0E0A               	movlw	10
  6650  000852  6E0D               	movwf	___aodiv@divisor^0,c
  6651  000854  0E00               	movlw	0
  6652  000856  6E0E               	movwf	(___aodiv@divisor+1)^0,c
  6653  000858  0E00               	movlw	0
  6654  00085A  6E0F               	movwf	(___aodiv@divisor+2)^0,c
  6655  00085C  0E00               	movlw	0
  6656  00085E  6E10               	movwf	(___aodiv@divisor+3)^0,c
  6657  000860  0E00               	movlw	0
  6658  000862  6E11               	movwf	(___aodiv@divisor+4)^0,c
  6659  000864  0E00               	movlw	0
  6660  000866  6E12               	movwf	(___aodiv@divisor+5)^0,c
  6661  000868  0E00               	movlw	0
  6662  00086A  6E13               	movwf	(___aodiv@divisor+6)^0,c
  6663  00086C  0E00               	movlw	0
  6664  00086E  6E14               	movwf	(___aodiv@divisor+7)^0,c
  6665  000870  ECD0  F008         	call	___aodiv	;wreg free
  6666  000874  C005  F03C         	movff	?___aodiv,dtoa@n
  6667  000878  C006  F03D         	movff	?___aodiv+1,dtoa@n+1
  6668  00087C  C007  F03E         	movff	?___aodiv+2,dtoa@n+2
  6669  000880  C008  F03F         	movff	?___aodiv+3,dtoa@n+3
  6670  000884  C009  F040         	movff	?___aodiv+4,dtoa@n+4
  6671  000888  C00A  F041         	movff	?___aodiv+5,dtoa@n+5
  6672  00088C  C00B  F042         	movff	?___aodiv+6,dtoa@n+6
  6673  000890  C00C  F043         	movff	?___aodiv+7,dtoa@n+7
  6674  000894                     l4448:
  6675                           
  6676                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6677  000894  BE45               	btfsc	(dtoa@i+1)^0,7,c
  6678  000896  EF55  F004         	goto	u4321
  6679  00089A  5045               	movf	(dtoa@i+1)^0,w,c
  6680  00089C  E108               	bnz	u4320
  6681  00089E  0444               	decf	dtoa@i^0,w,c
  6682  0008A0  A0D8               	btfss	status,0,c
  6683  0008A2  EF55  F004         	goto	u4321
  6684  0008A6  EF57  F004         	goto	u4320
  6685  0008AA                     u4321:
  6686  0008AA  EF87  F004         	goto	l4458
  6687  0008AE                     u4320:
  6688  0008AE  503C               	movf	dtoa@n^0,w,c
  6689  0008B0  103D               	iorwf	(dtoa@n+1)^0,w,c
  6690  0008B2  103E               	iorwf	(dtoa@n+2)^0,w,c
  6691  0008B4  103F               	iorwf	(dtoa@n+3)^0,w,c
  6692  0008B6  1040               	iorwf	(dtoa@n+4)^0,w,c
  6693  0008B8  1041               	iorwf	(dtoa@n+5)^0,w,c
  6694  0008BA  1042               	iorwf	(dtoa@n+6)^0,w,c
  6695  0008BC  1043               	iorwf	(dtoa@n+7)^0,w,c
  6696  0008BE  A4D8               	btfss	status,2,c
  6697  0008C0  EF64  F004         	goto	u4331
  6698  0008C4  EF66  F004         	goto	u4330
  6699  0008C8                     u4331:
  6700  0008C8  EFCE  F003         	goto	l4438
  6701  0008CC                     u4330:
  6702  0008CC  BE37               	btfsc	(dtoa@p+1)^0,7,c
  6703  0008CE  EF73  F004         	goto	u4340
  6704  0008D2  5037               	movf	(dtoa@p+1)^0,w,c
  6705  0008D4  E106               	bnz	u4341
  6706  0008D6  0436               	decf	dtoa@p^0,w,c
  6707  0008D8  B0D8               	btfsc	status,0,c
  6708  0008DA  EF71  F004         	goto	u4341
  6709  0008DE  EF73  F004         	goto	u4340
  6710  0008E2                     u4341:
  6711  0008E2  EFCE  F003         	goto	l4438
  6712  0008E6                     u4340:
  6713  0008E6  BE39               	btfsc	(dtoa@w+1)^0,7,c
  6714  0008E8  EF7E  F004         	goto	u4351
  6715  0008EC  5039               	movf	(dtoa@w+1)^0,w,c
  6716  0008EE  E108               	bnz	u4350
  6717  0008F0  0438               	decf	dtoa@w^0,w,c
  6718  0008F2  A0D8               	btfss	status,0,c
  6719  0008F4  EF7E  F004         	goto	u4351
  6720  0008F8  EF80  F004         	goto	u4350
  6721  0008FC                     u4351:
  6722  0008FC  EF87  F004         	goto	l4458
  6723  000900                     u4350:
  6724  000900  B256               	btfsc	_flags^0,1,c
  6725  000902  EF85  F004         	goto	u4361
  6726  000906  EF87  F004         	goto	u4360
  6727  00090A                     u4361:
  6728  00090A  EFCE  F003         	goto	l4438
  6729  00090E                     u4360:
  6730  00090E                     l4458:
  6731                           
  6732                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  6733  00090E  503A               	movf	dtoa@s^0,w,c
  6734  000910  103B               	iorwf	(dtoa@s+1)^0,w,c
  6735  000912  A4D8               	btfss	status,2,c
  6736  000914  EF8E  F004         	goto	u4371
  6737  000918  EF90  F004         	goto	u4370
  6738  00091C                     u4371:
  6739  00091C  EF97  F004         	goto	l4462
  6740  000920                     u4370:
  6741  000920  A456               	btfss	_flags^0,2,c
  6742  000922  EF95  F004         	goto	u4381
  6743  000926  EF97  F004         	goto	u4380
  6744  00092A                     u4381:
  6745  00092A  EFB5  F004         	goto	l4472
  6746  00092E                     u4380:
  6747  00092E                     l4462:
  6748                           
  6749                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  6750  00092E  0644               	decf	dtoa@i^0,f,c
  6751  000930  A0D8               	btfss	status,0,c
  6752  000932  0645               	decf	(dtoa@i+1)^0,f,c
  6753  000934                     
  6754                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  6755  000934  503A               	movf	dtoa@s^0,w,c
  6756  000936  103B               	iorwf	(dtoa@s+1)^0,w,c
  6757  000938  A4D8               	btfss	status,2,c
  6758  00093A  EFA1  F004         	goto	u4391
  6759  00093E  EFA3  F004         	goto	u4390
  6760  000942                     u4391:
  6761  000942  EFA9  F004         	goto	l4468
  6762  000946                     u4390:
  6763  000946  0E00               	movlw	0
  6764  000948  6E35               	movwf	(_dtoa$1279+1)^0,c
  6765  00094A  0E2B               	movlw	43
  6766  00094C  6E34               	movwf	_dtoa$1279^0,c
  6767  00094E  EFAD  F004         	goto	l4470
  6768  000952                     l4468:
  6769  000952  0E00               	movlw	0
  6770  000954  6E35               	movwf	(_dtoa$1279+1)^0,c
  6771  000956  0E2D               	movlw	45
  6772  000958  6E34               	movwf	_dtoa$1279^0,c
  6773  00095A                     l4470:
  6774  00095A  0EC8               	movlw	low _dbuf
  6775  00095C  2444               	addwf	dtoa@i^0,w,c
  6776  00095E  6ED9               	movwf	fsr2l,c
  6777  000960  0E01               	movlw	high _dbuf
  6778  000962  2045               	addwfc	(dtoa@i+1)^0,w,c
  6779  000964  6EDA               	movwf	fsr2h,c
  6780  000966  C034  FFDF         	movff	_dtoa$1279,indf2
  6781  00096A                     l4472:
  6782                           
  6783                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  6784  00096A  C022  F017         	movff	dtoa@fp,pad@fp
  6785  00096E  C023  F018         	movff	dtoa@fp+1,pad@fp+1
  6786  000972  0EC8               	movlw	low _dbuf
  6787  000974  2444               	addwf	dtoa@i^0,w,c
  6788  000976  6E19               	movwf	pad@buf^0,c
  6789  000978  0E01               	movlw	high _dbuf
  6790  00097A  2045               	addwfc	(dtoa@i+1)^0,w,c
  6791  00097C  6E1A               	movwf	(pad@buf+1)^0,c
  6792  00097E  C038  F01B         	movff	dtoa@w,pad@p
  6793  000982  C039  F01C         	movff	dtoa@w+1,pad@p+1
  6794  000986  EC74  F00C         	call	_pad	;wreg free
  6795  00098A  C017  F022         	movff	?_pad,?_dtoa
  6796  00098E  C018  F023         	movff	?_pad+1,?_dtoa+1
  6797  000992  0012               	return		;funcret
  6798  000994                     __end_of_dtoa:
  6799                           	opt callstack 0
  6800                           
  6801 ;; *************** function _pad *****************
  6802 ;; Defined at:
  6803 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6804 ;; Parameters:    Size  Location     Type
  6805 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  6806 ;;		 -> NULL(0), 
  6807 ;;  buf             2   24[COMRAM] PTR unsigned char 
  6808 ;;		 -> dbuf(32), 
  6809 ;;  p               2   26[COMRAM] int 
  6810 ;; Auto vars:     Size  Location     Type
  6811 ;;  w               2   31[COMRAM] int 
  6812 ;;  i               2   29[COMRAM] int 
  6813 ;; Return value:  Size  Location     Type
  6814 ;;                  2   22[COMRAM] int 
  6815 ;; Registers used:
  6816 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6817 ;; Tracked objects:
  6818 ;;		On entry : 0/0
  6819 ;;		On exit  : 0/0
  6820 ;;		Unchanged: 0/0
  6821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6822 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6823 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6824 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6825 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6826 ;;Total ram usage:       11 bytes
  6827 ;; Hardware stack levels used:    1
  6828 ;; Hardware stack levels required when called:    8
  6829 ;; This function calls:
  6830 ;;		_fputc
  6831 ;;		_fputs
  6832 ;;		_strlen
  6833 ;; This function is called by:
  6834 ;;		_dtoa
  6835 ;;		_utoa
  6836 ;;		_xtoa
  6837 ;; This function uses a non-reentrant model
  6838 ;;
  6839                           
  6840                           	psect	text40
  6841  0018E8                     __ptext40:
  6842                           	opt callstack 0
  6843  0018E8                     _pad:
  6844                           	opt callstack 17
  6845  0018E8                     
  6846                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  6847  0018E8  A056               	btfss	_flags^0,0,c
  6848  0018EA  EF79  F00C         	goto	u3891
  6849  0018EE  EF7B  F00C         	goto	u3890
  6850  0018F2                     u3891:
  6851  0018F2  EF85  F00C         	goto	l4234
  6852  0018F6                     u3890:
  6853  0018F6                     
  6854                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  6855  0018F6  C019  F010         	movff	pad@buf,fputs@s
  6856  0018FA  C01A  F011         	movff	pad@buf+1,fputs@s+1
  6857  0018FE  C017  F012         	movff	pad@fp,fputs@fp
  6858  001902  C018  F013         	movff	pad@fp+1,fputs@fp+1
  6859  001906  EC0F  F011         	call	_fputs	;wreg free
  6860  00190A                     l4234:
  6861                           
  6862                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  6863  00190A  BE1C               	btfsc	(pad@p+1)^0,7,c
  6864  00190C  EF8A  F00C         	goto	u3901
  6865  001910  EF8C  F00C         	goto	u3900
  6866  001914                     u3901:
  6867  001914  EF92  F00C         	goto	l4238
  6868  001918                     u3900:
  6869  001918  C01B  F020         	movff	pad@p,pad@w
  6870  00191C  C01C  F021         	movff	pad@p+1,pad@w+1
  6871  001920  EF96  F00C         	goto	l708
  6872  001924                     l4238:
  6873  001924  0E00               	movlw	0
  6874  001926  6E21               	movwf	(pad@w+1)^0,c
  6875  001928  0E00               	movlw	0
  6876  00192A  6E20               	movwf	pad@w^0,c
  6877  00192C                     l708:
  6878                           
  6879                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  6880  00192C  0E00               	movlw	0
  6881  00192E  6E1F               	movwf	(pad@i+1)^0,c
  6882  001930  0E00               	movlw	0
  6883  001932  6E1E               	movwf	pad@i^0,c
  6884                           
  6885                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6886  001934  EFA8  F00C         	goto	l4244
  6887  001938                     l4240:
  6888                           
  6889                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  6890  001938  0E00               	movlw	0
  6891  00193A  6E08               	movwf	(fputc@c+1)^0,c
  6892  00193C  0E20               	movlw	32
  6893  00193E  6E07               	movwf	fputc@c^0,c
  6894  001940  C017  F009         	movff	pad@fp,fputc@fp
  6895  001944  C018  F00A         	movff	pad@fp+1,fputc@fp+1
  6896  001948  ECE5  F00D         	call	_fputc	;wreg free
  6897  00194C                     
  6898                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  6899  00194C  4A1E               	infsnz	pad@i^0,f,c
  6900  00194E  2A1F               	incf	(pad@i+1)^0,f,c
  6901  001950                     l4244:
  6902                           
  6903                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6904  001950  5020               	movf	pad@w^0,w,c
  6905  001952  5C1E               	subwf	pad@i^0,w,c
  6906  001954  501F               	movf	(pad@i+1)^0,w,c
  6907  001956  0A80               	xorlw	128
  6908  001958  6E1D               	movwf	??_pad^0,c
  6909  00195A  5021               	movf	(pad@w+1)^0,w,c
  6910  00195C  0A80               	xorlw	128
  6911  00195E  581D               	subwfb	??_pad^0,w,c
  6912  001960  A0D8               	btfss	status,0,c
  6913  001962  EFB5  F00C         	goto	u3911
  6914  001966  EFB7  F00C         	goto	u3910
  6915  00196A                     u3911:
  6916  00196A  EF9C  F00C         	goto	l4240
  6917  00196E                     u3910:
  6918  00196E                     
  6919                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  6920  00196E  B056               	btfsc	_flags^0,0,c
  6921  001970  EFBC  F00C         	goto	u3921
  6922  001974  EFBE  F00C         	goto	u3920
  6923  001978                     u3921:
  6924  001978  EFC8  F00C         	goto	l4248
  6925  00197C                     u3920:
  6926  00197C                     
  6927                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  6928  00197C  C019  F010         	movff	pad@buf,fputs@s
  6929  001980  C01A  F011         	movff	pad@buf+1,fputs@s+1
  6930  001984  C017  F012         	movff	pad@fp,fputs@fp
  6931  001988  C018  F013         	movff	pad@fp+1,fputs@fp+1
  6932  00198C  EC0F  F011         	call	_fputs	;wreg free
  6933  001990                     l4248:
  6934                           
  6935                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  6936  001990  C019  F005         	movff	pad@buf,strlen@s
  6937  001994  C01A  F006         	movff	pad@buf+1,strlen@s+1
  6938  001998  EC78  F010         	call	_strlen	;wreg free
  6939  00199C  5020               	movf	pad@w^0,w,c
  6940  00199E  2405               	addwf	?_strlen^0,w,c
  6941  0019A0  6E17               	movwf	?_pad^0,c
  6942  0019A2  5021               	movf	(pad@w+1)^0,w,c
  6943  0019A4  2006               	addwfc	(?_strlen+1)^0,w,c
  6944  0019A6  6E18               	movwf	(?_pad+1)^0,c
  6945  0019A8  0012               	return		;funcret
  6946  0019AA                     __end_of_pad:
  6947                           	opt callstack 0
  6948                           
  6949 ;; *************** function _strlen *****************
  6950 ;; Defined at:
  6951 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  6952 ;; Parameters:    Size  Location     Type
  6953 ;;  s               2    4[COMRAM] PTR const unsigned char 
  6954 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), STR_5(9), 
  6955 ;;		 -> STR_4(12), 
  6956 ;; Auto vars:     Size  Location     Type
  6957 ;;  a               2    6[COMRAM] PTR const unsigned char 
  6958 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), STR_5(9), 
  6959 ;;		 -> STR_4(12), 
  6960 ;; Return value:  Size  Location     Type
  6961 ;;                  2    4[COMRAM] unsigned int 
  6962 ;; Registers used:
  6963 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  6964 ;; Tracked objects:
  6965 ;;		On entry : 0/0
  6966 ;;		On exit  : 0/0
  6967 ;;		Unchanged: 0/0
  6968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6969 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6970 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6972 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6973 ;;Total ram usage:        4 bytes
  6974 ;; Hardware stack levels used:    1
  6975 ;; Hardware stack levels required when called:    4
  6976 ;; This function calls:
  6977 ;;		Nothing
  6978 ;; This function is called by:
  6979 ;;		_pad
  6980 ;;		_stoa
  6981 ;; This function uses a non-reentrant model
  6982 ;;
  6983                           
  6984                           	psect	text41
  6985  0020F0                     __ptext41:
  6986                           	opt callstack 0
  6987  0020F0                     _strlen:
  6988                           	opt callstack 20
  6989  0020F0  C005  F007         	movff	strlen@s,strlen@a
  6990  0020F4  C006  F008         	movff	strlen@s+1,strlen@a+1
  6991  0020F8  EF80  F010         	goto	l4220
  6992  0020FC                     l4218:
  6993  0020FC  4A05               	infsnz	strlen@s^0,f,c
  6994  0020FE  2A06               	incf	(strlen@s+1)^0,f,c
  6995  002100                     l4220:
  6996  002100  C005  FFF6         	movff	strlen@s,tblptrl
  6997  002104  C006  FFF7         	movff	strlen@s+1,tblptrh
  6998  002108  0E00               	movlw	low (__mediumconst shr (0+16))
  6999  00210A  6EF8               	movwf	tblptru,c
  7000  00210C  0E0E               	movlw	(high __ramtop+-1)
  7001  00210E  64F7               	cpfsgt	tblptrh,c
  7002  002110  D003               	bra	u3857
  7003  002112  0008               	tblrd		*
  7004  002114  50F5               	movf	tablat,w,c
  7005  002116  D005               	bra	u3850
  7006  002118                     u3857:
  7007  002118  CFF6 FFE9          	movff	tblptrl,fsr0l
  7008  00211C  CFF7 FFEA          	movff	tblptrh,fsr0h
  7009  002120  50EF               	movf	indf0,w,c
  7010  002122                     u3850:
  7011  002122  0900               	iorlw	0
  7012  002124  A4D8               	btfss	status,2,c
  7013  002126  EF97  F010         	goto	u3861
  7014  00212A  EF99  F010         	goto	u3860
  7015  00212E                     u3861:
  7016  00212E  EF7E  F010         	goto	l4218
  7017  002132                     u3860:
  7018  002132  5007               	movf	strlen@a^0,w,c
  7019  002134  5C05               	subwf	strlen@s^0,w,c
  7020  002136  6E05               	movwf	?_strlen^0,c
  7021  002138  5008               	movf	(strlen@a+1)^0,w,c
  7022  00213A  5806               	subwfb	(strlen@s+1)^0,w,c
  7023  00213C  6E06               	movwf	(?_strlen+1)^0,c
  7024  00213E  0012               	return		;funcret
  7025  002140                     __end_of_strlen:
  7026                           	opt callstack 0
  7027                           
  7028 ;; *************** function _fputs *****************
  7029 ;; Defined at:
  7030 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  7031 ;; Parameters:    Size  Location     Type
  7032 ;;  s               2   15[COMRAM] PTR const unsigned char 
  7033 ;;		 -> dbuf(32), 
  7034 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  7035 ;;		 -> NULL(0), 
  7036 ;; Auto vars:     Size  Location     Type
  7037 ;;  i               2   20[COMRAM] int 
  7038 ;;  c               1   19[COMRAM] unsigned char 
  7039 ;; Return value:  Size  Location     Type
  7040 ;;                  2   15[COMRAM] int 
  7041 ;; Registers used:
  7042 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7043 ;; Tracked objects:
  7044 ;;		On entry : 0/0
  7045 ;;		On exit  : 0/0
  7046 ;;		Unchanged: 0/0
  7047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7048 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7049 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7051 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7052 ;;Total ram usage:        7 bytes
  7053 ;; Hardware stack levels used:    1
  7054 ;; Hardware stack levels required when called:    7
  7055 ;; This function calls:
  7056 ;;		_fputc
  7057 ;; This function is called by:
  7058 ;;		_pad
  7059 ;; This function uses a non-reentrant model
  7060 ;;
  7061                           
  7062                           	psect	text42
  7063  00221E                     __ptext42:
  7064                           	opt callstack 0
  7065  00221E                     _fputs:
  7066                           	opt callstack 17
  7067  00221E  0E00               	movlw	0
  7068  002220  6E16               	movwf	(fputs@i+1)^0,c
  7069  002222  0E00               	movlw	0
  7070  002224  6E15               	movwf	fputs@i^0,c
  7071  002226  EF20  F011         	goto	l4214
  7072  00222A                     l4210:
  7073  00222A  C014  F007         	movff	fputs@c,fputc@c
  7074  00222E  6A08               	clrf	(fputc@c+1)^0,c
  7075  002230  C012  F009         	movff	fputs@fp,fputc@fp
  7076  002234  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
  7077  002238  ECE5  F00D         	call	_fputc	;wreg free
  7078  00223C  4A15               	infsnz	fputs@i^0,f,c
  7079  00223E  2A16               	incf	(fputs@i+1)^0,f,c
  7080  002240                     l4214:
  7081  002240  5015               	movf	fputs@i^0,w,c
  7082  002242  2410               	addwf	fputs@s^0,w,c
  7083  002244  6ED9               	movwf	fsr2l,c
  7084  002246  5016               	movf	(fputs@i+1)^0,w,c
  7085  002248  2011               	addwfc	(fputs@s+1)^0,w,c
  7086  00224A  6EDA               	movwf	fsr2h,c
  7087  00224C  50DF               	movf	indf2,w,c
  7088  00224E  6E14               	movwf	fputs@c^0,c
  7089  002250  5014               	movf	fputs@c^0,w,c
  7090  002252  A4D8               	btfss	status,2,c
  7091  002254  EF2E  F011         	goto	u3841
  7092  002258  EF30  F011         	goto	u3840
  7093  00225C                     u3841:
  7094  00225C  EF15  F011         	goto	l4210
  7095  002260                     u3840:
  7096  002260  0012               	return		;funcret
  7097  002262                     __end_of_fputs:
  7098                           	opt callstack 0
  7099                           
  7100 ;; *************** function _fputc *****************
  7101 ;; Defined at:
  7102 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  7103 ;; Parameters:    Size  Location     Type
  7104 ;;  c               2    6[COMRAM] int 
  7105 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
  7106 ;;		 -> NULL(0), 
  7107 ;; Auto vars:     Size  Location     Type
  7108 ;;		None
  7109 ;; Return value:  Size  Location     Type
  7110 ;;                  2    6[COMRAM] int 
  7111 ;; Registers used:
  7112 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7113 ;; Tracked objects:
  7114 ;;		On entry : 0/0
  7115 ;;		On exit  : 0/0
  7116 ;;		Unchanged: 0/0
  7117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7118 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7120 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7121 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7122 ;;Total ram usage:        9 bytes
  7123 ;; Hardware stack levels used:    1
  7124 ;; Hardware stack levels required when called:    6
  7125 ;; This function calls:
  7126 ;;		_putch
  7127 ;; This function is called by:
  7128 ;;		_pad
  7129 ;;		_stoa
  7130 ;;		_vfpfcnvrt
  7131 ;;		_fputs
  7132 ;; This function uses a non-reentrant model
  7133 ;;
  7134                           
  7135                           	psect	text43
  7136  001BCA                     __ptext43:
  7137                           	opt callstack 0
  7138  001BCA                     _fputc:
  7139                           	opt callstack 17
  7140  001BCA  5009               	movf	fputc@fp^0,w,c
  7141  001BCC  100A               	iorwf	(fputc@fp+1)^0,w,c
  7142  001BCE  B4D8               	btfsc	status,2,c
  7143  001BD0  EFEC  F00D         	goto	u3801
  7144  001BD4  EFEE  F00D         	goto	u3800
  7145  001BD8                     u3801:
  7146  001BD8  EFF7  F00D         	goto	l4198
  7147  001BDC                     u3800:
  7148  001BDC  5009               	movf	fputc@fp^0,w,c
  7149  001BDE  100A               	iorwf	(fputc@fp+1)^0,w,c
  7150  001BE0  A4D8               	btfss	status,2,c
  7151  001BE2  EFF5  F00D         	goto	u3811
  7152  001BE6  EFF7  F00D         	goto	u3810
  7153  001BEA                     u3811:
  7154  001BEA  EFFC  F00D         	goto	l4200
  7155  001BEE                     u3810:
  7156  001BEE                     l4198:
  7157  001BEE  5007               	movf	fputc@c^0,w,c
  7158  001BF0  ECC7  F012         	call	_putch
  7159  001BF4  EF2F  F00E         	goto	l1598
  7160  001BF8                     l4200:
  7161  001BF8  EE20 F004          	lfsr	2,4
  7162  001BFC  5009               	movf	fputc@fp^0,w,c
  7163  001BFE  26D9               	addwf	fsr2l,f,c
  7164  001C00  500A               	movf	(fputc@fp+1)^0,w,c
  7165  001C02  22DA               	addwfc	fsr2h,f,c
  7166  001C04  50DE               	movf	postinc2,w,c
  7167  001C06  10DE               	iorwf	postinc2,w,c
  7168  001C08  B4D8               	btfsc	status,2,c
  7169  001C0A  EF09  F00E         	goto	u3821
  7170  001C0E  EF0B  F00E         	goto	u3820
  7171  001C12                     u3821:
  7172  001C12  EF26  F00E         	goto	l4204
  7173  001C16                     u3820:
  7174  001C16  EE20 F004          	lfsr	2,4
  7175  001C1A  5009               	movf	fputc@fp^0,w,c
  7176  001C1C  26D9               	addwf	fsr2l,f,c
  7177  001C1E  500A               	movf	(fputc@fp+1)^0,w,c
  7178  001C20  22DA               	addwfc	fsr2h,f,c
  7179  001C22  EE10 F002          	lfsr	1,2
  7180  001C26  5009               	movf	fputc@fp^0,w,c
  7181  001C28  26E1               	addwf	fsr1l,f,c
  7182  001C2A  500A               	movf	(fputc@fp+1)^0,w,c
  7183  001C2C  22E2               	addwfc	fsr1h,f,c
  7184  001C2E  50DE               	movf	postinc2,w,c
  7185  001C30  5CE6               	subwf	postinc1,w,c
  7186  001C32  50E6               	movf	postinc1,w,c
  7187  001C34  0A80               	xorlw	128
  7188  001C36  6E0F               	movwf	(??_fputc+4)^0,c
  7189  001C38  50DE               	movf	postinc2,w,c
  7190  001C3A  0A80               	xorlw	128
  7191  001C3C  580F               	subwfb	(??_fputc+4)^0,w,c
  7192  001C3E  B0D8               	btfsc	status,0,c
  7193  001C40  EF24  F00E         	goto	u3831
  7194  001C44  EF26  F00E         	goto	u3830
  7195  001C48                     u3831:
  7196  001C48  EF2F  F00E         	goto	l1598
  7197  001C4C                     u3830:
  7198  001C4C                     l4204:
  7199  001C4C  EE20 F002          	lfsr	2,2
  7200  001C50  5009               	movf	fputc@fp^0,w,c
  7201  001C52  26D9               	addwf	fsr2l,f,c
  7202  001C54  500A               	movf	(fputc@fp+1)^0,w,c
  7203  001C56  22DA               	addwfc	fsr2h,f,c
  7204  001C58  2ADE               	incf	postinc2,f,c
  7205  001C5A  0E00               	movlw	0
  7206  001C5C  22DD               	addwfc	postdec2,f,c
  7207  001C5E                     l1598:
  7208  001C5E  0012               	return		;funcret
  7209  001C60                     __end_of_fputc:
  7210                           	opt callstack 0
  7211                           
  7212 ;; *************** function _putch *****************
  7213 ;; Defined at:
  7214 ;;		line 201 in file "mcc_generated_files/eusart2.c"
  7215 ;; Parameters:    Size  Location     Type
  7216 ;;  txData          1    wreg     unsigned char 
  7217 ;; Auto vars:     Size  Location     Type
  7218 ;;  txData          1    5[COMRAM] unsigned char 
  7219 ;; Return value:  Size  Location     Type
  7220 ;;                  1    wreg      void 
  7221 ;; Registers used:
  7222 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7223 ;; Tracked objects:
  7224 ;;		On entry : 0/0
  7225 ;;		On exit  : 0/0
  7226 ;;		Unchanged: 0/0
  7227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7229 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7231 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7232 ;;Total ram usage:        1 bytes
  7233 ;; Hardware stack levels used:    1
  7234 ;; Hardware stack levels required when called:    5
  7235 ;; This function calls:
  7236 ;;		_EUSART2_Write
  7237 ;; This function is called by:
  7238 ;;		_fputc
  7239 ;; This function uses a non-reentrant model
  7240 ;;
  7241                           
  7242                           	psect	text44
  7243  00258E                     __ptext44:
  7244                           	opt callstack 0
  7245  00258E                     _putch:
  7246                           	opt callstack 17
  7247                           
  7248                           ;incstack = 0
  7249                           ;putch@txData stored from wreg
  7250  00258E  6E06               	movwf	putch@txData^0,c
  7251  002590                     
  7252                           ;mcc_generated_files/eusart2.c: 201: void putch(char txData);mcc_generated_files/eusart2
      +                          .c: 202: {;mcc_generated_files/eusart2.c: 203:     EUSART2_Write(txData);
  7253  002590  5006               	movf	putch@txData^0,w,c
  7254  002592  ECC9  F00F         	call	_EUSART2_Write
  7255  002596  0012               	return		;funcret
  7256  002598                     __end_of_putch:
  7257                           	opt callstack 0
  7258                           
  7259 ;; *************** function _EUSART2_Write *****************
  7260 ;; Defined at:
  7261 ;;		line 173 in file "mcc_generated_files/eusart2.c"
  7262 ;; Parameters:    Size  Location     Type
  7263 ;;  txData          1    wreg     unsigned char 
  7264 ;; Auto vars:     Size  Location     Type
  7265 ;;  txData          1    4[COMRAM] unsigned char 
  7266 ;; Return value:  Size  Location     Type
  7267 ;;                  1    wreg      void 
  7268 ;; Registers used:
  7269 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7270 ;; Tracked objects:
  7271 ;;		On entry : 0/0
  7272 ;;		On exit  : 0/0
  7273 ;;		Unchanged: 0/0
  7274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7276 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7278 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7279 ;;Total ram usage:        1 bytes
  7280 ;; Hardware stack levels used:    1
  7281 ;; Hardware stack levels required when called:    4
  7282 ;; This function calls:
  7283 ;;		Nothing
  7284 ;; This function is called by:
  7285 ;;		_putch
  7286 ;; This function uses a non-reentrant model
  7287 ;;
  7288                           
  7289                           	psect	text45
  7290  001F92                     __ptext45:
  7291                           	opt callstack 0
  7292  001F92                     _EUSART2_Write:
  7293                           	opt callstack 17
  7294                           
  7295                           ;incstack = 0
  7296                           ;EUSART2_Write@txData stored from wreg
  7297  001F92  6E05               	movwf	EUSART2_Write@txData^0,c
  7298  001F94                     l4176:
  7299                           
  7300                           ;mcc_generated_files/eusart2.c: 175:     while(0 == eusart2TxBufferRemaining)
  7301  001F94  0100               	movlb	0	; () banked
  7302  001F96  51E2               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
  7303  001F98  B4D8               	btfsc	status,2,c
  7304  001F9A  EFD1  F00F         	goto	u3771
  7305  001F9E  EFD3  F00F         	goto	u3770
  7306  001FA2                     u3771:
  7307  001FA2  EFCA  F00F         	goto	l4176
  7308  001FA6                     u3770:
  7309  001FA6                     
  7310                           ; BSR set to: 0
  7311                           ;mcc_generated_files/eusart2.c: 179:     if(0 == PIE3bits.TX2IE)
  7312  001FA6  010E               	movlb	14	; () banked
  7313  001FA8  BDC5               	btfsc	197,6,b	;volatile
  7314  001FAA  EFD9  F00F         	goto	u3781
  7315  001FAE  EFDB  F00F         	goto	u3780
  7316  001FB2                     u3781:
  7317  001FB2  EFDF  F00F         	goto	l321
  7318  001FB6                     u3780:
  7319  001FB6                     
  7320                           ; BSR set to: 14
  7321                           ;mcc_generated_files/eusart2.c: 180:     {;mcc_generated_files/eusart2.c: 181:         T
      +                          X2REG = txData;
  7322  001FB6  C005  FE9A         	movff	EUSART2_Write@txData,3738	;volatile
  7323                           
  7324                           ;mcc_generated_files/eusart2.c: 182:     }
  7325  001FBA  EFF5  F00F         	goto	l4190
  7326  001FBE                     l321:
  7327                           
  7328                           ; BSR set to: 14
  7329                           ;mcc_generated_files/eusart2.c: 184:     {;mcc_generated_files/eusart2.c: 185:         P
      +                          IE3bits.TX2IE = 0;
  7330  001FBE  9DC5               	bcf	197,6,b	;volatile
  7331  001FC0                     
  7332                           ; BSR set to: 14
  7333                           ;mcc_generated_files/eusart2.c: 186:         eusart2TxBuffer[eusart2TxHead++] = txData;
  7334  001FC0  0E80               	movlw	low _eusart2TxBuffer
  7335  001FC2  0100               	movlb	0	; () banked
  7336  001FC4  259E               	addwf	_eusart2TxHead& (0+255),w,b	;volatile
  7337  001FC6  6ED9               	movwf	fsr2l,c
  7338  001FC8  6ADA               	clrf	fsr2h,c
  7339  001FCA  0E00               	movlw	high _eusart2TxBuffer
  7340  001FCC  22DA               	addwfc	fsr2h,f,c
  7341  001FCE  C005  FFDF         	movff	EUSART2_Write@txData,indf2
  7342  001FD2                     
  7343                           ; BSR set to: 0
  7344  001FD2  2B9E               	incf	_eusart2TxHead& (0+255),f,b	;volatile
  7345  001FD4                     
  7346                           ; BSR set to: 0
  7347                           ;mcc_generated_files/eusart2.c: 187:         if(sizeof(eusart2TxBuffer) <= eusart2TxHead
      +                          )
  7348  001FD4  0E07               	movlw	7
  7349  001FD6  659E               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
  7350  001FD8  EFF0  F00F         	goto	u3791
  7351  001FDC  EFF2  F00F         	goto	u3790
  7352  001FE0                     u3791:
  7353  001FE0  EFF4  F00F         	goto	l4188
  7354  001FE4                     u3790:
  7355  001FE4                     
  7356                           ; BSR set to: 0
  7357                           ;mcc_generated_files/eusart2.c: 188:         {;mcc_generated_files/eusart2.c: 189:      
      +                                 eusart2TxHead = 0;
  7358  001FE4  0E00               	movlw	0
  7359  001FE6  6F9E               	movwf	_eusart2TxHead& (0+255),b	;volatile
  7360  001FE8                     l4188:
  7361                           
  7362                           ; BSR set to: 0
  7363                           ;mcc_generated_files/eusart2.c: 191:         eusart2TxBufferRemaining--;
  7364  001FE8  07E2               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
  7365  001FEA                     l4190:
  7366                           
  7367                           ;mcc_generated_files/eusart2.c: 193:     PIE3bits.TX2IE = 1;
  7368  001FEA  010E               	movlb	14	; () banked
  7369  001FEC  8DC5               	bsf	197,6,b	;volatile
  7370  001FEE                     
  7371                           ; BSR set to: 14
  7372  001FEE  0012               	return		;funcret
  7373  001FF0                     __end_of_EUSART2_Write:
  7374                           	opt callstack 0
  7375                           
  7376 ;; *************** function _abs *****************
  7377 ;; Defined at:
  7378 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  7379 ;; Parameters:    Size  Location     Type
  7380 ;;  a               2   22[COMRAM] int 
  7381 ;; Auto vars:     Size  Location     Type
  7382 ;;		None
  7383 ;; Return value:  Size  Location     Type
  7384 ;;                  2   22[COMRAM] int 
  7385 ;; Registers used:
  7386 ;;		wreg, status,2, status,0
  7387 ;; Tracked objects:
  7388 ;;		On entry : 0/0
  7389 ;;		On exit  : 0/0
  7390 ;;		Unchanged: 0/0
  7391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7392 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7394 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7395 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7396 ;;Total ram usage:        4 bytes
  7397 ;; Hardware stack levels used:    1
  7398 ;; Hardware stack levels required when called:    4
  7399 ;; This function calls:
  7400 ;;		Nothing
  7401 ;; This function is called by:
  7402 ;;		_dtoa
  7403 ;; This function uses a non-reentrant model
  7404 ;;
  7405                           
  7406                           	psect	text46
  7407  0022E6                     __ptext46:
  7408                           	opt callstack 0
  7409  0022E6                     _abs:
  7410                           	opt callstack 21
  7411  0022E6  BE18               	btfsc	(abs@a+1)^0,7,c
  7412  0022E8  EF80  F011         	goto	u3930
  7413  0022EC  5018               	movf	(abs@a+1)^0,w,c
  7414  0022EE  E106               	bnz	u3931
  7415  0022F0  0417               	decf	abs@a^0,w,c
  7416  0022F2  B0D8               	btfsc	status,0,c
  7417  0022F4  EF7E  F011         	goto	u3931
  7418  0022F8  EF80  F011         	goto	u3930
  7419  0022FC                     u3931:
  7420  0022FC  EF8E  F011         	goto	l1526
  7421  002300                     u3930:
  7422  002300  C017  F019         	movff	abs@a,??_abs
  7423  002304  C018  F01A         	movff	abs@a+1,??_abs+1
  7424  002308  1E19               	comf	??_abs^0,f,c
  7425  00230A  1E1A               	comf	(??_abs+1)^0,f,c
  7426  00230C  4A19               	infsnz	??_abs^0,f,c
  7427  00230E  2A1A               	incf	(??_abs+1)^0,f,c
  7428  002310  C019  F017         	movff	??_abs,?_abs
  7429  002314  C01A  F018         	movff	??_abs+1,?_abs+1
  7430  002318  EF92  F011         	goto	l1529
  7431  00231C                     l1526:
  7432  00231C  C017  F017         	movff	abs@a,?_abs
  7433  002320  C018  F018         	movff	abs@a+1,?_abs+1
  7434  002324                     l1529:
  7435  002324  0012               	return		;funcret
  7436  002326                     __end_of_abs:
  7437                           	opt callstack 0
  7438                           
  7439 ;; *************** function ___aomod *****************
  7440 ;; Defined at:
  7441 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  7442 ;; Parameters:    Size  Location     Type
  7443 ;;  dividend        8    4[COMRAM] long long 
  7444 ;;  divisor         8   12[COMRAM] long long 
  7445 ;; Auto vars:     Size  Location     Type
  7446 ;;  sign            1   21[COMRAM] unsigned char 
  7447 ;;  counter         1   20[COMRAM] unsigned char 
  7448 ;; Return value:  Size  Location     Type
  7449 ;;                  8    4[COMRAM] long long 
  7450 ;; Registers used:
  7451 ;;		wreg, status,2, status,0
  7452 ;; Tracked objects:
  7453 ;;		On entry : 0/0
  7454 ;;		On exit  : 0/0
  7455 ;;		Unchanged: 0/0
  7456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7457 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7458 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7460 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7461 ;;Total ram usage:       18 bytes
  7462 ;; Hardware stack levels used:    1
  7463 ;; Hardware stack levels required when called:    4
  7464 ;; This function calls:
  7465 ;;		Nothing
  7466 ;; This function is called by:
  7467 ;;		_dtoa
  7468 ;; This function uses a non-reentrant model
  7469 ;;
  7470                           
  7471                           	psect	text47
  7472  00149E                     __ptext47:
  7473                           	opt callstack 0
  7474  00149E                     ___aomod:
  7475                           	opt callstack 21
  7476  00149E  0E00               	movlw	0
  7477  0014A0  6E16               	movwf	___aomod@sign^0,c
  7478  0014A2  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
  7479  0014A4  EF58  F00A         	goto	u4100
  7480  0014A8  EF56  F00A         	goto	u4101
  7481  0014AC                     u4101:
  7482  0014AC  EF6A  F00A         	goto	l4336
  7483  0014B0                     u4100:
  7484  0014B0  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  7485  0014B2  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  7486  0014B4  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  7487  0014B6  1E09               	comf	(___aomod@dividend+4)^0,f,c
  7488  0014B8  1E08               	comf	(___aomod@dividend+3)^0,f,c
  7489  0014BA  1E07               	comf	(___aomod@dividend+2)^0,f,c
  7490  0014BC  1E06               	comf	(___aomod@dividend+1)^0,f,c
  7491  0014BE  6C05               	negf	___aomod@dividend^0,c
  7492  0014C0  0E00               	movlw	0
  7493  0014C2  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  7494  0014C4  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  7495  0014C6  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  7496  0014C8  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  7497  0014CA  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  7498  0014CC  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  7499  0014CE  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  7500  0014D0  0E01               	movlw	1
  7501  0014D2  6E16               	movwf	___aomod@sign^0,c
  7502  0014D4                     l4336:
  7503  0014D4  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
  7504  0014D6  EF71  F00A         	goto	u4110
  7505  0014DA  EF6F  F00A         	goto	u4111
  7506  0014DE                     u4111:
  7507  0014DE  EF81  F00A         	goto	l4340
  7508  0014E2                     u4110:
  7509  0014E2  1E14               	comf	(___aomod@divisor+7)^0,f,c
  7510  0014E4  1E13               	comf	(___aomod@divisor+6)^0,f,c
  7511  0014E6  1E12               	comf	(___aomod@divisor+5)^0,f,c
  7512  0014E8  1E11               	comf	(___aomod@divisor+4)^0,f,c
  7513  0014EA  1E10               	comf	(___aomod@divisor+3)^0,f,c
  7514  0014EC  1E0F               	comf	(___aomod@divisor+2)^0,f,c
  7515  0014EE  1E0E               	comf	(___aomod@divisor+1)^0,f,c
  7516  0014F0  6C0D               	negf	___aomod@divisor^0,c
  7517  0014F2  0E00               	movlw	0
  7518  0014F4  220E               	addwfc	(___aomod@divisor+1)^0,f,c
  7519  0014F6  220F               	addwfc	(___aomod@divisor+2)^0,f,c
  7520  0014F8  2210               	addwfc	(___aomod@divisor+3)^0,f,c
  7521  0014FA  2211               	addwfc	(___aomod@divisor+4)^0,f,c
  7522  0014FC  2212               	addwfc	(___aomod@divisor+5)^0,f,c
  7523  0014FE  2213               	addwfc	(___aomod@divisor+6)^0,f,c
  7524  001500  2214               	addwfc	(___aomod@divisor+7)^0,f,c
  7525  001502                     l4340:
  7526  001502  500D               	movf	___aomod@divisor^0,w,c
  7527  001504  100E               	iorwf	(___aomod@divisor+1)^0,w,c
  7528  001506  100F               	iorwf	(___aomod@divisor+2)^0,w,c
  7529  001508  1010               	iorwf	(___aomod@divisor+3)^0,w,c
  7530  00150A  1011               	iorwf	(___aomod@divisor+4)^0,w,c
  7531  00150C  1012               	iorwf	(___aomod@divisor+5)^0,w,c
  7532  00150E  1013               	iorwf	(___aomod@divisor+6)^0,w,c
  7533  001510  1014               	iorwf	(___aomod@divisor+7)^0,w,c
  7534  001512  B4D8               	btfsc	status,2,c
  7535  001514  EF8E  F00A         	goto	u4121
  7536  001518  EF90  F00A         	goto	u4120
  7537  00151C                     u4121:
  7538  00151C  EFD8  F00A         	goto	l4356
  7539  001520                     u4120:
  7540  001520  0E01               	movlw	1
  7541  001522  6E15               	movwf	___aomod@counter^0,c
  7542  001524  EF9E  F00A         	goto	l4346
  7543  001528                     l4344:
  7544  001528  90D8               	bcf	status,0,c
  7545  00152A  360D               	rlcf	___aomod@divisor^0,f,c
  7546  00152C  360E               	rlcf	(___aomod@divisor+1)^0,f,c
  7547  00152E  360F               	rlcf	(___aomod@divisor+2)^0,f,c
  7548  001530  3610               	rlcf	(___aomod@divisor+3)^0,f,c
  7549  001532  3611               	rlcf	(___aomod@divisor+4)^0,f,c
  7550  001534  3612               	rlcf	(___aomod@divisor+5)^0,f,c
  7551  001536  3613               	rlcf	(___aomod@divisor+6)^0,f,c
  7552  001538  3614               	rlcf	(___aomod@divisor+7)^0,f,c
  7553  00153A  2A15               	incf	___aomod@counter^0,f,c
  7554  00153C                     l4346:
  7555  00153C  AE14               	btfss	(___aomod@divisor+7)^0,7,c
  7556  00153E  EFA3  F00A         	goto	u4131
  7557  001542  EFA5  F00A         	goto	u4130
  7558  001546                     u4131:
  7559  001546  EF94  F00A         	goto	l4344
  7560  00154A                     u4130:
  7561  00154A                     l4348:
  7562  00154A  500D               	movf	___aomod@divisor^0,w,c
  7563  00154C  5C05               	subwf	___aomod@dividend^0,w,c
  7564  00154E  500E               	movf	(___aomod@divisor+1)^0,w,c
  7565  001550  5806               	subwfb	(___aomod@dividend+1)^0,w,c
  7566  001552  500F               	movf	(___aomod@divisor+2)^0,w,c
  7567  001554  5807               	subwfb	(___aomod@dividend+2)^0,w,c
  7568  001556  5010               	movf	(___aomod@divisor+3)^0,w,c
  7569  001558  5808               	subwfb	(___aomod@dividend+3)^0,w,c
  7570  00155A  5011               	movf	(___aomod@divisor+4)^0,w,c
  7571  00155C  5809               	subwfb	(___aomod@dividend+4)^0,w,c
  7572  00155E  5012               	movf	(___aomod@divisor+5)^0,w,c
  7573  001560  580A               	subwfb	(___aomod@dividend+5)^0,w,c
  7574  001562  5013               	movf	(___aomod@divisor+6)^0,w,c
  7575  001564  580B               	subwfb	(___aomod@dividend+6)^0,w,c
  7576  001566  5014               	movf	(___aomod@divisor+7)^0,w,c
  7577  001568  580C               	subwfb	(___aomod@dividend+7)^0,w,c
  7578  00156A  A0D8               	btfss	status,0,c
  7579  00156C  EFBA  F00A         	goto	u4141
  7580  001570  EFBC  F00A         	goto	u4140
  7581  001574                     u4141:
  7582  001574  EFCC  F00A         	goto	l4352
  7583  001578                     u4140:
  7584  001578  500D               	movf	___aomod@divisor^0,w,c
  7585  00157A  5E05               	subwf	___aomod@dividend^0,f,c
  7586  00157C  500E               	movf	(___aomod@divisor+1)^0,w,c
  7587  00157E  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
  7588  001580  500F               	movf	(___aomod@divisor+2)^0,w,c
  7589  001582  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
  7590  001584  5010               	movf	(___aomod@divisor+3)^0,w,c
  7591  001586  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
  7592  001588  5011               	movf	(___aomod@divisor+4)^0,w,c
  7593  00158A  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
  7594  00158C  5012               	movf	(___aomod@divisor+5)^0,w,c
  7595  00158E  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
  7596  001590  5013               	movf	(___aomod@divisor+6)^0,w,c
  7597  001592  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
  7598  001594  5014               	movf	(___aomod@divisor+7)^0,w,c
  7599  001596  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
  7600  001598                     l4352:
  7601  001598  90D8               	bcf	status,0,c
  7602  00159A  3214               	rrcf	(___aomod@divisor+7)^0,f,c
  7603  00159C  3213               	rrcf	(___aomod@divisor+6)^0,f,c
  7604  00159E  3212               	rrcf	(___aomod@divisor+5)^0,f,c
  7605  0015A0  3211               	rrcf	(___aomod@divisor+4)^0,f,c
  7606  0015A2  3210               	rrcf	(___aomod@divisor+3)^0,f,c
  7607  0015A4  320F               	rrcf	(___aomod@divisor+2)^0,f,c
  7608  0015A6  320E               	rrcf	(___aomod@divisor+1)^0,f,c
  7609  0015A8  320D               	rrcf	___aomod@divisor^0,f,c
  7610  0015AA  2E15               	decfsz	___aomod@counter^0,f,c
  7611  0015AC  EFA5  F00A         	goto	l4348
  7612  0015B0                     l4356:
  7613  0015B0  5016               	movf	___aomod@sign^0,w,c
  7614  0015B2  B4D8               	btfsc	status,2,c
  7615  0015B4  EFDE  F00A         	goto	u4151
  7616  0015B8  EFE0  F00A         	goto	u4150
  7617  0015BC                     u4151:
  7618  0015BC  EFF0  F00A         	goto	l4360
  7619  0015C0                     u4150:
  7620  0015C0  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  7621  0015C2  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  7622  0015C4  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  7623  0015C6  1E09               	comf	(___aomod@dividend+4)^0,f,c
  7624  0015C8  1E08               	comf	(___aomod@dividend+3)^0,f,c
  7625  0015CA  1E07               	comf	(___aomod@dividend+2)^0,f,c
  7626  0015CC  1E06               	comf	(___aomod@dividend+1)^0,f,c
  7627  0015CE  6C05               	negf	___aomod@dividend^0,c
  7628  0015D0  0E00               	movlw	0
  7629  0015D2  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  7630  0015D4  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  7631  0015D6  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  7632  0015D8  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  7633  0015DA  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  7634  0015DC  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  7635  0015DE  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  7636  0015E0                     l4360:
  7637  0015E0  C005  F005         	movff	___aomod@dividend,?___aomod
  7638  0015E4  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  7639  0015E8  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  7640  0015EC  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  7641  0015F0  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  7642  0015F4  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  7643  0015F8  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  7644  0015FC  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  7645  001600  0012               	return		;funcret
  7646  001602                     __end_of___aomod:
  7647                           	opt callstack 0
  7648                           
  7649 ;; *************** function ___aodiv *****************
  7650 ;; Defined at:
  7651 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  7652 ;; Parameters:    Size  Location     Type
  7653 ;;  dividend        8    4[COMRAM] long long 
  7654 ;;  divisor         8   12[COMRAM] long long 
  7655 ;; Auto vars:     Size  Location     Type
  7656 ;;  quotient        8   22[COMRAM] long long 
  7657 ;;  sign            1   21[COMRAM] unsigned char 
  7658 ;;  counter         1   20[COMRAM] unsigned char 
  7659 ;; Return value:  Size  Location     Type
  7660 ;;                  8    4[COMRAM] long long 
  7661 ;; Registers used:
  7662 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7663 ;; Tracked objects:
  7664 ;;		On entry : 0/0
  7665 ;;		On exit  : 0/0
  7666 ;;		Unchanged: 0/0
  7667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7668 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7669 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7671 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7672 ;;Total ram usage:       26 bytes
  7673 ;; Hardware stack levels used:    1
  7674 ;; Hardware stack levels required when called:    4
  7675 ;; This function calls:
  7676 ;;		Nothing
  7677 ;; This function is called by:
  7678 ;;		_dtoa
  7679 ;; This function uses a non-reentrant model
  7680 ;;
  7681                           
  7682                           	psect	text48
  7683  0011A0                     __ptext48:
  7684                           	opt callstack 0
  7685  0011A0                     ___aodiv:
  7686                           	opt callstack 21
  7687  0011A0  0E00               	movlw	0
  7688  0011A2  6E16               	movwf	___aodiv@sign^0,c
  7689  0011A4  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
  7690  0011A6  EFD9  F008         	goto	u4030
  7691  0011AA  EFD7  F008         	goto	u4031
  7692  0011AE                     u4031:
  7693  0011AE  EFEB  F008         	goto	l4292
  7694  0011B2                     u4030:
  7695  0011B2  1E14               	comf	(___aodiv@divisor+7)^0,f,c
  7696  0011B4  1E13               	comf	(___aodiv@divisor+6)^0,f,c
  7697  0011B6  1E12               	comf	(___aodiv@divisor+5)^0,f,c
  7698  0011B8  1E11               	comf	(___aodiv@divisor+4)^0,f,c
  7699  0011BA  1E10               	comf	(___aodiv@divisor+3)^0,f,c
  7700  0011BC  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
  7701  0011BE  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
  7702  0011C0  6C0D               	negf	___aodiv@divisor^0,c
  7703  0011C2  0E00               	movlw	0
  7704  0011C4  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
  7705  0011C6  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
  7706  0011C8  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
  7707  0011CA  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
  7708  0011CC  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
  7709  0011CE  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
  7710  0011D0  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
  7711  0011D2  0E01               	movlw	1
  7712  0011D4  6E16               	movwf	___aodiv@sign^0,c
  7713  0011D6                     l4292:
  7714  0011D6  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
  7715  0011D8  EFF2  F008         	goto	u4040
  7716  0011DC  EFF0  F008         	goto	u4041
  7717  0011E0                     u4041:
  7718  0011E0  EF04  F009         	goto	l4298
  7719  0011E4                     u4040:
  7720  0011E4  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
  7721  0011E6  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
  7722  0011E8  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
  7723  0011EA  1E09               	comf	(___aodiv@dividend+4)^0,f,c
  7724  0011EC  1E08               	comf	(___aodiv@dividend+3)^0,f,c
  7725  0011EE  1E07               	comf	(___aodiv@dividend+2)^0,f,c
  7726  0011F0  1E06               	comf	(___aodiv@dividend+1)^0,f,c
  7727  0011F2  6C05               	negf	___aodiv@dividend^0,c
  7728  0011F4  0E00               	movlw	0
  7729  0011F6  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
  7730  0011F8  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
  7731  0011FA  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
  7732  0011FC  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
  7733  0011FE  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
  7734  001200  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
  7735  001202  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
  7736  001204  0E01               	movlw	1
  7737  001206  1A16               	xorwf	___aodiv@sign^0,f,c
  7738  001208                     l4298:
  7739  001208  EE20  F017         	lfsr	2,___aodiv@quotient
  7740  00120C  0E07               	movlw	7
  7741  00120E                     u4051:
  7742  00120E  6ADE               	clrf	postinc2,c
  7743  001210  06E8               	decf	wreg,f,c
  7744  001212  E2FD               	bc	u4051
  7745  001214  500D               	movf	___aodiv@divisor^0,w,c
  7746  001216  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
  7747  001218  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
  7748  00121A  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
  7749  00121C  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
  7750  00121E  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
  7751  001220  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
  7752  001222  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
  7753  001224  B4D8               	btfsc	status,2,c
  7754  001226  EF17  F009         	goto	u4061
  7755  00122A  EF19  F009         	goto	u4060
  7756  00122E                     u4061:
  7757  00122E  EF6B  F009         	goto	l4320
  7758  001232                     u4060:
  7759  001232  0E01               	movlw	1
  7760  001234  6E15               	movwf	___aodiv@counter^0,c
  7761  001236  EF27  F009         	goto	l4306
  7762  00123A                     l4304:
  7763  00123A  90D8               	bcf	status,0,c
  7764  00123C  360D               	rlcf	___aodiv@divisor^0,f,c
  7765  00123E  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
  7766  001240  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
  7767  001242  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
  7768  001244  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
  7769  001246  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
  7770  001248  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
  7771  00124A  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
  7772  00124C  2A15               	incf	___aodiv@counter^0,f,c
  7773  00124E                     l4306:
  7774  00124E  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
  7775  001250  EF2C  F009         	goto	u4071
  7776  001254  EF2E  F009         	goto	u4070
  7777  001258                     u4071:
  7778  001258  EF1D  F009         	goto	l4304
  7779  00125C                     u4070:
  7780  00125C                     l4308:
  7781  00125C  90D8               	bcf	status,0,c
  7782  00125E  3617               	rlcf	___aodiv@quotient^0,f,c
  7783  001260  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
  7784  001262  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
  7785  001264  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
  7786  001266  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
  7787  001268  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
  7788  00126A  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
  7789  00126C  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
  7790  00126E  500D               	movf	___aodiv@divisor^0,w,c
  7791  001270  5C05               	subwf	___aodiv@dividend^0,w,c
  7792  001272  500E               	movf	(___aodiv@divisor+1)^0,w,c
  7793  001274  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
  7794  001276  500F               	movf	(___aodiv@divisor+2)^0,w,c
  7795  001278  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
  7796  00127A  5010               	movf	(___aodiv@divisor+3)^0,w,c
  7797  00127C  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
  7798  00127E  5011               	movf	(___aodiv@divisor+4)^0,w,c
  7799  001280  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
  7800  001282  5012               	movf	(___aodiv@divisor+5)^0,w,c
  7801  001284  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
  7802  001286  5013               	movf	(___aodiv@divisor+6)^0,w,c
  7803  001288  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
  7804  00128A  5014               	movf	(___aodiv@divisor+7)^0,w,c
  7805  00128C  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
  7806  00128E  A0D8               	btfss	status,0,c
  7807  001290  EF4C  F009         	goto	u4081
  7808  001294  EF4E  F009         	goto	u4080
  7809  001298                     u4081:
  7810  001298  EF5F  F009         	goto	l4316
  7811  00129C                     u4080:
  7812  00129C  500D               	movf	___aodiv@divisor^0,w,c
  7813  00129E  5E05               	subwf	___aodiv@dividend^0,f,c
  7814  0012A0  500E               	movf	(___aodiv@divisor+1)^0,w,c
  7815  0012A2  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
  7816  0012A4  500F               	movf	(___aodiv@divisor+2)^0,w,c
  7817  0012A6  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
  7818  0012A8  5010               	movf	(___aodiv@divisor+3)^0,w,c
  7819  0012AA  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
  7820  0012AC  5011               	movf	(___aodiv@divisor+4)^0,w,c
  7821  0012AE  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
  7822  0012B0  5012               	movf	(___aodiv@divisor+5)^0,w,c
  7823  0012B2  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
  7824  0012B4  5013               	movf	(___aodiv@divisor+6)^0,w,c
  7825  0012B6  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
  7826  0012B8  5014               	movf	(___aodiv@divisor+7)^0,w,c
  7827  0012BA  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
  7828  0012BC  8017               	bsf	___aodiv@quotient^0,0,c
  7829  0012BE                     l4316:
  7830  0012BE  90D8               	bcf	status,0,c
  7831  0012C0  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
  7832  0012C2  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
  7833  0012C4  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
  7834  0012C6  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
  7835  0012C8  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
  7836  0012CA  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
  7837  0012CC  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
  7838  0012CE  320D               	rrcf	___aodiv@divisor^0,f,c
  7839  0012D0  2E15               	decfsz	___aodiv@counter^0,f,c
  7840  0012D2  EF2E  F009         	goto	l4308
  7841  0012D6                     l4320:
  7842  0012D6  5016               	movf	___aodiv@sign^0,w,c
  7843  0012D8  B4D8               	btfsc	status,2,c
  7844  0012DA  EF71  F009         	goto	u4091
  7845  0012DE  EF73  F009         	goto	u4090
  7846  0012E2                     u4091:
  7847  0012E2  EF83  F009         	goto	l4324
  7848  0012E6                     u4090:
  7849  0012E6  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
  7850  0012E8  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
  7851  0012EA  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
  7852  0012EC  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
  7853  0012EE  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
  7854  0012F0  1E19               	comf	(___aodiv@quotient+2)^0,f,c
  7855  0012F2  1E18               	comf	(___aodiv@quotient+1)^0,f,c
  7856  0012F4  6C17               	negf	___aodiv@quotient^0,c
  7857  0012F6  0E00               	movlw	0
  7858  0012F8  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
  7859  0012FA  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
  7860  0012FC  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
  7861  0012FE  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
  7862  001300  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
  7863  001302  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
  7864  001304  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
  7865  001306                     l4324:
  7866  001306  C017  F005         	movff	___aodiv@quotient,?___aodiv
  7867  00130A  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  7868  00130E  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  7869  001312  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  7870  001316  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  7871  00131A  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  7872  00131E  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  7873  001322  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  7874  001326  0012               	return		;funcret
  7875  001328                     __end_of___aodiv:
  7876                           	opt callstack 0
  7877                           
  7878 ;; *************** function _atoi *****************
  7879 ;; Defined at:
  7880 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  7881 ;; Parameters:    Size  Location     Type
  7882 ;;  s               2   11[COMRAM] PTR const unsigned char 
  7883 ;;		 -> STR_15(27), STR_14(21), STR_13(37), STR_12(8), 
  7884 ;;		 -> STR_11(31), STR_10(34), STR_9(35), STR_8(55), 
  7885 ;;		 -> STR_7(53), STR_6(29), STR_3(43), STR_2(25), 
  7886 ;;		 -> STR_1(57), 
  7887 ;; Auto vars:     Size  Location     Type
  7888 ;;  n               2   24[COMRAM] int 
  7889 ;;  neg             2   17[COMRAM] int 
  7890 ;; Return value:  Size  Location     Type
  7891 ;;                  2   11[COMRAM] int 
  7892 ;; Registers used:
  7893 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7894 ;; Tracked objects:
  7895 ;;		On entry : 0/0
  7896 ;;		On exit  : 0/0
  7897 ;;		Unchanged: 0/0
  7898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7899 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7900 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7901 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7902 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7903 ;;Total ram usage:       15 bytes
  7904 ;; Hardware stack levels used:    1
  7905 ;; Hardware stack levels required when called:    5
  7906 ;; This function calls:
  7907 ;;		___wmul
  7908 ;;		_isdigit
  7909 ;;		_isspace
  7910 ;; This function is called by:
  7911 ;;		_vfpfcnvrt
  7912 ;; This function uses a non-reentrant model
  7913 ;;
  7914                           
  7915                           	psect	text49
  7916  001006                     __ptext49:
  7917                           	opt callstack 0
  7918  001006                     _atoi:
  7919                           	opt callstack 21
  7920  001006  0E00               	movlw	0
  7921  001008  6E1A               	movwf	(atoi@n+1)^0,c
  7922  00100A  0E00               	movlw	0
  7923  00100C  6E19               	movwf	atoi@n^0,c
  7924  00100E  0E00               	movlw	0
  7925  001010  6E13               	movwf	(atoi@neg+1)^0,c
  7926  001012  0E00               	movlw	0
  7927  001014  6E12               	movwf	atoi@neg^0,c
  7928  001016  EF0F  F008         	goto	l4624
  7929  00101A                     l4622:
  7930  00101A  4A0C               	infsnz	atoi@s^0,f,c
  7931  00101C  2A0D               	incf	(atoi@s+1)^0,f,c
  7932  00101E                     l4624:
  7933  00101E  0E01               	movlw	1
  7934  001020  6E18               	movwf	_atoi$1784^0,c
  7935  001022  C00C  FFF6         	movff	atoi@s,tblptrl
  7936  001026  C00D  FFF7         	movff	atoi@s+1,tblptrh
  7937  00102A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7938  00102A  6AF8               	clrf	tblptru,c
  7939  00102C                     	endif
  7940  00102C                     	if	0	;tblptru may be non-zero
  7941  00102C                     	endif
  7942  00102C  0008               	tblrd		*
  7943  00102E  50F5               	movf	tablat,w,c
  7944  001030  0A20               	xorlw	32
  7945  001032  B4D8               	btfsc	status,2,c
  7946  001034  EF1E  F008         	goto	u4741
  7947  001038  EF20  F008         	goto	u4740
  7948  00103C                     u4741:
  7949  00103C  EF3E  F008         	goto	l4632
  7950  001040                     u4740:
  7951  001040  0EF7               	movlw	247
  7952  001042  6E0E               	movwf	??_atoi^0,c
  7953  001044  0EFF               	movlw	255
  7954  001046  6E0F               	movwf	(??_atoi+1)^0,c
  7955  001048  C00C  FFF6         	movff	atoi@s,tblptrl
  7956  00104C  C00D  FFF7         	movff	atoi@s+1,tblptrh
  7957  001050                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7958  001050  6AF8               	clrf	tblptru,c
  7959  001052                     	endif
  7960  001052                     	if	0	;tblptru may be non-zero
  7961  001052                     	endif
  7962  001052  0008               	tblrd		*
  7963  001054  50F5               	movf	tablat,w,c
  7964  001056  6E10               	movwf	(??_atoi+2)^0,c
  7965  001058  6A11               	clrf	(??_atoi+3)^0,c
  7966  00105A  500E               	movf	??_atoi^0,w,c
  7967  00105C  2610               	addwf	(??_atoi+2)^0,f,c
  7968  00105E  500F               	movf	(??_atoi+1)^0,w,c
  7969  001060  2211               	addwfc	(??_atoi+3)^0,f,c
  7970  001062  5011               	movf	(??_atoi+3)^0,w,c
  7971  001064  E109               	bnz	u4750
  7972  001066  0E05               	movlw	5
  7973  001068  5C10               	subwf	(??_atoi+2)^0,w,c
  7974  00106A  A0D8               	btfss	status,0,c
  7975  00106C  EF3A  F008         	goto	u4751
  7976  001070  EF3C  F008         	goto	u4750
  7977  001074                     u4751:
  7978  001074  EF3E  F008         	goto	l4632
  7979  001078                     u4750:
  7980  001078  0E00               	movlw	0
  7981  00107A  6E18               	movwf	_atoi$1784^0,c
  7982  00107C                     l4632:
  7983  00107C  C018  F014         	movff	_atoi$1784,_atoi$1783
  7984  001080  6A15               	clrf	(_atoi$1783+1)^0,c
  7985  001082  5014               	movf	_atoi$1783^0,w,c
  7986  001084  1015               	iorwf	(_atoi$1783+1)^0,w,c
  7987  001086  A4D8               	btfss	status,2,c
  7988  001088  EF48  F008         	goto	u4761
  7989  00108C  EF4A  F008         	goto	u4760
  7990  001090                     u4761:
  7991  001090  EF0D  F008         	goto	l4622
  7992  001094                     u4760:
  7993  001094  EF54  F008         	goto	l4642
  7994  001098                     l4638:
  7995  001098  0E00               	movlw	0
  7996  00109A  6E13               	movwf	(atoi@neg+1)^0,c
  7997  00109C  0E01               	movlw	1
  7998  00109E  6E12               	movwf	atoi@neg^0,c
  7999  0010A0                     l4640:
  8000  0010A0  4A0C               	infsnz	atoi@s^0,f,c
  8001  0010A2  2A0D               	incf	(atoi@s+1)^0,f,c
  8002  0010A4  EF8B  F008         	goto	l4648
  8003  0010A8                     l4642:
  8004  0010A8  C00C  FFF6         	movff	atoi@s,tblptrl
  8005  0010AC  C00D  FFF7         	movff	atoi@s+1,tblptrh
  8006  0010B0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8007  0010B0  6AF8               	clrf	tblptru,c
  8008  0010B2                     	endif
  8009  0010B2                     	if	0	;tblptru may be non-zero
  8010  0010B2                     	endif
  8011  0010B2  0008               	tblrd		*
  8012  0010B4  50F5               	movf	tablat,w,c
  8013  0010B6  6E0E               	movwf	??_atoi^0,c
  8014  0010B8  6A0F               	clrf	(??_atoi+1)^0,c
  8015                           
  8016                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8017                           ; Switch size 1, requested type "simple"
  8018                           ; Number of cases is 1, Range of values is 0 to 0
  8019                           ; switch strategies available:
  8020                           ; Name         Instructions Cycles
  8021                           ; simple_byte            4     3 (average)
  8022                           ;	Chosen strategy is simple_byte
  8023  0010BA  500F               	movf	(??_atoi+1)^0,w,c
  8024  0010BC  0A00               	xorlw	0	; case 0
  8025  0010BE  B4D8               	btfsc	status,2,c
  8026  0010C0  EF64  F008         	goto	l5218
  8027  0010C4  EF8B  F008         	goto	l4648
  8028  0010C8                     l5218:
  8029                           
  8030                           ; Switch size 1, requested type "simple"
  8031                           ; Number of cases is 2, Range of values is 43 to 45
  8032                           ; switch strategies available:
  8033                           ; Name         Instructions Cycles
  8034                           ; simple_byte            7     4 (average)
  8035                           ;	Chosen strategy is simple_byte
  8036  0010C8  500E               	movf	??_atoi^0,w,c
  8037  0010CA  0A2B               	xorlw	43	; case 43
  8038  0010CC  B4D8               	btfsc	status,2,c
  8039  0010CE  EF50  F008         	goto	l4640
  8040  0010D2  0A06               	xorlw	6	; case 45
  8041  0010D4  B4D8               	btfsc	status,2,c
  8042  0010D6  EF4C  F008         	goto	l4638
  8043  0010DA  EF8B  F008         	goto	l4648
  8044  0010DE                     l4644:
  8045  0010DE  C019  F005         	movff	atoi@n,___wmul@multiplier
  8046  0010E2  C01A  F006         	movff	atoi@n+1,___wmul@multiplier+1
  8047  0010E6  0E00               	movlw	0
  8048  0010E8  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  8049  0010EA  0E0A               	movlw	10
  8050  0010EC  6E07               	movwf	___wmul@multiplicand^0,c
  8051  0010EE  EC45  F012         	call	___wmul	;wreg free
  8052  0010F2  C00C  FFF6         	movff	atoi@s,tblptrl
  8053  0010F6  C00D  FFF7         	movff	atoi@s+1,tblptrh
  8054  0010FA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8055  0010FA  6AF8               	clrf	tblptru,c
  8056  0010FC                     	endif
  8057  0010FC                     	if	0	;tblptru may be non-zero
  8058  0010FC                     	endif
  8059  0010FC  0008               	tblrd		*
  8060  0010FE  50F5               	movf	tablat,w,c
  8061  001100  5E05               	subwf	?___wmul^0,f,c
  8062  001102  0E00               	movlw	0
  8063  001104  5A06               	subwfb	(?___wmul+1)^0,f,c
  8064  001106  0E30               	movlw	48
  8065  001108  2405               	addwf	?___wmul^0,w,c
  8066  00110A  6E19               	movwf	atoi@n^0,c
  8067  00110C  0E00               	movlw	0
  8068  00110E  2006               	addwfc	(?___wmul+1)^0,w,c
  8069  001110  6E1A               	movwf	(atoi@n+1)^0,c
  8070  001112  EF50  F008         	goto	l4640
  8071  001116                     l4648:
  8072  001116  0ED0               	movlw	208
  8073  001118  6E0E               	movwf	??_atoi^0,c
  8074  00111A  0EFF               	movlw	255
  8075  00111C  6E0F               	movwf	(??_atoi+1)^0,c
  8076  00111E  C00C  FFF6         	movff	atoi@s,tblptrl
  8077  001122  C00D  FFF7         	movff	atoi@s+1,tblptrh
  8078  001126                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8079  001126  6AF8               	clrf	tblptru,c
  8080  001128                     	endif
  8081  001128                     	if	0	;tblptru may be non-zero
  8082  001128                     	endif
  8083  001128  0008               	tblrd		*
  8084  00112A  50F5               	movf	tablat,w,c
  8085  00112C  6E10               	movwf	(??_atoi+2)^0,c
  8086  00112E  6A11               	clrf	(??_atoi+3)^0,c
  8087  001130  500E               	movf	??_atoi^0,w,c
  8088  001132  2610               	addwf	(??_atoi+2)^0,f,c
  8089  001134  500F               	movf	(??_atoi+1)^0,w,c
  8090  001136  2211               	addwfc	(??_atoi+3)^0,f,c
  8091  001138  5011               	movf	(??_atoi+3)^0,w,c
  8092  00113A  E10A               	bnz	u4770
  8093  00113C  0E0A               	movlw	10
  8094  00113E  5C10               	subwf	(??_atoi+2)^0,w,c
  8095  001140  A0D8               	btfss	status,0,c
  8096  001142  EFA5  F008         	goto	u4771
  8097  001146  EFA8  F008         	goto	u4770
  8098  00114A                     u4771:
  8099  00114A  0E01               	movlw	1
  8100  00114C  EFA9  F008         	goto	u4780
  8101  001150                     u4770:
  8102  001150  0E00               	movlw	0
  8103  001152                     u4780:
  8104  001152  6E16               	movwf	_atoi$1785^0,c
  8105  001154  6A17               	clrf	(_atoi$1785+1)^0,c
  8106  001156  5016               	movf	_atoi$1785^0,w,c
  8107  001158  1017               	iorwf	(_atoi$1785+1)^0,w,c
  8108  00115A  A4D8               	btfss	status,2,c
  8109  00115C  EFB2  F008         	goto	u4791
  8110  001160  EFB4  F008         	goto	u4790
  8111  001164                     u4791:
  8112  001164  EF6F  F008         	goto	l4644
  8113  001168                     u4790:
  8114  001168  5012               	movf	atoi@neg^0,w,c
  8115  00116A  1013               	iorwf	(atoi@neg+1)^0,w,c
  8116  00116C  A4D8               	btfss	status,2,c
  8117  00116E  EFBB  F008         	goto	u4801
  8118  001172  EFBD  F008         	goto	u4800
  8119  001176                     u4801:
  8120  001176  EFCB  F008         	goto	l1557
  8121  00117A                     u4800:
  8122  00117A  C019  F00E         	movff	atoi@n,??_atoi
  8123  00117E  C01A  F00F         	movff	atoi@n+1,??_atoi+1
  8124  001182  1E0E               	comf	??_atoi^0,f,c
  8125  001184  1E0F               	comf	(??_atoi+1)^0,f,c
  8126  001186  4A0E               	infsnz	??_atoi^0,f,c
  8127  001188  2A0F               	incf	(??_atoi+1)^0,f,c
  8128  00118A  C00E  F00C         	movff	??_atoi,?_atoi
  8129  00118E  C00F  F00D         	movff	??_atoi+1,?_atoi+1
  8130  001192  EFCF  F008         	goto	l1560
  8131  001196                     l1557:
  8132  001196  C019  F00C         	movff	atoi@n,?_atoi
  8133  00119A  C01A  F00D         	movff	atoi@n+1,?_atoi+1
  8134  00119E                     l1560:
  8135  00119E  0012               	return		;funcret
  8136  0011A0                     __end_of_atoi:
  8137                           	opt callstack 0
  8138                           
  8139 ;; *************** function _isspace *****************
  8140 ;; Defined at:
  8141 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  8142 ;; Parameters:    Size  Location     Type
  8143 ;;  c               2    4[COMRAM] int 
  8144 ;; Auto vars:     Size  Location     Type
  8145 ;;		None
  8146 ;; Return value:  Size  Location     Type
  8147 ;;                  2    4[COMRAM] int 
  8148 ;; Registers used:
  8149 ;;		wreg, status,2, status,0
  8150 ;; Tracked objects:
  8151 ;;		On entry : 0/0
  8152 ;;		On exit  : 0/0
  8153 ;;		Unchanged: 0/0
  8154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8155 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8156 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8157 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8158 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8159 ;;Total ram usage:        7 bytes
  8160 ;; Hardware stack levels used:    1
  8161 ;; Hardware stack levels required when called:    4
  8162 ;; This function calls:
  8163 ;;		Nothing
  8164 ;; This function is called by:
  8165 ;;		_atoi
  8166 ;; This function uses a non-reentrant model
  8167 ;;
  8168                           
  8169                           	psect	text50
  8170  00209E                     __ptext50:
  8171                           	opt callstack 0
  8172  00209E                     _isspace:
  8173                           	opt callstack 21
  8174  00209E  0E01               	movlw	1
  8175  0020A0  6E0B               	movwf	_isspace$1810^0,c
  8176  0020A2  0E20               	movlw	32
  8177  0020A4  1805               	xorwf	isspace@c^0,w,c
  8178  0020A6  1006               	iorwf	(isspace@c+1)^0,w,c
  8179  0020A8  B4D8               	btfsc	status,2,c
  8180  0020AA  EF59  F010         	goto	u4231
  8181  0020AE  EF5B  F010         	goto	u4230
  8182  0020B2                     u4231:
  8183  0020B2  EF74  F010         	goto	l4410
  8184  0020B6                     u4230:
  8185  0020B6  0EF7               	movlw	247
  8186  0020B8  6E07               	movwf	??_isspace^0,c
  8187  0020BA  0EFF               	movlw	255
  8188  0020BC  6E08               	movwf	(??_isspace+1)^0,c
  8189  0020BE  C005  F009         	movff	isspace@c,??_isspace+2
  8190  0020C2  C006  F00A         	movff	isspace@c+1,??_isspace+3
  8191  0020C6  5007               	movf	??_isspace^0,w,c
  8192  0020C8  2609               	addwf	(??_isspace+2)^0,f,c
  8193  0020CA  5008               	movf	(??_isspace+1)^0,w,c
  8194  0020CC  220A               	addwfc	(??_isspace+3)^0,f,c
  8195  0020CE  500A               	movf	(??_isspace+3)^0,w,c
  8196  0020D0  E109               	bnz	u4240
  8197  0020D2  0E05               	movlw	5
  8198  0020D4  5C09               	subwf	(??_isspace+2)^0,w,c
  8199  0020D6  A0D8               	btfss	status,0,c
  8200  0020D8  EF70  F010         	goto	u4241
  8201  0020DC  EF72  F010         	goto	u4240
  8202  0020E0                     u4241:
  8203  0020E0  EF74  F010         	goto	l4410
  8204  0020E4                     u4240:
  8205  0020E4  0E00               	movlw	0
  8206  0020E6  6E0B               	movwf	_isspace$1810^0,c
  8207  0020E8                     l4410:
  8208  0020E8  C00B  F005         	movff	_isspace$1810,?_isspace
  8209  0020EC  6A06               	clrf	(?_isspace+1)^0,c
  8210  0020EE  0012               	return		;funcret
  8211  0020F0                     __end_of_isspace:
  8212                           	opt callstack 0
  8213                           
  8214 ;; *************** function _isdigit *****************
  8215 ;; Defined at:
  8216 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  8217 ;; Parameters:    Size  Location     Type
  8218 ;;  c               2    4[COMRAM] int 
  8219 ;; Auto vars:     Size  Location     Type
  8220 ;;		None
  8221 ;; Return value:  Size  Location     Type
  8222 ;;                  2    4[COMRAM] int 
  8223 ;; Registers used:
  8224 ;;		wreg, status,2, status,0
  8225 ;; Tracked objects:
  8226 ;;		On entry : 0/0
  8227 ;;		On exit  : 0/0
  8228 ;;		Unchanged: 0/0
  8229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8230 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8232 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8233 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8234 ;;Total ram usage:        6 bytes
  8235 ;; Hardware stack levels used:    1
  8236 ;; Hardware stack levels required when called:    4
  8237 ;; This function calls:
  8238 ;;		Nothing
  8239 ;; This function is called by:
  8240 ;;		_vfpfcnvrt
  8241 ;;		_atoi
  8242 ;; This function uses a non-reentrant model
  8243 ;;
  8244                           
  8245                           	psect	text51
  8246  0023D2                     __ptext51:
  8247                           	opt callstack 0
  8248  0023D2                     _isdigit:
  8249                           	opt callstack 22
  8250  0023D2  0ED0               	movlw	208
  8251  0023D4  6E07               	movwf	??_isdigit^0,c
  8252  0023D6  0EFF               	movlw	255
  8253  0023D8  6E08               	movwf	(??_isdigit+1)^0,c
  8254  0023DA  C005  F009         	movff	isdigit@c,??_isdigit+2
  8255  0023DE  C006  F00A         	movff	isdigit@c+1,??_isdigit+3
  8256  0023E2  5007               	movf	??_isdigit^0,w,c
  8257  0023E4  2609               	addwf	(??_isdigit+2)^0,f,c
  8258  0023E6  5008               	movf	(??_isdigit+1)^0,w,c
  8259  0023E8  220A               	addwfc	(??_isdigit+3)^0,f,c
  8260  0023EA  500A               	movf	(??_isdigit+3)^0,w,c
  8261  0023EC  E10A               	bnz	u4010
  8262  0023EE  0E0A               	movlw	10
  8263  0023F0  5C09               	subwf	(??_isdigit+2)^0,w,c
  8264  0023F2  A0D8               	btfss	status,0,c
  8265  0023F4  EFFE  F011         	goto	u4011
  8266  0023F8  EF01  F012         	goto	u4010
  8267  0023FC                     u4011:
  8268  0023FC  0E01               	movlw	1
  8269  0023FE  EF02  F012         	goto	u4020
  8270  002402                     u4010:
  8271  002402  0E00               	movlw	0
  8272  002404                     u4020:
  8273  002404  6E05               	movwf	?_isdigit^0,c
  8274  002406  6A06               	clrf	(?_isdigit+1)^0,c
  8275  002408  0012               	return		;funcret
  8276  00240A                     __end_of_isdigit:
  8277                           	opt callstack 0
  8278                           
  8279 ;; *************** function ___wmul *****************
  8280 ;; Defined at:
  8281 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  8282 ;; Parameters:    Size  Location     Type
  8283 ;;  multiplier      2    4[COMRAM] unsigned int 
  8284 ;;  multiplicand    2    6[COMRAM] unsigned int 
  8285 ;; Auto vars:     Size  Location     Type
  8286 ;;  product         2    8[COMRAM] unsigned int 
  8287 ;; Return value:  Size  Location     Type
  8288 ;;                  2    4[COMRAM] unsigned int 
  8289 ;; Registers used:
  8290 ;;		wreg, status,2, status,0, prodl, prodh
  8291 ;; Tracked objects:
  8292 ;;		On entry : 0/0
  8293 ;;		On exit  : 0/0
  8294 ;;		Unchanged: 0/0
  8295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8296 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8297 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8299 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8300 ;;Total ram usage:        6 bytes
  8301 ;; Hardware stack levels used:    1
  8302 ;; Hardware stack levels required when called:    4
  8303 ;; This function calls:
  8304 ;;		Nothing
  8305 ;; This function is called by:
  8306 ;;		_atoi
  8307 ;; This function uses a non-reentrant model
  8308 ;;
  8309                           
  8310                           	psect	text52
  8311  00248A                     __ptext52:
  8312                           	opt callstack 0
  8313  00248A                     ___wmul:
  8314                           	opt callstack 21
  8315  00248A  5005               	movf	___wmul@multiplier^0,w,c
  8316  00248C  0207               	mulwf	___wmul@multiplicand^0,c
  8317  00248E  CFF3 F009          	movff	prodl,___wmul@product
  8318  002492  CFF4 F00A          	movff	prodh,___wmul@product+1
  8319  002496  5005               	movf	___wmul@multiplier^0,w,c
  8320  002498  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  8321  00249A  50F3               	movf	243,w,c
  8322  00249C  260A               	addwf	(___wmul@product+1)^0,f,c
  8323  00249E  5006               	movf	(___wmul@multiplier+1)^0,w,c
  8324  0024A0  0207               	mulwf	___wmul@multiplicand^0,c
  8325  0024A2  50F3               	movf	243,w,c
  8326  0024A4  260A               	addwf	(___wmul@product+1)^0,f,c
  8327  0024A6  C009  F005         	movff	___wmul@product,?___wmul
  8328  0024AA  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  8329  0024AE  0012               	return		;funcret
  8330  0024B0                     __end_of___wmul:
  8331                           	opt callstack 0
  8332                           
  8333 ;; *************** function _ClearModbusData *****************
  8334 ;; Defined at:
  8335 ;;		line 27 in file "Modbus.c"
  8336 ;; Parameters:    Size  Location     Type
  8337 ;;		None
  8338 ;; Auto vars:     Size  Location     Type
  8339 ;;  i               2    4[COMRAM] int 
  8340 ;; Return value:  Size  Location     Type
  8341 ;;                  1    wreg      void 
  8342 ;; Registers used:
  8343 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8344 ;; Tracked objects:
  8345 ;;		On entry : 0/0
  8346 ;;		On exit  : 0/0
  8347 ;;		Unchanged: 0/0
  8348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8350 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8352 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8353 ;;Total ram usage:        2 bytes
  8354 ;; Hardware stack levels used:    1
  8355 ;; Hardware stack levels required when called:    4
  8356 ;; This function calls:
  8357 ;;		Nothing
  8358 ;; This function is called by:
  8359 ;;		_main
  8360 ;; This function uses a non-reentrant model
  8361 ;;
  8362                           
  8363                           	psect	text53
  8364  002140                     __ptext53:
  8365                           	opt callstack 0
  8366  002140                     _ClearModbusData:
  8367                           	opt callstack 26
  8368  002140                     
  8369                           ;Modbus.c: 28:     int i = 0;
  8370  002140  0E00               	movlw	0
  8371  002142  6E06               	movwf	(ClearModbusData@i+1)^0,c
  8372  002144  0E00               	movlw	0
  8373  002146  6E05               	movwf	ClearModbusData@i^0,c
  8374                           
  8375                           ;Modbus.c: 29:     for(i=0; i<99; i++ ){
  8376  002148  0E00               	movlw	0
  8377  00214A  6E06               	movwf	(ClearModbusData@i+1)^0,c
  8378  00214C  0E00               	movlw	0
  8379  00214E  6E05               	movwf	ClearModbusData@i^0,c
  8380  002150                     l5076:
  8381                           
  8382                           ;Modbus.c: 30:         ModbusData[i] = 0xFF;
  8383  002150  0E00               	movlw	low _ModbusData
  8384  002152  2405               	addwf	ClearModbusData@i^0,w,c
  8385  002154  6ED9               	movwf	fsr2l,c
  8386  002156  0E01               	movlw	high _ModbusData
  8387  002158  2006               	addwfc	(ClearModbusData@i+1)^0,w,c
  8388  00215A  6EDA               	movwf	fsr2h,c
  8389  00215C  0EFF               	movlw	255
  8390  00215E  6EDF               	movwf	indf2,c
  8391  002160                     
  8392                           ;Modbus.c: 31:     }
  8393  002160  4A05               	infsnz	ClearModbusData@i^0,f,c
  8394  002162  2A06               	incf	(ClearModbusData@i+1)^0,f,c
  8395  002164  BE06               	btfsc	(ClearModbusData@i+1)^0,7,c
  8396  002166  EFBE  F010         	goto	u5191
  8397  00216A  5006               	movf	(ClearModbusData@i+1)^0,w,c
  8398  00216C  E109               	bnz	u5190
  8399  00216E  0E63               	movlw	99
  8400  002170  5C05               	subwf	ClearModbusData@i^0,w,c
  8401  002172  A0D8               	btfss	status,0,c
  8402  002174  EFBE  F010         	goto	u5191
  8403  002178  EFC0  F010         	goto	u5190
  8404  00217C                     u5191:
  8405  00217C  EFA8  F010         	goto	l5076
  8406  002180                     u5190:
  8407  002180                     
  8408                           ;Modbus.c: 33:     ModDataCnt = 0;
  8409  002180  0E00               	movlw	0
  8410  002182  0100               	movlb	0	; () banked
  8411  002184  6F91               	movwf	(_ModDataCnt+1)& (0+255),b
  8412  002186  0E00               	movlw	0
  8413  002188  6F90               	movwf	_ModDataCnt& (0+255),b
  8414  00218A                     
  8415                           ; BSR set to: 0
  8416  00218A  0012               	return		;funcret
  8417  00218C                     __end_of_ClearModbusData:
  8418                           	opt callstack 0
  8419                           
  8420 ;; *************** function _INTERRUPT_InterruptManager *****************
  8421 ;; Defined at:
  8422 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  8423 ;; Parameters:    Size  Location     Type
  8424 ;;		None
  8425 ;; Auto vars:     Size  Location     Type
  8426 ;;		None
  8427 ;; Return value:  Size  Location     Type
  8428 ;;                  1    wreg      void 
  8429 ;; Registers used:
  8430 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  8431 ;; Tracked objects:
  8432 ;;		On entry : 0/0
  8433 ;;		On exit  : 0/0
  8434 ;;		Unchanged: 0/0
  8435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8438 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8439 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8440 ;;Total ram usage:        4 bytes
  8441 ;; Hardware stack levels used:    1
  8442 ;; Hardware stack levels required when called:    3
  8443 ;; This function calls:
  8444 ;;		Absolute function
  8445 ;;		_EUSART1_Receive_ISR
  8446 ;;		_EUSART1_Transmit_ISR
  8447 ;;		_EUSART2_Receive_ISR
  8448 ;;		_EUSART2_Transmit_ISR
  8449 ;; This function is called by:
  8450 ;;		Interrupt level 2
  8451 ;; This function uses a non-reentrant model
  8452 ;;
  8453                           
  8454                           	psect	intcode
  8455  000008                     __pintcode:
  8456                           	opt callstack 0
  8457  000008                     _INTERRUPT_InterruptManager:
  8458                           	opt callstack 16
  8459                           
  8460                           ; BSR set to: 0
  8461                           ;incstack = 0
  8462  000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8463  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  8464  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  8465  000012  CFD9 F003          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  8466  000016  CFDA F004          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  8467  00001A                     
  8468                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  8469  00001A  ACF2               	btfss	242,6,c	;volatile
  8470  00001C  EF12  F000         	goto	i2u359_41
  8471  000020  EF14  F000         	goto	i2u359_40
  8472  000024                     i2u359_41:
  8473  000024  EF89  F000         	goto	i2l159
  8474  000028                     i2u359_40:
  8475  000028                     
  8476                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
  8477  000028  010E               	movlb	14	; () banked
  8478  00002A  ADC5               	btfss	197,6,b	;volatile
  8479  00002C  EF1A  F000         	goto	i2u360_41
  8480  000030  EF1C  F000         	goto	i2u360_40
  8481  000034                     i2u360_41:
  8482  000034  EF32  F000         	goto	i2l150
  8483  000038                     i2u360_40:
  8484  000038                     
  8485                           ; BSR set to: 14
  8486  000038  ADCD               	btfss	205,6,b	;volatile
  8487  00003A  EF21  F000         	goto	i2u361_41
  8488  00003E  EF23  F000         	goto	i2u361_40
  8489  000042                     i2u361_41:
  8490  000042  EF32  F000         	goto	i2l150
  8491  000046                     i2u361_40:
  8492  000046                     
  8493                           ; BSR set to: 14
  8494                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART2_TxDefaultInterruptHandler();
  8495  000046  D802               	call	i2u362_48
  8496  000048  EF30  F000         	goto	i2u362_49
  8497  00004C                     i2u362_48:
  8498  00004C  0005               	push	
  8499  00004E  6EFA               	movwf	pclath,c
  8500  000050  0100               	movlb	0	; () banked
  8501  000052  51DF               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
  8502  000054  6EFD               	movwf	tosl,c
  8503  000056  51E0               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
  8504  000058  6EFE               	movwf	tosh,c
  8505  00005A  6AFF               	clrf	tosu,c
  8506  00005C  50FA               	movf	pclath,w,c
  8507  00005E  0012               	return		;indir
  8508  000060                     i2u362_49:
  8509                           
  8510                           ;mcc_generated_files/interrupt_manager.c: 66:         }
  8511  000060  EF89  F000         	goto	i2l159
  8512  000064                     i2l150:
  8513                           
  8514                           ; BSR set to: 14
  8515  000064  AFC5               	btfss	197,7,b	;volatile
  8516  000066  EF37  F000         	goto	i2u363_41
  8517  00006A  EF39  F000         	goto	i2u363_40
  8518  00006E                     i2u363_41:
  8519  00006E  EF4F  F000         	goto	i2l152
  8520  000072                     i2u363_40:
  8521  000072                     
  8522                           ; BSR set to: 14
  8523  000072  AFCD               	btfss	205,7,b	;volatile
  8524  000074  EF3E  F000         	goto	i2u364_41
  8525  000078  EF40  F000         	goto	i2u364_40
  8526  00007C                     i2u364_41:
  8527  00007C  EF4F  F000         	goto	i2l152
  8528  000080                     i2u364_40:
  8529  000080                     
  8530                           ; BSR set to: 14
  8531                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART2_RxDefaultInterruptHandler();
  8532  000080  D802               	call	i2u365_48
  8533  000082  EF4D  F000         	goto	i2u365_49
  8534  000086                     i2u365_48:
  8535  000086  0005               	push	
  8536  000088  6EFA               	movwf	pclath,c
  8537  00008A  0100               	movlb	0	; () banked
  8538  00008C  51DD               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
  8539  00008E  6EFD               	movwf	tosl,c
  8540  000090  51DE               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
  8541  000092  6EFE               	movwf	tosh,c
  8542  000094  6AFF               	clrf	tosu,c
  8543  000096  50FA               	movf	pclath,w,c
  8544  000098  0012               	return		;indir
  8545  00009A                     i2u365_49:
  8546                           
  8547                           ;mcc_generated_files/interrupt_manager.c: 70:         }
  8548  00009A  EF89  F000         	goto	i2l159
  8549  00009E                     i2l152:
  8550                           
  8551                           ; BSR set to: 14
  8552  00009E  A9C5               	btfss	197,4,b	;volatile
  8553  0000A0  EF54  F000         	goto	i2u366_41
  8554  0000A4  EF56  F000         	goto	i2u366_40
  8555  0000A8                     i2u366_41:
  8556  0000A8  EF6C  F000         	goto	i2l154
  8557  0000AC                     i2u366_40:
  8558  0000AC                     
  8559                           ; BSR set to: 14
  8560  0000AC  A9CD               	btfss	205,4,b	;volatile
  8561  0000AE  EF5B  F000         	goto	i2u367_41
  8562  0000B2  EF5D  F000         	goto	i2u367_40
  8563  0000B6                     i2u367_41:
  8564  0000B6  EF6C  F000         	goto	i2l154
  8565  0000BA                     i2u367_40:
  8566  0000BA                     
  8567                           ; BSR set to: 14
  8568                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART1_TxDefaultInterruptHandler();
  8569  0000BA  D802               	call	i2u368_48
  8570  0000BC  EF6A  F000         	goto	i2u368_49
  8571  0000C0                     i2u368_48:
  8572  0000C0  0005               	push	
  8573  0000C2  6EFA               	movwf	pclath,c
  8574  0000C4  0100               	movlb	0	; () banked
  8575  0000C6  51DB               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
  8576  0000C8  6EFD               	movwf	tosl,c
  8577  0000CA  51DC               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
  8578  0000CC  6EFE               	movwf	tosh,c
  8579  0000CE  6AFF               	clrf	tosu,c
  8580  0000D0  50FA               	movf	pclath,w,c
  8581  0000D2  0012               	return		;indir
  8582  0000D4                     i2u368_49:
  8583                           
  8584                           ;mcc_generated_files/interrupt_manager.c: 74:         }
  8585  0000D4  EF89  F000         	goto	i2l159
  8586  0000D8                     i2l154:
  8587                           
  8588                           ; BSR set to: 14
  8589  0000D8  ABC5               	btfss	197,5,b	;volatile
  8590  0000DA  EF71  F000         	goto	i2u369_41
  8591  0000DE  EF73  F000         	goto	i2u369_40
  8592  0000E2                     i2u369_41:
  8593  0000E2  EF89  F000         	goto	i2l153
  8594  0000E6                     i2u369_40:
  8595  0000E6                     
  8596                           ; BSR set to: 14
  8597  0000E6  ABCD               	btfss	205,5,b	;volatile
  8598  0000E8  EF78  F000         	goto	i2u370_41
  8599  0000EC  EF7A  F000         	goto	i2u370_40
  8600  0000F0                     i2u370_41:
  8601  0000F0  EF89  F000         	goto	i2l153
  8602  0000F4                     i2u370_40:
  8603  0000F4                     
  8604                           ; BSR set to: 14
  8605                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             EUSART1_RxDefaultInterruptHandler();
  8606  0000F4  D802               	call	i2u371_48
  8607  0000F6  EF87  F000         	goto	i2u371_49
  8608  0000FA                     i2u371_48:
  8609  0000FA  0005               	push	
  8610  0000FC  6EFA               	movwf	pclath,c
  8611  0000FE  0100               	movlb	0	; () banked
  8612  000100  51D9               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
  8613  000102  6EFD               	movwf	tosl,c
  8614  000104  51DA               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
  8615  000106  6EFE               	movwf	tosh,c
  8616  000108  6AFF               	clrf	tosu,c
  8617  00010A  50FA               	movf	pclath,w,c
  8618  00010C  0012               	return		;indir
  8619  00010E                     i2u371_49:
  8620                           
  8621                           ;mcc_generated_files/interrupt_manager.c: 78:         }
  8622  00010E  EF89  F000         	goto	i2l159
  8623  000112                     i2l153:
  8624  000112                     i2l159:
  8625  000112  C004  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  8626  000116  C003  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  8627  00011A  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  8628  00011E  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  8629  000122  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8630  000124  0011               	retfie		f
  8631  000126                     __end_of_INTERRUPT_InterruptManager:
  8632                           	opt callstack 0
  8633                           
  8634 ;; *************** function _EUSART2_Transmit_ISR *****************
  8635 ;; Defined at:
  8636 ;;		line 206 in file "mcc_generated_files/eusart2.c"
  8637 ;; Parameters:    Size  Location     Type
  8638 ;;		None
  8639 ;; Auto vars:     Size  Location     Type
  8640 ;;		None
  8641 ;; Return value:  Size  Location     Type
  8642 ;;                  1    wreg      void 
  8643 ;; Registers used:
  8644 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8645 ;; Tracked objects:
  8646 ;;		On entry : 0/0
  8647 ;;		On exit  : 0/0
  8648 ;;		Unchanged: 0/0
  8649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8654 ;;Total ram usage:        0 bytes
  8655 ;; Hardware stack levels used:    1
  8656 ;; This function calls:
  8657 ;;		Nothing
  8658 ;; This function is called by:
  8659 ;;		_EUSART2_Initialize
  8660 ;;		_INTERRUPT_InterruptManager
  8661 ;; This function uses a non-reentrant model
  8662 ;;
  8663                           
  8664                           	psect	text55
  8665  0021D6                     __ptext55:
  8666                           	opt callstack 0
  8667  0021D6                     _EUSART2_Transmit_ISR:
  8668                           	opt callstack 18
  8669  0021D6                     
  8670                           ;mcc_generated_files/eusart2.c: 210:     if(sizeof(eusart2TxBuffer) > eusart2TxBufferRem
      +                          aining)
  8671  0021D6  0E08               	movlw	8
  8672  0021D8  0100               	movlb	0	; () banked
  8673  0021DA  61E2               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
  8674  0021DC  EFF2  F010         	goto	i2u330_41
  8675  0021E0  EFF4  F010         	goto	i2u330_40
  8676  0021E4                     i2u330_41:
  8677  0021E4  EF0C  F011         	goto	i2l333
  8678  0021E8                     i2u330_40:
  8679  0021E8                     
  8680                           ; BSR set to: 0
  8681                           ;mcc_generated_files/eusart2.c: 211:     {;mcc_generated_files/eusart2.c: 212:         T
      +                          X2REG = eusart2TxBuffer[eusart2TxTail++];
  8682  0021E8  0E80               	movlw	low _eusart2TxBuffer
  8683  0021EA  259D               	addwf	_eusart2TxTail& (0+255),w,b	;volatile
  8684  0021EC  6ED9               	movwf	fsr2l,c
  8685  0021EE  6ADA               	clrf	fsr2h,c
  8686  0021F0  0E00               	movlw	high _eusart2TxBuffer
  8687  0021F2  22DA               	addwfc	fsr2h,f,c
  8688  0021F4  50DF               	movf	indf2,w,c
  8689  0021F6  010E               	movlb	14	; () banked
  8690  0021F8  6F9A               	movwf	154,b	;volatile
  8691  0021FA                     
  8692                           ; BSR set to: 14
  8693  0021FA  0100               	movlb	0	; () banked
  8694  0021FC  2B9D               	incf	_eusart2TxTail& (0+255),f,b	;volatile
  8695  0021FE                     
  8696                           ; BSR set to: 0
  8697                           ;mcc_generated_files/eusart2.c: 213:         if(sizeof(eusart2TxBuffer) <= eusart2TxTail
      +                          )
  8698  0021FE  0E07               	movlw	7
  8699  002200  659D               	cpfsgt	_eusart2TxTail& (0+255),b	;volatile
  8700  002202  EF05  F011         	goto	i2u331_41
  8701  002206  EF07  F011         	goto	i2u331_40
  8702  00220A                     i2u331_41:
  8703  00220A  EF09  F011         	goto	i2l3866
  8704  00220E                     i2u331_40:
  8705  00220E                     
  8706                           ; BSR set to: 0
  8707                           ;mcc_generated_files/eusart2.c: 214:         {;mcc_generated_files/eusart2.c: 215:      
      +                                 eusart2TxTail = 0;
  8708  00220E  0E00               	movlw	0
  8709  002210  6F9D               	movwf	_eusart2TxTail& (0+255),b	;volatile
  8710  002212                     i2l3866:
  8711                           
  8712                           ; BSR set to: 0
  8713                           ;mcc_generated_files/eusart2.c: 217:         eusart2TxBufferRemaining++;
  8714  002212  2BE2               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
  8715                           
  8716                           ;mcc_generated_files/eusart2.c: 218:     }
  8717  002214  EF0E  F011         	goto	i2l336
  8718  002218                     i2l333:
  8719                           
  8720                           ; BSR set to: 0
  8721                           ;mcc_generated_files/eusart2.c: 220:     {;mcc_generated_files/eusart2.c: 221:         P
      +                          IE3bits.TX2IE = 0;
  8722  002218  010E               	movlb	14	; () banked
  8723  00221A  9DC5               	bcf	197,6,b	;volatile
  8724  00221C                     i2l336:
  8725  00221C  0012               	return		;funcret
  8726  00221E                     __end_of_EUSART2_Transmit_ISR:
  8727                           	opt callstack 0
  8728                           
  8729 ;; *************** function _EUSART2_Receive_ISR *****************
  8730 ;; Defined at:
  8731 ;;		line 225 in file "mcc_generated_files/eusart2.c"
  8732 ;; Parameters:    Size  Location     Type
  8733 ;;		None
  8734 ;; Auto vars:     Size  Location     Type
  8735 ;;		None
  8736 ;; Return value:  Size  Location     Type
  8737 ;;                  1    wreg      void 
  8738 ;; Registers used:
  8739 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  8740 ;; Tracked objects:
  8741 ;;		On entry : 0/0
  8742 ;;		On exit  : 0/0
  8743 ;;		Unchanged: 0/0
  8744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8749 ;;Total ram usage:        0 bytes
  8750 ;; Hardware stack levels used:    1
  8751 ;; Hardware stack levels required when called:    2
  8752 ;; This function calls:
  8753 ;;		Absolute function
  8754 ;;		_EUSART2_DefaultErrorHandler
  8755 ;;		_EUSART2_DefaultFramingErrorHandler
  8756 ;;		_EUSART2_DefaultOverrunErrorHandler
  8757 ;;		_EUSART2_RxDataHandler
  8758 ;; This function is called by:
  8759 ;;		_EUSART2_Initialize
  8760 ;;		_INTERRUPT_InterruptManager
  8761 ;; This function uses a non-reentrant model
  8762 ;;
  8763                           
  8764                           	psect	text56
  8765  0019AA                     __ptext56:
  8766                           	opt callstack 0
  8767  0019AA                     _EUSART2_Receive_ISR:
  8768                           	opt callstack 16
  8769  0019AA                     
  8770                           ;mcc_generated_files/eusart2.c: 228:     eusart2RxStatusBuffer[eusart2RxHead].status = 0
      +                          ;
  8771  0019AA  0E70               	movlw	low _eusart2RxStatusBuffer
  8772  0019AC  2459               	addwf	_eusart2RxHead^0,w,c	;volatile
  8773  0019AE  6ED9               	movwf	fsr2l,c
  8774  0019B0  6ADA               	clrf	fsr2h,c
  8775  0019B2  0E00               	movlw	high _eusart2RxStatusBuffer
  8776  0019B4  22DA               	addwfc	fsr2h,f,c
  8777  0019B6  0E00               	movlw	0
  8778  0019B8  6EDF               	movwf	indf2,c
  8779  0019BA                     
  8780                           ;mcc_generated_files/eusart2.c: 230:     if(RC2STAbits.FERR){
  8781  0019BA  010E               	movlb	14	; () banked
  8782  0019BC  A59D               	btfss	157,2,b	;volatile
  8783  0019BE  EFE3  F00C         	goto	i2u332_41
  8784  0019C2  EFE5  F00C         	goto	i2u332_40
  8785  0019C6                     i2u332_41:
  8786  0019C6  EFF9  F00C         	goto	i2l3876
  8787  0019CA                     i2u332_40:
  8788  0019CA                     
  8789                           ; BSR set to: 14
  8790                           ;mcc_generated_files/eusart2.c: 231:         eusart2RxStatusBuffer[eusart2RxHead].ferr =
      +                           1;
  8791  0019CA  0E70               	movlw	low _eusart2RxStatusBuffer
  8792  0019CC  2459               	addwf	_eusart2RxHead^0,w,c	;volatile
  8793  0019CE  6ED9               	movwf	fsr2l,c
  8794  0019D0  6ADA               	clrf	fsr2h,c
  8795  0019D2  0E00               	movlw	high _eusart2RxStatusBuffer
  8796  0019D4  22DA               	addwfc	fsr2h,f,c
  8797  0019D6  0100               	movlb	0	; () banked
  8798  0019D8  82DF               	bsf	indf2,1,c
  8799  0019DA                     
  8800                           ; BSR set to: 0
  8801                           ;mcc_generated_files/eusart2.c: 232:         EUSART2_FramingErrorHandler();
  8802  0019DA  D802               	call	i2u333_48
  8803  0019DC  EFF9  F00C         	goto	i2u333_49
  8804  0019E0                     i2u333_48:
  8805  0019E0  0005               	push	
  8806  0019E2  6EFA               	movwf	pclath,c
  8807  0019E4  51D7               	movf	_EUSART2_FramingErrorHandler& (0+255),w,b
  8808  0019E6  6EFD               	movwf	tosl,c
  8809  0019E8  51D8               	movf	(_EUSART2_FramingErrorHandler+1)& (0+255),w,b
  8810  0019EA  6EFE               	movwf	tosh,c
  8811  0019EC  6AFF               	clrf	tosu,c
  8812  0019EE  50FA               	movf	pclath,w,c
  8813  0019F0  0012               	return		;indir
  8814  0019F2                     i2u333_49:
  8815  0019F2                     i2l3876:
  8816                           
  8817                           ;mcc_generated_files/eusart2.c: 235:     if(RC2STAbits.OERR){
  8818  0019F2  010E               	movlb	14	; () banked
  8819  0019F4  A39D               	btfss	157,1,b	;volatile
  8820  0019F6  EFFF  F00C         	goto	i2u334_41
  8821  0019FA  EF01  F00D         	goto	i2u334_40
  8822  0019FE                     i2u334_41:
  8823  0019FE  EF15  F00D         	goto	i2l3882
  8824  001A02                     i2u334_40:
  8825  001A02                     
  8826                           ; BSR set to: 14
  8827                           ;mcc_generated_files/eusart2.c: 236:         eusart2RxStatusBuffer[eusart2RxHead].oerr =
      +                           1;
  8828  001A02  0E70               	movlw	low _eusart2RxStatusBuffer
  8829  001A04  2459               	addwf	_eusart2RxHead^0,w,c	;volatile
  8830  001A06  6ED9               	movwf	fsr2l,c
  8831  001A08  6ADA               	clrf	fsr2h,c
  8832  001A0A  0E00               	movlw	high _eusart2RxStatusBuffer
  8833  001A0C  22DA               	addwfc	fsr2h,f,c
  8834  001A0E  0100               	movlb	0	; () banked
  8835  001A10  84DF               	bsf	indf2,2,c
  8836  001A12                     
  8837                           ; BSR set to: 0
  8838                           ;mcc_generated_files/eusart2.c: 237:         EUSART2_OverrunErrorHandler();
  8839  001A12  D802               	call	i2u335_48
  8840  001A14  EF15  F00D         	goto	i2u335_49
  8841  001A18                     i2u335_48:
  8842  001A18  0005               	push	
  8843  001A1A  6EFA               	movwf	pclath,c
  8844  001A1C  51D5               	movf	_EUSART2_OverrunErrorHandler& (0+255),w,b
  8845  001A1E  6EFD               	movwf	tosl,c
  8846  001A20  51D6               	movf	(_EUSART2_OverrunErrorHandler+1)& (0+255),w,b
  8847  001A22  6EFE               	movwf	tosh,c
  8848  001A24  6AFF               	clrf	tosu,c
  8849  001A26  50FA               	movf	pclath,w,c
  8850  001A28  0012               	return		;indir
  8851  001A2A                     i2u335_49:
  8852  001A2A                     i2l3882:
  8853                           
  8854                           ;mcc_generated_files/eusart2.c: 240:     if(eusart2RxStatusBuffer[eusart2RxHead].status)
      +                          {
  8855  001A2A  0E70               	movlw	low _eusart2RxStatusBuffer
  8856  001A2C  2459               	addwf	_eusart2RxHead^0,w,c	;volatile
  8857  001A2E  6ED9               	movwf	fsr2l,c
  8858  001A30  6ADA               	clrf	fsr2h,c
  8859  001A32  0E00               	movlw	high _eusart2RxStatusBuffer
  8860  001A34  22DA               	addwfc	fsr2h,f,c
  8861  001A36  50DF               	movf	indf2,w,c
  8862  001A38  B4D8               	btfsc	status,2,c
  8863  001A3A  EF21  F00D         	goto	i2u336_41
  8864  001A3E  EF23  F00D         	goto	i2u336_40
  8865  001A42                     i2u336_41:
  8866  001A42  EF32  F00D         	goto	i2l3886
  8867  001A46                     i2u336_40:
  8868  001A46                     
  8869                           ;mcc_generated_files/eusart2.c: 241:         EUSART2_ErrorHandler();
  8870  001A46  D802               	call	i2u337_48
  8871  001A48  EF30  F00D         	goto	i2u337_49
  8872  001A4C                     i2u337_48:
  8873  001A4C  0005               	push	
  8874  001A4E  6EFA               	movwf	pclath,c
  8875  001A50  0100               	movlb	0	; () banked
  8876  001A52  51D3               	movf	_EUSART2_ErrorHandler& (0+255),w,b
  8877  001A54  6EFD               	movwf	tosl,c
  8878  001A56  51D4               	movf	(_EUSART2_ErrorHandler+1)& (0+255),w,b
  8879  001A58  6EFE               	movwf	tosh,c
  8880  001A5A  6AFF               	clrf	tosu,c
  8881  001A5C  50FA               	movf	pclath,w,c
  8882  001A5E  0012               	return		;indir
  8883  001A60                     i2u337_49:
  8884                           
  8885                           ;mcc_generated_files/eusart2.c: 242:     } else {
  8886  001A60  EF34  F00D         	goto	i2l343
  8887  001A64                     i2l3886:
  8888                           
  8889                           ;mcc_generated_files/eusart2.c: 243:         EUSART2_RxDataHandler();
  8890  001A64  EC05  F012         	call	_EUSART2_RxDataHandler	;wreg free
  8891  001A68                     i2l343:
  8892  001A68  0012               	return		;funcret
  8893  001A6A                     __end_of_EUSART2_Receive_ISR:
  8894                           	opt callstack 0
  8895                           
  8896 ;; *************** function _EUSART2_DefaultOverrunErrorHandler *****************
  8897 ;; Defined at:
  8898 ;;		line 261 in file "mcc_generated_files/eusart2.c"
  8899 ;; Parameters:    Size  Location     Type
  8900 ;;		None
  8901 ;; Auto vars:     Size  Location     Type
  8902 ;;		None
  8903 ;; Return value:  Size  Location     Type
  8904 ;;                  1    wreg      void 
  8905 ;; Registers used:
  8906 ;;		None
  8907 ;; Tracked objects:
  8908 ;;		On entry : 0/0
  8909 ;;		On exit  : 0/0
  8910 ;;		Unchanged: 0/0
  8911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8916 ;;Total ram usage:        0 bytes
  8917 ;; Hardware stack levels used:    1
  8918 ;; This function calls:
  8919 ;;		Nothing
  8920 ;; This function is called by:
  8921 ;;		_EUSART2_Initialize
  8922 ;;		_EUSART2_Receive_ISR
  8923 ;; This function uses a non-reentrant model
  8924 ;;
  8925                           
  8926                           	psect	text57
  8927  002598                     __ptext57:
  8928                           	opt callstack 0
  8929  002598                     _EUSART2_DefaultOverrunErrorHandler:
  8930                           	opt callstack 17
  8931  002598                     
  8932                           ;mcc_generated_files/eusart2.c: 264:     RC2STAbits.CREN = 0;
  8933  002598  010E               	movlb	14	; () banked
  8934  00259A  999D               	bcf	157,4,b	;volatile
  8935                           
  8936                           ;mcc_generated_files/eusart2.c: 265:     RC2STAbits.CREN = 1;
  8937  00259C  899D               	bsf	157,4,b	;volatile
  8938  00259E                     
  8939                           ; BSR set to: 14
  8940  00259E  0012               	return		;funcret
  8941  0025A0                     __end_of_EUSART2_DefaultOverrunErrorHandler:
  8942                           	opt callstack 0
  8943                           
  8944 ;; *************** function _EUSART2_DefaultFramingErrorHandler *****************
  8945 ;; Defined at:
  8946 ;;		line 259 in file "mcc_generated_files/eusart2.c"
  8947 ;; Parameters:    Size  Location     Type
  8948 ;;		None
  8949 ;; Auto vars:     Size  Location     Type
  8950 ;;		None
  8951 ;; Return value:  Size  Location     Type
  8952 ;;                  1    wreg      void 
  8953 ;; Registers used:
  8954 ;;		None
  8955 ;; Tracked objects:
  8956 ;;		On entry : 0/0
  8957 ;;		On exit  : 0/0
  8958 ;;		Unchanged: 0/0
  8959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8964 ;;Total ram usage:        0 bytes
  8965 ;; Hardware stack levels used:    1
  8966 ;; This function calls:
  8967 ;;		Nothing
  8968 ;; This function is called by:
  8969 ;;		_EUSART2_Initialize
  8970 ;;		_EUSART2_Receive_ISR
  8971 ;; This function uses a non-reentrant model
  8972 ;;
  8973                           
  8974                           	psect	text58
  8975  0025BC                     __ptext58:
  8976                           	opt callstack 0
  8977  0025BC                     _EUSART2_DefaultFramingErrorHandler:
  8978                           	opt callstack 17
  8979  0025BC  0012               	return		;funcret
  8980  0025BE                     __end_of_EUSART2_DefaultFramingErrorHandler:
  8981                           	opt callstack 0
  8982                           
  8983 ;; *************** function _EUSART2_DefaultErrorHandler *****************
  8984 ;; Defined at:
  8985 ;;		line 269 in file "mcc_generated_files/eusart2.c"
  8986 ;; Parameters:    Size  Location     Type
  8987 ;;		None
  8988 ;; Auto vars:     Size  Location     Type
  8989 ;;		None
  8990 ;; Return value:  Size  Location     Type
  8991 ;;                  1    wreg      void 
  8992 ;; Registers used:
  8993 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8994 ;; Tracked objects:
  8995 ;;		On entry : 0/0
  8996 ;;		On exit  : 0/0
  8997 ;;		Unchanged: 0/0
  8998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9003 ;;Total ram usage:        0 bytes
  9004 ;; Hardware stack levels used:    1
  9005 ;; Hardware stack levels required when called:    1
  9006 ;; This function calls:
  9007 ;;		_EUSART2_RxDataHandler
  9008 ;; This function is called by:
  9009 ;;		_EUSART2_Initialize
  9010 ;;		_EUSART2_Receive_ISR
  9011 ;; This function uses a non-reentrant model
  9012 ;;
  9013                           
  9014                           	psect	text59
  9015  0025A6                     __ptext59:
  9016                           	opt callstack 0
  9017  0025A6                     _EUSART2_DefaultErrorHandler:
  9018                           	opt callstack 16
  9019  0025A6                     
  9020                           ;mcc_generated_files/eusart2.c: 270:     EUSART2_RxDataHandler();
  9021  0025A6  EC05  F012         	call	_EUSART2_RxDataHandler	;wreg free
  9022  0025AA  0012               	return		;funcret
  9023  0025AC                     __end_of_EUSART2_DefaultErrorHandler:
  9024                           	opt callstack 0
  9025                           
  9026 ;; *************** function _EUSART2_RxDataHandler *****************
  9027 ;; Defined at:
  9028 ;;		line 249 in file "mcc_generated_files/eusart2.c"
  9029 ;; Parameters:    Size  Location     Type
  9030 ;;		None
  9031 ;; Auto vars:     Size  Location     Type
  9032 ;;		None
  9033 ;; Return value:  Size  Location     Type
  9034 ;;                  1    wreg      void 
  9035 ;; Registers used:
  9036 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9037 ;; Tracked objects:
  9038 ;;		On entry : 0/0
  9039 ;;		On exit  : 0/0
  9040 ;;		Unchanged: 0/0
  9041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9046 ;;Total ram usage:        0 bytes
  9047 ;; Hardware stack levels used:    1
  9048 ;; This function calls:
  9049 ;;		Nothing
  9050 ;; This function is called by:
  9051 ;;		_EUSART2_Receive_ISR
  9052 ;;		_EUSART2_DefaultErrorHandler
  9053 ;; This function uses a non-reentrant model
  9054 ;;
  9055                           
  9056                           	psect	text60
  9057  00240A                     __ptext60:
  9058                           	opt callstack 0
  9059  00240A                     _EUSART2_RxDataHandler:
  9060                           	opt callstack 17
  9061  00240A                     
  9062                           ;mcc_generated_files/eusart2.c: 251:     eusart2RxBuffer[eusart2RxHead++] = RC2REG;
  9063  00240A  0E78               	movlw	low _eusart2RxBuffer
  9064  00240C  2459               	addwf	_eusart2RxHead^0,w,c	;volatile
  9065  00240E  6ED9               	movwf	fsr2l,c
  9066  002410  6ADA               	clrf	fsr2h,c
  9067  002412  0E00               	movlw	high _eusart2RxBuffer
  9068  002414  22DA               	addwfc	fsr2h,f,c
  9069  002416  CE99 FFDF          	movff	3737,indf2	;volatile
  9070  00241A  2A59               	incf	_eusart2RxHead^0,f,c	;volatile
  9071  00241C                     
  9072                           ;mcc_generated_files/eusart2.c: 252:     if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
  9073  00241C  0E07               	movlw	7
  9074  00241E  6459               	cpfsgt	_eusart2RxHead^0,c	;volatile
  9075  002420  EF14  F012         	goto	i2u313_41
  9076  002424  EF16  F012         	goto	i2u313_40
  9077  002428                     i2u313_41:
  9078  002428  EF18  F012         	goto	i2l3614
  9079  00242C                     i2u313_40:
  9080  00242C                     
  9081                           ;mcc_generated_files/eusart2.c: 253:     {;mcc_generated_files/eusart2.c: 254:         e
      +                          usart2RxHead = 0;
  9082  00242C  0E00               	movlw	0
  9083  00242E  6E59               	movwf	_eusart2RxHead^0,c	;volatile
  9084  002430                     i2l3614:
  9085                           
  9086                           ;mcc_generated_files/eusart2.c: 256:     eusart2RxCount++;
  9087  002430  0100               	movlb	0	; () banked
  9088  002432  2B9B               	incf	_eusart2RxCount& (0+255),f,b	;volatile
  9089  002434                     
  9090                           ; BSR set to: 0
  9091  002434  0012               	return		;funcret
  9092  002436                     __end_of_EUSART2_RxDataHandler:
  9093                           	opt callstack 0
  9094                           
  9095 ;; *************** function _EUSART1_Transmit_ISR *****************
  9096 ;; Defined at:
  9097 ;;		line 197 in file "mcc_generated_files/eusart1.c"
  9098 ;; Parameters:    Size  Location     Type
  9099 ;;		None
  9100 ;; Auto vars:     Size  Location     Type
  9101 ;;		None
  9102 ;; Return value:  Size  Location     Type
  9103 ;;                  1    wreg      void 
  9104 ;; Registers used:
  9105 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9106 ;; Tracked objects:
  9107 ;;		On entry : 0/0
  9108 ;;		On exit  : 0/0
  9109 ;;		Unchanged: 0/0
  9110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9115 ;;Total ram usage:        0 bytes
  9116 ;; Hardware stack levels used:    1
  9117 ;; This function calls:
  9118 ;;		Nothing
  9119 ;; This function is called by:
  9120 ;;		_EUSART1_Initialize
  9121 ;;		_INTERRUPT_InterruptManager
  9122 ;; This function uses a non-reentrant model
  9123 ;;
  9124                           
  9125                           	psect	text61
  9126  002262                     __ptext61:
  9127                           	opt callstack 0
  9128  002262                     _EUSART1_Transmit_ISR:
  9129                           	opt callstack 18
  9130  002262                     
  9131                           ;mcc_generated_files/eusart1.c: 201:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
  9132  002262  0E10               	movlw	16
  9133  002264  0100               	movlb	0	; () banked
  9134  002266  61E1               	cpfslt	_eusart1TxBufferRemaining& (0+255),b	;volatile
  9135  002268  EF38  F011         	goto	i2u341_41
  9136  00226C  EF3A  F011         	goto	i2u341_40
  9137  002270                     i2u341_41:
  9138  002270  EF50  F011         	goto	i2l477
  9139  002274                     i2u341_40:
  9140  002274                     
  9141                           ; BSR set to: 0
  9142                           ;mcc_generated_files/eusart1.c: 202:     {;mcc_generated_files/eusart1.c: 203:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
  9143  002274  0E60               	movlw	low _eusart1TxBuffer
  9144  002276  2598               	addwf	_eusart1TxTail& (0+255),w,b	;volatile
  9145  002278  6ED9               	movwf	fsr2l,c
  9146  00227A  6ADA               	clrf	fsr2h,c
  9147  00227C  0E00               	movlw	high _eusart1TxBuffer
  9148  00227E  22DA               	addwfc	fsr2h,f,c
  9149  002280  50DF               	movf	indf2,w,c
  9150  002282  6E9A               	movwf	154,c	;volatile
  9151  002284                     
  9152                           ; BSR set to: 0
  9153  002284  2B98               	incf	_eusart1TxTail& (0+255),f,b	;volatile
  9154  002286                     
  9155                           ; BSR set to: 0
  9156                           ;mcc_generated_files/eusart1.c: 204:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
  9157  002286  0E0F               	movlw	15
  9158  002288  6598               	cpfsgt	_eusart1TxTail& (0+255),b	;volatile
  9159  00228A  EF49  F011         	goto	i2u342_41
  9160  00228E  EF4B  F011         	goto	i2u342_40
  9161  002292                     i2u342_41:
  9162  002292  EF4D  F011         	goto	i2l3916
  9163  002296                     i2u342_40:
  9164  002296                     
  9165                           ; BSR set to: 0
  9166                           ;mcc_generated_files/eusart1.c: 205:         {;mcc_generated_files/eusart1.c: 206:      
      +                                 eusart1TxTail = 0;
  9167  002296  0E00               	movlw	0
  9168  002298  6F98               	movwf	_eusart1TxTail& (0+255),b	;volatile
  9169  00229A                     i2l3916:
  9170                           
  9171                           ; BSR set to: 0
  9172                           ;mcc_generated_files/eusart1.c: 208:         eusart1TxBufferRemaining++;
  9173  00229A  2BE1               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
  9174                           
  9175                           ;mcc_generated_files/eusart1.c: 209:     }
  9176  00229C  EF52  F011         	goto	i2l480
  9177  0022A0                     i2l477:
  9178                           
  9179                           ; BSR set to: 0
  9180                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         P
      +                          IE3bits.TX1IE = 0;
  9181  0022A0  010E               	movlb	14	; () banked
  9182  0022A2  99C5               	bcf	197,4,b	;volatile
  9183  0022A4                     i2l480:
  9184  0022A4  0012               	return		;funcret
  9185  0022A6                     __end_of_EUSART1_Transmit_ISR:
  9186                           	opt callstack 0
  9187                           
  9188 ;; *************** function _EUSART1_Receive_ISR *****************
  9189 ;; Defined at:
  9190 ;;		line 216 in file "mcc_generated_files/eusart1.c"
  9191 ;; Parameters:    Size  Location     Type
  9192 ;;		None
  9193 ;; Auto vars:     Size  Location     Type
  9194 ;;		None
  9195 ;; Return value:  Size  Location     Type
  9196 ;;                  1    wreg      void 
  9197 ;; Registers used:
  9198 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  9199 ;; Tracked objects:
  9200 ;;		On entry : 0/0
  9201 ;;		On exit  : 0/0
  9202 ;;		Unchanged: 0/0
  9203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9208 ;;Total ram usage:        0 bytes
  9209 ;; Hardware stack levels used:    1
  9210 ;; Hardware stack levels required when called:    2
  9211 ;; This function calls:
  9212 ;;		Absolute function
  9213 ;;		_EUSART1_DefaultErrorHandler
  9214 ;;		_EUSART1_DefaultFramingErrorHandler
  9215 ;;		_EUSART1_DefaultOverrunErrorHandler
  9216 ;;		_EUSART1_RxDataHandler
  9217 ;; This function is called by:
  9218 ;;		_EUSART1_Initialize
  9219 ;;		_INTERRUPT_InterruptManager
  9220 ;; This function uses a non-reentrant model
  9221 ;;
  9222                           
  9223                           	psect	text62
  9224  001A6A                     __ptext62:
  9225                           	opt callstack 0
  9226  001A6A                     _EUSART1_Receive_ISR:
  9227                           	opt callstack 16
  9228  001A6A                     
  9229                           ;mcc_generated_files/eusart1.c: 219:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
  9230  001A6A  0E64               	movlw	low _eusart1RxStatusBuffer
  9231  001A6C  2458               	addwf	_eusart1RxHead^0,w,c	;volatile
  9232  001A6E  6ED9               	movwf	fsr2l,c
  9233  001A70  6ADA               	clrf	fsr2h,c
  9234  001A72  0E01               	movlw	high _eusart1RxStatusBuffer
  9235  001A74  22DA               	addwfc	fsr2h,f,c
  9236  001A76  0E00               	movlw	0
  9237  001A78  6EDF               	movwf	indf2,c
  9238  001A7A                     
  9239                           ;mcc_generated_files/eusart1.c: 221:     if(RC1STAbits.FERR){
  9240  001A7A  A49D               	btfss	157,2,c	;volatile
  9241  001A7C  EF42  F00D         	goto	i2u343_41
  9242  001A80  EF44  F00D         	goto	i2u343_40
  9243  001A84                     i2u343_41:
  9244  001A84  EF59  F00D         	goto	i2l3926
  9245  001A88                     i2u343_40:
  9246  001A88                     
  9247                           ;mcc_generated_files/eusart1.c: 222:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
  9248  001A88  0E64               	movlw	low _eusart1RxStatusBuffer
  9249  001A8A  2458               	addwf	_eusart1RxHead^0,w,c	;volatile
  9250  001A8C  6ED9               	movwf	fsr2l,c
  9251  001A8E  6ADA               	clrf	fsr2h,c
  9252  001A90  0E01               	movlw	high _eusart1RxStatusBuffer
  9253  001A92  22DA               	addwfc	fsr2h,f,c
  9254  001A94  0101               	movlb	1	; () banked
  9255  001A96  82DF               	bsf	indf2,1,c
  9256  001A98                     
  9257                           ; BSR set to: 1
  9258                           ;mcc_generated_files/eusart1.c: 223:         EUSART1_FramingErrorHandler();
  9259  001A98  D802               	call	i2u344_48
  9260  001A9A  EF59  F00D         	goto	i2u344_49
  9261  001A9E                     i2u344_48:
  9262  001A9E  0005               	push	
  9263  001AA0  6EFA               	movwf	pclath,c
  9264  001AA2  0100               	movlb	0	; () banked
  9265  001AA4  51D1               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
  9266  001AA6  6EFD               	movwf	tosl,c
  9267  001AA8  51D2               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
  9268  001AAA  6EFE               	movwf	tosh,c
  9269  001AAC  6AFF               	clrf	tosu,c
  9270  001AAE  50FA               	movf	pclath,w,c
  9271  001AB0  0012               	return		;indir
  9272  001AB2                     i2u344_49:
  9273  001AB2                     i2l3926:
  9274                           
  9275                           ;mcc_generated_files/eusart1.c: 226:     if(RC1STAbits.OERR){
  9276  001AB2  A29D               	btfss	157,1,c	;volatile
  9277  001AB4  EF5E  F00D         	goto	i2u345_41
  9278  001AB8  EF60  F00D         	goto	i2u345_40
  9279  001ABC                     i2u345_41:
  9280  001ABC  EF75  F00D         	goto	i2l3932
  9281  001AC0                     i2u345_40:
  9282  001AC0                     
  9283                           ;mcc_generated_files/eusart1.c: 227:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
  9284  001AC0  0E64               	movlw	low _eusart1RxStatusBuffer
  9285  001AC2  2458               	addwf	_eusart1RxHead^0,w,c	;volatile
  9286  001AC4  6ED9               	movwf	fsr2l,c
  9287  001AC6  6ADA               	clrf	fsr2h,c
  9288  001AC8  0E01               	movlw	high _eusart1RxStatusBuffer
  9289  001ACA  22DA               	addwfc	fsr2h,f,c
  9290  001ACC  0101               	movlb	1	; () banked
  9291  001ACE  84DF               	bsf	indf2,2,c
  9292  001AD0                     
  9293                           ; BSR set to: 1
  9294                           ;mcc_generated_files/eusart1.c: 228:         EUSART1_OverrunErrorHandler();
  9295  001AD0  D802               	call	i2u346_48
  9296  001AD2  EF75  F00D         	goto	i2u346_49
  9297  001AD6                     i2u346_48:
  9298  001AD6  0005               	push	
  9299  001AD8  6EFA               	movwf	pclath,c
  9300  001ADA  0100               	movlb	0	; () banked
  9301  001ADC  51CF               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
  9302  001ADE  6EFD               	movwf	tosl,c
  9303  001AE0  51D0               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
  9304  001AE2  6EFE               	movwf	tosh,c
  9305  001AE4  6AFF               	clrf	tosu,c
  9306  001AE6  50FA               	movf	pclath,w,c
  9307  001AE8  0012               	return		;indir
  9308  001AEA                     i2u346_49:
  9309  001AEA                     i2l3932:
  9310                           
  9311                           ;mcc_generated_files/eusart1.c: 231:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
  9312  001AEA  0E64               	movlw	low _eusart1RxStatusBuffer
  9313  001AEC  2458               	addwf	_eusart1RxHead^0,w,c	;volatile
  9314  001AEE  6ED9               	movwf	fsr2l,c
  9315  001AF0  6ADA               	clrf	fsr2h,c
  9316  001AF2  0E01               	movlw	high _eusart1RxStatusBuffer
  9317  001AF4  22DA               	addwfc	fsr2h,f,c
  9318  001AF6  50DF               	movf	indf2,w,c
  9319  001AF8  B4D8               	btfsc	status,2,c
  9320  001AFA  EF81  F00D         	goto	i2u347_41
  9321  001AFE  EF83  F00D         	goto	i2u347_40
  9322  001B02                     i2u347_41:
  9323  001B02  EF92  F00D         	goto	i2l3936
  9324  001B06                     i2u347_40:
  9325  001B06                     
  9326                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_ErrorHandler();
  9327  001B06  D802               	call	i2u348_48
  9328  001B08  EF90  F00D         	goto	i2u348_49
  9329  001B0C                     i2u348_48:
  9330  001B0C  0005               	push	
  9331  001B0E  6EFA               	movwf	pclath,c
  9332  001B10  0100               	movlb	0	; () banked
  9333  001B12  51CD               	movf	_EUSART1_ErrorHandler& (0+255),w,b
  9334  001B14  6EFD               	movwf	tosl,c
  9335  001B16  51CE               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
  9336  001B18  6EFE               	movwf	tosh,c
  9337  001B1A  6AFF               	clrf	tosu,c
  9338  001B1C  50FA               	movf	pclath,w,c
  9339  001B1E  0012               	return		;indir
  9340  001B20                     i2u348_49:
  9341                           
  9342                           ;mcc_generated_files/eusart1.c: 233:     } else {
  9343  001B20  EF94  F00D         	goto	i2l487
  9344  001B24                     i2l3936:
  9345                           
  9346                           ;mcc_generated_files/eusart1.c: 234:         EUSART1_RxDataHandler();
  9347  001B24  EC1B  F012         	call	_EUSART1_RxDataHandler	;wreg free
  9348  001B28                     i2l487:
  9349  001B28  0012               	return		;funcret
  9350  001B2A                     __end_of_EUSART1_Receive_ISR:
  9351                           	opt callstack 0
  9352                           
  9353 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
  9354 ;; Defined at:
  9355 ;;		line 252 in file "mcc_generated_files/eusart1.c"
  9356 ;; Parameters:    Size  Location     Type
  9357 ;;		None
  9358 ;; Auto vars:     Size  Location     Type
  9359 ;;		None
  9360 ;; Return value:  Size  Location     Type
  9361 ;;                  1    wreg      void 
  9362 ;; Registers used:
  9363 ;;		None
  9364 ;; Tracked objects:
  9365 ;;		On entry : 0/0
  9366 ;;		On exit  : 0/0
  9367 ;;		Unchanged: 0/0
  9368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9373 ;;Total ram usage:        0 bytes
  9374 ;; Hardware stack levels used:    1
  9375 ;; This function calls:
  9376 ;;		Nothing
  9377 ;; This function is called by:
  9378 ;;		_EUSART1_Initialize
  9379 ;;		_EUSART1_Receive_ISR
  9380 ;; This function uses a non-reentrant model
  9381 ;;
  9382                           
  9383                           	psect	text63
  9384  0025AC                     __ptext63:
  9385                           	opt callstack 0
  9386  0025AC                     _EUSART1_DefaultOverrunErrorHandler:
  9387                           	opt callstack 17
  9388  0025AC                     
  9389                           ;mcc_generated_files/eusart1.c: 255:     RC1STAbits.CREN = 0;
  9390  0025AC  989D               	bcf	157,4,c	;volatile
  9391                           
  9392                           ;mcc_generated_files/eusart1.c: 256:     RC1STAbits.CREN = 1;
  9393  0025AE  889D               	bsf	157,4,c	;volatile
  9394  0025B0  0012               	return		;funcret
  9395  0025B2                     __end_of_EUSART1_DefaultOverrunErrorHandler:
  9396                           	opt callstack 0
  9397                           
  9398 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
  9399 ;; Defined at:
  9400 ;;		line 250 in file "mcc_generated_files/eusart1.c"
  9401 ;; Parameters:    Size  Location     Type
  9402 ;;		None
  9403 ;; Auto vars:     Size  Location     Type
  9404 ;;		None
  9405 ;; Return value:  Size  Location     Type
  9406 ;;                  1    wreg      void 
  9407 ;; Registers used:
  9408 ;;		None
  9409 ;; Tracked objects:
  9410 ;;		On entry : 0/0
  9411 ;;		On exit  : 0/0
  9412 ;;		Unchanged: 0/0
  9413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9418 ;;Total ram usage:        0 bytes
  9419 ;; Hardware stack levels used:    1
  9420 ;; This function calls:
  9421 ;;		Nothing
  9422 ;; This function is called by:
  9423 ;;		_EUSART1_Initialize
  9424 ;;		_EUSART1_Receive_ISR
  9425 ;; This function uses a non-reentrant model
  9426 ;;
  9427                           
  9428                           	psect	text64
  9429  0025BE                     __ptext64:
  9430                           	opt callstack 0
  9431  0025BE                     _EUSART1_DefaultFramingErrorHandler:
  9432                           	opt callstack 17
  9433  0025BE  0012               	return		;funcret
  9434  0025C0                     __end_of_EUSART1_DefaultFramingErrorHandler:
  9435                           	opt callstack 0
  9436                           
  9437 ;; *************** function _EUSART1_DefaultErrorHandler *****************
  9438 ;; Defined at:
  9439 ;;		line 260 in file "mcc_generated_files/eusart1.c"
  9440 ;; Parameters:    Size  Location     Type
  9441 ;;		None
  9442 ;; Auto vars:     Size  Location     Type
  9443 ;;		None
  9444 ;; Return value:  Size  Location     Type
  9445 ;;                  1    wreg      void 
  9446 ;; Registers used:
  9447 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9448 ;; Tracked objects:
  9449 ;;		On entry : 0/0
  9450 ;;		On exit  : 0/0
  9451 ;;		Unchanged: 0/0
  9452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9457 ;;Total ram usage:        0 bytes
  9458 ;; Hardware stack levels used:    1
  9459 ;; Hardware stack levels required when called:    1
  9460 ;; This function calls:
  9461 ;;		_EUSART1_RxDataHandler
  9462 ;; This function is called by:
  9463 ;;		_EUSART1_Initialize
  9464 ;;		_EUSART1_Receive_ISR
  9465 ;; This function uses a non-reentrant model
  9466 ;;
  9467                           
  9468                           	psect	text65
  9469  0025B2                     __ptext65:
  9470                           	opt callstack 0
  9471  0025B2                     _EUSART1_DefaultErrorHandler:
  9472                           	opt callstack 16
  9473  0025B2                     
  9474                           ;mcc_generated_files/eusart1.c: 261:     EUSART1_RxDataHandler();
  9475  0025B2  EC1B  F012         	call	_EUSART1_RxDataHandler	;wreg free
  9476  0025B6  0012               	return		;funcret
  9477  0025B8                     __end_of_EUSART1_DefaultErrorHandler:
  9478                           	opt callstack 0
  9479                           
  9480 ;; *************** function _EUSART1_RxDataHandler *****************
  9481 ;; Defined at:
  9482 ;;		line 240 in file "mcc_generated_files/eusart1.c"
  9483 ;; Parameters:    Size  Location     Type
  9484 ;;		None
  9485 ;; Auto vars:     Size  Location     Type
  9486 ;;		None
  9487 ;; Return value:  Size  Location     Type
  9488 ;;                  1    wreg      void 
  9489 ;; Registers used:
  9490 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9491 ;; Tracked objects:
  9492 ;;		On entry : 0/0
  9493 ;;		On exit  : 0/0
  9494 ;;		Unchanged: 0/0
  9495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9500 ;;Total ram usage:        0 bytes
  9501 ;; Hardware stack levels used:    1
  9502 ;; This function calls:
  9503 ;;		Nothing
  9504 ;; This function is called by:
  9505 ;;		_EUSART1_Receive_ISR
  9506 ;;		_EUSART1_DefaultErrorHandler
  9507 ;; This function uses a non-reentrant model
  9508 ;;
  9509                           
  9510                           	psect	text66
  9511  002436                     __ptext66:
  9512                           	opt callstack 0
  9513  002436                     _EUSART1_RxDataHandler:
  9514                           	opt callstack 17
  9515  002436                     
  9516                           ;mcc_generated_files/eusart1.c: 242:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
  9517  002436  0E64               	movlw	low _eusart1RxBuffer
  9518  002438  2458               	addwf	_eusart1RxHead^0,w,c	;volatile
  9519  00243A  6ED9               	movwf	fsr2l,c
  9520  00243C  6ADA               	clrf	fsr2h,c
  9521  00243E  0E02               	movlw	high _eusart1RxBuffer
  9522  002440  22DA               	addwfc	fsr2h,f,c
  9523  002442  CF99 FFDF          	movff	3993,indf2	;volatile
  9524  002446  2A58               	incf	_eusart1RxHead^0,f,c	;volatile
  9525  002448                     
  9526                           ;mcc_generated_files/eusart1.c: 243:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  9527  002448  0E63               	movlw	99
  9528  00244A  6458               	cpfsgt	_eusart1RxHead^0,c	;volatile
  9529  00244C  EF2A  F012         	goto	i2u314_41
  9530  002450  EF2C  F012         	goto	i2u314_40
  9531  002454                     i2u314_41:
  9532  002454  EF2E  F012         	goto	i2l3634
  9533  002458                     i2u314_40:
  9534  002458                     
  9535                           ;mcc_generated_files/eusart1.c: 244:     {;mcc_generated_files/eusart1.c: 245:         e
      +                          usart1RxHead = 0;
  9536  002458  0E00               	movlw	0
  9537  00245A  6E58               	movwf	_eusart1RxHead^0,c	;volatile
  9538  00245C                     i2l3634:
  9539                           
  9540                           ;mcc_generated_files/eusart1.c: 247:     eusart1RxCount++;
  9541  00245C  0100               	movlb	0	; () banked
  9542  00245E  2B96               	incf	_eusart1RxCount& (0+255),f,b	;volatile
  9543  002460                     
  9544                           ; BSR set to: 0
  9545  002460  0012               	return		;funcret
  9546  002462                     __end_of_EUSART1_RxDataHandler:
  9547                           	opt callstack 0
  9548                           
  9549                           	psect	text67
  9550  000000                     __ptext67:
  9551                           	opt callstack 0
  9552  000000                     
  9553                           	psect	rparam
  9554  0000                     
  9555                           	psect	temp
  9556  00005A                     btemp:
  9557                           	opt callstack 0
  9558  00005A                     	ds	1
  9559  0000                     int$flags	set	btemp
  9560  0000                     wtemp8	set	btemp+1
  9561  0000                     ttemp5	set	btemp+1
  9562  0000                     ttemp6	set	btemp+4
  9563  0000                     ttemp7	set	btemp+8
  9564                           tosu	equ	0xFFF
  9565                           tosh	equ	0xFFE
  9566                           tosl	equ	0xFFD
  9567                           stkptr	equ	0xFFC
  9568                           pclatu	equ	0xFFB
  9569                           pclath	equ	0xFFA
  9570                           pcl	equ	0xFF9
  9571                           tblptru	equ	0xFF8
  9572                           tblptrh	equ	0xFF7
  9573                           tblptrl	equ	0xFF6
  9574                           tablat	equ	0xFF5
  9575                           prodh	equ	0xFF4
  9576                           prodl	equ	0xFF3
  9577                           indf0	equ	0xFEF
  9578                           postinc0	equ	0xFEE
  9579                           postdec0	equ	0xFED
  9580                           preinc0	equ	0xFEC
  9581                           plusw0	equ	0xFEB
  9582                           fsr0h	equ	0xFEA
  9583                           fsr0l	equ	0xFE9
  9584                           wreg	equ	0xFE8
  9585                           indf1	equ	0xFE7
  9586                           postinc1	equ	0xFE6
  9587                           postdec1	equ	0xFE5
  9588                           preinc1	equ	0xFE4
  9589                           plusw1	equ	0xFE3
  9590                           fsr1h	equ	0xFE2
  9591                           fsr1l	equ	0xFE1
  9592                           bsr	equ	0xFE0
  9593                           indf2	equ	0xFDF
  9594                           postinc2	equ	0xFDE
  9595                           postdec2	equ	0xFDD
  9596                           preinc2	equ	0xFDC
  9597                           plusw2	equ	0xFDB
  9598                           fsr2h	equ	0xFDA
  9599                           fsr2l	equ	0xFD9
  9600                           status	equ	0xFD8


Data Sizes:
    Strings     476
    Constant    0
    Data        20
    BSS         499
    Persistent  22
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      90
    BANK0           160     46     151
    BANK1           256     10     242
    BANK2           256      0     200
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), STR_5(CODE[9]), 
		 -> STR_4(CODE[12]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), STR_5(CODE[9]), 
		 -> STR_4(CODE[12]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_15(CODE[27]), STR_14(CODE[21]), STR_13(CODE[37]), STR_12(CODE[8]), 
		 -> STR_11(CODE[31]), STR_10(CODE[34]), STR_9(CODE[35]), STR_8(CODE[55]), 
		 -> STR_7(CODE[53]), STR_6(CODE[29]), STR_3(CODE[43]), STR_2(CODE[25]), 
		 -> STR_1(CODE[57]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1823_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_15(CODE[27]), STR_14(CODE[21]), STR_13(CODE[37]), STR_12(CODE[8]), 
		 -> STR_11(CODE[31]), STR_10(CODE[34]), STR_9(CODE[35]), STR_8(CODE[55]), 
		 -> STR_7(CODE[53]), STR_6(CODE[29]), STR_3(CODE[43]), STR_2(CODE[25]), 
		 -> STR_1(CODE[57]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_15(CODE[27]), STR_14(CODE[21]), STR_13(CODE[37]), STR_12(CODE[8]), 
		 -> STR_11(CODE[31]), STR_10(CODE[34]), STR_9(CODE[35]), STR_8(CODE[55]), 
		 -> STR_7(CODE[53]), STR_6(CODE[29]), STR_3(CODE[43]), STR_2(CODE[25]), 
		 -> STR_1(CODE[57]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 57
		 -> STR_15(CODE[27]), STR_14(CODE[21]), STR_13(CODE[37]), STR_12(CODE[8]), 
		 -> STR_11(CODE[31]), STR_10(CODE[34]), STR_9(CODE[35]), STR_8(CODE[55]), 
		 -> STR_7(CODE[53]), STR_6(CODE[29]), STR_3(CODE[43]), STR_2(CODE[25]), 
		 -> STR_1(CODE[57]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), STR_5(CODE[9]), STR_4(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), STR_5(CODE[9]), STR_4(CODE[12]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), STR_5(CODE[9]), STR_4(CODE[12]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    EUSART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), 

    EUSART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), 

    EUSART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultErrorHandler(), 

    EUSART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultFramingErrorHandler(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_Receive_ISR(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _main->_ModbusRx
    _main->_PrintModbus
    _EUSART2_Initialize->_EUSART2_SetErrorHandler
    _EUSART2_Initialize->_EUSART2_SetFramingErrorHandler
    _EUSART2_Initialize->_EUSART2_SetOverrunErrorHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART2_Write
    _abs->___aomod
    _atoi->_isspace

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _PrintModbus->_printf
    _ModbusRx->_checkCRC
    _checkCRC->_printf
    _InitialiseString->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _ModbusRx->_checkCRC

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  126580
                                             85 COMRAM     1     1      0
                    _ClearModbusData
                        _ClearRxBuff
                   _InitialiseString
                           _ModbusRx
                        _PrintModbus
                             _RXMode
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1210
                 _EUSART1_Initialize
                 _EUSART2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     605
            _EUSART2_SetErrorHandler
     _EUSART2_SetFramingErrorHandler
     _EUSART2_SetOverrunErrorHandler
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetOverrunErrorHandler                       2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetFramingErrorHandler                       2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetErrorHandler                              2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     605
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _RXMode                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PrintModbus                                          3     3      0   31219
                                             84 COMRAM     1     1      0
                                             41 BANK0      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _ModbusRx                                             1     1      0   62858
                                             84 COMRAM     1     1      0
                  _AddRxBuffToModBus
                        _ClearRxBuff
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                           _checkCRC
                             _printf
 ---------------------------------------------------------------------------------
 (2) _checkCRC                                            15    15      0   31562
                                             41 BANK0      5     5      0
                                              0 BANK1     10    10      0
                             _printf
 ---------------------------------------------------------------------------------
 (2) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         1     1      0      37
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ClearRxBuff                                          3     3      0      71
                                              4 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _AddRxBuffToModBus                                    3     3      0      71
                                              4 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _InitialiseString                                     0     0      0   31117
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              12     4      8   31117
                                             29 BANK0     12     4      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   29842
                                             82 COMRAM     2     2      0
                                             23 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           45    39      6   29279
                                             72 COMRAM    10     4      6
                                              0 BANK0     23    23      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    7157
                                             33 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     512
                                             10 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    6539
                                             33 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     412
                                              4 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     421
                                              4 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2732
                                             15 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    7393
                                             33 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    5127
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     310
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    2077
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1577
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0      93
                                              5 COMRAM     1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (10) _EUSART2_Write                                       1     1      0      62
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1815
                                             11 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     281
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     712
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _ClearModbusData                                      2     2      0     102
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManager                          4     4      0       0
                                              0 COMRAM     4     4      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                _EUSART2_Receive_ISR *
               _EUSART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _EUSART2_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART2_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART2_DefaultErrorHandler *
 _EUSART2_DefaultFramingErrorHandler *
 _EUSART2_DefaultOverrunErrorHandler *
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _EUSART2_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART2_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART2_DefaultErrorHandler                         0     0      0       0
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _EUSART2_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearModbusData
   _ClearRxBuff
   _InitialiseString
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _ModbusRx
     _AddRxBuffToModBus
     _ClearRxBuff
     _EUSART1_Read
     _EUSART1_is_rx_ready
     _checkCRC
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _PrintModbus
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _RXMode
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetErrorHandler
       _EUSART2_SetFramingErrorHandler
       _EUSART2_SetOverrunErrorHandler
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _EUSART2_Receive_ISR *
     Absolute function(Fake) *
     _EUSART2_DefaultErrorHandler *
       _EUSART2_RxDataHandler
     _EUSART2_DefaultFramingErrorHandler *
     _EUSART2_DefaultOverrunErrorHandler *
     _EUSART2_RxDataHandler *
   _EUSART2_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      C8      10       78.1%
BITBANK1           100      0       0       7        0.0%
BANK1              100      A      F2       8       94.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2E      97       5       94.4%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2AB       6        0.0%
DATA                 0      0     2AB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Mar 06 10:18:41 2021

                      _eusart1TxBufferRemaining 00E1                          ?_EUSART2_RxDataHandler 0001  
                                   __CFG_CP$OFF 000000                                              l81 1CEC  
                           ___wmul@multiplicand 0007                                     __CFG_LVP$ON 000000  
                                           l121 24E4                                             l124 24FC  
                                           l127 24CA                                             l320 1FA6  
                                           l144 25BA                                             l321 1FBE  
                                           l330 2596                                             l324 1FEE  
                                           l503 2582                                             l512 2564  
                                           l506 2578                                             l362 2546  
                                           l611 25A4                                             l515 256E  
                                           l371 253C                                             l452 2514  
                                           l509 258C                                             l365 255A  
                                           l622 21D4                                             l446 1DE6  
                                           l711 196E                                             l607 25A0  
                                           l359 2550                                             l616 218A  
                                           l544 1E62                                             l632 1BC8  
                                           l368 2532                                             l296 1D6A  
                                           l713 19A8                                             l721 075C  
                                           l465 2046                                             l609 25A2  
                                           l650 1392                                             l708 192C  
                                           l556 1ECE                                             l805 0C06  
                                           l821 0220                                             l653 149C  
                                           l719 0754                                             l807 0C68  
                                           l647 136C                                             l671 1726  
                                           l762 1004                                             l746 0EEC  
                                           l851 24AE                                             l739 0992  
                                           l748 0EF4                                             l836 06B2  
                                           l757 0FB4                                             l758 0FFC  
                                           l782 09CC                                             l767 0CA2  
                                           l791 0A6A                                             l847 1F2A  
                                           l784 09D4                                             l848 1F32  
                                           l777 0E6A                                             l769 0CAA  
                                           l965 1326                                             l978 1600  
                                  __CFG_CPD$OFF 000000          __end_of_EUSART2_SetFramingErrorHandler 2552  
       __size_of_EUSART2_SetFramingErrorHandler 000A                  _EUSART2_SetFramingErrorHandler 2548  
                                           _abs 22E6                                             _pad 18E8  
                       __size_of_PMD_Initialize 001C                                             tosl 000FFD  
                                           wreg 000FE8                                    __CFG_ZCD$OFF 000000  
                                          ?_abs 0017                                            l1306 18E6  
                                          l1613 2488                                            l1526 231C  
                                          l1606 2260                                            l1560 119E  
                                          l4200 1BF8                                            l1296 1816  
                                          l1624 1F88                                            l5000 24CC  
                                          l1529 2324                                            l1289 17F6  
                                          l4202 1C16                                            l4210 222A  
                                          l5010 24E0                                            l5002 24D0  
                                          l1619 213E                                            l1299 18C6  
                                          l1563 2360                                            l1635 2398  
                                          l4300 1214                                            l4204 1C4C  
                                          l4212 223C                                            l4220 2100  
                                          l5012 1DE8                                            l5020 1E80  
                                          l5004 24D4                                            l5100 22BA  
                                          l1557 1196                                            l1629 1F90  
                                          l4310 126E                                            l4302 1232  
                                          l4214 2240                                            l4222 2132  
                                          l4230 18E8                                            l5022 1EAA  
                                          l5014 1E64                                            l5006 24D8  
                                          l5110 22DA                                            l5102 22BE  
                                          l1583 23D0                                            l4312 129C  
                                          l4304 123A                                            l4320 12D6  
                                          l4208 221E                                            l4216 20F0  
                                          l4240 1938                                            l4232 18F6  
                                          l4400 18C0                                            l5032 162E  
                                          l5040 1664                                            l5024 1EB0  
                                          l5016 1E64                                            l5008 24DC  
                                          l5104 22C2                                            l1569 2408  
                                          l1577 20EE                                            l4410 20E8  
                                          l4402 209E                                            l4322 12E6  
                                          l4314 12BC                                            l4306 124E  
                                          l4330 14A2                                            l4218 20FC  
                                          l4242 194C                                            l4234 190A  
                                          l4226 2362                                            l5050 168C  
                                          l5042 1676                                            l5034 1646  
                                          l5026 1602                                            l5018 1E72  
                                          l5106 22C2                                            l4404 20A2  
                                          l4324 1306                                            l4316 12BE  
                                          l4308 125C                                            l4340 1502  
                                          l4332 14B0                                            l4252 22E6  
                                          l4180 1FC0                                            l4244 1950  
                                          l4236 1918                                            l4420 071C  
                                          l4500 0F4C                                            l4260 2326  
                                          l5060 1710                                            l5044 167A  
                                          l5052 16AE                                            l5036 164A  
                                          l5028 1616                                            l5108 22D6  
                                          l5070 2140                                            l4406 20B6  
                                          l4318 12D0                                            l4350 1578  
                                          l4342 1520                                            l4334 14D0  
                                          l4254 2300                                            l4182 1FD2  
                                          l4190 1FEA                                            l4174 1F94  
                                          l1598 1C5E                                            l4246 197C  
                                          l4238 1924                                            l4430 0776  
                                          l4422 072C                                            l4414 06B4  
                                          l4502 0F58                                            l4270 1F7C  
                                          l5062 171E                                            l5054 16C6  
                                          l5046 167E                                            l5038 165E  
                                          l5080 2164                                            l4280 24A6  
                                          l4408 20E4                                            l4360 15E0  
                                          l4352 1598                                            l4344 1528  
                                          l4336 14D4                                            l4328 149E  
                                          l4184 1FD4                                            l4176 1F94  
                                          l4192 2590                                            l4248 1990  
                                          l4440 07A2                                            l4432 0784  
                                          l4424 072E                                            l4416 06D4  
                                          l4512 0FC6                                            l4504 0F8E  
                                          l4520 0C7A                                            l4256 239A  
                                          l4264 1F34                                            l4600 0B8A  
                                          l5216 01E0                                            l5056 16EA  
                                          l5048 1684                                            l5082 2180  
                                          l4274 23D2                                            l5218 10C8  
                                          l4290 11D2                                            l4354 15AA  
                                          l4346 153C                                            l4338 14E2  
                                          l4186 1FE4                                            l4178 1FB6  
                                          l4194 1BCA                                            l4450 08AE  
                                          l4442 0824                                            l4434 078A  
                                          l4426 0748                                            l4418 06FC  
                                          l4514 0FDA                                            l4506 0F92  
                                          l4370 175A                                            l4530 0CE4  
                                          l4522 0C7C                                            l4610 0C14  
                                          l4602 0BA6                                            l5058 16FE  
                                          l5066 1724                                            l5090 22AE  
                                          l5076 2150                                            l4620 1006  
                                          l4292 11D6                                            l4284 11A0  
                                          l4348 154A                                            l4356 15B0  
                                          l4188 1FE8                                            l4196 1BDC  
                                          l4460 0920                                            l4452 08CC  
                                          l4444 082A                                            l4436 0792  
                                          l4428 0764                                            l4516 0FDE  
                                          l4508 0F96                                            l4380 17DC  
                                          l4372 176E                                            l4364 1728  
                                          l4532 0CEA                                            l4540 0DD0  
                                          l4524 0C96                                            l4268 1F6A  
                                          l4612 0C1A                                            l4604 0BC4  
                                          l4700 022E                                            l5092 22B0  
                                          l5084 22A6                                            l5078 2160  
                                          l4278 248A                                            l4630 1078  
                                          l4622 101A                                            l4294 11E4  
                                          l4286 11A4                                            l4358 15C0  
                                          l4198 1BEE                                            l4470 095A  
                                          l4462 092E                                            l4454 08E6  
                                          l4446 0830                                            l4438 079C  
                                          l4382 17DE                                            l4374 177C  
                                          l4366 1734                                            l4390 183E  
                                          l4542 0DE2                                            l4550 0E42  
                                          l4534 0D60                                            l4526 0CD2  
                                          l4518 0C6A                                            l4614 0C2A  
                                          l4606 0BDE                                            l4710 02A8  
                                          l4702 0230                                            l5094 22B2  
                                          l5086 22AA                                            ?_pad 0017  
                                          l4640 10A0                                            l4632 107C  
                                          l4624 101E                                            l4296 1204  
                                          l4288 11B2                                            l4464 0934  
                                          l4472 096A                                            l4456 0900  
                                          l4448 0894                                            l4480 0E86  
                                          l4384 17F0                                            l4376 178E  
                                          l4368 1752                                            l4392 1852  
                                          l4544 0E00                                            l4536 0D66  
                                          l4528 0CDA                                            l4616 0C40  
                                          l4608 0BF8                                            l4560 09C0  
                                          l4712 02C8                                            l4720 0332  
                                          l4704 0256                                            l4800 1F0C  
                                          l5096 22B4                                            l5088 22AC  
                                          l4642 10A8                                            l4626 1022  
                                          l4298 1208                                            l4466 0946  
                                          l4458 090E                                            l4490 0ECA  
                                          l4482 0E98                                            l4378 17BC  
                                          l4394 1860                                            l4386 1818  
                                          l4546 0E1A                                            l4538 0D6C  
                                          l4570 0A24                                            l4562 09EA  
                                          l4554 0994                                            l4730 03FE  
                                          l4722 0358                                            l4714 02D6  
                                          l4706 028C                                            l4810 2552  
                                          l4802 2534                                            l5098 22B6  
                                          l4652 1156                                            l4644 10DE  
                                          l4636 1082                                            l4628 1040  
                                          l4468 0952                                            l4484 0EA0  
                                          l4476 0E6C                                            l4396 188E  
                                          l4388 1836                                            l4548 0E34  
                                          l4572 0A2A                                            l4564 09F2  
                                          l4556 09A4                                            l4740 04A0  
                                          l4732 0424                                            l4724 037E  
                                          l4708 029A                                            l4820 2584  
                                          l4812 2566                                            l4804 252A  
                                          l4900 1D3C                                            l4654 1168  
                                          l4638 1098                                            l4494 0F16  
                                          l4486 0EB4                                            l4478 0E7E  
                                          l4398 18AE                                            l4590 0AFC  
                                          l4582 0A9E                                            l4574 0A32  
                                          l4566 0A12                                            l4558 09A6  
                                          l4750 056E                                            l4742 04EA  
                                          l4734 045A                                            l4726 03C6  
                                          l4718 0320                                            l4670 0174  
                                          l4662 012A                                            l4822 2462  
                                          l4910 1FF0                                            l4814 255C  
                                          l4806 2548                                            l4902 1D66  
                                          l4830 1C88                                            l4656 117A  
                                          l4648 1116                                            l4496 0F2A  
                                          l4488 0EBC                                            l4584 0AB0  
                                          l4592 0B10                                            l4576 0A4E  
                                          l4568 0A1A                                            l4752 0586  
                                          l4760 060C                                            l4680 019A  
                                          l4672 0180                                            l4664 0150  
                                          l4824 246C                                            l4920 2038  
                                          l4912 2002                                            l4904 24FE  
                                          l4816 257A                                            l4808 253E  
                                          l4840 1CC8                                            l4832 1C98  
                                          l4498 0F2E                                            l4594 0B20  
                                          l4578 0A5E                                            l4762 0632  
                                          l4770 0660                                            l4754 0594  
                                          l4746 0522                                            l4738 047A  
                                          l4674 0182                                            l4666 015E  
                                          l4930 218C                                            l4922 203C  
                                          l4914 2022                                            l4818 2570  
                                          l4850 25B8                                            l4842 1CCE  
                                          l4834 1CC2                                            l4596 0B26  
                                          l4588 0AEA                                            l4772 066E  
                                          l4764 0640                                            l4756 05D0  
                                          l4748 0548                                            l4692 01AC  
                                          l4684 01A0                                            l4676 0194  
                                          l4668 0170                                            l4940 1B3E  
                                          l4932 21A0                                            l4924 2040  
                                          l4916 2024                                            l4908 1FF0  
                                          l4860 1D7C                                            l4844 1CD0  
                                          l4836 1CC4                                            l4828 1C60  
                                          l4852 24B0                                            l4598 0B2C  
                                          l4766 0654                                            l4950 1B96  
                                          l4942 1B5A                                            l4934 21B0  
                                          l4926 2044                                            l4918 2034  
                                          l4870 1D9C                                            l4862 1D8C  
                                          l4854 24E6                                            l4846 1CD2  
                                          l4838 1CC6                                            l4696 01B8  
                                          l4688 01A6                                            l4776 067A  
                                          l4952 1BA8                                            l4944 1B5E  
                                          l4936 21B4                                            l4960 132E  
                                          l4872 1DA0                                            l4864 1D90  
                                          l4856 1D6C                                            l4880 1CEE  
                                          l4848 1CD4                                            l4778 06A0  
                                          l4698 020E                                            l4794 1ED0  
                                          l4946 1B62                                            l4938 1B2A  
                                          l4970 137A                                            l4962 134A  
                                          l4874 1DAC                                            l4866 1D94  
                                          l4858 1D70                                            l4890 1D18  
                                          l4882 1CF2                                            l4796 1ED8  
                                          l4956 1BBE                                            l4948 1B82  
                                          l4972 1380                                            l4964 1364  
                                          l4980 13AE                                            l4876 1DB8  
                                          l4868 1D98                                            l4892 1D1C  
                                          l4884 1CFE                                            l4798 1EE6  
                                          l4990 1494                                            l4982 13EA  
                                          l4974 138C                                            l4958 1328  
                                          l4878 1DE2                                            l4894 1D20  
                                          l4886 1D0E                                            l4984 140A  
                                          l4976 1398                                            l4896 1D24  
                                          l4888 1D14                                            l4986 1428  
                                          l4978 13AA                                            l4898 1D30  
                                          l4988 145E                                            l4996 149A  
                                          STR_1 FE23                                            STR_2 FFB4  
                                          STR_3 FEC8                                            STR_4 FFE2  
                                          STR_5 FFEE                                            STR_6 FF7C  
                                          STR_7 FE93                                            STR_8 FE5C  
                                          STR_9 FF18                                            _LATA 000F83  
                                          _LATB 000F84                                            _LATC 000F85  
                                          u4000 1F7C                                            _LATD 000F86  
                                          u4001 1F78                                            _LATE 000F87  
                                          u4010 2402                                            u4011 23FC  
                                          u4020 2404                                            u4100 14B0  
                                          u4101 14AC                                            u4030 11B2  
                                          u4110 14E2                                            u4031 11AE  
                                          u4111 14DE                                            u4040 11E4  
                                          u4120 1520                                            u4200 1836  
                                          u5000 2034                                            u4041 11E0  
                                          u4121 151C                                            u4201 1832  
                                          u5001 2030                                            u4130 154A  
                                          u4210 1860                                            u5010 21D4  
                                          u4051 120E                                            u4131 1546  
                                          u4211 185C                                            u5011 21D0  
                                          u4060 1232                                            u4140 1578  
                                          u4300 0776                                            u4220 188E  
                                          u5020 1B82                                            u5100 1ECE  
                                          u4061 122E                                            u4141 1574  
                                          u4301 0772                                            u4221 188A  
                                          u5021 1B7E                                            u5101 1ECA  
                                          u4230 20B6                                            u4070 125C  
                                          u4150 15C0                                            u4310 0784  
                                          u5030 1B96                                            u5110 1616  
                                          u4231 20B2                                            u4071 1258  
                                          u4151 15BC                                            u4311 0780  
                                          u5031 1B92                                            u5111 1612  
                                          u4240 20E4                                            u4080 129C  
                                          u4320 08AE                                            u5040 1BBA  
                                          u5120 162A                                            u5200 22D6  
                                          u4241 20E0                                            u4081 1298  
                                          u4321 08AA                                            u4401 0E76  
                                          u4161 172E                                            u5041 1BB6  
                                          u5121 1626                                            u5201 22D2  
                                          u4090 12E6                                            u4330 08CC  
                                          u4250 06E4                                            u4410 0E98  
                                          u4170 1752                                            u5050 137A  
                                          u5130 165E                                            u4091 12E2  
                                          u4331 08C8                                            u4251 06DE  
                                          u4411 0E94                                            u4171 174E  
                                          u5051 1376                                            u5131 165A  
                                          u4340 08E6                                            u4260 06E6  
                                          u4420 0ECA                                            u4180 177C  
                                          u4500 0C7A                                            u5060 13AA  
                                          u5140 1676                                            u4341 08E2  
                                          u4421 0EC6                                            u4181 1778  
                                          u4501 0C76                                            u5061 13A6  
                                          u5141 1672                                            u4350 0900  
                                          u4270 06FC                                            u4430 0EE8  
                                          u4190 17BC                                            u4510 0C96  
                                          u5070 13EA                                            u5150 169C  
                                          u4351 08FC                                            u4271 06F8  
                                          u4431 0EE4                                            u4191 17B8  
                                          u4511 0C92                                            u5071 13E6  
                                          u5151 1696                                            u3800 1BDC  
                                          u4360 090E                                            u4280 072C  
                                          u4440 0F12                                            u4520 0DE2  
                                          u4600 0A4E                                            u5080 145E  
                                          u5160 16C6                                            u3801 1BD8  
                                          u4361 090A                                            u4281 0728  
                                          u4441 0F0E                                            u4521 0DDE  
                                          u4601 0A4A                                            u5081 145A  
                                          u5161 16C2                                            u3810 1BEE  
                                          u4370 0920                                            u4290 0748  
                                          u4450 0F4C                                            u4530 0E00  
                                          u4610 0A98                                            u5090 1494  
                                          u5170 16D6                                            u3811 1BEA  
                                          u4371 091C                                            u4291 0744  
                                          u4451 0F48                                            u4531 0DFC  
                                          u4611 0A92                                            u5091 1490  
                                          u5171 16D0                                            u3820 1C16  
                                          u3900 1918                                            u4380 092E  
                                          u4460 0F7A                                            u4540 0E1A  
                                          u4700 0BDE                                            u4620 0A9A  
                                          u5180 16FE                                            u5156 169E  
                                          _PMD0 000EE1                                            u3821 1C12  
                                          u3901 1914                                            u4381 092A  
                                          u4541 0E16                                            u4701 0BDA  
                                          u5181 16FA                                            _PMD1 000EE2  
                                          u5190 2180                                            u3830 1C4C  
                                          u3910 196E                                            u4390 0946  
                                          u4470 0FB4                                            u4550 0E34  
                                          u4710 0BF8                                            u4630 0AB0  
                                          _PMD2 000EE3                                            u5191 217C  
                                          u3831 1C48                                            u3911 196A  
                                          u4391 0942                                            u4471 0FB0  
                                          u4551 0E30                                            u4711 0BF4  
                                          u4631 0AAC                                            _PMD3 000EE4  
                                          u4800 117A                                            u3840 2260  
                                          u3920 197C                                            u4480 0FC2  
                                          u4560 0E42                                            u4720 0C06  
                                          u4640 0AE4                                            u5176 16D8  
                                          _PMD4 000EE5                                            u4801 1176  
                                          u3841 225C                                            u3921 1978  
                                          u4481 0FBE                                            u4561 0E3E  
                                          u4721 0C02                                            u4641 0ADE  
                                          _PMD5 000EE6                                            u3930 2300  
                                          u3770 1FA6                                            u3850 2122  
                                          u4490 0FFC                                            u4730 0C14  
                                          u4650 0AE6                                            u4570 09A4  
                                          u4810 0150                                            u3931 22FC  
                                          u3771 1FA2                                            u4491 0FF8  
                                          u4467 0F70                                            u4731 0C10  
                                          u4571 09A0                                            u4811 014C  
                                          u4740 1040                                            u3780 1FB6  
                                          u3860 2132                                            u3940 23CA  
                                          u4660 0AFC                                            u4580 09C0  
                                          u4900 037E                                            u4820 0220  
                                          u4741 103C                                            u3781 1FB2  
                                          u3861 212E                                            u3941 23C4  
                                          u4661 0AF8                                            u4581 09BC  
                                          u4901 037A                                            u4821 021C  
                                          u4750 1078                                            u3790 1FE4  
                                          u3950 23CC                                            u3870 2392  
                                          u4670 0B64                                            u4590 09EA  
                                          u4910 0424                                            u4830 022E  
                                          u4751 1074                                            u3791 1FE0  
                                          u3871 238C                                            u4591 09E6  
                                          u4911 0420                                            u4831 022A  
                                          u4760 1094                                            u3960 235A  
                                          u3880 2394                                            u4680 0BA6  
                                          u4920 04A0                                            u4840 0256  
                                          u4761 1090                                            u3857 2118  
                                          u3961 2354                                            u4681 0BA2  
                                          u4921 049C                                            u4841 0252  
                                          u4770 1150                                            u3890 18F6  
                                          u3970 235C                                            u4690 0BC4  
                                          u4930 0548                                            u4850 029A  
                                          u4771 114A                                            u3891 18F2  
                                          u4691 0BC0                                            u4675 0B52  
                                          u4931 0544                                            u4851 0296  
                                          u4780 1152                                            u3980 1F64  
                                          u4940 056E                                            u4860 0318  
                                          u3981 1F5E                                            u4941 056A  
                                          u4861 0312                                            u4790 1168  
                                          u3990 1F66                                            u4950 0632  
                                          u4870 031A                                            u4791 1164  
                                          u4951 062E                                            u4880 0332  
                                          u4960 1F2A                                            u4881 032E  
                                          u4961 1F26                                            u4890 0358  
                                          u4970 2512                                            u4891 0354  
                                          u4971 250C                                            u4980 2514  
                                          u4990 2002                                            u4991 1FFE  
                                          _WPUA 000F10                                            _WPUB 000F18  
                                          _WPUC 000F20                                            _WPUD 000F25  
                                          _WPUE 000F2D                           ??_EUSART2_Receive_ISR 0001  
                                 __CFG_FCMEN$ON 000000                                   _EUSART2_Write 1F92  
                                          abs@a 0017                                            _dbuf 01C8  
                                          _atoi 1006                                            _main 22A6  
                                          _dtoa 06B4                                   ?_EUSART1_Read 0001  
                                          _prec 008C                                            _nout 0088  
                                          pad@i 001E                                            pad@p 001B  
                                          fsr0h 000FEA                                            fsr1h 000FE2  
                                          indf0 000FEF                                            fsr2h 000FDA  
                                          fsr0l 000FE9                                            indf1 000FE7  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 0020                                            fsr2l 000FD9  
                                          _stoa 0E6C                                            btemp 005A  
                                          _utoa 0C6A                                            _xtoa 0994  
                                          prodh 000FF4                                            prodl 000FF3  
                                          start 0126                    __end_of_EUSART2_Transmit_ISR 221E  
                                 __CFG_CSWEN$ON 000000                  fp__EUSART1_DefaultErrorHandler 0000  
                                  ___param_bank 000000                                   __CFG_SCANE$ON 000000  
                                         ??_abs 0019                                           ??_pad 001D  
                __size_of_OSCILLATOR_Initialize 0018                   __end_of_OSCILLATOR_Initialize 24FE  
                         _eusart1RxStatusBuffer 0164                                 __end_of___aodiv 1328  
                                         ?_atoi 000C                                           ?_main 0001  
                                         ?_dtoa 0022                                 __end_of___aomod 1602  
                                         STR_10 FF3B                                           STR_11 FF5D  
                                         STR_12 FFF7                                           STR_13 FEF3  
                                         STR_14 FFCD                                           STR_15 FF99  
                                 __CFG_WDTE$OFF 000000                                ?_ClearModbusData 0001  
                                         ?_stoa 0010                                           ?_utoa 0022  
                               __end_of___lodiv 1818                                           ?_xtoa 0022  
                               __end_of___lomod 18E8                                  __CFG_DEBUG$OFF 000000  
                                         i2l150 0064                                           i2l152 009E  
                                         i2l153 0112                                           i2l154 00D8  
                                         i2l500 25B6                                           i2l333 2218  
                                         i2l350 25BC                                           i2l343 1A68  
                                         i2l159 0112                                           i2l336 221C  
                                         i2l353 259E                                           i2l347 2434  
                                         i2l356 25AA                                           i2l480 22A4  
                                         i2l491 2460                                           i2l477 22A0  
                                         i2l494 25BE                                           i2l487 1B28  
                                         i2l497 25B0                                           _OSCEN 000EDC  
                                  vfpfcnvrt@fmt 004B                                    vfpfcnvrt@llu 00AE  
                                         _TRISA 000F88                                           _TRISB 000F89  
                                         _TRISC 000F8A                                           _TRISD 000F8B  
                                         _TRISE 000F8C                                           _Debug 0094  
                                 __CFG_WRT0$OFF 000000                                   __CFG_WRT1$OFF 000000  
                                 __CFG_WRT2$OFF 000000                                   __CFG_WRT3$OFF 000000  
                          _EUSART1_Transmit_ISR 2262                                  __CFG_EBTR0$OFF 000000  
                                __CFG_EBTR1$OFF 000000                                  __CFG_EBTR2$OFF 000000  
                                __CFG_EBTR3$OFF 000000                                   __CFG_WRTB$OFF 000000  
                                 __CFG_WRTC$OFF 000000                                   __CFG_WRTD$OFF 000000  
                                         _data1 00E3                                  __CFG_EBTRB$OFF 000000  
                                         _flags 0056                                           _fputc 1BCA  
                               __end_of_isalpha 2362                                           _fputs 221E  
                               __end_of_isdigit 240A                              __CFG_MCLRE$EXTMCLR 000000  
                                         atoi@n 0019                                           pad@fp 0017  
                                         atoi@s 000C                                           _width 008A  
                                         _putch 258E                                           dtoa@d 0024  
                                         dtoa@i 0044                                           dtoa@n 003C  
                                         dtoa@p 0036                                           dtoa@s 003A  
                                         dtoa@w 0038                                 __end_of_islower 239A  
                               __end_of_isspace 20F0                                  ?_EUSART2_Write 0001  
                               __end_of_isupper 23D2                                           pclath 000FFA  
                                         tablat 000FF5                                     _ClearRxBuff 218C  
                                ??_EUSART1_Read 0005                                           plusw1 000FE3  
                                         plusw2 000FDB                                           stoa@i 001C  
                                         stoa@l 0024                                           stoa@p 0022  
                                         stoa@s 0012                                           stoa@w 001E  
                                         ttemp5 005B                                           ttemp6 005E  
                                         ttemp7 0062                                           utoa@d 0024  
                                         utoa@i 0040                                           utoa@n 0038  
                                         utoa@p 0034                                           utoa@w 0036  
                                         status 000FD8                                      _ModDataCnt 0090  
                                         wtemp8 005B                                           xtoa@c 0047  
                                         xtoa@d 0024                                           xtoa@i 0045  
                                         xtoa@n 003D                                           xtoa@p 0039  
                                         xtoa@w 003B                                           xtoa@x 002C  
                               __end_of_toupper 1F92                                ___lodiv@dividend 0005  
         fp__EUSART1_DefaultFramingErrorHandler 0000      __end_of_EUSART1_DefaultFramingErrorHandler 25C0  
   __size_of_EUSART1_DefaultFramingErrorHandler 0002            ??_EUSART1_DefaultFramingErrorHandler 0001  
           ?_EUSART1_DefaultFramingErrorHandler 0001              _EUSART1_DefaultFramingErrorHandler 25BE  
                                checkCRC@crcLow 01EA           __end_of_EUSART2_SetTxInterruptHandler 2534  
        __size_of_EUSART2_SetTxInterruptHandler 000A                   _EUSART2_SetTxInterruptHandler 252A  
                                  _toupper$1874 0011                                 __initialization 2048  
                                  __end_of_atoi 11A0                      __end_of_EUSART1_Initialize 1DE8  
                                  __end_of_main 22E6                                    __end_of_dtoa 0994  
                     __size_of_InitialiseString 007C                                    __end_of_stoa 1006  
                                  __end_of_utoa 0E6C                                    __end_of_xtoa 0C6A  
                   ?_INTERRUPT_InterruptManager 0001                                __end_of_ModbusRx 1728  
                                        ??_atoi 000E                                          ??_main 0056  
                                        ??_dtoa 002C                                          ??_stoa 0014  
                                        ??_utoa 002C                                          ??_xtoa 002D  
                                 __activetblptr 000003             __end_of_EUSART2_DefaultErrorHandler 25AC  
                   _EUSART2_DefaultErrorHandler 25A6                                      _ModbusData 0100  
                         ?_EUSART1_Transmit_ISR 0001                                ___lodiv@quotient 0015  
                    __end_of_EUSART2_Initialize 1D6C                        _eusart2TxBufferRemaining 00E2  
                                        ?_fputc 0007                                          ?_fputs 0010  
                                        _ANSELA 000F11                                          ?_putch 0001  
                                        _ANSELB 000F19                                          _ANSELC 000F21  
                                        _ANSELD 000F26                                          _ANSELE 000F2E  
                                        _RC1REG 000F99                                          _RC2REG 000E99  
                                        _RC1STA 000F9D                                          _RC2STA 000E9D  
                                        _RB6PPS 000EF5                                          _ODCONA 000F0F  
                                        _ODCONB 000F17                                          _ODCONC 000F1F  
                                        _RC6PPS 000EFD                                          _ODCOND 000F24  
                                        _ODCONE 000F2C                    __size_of_EUSART1_is_rx_ready 0018  
                                __CFG_WDTCCS$SC 000000                                          i2l4010 001A  
                                        i2l4020 0080                                          i2l4012 0028  
                                        i2l4022 00AC                                          i2l4014 0038  
                                        i2l4024 00BA                                          i2l4016 0046  
                                        i2l4026 00E6                                          i2l4018 0072  
                                        i2l4028 00F4                                          i2l3610 241C  
                                        i2l3612 242C                                          i2l3630 2448  
                                        i2l3614 2430                                          i2l3606 240A  
                                        i2l3632 2458                                          i2l3608 241A  
                                        i2l3720 25A6                                          i2l3634 245C  
                                        i2l3626 2436                                          i2l3628 2446  
                                        i2l3750 25B2                                          i2l3910 2284  
                                        i2l3718 2598                                          i2l3920 1A7A  
                                        i2l3912 2286                                          _INLVLA 000F0D  
                                        i2l3930 1AD0                                          i2l3922 1A88  
                                        i2l3914 2296                                          i2l3906 2262  
                                        _INLVLB 000F15                                          _INLVLC 000F1D  
                                        i2l3748 25AC                                          i2l3932 1AEA  
                                        i2l3924 1A98                                          i2l3916 229A  
                                        i2l3908 2274                                          i2l3860 21FA  
                                        _INLVLD 000F22                                          _INLVLE 000F2A  
                                        i2l3934 1B06                                          i2l3926 1AB2  
                                        i2l3918 1A6A                                          i2l3870 19BA  
                                        i2l3862 21FE                                          i2l3936 1B24  
                                        i2l3928 1AC0                                          i2l3880 1A12  
                                        i2l3872 19CA                                          i2l3864 220E  
                                        i2l3856 21D6                                          i2l3882 1A2A  
                                        i2l3874 19DA                                          i2l3866 2212  
                                        i2l3858 21E8                                          i2l3884 1A46  
                                        i2l3876 19F2                                          i2l3868 19AA  
                                        i2l3886 1A64                                          i2l3878 1A02  
                                        _TABLAT 000FF5                                          _OSCFRQ 000EDE  
                                 vfpfcnvrt@done 00AA                                          _NVMDAT 000F80  
                                        _RX1PPS 000EB5                                          _RX2PPS 000E8D  
                                        _TX1REG 000F9A                                          _TX2REG 000E9A  
                              __end_of_checkCRC 149E                                          _TX1STA 000F9E  
                                        _TX2STA 000E9E                                          _RXMode 25A0  
                                        _RXStat 0093                                  __CFG_PWRTE$OFF 000000  
                                __CFG_XINST$OFF 000000                                    vfprintf@cfmt 0053  
                     __CFG_RSTOSC$HFINTOSC_1MHZ 000000                              AddRxBuffToModBus@i 0006  
                                     ??___aodiv 0015                                       ??___aomod 0015  
                                        ___wmul 248A                                  __CFG_STVREN$ON 000000  
                                     ??___lodiv 0015                                       ??___lomod 0015  
                      ?_EUSART1_SetErrorHandler 0005                                          clear_0 206E  
                                        clear_1 207A                                          clear_2 2086  
                                        _rxData 0200                     _EUSART2_FramingErrorHandler 00D7  
                                        _printf 2462                                          pad@buf 0019  
              ??_EUSART1_SetOverrunErrorHandler 0007                 ?_EUSART1_SetOverrunErrorHandler 0005  
                                        dtoa@fp 0022                                          _strlen 20F0  
                                 _ExpectedBytes 00F5                                          fputc@c 0007  
                                _PMD_Initialize 24B0                                          fputs@c 0014  
                                        fputs@i 0015                                          fputs@s 0010  
                                     ??_isalpha 0007                                       ??_isdigit 0007  
                                 ??_PrintModbus 0055                                       ??_islower 0007  
                                  __mediumconst FE22                                       ??_isspace 0007  
                                        tblptrh 000FF7                                       ??_isupper 0007  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                          _EUSART2_Transmit_ISR 21D6                                          stoa@cp 0020  
                                        stoa@fp 0010                                __end_of_vfprintf 1F34  
                                        utoa@fp 0022                                 ??_EUSART2_Write 0005  
                                        xtoa@fp 0022                                 _eusart1RxBuffer 0264  
                                     ??_toupper 000D                   __size_of_INTERRUPT_Initialize 0004  
                               _eusart2RxBuffer 0078                                 _eusart1TxBuffer 0060  
                             _SYSTEM_Initialize 24CC                                 _eusart2TxBuffer 0080  
                                    __accesstop 0060                         __end_of__initialization 2094  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                               checkCRC@crcHigh 01E8                         ??_EUSART2_RxDataHandler 0001  
                __size_of_EUSART1_RxDataHandler 002C                   __end_of_EUSART1_RxDataHandler 2462  
                                __pcstackCOMRAM 0001                                    __pidataBANK0 2516  
                           ??_SYSTEM_Initialize 0007                                   __end_of_fputc 1C60  
                                 __end_of_fputs 2262                  ?_EUSART2_SetTxInterruptHandler 0005  
                                 __end_of_putch 2598                          __end_of_PMD_Initialize 24CC  
                          __end_of_EUSART1_Read 2048                          ??_EUSART1_Transmit_ISR 0001  
                      ?_EUSART2_SetErrorHandler 0005                           ?_EUSART2_Transmit_ISR 0001  
                   __end_of_EUSART1_Receive_ISR 1B2A                                         ??_fputc 000B  
                     __end_of_SYSTEM_Initialize 24E6                                         ??_fputs 0014  
                                       ??_putch 0006                                   _eusart1RxHead 0058  
                                 _eusart1TxHead 0099                                   _eusart2RxHead 0059  
                                 _eusart1RxTail 0097                                   _eusart2TxHead 009E  
                                    __pbssBANK0 0060                                      __pbssBANK1 0100  
                                    __pbssBANK2 0200                                   _eusart2RxTail 009C  
                                 _eusart1TxTail 0098               _EUSART1_TxDefaultInterruptHandler 00DB  
                                 _eusart2TxTail 009D                 ??_EUSART1_SetRxInterruptHandler 0007  
                           __end_of_PrintModbus 1ED0                ??_EUSART2_SetFramingErrorHandler 0007  
               ?_EUSART2_SetFramingErrorHandler 0005                                       ?_ModbusRx 0001  
                                       ?_RXMode 0001                 __end_of_EUSART1_SetErrorHandler 258E  
                              _InitialiseString 1DE8                                         ?___wmul 0005  
                               __CFG_PPS1WAY$ON 000000                                         ?_printf 00BC  
                               ?_PMD_Initialize 0001                                         ?_strlen 0005  
        __end_of_EUSART1_SetFramingErrorHandler 2584         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler 257A                           _eusart2RxStatusBuffer 0070  
                                     ?_checkCRC 0001                    ?_EUSART1_DefaultErrorHandler 0001  
                                       _SP1BRGH 000F9C                                         _SP1BRGL 000F9B  
                                       _SP2BRGH 000E9C                                         _SP2BRGL 000E9B  
                                       _OSCCON1 000ED8                                         _OSCCON3 000EDA  
                   __end_of_EUSART2_Receive_ISR 1A6A                              __size_of_vfpfcnvrt 058A  
                                       _TBLPTRH 000FF7                                         _TBLPTRL 000FF6  
                                       _TBLPTRU 000FF8                                         _NVMADRH 000F7F  
                                       _NVMADRL 000F7E                                         _OSCTUNE 000EDD  
                                       _NVMCON2 000F82                                         _SLRCONA 000F0E  
                                       _SLRCONB 000F16                                         _SLRCONC 000F1E  
                                       _SLRCOND 000F23                                         _SLRCONE 000F2B  
                              ___lomod@dividend 0005                                    ?_ClearRxBuff 0001  
                                    ??_ModbusRx 0055                                         _ByteNum 008E  
                               __size_of_RXMode 0006                                         __Hparam 0000  
                                       __Lparam 0000                  fp__EUSART2_DefaultErrorHandler 0000  
                                       ___aodiv 11A0                                         ___aomod 149E  
                               __size_of___wmul 0026                                         ___lodiv 1728  
                                       ___lomod 1818                                       ?_vfprintf 00B6  
                           _EUSART1_is_rx_ready 24FE                                         __pcinit 2048  
               __end_of_EUSART2_SetErrorHandler 255C                                         __ramtop 0F00  
                                       __ptext0 22A6                                         __ptext1 24CC  
                                       __ptext2 24B0                                         __ptext3 1C60  
                                       __ptext4 24E6                                         __ptext5 25B8  
                                       __ptext6 1CEE                                         __ptext7 252A  
                                       __ptext8 2534                                         __ptext9 253E  
                               __size_of_printf 0028                                 __size_of_strlen 0050  
                                    ??_checkCRC 00C8           fp__EUSART2_DefaultOverrunErrorHandler 0000  
    __end_of_EUSART2_DefaultOverrunErrorHandler 25A0     __size_of_EUSART2_DefaultOverrunErrorHandler 0008  
          ??_EUSART2_DefaultOverrunErrorHandler 0001             ?_EUSART2_DefaultOverrunErrorHandler 0001  
            _EUSART2_DefaultOverrunErrorHandler 2598                           _OSCILLATOR_Initialize 24E6  
                        ??_EUSART2_Transmit_ISR 0001                                    __size_of_abs 0040  
                                  __size_of_pad 00C2                                         _isalpha 2326  
                                       _isdigit 23D2                              _EUSART1_Initialize 1D6C  
                                       _islower 2362                        ??_PIN_MANAGER_Initialize 0005  
                                       _isspace 209E                                     _PrintModbus 1E64  
                                       _isupper 239A                   ??_EUSART1_DefaultErrorHandler 0001  
                                       atoi@neg 0012                      __size_of_SYSTEM_Initialize 001A  
                      __size_of_ClearModbusData 004C                                         _toupper 1F34  
                          end_of_initialization 2094                            ?_EUSART1_is_rx_ready 0001  
                           ?_EUSART1_Initialize 0001                                         fputc@fp 0009  
                   _EUSART1_OverrunErrorHandler 00CF                                         fputs@fp 0012  
         __end_of_EUSART1_SetRxInterruptHandler 2570          __size_of_EUSART1_SetRxInterruptHandler 000A  
                 _EUSART1_SetRxInterruptHandler 2566                              _EUSART2_Initialize 1CEE  
                             __end_of_vfpfcnvrt 06B4                                         postdec1 000FE5  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                         __size_of_EUSART1_Read 0058                                      ??_vfprintf 0053  
                          ??_EUSART1_Initialize 0007                           __CFG_WDTCPS$WDTCPS_31 000000  
                           ?_EUSART2_Initialize 0001                                         strlen@a 0007  
                                       strlen@s 0005                                ClearModbusData@i 0005  
                       fp__EUSART1_Transmit_ISR 0000                __size_of_EUSART1_SetErrorHandler 000A  
                              __CFG_FEXTOSC$OFF 000000                           ??_EUSART1_is_rx_ready 0005  
                          ??_EUSART2_Initialize 0007                                    _EUSART1_Read 1FF0  
          __size_of_EUSART1_DefaultErrorHandler 0006                                  __end_of_RXMode 25A6  
                __size_of_EUSART2_RxDataHandler 002C                   __end_of_EUSART2_RxDataHandler 2436  
                  __end_of_INTERRUPT_Initialize 25BC                                     vfpfcnvrt@ap 004D  
                                   vfpfcnvrt@cp 00A7                                     vfpfcnvrt@fp 0049  
                                   vfpfcnvrt@ll 009F                                  __end_of___wmul 24B0  
                        ?_OSCILLATOR_Initialize 0001                                  __end_of_printf 248A  
                                __end_of_strlen 2140                             start_initialization 2048  
                               ___lodiv@divisor 000D                                 ___lodiv@counter 001D  
               __size_of_PIN_MANAGER_Initialize 008E                                     __end_of_abs 2326  
                                   __end_of_pad 19AA                        __end_of_InitialiseString 1E64  
 EUSART1_SetRxInterruptHandler@interruptHandler 0005   EUSART1_SetTxInterruptHandler@interruptHandler 0005  
 EUSART2_SetRxInterruptHandler@interruptHandler 0005   EUSART2_SetTxInterruptHandler@interruptHandler 0005  
                                   putch@txData 0006                           __end_of_EUSART2_Write 1FF0  
                        fp__EUSART1_Receive_ISR 0000                __size_of_EUSART2_SetErrorHandler 000A  
                                      ??_RXMode 0005                            __size_of_ClearRxBuff 004A  
                             ??_ClearModbusData 0005          __end_of_EUSART2_SetOverrunErrorHandler 2548  
       __size_of_EUSART2_SetOverrunErrorHandler 000A                  _EUSART2_SetOverrunErrorHandler 253E  
                              __CFG_LPBOREN$OFF 000000                                    ClearRxBuff@i 0006  
                             __size_of_ModbusRx 0126                                     vfprintf@fmt 00B8  
                              ??_PMD_Initialize 0005                                        ??___wmul 0009  
                         _EUSART1_RxDataHandler 2436                  ?_EUSART1_SetRxInterruptHandler 0005  
                                   __pdataBANK0 00E3                                        ??_printf 0055  
                                      ??_strlen 0007                                  _eusart1RxCount 0096  
                                _eusart2RxCount 009B                                     __pbssCOMRAM 0056  
             _EUSART1_RxDefaultInterruptHandler 00D9                   __size_of_EUSART1_Transmit_ISR 0044  
                                 __pcstackBANK0 009F                                   __pcstackBANK1 01E8  
                              ___aodiv@dividend 0005                               __size_of_checkCRC 0176  
                       fp__EUSART2_Transmit_ISR 0000                               _AddRxBuffToModBus 1B2A  
                           EUSART2_Write@txData 0005                 ??_EUSART1_SetTxInterruptHandler 0007  
                            ?_AddRxBuffToModBus 0001                ??_EUSART1_SetFramingErrorHandler 0007  
               ?_EUSART1_SetFramingErrorHandler 0005                 ??_EUSART2_SetRxInterruptHandler 0007  
                  __size_of_EUSART1_Receive_ISR 00C0                          fp__EUSART2_Receive_ISR 0000  
                                     _atoi$1783 0014                                       _atoi$1784 0018  
                                     _atoi$1785 0016                                       __pnvBANK0 00CD  
                           ??_AddRxBuffToModBus 0005                          _PIN_MANAGER_Initialize 1C60  
                                     _dtoa$1279 0034                                       __pintcode 0008  
                                 __pmediumconst FE22                                        ?___aodiv 0005  
                                      ?___aomod 0005                                ___aodiv@quotient 0017  
                                      ?___lodiv 0005                                        ?___lomod 0005  
             _EUSART2_TxDefaultInterruptHandler 00DF                    ??_INTERRUPT_InterruptManager 0001  
                             __size_of_vfprintf 0064                                 ___lomod@divisor 000D  
                                      _BAUD1CON 000F9F                                        _BAUD2CON 000E9F  
                                     checkCRC@i 01F0                                       checkCRC@j 01EC  
                               ___lomod@counter 0015           fp__EUSART1_DefaultOverrunErrorHandler 0000  
    __end_of_EUSART1_DefaultOverrunErrorHandler 25B2     __size_of_EUSART1_DefaultOverrunErrorHandler 0006  
          ??_EUSART1_DefaultOverrunErrorHandler 0001             ?_EUSART1_DefaultOverrunErrorHandler 0001  
            _EUSART1_DefaultOverrunErrorHandler 25AC                                        ?_isalpha 0005  
                                      ?_isdigit 0005                            _EUSART1_ErrorHandler 00CD  
                  ?_EUSART2_DefaultErrorHandler 0001                                        ?_islower 0005  
                                      ?_isspace 0005                                    ?_PrintModbus 0001  
                     __end_of_AddRxBuffToModBus 1BCA                                        ?_isupper 0005  
                       _EUSART1_SetErrorHandler 2584                                  __size_of_fputc 0096  
                                __size_of_fputs 0044                                        ?_toupper 000B  
                                __size_of_putch 000A                            _INTERRUPT_Initialize 25B8  
                  __size_of_EUSART2_Receive_ISR 00C0                                  ___wmul@product 0009  
                                      _LATAbits 000F83         EUSART1_SetErrorHandler@interruptHandler 0005  
       EUSART2_SetErrorHandler@interruptHandler 0005                                        _LATDbits 000F86  
                                      _PIE3bits 000EC5                             __CFG_BORV$VBOR_2P45 000000  
           __size_of_INTERRUPT_InterruptManager 011E                                        i2u313_40 242C  
                                      i2u313_41 2428                                        i2u314_40 2458  
                                      i2u330_40 21E8                                        i2u314_41 2454  
                                      i2u330_41 21E4                                        i2u331_40 220E  
                                      i2u331_41 220A                                        i2u332_40 19CA  
                                      i2u332_41 19C6                                        i2u341_40 2274  
                                      i2u341_41 2270                                        i2u342_40 2296  
                                      i2u334_40 1A02                                        i2u333_48 19E0  
                                      i2u342_41 2292                                        i2u334_41 19FE  
                                      i2u333_49 19F2                                        i2u343_40 1A88  
                                      i2u343_41 1A84                                        i2u336_40 1A46  
                                      i2u335_48 1A18                                        i2u360_40 0038  
                                      i2u336_41 1A42                                        i2u335_49 1A2A  
                                      i2u360_41 0034                                        i2u345_40 1AC0  
                                      i2u344_48 1A9E                                        i2u361_40 0046  
                                      i2u345_41 1ABC                                        i2u344_49 1AB2  
                                      i2u361_41 0042                                        i2u337_48 1A4C  
                                      i2u370_40 00F4                                        i2u337_49 1A60  
                                      i2u370_41 00F0                                        i2u347_40 1B06  
                                      i2u346_48 1AD6                                        i2u363_40 0072  
                                      i2u362_48 004C                                        i2u347_41 1B02  
                                      i2u346_49 1AEA                                        i2u363_41 006E  
                                      i2u362_49 0060                                        i2u371_48 00FA  
                                      i2u364_40 0080                                        i2u371_49 010E  
                                      i2u364_41 007C                                        i2u348_48 1B0C  
                                      i2u348_49 1B20                                        _PIR3bits 000ECD  
                                      i2u366_40 00AC                                        i2u365_48 0086  
                                      i2u366_41 00A8                                        i2u365_49 009A  
                                      i2u367_40 00BA                                        i2u359_40 0028  
                                      i2u367_41 00B6                                        i2u359_41 0024  
                                      i2u369_40 00E6                                        i2u368_48 00C0  
                                      i2u369_41 00E2                                        i2u368_49 00D4  
                                      _PIR7bits 000ED1                          ?_EUSART1_RxDataHandler 0001  
                                     _vfpfcnvrt 012A                                       _xtoa$1308 0035  
                                     _xtoa$1309 0037                               ___wmul@multiplier 0005  
                                   checkCRC@crc 01EE                   __size_of_EUSART2_Transmit_ISR 0048  
                                  _isspace$1810 000B                   ??_EUSART2_DefaultErrorHandler 0001  
                                    vfpfcnvrt@c 00A9                                       copy_data0 205C  
                         ?_INTERRUPT_Initialize 0001                         _EUSART2_SetErrorHandler 2552  
                         EUSART1_Read@readValue 0005                     _EUSART2_OverrunErrorHandler 00D5  
                                      _ModbusRx 1602           __end_of_EUSART1_SetTxInterruptHandler 2566  
        __size_of_EUSART1_SetTxInterruptHandler 000A                   _EUSART1_SetTxInterruptHandler 255C  
                                      __Hrparam 0000           __end_of_EUSART2_SetRxInterruptHandler 253E  
        __size_of_EUSART2_SetRxInterruptHandler 000A                   _EUSART2_SetRxInterruptHandler 2534  
                                    vfprintf@ap 00BA                                        __Lrparam 0000  
                                    vfprintf@fp 00B6                              __CFG_BOREN$SBORDIS 000000  
                       ??_OSCILLATOR_Initialize 0005                                __size_of___aodiv 0188  
                              __size_of___aomod 0164                                __size_of___lodiv 00F0  
                              __size_of___lomod 00D0                     __size_of_EUSART1_Initialize 007C  
                                    ?_vfpfcnvrt 0049                                 ___aodiv@divisor 000D  
                               ___aodiv@counter 0015                       ??_EUSART1_SetErrorHandler 0007  
                                      _checkCRC 1328             __end_of_EUSART1_DefaultErrorHandler 25B8  
                   _EUSART1_DefaultErrorHandler 25B2                     __end_of_EUSART1_is_rx_ready 2516  
                          _EUSART2_ErrorHandler 00D3                                __size_of_isalpha 003C  
                              __size_of_isdigit 0038                      __size_of_AddRxBuffToModBus 00A0  
                               _ClearModbusData 2140                                __size_of_islower 0038  
                              __size_of_isspace 0052                                        __ptext10 2548  
                                      __ptext11 2552                                        __ptext20 1602  
                                      __ptext12 1D6C                                        __ptext21 1328  
                                      __ptext13 255C                                        __ptext30 0994  
                                      __ptext22 24FE                                        __ptext14 2566  
                                      __ptext31 1F34                                        __ptext23 1FF0  
                                      __ptext15 2570                                        __ptext40 18E8  
                                      __ptext32 2362                                        __ptext24 218C  
                                      __ptext16 257A                                        __ptext41 20F0  
                                      __ptext33 239A                                        __ptext25 1B2A  
                                      __ptext17 2584                                        __ptext50 209E  
                                      __ptext42 221E                                        __ptext34 2326  
                                      __ptext26 1DE8                                        __ptext18 25A0  
                                      __ptext51 23D2                                        __ptext43 1BCA  
                                      __ptext35 0C6A                                        __ptext27 2462  
                                      __ptext19 1E64                                        __ptext60 240A  
                                      __ptext52 248A                                        __ptext44 258E  
                                      __ptext36 1818                                        __ptext28 1ED0  
                                      __ptext61 2262                                        __ptext53 2140  
                                      __ptext45 1F92                                        __ptext37 1728  
                                      __ptext29 012A                                        __ptext62 1A6A  
                                      __ptext46 22E6                                        __ptext38 0E6C  
                                      __ptext63 25AC                                        __ptext55 21D6  
                                      __ptext47 149E                                        __ptext39 06B4  
                                      __ptext64 25BE                                        __ptext56 19AA  
                                      __ptext48 11A0                                        __ptext65 25B2  
                                      __ptext57 2598                                        __ptext49 1006  
                                      __ptext66 2436                                        __ptext58 25BC  
                                      __ptext67 0000                                        __ptext59 25A6  
                              __size_of_isupper 0038                               ?_InitialiseString 0001  
                              __size_of_toupper 005E                     __size_of_EUSART2_Initialize 007E  
                            ??_InitialiseString 0055                                   __size_of_atoi 019A  
                                 __size_of_main 0040                                   __size_of_dtoa 02E0  
                                 __size_of_stoa 019A           fp__EUSART2_DefaultFramingErrorHandler 0000  
    __end_of_EUSART2_DefaultFramingErrorHandler 25BE     __size_of_EUSART2_DefaultFramingErrorHandler 0002  
          ??_EUSART2_DefaultFramingErrorHandler 0001             ?_EUSART2_DefaultFramingErrorHandler 0001  
            _EUSART2_DefaultFramingErrorHandler 25BC                                   __size_of_utoa 0202  
                                 __size_of_xtoa 02D6                            __CFG_WDTCWS$WDTCWS_7 000000  
                                  PrintModbus@i 00C8            __size_of_EUSART2_DefaultErrorHandler 0006  
                                    _RC1STAbits 000F9D                                       stoa@F1139 00EE  
                                    _RC2STAbits 000E9D  EUSART1_SetOverrunErrorHandler@interruptHandler 0005  
EUSART2_SetOverrunErrorHandler@interruptHandler 0005                                        _rxStatus 0092  
                                      int$flags 005A                                        _vfprintf 1ED0  
            __end_of_INTERRUPT_InterruptManager 0126                      _INTERRUPT_InterruptManager 0008  
                         _EUSART2_RxDataHandler 240A                                       printf@fmt 00BC  
                   _EUSART1_FramingErrorHandler 00D1                             _EUSART1_Receive_ISR 1A6A  
                              ___aomod@dividend 0005                ??_EUSART2_SetOverrunErrorHandler 0007  
               ?_EUSART2_SetOverrunErrorHandler 0005                                  _vfpfcnvrt$1323 00AC  
                                    _INTCONbits 000FF2                                     _NVMCON1bits 000F81  
                                      isalpha@c 0005                                        isdigit@c 0005  
                        ??_INTERRUPT_Initialize 0005                       ??_EUSART2_SetErrorHandler 0007  
                          __size_of_PrintModbus 006C                                        intlevel2 0000  
                                 ??_ClearRxBuff 0005                            ?_EUSART1_Receive_ISR 0001  
                                      islower@c 0005                                        isspace@c 0005  
                       ?_PIN_MANAGER_Initialize 0001                               __CFG_CLKOUTEN$OFF 000000  
        __end_of_EUSART1_SetOverrunErrorHandler 257A         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 2570                                        isupper@c 0005  
                  __end_of_EUSART1_Transmit_ISR 22A6                                        printf@ap 00C6  
EUSART1_SetFramingErrorHandler@interruptHandler 0005  EUSART2_SetFramingErrorHandler@interruptHandler 0005  
                ?_EUSART1_SetTxInterruptHandler 0005                  ?_EUSART2_SetRxInterruptHandler 0005  
                               ___aomod@divisor 000D                                     ??_vfpfcnvrt 004F  
                                      stoa@nuls 0015                                 ___aomod@counter 0015  
                            _eusart1RxLastError 0095                          __size_of_EUSART2_Write 005E  
                           _EUSART2_Receive_ISR 19AA                         __end_of_ClearModbusData 218C  
                                      toupper@c 000B                                      _TX1STAbits 000F9E  
                                    _TX2STAbits 000E9E                                    ___aodiv@sign 0016  
                         ??_EUSART1_Receive_ISR 0001                  __end_of_PIN_MANAGER_Initialize 1CEE  
               ??_EUSART2_SetTxInterruptHandler 0007                            ?_EUSART2_Receive_ISR 0001  
                            _eusart2RxLastError 009A                         ??_EUSART1_RxDataHandler 0001  
                                  ___aomod@sign 0016               _EUSART2_RxDefaultInterruptHandler 00DD  
                           __end_of_ClearRxBuff 21D6  
