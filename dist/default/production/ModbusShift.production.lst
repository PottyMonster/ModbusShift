

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Mar 10 00:23:01 2021

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F46K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	text64,global,reloc=2,class=CODE,delta=1
    87                           	psect	text65,global,reloc=2,class=CODE,delta=1
    88                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    89                           	psect	text67,global,reloc=2,class=CODE,delta=1
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1
    94                           	psect	text72,global,reloc=2,class=CODE,delta=1
    95                           	psect	text73,global,reloc=2,class=CODE,delta=1
    96                           	psect	text74,global,reloc=2,class=CODE,delta=1
    97                           	psect	text75,global,reloc=2,class=CODE,delta=1
    98                           	psect	text76,global,reloc=2,class=CODE,delta=1
    99                           	psect	text77,global,reloc=2,class=CODE,delta=1
   100                           	psect	text78,global,reloc=2,class=CODE,delta=1
   101                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   102                           	psect	text79,global,reloc=2,class=CODE,delta=1
   103                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   104                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   105  0000                     
   106                           ; Version 2.10
   107                           ; Generated 31/07/2019 GMT
   108                           ; 
   109                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   110                           ; All rights reserved.
   111                           ; 
   112                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   113                           ; 
   114                           ; Redistribution and use in source and binary forms, with or without modification, are
   115                           ; permitted provided that the following conditions are met:
   116                           ; 
   117                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   118                           ;        conditions and the following disclaimer.
   119                           ; 
   120                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   121                           ;        of conditions and the following disclaimer in the documentation and/or other
   122                           ;        materials provided with the distribution.
   123                           ; 
   124                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   125                           ;        software without specific prior written permission.
   126                           ; 
   127                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   128                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   129                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   130                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   131                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   132                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   133                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   134                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   135                           ; 
   136                           ; 
   137                           ; Code-generator required, PIC18F46K40 Definitions
   138                           ; 
   139                           ; SFR Addresses
   140  0000                     
   141                           	psect	idataBANK0
   142  002EC2                     __pidataBANK0:
   143                           	opt callstack 0
   144                           
   145                           ;initializer for stoa@F1139
   146  002EC2  28                 	db	40
   147  002EC3  6E                 	db	110
   148  002EC4  75                 	db	117
   149  002EC5  6C                 	db	108
   150  002EC6  6C                 	db	108
   151  002EC7  29                 	db	41
   152  002EC8  00                 	db	0
   153                           
   154                           ;initializer for _ByteLo
   155  002EC9  00FF               	dw	255
   156                           
   157                           ;initializer for _MBResCRC
   158  002ECB  FFFF               	dw	65535
   159                           
   160                           ;initializer for _ExpectedBytes
   161  002ECD  0008               	dw	8
   162                           
   163                           	psect	idataBANK1
   164  002C26                     __pidataBANK1:
   165                           	opt callstack 0
   166                           
   167                           ;initializer for _MBRespon
   168  002C26  FFFF               	dw	65535
   169  002C28  00                 	db	0
   170  002C29  00                 	db	0
   171  002C2A  00                 	db	0
   172  002C2B  00                 	db	0
   173  002C2C  00                 	db	0
   174  002C2D  00                 	db	0
   175  002C2E  00                 	db	0
   176  002C2F  00                 	db	0
   177  002C30  00                 	db	0
   178  002C31  00                 	db	0
   179  002C32  00                 	db	0
   180  002C33  00                 	db	0
   181  002C34  00                 	db	0
   182  002C35  00                 	db	0
   183  002C36  00                 	db	0
   184  002C37  00                 	db	0
   185  002C38  00                 	db	0
   186  002C39  00                 	db	0
   187  002C3A  00                 	db	0
   188  002C3B  00                 	db	0
   189  002C3C  00                 	db	0
   190  002C3D  00                 	db	0
   191  002C3E  00                 	db	0
   192  002C3F  00                 	db	0
   193  002C40  00                 	db	0
   194  002C41  00                 	db	0
   195  002C42  00                 	db	0
   196  002C43  00                 	db	0
   197  002C44  00                 	db	0
   198  002C45  00                 	db	0
   199  002C46  00                 	db	0
   200  002C47  00                 	db	0
   201  002C48  00                 	db	0
   202  002C49  00                 	db	0
   203  002C4A  00                 	db	0
   204  002C4B  00                 	db	0
   205  002C4C  00                 	db	0
   206  002C4D  00                 	db	0
   207  002C4E  00                 	db	0
   208  002C4F  00                 	db	0
   209  002C50  00                 	db	0
   210  002C51  00                 	db	0
   211  002C52  00                 	db	0
   212  002C53  00                 	db	0
   213  002C54  00                 	db	0
   214  002C55  00                 	db	0
   215  002C56  00                 	db	0
   216  002C57  00                 	db	0
   217  002C58  00                 	db	0
   218  002C59  00                 	db	0
   219  002C5A  00                 	db	0
   220  002C5B  00                 	db	0
   221  002C5C  00                 	db	0
   222  002C5D  00                 	db	0
   223  002C5E  00                 	db	0
   224  002C5F  00                 	db	0
   225  002C60  00                 	db	0
   226  002C61  00                 	db	0
   227  002C62  00                 	db	0
   228  002C63  00                 	db	0
   229  002C64  00                 	db	0
   230  002C65  00                 	db	0
   231                           
   232                           	psect	idataBANK2
   233  002436                     __pidataBANK2:
   234                           	opt callstack 0
   235                           
   236                           ;initializer for _MB400xx
   237  002436  0000               	dw	0
   238  002438  0007               	dw	7
   239  00243A  07FF               	dw	2047
   240  00243C  0004               	dw	4
   241  00243E  0005               	dw	5
   242  002440  0006               	dw	6
   243  002442  0007               	dw	7
   244  002444  0008               	dw	8
   245  002446  0009               	dw	9
   246  002448  000A               	dw	10
   247  00244A  000B               	dw	11
   248  00244C  000C               	dw	12
   249  00244E  000D               	dw	13
   250  002450  000E               	dw	14
   251  002452  000F               	dw	15
   252  002454  0010               	dw	16
   253  002456  0011               	dw	17
   254  002458  0012               	dw	18
   255  00245A  0013               	dw	19
   256  00245C  0014               	dw	20
   257  00245E  0015               	dw	21
   258  002460  0016               	dw	22
   259  002462  0017               	dw	23
   260  002464  0018               	dw	24
   261  002466  0019               	dw	25
   262  002468  0020               	dw	32
   263  00246A  0021               	dw	33
   264  00246C  0022               	dw	34
   265  00246E  0023               	dw	35
   266  002470  0024               	dw	36
   267  002472  0025               	dw	37
   268  002474  0026               	dw	38
   269                           
   270                           ;initializer for _MB300xx
   271  002476  0000               	dw	0
   272  002478  0007               	dw	7
   273  00247A  07FF               	dw	2047
   274  00247C  0004               	dw	4
   275  00247E  0005               	dw	5
   276  002480  0006               	dw	6
   277  002482  0007               	dw	7
   278  002484  0008               	dw	8
   279  002486  0009               	dw	9
   280  002488  000A               	dw	10
   281  00248A  000B               	dw	11
   282  00248C  000C               	dw	12
   283  00248E  000D               	dw	13
   284  002490  000E               	dw	14
   285  002492  000F               	dw	15
   286  002494  0010               	dw	16
   287  002496  0011               	dw	17
   288  002498  0012               	dw	18
   289  00249A  0013               	dw	19
   290  00249C  0014               	dw	20
   291  00249E  0015               	dw	21
   292  0024A0  0016               	dw	22
   293  0024A2  0017               	dw	23
   294  0024A4  0018               	dw	24
   295  0024A6  0019               	dw	25
   296  0024A8  0020               	dw	32
   297  0024AA  0021               	dw	33
   298  0024AC  0022               	dw	34
   299  0024AE  0023               	dw	35
   300  0024B0  0024               	dw	36
   301  0024B2  0025               	dw	37
   302  0024B4  0026               	dw	38
   303                           
   304                           	psect	nvBANK0
   305  0000DD                     __pnvBANK0:
   306                           	opt callstack 0
   307  0000DD                     _EUSART1_ErrorHandler:
   308                           	opt callstack 0
   309  0000DD                     	ds	2
   310  0000DF                     _EUSART1_OverrunErrorHandler:
   311                           	opt callstack 0
   312  0000DF                     	ds	2
   313  0000E1                     _EUSART1_FramingErrorHandler:
   314                           	opt callstack 0
   315  0000E1                     	ds	2
   316  0000E3                     _EUSART2_ErrorHandler:
   317                           	opt callstack 0
   318  0000E3                     	ds	2
   319  0000E5                     _EUSART2_OverrunErrorHandler:
   320                           	opt callstack 0
   321  0000E5                     	ds	2
   322  0000E7                     _EUSART2_FramingErrorHandler:
   323                           	opt callstack 0
   324  0000E7                     	ds	2
   325  0000E9                     _EUSART1_RxDefaultInterruptHandler:
   326                           	opt callstack 0
   327  0000E9                     	ds	2
   328  0000EB                     _EUSART1_TxDefaultInterruptHandler:
   329                           	opt callstack 0
   330  0000EB                     	ds	2
   331  0000ED                     _EUSART2_RxDefaultInterruptHandler:
   332                           	opt callstack 0
   333  0000ED                     	ds	2
   334  0000EF                     _EUSART2_TxDefaultInterruptHandler:
   335                           	opt callstack 0
   336  0000EF                     	ds	2
   337  0000F1                     _eusart1TxBufferRemaining:
   338                           	opt callstack 0
   339  0000F1                     	ds	1
   340  0000F2                     _eusart2TxBufferRemaining:
   341                           	opt callstack 0
   342  0000F2                     	ds	1
   343  0000                     _RC2REG	set	3737
   344  0000                     _RC2STAbits	set	3741
   345  0000                     _TX2REG	set	3738
   346  0000                     _TX2STAbits	set	3742
   347  0000                     _SP2BRGH	set	3740
   348  0000                     _SP2BRGL	set	3739
   349  0000                     _TX2STA	set	3742
   350  0000                     _RC2STA	set	3741
   351  0000                     _BAUD2CON	set	3743
   352  0000                     _PIR7bits	set	3793
   353  0000                     _PIR3bits	set	3789
   354  0000                     _PIE3bits	set	3781
   355  0000                     _PMD5	set	3814
   356  0000                     _PMD4	set	3813
   357  0000                     _PMD3	set	3812
   358  0000                     _PMD2	set	3811
   359  0000                     _PMD1	set	3810
   360  0000                     _PMD0	set	3809
   361  0000                     _OSCTUNE	set	3805
   362  0000                     _OSCFRQ	set	3806
   363  0000                     _OSCEN	set	3804
   364  0000                     _OSCCON3	set	3802
   365  0000                     _OSCCON1	set	3800
   366  0000                     _RX2PPS	set	3725
   367  0000                     _RC6PPS	set	3837
   368  0000                     _RB6PPS	set	3829
   369  0000                     _RX1PPS	set	3765
   370  0000                     _INLVLE	set	3882
   371  0000                     _INLVLD	set	3874
   372  0000                     _INLVLC	set	3869
   373  0000                     _INLVLB	set	3861
   374  0000                     _INLVLA	set	3853
   375  0000                     _SLRCONE	set	3883
   376  0000                     _SLRCOND	set	3875
   377  0000                     _SLRCONC	set	3870
   378  0000                     _SLRCONB	set	3862
   379  0000                     _SLRCONA	set	3854
   380  0000                     _ODCOND	set	3876
   381  0000                     _ODCONC	set	3871
   382  0000                     _ODCONB	set	3863
   383  0000                     _ODCONA	set	3855
   384  0000                     _ODCONE	set	3884
   385  0000                     _WPUC	set	3872
   386  0000                     _WPUA	set	3856
   387  0000                     _WPUB	set	3864
   388  0000                     _WPUE	set	3885
   389  0000                     _WPUD	set	3877
   390  0000                     _ANSELA	set	3857
   391  0000                     _ANSELE	set	3886
   392  0000                     _ANSELB	set	3865
   393  0000                     _ANSELC	set	3873
   394  0000                     _ANSELD	set	3878
   395  0000                     _LATDbits	set	3974
   396  0000                     _LATAbits	set	3971
   397  0000                     _RC1REG	set	3993
   398  0000                     _RC1STAbits	set	3997
   399  0000                     _TX1REG	set	3994
   400  0000                     _TX1STAbits	set	3998
   401  0000                     _SP1BRGH	set	3996
   402  0000                     _SP1BRGL	set	3995
   403  0000                     _TX1STA	set	3998
   404  0000                     _RC1STA	set	3997
   405  0000                     _BAUD1CON	set	3999
   406  0000                     _NVMDAT	set	3968
   407  0000                     _NVMADRL	set	3966
   408  0000                     _NVMADRH	set	3967
   409  0000                     _NVMCON2	set	3970
   410  0000                     _TABLAT	set	4085
   411  0000                     _TBLPTRL	set	4086
   412  0000                     _TBLPTRH	set	4087
   413  0000                     _TBLPTRU	set	4088
   414  0000                     _NVMCON1bits	set	3969
   415  0000                     _INTCONbits	set	4082
   416  0000                     _TRISD	set	3979
   417  0000                     _TRISC	set	3978
   418  0000                     _TRISB	set	3977
   419  0000                     _TRISA	set	3976
   420  0000                     _TRISE	set	3980
   421  0000                     _LATC	set	3973
   422  0000                     _LATB	set	3972
   423  0000                     _LATA	set	3971
   424  0000                     _LATD	set	3974
   425  0000                     _LATE	set	3975
   426                           
   427                           	psect	mediumconst
   428  00FDB4                     __pmediumconst:
   429                           	opt callstack 0
   430  00FDB4  00                 	db	0
   431  00FDB5                     STR_1:
   432                           
   433                           ; BSR set to: 0
   434  00FDB5  0D                 	db	13
   435  00FDB6  44                 	db	68	;'D'
   436  00FDB7  61                 	db	97	;'a'
   437  00FDB8  6E                 	db	110	;'n'
   438  00FDB9  20                 	db	32
   439  00FDBA  61                 	db	97	;'a'
   440  00FDBB  6E                 	db	110	;'n'
   441  00FDBC  64                 	db	100	;'d'
   442  00FDBD  20                 	db	32
   443  00FDBE  53                 	db	83	;'S'
   444  00FDBF  61                 	db	97	;'a'
   445  00FDC0  6D                 	db	109	;'m'
   446  00FDC1  27                 	db	39
   447  00FDC2  73                 	db	115	;'s'
   448  00FDC3  20                 	db	32
   449  00FDC4  4D                 	db	77	;'M'
   450  00FDC5  6F                 	db	111	;'o'
   451  00FDC6  64                 	db	100	;'d'
   452  00FDC7  62                 	db	98	;'b'
   453  00FDC8  75                 	db	117	;'u'
   454  00FDC9  73                 	db	115	;'s'
   455  00FDCA  20                 	db	32
   456  00FDCB  47                 	db	71	;'G'
   457  00FDCC  50                 	db	80	;'P'
   458  00FDCD  49                 	db	73	;'I'
   459  00FDCE  4F                 	db	79	;'O'
   460  00FDCF  20                 	db	32
   461  00FDD0  45                 	db	69	;'E'
   462  00FDD1  78                 	db	120	;'x'
   463  00FDD2  70                 	db	112	;'p'
   464  00FDD3  61                 	db	97	;'a'
   465  00FDD4  6E                 	db	110	;'n'
   466  00FDD5  73                 	db	115	;'s'
   467  00FDD6  69                 	db	105	;'i'
   468  00FDD7  6F                 	db	111	;'o'
   469  00FDD8  6E                 	db	110	;'n'
   470  00FDD9  20                 	db	32
   471  00FDDA  2D                 	db	45
   472  00FDDB  20                 	db	32
   473  00FDDC  41                 	db	65	;'A'
   474  00FDDD  50                 	db	80	;'P'
   475  00FDDE  30                 	db	48	;'0'
   476  00FDDF  30                 	db	48	;'0'
   477  00FDE0  30                 	db	48	;'0'
   478  00FDE1  78                 	db	120	;'x'
   479  00FDE2  78                 	db	120	;'x'
   480  00FDE3  78                 	db	120	;'x'
   481  00FDE4  78                 	db	120	;'x'
   482  00FDE5  78                 	db	120	;'x'
   483  00FDE6  20                 	db	32
   484  00FDE7  56                 	db	86	;'V'
   485  00FDE8  30                 	db	48	;'0'
   486  00FDE9  2E                 	db	46
   487  00FDEA  31                 	db	49	;'1'
   488  00FDEB  0D                 	db	13
   489  00FDEC  0A                 	db	10
   490  00FDED  00                 	db	0
   491  00FDEE                     STR_8:
   492                           
   493                           ; BSR set to: 0
   494  00FDEE  0D                 	db	13
   495  00FDEF  20                 	db	32
   496  00FDF0  20                 	db	32
   497  00FDF1  20                 	db	32
   498  00FDF2  30                 	db	48	;'0'
   499  00FDF3  78                 	db	120	;'x'
   500  00FDF4  31                 	db	49	;'1'
   501  00FDF5  30                 	db	48	;'0'
   502  00FDF6  20                 	db	32
   503  00FDF7  2D                 	db	45
   504  00FDF8  20                 	db	32
   505  00FDF9  57                 	db	87	;'W'
   506  00FDFA  72                 	db	114	;'r'
   507  00FDFB  69                 	db	105	;'i'
   508  00FDFC  74                 	db	116	;'t'
   509  00FDFD  65                 	db	101	;'e'
   510  00FDFE  20                 	db	32
   511  00FDFF  4D                 	db	77	;'M'
   512  00FE00  75                 	db	117	;'u'
   513  00FE01  6C                 	db	108	;'l'
   514  00FE02  74                 	db	116	;'t'
   515  00FE03  69                 	db	105	;'i'
   516  00FE04  70                 	db	112	;'p'
   517  00FE05  6C                 	db	108	;'l'
   518  00FE06  65                 	db	101	;'e'
   519  00FE07  20                 	db	32
   520  00FE08  52                 	db	82	;'R'
   521  00FE09  65                 	db	101	;'e'
   522  00FE0A  67                 	db	103	;'g'
   523  00FE0B  69                 	db	105	;'i'
   524  00FE0C  73                 	db	115	;'s'
   525  00FE0D  74                 	db	116	;'t'
   526  00FE0E  65                 	db	101	;'e'
   527  00FE0F  72                 	db	114	;'r'
   528  00FE10  73                 	db	115	;'s'
   529  00FE11  20                 	db	32
   530  00FE12  28                 	db	40
   531  00FE13  4D                 	db	77	;'M'
   532  00FE14  61                 	db	97	;'a'
   533  00FE15  78                 	db	120	;'x'
   534  00FE16  20                 	db	32
   535  00FE17  33                 	db	51	;'3'
   536  00FE18  32                 	db	50	;'2'
   537  00FE19  78                 	db	120	;'x'
   538  00FE1A  20                 	db	32
   539  00FE1B  31                 	db	49	;'1'
   540  00FE1C  36                 	db	54	;'6'
   541  00FE1D  62                 	db	98	;'b'
   542  00FE1E  69                 	db	105	;'i'
   543  00FE1F  74                 	db	116	;'t'
   544  00FE20  29                 	db	41
   545  00FE21  0D                 	db	13
   546  00FE22  0A                 	db	10
   547  00FE23  0A                 	db	10
   548  00FE24  00                 	db	0
   549  00FE25                     STR_7:
   550                           
   551                           ; BSR set to: 0
   552  00FE25  0D                 	db	13
   553  00FE26  20                 	db	32
   554  00FE27  20                 	db	32
   555  00FE28  20                 	db	32
   556  00FE29  30                 	db	48	;'0'
   557  00FE2A  78                 	db	120	;'x'
   558  00FE2B  30                 	db	48	;'0'
   559  00FE2C  33                 	db	51	;'3'
   560  00FE2D  20                 	db	32
   561  00FE2E  2D                 	db	45
   562  00FE2F  20                 	db	32
   563  00FE30  52                 	db	82	;'R'
   564  00FE31  65                 	db	101	;'e'
   565  00FE32  61                 	db	97	;'a'
   566  00FE33  64                 	db	100	;'d'
   567  00FE34  20                 	db	32
   568  00FE35  4D                 	db	77	;'M'
   569  00FE36  75                 	db	117	;'u'
   570  00FE37  6C                 	db	108	;'l'
   571  00FE38  74                 	db	116	;'t'
   572  00FE39  69                 	db	105	;'i'
   573  00FE3A  70                 	db	112	;'p'
   574  00FE3B  6C                 	db	108	;'l'
   575  00FE3C  65                 	db	101	;'e'
   576  00FE3D  20                 	db	32
   577  00FE3E  52                 	db	82	;'R'
   578  00FE3F  65                 	db	101	;'e'
   579  00FE40  67                 	db	103	;'g'
   580  00FE41  69                 	db	105	;'i'
   581  00FE42  73                 	db	115	;'s'
   582  00FE43  74                 	db	116	;'t'
   583  00FE44  65                 	db	101	;'e'
   584  00FE45  72                 	db	114	;'r'
   585  00FE46  73                 	db	115	;'s'
   586  00FE47  20                 	db	32
   587  00FE48  28                 	db	40
   588  00FE49  4D                 	db	77	;'M'
   589  00FE4A  61                 	db	97	;'a'
   590  00FE4B  78                 	db	120	;'x'
   591  00FE4C  20                 	db	32
   592  00FE4D  33                 	db	51	;'3'
   593  00FE4E  32                 	db	50	;'2'
   594  00FE4F  78                 	db	120	;'x'
   595  00FE50  20                 	db	32
   596  00FE51  31                 	db	49	;'1'
   597  00FE52  36                 	db	54	;'6'
   598  00FE53  62                 	db	98	;'b'
   599  00FE54  69                 	db	105	;'i'
   600  00FE55  74                 	db	116	;'t'
   601  00FE56  29                 	db	41
   602  00FE57  0D                 	db	13
   603  00FE58  0A                 	db	10
   604  00FE59  00                 	db	0
   605  00FE5A                     STR_3:
   606                           
   607                           ; BSR set to: 0
   608  00FE5A  0D                 	db	13
   609  00FE5B  43                 	db	67	;'C'
   610  00FE5C  6F                 	db	111	;'o'
   611  00FE5D  6D                 	db	109	;'m'
   612  00FE5E  70                 	db	112	;'p'
   613  00FE5F  69                 	db	105	;'i'
   614  00FE60  6C                 	db	108	;'l'
   615  00FE61  65                 	db	101	;'e'
   616  00FE62  64                 	db	100	;'d'
   617  00FE63  20                 	db	32
   618  00FE64  6F                 	db	111	;'o'
   619  00FE65  6E                 	db	110	;'n'
   620  00FE66  20                 	db	32
   621  00FE67  25                 	db	37
   622  00FE68  73                 	db	115	;'s'
   623  00FE69  20                 	db	32
   624  00FE6A  61                 	db	97	;'a'
   625  00FE6B  74                 	db	116	;'t'
   626  00FE6C  20                 	db	32
   627  00FE6D  25                 	db	37
   628  00FE6E  73                 	db	115	;'s'
   629  00FE6F  20                 	db	32
   630  00FE70  62                 	db	98	;'b'
   631  00FE71  79                 	db	121	;'y'
   632  00FE72  20                 	db	32
   633  00FE73  58                 	db	88	;'X'
   634  00FE74  43                 	db	67	;'C'
   635  00FE75  38                 	db	56	;'8'
   636  00FE76  20                 	db	32
   637  00FE77  76                 	db	118	;'v'
   638  00FE78  65                 	db	101	;'e'
   639  00FE79  72                 	db	114	;'r'
   640  00FE7A  73                 	db	115	;'s'
   641  00FE7B  69                 	db	105	;'i'
   642  00FE7C  6F                 	db	111	;'o'
   643  00FE7D  6E                 	db	110	;'n'
   644  00FE7E  20                 	db	32
   645  00FE7F  25                 	db	37
   646  00FE80  75                 	db	117	;'u'
   647  00FE81  0D                 	db	13
   648  00FE82  0A                 	db	10
   649  00FE83  0A                 	db	10
   650  00FE84  00                 	db	0
   651  00FE85                     STR_15:
   652                           
   653                           ; BSR set to: 0
   654  00FE85  63                 	db	99	;'c'
   655  00FE86  72                 	db	114	;'r'
   656  00FE87  63                 	db	99	;'c'
   657  00FE88  48                 	db	72	;'H'
   658  00FE89  69                 	db	105	;'i'
   659  00FE8A  67                 	db	103	;'g'
   660  00FE8B  68                 	db	104	;'h'
   661  00FE8C  3A                 	db	58	;':'
   662  00FE8D  20                 	db	32
   663  00FE8E  30                 	db	48	;'0'
   664  00FE8F  78                 	db	120	;'x'
   665  00FE90  25                 	db	37
   666  00FE91  30                 	db	48	;'0'
   667  00FE92  32                 	db	50	;'2'
   668  00FE93  78                 	db	120	;'x'
   669  00FE94  20                 	db	32
   670  00FE95  20                 	db	32
   671  00FE96  63                 	db	99	;'c'
   672  00FE97  72                 	db	114	;'r'
   673  00FE98  63                 	db	99	;'c'
   674  00FE99  4C                 	db	76	;'L'
   675  00FE9A  6F                 	db	111	;'o'
   676  00FE9B  77                 	db	119	;'w'
   677  00FE9C  3A                 	db	58	;':'
   678  00FE9D  20                 	db	32
   679  00FE9E  30                 	db	48	;'0'
   680  00FE9F  78                 	db	120	;'x'
   681  00FEA0  25                 	db	37
   682  00FEA1  30                 	db	48	;'0'
   683  00FEA2  32                 	db	50	;'2'
   684  00FEA3  78                 	db	120	;'x'
   685  00FEA4  20                 	db	32
   686  00FEA5  20                 	db	32
   687  00FEA6  0D                 	db	13
   688  00FEA7  0A                 	db	10
   689  00FEA8  00                 	db	0
   690  00FEA9                     STR_9:
   691                           
   692                           ; BSR set to: 0
   693  00FEA9  0D                 	db	13
   694  00FEAA  49                 	db	73	;'I'
   695  00FEAB  6E                 	db	110	;'n'
   696  00FEAC  69                 	db	105	;'i'
   697  00FEAD  74                 	db	116	;'t'
   698  00FEAE  61                 	db	97	;'a'
   699  00FEAF  6C                 	db	108	;'l'
   700  00FEB0  69                 	db	105	;'i'
   701  00FEB1  73                 	db	115	;'s'
   702  00FEB2  61                 	db	97	;'a'
   703  00FEB3  74                 	db	116	;'t'
   704  00FEB4  69                 	db	105	;'i'
   705  00FEB5  6F                 	db	111	;'o'
   706  00FEB6  6E                 	db	110	;'n'
   707  00FEB7  20                 	db	32
   708  00FEB8  43                 	db	67	;'C'
   709  00FEB9  6F                 	db	111	;'o'
   710  00FEBA  6D                 	db	109	;'m'
   711  00FEBB  70                 	db	112	;'p'
   712  00FEBC  6C                 	db	108	;'l'
   713  00FEBD  65                 	db	101	;'e'
   714  00FEBE  74                 	db	116	;'t'
   715  00FEBF  65                 	db	101	;'e'
   716  00FEC0  20                 	db	32
   717  00FEC1  2D                 	db	45
   718  00FEC2  20                 	db	32
   719  00FEC3  52                 	db	82	;'R'
   720  00FEC4  65                 	db	101	;'e'
   721  00FEC5  61                 	db	97	;'a'
   722  00FEC6  64                 	db	100	;'d'
   723  00FEC7  79                 	db	121	;'y'
   724  00FEC8  0D                 	db	13
   725  00FEC9  0A                 	db	10
   726  00FECA  0A                 	db	10
   727  00FECB  00                 	db	0
   728  00FECC                     STR_19:
   729                           
   730                           ; BSR set to: 0
   731  00FECC  4D                 	db	77	;'M'
   732  00FECD  6F                 	db	111	;'o'
   733  00FECE  64                 	db	100	;'d'
   734  00FECF  62                 	db	98	;'b'
   735  00FED0  75                 	db	117	;'u'
   736  00FED1  73                 	db	115	;'s'
   737  00FED2  20                 	db	32
   738  00FED3  44                 	db	68	;'D'
   739  00FED4  61                 	db	97	;'a'
   740  00FED5  74                 	db	116	;'t'
   741  00FED6  61                 	db	97	;'a'
   742  00FED7  20                 	db	32
   743  00FED8  43                 	db	67	;'C'
   744  00FED9  61                 	db	97	;'a'
   745  00FEDA  70                 	db	112	;'p'
   746  00FEDB  74                 	db	116	;'t'
   747  00FEDC  75                 	db	117	;'u'
   748  00FEDD  72                 	db	114	;'r'
   749  00FEDE  65                 	db	101	;'e'
   750  00FEDF  20                 	db	32
   751  00FEE0  43                 	db	67	;'C'
   752  00FEE1  6F                 	db	111	;'o'
   753  00FEE2  6D                 	db	109	;'m'
   754  00FEE3  70                 	db	112	;'p'
   755  00FEE4  6C                 	db	108	;'l'
   756  00FEE5  65                 	db	101	;'e'
   757  00FEE6  74                 	db	116	;'t'
   758  00FEE7  65                 	db	101	;'e'
   759  00FEE8  3A                 	db	58	;':'
   760  00FEE9  0D                 	db	13
   761  00FEEA  0A                 	db	10
   762  00FEEB  00                 	db	0
   763  00FEEC                     STR_6:
   764                           
   765                           ; BSR set to: 0
   766  00FEEC  0D                 	db	13
   767  00FEED  46                 	db	70	;'F'
   768  00FEEE  75                 	db	117	;'u'
   769  00FEEF  6E                 	db	110	;'n'
   770  00FEF0  63                 	db	99	;'c'
   771  00FEF1  74                 	db	116	;'t'
   772  00FEF2  69                 	db	105	;'i'
   773  00FEF3  6F                 	db	111	;'o'
   774  00FEF4  6E                 	db	110	;'n'
   775  00FEF5  20                 	db	32
   776  00FEF6  43                 	db	67	;'C'
   777  00FEF7  6F                 	db	111	;'o'
   778  00FEF8  64                 	db	100	;'d'
   779  00FEF9  65                 	db	101	;'e'
   780  00FEFA  73                 	db	115	;'s'
   781  00FEFB  20                 	db	32
   782  00FEFC  53                 	db	83	;'S'
   783  00FEFD  75                 	db	117	;'u'
   784  00FEFE  70                 	db	112	;'p'
   785  00FEFF  70                 	db	112	;'p'
   786  00FF00  6F                 	db	111	;'o'
   787  00FF01  72                 	db	114	;'r'
   788  00FF02  74                 	db	116	;'t'
   789  00FF03  65                 	db	101	;'e'
   790  00FF04  64                 	db	100	;'d'
   791  00FF05  3A                 	db	58	;':'
   792  00FF06  0D                 	db	13
   793  00FF07  0A                 	db	10
   794  00FF08  00                 	db	0
   795  00FF09                     STR_12:
   796                           
   797                           ; BSR set to: 0
   798  00FF09  55                 	db	85	;'U'
   799  00FF0A  6E                 	db	110	;'n'
   800  00FF0B  73                 	db	115	;'s'
   801  00FF0C  75                 	db	117	;'u'
   802  00FF0D  70                 	db	112	;'p'
   803  00FF0E  70                 	db	112	;'p'
   804  00FF0F  6F                 	db	111	;'o'
   805  00FF10  72                 	db	114	;'r'
   806  00FF11  74                 	db	116	;'t'
   807  00FF12  65                 	db	101	;'e'
   808  00FF13  64                 	db	100	;'d'
   809  00FF14  20                 	db	32
   810  00FF15  46                 	db	70	;'F'
   811  00FF16  75                 	db	117	;'u'
   812  00FF17  6E                 	db	110	;'n'
   813  00FF18  63                 	db	99	;'c'
   814  00FF19  74                 	db	116	;'t'
   815  00FF1A  69                 	db	105	;'i'
   816  00FF1B  6F                 	db	111	;'o'
   817  00FF1C  6E                 	db	110	;'n'
   818  00FF1D  20                 	db	32
   819  00FF1E  43                 	db	67	;'C'
   820  00FF1F  4F                 	db	79	;'O'
   821  00FF20  64                 	db	100	;'d'
   822  00FF21  65                 	db	101	;'e'
   823  00FF22  0D                 	db	13
   824  00FF23  0A                 	db	10
   825  00FF24  00                 	db	0
   826  00FF25                     STR_23:
   827                           
   828                           ; BSR set to: 0
   829  00FF25  43                 	db	67	;'C'
   830  00FF26  52                 	db	82	;'R'
   831  00FF27  43                 	db	67	;'C'
   832  00FF28  20                 	db	32
   833  00FF29  64                 	db	100	;'d'
   834  00FF2A  69                 	db	105	;'i'
   835  00FF2B  64                 	db	100	;'d'
   836  00FF2C  20                 	db	32
   837  00FF2D  4E                 	db	78	;'N'
   838  00FF2E  4F                 	db	79	;'O'
   839  00FF2F  54                 	db	84	;'T'
   840  00FF30  20                 	db	32
   841  00FF31  63                 	db	99	;'c'
   842  00FF32  68                 	db	104	;'h'
   843  00FF33  65                 	db	101	;'e'
   844  00FF34  63                 	db	99	;'c'
   845  00FF35  6B                 	db	107	;'k'
   846  00FF36  20                 	db	32
   847  00FF37  6F                 	db	111	;'o'
   848  00FF38  75                 	db	117	;'u'
   849  00FF39  74                 	db	116	;'t'
   850  00FF3A  2E                 	db	46
   851  00FF3B  20                 	db	32
   852  00FF3C  0D                 	db	13
   853  00FF3D  0A                 	db	10
   854  00FF3E  0A                 	db	10
   855  00FF3F  00                 	db	0
   856  00FF40                     STR_2:
   857                           
   858                           ; BSR set to: 0
   859  00FF40  0D                 	db	13
   860  00FF41  43                 	db	67	;'C'
   861  00FF42  61                 	db	97	;'a'
   862  00FF43  72                 	db	114	;'r'
   863  00FF44  64                 	db	100	;'d'
   864  00FF45  20                 	db	32
   865  00FF46  53                 	db	83	;'S'
   866  00FF47  65                 	db	101	;'e'
   867  00FF48  72                 	db	114	;'r'
   868  00FF49  20                 	db	32
   869  00FF4A  4E                 	db	78	;'N'
   870  00FF4B  6F                 	db	111	;'o'
   871  00FF4C  2E                 	db	46
   872  00FF4D  20                 	db	32
   873  00FF4E  78                 	db	120	;'x'
   874  00FF4F  78                 	db	120	;'x'
   875  00FF50  78                 	db	120	;'x'
   876  00FF51  78                 	db	120	;'x'
   877  00FF52  78                 	db	120	;'x'
   878  00FF53  78                 	db	120	;'x'
   879  00FF54  78                 	db	120	;'x'
   880  00FF55  20                 	db	32
   881  00FF56  0D                 	db	13
   882  00FF57  0A                 	db	10
   883  00FF58  00                 	db	0
   884  00FF59                     STR_14:
   885                           
   886                           ; BSR set to: 0
   887  00FF59  52                 	db	82	;'R'
   888  00FF5A  65                 	db	101	;'e'
   889  00FF5B  67                 	db	103	;'g'
   890  00FF5C  3A                 	db	58	;':'
   891  00FF5D  20                 	db	32
   892  00FF5E  25                 	db	37
   893  00FF5F  69                 	db	105	;'i'
   894  00FF60  20                 	db	32
   895  00FF61  44                 	db	68	;'D'
   896  00FF62  61                 	db	97	;'a'
   897  00FF63  74                 	db	116	;'t'
   898  00FF64  61                 	db	97	;'a'
   899  00FF65  3A                 	db	58	;':'
   900  00FF66  20                 	db	32
   901  00FF67  30                 	db	48	;'0'
   902  00FF68  78                 	db	120	;'x'
   903  00FF69  25                 	db	37
   904  00FF6A  30                 	db	48	;'0'
   905  00FF6B  34                 	db	52	;'4'
   906  00FF6C  78                 	db	120	;'x'
   907  00FF6D  20                 	db	32
   908  00FF6E  0D                 	db	13
   909  00FF6F  0A                 	db	10
   910  00FF70  00                 	db	0
   911  00FF71                     STR_17:
   912                           
   913                           ; BSR set to: 0
   914  00FF71  20                 	db	32
   915  00FF72  20                 	db	32
   916  00FF73  20                 	db	32
   917  00FF74  42                 	db	66	;'B'
   918  00FF75  79                 	db	121	;'y'
   919  00FF76  74                 	db	116	;'t'
   920  00FF77  65                 	db	101	;'e'
   921  00FF78  20                 	db	32
   922  00FF79  25                 	db	37
   923  00FF7A  69                 	db	105	;'i'
   924  00FF7B  20                 	db	32
   925  00FF7C  3A                 	db	58	;':'
   926  00FF7D  20                 	db	32
   927  00FF7E  30                 	db	48	;'0'
   928  00FF7F  78                 	db	120	;'x'
   929  00FF80  25                 	db	37
   930  00FF81  30                 	db	48	;'0'
   931  00FF82  32                 	db	50	;'2'
   932  00FF83  78                 	db	120	;'x'
   933  00FF84  20                 	db	32
   934  00FF85  0D                 	db	13
   935  00FF86  0A                 	db	10
   936  00FF87  00                 	db	0
   937  00FF88                     STR_22:
   938                           
   939                           ; BSR set to: 0
   940  00FF88  43                 	db	67	;'C'
   941  00FF89  52                 	db	82	;'R'
   942  00FF8A  43                 	db	67	;'C'
   943  00FF8B  20                 	db	32
   944  00FF8C  43                 	db	67	;'C'
   945  00FF8D  68                 	db	104	;'h'
   946  00FF8E  65                 	db	101	;'e'
   947  00FF8F  63                 	db	99	;'c'
   948  00FF90  6B                 	db	107	;'k'
   949  00FF91  65                 	db	101	;'e'
   950  00FF92  64                 	db	100	;'d'
   951  00FF93  20                 	db	32
   952  00FF94  4F                 	db	79	;'O'
   953  00FF95  75                 	db	117	;'u'
   954  00FF96  74                 	db	116	;'t'
   955  00FF97  2E                 	db	46
   956  00FF98  20                 	db	32
   957  00FF99  0D                 	db	13
   958  00FF9A  0A                 	db	10
   959  00FF9B  0A                 	db	10
   960  00FF9C  00                 	db	0
   961  00FF9D                     STR_11:
   962                           
   963                           ; BSR set to: 0
   964  00FF9D  46                 	db	70	;'F'
   965  00FF9E  75                 	db	117	;'u'
   966  00FF9F  6E                 	db	110	;'n'
   967  00FFA0  63                 	db	99	;'c'
   968  00FFA1  74                 	db	116	;'t'
   969  00FFA2  69                 	db	105	;'i'
   970  00FFA3  6F                 	db	111	;'o'
   971  00FFA4  6E                 	db	110	;'n'
   972  00FFA5  20                 	db	32
   973  00FFA6  43                 	db	67	;'C'
   974  00FFA7  4F                 	db	79	;'O'
   975  00FFA8  64                 	db	100	;'d'
   976  00FFA9  65                 	db	101	;'e'
   977  00FFAA  20                 	db	32
   978  00FFAB  30                 	db	48	;'0'
   979  00FFAC  78                 	db	120	;'x'
   980  00FFAD  31                 	db	49	;'1'
   981  00FFAE  30                 	db	48	;'0'
   982  00FFAF  0D                 	db	13
   983  00FFB0  0A                 	db	10
   984  00FFB1  00                 	db	0
   985  00FFB2                     STR_10:
   986                           
   987                           ; BSR set to: 0
   988  00FFB2  46                 	db	70	;'F'
   989  00FFB3  75                 	db	117	;'u'
   990  00FFB4  6E                 	db	110	;'n'
   991  00FFB5  63                 	db	99	;'c'
   992  00FFB6  74                 	db	116	;'t'
   993  00FFB7  69                 	db	105	;'i'
   994  00FFB8  6F                 	db	111	;'o'
   995  00FFB9  6E                 	db	110	;'n'
   996  00FFBA  20                 	db	32
   997  00FFBB  43                 	db	67	;'C'
   998  00FFBC  4F                 	db	79	;'O'
   999  00FFBD  64                 	db	100	;'d'
  1000  00FFBE  65                 	db	101	;'e'
  1001  00FFBF  20                 	db	32
  1002  00FFC0  30                 	db	48	;'0'
  1003  00FFC1  78                 	db	120	;'x'
  1004  00FFC2  30                 	db	48	;'0'
  1005  00FFC3  33                 	db	51	;'3'
  1006  00FFC4  0D                 	db	13
  1007  00FFC5  0A                 	db	10
  1008  00FFC6  00                 	db	0
  1009  00FFC7                     STR_16:
  1010                           
  1011                           ; BSR set to: 0
  1012  00FFC7  4D                 	db	77	;'M'
  1013  00FFC8  6F                 	db	111	;'o'
  1014  00FFC9  64                 	db	100	;'d'
  1015  00FFCA  62                 	db	98	;'b'
  1016  00FFCB  75                 	db	117	;'u'
  1017  00FFCC  73                 	db	115	;'s'
  1018  00FFCD  20                 	db	32
  1019  00FFCE  52                 	db	82	;'R'
  1020  00FFCF  65                 	db	101	;'e'
  1021  00FFD0  73                 	db	115	;'s'
  1022  00FFD1  70                 	db	112	;'p'
  1023  00FFD2  6F                 	db	111	;'o'
  1024  00FFD3  6E                 	db	110	;'n'
  1025  00FFD4  73                 	db	115	;'s'
  1026  00FFD5  65                 	db	101	;'e'
  1027  00FFD6  3A                 	db	58	;':'
  1028  00FFD7  0D                 	db	13
  1029  00FFD8  0A                 	db	10
  1030  00FFD9  00                 	db	0
  1031  00FFDA                     STR_13:
  1032                           
  1033                           ; BSR set to: 0
  1034  00FFDA  55                 	db	85	;'U'
  1035  00FFDB  70                 	db	112	;'p'
  1036  00FFDC  64                 	db	100	;'d'
  1037  00FFDD  61                 	db	97	;'a'
  1038  00FFDE  74                 	db	116	;'t'
  1039  00FFDF  65                 	db	101	;'e'
  1040  00FFE0  64                 	db	100	;'d'
  1041  00FFE1  4D                 	db	77	;'M'
  1042  00FFE2  42                 	db	66	;'B'
  1043  00FFE3  34                 	db	52	;'4'
  1044  00FFE4  30                 	db	48	;'0'
  1045  00FFE5  30                 	db	48	;'0'
  1046  00FFE6  20                 	db	32
  1047  00FFE7  0D                 	db	13
  1048  00FFE8  0A                 	db	10
  1049  00FFE9  00                 	db	0
  1050  00FFEA                     STR_4:
  1051                           
  1052                           ; BSR set to: 0
  1053  00FFEA  4D                 	db	77	;'M'
  1054  00FFEB  61                 	db	97	;'a'
  1055  00FFEC  72                 	db	114	;'r'
  1056  00FFED  20                 	db	32
  1057  00FFEE  31                 	db	49	;'1'
  1058  00FFEF  30                 	db	48	;'0'
  1059  00FFF0  20                 	db	32
  1060  00FFF1  32                 	db	50	;'2'
  1061  00FFF2  30                 	db	48	;'0'
  1062  00FFF3  32                 	db	50	;'2'
  1063  00FFF4  31                 	db	49	;'1'
  1064  00FFF5  00                 	db	0
  1065  00FFF6                     STR_5:
  1066                           
  1067                           ; BSR set to: 0
  1068  00FFF6  30                 	db	48	;'0'
  1069  00FFF7  30                 	db	48	;'0'
  1070  00FFF8  3A                 	db	58	;':'
  1071  00FFF9  32                 	db	50	;'2'
  1072  00FFFA  32                 	db	50	;'2'
  1073  00FFFB  3A                 	db	58	;':'
  1074  00FFFC  35                 	db	53	;'5'
  1075  00FFFD  35                 	db	53	;'5'
  1076  00FFFE  00                 	db	0
  1077  0000                     
  1078                           ; #config settings
  1079  00FFFF  00                 	db	0	; dummy byte at the end
  1080  0000                     
  1081                           	psect	cinit
  1082  0021D0                     __pcinit:
  1083                           	opt callstack 0
  1084  0021D0                     start_initialization:
  1085                           	opt callstack 0
  1086  0021D0                     __initialization:
  1087                           	opt callstack 0
  1088                           
  1089                           ; Initialize objects allocated to BANK2 (128 bytes)
  1090                           ; load TBLPTR registers with __pidataBANK2
  1091  0021D0  0E36               	movlw	low __pidataBANK2
  1092  0021D2  6EF6               	movwf	tblptrl,c
  1093  0021D4  0E24               	movlw	high __pidataBANK2
  1094  0021D6  6EF7               	movwf	tblptrh,c
  1095  0021D8  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1096  0021DA  6EF8               	movwf	tblptru,c
  1097  0021DC  EE02  F000         	lfsr	0,__pdataBANK2
  1098  0021E0  EE10 F080          	lfsr	1,128
  1099  0021E4                     copy_data0:
  1100  0021E4  0009               	tblrd		*+
  1101  0021E6  CFF5 FFEE          	movff	tablat,postinc0
  1102  0021EA  50E5               	movf	postdec1,w,c
  1103  0021EC  50E1               	movf	fsr1l,w,c
  1104  0021EE  E1FA               	bnz	copy_data0
  1105                           
  1106                           ; Initialize objects allocated to BANK1 (64 bytes)
  1107                           ; load TBLPTR registers with __pidataBANK1
  1108  0021F0  0E26               	movlw	low __pidataBANK1
  1109  0021F2  6EF6               	movwf	tblptrl,c
  1110  0021F4  0E2C               	movlw	high __pidataBANK1
  1111  0021F6  6EF7               	movwf	tblptrh,c
  1112  0021F8  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1113  0021FA  6EF8               	movwf	tblptru,c
  1114  0021FC  EE01  F084         	lfsr	0,__pdataBANK1
  1115  002200  EE10 F040          	lfsr	1,64
  1116  002204                     copy_data1:
  1117  002204  0009               	tblrd		*+
  1118  002206  CFF5 FFEE          	movff	tablat,postinc0
  1119  00220A  50E5               	movf	postdec1,w,c
  1120  00220C  50E1               	movf	fsr1l,w,c
  1121  00220E  E1FA               	bnz	copy_data1
  1122                           
  1123                           ; Initialize objects allocated to BANK0 (13 bytes)
  1124                           ; load TBLPTR registers with __pidataBANK0
  1125  002210  0EC2               	movlw	low __pidataBANK0
  1126  002212  6EF6               	movwf	tblptrl,c
  1127  002214  0E2E               	movlw	high __pidataBANK0
  1128  002216  6EF7               	movwf	tblptrh,c
  1129  002218  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1130  00221A  6EF8               	movwf	tblptru,c
  1131  00221C  EE00  F0F3         	lfsr	0,__pdataBANK0
  1132  002220  EE10 F00D          	lfsr	1,13
  1133  002224                     copy_data2:
  1134  002224  0009               	tblrd		*+
  1135  002226  CFF5 FFEE          	movff	tablat,postinc0
  1136  00222A  50E5               	movf	postdec1,w,c
  1137  00222C  50E1               	movf	fsr1l,w,c
  1138  00222E  E1FA               	bnz	copy_data2
  1139                           
  1140                           ; Clear objects allocated to BANK3 (200 bytes)
  1141  002230  EE03  F000         	lfsr	0,__pbssBANK3
  1142  002234  0EC8               	movlw	200
  1143  002236                     clear_0:
  1144  002236  6AEE               	clrf	postinc0,c
  1145  002238  06E8               	decf	wreg,f,c
  1146  00223A  E1FD               	bnz	clear_0
  1147                           
  1148                           ; Clear objects allocated to BANK2 (100 bytes)
  1149  00223C  EE02  F080         	lfsr	0,__pbssBANK2
  1150  002240  0E64               	movlw	100
  1151  002242                     clear_1:
  1152  002242  6AEE               	clrf	postinc0,c
  1153  002244  06E8               	decf	wreg,f,c
  1154  002246  E1FD               	bnz	clear_1
  1155                           
  1156                           ; Clear objects allocated to BANK1 (132 bytes)
  1157  002248  EE01  F000         	lfsr	0,__pbssBANK1
  1158  00224C  0E84               	movlw	132
  1159  00224E                     clear_2:
  1160  00224E  6AEE               	clrf	postinc0,c
  1161  002250  06E8               	decf	wreg,f,c
  1162  002252  E1FD               	bnz	clear_2
  1163                           
  1164                           ; Clear objects allocated to BANK0 (69 bytes)
  1165  002254  EE00  F060         	lfsr	0,__pbssBANK0
  1166  002258  0E45               	movlw	69
  1167  00225A                     clear_3:
  1168  00225A  6AEE               	clrf	postinc0,c
  1169  00225C  06E8               	decf	wreg,f,c
  1170  00225E  E1FD               	bnz	clear_3
  1171                           
  1172                           ; Clear objects allocated to COMRAM (4 bytes)
  1173  002260  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
  1174  002262  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
  1175  002264  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
  1176  002266  6A57               	clrf	__pbssCOMRAM& (0+255),c
  1177  002268                     end_of_initialization:
  1178                           	opt callstack 0
  1179  002268                     __end_of__initialization:
  1180                           	opt callstack 0
  1181  002268  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1182  00226A  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1183  00226C  0100               	movlb	0
  1184  00226E  EF65  F00F         	goto	_main	;jump to C main() function
  1185                           
  1186                           	psect	bssCOMRAM
  1187  000057                     __pbssCOMRAM:
  1188                           	opt callstack 0
  1189  000057                     _flags:
  1190                           	opt callstack 0
  1191  000057                     	ds	2
  1192  000059                     _eusart1RxHead:
  1193                           	opt callstack 0
  1194  000059                     	ds	1
  1195  00005A                     _eusart2RxHead:
  1196                           	opt callstack 0
  1197  00005A                     	ds	1
  1198                           
  1199                           	psect	bssBANK0
  1200  000060                     __pbssBANK0:
  1201                           	opt callstack 0
  1202  000060                     _eusart1TxBuffer:
  1203                           	opt callstack 0
  1204  000060                     	ds	16
  1205  000070                     _eusart2RxStatusBuffer:
  1206                           	opt callstack 0
  1207  000070                     	ds	8
  1208  000078                     _eusart2RxBuffer:
  1209                           	opt callstack 0
  1210  000078                     	ds	8
  1211  000080                     _eusart2TxBuffer:
  1212                           	opt callstack 0
  1213  000080                     	ds	8
  1214  000088                     _nout:
  1215                           	opt callstack 0
  1216  000088                     	ds	2
  1217  00008A                     _width:
  1218                           	opt callstack 0
  1219  00008A                     	ds	2
  1220  00008C                     _prec:
  1221                           	opt callstack 0
  1222  00008C                     	ds	2
  1223  00008E                     _ByteHi:
  1224                           	opt callstack 0
  1225  00008E                     	ds	2
  1226  000090                     _MBResCnt:
  1227                           	opt callstack 0
  1228  000090                     	ds	2
  1229  000092                     _ByteNum:
  1230                           	opt callstack 0
  1231  000092                     	ds	2
  1232  000094                     _i:
  1233                           	opt callstack 0
  1234  000094                     	ds	2
  1235  000096                     _ModDataCnt:
  1236                           	opt callstack 0
  1237  000096                     	ds	2
  1238  000098                     _rxStatus:
  1239                           	opt callstack 0
  1240  000098                     	ds	1
  1241  000099                     _RXStat:
  1242                           	opt callstack 0
  1243  000099                     	ds	1
  1244  00009A                     _Debug:
  1245                           	opt callstack 0
  1246  00009A                     	ds	1
  1247  00009B                     _eusart1RxLastError:
  1248                           	opt callstack 0
  1249  00009B                     	ds	1
  1250  00009C                     _eusart1RxCount:
  1251                           	opt callstack 0
  1252  00009C                     	ds	1
  1253  00009D                     _eusart1RxTail:
  1254                           	opt callstack 0
  1255  00009D                     	ds	1
  1256  00009E                     _eusart1TxTail:
  1257                           	opt callstack 0
  1258  00009E                     	ds	1
  1259  00009F                     _eusart1TxHead:
  1260                           	opt callstack 0
  1261  00009F                     	ds	1
  1262  0000A0                     _eusart2RxLastError:
  1263                           	opt callstack 0
  1264  0000A0                     	ds	1
  1265  0000A1                     _eusart2RxCount:
  1266                           	opt callstack 0
  1267  0000A1                     	ds	1
  1268  0000A2                     _eusart2RxTail:
  1269                           	opt callstack 0
  1270  0000A2                     	ds	1
  1271  0000A3                     _eusart2TxTail:
  1272                           	opt callstack 0
  1273  0000A3                     	ds	1
  1274  0000A4                     _eusart2TxHead:
  1275                           	opt callstack 0
  1276  0000A4                     	ds	1
  1277                           
  1278                           	psect	dataBANK0
  1279  0000F3                     __pdataBANK0:
  1280                           	opt callstack 0
  1281  0000F3                     stoa@F1139:
  1282                           	opt callstack 0
  1283  0000F3                     	ds	7
  1284  0000FA                     _ByteLo:
  1285                           	opt callstack 0
  1286  0000FA                     	ds	2
  1287  0000FC                     _MBResCRC:
  1288                           	opt callstack 0
  1289  0000FC                     	ds	2
  1290  0000FE                     _ExpectedBytes:
  1291                           	opt callstack 0
  1292  0000FE                     	ds	2
  1293                           
  1294                           	psect	bssBANK1
  1295  000100                     __pbssBANK1:
  1296                           	opt callstack 0
  1297  000100                     _ModbusData:
  1298                           	opt callstack 0
  1299  000100                     	ds	100
  1300  000164                     _dbuf:
  1301                           	opt callstack 0
  1302  000164                     	ds	32
  1303                           
  1304                           	psect	dataBANK1
  1305  000184                     __pdataBANK1:
  1306                           	opt callstack 0
  1307  000184                     _MBRespon:
  1308                           	opt callstack 0
  1309  000184                     	ds	64
  1310                           
  1311                           	psect	bssBANK2
  1312  000280                     __pbssBANK2:
  1313                           	opt callstack 0
  1314  000280                     _eusart1RxStatusBuffer:
  1315                           	opt callstack 0
  1316  000280                     	ds	100
  1317                           
  1318                           	psect	dataBANK2
  1319  000200                     __pdataBANK2:
  1320                           	opt callstack 0
  1321  000200                     _MB400xx:
  1322                           	opt callstack 0
  1323  000200                     	ds	64
  1324  000240                     _MB300xx:
  1325                           	opt callstack 0
  1326  000240                     	ds	64
  1327                           
  1328                           	psect	bssBANK3
  1329  000300                     __pbssBANK3:
  1330                           	opt callstack 0
  1331  000300                     _rxData:
  1332                           	opt callstack 0
  1333  000300                     	ds	100
  1334  000364                     _eusart1RxBuffer:
  1335                           	opt callstack 0
  1336  000364                     	ds	100
  1337                           
  1338                           	psect	cstackBANK1
  1339  0001C4                     __pcstackBANK1:
  1340                           	opt callstack 0
  1341  0001C4                     ??_main:
  1342                           
  1343                           ; 1 bytes @ 0x0
  1344  0001C4                     	ds	2
  1345                           
  1346                           	psect	cstackBANK0
  1347  0000A5                     __pcstackBANK0:
  1348                           	opt callstack 0
  1349  0000A5                     vfpfcnvrt@ll:
  1350                           	opt callstack 0
  1351                           
  1352                           ; 8 bytes @ 0x0
  1353  0000A5                     	ds	8
  1354  0000AD                     vfpfcnvrt@cp:
  1355                           	opt callstack 0
  1356                           
  1357                           ; 2 bytes @ 0x8
  1358  0000AD                     	ds	2
  1359  0000AF                     vfpfcnvrt@c:
  1360                           	opt callstack 0
  1361                           
  1362                           ; 1 bytes @ 0xA
  1363  0000AF                     	ds	1
  1364  0000B0                     vfpfcnvrt@done:
  1365                           	opt callstack 0
  1366                           
  1367                           ; 2 bytes @ 0xB
  1368  0000B0                     	ds	2
  1369  0000B2                     _vfpfcnvrt$1399:
  1370                           	opt callstack 0
  1371                           
  1372                           ; 2 bytes @ 0xD
  1373  0000B2                     	ds	2
  1374  0000B4                     vfpfcnvrt@llu:
  1375                           	opt callstack 0
  1376                           
  1377                           ; 8 bytes @ 0xF
  1378  0000B4                     	ds	8
  1379  0000BC                     ?_vfprintf:
  1380                           	opt callstack 0
  1381  0000BC                     vfprintf@fp:
  1382                           	opt callstack 0
  1383                           
  1384                           ; 2 bytes @ 0x17
  1385  0000BC                     	ds	2
  1386  0000BE                     vfprintf@fmt:
  1387                           	opt callstack 0
  1388                           
  1389                           ; 2 bytes @ 0x19
  1390  0000BE                     	ds	2
  1391  0000C0                     vfprintf@ap:
  1392                           	opt callstack 0
  1393                           
  1394                           ; 2 bytes @ 0x1B
  1395  0000C0                     	ds	2
  1396  0000C2                     ?_printf:
  1397                           	opt callstack 0
  1398  0000C2                     printf@fmt:
  1399                           	opt callstack 0
  1400                           
  1401                           ; 2 bytes @ 0x1D
  1402  0000C2                     	ds	10
  1403  0000CC                     printf@ap:
  1404                           	opt callstack 0
  1405                           
  1406                           ; 2 bytes @ 0x27
  1407  0000CC                     	ds	2
  1408  0000CE                     ??_checkCRC:
  1409  0000CE                     PrintModRespon@i:
  1410                           	opt callstack 0
  1411  0000CE                     PrintModbus@i:
  1412                           	opt callstack 0
  1413                           
  1414                           ; 2 bytes @ 0x29
  1415  0000CE                     	ds	2
  1416  0000D0                     ??_ModbusFC03:
  1417  0000D0                     ??_ModbusFC10:
  1418  0000D0                     ModbusError@ErrorCode:
  1419                           	opt callstack 0
  1420                           
  1421                           ; 2 bytes @ 0x2B
  1422  0000D0                     	ds	2
  1423  0000D2                     ??_ModbusError:
  1424                           
  1425                           ; 1 bytes @ 0x2D
  1426  0000D2                     	ds	1
  1427  0000D3                     checkCRC@crcHigh:
  1428                           	opt callstack 0
  1429                           
  1430                           ; 2 bytes @ 0x2E
  1431  0000D3                     	ds	1
  1432  0000D4                     ModbusFC03@i:
  1433                           	opt callstack 0
  1434  0000D4                     ModbusFC10@TempData:
  1435                           	opt callstack 0
  1436                           
  1437                           ; 2 bytes @ 0x2F
  1438  0000D4                     	ds	1
  1439  0000D5                     checkCRC@crcLow:
  1440                           	opt callstack 0
  1441                           
  1442                           ; 2 bytes @ 0x30
  1443  0000D5                     	ds	1
  1444  0000D6                     ModbusFC10@i:
  1445                           	opt callstack 0
  1446                           
  1447                           ; 2 bytes @ 0x31
  1448  0000D6                     	ds	1
  1449  0000D7                     checkCRC@j:
  1450                           	opt callstack 0
  1451                           
  1452                           ; 2 bytes @ 0x32
  1453  0000D7                     	ds	1
  1454  0000D8                     ModbusFC10@j:
  1455                           	opt callstack 0
  1456                           
  1457                           ; 2 bytes @ 0x33
  1458  0000D8                     	ds	1
  1459  0000D9                     checkCRC@crc:
  1460                           	opt callstack 0
  1461                           
  1462                           ; 2 bytes @ 0x34
  1463  0000D9                     	ds	2
  1464  0000DB                     checkCRC@i:
  1465                           	opt callstack 0
  1466                           
  1467                           ; 2 bytes @ 0x36
  1468  0000DB                     	ds	2
  1469                           
  1470                           	psect	cstackCOMRAM
  1471  000001                     __pcstackCOMRAM:
  1472                           	opt callstack 0
  1473  000001                     ??_INTERRUPT_InterruptManager:
  1474  000001                     
  1475                           ; 1 bytes @ 0x0
  1476  000001                     	ds	4
  1477  000005                     ??_ClearRxBuff:
  1478  000005                     ??_AddRxBuffToModBus:
  1479  000005                     ?_generateCRC:
  1480                           	opt callstack 0
  1481  000005                     ?_strlen:
  1482                           	opt callstack 0
  1483  000005                     ?_isupper:
  1484                           	opt callstack 0
  1485  000005                     ?_isalpha:
  1486                           	opt callstack 0
  1487  000005                     ?_isdigit:
  1488                           	opt callstack 0
  1489  000005                     ?_isspace:
  1490                           	opt callstack 0
  1491  000005                     ?_islower:
  1492                           	opt callstack 0
  1493  000005                     ?___wmul:
  1494                           	opt callstack 0
  1495  000005                     ?___aodiv:
  1496                           	opt callstack 0
  1497  000005                     ?___aomod:
  1498                           	opt callstack 0
  1499  000005                     ?___lodiv:
  1500                           	opt callstack 0
  1501  000005                     ?___lomod:
  1502                           	opt callstack 0
  1503  000005                     EUSART2_Write@txData:
  1504                           	opt callstack 0
  1505  000005                     EUSART1_Read@readValue:
  1506                           	opt callstack 0
  1507  000005                     EUSART1_Write@txData:
  1508                           	opt callstack 0
  1509  000005                     EUSART2_SetFramingErrorHandler@interruptHandler:
  1510                           	opt callstack 0
  1511  000005                     EUSART2_SetOverrunErrorHandler@interruptHandler:
  1512                           	opt callstack 0
  1513  000005                     EUSART2_SetErrorHandler@interruptHandler:
  1514                           	opt callstack 0
  1515  000005                     EUSART2_SetTxInterruptHandler@interruptHandler:
  1516                           	opt callstack 0
  1517  000005                     EUSART2_SetRxInterruptHandler@interruptHandler:
  1518                           	opt callstack 0
  1519  000005                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1520                           	opt callstack 0
  1521  000005                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1522                           	opt callstack 0
  1523  000005                     EUSART1_SetErrorHandler@interruptHandler:
  1524                           	opt callstack 0
  1525  000005                     EUSART1_SetTxInterruptHandler@interruptHandler:
  1526                           	opt callstack 0
  1527  000005                     EUSART1_SetRxInterruptHandler@interruptHandler:
  1528                           	opt callstack 0
  1529  000005                     ClearModbusData@i:
  1530                           	opt callstack 0
  1531  000005                     generateCRC@MessCnt:
  1532                           	opt callstack 0
  1533  000005                     ClearModbusRespon@i:
  1534                           	opt callstack 0
  1535  000005                     ___wmul@multiplier:
  1536                           	opt callstack 0
  1537  000005                     isalpha@c:
  1538                           	opt callstack 0
  1539  000005                     isdigit@c:
  1540                           	opt callstack 0
  1541  000005                     isspace@c:
  1542                           	opt callstack 0
  1543  000005                     isupper@c:
  1544                           	opt callstack 0
  1545  000005                     strlen@s:
  1546                           	opt callstack 0
  1547  000005                     islower@c:
  1548                           	opt callstack 0
  1549  000005                     ___aodiv@dividend:
  1550                           	opt callstack 0
  1551  000005                     ___aomod@dividend:
  1552                           	opt callstack 0
  1553  000005                     ___lodiv@dividend:
  1554                           	opt callstack 0
  1555  000005                     ___lomod@dividend:
  1556                           	opt callstack 0
  1557                           
  1558                           ; 8 bytes @ 0x4
  1559  000005                     	ds	1
  1560  000006                     putch@txData:
  1561                           	opt callstack 0
  1562  000006                     ClearRxBuff@i:
  1563                           	opt callstack 0
  1564  000006                     AddRxBuffToModBus@i:
  1565                           	opt callstack 0
  1566  000006                     UART1_Write_string@data:
  1567                           	opt callstack 0
  1568                           
  1569                           ; 2 bytes @ 0x5
  1570  000006                     	ds	1
  1571  000007                     ??_isupper:
  1572  000007                     ??_isalpha:
  1573  000007                     ??_isdigit:
  1574  000007                     ??_isspace:
  1575  000007                     ??_islower:
  1576  000007                     generateCRC@HiOrLo:
  1577                           	opt callstack 0
  1578  000007                     ___wmul@multiplicand:
  1579                           	opt callstack 0
  1580  000007                     fputc@c:
  1581                           	opt callstack 0
  1582  000007                     strlen@a:
  1583                           	opt callstack 0
  1584                           
  1585                           ; 2 bytes @ 0x6
  1586  000007                     	ds	1
  1587  000008                     ??_generateCRC:
  1588  000008                     UART1_Write_string@data_len:
  1589                           	opt callstack 0
  1590                           
  1591                           ; 2 bytes @ 0x7
  1592  000008                     	ds	1
  1593  000009                     ___wmul@product:
  1594                           	opt callstack 0
  1595  000009                     fputc@fp:
  1596                           	opt callstack 0
  1597                           
  1598                           ; 2 bytes @ 0x8
  1599  000009                     	ds	1
  1600  00000A                     ??_UART1_Write_string:
  1601  00000A                     generateCRC@crcHigh:
  1602                           	opt callstack 0
  1603                           
  1604                           ; 2 bytes @ 0x9
  1605  00000A                     	ds	1
  1606  00000B                     ??_fputc:
  1607  00000B                     ?_toupper:
  1608                           	opt callstack 0
  1609  00000B                     _isspace$1886:
  1610                           	opt callstack 0
  1611  00000B                     UART1_Write_string@i:
  1612                           	opt callstack 0
  1613  00000B                     toupper@c:
  1614                           	opt callstack 0
  1615                           
  1616                           ; 2 bytes @ 0xA
  1617  00000B                     	ds	1
  1618  00000C                     ?_atoi:
  1619                           	opt callstack 0
  1620  00000C                     generateCRC@crcLow:
  1621                           	opt callstack 0
  1622  00000C                     atoi@s:
  1623                           	opt callstack 0
  1624                           
  1625                           ; 2 bytes @ 0xB
  1626  00000C                     	ds	1
  1627  00000D                     ??_toupper:
  1628  00000D                     ___aodiv@divisor:
  1629                           	opt callstack 0
  1630  00000D                     ___aomod@divisor:
  1631                           	opt callstack 0
  1632  00000D                     ___lodiv@divisor:
  1633                           	opt callstack 0
  1634  00000D                     ___lomod@divisor:
  1635                           	opt callstack 0
  1636                           
  1637                           ; 8 bytes @ 0xC
  1638  00000D                     	ds	1
  1639  00000E                     ??_atoi:
  1640  00000E                     generateCRC@i:
  1641                           	opt callstack 0
  1642                           
  1643                           ; 2 bytes @ 0xD
  1644  00000E                     	ds	2
  1645  000010                     ?_stoa:
  1646                           	opt callstack 0
  1647  000010                     generateCRC@j:
  1648                           	opt callstack 0
  1649  000010                     stoa@fp:
  1650                           	opt callstack 0
  1651  000010                     fputs@s:
  1652                           	opt callstack 0
  1653                           
  1654                           ; 2 bytes @ 0xF
  1655  000010                     	ds	1
  1656  000011                     _toupper$1950:
  1657                           	opt callstack 0
  1658                           
  1659                           ; 2 bytes @ 0x10
  1660  000011                     	ds	1
  1661  000012                     generateCRC@crc:
  1662                           	opt callstack 0
  1663  000012                     stoa@s:
  1664                           	opt callstack 0
  1665  000012                     atoi@neg:
  1666                           	opt callstack 0
  1667  000012                     fputs@fp:
  1668                           	opt callstack 0
  1669                           
  1670                           ; 2 bytes @ 0x11
  1671  000012                     	ds	2
  1672  000014                     ??_stoa:
  1673  000014                     fputs@c:
  1674                           	opt callstack 0
  1675  000014                     _atoi$1859:
  1676                           	opt callstack 0
  1677                           
  1678                           ; 2 bytes @ 0x13
  1679  000014                     	ds	1
  1680  000015                     ___aodiv@counter:
  1681                           	opt callstack 0
  1682  000015                     ___aomod@counter:
  1683                           	opt callstack 0
  1684  000015                     ___lomod@counter:
  1685                           	opt callstack 0
  1686  000015                     fputs@i:
  1687                           	opt callstack 0
  1688  000015                     stoa@nuls:
  1689                           	opt callstack 0
  1690  000015                     ___lodiv@quotient:
  1691                           	opt callstack 0
  1692                           
  1693                           ; 8 bytes @ 0x14
  1694  000015                     	ds	1
  1695  000016                     ___aodiv@sign:
  1696                           	opt callstack 0
  1697  000016                     ___aomod@sign:
  1698                           	opt callstack 0
  1699  000016                     _atoi$1861:
  1700                           	opt callstack 0
  1701                           
  1702                           ; 2 bytes @ 0x15
  1703  000016                     	ds	1
  1704  000017                     ?_abs:
  1705                           	opt callstack 0
  1706  000017                     ?_pad:
  1707                           	opt callstack 0
  1708  000017                     pad@fp:
  1709                           	opt callstack 0
  1710  000017                     abs@a:
  1711                           	opt callstack 0
  1712  000017                     ___aodiv@quotient:
  1713                           	opt callstack 0
  1714                           
  1715                           ; 8 bytes @ 0x16
  1716  000017                     	ds	1
  1717  000018                     _atoi$1860:
  1718                           	opt callstack 0
  1719                           
  1720                           ; 1 bytes @ 0x17
  1721  000018                     	ds	1
  1722  000019                     ??_abs:
  1723  000019                     pad@buf:
  1724                           	opt callstack 0
  1725  000019                     atoi@n:
  1726                           	opt callstack 0
  1727                           
  1728                           ; 2 bytes @ 0x18
  1729  000019                     	ds	2
  1730  00001B                     pad@p:
  1731                           	opt callstack 0
  1732                           
  1733                           ; 2 bytes @ 0x1A
  1734  00001B                     	ds	1
  1735  00001C                     stoa@i:
  1736                           	opt callstack 0
  1737                           
  1738                           ; 2 bytes @ 0x1B
  1739  00001C                     	ds	1
  1740  00001D                     ??_pad:
  1741  00001D                     ___lodiv@counter:
  1742                           	opt callstack 0
  1743                           
  1744                           ; 1 bytes @ 0x1C
  1745  00001D                     	ds	1
  1746  00001E                     pad@i:
  1747                           	opt callstack 0
  1748  00001E                     stoa@w:
  1749                           	opt callstack 0
  1750                           
  1751                           ; 2 bytes @ 0x1D
  1752  00001E                     	ds	2
  1753  000020                     pad@w:
  1754                           	opt callstack 0
  1755  000020                     stoa@cp:
  1756                           	opt callstack 0
  1757                           
  1758                           ; 2 bytes @ 0x1F
  1759  000020                     	ds	2
  1760  000022                     ?_dtoa:
  1761                           	opt callstack 0
  1762  000022                     ?_utoa:
  1763                           	opt callstack 0
  1764  000022                     ?_xtoa:
  1765                           	opt callstack 0
  1766  000022                     dtoa@fp:
  1767                           	opt callstack 0
  1768  000022                     stoa@p:
  1769                           	opt callstack 0
  1770  000022                     utoa@fp:
  1771                           	opt callstack 0
  1772  000022                     xtoa@fp:
  1773                           	opt callstack 0
  1774                           
  1775                           ; 2 bytes @ 0x21
  1776  000022                     	ds	2
  1777  000024                     stoa@l:
  1778                           	opt callstack 0
  1779  000024                     dtoa@d:
  1780                           	opt callstack 0
  1781  000024                     utoa@d:
  1782                           	opt callstack 0
  1783  000024                     xtoa@d:
  1784                           	opt callstack 0
  1785                           
  1786                           ; 8 bytes @ 0x23
  1787  000024                     	ds	8
  1788  00002C                     ??_dtoa:
  1789  00002C                     ??_utoa:
  1790  00002C                     xtoa@x:
  1791                           	opt callstack 0
  1792                           
  1793                           ; 1 bytes @ 0x2B
  1794  00002C                     	ds	1
  1795  00002D                     ??_xtoa:
  1796                           
  1797                           ; 1 bytes @ 0x2C
  1798  00002D                     	ds	7
  1799  000034                     _dtoa$1355:
  1800                           	opt callstack 0
  1801  000034                     utoa@p:
  1802                           	opt callstack 0
  1803                           
  1804                           ; 2 bytes @ 0x33
  1805  000034                     	ds	1
  1806  000035                     _xtoa$1384:
  1807                           	opt callstack 0
  1808                           
  1809                           ; 2 bytes @ 0x34
  1810  000035                     	ds	1
  1811  000036                     dtoa@p:
  1812                           	opt callstack 0
  1813  000036                     utoa@w:
  1814                           	opt callstack 0
  1815                           
  1816                           ; 2 bytes @ 0x35
  1817  000036                     	ds	1
  1818  000037                     _xtoa$1385:
  1819                           	opt callstack 0
  1820                           
  1821                           ; 2 bytes @ 0x36
  1822  000037                     	ds	1
  1823  000038                     dtoa@w:
  1824                           	opt callstack 0
  1825  000038                     utoa@n:
  1826                           	opt callstack 0
  1827                           
  1828                           ; 8 bytes @ 0x37
  1829  000038                     	ds	1
  1830  000039                     xtoa@p:
  1831                           	opt callstack 0
  1832                           
  1833                           ; 2 bytes @ 0x38
  1834  000039                     	ds	1
  1835  00003A                     dtoa@s:
  1836                           	opt callstack 0
  1837                           
  1838                           ; 2 bytes @ 0x39
  1839  00003A                     	ds	1
  1840  00003B                     xtoa@w:
  1841                           	opt callstack 0
  1842                           
  1843                           ; 2 bytes @ 0x3A
  1844  00003B                     	ds	1
  1845  00003C                     dtoa@n:
  1846                           	opt callstack 0
  1847                           
  1848                           ; 8 bytes @ 0x3B
  1849  00003C                     	ds	1
  1850  00003D                     xtoa@n:
  1851                           	opt callstack 0
  1852                           
  1853                           ; 8 bytes @ 0x3C
  1854  00003D                     	ds	3
  1855  000040                     utoa@i:
  1856                           	opt callstack 0
  1857                           
  1858                           ; 2 bytes @ 0x3F
  1859  000040                     	ds	4
  1860  000044                     dtoa@i:
  1861                           	opt callstack 0
  1862                           
  1863                           ; 2 bytes @ 0x43
  1864  000044                     	ds	1
  1865  000045                     xtoa@i:
  1866                           	opt callstack 0
  1867                           
  1868                           ; 2 bytes @ 0x44
  1869  000045                     	ds	2
  1870  000047                     xtoa@c:
  1871                           	opt callstack 0
  1872                           
  1873                           ; 2 bytes @ 0x46
  1874  000047                     	ds	2
  1875  000049                     ?_vfpfcnvrt:
  1876                           	opt callstack 0
  1877  000049                     vfpfcnvrt@fp:
  1878                           	opt callstack 0
  1879                           
  1880                           ; 2 bytes @ 0x48
  1881  000049                     	ds	2
  1882  00004B                     vfpfcnvrt@fmt:
  1883                           	opt callstack 0
  1884                           
  1885                           ; 2 bytes @ 0x4A
  1886  00004B                     	ds	2
  1887  00004D                     vfpfcnvrt@ap:
  1888                           	opt callstack 0
  1889                           
  1890                           ; 2 bytes @ 0x4C
  1891  00004D                     	ds	2
  1892  00004F                     ??_vfpfcnvrt:
  1893                           
  1894                           ; 1 bytes @ 0x4E
  1895  00004F                     	ds	4
  1896  000053                     vfprintf@cfmt:
  1897                           	opt callstack 0
  1898                           
  1899                           ; 2 bytes @ 0x52
  1900  000053                     	ds	2
  1901  000055                     ??_ModbusRx:
  1902  000055                     ??_PrintModbus:
  1903  000055                     ??_PrintModRespon:
  1904  000055                     PrintMB400@i:
  1905                           	opt callstack 0
  1906                           
  1907                           ; 2 bytes @ 0x54
  1908  000055                     	ds	2
  1909                           
  1910 ;;
  1911 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1912 ;;
  1913 ;; *************** function _main *****************
  1914 ;; Defined at:
  1915 ;;		line 44 in file "main.c"
  1916 ;; Parameters:    Size  Location     Type
  1917 ;;		None
  1918 ;; Auto vars:     Size  Location     Type
  1919 ;;  RXStat          1    0        _Bool 
  1920 ;; Return value:  Size  Location     Type
  1921 ;;                  1    wreg      void 
  1922 ;; Registers used:
  1923 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1924 ;; Tracked objects:
  1925 ;;		On entry : 0/0
  1926 ;;		On exit  : 0/0
  1927 ;;		Unchanged: 0/0
  1928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1930 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1931 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1932 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1933 ;;Total ram usage:        3 bytes
  1934 ;; Hardware stack levels required when called:   15
  1935 ;; This function calls:
  1936 ;;		_ClearModbusData
  1937 ;;		_ClearModbusRespon
  1938 ;;		_ClearRxBuff
  1939 ;;		_InitialiseString
  1940 ;;		_ModbusError
  1941 ;;		_ModbusFC03
  1942 ;;		_ModbusFC10
  1943 ;;		_ModbusRx
  1944 ;;		_PrintMB400
  1945 ;;		_PrintModbus
  1946 ;;		_RXMode
  1947 ;;		_SYSTEM_Initialize
  1948 ;;		_printf
  1949 ;; This function is called by:
  1950 ;;		Startup code after reset
  1951 ;; This function uses a non-reentrant model
  1952 ;;
  1953                           
  1954                           	psect	text0
  1955  001ECA                     __ptext0:
  1956                           	opt callstack 0
  1957  001ECA                     _main:
  1958                           	opt callstack 16
  1959  001ECA                     
  1960                           ;main.c: 47:     SYSTEM_Initialize();
  1961  001ECA  EC26  F017         	call	_SYSTEM_Initialize	;wreg free
  1962  001ECE                     
  1963                           ;main.c: 54:     (INTCONbits.GIE = 1);
  1964  001ECE  8EF2               	bsf	242,7,c	;volatile
  1965  001ED0                     
  1966                           ;main.c: 60:     (INTCONbits.PEIE = 1);
  1967  001ED0  8CF2               	bsf	242,6,c	;volatile
  1968  001ED2  9883               	bcf	131,4,c	;volatile
  1969  001ED4  9A83               	bcf	131,5,c	;volatile
  1970  001ED6  9C83               	bcf	131,6,c	;volatile
  1971  001ED8  9E83               	bcf	131,7,c	;volatile
  1972  001EDA                     
  1973                           ;main.c: 70:     InitialiseString();
  1974  001EDA  EC16  F013         	call	_InitialiseString	;wreg free
  1975  001EDE                     
  1976                           ;main.c: 73:     RXMode();
  1977  001EDE  ECA3  F017         	call	_RXMode	;wreg free
  1978  001EE2                     
  1979                           ;main.c: 74:     ClearRxBuff();
  1980  001EE2  EC86  F015         	call	_ClearRxBuff	;wreg free
  1981  001EE6                     
  1982                           ;main.c: 75:     ClearModbusRespon();
  1983  001EE6  EC3A  F015         	call	_ClearModbusRespon	;wreg free
  1984  001EEA                     l5850:
  1985                           
  1986                           ;main.c: 81:     {;main.c: 82:         if(ModbusRx() == 1){
  1987  001EEA  ECF9  F00C         	call	_ModbusRx	;wreg free
  1988  001EEE  06E8               	decf	wreg,f,c
  1989  001EF0  A4D8               	btfss	status,2,c
  1990  001EF2  EF7D  F00F         	goto	u5601
  1991  001EF6  EF7F  F00F         	goto	u5600
  1992  001EFA                     u5601:
  1993  001EFA  EF75  F00F         	goto	l5850
  1994  001EFE                     u5600:
  1995  001EFE                     
  1996                           ;main.c: 84:             PrintModbus();
  1997  001EFE  EC54  F013         	call	_PrintModbus	;wreg free
  1998                           
  1999                           ;main.c: 86:             switch(ModbusData[1])
  2000  001F02  EFAF  F00F         	goto	l5874
  2001  001F06                     l5854:
  2002                           
  2003                           ; BSR set to: 1
  2004                           ;main.c: 89:                 {;main.c: 90:                     printf("Function COde 0x0
      +                          3\r\n");
  2005  001F06  0EB2               	movlw	low STR_10
  2006  001F08  0100               	movlb	0	; () banked
  2007  001F0A  6FC2               	movwf	printf@fmt& (0+255),b
  2008  001F0C  0EFF               	movlw	high STR_10
  2009  001F0E  6FC3               	movwf	(printf@fmt+1)& (0+255),b
  2010  001F10  ECF1  F016         	call	_printf	;wreg free
  2011                           
  2012                           ;main.c: 93:                     ModbusFC03();
  2013  001F14  EC53  F008         	call	_ModbusFC03	;wreg free
  2014  001F18                     l5856:
  2015                           
  2016                           ;main.c: 94:                     ClearModbusData();
  2017  001F18  EC60  F015         	call	_ClearModbusData	;wreg free
  2018  001F1C                     
  2019                           ;main.c: 95:                     ClearModbusRespon();
  2020  001F1C  EC3A  F015         	call	_ClearModbusRespon	;wreg free
  2021                           
  2022                           ;main.c: 96:                     break;
  2023  001F20  EF75  F00F         	goto	l5850
  2024  001F24                     l5860:
  2025                           
  2026                           ; BSR set to: 1
  2027                           ;main.c: 99:                 {;main.c: 100:                     printf("Function COde 0x
      +                          10\r\n");
  2028  001F24  0E9D               	movlw	low STR_11
  2029  001F26  0100               	movlb	0	; () banked
  2030  001F28  6FC2               	movwf	printf@fmt& (0+255),b
  2031  001F2A  0EFF               	movlw	high STR_11
  2032  001F2C  6FC3               	movwf	(printf@fmt+1)& (0+255),b
  2033  001F2E  ECF1  F016         	call	_printf	;wreg free
  2034                           
  2035                           ;main.c: 102:                     PrintMB400();
  2036  001F32  ECCA  F013         	call	_PrintMB400	;wreg free
  2037                           
  2038                           ;main.c: 103:                     ModbusFC10();
  2039  001F36  EC35  F006         	call	_ModbusFC10	;wreg free
  2040  001F3A  EF8C  F00F         	goto	l5856
  2041  001F3E                     l5866:
  2042                           
  2043                           ; BSR set to: 1
  2044                           ;main.c: 110:                 {;main.c: 111:                     printf("Unsupported Fun
      +                          ction COde\r\n");
  2045  001F3E  0E09               	movlw	low STR_12
  2046  001F40  0100               	movlb	0	; () banked
  2047  001F42  6FC2               	movwf	printf@fmt& (0+255),b
  2048  001F44  0EFF               	movlw	high STR_12
  2049  001F46  6FC3               	movwf	(printf@fmt+1)& (0+255),b
  2050  001F48  ECF1  F016         	call	_printf	;wreg free
  2051                           
  2052                           ;main.c: 113:                     ModbusError(0x01);
  2053  001F4C  0E00               	movlw	0
  2054  001F4E  0100               	movlb	0	; () banked
  2055  001F50  6FD1               	movwf	(ModbusError@ErrorCode+1)& (0+255),b
  2056  001F52  0E01               	movlw	1
  2057  001F54  6FD0               	movwf	ModbusError@ErrorCode& (0+255),b
  2058  001F56  EC8E  F00D         	call	_ModbusError	;wreg free
  2059  001F5A  EF8C  F00F         	goto	l5856
  2060  001F5E                     l5874:
  2061  001F5E  0101               	movlb	1	; () banked
  2062  001F60  5101               	movf	(_ModbusData+1)& (0+255),w,b
  2063  001F62  6FC4               	movwf	??_main& (0+255),b
  2064  001F64  6BC5               	clrf	(??_main+1)& (0+255),b
  2065                           
  2066                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2067                           ; Switch size 1, requested type "simple"
  2068                           ; Number of cases is 1, Range of values is 0 to 0
  2069                           ; switch strategies available:
  2070                           ; Name         Instructions Cycles
  2071                           ; simple_byte            4     3 (average)
  2072                           ;	Chosen strategy is simple_byte
  2073  001F66  51C5               	movf	(??_main+1)& (0+255),w,b
  2074  001F68  0A00               	xorlw	0	; case 0
  2075  001F6A  B4D8               	btfsc	status,2,c
  2076  001F6C  EFBA  F00F         	goto	l5982
  2077  001F70  EF9F  F00F         	goto	l5866
  2078  001F74                     l5982:
  2079                           
  2080                           ; BSR set to: 1
  2081                           ; Switch size 1, requested type "simple"
  2082                           ; Number of cases is 2, Range of values is 3 to 16
  2083                           ; switch strategies available:
  2084                           ; Name         Instructions Cycles
  2085                           ; simple_byte            7     4 (average)
  2086                           ;	Chosen strategy is simple_byte
  2087  001F74  51C4               	movf	??_main& (0+255),w,b
  2088  001F76  0A03               	xorlw	3	; case 3
  2089  001F78  B4D8               	btfsc	status,2,c
  2090  001F7A  EF83  F00F         	goto	l5854
  2091  001F7E  0A13               	xorlw	19	; case 16
  2092  001F80  B4D8               	btfsc	status,2,c
  2093  001F82  EF92  F00F         	goto	l5860
  2094  001F86  EF9F  F00F         	goto	l5866
  2095  001F8A  EF93  F000         	goto	start
  2096  001F8E                     __end_of_main:
  2097                           	opt callstack 0
  2098                           
  2099 ;; *************** function _SYSTEM_Initialize *****************
  2100 ;; Defined at:
  2101 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2102 ;; Parameters:    Size  Location     Type
  2103 ;;		None
  2104 ;; Auto vars:     Size  Location     Type
  2105 ;;		None
  2106 ;; Return value:  Size  Location     Type
  2107 ;;                  1    wreg      void 
  2108 ;; Registers used:
  2109 ;;		wreg, status,2, status,0, cstack
  2110 ;; Tracked objects:
  2111 ;;		On entry : 0/0
  2112 ;;		On exit  : 0/0
  2113 ;;		Unchanged: 0/0
  2114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2119 ;;Total ram usage:        0 bytes
  2120 ;; Hardware stack levels used:    1
  2121 ;; Hardware stack levels required when called:    6
  2122 ;; This function calls:
  2123 ;;		_EUSART1_Initialize
  2124 ;;		_EUSART2_Initialize
  2125 ;;		_INTERRUPT_Initialize
  2126 ;;		_OSCILLATOR_Initialize
  2127 ;;		_PIN_MANAGER_Initialize
  2128 ;;		_PMD_Initialize
  2129 ;; This function is called by:
  2130 ;;		_main
  2131 ;; This function uses a non-reentrant model
  2132 ;;
  2133                           
  2134                           	psect	text1
  2135  002E4C                     __ptext1:
  2136                           	opt callstack 0
  2137  002E4C                     _SYSTEM_Initialize:
  2138                           	opt callstack 24
  2139  002E4C                     
  2140                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  2141  002E4C  ECB2  F017         	call	_INTERRUPT_Initialize	;wreg free
  2142  002E50                     
  2143                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  2144  002E50  EC18  F017         	call	_PMD_Initialize	;wreg free
  2145  002E54                     
  2146                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  2147  002E54  ECD4  F011         	call	_PIN_MANAGER_Initialize	;wreg free
  2148  002E58                     
  2149                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  2150  002E58  EC33  F017         	call	_OSCILLATOR_Initialize	;wreg free
  2151  002E5C                     
  2152                           ;mcc_generated_files/mcc.c: 56:     EUSART1_Initialize();
  2153  002E5C  EC9A  F012         	call	_EUSART1_Initialize	;wreg free
  2154  002E60                     
  2155                           ;mcc_generated_files/mcc.c: 57:     EUSART2_Initialize();
  2156  002E60  EC5B  F012         	call	_EUSART2_Initialize	;wreg free
  2157  002E64  0012               	return		;funcret
  2158  002E66                     __end_of_SYSTEM_Initialize:
  2159                           	opt callstack 0
  2160                           
  2161 ;; *************** function _PMD_Initialize *****************
  2162 ;; Defined at:
  2163 ;;		line 74 in file "mcc_generated_files/mcc.c"
  2164 ;; Parameters:    Size  Location     Type
  2165 ;;		None
  2166 ;; Auto vars:     Size  Location     Type
  2167 ;;		None
  2168 ;; Return value:  Size  Location     Type
  2169 ;;                  1    wreg      void 
  2170 ;; Registers used:
  2171 ;;		wreg, status,2
  2172 ;; Tracked objects:
  2173 ;;		On entry : 0/0
  2174 ;;		On exit  : 0/0
  2175 ;;		Unchanged: 0/0
  2176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2181 ;;Total ram usage:        0 bytes
  2182 ;; Hardware stack levels used:    1
  2183 ;; Hardware stack levels required when called:    4
  2184 ;; This function calls:
  2185 ;;		Nothing
  2186 ;; This function is called by:
  2187 ;;		_SYSTEM_Initialize
  2188 ;; This function uses a non-reentrant model
  2189 ;;
  2190                           
  2191                           	psect	text2
  2192  002E30                     __ptext2:
  2193                           	opt callstack 0
  2194  002E30                     _PMD_Initialize:
  2195                           	opt callstack 25
  2196  002E30                     
  2197                           ;mcc_generated_files/mcc.c: 77:     PMD0 = 0x00;
  2198  002E30  0E00               	movlw	0
  2199  002E32  010E               	movlb	14	; () banked
  2200  002E34  6FE1               	movwf	225,b	;volatile
  2201                           
  2202                           ;mcc_generated_files/mcc.c: 79:     PMD1 = 0x00;
  2203  002E36  0E00               	movlw	0
  2204  002E38  6FE2               	movwf	226,b	;volatile
  2205                           
  2206                           ;mcc_generated_files/mcc.c: 81:     PMD2 = 0x00;
  2207  002E3A  0E00               	movlw	0
  2208  002E3C  6FE3               	movwf	227,b	;volatile
  2209                           
  2210                           ;mcc_generated_files/mcc.c: 83:     PMD3 = 0x00;
  2211  002E3E  0E00               	movlw	0
  2212  002E40  6FE4               	movwf	228,b	;volatile
  2213                           
  2214                           ;mcc_generated_files/mcc.c: 85:     PMD4 = 0x00;
  2215  002E42  0E00               	movlw	0
  2216  002E44  6FE5               	movwf	229,b	;volatile
  2217                           
  2218                           ;mcc_generated_files/mcc.c: 87:     PMD5 = 0x00;
  2219  002E46  0E00               	movlw	0
  2220  002E48  6FE6               	movwf	230,b	;volatile
  2221  002E4A                     
  2222                           ; BSR set to: 14
  2223  002E4A  0012               	return		;funcret
  2224  002E4C                     __end_of_PMD_Initialize:
  2225                           	opt callstack 0
  2226                           
  2227 ;; *************** function _PIN_MANAGER_Initialize *****************
  2228 ;; Defined at:
  2229 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2230 ;; Parameters:    Size  Location     Type
  2231 ;;		None
  2232 ;; Auto vars:     Size  Location     Type
  2233 ;;		None
  2234 ;; Return value:  Size  Location     Type
  2235 ;;                  1    wreg      void 
  2236 ;; Registers used:
  2237 ;;		wreg, status,2
  2238 ;; Tracked objects:
  2239 ;;		On entry : 0/0
  2240 ;;		On exit  : 0/0
  2241 ;;		Unchanged: 0/0
  2242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2247 ;;Total ram usage:        0 bytes
  2248 ;; Hardware stack levels used:    1
  2249 ;; Hardware stack levels required when called:    4
  2250 ;; This function calls:
  2251 ;;		Nothing
  2252 ;; This function is called by:
  2253 ;;		_SYSTEM_Initialize
  2254 ;; This function uses a non-reentrant model
  2255 ;;
  2256                           
  2257                           	psect	text3
  2258  0023A8                     __ptext3:
  2259                           	opt callstack 0
  2260  0023A8                     _PIN_MANAGER_Initialize:
  2261                           	opt callstack 25
  2262  0023A8                     
  2263                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  2264  0023A8  0E00               	movlw	0
  2265  0023AA  6E87               	movwf	135,c	;volatile
  2266                           
  2267                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  2268  0023AC  0E00               	movlw	0
  2269  0023AE  6E86               	movwf	134,c	;volatile
  2270                           
  2271                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  2272  0023B0  0E00               	movlw	0
  2273  0023B2  6E83               	movwf	131,c	;volatile
  2274                           
  2275                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  2276  0023B4  0E00               	movlw	0
  2277  0023B6  6E84               	movwf	132,c	;volatile
  2278                           
  2279                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  2280  0023B8  0E00               	movlw	0
  2281  0023BA  6E85               	movwf	133,c	;volatile
  2282                           
  2283                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  2284  0023BC  0E07               	movlw	7
  2285  0023BE  6E8C               	movwf	140,c	;volatile
  2286                           
  2287                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x07;
  2288  0023C0  0E07               	movlw	7
  2289  0023C2  6E88               	movwf	136,c	;volatile
  2290                           
  2291                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xBF;
  2292  0023C4  0EBF               	movlw	191
  2293  0023C6  6E89               	movwf	137,c	;volatile
  2294                           
  2295                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  2296  0023C8  0EBF               	movlw	191
  2297  0023CA  6E8A               	movwf	138,c	;volatile
  2298                           
  2299                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFE;
  2300  0023CC  0EFE               	movlw	254
  2301  0023CE  6E8B               	movwf	139,c	;volatile
  2302  0023D0                     
  2303                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
  2304  0023D0  010F               	movlb	15	; () banked
  2305  0023D2  6926               	setf	38,b	;volatile
  2306                           
  2307                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x3B;
  2308  0023D4  0E3B               	movlw	59
  2309  0023D6  6F21               	movwf	33,b	;volatile
  2310                           
  2311                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x37;
  2312  0023D8  0E37               	movlw	55
  2313  0023DA  6F19               	movwf	25,b	;volatile
  2314                           
  2315                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  2316  0023DC  0E07               	movlw	7
  2317  0023DE  6F2E               	movwf	46,b	;volatile
  2318  0023E0                     
  2319                           ; BSR set to: 15
  2320                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
  2321  0023E0  6911               	setf	17,b	;volatile
  2322                           
  2323                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  2324  0023E2  0E00               	movlw	0
  2325  0023E4  6F25               	movwf	37,b	;volatile
  2326                           
  2327                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  2328  0023E6  0E00               	movlw	0
  2329  0023E8  6F2D               	movwf	45,b	;volatile
  2330                           
  2331                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  2332  0023EA  0E00               	movlw	0
  2333  0023EC  6F18               	movwf	24,b	;volatile
  2334                           
  2335                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  2336  0023EE  0E00               	movlw	0
  2337  0023F0  6F10               	movwf	16,b	;volatile
  2338                           
  2339                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  2340  0023F2  0E00               	movlw	0
  2341  0023F4  6F20               	movwf	32,b	;volatile
  2342                           
  2343                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
  2344  0023F6  0E00               	movlw	0
  2345  0023F8  6F2C               	movwf	44,b	;volatile
  2346                           
  2347                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
  2348  0023FA  0E00               	movlw	0
  2349  0023FC  6F0F               	movwf	15,b	;volatile
  2350                           
  2351                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
  2352  0023FE  0E00               	movlw	0
  2353  002400  6F17               	movwf	23,b	;volatile
  2354                           
  2355                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
  2356  002402  0E00               	movlw	0
  2357  002404  6F1F               	movwf	31,b	;volatile
  2358                           
  2359                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
  2360  002406  0E00               	movlw	0
  2361  002408  6F24               	movwf	36,b	;volatile
  2362  00240A                     
  2363                           ; BSR set to: 15
  2364                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
  2365  00240A  690E               	setf	14,b	;volatile
  2366  00240C                     
  2367                           ; BSR set to: 15
  2368                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
  2369  00240C  6916               	setf	22,b	;volatile
  2370  00240E                     
  2371                           ; BSR set to: 15
  2372                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
  2373  00240E  691E               	setf	30,b	;volatile
  2374  002410                     
  2375                           ; BSR set to: 15
  2376                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
  2377  002410  6923               	setf	35,b	;volatile
  2378                           
  2379                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
  2380  002412  0E07               	movlw	7
  2381  002414  6F2B               	movwf	43,b	;volatile
  2382  002416                     
  2383                           ; BSR set to: 15
  2384                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
  2385  002416  690D               	setf	13,b	;volatile
  2386  002418                     
  2387                           ; BSR set to: 15
  2388                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
  2389  002418  6915               	setf	21,b	;volatile
  2390  00241A                     
  2391                           ; BSR set to: 15
  2392                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
  2393  00241A  691D               	setf	29,b	;volatile
  2394  00241C                     
  2395                           ; BSR set to: 15
  2396                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
  2397  00241C  6922               	setf	34,b	;volatile
  2398                           
  2399                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x0F;
  2400  00241E  0E0F               	movlw	15
  2401  002420  6F2A               	movwf	42,b	;volatile
  2402                           
  2403                           ;mcc_generated_files/pin_manager.c: 127:     RX1PPS = 0x17;
  2404  002422  0E17               	movlw	23
  2405  002424  010E               	movlb	14	; () banked
  2406  002426  6FB5               	movwf	181,b	;volatile
  2407                           
  2408                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x0B;
  2409  002428  0E0B               	movlw	11
  2410  00242A  6FF5               	movwf	245,b	;volatile
  2411                           
  2412                           ;mcc_generated_files/pin_manager.c: 129:     RC6PPS = 0x09;
  2413  00242C  0E09               	movlw	9
  2414  00242E  6FFD               	movwf	253,b	;volatile
  2415                           
  2416                           ;mcc_generated_files/pin_manager.c: 130:     RX2PPS = 0x0F;
  2417  002430  0E0F               	movlw	15
  2418  002432  6F8D               	movwf	141,b	;volatile
  2419  002434                     
  2420                           ; BSR set to: 14
  2421  002434  0012               	return		;funcret
  2422  002436                     __end_of_PIN_MANAGER_Initialize:
  2423                           	opt callstack 0
  2424                           
  2425 ;; *************** function _OSCILLATOR_Initialize *****************
  2426 ;; Defined at:
  2427 ;;		line 60 in file "mcc_generated_files/mcc.c"
  2428 ;; Parameters:    Size  Location     Type
  2429 ;;		None
  2430 ;; Auto vars:     Size  Location     Type
  2431 ;;		None
  2432 ;; Return value:  Size  Location     Type
  2433 ;;                  1    wreg      void 
  2434 ;; Registers used:
  2435 ;;		wreg, status,2
  2436 ;; Tracked objects:
  2437 ;;		On entry : 0/0
  2438 ;;		On exit  : 0/0
  2439 ;;		Unchanged: 0/0
  2440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2445 ;;Total ram usage:        0 bytes
  2446 ;; Hardware stack levels used:    1
  2447 ;; Hardware stack levels required when called:    4
  2448 ;; This function calls:
  2449 ;;		Nothing
  2450 ;; This function is called by:
  2451 ;;		_SYSTEM_Initialize
  2452 ;; This function uses a non-reentrant model
  2453 ;;
  2454                           
  2455                           	psect	text4
  2456  002E66                     __ptext4:
  2457                           	opt callstack 0
  2458  002E66                     _OSCILLATOR_Initialize:
  2459                           	opt callstack 25
  2460  002E66                     
  2461                           ;mcc_generated_files/mcc.c: 63:     OSCCON1 = 0x60;
  2462  002E66  0E60               	movlw	96
  2463  002E68  010E               	movlb	14	; () banked
  2464  002E6A  6FD8               	movwf	216,b	;volatile
  2465                           
  2466                           ;mcc_generated_files/mcc.c: 65:     OSCCON3 = 0x00;
  2467  002E6C  0E00               	movlw	0
  2468  002E6E  6FDA               	movwf	218,b	;volatile
  2469                           
  2470                           ;mcc_generated_files/mcc.c: 67:     OSCEN = 0x00;
  2471  002E70  0E00               	movlw	0
  2472  002E72  6FDC               	movwf	220,b	;volatile
  2473                           
  2474                           ;mcc_generated_files/mcc.c: 69:     OSCFRQ = 0x06;
  2475  002E74  0E06               	movlw	6
  2476  002E76  6FDE               	movwf	222,b	;volatile
  2477                           
  2478                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  2479  002E78  0E00               	movlw	0
  2480  002E7A  6FDD               	movwf	221,b	;volatile
  2481  002E7C                     
  2482                           ; BSR set to: 14
  2483  002E7C  0012               	return		;funcret
  2484  002E7E                     __end_of_OSCILLATOR_Initialize:
  2485                           	opt callstack 0
  2486                           
  2487 ;; *************** function _INTERRUPT_Initialize *****************
  2488 ;; Defined at:
  2489 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2490 ;; Parameters:    Size  Location     Type
  2491 ;;		None
  2492 ;; Auto vars:     Size  Location     Type
  2493 ;;		None
  2494 ;; Return value:  Size  Location     Type
  2495 ;;                  1    wreg      void 
  2496 ;; Registers used:
  2497 ;;		None
  2498 ;; Tracked objects:
  2499 ;;		On entry : 0/0
  2500 ;;		On exit  : 0/0
  2501 ;;		Unchanged: 0/0
  2502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2507 ;;Total ram usage:        0 bytes
  2508 ;; Hardware stack levels used:    1
  2509 ;; Hardware stack levels required when called:    4
  2510 ;; This function calls:
  2511 ;;		Nothing
  2512 ;; This function is called by:
  2513 ;;		_SYSTEM_Initialize
  2514 ;; This function uses a non-reentrant model
  2515 ;;
  2516                           
  2517                           	psect	text5
  2518  002F64                     __ptext5:
  2519                           	opt callstack 0
  2520  002F64                     _INTERRUPT_Initialize:
  2521                           	opt callstack 25
  2522  002F64                     
  2523                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
  2524  002F64  9AF2               	bcf	242,5,c	;volatile
  2525  002F66  0012               	return		;funcret
  2526  002F68                     __end_of_INTERRUPT_Initialize:
  2527                           	opt callstack 0
  2528                           
  2529 ;; *************** function _EUSART2_Initialize *****************
  2530 ;; Defined at:
  2531 ;;		line 88 in file "mcc_generated_files/eusart2.c"
  2532 ;; Parameters:    Size  Location     Type
  2533 ;;		None
  2534 ;; Auto vars:     Size  Location     Type
  2535 ;;		None
  2536 ;; Return value:  Size  Location     Type
  2537 ;;                  1    wreg      void 
  2538 ;; Registers used:
  2539 ;;		wreg, status,2, status,0, cstack
  2540 ;; Tracked objects:
  2541 ;;		On entry : 0/0
  2542 ;;		On exit  : 0/0
  2543 ;;		Unchanged: 0/0
  2544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2549 ;;Total ram usage:        0 bytes
  2550 ;; Hardware stack levels used:    1
  2551 ;; Hardware stack levels required when called:    5
  2552 ;; This function calls:
  2553 ;;		_EUSART2_SetErrorHandler
  2554 ;;		_EUSART2_SetFramingErrorHandler
  2555 ;;		_EUSART2_SetOverrunErrorHandler
  2556 ;;		_EUSART2_SetRxInterruptHandler
  2557 ;;		_EUSART2_SetTxInterruptHandler
  2558 ;; This function is called by:
  2559 ;;		_SYSTEM_Initialize
  2560 ;; This function uses a non-reentrant model
  2561 ;;
  2562                           
  2563                           	psect	text6
  2564  0024B6                     __ptext6:
  2565                           	opt callstack 0
  2566  0024B6                     _EUSART2_Initialize:
  2567                           	opt callstack 24
  2568  0024B6                     
  2569                           ;mcc_generated_files/eusart2.c: 91:     PIE3bits.RC2IE = 0;
  2570  0024B6  010E               	movlb	14	; () banked
  2571  0024B8  9FC5               	bcf	197,7,b	;volatile
  2572  0024BA                     
  2573                           ; BSR set to: 14
  2574                           ;mcc_generated_files/eusart2.c: 92:     EUSART2_SetRxInterruptHandler(EUSART2_Receive_IS
      +                          R);
  2575  0024BA  0E50               	movlw	low _EUSART2_Receive_ISR
  2576  0024BC  6E05               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler^0,c
  2577  0024BE  0E20               	movlw	high _EUSART2_Receive_ISR
  2578  0024C0  6E06               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)^0,c
  2579  0024C2  EC6D  F017         	call	_EUSART2_SetRxInterruptHandler	;wreg free
  2580  0024C6                     
  2581                           ;mcc_generated_files/eusart2.c: 93:     PIE3bits.TX2IE = 0;
  2582  0024C6  010E               	movlb	14	; () banked
  2583  0024C8  9DC5               	bcf	197,6,b	;volatile
  2584                           
  2585                           ;mcc_generated_files/eusart2.c: 94:     EUSART2_SetTxInterruptHandler(EUSART2_Transmit_I
      +                          SR);
  2586  0024CA  0E56               	movlw	low _EUSART2_Transmit_ISR
  2587  0024CC  6E05               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler^0,c
  2588  0024CE  0E2B               	movlw	high _EUSART2_Transmit_ISR
  2589  0024D0  6E06               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)^0,c
  2590  0024D2  EC68  F017         	call	_EUSART2_SetTxInterruptHandler	;wreg free
  2591  0024D6                     
  2592                           ;mcc_generated_files/eusart2.c: 98:     BAUD2CON = 0x08;
  2593  0024D6  0E08               	movlw	8
  2594  0024D8  010E               	movlb	14	; () banked
  2595  0024DA  6F9F               	movwf	159,b	;volatile
  2596  0024DC                     
  2597                           ; BSR set to: 14
  2598                           ;mcc_generated_files/eusart2.c: 101:     RC2STA = 0x90;
  2599  0024DC  0E90               	movlw	144
  2600  0024DE  6F9D               	movwf	157,b	;volatile
  2601  0024E0                     
  2602                           ; BSR set to: 14
  2603                           ;mcc_generated_files/eusart2.c: 104:     TX2STA = 0x24;
  2604  0024E0  0E24               	movlw	36
  2605  0024E2  6F9E               	movwf	158,b	;volatile
  2606  0024E4                     
  2607                           ; BSR set to: 14
  2608                           ;mcc_generated_files/eusart2.c: 107:     SP2BRGL = 0x40;
  2609  0024E4  0E40               	movlw	64
  2610  0024E6  6F9B               	movwf	155,b	;volatile
  2611  0024E8                     
  2612                           ; BSR set to: 14
  2613                           ;mcc_generated_files/eusart2.c: 110:     SP2BRGH = 0x03;
  2614  0024E8  0E03               	movlw	3
  2615  0024EA  6F9C               	movwf	156,b	;volatile
  2616  0024EC                     
  2617                           ; BSR set to: 14
  2618                           ;mcc_generated_files/eusart2.c: 113:     EUSART2_SetFramingErrorHandler(EUSART2_DefaultF
      +                          ramingErrorHandler);
  2619  0024EC  0E68               	movlw	low _EUSART2_DefaultFramingErrorHandler
  2620  0024EE  6E05               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler^0,c
  2621  0024F0  0E2F               	movlw	high _EUSART2_DefaultFramingErrorHandler
  2622  0024F2  6E06               	movwf	(EUSART2_SetFramingErrorHandler@interruptHandler+1)^0,c
  2623  0024F4  EC77  F017         	call	_EUSART2_SetFramingErrorHandler	;wreg free
  2624  0024F8                     
  2625                           ;mcc_generated_files/eusart2.c: 114:     EUSART2_SetOverrunErrorHandler(EUSART2_DefaultO
      +                          verrunErrorHandler);
  2626  0024F8  0E3E               	movlw	low _EUSART2_DefaultOverrunErrorHandler
  2627  0024FA  6E05               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler^0,c
  2628  0024FC  0E2F               	movlw	high _EUSART2_DefaultOverrunErrorHandler
  2629  0024FE  6E06               	movwf	(EUSART2_SetOverrunErrorHandler@interruptHandler+1)^0,c
  2630  002500  EC72  F017         	call	_EUSART2_SetOverrunErrorHandler	;wreg free
  2631  002504                     
  2632                           ;mcc_generated_files/eusart2.c: 115:     EUSART2_SetErrorHandler(EUSART2_DefaultErrorHan
      +                          dler);
  2633  002504  0E52               	movlw	low _EUSART2_DefaultErrorHandler
  2634  002506  6E05               	movwf	EUSART2_SetErrorHandler@interruptHandler^0,c
  2635  002508  0E2F               	movlw	high _EUSART2_DefaultErrorHandler
  2636  00250A  6E06               	movwf	(EUSART2_SetErrorHandler@interruptHandler+1)^0,c
  2637  00250C  EC7C  F017         	call	_EUSART2_SetErrorHandler	;wreg free
  2638                           
  2639                           ;mcc_generated_files/eusart2.c: 117:     eusart2RxLastError.status = 0;
  2640  002510  0E00               	movlw	0
  2641  002512  0100               	movlb	0	; () banked
  2642  002514  6FA0               	movwf	_eusart2RxLastError& (0+255),b	;volatile
  2643                           
  2644                           ;mcc_generated_files/eusart2.c: 120:     eusart2TxHead = 0;
  2645  002516  0E00               	movlw	0
  2646  002518  6FA4               	movwf	_eusart2TxHead& (0+255),b	;volatile
  2647                           
  2648                           ;mcc_generated_files/eusart2.c: 121:     eusart2TxTail = 0;
  2649  00251A  0E00               	movlw	0
  2650  00251C  6FA3               	movwf	_eusart2TxTail& (0+255),b	;volatile
  2651                           
  2652                           ;mcc_generated_files/eusart2.c: 122:     eusart2TxBufferRemaining = sizeof(eusart2TxBuff
      +                          er);
  2653  00251E  0E08               	movlw	8
  2654  002520  6FF2               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
  2655                           
  2656                           ;mcc_generated_files/eusart2.c: 124:     eusart2RxHead = 0;
  2657  002522  0E00               	movlw	0
  2658  002524  6E5A               	movwf	_eusart2RxHead^0,c	;volatile
  2659                           
  2660                           ;mcc_generated_files/eusart2.c: 125:     eusart2RxTail = 0;
  2661  002526  0E00               	movlw	0
  2662  002528  6FA2               	movwf	_eusart2RxTail& (0+255),b	;volatile
  2663                           
  2664                           ;mcc_generated_files/eusart2.c: 126:     eusart2RxCount = 0;
  2665  00252A  0E00               	movlw	0
  2666  00252C  6FA1               	movwf	_eusart2RxCount& (0+255),b	;volatile
  2667  00252E                     
  2668                           ; BSR set to: 0
  2669                           ;mcc_generated_files/eusart2.c: 129:     PIE3bits.RC2IE = 1;
  2670  00252E  010E               	movlb	14	; () banked
  2671  002530  8FC5               	bsf	197,7,b	;volatile
  2672  002532                     
  2673                           ; BSR set to: 14
  2674  002532  0012               	return		;funcret
  2675  002534                     __end_of_EUSART2_Initialize:
  2676                           	opt callstack 0
  2677                           
  2678 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
  2679 ;; Defined at:
  2680 ;;		line 285 in file "mcc_generated_files/eusart2.c"
  2681 ;; Parameters:    Size  Location     Type
  2682 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2683 ;;		 -> EUSART2_Transmit_ISR(1), 
  2684 ;; Auto vars:     Size  Location     Type
  2685 ;;		None
  2686 ;; Return value:  Size  Location     Type
  2687 ;;                  1    wreg      void 
  2688 ;; Registers used:
  2689 ;;		wreg, status,2, status,0
  2690 ;; Tracked objects:
  2691 ;;		On entry : 0/0
  2692 ;;		On exit  : 0/0
  2693 ;;		Unchanged: 0/0
  2694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2695 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2698 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2699 ;;Total ram usage:        2 bytes
  2700 ;; Hardware stack levels used:    1
  2701 ;; Hardware stack levels required when called:    4
  2702 ;; This function calls:
  2703 ;;		Nothing
  2704 ;; This function is called by:
  2705 ;;		_EUSART2_Initialize
  2706 ;; This function uses a non-reentrant model
  2707 ;;
  2708                           
  2709                           	psect	text7
  2710  002ED0                     __ptext7:
  2711                           	opt callstack 0
  2712  002ED0                     _EUSART2_SetTxInterruptHandler:
  2713                           	opt callstack 24
  2714  002ED0                     
  2715                           ;mcc_generated_files/eusart2.c: 286:     EUSART2_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  2716  002ED0  C005  F0EF         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
  2717  002ED4  C006  F0F0         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
  2718  002ED8  0012               	return		;funcret
  2719  002EDA                     __end_of_EUSART2_SetTxInterruptHandler:
  2720                           	opt callstack 0
  2721                           
  2722 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
  2723 ;; Defined at:
  2724 ;;		line 289 in file "mcc_generated_files/eusart2.c"
  2725 ;; Parameters:    Size  Location     Type
  2726 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2727 ;;		 -> EUSART2_Receive_ISR(1), 
  2728 ;; Auto vars:     Size  Location     Type
  2729 ;;		None
  2730 ;; Return value:  Size  Location     Type
  2731 ;;                  1    wreg      void 
  2732 ;; Registers used:
  2733 ;;		wreg, status,2, status,0
  2734 ;; Tracked objects:
  2735 ;;		On entry : 0/0
  2736 ;;		On exit  : 0/0
  2737 ;;		Unchanged: 0/0
  2738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2739 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2742 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2743 ;;Total ram usage:        2 bytes
  2744 ;; Hardware stack levels used:    1
  2745 ;; Hardware stack levels required when called:    4
  2746 ;; This function calls:
  2747 ;;		Nothing
  2748 ;; This function is called by:
  2749 ;;		_EUSART2_Initialize
  2750 ;; This function uses a non-reentrant model
  2751 ;;
  2752                           
  2753                           	psect	text8
  2754  002EDA                     __ptext8:
  2755                           	opt callstack 0
  2756  002EDA                     _EUSART2_SetRxInterruptHandler:
  2757                           	opt callstack 24
  2758  002EDA                     
  2759                           ;mcc_generated_files/eusart2.c: 290:     EUSART2_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  2760  002EDA  C005  F0ED         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
  2761  002EDE  C006  F0EE         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
  2762  002EE2  0012               	return		;funcret
  2763  002EE4                     __end_of_EUSART2_SetRxInterruptHandler:
  2764                           	opt callstack 0
  2765                           
  2766 ;; *************** function _EUSART2_SetOverrunErrorHandler *****************
  2767 ;; Defined at:
  2768 ;;		line 277 in file "mcc_generated_files/eusart2.c"
  2769 ;; Parameters:    Size  Location     Type
  2770 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2771 ;;		 -> EUSART2_DefaultOverrunErrorHandler(1), 
  2772 ;; Auto vars:     Size  Location     Type
  2773 ;;		None
  2774 ;; Return value:  Size  Location     Type
  2775 ;;                  1    wreg      void 
  2776 ;; Registers used:
  2777 ;;		wreg, status,2, status,0
  2778 ;; Tracked objects:
  2779 ;;		On entry : 0/0
  2780 ;;		On exit  : 0/0
  2781 ;;		Unchanged: 0/0
  2782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2783 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2786 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2787 ;;Total ram usage:        2 bytes
  2788 ;; Hardware stack levels used:    1
  2789 ;; Hardware stack levels required when called:    4
  2790 ;; This function calls:
  2791 ;;		Nothing
  2792 ;; This function is called by:
  2793 ;;		_EUSART2_Initialize
  2794 ;; This function uses a non-reentrant model
  2795 ;;
  2796                           
  2797                           	psect	text9
  2798  002EE4                     __ptext9:
  2799                           	opt callstack 0
  2800  002EE4                     _EUSART2_SetOverrunErrorHandler:
  2801                           	opt callstack 24
  2802  002EE4                     
  2803                           ;mcc_generated_files/eusart2.c: 278:     EUSART2_OverrunErrorHandler = interruptHandler;
  2804  002EE4  C005  F0E5         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler,_EUSART2_OverrunErrorHandler
  2805  002EE8  C006  F0E6         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler+1,_EUSART2_OverrunErrorHandler+1
  2806  002EEC  0012               	return		;funcret
  2807  002EEE                     __end_of_EUSART2_SetOverrunErrorHandler:
  2808                           	opt callstack 0
  2809                           
  2810 ;; *************** function _EUSART2_SetFramingErrorHandler *****************
  2811 ;; Defined at:
  2812 ;;		line 273 in file "mcc_generated_files/eusart2.c"
  2813 ;; Parameters:    Size  Location     Type
  2814 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2815 ;;		 -> EUSART2_DefaultFramingErrorHandler(1), 
  2816 ;; Auto vars:     Size  Location     Type
  2817 ;;		None
  2818 ;; Return value:  Size  Location     Type
  2819 ;;                  1    wreg      void 
  2820 ;; Registers used:
  2821 ;;		wreg, status,2, status,0
  2822 ;; Tracked objects:
  2823 ;;		On entry : 0/0
  2824 ;;		On exit  : 0/0
  2825 ;;		Unchanged: 0/0
  2826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2827 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2830 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2831 ;;Total ram usage:        2 bytes
  2832 ;; Hardware stack levels used:    1
  2833 ;; Hardware stack levels required when called:    4
  2834 ;; This function calls:
  2835 ;;		Nothing
  2836 ;; This function is called by:
  2837 ;;		_EUSART2_Initialize
  2838 ;; This function uses a non-reentrant model
  2839 ;;
  2840                           
  2841                           	psect	text10
  2842  002EEE                     __ptext10:
  2843                           	opt callstack 0
  2844  002EEE                     _EUSART2_SetFramingErrorHandler:
  2845                           	opt callstack 24
  2846  002EEE                     
  2847                           ;mcc_generated_files/eusart2.c: 274:     EUSART2_FramingErrorHandler = interruptHandler;
  2848  002EEE  C005  F0E7         	movff	EUSART2_SetFramingErrorHandler@interruptHandler,_EUSART2_FramingErrorHandler
  2849  002EF2  C006  F0E8         	movff	EUSART2_SetFramingErrorHandler@interruptHandler+1,_EUSART2_FramingErrorHandler+1
  2850  002EF6  0012               	return		;funcret
  2851  002EF8                     __end_of_EUSART2_SetFramingErrorHandler:
  2852                           	opt callstack 0
  2853                           
  2854 ;; *************** function _EUSART2_SetErrorHandler *****************
  2855 ;; Defined at:
  2856 ;;		line 281 in file "mcc_generated_files/eusart2.c"
  2857 ;; Parameters:    Size  Location     Type
  2858 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2859 ;;		 -> EUSART2_DefaultErrorHandler(1), 
  2860 ;; Auto vars:     Size  Location     Type
  2861 ;;		None
  2862 ;; Return value:  Size  Location     Type
  2863 ;;                  1    wreg      void 
  2864 ;; Registers used:
  2865 ;;		wreg, status,2, status,0
  2866 ;; Tracked objects:
  2867 ;;		On entry : 0/0
  2868 ;;		On exit  : 0/0
  2869 ;;		Unchanged: 0/0
  2870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2871 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2874 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2875 ;;Total ram usage:        2 bytes
  2876 ;; Hardware stack levels used:    1
  2877 ;; Hardware stack levels required when called:    4
  2878 ;; This function calls:
  2879 ;;		Nothing
  2880 ;; This function is called by:
  2881 ;;		_EUSART2_Initialize
  2882 ;; This function uses a non-reentrant model
  2883 ;;
  2884                           
  2885                           	psect	text11
  2886  002EF8                     __ptext11:
  2887                           	opt callstack 0
  2888  002EF8                     _EUSART2_SetErrorHandler:
  2889                           	opt callstack 24
  2890  002EF8                     
  2891                           ;mcc_generated_files/eusart2.c: 282:     EUSART2_ErrorHandler = interruptHandler;
  2892  002EF8  C005  F0E3         	movff	EUSART2_SetErrorHandler@interruptHandler,_EUSART2_ErrorHandler
  2893  002EFC  C006  F0E4         	movff	EUSART2_SetErrorHandler@interruptHandler+1,_EUSART2_ErrorHandler+1
  2894  002F00  0012               	return		;funcret
  2895  002F02                     __end_of_EUSART2_SetErrorHandler:
  2896                           	opt callstack 0
  2897                           
  2898 ;; *************** function _EUSART1_Initialize *****************
  2899 ;; Defined at:
  2900 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  2901 ;; Parameters:    Size  Location     Type
  2902 ;;		None
  2903 ;; Auto vars:     Size  Location     Type
  2904 ;;		None
  2905 ;; Return value:  Size  Location     Type
  2906 ;;                  1    wreg      void 
  2907 ;; Registers used:
  2908 ;;		wreg, status,2, status,0, cstack
  2909 ;; Tracked objects:
  2910 ;;		On entry : 0/0
  2911 ;;		On exit  : 0/0
  2912 ;;		Unchanged: 0/0
  2913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2918 ;;Total ram usage:        0 bytes
  2919 ;; Hardware stack levels used:    1
  2920 ;; Hardware stack levels required when called:    5
  2921 ;; This function calls:
  2922 ;;		_EUSART1_SetErrorHandler
  2923 ;;		_EUSART1_SetFramingErrorHandler
  2924 ;;		_EUSART1_SetOverrunErrorHandler
  2925 ;;		_EUSART1_SetRxInterruptHandler
  2926 ;;		_EUSART1_SetTxInterruptHandler
  2927 ;; This function is called by:
  2928 ;;		_SYSTEM_Initialize
  2929 ;; This function uses a non-reentrant model
  2930 ;;
  2931                           
  2932                           	psect	text12
  2933  002534                     __ptext12:
  2934                           	opt callstack 0
  2935  002534                     _EUSART1_Initialize:
  2936                           	opt callstack 24
  2937  002534                     
  2938                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
  2939  002534  010E               	movlb	14	; () banked
  2940  002536  9BC5               	bcf	197,5,b	;volatile
  2941  002538                     
  2942                           ; BSR set to: 14
  2943                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  2944  002538  0E10               	movlw	low _EUSART1_Receive_ISR
  2945  00253A  6E05               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
  2946  00253C  0E21               	movlw	high _EUSART1_Receive_ISR
  2947  00253E  6E06               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
  2948  002540  EC86  F017         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  2949  002544                     
  2950                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
  2951  002544  010E               	movlb	14	; () banked
  2952  002546  99C5               	bcf	197,4,b	;volatile
  2953                           
  2954                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  2955  002548  0EE2               	movlw	low _EUSART1_Transmit_ISR
  2956  00254A  6E05               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
  2957  00254C  0E2B               	movlw	high _EUSART1_Transmit_ISR
  2958  00254E  6E06               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
  2959  002550  EC81  F017         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  2960  002554                     
  2961                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
  2962  002554  0E08               	movlw	8
  2963  002556  6E9F               	movwf	159,c	;volatile
  2964  002558                     
  2965                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
  2966  002558  0E90               	movlw	144
  2967  00255A  6E9D               	movwf	157,c	;volatile
  2968  00255C                     
  2969                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
  2970  00255C  0E24               	movlw	36
  2971  00255E  6E9E               	movwf	158,c	;volatile
  2972  002560                     
  2973                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x40;
  2974  002560  0E40               	movlw	64
  2975  002562  6E9B               	movwf	155,c	;volatile
  2976  002564                     
  2977                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x03;
  2978  002564  0E03               	movlw	3
  2979  002566  6E9C               	movwf	156,c	;volatile
  2980  002568                     
  2981                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  2982  002568  0E6A               	movlw	low _EUSART1_DefaultFramingErrorHandler
  2983  00256A  6E05               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  2984  00256C  0E2F               	movlw	high _EUSART1_DefaultFramingErrorHandler
  2985  00256E  6E06               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  2986  002570  EC90  F017         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  2987  002574                     
  2988                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  2989  002574  0E58               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  2990  002576  6E05               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  2991  002578  0E2F               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  2992  00257A  6E06               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  2993  00257C  EC8B  F017         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  2994  002580                     
  2995                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  2996  002580  0E5E               	movlw	low _EUSART1_DefaultErrorHandler
  2997  002582  6E05               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  2998  002584  0E2F               	movlw	high _EUSART1_DefaultErrorHandler
  2999  002586  6E06               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  3000  002588  EC95  F017         	call	_EUSART1_SetErrorHandler	;wreg free
  3001                           
  3002                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
  3003  00258C  0E00               	movlw	0
  3004  00258E  0100               	movlb	0	; () banked
  3005  002590  6F9B               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  3006                           
  3007                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
  3008  002592  0E00               	movlw	0
  3009  002594  6F9F               	movwf	_eusart1TxHead& (0+255),b	;volatile
  3010                           
  3011                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
  3012  002596  0E00               	movlw	0
  3013  002598  6F9E               	movwf	_eusart1TxTail& (0+255),b	;volatile
  3014                           
  3015                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  3016  00259A  0E10               	movlw	16
  3017  00259C  6FF1               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
  3018                           
  3019                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
  3020  00259E  0E00               	movlw	0
  3021  0025A0  6E59               	movwf	_eusart1RxHead^0,c	;volatile
  3022                           
  3023                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
  3024  0025A2  0E00               	movlw	0
  3025  0025A4  6F9D               	movwf	_eusart1RxTail& (0+255),b	;volatile
  3026                           
  3027                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
  3028  0025A6  0E00               	movlw	0
  3029  0025A8  6F9C               	movwf	_eusart1RxCount& (0+255),b	;volatile
  3030  0025AA                     
  3031                           ; BSR set to: 0
  3032                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
  3033  0025AA  010E               	movlb	14	; () banked
  3034  0025AC  8BC5               	bsf	197,5,b	;volatile
  3035  0025AE                     
  3036                           ; BSR set to: 14
  3037  0025AE  0012               	return		;funcret
  3038  0025B0                     __end_of_EUSART1_Initialize:
  3039                           	opt callstack 0
  3040                           
  3041 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  3042 ;; Defined at:
  3043 ;;		line 276 in file "mcc_generated_files/eusart1.c"
  3044 ;; Parameters:    Size  Location     Type
  3045 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3046 ;;		 -> EUSART1_Transmit_ISR(1), 
  3047 ;; Auto vars:     Size  Location     Type
  3048 ;;		None
  3049 ;; Return value:  Size  Location     Type
  3050 ;;                  1    wreg      void 
  3051 ;; Registers used:
  3052 ;;		wreg, status,2, status,0
  3053 ;; Tracked objects:
  3054 ;;		On entry : 0/0
  3055 ;;		On exit  : 0/0
  3056 ;;		Unchanged: 0/0
  3057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3058 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3061 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3062 ;;Total ram usage:        2 bytes
  3063 ;; Hardware stack levels used:    1
  3064 ;; Hardware stack levels required when called:    4
  3065 ;; This function calls:
  3066 ;;		Nothing
  3067 ;; This function is called by:
  3068 ;;		_EUSART1_Initialize
  3069 ;; This function uses a non-reentrant model
  3070 ;;
  3071                           
  3072                           	psect	text13
  3073  002F02                     __ptext13:
  3074                           	opt callstack 0
  3075  002F02                     _EUSART1_SetTxInterruptHandler:
  3076                           	opt callstack 24
  3077  002F02                     
  3078                           ;mcc_generated_files/eusart1.c: 277:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  3079  002F02  C005  F0EB         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  3080  002F06  C006  F0EC         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  3081  002F0A  0012               	return		;funcret
  3082  002F0C                     __end_of_EUSART1_SetTxInterruptHandler:
  3083                           	opt callstack 0
  3084                           
  3085 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  3086 ;; Defined at:
  3087 ;;		line 280 in file "mcc_generated_files/eusart1.c"
  3088 ;; Parameters:    Size  Location     Type
  3089 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3090 ;;		 -> EUSART1_Receive_ISR(1), 
  3091 ;; Auto vars:     Size  Location     Type
  3092 ;;		None
  3093 ;; Return value:  Size  Location     Type
  3094 ;;                  1    wreg      void 
  3095 ;; Registers used:
  3096 ;;		wreg, status,2, status,0
  3097 ;; Tracked objects:
  3098 ;;		On entry : 0/0
  3099 ;;		On exit  : 0/0
  3100 ;;		Unchanged: 0/0
  3101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3102 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3105 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3106 ;;Total ram usage:        2 bytes
  3107 ;; Hardware stack levels used:    1
  3108 ;; Hardware stack levels required when called:    4
  3109 ;; This function calls:
  3110 ;;		Nothing
  3111 ;; This function is called by:
  3112 ;;		_EUSART1_Initialize
  3113 ;; This function uses a non-reentrant model
  3114 ;;
  3115                           
  3116                           	psect	text14
  3117  002F0C                     __ptext14:
  3118                           	opt callstack 0
  3119  002F0C                     _EUSART1_SetRxInterruptHandler:
  3120                           	opt callstack 24
  3121  002F0C                     
  3122                           ;mcc_generated_files/eusart1.c: 281:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  3123  002F0C  C005  F0E9         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  3124  002F10  C006  F0EA         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  3125  002F14  0012               	return		;funcret
  3126  002F16                     __end_of_EUSART1_SetRxInterruptHandler:
  3127                           	opt callstack 0
  3128                           
  3129 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  3130 ;; Defined at:
  3131 ;;		line 268 in file "mcc_generated_files/eusart1.c"
  3132 ;; Parameters:    Size  Location     Type
  3133 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3134 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  3135 ;; Auto vars:     Size  Location     Type
  3136 ;;		None
  3137 ;; Return value:  Size  Location     Type
  3138 ;;                  1    wreg      void 
  3139 ;; Registers used:
  3140 ;;		wreg, status,2, status,0
  3141 ;; Tracked objects:
  3142 ;;		On entry : 0/0
  3143 ;;		On exit  : 0/0
  3144 ;;		Unchanged: 0/0
  3145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3146 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3149 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3150 ;;Total ram usage:        2 bytes
  3151 ;; Hardware stack levels used:    1
  3152 ;; Hardware stack levels required when called:    4
  3153 ;; This function calls:
  3154 ;;		Nothing
  3155 ;; This function is called by:
  3156 ;;		_EUSART1_Initialize
  3157 ;; This function uses a non-reentrant model
  3158 ;;
  3159                           
  3160                           	psect	text15
  3161  002F16                     __ptext15:
  3162                           	opt callstack 0
  3163  002F16                     _EUSART1_SetOverrunErrorHandler:
  3164                           	opt callstack 24
  3165  002F16                     
  3166                           ;mcc_generated_files/eusart1.c: 269:     EUSART1_OverrunErrorHandler = interruptHandler;
  3167  002F16  C005  F0DF         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  3168  002F1A  C006  F0E0         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  3169  002F1E  0012               	return		;funcret
  3170  002F20                     __end_of_EUSART1_SetOverrunErrorHandler:
  3171                           	opt callstack 0
  3172                           
  3173 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  3174 ;; Defined at:
  3175 ;;		line 264 in file "mcc_generated_files/eusart1.c"
  3176 ;; Parameters:    Size  Location     Type
  3177 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3178 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  3179 ;; Auto vars:     Size  Location     Type
  3180 ;;		None
  3181 ;; Return value:  Size  Location     Type
  3182 ;;                  1    wreg      void 
  3183 ;; Registers used:
  3184 ;;		wreg, status,2, status,0
  3185 ;; Tracked objects:
  3186 ;;		On entry : 0/0
  3187 ;;		On exit  : 0/0
  3188 ;;		Unchanged: 0/0
  3189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3190 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3193 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3194 ;;Total ram usage:        2 bytes
  3195 ;; Hardware stack levels used:    1
  3196 ;; Hardware stack levels required when called:    4
  3197 ;; This function calls:
  3198 ;;		Nothing
  3199 ;; This function is called by:
  3200 ;;		_EUSART1_Initialize
  3201 ;; This function uses a non-reentrant model
  3202 ;;
  3203                           
  3204                           	psect	text16
  3205  002F20                     __ptext16:
  3206                           	opt callstack 0
  3207  002F20                     _EUSART1_SetFramingErrorHandler:
  3208                           	opt callstack 24
  3209  002F20                     
  3210                           ;mcc_generated_files/eusart1.c: 265:     EUSART1_FramingErrorHandler = interruptHandler;
  3211  002F20  C005  F0E1         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  3212  002F24  C006  F0E2         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  3213  002F28  0012               	return		;funcret
  3214  002F2A                     __end_of_EUSART1_SetFramingErrorHandler:
  3215                           	opt callstack 0
  3216                           
  3217 ;; *************** function _EUSART1_SetErrorHandler *****************
  3218 ;; Defined at:
  3219 ;;		line 272 in file "mcc_generated_files/eusart1.c"
  3220 ;; Parameters:    Size  Location     Type
  3221 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3222 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  3223 ;; Auto vars:     Size  Location     Type
  3224 ;;		None
  3225 ;; Return value:  Size  Location     Type
  3226 ;;                  1    wreg      void 
  3227 ;; Registers used:
  3228 ;;		wreg, status,2, status,0
  3229 ;; Tracked objects:
  3230 ;;		On entry : 0/0
  3231 ;;		On exit  : 0/0
  3232 ;;		Unchanged: 0/0
  3233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3234 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3237 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3238 ;;Total ram usage:        2 bytes
  3239 ;; Hardware stack levels used:    1
  3240 ;; Hardware stack levels required when called:    4
  3241 ;; This function calls:
  3242 ;;		Nothing
  3243 ;; This function is called by:
  3244 ;;		_EUSART1_Initialize
  3245 ;; This function uses a non-reentrant model
  3246 ;;
  3247                           
  3248                           	psect	text17
  3249  002F2A                     __ptext17:
  3250                           	opt callstack 0
  3251  002F2A                     _EUSART1_SetErrorHandler:
  3252                           	opt callstack 24
  3253  002F2A                     
  3254                           ;mcc_generated_files/eusart1.c: 273:     EUSART1_ErrorHandler = interruptHandler;
  3255  002F2A  C005  F0DD         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  3256  002F2E  C006  F0DE         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  3257  002F32  0012               	return		;funcret
  3258  002F34                     __end_of_EUSART1_SetErrorHandler:
  3259                           	opt callstack 0
  3260                           
  3261 ;; *************** function _PrintModbus *****************
  3262 ;; Defined at:
  3263 ;;		line 285 in file "Modbus.c"
  3264 ;; Parameters:    Size  Location     Type
  3265 ;;		None
  3266 ;; Auto vars:     Size  Location     Type
  3267 ;;  i               2   41[BANK0 ] int 
  3268 ;; Return value:  Size  Location     Type
  3269 ;;                  1    wreg      void 
  3270 ;; Registers used:
  3271 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3272 ;; Tracked objects:
  3273 ;;		On entry : 0/0
  3274 ;;		On exit  : 0/0
  3275 ;;		Unchanged: 0/0
  3276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3278 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3279 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3280 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3281 ;;Total ram usage:        3 bytes
  3282 ;; Hardware stack levels used:    1
  3283 ;; Hardware stack levels required when called:   13
  3284 ;; This function calls:
  3285 ;;		_printf
  3286 ;; This function is called by:
  3287 ;;		_main
  3288 ;; This function uses a non-reentrant model
  3289 ;;
  3290                           
  3291                           	psect	text18
  3292  0026A8                     __ptext18:
  3293                           	opt callstack 0
  3294  0026A8                     _PrintModbus:
  3295                           	opt callstack 17
  3296  0026A8                     
  3297                           ;Modbus.c: 290:     printf("Modbus Data Capture Complete:\r\n");
  3298  0026A8  0ECC               	movlw	low STR_19
  3299  0026AA  0100               	movlb	0	; () banked
  3300  0026AC  6FC2               	movwf	printf@fmt& (0+255),b
  3301  0026AE  0EFE               	movlw	high STR_19
  3302  0026B0  6FC3               	movwf	(printf@fmt+1)& (0+255),b
  3303  0026B2  ECF1  F016         	call	_printf	;wreg free
  3304  0026B6                     
  3305                           ;Modbus.c: 291:     for(i=0; i< ModDataCnt ; i++ ){
  3306  0026B6  0E00               	movlw	0
  3307  0026B8  0100               	movlb	0	; () banked
  3308  0026BA  6FCF               	movwf	(PrintModbus@i+1)& (0+255),b
  3309  0026BC  0E00               	movlw	0
  3310  0026BE  6FCE               	movwf	PrintModbus@i& (0+255),b
  3311  0026C0  EF7A  F013         	goto	l5694
  3312  0026C4                     l5690:
  3313                           
  3314                           ; BSR set to: 0
  3315                           ;Modbus.c: 292:         printf("   Byte %i : 0x%02x \r\n", i, ModbusData[i]);
  3316  0026C4  0E71               	movlw	low STR_17
  3317  0026C6  6FC2               	movwf	printf@fmt& (0+255),b
  3318  0026C8  0EFF               	movlw	high STR_17
  3319  0026CA  6FC3               	movwf	(printf@fmt+1)& (0+255),b
  3320  0026CC  C0CE  F0C4         	movff	PrintModbus@i,?_printf+2
  3321  0026D0  C0CF  F0C5         	movff	PrintModbus@i+1,?_printf+3
  3322  0026D4  0E00               	movlw	low _ModbusData
  3323  0026D6  25CE               	addwf	PrintModbus@i& (0+255),w,b
  3324  0026D8  6ED9               	movwf	fsr2l,c
  3325  0026DA  0E01               	movlw	high _ModbusData
  3326  0026DC  21CF               	addwfc	(PrintModbus@i+1)& (0+255),w,b
  3327  0026DE  6EDA               	movwf	fsr2h,c
  3328  0026E0  50DF               	movf	indf2,w,c
  3329  0026E2  6E55               	movwf	??_PrintModbus^0,c
  3330  0026E4  5055               	movf	??_PrintModbus^0,w,c
  3331  0026E6  6FC6               	movwf	(?_printf+4)& (0+255),b
  3332  0026E8  6BC7               	clrf	(?_printf+5)& (0+255),b
  3333  0026EA  ECF1  F016         	call	_printf	;wreg free
  3334  0026EE                     
  3335                           ;Modbus.c: 293:     }
  3336  0026EE  0100               	movlb	0	; () banked
  3337  0026F0  4BCE               	infsnz	PrintModbus@i& (0+255),f,b
  3338  0026F2  2BCF               	incf	(PrintModbus@i+1)& (0+255),f,b
  3339  0026F4                     l5694:
  3340                           
  3341                           ; BSR set to: 0
  3342  0026F4  5196               	movf	_ModDataCnt& (0+255),w,b
  3343  0026F6  5DCE               	subwf	PrintModbus@i& (0+255),w,b
  3344  0026F8  51CF               	movf	(PrintModbus@i+1)& (0+255),w,b
  3345  0026FA  0A80               	xorlw	128
  3346  0026FC  6E55               	movwf	??_PrintModbus^0,c
  3347  0026FE  5197               	movf	(_ModDataCnt+1)& (0+255),w,b
  3348  002700  0A80               	xorlw	128
  3349  002702  5855               	subwfb	??_PrintModbus^0,w,c
  3350  002704  A0D8               	btfss	status,0,c
  3351  002706  EF87  F013         	goto	u5561
  3352  00270A  EF89  F013         	goto	u5560
  3353  00270E                     u5561:
  3354  00270E  EF62  F013         	goto	l5690
  3355  002712                     u5560:
  3356  002712                     
  3357                           ; BSR set to: 0
  3358                           ;Modbus.c: 294:     printf("\r\n\n");
  3359  002712  0E99               	movlw	low (STR_22+17)
  3360  002714  6FC2               	movwf	printf@fmt& (0+255),b
  3361  002716  0EFF               	movlw	high (STR_22+17)
  3362  002718  6FC3               	movwf	(printf@fmt+1)& (0+255),b
  3363  00271A  ECF1  F016         	call	_printf	;wreg free
  3364  00271E  0012               	return		;funcret
  3365  002720                     __end_of_PrintModbus:
  3366                           	opt callstack 0
  3367                           
  3368 ;; *************** function _ModbusRx *****************
  3369 ;; Defined at:
  3370 ;;		line 326 in file "Modbus.c"
  3371 ;; Parameters:    Size  Location     Type
  3372 ;;		None
  3373 ;; Auto vars:     Size  Location     Type
  3374 ;;		None
  3375 ;; Return value:  Size  Location     Type
  3376 ;;                  1    wreg      _Bool 
  3377 ;; Registers used:
  3378 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3379 ;; Tracked objects:
  3380 ;;		On entry : 0/0
  3381 ;;		On exit  : 0/0
  3382 ;;		Unchanged: 0/0
  3383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3386 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3387 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3388 ;;Total ram usage:        1 bytes
  3389 ;; Hardware stack levels used:    1
  3390 ;; Hardware stack levels required when called:   14
  3391 ;; This function calls:
  3392 ;;		_AddRxBuffToModBus
  3393 ;;		_ClearRxBuff
  3394 ;;		_EUSART1_Read
  3395 ;;		_EUSART1_is_rx_ready
  3396 ;;		_RXMode
  3397 ;;		_checkCRC
  3398 ;;		_printf
  3399 ;; This function is called by:
  3400 ;;		_main
  3401 ;; This function uses a non-reentrant model
  3402 ;;
  3403                           
  3404                           	psect	text19
  3405  0019F2                     __ptext19:
  3406                           	opt callstack 0
  3407  0019F2                     _ModbusRx:
  3408                           	opt callstack 16
  3409  0019F2                     
  3410                           ;Modbus.c: 327:     RXMode();
  3411  0019F2  ECA3  F017         	call	_RXMode	;wreg free
  3412  0019F6                     
  3413                           ;Modbus.c: 328:     if(EUSART1_is_rx_ready()){
  3414  0019F6  EC3F  F017         	call	_EUSART1_is_rx_ready	;wreg free
  3415  0019FA  0900               	iorlw	0
  3416  0019FC  B4D8               	btfsc	status,2,c
  3417  0019FE  EF03  F00D         	goto	u5481
  3418  001A02  EF05  F00D         	goto	u5480
  3419  001A06                     u5481:
  3420  001A06  EF8C  F00D         	goto	l5680
  3421  001A0A                     u5480:
  3422  001A0A                     l5642:
  3423                           
  3424                           ;Modbus.c: 330:             if(EUSART1_is_rx_ready()){
  3425  001A0A  EC3F  F017         	call	_EUSART1_is_rx_ready	;wreg free
  3426  001A0E  0900               	iorlw	0
  3427  001A10  B4D8               	btfsc	status,2,c
  3428  001A12  EF0D  F00D         	goto	u5491
  3429  001A16  EF0F  F00D         	goto	u5490
  3430  001A1A                     u5491:
  3431  001A1A  EF2C  F00D         	goto	l5654
  3432  001A1E                     u5490:
  3433  001A1E  EF1F  F00D         	goto	l5650
  3434  001A22                     l5646:
  3435                           
  3436                           ;Modbus.c: 334:                     rxData[ByteNum] = EUSART1_Read();
  3437  001A22  ECBD  F014         	call	_EUSART1_Read	;wreg free
  3438  001A26  6E55               	movwf	??_ModbusRx^0,c
  3439  001A28  0E00               	movlw	low _rxData
  3440  001A2A  0100               	movlb	0	; () banked
  3441  001A2C  2592               	addwf	_ByteNum& (0+255),w,b
  3442  001A2E  6ED9               	movwf	fsr2l,c
  3443  001A30  0E03               	movlw	high _rxData
  3444  001A32  2193               	addwfc	(_ByteNum+1)& (0+255),w,b
  3445  001A34  6EDA               	movwf	fsr2h,c
  3446  001A36  C055  FFDF         	movff	??_ModbusRx,indf2
  3447  001A3A                     
  3448                           ; BSR set to: 0
  3449                           ;Modbus.c: 335:                     ByteNum++;
  3450  001A3A  4B92               	infsnz	_ByteNum& (0+255),f,b
  3451  001A3C  2B93               	incf	(_ByteNum+1)& (0+255),f,b
  3452  001A3E                     l5650:
  3453                           
  3454                           ;Modbus.c: 332:                 while(EUSART1_is_rx_ready()){
  3455  001A3E  EC3F  F017         	call	_EUSART1_is_rx_ready	;wreg free
  3456  001A42  0900               	iorlw	0
  3457  001A44  A4D8               	btfss	status,2,c
  3458  001A46  EF27  F00D         	goto	u5501
  3459  001A4A  EF29  F00D         	goto	u5500
  3460  001A4E                     u5501:
  3461  001A4E  EF11  F00D         	goto	l5646
  3462  001A52                     u5500:
  3463  001A52                     
  3464                           ;Modbus.c: 338:                 RXStat = 1;
  3465  001A52  0E01               	movlw	1
  3466  001A54  0100               	movlb	0	; () banked
  3467  001A56  6F99               	movwf	_RXStat& (0+255),b
  3468  001A58                     l5654:
  3469                           
  3470                           ;Modbus.c: 341:             if(RXStat ==1){
  3471  001A58  0100               	movlb	0	; () banked
  3472  001A5A  0599               	decf	_RXStat& (0+255),w,b
  3473  001A5C  A4D8               	btfss	status,2,c
  3474  001A5E  EF33  F00D         	goto	u5511
  3475  001A62  EF35  F00D         	goto	u5510
  3476  001A66                     u5511:
  3477  001A66  EF51  F00D         	goto	l5666
  3478  001A6A                     u5510:
  3479  001A6A                     
  3480                           ; BSR set to: 0
  3481                           ;Modbus.c: 344:                 AddRxBuffToModBus();
  3482  001A6A  EC39  F011         	call	_AddRxBuffToModBus	;wreg free
  3483  001A6E                     
  3484                           ;Modbus.c: 345:                 ClearRxBuff();
  3485  001A6E  EC86  F015         	call	_ClearRxBuff	;wreg free
  3486  001A72                     
  3487                           ;Modbus.c: 346:                 RXStat = 0;
  3488  001A72  0E00               	movlw	0
  3489  001A74  0100               	movlb	0	; () banked
  3490  001A76  6F99               	movwf	_RXStat& (0+255),b
  3491  001A78                     
  3492                           ; BSR set to: 0
  3493                           ;Modbus.c: 347:                 ByteNum = 0;
  3494  001A78  0E00               	movlw	0
  3495  001A7A  6F93               	movwf	(_ByteNum+1)& (0+255),b
  3496  001A7C  0E00               	movlw	0
  3497  001A7E  6F92               	movwf	_ByteNum& (0+255),b
  3498  001A80                     
  3499                           ; BSR set to: 0
  3500  001A80  B883               	btfsc	131,4,c	;volatile
  3501  001A82  EF45  F00D         	goto	u5521
  3502  001A86  EF48  F00D         	goto	u5520
  3503  001A8A                     u5521:
  3504  001A8A  0E01               	movlw	1
  3505  001A8C  EF49  F00D         	goto	u5526
  3506  001A90                     u5520:
  3507  001A90  0E00               	movlw	0
  3508  001A92                     u5526:
  3509  001A92  0AFF               	xorlw	255
  3510  001A94  6E55               	movwf	??_ModbusRx^0,c
  3511  001A96  3A55               	swapf	??_ModbusRx^0,f,c
  3512  001A98  5083               	movf	131,w,c	;volatile
  3513  001A9A  1855               	xorwf	??_ModbusRx^0,w,c
  3514  001A9C  0BEF               	andlw	-17
  3515  001A9E  1855               	xorwf	??_ModbusRx^0,w,c
  3516  001AA0  6E83               	movwf	131,c	;volatile
  3517  001AA2                     l5666:
  3518                           
  3519                           ; BSR set to: 0
  3520                           ;Modbus.c: 350:         }while(ModDataCnt != ExpectedBytes);
  3521  001AA2  51FE               	movf	_ExpectedBytes& (0+255),w,b
  3522  001AA4  1996               	xorwf	_ModDataCnt& (0+255),w,b
  3523  001AA6  E107               	bnz	u5531
  3524  001AA8  51FF               	movf	(_ExpectedBytes+1)& (0+255),w,b
  3525  001AAA  1997               	xorwf	(_ModDataCnt+1)& (0+255),w,b
  3526  001AAC  A4D8               	btfss	status,2,c
  3527  001AAE  EF5B  F00D         	goto	u5531
  3528  001AB2  EF5D  F00D         	goto	u5530
  3529  001AB6                     u5531:
  3530  001AB6  EF05  F00D         	goto	l5642
  3531  001ABA                     u5530:
  3532  001ABA                     
  3533                           ; BSR set to: 0
  3534  001ABA  BA83               	btfsc	131,5,c	;volatile
  3535  001ABC  EF62  F00D         	goto	u5541
  3536  001AC0  EF65  F00D         	goto	u5540
  3537  001AC4                     u5541:
  3538  001AC4  0E01               	movlw	1
  3539  001AC6  EF66  F00D         	goto	u5546
  3540  001ACA                     u5540:
  3541  001ACA  0E00               	movlw	0
  3542  001ACC                     u5546:
  3543  001ACC  0AFF               	xorlw	255
  3544  001ACE  6E55               	movwf	??_ModbusRx^0,c
  3545  001AD0  3A55               	swapf	??_ModbusRx^0,f,c
  3546  001AD2  4655               	rlncf	??_ModbusRx^0,f,c
  3547  001AD4  5083               	movf	131,w,c	;volatile
  3548  001AD6  1855               	xorwf	??_ModbusRx^0,w,c
  3549  001AD8  0BDF               	andlw	-33
  3550  001ADA  1855               	xorwf	??_ModbusRx^0,w,c
  3551  001ADC  6E83               	movwf	131,c	;volatile
  3552  001ADE                     
  3553                           ; BSR set to: 0
  3554                           ;Modbus.c: 355:         if(checkCRC() == 1)
  3555  001ADE  EC53  F00C         	call	_checkCRC	;wreg free
  3556  001AE2  06E8               	decf	wreg,f,c
  3557  001AE4  A4D8               	btfss	status,2,c
  3558  001AE6  EF77  F00D         	goto	u5551
  3559  001AEA  EF79  F00D         	goto	u5550
  3560  001AEE                     u5551:
  3561  001AEE  EF82  F00D         	goto	l5674
  3562  001AF2                     u5550:
  3563  001AF2                     
  3564                           ;Modbus.c: 356:         {;Modbus.c: 357:             printf("CRC Checked Out. \r\n\n");
  3565  001AF2  0E88               	movlw	low STR_22
  3566  001AF4  0100               	movlb	0	; () banked
  3567  001AF6  6FC2               	movwf	printf@fmt& (0+255),b
  3568  001AF8  0EFF               	movlw	high STR_22
  3569  001AFA  6FC3               	movwf	(printf@fmt+1)& (0+255),b
  3570  001AFC  ECF1  F016         	call	_printf	;wreg free
  3571                           
  3572                           ;Modbus.c: 358:         }else{
  3573  001B00  EF89  F00D         	goto	l5676
  3574  001B04                     l5674:
  3575                           
  3576                           ;Modbus.c: 359:             printf("CRC did NOT check out. \r\n\n");
  3577  001B04  0E25               	movlw	low STR_23
  3578  001B06  0100               	movlb	0	; () banked
  3579  001B08  6FC2               	movwf	printf@fmt& (0+255),b
  3580  001B0A  0EFF               	movlw	high STR_23
  3581  001B0C  6FC3               	movwf	(printf@fmt+1)& (0+255),b
  3582  001B0E  ECF1  F016         	call	_printf	;wreg free
  3583  001B12                     l5676:
  3584                           
  3585                           ;Modbus.c: 363:         return 1;
  3586  001B12  0E01               	movlw	1
  3587  001B14  EF8D  F00D         	goto	l751
  3588  001B18                     l5680:
  3589                           
  3590                           ;Modbus.c: 365:     return 0;
  3591  001B18  0E00               	movlw	0
  3592  001B1A                     l751:
  3593  001B1A  0012               	return		;funcret
  3594  001B1C                     __end_of_ModbusRx:
  3595                           	opt callstack 0
  3596                           
  3597 ;; *************** function _checkCRC *****************
  3598 ;; Defined at:
  3599 ;;		line 102 in file "Modbus.c"
  3600 ;; Parameters:    Size  Location     Type
  3601 ;;		None
  3602 ;; Auto vars:     Size  Location     Type
  3603 ;;  i               2   54[BANK0 ] int 
  3604 ;;  crc             2   52[BANK0 ] unsigned int 
  3605 ;;  j               2   50[BANK0 ] int 
  3606 ;;  crcLow          2   48[BANK0 ] unsigned int 
  3607 ;;  crcHigh         2   46[BANK0 ] unsigned int 
  3608 ;; Return value:  Size  Location     Type
  3609 ;;                  1    wreg      _Bool 
  3610 ;; Registers used:
  3611 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3612 ;; Tracked objects:
  3613 ;;		On entry : 0/0
  3614 ;;		On exit  : 0/0
  3615 ;;		Unchanged: 0/0
  3616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3618 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3619 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3620 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3621 ;;Total ram usage:       15 bytes
  3622 ;; Hardware stack levels used:    1
  3623 ;; Hardware stack levels required when called:   13
  3624 ;; This function calls:
  3625 ;;		_printf
  3626 ;; This function is called by:
  3627 ;;		_ModbusRx
  3628 ;; This function uses a non-reentrant model
  3629 ;;
  3630                           
  3631                           	psect	text20
  3632  0018A6                     __ptext20:
  3633                           	opt callstack 0
  3634  0018A6                     _checkCRC:
  3635                           	opt callstack 16
  3636  0018A6                     
  3637                           ;Modbus.c: 103:   unsigned int crc = 0xFFFF;
  3638  0018A6  0100               	movlb	0	; () banked
  3639  0018A8  69D9               	setf	checkCRC@crc& (0+255),b
  3640  0018AA  69DA               	setf	(checkCRC@crc+1)& (0+255),b
  3641  0018AC                     
  3642                           ; BSR set to: 0
  3643                           ;Modbus.c: 105:   unsigned int crcLow = 0;
  3644  0018AC  0E00               	movlw	0
  3645  0018AE  6FD6               	movwf	(checkCRC@crcLow+1)& (0+255),b
  3646  0018B0  0E00               	movlw	0
  3647  0018B2  6FD5               	movwf	checkCRC@crcLow& (0+255),b
  3648                           
  3649                           ;Modbus.c: 106:   int i,j = 0;
  3650  0018B4  0E00               	movlw	0
  3651  0018B6  6FD8               	movwf	(checkCRC@j+1)& (0+255),b
  3652  0018B8  0E00               	movlw	0
  3653  0018BA  6FD7               	movwf	checkCRC@j& (0+255),b
  3654                           
  3655                           ;Modbus.c: 108:     for(i=0;i<ModDataCnt-2;i++){
  3656  0018BC  0E00               	movlw	0
  3657  0018BE  6FDC               	movwf	(checkCRC@i+1)& (0+255),b
  3658  0018C0  0E00               	movlw	0
  3659  0018C2  6FDB               	movwf	checkCRC@i& (0+255),b
  3660  0018C4  EF93  F00C         	goto	l5532
  3661  0018C8                     l5514:
  3662                           
  3663                           ; BSR set to: 0
  3664                           ;Modbus.c: 109:       crc ^= ModbusData[i];
  3665  0018C8  0E00               	movlw	low _ModbusData
  3666  0018CA  25DB               	addwf	checkCRC@i& (0+255),w,b
  3667  0018CC  6ED9               	movwf	fsr2l,c
  3668  0018CE  0E01               	movlw	high _ModbusData
  3669  0018D0  21DC               	addwfc	(checkCRC@i+1)& (0+255),w,b
  3670  0018D2  6EDA               	movwf	fsr2h,c
  3671  0018D4  50DF               	movf	indf2,w,c
  3672  0018D6  6FCE               	movwf	??_checkCRC& (0+255),b
  3673  0018D8  51CE               	movf	??_checkCRC& (0+255),w,b
  3674  0018DA  1BD9               	xorwf	checkCRC@crc& (0+255),f,b
  3675  0018DC                     
  3676                           ; BSR set to: 0
  3677                           ;Modbus.c: 110:       for(j=8; j!=0; j--){
  3678  0018DC  0E00               	movlw	0
  3679  0018DE  6FD8               	movwf	(checkCRC@j+1)& (0+255),b
  3680  0018E0  0E08               	movlw	8
  3681  0018E2  6FD7               	movwf	checkCRC@j& (0+255),b
  3682  0018E4                     l671:
  3683                           
  3684                           ; BSR set to: 0
  3685                           ;Modbus.c: 111:         if((crc & 0x0001) != 0){
  3686  0018E4  A1D9               	btfss	checkCRC@crc& (0+255),0,b
  3687  0018E6  EF77  F00C         	goto	u5341
  3688  0018EA  EF79  F00C         	goto	u5340
  3689  0018EE                     u5341:
  3690  0018EE  EF82  F00C         	goto	l5526
  3691  0018F2                     u5340:
  3692  0018F2                     
  3693                           ; BSR set to: 0
  3694                           ;Modbus.c: 112:           crc >>= 1;
  3695  0018F2  90D8               	bcf	status,0,c
  3696  0018F4  33DA               	rrcf	(checkCRC@crc+1)& (0+255),f,b
  3697  0018F6  33D9               	rrcf	checkCRC@crc& (0+255),f,b
  3698  0018F8                     
  3699                           ; BSR set to: 0
  3700                           ;Modbus.c: 113:           crc ^= 0xA001;
  3701  0018F8  0E01               	movlw	1
  3702  0018FA  1BD9               	xorwf	checkCRC@crc& (0+255),f,b
  3703  0018FC  0EA0               	movlw	160
  3704  0018FE  1BDA               	xorwf	(checkCRC@crc+1)& (0+255),f,b
  3705                           
  3706                           ;Modbus.c: 114:         }
  3707  001900  EF85  F00C         	goto	l674
  3708  001904                     l5526:
  3709                           
  3710                           ; BSR set to: 0
  3711                           ;Modbus.c: 116:           crc >>= 1;
  3712  001904  90D8               	bcf	status,0,c
  3713  001906  33DA               	rrcf	(checkCRC@crc+1)& (0+255),f,b
  3714  001908  33D9               	rrcf	checkCRC@crc& (0+255),f,b
  3715  00190A                     l674:
  3716                           
  3717                           ; BSR set to: 0
  3718                           ;Modbus.c: 118:       }
  3719  00190A  07D7               	decf	checkCRC@j& (0+255),f,b
  3720  00190C  A0D8               	btfss	status,0,c
  3721  00190E  07D8               	decf	(checkCRC@j+1)& (0+255),f,b
  3722  001910                     
  3723                           ; BSR set to: 0
  3724  001910  51D7               	movf	checkCRC@j& (0+255),w,b
  3725  001912  11D8               	iorwf	(checkCRC@j+1)& (0+255),w,b
  3726  001914  A4D8               	btfss	status,2,c
  3727  001916  EF8F  F00C         	goto	u5351
  3728  00191A  EF91  F00C         	goto	u5350
  3729  00191E                     u5351:
  3730  00191E  EF72  F00C         	goto	l671
  3731  001922                     u5350:
  3732  001922                     
  3733                           ; BSR set to: 0
  3734                           ;Modbus.c: 119:     }
  3735  001922  4BDB               	infsnz	checkCRC@i& (0+255),f,b
  3736  001924  2BDC               	incf	(checkCRC@i+1)& (0+255),f,b
  3737  001926                     l5532:
  3738                           
  3739                           ; BSR set to: 0
  3740  001926  0EFE               	movlw	254
  3741  001928  6FCE               	movwf	??_checkCRC& (0+255),b
  3742  00192A  0EFF               	movlw	255
  3743  00192C  6FCF               	movwf	(??_checkCRC+1)& (0+255),b
  3744  00192E  C096  F0D0         	movff	_ModDataCnt,??_checkCRC+2
  3745  001932  C097  F0D1         	movff	_ModDataCnt+1,??_checkCRC+3
  3746  001936  51CE               	movf	??_checkCRC& (0+255),w,b
  3747  001938  27D0               	addwf	(??_checkCRC+2)& (0+255),f,b
  3748  00193A  51CF               	movf	(??_checkCRC+1)& (0+255),w,b
  3749  00193C  23D1               	addwfc	(??_checkCRC+3)& (0+255),f,b
  3750  00193E  51D0               	movf	(??_checkCRC+2)& (0+255),w,b
  3751  001940  5DDB               	subwf	checkCRC@i& (0+255),w,b
  3752  001942  51DC               	movf	(checkCRC@i+1)& (0+255),w,b
  3753  001944  0A80               	xorlw	128
  3754  001946  6FD2               	movwf	(??_checkCRC+4)& (0+255),b
  3755  001948  51D1               	movf	(??_checkCRC+3)& (0+255),w,b
  3756  00194A  0A80               	xorlw	128
  3757  00194C  59D2               	subwfb	(??_checkCRC+4)& (0+255),w,b
  3758  00194E  A0D8               	btfss	status,0,c
  3759  001950  EFAC  F00C         	goto	u5361
  3760  001954  EFAE  F00C         	goto	u5360
  3761  001958                     u5361:
  3762  001958  EF64  F00C         	goto	l5514
  3763  00195C                     u5360:
  3764  00195C                     
  3765                           ; BSR set to: 0
  3766                           ;Modbus.c: 121:   crcHigh = (crc & 0x00FF);
  3767  00195C  51D9               	movf	checkCRC@crc& (0+255),w,b
  3768  00195E  6FD3               	movwf	checkCRC@crcHigh& (0+255),b
  3769  001960  6BD4               	clrf	(checkCRC@crcHigh+1)& (0+255),b
  3770                           
  3771                           ;Modbus.c: 122:   crcLow = (crc & 0xFF00) >>8;
  3772  001962  C0D9  F0CE         	movff	checkCRC@crc,??_checkCRC
  3773  001966  C0DA  F0CF         	movff	checkCRC@crc+1,??_checkCRC+1
  3774  00196A  C0CF  F0CE         	movff	??_checkCRC+1,??_checkCRC
  3775  00196E  6BCF               	clrf	(??_checkCRC+1)& (0+255),b
  3776  001970  51CE               	movf	??_checkCRC& (0+255),w,b
  3777  001972  6FD5               	movwf	checkCRC@crcLow& (0+255),b
  3778  001974  6BD6               	clrf	(checkCRC@crcLow+1)& (0+255),b
  3779  001976                     
  3780                           ; BSR set to: 0
  3781                           ;Modbus.c: 123:   printf("crcHigh: 0x%02x  crcLow: 0x%02x  \r\n", crcHigh, crcLow);
  3782  001976  0E85               	movlw	low STR_15
  3783  001978  6FC2               	movwf	printf@fmt& (0+255),b
  3784  00197A  0EFE               	movlw	high STR_15
  3785  00197C  6FC3               	movwf	(printf@fmt+1)& (0+255),b
  3786  00197E  C0D3  F0C4         	movff	checkCRC@crcHigh,?_printf+2
  3787  001982  C0D4  F0C5         	movff	checkCRC@crcHigh+1,?_printf+3
  3788  001986  C0D5  F0C6         	movff	checkCRC@crcLow,?_printf+4
  3789  00198A  C0D6  F0C7         	movff	checkCRC@crcLow+1,?_printf+5
  3790  00198E  ECF1  F016         	call	_printf	;wreg free
  3791  001992                     
  3792                           ;Modbus.c: 124:   if((crcHigh == ModbusData[i])&&(crcLow == ModbusData[i+1]))
  3793  001992  0E00               	movlw	low _ModbusData
  3794  001994  0100               	movlb	0	; () banked
  3795  001996  25DB               	addwf	checkCRC@i& (0+255),w,b
  3796  001998  6ED9               	movwf	fsr2l,c
  3797  00199A  0E01               	movlw	high _ModbusData
  3798  00199C  21DC               	addwfc	(checkCRC@i+1)& (0+255),w,b
  3799  00199E  6EDA               	movwf	fsr2h,c
  3800  0019A0  50DF               	movf	indf2,w,c
  3801  0019A2  6FCE               	movwf	??_checkCRC& (0+255),b
  3802  0019A4  6BCF               	clrf	(??_checkCRC+1)& (0+255),b
  3803  0019A6  51D3               	movf	checkCRC@crcHigh& (0+255),w,b
  3804  0019A8  19CE               	xorwf	??_checkCRC& (0+255),w,b
  3805  0019AA  E107               	bnz	u5371
  3806  0019AC  51D4               	movf	(checkCRC@crcHigh+1)& (0+255),w,b
  3807  0019AE  19CF               	xorwf	(??_checkCRC+1)& (0+255),w,b
  3808  0019B0  A4D8               	btfss	status,2,c
  3809  0019B2  EFDD  F00C         	goto	u5371
  3810  0019B6  EFDF  F00C         	goto	u5370
  3811  0019BA                     u5371:
  3812  0019BA  EFF7  F00C         	goto	l5548
  3813  0019BE                     u5370:
  3814  0019BE                     
  3815                           ; BSR set to: 0
  3816  0019BE  0E01               	movlw	low (_ModbusData+1)
  3817  0019C0  25DB               	addwf	checkCRC@i& (0+255),w,b
  3818  0019C2  6ED9               	movwf	fsr2l,c
  3819  0019C4  0E01               	movlw	high (_ModbusData+1)
  3820  0019C6  21DC               	addwfc	(checkCRC@i+1)& (0+255),w,b
  3821  0019C8  6EDA               	movwf	fsr2h,c
  3822  0019CA  50DF               	movf	indf2,w,c
  3823  0019CC  6FCE               	movwf	??_checkCRC& (0+255),b
  3824  0019CE  6BCF               	clrf	(??_checkCRC+1)& (0+255),b
  3825  0019D0  51D5               	movf	checkCRC@crcLow& (0+255),w,b
  3826  0019D2  19CE               	xorwf	??_checkCRC& (0+255),w,b
  3827  0019D4  E107               	bnz	u5381
  3828  0019D6  51D6               	movf	(checkCRC@crcLow+1)& (0+255),w,b
  3829  0019D8  19CF               	xorwf	(??_checkCRC+1)& (0+255),w,b
  3830  0019DA  A4D8               	btfss	status,2,c
  3831  0019DC  EFF2  F00C         	goto	u5381
  3832  0019E0  EFF4  F00C         	goto	u5380
  3833  0019E4                     u5381:
  3834  0019E4  EFF7  F00C         	goto	l5548
  3835  0019E8                     u5380:
  3836  0019E8                     
  3837                           ; BSR set to: 0
  3838                           ;Modbus.c: 125:   {;Modbus.c: 126:     return 1;
  3839  0019E8  0E01               	movlw	1
  3840  0019EA  EFF8  F00C         	goto	l677
  3841  0019EE                     l5548:
  3842                           
  3843                           ; BSR set to: 0
  3844                           ;Modbus.c: 129:     return 0;
  3845  0019EE  0E00               	movlw	0
  3846  0019F0                     l677:
  3847                           
  3848                           ; BSR set to: 0
  3849  0019F0  0012               	return		;funcret
  3850  0019F2                     __end_of_checkCRC:
  3851                           	opt callstack 0
  3852                           
  3853 ;; *************** function _RXMode *****************
  3854 ;; Defined at:
  3855 ;;		line 50 in file "Modbus.c"
  3856 ;; Parameters:    Size  Location     Type
  3857 ;;		None
  3858 ;; Auto vars:     Size  Location     Type
  3859 ;;		None
  3860 ;; Return value:  Size  Location     Type
  3861 ;;                  1    wreg      void 
  3862 ;; Registers used:
  3863 ;;		None
  3864 ;; Tracked objects:
  3865 ;;		On entry : 0/0
  3866 ;;		On exit  : 0/0
  3867 ;;		Unchanged: 0/0
  3868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3873 ;;Total ram usage:        0 bytes
  3874 ;; Hardware stack levels used:    1
  3875 ;; Hardware stack levels required when called:    4
  3876 ;; This function calls:
  3877 ;;		Nothing
  3878 ;; This function is called by:
  3879 ;;		_main
  3880 ;;		_ModbusRx
  3881 ;; This function uses a non-reentrant model
  3882 ;;
  3883                           
  3884                           	psect	text21
  3885  002F46                     __ptext21:
  3886                           	opt callstack 0
  3887  002F46                     _RXMode:
  3888                           	opt callstack 26
  3889  002F46  9086               	bcf	134,0,c	;volatile
  3890  002F48  9683               	bcf	131,3,c	;volatile
  3891  002F4A  0012               	return		;funcret
  3892  002F4C                     __end_of_RXMode:
  3893                           	opt callstack 0
  3894                           
  3895 ;; *************** function _EUSART1_is_rx_ready *****************
  3896 ;; Defined at:
  3897 ;;		line 137 in file "mcc_generated_files/eusart1.c"
  3898 ;; Parameters:    Size  Location     Type
  3899 ;;		None
  3900 ;; Auto vars:     Size  Location     Type
  3901 ;;		None
  3902 ;; Return value:  Size  Location     Type
  3903 ;;                  1    wreg      _Bool 
  3904 ;; Registers used:
  3905 ;;		wreg, status,2
  3906 ;; Tracked objects:
  3907 ;;		On entry : 0/0
  3908 ;;		On exit  : 0/0
  3909 ;;		Unchanged: 0/0
  3910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3915 ;;Total ram usage:        0 bytes
  3916 ;; Hardware stack levels used:    1
  3917 ;; Hardware stack levels required when called:    4
  3918 ;; This function calls:
  3919 ;;		Nothing
  3920 ;; This function is called by:
  3921 ;;		_ModbusRx
  3922 ;; This function uses a non-reentrant model
  3923 ;;
  3924                           
  3925                           	psect	text22
  3926  002E7E                     __ptext22:
  3927                           	opt callstack 0
  3928  002E7E                     _EUSART1_is_rx_ready:
  3929                           	opt callstack 25
  3930  002E7E                     
  3931                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
  3932  002E7E  0100               	movlb	0	; () banked
  3933  002E80  519C               	movf	_eusart1RxCount& (0+255),w,b	;volatile
  3934  002E82  A4D8               	btfss	status,2,c
  3935  002E84  EF46  F017         	goto	u5251
  3936  002E88  EF49  F017         	goto	u5250
  3937  002E8C                     u5251:
  3938  002E8C  0E01               	movlw	1
  3939  002E8E  EF4A  F017         	goto	u5260
  3940  002E92                     u5250:
  3941  002E92  0E00               	movlw	0
  3942  002E94                     u5260:
  3943  002E94                     
  3944                           ; BSR set to: 0
  3945  002E94  0012               	return		;funcret
  3946  002E96                     __end_of_EUSART1_is_rx_ready:
  3947                           	opt callstack 0
  3948                           
  3949 ;; *************** function _EUSART1_Read *****************
  3950 ;; Defined at:
  3951 ;;		line 151 in file "mcc_generated_files/eusart1.c"
  3952 ;; Parameters:    Size  Location     Type
  3953 ;;		None
  3954 ;; Auto vars:     Size  Location     Type
  3955 ;;  readValue       1    4[COMRAM] unsigned char 
  3956 ;; Return value:  Size  Location     Type
  3957 ;;                  1    wreg      unsigned char 
  3958 ;; Registers used:
  3959 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3960 ;; Tracked objects:
  3961 ;;		On entry : 0/0
  3962 ;;		On exit  : 0/0
  3963 ;;		Unchanged: 0/0
  3964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3966 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3968 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3969 ;;Total ram usage:        1 bytes
  3970 ;; Hardware stack levels used:    1
  3971 ;; Hardware stack levels required when called:    4
  3972 ;; This function calls:
  3973 ;;		Nothing
  3974 ;; This function is called by:
  3975 ;;		_ModbusRx
  3976 ;; This function uses a non-reentrant model
  3977 ;;
  3978                           
  3979                           	psect	text23
  3980  00297A                     __ptext23:
  3981                           	opt callstack 0
  3982  00297A                     _EUSART1_Read:
  3983                           	opt callstack 25
  3984  00297A                     l5446:
  3985                           
  3986                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
  3987  00297A  0100               	movlb	0	; () banked
  3988  00297C  519C               	movf	_eusart1RxCount& (0+255),w,b	;volatile
  3989  00297E  B4D8               	btfsc	status,2,c
  3990  002980  EFC4  F014         	goto	u5271
  3991  002984  EFC6  F014         	goto	u5270
  3992  002988                     u5271:
  3993  002988  EFBD  F014         	goto	l5446
  3994  00298C                     u5270:
  3995  00298C                     
  3996                           ; BSR set to: 0
  3997                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
  3998  00298C  0E80               	movlw	low _eusart1RxStatusBuffer
  3999  00298E  259D               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
  4000  002990  6ED9               	movwf	fsr2l,c
  4001  002992  6ADA               	clrf	fsr2h,c
  4002  002994  0E02               	movlw	high _eusart1RxStatusBuffer
  4003  002996  22DA               	addwfc	fsr2h,f,c
  4004  002998  50DF               	movf	indf2,w,c
  4005  00299A  6F9B               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  4006                           
  4007                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
  4008  00299C  0E64               	movlw	low _eusart1RxBuffer
  4009  00299E  259D               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
  4010  0029A0  6ED9               	movwf	fsr2l,c
  4011  0029A2  6ADA               	clrf	fsr2h,c
  4012  0029A4  0E03               	movlw	high _eusart1RxBuffer
  4013  0029A6  22DA               	addwfc	fsr2h,f,c
  4014  0029A8  50DF               	movf	indf2,w,c
  4015  0029AA  6E05               	movwf	EUSART1_Read@readValue^0,c
  4016  0029AC                     
  4017                           ; BSR set to: 0
  4018  0029AC  2B9D               	incf	_eusart1RxTail& (0+255),f,b	;volatile
  4019  0029AE                     
  4020                           ; BSR set to: 0
  4021                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
  4022  0029AE  0E63               	movlw	99
  4023  0029B0  659D               	cpfsgt	_eusart1RxTail& (0+255),b	;volatile
  4024  0029B2  EFDD  F014         	goto	u5281
  4025  0029B6  EFDF  F014         	goto	u5280
  4026  0029BA                     u5281:
  4027  0029BA  EFE1  F014         	goto	l5456
  4028  0029BE                     u5280:
  4029  0029BE                     
  4030                           ; BSR set to: 0
  4031                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
  4032  0029BE  0E00               	movlw	0
  4033  0029C0  6F9D               	movwf	_eusart1RxTail& (0+255),b	;volatile
  4034  0029C2                     l5456:
  4035                           
  4036                           ; BSR set to: 0
  4037                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
  4038  0029C2  010E               	movlb	14	; () banked
  4039  0029C4  9BC5               	bcf	197,5,b	;volatile
  4040  0029C6                     
  4041                           ; BSR set to: 14
  4042                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
  4043  0029C6  0100               	movlb	0	; () banked
  4044  0029C8  079C               	decf	_eusart1RxCount& (0+255),f,b	;volatile
  4045  0029CA                     
  4046                           ; BSR set to: 0
  4047                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
  4048  0029CA  010E               	movlb	14	; () banked
  4049  0029CC  8BC5               	bsf	197,5,b	;volatile
  4050  0029CE                     
  4051                           ; BSR set to: 14
  4052                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
  4053  0029CE  5005               	movf	EUSART1_Read@readValue^0,w,c
  4054  0029D0                     
  4055                           ; BSR set to: 14
  4056  0029D0  0012               	return		;funcret
  4057  0029D2                     __end_of_EUSART1_Read:
  4058                           	opt callstack 0
  4059                           
  4060 ;; *************** function _ClearRxBuff *****************
  4061 ;; Defined at:
  4062 ;;		line 66 in file "Modbus.c"
  4063 ;; Parameters:    Size  Location     Type
  4064 ;;		None
  4065 ;; Auto vars:     Size  Location     Type
  4066 ;;  i               2    5[COMRAM] int 
  4067 ;; Return value:  Size  Location     Type
  4068 ;;                  1    wreg      void 
  4069 ;; Registers used:
  4070 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4071 ;; Tracked objects:
  4072 ;;		On entry : 0/0
  4073 ;;		On exit  : 0/0
  4074 ;;		Unchanged: 0/0
  4075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4077 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4078 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4079 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4080 ;;Total ram usage:        3 bytes
  4081 ;; Hardware stack levels used:    1
  4082 ;; Hardware stack levels required when called:    4
  4083 ;; This function calls:
  4084 ;;		Nothing
  4085 ;; This function is called by:
  4086 ;;		_main
  4087 ;;		_ModbusRx
  4088 ;; This function uses a non-reentrant model
  4089 ;;
  4090                           
  4091                           	psect	text24
  4092  002B0C                     __ptext24:
  4093                           	opt callstack 0
  4094  002B0C                     _ClearRxBuff:
  4095                           	opt callstack 25
  4096  002B0C                     
  4097                           ;Modbus.c: 68:     int i = 0;
  4098  002B0C  0E00               	movlw	0
  4099  002B0E  6E07               	movwf	(ClearRxBuff@i+1)^0,c
  4100  002B10  0E00               	movlw	0
  4101  002B12  6E06               	movwf	ClearRxBuff@i^0,c
  4102                           
  4103                           ;Modbus.c: 69:     for(i=0; i<ByteNum; i++ ){
  4104  002B14  0E00               	movlw	0
  4105  002B16  6E07               	movwf	(ClearRxBuff@i+1)^0,c
  4106  002B18  0E00               	movlw	0
  4107  002B1A  6E06               	movwf	ClearRxBuff@i^0,c
  4108  002B1C  EF9A  F015         	goto	l5472
  4109  002B20                     l5468:
  4110                           
  4111                           ; BSR set to: 0
  4112                           ;Modbus.c: 70:         rxData[i] = 0xFF;
  4113  002B20  0E00               	movlw	low _rxData
  4114  002B22  2406               	addwf	ClearRxBuff@i^0,w,c
  4115  002B24  6ED9               	movwf	fsr2l,c
  4116  002B26  0E03               	movlw	high _rxData
  4117  002B28  2007               	addwfc	(ClearRxBuff@i+1)^0,w,c
  4118  002B2A  6EDA               	movwf	fsr2h,c
  4119  002B2C  0EFF               	movlw	255
  4120  002B2E  6EDF               	movwf	indf2,c
  4121  002B30                     
  4122                           ; BSR set to: 0
  4123                           ;Modbus.c: 71:     }
  4124  002B30  4A06               	infsnz	ClearRxBuff@i^0,f,c
  4125  002B32  2A07               	incf	(ClearRxBuff@i+1)^0,f,c
  4126  002B34                     l5472:
  4127  002B34  0100               	movlb	0	; () banked
  4128  002B36  5192               	movf	_ByteNum& (0+255),w,b
  4129  002B38  5C06               	subwf	ClearRxBuff@i^0,w,c
  4130  002B3A  5007               	movf	(ClearRxBuff@i+1)^0,w,c
  4131  002B3C  0A80               	xorlw	128
  4132  002B3E  6E05               	movwf	??_ClearRxBuff^0,c
  4133  002B40  5193               	movf	(_ByteNum+1)& (0+255),w,b
  4134  002B42  0A80               	xorlw	128
  4135  002B44  5805               	subwfb	??_ClearRxBuff^0,w,c
  4136  002B46  A0D8               	btfss	status,0,c
  4137  002B48  EFA8  F015         	goto	u5291
  4138  002B4C  EFAA  F015         	goto	u5290
  4139  002B50                     u5291:
  4140  002B50  EF90  F015         	goto	l5468
  4141  002B54                     u5290:
  4142  002B54                     
  4143                           ; BSR set to: 0
  4144  002B54  0012               	return		;funcret
  4145  002B56                     __end_of_ClearRxBuff:
  4146                           	opt callstack 0
  4147                           
  4148 ;; *************** function _AddRxBuffToModBus *****************
  4149 ;; Defined at:
  4150 ;;		line 75 in file "Modbus.c"
  4151 ;; Parameters:    Size  Location     Type
  4152 ;;		None
  4153 ;; Auto vars:     Size  Location     Type
  4154 ;;  i               2    5[COMRAM] int 
  4155 ;; Return value:  Size  Location     Type
  4156 ;;                  1    wreg      void 
  4157 ;; Registers used:
  4158 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4159 ;; Tracked objects:
  4160 ;;		On entry : 0/0
  4161 ;;		On exit  : 0/0
  4162 ;;		Unchanged: 0/0
  4163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4165 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4166 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4167 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4168 ;;Total ram usage:        3 bytes
  4169 ;; Hardware stack levels used:    1
  4170 ;; Hardware stack levels required when called:    4
  4171 ;; This function calls:
  4172 ;;		Nothing
  4173 ;; This function is called by:
  4174 ;;		_ModbusRx
  4175 ;; This function uses a non-reentrant model
  4176 ;;
  4177                           
  4178                           	psect	text25
  4179  002272                     __ptext25:
  4180                           	opt callstack 0
  4181  002272                     _AddRxBuffToModBus:
  4182                           	opt callstack 25
  4183  002272                     
  4184                           ;Modbus.c: 79:     int i = 0;
  4185  002272  0E00               	movlw	0
  4186  002274  6E07               	movwf	(AddRxBuffToModBus@i+1)^0,c
  4187  002276  0E00               	movlw	0
  4188  002278  6E06               	movwf	AddRxBuffToModBus@i^0,c
  4189                           
  4190                           ;Modbus.c: 81:     for(i=0l; i<ByteNum; i++){
  4191  00227A  0E00               	movlw	0
  4192  00227C  6E07               	movwf	(AddRxBuffToModBus@i+1)^0,c
  4193  00227E  0E00               	movlw	0
  4194  002280  6E06               	movwf	AddRxBuffToModBus@i^0,c
  4195  002282  EF55  F011         	goto	l5498
  4196  002286                     l5492:
  4197                           
  4198                           ; BSR set to: 0
  4199                           ;Modbus.c: 82:         ModbusData[ModDataCnt] = rxData[i];
  4200  002286  0E00               	movlw	low _rxData
  4201  002288  2406               	addwf	AddRxBuffToModBus@i^0,w,c
  4202  00228A  6ED9               	movwf	fsr2l,c
  4203  00228C  0E03               	movlw	high _rxData
  4204  00228E  2007               	addwfc	(AddRxBuffToModBus@i+1)^0,w,c
  4205  002290  6EDA               	movwf	fsr2h,c
  4206  002292  0E00               	movlw	low _ModbusData
  4207  002294  2596               	addwf	_ModDataCnt& (0+255),w,b
  4208  002296  6EE1               	movwf	fsr1l,c
  4209  002298  0E01               	movlw	high _ModbusData
  4210  00229A  2197               	addwfc	(_ModDataCnt+1)& (0+255),w,b
  4211  00229C  6EE2               	movwf	fsr1h,c
  4212  00229E  CFDF FFE7          	movff	indf2,indf1
  4213  0022A2                     
  4214                           ; BSR set to: 0
  4215                           ;Modbus.c: 83:         ModDataCnt++;
  4216  0022A2  4B96               	infsnz	_ModDataCnt& (0+255),f,b
  4217  0022A4  2B97               	incf	(_ModDataCnt+1)& (0+255),f,b
  4218  0022A6                     
  4219                           ; BSR set to: 0
  4220                           ;Modbus.c: 84:     }
  4221  0022A6  4A06               	infsnz	AddRxBuffToModBus@i^0,f,c
  4222  0022A8  2A07               	incf	(AddRxBuffToModBus@i+1)^0,f,c
  4223  0022AA                     l5498:
  4224  0022AA  0100               	movlb	0	; () banked
  4225  0022AC  5192               	movf	_ByteNum& (0+255),w,b
  4226  0022AE  5C06               	subwf	AddRxBuffToModBus@i^0,w,c
  4227  0022B0  5007               	movf	(AddRxBuffToModBus@i+1)^0,w,c
  4228  0022B2  0A80               	xorlw	128
  4229  0022B4  6E05               	movwf	??_AddRxBuffToModBus^0,c
  4230  0022B6  5193               	movf	(_ByteNum+1)& (0+255),w,b
  4231  0022B8  0A80               	xorlw	128
  4232  0022BA  5805               	subwfb	??_AddRxBuffToModBus^0,w,c
  4233  0022BC  A0D8               	btfss	status,0,c
  4234  0022BE  EF63  F011         	goto	u5311
  4235  0022C2  EF65  F011         	goto	u5310
  4236  0022C6                     u5311:
  4237  0022C6  EF43  F011         	goto	l5492
  4238  0022CA                     u5310:
  4239  0022CA                     
  4240                           ; BSR set to: 0
  4241                           ;Modbus.c: 89:     if(ModbusData[1] == 0x0F){
  4242  0022CA  0E0F               	movlw	15
  4243  0022CC  0101               	movlb	1	; () banked
  4244  0022CE  1901               	xorwf	(_ModbusData+1)& (0+255),w,b
  4245  0022D0  A4D8               	btfss	status,2,c
  4246  0022D2  EF6D  F011         	goto	u5321
  4247  0022D6  EF6F  F011         	goto	u5320
  4248  0022DA                     u5321:
  4249  0022DA  EF78  F011         	goto	l5504
  4250  0022DE                     u5320:
  4251  0022DE                     l5502:
  4252                           
  4253                           ; BSR set to: 1
  4254                           ;Modbus.c: 90:         ExpectedBytes = ModbusData[6] + 9;
  4255  0022DE  0E09               	movlw	9
  4256  0022E0  2506               	addwf	(_ModbusData+6)& (0+255),w,b
  4257  0022E2  0100               	movlb	0	; () banked
  4258  0022E4  6FFE               	movwf	_ExpectedBytes& (0+255),b
  4259  0022E6  6BFF               	clrf	(_ExpectedBytes+1)& (0+255),b
  4260  0022E8  0E00               	movlw	0
  4261  0022EA  23FF               	addwfc	(_ExpectedBytes+1)& (0+255),f,b
  4262                           
  4263                           ;Modbus.c: 91:     }else if (ModbusData[1] == 0x10){
  4264  0022EC  EF88  F011         	goto	l666
  4265  0022F0                     l5504:
  4266                           
  4267                           ; BSR set to: 1
  4268  0022F0  0E10               	movlw	16
  4269  0022F2  1901               	xorwf	(_ModbusData+1)& (0+255),w,b
  4270  0022F4  A4D8               	btfss	status,2,c
  4271  0022F6  EF7F  F011         	goto	u5331
  4272  0022FA  EF81  F011         	goto	u5330
  4273  0022FE                     u5331:
  4274  0022FE  EF83  F011         	goto	l5508
  4275  002302                     u5330:
  4276  002302  EF6F  F011         	goto	l5502
  4277  002306                     l5508:
  4278                           
  4279                           ; BSR set to: 1
  4280                           ;Modbus.c: 94:         ExpectedBytes = 8;
  4281  002306  0E00               	movlw	0
  4282  002308  0100               	movlb	0	; () banked
  4283  00230A  6FFF               	movwf	(_ExpectedBytes+1)& (0+255),b
  4284  00230C  0E08               	movlw	8
  4285  00230E  6FFE               	movwf	_ExpectedBytes& (0+255),b
  4286  002310                     l666:
  4287                           
  4288                           ; BSR set to: 0
  4289  002310  0012               	return		;funcret
  4290  002312                     __end_of_AddRxBuffToModBus:
  4291                           	opt callstack 0
  4292                           
  4293 ;; *************** function _ModbusFC10 *****************
  4294 ;; Defined at:
  4295 ;;		line 173 in file "Modbus.c"
  4296 ;; Parameters:    Size  Location     Type
  4297 ;;		None
  4298 ;; Auto vars:     Size  Location     Type
  4299 ;;  j               2   51[BANK0 ] int 
  4300 ;;  i               2   49[BANK0 ] int 
  4301 ;;  TempData        2   47[BANK0 ] unsigned int 
  4302 ;; Return value:  Size  Location     Type
  4303 ;;                  1    wreg      void 
  4304 ;; Registers used:
  4305 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4306 ;; Tracked objects:
  4307 ;;		On entry : 0/0
  4308 ;;		On exit  : 0/0
  4309 ;;		Unchanged: 0/0
  4310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4312 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4313 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4314 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4315 ;;Total ram usage:       10 bytes
  4316 ;; Hardware stack levels used:    1
  4317 ;; Hardware stack levels required when called:   14
  4318 ;; This function calls:
  4319 ;;		_PrintMB400
  4320 ;;		_PrintModRespon
  4321 ;;		_UART1_Write_string
  4322 ;;		_generateCRC
  4323 ;; This function is called by:
  4324 ;;		_main
  4325 ;; This function uses a non-reentrant model
  4326 ;;
  4327                           
  4328                           	psect	text26
  4329  000C6A                     __ptext26:
  4330                           	opt callstack 0
  4331  000C6A                     _ModbusFC10:
  4332                           	opt callstack 16
  4333  000C6A                     
  4334                           ;Modbus.c: 178:     int j = 0;
  4335  000C6A  0E00               	movlw	0
  4336  000C6C  0100               	movlb	0	; () banked
  4337  000C6E  6FD9               	movwf	(ModbusFC10@j+1)& (0+255),b
  4338  000C70  0E00               	movlw	0
  4339  000C72  6FD8               	movwf	ModbusFC10@j& (0+255),b
  4340                           
  4341                           ;Modbus.c: 179:     unsigned int TempData = 0x0000;
  4342  000C74  0E00               	movlw	0
  4343  000C76  6FD5               	movwf	(ModbusFC10@TempData+1)& (0+255),b
  4344  000C78  0E00               	movlw	0
  4345  000C7A  6FD4               	movwf	ModbusFC10@TempData& (0+255),b
  4346                           
  4347                           ;Modbus.c: 181:     MBResCnt = 0;
  4348  000C7C  0E00               	movlw	0
  4349  000C7E  6F91               	movwf	(_MBResCnt+1)& (0+255),b
  4350  000C80  0E00               	movlw	0
  4351  000C82  6F90               	movwf	_MBResCnt& (0+255),b
  4352  000C84                     
  4353                           ; BSR set to: 0
  4354                           ;Modbus.c: 182:     MBRespon[MBResCnt] = ModbusData[0];
  4355  000C84  0101               	movlb	1	; () banked
  4356  000C86  5100               	movf	_ModbusData& (0+255),w,b
  4357  000C88  0100               	movlb	0	; () banked
  4358  000C8A  6FD0               	movwf	??_ModbusFC10& (0+255),b
  4359  000C8C  6BD1               	clrf	(??_ModbusFC10+1)& (0+255),b
  4360  000C8E  90D8               	bcf	status,0,c
  4361  000C90  3590               	rlcf	_MBResCnt& (0+255),w,b
  4362  000C92  6ED9               	movwf	fsr2l,c
  4363  000C94  3591               	rlcf	(_MBResCnt+1)& (0+255),w,b
  4364  000C96  6EDA               	movwf	fsr2h,c
  4365  000C98  0E84               	movlw	low _MBRespon
  4366  000C9A  26D9               	addwf	fsr2l,f,c
  4367  000C9C  0E01               	movlw	high _MBRespon
  4368  000C9E  22DA               	addwfc	fsr2h,f,c
  4369  000CA0  C0D0  FFDE         	movff	??_ModbusFC10,postinc2
  4370  000CA4  C0D1  FFDD         	movff	??_ModbusFC10+1,postdec2
  4371  000CA8                     
  4372                           ; BSR set to: 0
  4373                           ;Modbus.c: 183:     MBResCnt++;
  4374  000CA8  4B90               	infsnz	_MBResCnt& (0+255),f,b
  4375  000CAA  2B91               	incf	(_MBResCnt+1)& (0+255),f,b
  4376  000CAC                     
  4377                           ; BSR set to: 0
  4378                           ;Modbus.c: 184:     MBRespon[MBResCnt] = ModbusData[1];
  4379  000CAC  0101               	movlb	1	; () banked
  4380  000CAE  5101               	movf	(_ModbusData+1)& (0+255),w,b
  4381  000CB0  0100               	movlb	0	; () banked
  4382  000CB2  6FD0               	movwf	??_ModbusFC10& (0+255),b
  4383  000CB4  6BD1               	clrf	(??_ModbusFC10+1)& (0+255),b
  4384  000CB6  90D8               	bcf	status,0,c
  4385  000CB8  3590               	rlcf	_MBResCnt& (0+255),w,b
  4386  000CBA  6ED9               	movwf	fsr2l,c
  4387  000CBC  3591               	rlcf	(_MBResCnt+1)& (0+255),w,b
  4388  000CBE  6EDA               	movwf	fsr2h,c
  4389  000CC0  0E84               	movlw	low _MBRespon
  4390  000CC2  26D9               	addwf	fsr2l,f,c
  4391  000CC4  0E01               	movlw	high _MBRespon
  4392  000CC6  22DA               	addwfc	fsr2h,f,c
  4393  000CC8  C0D0  FFDE         	movff	??_ModbusFC10,postinc2
  4394  000CCC  C0D1  FFDD         	movff	??_ModbusFC10+1,postdec2
  4395  000CD0                     
  4396                           ; BSR set to: 0
  4397                           ;Modbus.c: 185:     MBResCnt++;
  4398  000CD0  4B90               	infsnz	_MBResCnt& (0+255),f,b
  4399  000CD2  2B91               	incf	(_MBResCnt+1)& (0+255),f,b
  4400  000CD4                     
  4401                           ; BSR set to: 0
  4402                           ;Modbus.c: 186:     MBRespon[MBResCnt] = ModbusData[2];
  4403  000CD4  0101               	movlb	1	; () banked
  4404  000CD6  5102               	movf	(_ModbusData+2)& (0+255),w,b
  4405  000CD8  0100               	movlb	0	; () banked
  4406  000CDA  6FD0               	movwf	??_ModbusFC10& (0+255),b
  4407  000CDC  6BD1               	clrf	(??_ModbusFC10+1)& (0+255),b
  4408  000CDE  90D8               	bcf	status,0,c
  4409  000CE0  3590               	rlcf	_MBResCnt& (0+255),w,b
  4410  000CE2  6ED9               	movwf	fsr2l,c
  4411  000CE4  3591               	rlcf	(_MBResCnt+1)& (0+255),w,b
  4412  000CE6  6EDA               	movwf	fsr2h,c
  4413  000CE8  0E84               	movlw	low _MBRespon
  4414  000CEA  26D9               	addwf	fsr2l,f,c
  4415  000CEC  0E01               	movlw	high _MBRespon
  4416  000CEE  22DA               	addwfc	fsr2h,f,c
  4417  000CF0  C0D0  FFDE         	movff	??_ModbusFC10,postinc2
  4418  000CF4  C0D1  FFDD         	movff	??_ModbusFC10+1,postdec2
  4419  000CF8                     
  4420                           ; BSR set to: 0
  4421                           ;Modbus.c: 187:     MBResCnt++;
  4422  000CF8  4B90               	infsnz	_MBResCnt& (0+255),f,b
  4423  000CFA  2B91               	incf	(_MBResCnt+1)& (0+255),f,b
  4424  000CFC                     
  4425                           ; BSR set to: 0
  4426                           ;Modbus.c: 188:     MBRespon[MBResCnt] = ModbusData[3];
  4427  000CFC  0101               	movlb	1	; () banked
  4428  000CFE  5103               	movf	(_ModbusData+3)& (0+255),w,b
  4429  000D00  0100               	movlb	0	; () banked
  4430  000D02  6FD0               	movwf	??_ModbusFC10& (0+255),b
  4431  000D04  6BD1               	clrf	(??_ModbusFC10+1)& (0+255),b
  4432  000D06  90D8               	bcf	status,0,c
  4433  000D08  3590               	rlcf	_MBResCnt& (0+255),w,b
  4434  000D0A  6ED9               	movwf	fsr2l,c
  4435  000D0C  3591               	rlcf	(_MBResCnt+1)& (0+255),w,b
  4436  000D0E  6EDA               	movwf	fsr2h,c
  4437  000D10  0E84               	movlw	low _MBRespon
  4438  000D12  26D9               	addwf	fsr2l,f,c
  4439  000D14  0E01               	movlw	high _MBRespon
  4440  000D16  22DA               	addwfc	fsr2h,f,c
  4441  000D18  C0D0  FFDE         	movff	??_ModbusFC10,postinc2
  4442  000D1C  C0D1  FFDD         	movff	??_ModbusFC10+1,postdec2
  4443  000D20                     
  4444                           ; BSR set to: 0
  4445                           ;Modbus.c: 189:     MBResCnt++;
  4446  000D20  4B90               	infsnz	_MBResCnt& (0+255),f,b
  4447  000D22  2B91               	incf	(_MBResCnt+1)& (0+255),f,b
  4448  000D24                     
  4449                           ; BSR set to: 0
  4450                           ;Modbus.c: 190:     MBRespon[MBResCnt] = ModbusData[4];
  4451  000D24  0101               	movlb	1	; () banked
  4452  000D26  5104               	movf	(_ModbusData+4)& (0+255),w,b
  4453  000D28  0100               	movlb	0	; () banked
  4454  000D2A  6FD0               	movwf	??_ModbusFC10& (0+255),b
  4455  000D2C  6BD1               	clrf	(??_ModbusFC10+1)& (0+255),b
  4456  000D2E  90D8               	bcf	status,0,c
  4457  000D30  3590               	rlcf	_MBResCnt& (0+255),w,b
  4458  000D32  6ED9               	movwf	fsr2l,c
  4459  000D34  3591               	rlcf	(_MBResCnt+1)& (0+255),w,b
  4460  000D36  6EDA               	movwf	fsr2h,c
  4461  000D38  0E84               	movlw	low _MBRespon
  4462  000D3A  26D9               	addwf	fsr2l,f,c
  4463  000D3C  0E01               	movlw	high _MBRespon
  4464  000D3E  22DA               	addwfc	fsr2h,f,c
  4465  000D40  C0D0  FFDE         	movff	??_ModbusFC10,postinc2
  4466  000D44  C0D1  FFDD         	movff	??_ModbusFC10+1,postdec2
  4467  000D48                     
  4468                           ; BSR set to: 0
  4469                           ;Modbus.c: 191:     MBResCnt++;
  4470  000D48  4B90               	infsnz	_MBResCnt& (0+255),f,b
  4471  000D4A  2B91               	incf	(_MBResCnt+1)& (0+255),f,b
  4472  000D4C                     
  4473                           ; BSR set to: 0
  4474                           ;Modbus.c: 192:     MBRespon[MBResCnt] = ModbusData[5];
  4475  000D4C  0101               	movlb	1	; () banked
  4476  000D4E  5105               	movf	(_ModbusData+5)& (0+255),w,b
  4477  000D50  0100               	movlb	0	; () banked
  4478  000D52  6FD0               	movwf	??_ModbusFC10& (0+255),b
  4479  000D54  6BD1               	clrf	(??_ModbusFC10+1)& (0+255),b
  4480  000D56  90D8               	bcf	status,0,c
  4481  000D58  3590               	rlcf	_MBResCnt& (0+255),w,b
  4482  000D5A  6ED9               	movwf	fsr2l,c
  4483  000D5C  3591               	rlcf	(_MBResCnt+1)& (0+255),w,b
  4484  000D5E  6EDA               	movwf	fsr2h,c
  4485  000D60  0E84               	movlw	low _MBRespon
  4486  000D62  26D9               	addwf	fsr2l,f,c
  4487  000D64  0E01               	movlw	high _MBRespon
  4488  000D66  22DA               	addwfc	fsr2h,f,c
  4489  000D68  C0D0  FFDE         	movff	??_ModbusFC10,postinc2
  4490  000D6C  C0D1  FFDD         	movff	??_ModbusFC10+1,postdec2
  4491  000D70                     
  4492                           ; BSR set to: 0
  4493                           ;Modbus.c: 193:     MBResCnt++;
  4494  000D70  4B90               	infsnz	_MBResCnt& (0+255),f,b
  4495  000D72  2B91               	incf	(_MBResCnt+1)& (0+255),f,b
  4496                           
  4497                           ;Modbus.c: 195:     for(i=0; i< (ModbusData[5]) ; i++ ){
  4498  000D74  0E00               	movlw	0
  4499  000D76  6FD7               	movwf	(ModbusFC10@i+1)& (0+255),b
  4500  000D78  0E00               	movlw	0
  4501  000D7A  6FD6               	movwf	ModbusFC10@i& (0+255),b
  4502  000D7C  EFF6  F006         	goto	l5782
  4503  000D80                     l5774:
  4504                           
  4505                           ; BSR set to: 0
  4506                           ;Modbus.c: 202:         TempData = ModbusData[7 +j] *256 + ModbusData[8 +j];
  4507  000D80  0E08               	movlw	low (_ModbusData+8)
  4508  000D82  25D8               	addwf	ModbusFC10@j& (0+255),w,b
  4509  000D84  6ED9               	movwf	fsr2l,c
  4510  000D86  0E01               	movlw	high (_ModbusData+8)
  4511  000D88  21D9               	addwfc	(ModbusFC10@j+1)& (0+255),w,b
  4512  000D8A  6EDA               	movwf	fsr2h,c
  4513  000D8C  50DF               	movf	indf2,w,c
  4514  000D8E  6FD0               	movwf	??_ModbusFC10& (0+255),b
  4515  000D90  0E07               	movlw	low (_ModbusData+7)
  4516  000D92  25D8               	addwf	ModbusFC10@j& (0+255),w,b
  4517  000D94  6ED9               	movwf	fsr2l,c
  4518  000D96  0E01               	movlw	high (_ModbusData+7)
  4519  000D98  21D9               	addwfc	(ModbusFC10@j+1)& (0+255),w,b
  4520  000D9A  6EDA               	movwf	fsr2h,c
  4521  000D9C  50DF               	movf	indf2,w,c
  4522  000D9E  6FD1               	movwf	(??_ModbusFC10+1)& (0+255),b
  4523  000DA0  51D1               	movf	(??_ModbusFC10+1)& (0+255),w,b
  4524  000DA2  6FD3               	movwf	(??_ModbusFC10+3)& (0+255),b
  4525  000DA4  6BD2               	clrf	(??_ModbusFC10+2)& (0+255),b
  4526  000DA6  51D0               	movf	??_ModbusFC10& (0+255),w,b
  4527  000DA8  25D2               	addwf	(??_ModbusFC10+2)& (0+255),w,b
  4528  000DAA  6FD4               	movwf	ModbusFC10@TempData& (0+255),b
  4529  000DAC  0E00               	movlw	0
  4530  000DAE  21D3               	addwfc	(??_ModbusFC10+3)& (0+255),w,b
  4531  000DB0  6FD5               	movwf	(ModbusFC10@TempData+1)& (0+255),b
  4532  000DB2                     
  4533                           ; BSR set to: 0
  4534                           ;Modbus.c: 203:         j = j+2;
  4535  000DB2  0E02               	movlw	2
  4536  000DB4  25D8               	addwf	ModbusFC10@j& (0+255),w,b
  4537  000DB6  6FD8               	movwf	ModbusFC10@j& (0+255),b
  4538  000DB8  0E00               	movlw	0
  4539  000DBA  21D9               	addwfc	(ModbusFC10@j+1)& (0+255),w,b
  4540  000DBC  6FD9               	movwf	(ModbusFC10@j+1)& (0+255),b
  4541  000DBE                     
  4542                           ; BSR set to: 0
  4543                           ;Modbus.c: 204:         MB400xx[ModbusData[3] +i] = TempData;
  4544  000DBE  0101               	movlb	1	; () banked
  4545  000DC0  5103               	movf	(_ModbusData+3)& (0+255),w,b
  4546  000DC2  0100               	movlb	0	; () banked
  4547  000DC4  25D6               	addwf	ModbusFC10@i& (0+255),w,b
  4548  000DC6  6FD0               	movwf	??_ModbusFC10& (0+255),b
  4549  000DC8  0E00               	movlw	0
  4550  000DCA  21D7               	addwfc	(ModbusFC10@i+1)& (0+255),w,b
  4551  000DCC  6FD1               	movwf	(??_ModbusFC10+1)& (0+255),b
  4552  000DCE  90D8               	bcf	status,0,c
  4553  000DD0  37D0               	rlcf	??_ModbusFC10& (0+255),f,b
  4554  000DD2  37D1               	rlcf	(??_ModbusFC10+1)& (0+255),f,b
  4555  000DD4  0E00               	movlw	low _MB400xx
  4556  000DD6  25D0               	addwf	??_ModbusFC10& (0+255),w,b
  4557  000DD8  6ED9               	movwf	fsr2l,c
  4558  000DDA  0E02               	movlw	high _MB400xx
  4559  000DDC  21D1               	addwfc	(??_ModbusFC10+1)& (0+255),w,b
  4560  000DDE  6EDA               	movwf	fsr2h,c
  4561  000DE0  C0D4  FFDE         	movff	ModbusFC10@TempData,postinc2
  4562  000DE4  C0D5  FFDD         	movff	ModbusFC10@TempData+1,postdec2
  4563  000DE8                     
  4564                           ; BSR set to: 0
  4565                           ;Modbus.c: 205:     }
  4566  000DE8  4BD6               	infsnz	ModbusFC10@i& (0+255),f,b
  4567  000DEA  2BD7               	incf	(ModbusFC10@i+1)& (0+255),f,b
  4568  000DEC                     l5782:
  4569                           
  4570                           ; BSR set to: 0
  4571  000DEC  0101               	movlb	1	; () banked
  4572  000DEE  5105               	movf	(_ModbusData+5)& (0+255),w,b
  4573  000DF0  0100               	movlb	0	; () banked
  4574  000DF2  6FD0               	movwf	??_ModbusFC10& (0+255),b
  4575  000DF4  6BD1               	clrf	(??_ModbusFC10+1)& (0+255),b
  4576  000DF6  51D0               	movf	??_ModbusFC10& (0+255),w,b
  4577  000DF8  5DD6               	subwf	ModbusFC10@i& (0+255),w,b
  4578  000DFA  51D7               	movf	(ModbusFC10@i+1)& (0+255),w,b
  4579  000DFC  0A80               	xorlw	128
  4580  000DFE  6FD2               	movwf	(??_ModbusFC10+2)& (0+255),b
  4581  000E00  51D1               	movf	(??_ModbusFC10+1)& (0+255),w,b
  4582  000E02  0A80               	xorlw	128
  4583  000E04  59D2               	subwfb	(??_ModbusFC10+2)& (0+255),w,b
  4584  000E06  A0D8               	btfss	status,0,c
  4585  000E08  EF08  F007         	goto	u5591
  4586  000E0C  EF0A  F007         	goto	u5590
  4587  000E10                     u5591:
  4588  000E10  EFC0  F006         	goto	l5774
  4589  000E14                     u5590:
  4590  000E14                     
  4591                           ; BSR set to: 0
  4592                           ;Modbus.c: 207:     ByteHi = generateCRC(MBResCnt, 1);
  4593  000E14  C090  F005         	movff	_MBResCnt,generateCRC@MessCnt
  4594  000E18  C091  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
  4595  000E1C  0E01               	movlw	1
  4596  000E1E  6E07               	movwf	generateCRC@HiOrLo^0,c
  4597  000E20  EC8C  F00E         	call	_generateCRC	;wreg free
  4598  000E24  C005  F08E         	movff	?_generateCRC,_ByteHi
  4599  000E28  C006  F08F         	movff	?_generateCRC+1,_ByteHi+1
  4600                           
  4601                           ;Modbus.c: 208:     ByteLo = generateCRC(MBResCnt, 0);
  4602  000E2C  C090  F005         	movff	_MBResCnt,generateCRC@MessCnt
  4603  000E30  C091  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
  4604  000E34  0E00               	movlw	0
  4605  000E36  6E07               	movwf	generateCRC@HiOrLo^0,c
  4606  000E38  EC8C  F00E         	call	_generateCRC	;wreg free
  4607  000E3C  C005  F0FA         	movff	?_generateCRC,_ByteLo
  4608  000E40  C006  F0FB         	movff	?_generateCRC+1,_ByteLo+1
  4609  000E44                     
  4610                           ;Modbus.c: 210:     MBRespon[MBResCnt] = ByteHi;
  4611  000E44  90D8               	bcf	status,0,c
  4612  000E46  0100               	movlb	0	; () banked
  4613  000E48  3590               	rlcf	_MBResCnt& (0+255),w,b
  4614  000E4A  6ED9               	movwf	fsr2l,c
  4615  000E4C  3591               	rlcf	(_MBResCnt+1)& (0+255),w,b
  4616  000E4E  6EDA               	movwf	fsr2h,c
  4617  000E50  0E84               	movlw	low _MBRespon
  4618  000E52  26D9               	addwf	fsr2l,f,c
  4619  000E54  0E01               	movlw	high _MBRespon
  4620  000E56  22DA               	addwfc	fsr2h,f,c
  4621  000E58  C08E  FFDE         	movff	_ByteHi,postinc2
  4622  000E5C  C08F  FFDD         	movff	_ByteHi+1,postdec2
  4623  000E60                     
  4624                           ; BSR set to: 0
  4625                           ;Modbus.c: 211:     MBRespon[MBResCnt +1] = ByteLo;
  4626  000E60  90D8               	bcf	status,0,c
  4627  000E62  3590               	rlcf	_MBResCnt& (0+255),w,b
  4628  000E64  6ED9               	movwf	fsr2l,c
  4629  000E66  3591               	rlcf	(_MBResCnt+1)& (0+255),w,b
  4630  000E68  6EDA               	movwf	fsr2h,c
  4631  000E6A  0E86               	movlw	low (_MBRespon+2)
  4632  000E6C  26D9               	addwf	fsr2l,f,c
  4633  000E6E  0E01               	movlw	high (_MBRespon+2)
  4634  000E70  22DA               	addwfc	fsr2h,f,c
  4635  000E72  C0FA  FFDE         	movff	_ByteLo,postinc2
  4636  000E76  C0FB  FFDD         	movff	_ByteLo+1,postdec2
  4637  000E7A                     
  4638                           ; BSR set to: 0
  4639                           ;Modbus.c: 212:     MBResCnt = MBResCnt +2;
  4640  000E7A  0E02               	movlw	2
  4641  000E7C  2590               	addwf	_MBResCnt& (0+255),w,b
  4642  000E7E  6F90               	movwf	_MBResCnt& (0+255),b
  4643  000E80  0E00               	movlw	0
  4644  000E82  2191               	addwfc	(_MBResCnt+1)& (0+255),w,b
  4645  000E84  6F91               	movwf	(_MBResCnt+1)& (0+255),b
  4646  000E86                     
  4647                           ; BSR set to: 0
  4648                           ;Modbus.c: 214:     PrintMB400();
  4649  000E86  ECCA  F013         	call	_PrintMB400	;wreg free
  4650  000E8A                     
  4651                           ;Modbus.c: 216:     PrintModRespon();
  4652  000E8A  ECD8  F012         	call	_PrintModRespon	;wreg free
  4653  000E8E                     
  4654                           ;Modbus.c: 217:     UART1_Write_string(MBRespon,MBResCnt);
  4655  000E8E  0E84               	movlw	low _MBRespon
  4656  000E90  6E06               	movwf	UART1_Write_string@data^0,c
  4657  000E92  0E01               	movlw	high _MBRespon
  4658  000E94  6E07               	movwf	(UART1_Write_string@data+1)^0,c
  4659  000E96  C090  F008         	movff	_MBResCnt,UART1_Write_string@data_len
  4660  000E9A  C091  F009         	movff	_MBResCnt+1,UART1_Write_string@data_len+1
  4661  000E9E  EC90  F013         	call	_UART1_Write_string	;wreg free
  4662  000EA2  0012               	return		;funcret
  4663  000EA4                     __end_of_ModbusFC10:
  4664                           	opt callstack 0
  4665                           
  4666 ;; *************** function _PrintMB400 *****************
  4667 ;; Defined at:
  4668 ;;		line 31 in file "Modbus.c"
  4669 ;; Parameters:    Size  Location     Type
  4670 ;;		None
  4671 ;; Auto vars:     Size  Location     Type
  4672 ;;  i               2   84[COMRAM] int 
  4673 ;; Return value:  Size  Location     Type
  4674 ;;                  1    wreg      void 
  4675 ;; Registers used:
  4676 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4677 ;; Tracked objects:
  4678 ;;		On entry : 0/0
  4679 ;;		On exit  : 0/0
  4680 ;;		Unchanged: 0/0
  4681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4683 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4685 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4686 ;;Total ram usage:        2 bytes
  4687 ;; Hardware stack levels used:    1
  4688 ;; Hardware stack levels required when called:   13
  4689 ;; This function calls:
  4690 ;;		_printf
  4691 ;; This function is called by:
  4692 ;;		_main
  4693 ;;		_ModbusFC10
  4694 ;; This function uses a non-reentrant model
  4695 ;;
  4696                           
  4697                           	psect	text27
  4698  002794                     __ptext27:
  4699                           	opt callstack 0
  4700  002794                     _PrintMB400:
  4701                           	opt callstack 17
  4702  002794                     
  4703                           ;Modbus.c: 33:     printf("UpdatedMB400 \r\n");
  4704  002794  0EDA               	movlw	low STR_13
  4705  002796  0100               	movlb	0	; () banked
  4706  002798  6FC2               	movwf	printf@fmt& (0+255),b
  4707  00279A  0EFF               	movlw	high STR_13
  4708  00279C  6FC3               	movwf	(printf@fmt+1)& (0+255),b
  4709  00279E  ECF1  F016         	call	_printf	;wreg free
  4710  0027A2                     
  4711                           ;Modbus.c: 36:     for(i=0; i<32; i++ ){
  4712  0027A2  0E00               	movlw	0
  4713  0027A4  6E56               	movwf	(PrintMB400@i+1)^0,c
  4714  0027A6  0E00               	movlw	0
  4715  0027A8  6E55               	movwf	PrintMB400@i^0,c
  4716  0027AA                     l5484:
  4717                           
  4718                           ;Modbus.c: 37:         printf("Reg: %i Data: 0x%04x \r\n", i, MB400xx[i]);
  4719  0027AA  0E59               	movlw	low STR_14
  4720  0027AC  0100               	movlb	0	; () banked
  4721  0027AE  6FC2               	movwf	printf@fmt& (0+255),b
  4722  0027B0  0EFF               	movlw	high STR_14
  4723  0027B2  6FC3               	movwf	(printf@fmt+1)& (0+255),b
  4724  0027B4  C055  F0C4         	movff	PrintMB400@i,?_printf+2
  4725  0027B8  C056  F0C5         	movff	PrintMB400@i+1,?_printf+3
  4726  0027BC  90D8               	bcf	status,0,c
  4727  0027BE  3455               	rlcf	PrintMB400@i^0,w,c
  4728  0027C0  6ED9               	movwf	fsr2l,c
  4729  0027C2  3456               	rlcf	(PrintMB400@i+1)^0,w,c
  4730  0027C4  6EDA               	movwf	fsr2h,c
  4731  0027C6  0E00               	movlw	low _MB400xx
  4732  0027C8  26D9               	addwf	fsr2l,f,c
  4733  0027CA  0E02               	movlw	high _MB400xx
  4734  0027CC  22DA               	addwfc	fsr2h,f,c
  4735  0027CE  CFDE F0C6          	movff	postinc2,?_printf+4
  4736  0027D2  CFDD F0C7          	movff	postdec2,?_printf+5
  4737  0027D6  ECF1  F016         	call	_printf	;wreg free
  4738  0027DA                     
  4739                           ;Modbus.c: 38:     }
  4740  0027DA  4A55               	infsnz	PrintMB400@i^0,f,c
  4741  0027DC  2A56               	incf	(PrintMB400@i+1)^0,f,c
  4742  0027DE  BE56               	btfsc	(PrintMB400@i+1)^0,7,c
  4743  0027E0  EFFB  F013         	goto	u5301
  4744  0027E4  5056               	movf	(PrintMB400@i+1)^0,w,c
  4745  0027E6  E109               	bnz	u5300
  4746  0027E8  0E20               	movlw	32
  4747  0027EA  5C55               	subwf	PrintMB400@i^0,w,c
  4748  0027EC  A0D8               	btfss	status,0,c
  4749  0027EE  EFFB  F013         	goto	u5301
  4750  0027F2  EFFD  F013         	goto	u5300
  4751  0027F6                     u5301:
  4752  0027F6  EFD5  F013         	goto	l5484
  4753  0027FA                     u5300:
  4754  0027FA  0012               	return		;funcret
  4755  0027FC                     __end_of_PrintMB400:
  4756                           	opt callstack 0
  4757                           
  4758 ;; *************** function _ModbusFC03 *****************
  4759 ;; Defined at:
  4760 ;;		line 134 in file "Modbus.c"
  4761 ;; Parameters:    Size  Location     Type
  4762 ;;		None
  4763 ;; Auto vars:     Size  Location     Type
  4764 ;;  i               2   47[BANK0 ] int 
  4765 ;; Return value:  Size  Location     Type
  4766 ;;                  1    wreg      void 
  4767 ;; Registers used:
  4768 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4769 ;; Tracked objects:
  4770 ;;		On entry : 0/0
  4771 ;;		On exit  : 0/0
  4772 ;;		Unchanged: 0/0
  4773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4775 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4776 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4777 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4778 ;;Total ram usage:        6 bytes
  4779 ;; Hardware stack levels used:    1
  4780 ;; Hardware stack levels required when called:   14
  4781 ;; This function calls:
  4782 ;;		_PrintModRespon
  4783 ;;		_UART1_Write_string
  4784 ;;		_generateCRC
  4785 ;; This function is called by:
  4786 ;;		_main
  4787 ;; This function uses a non-reentrant model
  4788 ;;
  4789                           
  4790                           	psect	text28
  4791  0010A6                     __ptext28:
  4792                           	opt callstack 0
  4793  0010A6                     _ModbusFC03:
  4794                           	opt callstack 16
  4795  0010A6                     
  4796                           ;Modbus.c: 139:     MBResCnt = 0;
  4797  0010A6  0E00               	movlw	0
  4798  0010A8  0100               	movlb	0	; () banked
  4799  0010AA  6F91               	movwf	(_MBResCnt+1)& (0+255),b
  4800  0010AC  0E00               	movlw	0
  4801  0010AE  6F90               	movwf	_MBResCnt& (0+255),b
  4802  0010B0                     
  4803                           ; BSR set to: 0
  4804                           ;Modbus.c: 140:     MBRespon[MBResCnt] = ModbusData[0];
  4805  0010B0  0101               	movlb	1	; () banked
  4806  0010B2  5100               	movf	_ModbusData& (0+255),w,b
  4807  0010B4  0100               	movlb	0	; () banked
  4808  0010B6  6FD0               	movwf	??_ModbusFC03& (0+255),b
  4809  0010B8  6BD1               	clrf	(??_ModbusFC03+1)& (0+255),b
  4810  0010BA  90D8               	bcf	status,0,c
  4811  0010BC  3590               	rlcf	_MBResCnt& (0+255),w,b
  4812  0010BE  6ED9               	movwf	fsr2l,c
  4813  0010C0  3591               	rlcf	(_MBResCnt+1)& (0+255),w,b
  4814  0010C2  6EDA               	movwf	fsr2h,c
  4815  0010C4  0E84               	movlw	low _MBRespon
  4816  0010C6  26D9               	addwf	fsr2l,f,c
  4817  0010C8  0E01               	movlw	high _MBRespon
  4818  0010CA  22DA               	addwfc	fsr2h,f,c
  4819  0010CC  C0D0  FFDE         	movff	??_ModbusFC03,postinc2
  4820  0010D0  C0D1  FFDD         	movff	??_ModbusFC03+1,postdec2
  4821  0010D4                     
  4822                           ; BSR set to: 0
  4823                           ;Modbus.c: 141:     MBResCnt++;
  4824  0010D4  4B90               	infsnz	_MBResCnt& (0+255),f,b
  4825  0010D6  2B91               	incf	(_MBResCnt+1)& (0+255),f,b
  4826  0010D8                     
  4827                           ; BSR set to: 0
  4828                           ;Modbus.c: 142:     MBRespon[MBResCnt] = ModbusData[1];
  4829  0010D8  0101               	movlb	1	; () banked
  4830  0010DA  5101               	movf	(_ModbusData+1)& (0+255),w,b
  4831  0010DC  0100               	movlb	0	; () banked
  4832  0010DE  6FD0               	movwf	??_ModbusFC03& (0+255),b
  4833  0010E0  6BD1               	clrf	(??_ModbusFC03+1)& (0+255),b
  4834  0010E2  90D8               	bcf	status,0,c
  4835  0010E4  3590               	rlcf	_MBResCnt& (0+255),w,b
  4836  0010E6  6ED9               	movwf	fsr2l,c
  4837  0010E8  3591               	rlcf	(_MBResCnt+1)& (0+255),w,b
  4838  0010EA  6EDA               	movwf	fsr2h,c
  4839  0010EC  0E84               	movlw	low _MBRespon
  4840  0010EE  26D9               	addwf	fsr2l,f,c
  4841  0010F0  0E01               	movlw	high _MBRespon
  4842  0010F2  22DA               	addwfc	fsr2h,f,c
  4843  0010F4  C0D0  FFDE         	movff	??_ModbusFC03,postinc2
  4844  0010F8  C0D1  FFDD         	movff	??_ModbusFC03+1,postdec2
  4845  0010FC                     
  4846                           ; BSR set to: 0
  4847                           ;Modbus.c: 143:     MBResCnt++;
  4848  0010FC  4B90               	infsnz	_MBResCnt& (0+255),f,b
  4849  0010FE  2B91               	incf	(_MBResCnt+1)& (0+255),f,b
  4850  001100                     
  4851                           ; BSR set to: 0
  4852                           ;Modbus.c: 144:     MBRespon[MBResCnt] = ModbusData[5] *2;
  4853  001100  0101               	movlb	1	; () banked
  4854  001102  5105               	movf	(_ModbusData+5)& (0+255),w,b
  4855  001104  0D02               	mullw	2
  4856  001106  90D8               	bcf	status,0,c
  4857  001108  0100               	movlb	0	; () banked
  4858  00110A  3590               	rlcf	_MBResCnt& (0+255),w,b
  4859  00110C  6ED9               	movwf	fsr2l,c
  4860  00110E  3591               	rlcf	(_MBResCnt+1)& (0+255),w,b
  4861  001110  6EDA               	movwf	fsr2h,c
  4862  001112  0E84               	movlw	low _MBRespon
  4863  001114  26D9               	addwf	fsr2l,f,c
  4864  001116  0E01               	movlw	high _MBRespon
  4865  001118  22DA               	addwfc	fsr2h,f,c
  4866  00111A  CFF3 FFDE          	movff	prodl,postinc2
  4867  00111E  CFF4 FFDD          	movff	prodh,postdec2
  4868  001122                     
  4869                           ; BSR set to: 0
  4870                           ;Modbus.c: 145:     MBResCnt++;
  4871  001122  4B90               	infsnz	_MBResCnt& (0+255),f,b
  4872  001124  2B91               	incf	(_MBResCnt+1)& (0+255),f,b
  4873  001126                     
  4874                           ; BSR set to: 0
  4875                           ;Modbus.c: 146:     for(i=0; i< (ModbusData[5]) ; i++ ){
  4876  001126  0E00               	movlw	0
  4877  001128  6FD5               	movwf	(ModbusFC03@i+1)& (0+255),b
  4878  00112A  0E00               	movlw	0
  4879  00112C  6FD4               	movwf	ModbusFC03@i& (0+255),b
  4880  00112E  EFE9  F008         	goto	l5720
  4881  001132                     l5714:
  4882                           
  4883                           ; BSR set to: 0
  4884                           ;Modbus.c: 152:         ByteLo = MB300xx[ModbusData[3] +i] & 0x00FF;
  4885  001132  0101               	movlb	1	; () banked
  4886  001134  5103               	movf	(_ModbusData+3)& (0+255),w,b
  4887  001136  0100               	movlb	0	; () banked
  4888  001138  25D4               	addwf	ModbusFC03@i& (0+255),w,b
  4889  00113A  6FD0               	movwf	??_ModbusFC03& (0+255),b
  4890  00113C  0E00               	movlw	0
  4891  00113E  21D5               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
  4892  001140  6FD1               	movwf	(??_ModbusFC03+1)& (0+255),b
  4893  001142  90D8               	bcf	status,0,c
  4894  001144  37D0               	rlcf	??_ModbusFC03& (0+255),f,b
  4895  001146  37D1               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
  4896  001148  0E40               	movlw	low _MB300xx
  4897  00114A  25D0               	addwf	??_ModbusFC03& (0+255),w,b
  4898  00114C  6ED9               	movwf	fsr2l,c
  4899  00114E  0E02               	movlw	high _MB300xx
  4900  001150  21D1               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
  4901  001152  6EDA               	movwf	fsr2h,c
  4902  001154  CFDE F0D2          	movff	postinc2,??_ModbusFC03+2
  4903  001158  CFDD F0D3          	movff	postdec2,??_ModbusFC03+3
  4904  00115C  51D2               	movf	(??_ModbusFC03+2)& (0+255),w,b
  4905  00115E  6FFA               	movwf	_ByteLo& (0+255),b
  4906  001160  6BFB               	clrf	(_ByteLo+1)& (0+255),b
  4907                           
  4908                           ;Modbus.c: 153:         ByteHi = MB300xx[ModbusData[3] +i] >> 8;
  4909  001162  0101               	movlb	1	; () banked
  4910  001164  5103               	movf	(_ModbusData+3)& (0+255),w,b
  4911  001166  0100               	movlb	0	; () banked
  4912  001168  25D4               	addwf	ModbusFC03@i& (0+255),w,b
  4913  00116A  6FD0               	movwf	??_ModbusFC03& (0+255),b
  4914  00116C  0E00               	movlw	0
  4915  00116E  21D5               	addwfc	(ModbusFC03@i+1)& (0+255),w,b
  4916  001170  6FD1               	movwf	(??_ModbusFC03+1)& (0+255),b
  4917  001172  90D8               	bcf	status,0,c
  4918  001174  37D0               	rlcf	??_ModbusFC03& (0+255),f,b
  4919  001176  37D1               	rlcf	(??_ModbusFC03+1)& (0+255),f,b
  4920  001178  0E40               	movlw	low _MB300xx
  4921  00117A  25D0               	addwf	??_ModbusFC03& (0+255),w,b
  4922  00117C  6ED9               	movwf	fsr2l,c
  4923  00117E  0E02               	movlw	high _MB300xx
  4924  001180  21D1               	addwfc	(??_ModbusFC03+1)& (0+255),w,b
  4925  001182  6EDA               	movwf	fsr2h,c
  4926  001184  CFDE F0D2          	movff	postinc2,??_ModbusFC03+2
  4927  001188  CFDD F0D3          	movff	postdec2,??_ModbusFC03+3
  4928  00118C  51D3               	movf	(??_ModbusFC03+3)& (0+255),w,b
  4929  00118E  6F8E               	movwf	_ByteHi& (0+255),b
  4930  001190  6B8F               	clrf	(_ByteHi+1)& (0+255),b
  4931                           
  4932                           ;Modbus.c: 154:         MBRespon[MBResCnt] = ByteHi;
  4933  001192  90D8               	bcf	status,0,c
  4934  001194  3590               	rlcf	_MBResCnt& (0+255),w,b
  4935  001196  6ED9               	movwf	fsr2l,c
  4936  001198  3591               	rlcf	(_MBResCnt+1)& (0+255),w,b
  4937  00119A  6EDA               	movwf	fsr2h,c
  4938  00119C  0E84               	movlw	low _MBRespon
  4939  00119E  26D9               	addwf	fsr2l,f,c
  4940  0011A0  0E01               	movlw	high _MBRespon
  4941  0011A2  22DA               	addwfc	fsr2h,f,c
  4942  0011A4  C08E  FFDE         	movff	_ByteHi,postinc2
  4943  0011A8  C08F  FFDD         	movff	_ByteHi+1,postdec2
  4944  0011AC                     
  4945                           ; BSR set to: 0
  4946                           ;Modbus.c: 155:         MBResCnt++;
  4947  0011AC  4B90               	infsnz	_MBResCnt& (0+255),f,b
  4948  0011AE  2B91               	incf	(_MBResCnt+1)& (0+255),f,b
  4949  0011B0                     
  4950                           ; BSR set to: 0
  4951                           ;Modbus.c: 156:         MBRespon[MBResCnt] = ByteLo;
  4952  0011B0  90D8               	bcf	status,0,c
  4953  0011B2  3590               	rlcf	_MBResCnt& (0+255),w,b
  4954  0011B4  6ED9               	movwf	fsr2l,c
  4955  0011B6  3591               	rlcf	(_MBResCnt+1)& (0+255),w,b
  4956  0011B8  6EDA               	movwf	fsr2h,c
  4957  0011BA  0E84               	movlw	low _MBRespon
  4958  0011BC  26D9               	addwf	fsr2l,f,c
  4959  0011BE  0E01               	movlw	high _MBRespon
  4960  0011C0  22DA               	addwfc	fsr2h,f,c
  4961  0011C2  C0FA  FFDE         	movff	_ByteLo,postinc2
  4962  0011C6  C0FB  FFDD         	movff	_ByteLo+1,postdec2
  4963                           
  4964                           ;Modbus.c: 157:         MBResCnt++;
  4965  0011CA  4B90               	infsnz	_MBResCnt& (0+255),f,b
  4966  0011CC  2B91               	incf	(_MBResCnt+1)& (0+255),f,b
  4967                           
  4968                           ;Modbus.c: 158:     }
  4969  0011CE  4BD4               	infsnz	ModbusFC03@i& (0+255),f,b
  4970  0011D0  2BD5               	incf	(ModbusFC03@i+1)& (0+255),f,b
  4971  0011D2                     l5720:
  4972                           
  4973                           ; BSR set to: 0
  4974  0011D2  0101               	movlb	1	; () banked
  4975  0011D4  5105               	movf	(_ModbusData+5)& (0+255),w,b
  4976  0011D6  0100               	movlb	0	; () banked
  4977  0011D8  6FD0               	movwf	??_ModbusFC03& (0+255),b
  4978  0011DA  6BD1               	clrf	(??_ModbusFC03+1)& (0+255),b
  4979  0011DC  51D0               	movf	??_ModbusFC03& (0+255),w,b
  4980  0011DE  5DD4               	subwf	ModbusFC03@i& (0+255),w,b
  4981  0011E0  51D5               	movf	(ModbusFC03@i+1)& (0+255),w,b
  4982  0011E2  0A80               	xorlw	128
  4983  0011E4  6FD2               	movwf	(??_ModbusFC03+2)& (0+255),b
  4984  0011E6  51D1               	movf	(??_ModbusFC03+1)& (0+255),w,b
  4985  0011E8  0A80               	xorlw	128
  4986  0011EA  59D2               	subwfb	(??_ModbusFC03+2)& (0+255),w,b
  4987  0011EC  A0D8               	btfss	status,0,c
  4988  0011EE  EFFB  F008         	goto	u5571
  4989  0011F2  EFFD  F008         	goto	u5570
  4990  0011F6                     u5571:
  4991  0011F6  EF99  F008         	goto	l5714
  4992  0011FA                     u5570:
  4993  0011FA                     
  4994                           ; BSR set to: 0
  4995                           ;Modbus.c: 160:     ByteHi = generateCRC(MBResCnt, 1);
  4996  0011FA  C090  F005         	movff	_MBResCnt,generateCRC@MessCnt
  4997  0011FE  C091  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
  4998  001202  0E01               	movlw	1
  4999  001204  6E07               	movwf	generateCRC@HiOrLo^0,c
  5000  001206  EC8C  F00E         	call	_generateCRC	;wreg free
  5001  00120A  C005  F08E         	movff	?_generateCRC,_ByteHi
  5002  00120E  C006  F08F         	movff	?_generateCRC+1,_ByteHi+1
  5003                           
  5004                           ;Modbus.c: 161:     ByteLo = generateCRC(MBResCnt, 0);
  5005  001212  C090  F005         	movff	_MBResCnt,generateCRC@MessCnt
  5006  001216  C091  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
  5007  00121A  0E00               	movlw	0
  5008  00121C  6E07               	movwf	generateCRC@HiOrLo^0,c
  5009  00121E  EC8C  F00E         	call	_generateCRC	;wreg free
  5010  001222  C005  F0FA         	movff	?_generateCRC,_ByteLo
  5011  001226  C006  F0FB         	movff	?_generateCRC+1,_ByteLo+1
  5012  00122A                     
  5013                           ;Modbus.c: 163:     MBRespon[MBResCnt] = ByteHi;
  5014  00122A  90D8               	bcf	status,0,c
  5015  00122C  0100               	movlb	0	; () banked
  5016  00122E  3590               	rlcf	_MBResCnt& (0+255),w,b
  5017  001230  6ED9               	movwf	fsr2l,c
  5018  001232  3591               	rlcf	(_MBResCnt+1)& (0+255),w,b
  5019  001234  6EDA               	movwf	fsr2h,c
  5020  001236  0E84               	movlw	low _MBRespon
  5021  001238  26D9               	addwf	fsr2l,f,c
  5022  00123A  0E01               	movlw	high _MBRespon
  5023  00123C  22DA               	addwfc	fsr2h,f,c
  5024  00123E  C08E  FFDE         	movff	_ByteHi,postinc2
  5025  001242  C08F  FFDD         	movff	_ByteHi+1,postdec2
  5026  001246                     
  5027                           ; BSR set to: 0
  5028                           ;Modbus.c: 164:     MBRespon[MBResCnt +1] = ByteLo;
  5029  001246  90D8               	bcf	status,0,c
  5030  001248  3590               	rlcf	_MBResCnt& (0+255),w,b
  5031  00124A  6ED9               	movwf	fsr2l,c
  5032  00124C  3591               	rlcf	(_MBResCnt+1)& (0+255),w,b
  5033  00124E  6EDA               	movwf	fsr2h,c
  5034  001250  0E86               	movlw	low (_MBRespon+2)
  5035  001252  26D9               	addwf	fsr2l,f,c
  5036  001254  0E01               	movlw	high (_MBRespon+2)
  5037  001256  22DA               	addwfc	fsr2h,f,c
  5038  001258  C0FA  FFDE         	movff	_ByteLo,postinc2
  5039  00125C  C0FB  FFDD         	movff	_ByteLo+1,postdec2
  5040  001260                     
  5041                           ; BSR set to: 0
  5042                           ;Modbus.c: 165:     MBResCnt = MBResCnt +2;
  5043  001260  0E02               	movlw	2
  5044  001262  2590               	addwf	_MBResCnt& (0+255),w,b
  5045  001264  6F90               	movwf	_MBResCnt& (0+255),b
  5046  001266  0E00               	movlw	0
  5047  001268  2191               	addwfc	(_MBResCnt+1)& (0+255),w,b
  5048  00126A  6F91               	movwf	(_MBResCnt+1)& (0+255),b
  5049  00126C                     
  5050                           ; BSR set to: 0
  5051                           ;Modbus.c: 167:     PrintModRespon();
  5052  00126C  ECD8  F012         	call	_PrintModRespon	;wreg free
  5053  001270                     
  5054                           ;Modbus.c: 168:     UART1_Write_string(MBRespon,MBResCnt);
  5055  001270  0E84               	movlw	low _MBRespon
  5056  001272  6E06               	movwf	UART1_Write_string@data^0,c
  5057  001274  0E01               	movlw	high _MBRespon
  5058  001276  6E07               	movwf	(UART1_Write_string@data+1)^0,c
  5059  001278  C090  F008         	movff	_MBResCnt,UART1_Write_string@data_len
  5060  00127C  C091  F009         	movff	_MBResCnt+1,UART1_Write_string@data_len+1
  5061  001280  EC90  F013         	call	_UART1_Write_string	;wreg free
  5062  001284  0012               	return		;funcret
  5063  001286                     __end_of_ModbusFC03:
  5064                           	opt callstack 0
  5065                           
  5066 ;; *************** function _ModbusError *****************
  5067 ;; Defined at:
  5068 ;;		line 299 in file "Modbus.c"
  5069 ;; Parameters:    Size  Location     Type
  5070 ;;  ErrorCode       2   43[BANK0 ] int 
  5071 ;; Auto vars:     Size  Location     Type
  5072 ;;  i               2    0        int 
  5073 ;; Return value:  Size  Location     Type
  5074 ;;                  1    wreg      void 
  5075 ;; Registers used:
  5076 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5077 ;; Tracked objects:
  5078 ;;		On entry : 0/0
  5079 ;;		On exit  : 0/0
  5080 ;;		Unchanged: 0/0
  5081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5082 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5083 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5084 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5085 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5086 ;;Total ram usage:        6 bytes
  5087 ;; Hardware stack levels used:    1
  5088 ;; Hardware stack levels required when called:   14
  5089 ;; This function calls:
  5090 ;;		_PrintModRespon
  5091 ;;		_UART1_Write_string
  5092 ;;		_generateCRC
  5093 ;; This function is called by:
  5094 ;;		_main
  5095 ;; This function uses a non-reentrant model
  5096 ;;
  5097                           
  5098                           	psect	text29
  5099  001B1C                     __ptext29:
  5100                           	opt callstack 0
  5101  001B1C                     _ModbusError:
  5102                           	opt callstack 16
  5103  001B1C                     
  5104                           ;Modbus.c: 304:     MBResCnt = 0;
  5105  001B1C  0E00               	movlw	0
  5106  001B1E  0100               	movlb	0	; () banked
  5107  001B20  6F91               	movwf	(_MBResCnt+1)& (0+255),b
  5108  001B22  0E00               	movlw	0
  5109  001B24  6F90               	movwf	_MBResCnt& (0+255),b
  5110  001B26                     
  5111                           ; BSR set to: 0
  5112                           ;Modbus.c: 305:     MBRespon[MBResCnt] = ModbusData[0];
  5113  001B26  0101               	movlb	1	; () banked
  5114  001B28  5100               	movf	_ModbusData& (0+255),w,b
  5115  001B2A  0100               	movlb	0	; () banked
  5116  001B2C  6FD2               	movwf	??_ModbusError& (0+255),b
  5117  001B2E  6BD3               	clrf	(??_ModbusError+1)& (0+255),b
  5118  001B30  90D8               	bcf	status,0,c
  5119  001B32  3590               	rlcf	_MBResCnt& (0+255),w,b
  5120  001B34  6ED9               	movwf	fsr2l,c
  5121  001B36  3591               	rlcf	(_MBResCnt+1)& (0+255),w,b
  5122  001B38  6EDA               	movwf	fsr2h,c
  5123  001B3A  0E84               	movlw	low _MBRespon
  5124  001B3C  26D9               	addwf	fsr2l,f,c
  5125  001B3E  0E01               	movlw	high _MBRespon
  5126  001B40  22DA               	addwfc	fsr2h,f,c
  5127  001B42  C0D2  FFDE         	movff	??_ModbusError,postinc2
  5128  001B46  C0D3  FFDD         	movff	??_ModbusError+1,postdec2
  5129  001B4A                     
  5130                           ; BSR set to: 0
  5131                           ;Modbus.c: 306:     MBResCnt++;
  5132  001B4A  4B90               	infsnz	_MBResCnt& (0+255),f,b
  5133  001B4C  2B91               	incf	(_MBResCnt+1)& (0+255),f,b
  5134  001B4E                     
  5135                           ; BSR set to: 0
  5136                           ;Modbus.c: 307:     MBRespon[MBResCnt] = ModbusData[1] + 128;
  5137  001B4E  0101               	movlb	1	; () banked
  5138  001B50  5101               	movf	(_ModbusData+1)& (0+255),w,b
  5139  001B52  0100               	movlb	0	; () banked
  5140  001B54  6FD2               	movwf	??_ModbusError& (0+255),b
  5141  001B56  6BD3               	clrf	(??_ModbusError+1)& (0+255),b
  5142  001B58  0E80               	movlw	128
  5143  001B5A  27D2               	addwf	??_ModbusError& (0+255),f,b
  5144  001B5C  0E00               	movlw	0
  5145  001B5E  23D3               	addwfc	(??_ModbusError+1)& (0+255),f,b
  5146  001B60  90D8               	bcf	status,0,c
  5147  001B62  3590               	rlcf	_MBResCnt& (0+255),w,b
  5148  001B64  6ED9               	movwf	fsr2l,c
  5149  001B66  3591               	rlcf	(_MBResCnt+1)& (0+255),w,b
  5150  001B68  6EDA               	movwf	fsr2h,c
  5151  001B6A  0E84               	movlw	low _MBRespon
  5152  001B6C  26D9               	addwf	fsr2l,f,c
  5153  001B6E  0E01               	movlw	high _MBRespon
  5154  001B70  22DA               	addwfc	fsr2h,f,c
  5155  001B72  C0D2  FFDE         	movff	??_ModbusError,postinc2
  5156  001B76  C0D3  FFDD         	movff	??_ModbusError+1,postdec2
  5157  001B7A                     
  5158                           ; BSR set to: 0
  5159                           ;Modbus.c: 308:     MBResCnt++;
  5160  001B7A  4B90               	infsnz	_MBResCnt& (0+255),f,b
  5161  001B7C  2B91               	incf	(_MBResCnt+1)& (0+255),f,b
  5162  001B7E                     
  5163                           ; BSR set to: 0
  5164                           ;Modbus.c: 309:     MBRespon[MBResCnt] = ErrorCode;
  5165  001B7E  90D8               	bcf	status,0,c
  5166  001B80  3590               	rlcf	_MBResCnt& (0+255),w,b
  5167  001B82  6ED9               	movwf	fsr2l,c
  5168  001B84  3591               	rlcf	(_MBResCnt+1)& (0+255),w,b
  5169  001B86  6EDA               	movwf	fsr2h,c
  5170  001B88  0E84               	movlw	low _MBRespon
  5171  001B8A  26D9               	addwf	fsr2l,f,c
  5172  001B8C  0E01               	movlw	high _MBRespon
  5173  001B8E  22DA               	addwfc	fsr2h,f,c
  5174  001B90  C0D0  FFDE         	movff	ModbusError@ErrorCode,postinc2
  5175  001B94  C0D1  FFDD         	movff	ModbusError@ErrorCode+1,postdec2
  5176  001B98                     
  5177                           ; BSR set to: 0
  5178                           ;Modbus.c: 310:     MBResCnt++;
  5179  001B98  4B90               	infsnz	_MBResCnt& (0+255),f,b
  5180  001B9A  2B91               	incf	(_MBResCnt+1)& (0+255),f,b
  5181  001B9C                     
  5182                           ; BSR set to: 0
  5183                           ;Modbus.c: 312:     ByteHi = generateCRC(MBResCnt, 1);
  5184  001B9C  C090  F005         	movff	_MBResCnt,generateCRC@MessCnt
  5185  001BA0  C091  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
  5186  001BA4  0E01               	movlw	1
  5187  001BA6  6E07               	movwf	generateCRC@HiOrLo^0,c
  5188  001BA8  EC8C  F00E         	call	_generateCRC	;wreg free
  5189  001BAC  C005  F08E         	movff	?_generateCRC,_ByteHi
  5190  001BB0  C006  F08F         	movff	?_generateCRC+1,_ByteHi+1
  5191  001BB4                     
  5192                           ;Modbus.c: 313:     ByteLo = generateCRC(MBResCnt, 0);
  5193  001BB4  C090  F005         	movff	_MBResCnt,generateCRC@MessCnt
  5194  001BB8  C091  F006         	movff	_MBResCnt+1,generateCRC@MessCnt+1
  5195  001BBC  0E00               	movlw	0
  5196  001BBE  6E07               	movwf	generateCRC@HiOrLo^0,c
  5197  001BC0  EC8C  F00E         	call	_generateCRC	;wreg free
  5198  001BC4  C005  F0FA         	movff	?_generateCRC,_ByteLo
  5199  001BC8  C006  F0FB         	movff	?_generateCRC+1,_ByteLo+1
  5200  001BCC                     
  5201                           ;Modbus.c: 315:     MBRespon[MBResCnt] = ByteHi;
  5202  001BCC  90D8               	bcf	status,0,c
  5203  001BCE  0100               	movlb	0	; () banked
  5204  001BD0  3590               	rlcf	_MBResCnt& (0+255),w,b
  5205  001BD2  6ED9               	movwf	fsr2l,c
  5206  001BD4  3591               	rlcf	(_MBResCnt+1)& (0+255),w,b
  5207  001BD6  6EDA               	movwf	fsr2h,c
  5208  001BD8  0E84               	movlw	low _MBRespon
  5209  001BDA  26D9               	addwf	fsr2l,f,c
  5210  001BDC  0E01               	movlw	high _MBRespon
  5211  001BDE  22DA               	addwfc	fsr2h,f,c
  5212  001BE0  C08E  FFDE         	movff	_ByteHi,postinc2
  5213  001BE4  C08F  FFDD         	movff	_ByteHi+1,postdec2
  5214  001BE8                     
  5215                           ; BSR set to: 0
  5216                           ;Modbus.c: 316:     MBRespon[MBResCnt +1] = ByteLo;
  5217  001BE8  90D8               	bcf	status,0,c
  5218  001BEA  3590               	rlcf	_MBResCnt& (0+255),w,b
  5219  001BEC  6ED9               	movwf	fsr2l,c
  5220  001BEE  3591               	rlcf	(_MBResCnt+1)& (0+255),w,b
  5221  001BF0  6EDA               	movwf	fsr2h,c
  5222  001BF2  0E86               	movlw	low (_MBRespon+2)
  5223  001BF4  26D9               	addwf	fsr2l,f,c
  5224  001BF6  0E01               	movlw	high (_MBRespon+2)
  5225  001BF8  22DA               	addwfc	fsr2h,f,c
  5226  001BFA  C0FA  FFDE         	movff	_ByteLo,postinc2
  5227  001BFE  C0FB  FFDD         	movff	_ByteLo+1,postdec2
  5228  001C02                     
  5229                           ; BSR set to: 0
  5230                           ;Modbus.c: 317:     MBResCnt = MBResCnt +2;
  5231  001C02  0E02               	movlw	2
  5232  001C04  2590               	addwf	_MBResCnt& (0+255),w,b
  5233  001C06  6F90               	movwf	_MBResCnt& (0+255),b
  5234  001C08  0E00               	movlw	0
  5235  001C0A  2191               	addwfc	(_MBResCnt+1)& (0+255),w,b
  5236  001C0C  6F91               	movwf	(_MBResCnt+1)& (0+255),b
  5237  001C0E                     
  5238                           ; BSR set to: 0
  5239                           ;Modbus.c: 319:     PrintModRespon();
  5240  001C0E  ECD8  F012         	call	_PrintModRespon	;wreg free
  5241  001C12                     
  5242                           ;Modbus.c: 320:     UART1_Write_string(MBRespon,MBResCnt);
  5243  001C12  0E84               	movlw	low _MBRespon
  5244  001C14  6E06               	movwf	UART1_Write_string@data^0,c
  5245  001C16  0E01               	movlw	high _MBRespon
  5246  001C18  6E07               	movwf	(UART1_Write_string@data+1)^0,c
  5247  001C1A  C090  F008         	movff	_MBResCnt,UART1_Write_string@data_len
  5248  001C1E  C091  F009         	movff	_MBResCnt+1,UART1_Write_string@data_len+1
  5249  001C22  EC90  F013         	call	_UART1_Write_string	;wreg free
  5250  001C26  0012               	return		;funcret
  5251  001C28                     __end_of_ModbusError:
  5252                           	opt callstack 0
  5253                           
  5254 ;; *************** function _generateCRC *****************
  5255 ;; Defined at:
  5256 ;;		line 223 in file "Modbus.c"
  5257 ;; Parameters:    Size  Location     Type
  5258 ;;  MessCnt         2    4[COMRAM] int 
  5259 ;;  HiOrLo          1    6[COMRAM] _Bool 
  5260 ;; Auto vars:     Size  Location     Type
  5261 ;;  crc             2   17[COMRAM] unsigned int 
  5262 ;;  j               2   15[COMRAM] int 
  5263 ;;  i               2   13[COMRAM] int 
  5264 ;;  crcLow          2   11[COMRAM] unsigned int 
  5265 ;;  crcHigh         2    9[COMRAM] unsigned int 
  5266 ;; Return value:  Size  Location     Type
  5267 ;;                  2    4[COMRAM] unsigned int 
  5268 ;; Registers used:
  5269 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5270 ;; Tracked objects:
  5271 ;;		On entry : 0/0
  5272 ;;		On exit  : 0/0
  5273 ;;		Unchanged: 0/0
  5274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5275 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5276 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5277 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5278 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5279 ;;Total ram usage:       15 bytes
  5280 ;; Hardware stack levels used:    1
  5281 ;; Hardware stack levels required when called:    4
  5282 ;; This function calls:
  5283 ;;		Nothing
  5284 ;; This function is called by:
  5285 ;;		_ModbusFC03
  5286 ;;		_ModbusFC10
  5287 ;;		_ModbusError
  5288 ;; This function uses a non-reentrant model
  5289 ;;
  5290                           
  5291                           	psect	text30
  5292  001D18                     __ptext30:
  5293                           	opt callstack 0
  5294  001D18                     _generateCRC:
  5295                           	opt callstack 25
  5296  001D18                     
  5297                           ;Modbus.c: 224:   unsigned int crc = 0xFFFF;
  5298  001D18  6812               	setf	generateCRC@crc^0,c
  5299  001D1A  6813               	setf	(generateCRC@crc+1)^0,c
  5300  001D1C                     
  5301                           ;Modbus.c: 226:   unsigned int crcLow = 0;
  5302  001D1C  0E00               	movlw	0
  5303  001D1E  6E0D               	movwf	(generateCRC@crcLow+1)^0,c
  5304  001D20  0E00               	movlw	0
  5305  001D22  6E0C               	movwf	generateCRC@crcLow^0,c
  5306                           
  5307                           ;Modbus.c: 227:   int i,j = 0;
  5308  001D24  0E00               	movlw	0
  5309  001D26  6E11               	movwf	(generateCRC@j+1)^0,c
  5310  001D28  0E00               	movlw	0
  5311  001D2A  6E10               	movwf	generateCRC@j^0,c
  5312                           
  5313                           ;Modbus.c: 229:     for(i=0;i<MessCnt;i++){
  5314  001D2C  0E00               	movlw	0
  5315  001D2E  6E0F               	movwf	(generateCRC@i+1)^0,c
  5316  001D30  0E00               	movlw	0
  5317  001D32  6E0E               	movwf	generateCRC@i^0,c
  5318  001D34  EFCE  F00E         	goto	l5574
  5319  001D38                     l5556:
  5320                           
  5321                           ;Modbus.c: 230:       crc ^= MBRespon[i];
  5322  001D38  90D8               	bcf	status,0,c
  5323  001D3A  340E               	rlcf	generateCRC@i^0,w,c
  5324  001D3C  6ED9               	movwf	fsr2l,c
  5325  001D3E  340F               	rlcf	(generateCRC@i+1)^0,w,c
  5326  001D40  6EDA               	movwf	fsr2h,c
  5327  001D42  0E84               	movlw	low _MBRespon
  5328  001D44  26D9               	addwf	fsr2l,f,c
  5329  001D46  0E01               	movlw	high _MBRespon
  5330  001D48  22DA               	addwfc	fsr2h,f,c
  5331  001D4A  50DE               	movf	postinc2,w,c
  5332  001D4C  1A12               	xorwf	generateCRC@crc^0,f,c
  5333  001D4E  50DD               	movf	postdec2,w,c
  5334  001D50  1A13               	xorwf	(generateCRC@crc+1)^0,f,c
  5335  001D52                     
  5336                           ;Modbus.c: 231:       for(j=8; j!=0; j--){
  5337  001D52  0E00               	movlw	0
  5338  001D54  6E11               	movwf	(generateCRC@j+1)^0,c
  5339  001D56  0E08               	movlw	8
  5340  001D58  6E10               	movwf	generateCRC@j^0,c
  5341  001D5A                     l695:
  5342                           
  5343                           ;Modbus.c: 232:         if((crc & 0x0001) != 0){
  5344  001D5A  A012               	btfss	generateCRC@crc^0,0,c
  5345  001D5C  EFB2  F00E         	goto	u5391
  5346  001D60  EFB4  F00E         	goto	u5390
  5347  001D64                     u5391:
  5348  001D64  EFBD  F00E         	goto	l5568
  5349  001D68                     u5390:
  5350  001D68                     
  5351                           ;Modbus.c: 233:           crc >>= 1;
  5352  001D68  90D8               	bcf	status,0,c
  5353  001D6A  3213               	rrcf	(generateCRC@crc+1)^0,f,c
  5354  001D6C  3212               	rrcf	generateCRC@crc^0,f,c
  5355  001D6E                     
  5356                           ;Modbus.c: 234:           crc ^= 0xA001;
  5357  001D6E  0E01               	movlw	1
  5358  001D70  1A12               	xorwf	generateCRC@crc^0,f,c
  5359  001D72  0EA0               	movlw	160
  5360  001D74  1A13               	xorwf	(generateCRC@crc+1)^0,f,c
  5361                           
  5362                           ;Modbus.c: 235:         }
  5363  001D76  EFC0  F00E         	goto	l698
  5364  001D7A                     l5568:
  5365                           
  5366                           ;Modbus.c: 237:           crc >>= 1;
  5367  001D7A  90D8               	bcf	status,0,c
  5368  001D7C  3213               	rrcf	(generateCRC@crc+1)^0,f,c
  5369  001D7E  3212               	rrcf	generateCRC@crc^0,f,c
  5370  001D80                     l698:
  5371                           
  5372                           ;Modbus.c: 239:       }
  5373  001D80  0610               	decf	generateCRC@j^0,f,c
  5374  001D82  A0D8               	btfss	status,0,c
  5375  001D84  0611               	decf	(generateCRC@j+1)^0,f,c
  5376  001D86  5010               	movf	generateCRC@j^0,w,c
  5377  001D88  1011               	iorwf	(generateCRC@j+1)^0,w,c
  5378  001D8A  A4D8               	btfss	status,2,c
  5379  001D8C  EFCA  F00E         	goto	u5401
  5380  001D90  EFCC  F00E         	goto	u5400
  5381  001D94                     u5401:
  5382  001D94  EFAD  F00E         	goto	l695
  5383  001D98                     u5400:
  5384  001D98                     
  5385                           ;Modbus.c: 240:     }
  5386  001D98  4A0E               	infsnz	generateCRC@i^0,f,c
  5387  001D9A  2A0F               	incf	(generateCRC@i+1)^0,f,c
  5388  001D9C                     l5574:
  5389  001D9C  5005               	movf	generateCRC@MessCnt^0,w,c
  5390  001D9E  5C0E               	subwf	generateCRC@i^0,w,c
  5391  001DA0  500F               	movf	(generateCRC@i+1)^0,w,c
  5392  001DA2  0A80               	xorlw	128
  5393  001DA4  6E08               	movwf	??_generateCRC^0,c
  5394  001DA6  5006               	movf	(generateCRC@MessCnt+1)^0,w,c
  5395  001DA8  0A80               	xorlw	128
  5396  001DAA  5808               	subwfb	??_generateCRC^0,w,c
  5397  001DAC  A0D8               	btfss	status,0,c
  5398  001DAE  EFDB  F00E         	goto	u5411
  5399  001DB2  EFDD  F00E         	goto	u5410
  5400  001DB6                     u5411:
  5401  001DB6  EF9C  F00E         	goto	l5556
  5402  001DBA                     u5410:
  5403  001DBA                     
  5404                           ;Modbus.c: 242:     crcHigh = (crc & 0x00FF);
  5405  001DBA  5012               	movf	generateCRC@crc^0,w,c
  5406  001DBC  6E0A               	movwf	generateCRC@crcHigh^0,c
  5407  001DBE  6A0B               	clrf	(generateCRC@crcHigh+1)^0,c
  5408                           
  5409                           ;Modbus.c: 243:     crcLow = (crc & 0xFF00) >>8;
  5410  001DC0  C012  F008         	movff	generateCRC@crc,??_generateCRC
  5411  001DC4  C013  F009         	movff	generateCRC@crc+1,??_generateCRC+1
  5412  001DC8  C009  F008         	movff	??_generateCRC+1,??_generateCRC
  5413  001DCC  6A09               	clrf	(??_generateCRC+1)^0,c
  5414  001DCE  5008               	movf	??_generateCRC^0,w,c
  5415  001DD0  6E0C               	movwf	generateCRC@crcLow^0,c
  5416  001DD2  6A0D               	clrf	(generateCRC@crcLow+1)^0,c
  5417  001DD4                     
  5418                           ;Modbus.c: 245:     if(HiOrLo == 1){
  5419  001DD4  0407               	decf	generateCRC@HiOrLo^0,w,c
  5420  001DD6  A4D8               	btfss	status,2,c
  5421  001DD8  EFF0  F00E         	goto	u5421
  5422  001DDC  EFF2  F00E         	goto	u5420
  5423  001DE0                     u5421:
  5424  001DE0  EFF8  F00E         	goto	l700
  5425  001DE4                     u5420:
  5426  001DE4                     
  5427                           ;Modbus.c: 246:         return crcHigh;
  5428  001DE4  C00A  F005         	movff	generateCRC@crcHigh,?_generateCRC
  5429  001DE8  C00B  F006         	movff	generateCRC@crcHigh+1,?_generateCRC+1
  5430  001DEC  EFFC  F00E         	goto	l701
  5431  001DF0                     l700:
  5432                           
  5433                           ;Modbus.c: 248:         return crcLow;
  5434  001DF0  C00C  F005         	movff	generateCRC@crcLow,?_generateCRC
  5435  001DF4  C00D  F006         	movff	generateCRC@crcLow+1,?_generateCRC+1
  5436  001DF8                     l701:
  5437  001DF8  0012               	return		;funcret
  5438  001DFA                     __end_of_generateCRC:
  5439                           	opt callstack 0
  5440                           
  5441 ;; *************** function _UART1_Write_string *****************
  5442 ;; Defined at:
  5443 ;;		line 253 in file "Modbus.c"
  5444 ;; Parameters:    Size  Location     Type
  5445 ;;  data            2    5[COMRAM] PTR unsigned int 
  5446 ;;		 -> MBRespon(64), 
  5447 ;;  data_len        2    7[COMRAM] int 
  5448 ;; Auto vars:     Size  Location     Type
  5449 ;;  i               2   10[COMRAM] int 
  5450 ;; Return value:  Size  Location     Type
  5451 ;;                  1    wreg      void 
  5452 ;; Registers used:
  5453 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5454 ;; Tracked objects:
  5455 ;;		On entry : 0/0
  5456 ;;		On exit  : 0/0
  5457 ;;		Unchanged: 0/0
  5458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5459 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5460 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5461 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5462 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5463 ;;Total ram usage:        7 bytes
  5464 ;; Hardware stack levels used:    1
  5465 ;; Hardware stack levels required when called:    5
  5466 ;; This function calls:
  5467 ;;		_EUSART1_Write
  5468 ;;		_EUSART1_is_tx_done
  5469 ;;		_EUSART1_is_tx_ready
  5470 ;;		_TXMode
  5471 ;; This function is called by:
  5472 ;;		_ModbusFC03
  5473 ;;		_ModbusFC10
  5474 ;;		_ModbusError
  5475 ;; This function uses a non-reentrant model
  5476 ;;
  5477                           
  5478                           	psect	text31
  5479  002720                     __ptext31:
  5480                           	opt callstack 0
  5481  002720                     _UART1_Write_string:
  5482                           	opt callstack 24
  5483  002720                     
  5484                           ;Modbus.c: 253: void UART1_Write_string(unsigned int * data, int data_len);Modbus.c: 254
      +                          : {;Modbus.c: 255:     TXMode();
  5485  002720  ECA6  F017         	call	_TXMode	;wreg free
  5486  002724                     l5600:
  5487  002724  EC4B  F017         	call	_EUSART1_is_tx_ready	;wreg free
  5488  002728  0900               	iorlw	0
  5489  00272A  B4D8               	btfsc	status,2,c
  5490  00272C  EF9A  F013         	goto	u5441
  5491  002730  EF9C  F013         	goto	u5440
  5492  002734                     u5441:
  5493  002734  EF92  F013         	goto	l5600
  5494  002738                     u5440:
  5495  002738                     
  5496                           ;Modbus.c: 257:     for (int i = 0; i < data_len; i++) {
  5497  002738  0E00               	movlw	0
  5498  00273A  6E0C               	movwf	(UART1_Write_string@i+1)^0,c
  5499  00273C  0E00               	movlw	0
  5500  00273E  6E0B               	movwf	UART1_Write_string@i^0,c
  5501  002740  EFBA  F013         	goto	l5610
  5502  002744                     l5604:
  5503                           
  5504                           ;Modbus.c: 258:         EUSART1_Write(data[i]);
  5505  002744  90D8               	bcf	status,0,c
  5506  002746  340B               	rlcf	UART1_Write_string@i^0,w,c
  5507  002748  6ED9               	movwf	fsr2l,c
  5508  00274A  340C               	rlcf	(UART1_Write_string@i+1)^0,w,c
  5509  00274C  6EDA               	movwf	fsr2h,c
  5510  00274E  5006               	movf	UART1_Write_string@data^0,w,c
  5511  002750  26D9               	addwf	fsr2l,f,c
  5512  002752  5007               	movf	(UART1_Write_string@data+1)^0,w,c
  5513  002754  22DA               	addwfc	fsr2h,f,c
  5514  002756  50DF               	movf	indf2,w,c
  5515  002758  EC30  F014         	call	_EUSART1_Write
  5516  00275C                     l5606:
  5517  00275C  EC57  F017         	call	_EUSART1_is_tx_done	;wreg free
  5518  002760  0900               	iorlw	0
  5519  002762  B4D8               	btfsc	status,2,c
  5520  002764  EFB6  F013         	goto	u5451
  5521  002768  EFB8  F013         	goto	u5450
  5522  00276C                     u5451:
  5523  00276C  EFAE  F013         	goto	l5606
  5524  002770                     u5450:
  5525  002770                     
  5526                           ;Modbus.c: 260:     }
  5527  002770  4A0B               	infsnz	UART1_Write_string@i^0,f,c
  5528  002772  2A0C               	incf	(UART1_Write_string@i+1)^0,f,c
  5529  002774                     l5610:
  5530  002774  5008               	movf	UART1_Write_string@data_len^0,w,c
  5531  002776  5C0B               	subwf	UART1_Write_string@i^0,w,c
  5532  002778  500C               	movf	(UART1_Write_string@i+1)^0,w,c
  5533  00277A  0A80               	xorlw	128
  5534  00277C  6E0A               	movwf	??_UART1_Write_string^0,c
  5535  00277E  5009               	movf	(UART1_Write_string@data_len+1)^0,w,c
  5536  002780  0A80               	xorlw	128
  5537  002782  580A               	subwfb	??_UART1_Write_string^0,w,c
  5538  002784  A0D8               	btfss	status,0,c
  5539  002786  EFC7  F013         	goto	u5461
  5540  00278A  EFC9  F013         	goto	u5460
  5541  00278E                     u5461:
  5542  00278E  EFA2  F013         	goto	l5604
  5543  002792                     u5460:
  5544  002792  0012               	return		;funcret
  5545  002794                     __end_of_UART1_Write_string:
  5546                           	opt callstack 0
  5547                           
  5548 ;; *************** function _TXMode *****************
  5549 ;; Defined at:
  5550 ;;		line 44 in file "Modbus.c"
  5551 ;; Parameters:    Size  Location     Type
  5552 ;;		None
  5553 ;; Auto vars:     Size  Location     Type
  5554 ;;		None
  5555 ;; Return value:  Size  Location     Type
  5556 ;;                  1    wreg      void 
  5557 ;; Registers used:
  5558 ;;		None
  5559 ;; Tracked objects:
  5560 ;;		On entry : 0/0
  5561 ;;		On exit  : 0/0
  5562 ;;		Unchanged: 0/0
  5563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5568 ;;Total ram usage:        0 bytes
  5569 ;; Hardware stack levels used:    1
  5570 ;; Hardware stack levels required when called:    4
  5571 ;; This function calls:
  5572 ;;		Nothing
  5573 ;; This function is called by:
  5574 ;;		_UART1_Write_string
  5575 ;; This function uses a non-reentrant model
  5576 ;;
  5577                           
  5578                           	psect	text32
  5579  002F4C                     __ptext32:
  5580                           	opt callstack 0
  5581  002F4C                     _TXMode:
  5582                           	opt callstack 24
  5583  002F4C  8086               	bsf	134,0,c	;volatile
  5584  002F4E  8683               	bsf	131,3,c	;volatile
  5585  002F50  0012               	return		;funcret
  5586  002F52                     __end_of_TXMode:
  5587                           	opt callstack 0
  5588                           
  5589 ;; *************** function _EUSART1_is_tx_ready *****************
  5590 ;; Defined at:
  5591 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  5592 ;; Parameters:    Size  Location     Type
  5593 ;;		None
  5594 ;; Auto vars:     Size  Location     Type
  5595 ;;		None
  5596 ;; Return value:  Size  Location     Type
  5597 ;;                  1    wreg      _Bool 
  5598 ;; Registers used:
  5599 ;;		wreg, status,2
  5600 ;; Tracked objects:
  5601 ;;		On entry : 0/0
  5602 ;;		On exit  : 0/0
  5603 ;;		Unchanged: 0/0
  5604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5609 ;;Total ram usage:        0 bytes
  5610 ;; Hardware stack levels used:    1
  5611 ;; Hardware stack levels required when called:    4
  5612 ;; This function calls:
  5613 ;;		Nothing
  5614 ;; This function is called by:
  5615 ;;		_UART1_Write_string
  5616 ;; This function uses a non-reentrant model
  5617 ;;
  5618                           
  5619                           	psect	text33
  5620  002E96                     __ptext33:
  5621                           	opt callstack 0
  5622  002E96                     _EUSART1_is_tx_ready:
  5623                           	opt callstack 24
  5624  002E96                     
  5625                           ;mcc_generated_files/eusart1.c: 134:     return (eusart1TxBufferRemaining ? 1 : 0);
  5626  002E96  0100               	movlb	0	; () banked
  5627  002E98  51F1               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
  5628  002E9A  A4D8               	btfss	status,2,c
  5629  002E9C  EF52  F017         	goto	u5191
  5630  002EA0  EF55  F017         	goto	u5190
  5631  002EA4                     u5191:
  5632  002EA4  0E01               	movlw	1
  5633  002EA6  EF56  F017         	goto	u5200
  5634  002EAA                     u5190:
  5635  002EAA  0E00               	movlw	0
  5636  002EAC                     u5200:
  5637  002EAC                     
  5638                           ; BSR set to: 0
  5639  002EAC  0012               	return		;funcret
  5640  002EAE                     __end_of_EUSART1_is_tx_ready:
  5641                           	opt callstack 0
  5642                           
  5643 ;; *************** function _EUSART1_is_tx_done *****************
  5644 ;; Defined at:
  5645 ;;		line 142 in file "mcc_generated_files/eusart1.c"
  5646 ;; Parameters:    Size  Location     Type
  5647 ;;		None
  5648 ;; Auto vars:     Size  Location     Type
  5649 ;;		None
  5650 ;; Return value:  Size  Location     Type
  5651 ;;                  1    wreg      _Bool 
  5652 ;; Registers used:
  5653 ;;		wreg
  5654 ;; Tracked objects:
  5655 ;;		On entry : 0/0
  5656 ;;		On exit  : 0/0
  5657 ;;		Unchanged: 0/0
  5658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5663 ;;Total ram usage:        0 bytes
  5664 ;; Hardware stack levels used:    1
  5665 ;; Hardware stack levels required when called:    4
  5666 ;; This function calls:
  5667 ;;		Nothing
  5668 ;; This function is called by:
  5669 ;;		_UART1_Write_string
  5670 ;; This function uses a non-reentrant model
  5671 ;;
  5672                           
  5673                           	psect	text34
  5674  002EAE                     __ptext34:
  5675                           	opt callstack 0
  5676  002EAE                     _EUSART1_is_tx_done:
  5677                           	opt callstack 24
  5678  002EAE                     
  5679                           ;mcc_generated_files/eusart1.c: 144:     return TX1STAbits.TRMT;
  5680  002EAE  B29E               	btfsc	158,1,c	;volatile
  5681  002EB0  EF5C  F017         	goto	u5211
  5682  002EB4  EF5F  F017         	goto	u5210
  5683  002EB8                     u5211:
  5684  002EB8  0E01               	movlw	1
  5685  002EBA  EF60  F017         	goto	u5216
  5686  002EBE                     u5210:
  5687  002EBE  0E00               	movlw	0
  5688  002EC0                     u5216:
  5689  002EC0  0012               	return		;funcret
  5690  002EC2                     __end_of_EUSART1_is_tx_done:
  5691                           	opt callstack 0
  5692                           
  5693 ;; *************** function _EUSART1_Write *****************
  5694 ;; Defined at:
  5695 ;;		line 173 in file "mcc_generated_files/eusart1.c"
  5696 ;; Parameters:    Size  Location     Type
  5697 ;;  txData          1    wreg     unsigned char 
  5698 ;; Auto vars:     Size  Location     Type
  5699 ;;  txData          1    4[COMRAM] unsigned char 
  5700 ;; Return value:  Size  Location     Type
  5701 ;;                  1    wreg      void 
  5702 ;; Registers used:
  5703 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5704 ;; Tracked objects:
  5705 ;;		On entry : 0/0
  5706 ;;		On exit  : 0/0
  5707 ;;		Unchanged: 0/0
  5708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5710 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5712 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5713 ;;Total ram usage:        1 bytes
  5714 ;; Hardware stack levels used:    1
  5715 ;; Hardware stack levels required when called:    4
  5716 ;; This function calls:
  5717 ;;		Nothing
  5718 ;; This function is called by:
  5719 ;;		_UART1_Write_string
  5720 ;; This function uses a non-reentrant model
  5721 ;;
  5722                           
  5723                           	psect	text35
  5724  002860                     __ptext35:
  5725                           	opt callstack 0
  5726  002860                     _EUSART1_Write:
  5727                           	opt callstack 24
  5728                           
  5729                           ;incstack = 0
  5730                           ;EUSART1_Write@txData stored from wreg
  5731  002860  6E05               	movwf	EUSART1_Write@txData^0,c
  5732  002862                     l5342:
  5733                           
  5734                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
  5735  002862  0100               	movlb	0	; () banked
  5736  002864  51F1               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
  5737  002866  B4D8               	btfsc	status,2,c
  5738  002868  EF38  F014         	goto	u5221
  5739  00286C  EF3A  F014         	goto	u5220
  5740  002870                     u5221:
  5741  002870  EF31  F014         	goto	l5342
  5742  002874                     u5220:
  5743  002874                     
  5744                           ; BSR set to: 0
  5745                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE3bits.TX1IE)
  5746  002874  010E               	movlb	14	; () banked
  5747  002876  B9C5               	btfsc	197,4,b	;volatile
  5748  002878  EF40  F014         	goto	u5231
  5749  00287C  EF42  F014         	goto	u5230
  5750  002880                     u5231:
  5751  002880  EF46  F014         	goto	l471
  5752  002884                     u5230:
  5753  002884                     
  5754                           ; BSR set to: 14
  5755                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          X1REG = txData;
  5756  002884  C005  FF9A         	movff	EUSART1_Write@txData,3994	;volatile
  5757                           
  5758                           ;mcc_generated_files/eusart1.c: 182:     }
  5759  002888  EF5C  F014         	goto	l5356
  5760  00288C                     l471:
  5761                           
  5762                           ; BSR set to: 14
  5763                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE3bits.TX1IE = 0;
  5764  00288C  99C5               	bcf	197,4,b	;volatile
  5765  00288E                     
  5766                           ; BSR set to: 14
  5767                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
  5768  00288E  0E60               	movlw	low _eusart1TxBuffer
  5769  002890  0100               	movlb	0	; () banked
  5770  002892  259F               	addwf	_eusart1TxHead& (0+255),w,b	;volatile
  5771  002894  6ED9               	movwf	fsr2l,c
  5772  002896  6ADA               	clrf	fsr2h,c
  5773  002898  0E00               	movlw	high _eusart1TxBuffer
  5774  00289A  22DA               	addwfc	fsr2h,f,c
  5775  00289C  C005  FFDF         	movff	EUSART1_Write@txData,indf2
  5776  0028A0                     
  5777                           ; BSR set to: 0
  5778  0028A0  2B9F               	incf	_eusart1TxHead& (0+255),f,b	;volatile
  5779  0028A2                     
  5780                           ; BSR set to: 0
  5781                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
  5782  0028A2  0E0F               	movlw	15
  5783  0028A4  659F               	cpfsgt	_eusart1TxHead& (0+255),b	;volatile
  5784  0028A6  EF57  F014         	goto	u5241
  5785  0028AA  EF59  F014         	goto	u5240
  5786  0028AE                     u5241:
  5787  0028AE  EF5B  F014         	goto	l5354
  5788  0028B2                     u5240:
  5789  0028B2                     
  5790                           ; BSR set to: 0
  5791                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
  5792  0028B2  0E00               	movlw	0
  5793  0028B4  6F9F               	movwf	_eusart1TxHead& (0+255),b	;volatile
  5794  0028B6                     l5354:
  5795                           
  5796                           ; BSR set to: 0
  5797                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
  5798  0028B6  07F1               	decf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
  5799  0028B8                     l5356:
  5800                           
  5801                           ;mcc_generated_files/eusart1.c: 193:     PIE3bits.TX1IE = 1;
  5802  0028B8  010E               	movlb	14	; () banked
  5803  0028BA  89C5               	bsf	197,4,b	;volatile
  5804  0028BC                     
  5805                           ; BSR set to: 14
  5806  0028BC  0012               	return		;funcret
  5807  0028BE                     __end_of_EUSART1_Write:
  5808                           	opt callstack 0
  5809                           
  5810 ;; *************** function _PrintModRespon *****************
  5811 ;; Defined at:
  5812 ;;		line 266 in file "Modbus.c"
  5813 ;; Parameters:    Size  Location     Type
  5814 ;;		None
  5815 ;; Auto vars:     Size  Location     Type
  5816 ;;  i               2   41[BANK0 ] int 
  5817 ;; Return value:  Size  Location     Type
  5818 ;;                  1    wreg      void 
  5819 ;; Registers used:
  5820 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5821 ;; Tracked objects:
  5822 ;;		On entry : 0/0
  5823 ;;		On exit  : 0/0
  5824 ;;		Unchanged: 0/0
  5825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5827 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5828 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5829 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5830 ;;Total ram usage:        3 bytes
  5831 ;; Hardware stack levels used:    1
  5832 ;; Hardware stack levels required when called:   13
  5833 ;; This function calls:
  5834 ;;		_printf
  5835 ;; This function is called by:
  5836 ;;		_ModbusFC03
  5837 ;;		_ModbusFC10
  5838 ;;		_ModbusError
  5839 ;; This function uses a non-reentrant model
  5840 ;;
  5841                           
  5842                           	psect	text36
  5843  0025B0                     __ptext36:
  5844                           	opt callstack 0
  5845  0025B0                     _PrintModRespon:
  5846                           	opt callstack 16
  5847  0025B0                     
  5848                           ;Modbus.c: 269:     printf("Modbus Response:\r\n");
  5849  0025B0  0EC7               	movlw	low STR_16
  5850  0025B2  0100               	movlb	0	; () banked
  5851  0025B4  6FC2               	movwf	printf@fmt& (0+255),b
  5852  0025B6  0EFF               	movlw	high STR_16
  5853  0025B8  6FC3               	movwf	(printf@fmt+1)& (0+255),b
  5854  0025BA  ECF1  F016         	call	_printf	;wreg free
  5855  0025BE                     
  5856                           ;Modbus.c: 270:     for(i=0; i< MBResCnt ; i++ ){
  5857  0025BE  0E00               	movlw	0
  5858  0025C0  0100               	movlb	0	; () banked
  5859  0025C2  6FCF               	movwf	(PrintModRespon@i+1)& (0+255),b
  5860  0025C4  0E00               	movlw	0
  5861  0025C6  6FCE               	movwf	PrintModRespon@i& (0+255),b
  5862  0025C8  EF00  F013         	goto	l5594
  5863  0025CC                     l5590:
  5864                           
  5865                           ; BSR set to: 0
  5866                           ;Modbus.c: 271:         printf("   Byte %i : 0x%02x \r\n", i, MBRespon[i]);
  5867  0025CC  0E71               	movlw	low STR_17
  5868  0025CE  6FC2               	movwf	printf@fmt& (0+255),b
  5869  0025D0  0EFF               	movlw	high STR_17
  5870  0025D2  6FC3               	movwf	(printf@fmt+1)& (0+255),b
  5871  0025D4  C0CE  F0C4         	movff	PrintModRespon@i,?_printf+2
  5872  0025D8  C0CF  F0C5         	movff	PrintModRespon@i+1,?_printf+3
  5873  0025DC  90D8               	bcf	status,0,c
  5874  0025DE  35CE               	rlcf	PrintModRespon@i& (0+255),w,b
  5875  0025E0  6ED9               	movwf	fsr2l,c
  5876  0025E2  35CF               	rlcf	(PrintModRespon@i+1)& (0+255),w,b
  5877  0025E4  6EDA               	movwf	fsr2h,c
  5878  0025E6  0E84               	movlw	low _MBRespon
  5879  0025E8  26D9               	addwf	fsr2l,f,c
  5880  0025EA  0E01               	movlw	high _MBRespon
  5881  0025EC  22DA               	addwfc	fsr2h,f,c
  5882  0025EE  CFDE F0C6          	movff	postinc2,?_printf+4
  5883  0025F2  CFDD F0C7          	movff	postdec2,?_printf+5
  5884  0025F6  ECF1  F016         	call	_printf	;wreg free
  5885  0025FA                     
  5886                           ;Modbus.c: 272:     }
  5887  0025FA  0100               	movlb	0	; () banked
  5888  0025FC  4BCE               	infsnz	PrintModRespon@i& (0+255),f,b
  5889  0025FE  2BCF               	incf	(PrintModRespon@i+1)& (0+255),f,b
  5890  002600                     l5594:
  5891                           
  5892                           ; BSR set to: 0
  5893  002600  5190               	movf	_MBResCnt& (0+255),w,b
  5894  002602  5DCE               	subwf	PrintModRespon@i& (0+255),w,b
  5895  002604  51CF               	movf	(PrintModRespon@i+1)& (0+255),w,b
  5896  002606  0A80               	xorlw	128
  5897  002608  6E55               	movwf	??_PrintModRespon^0,c
  5898  00260A  5191               	movf	(_MBResCnt+1)& (0+255),w,b
  5899  00260C  0A80               	xorlw	128
  5900  00260E  5855               	subwfb	??_PrintModRespon^0,w,c
  5901  002610  A0D8               	btfss	status,0,c
  5902  002612  EF0D  F013         	goto	u5431
  5903  002616  EF0F  F013         	goto	u5430
  5904  00261A                     u5431:
  5905  00261A  EFE6  F012         	goto	l5590
  5906  00261E                     u5430:
  5907  00261E                     
  5908                           ; BSR set to: 0
  5909                           ;Modbus.c: 273:     printf("\r\n\n");
  5910  00261E  0E99               	movlw	low (STR_22+17)
  5911  002620  6FC2               	movwf	printf@fmt& (0+255),b
  5912  002622  0EFF               	movlw	high (STR_22+17)
  5913  002624  6FC3               	movwf	(printf@fmt+1)& (0+255),b
  5914  002626  ECF1  F016         	call	_printf	;wreg free
  5915  00262A  0012               	return		;funcret
  5916  00262C                     __end_of_PrintModRespon:
  5917                           	opt callstack 0
  5918                           
  5919 ;; *************** function _InitialiseString *****************
  5920 ;; Defined at:
  5921 ;;		line 28 in file "main.c"
  5922 ;; Parameters:    Size  Location     Type
  5923 ;;		None
  5924 ;; Auto vars:     Size  Location     Type
  5925 ;;		None
  5926 ;; Return value:  Size  Location     Type
  5927 ;;                  1    wreg      void 
  5928 ;; Registers used:
  5929 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5930 ;; Tracked objects:
  5931 ;;		On entry : 0/0
  5932 ;;		On exit  : 0/0
  5933 ;;		Unchanged: 0/0
  5934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5939 ;;Total ram usage:        0 bytes
  5940 ;; Hardware stack levels used:    1
  5941 ;; Hardware stack levels required when called:   13
  5942 ;; This function calls:
  5943 ;;		_printf
  5944 ;; This function is called by:
  5945 ;;		_main
  5946 ;; This function uses a non-reentrant model
  5947 ;;
  5948                           
  5949                           	psect	text37
  5950  00262C                     __ptext37:
  5951                           	opt callstack 0
  5952  00262C                     _InitialiseString:
  5953                           	opt callstack 17
  5954  00262C                     
  5955                           ;main.c: 31:     printf("\rDan and Sam's Modbus GPIO Expansion - AP000xxxxx V0.1\r\n");
  5956  00262C  0EB5               	movlw	low STR_1
  5957  00262E  0100               	movlb	0	; () banked
  5958  002630  6FC2               	movwf	printf@fmt& (0+255),b
  5959  002632  0EFD               	movlw	high STR_1
  5960  002634  6FC3               	movwf	(printf@fmt+1)& (0+255),b
  5961  002636  ECF1  F016         	call	_printf	;wreg free
  5962                           
  5963                           ;main.c: 32:     printf("\rCard Ser No. xxxxxxx \r\n");
  5964  00263A  0E40               	movlw	low STR_2
  5965  00263C  0100               	movlb	0	; () banked
  5966  00263E  6FC2               	movwf	printf@fmt& (0+255),b
  5967  002640  0EFF               	movlw	high STR_2
  5968  002642  6FC3               	movwf	(printf@fmt+1)& (0+255),b
  5969  002644  ECF1  F016         	call	_printf	;wreg free
  5970                           
  5971                           ;main.c: 33:     printf("\rCompiled on %s at %s by XC8 version %u\r\n\n",
  5972  002648  0E5A               	movlw	low STR_3
  5973  00264A  0100               	movlb	0	; () banked
  5974  00264C  6FC2               	movwf	printf@fmt& (0+255),b
  5975  00264E  0EFE               	movlw	high STR_3
  5976  002650  6FC3               	movwf	(printf@fmt+1)& (0+255),b
  5977  002652  0EEA               	movlw	low STR_4
  5978  002654  6FC4               	movwf	(?_printf+2)& (0+255),b
  5979  002656  0EFF               	movlw	high STR_4
  5980  002658  6FC5               	movwf	(?_printf+3)& (0+255),b
  5981  00265A  0EF6               	movlw	low STR_5
  5982  00265C  6FC6               	movwf	(?_printf+4)& (0+255),b
  5983  00265E  0EFF               	movlw	high STR_5
  5984  002660  6FC7               	movwf	(?_printf+5)& (0+255),b
  5985  002662  0E08               	movlw	8
  5986  002664  6FC9               	movwf	(?_printf+7)& (0+255),b
  5987  002666  0E34               	movlw	52
  5988  002668  6FC8               	movwf	(?_printf+6)& (0+255),b
  5989  00266A  ECF1  F016         	call	_printf	;wreg free
  5990                           
  5991                           ;main.c: 35:     printf("\rFunction Codes Supported:\r\n");
  5992  00266E  0EEC               	movlw	low STR_6
  5993  002670  0100               	movlb	0	; () banked
  5994  002672  6FC2               	movwf	printf@fmt& (0+255),b
  5995  002674  0EFE               	movlw	high STR_6
  5996  002676  6FC3               	movwf	(printf@fmt+1)& (0+255),b
  5997  002678  ECF1  F016         	call	_printf	;wreg free
  5998                           
  5999                           ;main.c: 36:     printf("\r   0x03 - Read Multiple Registers (Max 32x 16bit)\r\n");
  6000  00267C  0E25               	movlw	low STR_7
  6001  00267E  0100               	movlb	0	; () banked
  6002  002680  6FC2               	movwf	printf@fmt& (0+255),b
  6003  002682  0EFE               	movlw	high STR_7
  6004  002684  6FC3               	movwf	(printf@fmt+1)& (0+255),b
  6005  002686  ECF1  F016         	call	_printf	;wreg free
  6006                           
  6007                           ;main.c: 37:     printf("\r   0x10 - Write Multiple Registers (Max 32x 16bit)\r\n\n");
  6008  00268A  0EEE               	movlw	low STR_8
  6009  00268C  0100               	movlb	0	; () banked
  6010  00268E  6FC2               	movwf	printf@fmt& (0+255),b
  6011  002690  0EFD               	movlw	high STR_8
  6012  002692  6FC3               	movwf	(printf@fmt+1)& (0+255),b
  6013  002694  ECF1  F016         	call	_printf	;wreg free
  6014                           
  6015                           ;main.c: 38:     printf("\rInitalisation Complete - Ready\r\n\n");
  6016  002698  0EA9               	movlw	low STR_9
  6017  00269A  0100               	movlb	0	; () banked
  6018  00269C  6FC2               	movwf	printf@fmt& (0+255),b
  6019  00269E  0EFE               	movlw	high STR_9
  6020  0026A0  6FC3               	movwf	(printf@fmt+1)& (0+255),b
  6021  0026A2  ECF1  F016         	call	_printf	;wreg free
  6022  0026A6  0012               	return		;funcret
  6023  0026A8                     __end_of_InitialiseString:
  6024                           	opt callstack 0
  6025                           
  6026 ;; *************** function _printf *****************
  6027 ;; Defined at:
  6028 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
  6029 ;; Parameters:    Size  Location     Type
  6030 ;;  fmt             2   29[BANK0 ] PTR const unsigned char 
  6031 ;;		 -> STR_23(27), STR_22(21), STR_21(4), STR_20(23), 
  6032 ;;		 -> STR_19(32), STR_18(4), STR_17(23), STR_16(19), 
  6033 ;;		 -> STR_15(36), STR_14(24), STR_13(16), STR_12(28), 
  6034 ;;		 -> STR_11(21), STR_10(21), STR_9(35), STR_8(55), 
  6035 ;;		 -> STR_7(53), STR_6(29), STR_3(43), STR_2(25), 
  6036 ;;		 -> STR_1(57), 
  6037 ;; Auto vars:     Size  Location     Type
  6038 ;;  ap              2   39[BANK0 ] PTR void [1]
  6039 ;;		 -> ?_printf(2), 
  6040 ;;  ret             2    0        int 
  6041 ;; Return value:  Size  Location     Type
  6042 ;;                  2   29[BANK0 ] int 
  6043 ;; Registers used:
  6044 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6045 ;; Tracked objects:
  6046 ;;		On entry : 0/0
  6047 ;;		On exit  : 0/0
  6048 ;;		Unchanged: 0/0
  6049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6050 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6051 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6053 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6054 ;;Total ram usage:       12 bytes
  6055 ;; Hardware stack levels used:    1
  6056 ;; Hardware stack levels required when called:   12
  6057 ;; This function calls:
  6058 ;;		_vfprintf
  6059 ;; This function is called by:
  6060 ;;		_InitialiseString
  6061 ;;		_main
  6062 ;;		_PrintMB400
  6063 ;;		_checkCRC
  6064 ;;		_PrintModRespon
  6065 ;;		_PrintModbus
  6066 ;;		_ModbusRx
  6067 ;; This function uses a non-reentrant model
  6068 ;;
  6069                           
  6070                           	psect	text38
  6071  002DE2                     __ptext38:
  6072                           	opt callstack 0
  6073  002DE2                     _printf:
  6074                           	opt callstack 18
  6075  002DE2  0EC4               	movlw	low (?_printf+2)
  6076  002DE4  0100               	movlb	0	; () banked
  6077  002DE6  6FCC               	movwf	printf@ap& (0+255),b
  6078  002DE8  0E00               	movlw	high (?_printf+2)
  6079  002DEA  6FCD               	movwf	(printf@ap+1)& (0+255),b
  6080  002DEC                     
  6081                           ; BSR set to: 0
  6082  002DEC  0E00               	movlw	0
  6083  002DEE  6FBC               	movwf	vfprintf@fp& (0+255),b
  6084  002DF0  0E00               	movlw	0
  6085  002DF2  6FBD               	movwf	(vfprintf@fp+1)& (0+255),b
  6086  002DF4  C0C2  F0BE         	movff	printf@fmt,vfprintf@fmt
  6087  002DF8  C0C3  F0BF         	movff	printf@fmt+1,vfprintf@fmt+1
  6088  002DFC  0ECC               	movlw	low printf@ap
  6089  002DFE  6FC0               	movwf	vfprintf@ap& (0+255),b
  6090  002E00  0E00               	movlw	high printf@ap
  6091  002E02  6FC1               	movwf	(vfprintf@ap+1)& (0+255),b
  6092  002E04  ECFE  F013         	call	_vfprintf	;wreg free
  6093  002E08  0012               	return		;funcret
  6094  002E0A                     __end_of_printf:
  6095                           	opt callstack 0
  6096                           
  6097 ;; *************** function _vfprintf *****************
  6098 ;; Defined at:
  6099 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6100 ;; Parameters:    Size  Location     Type
  6101 ;;  fp              2   23[BANK0 ] PTR struct _IO_FILE
  6102 ;;		 -> NULL(0), 
  6103 ;;  fmt             2   25[BANK0 ] PTR const unsigned char 
  6104 ;;		 -> STR_23(27), STR_22(21), STR_21(4), STR_20(23), 
  6105 ;;		 -> STR_19(32), STR_18(4), STR_17(23), STR_16(19), 
  6106 ;;		 -> STR_15(36), STR_14(24), STR_13(16), STR_12(28), 
  6107 ;;		 -> STR_11(21), STR_10(21), STR_9(35), STR_8(55), 
  6108 ;;		 -> STR_7(53), STR_6(29), STR_3(43), STR_2(25), 
  6109 ;;		 -> STR_1(57), 
  6110 ;;  ap              2   27[BANK0 ] PTR PTR void 
  6111 ;;		 -> printf@ap(2), 
  6112 ;; Auto vars:     Size  Location     Type
  6113 ;;  cfmt            2   82[COMRAM] PTR unsigned char 
  6114 ;;		 -> STR_23(27), STR_22(21), STR_21(4), STR_20(23), 
  6115 ;;		 -> STR_19(32), STR_18(4), STR_17(23), STR_16(19), 
  6116 ;;		 -> STR_15(36), STR_14(24), STR_13(16), STR_12(28), 
  6117 ;;		 -> STR_11(21), STR_10(21), STR_9(35), STR_8(55), 
  6118 ;;		 -> STR_7(53), STR_6(29), STR_3(43), STR_2(25), 
  6119 ;;		 -> STR_1(57), 
  6120 ;; Return value:  Size  Location     Type
  6121 ;;                  2   23[BANK0 ] int 
  6122 ;; Registers used:
  6123 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6124 ;; Tracked objects:
  6125 ;;		On entry : 0/0
  6126 ;;		On exit  : 0/0
  6127 ;;		Unchanged: 0/0
  6128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6129 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6130 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6132 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6133 ;;Total ram usage:        8 bytes
  6134 ;; Hardware stack levels used:    1
  6135 ;; Hardware stack levels required when called:   11
  6136 ;; This function calls:
  6137 ;;		_vfpfcnvrt
  6138 ;; This function is called by:
  6139 ;;		_printf
  6140 ;; This function uses a non-reentrant model
  6141 ;;
  6142                           
  6143                           	psect	text39
  6144  0027FC                     __ptext39:
  6145                           	opt callstack 0
  6146  0027FC                     _vfprintf:
  6147                           	opt callstack 18
  6148  0027FC                     
  6149                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  6150  0027FC  C0BE  F053         	movff	vfprintf@fmt,vfprintf@cfmt
  6151  002800  C0BF  F054         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  6152  002804                     
  6153                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  6154  002804  0E00               	movlw	0
  6155  002806  0100               	movlb	0	; () banked
  6156  002808  6F89               	movwf	(_nout+1)& (0+255),b
  6157  00280A  0E00               	movlw	0
  6158  00280C  6F88               	movwf	_nout& (0+255),b
  6159                           
  6160                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  6161  00280E  EF1C  F014         	goto	l5310
  6162  002812                     l5308:
  6163                           
  6164                           ; BSR set to: 0
  6165                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  6166  002812  C0BC  F049         	movff	vfprintf@fp,vfpfcnvrt@fp
  6167  002816  C0BD  F04A         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  6168  00281A  0E53               	movlw	low vfprintf@cfmt
  6169  00281C  6E4B               	movwf	vfpfcnvrt@fmt^0,c
  6170  00281E  0E00               	movlw	high vfprintf@cfmt
  6171  002820  6E4C               	movwf	(vfpfcnvrt@fmt+1)^0,c
  6172  002822  C0C0  F04D         	movff	vfprintf@ap,vfpfcnvrt@ap
  6173  002826  C0C1  F04E         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  6174  00282A  EC95  F000         	call	_vfpfcnvrt	;wreg free
  6175  00282E  5049               	movf	?_vfpfcnvrt^0,w,c
  6176  002830  0100               	movlb	0	; () banked
  6177  002832  2788               	addwf	_nout& (0+255),f,b
  6178  002834  504A               	movf	(?_vfpfcnvrt+1)^0,w,c
  6179  002836  2389               	addwfc	(_nout+1)& (0+255),f,b
  6180  002838                     l5310:
  6181                           
  6182                           ; BSR set to: 0
  6183                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  6184  002838  C053  FFF6         	movff	vfprintf@cfmt,tblptrl
  6185  00283C  C054  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  6186  002840                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6187  002840  6AF8               	clrf	tblptru,c
  6188  002842                     	endif
  6189  002842                     	if	0	;tblptru may be non-zero
  6190  002842                     	endif
  6191  002842  0008               	tblrd		*
  6192  002844  50F5               	movf	tablat,w,c
  6193  002846  0900               	iorlw	0
  6194  002848  A4D8               	btfss	status,2,c
  6195  00284A  EF29  F014         	goto	u5181
  6196  00284E  EF2B  F014         	goto	u5180
  6197  002852                     u5181:
  6198  002852  EF09  F014         	goto	l5308
  6199  002856                     u5180:
  6200  002856                     
  6201                           ; BSR set to: 0
  6202                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  6203  002856  C088  F0BC         	movff	_nout,?_vfprintf
  6204  00285A  C089  F0BD         	movff	_nout+1,?_vfprintf+1
  6205  00285E                     
  6206                           ; BSR set to: 0
  6207  00285E  0012               	return		;funcret
  6208  002860                     __end_of_vfprintf:
  6209                           	opt callstack 0
  6210                           
  6211 ;; *************** function _vfpfcnvrt *****************
  6212 ;; Defined at:
  6213 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6214 ;; Parameters:    Size  Location     Type
  6215 ;;  fp              2   72[COMRAM] PTR struct _IO_FILE
  6216 ;;		 -> NULL(0), 
  6217 ;;  fmt             2   74[COMRAM] PTR PTR unsigned char 
  6218 ;;		 -> vfprintf@cfmt(2), 
  6219 ;;  ap              2   76[COMRAM] PTR PTR void 
  6220 ;;		 -> printf@ap(2), 
  6221 ;; Auto vars:     Size  Location     Type
  6222 ;;  llu             8   15[BANK0 ] unsigned long long 
  6223 ;;  ll              8    0[BANK0 ] long long 
  6224 ;;  f               4    0        long long 
  6225 ;;  vp              3    0        PTR void 
  6226 ;;  ct              3    0        unsigned char [3]
  6227 ;;  done            2   11[BANK0 ] int 
  6228 ;;  cp              2    8[BANK0 ] PTR unsigned char 
  6229 ;;		 -> ?_printf(2), STR_5(9), STR_4(12), 
  6230 ;;  i               2    0        int 
  6231 ;;  c               1   10[BANK0 ] unsigned char 
  6232 ;; Return value:  Size  Location     Type
  6233 ;;                  2   72[COMRAM] int 
  6234 ;; Registers used:
  6235 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6236 ;; Tracked objects:
  6237 ;;		On entry : 0/0
  6238 ;;		On exit  : 0/0
  6239 ;;		Unchanged: 0/0
  6240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6241 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6242 ;;      Locals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6243 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6244 ;;      Totals:        10      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6245 ;;Total ram usage:       33 bytes
  6246 ;; Hardware stack levels used:    1
  6247 ;; Hardware stack levels required when called:   10
  6248 ;; This function calls:
  6249 ;;		_atoi
  6250 ;;		_dtoa
  6251 ;;		_fputc
  6252 ;;		_isdigit
  6253 ;;		_stoa
  6254 ;;		_utoa
  6255 ;;		_xtoa
  6256 ;; This function is called by:
  6257 ;;		_vfprintf
  6258 ;; This function uses a non-reentrant model
  6259 ;;
  6260                           
  6261                           	psect	text40
  6262  00012A                     __ptext40:
  6263                           	opt callstack 0
  6264  00012A                     _vfpfcnvrt:
  6265                           	opt callstack 18
  6266  00012A                     
  6267                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  6268  00012A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6269  00012E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6270  000132  CFDE FFF6          	movff	postinc2,tblptrl
  6271  000136  CFDD FFF7          	movff	postdec2,tblptrh
  6272  00013A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6273  00013A  6AF8               	clrf	tblptru,c
  6274  00013C                     	endif
  6275  00013C                     	if	0	;tblptru may be non-zero
  6276  00013C                     	endif
  6277  00013C  0008               	tblrd		*
  6278  00013E  50F5               	movf	tablat,w,c
  6279  000140  0A25               	xorlw	37
  6280  000142  A4D8               	btfss	status,2,c
  6281  000144  EFA6  F000         	goto	u5031
  6282  000148  EFA8  F000         	goto	u5030
  6283  00014C                     u5031:
  6284  00014C  EF3D  F003         	goto	l5286
  6285  000150                     u5030:
  6286  000150                     
  6287                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  6288  000150  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6289  000154  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6290  000158  2ADE               	incf	postinc2,f,c
  6291  00015A  0E00               	movlw	0
  6292  00015C  22DD               	addwfc	postdec2,f,c
  6293  00015E                     
  6294                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  6295  00015E  0E00               	movlw	0
  6296  000160  0100               	movlb	0	; () banked
  6297  000162  6F8B               	movwf	(_width+1)& (0+255),b
  6298  000164  0E00               	movlw	0
  6299  000166  6F8A               	movwf	_width& (0+255),b
  6300  000168  C08A  F057         	movff	_width,_flags
  6301  00016C  C08B  F058         	movff	_width+1,_flags+1
  6302  000170                     
  6303                           ; BSR set to: 0
  6304                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  6305  000170  698C               	setf	_prec& (0+255),b
  6306  000172  698D               	setf	(_prec+1)& (0+255),b
  6307  000174                     
  6308                           ; BSR set to: 0
  6309                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  6310  000174  0E00               	movlw	0
  6311  000176  6FB1               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  6312  000178  0E00               	movlw	0
  6313  00017A  6FB0               	movwf	vfpfcnvrt@done& (0+255),b
  6314                           
  6315                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  6316  00017C  EF07  F001         	goto	l5208
  6317  000180                     l5182:
  6318                           
  6319                           ; BSR set to: 0
  6320                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  6321  000180  8057               	bsf	_flags^0,0,c
  6322  000182                     l5184:
  6323                           
  6324                           ; BSR set to: 0
  6325                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  6326  000182  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6327  000186  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6328  00018A  2ADE               	incf	postinc2,f,c
  6329  00018C  0E00               	movlw	0
  6330  00018E  22DD               	addwfc	postdec2,f,c
  6331                           
  6332                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  6333  000190  EF07  F001         	goto	l5208
  6334  000194                     l5186:
  6335                           
  6336                           ; BSR set to: 0
  6337                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  6338  000194  8257               	bsf	_flags^0,1,c
  6339  000196  EFC1  F000         	goto	l5184
  6340  00019A                     l5190:
  6341                           
  6342                           ; BSR set to: 0
  6343                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  6344  00019A  8457               	bsf	_flags^0,2,c
  6345  00019C  EFC1  F000         	goto	l5184
  6346  0001A0                     l5194:
  6347                           
  6348                           ; BSR set to: 0
  6349                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  6350  0001A0  8657               	bsf	_flags^0,3,c
  6351  0001A2  EFC1  F000         	goto	l5184
  6352  0001A6                     l5198:
  6353                           
  6354                           ; BSR set to: 0
  6355                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  6356  0001A6  8857               	bsf	_flags^0,4,c
  6357  0001A8  EFC1  F000         	goto	l5184
  6358  0001AC                     l5202:
  6359                           
  6360                           ; BSR set to: 0
  6361                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  6362  0001AC  0E00               	movlw	0
  6363  0001AE  6FB1               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  6364  0001B0  0E01               	movlw	1
  6365  0001B2  6FB0               	movwf	vfpfcnvrt@done& (0+255),b
  6366                           
  6367                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  6368  0001B4  EF07  F001         	goto	l5208
  6369  0001B8                     l5206:
  6370                           
  6371                           ; BSR set to: 0
  6372  0001B8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6373  0001BC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6374  0001C0  CFDE FFF6          	movff	postinc2,tblptrl
  6375  0001C4  CFDD FFF7          	movff	postdec2,tblptrh
  6376  0001C8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6377  0001C8  6AF8               	clrf	tblptru,c
  6378  0001CA                     	endif
  6379  0001CA                     	if	0	;tblptru may be non-zero
  6380  0001CA                     	endif
  6381  0001CA  0008               	tblrd		*
  6382  0001CC  50F5               	movf	tablat,w,c
  6383  0001CE  6E4F               	movwf	??_vfpfcnvrt^0,c
  6384  0001D0  6A50               	clrf	(??_vfpfcnvrt+1)^0,c
  6385                           
  6386                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6387                           ; Switch size 1, requested type "simple"
  6388                           ; Number of cases is 1, Range of values is 0 to 0
  6389                           ; switch strategies available:
  6390                           ; Name         Instructions Cycles
  6391                           ; simple_byte            4     3 (average)
  6392                           ;	Chosen strategy is simple_byte
  6393  0001D2  5050               	movf	(??_vfpfcnvrt+1)^0,w,c
  6394  0001D4  0A00               	xorlw	0	; case 0
  6395  0001D6  B4D8               	btfsc	status,2,c
  6396  0001D8  EFF0  F000         	goto	l5984
  6397  0001DC  EFD6  F000         	goto	l5202
  6398  0001E0                     l5984:
  6399                           
  6400                           ; BSR set to: 0
  6401                           ; Switch size 1, requested type "simple"
  6402                           ; Number of cases is 5, Range of values is 32 to 48
  6403                           ; switch strategies available:
  6404                           ; Name         Instructions Cycles
  6405                           ; simple_byte           16     9 (average)
  6406                           ;	Chosen strategy is simple_byte
  6407  0001E0  504F               	movf	??_vfpfcnvrt^0,w,c
  6408  0001E2  0A20               	xorlw	32	; case 32
  6409  0001E4  B4D8               	btfsc	status,2,c
  6410  0001E6  EFD0  F000         	goto	l5194
  6411  0001EA  0A03               	xorlw	3	; case 35
  6412  0001EC  B4D8               	btfsc	status,2,c
  6413  0001EE  EFD3  F000         	goto	l5198
  6414  0001F2  0A08               	xorlw	8	; case 43
  6415  0001F4  B4D8               	btfsc	status,2,c
  6416  0001F6  EFCD  F000         	goto	l5190
  6417  0001FA  0A06               	xorlw	6	; case 45
  6418  0001FC  B4D8               	btfsc	status,2,c
  6419  0001FE  EFC0  F000         	goto	l5182
  6420  000202  0A1D               	xorlw	29	; case 48
  6421  000204  B4D8               	btfsc	status,2,c
  6422  000206  EFCA  F000         	goto	l5186
  6423  00020A  EFD6  F000         	goto	l5202
  6424  00020E                     l5208:
  6425                           
  6426                           ; BSR set to: 0
  6427                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  6428  00020E  51B0               	movf	vfpfcnvrt@done& (0+255),w,b
  6429  000210  11B1               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  6430  000212  B4D8               	btfsc	status,2,c
  6431  000214  EF0E  F001         	goto	u5041
  6432  000218  EF10  F001         	goto	u5040
  6433  00021C                     u5041:
  6434  00021C  EFDC  F000         	goto	l5206
  6435  000220                     u5040:
  6436  000220                     
  6437                           ; BSR set to: 0
  6438                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  6439  000220  A057               	btfss	_flags^0,0,c
  6440  000222  EF15  F001         	goto	u5051
  6441  000226  EF17  F001         	goto	u5050
  6442  00022A                     u5051:
  6443  00022A  EF18  F001         	goto	l5212
  6444  00022E                     u5050:
  6445  00022E                     
  6446                           ; BSR set to: 0
  6447                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  6448  00022E  9257               	bcf	_flags^0,1,c
  6449  000230                     l5212:
  6450                           
  6451                           ; BSR set to: 0
  6452                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  6453  000230  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6454  000234  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6455  000238  CFDE FFF6          	movff	postinc2,tblptrl
  6456  00023C  CFDD FFF7          	movff	postdec2,tblptrh
  6457  000240                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6458  000240  6AF8               	clrf	tblptru,c
  6459  000242                     	endif
  6460  000242                     	if	0	;tblptru may be non-zero
  6461  000242                     	endif
  6462  000242  0008               	tblrd		*
  6463  000244  50F5               	movf	tablat,w,c
  6464  000246  0A2A               	xorlw	42
  6465  000248  A4D8               	btfss	status,2,c
  6466  00024A  EF29  F001         	goto	u5061
  6467  00024E  EF2B  F001         	goto	u5060
  6468  000252                     u5061:
  6469  000252  EF54  F001         	goto	l5220
  6470  000256                     u5060:
  6471  000256                     
  6472                           ; BSR set to: 0
  6473                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  6474  000256  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6475  00025A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6476  00025E  2ADE               	incf	postinc2,f,c
  6477  000260  0E00               	movlw	0
  6478  000262  22DD               	addwfc	postdec2,f,c
  6479                           
  6480                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  6481  000264  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6482  000268  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6483  00026C  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  6484  000270  0E02               	movlw	2
  6485  000272  26DE               	addwf	postinc2,f,c
  6486  000274  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  6487  000278  0E00               	movlw	0
  6488  00027A  22DD               	addwfc	postdec2,f,c
  6489  00027C  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6490  000280  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6491  000284  CFDE F08A          	movff	postinc2,_width
  6492  000288  CFDD F08B          	movff	postdec2,_width+1
  6493  00028C                     
  6494                           ; BSR set to: 0
  6495                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  6496  00028C  BF8B               	btfsc	(_width+1)& (0+255),7,b
  6497  00028E  EF4D  F001         	goto	u5070
  6498  000292  EF4B  F001         	goto	u5071
  6499  000296                     u5071:
  6500  000296  EF99  F001         	goto	l5230
  6501  00029A                     u5070:
  6502  00029A                     
  6503                           ; BSR set to: 0
  6504                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  6505  00029A  8057               	bsf	_flags^0,0,c
  6506                           
  6507                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  6508  00029C  6D8A               	negf	_width& (0+255),b
  6509  00029E  1F8B               	comf	(_width+1)& (0+255),f,b
  6510  0002A0  B0D8               	btfsc	status,0,c
  6511  0002A2  2B8B               	incf	(_width+1)& (0+255),f,b
  6512  0002A4  EF99  F001         	goto	l5230
  6513  0002A8                     l5220:
  6514                           
  6515                           ; BSR set to: 0
  6516                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  6517  0002A8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6518  0002AC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6519  0002B0  CFDE F00C          	movff	postinc2,atoi@s
  6520  0002B4  CFDD F00D          	movff	postdec2,atoi@s+1
  6521  0002B8  EC10  F00A         	call	_atoi	;wreg free
  6522  0002BC  C00C  F08A         	movff	?_atoi,_width
  6523  0002C0  C00D  F08B         	movff	?_atoi+1,_width+1
  6524                           
  6525                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6526  0002C4  EF6B  F001         	goto	l5224
  6527  0002C8                     l5222:
  6528                           
  6529                           ; BSR set to: 0
  6530                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  6531  0002C8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6532  0002CC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6533  0002D0  2ADE               	incf	postinc2,f,c
  6534  0002D2  0E00               	movlw	0
  6535  0002D4  22DD               	addwfc	postdec2,f,c
  6536  0002D6                     l5224:
  6537  0002D6  0ED0               	movlw	208
  6538  0002D8  6E4F               	movwf	??_vfpfcnvrt^0,c
  6539  0002DA  0EFF               	movlw	255
  6540  0002DC  6E50               	movwf	(??_vfpfcnvrt+1)^0,c
  6541  0002DE  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6542  0002E2  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6543  0002E6  CFDE FFF6          	movff	postinc2,tblptrl
  6544  0002EA  CFDD FFF7          	movff	postdec2,tblptrh
  6545  0002EE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6546  0002EE  6AF8               	clrf	tblptru,c
  6547  0002F0                     	endif
  6548  0002F0                     	if	0	;tblptru may be non-zero
  6549  0002F0                     	endif
  6550  0002F0  0008               	tblrd		*
  6551  0002F2  50F5               	movf	tablat,w,c
  6552  0002F4  6E51               	movwf	(??_vfpfcnvrt+2)^0,c
  6553  0002F6  6A52               	clrf	(??_vfpfcnvrt+3)^0,c
  6554  0002F8  504F               	movf	??_vfpfcnvrt^0,w,c
  6555  0002FA  2651               	addwf	(??_vfpfcnvrt+2)^0,f,c
  6556  0002FC  5050               	movf	(??_vfpfcnvrt+1)^0,w,c
  6557  0002FE  2252               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  6558  000300  5052               	movf	(??_vfpfcnvrt+3)^0,w,c
  6559  000302  E10A               	bnz	u5080
  6560  000304  0E0A               	movlw	10
  6561  000306  5C51               	subwf	(??_vfpfcnvrt+2)^0,w,c
  6562  000308  A0D8               	btfss	status,0,c
  6563  00030A  EF89  F001         	goto	u5081
  6564  00030E  EF8C  F001         	goto	u5080
  6565  000312                     u5081:
  6566  000312  0E01               	movlw	1
  6567  000314  EF8D  F001         	goto	u5090
  6568  000318                     u5080:
  6569  000318  0E00               	movlw	0
  6570  00031A                     u5090:
  6571  00031A  0100               	movlb	0	; () banked
  6572  00031C  6FB2               	movwf	_vfpfcnvrt$1399& (0+255),b
  6573  00031E  6BB3               	clrf	(_vfpfcnvrt$1399+1)& (0+255),b
  6574  000320                     
  6575                           ; BSR set to: 0
  6576  000320  51B2               	movf	_vfpfcnvrt$1399& (0+255),w,b
  6577  000322  11B3               	iorwf	(_vfpfcnvrt$1399+1)& (0+255),w,b
  6578  000324  A4D8               	btfss	status,2,c
  6579  000326  EF97  F001         	goto	u5101
  6580  00032A  EF99  F001         	goto	u5100
  6581  00032E                     u5101:
  6582  00032E  EF64  F001         	goto	l5222
  6583  000332                     u5100:
  6584  000332                     l5230:
  6585                           
  6586                           ; BSR set to: 0
  6587                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  6588  000332  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6589  000336  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6590  00033A  CFDE FFF6          	movff	postinc2,tblptrl
  6591  00033E  CFDD FFF7          	movff	postdec2,tblptrh
  6592  000342                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6593  000342  6AF8               	clrf	tblptru,c
  6594  000344                     	endif
  6595  000344                     	if	0	;tblptru may be non-zero
  6596  000344                     	endif
  6597  000344  0008               	tblrd		*
  6598  000346  50F5               	movf	tablat,w,c
  6599  000348  0A64               	xorlw	100
  6600  00034A  B4D8               	btfsc	status,2,c
  6601  00034C  EFAA  F001         	goto	u5111
  6602  000350  EFAC  F001         	goto	u5110
  6603  000354                     u5111:
  6604  000354  EFBF  F001         	goto	l5234
  6605  000358                     u5110:
  6606  000358                     
  6607                           ; BSR set to: 0
  6608  000358  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6609  00035C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6610  000360  CFDE FFF6          	movff	postinc2,tblptrl
  6611  000364  CFDD FFF7          	movff	postdec2,tblptrh
  6612  000368                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6613  000368  6AF8               	clrf	tblptru,c
  6614  00036A                     	endif
  6615  00036A                     	if	0	;tblptru may be non-zero
  6616  00036A                     	endif
  6617  00036A  0008               	tblrd		*
  6618  00036C  50F5               	movf	tablat,w,c
  6619  00036E  0A69               	xorlw	105
  6620  000370  A4D8               	btfss	status,2,c
  6621  000372  EFBD  F001         	goto	u5121
  6622  000376  EFBF  F001         	goto	u5120
  6623  00037A                     u5121:
  6624  00037A  EFFF  F001         	goto	l5240
  6625  00037E                     u5120:
  6626  00037E                     l5234:
  6627                           
  6628                           ; BSR set to: 0
  6629                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  6630  00037E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6631  000382  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6632  000386  2ADE               	incf	postinc2,f,c
  6633  000388  0E00               	movlw	0
  6634  00038A  22DD               	addwfc	postdec2,f,c
  6635                           
  6636                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  6637  00038C  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6638  000390  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6639  000394  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  6640  000398  0E02               	movlw	2
  6641  00039A  26DE               	addwf	postinc2,f,c
  6642  00039C  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  6643  0003A0  0E00               	movlw	0
  6644  0003A2  22DD               	addwfc	postdec2,f,c
  6645  0003A4  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6646  0003A8  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6647  0003AC  CFDE F0A5          	movff	postinc2,vfpfcnvrt@ll
  6648  0003B0  CFDD F0A6          	movff	postdec2,vfpfcnvrt@ll+1
  6649  0003B4  0E00               	movlw	0
  6650  0003B6  BFA6               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  6651  0003B8  0EFF               	movlw	-1
  6652  0003BA  6FA7               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  6653  0003BC  6FA8               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  6654  0003BE  6FA9               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  6655  0003C0  6FAA               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  6656  0003C2  6FAB               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  6657  0003C4  6FAC               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  6658  0003C6                     
  6659                           ; BSR set to: 0
  6660                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  6661  0003C6  C049  F022         	movff	vfpfcnvrt@fp,dtoa@fp
  6662  0003CA  C04A  F023         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  6663  0003CE  C0A5  F024         	movff	vfpfcnvrt@ll,dtoa@d
  6664  0003D2  C0A6  F025         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  6665  0003D6  C0A7  F026         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  6666  0003DA  C0A8  F027         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  6667  0003DE  C0A9  F028         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  6668  0003E2  C0AA  F029         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  6669  0003E6  C0AB  F02A         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  6670  0003EA  C0AC  F02B         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  6671  0003EE  EC5A  F003         	call	_dtoa	;wreg free
  6672  0003F2  C022  F049         	movff	?_dtoa,?_vfpfcnvrt
  6673  0003F6  C023  F04A         	movff	?_dtoa+1,?_vfpfcnvrt+1
  6674  0003FA  EF59  F003         	goto	l916
  6675  0003FE                     l5240:
  6676                           
  6677                           ; BSR set to: 0
  6678                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  6679  0003FE  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6680  000402  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6681  000406  CFDE FFF6          	movff	postinc2,tblptrl
  6682  00040A  CFDD FFF7          	movff	postdec2,tblptrh
  6683  00040E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6684  00040E  6AF8               	clrf	tblptru,c
  6685  000410                     	endif
  6686  000410                     	if	0	;tblptru may be non-zero
  6687  000410                     	endif
  6688  000410  0008               	tblrd		*
  6689  000412  50F5               	movf	tablat,w,c
  6690  000414  0A73               	xorlw	115
  6691  000416  A4D8               	btfss	status,2,c
  6692  000418  EF10  F002         	goto	u5131
  6693  00041C  EF12  F002         	goto	u5130
  6694  000420                     u5131:
  6695  000420  EF3D  F002         	goto	l5248
  6696  000424                     u5130:
  6697  000424                     
  6698                           ; BSR set to: 0
  6699                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  6700  000424  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6701  000428  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6702  00042C  2ADE               	incf	postinc2,f,c
  6703  00042E  0E00               	movlw	0
  6704  000430  22DD               	addwfc	postdec2,f,c
  6705                           
  6706                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  6707  000432  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6708  000436  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6709  00043A  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  6710  00043E  0E02               	movlw	2
  6711  000440  26DE               	addwf	postinc2,f,c
  6712  000442  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  6713  000446  0E00               	movlw	0
  6714  000448  22DD               	addwfc	postdec2,f,c
  6715  00044A  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6716  00044E  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6717  000452  CFDE F0AD          	movff	postinc2,vfpfcnvrt@cp
  6718  000456  CFDD F0AE          	movff	postdec2,vfpfcnvrt@cp+1
  6719  00045A                     
  6720                           ; BSR set to: 0
  6721                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  6722  00045A  C049  F010         	movff	vfpfcnvrt@fp,stoa@fp
  6723  00045E  C04A  F011         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  6724  000462  C0AD  F012         	movff	vfpfcnvrt@cp,stoa@s
  6725  000466  C0AE  F013         	movff	vfpfcnvrt@cp+1,stoa@s+1
  6726  00046A  EC43  F009         	call	_stoa	;wreg free
  6727  00046E  C010  F049         	movff	?_stoa,?_vfpfcnvrt
  6728  000472  C011  F04A         	movff	?_stoa+1,?_vfpfcnvrt+1
  6729  000476  EF59  F003         	goto	l916
  6730  00047A                     l5248:
  6731                           
  6732                           ; BSR set to: 0
  6733                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  6734  00047A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6735  00047E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6736  000482  CFDE FFF6          	movff	postinc2,tblptrl
  6737  000486  CFDD FFF7          	movff	postdec2,tblptrh
  6738  00048A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6739  00048A  6AF8               	clrf	tblptru,c
  6740  00048C                     	endif
  6741  00048C                     	if	0	;tblptru may be non-zero
  6742  00048C                     	endif
  6743  00048C  0008               	tblrd		*
  6744  00048E  50F5               	movf	tablat,w,c
  6745  000490  0A75               	xorlw	117
  6746  000492  A4D8               	btfss	status,2,c
  6747  000494  EF4E  F002         	goto	u5141
  6748  000498  EF50  F002         	goto	u5140
  6749  00049C                     u5141:
  6750  00049C  EF91  F002         	goto	l5256
  6751  0004A0                     u5140:
  6752  0004A0                     
  6753                           ; BSR set to: 0
  6754                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  6755  0004A0  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6756  0004A4  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6757  0004A8  2ADE               	incf	postinc2,f,c
  6758  0004AA  0E00               	movlw	0
  6759  0004AC  22DD               	addwfc	postdec2,f,c
  6760                           
  6761                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  6762  0004AE  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6763  0004B2  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6764  0004B6  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  6765  0004BA  0E02               	movlw	2
  6766  0004BC  26DE               	addwf	postinc2,f,c
  6767  0004BE  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  6768  0004C2  0E00               	movlw	0
  6769  0004C4  22DD               	addwfc	postdec2,f,c
  6770  0004C6  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6771  0004CA  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6772  0004CE  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
  6773  0004D2  CFDD F052          	movff	postdec2,??_vfpfcnvrt+3
  6774  0004D6  C051  F0B4         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6775  0004DA  C052  F0B5         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6776  0004DE  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6777  0004E0  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6778  0004E2  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6779  0004E4  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6780  0004E6  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6781  0004E8  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6782  0004EA                     
  6783                           ; BSR set to: 0
  6784                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
  6785  0004EA  C049  F022         	movff	vfpfcnvrt@fp,utoa@fp
  6786  0004EE  C04A  F023         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  6787  0004F2  C0B4  F024         	movff	vfpfcnvrt@llu,utoa@d
  6788  0004F6  C0B5  F025         	movff	vfpfcnvrt@llu+1,utoa@d+1
  6789  0004FA  C0B6  F026         	movff	vfpfcnvrt@llu+2,utoa@d+2
  6790  0004FE  C0B7  F027         	movff	vfpfcnvrt@llu+3,utoa@d+3
  6791  000502  C0B8  F028         	movff	vfpfcnvrt@llu+4,utoa@d+4
  6792  000506  C0B9  F029         	movff	vfpfcnvrt@llu+5,utoa@d+5
  6793  00050A  C0BA  F02A         	movff	vfpfcnvrt@llu+6,utoa@d+6
  6794  00050E  C0BB  F02B         	movff	vfpfcnvrt@llu+7,utoa@d+7
  6795  000512  EC52  F007         	call	_utoa	;wreg free
  6796  000516  C022  F049         	movff	?_utoa,?_vfpfcnvrt
  6797  00051A  C023  F04A         	movff	?_utoa+1,?_vfpfcnvrt+1
  6798  00051E  EF59  F003         	goto	l916
  6799  000522                     l5256:
  6800                           
  6801                           ; BSR set to: 0
  6802                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  6803  000522  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6804  000526  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6805  00052A  CFDE FFF6          	movff	postinc2,tblptrl
  6806  00052E  CFDD FFF7          	movff	postdec2,tblptrh
  6807  000532                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6808  000532  6AF8               	clrf	tblptru,c
  6809  000534                     	endif
  6810  000534                     	if	0	;tblptru may be non-zero
  6811  000534                     	endif
  6812  000534  0008               	tblrd		*
  6813  000536  50F5               	movf	tablat,w,c
  6814  000538  0A78               	xorlw	120
  6815  00053A  B4D8               	btfsc	status,2,c
  6816  00053C  EFA2  F002         	goto	u5151
  6817  000540  EFA4  F002         	goto	u5150
  6818  000544                     u5151:
  6819  000544  EFB7  F002         	goto	l5260
  6820  000548                     u5150:
  6821  000548                     
  6822                           ; BSR set to: 0
  6823  000548  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6824  00054C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6825  000550  CFDE FFF6          	movff	postinc2,tblptrl
  6826  000554  CFDD FFF7          	movff	postdec2,tblptrh
  6827  000558                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6828  000558  6AF8               	clrf	tblptru,c
  6829  00055A                     	endif
  6830  00055A                     	if	0	;tblptru may be non-zero
  6831  00055A                     	endif
  6832  00055A  0008               	tblrd		*
  6833  00055C  50F5               	movf	tablat,w,c
  6834  00055E  0A58               	xorlw	88
  6835  000560  A4D8               	btfss	status,2,c
  6836  000562  EFB5  F002         	goto	u5161
  6837  000566  EFB7  F002         	goto	u5160
  6838  00056A                     u5161:
  6839  00056A  EF06  F003         	goto	l5270
  6840  00056E                     u5160:
  6841  00056E                     l5260:
  6842                           
  6843                           ; BSR set to: 0
  6844                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  6845  00056E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6846  000572  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6847  000576  CFDE FFF6          	movff	postinc2,tblptrl
  6848  00057A  CFDD FFF7          	movff	postdec2,tblptrh
  6849  00057E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6850  00057E  6AF8               	clrf	tblptru,c
  6851  000580                     	endif
  6852  000580                     	if	0	;tblptru may be non-zero
  6853  000580                     	endif
  6854  000580  0008               	tblrd		*
  6855  000582  CFF5 F0AF          	movff	tablat,vfpfcnvrt@c
  6856  000586                     
  6857                           ; BSR set to: 0
  6858                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  6859  000586  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6860  00058A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6861  00058E  2ADE               	incf	postinc2,f,c
  6862  000590  0E00               	movlw	0
  6863  000592  22DD               	addwfc	postdec2,f,c
  6864  000594                     
  6865                           ; BSR set to: 0
  6866                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  6867  000594  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6868  000598  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6869  00059C  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  6870  0005A0  0E02               	movlw	2
  6871  0005A2  26DE               	addwf	postinc2,f,c
  6872  0005A4  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  6873  0005A8  0E00               	movlw	0
  6874  0005AA  22DD               	addwfc	postdec2,f,c
  6875  0005AC  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6876  0005B0  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6877  0005B4  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
  6878  0005B8  CFDD F052          	movff	postdec2,??_vfpfcnvrt+3
  6879  0005BC  C051  F0B4         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6880  0005C0  C052  F0B5         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6881  0005C4  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6882  0005C6  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6883  0005C8  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6884  0005CA  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6885  0005CC  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6886  0005CE  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6887  0005D0                     
  6888                           ; BSR set to: 0
  6889                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
  6890  0005D0  C049  F022         	movff	vfpfcnvrt@fp,xtoa@fp
  6891  0005D4  C04A  F023         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  6892  0005D8  C0B4  F024         	movff	vfpfcnvrt@llu,xtoa@d
  6893  0005DC  C0B5  F025         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  6894  0005E0  C0B6  F026         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  6895  0005E4  C0B7  F027         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  6896  0005E8  C0B8  F028         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  6897  0005EC  C0B9  F029         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  6898  0005F0  C0BA  F02A         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  6899  0005F4  C0BB  F02B         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  6900  0005F8  C0AF  F02C         	movff	vfpfcnvrt@c,xtoa@x
  6901  0005FC  ECCA  F004         	call	_xtoa	;wreg free
  6902  000600  C022  F049         	movff	?_xtoa,?_vfpfcnvrt
  6903  000604  C023  F04A         	movff	?_xtoa+1,?_vfpfcnvrt+1
  6904  000608  EF59  F003         	goto	l916
  6905  00060C                     l5270:
  6906                           
  6907                           ; BSR set to: 0
  6908                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  6909  00060C  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6910  000610  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6911  000614  CFDE FFF6          	movff	postinc2,tblptrl
  6912  000618  CFDD FFF7          	movff	postdec2,tblptrh
  6913  00061C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6914  00061C  6AF8               	clrf	tblptru,c
  6915  00061E                     	endif
  6916  00061E                     	if	0	;tblptru may be non-zero
  6917  00061E                     	endif
  6918  00061E  0008               	tblrd		*
  6919  000620  50F5               	movf	tablat,w,c
  6920  000622  0A25               	xorlw	37
  6921  000624  A4D8               	btfss	status,2,c
  6922  000626  EF17  F003         	goto	u5171
  6923  00062A  EF19  F003         	goto	u5170
  6924  00062E                     u5171:
  6925  00062E  EF30  F003         	goto	l5280
  6926  000632                     u5170:
  6927  000632                     
  6928                           ; BSR set to: 0
  6929                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  6930  000632  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6931  000636  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6932  00063A  2ADE               	incf	postinc2,f,c
  6933  00063C  0E00               	movlw	0
  6934  00063E  22DD               	addwfc	postdec2,f,c
  6935  000640                     
  6936                           ; BSR set to: 0
  6937                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  6938  000640  0E00               	movlw	0
  6939  000642  6E08               	movwf	(fputc@c+1)^0,c
  6940  000644  0E25               	movlw	37
  6941  000646  6E07               	movwf	fputc@c^0,c
  6942  000648  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
  6943  00064C  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6944  000650  EC89  F011         	call	_fputc	;wreg free
  6945  000654                     l5276:
  6946                           
  6947                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  6948  000654  0E00               	movlw	0
  6949  000656  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
  6950  000658  0E01               	movlw	1
  6951  00065A  6E49               	movwf	?_vfpfcnvrt^0,c
  6952  00065C  EF59  F003         	goto	l916
  6953  000660                     l5280:
  6954                           
  6955                           ; BSR set to: 0
  6956                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  6957  000660  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6958  000664  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6959  000668  2ADE               	incf	postinc2,f,c
  6960  00066A  0E00               	movlw	0
  6961  00066C  22DD               	addwfc	postdec2,f,c
  6962  00066E                     
  6963                           ; BSR set to: 0
  6964                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  6965  00066E  0E00               	movlw	0
  6966  000670  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
  6967  000672  0E00               	movlw	0
  6968  000674  6E49               	movwf	?_vfpfcnvrt^0,c
  6969  000676  EF59  F003         	goto	l916
  6970  00067A                     l5286:
  6971                           
  6972                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  6973  00067A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6974  00067E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6975  000682  CFDE FFF6          	movff	postinc2,tblptrl
  6976  000686  CFDD FFF7          	movff	postdec2,tblptrh
  6977  00068A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6978  00068A  6AF8               	clrf	tblptru,c
  6979  00068C                     	endif
  6980  00068C                     	if	0	;tblptru may be non-zero
  6981  00068C                     	endif
  6982  00068C  0008               	tblrd		*
  6983  00068E  50F5               	movf	tablat,w,c
  6984  000690  6E07               	movwf	fputc@c^0,c
  6985  000692  6A08               	clrf	(fputc@c+1)^0,c
  6986  000694  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
  6987  000698  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6988  00069C  EC89  F011         	call	_fputc	;wreg free
  6989  0006A0                     
  6990                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  6991  0006A0  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6992  0006A4  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6993  0006A8  2ADE               	incf	postinc2,f,c
  6994  0006AA  0E00               	movlw	0
  6995  0006AC  22DD               	addwfc	postdec2,f,c
  6996  0006AE  EF2A  F003         	goto	l5276
  6997  0006B2                     l916:
  6998  0006B2  0012               	return		;funcret
  6999  0006B4                     __end_of_vfpfcnvrt:
  7000                           	opt callstack 0
  7001                           
  7002 ;; *************** function _xtoa *****************
  7003 ;; Defined at:
  7004 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7005 ;; Parameters:    Size  Location     Type
  7006 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  7007 ;;		 -> NULL(0), 
  7008 ;;  d               8   35[COMRAM] unsigned long long 
  7009 ;;  x               1   43[COMRAM] unsigned char 
  7010 ;; Auto vars:     Size  Location     Type
  7011 ;;  n               8   60[COMRAM] unsigned long long 
  7012 ;;  c               2   70[COMRAM] int 
  7013 ;;  i               2   68[COMRAM] int 
  7014 ;;  w               2   58[COMRAM] int 
  7015 ;;  p               2   56[COMRAM] int 
  7016 ;; Return value:  Size  Location     Type
  7017 ;;                  2   33[COMRAM] int 
  7018 ;; Registers used:
  7019 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7020 ;; Tracked objects:
  7021 ;;		On entry : 0/0
  7022 ;;		On exit  : 0/0
  7023 ;;		Unchanged: 0/0
  7024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7025 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7026 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7027 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7028 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7029 ;;Total ram usage:       39 bytes
  7030 ;; Hardware stack levels used:    1
  7031 ;; Hardware stack levels required when called:    9
  7032 ;; This function calls:
  7033 ;;		_isalpha
  7034 ;;		_isupper
  7035 ;;		_pad
  7036 ;;		_toupper
  7037 ;; This function is called by:
  7038 ;;		_vfpfcnvrt
  7039 ;; This function uses a non-reentrant model
  7040 ;;
  7041                           
  7042                           	psect	text41
  7043  000994                     __ptext41:
  7044                           	opt callstack 0
  7045  000994                     _xtoa:
  7046                           	opt callstack 18
  7047  000994                     
  7048                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  7049  000994  0100               	movlb	0	; () banked
  7050  000996  BF8D               	btfsc	(_prec+1)& (0+255),7,b
  7051  000998  EFD0  F004         	goto	u4791
  7052  00099C  EFD2  F004         	goto	u4790
  7053  0009A0                     u4791:
  7054  0009A0  EFD3  F004         	goto	l5068
  7055  0009A4                     u4790:
  7056  0009A4                     
  7057                           ; BSR set to: 0
  7058                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  7059  0009A4  9257               	bcf	_flags^0,1,c
  7060  0009A6                     l5068:
  7061                           
  7062                           ; BSR set to: 0
  7063                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  7064  0009A6  BF8D               	btfsc	(_prec+1)& (0+255),7,b
  7065  0009A8  EFE0  F004         	goto	u4800
  7066  0009AC  518D               	movf	(_prec+1)& (0+255),w,b
  7067  0009AE  E106               	bnz	u4801
  7068  0009B0  058C               	decf	_prec& (0+255),w,b
  7069  0009B2  B0D8               	btfsc	status,0,c
  7070  0009B4  EFDE  F004         	goto	u4801
  7071  0009B8  EFE0  F004         	goto	u4800
  7072  0009BC                     u4801:
  7073  0009BC  EFE6  F004         	goto	l862
  7074  0009C0                     u4800:
  7075  0009C0                     
  7076                           ; BSR set to: 0
  7077  0009C0  0E00               	movlw	0
  7078  0009C2  6E3A               	movwf	(xtoa@p+1)^0,c
  7079  0009C4  0E01               	movlw	1
  7080  0009C6  6E39               	movwf	xtoa@p^0,c
  7081  0009C8  EFEA  F004         	goto	l864
  7082  0009CC                     l862:
  7083                           
  7084                           ; BSR set to: 0
  7085  0009CC  C08C  F039         	movff	_prec,xtoa@p
  7086  0009D0  C08D  F03A         	movff	_prec+1,xtoa@p+1
  7087  0009D4                     l864:
  7088                           
  7089                           ; BSR set to: 0
  7090                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  7091  0009D4  C08A  F03B         	movff	_width,xtoa@w
  7092  0009D8  C08B  F03C         	movff	_width+1,xtoa@w+1
  7093                           
  7094                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  7095  0009DC  A857               	btfss	_flags^0,4,c
  7096  0009DE  EFF3  F004         	goto	u4811
  7097  0009E2  EFF5  F004         	goto	u4810
  7098  0009E6                     u4811:
  7099  0009E6  EFF9  F004         	goto	l5074
  7100  0009EA                     u4810:
  7101  0009EA                     
  7102                           ; BSR set to: 0
  7103                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  7104  0009EA  0EFE               	movlw	254
  7105  0009EC  263B               	addwf	xtoa@w^0,f,c
  7106  0009EE  0EFF               	movlw	255
  7107  0009F0  223C               	addwfc	(xtoa@w+1)^0,f,c
  7108  0009F2                     l5074:
  7109                           
  7110                           ; BSR set to: 0
  7111                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  7112  0009F2  C024  F03D         	movff	xtoa@d,xtoa@n
  7113  0009F6  C025  F03E         	movff	xtoa@d+1,xtoa@n+1
  7114  0009FA  C026  F03F         	movff	xtoa@d+2,xtoa@n+2
  7115  0009FE  C027  F040         	movff	xtoa@d+3,xtoa@n+3
  7116  000A02  C028  F041         	movff	xtoa@d+4,xtoa@n+4
  7117  000A06  C029  F042         	movff	xtoa@d+5,xtoa@n+5
  7118  000A0A  C02A  F043         	movff	xtoa@d+6,xtoa@n+6
  7119  000A0E  C02B  F044         	movff	xtoa@d+7,xtoa@n+7
  7120  000A12                     
  7121                           ; BSR set to: 0
  7122                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  7123  000A12  0E00               	movlw	0
  7124  000A14  6E46               	movwf	(xtoa@i+1)^0,c
  7125  000A16  0E1F               	movlw	31
  7126  000A18  6E45               	movwf	xtoa@i^0,c
  7127  000A1A                     
  7128                           ; BSR set to: 0
  7129                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  7130  000A1A  0E00               	movlw	0
  7131  000A1C  0101               	movlb	1	; () banked
  7132  000A1E  6F83               	movwf	(_dbuf+31)& (0+255),b
  7133                           
  7134                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7135  000A20  EFC5  F005         	goto	l5110
  7136  000A24                     l5080:
  7137                           
  7138                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  7139  000A24  0645               	decf	xtoa@i^0,f,c
  7140  000A26  A0D8               	btfss	status,0,c
  7141  000A28  0646               	decf	(xtoa@i+1)^0,f,c
  7142  000A2A                     
  7143                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  7144  000A2A  0E0F               	movlw	15
  7145  000A2C  143D               	andwf	xtoa@n^0,w,c
  7146  000A2E  6E47               	movwf	xtoa@c^0,c
  7147  000A30  6A48               	clrf	(xtoa@c+1)^0,c
  7148  000A32                     
  7149                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  7150  000A32  BE48               	btfsc	(xtoa@c+1)^0,7,c
  7151  000A34  EF25  F005         	goto	u4821
  7152  000A38  5048               	movf	(xtoa@c+1)^0,w,c
  7153  000A3A  E109               	bnz	u4820
  7154  000A3C  0E0A               	movlw	10
  7155  000A3E  5C47               	subwf	xtoa@c^0,w,c
  7156  000A40  A0D8               	btfss	status,0,c
  7157  000A42  EF25  F005         	goto	u4821
  7158  000A46  EF27  F005         	goto	u4820
  7159  000A4A                     u4821:
  7160  000A4A  EF2F  F005         	goto	l5088
  7161  000A4E                     u4820:
  7162  000A4E  0E57               	movlw	87
  7163  000A50  2447               	addwf	xtoa@c^0,w,c
  7164  000A52  6E47               	movwf	xtoa@c^0,c
  7165  000A54  0E00               	movlw	0
  7166  000A56  2048               	addwfc	(xtoa@c+1)^0,w,c
  7167  000A58  6E48               	movwf	(xtoa@c+1)^0,c
  7168  000A5A  EF35  F005         	goto	l871
  7169  000A5E                     l5088:
  7170  000A5E  0E30               	movlw	48
  7171  000A60  2447               	addwf	xtoa@c^0,w,c
  7172  000A62  6E47               	movwf	xtoa@c^0,c
  7173  000A64  0E00               	movlw	0
  7174  000A66  2048               	addwfc	(xtoa@c+1)^0,w,c
  7175  000A68  6E48               	movwf	(xtoa@c+1)^0,c
  7176  000A6A                     l871:
  7177  000A6A  0EBF               	movlw	191
  7178  000A6C  6E2D               	movwf	??_xtoa^0,c
  7179  000A6E  0EFF               	movlw	255
  7180  000A70  6E2E               	movwf	(??_xtoa+1)^0,c
  7181  000A72  502C               	movf	xtoa@x^0,w,c
  7182  000A74  6E2F               	movwf	(??_xtoa+2)^0,c
  7183  000A76  6A30               	clrf	(??_xtoa+3)^0,c
  7184  000A78  502D               	movf	??_xtoa^0,w,c
  7185  000A7A  262F               	addwf	(??_xtoa+2)^0,f,c
  7186  000A7C  502E               	movf	(??_xtoa+1)^0,w,c
  7187  000A7E  2230               	addwfc	(??_xtoa+3)^0,f,c
  7188  000A80  5030               	movf	(??_xtoa+3)^0,w,c
  7189  000A82  E10A               	bnz	u4830
  7190  000A84  0E1A               	movlw	26
  7191  000A86  5C2F               	subwf	(??_xtoa+2)^0,w,c
  7192  000A88  A0D8               	btfss	status,0,c
  7193  000A8A  EF49  F005         	goto	u4831
  7194  000A8E  EF4C  F005         	goto	u4830
  7195  000A92                     u4831:
  7196  000A92  0E01               	movlw	1
  7197  000A94  EF4D  F005         	goto	u4840
  7198  000A98                     u4830:
  7199  000A98  0E00               	movlw	0
  7200  000A9A                     u4840:
  7201  000A9A  6E35               	movwf	_xtoa$1384^0,c
  7202  000A9C  6A36               	clrf	(_xtoa$1384+1)^0,c
  7203  000A9E  5035               	movf	_xtoa$1384^0,w,c
  7204  000AA0  1036               	iorwf	(_xtoa$1384+1)^0,w,c
  7205  000AA2  B4D8               	btfsc	status,2,c
  7206  000AA4  EF56  F005         	goto	u4851
  7207  000AA8  EF58  F005         	goto	u4850
  7208  000AAC                     u4851:
  7209  000AAC  EF88  F005         	goto	l5102
  7210  000AB0                     u4850:
  7211  000AB0  0E9F               	movlw	159
  7212  000AB2  6E2D               	movwf	??_xtoa^0,c
  7213  000AB4  0EFF               	movlw	255
  7214  000AB6  6E2E               	movwf	(??_xtoa+1)^0,c
  7215  000AB8  0E20               	movlw	32
  7216  000ABA  1047               	iorwf	xtoa@c^0,w,c
  7217  000ABC  6E2F               	movwf	(??_xtoa+2)^0,c
  7218  000ABE  0E00               	movlw	0
  7219  000AC0  1048               	iorwf	(xtoa@c+1)^0,w,c
  7220  000AC2  6E30               	movwf	(??_xtoa+3)^0,c
  7221  000AC4  502D               	movf	??_xtoa^0,w,c
  7222  000AC6  262F               	addwf	(??_xtoa+2)^0,f,c
  7223  000AC8  502E               	movf	(??_xtoa+1)^0,w,c
  7224  000ACA  2230               	addwfc	(??_xtoa+3)^0,f,c
  7225  000ACC  5030               	movf	(??_xtoa+3)^0,w,c
  7226  000ACE  E10A               	bnz	u4860
  7227  000AD0  0E1A               	movlw	26
  7228  000AD2  5C2F               	subwf	(??_xtoa+2)^0,w,c
  7229  000AD4  A0D8               	btfss	status,0,c
  7230  000AD6  EF6F  F005         	goto	u4861
  7231  000ADA  EF72  F005         	goto	u4860
  7232  000ADE                     u4861:
  7233  000ADE  0E01               	movlw	1
  7234  000AE0  EF73  F005         	goto	u4870
  7235  000AE4                     u4860:
  7236  000AE4  0E00               	movlw	0
  7237  000AE6                     u4870:
  7238  000AE6  6E37               	movwf	_xtoa$1385^0,c
  7239  000AE8  6A38               	clrf	(_xtoa$1385+1)^0,c
  7240  000AEA  5037               	movf	_xtoa$1385^0,w,c
  7241  000AEC  1038               	iorwf	(_xtoa$1385+1)^0,w,c
  7242  000AEE  B4D8               	btfsc	status,2,c
  7243  000AF0  EF7C  F005         	goto	u4881
  7244  000AF4  EF7E  F005         	goto	u4880
  7245  000AF8                     u4881:
  7246  000AF8  EF88  F005         	goto	l5102
  7247  000AFC                     u4880:
  7248  000AFC                     
  7249                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  7250  000AFC  C047  F00B         	movff	xtoa@c,toupper@c
  7251  000B00  C048  F00C         	movff	xtoa@c+1,toupper@c+1
  7252  000B04  EC5F  F014         	call	_toupper	;wreg free
  7253  000B08  C00B  F047         	movff	?_toupper,xtoa@c
  7254  000B0C  C00C  F048         	movff	?_toupper+1,xtoa@c+1
  7255  000B10                     l5102:
  7256                           
  7257                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  7258  000B10  0E64               	movlw	low _dbuf
  7259  000B12  2445               	addwf	xtoa@i^0,w,c
  7260  000B14  6ED9               	movwf	fsr2l,c
  7261  000B16  0E01               	movlw	high _dbuf
  7262  000B18  2046               	addwfc	(xtoa@i+1)^0,w,c
  7263  000B1A  6EDA               	movwf	fsr2h,c
  7264  000B1C  C047  FFDF         	movff	xtoa@c,indf2
  7265  000B20                     
  7266                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  7267  000B20  0639               	decf	xtoa@p^0,f,c
  7268  000B22  A0D8               	btfss	status,0,c
  7269  000B24  063A               	decf	(xtoa@p+1)^0,f,c
  7270  000B26                     
  7271                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  7272  000B26  063B               	decf	xtoa@w^0,f,c
  7273  000B28  A0D8               	btfss	status,0,c
  7274  000B2A  063C               	decf	(xtoa@w+1)^0,f,c
  7275  000B2C                     
  7276                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  7277  000B2C  C03D  F02D         	movff	xtoa@n,??_xtoa
  7278  000B30  C03E  F02E         	movff	xtoa@n+1,??_xtoa+1
  7279  000B34  C03F  F02F         	movff	xtoa@n+2,??_xtoa+2
  7280  000B38  C040  F030         	movff	xtoa@n+3,??_xtoa+3
  7281  000B3C  C041  F031         	movff	xtoa@n+4,??_xtoa+4
  7282  000B40  C042  F032         	movff	xtoa@n+5,??_xtoa+5
  7283  000B44  C043  F033         	movff	xtoa@n+6,??_xtoa+6
  7284  000B48  C044  F034         	movff	xtoa@n+7,??_xtoa+7
  7285  000B4C  0E05               	movlw	5
  7286  000B4E  EFB2  F005         	goto	u4890
  7287  000B52                     u4895:
  7288  000B52  90D8               	bcf	status,0,c
  7289  000B54  3234               	rrcf	(??_xtoa+7)^0,f,c
  7290  000B56  3233               	rrcf	(??_xtoa+6)^0,f,c
  7291  000B58  3232               	rrcf	(??_xtoa+5)^0,f,c
  7292  000B5A  3231               	rrcf	(??_xtoa+4)^0,f,c
  7293  000B5C  3230               	rrcf	(??_xtoa+3)^0,f,c
  7294  000B5E  322F               	rrcf	(??_xtoa+2)^0,f,c
  7295  000B60  322E               	rrcf	(??_xtoa+1)^0,f,c
  7296  000B62  322D               	rrcf	??_xtoa^0,f,c
  7297  000B64                     u4890:
  7298  000B64  2EE8               	decfsz	wreg,f,c
  7299  000B66  EFA9  F005         	goto	u4895
  7300  000B6A  C02D  F03D         	movff	??_xtoa,xtoa@n
  7301  000B6E  C02E  F03E         	movff	??_xtoa+1,xtoa@n+1
  7302  000B72  C02F  F03F         	movff	??_xtoa+2,xtoa@n+2
  7303  000B76  C030  F040         	movff	??_xtoa+3,xtoa@n+3
  7304  000B7A  C031  F041         	movff	??_xtoa+4,xtoa@n+4
  7305  000B7E  C032  F042         	movff	??_xtoa+5,xtoa@n+5
  7306  000B82  C033  F043         	movff	??_xtoa+6,xtoa@n+6
  7307  000B86  C034  F044         	movff	??_xtoa+7,xtoa@n+7
  7308  000B8A                     l5110:
  7309                           
  7310                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7311  000B8A  BE46               	btfsc	(xtoa@i+1)^0,7,c
  7312  000B8C  EFD1  F005         	goto	u4901
  7313  000B90  5046               	movf	(xtoa@i+1)^0,w,c
  7314  000B92  E109               	bnz	u4900
  7315  000B94  0E02               	movlw	2
  7316  000B96  5C45               	subwf	xtoa@i^0,w,c
  7317  000B98  A0D8               	btfss	status,0,c
  7318  000B9A  EFD1  F005         	goto	u4901
  7319  000B9E  EFD3  F005         	goto	u4900
  7320  000BA2                     u4901:
  7321  000BA2  EF03  F006         	goto	l885
  7322  000BA6                     u4900:
  7323  000BA6  503D               	movf	xtoa@n^0,w,c
  7324  000BA8  103E               	iorwf	(xtoa@n+1)^0,w,c
  7325  000BAA  103F               	iorwf	(xtoa@n+2)^0,w,c
  7326  000BAC  1040               	iorwf	(xtoa@n+3)^0,w,c
  7327  000BAE  1041               	iorwf	(xtoa@n+4)^0,w,c
  7328  000BB0  1042               	iorwf	(xtoa@n+5)^0,w,c
  7329  000BB2  1043               	iorwf	(xtoa@n+6)^0,w,c
  7330  000BB4  1044               	iorwf	(xtoa@n+7)^0,w,c
  7331  000BB6  A4D8               	btfss	status,2,c
  7332  000BB8  EFE0  F005         	goto	u4911
  7333  000BBC  EFE2  F005         	goto	u4910
  7334  000BC0                     u4911:
  7335  000BC0  EF12  F005         	goto	l5080
  7336  000BC4                     u4910:
  7337  000BC4  BE3A               	btfsc	(xtoa@p+1)^0,7,c
  7338  000BC6  EFEF  F005         	goto	u4920
  7339  000BCA  503A               	movf	(xtoa@p+1)^0,w,c
  7340  000BCC  E106               	bnz	u4921
  7341  000BCE  0439               	decf	xtoa@p^0,w,c
  7342  000BD0  B0D8               	btfsc	status,0,c
  7343  000BD2  EFED  F005         	goto	u4921
  7344  000BD6  EFEF  F005         	goto	u4920
  7345  000BDA                     u4921:
  7346  000BDA  EF12  F005         	goto	l5080
  7347  000BDE                     u4920:
  7348  000BDE  BE3C               	btfsc	(xtoa@w+1)^0,7,c
  7349  000BE0  EFFA  F005         	goto	u4931
  7350  000BE4  503C               	movf	(xtoa@w+1)^0,w,c
  7351  000BE6  E108               	bnz	u4930
  7352  000BE8  043B               	decf	xtoa@w^0,w,c
  7353  000BEA  A0D8               	btfss	status,0,c
  7354  000BEC  EFFA  F005         	goto	u4931
  7355  000BF0  EFFC  F005         	goto	u4930
  7356  000BF4                     u4931:
  7357  000BF4  EF03  F006         	goto	l885
  7358  000BF8                     u4930:
  7359  000BF8  B257               	btfsc	_flags^0,1,c
  7360  000BFA  EF01  F006         	goto	u4941
  7361  000BFE  EF03  F006         	goto	u4940
  7362  000C02                     u4941:
  7363  000C02  EF12  F005         	goto	l5080
  7364  000C06                     u4940:
  7365  000C06                     l885:
  7366                           
  7367                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  7368  000C06  A857               	btfss	_flags^0,4,c
  7369  000C08  EF08  F006         	goto	u4951
  7370  000C0C  EF0A  F006         	goto	u4950
  7371  000C10                     u4951:
  7372  000C10  EF20  F006         	goto	l5126
  7373  000C14                     u4950:
  7374  000C14                     
  7375                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  7376  000C14  0645               	decf	xtoa@i^0,f,c
  7377  000C16  A0D8               	btfss	status,0,c
  7378  000C18  0646               	decf	(xtoa@i+1)^0,f,c
  7379  000C1A                     
  7380                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  7381  000C1A  0E64               	movlw	low _dbuf
  7382  000C1C  2445               	addwf	xtoa@i^0,w,c
  7383  000C1E  6ED9               	movwf	fsr2l,c
  7384  000C20  0E01               	movlw	high _dbuf
  7385  000C22  2046               	addwfc	(xtoa@i+1)^0,w,c
  7386  000C24  6EDA               	movwf	fsr2h,c
  7387  000C26  C02C  FFDF         	movff	xtoa@x,indf2
  7388  000C2A                     
  7389                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  7390  000C2A  0645               	decf	xtoa@i^0,f,c
  7391  000C2C  A0D8               	btfss	status,0,c
  7392  000C2E  0646               	decf	(xtoa@i+1)^0,f,c
  7393                           
  7394                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  7395  000C30  0E64               	movlw	low _dbuf
  7396  000C32  2445               	addwf	xtoa@i^0,w,c
  7397  000C34  6ED9               	movwf	fsr2l,c
  7398  000C36  0E01               	movlw	high _dbuf
  7399  000C38  2046               	addwfc	(xtoa@i+1)^0,w,c
  7400  000C3A  6EDA               	movwf	fsr2h,c
  7401  000C3C  0E30               	movlw	48
  7402  000C3E  6EDF               	movwf	indf2,c
  7403  000C40                     l5126:
  7404                           
  7405                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  7406  000C40  C022  F017         	movff	xtoa@fp,pad@fp
  7407  000C44  C023  F018         	movff	xtoa@fp+1,pad@fp+1
  7408  000C48  0E64               	movlw	low _dbuf
  7409  000C4A  2445               	addwf	xtoa@i^0,w,c
  7410  000C4C  6E19               	movwf	pad@buf^0,c
  7411  000C4E  0E01               	movlw	high _dbuf
  7412  000C50  2046               	addwfc	(xtoa@i+1)^0,w,c
  7413  000C52  6E1A               	movwf	(pad@buf+1)^0,c
  7414  000C54  C03B  F01B         	movff	xtoa@w,pad@p
  7415  000C58  C03C  F01C         	movff	xtoa@w+1,pad@p+1
  7416  000C5C  ECC7  F00F         	call	_pad	;wreg free
  7417  000C60  C017  F022         	movff	?_pad,?_xtoa
  7418  000C64  C018  F023         	movff	?_pad+1,?_xtoa+1
  7419  000C68  0012               	return		;funcret
  7420  000C6A                     __end_of_xtoa:
  7421                           	opt callstack 0
  7422                           
  7423 ;; *************** function _toupper *****************
  7424 ;; Defined at:
  7425 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
  7426 ;; Parameters:    Size  Location     Type
  7427 ;;  c               2   10[COMRAM] int 
  7428 ;; Auto vars:     Size  Location     Type
  7429 ;;		None
  7430 ;; Return value:  Size  Location     Type
  7431 ;;                  2   10[COMRAM] int 
  7432 ;; Registers used:
  7433 ;;		wreg, status,2, status,0
  7434 ;; Tracked objects:
  7435 ;;		On entry : 0/0
  7436 ;;		On exit  : 0/0
  7437 ;;		Unchanged: 0/0
  7438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7439 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7440 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7441 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7442 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7443 ;;Total ram usage:        8 bytes
  7444 ;; Hardware stack levels used:    1
  7445 ;; Hardware stack levels required when called:    5
  7446 ;; This function calls:
  7447 ;;		_islower
  7448 ;; This function is called by:
  7449 ;;		_xtoa
  7450 ;; This function uses a non-reentrant model
  7451 ;;
  7452                           
  7453                           	psect	text42
  7454  0028BE                     __ptext42:
  7455                           	opt callstack 0
  7456  0028BE                     _toupper:
  7457                           	opt callstack 21
  7458  0028BE  0E9F               	movlw	159
  7459  0028C0  6E0D               	movwf	??_toupper^0,c
  7460  0028C2  0EFF               	movlw	255
  7461  0028C4  6E0E               	movwf	(??_toupper+1)^0,c
  7462  0028C6  C00B  F00F         	movff	toupper@c,??_toupper+2
  7463  0028CA  C00C  F010         	movff	toupper@c+1,??_toupper+3
  7464  0028CE  500D               	movf	??_toupper^0,w,c
  7465  0028D0  260F               	addwf	(??_toupper+2)^0,f,c
  7466  0028D2  500E               	movf	(??_toupper+1)^0,w,c
  7467  0028D4  2210               	addwfc	(??_toupper+3)^0,f,c
  7468  0028D6  5010               	movf	(??_toupper+3)^0,w,c
  7469  0028D8  E10A               	bnz	u4200
  7470  0028DA  0E1A               	movlw	26
  7471  0028DC  5C0F               	subwf	(??_toupper+2)^0,w,c
  7472  0028DE  A0D8               	btfss	status,0,c
  7473  0028E0  EF74  F014         	goto	u4201
  7474  0028E4  EF77  F014         	goto	u4200
  7475  0028E8                     u4201:
  7476  0028E8  0E01               	movlw	1
  7477  0028EA  EF78  F014         	goto	u4210
  7478  0028EE                     u4200:
  7479  0028EE  0E00               	movlw	0
  7480  0028F0                     u4210:
  7481  0028F0  6E11               	movwf	_toupper$1950^0,c
  7482  0028F2  6A12               	clrf	(_toupper$1950+1)^0,c
  7483  0028F4  5011               	movf	_toupper$1950^0,w,c
  7484  0028F6  1012               	iorwf	(_toupper$1950+1)^0,w,c
  7485  0028F8  B4D8               	btfsc	status,2,c
  7486  0028FA  EF81  F014         	goto	u4221
  7487  0028FE  EF83  F014         	goto	u4220
  7488  002902                     u4221:
  7489  002902  EF89  F014         	goto	l1704
  7490  002906                     u4220:
  7491  002906  0E5F               	movlw	95
  7492  002908  140B               	andwf	toupper@c^0,w,c
  7493  00290A  6E0B               	movwf	?_toupper^0,c
  7494  00290C  6A0C               	clrf	(?_toupper+1)^0,c
  7495  00290E  EF8D  F014         	goto	l1709
  7496  002912                     l1704:
  7497  002912  C00B  F00B         	movff	toupper@c,?_toupper
  7498  002916  C00C  F00C         	movff	toupper@c+1,?_toupper+1
  7499  00291A                     l1709:
  7500  00291A  0012               	return		;funcret
  7501  00291C                     __end_of_toupper:
  7502                           	opt callstack 0
  7503                           
  7504 ;; *************** function _islower *****************
  7505 ;; Defined at:
  7506 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
  7507 ;; Parameters:    Size  Location     Type
  7508 ;;  c               2    4[COMRAM] int 
  7509 ;; Auto vars:     Size  Location     Type
  7510 ;;		None
  7511 ;; Return value:  Size  Location     Type
  7512 ;;                  2    4[COMRAM] int 
  7513 ;; Registers used:
  7514 ;;		wreg, status,2, status,0
  7515 ;; Tracked objects:
  7516 ;;		On entry : 0/0
  7517 ;;		On exit  : 0/0
  7518 ;;		Unchanged: 0/0
  7519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7520 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7522 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7523 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7524 ;;Total ram usage:        6 bytes
  7525 ;; Hardware stack levels used:    1
  7526 ;; Hardware stack levels required when called:    4
  7527 ;; This function calls:
  7528 ;;		Nothing
  7529 ;; This function is called by:
  7530 ;;		_toupper
  7531 ;; This function uses a non-reentrant model
  7532 ;;
  7533                           
  7534                           	psect	text43
  7535  002CE2                     __ptext43:
  7536                           	opt callstack 0
  7537  002CE2                     _islower:
  7538                           	opt callstack 21
  7539  002CE2  0E9F               	movlw	159
  7540  002CE4  6E07               	movwf	??_islower^0,c
  7541  002CE6  0EFF               	movlw	255
  7542  002CE8  6E08               	movwf	(??_islower+1)^0,c
  7543  002CEA  C005  F009         	movff	islower@c,??_islower+2
  7544  002CEE  C006  F00A         	movff	islower@c+1,??_islower+3
  7545  002CF2  5007               	movf	??_islower^0,w,c
  7546  002CF4  2609               	addwf	(??_islower+2)^0,f,c
  7547  002CF6  5008               	movf	(??_islower+1)^0,w,c
  7548  002CF8  220A               	addwfc	(??_islower+3)^0,f,c
  7549  002CFA  500A               	movf	(??_islower+3)^0,w,c
  7550  002CFC  E10A               	bnz	u4090
  7551  002CFE  0E1A               	movlw	26
  7552  002D00  5C09               	subwf	(??_islower+2)^0,w,c
  7553  002D02  A0D8               	btfss	status,0,c
  7554  002D04  EF86  F016         	goto	u4091
  7555  002D08  EF89  F016         	goto	u4090
  7556  002D0C                     u4091:
  7557  002D0C  0E01               	movlw	1
  7558  002D0E  EF8A  F016         	goto	u4100
  7559  002D12                     u4090:
  7560  002D12  0E00               	movlw	0
  7561  002D14                     u4100:
  7562  002D14  6E05               	movwf	?_islower^0,c
  7563  002D16  6A06               	clrf	(?_islower+1)^0,c
  7564  002D18  0012               	return		;funcret
  7565  002D1A                     __end_of_islower:
  7566                           	opt callstack 0
  7567                           
  7568 ;; *************** function _isupper *****************
  7569 ;; Defined at:
  7570 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  7571 ;; Parameters:    Size  Location     Type
  7572 ;;  c               2    4[COMRAM] int 
  7573 ;; Auto vars:     Size  Location     Type
  7574 ;;		None
  7575 ;; Return value:  Size  Location     Type
  7576 ;;                  2    4[COMRAM] int 
  7577 ;; Registers used:
  7578 ;;		wreg, status,2, status,0
  7579 ;; Tracked objects:
  7580 ;;		On entry : 0/0
  7581 ;;		On exit  : 0/0
  7582 ;;		Unchanged: 0/0
  7583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7584 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7586 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7587 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7588 ;;Total ram usage:        6 bytes
  7589 ;; Hardware stack levels used:    1
  7590 ;; Hardware stack levels required when called:    4
  7591 ;; This function calls:
  7592 ;;		Nothing
  7593 ;; This function is called by:
  7594 ;;		_xtoa
  7595 ;; This function uses a non-reentrant model
  7596 ;;
  7597                           
  7598                           	psect	text44
  7599  002D1A                     __ptext44:
  7600                           	opt callstack 0
  7601  002D1A                     _isupper:
  7602                           	opt callstack 22
  7603  002D1A  0EBF               	movlw	191
  7604  002D1C  6E07               	movwf	??_isupper^0,c
  7605  002D1E  0EFF               	movlw	255
  7606  002D20  6E08               	movwf	(??_isupper+1)^0,c
  7607  002D22  C005  F009         	movff	isupper@c,??_isupper+2
  7608  002D26  C006  F00A         	movff	isupper@c+1,??_isupper+3
  7609  002D2A  5007               	movf	??_isupper^0,w,c
  7610  002D2C  2609               	addwf	(??_isupper+2)^0,f,c
  7611  002D2E  5008               	movf	(??_isupper+1)^0,w,c
  7612  002D30  220A               	addwfc	(??_isupper+3)^0,f,c
  7613  002D32  500A               	movf	(??_isupper+3)^0,w,c
  7614  002D34  E10A               	bnz	u4160
  7615  002D36  0E1A               	movlw	26
  7616  002D38  5C09               	subwf	(??_isupper+2)^0,w,c
  7617  002D3A  A0D8               	btfss	status,0,c
  7618  002D3C  EFA2  F016         	goto	u4161
  7619  002D40  EFA5  F016         	goto	u4160
  7620  002D44                     u4161:
  7621  002D44  0E01               	movlw	1
  7622  002D46  EFA6  F016         	goto	u4170
  7623  002D4A                     u4160:
  7624  002D4A  0E00               	movlw	0
  7625  002D4C                     u4170:
  7626  002D4C  6E05               	movwf	?_isupper^0,c
  7627  002D4E  6A06               	clrf	(?_isupper+1)^0,c
  7628  002D50  0012               	return		;funcret
  7629  002D52                     __end_of_isupper:
  7630                           	opt callstack 0
  7631                           
  7632 ;; *************** function _isalpha *****************
  7633 ;; Defined at:
  7634 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
  7635 ;; Parameters:    Size  Location     Type
  7636 ;;  c               2    4[COMRAM] int 
  7637 ;; Auto vars:     Size  Location     Type
  7638 ;;		None
  7639 ;; Return value:  Size  Location     Type
  7640 ;;                  2    4[COMRAM] int 
  7641 ;; Registers used:
  7642 ;;		wreg, status,2, status,0
  7643 ;; Tracked objects:
  7644 ;;		On entry : 0/0
  7645 ;;		On exit  : 0/0
  7646 ;;		Unchanged: 0/0
  7647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7648 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7650 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7651 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7652 ;;Total ram usage:        6 bytes
  7653 ;; Hardware stack levels used:    1
  7654 ;; Hardware stack levels required when called:    4
  7655 ;; This function calls:
  7656 ;;		Nothing
  7657 ;; This function is called by:
  7658 ;;		_xtoa
  7659 ;; This function uses a non-reentrant model
  7660 ;;
  7661                           
  7662                           	psect	text45
  7663  002CA6                     __ptext45:
  7664                           	opt callstack 0
  7665  002CA6                     _isalpha:
  7666                           	opt callstack 22
  7667  002CA6  0E9F               	movlw	159
  7668  002CA8  6E07               	movwf	??_isalpha^0,c
  7669  002CAA  0EFF               	movlw	255
  7670  002CAC  6E08               	movwf	(??_isalpha+1)^0,c
  7671  002CAE  0E20               	movlw	32
  7672  002CB0  1005               	iorwf	isalpha@c^0,w,c
  7673  002CB2  6E09               	movwf	(??_isalpha+2)^0,c
  7674  002CB4  0E00               	movlw	0
  7675  002CB6  1006               	iorwf	(isalpha@c+1)^0,w,c
  7676  002CB8  6E0A               	movwf	(??_isalpha+3)^0,c
  7677  002CBA  5007               	movf	??_isalpha^0,w,c
  7678  002CBC  2609               	addwf	(??_isalpha+2)^0,f,c
  7679  002CBE  5008               	movf	(??_isalpha+1)^0,w,c
  7680  002CC0  220A               	addwfc	(??_isalpha+3)^0,f,c
  7681  002CC2  500A               	movf	(??_isalpha+3)^0,w,c
  7682  002CC4  E10A               	bnz	u4180
  7683  002CC6  0E1A               	movlw	26
  7684  002CC8  5C09               	subwf	(??_isalpha+2)^0,w,c
  7685  002CCA  A0D8               	btfss	status,0,c
  7686  002CCC  EF6A  F016         	goto	u4181
  7687  002CD0  EF6D  F016         	goto	u4180
  7688  002CD4                     u4181:
  7689  002CD4  0E01               	movlw	1
  7690  002CD6  EF6E  F016         	goto	u4190
  7691  002CDA                     u4180:
  7692  002CDA  0E00               	movlw	0
  7693  002CDC                     u4190:
  7694  002CDC  6E05               	movwf	?_isalpha^0,c
  7695  002CDE  6A06               	clrf	(?_isalpha+1)^0,c
  7696  002CE0  0012               	return		;funcret
  7697  002CE2                     __end_of_isalpha:
  7698                           	opt callstack 0
  7699                           
  7700 ;; *************** function _utoa *****************
  7701 ;; Defined at:
  7702 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7703 ;; Parameters:    Size  Location     Type
  7704 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  7705 ;;		 -> NULL(0), 
  7706 ;;  d               8   35[COMRAM] unsigned long long 
  7707 ;; Auto vars:     Size  Location     Type
  7708 ;;  n               8   55[COMRAM] unsigned long long 
  7709 ;;  i               2   63[COMRAM] int 
  7710 ;;  w               2   53[COMRAM] int 
  7711 ;;  p               2   51[COMRAM] int 
  7712 ;; Return value:  Size  Location     Type
  7713 ;;                  2   33[COMRAM] int 
  7714 ;; Registers used:
  7715 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7716 ;; Tracked objects:
  7717 ;;		On entry : 0/0
  7718 ;;		On exit  : 0/0
  7719 ;;		Unchanged: 0/0
  7720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7721 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7722 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7723 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7724 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7725 ;;Total ram usage:       32 bytes
  7726 ;; Hardware stack levels used:    1
  7727 ;; Hardware stack levels required when called:    9
  7728 ;; This function calls:
  7729 ;;		___lodiv
  7730 ;;		___lomod
  7731 ;;		_pad
  7732 ;; This function is called by:
  7733 ;;		_vfpfcnvrt
  7734 ;; This function uses a non-reentrant model
  7735 ;;
  7736                           
  7737                           	psect	text46
  7738  000EA4                     __ptext46:
  7739                           	opt callstack 0
  7740  000EA4                     _utoa:
  7741                           	opt callstack 18
  7742  000EA4                     
  7743                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  7744  000EA4  0100               	movlb	0	; () banked
  7745  000EA6  BF8D               	btfsc	(_prec+1)& (0+255),7,b
  7746  000EA8  EF58  F007         	goto	u4721
  7747  000EAC  EF5A  F007         	goto	u4720
  7748  000EB0                     u4721:
  7749  000EB0  EF5B  F007         	goto	l5032
  7750  000EB4                     u4720:
  7751  000EB4                     
  7752                           ; BSR set to: 0
  7753                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  7754  000EB4  9257               	bcf	_flags^0,1,c
  7755  000EB6                     l5032:
  7756                           
  7757                           ; BSR set to: 0
  7758                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  7759  000EB6  BF8D               	btfsc	(_prec+1)& (0+255),7,b
  7760  000EB8  EF68  F007         	goto	u4730
  7761  000EBC  518D               	movf	(_prec+1)& (0+255),w,b
  7762  000EBE  E106               	bnz	u4731
  7763  000EC0  058C               	decf	_prec& (0+255),w,b
  7764  000EC2  B0D8               	btfsc	status,0,c
  7765  000EC4  EF66  F007         	goto	u4731
  7766  000EC8  EF68  F007         	goto	u4730
  7767  000ECC                     u4731:
  7768  000ECC  EF6E  F007         	goto	l847
  7769  000ED0                     u4730:
  7770  000ED0                     
  7771                           ; BSR set to: 0
  7772  000ED0  0E00               	movlw	0
  7773  000ED2  6E35               	movwf	(utoa@p+1)^0,c
  7774  000ED4  0E01               	movlw	1
  7775  000ED6  6E34               	movwf	utoa@p^0,c
  7776  000ED8  EF72  F007         	goto	l849
  7777  000EDC                     l847:
  7778                           
  7779                           ; BSR set to: 0
  7780  000EDC  C08C  F034         	movff	_prec,utoa@p
  7781  000EE0  C08D  F035         	movff	_prec+1,utoa@p+1
  7782  000EE4                     l849:
  7783                           
  7784                           ; BSR set to: 0
  7785                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  7786  000EE4  C08A  F036         	movff	_width,utoa@w
  7787  000EE8  C08B  F037         	movff	_width+1,utoa@w+1
  7788                           
  7789                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  7790  000EEC  C024  F038         	movff	utoa@d,utoa@n
  7791  000EF0  C025  F039         	movff	utoa@d+1,utoa@n+1
  7792  000EF4  C026  F03A         	movff	utoa@d+2,utoa@n+2
  7793  000EF8  C027  F03B         	movff	utoa@d+3,utoa@n+3
  7794  000EFC  C028  F03C         	movff	utoa@d+4,utoa@n+4
  7795  000F00  C029  F03D         	movff	utoa@d+5,utoa@n+5
  7796  000F04  C02A  F03E         	movff	utoa@d+6,utoa@n+6
  7797  000F08  C02B  F03F         	movff	utoa@d+7,utoa@n+7
  7798  000F0C                     
  7799                           ; BSR set to: 0
  7800                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  7801  000F0C  0E00               	movlw	0
  7802  000F0E  6E41               	movwf	(utoa@i+1)^0,c
  7803  000F10  0E1F               	movlw	31
  7804  000F12  6E40               	movwf	utoa@i^0,c
  7805  000F14                     
  7806                           ; BSR set to: 0
  7807                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  7808  000F14  0E00               	movlw	0
  7809  000F16  0101               	movlb	1	; () banked
  7810  000F18  6F83               	movwf	(_dbuf+31)& (0+255),b
  7811                           
  7812                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7813  000F1A  EF05  F008         	goto	l5050
  7814  000F1E                     l5040:
  7815                           
  7816                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  7817  000F1E  0640               	decf	utoa@i^0,f,c
  7818  000F20  A0D8               	btfss	status,0,c
  7819  000F22  0641               	decf	(utoa@i+1)^0,f,c
  7820  000F24                     
  7821                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  7822  000F24  0E64               	movlw	low _dbuf
  7823  000F26  2440               	addwf	utoa@i^0,w,c
  7824  000F28  6ED9               	movwf	fsr2l,c
  7825  000F2A  0E01               	movlw	high _dbuf
  7826  000F2C  2041               	addwfc	(utoa@i+1)^0,w,c
  7827  000F2E  6EDA               	movwf	fsr2h,c
  7828  000F30  C038  F005         	movff	utoa@n,___lomod@dividend
  7829  000F34  C039  F006         	movff	utoa@n+1,___lomod@dividend+1
  7830  000F38  C03A  F007         	movff	utoa@n+2,___lomod@dividend+2
  7831  000F3C  C03B  F008         	movff	utoa@n+3,___lomod@dividend+3
  7832  000F40  C03C  F009         	movff	utoa@n+4,___lomod@dividend+4
  7833  000F44  C03D  F00A         	movff	utoa@n+5,___lomod@dividend+5
  7834  000F48  C03E  F00B         	movff	utoa@n+6,___lomod@dividend+6
  7835  000F4C  C03F  F00C         	movff	utoa@n+7,___lomod@dividend+7
  7836  000F50  0E0A               	movlw	10
  7837  000F52  6E0D               	movwf	___lomod@divisor^0,c
  7838  000F54  0E00               	movlw	0
  7839  000F56  6E0E               	movwf	(___lomod@divisor+1)^0,c
  7840  000F58  0E00               	movlw	0
  7841  000F5A  6E0F               	movwf	(___lomod@divisor+2)^0,c
  7842  000F5C  0E00               	movlw	0
  7843  000F5E  6E10               	movwf	(___lomod@divisor+3)^0,c
  7844  000F60  0E00               	movlw	0
  7845  000F62  6E11               	movwf	(___lomod@divisor+4)^0,c
  7846  000F64  0E00               	movlw	0
  7847  000F66  6E12               	movwf	(___lomod@divisor+5)^0,c
  7848  000F68  0E00               	movlw	0
  7849  000F6A  6E13               	movwf	(___lomod@divisor+6)^0,c
  7850  000F6C  0E00               	movlw	0
  7851  000F6E  6E14               	movwf	(___lomod@divisor+7)^0,c
  7852  000F70  ECFD  F00E         	call	___lomod	;wreg free
  7853  000F74  C005  F02C         	movff	?___lomod,??_utoa
  7854  000F78  C006  F02D         	movff	?___lomod+1,??_utoa+1
  7855  000F7C  C007  F02E         	movff	?___lomod+2,??_utoa+2
  7856  000F80  C008  F02F         	movff	?___lomod+3,??_utoa+3
  7857  000F84  C009  F030         	movff	?___lomod+4,??_utoa+4
  7858  000F88  C00A  F031         	movff	?___lomod+5,??_utoa+5
  7859  000F8C  C00B  F032         	movff	?___lomod+6,??_utoa+6
  7860  000F90  C00C  F033         	movff	?___lomod+7,??_utoa+7
  7861  000F94  502C               	movf	??_utoa^0,w,c
  7862  000F96  0F30               	addlw	48
  7863  000F98  6EDF               	movwf	indf2,c
  7864  000F9A                     
  7865                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  7866  000F9A  0634               	decf	utoa@p^0,f,c
  7867  000F9C  A0D8               	btfss	status,0,c
  7868  000F9E  0635               	decf	(utoa@p+1)^0,f,c
  7869  000FA0                     
  7870                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  7871  000FA0  0636               	decf	utoa@w^0,f,c
  7872  000FA2  A0D8               	btfss	status,0,c
  7873  000FA4  0637               	decf	(utoa@w+1)^0,f,c
  7874  000FA6                     
  7875                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  7876  000FA6  C038  F005         	movff	utoa@n,___lodiv@dividend
  7877  000FAA  C039  F006         	movff	utoa@n+1,___lodiv@dividend+1
  7878  000FAE  C03A  F007         	movff	utoa@n+2,___lodiv@dividend+2
  7879  000FB2  C03B  F008         	movff	utoa@n+3,___lodiv@dividend+3
  7880  000FB6  C03C  F009         	movff	utoa@n+4,___lodiv@dividend+4
  7881  000FBA  C03D  F00A         	movff	utoa@n+5,___lodiv@dividend+5
  7882  000FBE  C03E  F00B         	movff	utoa@n+6,___lodiv@dividend+6
  7883  000FC2  C03F  F00C         	movff	utoa@n+7,___lodiv@dividend+7
  7884  000FC6  0E0A               	movlw	10
  7885  000FC8  6E0D               	movwf	___lodiv@divisor^0,c
  7886  000FCA  0E00               	movlw	0
  7887  000FCC  6E0E               	movwf	(___lodiv@divisor+1)^0,c
  7888  000FCE  0E00               	movlw	0
  7889  000FD0  6E0F               	movwf	(___lodiv@divisor+2)^0,c
  7890  000FD2  0E00               	movlw	0
  7891  000FD4  6E10               	movwf	(___lodiv@divisor+3)^0,c
  7892  000FD6  0E00               	movlw	0
  7893  000FD8  6E11               	movwf	(___lodiv@divisor+4)^0,c
  7894  000FDA  0E00               	movlw	0
  7895  000FDC  6E12               	movwf	(___lodiv@divisor+5)^0,c
  7896  000FDE  0E00               	movlw	0
  7897  000FE0  6E13               	movwf	(___lodiv@divisor+6)^0,c
  7898  000FE2  0E00               	movlw	0
  7899  000FE4  6E14               	movwf	(___lodiv@divisor+7)^0,c
  7900  000FE6  EC14  F00E         	call	___lodiv	;wreg free
  7901  000FEA  C005  F038         	movff	?___lodiv,utoa@n
  7902  000FEE  C006  F039         	movff	?___lodiv+1,utoa@n+1
  7903  000FF2  C007  F03A         	movff	?___lodiv+2,utoa@n+2
  7904  000FF6  C008  F03B         	movff	?___lodiv+3,utoa@n+3
  7905  000FFA  C009  F03C         	movff	?___lodiv+4,utoa@n+4
  7906  000FFE  C00A  F03D         	movff	?___lodiv+5,utoa@n+5
  7907  001002  C00B  F03E         	movff	?___lodiv+6,utoa@n+6
  7908  001006  C00C  F03F         	movff	?___lodiv+7,utoa@n+7
  7909  00100A                     l5050:
  7910                           
  7911                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7912  00100A  5040               	movf	utoa@i^0,w,c
  7913  00100C  1041               	iorwf	(utoa@i+1)^0,w,c
  7914  00100E  B4D8               	btfsc	status,2,c
  7915  001010  EF0C  F008         	goto	u4741
  7916  001014  EF0E  F008         	goto	u4740
  7917  001018                     u4741:
  7918  001018  EF3E  F008         	goto	l5060
  7919  00101C                     u4740:
  7920  00101C  5038               	movf	utoa@n^0,w,c
  7921  00101E  1039               	iorwf	(utoa@n+1)^0,w,c
  7922  001020  103A               	iorwf	(utoa@n+2)^0,w,c
  7923  001022  103B               	iorwf	(utoa@n+3)^0,w,c
  7924  001024  103C               	iorwf	(utoa@n+4)^0,w,c
  7925  001026  103D               	iorwf	(utoa@n+5)^0,w,c
  7926  001028  103E               	iorwf	(utoa@n+6)^0,w,c
  7927  00102A  103F               	iorwf	(utoa@n+7)^0,w,c
  7928  00102C  A4D8               	btfss	status,2,c
  7929  00102E  EF1B  F008         	goto	u4751
  7930  001032  EF1D  F008         	goto	u4750
  7931  001036                     u4751:
  7932  001036  EF8F  F007         	goto	l5040
  7933  00103A                     u4750:
  7934  00103A  BE35               	btfsc	(utoa@p+1)^0,7,c
  7935  00103C  EF2A  F008         	goto	u4760
  7936  001040  5035               	movf	(utoa@p+1)^0,w,c
  7937  001042  E106               	bnz	u4761
  7938  001044  0434               	decf	utoa@p^0,w,c
  7939  001046  B0D8               	btfsc	status,0,c
  7940  001048  EF28  F008         	goto	u4761
  7941  00104C  EF2A  F008         	goto	u4760
  7942  001050                     u4761:
  7943  001050  EF8F  F007         	goto	l5040
  7944  001054                     u4760:
  7945  001054  BE37               	btfsc	(utoa@w+1)^0,7,c
  7946  001056  EF35  F008         	goto	u4771
  7947  00105A  5037               	movf	(utoa@w+1)^0,w,c
  7948  00105C  E108               	bnz	u4770
  7949  00105E  0436               	decf	utoa@w^0,w,c
  7950  001060  A0D8               	btfss	status,0,c
  7951  001062  EF35  F008         	goto	u4771
  7952  001066  EF37  F008         	goto	u4770
  7953  00106A                     u4771:
  7954  00106A  EF3E  F008         	goto	l5060
  7955  00106E                     u4770:
  7956  00106E  B257               	btfsc	_flags^0,1,c
  7957  001070  EF3C  F008         	goto	u4781
  7958  001074  EF3E  F008         	goto	u4780
  7959  001078                     u4781:
  7960  001078  EF8F  F007         	goto	l5040
  7961  00107C                     u4780:
  7962  00107C                     l5060:
  7963                           
  7964                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  7965  00107C  C022  F017         	movff	utoa@fp,pad@fp
  7966  001080  C023  F018         	movff	utoa@fp+1,pad@fp+1
  7967  001084  0E64               	movlw	low _dbuf
  7968  001086  2440               	addwf	utoa@i^0,w,c
  7969  001088  6E19               	movwf	pad@buf^0,c
  7970  00108A  0E01               	movlw	high _dbuf
  7971  00108C  2041               	addwfc	(utoa@i+1)^0,w,c
  7972  00108E  6E1A               	movwf	(pad@buf+1)^0,c
  7973  001090  C036  F01B         	movff	utoa@w,pad@p
  7974  001094  C037  F01C         	movff	utoa@w+1,pad@p+1
  7975  001098  ECC7  F00F         	call	_pad	;wreg free
  7976  00109C  C017  F022         	movff	?_pad,?_utoa
  7977  0010A0  C018  F023         	movff	?_pad+1,?_utoa+1
  7978  0010A4  0012               	return		;funcret
  7979  0010A6                     __end_of_utoa:
  7980                           	opt callstack 0
  7981                           
  7982 ;; *************** function ___lomod *****************
  7983 ;; Defined at:
  7984 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
  7985 ;; Parameters:    Size  Location     Type
  7986 ;;  dividend        8    4[COMRAM] unsigned long long 
  7987 ;;  divisor         8   12[COMRAM] unsigned long long 
  7988 ;; Auto vars:     Size  Location     Type
  7989 ;;  counter         1   20[COMRAM] unsigned char 
  7990 ;; Return value:  Size  Location     Type
  7991 ;;                  8    4[COMRAM] unsigned long long 
  7992 ;; Registers used:
  7993 ;;		wreg, status,2, status,0
  7994 ;; Tracked objects:
  7995 ;;		On entry : 0/0
  7996 ;;		On exit  : 0/0
  7997 ;;		Unchanged: 0/0
  7998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7999 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8000 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8002 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8003 ;;Total ram usage:       17 bytes
  8004 ;; Hardware stack levels used:    1
  8005 ;; Hardware stack levels required when called:    4
  8006 ;; This function calls:
  8007 ;;		Nothing
  8008 ;; This function is called by:
  8009 ;;		_utoa
  8010 ;; This function uses a non-reentrant model
  8011 ;;
  8012                           
  8013                           	psect	text47
  8014  001DFA                     __ptext47:
  8015                           	opt callstack 0
  8016  001DFA                     ___lomod:
  8017                           	opt callstack 22
  8018  001DFA  500D               	movf	___lomod@divisor^0,w,c
  8019  001DFC  100E               	iorwf	(___lomod@divisor+1)^0,w,c
  8020  001DFE  100F               	iorwf	(___lomod@divisor+2)^0,w,c
  8021  001E00  1010               	iorwf	(___lomod@divisor+3)^0,w,c
  8022  001E02  1011               	iorwf	(___lomod@divisor+4)^0,w,c
  8023  001E04  1012               	iorwf	(___lomod@divisor+5)^0,w,c
  8024  001E06  1013               	iorwf	(___lomod@divisor+6)^0,w,c
  8025  001E08  1014               	iorwf	(___lomod@divisor+7)^0,w,c
  8026  001E0A  B4D8               	btfsc	status,2,c
  8027  001E0C  EF0A  F00F         	goto	u4421
  8028  001E10  EF0C  F00F         	goto	u4420
  8029  001E14                     u4421:
  8030  001E14  EF54  F00F         	goto	l1379
  8031  001E18                     u4420:
  8032  001E18  0E01               	movlw	1
  8033  001E1A  6E15               	movwf	___lomod@counter^0,c
  8034  001E1C  EF1A  F00F         	goto	l4902
  8035  001E20                     l4900:
  8036  001E20  90D8               	bcf	status,0,c
  8037  001E22  360D               	rlcf	___lomod@divisor^0,f,c
  8038  001E24  360E               	rlcf	(___lomod@divisor+1)^0,f,c
  8039  001E26  360F               	rlcf	(___lomod@divisor+2)^0,f,c
  8040  001E28  3610               	rlcf	(___lomod@divisor+3)^0,f,c
  8041  001E2A  3611               	rlcf	(___lomod@divisor+4)^0,f,c
  8042  001E2C  3612               	rlcf	(___lomod@divisor+5)^0,f,c
  8043  001E2E  3613               	rlcf	(___lomod@divisor+6)^0,f,c
  8044  001E30  3614               	rlcf	(___lomod@divisor+7)^0,f,c
  8045  001E32  2A15               	incf	___lomod@counter^0,f,c
  8046  001E34                     l4902:
  8047  001E34  AE14               	btfss	(___lomod@divisor+7)^0,7,c
  8048  001E36  EF1F  F00F         	goto	u4431
  8049  001E3A  EF21  F00F         	goto	u4430
  8050  001E3E                     u4431:
  8051  001E3E  EF10  F00F         	goto	l4900
  8052  001E42                     u4430:
  8053  001E42                     l4904:
  8054  001E42  500D               	movf	___lomod@divisor^0,w,c
  8055  001E44  5C05               	subwf	___lomod@dividend^0,w,c
  8056  001E46  500E               	movf	(___lomod@divisor+1)^0,w,c
  8057  001E48  5806               	subwfb	(___lomod@dividend+1)^0,w,c
  8058  001E4A  500F               	movf	(___lomod@divisor+2)^0,w,c
  8059  001E4C  5807               	subwfb	(___lomod@dividend+2)^0,w,c
  8060  001E4E  5010               	movf	(___lomod@divisor+3)^0,w,c
  8061  001E50  5808               	subwfb	(___lomod@dividend+3)^0,w,c
  8062  001E52  5011               	movf	(___lomod@divisor+4)^0,w,c
  8063  001E54  5809               	subwfb	(___lomod@dividend+4)^0,w,c
  8064  001E56  5012               	movf	(___lomod@divisor+5)^0,w,c
  8065  001E58  580A               	subwfb	(___lomod@dividend+5)^0,w,c
  8066  001E5A  5013               	movf	(___lomod@divisor+6)^0,w,c
  8067  001E5C  580B               	subwfb	(___lomod@dividend+6)^0,w,c
  8068  001E5E  5014               	movf	(___lomod@divisor+7)^0,w,c
  8069  001E60  580C               	subwfb	(___lomod@dividend+7)^0,w,c
  8070  001E62  A0D8               	btfss	status,0,c
  8071  001E64  EF36  F00F         	goto	u4441
  8072  001E68  EF38  F00F         	goto	u4440
  8073  001E6C                     u4441:
  8074  001E6C  EF48  F00F         	goto	l4908
  8075  001E70                     u4440:
  8076  001E70  500D               	movf	___lomod@divisor^0,w,c
  8077  001E72  5E05               	subwf	___lomod@dividend^0,f,c
  8078  001E74  500E               	movf	(___lomod@divisor+1)^0,w,c
  8079  001E76  5A06               	subwfb	(___lomod@dividend+1)^0,f,c
  8080  001E78  500F               	movf	(___lomod@divisor+2)^0,w,c
  8081  001E7A  5A07               	subwfb	(___lomod@dividend+2)^0,f,c
  8082  001E7C  5010               	movf	(___lomod@divisor+3)^0,w,c
  8083  001E7E  5A08               	subwfb	(___lomod@dividend+3)^0,f,c
  8084  001E80  5011               	movf	(___lomod@divisor+4)^0,w,c
  8085  001E82  5A09               	subwfb	(___lomod@dividend+4)^0,f,c
  8086  001E84  5012               	movf	(___lomod@divisor+5)^0,w,c
  8087  001E86  5A0A               	subwfb	(___lomod@dividend+5)^0,f,c
  8088  001E88  5013               	movf	(___lomod@divisor+6)^0,w,c
  8089  001E8A  5A0B               	subwfb	(___lomod@dividend+6)^0,f,c
  8090  001E8C  5014               	movf	(___lomod@divisor+7)^0,w,c
  8091  001E8E  5A0C               	subwfb	(___lomod@dividend+7)^0,f,c
  8092  001E90                     l4908:
  8093  001E90  90D8               	bcf	status,0,c
  8094  001E92  3214               	rrcf	(___lomod@divisor+7)^0,f,c
  8095  001E94  3213               	rrcf	(___lomod@divisor+6)^0,f,c
  8096  001E96  3212               	rrcf	(___lomod@divisor+5)^0,f,c
  8097  001E98  3211               	rrcf	(___lomod@divisor+4)^0,f,c
  8098  001E9A  3210               	rrcf	(___lomod@divisor+3)^0,f,c
  8099  001E9C  320F               	rrcf	(___lomod@divisor+2)^0,f,c
  8100  001E9E  320E               	rrcf	(___lomod@divisor+1)^0,f,c
  8101  001EA0  320D               	rrcf	___lomod@divisor^0,f,c
  8102  001EA2  2E15               	decfsz	___lomod@counter^0,f,c
  8103  001EA4  EF21  F00F         	goto	l4904
  8104  001EA8                     l1379:
  8105  001EA8  C005  F005         	movff	___lomod@dividend,?___lomod
  8106  001EAC  C006  F006         	movff	___lomod@dividend+1,?___lomod+1
  8107  001EB0  C007  F007         	movff	___lomod@dividend+2,?___lomod+2
  8108  001EB4  C008  F008         	movff	___lomod@dividend+3,?___lomod+3
  8109  001EB8  C009  F009         	movff	___lomod@dividend+4,?___lomod+4
  8110  001EBC  C00A  F00A         	movff	___lomod@dividend+5,?___lomod+5
  8111  001EC0  C00B  F00B         	movff	___lomod@dividend+6,?___lomod+6
  8112  001EC4  C00C  F00C         	movff	___lomod@dividend+7,?___lomod+7
  8113  001EC8  0012               	return		;funcret
  8114  001ECA                     __end_of___lomod:
  8115                           	opt callstack 0
  8116                           
  8117 ;; *************** function ___lodiv *****************
  8118 ;; Defined at:
  8119 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
  8120 ;; Parameters:    Size  Location     Type
  8121 ;;  dividend        8    4[COMRAM] unsigned long long 
  8122 ;;  divisor         8   12[COMRAM] unsigned long long 
  8123 ;; Auto vars:     Size  Location     Type
  8124 ;;  quotient        8   20[COMRAM] unsigned long long 
  8125 ;;  counter         1   28[COMRAM] unsigned char 
  8126 ;; Return value:  Size  Location     Type
  8127 ;;                  8    4[COMRAM] unsigned long long 
  8128 ;; Registers used:
  8129 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8130 ;; Tracked objects:
  8131 ;;		On entry : 0/0
  8132 ;;		On exit  : 0/0
  8133 ;;		Unchanged: 0/0
  8134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8135 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8136 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8138 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8139 ;;Total ram usage:       25 bytes
  8140 ;; Hardware stack levels used:    1
  8141 ;; Hardware stack levels required when called:    4
  8142 ;; This function calls:
  8143 ;;		Nothing
  8144 ;; This function is called by:
  8145 ;;		_utoa
  8146 ;; This function uses a non-reentrant model
  8147 ;;
  8148                           
  8149                           	psect	text48
  8150  001C28                     __ptext48:
  8151                           	opt callstack 0
  8152  001C28                     ___lodiv:
  8153                           	opt callstack 22
  8154  001C28  EE20  F015         	lfsr	2,___lodiv@quotient
  8155  001C2C  0E07               	movlw	7
  8156  001C2E                     u4381:
  8157  001C2E  6ADE               	clrf	postinc2,c
  8158  001C30  06E8               	decf	wreg,f,c
  8159  001C32  E2FD               	bc	u4381
  8160  001C34  500D               	movf	___lodiv@divisor^0,w,c
  8161  001C36  100E               	iorwf	(___lodiv@divisor+1)^0,w,c
  8162  001C38  100F               	iorwf	(___lodiv@divisor+2)^0,w,c
  8163  001C3A  1010               	iorwf	(___lodiv@divisor+3)^0,w,c
  8164  001C3C  1011               	iorwf	(___lodiv@divisor+4)^0,w,c
  8165  001C3E  1012               	iorwf	(___lodiv@divisor+5)^0,w,c
  8166  001C40  1013               	iorwf	(___lodiv@divisor+6)^0,w,c
  8167  001C42  1014               	iorwf	(___lodiv@divisor+7)^0,w,c
  8168  001C44  B4D8               	btfsc	status,2,c
  8169  001C46  EF27  F00E         	goto	u4391
  8170  001C4A  EF29  F00E         	goto	u4390
  8171  001C4E                     u4391:
  8172  001C4E  EF7B  F00E         	goto	l1369
  8173  001C52                     u4390:
  8174  001C52  0E01               	movlw	1
  8175  001C54  6E1D               	movwf	___lodiv@counter^0,c
  8176  001C56  EF37  F00E         	goto	l4882
  8177  001C5A                     l4880:
  8178  001C5A  90D8               	bcf	status,0,c
  8179  001C5C  360D               	rlcf	___lodiv@divisor^0,f,c
  8180  001C5E  360E               	rlcf	(___lodiv@divisor+1)^0,f,c
  8181  001C60  360F               	rlcf	(___lodiv@divisor+2)^0,f,c
  8182  001C62  3610               	rlcf	(___lodiv@divisor+3)^0,f,c
  8183  001C64  3611               	rlcf	(___lodiv@divisor+4)^0,f,c
  8184  001C66  3612               	rlcf	(___lodiv@divisor+5)^0,f,c
  8185  001C68  3613               	rlcf	(___lodiv@divisor+6)^0,f,c
  8186  001C6A  3614               	rlcf	(___lodiv@divisor+7)^0,f,c
  8187  001C6C  2A1D               	incf	___lodiv@counter^0,f,c
  8188  001C6E                     l4882:
  8189  001C6E  AE14               	btfss	(___lodiv@divisor+7)^0,7,c
  8190  001C70  EF3C  F00E         	goto	u4401
  8191  001C74  EF3E  F00E         	goto	u4400
  8192  001C78                     u4401:
  8193  001C78  EF2D  F00E         	goto	l4880
  8194  001C7C                     u4400:
  8195  001C7C                     l4884:
  8196  001C7C  90D8               	bcf	status,0,c
  8197  001C7E  3615               	rlcf	___lodiv@quotient^0,f,c
  8198  001C80  3616               	rlcf	(___lodiv@quotient+1)^0,f,c
  8199  001C82  3617               	rlcf	(___lodiv@quotient+2)^0,f,c
  8200  001C84  3618               	rlcf	(___lodiv@quotient+3)^0,f,c
  8201  001C86  3619               	rlcf	(___lodiv@quotient+4)^0,f,c
  8202  001C88  361A               	rlcf	(___lodiv@quotient+5)^0,f,c
  8203  001C8A  361B               	rlcf	(___lodiv@quotient+6)^0,f,c
  8204  001C8C  361C               	rlcf	(___lodiv@quotient+7)^0,f,c
  8205  001C8E  500D               	movf	___lodiv@divisor^0,w,c
  8206  001C90  5C05               	subwf	___lodiv@dividend^0,w,c
  8207  001C92  500E               	movf	(___lodiv@divisor+1)^0,w,c
  8208  001C94  5806               	subwfb	(___lodiv@dividend+1)^0,w,c
  8209  001C96  500F               	movf	(___lodiv@divisor+2)^0,w,c
  8210  001C98  5807               	subwfb	(___lodiv@dividend+2)^0,w,c
  8211  001C9A  5010               	movf	(___lodiv@divisor+3)^0,w,c
  8212  001C9C  5808               	subwfb	(___lodiv@dividend+3)^0,w,c
  8213  001C9E  5011               	movf	(___lodiv@divisor+4)^0,w,c
  8214  001CA0  5809               	subwfb	(___lodiv@dividend+4)^0,w,c
  8215  001CA2  5012               	movf	(___lodiv@divisor+5)^0,w,c
  8216  001CA4  580A               	subwfb	(___lodiv@dividend+5)^0,w,c
  8217  001CA6  5013               	movf	(___lodiv@divisor+6)^0,w,c
  8218  001CA8  580B               	subwfb	(___lodiv@dividend+6)^0,w,c
  8219  001CAA  5014               	movf	(___lodiv@divisor+7)^0,w,c
  8220  001CAC  580C               	subwfb	(___lodiv@dividend+7)^0,w,c
  8221  001CAE  A0D8               	btfss	status,0,c
  8222  001CB0  EF5C  F00E         	goto	u4411
  8223  001CB4  EF5E  F00E         	goto	u4410
  8224  001CB8                     u4411:
  8225  001CB8  EF6F  F00E         	goto	l4892
  8226  001CBC                     u4410:
  8227  001CBC  500D               	movf	___lodiv@divisor^0,w,c
  8228  001CBE  5E05               	subwf	___lodiv@dividend^0,f,c
  8229  001CC0  500E               	movf	(___lodiv@divisor+1)^0,w,c
  8230  001CC2  5A06               	subwfb	(___lodiv@dividend+1)^0,f,c
  8231  001CC4  500F               	movf	(___lodiv@divisor+2)^0,w,c
  8232  001CC6  5A07               	subwfb	(___lodiv@dividend+2)^0,f,c
  8233  001CC8  5010               	movf	(___lodiv@divisor+3)^0,w,c
  8234  001CCA  5A08               	subwfb	(___lodiv@dividend+3)^0,f,c
  8235  001CCC  5011               	movf	(___lodiv@divisor+4)^0,w,c
  8236  001CCE  5A09               	subwfb	(___lodiv@dividend+4)^0,f,c
  8237  001CD0  5012               	movf	(___lodiv@divisor+5)^0,w,c
  8238  001CD2  5A0A               	subwfb	(___lodiv@dividend+5)^0,f,c
  8239  001CD4  5013               	movf	(___lodiv@divisor+6)^0,w,c
  8240  001CD6  5A0B               	subwfb	(___lodiv@dividend+6)^0,f,c
  8241  001CD8  5014               	movf	(___lodiv@divisor+7)^0,w,c
  8242  001CDA  5A0C               	subwfb	(___lodiv@dividend+7)^0,f,c
  8243  001CDC  8015               	bsf	___lodiv@quotient^0,0,c
  8244  001CDE                     l4892:
  8245  001CDE  90D8               	bcf	status,0,c
  8246  001CE0  3214               	rrcf	(___lodiv@divisor+7)^0,f,c
  8247  001CE2  3213               	rrcf	(___lodiv@divisor+6)^0,f,c
  8248  001CE4  3212               	rrcf	(___lodiv@divisor+5)^0,f,c
  8249  001CE6  3211               	rrcf	(___lodiv@divisor+4)^0,f,c
  8250  001CE8  3210               	rrcf	(___lodiv@divisor+3)^0,f,c
  8251  001CEA  320F               	rrcf	(___lodiv@divisor+2)^0,f,c
  8252  001CEC  320E               	rrcf	(___lodiv@divisor+1)^0,f,c
  8253  001CEE  320D               	rrcf	___lodiv@divisor^0,f,c
  8254  001CF0  2E1D               	decfsz	___lodiv@counter^0,f,c
  8255  001CF2  EF3E  F00E         	goto	l4884
  8256  001CF6                     l1369:
  8257  001CF6  C015  F005         	movff	___lodiv@quotient,?___lodiv
  8258  001CFA  C016  F006         	movff	___lodiv@quotient+1,?___lodiv+1
  8259  001CFE  C017  F007         	movff	___lodiv@quotient+2,?___lodiv+2
  8260  001D02  C018  F008         	movff	___lodiv@quotient+3,?___lodiv+3
  8261  001D06  C019  F009         	movff	___lodiv@quotient+4,?___lodiv+4
  8262  001D0A  C01A  F00A         	movff	___lodiv@quotient+5,?___lodiv+5
  8263  001D0E  C01B  F00B         	movff	___lodiv@quotient+6,?___lodiv+6
  8264  001D12  C01C  F00C         	movff	___lodiv@quotient+7,?___lodiv+7
  8265  001D16  0012               	return		;funcret
  8266  001D18                     __end_of___lodiv:
  8267                           	opt callstack 0
  8268                           
  8269 ;; *************** function _stoa *****************
  8270 ;; Defined at:
  8271 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8272 ;; Parameters:    Size  Location     Type
  8273 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  8274 ;;		 -> NULL(0), 
  8275 ;;  s               2   17[COMRAM] PTR unsigned char 
  8276 ;;		 -> ?_printf(2), STR_5(9), STR_4(12), 
  8277 ;; Auto vars:     Size  Location     Type
  8278 ;;  nuls            7   20[COMRAM] unsigned char [7]
  8279 ;;  l               2   35[COMRAM] int 
  8280 ;;  p               2   33[COMRAM] int 
  8281 ;;  cp              2   31[COMRAM] PTR unsigned char 
  8282 ;;		 -> ?_printf(2), stoa@nuls(7), STR_5(9), STR_4(12), 
  8283 ;;  w               2   29[COMRAM] int 
  8284 ;;  i               2   27[COMRAM] int 
  8285 ;; Return value:  Size  Location     Type
  8286 ;;                  2   15[COMRAM] int 
  8287 ;; Registers used:
  8288 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8289 ;; Tracked objects:
  8290 ;;		On entry : 0/0
  8291 ;;		On exit  : 0/0
  8292 ;;		Unchanged: 0/0
  8293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8294 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8295 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8296 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8297 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8298 ;;Total ram usage:       22 bytes
  8299 ;; Hardware stack levels used:    1
  8300 ;; Hardware stack levels required when called:    7
  8301 ;; This function calls:
  8302 ;;		_fputc
  8303 ;;		_strlen
  8304 ;; This function is called by:
  8305 ;;		_vfpfcnvrt
  8306 ;; This function uses a non-reentrant model
  8307 ;;
  8308                           
  8309                           	psect	text49
  8310  001286                     __ptext49:
  8311                           	opt callstack 0
  8312  001286                     _stoa:
  8313                           	opt callstack 20
  8314  001286                     
  8315                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  8316  001286  EE20  F0F3         	lfsr	2,stoa@F1139
  8317  00128A  EE10  F015         	lfsr	1,stoa@nuls
  8318  00128E  0E06               	movlw	6
  8319  001290                     u4621:
  8320  001290  CFDB FFE3          	movff	plusw2,plusw1
  8321  001294  06E8               	decf	wreg,f,c
  8322  001296  E2FC               	bc	u4621
  8323  001298                     
  8324                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  8325  001298  C012  F020         	movff	stoa@s,stoa@cp
  8326  00129C  C013  F021         	movff	stoa@s+1,stoa@cp+1
  8327  0012A0                     
  8328                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  8329  0012A0  5020               	movf	stoa@cp^0,w,c
  8330  0012A2  1021               	iorwf	(stoa@cp+1)^0,w,c
  8331  0012A4  A4D8               	btfss	status,2,c
  8332  0012A6  EF57  F009         	goto	u4631
  8333  0012AA  EF59  F009         	goto	u4630
  8334  0012AE                     u4631:
  8335  0012AE  EF5D  F009         	goto	l4994
  8336  0012B2                     u4630:
  8337  0012B2                     
  8338                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  8339  0012B2  0E15               	movlw	low stoa@nuls
  8340  0012B4  6E20               	movwf	stoa@cp^0,c
  8341  0012B6  0E00               	movlw	high stoa@nuls
  8342  0012B8  6E21               	movwf	(stoa@cp+1)^0,c
  8343  0012BA                     l4994:
  8344                           
  8345                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  8346  0012BA  C020  F005         	movff	stoa@cp,strlen@s
  8347  0012BE  C021  F006         	movff	stoa@cp+1,strlen@s+1
  8348  0012C2  EC12  F015         	call	_strlen	;wreg free
  8349  0012C6  C005  F024         	movff	?_strlen,stoa@l
  8350  0012CA  C006  F025         	movff	?_strlen+1,stoa@l+1
  8351  0012CE                     
  8352                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  8353  0012CE  C08C  F022         	movff	_prec,stoa@p
  8354  0012D2  C08D  F023         	movff	_prec+1,stoa@p+1
  8355  0012D6                     
  8356                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  8357  0012D6  BE23               	btfsc	(stoa@p+1)^0,7,c
  8358  0012D8  EF70  F009         	goto	u4641
  8359  0012DC  EF72  F009         	goto	u4640
  8360  0012E0                     u4641:
  8361  0012E0  EF87  F009         	goto	l828
  8362  0012E4                     u4640:
  8363  0012E4  5024               	movf	stoa@l^0,w,c
  8364  0012E6  5C22               	subwf	stoa@p^0,w,c
  8365  0012E8  5023               	movf	(stoa@p+1)^0,w,c
  8366  0012EA  0A80               	xorlw	128
  8367  0012EC  6E14               	movwf	??_stoa^0,c
  8368  0012EE  5025               	movf	(stoa@l+1)^0,w,c
  8369  0012F0  0A80               	xorlw	128
  8370  0012F2  5814               	subwfb	??_stoa^0,w,c
  8371  0012F4  A0D8               	btfss	status,0,c
  8372  0012F6  EF7F  F009         	goto	u4651
  8373  0012FA  EF81  F009         	goto	u4650
  8374  0012FE                     u4651:
  8375  0012FE  EF83  F009         	goto	l826
  8376  001302                     u4650:
  8377  001302  EF87  F009         	goto	l828
  8378  001306                     l826:
  8379  001306  C022  F024         	movff	stoa@p,stoa@l
  8380  00130A  C023  F025         	movff	stoa@p+1,stoa@l+1
  8381  00130E                     l828:
  8382                           
  8383                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  8384  00130E  C024  F022         	movff	stoa@l,stoa@p
  8385  001312  C025  F023         	movff	stoa@l+1,stoa@p+1
  8386                           
  8387                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  8388  001316  C08A  F01E         	movff	_width,stoa@w
  8389  00131A  C08B  F01F         	movff	_width+1,stoa@w+1
  8390                           
  8391                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  8392  00131E  B057               	btfsc	_flags^0,0,c
  8393  001320  EF94  F009         	goto	u4661
  8394  001324  EF96  F009         	goto	u4660
  8395  001328                     u4661:
  8396  001328  EFB3  F009         	goto	l5010
  8397  00132C                     u4660:
  8398  00132C  EFA4  F009         	goto	l5008
  8399  001330                     l5004:
  8400                           
  8401                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  8402  001330  0E00               	movlw	0
  8403  001332  6E08               	movwf	(fputc@c+1)^0,c
  8404  001334  0E20               	movlw	32
  8405  001336  6E07               	movwf	fputc@c^0,c
  8406  001338  C010  F009         	movff	stoa@fp,fputc@fp
  8407  00133C  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  8408  001340  EC89  F011         	call	_fputc	;wreg free
  8409  001344                     
  8410                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  8411  001344  4A24               	infsnz	stoa@l^0,f,c
  8412  001346  2A25               	incf	(stoa@l+1)^0,f,c
  8413  001348                     l5008:
  8414                           
  8415                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  8416  001348  501E               	movf	stoa@w^0,w,c
  8417  00134A  5C24               	subwf	stoa@l^0,w,c
  8418  00134C  5025               	movf	(stoa@l+1)^0,w,c
  8419  00134E  0A80               	xorlw	128
  8420  001350  6E14               	movwf	??_stoa^0,c
  8421  001352  501F               	movf	(stoa@w+1)^0,w,c
  8422  001354  0A80               	xorlw	128
  8423  001356  5814               	subwfb	??_stoa^0,w,c
  8424  001358  A0D8               	btfss	status,0,c
  8425  00135A  EFB1  F009         	goto	u4671
  8426  00135E  EFB3  F009         	goto	u4670
  8427  001362                     u4671:
  8428  001362  EF98  F009         	goto	l5004
  8429  001366                     u4670:
  8430  001366                     l5010:
  8431                           
  8432                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  8433  001366  0E00               	movlw	0
  8434  001368  6E1D               	movwf	(stoa@i+1)^0,c
  8435  00136A  0E00               	movlw	0
  8436  00136C  6E1C               	movwf	stoa@i^0,c
  8437                           
  8438                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8439  00136E  EFD8  F009         	goto	l5018
  8440  001372                     l5012:
  8441                           
  8442                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  8443  001372  C020  FFF6         	movff	stoa@cp,tblptrl
  8444  001376  C021  FFF7         	movff	stoa@cp+1,tblptrh
  8445  00137A  0E00               	movlw	low (__mediumconst shr (0+16))
  8446  00137C  6EF8               	movwf	tblptru,c
  8447  00137E  0E0E               	movlw	(high __ramtop+-1)
  8448  001380  64F7               	cpfsgt	tblptrh,c
  8449  001382  D003               	bra	u4687
  8450  001384  0008               	tblrd		*
  8451  001386  50F5               	movf	tablat,w,c
  8452  001388  D005               	bra	u4680
  8453  00138A                     u4687:
  8454  00138A  CFF6 FFE9          	movff	tblptrl,fsr0l
  8455  00138E  CFF7 FFEA          	movff	tblptrh,fsr0h
  8456  001392  50EF               	movf	indf0,w,c
  8457  001394                     u4680:
  8458  001394  6E14               	movwf	??_stoa^0,c
  8459  001396  5014               	movf	??_stoa^0,w,c
  8460  001398  6E07               	movwf	fputc@c^0,c
  8461  00139A  6A08               	clrf	(fputc@c+1)^0,c
  8462  00139C  C010  F009         	movff	stoa@fp,fputc@fp
  8463  0013A0  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  8464  0013A4  EC89  F011         	call	_fputc	;wreg free
  8465  0013A8                     
  8466                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  8467  0013A8  4A20               	infsnz	stoa@cp^0,f,c
  8468  0013AA  2A21               	incf	(stoa@cp+1)^0,f,c
  8469  0013AC                     
  8470                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  8471  0013AC  4A1C               	infsnz	stoa@i^0,f,c
  8472  0013AE  2A1D               	incf	(stoa@i+1)^0,f,c
  8473  0013B0                     l5018:
  8474                           
  8475                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8476  0013B0  5022               	movf	stoa@p^0,w,c
  8477  0013B2  5C1C               	subwf	stoa@i^0,w,c
  8478  0013B4  501D               	movf	(stoa@i+1)^0,w,c
  8479  0013B6  0A80               	xorlw	128
  8480  0013B8  6E14               	movwf	??_stoa^0,c
  8481  0013BA  5023               	movf	(stoa@p+1)^0,w,c
  8482  0013BC  0A80               	xorlw	128
  8483  0013BE  5814               	subwfb	??_stoa^0,w,c
  8484  0013C0  A0D8               	btfss	status,0,c
  8485  0013C2  EFE5  F009         	goto	u4691
  8486  0013C6  EFE7  F009         	goto	u4690
  8487  0013CA                     u4691:
  8488  0013CA  EFB9  F009         	goto	l5012
  8489  0013CE                     u4690:
  8490  0013CE                     
  8491                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  8492  0013CE  A057               	btfss	_flags^0,0,c
  8493  0013D0  EFEC  F009         	goto	u4701
  8494  0013D4  EFEE  F009         	goto	u4700
  8495  0013D8                     u4701:
  8496  0013D8  EF0B  F00A         	goto	l838
  8497  0013DC                     u4700:
  8498  0013DC  EFFC  F009         	goto	l5026
  8499  0013E0                     l5022:
  8500                           
  8501                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  8502  0013E0  0E00               	movlw	0
  8503  0013E2  6E08               	movwf	(fputc@c+1)^0,c
  8504  0013E4  0E20               	movlw	32
  8505  0013E6  6E07               	movwf	fputc@c^0,c
  8506  0013E8  C010  F009         	movff	stoa@fp,fputc@fp
  8507  0013EC  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  8508  0013F0  EC89  F011         	call	_fputc	;wreg free
  8509  0013F4                     
  8510                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  8511  0013F4  4A24               	infsnz	stoa@l^0,f,c
  8512  0013F6  2A25               	incf	(stoa@l+1)^0,f,c
  8513  0013F8                     l5026:
  8514                           
  8515                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  8516  0013F8  501E               	movf	stoa@w^0,w,c
  8517  0013FA  5C24               	subwf	stoa@l^0,w,c
  8518  0013FC  5025               	movf	(stoa@l+1)^0,w,c
  8519  0013FE  0A80               	xorlw	128
  8520  001400  6E14               	movwf	??_stoa^0,c
  8521  001402  501F               	movf	(stoa@w+1)^0,w,c
  8522  001404  0A80               	xorlw	128
  8523  001406  5814               	subwfb	??_stoa^0,w,c
  8524  001408  A0D8               	btfss	status,0,c
  8525  00140A  EF09  F00A         	goto	u4711
  8526  00140E  EF0B  F00A         	goto	u4710
  8527  001412                     u4711:
  8528  001412  EFF0  F009         	goto	l5022
  8529  001416                     u4710:
  8530  001416                     l838:
  8531                           
  8532                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  8533  001416  C024  F010         	movff	stoa@l,?_stoa
  8534  00141A  C025  F011         	movff	stoa@l+1,?_stoa+1
  8535  00141E  0012               	return		;funcret
  8536  001420                     __end_of_stoa:
  8537                           	opt callstack 0
  8538                           
  8539 ;; *************** function _dtoa *****************
  8540 ;; Defined at:
  8541 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8542 ;; Parameters:    Size  Location     Type
  8543 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  8544 ;;		 -> NULL(0), 
  8545 ;;  d               8   35[COMRAM] long long 
  8546 ;; Auto vars:     Size  Location     Type
  8547 ;;  n               8   59[COMRAM] long long 
  8548 ;;  i               2   67[COMRAM] int 
  8549 ;;  s               2   57[COMRAM] int 
  8550 ;;  w               2   55[COMRAM] int 
  8551 ;;  p               2   53[COMRAM] int 
  8552 ;; Return value:  Size  Location     Type
  8553 ;;                  2   33[COMRAM] int 
  8554 ;; Registers used:
  8555 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8556 ;; Tracked objects:
  8557 ;;		On entry : 0/0
  8558 ;;		On exit  : 0/0
  8559 ;;		Unchanged: 0/0
  8560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8561 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8562 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8563 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8564 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8565 ;;Total ram usage:       36 bytes
  8566 ;; Hardware stack levels used:    1
  8567 ;; Hardware stack levels required when called:    9
  8568 ;; This function calls:
  8569 ;;		___aodiv
  8570 ;;		___aomod
  8571 ;;		_abs
  8572 ;;		_pad
  8573 ;; This function is called by:
  8574 ;;		_vfpfcnvrt
  8575 ;; This function uses a non-reentrant model
  8576 ;;
  8577                           
  8578                           	psect	text50
  8579  0006B4                     __ptext50:
  8580                           	opt callstack 0
  8581  0006B4                     _dtoa:
  8582                           	opt callstack 18
  8583  0006B4                     
  8584                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  8585  0006B4  C024  F03C         	movff	dtoa@d,dtoa@n
  8586  0006B8  C025  F03D         	movff	dtoa@d+1,dtoa@n+1
  8587  0006BC  C026  F03E         	movff	dtoa@d+2,dtoa@n+2
  8588  0006C0  C027  F03F         	movff	dtoa@d+3,dtoa@n+3
  8589  0006C4  C028  F040         	movff	dtoa@d+4,dtoa@n+4
  8590  0006C8  C029  F041         	movff	dtoa@d+5,dtoa@n+5
  8591  0006CC  C02A  F042         	movff	dtoa@d+6,dtoa@n+6
  8592  0006D0  C02B  F043         	movff	dtoa@d+7,dtoa@n+7
  8593  0006D4                     
  8594                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  8595  0006D4  BE43               	btfsc	(dtoa@n+7)^0,7,c
  8596  0006D6  EF6F  F003         	goto	u4471
  8597  0006DA  EF72  F003         	goto	u4470
  8598  0006DE                     u4471:
  8599  0006DE  0E01               	movlw	1
  8600  0006E0  EF73  F003         	goto	u4480
  8601  0006E4                     u4470:
  8602  0006E4  0E00               	movlw	0
  8603  0006E6                     u4480:
  8604  0006E6  6E3A               	movwf	dtoa@s^0,c
  8605  0006E8  6A3B               	clrf	(dtoa@s+1)^0,c
  8606                           
  8607                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  8608  0006EA  503A               	movf	dtoa@s^0,w,c
  8609  0006EC  103B               	iorwf	(dtoa@s+1)^0,w,c
  8610  0006EE  B4D8               	btfsc	status,2,c
  8611  0006F0  EF7C  F003         	goto	u4491
  8612  0006F4  EF7E  F003         	goto	u4490
  8613  0006F8                     u4491:
  8614  0006F8  EF8E  F003         	goto	l4930
  8615  0006FC                     u4490:
  8616  0006FC                     
  8617                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  8618  0006FC  1E43               	comf	(dtoa@n+7)^0,f,c
  8619  0006FE  1E42               	comf	(dtoa@n+6)^0,f,c
  8620  000700  1E41               	comf	(dtoa@n+5)^0,f,c
  8621  000702  1E40               	comf	(dtoa@n+4)^0,f,c
  8622  000704  1E3F               	comf	(dtoa@n+3)^0,f,c
  8623  000706  1E3E               	comf	(dtoa@n+2)^0,f,c
  8624  000708  1E3D               	comf	(dtoa@n+1)^0,f,c
  8625  00070A  6C3C               	negf	dtoa@n^0,c
  8626  00070C  0E00               	movlw	0
  8627  00070E  223D               	addwfc	(dtoa@n+1)^0,f,c
  8628  000710  223E               	addwfc	(dtoa@n+2)^0,f,c
  8629  000712  223F               	addwfc	(dtoa@n+3)^0,f,c
  8630  000714  2240               	addwfc	(dtoa@n+4)^0,f,c
  8631  000716  2241               	addwfc	(dtoa@n+5)^0,f,c
  8632  000718  2242               	addwfc	(dtoa@n+6)^0,f,c
  8633  00071A  2243               	addwfc	(dtoa@n+7)^0,f,c
  8634  00071C                     l4930:
  8635                           
  8636                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  8637  00071C  0100               	movlb	0	; () banked
  8638  00071E  BF8D               	btfsc	(_prec+1)& (0+255),7,b
  8639  000720  EF94  F003         	goto	u4501
  8640  000724  EF96  F003         	goto	u4500
  8641  000728                     u4501:
  8642  000728  EF97  F003         	goto	l4934
  8643  00072C                     u4500:
  8644  00072C                     
  8645                           ; BSR set to: 0
  8646                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  8647  00072C  9257               	bcf	_flags^0,1,c
  8648  00072E                     l4934:
  8649                           
  8650                           ; BSR set to: 0
  8651                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  8652  00072E  BF8D               	btfsc	(_prec+1)& (0+255),7,b
  8653  000730  EFA4  F003         	goto	u4510
  8654  000734  518D               	movf	(_prec+1)& (0+255),w,b
  8655  000736  E106               	bnz	u4511
  8656  000738  058C               	decf	_prec& (0+255),w,b
  8657  00073A  B0D8               	btfsc	status,0,c
  8658  00073C  EFA2  F003         	goto	u4511
  8659  000740  EFA4  F003         	goto	u4510
  8660  000744                     u4511:
  8661  000744  EFAA  F003         	goto	l799
  8662  000748                     u4510:
  8663  000748                     
  8664                           ; BSR set to: 0
  8665  000748  0E00               	movlw	0
  8666  00074A  6E37               	movwf	(dtoa@p+1)^0,c
  8667  00074C  0E01               	movlw	1
  8668  00074E  6E36               	movwf	dtoa@p^0,c
  8669  000750  EFAE  F003         	goto	l801
  8670  000754                     l799:
  8671                           
  8672                           ; BSR set to: 0
  8673  000754  C08C  F036         	movff	_prec,dtoa@p
  8674  000758  C08D  F037         	movff	_prec+1,dtoa@p+1
  8675  00075C                     l801:
  8676                           
  8677                           ; BSR set to: 0
  8678                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  8679  00075C  C08A  F038         	movff	_width,dtoa@w
  8680  000760  C08B  F039         	movff	_width+1,dtoa@w+1
  8681  000764                     
  8682                           ; BSR set to: 0
  8683                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  8684  000764  503A               	movf	dtoa@s^0,w,c
  8685  000766  103B               	iorwf	(dtoa@s+1)^0,w,c
  8686  000768  A4D8               	btfss	status,2,c
  8687  00076A  EFB9  F003         	goto	u4521
  8688  00076E  EFBB  F003         	goto	u4520
  8689  000772                     u4521:
  8690  000772  EFC2  F003         	goto	l4942
  8691  000776                     u4520:
  8692  000776                     
  8693                           ; BSR set to: 0
  8694  000776  A457               	btfss	_flags^0,2,c
  8695  000778  EFC0  F003         	goto	u4531
  8696  00077C  EFC2  F003         	goto	u4530
  8697  000780                     u4531:
  8698  000780  EFC5  F003         	goto	l4944
  8699  000784                     u4530:
  8700  000784                     l4942:
  8701                           
  8702                           ; BSR set to: 0
  8703                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  8704  000784  0638               	decf	dtoa@w^0,f,c
  8705  000786  A0D8               	btfss	status,0,c
  8706  000788  0639               	decf	(dtoa@w+1)^0,f,c
  8707  00078A                     l4944:
  8708                           
  8709                           ; BSR set to: 0
  8710                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  8711  00078A  0E00               	movlw	0
  8712  00078C  6E45               	movwf	(dtoa@i+1)^0,c
  8713  00078E  0E1F               	movlw	31
  8714  000790  6E44               	movwf	dtoa@i^0,c
  8715  000792                     
  8716                           ; BSR set to: 0
  8717                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  8718  000792  0E00               	movlw	0
  8719  000794  0101               	movlb	1	; () banked
  8720  000796  6F83               	movwf	(_dbuf+31)& (0+255),b
  8721                           
  8722                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8723  000798  EF4A  F004         	goto	l4958
  8724  00079C                     l4948:
  8725                           
  8726                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  8727  00079C  0644               	decf	dtoa@i^0,f,c
  8728  00079E  A0D8               	btfss	status,0,c
  8729  0007A0  0645               	decf	(dtoa@i+1)^0,f,c
  8730  0007A2                     
  8731                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  8732  0007A2  0E64               	movlw	low _dbuf
  8733  0007A4  2444               	addwf	dtoa@i^0,w,c
  8734  0007A6  6ED9               	movwf	fsr2l,c
  8735  0007A8  0E01               	movlw	high _dbuf
  8736  0007AA  2045               	addwfc	(dtoa@i+1)^0,w,c
  8737  0007AC  6EDA               	movwf	fsr2h,c
  8738  0007AE  C03C  F005         	movff	dtoa@n,___aomod@dividend
  8739  0007B2  C03D  F006         	movff	dtoa@n+1,___aomod@dividend+1
  8740  0007B6  C03E  F007         	movff	dtoa@n+2,___aomod@dividend+2
  8741  0007BA  C03F  F008         	movff	dtoa@n+3,___aomod@dividend+3
  8742  0007BE  C040  F009         	movff	dtoa@n+4,___aomod@dividend+4
  8743  0007C2  C041  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  8744  0007C6  C042  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  8745  0007CA  C043  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  8746  0007CE  0E0A               	movlw	10
  8747  0007D0  6E0D               	movwf	___aomod@divisor^0,c
  8748  0007D2  0E00               	movlw	0
  8749  0007D4  6E0E               	movwf	(___aomod@divisor+1)^0,c
  8750  0007D6  0E00               	movlw	0
  8751  0007D8  6E0F               	movwf	(___aomod@divisor+2)^0,c
  8752  0007DA  0E00               	movlw	0
  8753  0007DC  6E10               	movwf	(___aomod@divisor+3)^0,c
  8754  0007DE  0E00               	movlw	0
  8755  0007E0  6E11               	movwf	(___aomod@divisor+4)^0,c
  8756  0007E2  0E00               	movlw	0
  8757  0007E4  6E12               	movwf	(___aomod@divisor+5)^0,c
  8758  0007E6  0E00               	movlw	0
  8759  0007E8  6E13               	movwf	(___aomod@divisor+6)^0,c
  8760  0007EA  0E00               	movlw	0
  8761  0007EC  6E14               	movwf	(___aomod@divisor+7)^0,c
  8762  0007EE  ECA1  F00B         	call	___aomod	;wreg free
  8763  0007F2  C005  F02C         	movff	?___aomod,??_dtoa
  8764  0007F6  C006  F02D         	movff	?___aomod+1,??_dtoa+1
  8765  0007FA  C007  F02E         	movff	?___aomod+2,??_dtoa+2
  8766  0007FE  C008  F02F         	movff	?___aomod+3,??_dtoa+3
  8767  000802  C009  F030         	movff	?___aomod+4,??_dtoa+4
  8768  000806  C00A  F031         	movff	?___aomod+5,??_dtoa+5
  8769  00080A  C00B  F032         	movff	?___aomod+6,??_dtoa+6
  8770  00080E  C00C  F033         	movff	?___aomod+7,??_dtoa+7
  8771  000812  C02C  F017         	movff	??_dtoa,abs@a
  8772  000816  C02E  F018         	movff	??_dtoa+2,abs@a+1
  8773  00081A  EC33  F016         	call	_abs	;wreg free
  8774  00081E  5017               	movf	?_abs^0,w,c
  8775  000820  0F30               	addlw	48
  8776  000822  6EDF               	movwf	indf2,c
  8777  000824                     
  8778                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  8779  000824  0636               	decf	dtoa@p^0,f,c
  8780  000826  A0D8               	btfss	status,0,c
  8781  000828  0637               	decf	(dtoa@p+1)^0,f,c
  8782  00082A                     
  8783                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  8784  00082A  0638               	decf	dtoa@w^0,f,c
  8785  00082C  A0D8               	btfss	status,0,c
  8786  00082E  0639               	decf	(dtoa@w+1)^0,f,c
  8787  000830                     
  8788                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  8789  000830  C03C  F005         	movff	dtoa@n,___aodiv@dividend
  8790  000834  C03D  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  8791  000838  C03E  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  8792  00083C  C03F  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  8793  000840  C040  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  8794  000844  C041  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  8795  000848  C042  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  8796  00084C  C043  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  8797  000850  0E0A               	movlw	10
  8798  000852  6E0D               	movwf	___aodiv@divisor^0,c
  8799  000854  0E00               	movlw	0
  8800  000856  6E0E               	movwf	(___aodiv@divisor+1)^0,c
  8801  000858  0E00               	movlw	0
  8802  00085A  6E0F               	movwf	(___aodiv@divisor+2)^0,c
  8803  00085C  0E00               	movlw	0
  8804  00085E  6E10               	movwf	(___aodiv@divisor+3)^0,c
  8805  000860  0E00               	movlw	0
  8806  000862  6E11               	movwf	(___aodiv@divisor+4)^0,c
  8807  000864  0E00               	movlw	0
  8808  000866  6E12               	movwf	(___aodiv@divisor+5)^0,c
  8809  000868  0E00               	movlw	0
  8810  00086A  6E13               	movwf	(___aodiv@divisor+6)^0,c
  8811  00086C  0E00               	movlw	0
  8812  00086E  6E14               	movwf	(___aodiv@divisor+7)^0,c
  8813  000870  ECDD  F00A         	call	___aodiv	;wreg free
  8814  000874  C005  F03C         	movff	?___aodiv,dtoa@n
  8815  000878  C006  F03D         	movff	?___aodiv+1,dtoa@n+1
  8816  00087C  C007  F03E         	movff	?___aodiv+2,dtoa@n+2
  8817  000880  C008  F03F         	movff	?___aodiv+3,dtoa@n+3
  8818  000884  C009  F040         	movff	?___aodiv+4,dtoa@n+4
  8819  000888  C00A  F041         	movff	?___aodiv+5,dtoa@n+5
  8820  00088C  C00B  F042         	movff	?___aodiv+6,dtoa@n+6
  8821  000890  C00C  F043         	movff	?___aodiv+7,dtoa@n+7
  8822  000894                     l4958:
  8823                           
  8824                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8825  000894  BE45               	btfsc	(dtoa@i+1)^0,7,c
  8826  000896  EF55  F004         	goto	u4541
  8827  00089A  5045               	movf	(dtoa@i+1)^0,w,c
  8828  00089C  E108               	bnz	u4540
  8829  00089E  0444               	decf	dtoa@i^0,w,c
  8830  0008A0  A0D8               	btfss	status,0,c
  8831  0008A2  EF55  F004         	goto	u4541
  8832  0008A6  EF57  F004         	goto	u4540
  8833  0008AA                     u4541:
  8834  0008AA  EF87  F004         	goto	l4968
  8835  0008AE                     u4540:
  8836  0008AE  503C               	movf	dtoa@n^0,w,c
  8837  0008B0  103D               	iorwf	(dtoa@n+1)^0,w,c
  8838  0008B2  103E               	iorwf	(dtoa@n+2)^0,w,c
  8839  0008B4  103F               	iorwf	(dtoa@n+3)^0,w,c
  8840  0008B6  1040               	iorwf	(dtoa@n+4)^0,w,c
  8841  0008B8  1041               	iorwf	(dtoa@n+5)^0,w,c
  8842  0008BA  1042               	iorwf	(dtoa@n+6)^0,w,c
  8843  0008BC  1043               	iorwf	(dtoa@n+7)^0,w,c
  8844  0008BE  A4D8               	btfss	status,2,c
  8845  0008C0  EF64  F004         	goto	u4551
  8846  0008C4  EF66  F004         	goto	u4550
  8847  0008C8                     u4551:
  8848  0008C8  EFCE  F003         	goto	l4948
  8849  0008CC                     u4550:
  8850  0008CC  BE37               	btfsc	(dtoa@p+1)^0,7,c
  8851  0008CE  EF73  F004         	goto	u4560
  8852  0008D2  5037               	movf	(dtoa@p+1)^0,w,c
  8853  0008D4  E106               	bnz	u4561
  8854  0008D6  0436               	decf	dtoa@p^0,w,c
  8855  0008D8  B0D8               	btfsc	status,0,c
  8856  0008DA  EF71  F004         	goto	u4561
  8857  0008DE  EF73  F004         	goto	u4560
  8858  0008E2                     u4561:
  8859  0008E2  EFCE  F003         	goto	l4948
  8860  0008E6                     u4560:
  8861  0008E6  BE39               	btfsc	(dtoa@w+1)^0,7,c
  8862  0008E8  EF7E  F004         	goto	u4571
  8863  0008EC  5039               	movf	(dtoa@w+1)^0,w,c
  8864  0008EE  E108               	bnz	u4570
  8865  0008F0  0438               	decf	dtoa@w^0,w,c
  8866  0008F2  A0D8               	btfss	status,0,c
  8867  0008F4  EF7E  F004         	goto	u4571
  8868  0008F8  EF80  F004         	goto	u4570
  8869  0008FC                     u4571:
  8870  0008FC  EF87  F004         	goto	l4968
  8871  000900                     u4570:
  8872  000900  B257               	btfsc	_flags^0,1,c
  8873  000902  EF85  F004         	goto	u4581
  8874  000906  EF87  F004         	goto	u4580
  8875  00090A                     u4581:
  8876  00090A  EFCE  F003         	goto	l4948
  8877  00090E                     u4580:
  8878  00090E                     l4968:
  8879                           
  8880                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  8881  00090E  503A               	movf	dtoa@s^0,w,c
  8882  000910  103B               	iorwf	(dtoa@s+1)^0,w,c
  8883  000912  A4D8               	btfss	status,2,c
  8884  000914  EF8E  F004         	goto	u4591
  8885  000918  EF90  F004         	goto	u4590
  8886  00091C                     u4591:
  8887  00091C  EF97  F004         	goto	l4972
  8888  000920                     u4590:
  8889  000920  A457               	btfss	_flags^0,2,c
  8890  000922  EF95  F004         	goto	u4601
  8891  000926  EF97  F004         	goto	u4600
  8892  00092A                     u4601:
  8893  00092A  EFB5  F004         	goto	l4982
  8894  00092E                     u4600:
  8895  00092E                     l4972:
  8896                           
  8897                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  8898  00092E  0644               	decf	dtoa@i^0,f,c
  8899  000930  A0D8               	btfss	status,0,c
  8900  000932  0645               	decf	(dtoa@i+1)^0,f,c
  8901  000934                     
  8902                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  8903  000934  503A               	movf	dtoa@s^0,w,c
  8904  000936  103B               	iorwf	(dtoa@s+1)^0,w,c
  8905  000938  A4D8               	btfss	status,2,c
  8906  00093A  EFA1  F004         	goto	u4611
  8907  00093E  EFA3  F004         	goto	u4610
  8908  000942                     u4611:
  8909  000942  EFA9  F004         	goto	l4978
  8910  000946                     u4610:
  8911  000946  0E00               	movlw	0
  8912  000948  6E35               	movwf	(_dtoa$1355+1)^0,c
  8913  00094A  0E2B               	movlw	43
  8914  00094C  6E34               	movwf	_dtoa$1355^0,c
  8915  00094E  EFAD  F004         	goto	l4980
  8916  000952                     l4978:
  8917  000952  0E00               	movlw	0
  8918  000954  6E35               	movwf	(_dtoa$1355+1)^0,c
  8919  000956  0E2D               	movlw	45
  8920  000958  6E34               	movwf	_dtoa$1355^0,c
  8921  00095A                     l4980:
  8922  00095A  0E64               	movlw	low _dbuf
  8923  00095C  2444               	addwf	dtoa@i^0,w,c
  8924  00095E  6ED9               	movwf	fsr2l,c
  8925  000960  0E01               	movlw	high _dbuf
  8926  000962  2045               	addwfc	(dtoa@i+1)^0,w,c
  8927  000964  6EDA               	movwf	fsr2h,c
  8928  000966  C034  FFDF         	movff	_dtoa$1355,indf2
  8929  00096A                     l4982:
  8930                           
  8931                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  8932  00096A  C022  F017         	movff	dtoa@fp,pad@fp
  8933  00096E  C023  F018         	movff	dtoa@fp+1,pad@fp+1
  8934  000972  0E64               	movlw	low _dbuf
  8935  000974  2444               	addwf	dtoa@i^0,w,c
  8936  000976  6E19               	movwf	pad@buf^0,c
  8937  000978  0E01               	movlw	high _dbuf
  8938  00097A  2045               	addwfc	(dtoa@i+1)^0,w,c
  8939  00097C  6E1A               	movwf	(pad@buf+1)^0,c
  8940  00097E  C038  F01B         	movff	dtoa@w,pad@p
  8941  000982  C039  F01C         	movff	dtoa@w+1,pad@p+1
  8942  000986  ECC7  F00F         	call	_pad	;wreg free
  8943  00098A  C017  F022         	movff	?_pad,?_dtoa
  8944  00098E  C018  F023         	movff	?_pad+1,?_dtoa+1
  8945  000992  0012               	return		;funcret
  8946  000994                     __end_of_dtoa:
  8947                           	opt callstack 0
  8948                           
  8949 ;; *************** function _pad *****************
  8950 ;; Defined at:
  8951 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8952 ;; Parameters:    Size  Location     Type
  8953 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  8954 ;;		 -> NULL(0), 
  8955 ;;  buf             2   24[COMRAM] PTR unsigned char 
  8956 ;;		 -> dbuf(32), 
  8957 ;;  p               2   26[COMRAM] int 
  8958 ;; Auto vars:     Size  Location     Type
  8959 ;;  w               2   31[COMRAM] int 
  8960 ;;  i               2   29[COMRAM] int 
  8961 ;; Return value:  Size  Location     Type
  8962 ;;                  2   22[COMRAM] int 
  8963 ;; Registers used:
  8964 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8965 ;; Tracked objects:
  8966 ;;		On entry : 0/0
  8967 ;;		On exit  : 0/0
  8968 ;;		Unchanged: 0/0
  8969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8970 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8971 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8972 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8973 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8974 ;;Total ram usage:       11 bytes
  8975 ;; Hardware stack levels used:    1
  8976 ;; Hardware stack levels required when called:    8
  8977 ;; This function calls:
  8978 ;;		_fputc
  8979 ;;		_fputs
  8980 ;;		_strlen
  8981 ;; This function is called by:
  8982 ;;		_dtoa
  8983 ;;		_utoa
  8984 ;;		_xtoa
  8985 ;; This function uses a non-reentrant model
  8986 ;;
  8987                           
  8988                           	psect	text51
  8989  001F8E                     __ptext51:
  8990                           	opt callstack 0
  8991  001F8E                     _pad:
  8992                           	opt callstack 18
  8993  001F8E                     
  8994                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  8995  001F8E  A057               	btfss	_flags^0,0,c
  8996  001F90  EFCC  F00F         	goto	u4111
  8997  001F94  EFCE  F00F         	goto	u4110
  8998  001F98                     u4111:
  8999  001F98  EFD8  F00F         	goto	l4744
  9000  001F9C                     u4110:
  9001  001F9C                     
  9002                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  9003  001F9C  C019  F010         	movff	pad@buf,fputs@s
  9004  001FA0  C01A  F011         	movff	pad@buf+1,fputs@s+1
  9005  001FA4  C017  F012         	movff	pad@fp,fputs@fp
  9006  001FA8  C018  F013         	movff	pad@fp+1,fputs@fp+1
  9007  001FAC  ECCF  F015         	call	_fputs	;wreg free
  9008  001FB0                     l4744:
  9009                           
  9010                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  9011  001FB0  BE1C               	btfsc	(pad@p+1)^0,7,c
  9012  001FB2  EFDD  F00F         	goto	u4121
  9013  001FB6  EFDF  F00F         	goto	u4120
  9014  001FBA                     u4121:
  9015  001FBA  EFE5  F00F         	goto	l4748
  9016  001FBE                     u4120:
  9017  001FBE  C01B  F020         	movff	pad@p,pad@w
  9018  001FC2  C01C  F021         	movff	pad@p+1,pad@w+1
  9019  001FC6  EFE9  F00F         	goto	l788
  9020  001FCA                     l4748:
  9021  001FCA  0E00               	movlw	0
  9022  001FCC  6E21               	movwf	(pad@w+1)^0,c
  9023  001FCE  0E00               	movlw	0
  9024  001FD0  6E20               	movwf	pad@w^0,c
  9025  001FD2                     l788:
  9026                           
  9027                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  9028  001FD2  0E00               	movlw	0
  9029  001FD4  6E1F               	movwf	(pad@i+1)^0,c
  9030  001FD6  0E00               	movlw	0
  9031  001FD8  6E1E               	movwf	pad@i^0,c
  9032                           
  9033                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  9034  001FDA  EFFB  F00F         	goto	l4754
  9035  001FDE                     l4750:
  9036                           
  9037                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  9038  001FDE  0E00               	movlw	0
  9039  001FE0  6E08               	movwf	(fputc@c+1)^0,c
  9040  001FE2  0E20               	movlw	32
  9041  001FE4  6E07               	movwf	fputc@c^0,c
  9042  001FE6  C017  F009         	movff	pad@fp,fputc@fp
  9043  001FEA  C018  F00A         	movff	pad@fp+1,fputc@fp+1
  9044  001FEE  EC89  F011         	call	_fputc	;wreg free
  9045  001FF2                     
  9046                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  9047  001FF2  4A1E               	infsnz	pad@i^0,f,c
  9048  001FF4  2A1F               	incf	(pad@i+1)^0,f,c
  9049  001FF6                     l4754:
  9050                           
  9051                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  9052  001FF6  5020               	movf	pad@w^0,w,c
  9053  001FF8  5C1E               	subwf	pad@i^0,w,c
  9054  001FFA  501F               	movf	(pad@i+1)^0,w,c
  9055  001FFC  0A80               	xorlw	128
  9056  001FFE  6E1D               	movwf	??_pad^0,c
  9057  002000  5021               	movf	(pad@w+1)^0,w,c
  9058  002002  0A80               	xorlw	128
  9059  002004  581D               	subwfb	??_pad^0,w,c
  9060  002006  A0D8               	btfss	status,0,c
  9061  002008  EF08  F010         	goto	u4131
  9062  00200C  EF0A  F010         	goto	u4130
  9063  002010                     u4131:
  9064  002010  EFEF  F00F         	goto	l4750
  9065  002014                     u4130:
  9066  002014                     
  9067                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  9068  002014  B057               	btfsc	_flags^0,0,c
  9069  002016  EF0F  F010         	goto	u4141
  9070  00201A  EF11  F010         	goto	u4140
  9071  00201E                     u4141:
  9072  00201E  EF1B  F010         	goto	l4758
  9073  002022                     u4140:
  9074  002022                     
  9075                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  9076  002022  C019  F010         	movff	pad@buf,fputs@s
  9077  002026  C01A  F011         	movff	pad@buf+1,fputs@s+1
  9078  00202A  C017  F012         	movff	pad@fp,fputs@fp
  9079  00202E  C018  F013         	movff	pad@fp+1,fputs@fp+1
  9080  002032  ECCF  F015         	call	_fputs	;wreg free
  9081  002036                     l4758:
  9082                           
  9083                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  9084  002036  C019  F005         	movff	pad@buf,strlen@s
  9085  00203A  C01A  F006         	movff	pad@buf+1,strlen@s+1
  9086  00203E  EC12  F015         	call	_strlen	;wreg free
  9087  002042  5020               	movf	pad@w^0,w,c
  9088  002044  2405               	addwf	?_strlen^0,w,c
  9089  002046  6E17               	movwf	?_pad^0,c
  9090  002048  5021               	movf	(pad@w+1)^0,w,c
  9091  00204A  2006               	addwfc	(?_strlen+1)^0,w,c
  9092  00204C  6E18               	movwf	(?_pad+1)^0,c
  9093  00204E  0012               	return		;funcret
  9094  002050                     __end_of_pad:
  9095                           	opt callstack 0
  9096                           
  9097 ;; *************** function _strlen *****************
  9098 ;; Defined at:
  9099 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  9100 ;; Parameters:    Size  Location     Type
  9101 ;;  s               2    4[COMRAM] PTR const unsigned char 
  9102 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), STR_5(9), 
  9103 ;;		 -> STR_4(12), 
  9104 ;; Auto vars:     Size  Location     Type
  9105 ;;  a               2    6[COMRAM] PTR const unsigned char 
  9106 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), STR_5(9), 
  9107 ;;		 -> STR_4(12), 
  9108 ;; Return value:  Size  Location     Type
  9109 ;;                  2    4[COMRAM] unsigned int 
  9110 ;; Registers used:
  9111 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  9112 ;; Tracked objects:
  9113 ;;		On entry : 0/0
  9114 ;;		On exit  : 0/0
  9115 ;;		Unchanged: 0/0
  9116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9117 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9118 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9120 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9121 ;;Total ram usage:        4 bytes
  9122 ;; Hardware stack levels used:    1
  9123 ;; Hardware stack levels required when called:    4
  9124 ;; This function calls:
  9125 ;;		Nothing
  9126 ;; This function is called by:
  9127 ;;		_pad
  9128 ;;		_stoa
  9129 ;; This function uses a non-reentrant model
  9130 ;;
  9131                           
  9132                           	psect	text52
  9133  002A24                     __ptext52:
  9134                           	opt callstack 0
  9135  002A24                     _strlen:
  9136                           	opt callstack 21
  9137  002A24  C005  F007         	movff	strlen@s,strlen@a
  9138  002A28  C006  F008         	movff	strlen@s+1,strlen@a+1
  9139  002A2C  EF1A  F015         	goto	l4730
  9140  002A30                     l4728:
  9141  002A30  4A05               	infsnz	strlen@s^0,f,c
  9142  002A32  2A06               	incf	(strlen@s+1)^0,f,c
  9143  002A34                     l4730:
  9144  002A34  C005  FFF6         	movff	strlen@s,tblptrl
  9145  002A38  C006  FFF7         	movff	strlen@s+1,tblptrh
  9146  002A3C  0E00               	movlw	low (__mediumconst shr (0+16))
  9147  002A3E  6EF8               	movwf	tblptru,c
  9148  002A40  0E0E               	movlw	(high __ramtop+-1)
  9149  002A42  64F7               	cpfsgt	tblptrh,c
  9150  002A44  D003               	bra	u4077
  9151  002A46  0008               	tblrd		*
  9152  002A48  50F5               	movf	tablat,w,c
  9153  002A4A  D005               	bra	u4070
  9154  002A4C                     u4077:
  9155  002A4C  CFF6 FFE9          	movff	tblptrl,fsr0l
  9156  002A50  CFF7 FFEA          	movff	tblptrh,fsr0h
  9157  002A54  50EF               	movf	indf0,w,c
  9158  002A56                     u4070:
  9159  002A56  0900               	iorlw	0
  9160  002A58  A4D8               	btfss	status,2,c
  9161  002A5A  EF31  F015         	goto	u4081
  9162  002A5E  EF33  F015         	goto	u4080
  9163  002A62                     u4081:
  9164  002A62  EF18  F015         	goto	l4728
  9165  002A66                     u4080:
  9166  002A66  5007               	movf	strlen@a^0,w,c
  9167  002A68  5C05               	subwf	strlen@s^0,w,c
  9168  002A6A  6E05               	movwf	?_strlen^0,c
  9169  002A6C  5008               	movf	(strlen@a+1)^0,w,c
  9170  002A6E  5806               	subwfb	(strlen@s+1)^0,w,c
  9171  002A70  6E06               	movwf	(?_strlen+1)^0,c
  9172  002A72  0012               	return		;funcret
  9173  002A74                     __end_of_strlen:
  9174                           	opt callstack 0
  9175                           
  9176 ;; *************** function _fputs *****************
  9177 ;; Defined at:
  9178 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  9179 ;; Parameters:    Size  Location     Type
  9180 ;;  s               2   15[COMRAM] PTR const unsigned char 
  9181 ;;		 -> dbuf(32), 
  9182 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  9183 ;;		 -> NULL(0), 
  9184 ;; Auto vars:     Size  Location     Type
  9185 ;;  i               2   20[COMRAM] int 
  9186 ;;  c               1   19[COMRAM] unsigned char 
  9187 ;; Return value:  Size  Location     Type
  9188 ;;                  2   15[COMRAM] int 
  9189 ;; Registers used:
  9190 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9191 ;; Tracked objects:
  9192 ;;		On entry : 0/0
  9193 ;;		On exit  : 0/0
  9194 ;;		Unchanged: 0/0
  9195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9196 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9197 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9199 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9200 ;;Total ram usage:        7 bytes
  9201 ;; Hardware stack levels used:    1
  9202 ;; Hardware stack levels required when called:    7
  9203 ;; This function calls:
  9204 ;;		_fputc
  9205 ;; This function is called by:
  9206 ;;		_pad
  9207 ;; This function uses a non-reentrant model
  9208 ;;
  9209                           
  9210                           	psect	text53
  9211  002B9E                     __ptext53:
  9212                           	opt callstack 0
  9213  002B9E                     _fputs:
  9214                           	opt callstack 18
  9215  002B9E  0E00               	movlw	0
  9216  002BA0  6E16               	movwf	(fputs@i+1)^0,c
  9217  002BA2  0E00               	movlw	0
  9218  002BA4  6E15               	movwf	fputs@i^0,c
  9219  002BA6  EFE0  F015         	goto	l4724
  9220  002BAA                     l4720:
  9221  002BAA  C014  F007         	movff	fputs@c,fputc@c
  9222  002BAE  6A08               	clrf	(fputc@c+1)^0,c
  9223  002BB0  C012  F009         	movff	fputs@fp,fputc@fp
  9224  002BB4  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
  9225  002BB8  EC89  F011         	call	_fputc	;wreg free
  9226  002BBC  4A15               	infsnz	fputs@i^0,f,c
  9227  002BBE  2A16               	incf	(fputs@i+1)^0,f,c
  9228  002BC0                     l4724:
  9229  002BC0  5015               	movf	fputs@i^0,w,c
  9230  002BC2  2410               	addwf	fputs@s^0,w,c
  9231  002BC4  6ED9               	movwf	fsr2l,c
  9232  002BC6  5016               	movf	(fputs@i+1)^0,w,c
  9233  002BC8  2011               	addwfc	(fputs@s+1)^0,w,c
  9234  002BCA  6EDA               	movwf	fsr2h,c
  9235  002BCC  50DF               	movf	indf2,w,c
  9236  002BCE  6E14               	movwf	fputs@c^0,c
  9237  002BD0  5014               	movf	fputs@c^0,w,c
  9238  002BD2  A4D8               	btfss	status,2,c
  9239  002BD4  EFEE  F015         	goto	u4061
  9240  002BD8  EFF0  F015         	goto	u4060
  9241  002BDC                     u4061:
  9242  002BDC  EFD5  F015         	goto	l4720
  9243  002BE0                     u4060:
  9244  002BE0  0012               	return		;funcret
  9245  002BE2                     __end_of_fputs:
  9246                           	opt callstack 0
  9247                           
  9248 ;; *************** function _fputc *****************
  9249 ;; Defined at:
  9250 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  9251 ;; Parameters:    Size  Location     Type
  9252 ;;  c               2    6[COMRAM] int 
  9253 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
  9254 ;;		 -> NULL(0), 
  9255 ;; Auto vars:     Size  Location     Type
  9256 ;;		None
  9257 ;; Return value:  Size  Location     Type
  9258 ;;                  2    6[COMRAM] int 
  9259 ;; Registers used:
  9260 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9261 ;; Tracked objects:
  9262 ;;		On entry : 0/0
  9263 ;;		On exit  : 0/0
  9264 ;;		Unchanged: 0/0
  9265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9266 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9268 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9269 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9270 ;;Total ram usage:        9 bytes
  9271 ;; Hardware stack levels used:    1
  9272 ;; Hardware stack levels required when called:    6
  9273 ;; This function calls:
  9274 ;;		_putch
  9275 ;; This function is called by:
  9276 ;;		_pad
  9277 ;;		_stoa
  9278 ;;		_vfpfcnvrt
  9279 ;;		_fputs
  9280 ;; This function uses a non-reentrant model
  9281 ;;
  9282                           
  9283                           	psect	text54
  9284  002312                     __ptext54:
  9285                           	opt callstack 0
  9286  002312                     _fputc:
  9287                           	opt callstack 18
  9288  002312  5009               	movf	fputc@fp^0,w,c
  9289  002314  100A               	iorwf	(fputc@fp+1)^0,w,c
  9290  002316  B4D8               	btfsc	status,2,c
  9291  002318  EF90  F011         	goto	u4021
  9292  00231C  EF92  F011         	goto	u4020
  9293  002320                     u4021:
  9294  002320  EF9B  F011         	goto	l4708
  9295  002324                     u4020:
  9296  002324  5009               	movf	fputc@fp^0,w,c
  9297  002326  100A               	iorwf	(fputc@fp+1)^0,w,c
  9298  002328  A4D8               	btfss	status,2,c
  9299  00232A  EF99  F011         	goto	u4031
  9300  00232E  EF9B  F011         	goto	u4030
  9301  002332                     u4031:
  9302  002332  EFA0  F011         	goto	l4710
  9303  002336                     u4030:
  9304  002336                     l4708:
  9305  002336  5007               	movf	fputc@c^0,w,c
  9306  002338  EC9A  F017         	call	_putch
  9307  00233C  EFD3  F011         	goto	l1678
  9308  002340                     l4710:
  9309  002340  EE20 F004          	lfsr	2,4
  9310  002344  5009               	movf	fputc@fp^0,w,c
  9311  002346  26D9               	addwf	fsr2l,f,c
  9312  002348  500A               	movf	(fputc@fp+1)^0,w,c
  9313  00234A  22DA               	addwfc	fsr2h,f,c
  9314  00234C  50DE               	movf	postinc2,w,c
  9315  00234E  10DE               	iorwf	postinc2,w,c
  9316  002350  B4D8               	btfsc	status,2,c
  9317  002352  EFAD  F011         	goto	u4041
  9318  002356  EFAF  F011         	goto	u4040
  9319  00235A                     u4041:
  9320  00235A  EFCA  F011         	goto	l4714
  9321  00235E                     u4040:
  9322  00235E  EE20 F004          	lfsr	2,4
  9323  002362  5009               	movf	fputc@fp^0,w,c
  9324  002364  26D9               	addwf	fsr2l,f,c
  9325  002366  500A               	movf	(fputc@fp+1)^0,w,c
  9326  002368  22DA               	addwfc	fsr2h,f,c
  9327  00236A  EE10 F002          	lfsr	1,2
  9328  00236E  5009               	movf	fputc@fp^0,w,c
  9329  002370  26E1               	addwf	fsr1l,f,c
  9330  002372  500A               	movf	(fputc@fp+1)^0,w,c
  9331  002374  22E2               	addwfc	fsr1h,f,c
  9332  002376  50DE               	movf	postinc2,w,c
  9333  002378  5CE6               	subwf	postinc1,w,c
  9334  00237A  50E6               	movf	postinc1,w,c
  9335  00237C  0A80               	xorlw	128
  9336  00237E  6E0F               	movwf	(??_fputc+4)^0,c
  9337  002380  50DE               	movf	postinc2,w,c
  9338  002382  0A80               	xorlw	128
  9339  002384  580F               	subwfb	(??_fputc+4)^0,w,c
  9340  002386  B0D8               	btfsc	status,0,c
  9341  002388  EFC8  F011         	goto	u4051
  9342  00238C  EFCA  F011         	goto	u4050
  9343  002390                     u4051:
  9344  002390  EFD3  F011         	goto	l1678
  9345  002394                     u4050:
  9346  002394                     l4714:
  9347  002394  EE20 F002          	lfsr	2,2
  9348  002398  5009               	movf	fputc@fp^0,w,c
  9349  00239A  26D9               	addwf	fsr2l,f,c
  9350  00239C  500A               	movf	(fputc@fp+1)^0,w,c
  9351  00239E  22DA               	addwfc	fsr2h,f,c
  9352  0023A0  2ADE               	incf	postinc2,f,c
  9353  0023A2  0E00               	movlw	0
  9354  0023A4  22DD               	addwfc	postdec2,f,c
  9355  0023A6                     l1678:
  9356  0023A6  0012               	return		;funcret
  9357  0023A8                     __end_of_fputc:
  9358                           	opt callstack 0
  9359                           
  9360 ;; *************** function _putch *****************
  9361 ;; Defined at:
  9362 ;;		line 201 in file "mcc_generated_files/eusart2.c"
  9363 ;; Parameters:    Size  Location     Type
  9364 ;;  txData          1    wreg     unsigned char 
  9365 ;; Auto vars:     Size  Location     Type
  9366 ;;  txData          1    5[COMRAM] unsigned char 
  9367 ;; Return value:  Size  Location     Type
  9368 ;;                  1    wreg      void 
  9369 ;; Registers used:
  9370 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9371 ;; Tracked objects:
  9372 ;;		On entry : 0/0
  9373 ;;		On exit  : 0/0
  9374 ;;		Unchanged: 0/0
  9375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9377 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9379 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9380 ;;Total ram usage:        1 bytes
  9381 ;; Hardware stack levels used:    1
  9382 ;; Hardware stack levels required when called:    5
  9383 ;; This function calls:
  9384 ;;		_EUSART2_Write
  9385 ;; This function is called by:
  9386 ;;		_fputc
  9387 ;; This function uses a non-reentrant model
  9388 ;;
  9389                           
  9390                           	psect	text55
  9391  002F34                     __ptext55:
  9392                           	opt callstack 0
  9393  002F34                     _putch:
  9394                           	opt callstack 18
  9395                           
  9396                           ;incstack = 0
  9397                           ;putch@txData stored from wreg
  9398  002F34  6E06               	movwf	putch@txData^0,c
  9399  002F36                     
  9400                           ;mcc_generated_files/eusart2.c: 201: void putch(char txData);mcc_generated_files/eusart2
      +                          .c: 202: {;mcc_generated_files/eusart2.c: 203:     EUSART2_Write(txData);
  9401  002F36  5006               	movf	putch@txData^0,w,c
  9402  002F38  EC8E  F014         	call	_EUSART2_Write
  9403  002F3C  0012               	return		;funcret
  9404  002F3E                     __end_of_putch:
  9405                           	opt callstack 0
  9406                           
  9407 ;; *************** function _EUSART2_Write *****************
  9408 ;; Defined at:
  9409 ;;		line 173 in file "mcc_generated_files/eusart2.c"
  9410 ;; Parameters:    Size  Location     Type
  9411 ;;  txData          1    wreg     unsigned char 
  9412 ;; Auto vars:     Size  Location     Type
  9413 ;;  txData          1    4[COMRAM] unsigned char 
  9414 ;; Return value:  Size  Location     Type
  9415 ;;                  1    wreg      void 
  9416 ;; Registers used:
  9417 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9418 ;; Tracked objects:
  9419 ;;		On entry : 0/0
  9420 ;;		On exit  : 0/0
  9421 ;;		Unchanged: 0/0
  9422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9424 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9426 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9427 ;;Total ram usage:        1 bytes
  9428 ;; Hardware stack levels used:    1
  9429 ;; Hardware stack levels required when called:    4
  9430 ;; This function calls:
  9431 ;;		Nothing
  9432 ;; This function is called by:
  9433 ;;		_putch
  9434 ;; This function uses a non-reentrant model
  9435 ;;
  9436                           
  9437                           	psect	text56
  9438  00291C                     __ptext56:
  9439                           	opt callstack 0
  9440  00291C                     _EUSART2_Write:
  9441                           	opt callstack 18
  9442                           
  9443                           ;incstack = 0
  9444                           ;EUSART2_Write@txData stored from wreg
  9445  00291C  6E05               	movwf	EUSART2_Write@txData^0,c
  9446  00291E                     l4686:
  9447                           
  9448                           ;mcc_generated_files/eusart2.c: 175:     while(0 == eusart2TxBufferRemaining)
  9449  00291E  0100               	movlb	0	; () banked
  9450  002920  51F2               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
  9451  002922  B4D8               	btfsc	status,2,c
  9452  002924  EF96  F014         	goto	u3991
  9453  002928  EF98  F014         	goto	u3990
  9454  00292C                     u3991:
  9455  00292C  EF8F  F014         	goto	l4686
  9456  002930                     u3990:
  9457  002930                     
  9458                           ; BSR set to: 0
  9459                           ;mcc_generated_files/eusart2.c: 179:     if(0 == PIE3bits.TX2IE)
  9460  002930  010E               	movlb	14	; () banked
  9461  002932  BDC5               	btfsc	197,6,b	;volatile
  9462  002934  EF9E  F014         	goto	u4001
  9463  002938  EFA0  F014         	goto	u4000
  9464  00293C                     u4001:
  9465  00293C  EFA4  F014         	goto	l321
  9466  002940                     u4000:
  9467  002940                     
  9468                           ; BSR set to: 14
  9469                           ;mcc_generated_files/eusart2.c: 180:     {;mcc_generated_files/eusart2.c: 181:         T
      +                          X2REG = txData;
  9470  002940  C005  FE9A         	movff	EUSART2_Write@txData,3738	;volatile
  9471                           
  9472                           ;mcc_generated_files/eusart2.c: 182:     }
  9473  002944  EFBA  F014         	goto	l4700
  9474  002948                     l321:
  9475                           
  9476                           ; BSR set to: 14
  9477                           ;mcc_generated_files/eusart2.c: 184:     {;mcc_generated_files/eusart2.c: 185:         P
      +                          IE3bits.TX2IE = 0;
  9478  002948  9DC5               	bcf	197,6,b	;volatile
  9479  00294A                     
  9480                           ; BSR set to: 14
  9481                           ;mcc_generated_files/eusart2.c: 186:         eusart2TxBuffer[eusart2TxHead++] = txData;
  9482  00294A  0E80               	movlw	low _eusart2TxBuffer
  9483  00294C  0100               	movlb	0	; () banked
  9484  00294E  25A4               	addwf	_eusart2TxHead& (0+255),w,b	;volatile
  9485  002950  6ED9               	movwf	fsr2l,c
  9486  002952  6ADA               	clrf	fsr2h,c
  9487  002954  0E00               	movlw	high _eusart2TxBuffer
  9488  002956  22DA               	addwfc	fsr2h,f,c
  9489  002958  C005  FFDF         	movff	EUSART2_Write@txData,indf2
  9490  00295C                     
  9491                           ; BSR set to: 0
  9492  00295C  2BA4               	incf	_eusart2TxHead& (0+255),f,b	;volatile
  9493  00295E                     
  9494                           ; BSR set to: 0
  9495                           ;mcc_generated_files/eusart2.c: 187:         if(sizeof(eusart2TxBuffer) <= eusart2TxHead
      +                          )
  9496  00295E  0E07               	movlw	7
  9497  002960  65A4               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
  9498  002962  EFB5  F014         	goto	u4011
  9499  002966  EFB7  F014         	goto	u4010
  9500  00296A                     u4011:
  9501  00296A  EFB9  F014         	goto	l4698
  9502  00296E                     u4010:
  9503  00296E                     
  9504                           ; BSR set to: 0
  9505                           ;mcc_generated_files/eusart2.c: 188:         {;mcc_generated_files/eusart2.c: 189:      
      +                                 eusart2TxHead = 0;
  9506  00296E  0E00               	movlw	0
  9507  002970  6FA4               	movwf	_eusart2TxHead& (0+255),b	;volatile
  9508  002972                     l4698:
  9509                           
  9510                           ; BSR set to: 0
  9511                           ;mcc_generated_files/eusart2.c: 191:         eusart2TxBufferRemaining--;
  9512  002972  07F2               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
  9513  002974                     l4700:
  9514                           
  9515                           ;mcc_generated_files/eusart2.c: 193:     PIE3bits.TX2IE = 1;
  9516  002974  010E               	movlb	14	; () banked
  9517  002976  8DC5               	bsf	197,6,b	;volatile
  9518  002978                     
  9519                           ; BSR set to: 14
  9520  002978  0012               	return		;funcret
  9521  00297A                     __end_of_EUSART2_Write:
  9522                           	opt callstack 0
  9523                           
  9524 ;; *************** function _abs *****************
  9525 ;; Defined at:
  9526 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  9527 ;; Parameters:    Size  Location     Type
  9528 ;;  a               2   22[COMRAM] int 
  9529 ;; Auto vars:     Size  Location     Type
  9530 ;;		None
  9531 ;; Return value:  Size  Location     Type
  9532 ;;                  2   22[COMRAM] int 
  9533 ;; Registers used:
  9534 ;;		wreg, status,2, status,0
  9535 ;; Tracked objects:
  9536 ;;		On entry : 0/0
  9537 ;;		On exit  : 0/0
  9538 ;;		Unchanged: 0/0
  9539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9540 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9542 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9543 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9544 ;;Total ram usage:        4 bytes
  9545 ;; Hardware stack levels used:    1
  9546 ;; Hardware stack levels required when called:    4
  9547 ;; This function calls:
  9548 ;;		Nothing
  9549 ;; This function is called by:
  9550 ;;		_dtoa
  9551 ;; This function uses a non-reentrant model
  9552 ;;
  9553                           
  9554                           	psect	text57
  9555  002C66                     __ptext57:
  9556                           	opt callstack 0
  9557  002C66                     _abs:
  9558                           	opt callstack 22
  9559  002C66  BE18               	btfsc	(abs@a+1)^0,7,c
  9560  002C68  EF40  F016         	goto	u4150
  9561  002C6C  5018               	movf	(abs@a+1)^0,w,c
  9562  002C6E  E106               	bnz	u4151
  9563  002C70  0417               	decf	abs@a^0,w,c
  9564  002C72  B0D8               	btfsc	status,0,c
  9565  002C74  EF3E  F016         	goto	u4151
  9566  002C78  EF40  F016         	goto	u4150
  9567  002C7C                     u4151:
  9568  002C7C  EF4E  F016         	goto	l1606
  9569  002C80                     u4150:
  9570  002C80  C017  F019         	movff	abs@a,??_abs
  9571  002C84  C018  F01A         	movff	abs@a+1,??_abs+1
  9572  002C88  1E19               	comf	??_abs^0,f,c
  9573  002C8A  1E1A               	comf	(??_abs+1)^0,f,c
  9574  002C8C  4A19               	infsnz	??_abs^0,f,c
  9575  002C8E  2A1A               	incf	(??_abs+1)^0,f,c
  9576  002C90  C019  F017         	movff	??_abs,?_abs
  9577  002C94  C01A  F018         	movff	??_abs+1,?_abs+1
  9578  002C98  EF52  F016         	goto	l1609
  9579  002C9C                     l1606:
  9580  002C9C  C017  F017         	movff	abs@a,?_abs
  9581  002CA0  C018  F018         	movff	abs@a+1,?_abs+1
  9582  002CA4                     l1609:
  9583  002CA4  0012               	return		;funcret
  9584  002CA6                     __end_of_abs:
  9585                           	opt callstack 0
  9586                           
  9587 ;; *************** function ___aomod *****************
  9588 ;; Defined at:
  9589 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  9590 ;; Parameters:    Size  Location     Type
  9591 ;;  dividend        8    4[COMRAM] long long 
  9592 ;;  divisor         8   12[COMRAM] long long 
  9593 ;; Auto vars:     Size  Location     Type
  9594 ;;  sign            1   21[COMRAM] unsigned char 
  9595 ;;  counter         1   20[COMRAM] unsigned char 
  9596 ;; Return value:  Size  Location     Type
  9597 ;;                  8    4[COMRAM] long long 
  9598 ;; Registers used:
  9599 ;;		wreg, status,2, status,0
  9600 ;; Tracked objects:
  9601 ;;		On entry : 0/0
  9602 ;;		On exit  : 0/0
  9603 ;;		Unchanged: 0/0
  9604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9605 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9606 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9608 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9609 ;;Total ram usage:       18 bytes
  9610 ;; Hardware stack levels used:    1
  9611 ;; Hardware stack levels required when called:    4
  9612 ;; This function calls:
  9613 ;;		Nothing
  9614 ;; This function is called by:
  9615 ;;		_dtoa
  9616 ;; This function uses a non-reentrant model
  9617 ;;
  9618                           
  9619                           	psect	text58
  9620  001742                     __ptext58:
  9621                           	opt callstack 0
  9622  001742                     ___aomod:
  9623                           	opt callstack 22
  9624  001742  0E00               	movlw	0
  9625  001744  6E16               	movwf	___aomod@sign^0,c
  9626  001746  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
  9627  001748  EFAA  F00B         	goto	u4320
  9628  00174C  EFA8  F00B         	goto	u4321
  9629  001750                     u4321:
  9630  001750  EFBC  F00B         	goto	l4846
  9631  001754                     u4320:
  9632  001754  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  9633  001756  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  9634  001758  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  9635  00175A  1E09               	comf	(___aomod@dividend+4)^0,f,c
  9636  00175C  1E08               	comf	(___aomod@dividend+3)^0,f,c
  9637  00175E  1E07               	comf	(___aomod@dividend+2)^0,f,c
  9638  001760  1E06               	comf	(___aomod@dividend+1)^0,f,c
  9639  001762  6C05               	negf	___aomod@dividend^0,c
  9640  001764  0E00               	movlw	0
  9641  001766  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  9642  001768  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  9643  00176A  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  9644  00176C  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  9645  00176E  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  9646  001770  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  9647  001772  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  9648  001774  0E01               	movlw	1
  9649  001776  6E16               	movwf	___aomod@sign^0,c
  9650  001778                     l4846:
  9651  001778  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
  9652  00177A  EFC3  F00B         	goto	u4330
  9653  00177E  EFC1  F00B         	goto	u4331
  9654  001782                     u4331:
  9655  001782  EFD3  F00B         	goto	l4850
  9656  001786                     u4330:
  9657  001786  1E14               	comf	(___aomod@divisor+7)^0,f,c
  9658  001788  1E13               	comf	(___aomod@divisor+6)^0,f,c
  9659  00178A  1E12               	comf	(___aomod@divisor+5)^0,f,c
  9660  00178C  1E11               	comf	(___aomod@divisor+4)^0,f,c
  9661  00178E  1E10               	comf	(___aomod@divisor+3)^0,f,c
  9662  001790  1E0F               	comf	(___aomod@divisor+2)^0,f,c
  9663  001792  1E0E               	comf	(___aomod@divisor+1)^0,f,c
  9664  001794  6C0D               	negf	___aomod@divisor^0,c
  9665  001796  0E00               	movlw	0
  9666  001798  220E               	addwfc	(___aomod@divisor+1)^0,f,c
  9667  00179A  220F               	addwfc	(___aomod@divisor+2)^0,f,c
  9668  00179C  2210               	addwfc	(___aomod@divisor+3)^0,f,c
  9669  00179E  2211               	addwfc	(___aomod@divisor+4)^0,f,c
  9670  0017A0  2212               	addwfc	(___aomod@divisor+5)^0,f,c
  9671  0017A2  2213               	addwfc	(___aomod@divisor+6)^0,f,c
  9672  0017A4  2214               	addwfc	(___aomod@divisor+7)^0,f,c
  9673  0017A6                     l4850:
  9674  0017A6  500D               	movf	___aomod@divisor^0,w,c
  9675  0017A8  100E               	iorwf	(___aomod@divisor+1)^0,w,c
  9676  0017AA  100F               	iorwf	(___aomod@divisor+2)^0,w,c
  9677  0017AC  1010               	iorwf	(___aomod@divisor+3)^0,w,c
  9678  0017AE  1011               	iorwf	(___aomod@divisor+4)^0,w,c
  9679  0017B0  1012               	iorwf	(___aomod@divisor+5)^0,w,c
  9680  0017B2  1013               	iorwf	(___aomod@divisor+6)^0,w,c
  9681  0017B4  1014               	iorwf	(___aomod@divisor+7)^0,w,c
  9682  0017B6  B4D8               	btfsc	status,2,c
  9683  0017B8  EFE0  F00B         	goto	u4341
  9684  0017BC  EFE2  F00B         	goto	u4340
  9685  0017C0                     u4341:
  9686  0017C0  EF2A  F00C         	goto	l4866
  9687  0017C4                     u4340:
  9688  0017C4  0E01               	movlw	1
  9689  0017C6  6E15               	movwf	___aomod@counter^0,c
  9690  0017C8  EFF0  F00B         	goto	l4856
  9691  0017CC                     l4854:
  9692  0017CC  90D8               	bcf	status,0,c
  9693  0017CE  360D               	rlcf	___aomod@divisor^0,f,c
  9694  0017D0  360E               	rlcf	(___aomod@divisor+1)^0,f,c
  9695  0017D2  360F               	rlcf	(___aomod@divisor+2)^0,f,c
  9696  0017D4  3610               	rlcf	(___aomod@divisor+3)^0,f,c
  9697  0017D6  3611               	rlcf	(___aomod@divisor+4)^0,f,c
  9698  0017D8  3612               	rlcf	(___aomod@divisor+5)^0,f,c
  9699  0017DA  3613               	rlcf	(___aomod@divisor+6)^0,f,c
  9700  0017DC  3614               	rlcf	(___aomod@divisor+7)^0,f,c
  9701  0017DE  2A15               	incf	___aomod@counter^0,f,c
  9702  0017E0                     l4856:
  9703  0017E0  AE14               	btfss	(___aomod@divisor+7)^0,7,c
  9704  0017E2  EFF5  F00B         	goto	u4351
  9705  0017E6  EFF7  F00B         	goto	u4350
  9706  0017EA                     u4351:
  9707  0017EA  EFE6  F00B         	goto	l4854
  9708  0017EE                     u4350:
  9709  0017EE                     l4858:
  9710  0017EE  500D               	movf	___aomod@divisor^0,w,c
  9711  0017F0  5C05               	subwf	___aomod@dividend^0,w,c
  9712  0017F2  500E               	movf	(___aomod@divisor+1)^0,w,c
  9713  0017F4  5806               	subwfb	(___aomod@dividend+1)^0,w,c
  9714  0017F6  500F               	movf	(___aomod@divisor+2)^0,w,c
  9715  0017F8  5807               	subwfb	(___aomod@dividend+2)^0,w,c
  9716  0017FA  5010               	movf	(___aomod@divisor+3)^0,w,c
  9717  0017FC  5808               	subwfb	(___aomod@dividend+3)^0,w,c
  9718  0017FE  5011               	movf	(___aomod@divisor+4)^0,w,c
  9719  001800  5809               	subwfb	(___aomod@dividend+4)^0,w,c
  9720  001802  5012               	movf	(___aomod@divisor+5)^0,w,c
  9721  001804  580A               	subwfb	(___aomod@dividend+5)^0,w,c
  9722  001806  5013               	movf	(___aomod@divisor+6)^0,w,c
  9723  001808  580B               	subwfb	(___aomod@dividend+6)^0,w,c
  9724  00180A  5014               	movf	(___aomod@divisor+7)^0,w,c
  9725  00180C  580C               	subwfb	(___aomod@dividend+7)^0,w,c
  9726  00180E  A0D8               	btfss	status,0,c
  9727  001810  EF0C  F00C         	goto	u4361
  9728  001814  EF0E  F00C         	goto	u4360
  9729  001818                     u4361:
  9730  001818  EF1E  F00C         	goto	l4862
  9731  00181C                     u4360:
  9732  00181C  500D               	movf	___aomod@divisor^0,w,c
  9733  00181E  5E05               	subwf	___aomod@dividend^0,f,c
  9734  001820  500E               	movf	(___aomod@divisor+1)^0,w,c
  9735  001822  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
  9736  001824  500F               	movf	(___aomod@divisor+2)^0,w,c
  9737  001826  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
  9738  001828  5010               	movf	(___aomod@divisor+3)^0,w,c
  9739  00182A  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
  9740  00182C  5011               	movf	(___aomod@divisor+4)^0,w,c
  9741  00182E  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
  9742  001830  5012               	movf	(___aomod@divisor+5)^0,w,c
  9743  001832  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
  9744  001834  5013               	movf	(___aomod@divisor+6)^0,w,c
  9745  001836  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
  9746  001838  5014               	movf	(___aomod@divisor+7)^0,w,c
  9747  00183A  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
  9748  00183C                     l4862:
  9749  00183C  90D8               	bcf	status,0,c
  9750  00183E  3214               	rrcf	(___aomod@divisor+7)^0,f,c
  9751  001840  3213               	rrcf	(___aomod@divisor+6)^0,f,c
  9752  001842  3212               	rrcf	(___aomod@divisor+5)^0,f,c
  9753  001844  3211               	rrcf	(___aomod@divisor+4)^0,f,c
  9754  001846  3210               	rrcf	(___aomod@divisor+3)^0,f,c
  9755  001848  320F               	rrcf	(___aomod@divisor+2)^0,f,c
  9756  00184A  320E               	rrcf	(___aomod@divisor+1)^0,f,c
  9757  00184C  320D               	rrcf	___aomod@divisor^0,f,c
  9758  00184E  2E15               	decfsz	___aomod@counter^0,f,c
  9759  001850  EFF7  F00B         	goto	l4858
  9760  001854                     l4866:
  9761  001854  5016               	movf	___aomod@sign^0,w,c
  9762  001856  B4D8               	btfsc	status,2,c
  9763  001858  EF30  F00C         	goto	u4371
  9764  00185C  EF32  F00C         	goto	u4370
  9765  001860                     u4371:
  9766  001860  EF42  F00C         	goto	l4870
  9767  001864                     u4370:
  9768  001864  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  9769  001866  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  9770  001868  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  9771  00186A  1E09               	comf	(___aomod@dividend+4)^0,f,c
  9772  00186C  1E08               	comf	(___aomod@dividend+3)^0,f,c
  9773  00186E  1E07               	comf	(___aomod@dividend+2)^0,f,c
  9774  001870  1E06               	comf	(___aomod@dividend+1)^0,f,c
  9775  001872  6C05               	negf	___aomod@dividend^0,c
  9776  001874  0E00               	movlw	0
  9777  001876  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  9778  001878  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  9779  00187A  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  9780  00187C  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  9781  00187E  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  9782  001880  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  9783  001882  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  9784  001884                     l4870:
  9785  001884  C005  F005         	movff	___aomod@dividend,?___aomod
  9786  001888  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  9787  00188C  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  9788  001890  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  9789  001894  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  9790  001898  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  9791  00189C  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  9792  0018A0  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  9793  0018A4  0012               	return		;funcret
  9794  0018A6                     __end_of___aomod:
  9795                           	opt callstack 0
  9796                           
  9797 ;; *************** function ___aodiv *****************
  9798 ;; Defined at:
  9799 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  9800 ;; Parameters:    Size  Location     Type
  9801 ;;  dividend        8    4[COMRAM] long long 
  9802 ;;  divisor         8   12[COMRAM] long long 
  9803 ;; Auto vars:     Size  Location     Type
  9804 ;;  quotient        8   22[COMRAM] long long 
  9805 ;;  sign            1   21[COMRAM] unsigned char 
  9806 ;;  counter         1   20[COMRAM] unsigned char 
  9807 ;; Return value:  Size  Location     Type
  9808 ;;                  8    4[COMRAM] long long 
  9809 ;; Registers used:
  9810 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9811 ;; Tracked objects:
  9812 ;;		On entry : 0/0
  9813 ;;		On exit  : 0/0
  9814 ;;		Unchanged: 0/0
  9815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9816 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9817 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9819 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9820 ;;Total ram usage:       26 bytes
  9821 ;; Hardware stack levels used:    1
  9822 ;; Hardware stack levels required when called:    4
  9823 ;; This function calls:
  9824 ;;		Nothing
  9825 ;; This function is called by:
  9826 ;;		_dtoa
  9827 ;; This function uses a non-reentrant model
  9828 ;;
  9829                           
  9830                           	psect	text59
  9831  0015BA                     __ptext59:
  9832                           	opt callstack 0
  9833  0015BA                     ___aodiv:
  9834                           	opt callstack 22
  9835  0015BA  0E00               	movlw	0
  9836  0015BC  6E16               	movwf	___aodiv@sign^0,c
  9837  0015BE  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
  9838  0015C0  EFE6  F00A         	goto	u4250
  9839  0015C4  EFE4  F00A         	goto	u4251
  9840  0015C8                     u4251:
  9841  0015C8  EFF8  F00A         	goto	l4802
  9842  0015CC                     u4250:
  9843  0015CC  1E14               	comf	(___aodiv@divisor+7)^0,f,c
  9844  0015CE  1E13               	comf	(___aodiv@divisor+6)^0,f,c
  9845  0015D0  1E12               	comf	(___aodiv@divisor+5)^0,f,c
  9846  0015D2  1E11               	comf	(___aodiv@divisor+4)^0,f,c
  9847  0015D4  1E10               	comf	(___aodiv@divisor+3)^0,f,c
  9848  0015D6  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
  9849  0015D8  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
  9850  0015DA  6C0D               	negf	___aodiv@divisor^0,c
  9851  0015DC  0E00               	movlw	0
  9852  0015DE  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
  9853  0015E0  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
  9854  0015E2  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
  9855  0015E4  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
  9856  0015E6  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
  9857  0015E8  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
  9858  0015EA  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
  9859  0015EC  0E01               	movlw	1
  9860  0015EE  6E16               	movwf	___aodiv@sign^0,c
  9861  0015F0                     l4802:
  9862  0015F0  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
  9863  0015F2  EFFF  F00A         	goto	u4260
  9864  0015F6  EFFD  F00A         	goto	u4261
  9865  0015FA                     u4261:
  9866  0015FA  EF11  F00B         	goto	l4808
  9867  0015FE                     u4260:
  9868  0015FE  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
  9869  001600  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
  9870  001602  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
  9871  001604  1E09               	comf	(___aodiv@dividend+4)^0,f,c
  9872  001606  1E08               	comf	(___aodiv@dividend+3)^0,f,c
  9873  001608  1E07               	comf	(___aodiv@dividend+2)^0,f,c
  9874  00160A  1E06               	comf	(___aodiv@dividend+1)^0,f,c
  9875  00160C  6C05               	negf	___aodiv@dividend^0,c
  9876  00160E  0E00               	movlw	0
  9877  001610  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
  9878  001612  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
  9879  001614  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
  9880  001616  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
  9881  001618  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
  9882  00161A  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
  9883  00161C  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
  9884  00161E  0E01               	movlw	1
  9885  001620  1A16               	xorwf	___aodiv@sign^0,f,c
  9886  001622                     l4808:
  9887  001622  EE20  F017         	lfsr	2,___aodiv@quotient
  9888  001626  0E07               	movlw	7
  9889  001628                     u4271:
  9890  001628  6ADE               	clrf	postinc2,c
  9891  00162A  06E8               	decf	wreg,f,c
  9892  00162C  E2FD               	bc	u4271
  9893  00162E  500D               	movf	___aodiv@divisor^0,w,c
  9894  001630  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
  9895  001632  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
  9896  001634  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
  9897  001636  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
  9898  001638  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
  9899  00163A  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
  9900  00163C  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
  9901  00163E  B4D8               	btfsc	status,2,c
  9902  001640  EF24  F00B         	goto	u4281
  9903  001644  EF26  F00B         	goto	u4280
  9904  001648                     u4281:
  9905  001648  EF78  F00B         	goto	l4830
  9906  00164C                     u4280:
  9907  00164C  0E01               	movlw	1
  9908  00164E  6E15               	movwf	___aodiv@counter^0,c
  9909  001650  EF34  F00B         	goto	l4816
  9910  001654                     l4814:
  9911  001654  90D8               	bcf	status,0,c
  9912  001656  360D               	rlcf	___aodiv@divisor^0,f,c
  9913  001658  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
  9914  00165A  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
  9915  00165C  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
  9916  00165E  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
  9917  001660  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
  9918  001662  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
  9919  001664  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
  9920  001666  2A15               	incf	___aodiv@counter^0,f,c
  9921  001668                     l4816:
  9922  001668  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
  9923  00166A  EF39  F00B         	goto	u4291
  9924  00166E  EF3B  F00B         	goto	u4290
  9925  001672                     u4291:
  9926  001672  EF2A  F00B         	goto	l4814
  9927  001676                     u4290:
  9928  001676                     l4818:
  9929  001676  90D8               	bcf	status,0,c
  9930  001678  3617               	rlcf	___aodiv@quotient^0,f,c
  9931  00167A  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
  9932  00167C  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
  9933  00167E  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
  9934  001680  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
  9935  001682  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
  9936  001684  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
  9937  001686  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
  9938  001688  500D               	movf	___aodiv@divisor^0,w,c
  9939  00168A  5C05               	subwf	___aodiv@dividend^0,w,c
  9940  00168C  500E               	movf	(___aodiv@divisor+1)^0,w,c
  9941  00168E  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
  9942  001690  500F               	movf	(___aodiv@divisor+2)^0,w,c
  9943  001692  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
  9944  001694  5010               	movf	(___aodiv@divisor+3)^0,w,c
  9945  001696  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
  9946  001698  5011               	movf	(___aodiv@divisor+4)^0,w,c
  9947  00169A  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
  9948  00169C  5012               	movf	(___aodiv@divisor+5)^0,w,c
  9949  00169E  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
  9950  0016A0  5013               	movf	(___aodiv@divisor+6)^0,w,c
  9951  0016A2  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
  9952  0016A4  5014               	movf	(___aodiv@divisor+7)^0,w,c
  9953  0016A6  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
  9954  0016A8  A0D8               	btfss	status,0,c
  9955  0016AA  EF59  F00B         	goto	u4301
  9956  0016AE  EF5B  F00B         	goto	u4300
  9957  0016B2                     u4301:
  9958  0016B2  EF6C  F00B         	goto	l4826
  9959  0016B6                     u4300:
  9960  0016B6  500D               	movf	___aodiv@divisor^0,w,c
  9961  0016B8  5E05               	subwf	___aodiv@dividend^0,f,c
  9962  0016BA  500E               	movf	(___aodiv@divisor+1)^0,w,c
  9963  0016BC  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
  9964  0016BE  500F               	movf	(___aodiv@divisor+2)^0,w,c
  9965  0016C0  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
  9966  0016C2  5010               	movf	(___aodiv@divisor+3)^0,w,c
  9967  0016C4  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
  9968  0016C6  5011               	movf	(___aodiv@divisor+4)^0,w,c
  9969  0016C8  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
  9970  0016CA  5012               	movf	(___aodiv@divisor+5)^0,w,c
  9971  0016CC  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
  9972  0016CE  5013               	movf	(___aodiv@divisor+6)^0,w,c
  9973  0016D0  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
  9974  0016D2  5014               	movf	(___aodiv@divisor+7)^0,w,c
  9975  0016D4  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
  9976  0016D6  8017               	bsf	___aodiv@quotient^0,0,c
  9977  0016D8                     l4826:
  9978  0016D8  90D8               	bcf	status,0,c
  9979  0016DA  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
  9980  0016DC  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
  9981  0016DE  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
  9982  0016E0  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
  9983  0016E2  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
  9984  0016E4  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
  9985  0016E6  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
  9986  0016E8  320D               	rrcf	___aodiv@divisor^0,f,c
  9987  0016EA  2E15               	decfsz	___aodiv@counter^0,f,c
  9988  0016EC  EF3B  F00B         	goto	l4818
  9989  0016F0                     l4830:
  9990  0016F0  5016               	movf	___aodiv@sign^0,w,c
  9991  0016F2  B4D8               	btfsc	status,2,c
  9992  0016F4  EF7E  F00B         	goto	u4311
  9993  0016F8  EF80  F00B         	goto	u4310
  9994  0016FC                     u4311:
  9995  0016FC  EF90  F00B         	goto	l4834
  9996  001700                     u4310:
  9997  001700  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
  9998  001702  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
  9999  001704  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
 10000  001706  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
 10001  001708  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
 10002  00170A  1E19               	comf	(___aodiv@quotient+2)^0,f,c
 10003  00170C  1E18               	comf	(___aodiv@quotient+1)^0,f,c
 10004  00170E  6C17               	negf	___aodiv@quotient^0,c
 10005  001710  0E00               	movlw	0
 10006  001712  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
 10007  001714  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
 10008  001716  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
 10009  001718  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
 10010  00171A  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
 10011  00171C  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
 10012  00171E  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
 10013  001720                     l4834:
 10014  001720  C017  F005         	movff	___aodiv@quotient,?___aodiv
 10015  001724  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
 10016  001728  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
 10017  00172C  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
 10018  001730  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
 10019  001734  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
 10020  001738  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
 10021  00173C  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
 10022  001740  0012               	return		;funcret
 10023  001742                     __end_of___aodiv:
 10024                           	opt callstack 0
 10025                           
 10026 ;; *************** function _atoi *****************
 10027 ;; Defined at:
 10028 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 10029 ;; Parameters:    Size  Location     Type
 10030 ;;  s               2   11[COMRAM] PTR const unsigned char 
 10031 ;;		 -> STR_23(27), STR_22(21), STR_21(4), STR_20(23), 
 10032 ;;		 -> STR_19(32), STR_18(4), STR_17(23), STR_16(19), 
 10033 ;;		 -> STR_15(36), STR_14(24), STR_13(16), STR_12(28), 
 10034 ;;		 -> STR_11(21), STR_10(21), STR_9(35), STR_8(55), 
 10035 ;;		 -> STR_7(53), STR_6(29), STR_3(43), STR_2(25), 
 10036 ;;		 -> STR_1(57), 
 10037 ;; Auto vars:     Size  Location     Type
 10038 ;;  n               2   24[COMRAM] int 
 10039 ;;  neg             2   17[COMRAM] int 
 10040 ;; Return value:  Size  Location     Type
 10041 ;;                  2   11[COMRAM] int 
 10042 ;; Registers used:
 10043 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10044 ;; Tracked objects:
 10045 ;;		On entry : 0/0
 10046 ;;		On exit  : 0/0
 10047 ;;		Unchanged: 0/0
 10048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10049 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10050 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10051 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10052 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10053 ;;Total ram usage:       15 bytes
 10054 ;; Hardware stack levels used:    1
 10055 ;; Hardware stack levels required when called:    5
 10056 ;; This function calls:
 10057 ;;		___wmul
 10058 ;;		_isdigit
 10059 ;;		_isspace
 10060 ;; This function is called by:
 10061 ;;		_vfpfcnvrt
 10062 ;; This function uses a non-reentrant model
 10063 ;;
 10064                           
 10065                           	psect	text60
 10066  001420                     __ptext60:
 10067                           	opt callstack 0
 10068  001420                     _atoi:
 10069                           	opt callstack 22
 10070  001420  0E00               	movlw	0
 10071  001422  6E1A               	movwf	(atoi@n+1)^0,c
 10072  001424  0E00               	movlw	0
 10073  001426  6E19               	movwf	atoi@n^0,c
 10074  001428  0E00               	movlw	0
 10075  00142A  6E13               	movwf	(atoi@neg+1)^0,c
 10076  00142C  0E00               	movlw	0
 10077  00142E  6E12               	movwf	atoi@neg^0,c
 10078  001430  EF1C  F00A         	goto	l5134
 10079  001434                     l5132:
 10080  001434  4A0C               	infsnz	atoi@s^0,f,c
 10081  001436  2A0D               	incf	(atoi@s+1)^0,f,c
 10082  001438                     l5134:
 10083  001438  0E01               	movlw	1
 10084  00143A  6E18               	movwf	_atoi$1860^0,c
 10085  00143C  C00C  FFF6         	movff	atoi@s,tblptrl
 10086  001440  C00D  FFF7         	movff	atoi@s+1,tblptrh
 10087  001444                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10088  001444  6AF8               	clrf	tblptru,c
 10089  001446                     	endif
 10090  001446                     	if	0	;tblptru may be non-zero
 10091  001446                     	endif
 10092  001446  0008               	tblrd		*
 10093  001448  50F5               	movf	tablat,w,c
 10094  00144A  0A20               	xorlw	32
 10095  00144C  B4D8               	btfsc	status,2,c
 10096  00144E  EF2B  F00A         	goto	u4961
 10097  001452  EF2D  F00A         	goto	u4960
 10098  001456                     u4961:
 10099  001456  EF4B  F00A         	goto	l5142
 10100  00145A                     u4960:
 10101  00145A  0EF7               	movlw	247
 10102  00145C  6E0E               	movwf	??_atoi^0,c
 10103  00145E  0EFF               	movlw	255
 10104  001460  6E0F               	movwf	(??_atoi+1)^0,c
 10105  001462  C00C  FFF6         	movff	atoi@s,tblptrl
 10106  001466  C00D  FFF7         	movff	atoi@s+1,tblptrh
 10107  00146A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10108  00146A  6AF8               	clrf	tblptru,c
 10109  00146C                     	endif
 10110  00146C                     	if	0	;tblptru may be non-zero
 10111  00146C                     	endif
 10112  00146C  0008               	tblrd		*
 10113  00146E  50F5               	movf	tablat,w,c
 10114  001470  6E10               	movwf	(??_atoi+2)^0,c
 10115  001472  6A11               	clrf	(??_atoi+3)^0,c
 10116  001474  500E               	movf	??_atoi^0,w,c
 10117  001476  2610               	addwf	(??_atoi+2)^0,f,c
 10118  001478  500F               	movf	(??_atoi+1)^0,w,c
 10119  00147A  2211               	addwfc	(??_atoi+3)^0,f,c
 10120  00147C  5011               	movf	(??_atoi+3)^0,w,c
 10121  00147E  E109               	bnz	u4970
 10122  001480  0E05               	movlw	5
 10123  001482  5C10               	subwf	(??_atoi+2)^0,w,c
 10124  001484  A0D8               	btfss	status,0,c
 10125  001486  EF47  F00A         	goto	u4971
 10126  00148A  EF49  F00A         	goto	u4970
 10127  00148E                     u4971:
 10128  00148E  EF4B  F00A         	goto	l5142
 10129  001492                     u4970:
 10130  001492  0E00               	movlw	0
 10131  001494  6E18               	movwf	_atoi$1860^0,c
 10132  001496                     l5142:
 10133  001496  C018  F014         	movff	_atoi$1860,_atoi$1859
 10134  00149A  6A15               	clrf	(_atoi$1859+1)^0,c
 10135  00149C  5014               	movf	_atoi$1859^0,w,c
 10136  00149E  1015               	iorwf	(_atoi$1859+1)^0,w,c
 10137  0014A0  A4D8               	btfss	status,2,c
 10138  0014A2  EF55  F00A         	goto	u4981
 10139  0014A6  EF57  F00A         	goto	u4980
 10140  0014AA                     u4981:
 10141  0014AA  EF1A  F00A         	goto	l5132
 10142  0014AE                     u4980:
 10143  0014AE  EF61  F00A         	goto	l5152
 10144  0014B2                     l5148:
 10145  0014B2  0E00               	movlw	0
 10146  0014B4  6E13               	movwf	(atoi@neg+1)^0,c
 10147  0014B6  0E01               	movlw	1
 10148  0014B8  6E12               	movwf	atoi@neg^0,c
 10149  0014BA                     l5150:
 10150  0014BA  4A0C               	infsnz	atoi@s^0,f,c
 10151  0014BC  2A0D               	incf	(atoi@s+1)^0,f,c
 10152  0014BE  EF98  F00A         	goto	l5158
 10153  0014C2                     l5152:
 10154  0014C2  C00C  FFF6         	movff	atoi@s,tblptrl
 10155  0014C6  C00D  FFF7         	movff	atoi@s+1,tblptrh
 10156  0014CA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10157  0014CA  6AF8               	clrf	tblptru,c
 10158  0014CC                     	endif
 10159  0014CC                     	if	0	;tblptru may be non-zero
 10160  0014CC                     	endif
 10161  0014CC  0008               	tblrd		*
 10162  0014CE  50F5               	movf	tablat,w,c
 10163  0014D0  6E0E               	movwf	??_atoi^0,c
 10164  0014D2  6A0F               	clrf	(??_atoi+1)^0,c
 10165                           
 10166                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10167                           ; Switch size 1, requested type "simple"
 10168                           ; Number of cases is 1, Range of values is 0 to 0
 10169                           ; switch strategies available:
 10170                           ; Name         Instructions Cycles
 10171                           ; simple_byte            4     3 (average)
 10172                           ;	Chosen strategy is simple_byte
 10173  0014D4  500F               	movf	(??_atoi+1)^0,w,c
 10174  0014D6  0A00               	xorlw	0	; case 0
 10175  0014D8  B4D8               	btfsc	status,2,c
 10176  0014DA  EF71  F00A         	goto	l5986
 10177  0014DE  EF98  F00A         	goto	l5158
 10178  0014E2                     l5986:
 10179                           
 10180                           ; Switch size 1, requested type "simple"
 10181                           ; Number of cases is 2, Range of values is 43 to 45
 10182                           ; switch strategies available:
 10183                           ; Name         Instructions Cycles
 10184                           ; simple_byte            7     4 (average)
 10185                           ;	Chosen strategy is simple_byte
 10186  0014E2  500E               	movf	??_atoi^0,w,c
 10187  0014E4  0A2B               	xorlw	43	; case 43
 10188  0014E6  B4D8               	btfsc	status,2,c
 10189  0014E8  EF5D  F00A         	goto	l5150
 10190  0014EC  0A06               	xorlw	6	; case 45
 10191  0014EE  B4D8               	btfsc	status,2,c
 10192  0014F0  EF59  F00A         	goto	l5148
 10193  0014F4  EF98  F00A         	goto	l5158
 10194  0014F8                     l5154:
 10195  0014F8  C019  F005         	movff	atoi@n,___wmul@multiplier
 10196  0014FC  C01A  F006         	movff	atoi@n+1,___wmul@multiplier+1
 10197  001500  0E00               	movlw	0
 10198  001502  6E08               	movwf	(___wmul@multiplicand+1)^0,c
 10199  001504  0E0A               	movlw	10
 10200  001506  6E07               	movwf	___wmul@multiplicand^0,c
 10201  001508  EC05  F017         	call	___wmul	;wreg free
 10202  00150C  C00C  FFF6         	movff	atoi@s,tblptrl
 10203  001510  C00D  FFF7         	movff	atoi@s+1,tblptrh
 10204  001514                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10205  001514  6AF8               	clrf	tblptru,c
 10206  001516                     	endif
 10207  001516                     	if	0	;tblptru may be non-zero
 10208  001516                     	endif
 10209  001516  0008               	tblrd		*
 10210  001518  50F5               	movf	tablat,w,c
 10211  00151A  5E05               	subwf	?___wmul^0,f,c
 10212  00151C  0E00               	movlw	0
 10213  00151E  5A06               	subwfb	(?___wmul+1)^0,f,c
 10214  001520  0E30               	movlw	48
 10215  001522  2405               	addwf	?___wmul^0,w,c
 10216  001524  6E19               	movwf	atoi@n^0,c
 10217  001526  0E00               	movlw	0
 10218  001528  2006               	addwfc	(?___wmul+1)^0,w,c
 10219  00152A  6E1A               	movwf	(atoi@n+1)^0,c
 10220  00152C  EF5D  F00A         	goto	l5150
 10221  001530                     l5158:
 10222  001530  0ED0               	movlw	208
 10223  001532  6E0E               	movwf	??_atoi^0,c
 10224  001534  0EFF               	movlw	255
 10225  001536  6E0F               	movwf	(??_atoi+1)^0,c
 10226  001538  C00C  FFF6         	movff	atoi@s,tblptrl
 10227  00153C  C00D  FFF7         	movff	atoi@s+1,tblptrh
 10228  001540                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10229  001540  6AF8               	clrf	tblptru,c
 10230  001542                     	endif
 10231  001542                     	if	0	;tblptru may be non-zero
 10232  001542                     	endif
 10233  001542  0008               	tblrd		*
 10234  001544  50F5               	movf	tablat,w,c
 10235  001546  6E10               	movwf	(??_atoi+2)^0,c
 10236  001548  6A11               	clrf	(??_atoi+3)^0,c
 10237  00154A  500E               	movf	??_atoi^0,w,c
 10238  00154C  2610               	addwf	(??_atoi+2)^0,f,c
 10239  00154E  500F               	movf	(??_atoi+1)^0,w,c
 10240  001550  2211               	addwfc	(??_atoi+3)^0,f,c
 10241  001552  5011               	movf	(??_atoi+3)^0,w,c
 10242  001554  E10A               	bnz	u4990
 10243  001556  0E0A               	movlw	10
 10244  001558  5C10               	subwf	(??_atoi+2)^0,w,c
 10245  00155A  A0D8               	btfss	status,0,c
 10246  00155C  EFB2  F00A         	goto	u4991
 10247  001560  EFB5  F00A         	goto	u4990
 10248  001564                     u4991:
 10249  001564  0E01               	movlw	1
 10250  001566  EFB6  F00A         	goto	u5000
 10251  00156A                     u4990:
 10252  00156A  0E00               	movlw	0
 10253  00156C                     u5000:
 10254  00156C  6E16               	movwf	_atoi$1861^0,c
 10255  00156E  6A17               	clrf	(_atoi$1861+1)^0,c
 10256  001570  5016               	movf	_atoi$1861^0,w,c
 10257  001572  1017               	iorwf	(_atoi$1861+1)^0,w,c
 10258  001574  A4D8               	btfss	status,2,c
 10259  001576  EFBF  F00A         	goto	u5011
 10260  00157A  EFC1  F00A         	goto	u5010
 10261  00157E                     u5011:
 10262  00157E  EF7C  F00A         	goto	l5154
 10263  001582                     u5010:
 10264  001582  5012               	movf	atoi@neg^0,w,c
 10265  001584  1013               	iorwf	(atoi@neg+1)^0,w,c
 10266  001586  A4D8               	btfss	status,2,c
 10267  001588  EFC8  F00A         	goto	u5021
 10268  00158C  EFCA  F00A         	goto	u5020
 10269  001590                     u5021:
 10270  001590  EFD8  F00A         	goto	l1637
 10271  001594                     u5020:
 10272  001594  C019  F00E         	movff	atoi@n,??_atoi
 10273  001598  C01A  F00F         	movff	atoi@n+1,??_atoi+1
 10274  00159C  1E0E               	comf	??_atoi^0,f,c
 10275  00159E  1E0F               	comf	(??_atoi+1)^0,f,c
 10276  0015A0  4A0E               	infsnz	??_atoi^0,f,c
 10277  0015A2  2A0F               	incf	(??_atoi+1)^0,f,c
 10278  0015A4  C00E  F00C         	movff	??_atoi,?_atoi
 10279  0015A8  C00F  F00D         	movff	??_atoi+1,?_atoi+1
 10280  0015AC  EFDC  F00A         	goto	l1640
 10281  0015B0                     l1637:
 10282  0015B0  C019  F00C         	movff	atoi@n,?_atoi
 10283  0015B4  C01A  F00D         	movff	atoi@n+1,?_atoi+1
 10284  0015B8                     l1640:
 10285  0015B8  0012               	return		;funcret
 10286  0015BA                     __end_of_atoi:
 10287                           	opt callstack 0
 10288                           
 10289 ;; *************** function _isspace *****************
 10290 ;; Defined at:
 10291 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 10292 ;; Parameters:    Size  Location     Type
 10293 ;;  c               2    4[COMRAM] int 
 10294 ;; Auto vars:     Size  Location     Type
 10295 ;;		None
 10296 ;; Return value:  Size  Location     Type
 10297 ;;                  2    4[COMRAM] int 
 10298 ;; Registers used:
 10299 ;;		wreg, status,2, status,0
 10300 ;; Tracked objects:
 10301 ;;		On entry : 0/0
 10302 ;;		On exit  : 0/0
 10303 ;;		Unchanged: 0/0
 10304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10305 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10306 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10307 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10308 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10309 ;;Total ram usage:        7 bytes
 10310 ;; Hardware stack levels used:    1
 10311 ;; Hardware stack levels required when called:    4
 10312 ;; This function calls:
 10313 ;;		Nothing
 10314 ;; This function is called by:
 10315 ;;		_atoi
 10316 ;; This function uses a non-reentrant model
 10317 ;;
 10318                           
 10319                           	psect	text61
 10320  0029D2                     __ptext61:
 10321                           	opt callstack 0
 10322  0029D2                     _isspace:
 10323                           	opt callstack 22
 10324  0029D2  0E01               	movlw	1
 10325  0029D4  6E0B               	movwf	_isspace$1886^0,c
 10326  0029D6  0E20               	movlw	32
 10327  0029D8  1805               	xorwf	isspace@c^0,w,c
 10328  0029DA  1006               	iorwf	(isspace@c+1)^0,w,c
 10329  0029DC  B4D8               	btfsc	status,2,c
 10330  0029DE  EFF3  F014         	goto	u4451
 10331  0029E2  EFF5  F014         	goto	u4450
 10332  0029E6                     u4451:
 10333  0029E6  EF0E  F015         	goto	l4920
 10334  0029EA                     u4450:
 10335  0029EA  0EF7               	movlw	247
 10336  0029EC  6E07               	movwf	??_isspace^0,c
 10337  0029EE  0EFF               	movlw	255
 10338  0029F0  6E08               	movwf	(??_isspace+1)^0,c
 10339  0029F2  C005  F009         	movff	isspace@c,??_isspace+2
 10340  0029F6  C006  F00A         	movff	isspace@c+1,??_isspace+3
 10341  0029FA  5007               	movf	??_isspace^0,w,c
 10342  0029FC  2609               	addwf	(??_isspace+2)^0,f,c
 10343  0029FE  5008               	movf	(??_isspace+1)^0,w,c
 10344  002A00  220A               	addwfc	(??_isspace+3)^0,f,c
 10345  002A02  500A               	movf	(??_isspace+3)^0,w,c
 10346  002A04  E109               	bnz	u4460
 10347  002A06  0E05               	movlw	5
 10348  002A08  5C09               	subwf	(??_isspace+2)^0,w,c
 10349  002A0A  A0D8               	btfss	status,0,c
 10350  002A0C  EF0A  F015         	goto	u4461
 10351  002A10  EF0C  F015         	goto	u4460
 10352  002A14                     u4461:
 10353  002A14  EF0E  F015         	goto	l4920
 10354  002A18                     u4460:
 10355  002A18  0E00               	movlw	0
 10356  002A1A  6E0B               	movwf	_isspace$1886^0,c
 10357  002A1C                     l4920:
 10358  002A1C  C00B  F005         	movff	_isspace$1886,?_isspace
 10359  002A20  6A06               	clrf	(?_isspace+1)^0,c
 10360  002A22  0012               	return		;funcret
 10361  002A24                     __end_of_isspace:
 10362                           	opt callstack 0
 10363                           
 10364 ;; *************** function _isdigit *****************
 10365 ;; Defined at:
 10366 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 10367 ;; Parameters:    Size  Location     Type
 10368 ;;  c               2    4[COMRAM] int 
 10369 ;; Auto vars:     Size  Location     Type
 10370 ;;		None
 10371 ;; Return value:  Size  Location     Type
 10372 ;;                  2    4[COMRAM] int 
 10373 ;; Registers used:
 10374 ;;		wreg, status,2, status,0
 10375 ;; Tracked objects:
 10376 ;;		On entry : 0/0
 10377 ;;		On exit  : 0/0
 10378 ;;		Unchanged: 0/0
 10379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10380 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10382 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10383 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10384 ;;Total ram usage:        6 bytes
 10385 ;; Hardware stack levels used:    1
 10386 ;; Hardware stack levels required when called:    4
 10387 ;; This function calls:
 10388 ;;		Nothing
 10389 ;; This function is called by:
 10390 ;;		_vfpfcnvrt
 10391 ;;		_atoi
 10392 ;; This function uses a non-reentrant model
 10393 ;;
 10394                           
 10395                           	psect	text62
 10396  002D52                     __ptext62:
 10397                           	opt callstack 0
 10398  002D52                     _isdigit:
 10399                           	opt callstack 23
 10400  002D52  0ED0               	movlw	208
 10401  002D54  6E07               	movwf	??_isdigit^0,c
 10402  002D56  0EFF               	movlw	255
 10403  002D58  6E08               	movwf	(??_isdigit+1)^0,c
 10404  002D5A  C005  F009         	movff	isdigit@c,??_isdigit+2
 10405  002D5E  C006  F00A         	movff	isdigit@c+1,??_isdigit+3
 10406  002D62  5007               	movf	??_isdigit^0,w,c
 10407  002D64  2609               	addwf	(??_isdigit+2)^0,f,c
 10408  002D66  5008               	movf	(??_isdigit+1)^0,w,c
 10409  002D68  220A               	addwfc	(??_isdigit+3)^0,f,c
 10410  002D6A  500A               	movf	(??_isdigit+3)^0,w,c
 10411  002D6C  E10A               	bnz	u4230
 10412  002D6E  0E0A               	movlw	10
 10413  002D70  5C09               	subwf	(??_isdigit+2)^0,w,c
 10414  002D72  A0D8               	btfss	status,0,c
 10415  002D74  EFBE  F016         	goto	u4231
 10416  002D78  EFC1  F016         	goto	u4230
 10417  002D7C                     u4231:
 10418  002D7C  0E01               	movlw	1
 10419  002D7E  EFC2  F016         	goto	u4240
 10420  002D82                     u4230:
 10421  002D82  0E00               	movlw	0
 10422  002D84                     u4240:
 10423  002D84  6E05               	movwf	?_isdigit^0,c
 10424  002D86  6A06               	clrf	(?_isdigit+1)^0,c
 10425  002D88  0012               	return		;funcret
 10426  002D8A                     __end_of_isdigit:
 10427                           	opt callstack 0
 10428                           
 10429 ;; *************** function ___wmul *****************
 10430 ;; Defined at:
 10431 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 10432 ;; Parameters:    Size  Location     Type
 10433 ;;  multiplier      2    4[COMRAM] unsigned int 
 10434 ;;  multiplicand    2    6[COMRAM] unsigned int 
 10435 ;; Auto vars:     Size  Location     Type
 10436 ;;  product         2    8[COMRAM] unsigned int 
 10437 ;; Return value:  Size  Location     Type
 10438 ;;                  2    4[COMRAM] unsigned int 
 10439 ;; Registers used:
 10440 ;;		wreg, status,2, status,0, prodl, prodh
 10441 ;; Tracked objects:
 10442 ;;		On entry : 0/0
 10443 ;;		On exit  : 0/0
 10444 ;;		Unchanged: 0/0
 10445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10446 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10447 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10449 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10450 ;;Total ram usage:        6 bytes
 10451 ;; Hardware stack levels used:    1
 10452 ;; Hardware stack levels required when called:    4
 10453 ;; This function calls:
 10454 ;;		Nothing
 10455 ;; This function is called by:
 10456 ;;		_atoi
 10457 ;; This function uses a non-reentrant model
 10458 ;;
 10459                           
 10460                           	psect	text63
 10461  002E0A                     __ptext63:
 10462                           	opt callstack 0
 10463  002E0A                     ___wmul:
 10464                           	opt callstack 22
 10465  002E0A  5005               	movf	___wmul@multiplier^0,w,c
 10466  002E0C  0207               	mulwf	___wmul@multiplicand^0,c
 10467  002E0E  CFF3 F009          	movff	prodl,___wmul@product
 10468  002E12  CFF4 F00A          	movff	prodh,___wmul@product+1
 10469  002E16  5005               	movf	___wmul@multiplier^0,w,c
 10470  002E18  0208               	mulwf	(___wmul@multiplicand+1)^0,c
 10471  002E1A  50F3               	movf	243,w,c
 10472  002E1C  260A               	addwf	(___wmul@product+1)^0,f,c
 10473  002E1E  5006               	movf	(___wmul@multiplier+1)^0,w,c
 10474  002E20  0207               	mulwf	___wmul@multiplicand^0,c
 10475  002E22  50F3               	movf	243,w,c
 10476  002E24  260A               	addwf	(___wmul@product+1)^0,f,c
 10477  002E26  C009  F005         	movff	___wmul@product,?___wmul
 10478  002E2A  C00A  F006         	movff	___wmul@product+1,?___wmul+1
 10479  002E2E  0012               	return		;funcret
 10480  002E30                     __end_of___wmul:
 10481                           	opt callstack 0
 10482                           
 10483 ;; *************** function _ClearModbusRespon *****************
 10484 ;; Defined at:
 10485 ;;		line 277 in file "Modbus.c"
 10486 ;; Parameters:    Size  Location     Type
 10487 ;;		None
 10488 ;; Auto vars:     Size  Location     Type
 10489 ;;  i               2    4[COMRAM] int 
 10490 ;; Return value:  Size  Location     Type
 10491 ;;                  1    wreg      void 
 10492 ;; Registers used:
 10493 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10494 ;; Tracked objects:
 10495 ;;		On entry : 0/0
 10496 ;;		On exit  : 0/0
 10497 ;;		Unchanged: 0/0
 10498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10500 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10502 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10503 ;;Total ram usage:        2 bytes
 10504 ;; Hardware stack levels used:    1
 10505 ;; Hardware stack levels required when called:    4
 10506 ;; This function calls:
 10507 ;;		Nothing
 10508 ;; This function is called by:
 10509 ;;		_main
 10510 ;; This function uses a non-reentrant model
 10511 ;;
 10512                           
 10513                           	psect	text64
 10514  002A74                     __ptext64:
 10515                           	opt callstack 0
 10516  002A74                     _ClearModbusRespon:
 10517                           	opt callstack 26
 10518  002A74                     
 10519                           ;Modbus.c: 278:     int i = 0;
 10520  002A74  0E00               	movlw	0
 10521  002A76  6E06               	movwf	(ClearModbusRespon@i+1)^0,c
 10522  002A78  0E00               	movlw	0
 10523  002A7A  6E05               	movwf	ClearModbusRespon@i^0,c
 10524                           
 10525                           ;Modbus.c: 279:     for(i=0; i<32; i++ ){
 10526  002A7C  0E00               	movlw	0
 10527  002A7E  6E06               	movwf	(ClearModbusRespon@i+1)^0,c
 10528  002A80  0E00               	movlw	0
 10529  002A82  6E05               	movwf	ClearModbusRespon@i^0,c
 10530  002A84                     l5632:
 10531                           
 10532                           ;Modbus.c: 280:         MBRespon[i] = 0xFFFF;
 10533  002A84  90D8               	bcf	status,0,c
 10534  002A86  3405               	rlcf	ClearModbusRespon@i^0,w,c
 10535  002A88  6ED9               	movwf	fsr2l,c
 10536  002A8A  3406               	rlcf	(ClearModbusRespon@i+1)^0,w,c
 10537  002A8C  6EDA               	movwf	fsr2h,c
 10538  002A8E  0E84               	movlw	low _MBRespon
 10539  002A90  26D9               	addwf	fsr2l,f,c
 10540  002A92  0E01               	movlw	high _MBRespon
 10541  002A94  22DA               	addwfc	fsr2h,f,c
 10542  002A96  0EFF               	movlw	255
 10543  002A98  6EDE               	movwf	postinc2,c
 10544  002A9A  0EFF               	movlw	255
 10545  002A9C  6EDD               	movwf	postdec2,c
 10546  002A9E                     
 10547                           ;Modbus.c: 281:     }
 10548  002A9E  4A05               	infsnz	ClearModbusRespon@i^0,f,c
 10549  002AA0  2A06               	incf	(ClearModbusRespon@i+1)^0,f,c
 10550  002AA2  BE06               	btfsc	(ClearModbusRespon@i+1)^0,7,c
 10551  002AA4  EF5D  F015         	goto	u5471
 10552  002AA8  5006               	movf	(ClearModbusRespon@i+1)^0,w,c
 10553  002AAA  E109               	bnz	u5470
 10554  002AAC  0E20               	movlw	32
 10555  002AAE  5C05               	subwf	ClearModbusRespon@i^0,w,c
 10556  002AB0  A0D8               	btfss	status,0,c
 10557  002AB2  EF5D  F015         	goto	u5471
 10558  002AB6  EF5F  F015         	goto	u5470
 10559  002ABA                     u5471:
 10560  002ABA  EF42  F015         	goto	l5632
 10561  002ABE                     u5470:
 10562  002ABE  0012               	return		;funcret
 10563  002AC0                     __end_of_ClearModbusRespon:
 10564                           	opt callstack 0
 10565                           
 10566 ;; *************** function _ClearModbusData *****************
 10567 ;; Defined at:
 10568 ;;		line 56 in file "Modbus.c"
 10569 ;; Parameters:    Size  Location     Type
 10570 ;;		None
 10571 ;; Auto vars:     Size  Location     Type
 10572 ;;  i               2    4[COMRAM] int 
 10573 ;; Return value:  Size  Location     Type
 10574 ;;                  1    wreg      void 
 10575 ;; Registers used:
 10576 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10577 ;; Tracked objects:
 10578 ;;		On entry : 0/0
 10579 ;;		On exit  : 0/0
 10580 ;;		Unchanged: 0/0
 10581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10583 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10585 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10586 ;;Total ram usage:        2 bytes
 10587 ;; Hardware stack levels used:    1
 10588 ;; Hardware stack levels required when called:    4
 10589 ;; This function calls:
 10590 ;;		Nothing
 10591 ;; This function is called by:
 10592 ;;		_main
 10593 ;; This function uses a non-reentrant model
 10594 ;;
 10595                           
 10596                           	psect	text65
 10597  002AC0                     __ptext65:
 10598                           	opt callstack 0
 10599  002AC0                     _ClearModbusData:
 10600                           	opt callstack 26
 10601  002AC0                     
 10602                           ;Modbus.c: 57:     int i = 0;
 10603  002AC0  0E00               	movlw	0
 10604  002AC2  6E06               	movwf	(ClearModbusData@i+1)^0,c
 10605  002AC4  0E00               	movlw	0
 10606  002AC6  6E05               	movwf	ClearModbusData@i^0,c
 10607                           
 10608                           ;Modbus.c: 58:     for(i=0; i<99; i++ ){
 10609  002AC8  0E00               	movlw	0
 10610  002ACA  6E06               	movwf	(ClearModbusData@i+1)^0,c
 10611  002ACC  0E00               	movlw	0
 10612  002ACE  6E05               	movwf	ClearModbusData@i^0,c
 10613  002AD0                     l5740:
 10614                           
 10615                           ;Modbus.c: 59:         ModbusData[i] = 0xFF;
 10616  002AD0  0E00               	movlw	low _ModbusData
 10617  002AD2  2405               	addwf	ClearModbusData@i^0,w,c
 10618  002AD4  6ED9               	movwf	fsr2l,c
 10619  002AD6  0E01               	movlw	high _ModbusData
 10620  002AD8  2006               	addwfc	(ClearModbusData@i+1)^0,w,c
 10621  002ADA  6EDA               	movwf	fsr2h,c
 10622  002ADC  0EFF               	movlw	255
 10623  002ADE  6EDF               	movwf	indf2,c
 10624  002AE0                     
 10625                           ;Modbus.c: 60:     }
 10626  002AE0  4A05               	infsnz	ClearModbusData@i^0,f,c
 10627  002AE2  2A06               	incf	(ClearModbusData@i+1)^0,f,c
 10628  002AE4  BE06               	btfsc	(ClearModbusData@i+1)^0,7,c
 10629  002AE6  EF7E  F015         	goto	u5581
 10630  002AEA  5006               	movf	(ClearModbusData@i+1)^0,w,c
 10631  002AEC  E109               	bnz	u5580
 10632  002AEE  0E63               	movlw	99
 10633  002AF0  5C05               	subwf	ClearModbusData@i^0,w,c
 10634  002AF2  A0D8               	btfss	status,0,c
 10635  002AF4  EF7E  F015         	goto	u5581
 10636  002AF8  EF80  F015         	goto	u5580
 10637  002AFC                     u5581:
 10638  002AFC  EF68  F015         	goto	l5740
 10639  002B00                     u5580:
 10640  002B00                     
 10641                           ;Modbus.c: 62:     ModDataCnt = 0;
 10642  002B00  0E00               	movlw	0
 10643  002B02  0100               	movlb	0	; () banked
 10644  002B04  6F97               	movwf	(_ModDataCnt+1)& (0+255),b
 10645  002B06  0E00               	movlw	0
 10646  002B08  6F96               	movwf	_ModDataCnt& (0+255),b
 10647  002B0A                     
 10648                           ; BSR set to: 0
 10649  002B0A  0012               	return		;funcret
 10650  002B0C                     __end_of_ClearModbusData:
 10651                           	opt callstack 0
 10652                           
 10653 ;; *************** function _INTERRUPT_InterruptManager *****************
 10654 ;; Defined at:
 10655 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 10656 ;; Parameters:    Size  Location     Type
 10657 ;;		None
 10658 ;; Auto vars:     Size  Location     Type
 10659 ;;		None
 10660 ;; Return value:  Size  Location     Type
 10661 ;;                  1    wreg      void 
 10662 ;; Registers used:
 10663 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 10664 ;; Tracked objects:
 10665 ;;		On entry : 0/0
 10666 ;;		On exit  : 0/0
 10667 ;;		Unchanged: 0/0
 10668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10671 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10672 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10673 ;;Total ram usage:        4 bytes
 10674 ;; Hardware stack levels used:    1
 10675 ;; Hardware stack levels required when called:    3
 10676 ;; This function calls:
 10677 ;;		Absolute function
 10678 ;;		_EUSART1_Receive_ISR
 10679 ;;		_EUSART1_Transmit_ISR
 10680 ;;		_EUSART2_Receive_ISR
 10681 ;;		_EUSART2_Transmit_ISR
 10682 ;; This function is called by:
 10683 ;;		Interrupt level 2
 10684 ;; This function uses a non-reentrant model
 10685 ;;
 10686                           
 10687                           	psect	intcode
 10688  000008                     __pintcode:
 10689                           	opt callstack 0
 10690  000008                     _INTERRUPT_InterruptManager:
 10691                           	opt callstack 16
 10692                           
 10693                           ; BSR set to: 0
 10694                           ;incstack = 0
 10695  000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 10696  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
 10697  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 10698  000012  CFD9 F003          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
 10699  000016  CFDA F004          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
 10700  00001A                     
 10701                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
 10702  00001A  ACF2               	btfss	242,6,c	;volatile
 10703  00001C  EF12  F000         	goto	i2u385_41
 10704  000020  EF14  F000         	goto	i2u385_40
 10705  000024                     i2u385_41:
 10706  000024  EF89  F000         	goto	i2l159
 10707  000028                     i2u385_40:
 10708  000028                     
 10709                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
 10710  000028  010E               	movlb	14	; () banked
 10711  00002A  ADC5               	btfss	197,6,b	;volatile
 10712  00002C  EF1A  F000         	goto	i2u386_41
 10713  000030  EF1C  F000         	goto	i2u386_40
 10714  000034                     i2u386_41:
 10715  000034  EF32  F000         	goto	i2l150
 10716  000038                     i2u386_40:
 10717  000038                     
 10718                           ; BSR set to: 14
 10719  000038  ADCD               	btfss	205,6,b	;volatile
 10720  00003A  EF21  F000         	goto	i2u387_41
 10721  00003E  EF23  F000         	goto	i2u387_40
 10722  000042                     i2u387_41:
 10723  000042  EF32  F000         	goto	i2l150
 10724  000046                     i2u387_40:
 10725  000046                     
 10726                           ; BSR set to: 14
 10727                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART2_TxDefaultInterruptHandler();
 10728  000046  D802               	call	i2u388_48
 10729  000048  EF30  F000         	goto	i2u388_49
 10730  00004C                     i2u388_48:
 10731  00004C  0005               	push	
 10732  00004E  6EFA               	movwf	pclath,c
 10733  000050  0100               	movlb	0	; () banked
 10734  000052  51EF               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
 10735  000054  6EFD               	movwf	tosl,c
 10736  000056  51F0               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
 10737  000058  6EFE               	movwf	tosh,c
 10738  00005A  6AFF               	clrf	tosu,c
 10739  00005C  50FA               	movf	pclath,w,c
 10740  00005E  0012               	return		;indir
 10741  000060                     i2u388_49:
 10742                           
 10743                           ;mcc_generated_files/interrupt_manager.c: 66:         }
 10744  000060  EF89  F000         	goto	i2l159
 10745  000064                     i2l150:
 10746                           
 10747                           ; BSR set to: 14
 10748  000064  AFC5               	btfss	197,7,b	;volatile
 10749  000066  EF37  F000         	goto	i2u389_41
 10750  00006A  EF39  F000         	goto	i2u389_40
 10751  00006E                     i2u389_41:
 10752  00006E  EF4F  F000         	goto	i2l152
 10753  000072                     i2u389_40:
 10754  000072                     
 10755                           ; BSR set to: 14
 10756  000072  AFCD               	btfss	205,7,b	;volatile
 10757  000074  EF3E  F000         	goto	i2u390_41
 10758  000078  EF40  F000         	goto	i2u390_40
 10759  00007C                     i2u390_41:
 10760  00007C  EF4F  F000         	goto	i2l152
 10761  000080                     i2u390_40:
 10762  000080                     
 10763                           ; BSR set to: 14
 10764                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART2_RxDefaultInterruptHandler();
 10765  000080  D802               	call	i2u391_48
 10766  000082  EF4D  F000         	goto	i2u391_49
 10767  000086                     i2u391_48:
 10768  000086  0005               	push	
 10769  000088  6EFA               	movwf	pclath,c
 10770  00008A  0100               	movlb	0	; () banked
 10771  00008C  51ED               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
 10772  00008E  6EFD               	movwf	tosl,c
 10773  000090  51EE               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
 10774  000092  6EFE               	movwf	tosh,c
 10775  000094  6AFF               	clrf	tosu,c
 10776  000096  50FA               	movf	pclath,w,c
 10777  000098  0012               	return		;indir
 10778  00009A                     i2u391_49:
 10779                           
 10780                           ;mcc_generated_files/interrupt_manager.c: 70:         }
 10781  00009A  EF89  F000         	goto	i2l159
 10782  00009E                     i2l152:
 10783                           
 10784                           ; BSR set to: 14
 10785  00009E  A9C5               	btfss	197,4,b	;volatile
 10786  0000A0  EF54  F000         	goto	i2u392_41
 10787  0000A4  EF56  F000         	goto	i2u392_40
 10788  0000A8                     i2u392_41:
 10789  0000A8  EF6C  F000         	goto	i2l154
 10790  0000AC                     i2u392_40:
 10791  0000AC                     
 10792                           ; BSR set to: 14
 10793  0000AC  A9CD               	btfss	205,4,b	;volatile
 10794  0000AE  EF5B  F000         	goto	i2u393_41
 10795  0000B2  EF5D  F000         	goto	i2u393_40
 10796  0000B6                     i2u393_41:
 10797  0000B6  EF6C  F000         	goto	i2l154
 10798  0000BA                     i2u393_40:
 10799  0000BA                     
 10800                           ; BSR set to: 14
 10801                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART1_TxDefaultInterruptHandler();
 10802  0000BA  D802               	call	i2u394_48
 10803  0000BC  EF6A  F000         	goto	i2u394_49
 10804  0000C0                     i2u394_48:
 10805  0000C0  0005               	push	
 10806  0000C2  6EFA               	movwf	pclath,c
 10807  0000C4  0100               	movlb	0	; () banked
 10808  0000C6  51EB               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
 10809  0000C8  6EFD               	movwf	tosl,c
 10810  0000CA  51EC               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
 10811  0000CC  6EFE               	movwf	tosh,c
 10812  0000CE  6AFF               	clrf	tosu,c
 10813  0000D0  50FA               	movf	pclath,w,c
 10814  0000D2  0012               	return		;indir
 10815  0000D4                     i2u394_49:
 10816                           
 10817                           ;mcc_generated_files/interrupt_manager.c: 74:         }
 10818  0000D4  EF89  F000         	goto	i2l159
 10819  0000D8                     i2l154:
 10820                           
 10821                           ; BSR set to: 14
 10822  0000D8  ABC5               	btfss	197,5,b	;volatile
 10823  0000DA  EF71  F000         	goto	i2u395_41
 10824  0000DE  EF73  F000         	goto	i2u395_40
 10825  0000E2                     i2u395_41:
 10826  0000E2  EF89  F000         	goto	i2l153
 10827  0000E6                     i2u395_40:
 10828  0000E6                     
 10829                           ; BSR set to: 14
 10830  0000E6  ABCD               	btfss	205,5,b	;volatile
 10831  0000E8  EF78  F000         	goto	i2u396_41
 10832  0000EC  EF7A  F000         	goto	i2u396_40
 10833  0000F0                     i2u396_41:
 10834  0000F0  EF89  F000         	goto	i2l153
 10835  0000F4                     i2u396_40:
 10836  0000F4                     
 10837                           ; BSR set to: 14
 10838                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             EUSART1_RxDefaultInterruptHandler();
 10839  0000F4  D802               	call	i2u397_48
 10840  0000F6  EF87  F000         	goto	i2u397_49
 10841  0000FA                     i2u397_48:
 10842  0000FA  0005               	push	
 10843  0000FC  6EFA               	movwf	pclath,c
 10844  0000FE  0100               	movlb	0	; () banked
 10845  000100  51E9               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
 10846  000102  6EFD               	movwf	tosl,c
 10847  000104  51EA               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
 10848  000106  6EFE               	movwf	tosh,c
 10849  000108  6AFF               	clrf	tosu,c
 10850  00010A  50FA               	movf	pclath,w,c
 10851  00010C  0012               	return		;indir
 10852  00010E                     i2u397_49:
 10853                           
 10854                           ;mcc_generated_files/interrupt_manager.c: 78:         }
 10855  00010E  EF89  F000         	goto	i2l159
 10856  000112                     i2l153:
 10857  000112                     i2l159:
 10858  000112  C004  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
 10859  000116  C003  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
 10860  00011A  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 10861  00011E  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 10862  000122  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10863  000124  0011               	retfie		f
 10864  000126                     __end_of_INTERRUPT_InterruptManager:
 10865                           	opt callstack 0
 10866                           
 10867 ;; *************** function _EUSART2_Transmit_ISR *****************
 10868 ;; Defined at:
 10869 ;;		line 206 in file "mcc_generated_files/eusart2.c"
 10870 ;; Parameters:    Size  Location     Type
 10871 ;;		None
 10872 ;; Auto vars:     Size  Location     Type
 10873 ;;		None
 10874 ;; Return value:  Size  Location     Type
 10875 ;;                  1    wreg      void 
 10876 ;; Registers used:
 10877 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10878 ;; Tracked objects:
 10879 ;;		On entry : 0/0
 10880 ;;		On exit  : 0/0
 10881 ;;		Unchanged: 0/0
 10882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10887 ;;Total ram usage:        0 bytes
 10888 ;; Hardware stack levels used:    1
 10889 ;; This function calls:
 10890 ;;		Nothing
 10891 ;; This function is called by:
 10892 ;;		_EUSART2_Initialize
 10893 ;;		_INTERRUPT_InterruptManager
 10894 ;; This function uses a non-reentrant model
 10895 ;;
 10896                           
 10897                           	psect	text67
 10898  002B56                     __ptext67:
 10899                           	opt callstack 0
 10900  002B56                     _EUSART2_Transmit_ISR:
 10901                           	opt callstack 18
 10902  002B56                     
 10903                           ;mcc_generated_files/eusart2.c: 210:     if(sizeof(eusart2TxBuffer) > eusart2TxBufferRem
      +                          aining)
 10904  002B56  0E08               	movlw	8
 10905  002B58  0100               	movlb	0	; () banked
 10906  002B5A  61F2               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
 10907  002B5C  EFB2  F015         	goto	i2u356_41
 10908  002B60  EFB4  F015         	goto	i2u356_40
 10909  002B64                     i2u356_41:
 10910  002B64  EFCC  F015         	goto	i2l333
 10911  002B68                     i2u356_40:
 10912  002B68                     
 10913                           ; BSR set to: 0
 10914                           ;mcc_generated_files/eusart2.c: 211:     {;mcc_generated_files/eusart2.c: 212:         T
      +                          X2REG = eusart2TxBuffer[eusart2TxTail++];
 10915  002B68  0E80               	movlw	low _eusart2TxBuffer
 10916  002B6A  25A3               	addwf	_eusart2TxTail& (0+255),w,b	;volatile
 10917  002B6C  6ED9               	movwf	fsr2l,c
 10918  002B6E  6ADA               	clrf	fsr2h,c
 10919  002B70  0E00               	movlw	high _eusart2TxBuffer
 10920  002B72  22DA               	addwfc	fsr2h,f,c
 10921  002B74  50DF               	movf	indf2,w,c
 10922  002B76  010E               	movlb	14	; () banked
 10923  002B78  6F9A               	movwf	154,b	;volatile
 10924  002B7A                     
 10925                           ; BSR set to: 14
 10926  002B7A  0100               	movlb	0	; () banked
 10927  002B7C  2BA3               	incf	_eusart2TxTail& (0+255),f,b	;volatile
 10928  002B7E                     
 10929                           ; BSR set to: 0
 10930                           ;mcc_generated_files/eusart2.c: 213:         if(sizeof(eusart2TxBuffer) <= eusart2TxTail
      +                          )
 10931  002B7E  0E07               	movlw	7
 10932  002B80  65A3               	cpfsgt	_eusart2TxTail& (0+255),b	;volatile
 10933  002B82  EFC5  F015         	goto	i2u357_41
 10934  002B86  EFC7  F015         	goto	i2u357_40
 10935  002B8A                     i2u357_41:
 10936  002B8A  EFC9  F015         	goto	i2l4260
 10937  002B8E                     i2u357_40:
 10938  002B8E                     
 10939                           ; BSR set to: 0
 10940                           ;mcc_generated_files/eusart2.c: 214:         {;mcc_generated_files/eusart2.c: 215:      
      +                                 eusart2TxTail = 0;
 10941  002B8E  0E00               	movlw	0
 10942  002B90  6FA3               	movwf	_eusart2TxTail& (0+255),b	;volatile
 10943  002B92                     i2l4260:
 10944                           
 10945                           ; BSR set to: 0
 10946                           ;mcc_generated_files/eusart2.c: 217:         eusart2TxBufferRemaining++;
 10947  002B92  2BF2               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 10948                           
 10949                           ;mcc_generated_files/eusart2.c: 218:     }
 10950  002B94  EFCE  F015         	goto	i2l336
 10951  002B98                     i2l333:
 10952                           
 10953                           ; BSR set to: 0
 10954                           ;mcc_generated_files/eusart2.c: 220:     {;mcc_generated_files/eusart2.c: 221:         P
      +                          IE3bits.TX2IE = 0;
 10955  002B98  010E               	movlb	14	; () banked
 10956  002B9A  9DC5               	bcf	197,6,b	;volatile
 10957  002B9C                     i2l336:
 10958  002B9C  0012               	return		;funcret
 10959  002B9E                     __end_of_EUSART2_Transmit_ISR:
 10960                           	opt callstack 0
 10961                           
 10962 ;; *************** function _EUSART2_Receive_ISR *****************
 10963 ;; Defined at:
 10964 ;;		line 225 in file "mcc_generated_files/eusart2.c"
 10965 ;; Parameters:    Size  Location     Type
 10966 ;;		None
 10967 ;; Auto vars:     Size  Location     Type
 10968 ;;		None
 10969 ;; Return value:  Size  Location     Type
 10970 ;;                  1    wreg      void 
 10971 ;; Registers used:
 10972 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 10973 ;; Tracked objects:
 10974 ;;		On entry : 0/0
 10975 ;;		On exit  : 0/0
 10976 ;;		Unchanged: 0/0
 10977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10982 ;;Total ram usage:        0 bytes
 10983 ;; Hardware stack levels used:    1
 10984 ;; Hardware stack levels required when called:    2
 10985 ;; This function calls:
 10986 ;;		Absolute function
 10987 ;;		_EUSART2_DefaultErrorHandler
 10988 ;;		_EUSART2_DefaultFramingErrorHandler
 10989 ;;		_EUSART2_DefaultOverrunErrorHandler
 10990 ;;		_EUSART2_RxDataHandler
 10991 ;; This function is called by:
 10992 ;;		_EUSART2_Initialize
 10993 ;;		_INTERRUPT_InterruptManager
 10994 ;; This function uses a non-reentrant model
 10995 ;;
 10996                           
 10997                           	psect	text68
 10998  002050                     __ptext68:
 10999                           	opt callstack 0
 11000  002050                     _EUSART2_Receive_ISR:
 11001                           	opt callstack 16
 11002  002050                     
 11003                           ;mcc_generated_files/eusart2.c: 228:     eusart2RxStatusBuffer[eusart2RxHead].status = 0
      +                          ;
 11004  002050  0E70               	movlw	low _eusart2RxStatusBuffer
 11005  002052  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
 11006  002054  6ED9               	movwf	fsr2l,c
 11007  002056  6ADA               	clrf	fsr2h,c
 11008  002058  0E00               	movlw	high _eusart2RxStatusBuffer
 11009  00205A  22DA               	addwfc	fsr2h,f,c
 11010  00205C  0E00               	movlw	0
 11011  00205E  6EDF               	movwf	indf2,c
 11012  002060                     
 11013                           ;mcc_generated_files/eusart2.c: 230:     if(RC2STAbits.FERR){
 11014  002060  010E               	movlb	14	; () banked
 11015  002062  A59D               	btfss	157,2,b	;volatile
 11016  002064  EF36  F010         	goto	i2u358_41
 11017  002068  EF38  F010         	goto	i2u358_40
 11018  00206C                     i2u358_41:
 11019  00206C  EF4C  F010         	goto	i2l4270
 11020  002070                     i2u358_40:
 11021  002070                     
 11022                           ; BSR set to: 14
 11023                           ;mcc_generated_files/eusart2.c: 231:         eusart2RxStatusBuffer[eusart2RxHead].ferr =
      +                           1;
 11024  002070  0E70               	movlw	low _eusart2RxStatusBuffer
 11025  002072  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
 11026  002074  6ED9               	movwf	fsr2l,c
 11027  002076  6ADA               	clrf	fsr2h,c
 11028  002078  0E00               	movlw	high _eusart2RxStatusBuffer
 11029  00207A  22DA               	addwfc	fsr2h,f,c
 11030  00207C  0100               	movlb	0	; () banked
 11031  00207E  82DF               	bsf	indf2,1,c
 11032  002080                     
 11033                           ; BSR set to: 0
 11034                           ;mcc_generated_files/eusart2.c: 232:         EUSART2_FramingErrorHandler();
 11035  002080  D802               	call	i2u359_48
 11036  002082  EF4C  F010         	goto	i2u359_49
 11037  002086                     i2u359_48:
 11038  002086  0005               	push	
 11039  002088  6EFA               	movwf	pclath,c
 11040  00208A  51E7               	movf	_EUSART2_FramingErrorHandler& (0+255),w,b
 11041  00208C  6EFD               	movwf	tosl,c
 11042  00208E  51E8               	movf	(_EUSART2_FramingErrorHandler+1)& (0+255),w,b
 11043  002090  6EFE               	movwf	tosh,c
 11044  002092  6AFF               	clrf	tosu,c
 11045  002094  50FA               	movf	pclath,w,c
 11046  002096  0012               	return		;indir
 11047  002098                     i2u359_49:
 11048  002098                     i2l4270:
 11049                           
 11050                           ;mcc_generated_files/eusart2.c: 235:     if(RC2STAbits.OERR){
 11051  002098  010E               	movlb	14	; () banked
 11052  00209A  A39D               	btfss	157,1,b	;volatile
 11053  00209C  EF52  F010         	goto	i2u360_41
 11054  0020A0  EF54  F010         	goto	i2u360_40
 11055  0020A4                     i2u360_41:
 11056  0020A4  EF68  F010         	goto	i2l4276
 11057  0020A8                     i2u360_40:
 11058  0020A8                     
 11059                           ; BSR set to: 14
 11060                           ;mcc_generated_files/eusart2.c: 236:         eusart2RxStatusBuffer[eusart2RxHead].oerr =
      +                           1;
 11061  0020A8  0E70               	movlw	low _eusart2RxStatusBuffer
 11062  0020AA  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
 11063  0020AC  6ED9               	movwf	fsr2l,c
 11064  0020AE  6ADA               	clrf	fsr2h,c
 11065  0020B0  0E00               	movlw	high _eusart2RxStatusBuffer
 11066  0020B2  22DA               	addwfc	fsr2h,f,c
 11067  0020B4  0100               	movlb	0	; () banked
 11068  0020B6  84DF               	bsf	indf2,2,c
 11069  0020B8                     
 11070                           ; BSR set to: 0
 11071                           ;mcc_generated_files/eusart2.c: 237:         EUSART2_OverrunErrorHandler();
 11072  0020B8  D802               	call	i2u361_48
 11073  0020BA  EF68  F010         	goto	i2u361_49
 11074  0020BE                     i2u361_48:
 11075  0020BE  0005               	push	
 11076  0020C0  6EFA               	movwf	pclath,c
 11077  0020C2  51E5               	movf	_EUSART2_OverrunErrorHandler& (0+255),w,b
 11078  0020C4  6EFD               	movwf	tosl,c
 11079  0020C6  51E6               	movf	(_EUSART2_OverrunErrorHandler+1)& (0+255),w,b
 11080  0020C8  6EFE               	movwf	tosh,c
 11081  0020CA  6AFF               	clrf	tosu,c
 11082  0020CC  50FA               	movf	pclath,w,c
 11083  0020CE  0012               	return		;indir
 11084  0020D0                     i2u361_49:
 11085  0020D0                     i2l4276:
 11086                           
 11087                           ;mcc_generated_files/eusart2.c: 240:     if(eusart2RxStatusBuffer[eusart2RxHead].status)
      +                          {
 11088  0020D0  0E70               	movlw	low _eusart2RxStatusBuffer
 11089  0020D2  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
 11090  0020D4  6ED9               	movwf	fsr2l,c
 11091  0020D6  6ADA               	clrf	fsr2h,c
 11092  0020D8  0E00               	movlw	high _eusart2RxStatusBuffer
 11093  0020DA  22DA               	addwfc	fsr2h,f,c
 11094  0020DC  50DF               	movf	indf2,w,c
 11095  0020DE  B4D8               	btfsc	status,2,c
 11096  0020E0  EF74  F010         	goto	i2u362_41
 11097  0020E4  EF76  F010         	goto	i2u362_40
 11098  0020E8                     i2u362_41:
 11099  0020E8  EF85  F010         	goto	i2l4280
 11100  0020EC                     i2u362_40:
 11101  0020EC                     
 11102                           ;mcc_generated_files/eusart2.c: 241:         EUSART2_ErrorHandler();
 11103  0020EC  D802               	call	i2u363_48
 11104  0020EE  EF83  F010         	goto	i2u363_49
 11105  0020F2                     i2u363_48:
 11106  0020F2  0005               	push	
 11107  0020F4  6EFA               	movwf	pclath,c
 11108  0020F6  0100               	movlb	0	; () banked
 11109  0020F8  51E3               	movf	_EUSART2_ErrorHandler& (0+255),w,b
 11110  0020FA  6EFD               	movwf	tosl,c
 11111  0020FC  51E4               	movf	(_EUSART2_ErrorHandler+1)& (0+255),w,b
 11112  0020FE  6EFE               	movwf	tosh,c
 11113  002100  6AFF               	clrf	tosu,c
 11114  002102  50FA               	movf	pclath,w,c
 11115  002104  0012               	return		;indir
 11116  002106                     i2u363_49:
 11117                           
 11118                           ;mcc_generated_files/eusart2.c: 242:     } else {
 11119  002106  EF87  F010         	goto	i2l343
 11120  00210A                     i2l4280:
 11121                           
 11122                           ;mcc_generated_files/eusart2.c: 243:         EUSART2_RxDataHandler();
 11123  00210A  ECC5  F016         	call	_EUSART2_RxDataHandler	;wreg free
 11124  00210E                     i2l343:
 11125  00210E  0012               	return		;funcret
 11126  002110                     __end_of_EUSART2_Receive_ISR:
 11127                           	opt callstack 0
 11128                           
 11129 ;; *************** function _EUSART2_DefaultOverrunErrorHandler *****************
 11130 ;; Defined at:
 11131 ;;		line 261 in file "mcc_generated_files/eusart2.c"
 11132 ;; Parameters:    Size  Location     Type
 11133 ;;		None
 11134 ;; Auto vars:     Size  Location     Type
 11135 ;;		None
 11136 ;; Return value:  Size  Location     Type
 11137 ;;                  1    wreg      void 
 11138 ;; Registers used:
 11139 ;;		None
 11140 ;; Tracked objects:
 11141 ;;		On entry : 0/0
 11142 ;;		On exit  : 0/0
 11143 ;;		Unchanged: 0/0
 11144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11149 ;;Total ram usage:        0 bytes
 11150 ;; Hardware stack levels used:    1
 11151 ;; This function calls:
 11152 ;;		Nothing
 11153 ;; This function is called by:
 11154 ;;		_EUSART2_Initialize
 11155 ;;		_EUSART2_Receive_ISR
 11156 ;; This function uses a non-reentrant model
 11157 ;;
 11158                           
 11159                           	psect	text69
 11160  002F3E                     __ptext69:
 11161                           	opt callstack 0
 11162  002F3E                     _EUSART2_DefaultOverrunErrorHandler:
 11163                           	opt callstack 17
 11164  002F3E                     
 11165                           ;mcc_generated_files/eusart2.c: 264:     RC2STAbits.CREN = 0;
 11166  002F3E  010E               	movlb	14	; () banked
 11167  002F40  999D               	bcf	157,4,b	;volatile
 11168                           
 11169                           ;mcc_generated_files/eusart2.c: 265:     RC2STAbits.CREN = 1;
 11170  002F42  899D               	bsf	157,4,b	;volatile
 11171  002F44                     
 11172                           ; BSR set to: 14
 11173  002F44  0012               	return		;funcret
 11174  002F46                     __end_of_EUSART2_DefaultOverrunErrorHandler:
 11175                           	opt callstack 0
 11176                           
 11177 ;; *************** function _EUSART2_DefaultFramingErrorHandler *****************
 11178 ;; Defined at:
 11179 ;;		line 259 in file "mcc_generated_files/eusart2.c"
 11180 ;; Parameters:    Size  Location     Type
 11181 ;;		None
 11182 ;; Auto vars:     Size  Location     Type
 11183 ;;		None
 11184 ;; Return value:  Size  Location     Type
 11185 ;;                  1    wreg      void 
 11186 ;; Registers used:
 11187 ;;		None
 11188 ;; Tracked objects:
 11189 ;;		On entry : 0/0
 11190 ;;		On exit  : 0/0
 11191 ;;		Unchanged: 0/0
 11192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11197 ;;Total ram usage:        0 bytes
 11198 ;; Hardware stack levels used:    1
 11199 ;; This function calls:
 11200 ;;		Nothing
 11201 ;; This function is called by:
 11202 ;;		_EUSART2_Initialize
 11203 ;;		_EUSART2_Receive_ISR
 11204 ;; This function uses a non-reentrant model
 11205 ;;
 11206                           
 11207                           	psect	text70
 11208  002F68                     __ptext70:
 11209                           	opt callstack 0
 11210  002F68                     _EUSART2_DefaultFramingErrorHandler:
 11211                           	opt callstack 17
 11212  002F68  0012               	return		;funcret
 11213  002F6A                     __end_of_EUSART2_DefaultFramingErrorHandler:
 11214                           	opt callstack 0
 11215                           
 11216 ;; *************** function _EUSART2_DefaultErrorHandler *****************
 11217 ;; Defined at:
 11218 ;;		line 269 in file "mcc_generated_files/eusart2.c"
 11219 ;; Parameters:    Size  Location     Type
 11220 ;;		None
 11221 ;; Auto vars:     Size  Location     Type
 11222 ;;		None
 11223 ;; Return value:  Size  Location     Type
 11224 ;;                  1    wreg      void 
 11225 ;; Registers used:
 11226 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11227 ;; Tracked objects:
 11228 ;;		On entry : 0/0
 11229 ;;		On exit  : 0/0
 11230 ;;		Unchanged: 0/0
 11231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11236 ;;Total ram usage:        0 bytes
 11237 ;; Hardware stack levels used:    1
 11238 ;; Hardware stack levels required when called:    1
 11239 ;; This function calls:
 11240 ;;		_EUSART2_RxDataHandler
 11241 ;; This function is called by:
 11242 ;;		_EUSART2_Initialize
 11243 ;;		_EUSART2_Receive_ISR
 11244 ;; This function uses a non-reentrant model
 11245 ;;
 11246                           
 11247                           	psect	text71
 11248  002F52                     __ptext71:
 11249                           	opt callstack 0
 11250  002F52                     _EUSART2_DefaultErrorHandler:
 11251                           	opt callstack 16
 11252  002F52                     
 11253                           ;mcc_generated_files/eusart2.c: 270:     EUSART2_RxDataHandler();
 11254  002F52  ECC5  F016         	call	_EUSART2_RxDataHandler	;wreg free
 11255  002F56  0012               	return		;funcret
 11256  002F58                     __end_of_EUSART2_DefaultErrorHandler:
 11257                           	opt callstack 0
 11258                           
 11259 ;; *************** function _EUSART2_RxDataHandler *****************
 11260 ;; Defined at:
 11261 ;;		line 249 in file "mcc_generated_files/eusart2.c"
 11262 ;; Parameters:    Size  Location     Type
 11263 ;;		None
 11264 ;; Auto vars:     Size  Location     Type
 11265 ;;		None
 11266 ;; Return value:  Size  Location     Type
 11267 ;;                  1    wreg      void 
 11268 ;; Registers used:
 11269 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11270 ;; Tracked objects:
 11271 ;;		On entry : 0/0
 11272 ;;		On exit  : 0/0
 11273 ;;		Unchanged: 0/0
 11274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11278 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11279 ;;Total ram usage:        0 bytes
 11280 ;; Hardware stack levels used:    1
 11281 ;; This function calls:
 11282 ;;		Nothing
 11283 ;; This function is called by:
 11284 ;;		_EUSART2_Receive_ISR
 11285 ;;		_EUSART2_DefaultErrorHandler
 11286 ;; This function uses a non-reentrant model
 11287 ;;
 11288                           
 11289                           	psect	text72
 11290  002D8A                     __ptext72:
 11291                           	opt callstack 0
 11292  002D8A                     _EUSART2_RxDataHandler:
 11293                           	opt callstack 17
 11294  002D8A                     
 11295                           ;mcc_generated_files/eusart2.c: 251:     eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 11296  002D8A  0E78               	movlw	low _eusart2RxBuffer
 11297  002D8C  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
 11298  002D8E  6ED9               	movwf	fsr2l,c
 11299  002D90  6ADA               	clrf	fsr2h,c
 11300  002D92  0E00               	movlw	high _eusart2RxBuffer
 11301  002D94  22DA               	addwfc	fsr2h,f,c
 11302  002D96  CE99 FFDF          	movff	3737,indf2	;volatile
 11303  002D9A  2A5A               	incf	_eusart2RxHead^0,f,c	;volatile
 11304  002D9C                     
 11305                           ;mcc_generated_files/eusart2.c: 252:     if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 11306  002D9C  0E07               	movlw	7
 11307  002D9E  645A               	cpfsgt	_eusart2RxHead^0,c	;volatile
 11308  002DA0  EFD4  F016         	goto	i2u324_41
 11309  002DA4  EFD6  F016         	goto	i2u324_40
 11310  002DA8                     i2u324_41:
 11311  002DA8  EFD8  F016         	goto	i2l3906
 11312  002DAC                     i2u324_40:
 11313  002DAC                     
 11314                           ;mcc_generated_files/eusart2.c: 253:     {;mcc_generated_files/eusart2.c: 254:         e
      +                          usart2RxHead = 0;
 11315  002DAC  0E00               	movlw	0
 11316  002DAE  6E5A               	movwf	_eusart2RxHead^0,c	;volatile
 11317  002DB0                     i2l3906:
 11318                           
 11319                           ;mcc_generated_files/eusart2.c: 256:     eusart2RxCount++;
 11320  002DB0  0100               	movlb	0	; () banked
 11321  002DB2  2BA1               	incf	_eusart2RxCount& (0+255),f,b	;volatile
 11322  002DB4                     
 11323                           ; BSR set to: 0
 11324  002DB4  0012               	return		;funcret
 11325  002DB6                     __end_of_EUSART2_RxDataHandler:
 11326                           	opt callstack 0
 11327                           
 11328 ;; *************** function _EUSART1_Transmit_ISR *****************
 11329 ;; Defined at:
 11330 ;;		line 197 in file "mcc_generated_files/eusart1.c"
 11331 ;; Parameters:    Size  Location     Type
 11332 ;;		None
 11333 ;; Auto vars:     Size  Location     Type
 11334 ;;		None
 11335 ;; Return value:  Size  Location     Type
 11336 ;;                  1    wreg      void 
 11337 ;; Registers used:
 11338 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11339 ;; Tracked objects:
 11340 ;;		On entry : 0/0
 11341 ;;		On exit  : 0/0
 11342 ;;		Unchanged: 0/0
 11343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11348 ;;Total ram usage:        0 bytes
 11349 ;; Hardware stack levels used:    1
 11350 ;; This function calls:
 11351 ;;		Nothing
 11352 ;; This function is called by:
 11353 ;;		_EUSART1_Initialize
 11354 ;;		_INTERRUPT_InterruptManager
 11355 ;; This function uses a non-reentrant model
 11356 ;;
 11357                           
 11358                           	psect	text73
 11359  002BE2                     __ptext73:
 11360                           	opt callstack 0
 11361  002BE2                     _EUSART1_Transmit_ISR:
 11362                           	opt callstack 18
 11363  002BE2                     
 11364                           ;mcc_generated_files/eusart1.c: 201:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 11365  002BE2  0E10               	movlw	16
 11366  002BE4  0100               	movlb	0	; () banked
 11367  002BE6  61F1               	cpfslt	_eusart1TxBufferRemaining& (0+255),b	;volatile
 11368  002BE8  EFF8  F015         	goto	i2u364_41
 11369  002BEC  EFFA  F015         	goto	i2u364_40
 11370  002BF0                     i2u364_41:
 11371  002BF0  EF10  F016         	goto	i2l477
 11372  002BF4                     i2u364_40:
 11373  002BF4                     
 11374                           ; BSR set to: 0
 11375                           ;mcc_generated_files/eusart1.c: 202:     {;mcc_generated_files/eusart1.c: 203:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 11376  002BF4  0E60               	movlw	low _eusart1TxBuffer
 11377  002BF6  259E               	addwf	_eusart1TxTail& (0+255),w,b	;volatile
 11378  002BF8  6ED9               	movwf	fsr2l,c
 11379  002BFA  6ADA               	clrf	fsr2h,c
 11380  002BFC  0E00               	movlw	high _eusart1TxBuffer
 11381  002BFE  22DA               	addwfc	fsr2h,f,c
 11382  002C00  50DF               	movf	indf2,w,c
 11383  002C02  6E9A               	movwf	154,c	;volatile
 11384  002C04                     
 11385                           ; BSR set to: 0
 11386  002C04  2B9E               	incf	_eusart1TxTail& (0+255),f,b	;volatile
 11387  002C06                     
 11388                           ; BSR set to: 0
 11389                           ;mcc_generated_files/eusart1.c: 204:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 11390  002C06  0E0F               	movlw	15
 11391  002C08  659E               	cpfsgt	_eusart1TxTail& (0+255),b	;volatile
 11392  002C0A  EF09  F016         	goto	i2u365_41
 11393  002C0E  EF0B  F016         	goto	i2u365_40
 11394  002C12                     i2u365_41:
 11395  002C12  EF0D  F016         	goto	i2l4292
 11396  002C16                     i2u365_40:
 11397  002C16                     
 11398                           ; BSR set to: 0
 11399                           ;mcc_generated_files/eusart1.c: 205:         {;mcc_generated_files/eusart1.c: 206:      
      +                                 eusart1TxTail = 0;
 11400  002C16  0E00               	movlw	0
 11401  002C18  6F9E               	movwf	_eusart1TxTail& (0+255),b	;volatile
 11402  002C1A                     i2l4292:
 11403                           
 11404                           ; BSR set to: 0
 11405                           ;mcc_generated_files/eusart1.c: 208:         eusart1TxBufferRemaining++;
 11406  002C1A  2BF1               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 11407                           
 11408                           ;mcc_generated_files/eusart1.c: 209:     }
 11409  002C1C  EF12  F016         	goto	i2l480
 11410  002C20                     i2l477:
 11411                           
 11412                           ; BSR set to: 0
 11413                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         P
      +                          IE3bits.TX1IE = 0;
 11414  002C20  010E               	movlb	14	; () banked
 11415  002C22  99C5               	bcf	197,4,b	;volatile
 11416  002C24                     i2l480:
 11417  002C24  0012               	return		;funcret
 11418  002C26                     __end_of_EUSART1_Transmit_ISR:
 11419                           	opt callstack 0
 11420                           
 11421 ;; *************** function _EUSART1_Receive_ISR *****************
 11422 ;; Defined at:
 11423 ;;		line 216 in file "mcc_generated_files/eusart1.c"
 11424 ;; Parameters:    Size  Location     Type
 11425 ;;		None
 11426 ;; Auto vars:     Size  Location     Type
 11427 ;;		None
 11428 ;; Return value:  Size  Location     Type
 11429 ;;                  1    wreg      void 
 11430 ;; Registers used:
 11431 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 11432 ;; Tracked objects:
 11433 ;;		On entry : 0/0
 11434 ;;		On exit  : 0/0
 11435 ;;		Unchanged: 0/0
 11436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11441 ;;Total ram usage:        0 bytes
 11442 ;; Hardware stack levels used:    1
 11443 ;; Hardware stack levels required when called:    2
 11444 ;; This function calls:
 11445 ;;		Absolute function
 11446 ;;		_EUSART1_DefaultErrorHandler
 11447 ;;		_EUSART1_DefaultFramingErrorHandler
 11448 ;;		_EUSART1_DefaultOverrunErrorHandler
 11449 ;;		_EUSART1_RxDataHandler
 11450 ;; This function is called by:
 11451 ;;		_EUSART1_Initialize
 11452 ;;		_INTERRUPT_InterruptManager
 11453 ;; This function uses a non-reentrant model
 11454 ;;
 11455                           
 11456                           	psect	text74
 11457  002110                     __ptext74:
 11458                           	opt callstack 0
 11459  002110                     _EUSART1_Receive_ISR:
 11460                           	opt callstack 16
 11461  002110                     
 11462                           ;mcc_generated_files/eusart1.c: 219:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 11463  002110  0E80               	movlw	low _eusart1RxStatusBuffer
 11464  002112  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
 11465  002114  6ED9               	movwf	fsr2l,c
 11466  002116  6ADA               	clrf	fsr2h,c
 11467  002118  0E02               	movlw	high _eusart1RxStatusBuffer
 11468  00211A  22DA               	addwfc	fsr2h,f,c
 11469  00211C  0E00               	movlw	0
 11470  00211E  6EDF               	movwf	indf2,c
 11471  002120                     
 11472                           ;mcc_generated_files/eusart1.c: 221:     if(RC1STAbits.FERR){
 11473  002120  A49D               	btfss	157,2,c	;volatile
 11474  002122  EF95  F010         	goto	i2u366_41
 11475  002126  EF97  F010         	goto	i2u366_40
 11476  00212A                     i2u366_41:
 11477  00212A  EFAC  F010         	goto	i2l4302
 11478  00212E                     i2u366_40:
 11479  00212E                     
 11480                           ;mcc_generated_files/eusart1.c: 222:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 11481  00212E  0E80               	movlw	low _eusart1RxStatusBuffer
 11482  002130  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
 11483  002132  6ED9               	movwf	fsr2l,c
 11484  002134  6ADA               	clrf	fsr2h,c
 11485  002136  0E02               	movlw	high _eusart1RxStatusBuffer
 11486  002138  22DA               	addwfc	fsr2h,f,c
 11487  00213A  0102               	movlb	2	; () banked
 11488  00213C  82DF               	bsf	indf2,1,c
 11489  00213E                     
 11490                           ; BSR set to: 2
 11491                           ;mcc_generated_files/eusart1.c: 223:         EUSART1_FramingErrorHandler();
 11492  00213E  D802               	call	i2u367_48
 11493  002140  EFAC  F010         	goto	i2u367_49
 11494  002144                     i2u367_48:
 11495  002144  0005               	push	
 11496  002146  6EFA               	movwf	pclath,c
 11497  002148  0100               	movlb	0	; () banked
 11498  00214A  51E1               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
 11499  00214C  6EFD               	movwf	tosl,c
 11500  00214E  51E2               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
 11501  002150  6EFE               	movwf	tosh,c
 11502  002152  6AFF               	clrf	tosu,c
 11503  002154  50FA               	movf	pclath,w,c
 11504  002156  0012               	return		;indir
 11505  002158                     i2u367_49:
 11506  002158                     i2l4302:
 11507                           
 11508                           ;mcc_generated_files/eusart1.c: 226:     if(RC1STAbits.OERR){
 11509  002158  A29D               	btfss	157,1,c	;volatile
 11510  00215A  EFB1  F010         	goto	i2u368_41
 11511  00215E  EFB3  F010         	goto	i2u368_40
 11512  002162                     i2u368_41:
 11513  002162  EFC8  F010         	goto	i2l4308
 11514  002166                     i2u368_40:
 11515  002166                     
 11516                           ;mcc_generated_files/eusart1.c: 227:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 11517  002166  0E80               	movlw	low _eusart1RxStatusBuffer
 11518  002168  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
 11519  00216A  6ED9               	movwf	fsr2l,c
 11520  00216C  6ADA               	clrf	fsr2h,c
 11521  00216E  0E02               	movlw	high _eusart1RxStatusBuffer
 11522  002170  22DA               	addwfc	fsr2h,f,c
 11523  002172  0102               	movlb	2	; () banked
 11524  002174  84DF               	bsf	indf2,2,c
 11525  002176                     
 11526                           ; BSR set to: 2
 11527                           ;mcc_generated_files/eusart1.c: 228:         EUSART1_OverrunErrorHandler();
 11528  002176  D802               	call	i2u369_48
 11529  002178  EFC8  F010         	goto	i2u369_49
 11530  00217C                     i2u369_48:
 11531  00217C  0005               	push	
 11532  00217E  6EFA               	movwf	pclath,c
 11533  002180  0100               	movlb	0	; () banked
 11534  002182  51DF               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
 11535  002184  6EFD               	movwf	tosl,c
 11536  002186  51E0               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
 11537  002188  6EFE               	movwf	tosh,c
 11538  00218A  6AFF               	clrf	tosu,c
 11539  00218C  50FA               	movf	pclath,w,c
 11540  00218E  0012               	return		;indir
 11541  002190                     i2u369_49:
 11542  002190                     i2l4308:
 11543                           
 11544                           ;mcc_generated_files/eusart1.c: 231:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 11545  002190  0E80               	movlw	low _eusart1RxStatusBuffer
 11546  002192  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
 11547  002194  6ED9               	movwf	fsr2l,c
 11548  002196  6ADA               	clrf	fsr2h,c
 11549  002198  0E02               	movlw	high _eusart1RxStatusBuffer
 11550  00219A  22DA               	addwfc	fsr2h,f,c
 11551  00219C  50DF               	movf	indf2,w,c
 11552  00219E  B4D8               	btfsc	status,2,c
 11553  0021A0  EFD4  F010         	goto	i2u370_41
 11554  0021A4  EFD6  F010         	goto	i2u370_40
 11555  0021A8                     i2u370_41:
 11556  0021A8  EFE5  F010         	goto	i2l4312
 11557  0021AC                     i2u370_40:
 11558  0021AC                     
 11559                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_ErrorHandler();
 11560  0021AC  D802               	call	i2u371_48
 11561  0021AE  EFE3  F010         	goto	i2u371_49
 11562  0021B2                     i2u371_48:
 11563  0021B2  0005               	push	
 11564  0021B4  6EFA               	movwf	pclath,c
 11565  0021B6  0100               	movlb	0	; () banked
 11566  0021B8  51DD               	movf	_EUSART1_ErrorHandler& (0+255),w,b
 11567  0021BA  6EFD               	movwf	tosl,c
 11568  0021BC  51DE               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
 11569  0021BE  6EFE               	movwf	tosh,c
 11570  0021C0  6AFF               	clrf	tosu,c
 11571  0021C2  50FA               	movf	pclath,w,c
 11572  0021C4  0012               	return		;indir
 11573  0021C6                     i2u371_49:
 11574                           
 11575                           ;mcc_generated_files/eusart1.c: 233:     } else {
 11576  0021C6  EFE7  F010         	goto	i2l487
 11577  0021CA                     i2l4312:
 11578                           
 11579                           ;mcc_generated_files/eusart1.c: 234:         EUSART1_RxDataHandler();
 11580  0021CA  ECDB  F016         	call	_EUSART1_RxDataHandler	;wreg free
 11581  0021CE                     i2l487:
 11582  0021CE  0012               	return		;funcret
 11583  0021D0                     __end_of_EUSART1_Receive_ISR:
 11584                           	opt callstack 0
 11585                           
 11586 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 11587 ;; Defined at:
 11588 ;;		line 252 in file "mcc_generated_files/eusart1.c"
 11589 ;; Parameters:    Size  Location     Type
 11590 ;;		None
 11591 ;; Auto vars:     Size  Location     Type
 11592 ;;		None
 11593 ;; Return value:  Size  Location     Type
 11594 ;;                  1    wreg      void 
 11595 ;; Registers used:
 11596 ;;		None
 11597 ;; Tracked objects:
 11598 ;;		On entry : 0/0
 11599 ;;		On exit  : 0/0
 11600 ;;		Unchanged: 0/0
 11601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11606 ;;Total ram usage:        0 bytes
 11607 ;; Hardware stack levels used:    1
 11608 ;; This function calls:
 11609 ;;		Nothing
 11610 ;; This function is called by:
 11611 ;;		_EUSART1_Initialize
 11612 ;;		_EUSART1_Receive_ISR
 11613 ;; This function uses a non-reentrant model
 11614 ;;
 11615                           
 11616                           	psect	text75
 11617  002F58                     __ptext75:
 11618                           	opt callstack 0
 11619  002F58                     _EUSART1_DefaultOverrunErrorHandler:
 11620                           	opt callstack 17
 11621  002F58                     
 11622                           ;mcc_generated_files/eusart1.c: 255:     RC1STAbits.CREN = 0;
 11623  002F58  989D               	bcf	157,4,c	;volatile
 11624                           
 11625                           ;mcc_generated_files/eusart1.c: 256:     RC1STAbits.CREN = 1;
 11626  002F5A  889D               	bsf	157,4,c	;volatile
 11627  002F5C  0012               	return		;funcret
 11628  002F5E                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 11629                           	opt callstack 0
 11630                           
 11631 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 11632 ;; Defined at:
 11633 ;;		line 250 in file "mcc_generated_files/eusart1.c"
 11634 ;; Parameters:    Size  Location     Type
 11635 ;;		None
 11636 ;; Auto vars:     Size  Location     Type
 11637 ;;		None
 11638 ;; Return value:  Size  Location     Type
 11639 ;;                  1    wreg      void 
 11640 ;; Registers used:
 11641 ;;		None
 11642 ;; Tracked objects:
 11643 ;;		On entry : 0/0
 11644 ;;		On exit  : 0/0
 11645 ;;		Unchanged: 0/0
 11646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11651 ;;Total ram usage:        0 bytes
 11652 ;; Hardware stack levels used:    1
 11653 ;; This function calls:
 11654 ;;		Nothing
 11655 ;; This function is called by:
 11656 ;;		_EUSART1_Initialize
 11657 ;;		_EUSART1_Receive_ISR
 11658 ;; This function uses a non-reentrant model
 11659 ;;
 11660                           
 11661                           	psect	text76
 11662  002F6A                     __ptext76:
 11663                           	opt callstack 0
 11664  002F6A                     _EUSART1_DefaultFramingErrorHandler:
 11665                           	opt callstack 17
 11666  002F6A  0012               	return		;funcret
 11667  002F6C                     __end_of_EUSART1_DefaultFramingErrorHandler:
 11668                           	opt callstack 0
 11669                           
 11670 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 11671 ;; Defined at:
 11672 ;;		line 260 in file "mcc_generated_files/eusart1.c"
 11673 ;; Parameters:    Size  Location     Type
 11674 ;;		None
 11675 ;; Auto vars:     Size  Location     Type
 11676 ;;		None
 11677 ;; Return value:  Size  Location     Type
 11678 ;;                  1    wreg      void 
 11679 ;; Registers used:
 11680 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11681 ;; Tracked objects:
 11682 ;;		On entry : 0/0
 11683 ;;		On exit  : 0/0
 11684 ;;		Unchanged: 0/0
 11685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11690 ;;Total ram usage:        0 bytes
 11691 ;; Hardware stack levels used:    1
 11692 ;; Hardware stack levels required when called:    1
 11693 ;; This function calls:
 11694 ;;		_EUSART1_RxDataHandler
 11695 ;; This function is called by:
 11696 ;;		_EUSART1_Initialize
 11697 ;;		_EUSART1_Receive_ISR
 11698 ;; This function uses a non-reentrant model
 11699 ;;
 11700                           
 11701                           	psect	text77
 11702  002F5E                     __ptext77:
 11703                           	opt callstack 0
 11704  002F5E                     _EUSART1_DefaultErrorHandler:
 11705                           	opt callstack 16
 11706  002F5E                     
 11707                           ;mcc_generated_files/eusart1.c: 261:     EUSART1_RxDataHandler();
 11708  002F5E  ECDB  F016         	call	_EUSART1_RxDataHandler	;wreg free
 11709  002F62  0012               	return		;funcret
 11710  002F64                     __end_of_EUSART1_DefaultErrorHandler:
 11711                           	opt callstack 0
 11712                           
 11713 ;; *************** function _EUSART1_RxDataHandler *****************
 11714 ;; Defined at:
 11715 ;;		line 240 in file "mcc_generated_files/eusart1.c"
 11716 ;; Parameters:    Size  Location     Type
 11717 ;;		None
 11718 ;; Auto vars:     Size  Location     Type
 11719 ;;		None
 11720 ;; Return value:  Size  Location     Type
 11721 ;;                  1    wreg      void 
 11722 ;; Registers used:
 11723 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11724 ;; Tracked objects:
 11725 ;;		On entry : 0/0
 11726 ;;		On exit  : 0/0
 11727 ;;		Unchanged: 0/0
 11728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11733 ;;Total ram usage:        0 bytes
 11734 ;; Hardware stack levels used:    1
 11735 ;; This function calls:
 11736 ;;		Nothing
 11737 ;; This function is called by:
 11738 ;;		_EUSART1_Receive_ISR
 11739 ;;		_EUSART1_DefaultErrorHandler
 11740 ;; This function uses a non-reentrant model
 11741 ;;
 11742                           
 11743                           	psect	text78
 11744  002DB6                     __ptext78:
 11745                           	opt callstack 0
 11746  002DB6                     _EUSART1_RxDataHandler:
 11747                           	opt callstack 17
 11748  002DB6                     
 11749                           ;mcc_generated_files/eusart1.c: 242:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 11750  002DB6  0E64               	movlw	low _eusart1RxBuffer
 11751  002DB8  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
 11752  002DBA  6ED9               	movwf	fsr2l,c
 11753  002DBC  6ADA               	clrf	fsr2h,c
 11754  002DBE  0E03               	movlw	high _eusart1RxBuffer
 11755  002DC0  22DA               	addwfc	fsr2h,f,c
 11756  002DC2  CF99 FFDF          	movff	3993,indf2	;volatile
 11757  002DC6  2A59               	incf	_eusart1RxHead^0,f,c	;volatile
 11758  002DC8                     
 11759                           ;mcc_generated_files/eusart1.c: 243:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 11760  002DC8  0E63               	movlw	99
 11761  002DCA  6459               	cpfsgt	_eusart1RxHead^0,c	;volatile
 11762  002DCC  EFEA  F016         	goto	i2u331_41
 11763  002DD0  EFEC  F016         	goto	i2u331_40
 11764  002DD4                     i2u331_41:
 11765  002DD4  EFEE  F016         	goto	i2l3952
 11766  002DD8                     i2u331_40:
 11767  002DD8                     
 11768                           ;mcc_generated_files/eusart1.c: 244:     {;mcc_generated_files/eusart1.c: 245:         e
      +                          usart1RxHead = 0;
 11769  002DD8  0E00               	movlw	0
 11770  002DDA  6E59               	movwf	_eusart1RxHead^0,c	;volatile
 11771  002DDC                     i2l3952:
 11772                           
 11773                           ;mcc_generated_files/eusart1.c: 247:     eusart1RxCount++;
 11774  002DDC  0100               	movlb	0	; () banked
 11775  002DDE  2B9C               	incf	_eusart1RxCount& (0+255),f,b	;volatile
 11776  002DE0                     
 11777                           ; BSR set to: 0
 11778  002DE0  0012               	return		;funcret
 11779  002DE2                     __end_of_EUSART1_RxDataHandler:
 11780                           	opt callstack 0
 11781                           
 11782                           	psect	text79
 11783  000000                     __ptext79:
 11784                           	opt callstack 0
 11785  000000                     
 11786                           	psect	rparam
 11787  0000                     
 11788                           	psect	temp
 11789  00005B                     btemp:
 11790                           	opt callstack 0
 11791  00005B                     	ds	1
 11792  0000                     int$flags	set	btemp
 11793  0000                     wtemp8	set	btemp+1
 11794  0000                     ttemp5	set	btemp+1
 11795  0000                     ttemp6	set	btemp+4
 11796  0000                     ttemp7	set	btemp+8
 11797                           tosu	equ	0xFFF
 11798                           tosh	equ	0xFFE
 11799                           tosl	equ	0xFFD
 11800                           stkptr	equ	0xFFC
 11801                           pclatu	equ	0xFFB
 11802                           pclath	equ	0xFFA
 11803                           pcl	equ	0xFF9
 11804                           tblptru	equ	0xFF8
 11805                           tblptrh	equ	0xFF7
 11806                           tblptrl	equ	0xFF6
 11807                           tablat	equ	0xFF5
 11808                           prodh	equ	0xFF4
 11809                           prodl	equ	0xFF3
 11810                           indf0	equ	0xFEF
 11811                           postinc0	equ	0xFEE
 11812                           postdec0	equ	0xFED
 11813                           preinc0	equ	0xFEC
 11814                           plusw0	equ	0xFEB
 11815                           fsr0h	equ	0xFEA
 11816                           fsr0l	equ	0xFE9
 11817                           wreg	equ	0xFE8
 11818                           indf1	equ	0xFE7
 11819                           postinc1	equ	0xFE6
 11820                           postdec1	equ	0xFE5
 11821                           preinc1	equ	0xFE4
 11822                           plusw1	equ	0xFE3
 11823                           fsr1h	equ	0xFE2
 11824                           fsr1l	equ	0xFE1
 11825                           bsr	equ	0xFE0
 11826                           indf2	equ	0xFDF
 11827                           postinc2	equ	0xFDE
 11828                           postdec2	equ	0xFDD
 11829                           preinc2	equ	0xFDC
 11830                           plusw2	equ	0xFDB
 11831                           fsr2h	equ	0xFDA
 11832                           fsr2l	equ	0xFD9
 11833                           status	equ	0xFD8


Data Sizes:
    Strings     586
    Constant    0
    Data        205
    BSS         505
    Persistent  22
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      90
    BANK0           160     56     160
    BANK1           256      3     199
    BANK2           256      0     228
    BANK3           256      0     200
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), STR_5(CODE[9]), 
		 -> STR_4(CODE[12]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), STR_5(CODE[9]), 
		 -> STR_4(CODE[12]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_23(CODE[27]), STR_22(CODE[21]), STR_21(CODE[4]), STR_20(CODE[23]), 
		 -> STR_19(CODE[32]), STR_18(CODE[4]), STR_17(CODE[23]), STR_16(CODE[19]), 
		 -> STR_15(CODE[36]), STR_14(CODE[24]), STR_13(CODE[16]), STR_12(CODE[28]), 
		 -> STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[35]), STR_8(CODE[55]), 
		 -> STR_7(CODE[53]), STR_6(CODE[29]), STR_3(CODE[43]), STR_2(CODE[25]), 
		 -> STR_1(CODE[57]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1899_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_23(CODE[27]), STR_22(CODE[21]), STR_21(CODE[4]), STR_20(CODE[23]), 
		 -> STR_19(CODE[32]), STR_18(CODE[4]), STR_17(CODE[23]), STR_16(CODE[19]), 
		 -> STR_15(CODE[36]), STR_14(CODE[24]), STR_13(CODE[16]), STR_12(CODE[28]), 
		 -> STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[35]), STR_8(CODE[55]), 
		 -> STR_7(CODE[53]), STR_6(CODE[29]), STR_3(CODE[43]), STR_2(CODE[25]), 
		 -> STR_1(CODE[57]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_23(CODE[27]), STR_22(CODE[21]), STR_21(CODE[4]), STR_20(CODE[23]), 
		 -> STR_19(CODE[32]), STR_18(CODE[4]), STR_17(CODE[23]), STR_16(CODE[19]), 
		 -> STR_15(CODE[36]), STR_14(CODE[24]), STR_13(CODE[16]), STR_12(CODE[28]), 
		 -> STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[35]), STR_8(CODE[55]), 
		 -> STR_7(CODE[53]), STR_6(CODE[29]), STR_3(CODE[43]), STR_2(CODE[25]), 
		 -> STR_1(CODE[57]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 57
		 -> STR_23(CODE[27]), STR_22(CODE[21]), STR_21(CODE[4]), STR_20(CODE[23]), 
		 -> STR_19(CODE[32]), STR_18(CODE[4]), STR_17(CODE[23]), STR_16(CODE[19]), 
		 -> STR_15(CODE[36]), STR_14(CODE[24]), STR_13(CODE[16]), STR_12(CODE[28]), 
		 -> STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[35]), STR_8(CODE[55]), 
		 -> STR_7(CODE[53]), STR_6(CODE[29]), STR_3(CODE[43]), STR_2(CODE[25]), 
		 -> STR_1(CODE[57]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), STR_5(CODE[9]), STR_4(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), STR_5(CODE[9]), STR_4(CODE[12]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), STR_5(CODE[9]), STR_4(CODE[12]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    UART1_Write_string@data	PTR unsigned int  size(2) Largest target is 64
		 -> MBRespon(BANK1[64]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    EUSART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), 

    EUSART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), 

    EUSART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultErrorHandler(), 

    EUSART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultFramingErrorHandler(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_Receive_ISR(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _main->_PrintMB400
    _EUSART2_Initialize->_EUSART2_SetErrorHandler
    _EUSART2_Initialize->_EUSART2_SetFramingErrorHandler
    _EUSART2_Initialize->_EUSART2_SetOverrunErrorHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _ModbusFC10->_PrintMB400
    _ModbusFC03->_PrintModRespon
    _ModbusError->_PrintModRespon
    _UART1_Write_string->_EUSART1_Write
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART2_Write
    _abs->___aomod
    _atoi->_isspace

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _PrintModbus->_printf
    _ModbusRx->_checkCRC
    _checkCRC->_printf
    _ModbusFC10->_PrintModRespon
    _PrintMB400->_printf
    _ModbusFC03->_PrintModRespon
    _ModbusError->_PrintModRespon
    _PrintModRespon->_printf
    _InitialiseString->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  328174
                                              0 BANK1      3     3      0
                    _ClearModbusData
                  _ClearModbusRespon
                        _ClearRxBuff
                   _InitialiseString
                        _ModbusError
                         _ModbusFC03
                         _ModbusFC10
                           _ModbusRx
                         _PrintMB400
                        _PrintModbus
                             _RXMode
                  _SYSTEM_Initialize
                             _printf
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1210
                 _EUSART1_Initialize
                 _EUSART2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     605
            _EUSART2_SetErrorHandler
     _EUSART2_SetFramingErrorHandler
     _EUSART2_SetOverrunErrorHandler
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetOverrunErrorHandler                       2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetFramingErrorHandler                       2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetErrorHandler                              2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     605
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _PrintModbus                                          3     3      0   31939
                                             84 COMRAM     1     1      0
                                             41 BANK0      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _ModbusRx                                             1     1      0   64298
                                             84 COMRAM     1     1      0
                  _AddRxBuffToModBus
                        _ClearRxBuff
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                             _RXMode
                           _checkCRC
                             _printf
 ---------------------------------------------------------------------------------
 (2) _checkCRC                                            15    15      0   32282
                                             41 BANK0     15    15      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _RXMode                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         1     1      0      37
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ClearRxBuff                                          3     3      0      71
                                              4 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _AddRxBuffToModBus                                    3     3      0      71
                                              4 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ModbusFC10                                          10    10      0   66311
                                             43 BANK0     10    10      0
                         _PrintMB400
                     _PrintModRespon
                 _UART1_Write_string
                        _generateCRC
 ---------------------------------------------------------------------------------
 (1) _PrintMB400                                           2     2      0   31970
                                             84 COMRAM     2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _ModbusFC03                                           6     6      0   34236
                                             43 BANK0      6     6      0
                     _PrintModRespon
                 _UART1_Write_string
                        _generateCRC
 ---------------------------------------------------------------------------------
 (1) _ModbusError                                          6     4      2   34258
                                             43 BANK0      6     4      2
                     _PrintModRespon
                 _UART1_Write_string
                        _generateCRC
 ---------------------------------------------------------------------------------
 (2) _generateCRC                                         15    12      3    1463
                                              4 COMRAM    15    12      3
 ---------------------------------------------------------------------------------
 (2) _UART1_Write_string                                   7     3      4     732
                                              5 COMRAM     7     3      4
                      _EUSART1_Write
                 _EUSART1_is_tx_done
                _EUSART1_is_tx_ready
                             _TXMode
 ---------------------------------------------------------------------------------
 (3) _TXMode                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART1_is_tx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART1_is_tx_done                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      62
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _PrintModRespon                                       3     3      0   31939
                                             84 COMRAM     1     1      0
                                             41 BANK0      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _InitialiseString                                     0     0      0   31837
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              12     4      8   31837
                                             29 BANK0     12     4      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   29842
                                             82 COMRAM     2     2      0
                                             23 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           45    39      6   29279
                                             72 COMRAM    10     4      6
                                              0 BANK0     23    23      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    7157
                                             33 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     512
                                             10 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    6539
                                             33 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     412
                                              4 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     421
                                              4 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _stoa                                                22    18      4    2732
                                             15 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    7393
                                             33 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    5127
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     310
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    2077
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1577
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      93
                                              5 COMRAM     1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART2_Write                                        1     1      0      62
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1815
                                             11 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     712
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _ClearModbusRespon                                    2     2      0     102
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ClearModbusData                                      2     2      0     102
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManager                          4     4      0       0
                                              0 COMRAM     4     4      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                _EUSART2_Receive_ISR *
               _EUSART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _EUSART2_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART2_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART2_DefaultErrorHandler *
 _EUSART2_DefaultFramingErrorHandler *
 _EUSART2_DefaultOverrunErrorHandler *
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _EUSART2_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART2_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART2_DefaultErrorHandler                         0     0      0       0
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _EUSART2_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearModbusData
   _ClearModbusRespon
   _ClearRxBuff
   _InitialiseString
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _ModbusError
     _PrintModRespon
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _UART1_Write_string
       _EUSART1_Write
       _EUSART1_is_tx_done
       _EUSART1_is_tx_ready
       _TXMode
     _generateCRC
   _ModbusFC03
     _PrintModRespon
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _UART1_Write_string
       _EUSART1_Write
       _EUSART1_is_tx_done
       _EUSART1_is_tx_ready
       _TXMode
     _generateCRC
   _ModbusFC10
     _PrintMB400
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _PrintModRespon
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _UART1_Write_string
       _EUSART1_Write
       _EUSART1_is_tx_done
       _EUSART1_is_tx_ready
       _TXMode
     _generateCRC
   _ModbusRx
     _AddRxBuffToModBus
     _ClearRxBuff
     _EUSART1_Read
     _EUSART1_is_rx_ready
     _RXMode
     _checkCRC
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _PrintMB400
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _PrintModbus
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _RXMode
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetErrorHandler
       _EUSART2_SetFramingErrorHandler
       _EUSART2_SetOverrunErrorHandler
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART2_Write
             _fputs
               _fputc
                 _putch
                   _EUSART2_Write
             _strlen
         _fputc
           _putch
             _EUSART2_Write
         _isdigit
         _stoa
           _fputc
             _putch
               _EUSART2_Write
           _strlen
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _EUSART2_Write
             _fputs
               _fputc
                 _putch
                   _EUSART2_Write
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART2_Write
             _fputs
               _fputc
                 _putch
                   _EUSART2_Write
             _strlen
           _toupper
             _islower

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _EUSART2_Receive_ISR *
     Absolute function(Fake) *
     _EUSART2_DefaultErrorHandler *
       _EUSART2_RxDataHandler
     _EUSART2_DefaultFramingErrorHandler *
     _EUSART2_DefaultOverrunErrorHandler *
     _EUSART2_RxDataHandler *
   _EUSART2_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      C8      12       78.1%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      E4      10       89.1%
BITBANK1           100      0       0       7        0.0%
BANK1              100      3      C7       8       77.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     38      A0       5      100.0%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     36D       6        0.0%
DATA                 0      0     36D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Mar 10 00:23:01 2021

                      _eusart1TxBufferRemaining 00F1                          ?_EUSART2_RxDataHandler 0001  
                                             _i 0094                                     __CFG_CP$OFF 000000  
                                            l81 2434                                    generateCRC@i 000E  
                                  generateCRC@j 0010                             ___wmul@multiplicand 0007  
                                   __CFG_LVP$ON 000000                                             l121 2E64  
                                           l124 2E7C                                             l127 2E4A  
                                           l320 2930                                             l144 2F66  
                                           l321 2948                                             l330 2F3C  
                                           l324 2978                                             l503 2F28  
                                           l512 2F0A                                             l506 2F1E  
                                           l362 2EEC                                             l515 2F14  
                                           l371 2EE2                                             l700 1DF0  
                                           l452 2E94                                             l701 1DF8  
                                           l509 2F32                                             l365 2F00  
                                           l470 2874                                             l446 25AE  
                                           l471 288C                                             l455 2EC0  
                                           l631 27FA                                             l359 2EF6  
                                           l720 262A                                             l368 2ED8  
                                           l296 2532                                             l801 075C  
                                           l449 2EAC                                             l465 29D0  
                                           l641 2F46                                             l650 2B0A  
                                           l554 26A6                                             l474 28BC  
                                           l634 2F4C                                             l714 2792  
                                           l643 2F48                                             l731 271E  
                                           l636 2F4E                                             l725 2ABE  
                                           l901 0220                                             l645 2F4A  
                                           l638 2F50                                             l734 1C26  
                                           l671 18E4                                             l751 1B1A  
                                           l656 2B54                                             l842 141E  
                                           l826 1306                                             l690 0EA2  
                                           l666 2310                                             l674 190A  
                                           l931 2E2E                                             l819 0992  
                                           l828 130E                                             l916 06B2  
                                           l684 1284                                             l837 13CE  
                                           l677 19F0                                             l838 1416  
                                           l862 09CC                                             l791 2014  
                                           l847 0EDC                                             l871 0A6A  
                                           l927 2856                                             l695 1D5A  
                                           l864 09D4                                             l928 285E  
                                           l793 204E                                             l857 10A4  
                                           l849 0EE4                                             l698 1D80  
                                           l788 1FD2                                             l885 0C06  
                                           l799 0754                                             l887 0C68  
                                  __CFG_CPD$OFF 000000          __end_of_EUSART2_SetFramingErrorHandler 2EF8  
       __size_of_EUSART2_SetFramingErrorHandler 000A                  _EUSART2_SetFramingErrorHandler 2EEE  
                                           _abs 2C66                                             _pad 1F8E  
                       __size_of_PMD_Initialize 001C                                             tosl 000FFD  
                                           wreg 000FE8                                    __CFG_ZCD$OFF 000000  
                                          ?_abs 0017                                            l1045 1740  
                                          l1058 18A4                                            l1606 2C9C  
                                          l1640 15B8                                            l5000 12E4  
                                          l1376 1D16                                            l1704 2912  
                                          l1609 2CA4                                            l1369 1CF6  
                                          l5010 1366                                            l1386 1EC8  
                                          l1379 1EA8                                            l1643 2CE0  
                                          l1715 2D18                                            l5012 1372  
                                          l5004 1330                                            l5100 0AFC  
                                          l1637 15B0                                            l1709 291A  
                                          l5022 13E0                                            l5014 13A8  
                                          l5006 1344                                            l5030 0EB4  
                                          l5102 0B10                                            l5110 0B8A  
                                          l1663 2D50                                            l5024 13F4  
                                          l5016 13AC                                            l5008 1348  
                                          l5040 0F1E                                            l5032 0EB6  
                                          l5120 0C14                                            l5112 0BA6  
                                          l5104 0B20                                            l1649 2D88  
                                          l1657 2A22                                            l5130 1420  
                                          l5026 13F8                                            l5018 13B0  
                                          l5042 0F24                                            l5050 100A  
                                          l5034 0ED0                                            l5122 0C1A  
                                          l5114 0BC4                                            l5106 0B26  
                                          l5210 022E                                            l5202 01AC  
                                          l5140 1492                                            l5132 1434  
                                          l5052 101C                                            l5060 107C  
                                          l5044 0F9A                                            l5036 0F0C  
                                          l5028 0EA4                                            l5124 0C2A  
                                          l5116 0BDE                                            l5108 0B2C  
                                          l5220 02A8                                            l5212 0230  
                                          l1693 2E08                                            l5150 14BA  
                                          l5142 1496                                            l5134 1438  
                                          l1678 23A6                                            l1686 2BE0  
                                          l5054 103A                                            l5046 0FA0  
                                          l5038 0F14                                            l5126 0C40  
                                          l5118 0BF8                                            l5070 09C0  
                                          l5222 02C8                                            l5230 0332  
                                          l5214 0256                                            l5206 01B8  
                                          l5310 2838                                            l5152 14C2  
                                          l5136 143C                                            l5056 1054  
                                          l5048 0FA6                                            l5080 0A24  
                                          l5072 09EA                                            l5064 0994  
                                          l5240 03FE                                            l5232 0358  
                                          l5224 02D6                                            l5216 028C  
                                          l5208 020E                                            l5304 27FC  
                                          l5400 2558                                            l5320 2EF8  
                                          l5312 2EDA                                            l5162 1570  
                                          l5154 14F8                                            l5146 149C  
                                          l5138 145A                                            l5058 106E  
                                          l5082 0A2A                                            l5074 09F2  
                                          l5066 09A4                                            l5250 04A0  
                                          l5242 0424                                            l5234 037E  
                                          l5218 029A                                            l5306 2804  
                                          l5330 2F2A                                            l5322 2F0C  
                                          l5410 2574                                            l5402 255C  
                                          l5314 2ED0                                            l1699 2A72  
                                          l5164 1582                                            l5148 14B2  
                                          l4700 2974                                            l5092 0A9E  
                                          l5084 0A32                                            l5076 0A12  
                                          l5068 09A6                                            l5260 056E  
                                          l5252 04EA                                            l5244 045A  
                                          l5236 03C6                                            l5228 0320  
                                          l5180 0174                                            l5172 012A  
                                          l5308 2812                                            l5340 2862  
                                          l5332 2E96                                            l5500 22CA  
                                          l5324 2F02                                            l5412 2580  
                                          l5404 2560                                            l5316 2EEE  
                                          l5420 24C6                                            l5166 1594  
                                          l5158 1530                                            l4702 2F36  
                                          l4710 2340                                            l5094 0AB0  
                                          l5086 0A4E                                            l5078 0A1A  
                                          l5262 0586                                            l5270 060C  
                                          l5190 019A                                            l5182 0180  
                                          l5174 0150                                            l5350 28A2  
                                          l5342 2862                                            l5502 22DE  
                                          l5510 18A6                                            l5326 2F20  
                                          l5414 25AA                                            l5406 2564  
                                          l5318 2EE4                                            l5430 24E8  
                                          l5422 24D6                                            ?_pad 0017  
                                          l4800 15EC                                            l4712 235E  
                                          l4704 2312                                            l4720 2BAA  
                                          l5088 0A5E                                            l5272 0632  
                                          l5280 0660                                            l5264 0594  
                                          l5256 0522                                            l5248 047A  
                                          l5184 0182                                            l5176 015E  
                                          l5360 2DEC                                            l5352 28B2  
                                          l5344 2884                                            l5336 2EAE  
                                          l5600 2724                                            l5504 22F0  
                                          l5440 2E7E                                            l5512 18AC  
                                          l5328 2F16                                            l5408 2568  
                                          l5432 24EC                                            l5424 24DC  
                                          l5416 24B6                                            l4810 162E  
                                          l4802 15F0                                            l4714 2394  
                                          l4706 2324                                            l4722 2BBC  
                                          l4730 2A34                                            l5098 0AEA  
                                          l5282 066E                                            l5274 0640  
                                          l5266 05D0                                            l5258 0548  
                                          l5194 01A0                                            l5186 0194  
                                          l5178 0170                                            l5354 28B6  
                                          l5346 288E                                            l5610 2774  
                                          l5602 2738                                            l5450 29AC  
                                          l5530 1922                                            l5522 18F2  
                                          l5514 18C8                                            l5434 24F8  
                                          l5426 24E0                                            l5418 24BA  
                                          l5370 240A                                            l4820 1688  
                                          l4812 164C                                            l4804 15FE  
                                          l4708 2336                                            l4724 2BC0  
                                          l4732 2A66                                            l4740 1F8E  
                                          l4900 1E20                                            l5276 0654  
                                          l5348 28A0                                            l5356 28B8  
                                          l5604 2744                                            l5700 10B0  
                                          l5508 2306                                            l5460 29CA  
                                          l5452 29AE                                            l5444 297A  
                                          l5540 19BE                                            l5524 18F8  
                                          l5516 18DC                                            l5532 1926  
                                          l5436 2504                                            l5428 24E4  
                                          l5380 2418                                            l5372 240C  
                                          l5364 23A8                                            l5620 2E5C  
                                          l5612 2E4C                                            l4822 16B6  
                                          l4814 1654                                            l4830 16F0  
                                          l4806 161E                                            l4718 2B9E  
                                          l4726 2A24                                            l4750 1FDE  
                                          l4742 1F9C                                            l4910 1EA2  
                                          l4902 1E34                                            l5198 01A6  
                                          l5286 067A                                            l5358 2DE2  
                                          l5606 275C                                            l5710 1122  
                                          l5702 10D4                                            l5470 2B30  
                                          l5462 29CE                                            l5454 29BE  
                                          l5446 297A                                            l5542 19E8  
                                          l5534 195C                                            l5526 1904  
                                          l5438 252E                                            l5390 2E66  
                                          l5382 241A                                            l5374 240E  
                                          l5366 23D0                                            l5622 2E60  
                                          l5614 2E50                                            l5632 2A84  
                                          l4920 2A1C                                            l4912 29D2  
                                          l4832 1700                                            l4824 16D6  
                                          l4816 1668                                            l4808 1622  
                                          l4840 1746                                            l4728 2A30  
                                          l4752 1FF2                                            l4744 1FB0  
                                          l4904 1E42                                            l4736 2CE2  
                                          l5288 06A0                                            l5624 262C  
                                          l5608 2770                                            l5552 1D18  
                                          l5800 1B26                                            l5720 11D2  
                                          l5712 1126                                            l5704 10D8  
                                          l5472 2B34                                            l5456 29C2  
                                          l5448 298C                                            l5536 1976  
                                          l5528 1910                                            l5640 19F6  
                                          l5392 2534                                            l5384 241C  
                                          l5376 2410                                            l5368 23E0  
                                          l5616 2E54                                            l5634 2A9E  
                                          l5626 2A74                                            l4914 29D6  
                                          l4834 1720                                            l4826 16D8  
                                          l4818 1676                                            l4850 17A6  
                                          l4842 1754                                            l4762 2C66  
                                          l4690 294A                                            l4754 1FF6  
                                          l4746 1FBE                                            l4930 071C  
                                          l4906 1E70                                            l4770 2CA6  
                                          l5570 1D86                                            l5554 1D1C  
                                          l5810 1B98                                            l5802 1B4A  
                                          l5730 126C                                            l5722 11FA  
                                          l5714 1132                                            l5706 10FC  
                                          l5474 2794                                            l5490 2272  
                                          l5466 2B0C                                            l5458 29C6  
                                          l5538 1992                                            l5650 1A3E  
                                          l5642 1A0A                                            l5394 2538  
                                          l5386 2F64                                            l5378 2416  
                                          l5618 2E58                                            l5740 2AD0  
                                          l5636 2AA2                                            l4916 29EA  
                                          l4828 16EA                                            l4860 181C  
                                          l4852 17C4                                            l4844 1774  
                                          l4764 2C80                                            l4692 295C  
                                          l4684 291E                                            l4756 2022  
                                          l4748 1FCA                                            l4940 0776  
                                          l4932 072C                                            l4924 06B4  
                                          l4908 1E90                                            l4780 2906  
                                          l5580 1DE4                                            l5572 1D98  
                                          l5564 1D68                                            l5556 1D38  
                                          l5820 1C02                                            l5812 1B9C  
                                          l5804 1B4E                                            l5732 1270  
                                          l5724 122A                                            l5716 11AC  
                                          l5708 1100                                            l5484 27AA  
                                          l5476 27A2                                            l5492 2286  
                                          l5468 2B20                                            l5548 19EE  
                                          l5660 1A72                                            l5652 1A52  
                                          l5396 2544                                            l5388 2E30  
                                          l5742 2AE0                                            l5734 2AC0  
                                          l4790 2E26                                            l4918 2A18  
                                          l4870 1884                                            l4862 183C  
                                          l4854 17CC                                            l4846 1778  
                                          l4838 1742                                            l4694 295E  
                                          l4686 291E                                            l4758 2036  
                                          l4950 07A2                                            l4942 0784  
                                          l4934 072E                                            l4926 06D4  
                                          l4766 2D1A                                            l4774 28BE  
                                          l5590 25CC                                            l5566 1D6E  
                                          l5558 1D52                                            l5574 1D9C  
                                          l5822 1C0E                                            l5814 1BB4  
                                          l5806 1B7A                                            l5726 1246  
                                          l5718 11B0                                            l5486 27DA  
                                          l5478 27A2                                            l5750 0C84  
                                          l5494 22A2                                            l5670 1ADE  
                                          l5662 1A78                                            l5646 1A22  
                                          l5654 1A58                                            l5638 19F2  
                                          l5398 2554                                            l5830 1ED0  
                                          l5744 2AE4                                            l4784 2D52  
                                          l4864 184E                                            l4856 17E0  
                                          l4848 1786                                            l4696 296E  
                                          l4688 2940                                            l4960 08AE  
                                          l4952 0824                                            l4944 078A  
                                          l4936 0748                                            l4928 06FC  
                                          l4880 1C5A                                            l5592 25FA  
                                          l5584 25B0                                            l5576 1DBA  
                                          l5568 1D7A                                            l5824 1C12  
                                          l5816 1BCC                                            l5808 1B7E  
                                          l5728 1260                                            l5488 27DE  
                                          l5760 0CF8                                            l5752 0CA8  
                                          l5496 22A6                                            l5672 1AF2  
                                          l5664 1A80                                            l5656 1A6A  
                                          l5648 1A3A                                            l5680 1B18  
                                          l5840 1EDA                                            l5832 1ED2  
                                          l5746 2B00                                            l4794 15BA  
                                          l4858 17EE                                            l4866 1854  
                                          l4698 2972                                            l4970 0920  
                                          l4962 08CC                                            l4954 082A  
                                          l4946 0792                                            l4938 0764  
                                          l4890 1CDC                                            l4882 1C6E  
                                          l4874 1C28                                            l4778 28F4  
                                          l5594 2600                                            l5586 25B0  
                                          l5578 1DD4                                            l5818 1BE8  
                                          l5770 0D4C                                            l5762 0CFC  
                                          l5754 0CAC                                            l5498 22AA  
                                          l5674 1B04                                            l5658 1A6E  
                                          l5666 1AA2                                            l5690 26C4  
                                          l5850 1EEA                                            l5842 1EDE  
                                          l5834 1ED4                                            l5826 1ECA  
                                          l4788 2E0A                                            l4796 15BE  
                                          l4868 1864                                            l4980 095A  
                                          l4972 092E                                            l4964 08E6  
                                          l4956 0830                                            l4948 079C  
                                          l4892 1CDE                                            l4884 1C7C  
                                          l4876 1C34                                            l5596 261E  
                                          l5588 25BE                                            l5780 0DE8  
                                          l5772 0D70                                            l5764 0D20  
                                          l5756 0CD0                                            l5748 0C6A  
                                          l5676 1B12                                            l5668 1ABA  
                                          l5692 26EE                                            l5684 26A8  
                                          l5860 1F24                                            l5852 1EFE  
                                          l5844 1EE2                                            l5836 1ED6  
                                          l5828 1ECE                                            l4798 15CC  
                                          l4974 0934                                            l4982 096A  
                                          l4966 0900                                            l4958 0894  
                                          l4990 12A0                                            l4894 1CF0  
                                          l4886 1C8E                                            l4878 1C52  
                                          l5598 2720                                            l5790 0E7A  
                                          l5774 0D80                                            l5782 0DEC  
                                          l5766 0D24                                            l5758 0CD4  
                                          l5694 26F4                                            l5686 26A8  
                                          l5854 1F06                                            l5846 1EE6  
                                          l5838 1ED8                                            l4976 0946  
                                          l4968 090E                                            l4992 12B2  
                                          l4888 1CBC                                            l4896 1DFA  
                                          l5792 0E86                                            l5784 0E14  
                                          l5776 0DB2                                            l5768 0D48  
                                          l5696 2712                                            l5688 26B6  
                                          l5856 1F18                                            l5848 1EEA  
                                          l4978 0952                                            l4994 12BA  
                                          l4986 1286                                            l4898 1E18  
                                          l5698 10A6                                            l5794 0E8A  
                                          l5786 0E44                                            l5778 0DBE  
                                          l5866 1F3E                                            l5858 1F1C  
                                          l5874 1F5E                                            l4996 12CE  
                                          l4988 1298                                            l5796 0E8E  
                                          l5788 0E60                                            l4998 12D6  
                                          l5798 1B1C                                            l5982 1F74  
                                          l5984 01E0                                            l5986 14E2  
                                          STR_1 FDB5                                            STR_2 FF40  
                                          STR_3 FE5A                                            STR_4 FFEA  
                                          STR_5 FFF6                                            STR_6 FEEC  
                                          STR_7 FE25                                            STR_8 FDEE  
                                          STR_9 FEA9                                            _LATA 000F83  
                                          _LATB 000F84                                            _LATC 000F85  
                                          u4000 2940                                            _LATD 000F86  
                                          u4001 293C                                            _LATE 000F87  
                                          u4010 296E                                            u4011 296A  
                                          u4020 2324                                            u4100 2D14  
                                          u4021 2320                                            u4030 2336  
                                          u4110 1F9C                                            u4031 2332  
                                          u4111 1F98                                            u5000 156C  
                                          u4040 235E                                            u4120 1FBE  
                                          u4200 28EE                                            u4041 235A  
                                          u4121 1FBA                                            u4201 28E8  
                                          u5010 1582                                            u4050 2394  
                                          u4130 2014                                            u4210 28F0  
                                          u5011 157E                                            u4051 2390  
                                          u4131 2010                                            u5020 1594  
                                          u4300 16B6                                            u4060 2BE0  
                                          u4140 2022                                            u4220 2906  
                                          u5100 0332                                            u5021 1590  
                                          u4301 16B2                                            u4061 2BDC  
                                          u4141 201E                                            u4221 2902  
                                          u5101 032E                                            u4230 2D82  
                                          u4310 1700                                            u4150 2C80  
                                          u4070 2A56                                            u5110 0358  
                                          u5030 0150                                            u4231 2D7C  
                                          u4311 16FC                                            u4151 2C7C  
                                          u5111 0354                                            u5031 014C  
                                          u4240 2D84                                            u4320 1754  
                                          u4080 2A66                                            u4400 1C7C  
                                          u4160 2D4A                                            u5120 037E  
                                          u5040 0220                                            u5200 2EAC  
                                          u4321 1750                                            u4081 2A62  
                                          u4401 1C78                                            u4161 2D44  
                                          u5121 037A                                            u5041 021C  
                                          u4250 15CC                                            u4330 1786  
                                          u4410 1CBC                                            u4170 2D4C  
                                          u4090 2D12                                            u5130 0424  
                                          u5050 022E                                            u5210 2EBE  
                                          u4251 15C8                                            u4331 1782  
                                          u4411 1CB8                                            u4091 2D0C  
                                          u5131 0420                                            u5051 022A  
                                          u5211 2EB8                                            u4260 15FE  
                                          u4340 17C4                                            u4500 072C  
                                          u4420 1E18                                            u4180 2CDA  
                                          u5140 04A0                                            u5060 0256  
                                          u5220 2874                                            u5300 27FA  
                                          u4261 15FA                                            u4341 17C0  
                                          u4077 2A4C                                            u4501 0728  
                                          u4421 1E14                                            u4181 2CD4  
                                          u5141 049C                                            u5061 0252  
                                          u5221 2870                                            u5301 27F6  
                                          u4350 17EE                                            u4510 0748  
                                          u4430 1E42                                            u4190 2CDC  
                                          u5150 0548                                            u5070 029A  
                                          u5230 2884                                            u5310 22CA  
                                          u4271 1628                                            u4351 17EA  
                                          u4511 0744                                            u4431 1E3E  
                                          u5151 0544                                            u5071 0296  
                                          u5231 2880                                            u5311 22C6  
                                          u4280 164C                                            u4360 181C  
                                          u4600 092E                                            u4520 0776  
                                          u4440 1E70                                            u5160 056E  
                                          u5080 0318                                            u5240 28B2  
                                          u5216 2EC0                                            u5400 1D98  
                                          u5320 22DE                                            u4281 1648  
                                          u4361 1818                                            u4601 092A  
                                          u4521 0772                                            u4441 1E6C  
                                          u5161 056A                                            u5081 0312  
                                          u5241 28AE                                            u5401 1D94  
                                          u5321 22DA                                            u4450 29EA  
                                          u4290 1676                                            u4370 1864  
                                          u4610 0946                                            u4530 0784  
                                          u5170 0632                                            u5090 031A  
                                          u5410 1DBA                                            u5330 2302  
                                          u5250 2E92                                            u4451 29E6  
                                          u4291 1672                                            u4371 1860  
                                          u4611 0942                                            u4531 0780  
                                          u5171 062E                                            u5411 1DB6  
                                          u5331 22FE                                            u5251 2E8C  
                                          u4460 2A18                                            u4540 08AE  
                                          u4700 13DC                                            u5180 2856  
                                          u5420 1DE4                                            u5260 2E94  
                                          u5340 18F2                                            u5500 1A52  
                                          _PMD0 000EE1                                            u4461 2A14  
                                          u4541 08AA                                            u4701 13D8  
                                          u4621 1290                                            u4381 1C2E  
                                          u5181 2852                                            u5421 1DE0  
                                          u5341 18EE                                            u5501 1A4E  
                                          _PMD1 000EE2                                            u4550 08CC  
                                          u4470 06E4                                            u4710 1416  
                                          u4630 12B2                                            u4390 1C52  
                                          u5430 261E                                            u5190 2EAA  
                                          u5270 298C                                            u5350 1922  
                                          u5510 1A6A                                            _PMD2 000EE3  
                                          u4551 08C8                                            u4471 06DE  
                                          u4711 1412                                            u4631 12AE  
                                          u4391 1C4E                                            u5431 261A  
                                          u5191 2EA4                                            u5271 2988  
                                          u5351 191E                                            u5511 1A66  
                                          _PMD3 000EE4                                            u4560 08E6  
                                          u4480 06E6                                            u4640 12E4  
                                          u4720 0EB4                                            u4800 09C0  
                                          u5440 2738                                            u5280 29BE  
                                          u5360 195C                                            u5520 1A90  
                                          u5600 1EFE                                            _PMD4 000EE5  
                                          u4561 08E2                                            u4641 12E0  
                                          u4721 0EB0                                            u4801 09BC  
                                          u5441 2734                                            u5281 29BA  
                                          u5361 1958                                            u5521 1A8A  
                                          u5601 1EFA                                            _PMD5 000EE6  
                                          u4570 0900                                            u4490 06FC  
                                          u4650 1302                                            u4730 0ED0  
                                          u4810 09EA                                            u5450 2770  
                                          u5290 2B54                                            u5370 19BE  
                                          u5530 1ABA                                            u4571 08FC  
                                          u4491 06F8                                            u4651 12FE  
                                          u4731 0ECC                                            u4811 09E6  
                                          u5451 276C                                            u5291 2B50  
                                          u5371 19BA                                            u5531 1AB6  
                                          u4580 090E                                            u4660 132C  
                                          u4740 101C                                            u4900 0BA6  
                                          u4820 0A4E                                            u5460 2792  
                                          u5380 19E8                                            u5540 1ACA  
                                          u4581 090A                                            u4661 1328  
                                          u4741 1018                                            u4901 0BA2  
                                          u4821 0A4A                                            u5461 278E  
                                          u5381 19E4                                            u5541 1AC4  
                                          u5470 2ABE                                            u4590 0920  
                                          u4670 1366                                            u4750 103A  
                                          u4910 0BC4                                            u4830 0A98  
                                          u5390 1D68                                            u5550 1AF2  
                                          u5526 1A92                                            u5471 2ABA  
                                          u4591 091C                                            u4671 1362  
                                          u4751 1036                                            u4911 0BC0  
                                          u4831 0A92                                            u5391 1D64  
                                          u5551 1AEE                                            u4680 1394  
                                          u4760 1054                                            u4920 0BDE  
                                          u4840 0A9A                                            u5480 1A0A  
                                          u5560 2712                                            u4761 1050  
                                          u4921 0BDA                                            u5481 1A06  
                                          u5561 270E                                            u4690 13CE  
                                          u4770 106E                                            u4930 0BF8  
                                          u4850 0AB0                                            u5570 11FA  
                                          u5546 1ACC                                            u5490 1A1E  
                                          u4691 13CA                                            u4771 106A  
                                          u4931 0BF4                                            u4851 0AAC  
                                          u5571 11F6                                            u5491 1A1A  
                                          u5580 2B00                                            u4780 107C  
                                          u4940 0C06                                            u4860 0AE4  
                                          u5581 2AFC                                            u4781 1078  
                                          u4941 0C02                                            u4861 0ADE  
                                          u3990 2930                                            u4950 0C14  
                                          u4870 0AE6                                            u4790 09A4  
                                          u5590 0E14                                            u3991 292C  
                                          u4687 138A                                            u4951 0C10  
                                          u4791 09A0                                            u5591 0E10  
                                          u4960 145A                                            u4880 0AFC  
                                          u4961 1456                                            u4881 0AF8  
                                          u4970 1492                                            u4890 0B64  
                                          u4971 148E                                            u4980 14AE  
                                          u4981 14AA                                            u4990 156A  
                                          u4991 1564                                            u4895 0B52  
                                          _WPUA 000F10                                            _WPUB 000F18  
                                          _WPUC 000F20                                            _WPUD 000F25  
                                          _WPUE 000F2D                           ??_EUSART2_Receive_ISR 0001  
                                 _EUSART1_Write 2860                                   __CFG_FCMEN$ON 000000  
                                 _EUSART2_Write 291C                              ClearModbusRespon@i 0005  
                                generateCRC@crc 0012                                            abs@a 0017  
                                          _dbuf 0164                                            _atoi 1420  
                                          _main 1ECA                                            _dtoa 06B4  
                                 ?_EUSART1_Read 0001                                            _prec 008C  
                                          _nout 0088                                            pad@i 001E  
                                          pad@p 001B                                            fsr0h 000FEA  
                                          fsr1h 000FE2                                            indf0 000FEF  
                                          fsr2h 000FDA                                            fsr0l 000FE9  
                                          indf1 000FE7                                            indf2 000FDF  
                                          fsr1l 000FE1                                            pad@w 0020  
                                          fsr2l 000FD9                                            _stoa 1286  
                                          btemp 005B                                            _utoa 0EA4  
                                          _xtoa 0994                                            prodh 000FF4  
                                          prodl 000FF3                                            start 0126  
                  __end_of_EUSART2_Transmit_ISR 2B9E                                   __CFG_CSWEN$ON 000000  
                           UART1_Write_string@i 000B                  fp__EUSART1_DefaultErrorHandler 0000  
                                  ___param_bank 000000                                   __CFG_SCANE$ON 000000  
                                         ??_abs 0019                                           ??_pad 001D  
                __size_of_OSCILLATOR_Initialize 0018                   __end_of_OSCILLATOR_Initialize 2E7E  
                         _eusart1RxStatusBuffer 0280                                 __end_of___aodiv 1742  
                                         ?_atoi 000C                                           ?_main 0001  
                                         ?_dtoa 0022                                 __end_of___aomod 18A6  
                                         STR_10 FFB2                                           STR_11 FF9D  
                                         STR_20 FF71                                           STR_12 FF09  
                                         STR_21 FF99                                           STR_13 FFDA  
                                         STR_22 FF88                                           STR_14 FF59  
                                         STR_23 FF25                                           STR_15 FE85  
                                         STR_16 FFC7                                           STR_17 FF71  
                                 __CFG_WDTE$OFF 000000                                           STR_18 FF99  
                                         STR_19 FECC                                ?_ClearModbusData 0001  
                                         ?_stoa 0010                                           ?_utoa 0022  
                               __end_of___lodiv 1D18                                           ?_xtoa 0022  
                               __end_of___lomod 1ECA                                  __CFG_DEBUG$OFF 000000  
                                         i2l150 0064                                           i2l152 009E  
                                         i2l153 0112                                           i2l154 00D8  
                                         i2l500 2F62                                           i2l333 2B98  
                                         i2l350 2F68                                           i2l343 210E  
                                         i2l159 0112                                           i2l336 2B9C  
                                         i2l353 2F44                                           i2l347 2DB4  
                                         i2l356 2F56                                           i2l480 2C24  
                                         i2l491 2DE0                                           i2l477 2C20  
                                         i2l494 2F6A                                           i2l487 21CE  
                                         i2l497 2F5C                     __size_of_EUSART1_is_tx_done 0014  
                                         _OSCEN 000EDC                                    vfpfcnvrt@fmt 004B  
                                  vfpfcnvrt@llu 00B4                                           _TRISA 000F88  
                                         _TRISB 000F89                                           _TRISC 000F8A  
                                         _TRISD 000F8B                                           _TRISE 000F8C  
                                         _Debug 009A                                   __CFG_WRT0$OFF 000000  
                                 __CFG_WRT1$OFF 000000                                   __CFG_WRT2$OFF 000000  
                                 __CFG_WRT3$OFF 000000                            _EUSART1_Transmit_ISR 2BE2  
                                __CFG_EBTR0$OFF 000000                                  __CFG_EBTR1$OFF 000000  
                                __CFG_EBTR2$OFF 000000                                  __CFG_EBTR3$OFF 000000  
                                 __CFG_WRTB$OFF 000000                                   __CFG_WRTC$OFF 000000  
                                 __CFG_WRTD$OFF 000000                                  __CFG_EBTRB$OFF 000000  
                                         _flags 0057                                           _fputc 2312  
                               __end_of_isalpha 2CE2                                           _fputs 2B9E  
                               __end_of_isdigit 2D8A                              __CFG_MCLRE$EXTMCLR 000000  
                                         atoi@n 0019                                           pad@fp 0017  
                                         atoi@s 000C                                           _width 008A  
                                         _putch 2F34                                           dtoa@d 0024  
                                         dtoa@i 0044                                           dtoa@n 003C  
                                         dtoa@p 0036                                           dtoa@s 003A  
                                         dtoa@w 0038                                 __end_of_islower 2D1A  
                               __end_of_isspace 2A24                                  ?_EUSART1_Write 0001  
                                ?_EUSART2_Write 0001                                 __end_of_isupper 2D52  
                                         pclath 000FFA                                           tablat 000FF5  
                                   _ClearRxBuff 2B0C                                  ??_EUSART1_Read 0005  
                                         plusw1 000FE3                                           plusw2 000FDB  
                                         stoa@i 001C                                           stoa@l 0024  
                                         stoa@p 0022                                           stoa@s 0012  
                                         stoa@w 001E                                           ttemp5 005C  
                                         ttemp6 005F                                           ttemp7 0063  
                                         utoa@d 0024                                           utoa@i 0040  
                                         utoa@n 0038                                           utoa@p 0034  
                                         utoa@w 0036                                           status 000FD8  
                                    _ModDataCnt 0096                                   ??_ModbusError 00D2  
                                         wtemp8 005C                                           xtoa@c 0047  
                                         xtoa@d 0024                                           xtoa@i 0045  
                                         xtoa@n 003D                                           xtoa@p 0039  
                                         xtoa@w 003B                                           xtoa@x 002C  
                               __end_of_toupper 291C                                ___lodiv@dividend 0005  
         fp__EUSART1_DefaultFramingErrorHandler 0000      __end_of_EUSART1_DefaultFramingErrorHandler 2F6C  
   __size_of_EUSART1_DefaultFramingErrorHandler 0002            ??_EUSART1_DefaultFramingErrorHandler 0001  
           ?_EUSART1_DefaultFramingErrorHandler 0001              _EUSART1_DefaultFramingErrorHandler 2F6A  
                                checkCRC@crcLow 00D5           __end_of_EUSART2_SetTxInterruptHandler 2EDA  
        __size_of_EUSART2_SetTxInterruptHandler 000A                   _EUSART2_SetTxInterruptHandler 2ED0  
                                  _toupper$1950 0011                                 __initialization 21D0  
                                  __end_of_atoi 15BA                      __end_of_EUSART1_Initialize 25B0  
                                  __end_of_main 1F8E                                    __end_of_dtoa 0994  
                     __size_of_InitialiseString 007C                                    __end_of_stoa 1420  
                                  __end_of_utoa 10A6                                    __end_of_xtoa 0C6A  
                   ?_INTERRUPT_InterruptManager 0001                                __end_of_ModbusRx 1B1C  
                                        ??_atoi 000E                                          ??_main 01C4  
                                        ??_dtoa 002C                                          ??_stoa 0014  
                                    _ModbusFC10 0C6A                                      _ModbusFC03 10A6  
                                        ??_utoa 002C                                          ??_xtoa 002D  
                                 __activetblptr 000003             __end_of_EUSART2_DefaultErrorHandler 2F58  
                   _EUSART2_DefaultErrorHandler 2F52                                      _ModbusData 0100  
                         ?_EUSART1_Transmit_ISR 0001                                ___lodiv@quotient 0015  
                    __end_of_EUSART2_Initialize 2534                        _eusart2TxBufferRemaining 00F2  
                                        ?_fputc 0007                                          ?_fputs 0010  
                                        _ANSELA 000F11                                          ?_putch 0001  
                                        _ANSELB 000F19                                          _ANSELC 000F21  
                                        _ANSELD 000F26                                          _ANSELE 000F2E  
                                        _RC1REG 000F99                                          _RC2REG 000E99  
                                        _RC1STA 000F9D                                          _RC2STA 000E9D  
                                        _RB6PPS 000EF5                                          _ODCONA 000F0F  
                                        _ODCONB 000F17                                          _ODCONC 000F1F  
                                        _RC6PPS 000EFD                                          _ODCOND 000F24  
                                        _ODCONE 000F2C                    __size_of_EUSART1_is_rx_ready 0018  
                                __CFG_WDTCCS$SC 000000                                          i2l4300 213E  
                                        i2l4036 2F3E                                          i2l4310 21AC  
                                        i2l4302 2158                                          i2l4038 2F52  
                                        i2l4312 21CA                                          i2l4304 2166  
                                        i2l4066 2F58                                          i2l4306 2176  
                                        i2l4250 2B56                                          i2l4068 2F5E  
                                        i2l4308 2190                                          i2l4260 2B92  
                                        i2l4252 2B68                                          i2l4270 2098  
                                        i2l4262 2050                                          i2l4254 2B7A  
                                        i2l4280 210A                                          i2l4272 20A8  
                                        i2l4264 2060                                          i2l4256 2B7E  
                                        i2l4520 0038                                          i2l4290 2C16  
                                        i2l4282 2BE2                                          i2l4274 20B8  
                                        i2l4266 2070                                          i2l4258 2B8E  
                                        i2l4530 00BA                                          i2l4522 0046  
                                        i2l4292 2C1A                                          i2l4284 2BF4  
                                        i2l3900 2D9A                                          i2l4276 20D0  
                                        i2l4268 2080                                          i2l4532 00E6  
                                        i2l4524 0072                                          i2l4516 001A  
                                        i2l4294 2110                                          i2l4286 2C04  
                                        i2l3902 2D9C                                          i2l4278 20EC  
                                        i2l4534 00F4                                          i2l4526 0080  
                                        i2l4518 0028                                          i2l4296 2120  
                                        i2l4288 2C06                                          i2l3904 2DAC  
                                        i2l4528 00AC                                          _INLVLA 000F0D  
                                        i2l4298 212E                                          i2l3906 2DB0  
                                        _INLVLB 000F15                                          _INLVLC 000F1D  
                                        _INLVLD 000F22                                          _INLVLE 000F2A  
                                        i2l3950 2DD8                                          i2l3952 2DDC  
                                        i2l3944 2DB6                                          i2l3946 2DC6  
                                        i2l3948 2DC8                                          i2l3898 2D8A  
                                        _TABLAT 000FF5                                          _OSCFRQ 000EDE  
                                 vfpfcnvrt@done 00B0                    __size_of_EUSART1_is_tx_ready 0018  
                                        _NVMDAT 000F80                                          _RX1PPS 000EB5  
                                        _RX2PPS 000E8D                                          _TX1REG 000F9A  
                                        _TX2REG 000E9A                                __end_of_checkCRC 19F2  
                                        _TX1STA 000F9E                                          _TX2STA 000E9E  
                                   ModbusFC10@i 00D6                                     ModbusFC10@j 00D8  
                                   ModbusFC03@i 00D4                                          _RXMode 2F46  
                                        _TXMode 2F4C                                          _RXStat 0099  
                                __CFG_PWRTE$OFF 000000                            __size_of_generateCRC 00E2  
                                        _ByteHi 008E                                          _ByteLo 00FA  
                            _UART1_Write_string 2720                                  __CFG_XINST$OFF 000000  
                                  vfprintf@cfmt 0053                       __CFG_RSTOSC$HFINTOSC_1MHZ 000000  
                            AddRxBuffToModBus@i 0006                                      _PrintMB400 2794  
                           __end_of_ModbusError 1C28                                       ??___aodiv 0015  
                                     ??___aomod 0015                                          ___wmul 2E0A  
                                __CFG_STVREN$ON 000000                                       ??___lodiv 0015  
                                     ??___lomod 0015                             ?_UART1_Write_string 0006  
                      ?_EUSART1_SetErrorHandler 0005                                          clear_0 2236  
                                        clear_1 2242                                          clear_2 224E  
                                        clear_3 225A                                          _rxData 0300  
                   _EUSART2_FramingErrorHandler 00E7                                          _printf 2DE2  
                                        pad@buf 0019                ??_EUSART1_SetOverrunErrorHandler 0007  
               ?_EUSART1_SetOverrunErrorHandler 0005                                          dtoa@fp 0022  
                                        _strlen 2A24                                   _ExpectedBytes 00FE  
                                        fputc@c 0007                                  _PMD_Initialize 2E30  
                                        fputs@c 0014                                          fputs@i 0015  
                                        fputs@s 0010                                       ??_isalpha 0007  
                                     ??_isdigit 0007                                   ??_PrintModbus 0055  
                                     ??_islower 0007                                    __mediumconst FDB4  
                                     ??_isspace 0007                                          tblptrh 000FF7  
                                     ??_isupper 0007                                          tblptrl 000FF6  
                                        tblptru 000FF8                            _EUSART2_Transmit_ISR 2B56  
                                        stoa@cp 0020                                          stoa@fp 0010  
                              __end_of_vfprintf 2860                                 ??_EUSART1_Write 0005  
                                        utoa@fp 0022                                 ??_EUSART2_Write 0005  
                                        xtoa@fp 0022                                 _eusart1RxBuffer 0364  
                                     ??_toupper 000D                            ??_UART1_Write_string 000A  
                 __size_of_INTERRUPT_Initialize 0004                                 _eusart2RxBuffer 0078  
                               _eusart1TxBuffer 0060                               _SYSTEM_Initialize 2E4C  
                       __size_of_PrintModRespon 007C                                 _eusart2TxBuffer 0080  
                                    __accesstop 0060                         __end_of__initialization 2268  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                               checkCRC@crcHigh 00D3                         ??_EUSART2_RxDataHandler 0001  
                __size_of_EUSART1_RxDataHandler 002C                   __end_of_EUSART1_RxDataHandler 2DE2  
                                __pcstackCOMRAM 0001                                    __pidataBANK0 2EC2  
                                  __pidataBANK1 2C26                                    __pidataBANK2 2436  
                           ??_SYSTEM_Initialize 0007                                   __end_of_fputc 23A8  
                                 __end_of_fputs 2BE2                  ?_EUSART2_SetTxInterruptHandler 0005  
                                 __end_of_putch 2F3E                          __end_of_PMD_Initialize 2E4C  
                          __end_of_EUSART1_Read 29D2                                     ?_ModbusFC10 0001  
                                   ?_ModbusFC03 0001                          ??_EUSART1_Transmit_ISR 0001  
                      ?_EUSART2_SetErrorHandler 0005                           ?_EUSART2_Transmit_ISR 0001  
                   __end_of_EUSART1_Receive_ISR 21D0                            ModbusError@ErrorCode 00D0  
                                       ??_fputc 000B                       __end_of_SYSTEM_Initialize 2E66  
                                       ??_fputs 0014                                         ??_putch 0006  
                                 _eusart1RxHead 0059                                   _eusart1TxHead 009F  
                                 _eusart2RxHead 005A                                   _eusart1RxTail 009D  
                                 _eusart2TxHead 00A4                                      __pbssBANK0 0060  
                                    __pbssBANK1 0100                                      __pbssBANK2 0280  
                                    __pbssBANK3 0300                                   _eusart2RxTail 00A2  
                                 _eusart1TxTail 009E               _EUSART1_TxDefaultInterruptHandler 00EB  
                                 _eusart2TxTail 00A3                 ??_EUSART1_SetRxInterruptHandler 0007  
                           __end_of_PrintModbus 2720                ??_EUSART2_SetFramingErrorHandler 0007  
               ?_EUSART2_SetFramingErrorHandler 0005                                     _ModbusError 1B1C  
                                     ?_ModbusRx 0001                                         ?_RXMode 0001  
                                       ?_TXMode 0001                 __end_of_EUSART1_SetErrorHandler 2F34  
                                   ?_PrintMB400 0001                                _InitialiseString 262C  
                                       ?___wmul 0005                                 __CFG_PPS1WAY$ON 000000  
                                       _MB300xx 0240                                         _MB400xx 0200  
                                       ?_printf 00C2                                 ?_PMD_Initialize 0001  
                             _ClearModbusRespon 2A74                                         ?_strlen 0005  
        __end_of_EUSART1_SetFramingErrorHandler 2F2A         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler 2F20                           _eusart2RxStatusBuffer 0070  
                                     ?_checkCRC 0001                              ?_ClearModbusRespon 0001  
                  ?_EUSART1_DefaultErrorHandler 0001                                         _SP1BRGH 000F9C  
                                       _SP1BRGL 000F9B                                         _SP2BRGH 000E9C  
                                       _SP2BRGL 000E9B                                         _OSCCON1 000ED8  
                                       _OSCCON3 000EDA                     __end_of_EUSART2_Receive_ISR 2110  
                            __size_of_vfpfcnvrt 058A                                         _TBLPTRH 000FF7  
                                       _TBLPTRL 000FF6                                         _TBLPTRU 000FF8  
                                       _NVMADRH 000F7F                                         _NVMADRL 000F7E  
                                       _OSCTUNE 000EDD                                         _NVMCON2 000F82  
                                       _SLRCONA 000F0E                                         _SLRCONB 000F16  
                                       _SLRCONC 000F1E                                         _SLRCOND 000F23  
                                       _SLRCONE 000F2B                             ??_ClearModbusRespon 0005  
                              ___lomod@dividend 0005                                    ?_ClearRxBuff 0001  
                                   PrintMB400@i 0055                               generateCRC@HiOrLo 0007  
                                    ??_ModbusRx 0055                                         _ByteNum 0092  
                           __size_of_ModbusFC10 023A                             __size_of_ModbusFC03 01E0  
                               __size_of_RXMode 0006                                 __size_of_TXMode 0006  
                                       __Hparam 0000                                         __Lparam 0000  
                fp__EUSART2_DefaultErrorHandler 0000                                         ___aodiv 15BA  
                                       ___aomod 1742                               generateCRC@crcLow 000C  
                               __size_of___wmul 0026                                         ___lodiv 1C28  
                                       ___lomod 1DFA                                       ?_vfprintf 00BC  
                     __end_of_ClearModbusRespon 2AC0                             _EUSART1_is_rx_ready 2E7E  
                    __end_of_EUSART1_is_tx_done 2EC2                                         __pcinit 21D0  
               __end_of_EUSART2_SetErrorHandler 2F02                                         __ramtop 0F00  
                           _EUSART1_is_tx_ready 2E96                                         __ptext0 1ECA  
                                       __ptext1 2E4C                                         __ptext2 2E30  
                                       __ptext3 23A8                                         __ptext4 2E66  
                                       __ptext5 2F64                                         __ptext6 24B6  
                                       __ptext7 2ED0                                         __ptext8 2EDA  
                                       __ptext9 2EE4                                 __size_of_printf 0028  
                               __size_of_strlen 0050                                      ??_checkCRC 00CE  
         fp__EUSART2_DefaultOverrunErrorHandler 0000      __end_of_EUSART2_DefaultOverrunErrorHandler 2F46  
   __size_of_EUSART2_DefaultOverrunErrorHandler 0008            ??_EUSART2_DefaultOverrunErrorHandler 0001  
           ?_EUSART2_DefaultOverrunErrorHandler 0001              _EUSART2_DefaultOverrunErrorHandler 2F3E  
                         _OSCILLATOR_Initialize 2E66                          ??_EUSART2_Transmit_ISR 0001  
                                  __size_of_abs 0040                                    __size_of_pad 00C2  
                                       _isalpha 2CA6                                         _isdigit 2D52  
                            _EUSART1_Initialize 2534                                         _islower 2CE2  
                      ??_PIN_MANAGER_Initialize 0005                                         _isspace 29D2  
                                   _PrintModbus 26A8                                         _isupper 2D1A  
                 ??_EUSART1_DefaultErrorHandler 0001                                         atoi@neg 0012  
                    __size_of_SYSTEM_Initialize 001A                        __size_of_ClearModbusData 004C  
                           __size_of_PrintMB400 0068                                         _toupper 28BE  
                          end_of_initialization 2268                            ?_EUSART1_is_rx_ready 0001  
                           ?_EUSART1_Initialize 0001                                  _PrintModRespon 25B0  
                          ?_EUSART1_is_tx_ready 0001                                         fputc@fp 0009  
                   _EUSART1_OverrunErrorHandler 00DF                                         fputs@fp 0012  
         __end_of_EUSART1_SetRxInterruptHandler 2F16          __size_of_EUSART1_SetRxInterruptHandler 000A  
                 _EUSART1_SetRxInterruptHandler 2F0C                              _EUSART2_Initialize 24B6  
                             __end_of_vfpfcnvrt 06B4                                         postdec1 000FE5  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                         __size_of_EUSART1_Read 0058                                      ??_vfprintf 0053  
                          ??_EUSART1_Initialize 0007                           __CFG_WDTCPS$WDTCPS_31 000000  
                           ?_EUSART2_Initialize 0001                                         strlen@a 0007  
                                       strlen@s 0005                                ClearModbusData@i 0005  
                       fp__EUSART1_Transmit_ISR 0000                          __end_of_PrintModRespon 262C  
              __size_of_EUSART1_SetErrorHandler 000A                             EUSART1_Write@txData 0005  
                              __CFG_FEXTOSC$OFF 000000                           ??_EUSART1_is_rx_ready 0005  
                          ??_EUSART2_Initialize 0007                           ??_EUSART1_is_tx_ready 0005  
                                 ??_generateCRC 0008                                    _EUSART1_Read 297A  
          __size_of_EUSART1_DefaultErrorHandler 0006                                  __end_of_RXMode 2F4C  
                                __end_of_TXMode 2F52                          UART1_Write_string@data 0006  
                __size_of_EUSART2_RxDataHandler 002C                   __end_of_EUSART2_RxDataHandler 2DB6  
                  __end_of_INTERRUPT_Initialize 2F68                      __size_of_ClearModbusRespon 004C  
                                   vfpfcnvrt@ap 004D                                     vfpfcnvrt@cp 00AD  
                                   vfpfcnvrt@fp 0049                                     vfpfcnvrt@ll 00A5  
                                __end_of___wmul 2E30                          ?_OSCILLATOR_Initialize 0001  
                                  ??_ModbusFC10 00D0                                    ??_ModbusFC03 00D0  
                                __end_of_printf 2E0A                                  __end_of_strlen 2A74  
                           start_initialization 21D0                                 ___lodiv@divisor 000D  
                               ___lodiv@counter 001D                 __size_of_PIN_MANAGER_Initialize 008E  
                                   __end_of_abs 2CA6                                     __end_of_pad 2050  
                      __end_of_InitialiseString 26A8   EUSART1_SetRxInterruptHandler@interruptHandler 0005  
 EUSART1_SetTxInterruptHandler@interruptHandler 0005   EUSART2_SetRxInterruptHandler@interruptHandler 0005  
 EUSART2_SetTxInterruptHandler@interruptHandler 0005                                 ?_PrintModRespon 0001  
                                   putch@txData 0006                           __end_of_EUSART1_Write 28BE  
                   __size_of_UART1_Write_string 0074                           __end_of_EUSART2_Write 297A  
                        fp__EUSART1_Receive_ISR 0000                                    ?_ModbusError 00D0  
              __size_of_EUSART2_SetErrorHandler 000A                                        ??_RXMode 0005  
                          __size_of_ClearRxBuff 004A                               ??_ClearModbusData 0005  
                                      ??_TXMode 0005          __end_of_EUSART2_SetOverrunErrorHandler 2EEE  
       __size_of_EUSART2_SetOverrunErrorHandler 000A                  _EUSART2_SetOverrunErrorHandler 2EE4  
                            __end_of_ModbusFC10 0EA4                              __end_of_ModbusFC03 1286  
                              __CFG_LPBOREN$OFF 000000                                    ClearRxBuff@i 0006  
                             __size_of_ModbusRx 012A                                     vfprintf@fmt 00BE  
                           __end_of_generateCRC 1DFA                                    ??_PrintMB400 0055  
                              ??_PMD_Initialize 0005                                        ??___wmul 0009  
                         _EUSART1_RxDataHandler 2DB6                  ?_EUSART1_SetRxInterruptHandler 0005  
                                   __pdataBANK0 00F3                                     __pdataBANK1 0184  
                                   __pdataBANK2 0200                                        ??_printf 0055  
                                      ??_strlen 0007                                  _eusart1RxCount 009C  
                                _eusart2RxCount 00A1                                     __pbssCOMRAM 0057  
             _EUSART1_RxDefaultInterruptHandler 00E9                   __size_of_EUSART1_Transmit_ISR 0044  
                                 __pcstackBANK0 00A5                                   __pcstackBANK1 01C4  
                              ___aodiv@dividend 0005                               __size_of_checkCRC 014C  
                       fp__EUSART2_Transmit_ISR 0000                               _AddRxBuffToModBus 2272  
                           EUSART2_Write@txData 0005                              __end_of_PrintMB400 27FC  
               ??_EUSART1_SetTxInterruptHandler 0007                              ?_AddRxBuffToModBus 0001  
              ??_EUSART1_SetFramingErrorHandler 0007                 ?_EUSART1_SetFramingErrorHandler 0005  
               ??_EUSART2_SetRxInterruptHandler 0007                    __size_of_EUSART1_Receive_ISR 00C0  
                        fp__EUSART2_Receive_ISR 0000                                       _atoi$1860 0018  
                                     _atoi$1861 0016                                       _atoi$1859 0014  
                                     __pnvBANK0 00DD                             ??_AddRxBuffToModBus 0005  
                        _PIN_MANAGER_Initialize 23A8                                       _dtoa$1355 0034  
                                     __pintcode 0008                                   __pmediumconst FDB4  
                                      ?___aodiv 0005                                        ?___aomod 0005  
                              ___aodiv@quotient 0017                                        ?___lodiv 0005  
                                      ?___lomod 0005               _EUSART2_TxDefaultInterruptHandler 00EF  
                  ??_INTERRUPT_InterruptManager 0001                               __size_of_vfprintf 0064  
                               ___lomod@divisor 000D                                        _BAUD1CON 000F9F  
                                      _BAUD2CON 000E9F                                       checkCRC@i 00DB  
                                     checkCRC@j 00D7                                 ___lomod@counter 0015  
         fp__EUSART1_DefaultOverrunErrorHandler 0000      __end_of_EUSART1_DefaultOverrunErrorHandler 2F5E  
   __size_of_EUSART1_DefaultOverrunErrorHandler 0006            ??_EUSART1_DefaultOverrunErrorHandler 0001  
           ?_EUSART1_DefaultOverrunErrorHandler 0001              _EUSART1_DefaultOverrunErrorHandler 2F58  
                                      ?_isalpha 0005                                        ?_isdigit 0005  
                          _EUSART1_ErrorHandler 00DD                    ?_EUSART2_DefaultErrorHandler 0001  
                                      ?_islower 0005                                        ?_isspace 0005  
                                  ?_PrintModbus 0001                       __end_of_AddRxBuffToModBus 2312  
                                      ?_isupper 0005                         _EUSART1_SetErrorHandler 2F2A  
                            _EUSART1_is_tx_done 2EAE                                  __size_of_fputc 0096  
                                __size_of_fputs 0044                                        ?_toupper 000B  
                                __size_of_putch 000A                            _INTERRUPT_Initialize 2F64  
                  __size_of_EUSART2_Receive_ISR 00C0                                     _generateCRC 1D18  
                                ___wmul@product 0009                                        _LATAbits 000F83  
       EUSART1_SetErrorHandler@interruptHandler 0005         EUSART2_SetErrorHandler@interruptHandler 0005  
                                      _LATDbits 000F86                             ?_EUSART1_is_tx_done 0001  
                                      _PIE3bits 000EC5                             __CFG_BORV$VBOR_2P45 000000  
                    UART1_Write_string@data_len 0008                                        _MBResCRC 00FC  
           __size_of_INTERRUPT_InterruptManager 011E                                        i2u331_40 2DD8  
                                      i2u331_41 2DD4                                        i2u324_40 2DAC  
                                      i2u324_41 2DA8                                        _MBResCnt 0090  
                                      i2u360_40 20A8                                        i2u360_41 20A4  
                                      i2u370_40 21AC                                        i2u362_40 20EC  
                                      i2u361_48 20BE                                        i2u370_41 21A8  
                                      i2u362_41 20E8                                        i2u361_49 20D0  
                                      i2u371_48 21B2                                        i2u364_40 2BF4  
                                      i2u363_48 20F2                                        i2u356_40 2B68  
                                      i2u371_49 21C6                                        i2u364_41 2BF0  
                                      i2u363_49 2106                                        i2u356_41 2B64  
                                      i2u365_40 2C16                                        i2u357_40 2B8E  
                                      i2u365_41 2C12                                        i2u357_41 2B8A  
                                      _PIR3bits 000ECD                                        i2u366_40 212E  
                                      i2u358_40 2070                                        i2u390_40 0080  
                                      i2u366_41 212A                                        i2u358_41 206C  
                                      i2u390_41 007C                                        i2u368_40 2166  
                                      i2u367_48 2144                                        i2u359_48 2086  
                                      i2u392_40 00AC                                        i2u391_48 0086  
                                      i2u368_41 2162                                        i2u367_49 2158  
                                      i2u359_49 2098                                        i2u392_41 00A8  
                                      i2u391_49 009A                                        i2u393_40 00BA  
                                      i2u385_40 0028                                        i2u393_41 00B6  
                                      i2u385_41 0024                                        i2u369_48 217C  
                                      i2u386_40 0038                                        i2u369_49 2190  
                                      i2u386_41 0034                                        i2u395_40 00E6  
                                      i2u394_48 00C0                                        i2u387_40 0046  
                                      i2u395_41 00E2                                        i2u394_49 00D4  
                                      i2u387_41 0042                                        i2u396_40 00F4  
                                      i2u396_41 00F0                                        i2u389_40 0072  
                                      i2u388_48 004C                                        i2u389_41 006E  
                                      i2u388_49 0060                                        _PIR7bits 000ED1  
                                      i2u397_48 00FA                                        i2u397_49 010E  
                                      _MBRespon 0184                          ?_EUSART1_RxDataHandler 0001  
                                     _vfpfcnvrt 012A                                       _xtoa$1384 0035  
                                     _xtoa$1385 0037                               ___wmul@multiplier 0005  
                          ??_EUSART1_is_tx_done 0005                                     checkCRC@crc 00D9  
                 __size_of_EUSART2_Transmit_ISR 0048                                    _isspace$1886 000B  
                 ??_EUSART2_DefaultErrorHandler 0001                                      vfpfcnvrt@c 00AF  
                                     copy_data0 21E4                                       copy_data1 2204  
                                     copy_data2 2224                              ModbusFC10@TempData 00D4  
                         ?_INTERRUPT_Initialize 0001                         _EUSART2_SetErrorHandler 2EF8  
                         EUSART1_Read@readValue 0005                     _EUSART2_OverrunErrorHandler 00E5  
                                      _ModbusRx 19F2                              generateCRC@MessCnt 0005  
         __end_of_EUSART1_SetTxInterruptHandler 2F0C          __size_of_EUSART1_SetTxInterruptHandler 000A  
                 _EUSART1_SetTxInterruptHandler 2F02                                        __Hrparam 0000  
         __end_of_EUSART2_SetRxInterruptHandler 2EE4          __size_of_EUSART2_SetRxInterruptHandler 000A  
                 _EUSART2_SetRxInterruptHandler 2EDA                            __size_of_ModbusError 010C  
                                    vfprintf@ap 00C0                                        __Lrparam 0000  
                                    vfprintf@fp 00BC                              __CFG_BOREN$SBORDIS 000000  
                       ??_OSCILLATOR_Initialize 0005                                __size_of___aodiv 0188  
                              __size_of___aomod 0164                              generateCRC@crcHigh 000A  
                              __size_of___lodiv 00F0                                __size_of___lomod 00D0  
                   __size_of_EUSART1_Initialize 007C                                      ?_vfpfcnvrt 0049  
                               ___aodiv@divisor 000D                                 ___aodiv@counter 0015  
                     ??_EUSART1_SetErrorHandler 0007                                        _checkCRC 18A6  
           __end_of_EUSART1_DefaultErrorHandler 2F64                     _EUSART1_DefaultErrorHandler 2F5E  
                              ??_PrintModRespon 0055                     __end_of_EUSART1_is_rx_ready 2E96  
                          _EUSART2_ErrorHandler 00E3                                __size_of_isalpha 003C  
                              __size_of_isdigit 0038                     __end_of_EUSART1_is_tx_ready 2EAE  
                    __size_of_AddRxBuffToModBus 00A0                                 _ClearModbusData 2AC0  
                              __size_of_islower 0038                                __size_of_isspace 0052  
                                      __ptext10 2EEE                                        __ptext11 2EF8  
                                      __ptext20 18A6                                        __ptext12 2534  
                                      __ptext21 2F46                                        __ptext13 2F02  
                                      __ptext30 1D18                                        __ptext22 2E7E  
                                      __ptext14 2F0C                                        __ptext31 2720  
                                      __ptext23 297A                                        __ptext15 2F16  
                                      __ptext40 012A                                        __ptext32 2F4C  
                                      __ptext24 2B0C                                        __ptext16 2F20  
                                      __ptext41 0994                                        __ptext33 2E96  
                                      __ptext25 2272                                        __ptext17 2F2A  
                                      __ptext50 06B4                                        __ptext42 28BE  
                                      __ptext34 2EAE                                        __ptext26 0C6A  
                                      __ptext18 26A8                                        __ptext51 1F8E  
                                      __ptext43 2CE2                                        __ptext35 2860  
                                      __ptext27 2794                                        __ptext19 19F2  
                                      __ptext60 1420                                        __ptext52 2A24  
                                      __ptext44 2D1A                                        __ptext36 25B0  
                                      __ptext28 10A6                                        __ptext61 29D2  
                                      __ptext53 2B9E                                        __ptext45 2CA6  
                                      __ptext37 262C                                        __ptext29 1B1C  
                                      __ptext70 2F68                                        __ptext62 2D52  
                                      __ptext54 2312                                        __ptext46 0EA4  
                                      __ptext38 2DE2                                        __ptext71 2F52  
                                      __ptext63 2E0A                                        __ptext55 2F34  
                                      __ptext47 1DFA                                        __ptext39 27FC  
                                      __ptext72 2D8A                                        __ptext64 2A74  
                                      __ptext56 291C                                        __ptext48 1C28  
                                      __ptext73 2BE2                                        __ptext65 2AC0  
                                      __ptext57 2C66                                        __ptext49 1286  
                                      __ptext74 2110                                        __ptext58 1742  
                                      __ptext75 2F58                                        __ptext67 2B56  
                                      __ptext59 15BA                                        __ptext76 2F6A  
                                      __ptext68 2050                                        __ptext77 2F5E  
                                      __ptext69 2F3E                                        __ptext78 2DB6  
                                      __ptext79 0000                                __size_of_isupper 0038  
                             ?_InitialiseString 0001                                __size_of_toupper 005E  
                   __size_of_EUSART2_Initialize 007E                              ??_InitialiseString 0055  
                                 __size_of_atoi 019A                                   __size_of_main 00C4  
                                 __size_of_dtoa 02E0                                   __size_of_stoa 019A  
         fp__EUSART2_DefaultFramingErrorHandler 0000      __end_of_EUSART2_DefaultFramingErrorHandler 2F6A  
   __size_of_EUSART2_DefaultFramingErrorHandler 0002            ??_EUSART2_DefaultFramingErrorHandler 0001  
           ?_EUSART2_DefaultFramingErrorHandler 0001              _EUSART2_DefaultFramingErrorHandler 2F68  
                                 __size_of_utoa 0202                                   __size_of_xtoa 02D6  
                          __CFG_WDTCWS$WDTCWS_7 000000                                    PrintModbus@i 00CE  
          __size_of_EUSART2_DefaultErrorHandler 0006                                      _RC1STAbits 000F9D  
                                     stoa@F1139 00F3                                      _RC2STAbits 000E9D  
EUSART1_SetOverrunErrorHandler@interruptHandler 0005  EUSART2_SetOverrunErrorHandler@interruptHandler 0005  
                               PrintModRespon@i 00CE                                        _rxStatus 0098  
                                      int$flags 005B                                        _vfprintf 27FC  
            __end_of_INTERRUPT_InterruptManager 0126                      _INTERRUPT_InterruptManager 0008  
                         _EUSART2_RxDataHandler 2D8A                                       printf@fmt 00C2  
                   _EUSART1_FramingErrorHandler 00E1                             _EUSART1_Receive_ISR 2110  
                              ___aomod@dividend 0005                ??_EUSART2_SetOverrunErrorHandler 0007  
               ?_EUSART2_SetOverrunErrorHandler 0005                                  _vfpfcnvrt$1399 00B2  
                                    _INTCONbits 000FF2                                     _NVMCON1bits 000F81  
                                      isalpha@c 0005                      __end_of_UART1_Write_string 2794  
                                      isdigit@c 0005                          ??_INTERRUPT_Initialize 0005  
                     ??_EUSART2_SetErrorHandler 0007                            __size_of_PrintModbus 0078  
                                      intlevel2 0000                                   ??_ClearRxBuff 0005  
                          ?_EUSART1_Receive_ISR 0001                                        islower@c 0005  
                                      isspace@c 0005                         ?_PIN_MANAGER_Initialize 0001  
                             __CFG_CLKOUTEN$OFF 000000          __end_of_EUSART1_SetOverrunErrorHandler 2F20  
       __size_of_EUSART1_SetOverrunErrorHandler 000A                  _EUSART1_SetOverrunErrorHandler 2F16  
                                      isupper@c 0005                    __end_of_EUSART1_Transmit_ISR 2C26  
                                      printf@ap 00CC  EUSART1_SetFramingErrorHandler@interruptHandler 0005  
EUSART2_SetFramingErrorHandler@interruptHandler 0005                  ?_EUSART1_SetTxInterruptHandler 0005  
                ?_EUSART2_SetRxInterruptHandler 0005                                 ___aomod@divisor 000D  
                                   ??_vfpfcnvrt 004F                                        stoa@nuls 0015  
                               ___aomod@counter 0015                          __size_of_EUSART1_Write 005E  
                            _eusart1RxLastError 009B                          __size_of_EUSART2_Write 005E  
                           _EUSART2_Receive_ISR 2050                         __end_of_ClearModbusData 2B0C  
                                      toupper@c 000B                                      _TX1STAbits 000F9E  
                                    _TX2STAbits 000E9E                                    ___aodiv@sign 0016  
                         ??_EUSART1_Receive_ISR 0001                  __end_of_PIN_MANAGER_Initialize 2436  
               ??_EUSART2_SetTxInterruptHandler 0007                            ?_EUSART2_Receive_ISR 0001  
                            _eusart2RxLastError 00A0                                    ?_generateCRC 0005  
                       ??_EUSART1_RxDataHandler 0001                                    ___aomod@sign 0016  
             _EUSART2_RxDefaultInterruptHandler 00ED                             __end_of_ClearRxBuff 2B56  
