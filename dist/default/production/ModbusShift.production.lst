

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Mar 02 22:28:26 2021

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F46K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    83                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    84  0000                     
    85                           ; Version 2.10
    86                           ; Generated 31/07/2019 GMT
    87                           ; 
    88                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    89                           ; All rights reserved.
    90                           ; 
    91                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    92                           ; 
    93                           ; Redistribution and use in source and binary forms, with or without modification, are
    94                           ; permitted provided that the following conditions are met:
    95                           ; 
    96                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    97                           ;        conditions and the following disclaimer.
    98                           ; 
    99                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   100                           ;        of conditions and the following disclaimer in the documentation and/or other
   101                           ;        materials provided with the distribution.
   102                           ; 
   103                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   104                           ;        software without specific prior written permission.
   105                           ; 
   106                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   107                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   108                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   109                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   110                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   111                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   112                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   113                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   114                           ; 
   115                           ; 
   116                           ; Code-generator required, PIC18F46K40 Definitions
   117                           ; 
   118                           ; SFR Addresses
   119  0000                     
   120                           	psect	idataBANK0
   121  0022F8                     __pidataBANK0:
   122                           	opt callstack 0
   123                           
   124                           ;initializer for _data1
   125  0022F8  11                 	db	17
   126  0022F9  03                 	db	3
   127  0022FA  06                 	db	6
   128  0022FB  AE                 	db	174
   129  0022FC  41                 	db	65
   130  0022FD  56                 	db	86
   131  0022FE  52                 	db	82
   132  0022FF  43                 	db	67
   133  002300  40                 	db	64
   134  002301  49                 	db	73
   135  002302  AD                 	db	173
   136                           
   137                           ;initializer for stoa@F1139
   138  002303  28                 	db	40
   139  002304  6E                 	db	110
   140  002305  75                 	db	117
   141  002306  6C                 	db	108
   142  002307  6C                 	db	108
   143  002308  29                 	db	41
   144  002309  00                 	db	0
   145                           
   146                           ;initializer for _ExpectedBytes
   147  00230A  0008               	dw	8
   148                           
   149                           	psect	nvBANK0
   150  0000CC                     __pnvBANK0:
   151                           	opt callstack 0
   152  0000CC                     _EUSART1_ErrorHandler:
   153                           	opt callstack 0
   154  0000CC                     	ds	2
   155  0000CE                     _EUSART1_OverrunErrorHandler:
   156                           	opt callstack 0
   157  0000CE                     	ds	2
   158  0000D0                     _EUSART1_FramingErrorHandler:
   159                           	opt callstack 0
   160  0000D0                     	ds	2
   161  0000D2                     _EUSART2_ErrorHandler:
   162                           	opt callstack 0
   163  0000D2                     	ds	2
   164  0000D4                     _EUSART2_OverrunErrorHandler:
   165                           	opt callstack 0
   166  0000D4                     	ds	2
   167  0000D6                     _EUSART2_FramingErrorHandler:
   168                           	opt callstack 0
   169  0000D6                     	ds	2
   170  0000D8                     _EUSART1_RxDefaultInterruptHandler:
   171                           	opt callstack 0
   172  0000D8                     	ds	2
   173  0000DA                     _EUSART1_TxDefaultInterruptHandler:
   174                           	opt callstack 0
   175  0000DA                     	ds	2
   176  0000DC                     _EUSART2_RxDefaultInterruptHandler:
   177                           	opt callstack 0
   178  0000DC                     	ds	2
   179  0000DE                     _EUSART2_TxDefaultInterruptHandler:
   180                           	opt callstack 0
   181  0000DE                     	ds	2
   182  0000E0                     _eusart1TxBufferRemaining:
   183                           	opt callstack 0
   184  0000E0                     	ds	1
   185  0000E1                     _eusart2TxBufferRemaining:
   186                           	opt callstack 0
   187  0000E1                     	ds	1
   188  0000                     _RC2REG	set	3737
   189  0000                     _RC2STAbits	set	3741
   190  0000                     _TX2REG	set	3738
   191  0000                     _TX2STAbits	set	3742
   192  0000                     _SP2BRGH	set	3740
   193  0000                     _SP2BRGL	set	3739
   194  0000                     _TX2STA	set	3742
   195  0000                     _RC2STA	set	3741
   196  0000                     _BAUD2CON	set	3743
   197  0000                     _PIR7bits	set	3793
   198  0000                     _PIR3bits	set	3789
   199  0000                     _PIE3bits	set	3781
   200  0000                     _PMD5	set	3814
   201  0000                     _PMD4	set	3813
   202  0000                     _PMD3	set	3812
   203  0000                     _PMD2	set	3811
   204  0000                     _PMD1	set	3810
   205  0000                     _PMD0	set	3809
   206  0000                     _OSCTUNE	set	3805
   207  0000                     _OSCFRQ	set	3806
   208  0000                     _OSCEN	set	3804
   209  0000                     _OSCCON3	set	3802
   210  0000                     _OSCCON1	set	3800
   211  0000                     _RX2PPS	set	3725
   212  0000                     _RC6PPS	set	3837
   213  0000                     _RB6PPS	set	3829
   214  0000                     _RX1PPS	set	3765
   215  0000                     _INLVLE	set	3882
   216  0000                     _INLVLD	set	3874
   217  0000                     _INLVLC	set	3869
   218  0000                     _INLVLB	set	3861
   219  0000                     _INLVLA	set	3853
   220  0000                     _SLRCONE	set	3883
   221  0000                     _SLRCOND	set	3875
   222  0000                     _SLRCONC	set	3870
   223  0000                     _SLRCONB	set	3862
   224  0000                     _SLRCONA	set	3854
   225  0000                     _ODCOND	set	3876
   226  0000                     _ODCONC	set	3871
   227  0000                     _ODCONB	set	3863
   228  0000                     _ODCONA	set	3855
   229  0000                     _ODCONE	set	3884
   230  0000                     _WPUC	set	3872
   231  0000                     _WPUA	set	3856
   232  0000                     _WPUB	set	3864
   233  0000                     _WPUE	set	3885
   234  0000                     _WPUD	set	3877
   235  0000                     _ANSELA	set	3857
   236  0000                     _ANSELE	set	3886
   237  0000                     _ANSELB	set	3865
   238  0000                     _ANSELC	set	3873
   239  0000                     _ANSELD	set	3878
   240  0000                     _LATAbits	set	3971
   241  0000                     _LATDbits	set	3974
   242  0000                     _RC1REG	set	3993
   243  0000                     _RC1STAbits	set	3997
   244  0000                     _TX1REG	set	3994
   245  0000                     _TX1STAbits	set	3998
   246  0000                     _SP1BRGH	set	3996
   247  0000                     _SP1BRGL	set	3995
   248  0000                     _TX1STA	set	3998
   249  0000                     _RC1STA	set	3997
   250  0000                     _BAUD1CON	set	3999
   251  0000                     _NVMDAT	set	3968
   252  0000                     _NVMADRL	set	3966
   253  0000                     _NVMADRH	set	3967
   254  0000                     _NVMCON2	set	3970
   255  0000                     _TABLAT	set	4085
   256  0000                     _TBLPTRL	set	4086
   257  0000                     _TBLPTRH	set	4087
   258  0000                     _TBLPTRU	set	4088
   259  0000                     _NVMCON1bits	set	3969
   260  0000                     _INTCONbits	set	4082
   261  0000                     _TRISD	set	3979
   262  0000                     _TRISC	set	3978
   263  0000                     _TRISB	set	3977
   264  0000                     _TRISA	set	3976
   265  0000                     _TRISE	set	3980
   266  0000                     _LATC	set	3973
   267  0000                     _LATB	set	3972
   268  0000                     _LATA	set	3971
   269  0000                     _LATD	set	3974
   270  0000                     _LATE	set	3975
   271                           
   272                           	psect	mediumconst
   273  00FE7E                     __pmediumconst:
   274                           	opt callstack 0
   275  00FE7E  00                 	db	0
   276  00FE7F                     STR_1:
   277                           
   278                           ; BSR set to: 0
   279  00FE7F  0D                 	db	13
   280  00FE80  44                 	db	68	;'D'
   281  00FE81  61                 	db	97	;'a'
   282  00FE82  6E                 	db	110	;'n'
   283  00FE83  20                 	db	32
   284  00FE84  61                 	db	97	;'a'
   285  00FE85  6E                 	db	110	;'n'
   286  00FE86  64                 	db	100	;'d'
   287  00FE87  20                 	db	32
   288  00FE88  53                 	db	83	;'S'
   289  00FE89  61                 	db	97	;'a'
   290  00FE8A  6D                 	db	109	;'m'
   291  00FE8B  27                 	db	39
   292  00FE8C  73                 	db	115	;'s'
   293  00FE8D  20                 	db	32
   294  00FE8E  4D                 	db	77	;'M'
   295  00FE8F  6F                 	db	111	;'o'
   296  00FE90  64                 	db	100	;'d'
   297  00FE91  62                 	db	98	;'b'
   298  00FE92  75                 	db	117	;'u'
   299  00FE93  73                 	db	115	;'s'
   300  00FE94  20                 	db	32
   301  00FE95  47                 	db	71	;'G'
   302  00FE96  50                 	db	80	;'P'
   303  00FE97  49                 	db	73	;'I'
   304  00FE98  4F                 	db	79	;'O'
   305  00FE99  20                 	db	32
   306  00FE9A  45                 	db	69	;'E'
   307  00FE9B  78                 	db	120	;'x'
   308  00FE9C  70                 	db	112	;'p'
   309  00FE9D  61                 	db	97	;'a'
   310  00FE9E  6E                 	db	110	;'n'
   311  00FE9F  73                 	db	115	;'s'
   312  00FEA0  69                 	db	105	;'i'
   313  00FEA1  6F                 	db	111	;'o'
   314  00FEA2  6E                 	db	110	;'n'
   315  00FEA3  20                 	db	32
   316  00FEA4  2D                 	db	45
   317  00FEA5  20                 	db	32
   318  00FEA6  41                 	db	65	;'A'
   319  00FEA7  50                 	db	80	;'P'
   320  00FEA8  30                 	db	48	;'0'
   321  00FEA9  30                 	db	48	;'0'
   322  00FEAA  30                 	db	48	;'0'
   323  00FEAB  78                 	db	120	;'x'
   324  00FEAC  78                 	db	120	;'x'
   325  00FEAD  78                 	db	120	;'x'
   326  00FEAE  78                 	db	120	;'x'
   327  00FEAF  78                 	db	120	;'x'
   328  00FEB0  20                 	db	32
   329  00FEB1  56                 	db	86	;'V'
   330  00FEB2  30                 	db	48	;'0'
   331  00FEB3  2E                 	db	46
   332  00FEB4  31                 	db	49	;'1'
   333  00FEB5  0D                 	db	13
   334  00FEB6  0A                 	db	10
   335  00FEB7  00                 	db	0
   336  00FEB8                     STR_8:
   337                           
   338                           ; BSR set to: 0
   339  00FEB8  0D                 	db	13
   340  00FEB9  20                 	db	32
   341  00FEBA  20                 	db	32
   342  00FEBB  20                 	db	32
   343  00FEBC  30                 	db	48	;'0'
   344  00FEBD  78                 	db	120	;'x'
   345  00FEBE  31                 	db	49	;'1'
   346  00FEBF  30                 	db	48	;'0'
   347  00FEC0  20                 	db	32
   348  00FEC1  2D                 	db	45
   349  00FEC2  20                 	db	32
   350  00FEC3  57                 	db	87	;'W'
   351  00FEC4  72                 	db	114	;'r'
   352  00FEC5  69                 	db	105	;'i'
   353  00FEC6  74                 	db	116	;'t'
   354  00FEC7  65                 	db	101	;'e'
   355  00FEC8  20                 	db	32
   356  00FEC9  4D                 	db	77	;'M'
   357  00FECA  75                 	db	117	;'u'
   358  00FECB  6C                 	db	108	;'l'
   359  00FECC  74                 	db	116	;'t'
   360  00FECD  69                 	db	105	;'i'
   361  00FECE  70                 	db	112	;'p'
   362  00FECF  6C                 	db	108	;'l'
   363  00FED0  65                 	db	101	;'e'
   364  00FED1  20                 	db	32
   365  00FED2  52                 	db	82	;'R'
   366  00FED3  65                 	db	101	;'e'
   367  00FED4  67                 	db	103	;'g'
   368  00FED5  69                 	db	105	;'i'
   369  00FED6  73                 	db	115	;'s'
   370  00FED7  74                 	db	116	;'t'
   371  00FED8  65                 	db	101	;'e'
   372  00FED9  72                 	db	114	;'r'
   373  00FEDA  73                 	db	115	;'s'
   374  00FEDB  20                 	db	32
   375  00FEDC  28                 	db	40
   376  00FEDD  4D                 	db	77	;'M'
   377  00FEDE  61                 	db	97	;'a'
   378  00FEDF  78                 	db	120	;'x'
   379  00FEE0  20                 	db	32
   380  00FEE1  33                 	db	51	;'3'
   381  00FEE2  32                 	db	50	;'2'
   382  00FEE3  78                 	db	120	;'x'
   383  00FEE4  20                 	db	32
   384  00FEE5  31                 	db	49	;'1'
   385  00FEE6  36                 	db	54	;'6'
   386  00FEE7  62                 	db	98	;'b'
   387  00FEE8  69                 	db	105	;'i'
   388  00FEE9  74                 	db	116	;'t'
   389  00FEEA  29                 	db	41
   390  00FEEB  0D                 	db	13
   391  00FEEC  0A                 	db	10
   392  00FEED  0A                 	db	10
   393  00FEEE  00                 	db	0
   394  00FEEF                     STR_7:
   395                           
   396                           ; BSR set to: 0
   397  00FEEF  0D                 	db	13
   398  00FEF0  20                 	db	32
   399  00FEF1  20                 	db	32
   400  00FEF2  20                 	db	32
   401  00FEF3  30                 	db	48	;'0'
   402  00FEF4  78                 	db	120	;'x'
   403  00FEF5  30                 	db	48	;'0'
   404  00FEF6  33                 	db	51	;'3'
   405  00FEF7  20                 	db	32
   406  00FEF8  2D                 	db	45
   407  00FEF9  20                 	db	32
   408  00FEFA  52                 	db	82	;'R'
   409  00FEFB  65                 	db	101	;'e'
   410  00FEFC  61                 	db	97	;'a'
   411  00FEFD  64                 	db	100	;'d'
   412  00FEFE  20                 	db	32
   413  00FEFF  4D                 	db	77	;'M'
   414  00FF00  75                 	db	117	;'u'
   415  00FF01  6C                 	db	108	;'l'
   416  00FF02  74                 	db	116	;'t'
   417  00FF03  69                 	db	105	;'i'
   418  00FF04  70                 	db	112	;'p'
   419  00FF05  6C                 	db	108	;'l'
   420  00FF06  65                 	db	101	;'e'
   421  00FF07  20                 	db	32
   422  00FF08  52                 	db	82	;'R'
   423  00FF09  65                 	db	101	;'e'
   424  00FF0A  67                 	db	103	;'g'
   425  00FF0B  69                 	db	105	;'i'
   426  00FF0C  73                 	db	115	;'s'
   427  00FF0D  74                 	db	116	;'t'
   428  00FF0E  65                 	db	101	;'e'
   429  00FF0F  72                 	db	114	;'r'
   430  00FF10  73                 	db	115	;'s'
   431  00FF11  20                 	db	32
   432  00FF12  28                 	db	40
   433  00FF13  4D                 	db	77	;'M'
   434  00FF14  61                 	db	97	;'a'
   435  00FF15  78                 	db	120	;'x'
   436  00FF16  20                 	db	32
   437  00FF17  33                 	db	51	;'3'
   438  00FF18  32                 	db	50	;'2'
   439  00FF19  78                 	db	120	;'x'
   440  00FF1A  20                 	db	32
   441  00FF1B  31                 	db	49	;'1'
   442  00FF1C  36                 	db	54	;'6'
   443  00FF1D  62                 	db	98	;'b'
   444  00FF1E  69                 	db	105	;'i'
   445  00FF1F  74                 	db	116	;'t'
   446  00FF20  29                 	db	41
   447  00FF21  0D                 	db	13
   448  00FF22  0A                 	db	10
   449  00FF23  00                 	db	0
   450  00FF24                     STR_3:
   451                           
   452                           ; BSR set to: 0
   453  00FF24  0D                 	db	13
   454  00FF25  43                 	db	67	;'C'
   455  00FF26  6F                 	db	111	;'o'
   456  00FF27  6D                 	db	109	;'m'
   457  00FF28  70                 	db	112	;'p'
   458  00FF29  69                 	db	105	;'i'
   459  00FF2A  6C                 	db	108	;'l'
   460  00FF2B  65                 	db	101	;'e'
   461  00FF2C  64                 	db	100	;'d'
   462  00FF2D  20                 	db	32
   463  00FF2E  6F                 	db	111	;'o'
   464  00FF2F  6E                 	db	110	;'n'
   465  00FF30  20                 	db	32
   466  00FF31  25                 	db	37
   467  00FF32  73                 	db	115	;'s'
   468  00FF33  20                 	db	32
   469  00FF34  61                 	db	97	;'a'
   470  00FF35  74                 	db	116	;'t'
   471  00FF36  20                 	db	32
   472  00FF37  25                 	db	37
   473  00FF38  73                 	db	115	;'s'
   474  00FF39  20                 	db	32
   475  00FF3A  62                 	db	98	;'b'
   476  00FF3B  79                 	db	121	;'y'
   477  00FF3C  20                 	db	32
   478  00FF3D  58                 	db	88	;'X'
   479  00FF3E  43                 	db	67	;'C'
   480  00FF3F  38                 	db	56	;'8'
   481  00FF40  20                 	db	32
   482  00FF41  76                 	db	118	;'v'
   483  00FF42  65                 	db	101	;'e'
   484  00FF43  72                 	db	114	;'r'
   485  00FF44  73                 	db	115	;'s'
   486  00FF45  69                 	db	105	;'i'
   487  00FF46  6F                 	db	111	;'o'
   488  00FF47  6E                 	db	110	;'n'
   489  00FF48  20                 	db	32
   490  00FF49  25                 	db	37
   491  00FF4A  75                 	db	117	;'u'
   492  00FF4B  0D                 	db	13
   493  00FF4C  0A                 	db	10
   494  00FF4D  0A                 	db	10
   495  00FF4E  00                 	db	0
   496  00FF4F                     STR_9:
   497                           
   498                           ; BSR set to: 0
   499  00FF4F  0D                 	db	13
   500  00FF50  49                 	db	73	;'I'
   501  00FF51  6E                 	db	110	;'n'
   502  00FF52  69                 	db	105	;'i'
   503  00FF53  74                 	db	116	;'t'
   504  00FF54  61                 	db	97	;'a'
   505  00FF55  6C                 	db	108	;'l'
   506  00FF56  69                 	db	105	;'i'
   507  00FF57  73                 	db	115	;'s'
   508  00FF58  61                 	db	97	;'a'
   509  00FF59  74                 	db	116	;'t'
   510  00FF5A  69                 	db	105	;'i'
   511  00FF5B  6F                 	db	111	;'o'
   512  00FF5C  6E                 	db	110	;'n'
   513  00FF5D  20                 	db	32
   514  00FF5E  43                 	db	67	;'C'
   515  00FF5F  6F                 	db	111	;'o'
   516  00FF60  6D                 	db	109	;'m'
   517  00FF61  70                 	db	112	;'p'
   518  00FF62  6C                 	db	108	;'l'
   519  00FF63  65                 	db	101	;'e'
   520  00FF64  74                 	db	116	;'t'
   521  00FF65  65                 	db	101	;'e'
   522  00FF66  20                 	db	32
   523  00FF67  2D                 	db	45
   524  00FF68  20                 	db	32
   525  00FF69  52                 	db	82	;'R'
   526  00FF6A  65                 	db	101	;'e'
   527  00FF6B  61                 	db	97	;'a'
   528  00FF6C  64                 	db	100	;'d'
   529  00FF6D  79                 	db	121	;'y'
   530  00FF6E  0D                 	db	13
   531  00FF6F  0A                 	db	10
   532  00FF70  0A                 	db	10
   533  00FF71  00                 	db	0
   534  00FF72                     STR_10:
   535                           
   536                           ; BSR set to: 0
   537  00FF72  0D                 	db	13
   538  00FF73  0A                 	db	10
   539  00FF74  4D                 	db	77	;'M'
   540  00FF75  6F                 	db	111	;'o'
   541  00FF76  64                 	db	100	;'d'
   542  00FF77  62                 	db	98	;'b'
   543  00FF78  75                 	db	117	;'u'
   544  00FF79  73                 	db	115	;'s'
   545  00FF7A  20                 	db	32
   546  00FF7B  44                 	db	68	;'D'
   547  00FF7C  61                 	db	97	;'a'
   548  00FF7D  74                 	db	116	;'t'
   549  00FF7E  61                 	db	97	;'a'
   550  00FF7F  20                 	db	32
   551  00FF80  43                 	db	67	;'C'
   552  00FF81  61                 	db	97	;'a'
   553  00FF82  70                 	db	112	;'p'
   554  00FF83  74                 	db	116	;'t'
   555  00FF84  75                 	db	117	;'u'
   556  00FF85  72                 	db	114	;'r'
   557  00FF86  65                 	db	101	;'e'
   558  00FF87  20                 	db	32
   559  00FF88  43                 	db	67	;'C'
   560  00FF89  6F                 	db	111	;'o'
   561  00FF8A  6D                 	db	109	;'m'
   562  00FF8B  70                 	db	112	;'p'
   563  00FF8C  6C                 	db	108	;'l'
   564  00FF8D  65                 	db	101	;'e'
   565  00FF8E  74                 	db	116	;'t'
   566  00FF8F  65                 	db	101	;'e'
   567  00FF90  3A                 	db	58	;':'
   568  00FF91  0D                 	db	13
   569  00FF92  0A                 	db	10
   570  00FF93  00                 	db	0
   571  00FF94                     STR_11:
   572                           
   573                           ; BSR set to: 0
   574  00FF94  20                 	db	32
   575  00FF95  20                 	db	32
   576  00FF96  20                 	db	32
   577  00FF97  42                 	db	66	;'B'
   578  00FF98  79                 	db	121	;'y'
   579  00FF99  74                 	db	116	;'t'
   580  00FF9A  65                 	db	101	;'e'
   581  00FF9B  20                 	db	32
   582  00FF9C  4E                 	db	78	;'N'
   583  00FF9D  75                 	db	117	;'u'
   584  00FF9E  6D                 	db	109	;'m'
   585  00FF9F  3A                 	db	58	;':'
   586  00FFA0  20                 	db	32
   587  00FFA1  25                 	db	37
   588  00FFA2  69                 	db	105	;'i'
   589  00FFA3  20                 	db	32
   590  00FFA4  56                 	db	86	;'V'
   591  00FFA5  61                 	db	97	;'a'
   592  00FFA6  6C                 	db	108	;'l'
   593  00FFA7  3A                 	db	58	;':'
   594  00FFA8  20                 	db	32
   595  00FFA9  30                 	db	48	;'0'
   596  00FFAA  78                 	db	120	;'x'
   597  00FFAB  25                 	db	37
   598  00FFAC  30                 	db	48	;'0'
   599  00FFAD  32                 	db	50	;'2'
   600  00FFAE  78                 	db	120	;'x'
   601  00FFAF  20                 	db	32
   602  00FFB0  0D                 	db	13
   603  00FFB1  0A                 	db	10
   604  00FFB2  00                 	db	0
   605  00FFB3                     STR_6:
   606                           
   607                           ; BSR set to: 0
   608  00FFB3  0D                 	db	13
   609  00FFB4  46                 	db	70	;'F'
   610  00FFB5  75                 	db	117	;'u'
   611  00FFB6  6E                 	db	110	;'n'
   612  00FFB7  63                 	db	99	;'c'
   613  00FFB8  74                 	db	116	;'t'
   614  00FFB9  69                 	db	105	;'i'
   615  00FFBA  6F                 	db	111	;'o'
   616  00FFBB  6E                 	db	110	;'n'
   617  00FFBC  20                 	db	32
   618  00FFBD  43                 	db	67	;'C'
   619  00FFBE  6F                 	db	111	;'o'
   620  00FFBF  64                 	db	100	;'d'
   621  00FFC0  65                 	db	101	;'e'
   622  00FFC1  73                 	db	115	;'s'
   623  00FFC2  20                 	db	32
   624  00FFC3  53                 	db	83	;'S'
   625  00FFC4  75                 	db	117	;'u'
   626  00FFC5  70                 	db	112	;'p'
   627  00FFC6  70                 	db	112	;'p'
   628  00FFC7  6F                 	db	111	;'o'
   629  00FFC8  72                 	db	114	;'r'
   630  00FFC9  74                 	db	116	;'t'
   631  00FFCA  65                 	db	101	;'e'
   632  00FFCB  64                 	db	100	;'d'
   633  00FFCC  3A                 	db	58	;':'
   634  00FFCD  0D                 	db	13
   635  00FFCE  0A                 	db	10
   636  00FFCF  00                 	db	0
   637  00FFD0                     STR_2:
   638                           
   639                           ; BSR set to: 0
   640  00FFD0  0D                 	db	13
   641  00FFD1  43                 	db	67	;'C'
   642  00FFD2  61                 	db	97	;'a'
   643  00FFD3  72                 	db	114	;'r'
   644  00FFD4  64                 	db	100	;'d'
   645  00FFD5  20                 	db	32
   646  00FFD6  53                 	db	83	;'S'
   647  00FFD7  65                 	db	101	;'e'
   648  00FFD8  72                 	db	114	;'r'
   649  00FFD9  20                 	db	32
   650  00FFDA  4E                 	db	78	;'N'
   651  00FFDB  6F                 	db	111	;'o'
   652  00FFDC  2E                 	db	46
   653  00FFDD  20                 	db	32
   654  00FFDE  78                 	db	120	;'x'
   655  00FFDF  78                 	db	120	;'x'
   656  00FFE0  78                 	db	120	;'x'
   657  00FFE1  78                 	db	120	;'x'
   658  00FFE2  78                 	db	120	;'x'
   659  00FFE3  78                 	db	120	;'x'
   660  00FFE4  78                 	db	120	;'x'
   661  00FFE5  20                 	db	32
   662  00FFE6  0D                 	db	13
   663  00FFE7  0A                 	db	10
   664  00FFE8  00                 	db	0
   665  00FFE9                     STR_4:
   666                           
   667                           ; BSR set to: 0
   668  00FFE9  4D                 	db	77	;'M'
   669  00FFEA  61                 	db	97	;'a'
   670  00FFEB  72                 	db	114	;'r'
   671  00FFEC  20                 	db	32
   672  00FFED  20                 	db	32
   673  00FFEE  32                 	db	50	;'2'
   674  00FFEF  20                 	db	32
   675  00FFF0  32                 	db	50	;'2'
   676  00FFF1  30                 	db	48	;'0'
   677  00FFF2  32                 	db	50	;'2'
   678  00FFF3  31                 	db	49	;'1'
   679  00FFF4  00                 	db	0
   680  00FFF5                     STR_5:
   681                           
   682                           ; BSR set to: 0
   683  00FFF5  32                 	db	50	;'2'
   684  00FFF6  32                 	db	50	;'2'
   685  00FFF7  3A                 	db	58	;':'
   686  00FFF8  32                 	db	50	;'2'
   687  00FFF9  38                 	db	56	;'8'
   688  00FFFA  3A                 	db	58	;':'
   689  00FFFB  31                 	db	49	;'1'
   690  00FFFC  33                 	db	51	;'3'
   691  00FFFD  00                 	db	0
   692                           
   693                           ; #config settings
   694  00FFFE  00                 	db	0	; dummy byte at the end
   695  0000                     
   696                           	psect	cinit
   697  001EB6                     __pcinit:
   698                           	opt callstack 0
   699  001EB6                     start_initialization:
   700                           	opt callstack 0
   701  001EB6                     __initialization:
   702                           	opt callstack 0
   703                           
   704                           ; Initialize objects allocated to BANK0 (20 bytes)
   705                           ; load TBLPTR registers with __pidataBANK0
   706  001EB6  0EF8               	movlw	low __pidataBANK0
   707  001EB8  6EF6               	movwf	tblptrl,c
   708  001EBA  0E22               	movlw	high __pidataBANK0
   709  001EBC  6EF7               	movwf	tblptrh,c
   710  001EBE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   711  001EC0  6EF8               	movwf	tblptru,c
   712  001EC2  EE00  F0E2         	lfsr	0,__pdataBANK0
   713  001EC6  EE10 F014          	lfsr	1,20
   714  001ECA                     copy_data0:
   715  001ECA  0009               	tblrd		*+
   716  001ECC  CFF5 FFEE          	movff	tablat,postinc0
   717  001ED0  50E5               	movf	postdec1,w,c
   718  001ED2  50E1               	movf	fsr1l,w,c
   719  001ED4  E1FA               	bnz	copy_data0
   720                           
   721                           ; Clear objects allocated to BANK2 (200 bytes)
   722  001ED6  EE02  F000         	lfsr	0,__pbssBANK2
   723  001EDA  0EC8               	movlw	200
   724  001EDC                     clear_0:
   725  001EDC  6AEE               	clrf	postinc0,c
   726  001EDE  06E8               	decf	wreg,f,c
   727  001EE0  E1FD               	bnz	clear_0
   728                           
   729                           ; Clear objects allocated to BANK1 (232 bytes)
   730  001EE2  EE01  F000         	lfsr	0,__pbssBANK1
   731  001EE6  0EE8               	movlw	232
   732  001EE8                     clear_1:
   733  001EE8  6AEE               	clrf	postinc0,c
   734  001EEA  06E8               	decf	wreg,f,c
   735  001EEC  E1FD               	bnz	clear_1
   736                           
   737                           ; Clear objects allocated to BANK0 (64 bytes)
   738  001EEE  EE00  F060         	lfsr	0,__pbssBANK0
   739  001EF2  0E40               	movlw	64
   740  001EF4                     clear_2:
   741  001EF4  6AEE               	clrf	postinc0,c
   742  001EF6  06E8               	decf	wreg,f,c
   743  001EF8  E1FD               	bnz	clear_2
   744                           
   745                           ; Clear objects allocated to COMRAM (4 bytes)
   746  001EFA  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   747  001EFC  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
   748  001EFE  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
   749  001F00  6A57               	clrf	__pbssCOMRAM& (0+255),c
   750  001F02                     end_of_initialization:
   751                           	opt callstack 0
   752  001F02                     __end_of__initialization:
   753                           	opt callstack 0
   754  001F02  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   755  001F04  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   756  001F06  0100               	movlb	0
   757  001F08  EF46  F00A         	goto	_main	;jump to C main() function
   758                           
   759                           	psect	bssCOMRAM
   760  000057                     __pbssCOMRAM:
   761                           	opt callstack 0
   762  000057                     _flags:
   763                           	opt callstack 0
   764  000057                     	ds	2
   765  000059                     _eusart1RxHead:
   766                           	opt callstack 0
   767  000059                     	ds	1
   768  00005A                     _eusart2RxHead:
   769                           	opt callstack 0
   770  00005A                     	ds	1
   771                           
   772                           	psect	bssBANK0
   773  000060                     __pbssBANK0:
   774                           	opt callstack 0
   775  000060                     _eusart1TxBuffer:
   776                           	opt callstack 0
   777  000060                     	ds	16
   778  000070                     _eusart2RxStatusBuffer:
   779                           	opt callstack 0
   780  000070                     	ds	8
   781  000078                     _eusart2RxBuffer:
   782                           	opt callstack 0
   783  000078                     	ds	8
   784  000080                     _eusart2TxBuffer:
   785                           	opt callstack 0
   786  000080                     	ds	8
   787  000088                     _nout:
   788                           	opt callstack 0
   789  000088                     	ds	2
   790  00008A                     _width:
   791                           	opt callstack 0
   792  00008A                     	ds	2
   793  00008C                     _prec:
   794                           	opt callstack 0
   795  00008C                     	ds	2
   796  00008E                     _ModDataCnt:
   797                           	opt callstack 0
   798  00008E                     	ds	2
   799  000090                     _ByteNum:
   800                           	opt callstack 0
   801  000090                     	ds	2
   802  000092                     _loop:
   803                           	opt callstack 0
   804  000092                     	ds	2
   805  000094                     _rxStatus:
   806                           	opt callstack 0
   807  000094                     	ds	1
   808  000095                     _Debug:
   809                           	opt callstack 0
   810  000095                     	ds	1
   811  000096                     _eusart1RxLastError:
   812                           	opt callstack 0
   813  000096                     	ds	1
   814  000097                     _eusart1RxCount:
   815                           	opt callstack 0
   816  000097                     	ds	1
   817  000098                     _eusart1RxTail:
   818                           	opt callstack 0
   819  000098                     	ds	1
   820  000099                     _eusart1TxTail:
   821                           	opt callstack 0
   822  000099                     	ds	1
   823  00009A                     _eusart1TxHead:
   824                           	opt callstack 0
   825  00009A                     	ds	1
   826  00009B                     _eusart2RxLastError:
   827                           	opt callstack 0
   828  00009B                     	ds	1
   829  00009C                     _eusart2RxCount:
   830                           	opt callstack 0
   831  00009C                     	ds	1
   832  00009D                     _eusart2RxTail:
   833                           	opt callstack 0
   834  00009D                     	ds	1
   835  00009E                     _eusart2TxTail:
   836                           	opt callstack 0
   837  00009E                     	ds	1
   838  00009F                     _eusart2TxHead:
   839                           	opt callstack 0
   840  00009F                     	ds	1
   841                           
   842                           	psect	dataBANK0
   843  0000E2                     __pdataBANK0:
   844                           	opt callstack 0
   845  0000E2                     _data1:
   846                           	opt callstack 0
   847  0000E2                     	ds	11
   848  0000ED                     stoa@F1139:
   849                           	opt callstack 0
   850  0000ED                     	ds	7
   851  0000F4                     _ExpectedBytes:
   852                           	opt callstack 0
   853  0000F4                     	ds	2
   854                           
   855                           	psect	bssBANK1
   856  000100                     __pbssBANK1:
   857                           	opt callstack 0
   858  000100                     _ModbusData:
   859                           	opt callstack 0
   860  000100                     	ds	100
   861  000164                     _eusart1RxStatusBuffer:
   862                           	opt callstack 0
   863  000164                     	ds	100
   864  0001C8                     _dbuf:
   865                           	opt callstack 0
   866  0001C8                     	ds	32
   867                           
   868                           	psect	bssBANK2
   869  000200                     __pbssBANK2:
   870                           	opt callstack 0
   871  000200                     _rxData:
   872                           	opt callstack 0
   873  000200                     	ds	100
   874  000264                     _eusart1RxBuffer:
   875                           	opt callstack 0
   876  000264                     	ds	100
   877                           
   878                           	psect	cstackBANK0
   879  0000A0                     __pcstackBANK0:
   880                           	opt callstack 0
   881  0000A0                     vfpfcnvrt@ll:
   882                           	opt callstack 0
   883                           
   884                           ; 8 bytes @ 0x0
   885  0000A0                     	ds	8
   886  0000A8                     vfpfcnvrt@cp:
   887                           	opt callstack 0
   888                           
   889                           ; 2 bytes @ 0x8
   890  0000A8                     	ds	2
   891  0000AA                     vfpfcnvrt@done:
   892                           	opt callstack 0
   893                           
   894                           ; 2 bytes @ 0xA
   895  0000AA                     	ds	2
   896  0000AC                     _vfpfcnvrt$1265:
   897                           	opt callstack 0
   898                           
   899                           ; 2 bytes @ 0xC
   900  0000AC                     	ds	2
   901  0000AE                     vfpfcnvrt@c:
   902                           	opt callstack 0
   903                           
   904                           ; 1 bytes @ 0xE
   905  0000AE                     	ds	1
   906  0000AF                     vfpfcnvrt@llu:
   907                           	opt callstack 0
   908                           
   909                           ; 8 bytes @ 0xF
   910  0000AF                     	ds	8
   911  0000B7                     ?_vfprintf:
   912                           	opt callstack 0
   913  0000B7                     vfprintf@fp:
   914                           	opt callstack 0
   915                           
   916                           ; 2 bytes @ 0x17
   917  0000B7                     	ds	2
   918  0000B9                     vfprintf@fmt:
   919                           	opt callstack 0
   920                           
   921                           ; 2 bytes @ 0x19
   922  0000B9                     	ds	2
   923  0000BB                     vfprintf@ap:
   924                           	opt callstack 0
   925                           
   926                           ; 2 bytes @ 0x1B
   927  0000BB                     	ds	2
   928  0000BD                     ?_printf:
   929                           	opt callstack 0
   930  0000BD                     printf@fmt:
   931                           	opt callstack 0
   932                           
   933                           ; 2 bytes @ 0x1D
   934  0000BD                     	ds	10
   935  0000C7                     printf@ap:
   936                           	opt callstack 0
   937                           
   938                           ; 2 bytes @ 0x27
   939  0000C7                     	ds	2
   940  0000C9                     PrintModbus@i:
   941                           	opt callstack 0
   942                           
   943                           ; 2 bytes @ 0x29
   944  0000C9                     	ds	2
   945  0000CB                     main@RXStat:
   946                           	opt callstack 0
   947                           
   948                           ; 1 bytes @ 0x2B
   949  0000CB                     	ds	1
   950                           
   951                           	psect	cstackCOMRAM
   952  000001                     __pcstackCOMRAM:
   953                           	opt callstack 0
   954  000001                     ??_INTERRUPT_InterruptManager:
   955  000001                     
   956                           ; 1 bytes @ 0x0
   957  000001                     	ds	4
   958  000005                     ??_ClearRxBuff:
   959  000005                     ??_AddRxBuffToModBus:
   960  000005                     ?_strlen:
   961                           	opt callstack 0
   962  000005                     ?_isupper:
   963                           	opt callstack 0
   964  000005                     ?_isalpha:
   965                           	opt callstack 0
   966  000005                     ?_isdigit:
   967                           	opt callstack 0
   968  000005                     ?_isspace:
   969                           	opt callstack 0
   970  000005                     ?_islower:
   971                           	opt callstack 0
   972  000005                     ?___wmul:
   973                           	opt callstack 0
   974  000005                     ?___aodiv:
   975                           	opt callstack 0
   976  000005                     ?___aomod:
   977                           	opt callstack 0
   978  000005                     ?___lodiv:
   979                           	opt callstack 0
   980  000005                     ?___lomod:
   981                           	opt callstack 0
   982  000005                     EUSART2_Write@txData:
   983                           	opt callstack 0
   984  000005                     EUSART1_Read@readValue:
   985                           	opt callstack 0
   986  000005                     EUSART2_SetFramingErrorHandler@interruptHandler:
   987                           	opt callstack 0
   988  000005                     EUSART2_SetOverrunErrorHandler@interruptHandler:
   989                           	opt callstack 0
   990  000005                     EUSART2_SetErrorHandler@interruptHandler:
   991                           	opt callstack 0
   992  000005                     EUSART2_SetTxInterruptHandler@interruptHandler:
   993                           	opt callstack 0
   994  000005                     EUSART2_SetRxInterruptHandler@interruptHandler:
   995                           	opt callstack 0
   996  000005                     EUSART1_SetFramingErrorHandler@interruptHandler:
   997                           	opt callstack 0
   998  000005                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   999                           	opt callstack 0
  1000  000005                     EUSART1_SetErrorHandler@interruptHandler:
  1001                           	opt callstack 0
  1002  000005                     EUSART1_SetTxInterruptHandler@interruptHandler:
  1003                           	opt callstack 0
  1004  000005                     EUSART1_SetRxInterruptHandler@interruptHandler:
  1005                           	opt callstack 0
  1006  000005                     ___wmul@multiplier:
  1007                           	opt callstack 0
  1008  000005                     isalpha@c:
  1009                           	opt callstack 0
  1010  000005                     isdigit@c:
  1011                           	opt callstack 0
  1012  000005                     isspace@c:
  1013                           	opt callstack 0
  1014  000005                     isupper@c:
  1015                           	opt callstack 0
  1016  000005                     strlen@s:
  1017                           	opt callstack 0
  1018  000005                     islower@c:
  1019                           	opt callstack 0
  1020  000005                     ___aodiv@dividend:
  1021                           	opt callstack 0
  1022  000005                     ___aomod@dividend:
  1023                           	opt callstack 0
  1024  000005                     ___lodiv@dividend:
  1025                           	opt callstack 0
  1026  000005                     ___lomod@dividend:
  1027                           	opt callstack 0
  1028                           
  1029                           ; 8 bytes @ 0x4
  1030  000005                     	ds	1
  1031  000006                     putch@txData:
  1032                           	opt callstack 0
  1033  000006                     ClearRxBuff@i:
  1034                           	opt callstack 0
  1035  000006                     AddRxBuffToModBus@i:
  1036                           	opt callstack 0
  1037                           
  1038                           ; 2 bytes @ 0x5
  1039  000006                     	ds	1
  1040  000007                     ??_isupper:
  1041  000007                     ??_isalpha:
  1042  000007                     ??_isdigit:
  1043  000007                     ??_isspace:
  1044  000007                     ??_islower:
  1045  000007                     ___wmul@multiplicand:
  1046                           	opt callstack 0
  1047  000007                     fputc@c:
  1048                           	opt callstack 0
  1049  000007                     strlen@a:
  1050                           	opt callstack 0
  1051                           
  1052                           ; 2 bytes @ 0x6
  1053  000007                     	ds	2
  1054  000009                     ___wmul@product:
  1055                           	opt callstack 0
  1056  000009                     fputc@fp:
  1057                           	opt callstack 0
  1058                           
  1059                           ; 2 bytes @ 0x8
  1060  000009                     	ds	2
  1061  00000B                     ??_fputc:
  1062  00000B                     ?_toupper:
  1063                           	opt callstack 0
  1064  00000B                     _isspace$1752:
  1065                           	opt callstack 0
  1066  00000B                     toupper@c:
  1067                           	opt callstack 0
  1068                           
  1069                           ; 2 bytes @ 0xA
  1070  00000B                     	ds	1
  1071  00000C                     ?_atoi:
  1072                           	opt callstack 0
  1073  00000C                     atoi@s:
  1074                           	opt callstack 0
  1075                           
  1076                           ; 2 bytes @ 0xB
  1077  00000C                     	ds	1
  1078  00000D                     ??_toupper:
  1079  00000D                     ___aodiv@divisor:
  1080                           	opt callstack 0
  1081  00000D                     ___aomod@divisor:
  1082                           	opt callstack 0
  1083  00000D                     ___lodiv@divisor:
  1084                           	opt callstack 0
  1085  00000D                     ___lomod@divisor:
  1086                           	opt callstack 0
  1087                           
  1088                           ; 8 bytes @ 0xC
  1089  00000D                     	ds	1
  1090  00000E                     ??_atoi:
  1091                           
  1092                           ; 1 bytes @ 0xD
  1093  00000E                     	ds	2
  1094  000010                     ?_stoa:
  1095                           	opt callstack 0
  1096  000010                     stoa@fp:
  1097                           	opt callstack 0
  1098  000010                     fputs@s:
  1099                           	opt callstack 0
  1100                           
  1101                           ; 2 bytes @ 0xF
  1102  000010                     	ds	1
  1103  000011                     _toupper$1816:
  1104                           	opt callstack 0
  1105                           
  1106                           ; 2 bytes @ 0x10
  1107  000011                     	ds	1
  1108  000012                     stoa@s:
  1109                           	opt callstack 0
  1110  000012                     atoi@neg:
  1111                           	opt callstack 0
  1112  000012                     fputs@fp:
  1113                           	opt callstack 0
  1114                           
  1115                           ; 2 bytes @ 0x11
  1116  000012                     	ds	2
  1117  000014                     ??_stoa:
  1118  000014                     fputs@c:
  1119                           	opt callstack 0
  1120  000014                     _atoi$1725:
  1121                           	opt callstack 0
  1122                           
  1123                           ; 2 bytes @ 0x13
  1124  000014                     	ds	1
  1125  000015                     ___aodiv@counter:
  1126                           	opt callstack 0
  1127  000015                     ___aomod@counter:
  1128                           	opt callstack 0
  1129  000015                     ___lomod@counter:
  1130                           	opt callstack 0
  1131  000015                     fputs@i:
  1132                           	opt callstack 0
  1133  000015                     stoa@nuls:
  1134                           	opt callstack 0
  1135  000015                     ___lodiv@quotient:
  1136                           	opt callstack 0
  1137                           
  1138                           ; 8 bytes @ 0x14
  1139  000015                     	ds	1
  1140  000016                     ___aodiv@sign:
  1141                           	opt callstack 0
  1142  000016                     ___aomod@sign:
  1143                           	opt callstack 0
  1144  000016                     _atoi$1727:
  1145                           	opt callstack 0
  1146                           
  1147                           ; 2 bytes @ 0x15
  1148  000016                     	ds	1
  1149  000017                     ?_abs:
  1150                           	opt callstack 0
  1151  000017                     ?_pad:
  1152                           	opt callstack 0
  1153  000017                     pad@fp:
  1154                           	opt callstack 0
  1155  000017                     abs@a:
  1156                           	opt callstack 0
  1157  000017                     ___aodiv@quotient:
  1158                           	opt callstack 0
  1159                           
  1160                           ; 8 bytes @ 0x16
  1161  000017                     	ds	1
  1162  000018                     _atoi$1726:
  1163                           	opt callstack 0
  1164                           
  1165                           ; 1 bytes @ 0x17
  1166  000018                     	ds	1
  1167  000019                     ??_abs:
  1168  000019                     pad@buf:
  1169                           	opt callstack 0
  1170  000019                     atoi@n:
  1171                           	opt callstack 0
  1172                           
  1173                           ; 2 bytes @ 0x18
  1174  000019                     	ds	2
  1175  00001B                     pad@p:
  1176                           	opt callstack 0
  1177                           
  1178                           ; 2 bytes @ 0x1A
  1179  00001B                     	ds	1
  1180  00001C                     stoa@i:
  1181                           	opt callstack 0
  1182                           
  1183                           ; 2 bytes @ 0x1B
  1184  00001C                     	ds	1
  1185  00001D                     ??_pad:
  1186  00001D                     ___lodiv@counter:
  1187                           	opt callstack 0
  1188                           
  1189                           ; 1 bytes @ 0x1C
  1190  00001D                     	ds	1
  1191  00001E                     pad@i:
  1192                           	opt callstack 0
  1193  00001E                     stoa@w:
  1194                           	opt callstack 0
  1195                           
  1196                           ; 2 bytes @ 0x1D
  1197  00001E                     	ds	2
  1198  000020                     pad@w:
  1199                           	opt callstack 0
  1200  000020                     stoa@cp:
  1201                           	opt callstack 0
  1202                           
  1203                           ; 2 bytes @ 0x1F
  1204  000020                     	ds	2
  1205  000022                     ?_dtoa:
  1206                           	opt callstack 0
  1207  000022                     ?_utoa:
  1208                           	opt callstack 0
  1209  000022                     ?_xtoa:
  1210                           	opt callstack 0
  1211  000022                     dtoa@fp:
  1212                           	opt callstack 0
  1213  000022                     stoa@p:
  1214                           	opt callstack 0
  1215  000022                     utoa@fp:
  1216                           	opt callstack 0
  1217  000022                     xtoa@fp:
  1218                           	opt callstack 0
  1219                           
  1220                           ; 2 bytes @ 0x21
  1221  000022                     	ds	2
  1222  000024                     stoa@l:
  1223                           	opt callstack 0
  1224  000024                     dtoa@d:
  1225                           	opt callstack 0
  1226  000024                     utoa@d:
  1227                           	opt callstack 0
  1228  000024                     xtoa@d:
  1229                           	opt callstack 0
  1230                           
  1231                           ; 8 bytes @ 0x23
  1232  000024                     	ds	8
  1233  00002C                     ??_dtoa:
  1234  00002C                     ??_utoa:
  1235  00002C                     xtoa@x:
  1236                           	opt callstack 0
  1237                           
  1238                           ; 1 bytes @ 0x2B
  1239  00002C                     	ds	1
  1240  00002D                     ??_xtoa:
  1241                           
  1242                           ; 1 bytes @ 0x2C
  1243  00002D                     	ds	7
  1244  000034                     _dtoa$1221:
  1245                           	opt callstack 0
  1246  000034                     utoa@p:
  1247                           	opt callstack 0
  1248                           
  1249                           ; 2 bytes @ 0x33
  1250  000034                     	ds	1
  1251  000035                     _xtoa$1250:
  1252                           	opt callstack 0
  1253                           
  1254                           ; 2 bytes @ 0x34
  1255  000035                     	ds	1
  1256  000036                     dtoa@p:
  1257                           	opt callstack 0
  1258  000036                     utoa@w:
  1259                           	opt callstack 0
  1260                           
  1261                           ; 2 bytes @ 0x35
  1262  000036                     	ds	1
  1263  000037                     _xtoa$1251:
  1264                           	opt callstack 0
  1265                           
  1266                           ; 2 bytes @ 0x36
  1267  000037                     	ds	1
  1268  000038                     dtoa@w:
  1269                           	opt callstack 0
  1270  000038                     utoa@n:
  1271                           	opt callstack 0
  1272                           
  1273                           ; 8 bytes @ 0x37
  1274  000038                     	ds	1
  1275  000039                     xtoa@p:
  1276                           	opt callstack 0
  1277                           
  1278                           ; 2 bytes @ 0x38
  1279  000039                     	ds	1
  1280  00003A                     dtoa@s:
  1281                           	opt callstack 0
  1282                           
  1283                           ; 2 bytes @ 0x39
  1284  00003A                     	ds	1
  1285  00003B                     xtoa@w:
  1286                           	opt callstack 0
  1287                           
  1288                           ; 2 bytes @ 0x3A
  1289  00003B                     	ds	1
  1290  00003C                     dtoa@n:
  1291                           	opt callstack 0
  1292                           
  1293                           ; 8 bytes @ 0x3B
  1294  00003C                     	ds	1
  1295  00003D                     xtoa@n:
  1296                           	opt callstack 0
  1297                           
  1298                           ; 8 bytes @ 0x3C
  1299  00003D                     	ds	3
  1300  000040                     utoa@i:
  1301                           	opt callstack 0
  1302                           
  1303                           ; 2 bytes @ 0x3F
  1304  000040                     	ds	4
  1305  000044                     dtoa@i:
  1306                           	opt callstack 0
  1307                           
  1308                           ; 2 bytes @ 0x43
  1309  000044                     	ds	1
  1310  000045                     xtoa@i:
  1311                           	opt callstack 0
  1312                           
  1313                           ; 2 bytes @ 0x44
  1314  000045                     	ds	2
  1315  000047                     xtoa@c:
  1316                           	opt callstack 0
  1317                           
  1318                           ; 2 bytes @ 0x46
  1319  000047                     	ds	2
  1320  000049                     ?_vfpfcnvrt:
  1321                           	opt callstack 0
  1322  000049                     vfpfcnvrt@fp:
  1323                           	opt callstack 0
  1324                           
  1325                           ; 2 bytes @ 0x48
  1326  000049                     	ds	2
  1327  00004B                     vfpfcnvrt@fmt:
  1328                           	opt callstack 0
  1329                           
  1330                           ; 2 bytes @ 0x4A
  1331  00004B                     	ds	2
  1332  00004D                     vfpfcnvrt@ap:
  1333                           	opt callstack 0
  1334                           
  1335                           ; 2 bytes @ 0x4C
  1336  00004D                     	ds	2
  1337  00004F                     ??_vfpfcnvrt:
  1338                           
  1339                           ; 1 bytes @ 0x4E
  1340  00004F                     	ds	4
  1341  000053                     vfprintf@cfmt:
  1342                           	opt callstack 0
  1343                           
  1344                           ; 2 bytes @ 0x52
  1345  000053                     	ds	2
  1346  000055                     ??_PrintModbus:
  1347                           
  1348                           ; 1 bytes @ 0x54
  1349  000055                     	ds	1
  1350  000056                     ??_main:
  1351                           
  1352                           ; 1 bytes @ 0x55
  1353  000056                     	ds	1
  1354                           
  1355 ;;
  1356 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1357 ;;
  1358 ;; *************** function _main *****************
  1359 ;; Defined at:
  1360 ;;		line 122 in file "main.c"
  1361 ;; Parameters:    Size  Location     Type
  1362 ;;		None
  1363 ;; Auto vars:     Size  Location     Type
  1364 ;;  RXStat          1   43[BANK0 ] _Bool 
  1365 ;; Return value:  Size  Location     Type
  1366 ;;                  1    wreg      void 
  1367 ;; Registers used:
  1368 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1369 ;; Tracked objects:
  1370 ;;		On entry : 0/0
  1371 ;;		On exit  : 0/0
  1372 ;;		Unchanged: 0/0
  1373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1375 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1376 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1377 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1378 ;;Total ram usage:        2 bytes
  1379 ;; Hardware stack levels required when called:   14
  1380 ;; This function calls:
  1381 ;;		_AddRxBuffToModBus
  1382 ;;		_ClearRxBuff
  1383 ;;		_EUSART1_Read
  1384 ;;		_EUSART1_is_rx_ready
  1385 ;;		_InitialiseString
  1386 ;;		_PrintModbus
  1387 ;;		_RXMode
  1388 ;;		_SYSTEM_Initialize
  1389 ;; This function is called by:
  1390 ;;		Startup code after reset
  1391 ;; This function uses a non-reentrant model
  1392 ;;
  1393                           
  1394                           	psect	text0
  1395  00148C                     __ptext0:
  1396                           	opt callstack 0
  1397  00148C                     _main:
  1398                           	opt callstack 17
  1399  00148C                     
  1400                           ;main.c: 125:     SYSTEM_Initialize();
  1401  00148C  EC57  F011         	call	_SYSTEM_Initialize	;wreg free
  1402  001490                     
  1403                           ;main.c: 132:     (INTCONbits.GIE = 1);
  1404  001490  8EF2               	bsf	242,7,c	;volatile
  1405  001492                     
  1406                           ;main.c: 138:     (INTCONbits.PEIE = 1);
  1407  001492  8CF2               	bsf	242,6,c	;volatile
  1408  001494  9883               	bcf	131,4,c	;volatile
  1409  001496  9A83               	bcf	131,5,c	;volatile
  1410  001498  9C83               	bcf	131,6,c	;volatile
  1411  00149A  9E83               	bcf	131,7,c	;volatile
  1412  00149C                     
  1413                           ;main.c: 148:     InitialiseString();
  1414  00149C  EC27  F00E         	call	_InitialiseString	;wreg free
  1415  0014A0                     
  1416                           ;main.c: 151:     RXMode();
  1417  0014A0  ECC1  F011         	call	_RXMode	;wreg free
  1418  0014A4                     
  1419                           ;main.c: 152:     ClearRxBuff();
  1420  0014A4  ECD7  F00F         	call	_ClearRxBuff	;wreg free
  1421  0014A8                     
  1422                           ;main.c: 154:     _Bool RXStat = 0;
  1423  0014A8  0E00               	movlw	0
  1424  0014AA  0100               	movlb	0	; () banked
  1425  0014AC  6FCB               	movwf	main@RXStat& (0+255),b
  1426  0014AE                     l3988:
  1427                           
  1428                           ;main.c: 157:     {;main.c: 158:         if(EUSART1_is_rx_ready()){
  1429  0014AE  EC70  F011         	call	_EUSART1_is_rx_ready	;wreg free
  1430  0014B2  0900               	iorlw	0
  1431  0014B4  B4D8               	btfsc	status,2,c
  1432  0014B6  EF5F  F00A         	goto	u3571
  1433  0014BA  EF61  F00A         	goto	u3570
  1434  0014BE                     u3571:
  1435  0014BE  EF7E  F00A         	goto	l4000
  1436  0014C2                     u3570:
  1437  0014C2  EF71  F00A         	goto	l3996
  1438  0014C6                     l3992:
  1439                           
  1440                           ;main.c: 162:                 rxData[ByteNum] = EUSART1_Read();
  1441  0014C6  EC2F  F00F         	call	_EUSART1_Read	;wreg free
  1442  0014CA  6E56               	movwf	??_main^0,c
  1443  0014CC  0E00               	movlw	low _rxData
  1444  0014CE  0100               	movlb	0	; () banked
  1445  0014D0  2590               	addwf	_ByteNum& (0+255),w,b
  1446  0014D2  6ED9               	movwf	fsr2l,c
  1447  0014D4  0E02               	movlw	high _rxData
  1448  0014D6  2191               	addwfc	(_ByteNum+1)& (0+255),w,b
  1449  0014D8  6EDA               	movwf	fsr2h,c
  1450  0014DA  C056  FFDF         	movff	??_main,indf2
  1451  0014DE                     
  1452                           ; BSR set to: 0
  1453                           ;main.c: 163:                 ByteNum++;
  1454  0014DE  4B90               	infsnz	_ByteNum& (0+255),f,b
  1455  0014E0  2B91               	incf	(_ByteNum+1)& (0+255),f,b
  1456  0014E2                     l3996:
  1457                           
  1458                           ;main.c: 160:             while(EUSART1_is_rx_ready()){
  1459  0014E2  EC70  F011         	call	_EUSART1_is_rx_ready	;wreg free
  1460  0014E6  0900               	iorlw	0
  1461  0014E8  A4D8               	btfss	status,2,c
  1462  0014EA  EF79  F00A         	goto	u3581
  1463  0014EE  EF7B  F00A         	goto	u3580
  1464  0014F2                     u3581:
  1465  0014F2  EF63  F00A         	goto	l3992
  1466  0014F6                     u3580:
  1467  0014F6                     
  1468                           ;main.c: 166:             RXStat = 1;
  1469  0014F6  0E01               	movlw	1
  1470  0014F8  0100               	movlb	0	; () banked
  1471  0014FA  6FCB               	movwf	main@RXStat& (0+255),b
  1472  0014FC                     l4000:
  1473                           
  1474                           ;main.c: 169:         if(RXStat ==1){
  1475  0014FC  0100               	movlb	0	; () banked
  1476  0014FE  05CB               	decf	main@RXStat& (0+255),w,b
  1477  001500  A4D8               	btfss	status,2,c
  1478  001502  EF85  F00A         	goto	u3591
  1479  001506  EF87  F00A         	goto	u3590
  1480  00150A                     u3591:
  1481  00150A  EFA3  F00A         	goto	l4012
  1482  00150E                     u3590:
  1483  00150E                     
  1484                           ; BSR set to: 0
  1485                           ;main.c: 172:             AddRxBuffToModBus();
  1486  00150E  ECC8  F00C         	call	_AddRxBuffToModBus	;wreg free
  1487  001512                     
  1488                           ;main.c: 173:             ClearRxBuff();
  1489  001512  ECD7  F00F         	call	_ClearRxBuff	;wreg free
  1490  001516                     
  1491                           ;main.c: 174:             RXStat = 0;
  1492  001516  0E00               	movlw	0
  1493  001518  0100               	movlb	0	; () banked
  1494  00151A  6FCB               	movwf	main@RXStat& (0+255),b
  1495  00151C                     
  1496                           ; BSR set to: 0
  1497                           ;main.c: 175:             ByteNum = 0;
  1498  00151C  0E00               	movlw	0
  1499  00151E  6F91               	movwf	(_ByteNum+1)& (0+255),b
  1500  001520  0E00               	movlw	0
  1501  001522  6F90               	movwf	_ByteNum& (0+255),b
  1502  001524                     
  1503                           ; BSR set to: 0
  1504  001524  B883               	btfsc	131,4,c	;volatile
  1505  001526  EF97  F00A         	goto	u3601
  1506  00152A  EF9A  F00A         	goto	u3600
  1507  00152E                     u3601:
  1508  00152E  0E01               	movlw	1
  1509  001530  EF9B  F00A         	goto	u3606
  1510  001534                     u3600:
  1511  001534  0E00               	movlw	0
  1512  001536                     u3606:
  1513  001536  0AFF               	xorlw	255
  1514  001538  6E56               	movwf	??_main^0,c
  1515  00153A  3A56               	swapf	??_main^0,f,c
  1516  00153C  5083               	movf	131,w,c	;volatile
  1517  00153E  1856               	xorwf	??_main^0,w,c
  1518  001540  0BEF               	andlw	-17
  1519  001542  1856               	xorwf	??_main^0,w,c
  1520  001544  6E83               	movwf	131,c	;volatile
  1521  001546                     l4012:
  1522                           
  1523                           ; BSR set to: 0
  1524                           ;main.c: 179:         if(ModDataCnt == ExpectedBytes){
  1525  001546  51F4               	movf	_ExpectedBytes& (0+255),w,b
  1526  001548  198E               	xorwf	_ModDataCnt& (0+255),w,b
  1527  00154A  E107               	bnz	u3611
  1528  00154C  51F5               	movf	(_ExpectedBytes+1)& (0+255),w,b
  1529  00154E  198F               	xorwf	(_ModDataCnt+1)& (0+255),w,b
  1530  001550  A4D8               	btfss	status,2,c
  1531  001552  EFAD  F00A         	goto	u3611
  1532  001556  EFAF  F00A         	goto	u3610
  1533  00155A                     u3611:
  1534  00155A  EF57  F00A         	goto	l3988
  1535  00155E                     u3610:
  1536  00155E                     
  1537                           ; BSR set to: 0
  1538                           ;main.c: 180:             PrintModbus();
  1539  00155E  EC65  F00E         	call	_PrintModbus	;wreg free
  1540  001562  BA83               	btfsc	131,5,c	;volatile
  1541  001564  EFB6  F00A         	goto	u3621
  1542  001568  EFB9  F00A         	goto	u3620
  1543  00156C                     u3621:
  1544  00156C  0E01               	movlw	1
  1545  00156E  EFBA  F00A         	goto	u3626
  1546  001572                     u3620:
  1547  001572  0E00               	movlw	0
  1548  001574                     u3626:
  1549  001574  0AFF               	xorlw	255
  1550  001576  6E56               	movwf	??_main^0,c
  1551  001578  3A56               	swapf	??_main^0,f,c
  1552  00157A  4656               	rlncf	??_main^0,f,c
  1553  00157C  5083               	movf	131,w,c	;volatile
  1554  00157E  1856               	xorwf	??_main^0,w,c
  1555  001580  0BDF               	andlw	-33
  1556  001582  1856               	xorwf	??_main^0,w,c
  1557  001584  6E83               	movwf	131,c	;volatile
  1558  001586  EF57  F00A         	goto	l3988
  1559  00158A  EF93  F000         	goto	start
  1560  00158E                     __end_of_main:
  1561                           	opt callstack 0
  1562                           
  1563 ;; *************** function _SYSTEM_Initialize *****************
  1564 ;; Defined at:
  1565 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1566 ;; Parameters:    Size  Location     Type
  1567 ;;		None
  1568 ;; Auto vars:     Size  Location     Type
  1569 ;;		None
  1570 ;; Return value:  Size  Location     Type
  1571 ;;                  1    wreg      void 
  1572 ;; Registers used:
  1573 ;;		wreg, status,2, status,0, cstack
  1574 ;; Tracked objects:
  1575 ;;		On entry : 0/0
  1576 ;;		On exit  : 0/0
  1577 ;;		Unchanged: 0/0
  1578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1583 ;;Total ram usage:        0 bytes
  1584 ;; Hardware stack levels used:    1
  1585 ;; Hardware stack levels required when called:    6
  1586 ;; This function calls:
  1587 ;;		_EUSART1_Initialize
  1588 ;;		_EUSART2_Initialize
  1589 ;;		_INTERRUPT_Initialize
  1590 ;;		_OSCILLATOR_Initialize
  1591 ;;		_PIN_MANAGER_Initialize
  1592 ;;		_PMD_Initialize
  1593 ;; This function is called by:
  1594 ;;		_main
  1595 ;; This function uses a non-reentrant model
  1596 ;;
  1597                           
  1598                           	psect	text1
  1599  0022AE                     __ptext1:
  1600                           	opt callstack 0
  1601  0022AE                     _SYSTEM_Initialize:
  1602                           	opt callstack 24
  1603  0022AE                     
  1604                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  1605  0022AE  ECCD  F011         	call	_INTERRUPT_Initialize	;wreg free
  1606  0022B2                     
  1607                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  1608  0022B2  EC49  F011         	call	_PMD_Initialize	;wreg free
  1609  0022B6                     
  1610                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  1611  0022B6  EC63  F00D         	call	_PIN_MANAGER_Initialize	;wreg free
  1612  0022BA                     
  1613                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  1614  0022BA  EC64  F011         	call	_OSCILLATOR_Initialize	;wreg free
  1615  0022BE                     
  1616                           ;mcc_generated_files/mcc.c: 56:     EUSART1_Initialize();
  1617  0022BE  ECE9  F00D         	call	_EUSART1_Initialize	;wreg free
  1618  0022C2                     
  1619                           ;mcc_generated_files/mcc.c: 57:     EUSART2_Initialize();
  1620  0022C2  ECAA  F00D         	call	_EUSART2_Initialize	;wreg free
  1621  0022C6  0012               	return		;funcret
  1622  0022C8                     __end_of_SYSTEM_Initialize:
  1623                           	opt callstack 0
  1624                           
  1625 ;; *************** function _PMD_Initialize *****************
  1626 ;; Defined at:
  1627 ;;		line 74 in file "mcc_generated_files/mcc.c"
  1628 ;; Parameters:    Size  Location     Type
  1629 ;;		None
  1630 ;; Auto vars:     Size  Location     Type
  1631 ;;		None
  1632 ;; Return value:  Size  Location     Type
  1633 ;;                  1    wreg      void 
  1634 ;; Registers used:
  1635 ;;		wreg, status,2
  1636 ;; Tracked objects:
  1637 ;;		On entry : 0/0
  1638 ;;		On exit  : 0/0
  1639 ;;		Unchanged: 0/0
  1640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1645 ;;Total ram usage:        0 bytes
  1646 ;; Hardware stack levels used:    1
  1647 ;; Hardware stack levels required when called:    4
  1648 ;; This function calls:
  1649 ;;		Nothing
  1650 ;; This function is called by:
  1651 ;;		_SYSTEM_Initialize
  1652 ;; This function uses a non-reentrant model
  1653 ;;
  1654                           
  1655                           	psect	text2
  1656  002292                     __ptext2:
  1657                           	opt callstack 0
  1658  002292                     _PMD_Initialize:
  1659                           	opt callstack 25
  1660  002292                     
  1661                           ;mcc_generated_files/mcc.c: 77:     PMD0 = 0x00;
  1662  002292  0E00               	movlw	0
  1663  002294  010E               	movlb	14	; () banked
  1664  002296  6FE1               	movwf	225,b	;volatile
  1665                           
  1666                           ;mcc_generated_files/mcc.c: 79:     PMD1 = 0x00;
  1667  002298  0E00               	movlw	0
  1668  00229A  6FE2               	movwf	226,b	;volatile
  1669                           
  1670                           ;mcc_generated_files/mcc.c: 81:     PMD2 = 0x00;
  1671  00229C  0E00               	movlw	0
  1672  00229E  6FE3               	movwf	227,b	;volatile
  1673                           
  1674                           ;mcc_generated_files/mcc.c: 83:     PMD3 = 0x00;
  1675  0022A0  0E00               	movlw	0
  1676  0022A2  6FE4               	movwf	228,b	;volatile
  1677                           
  1678                           ;mcc_generated_files/mcc.c: 85:     PMD4 = 0x00;
  1679  0022A4  0E00               	movlw	0
  1680  0022A6  6FE5               	movwf	229,b	;volatile
  1681                           
  1682                           ;mcc_generated_files/mcc.c: 87:     PMD5 = 0x00;
  1683  0022A8  0E00               	movlw	0
  1684  0022AA  6FE6               	movwf	230,b	;volatile
  1685  0022AC                     
  1686                           ; BSR set to: 14
  1687  0022AC  0012               	return		;funcret
  1688  0022AE                     __end_of_PMD_Initialize:
  1689                           	opt callstack 0
  1690                           
  1691 ;; *************** function _PIN_MANAGER_Initialize *****************
  1692 ;; Defined at:
  1693 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1694 ;; Parameters:    Size  Location     Type
  1695 ;;		None
  1696 ;; Auto vars:     Size  Location     Type
  1697 ;;		None
  1698 ;; Return value:  Size  Location     Type
  1699 ;;                  1    wreg      void 
  1700 ;; Registers used:
  1701 ;;		wreg, status,2
  1702 ;; Tracked objects:
  1703 ;;		On entry : 0/0
  1704 ;;		On exit  : 0/0
  1705 ;;		Unchanged: 0/0
  1706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1711 ;;Total ram usage:        0 bytes
  1712 ;; Hardware stack levels used:    1
  1713 ;; Hardware stack levels required when called:    4
  1714 ;; This function calls:
  1715 ;;		Nothing
  1716 ;; This function is called by:
  1717 ;;		_SYSTEM_Initialize
  1718 ;; This function uses a non-reentrant model
  1719 ;;
  1720                           
  1721                           	psect	text3
  1722  001AC6                     __ptext3:
  1723                           	opt callstack 0
  1724  001AC6                     _PIN_MANAGER_Initialize:
  1725                           	opt callstack 25
  1726  001AC6                     
  1727                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  1728  001AC6  0E00               	movlw	0
  1729  001AC8  6E87               	movwf	135,c	;volatile
  1730                           
  1731                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  1732  001ACA  0E00               	movlw	0
  1733  001ACC  6E86               	movwf	134,c	;volatile
  1734                           
  1735                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  1736  001ACE  0E00               	movlw	0
  1737  001AD0  6E83               	movwf	131,c	;volatile
  1738                           
  1739                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  1740  001AD2  0E00               	movlw	0
  1741  001AD4  6E84               	movwf	132,c	;volatile
  1742                           
  1743                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  1744  001AD6  0E00               	movlw	0
  1745  001AD8  6E85               	movwf	133,c	;volatile
  1746                           
  1747                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  1748  001ADA  0E07               	movlw	7
  1749  001ADC  6E8C               	movwf	140,c	;volatile
  1750                           
  1751                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x07;
  1752  001ADE  0E07               	movlw	7
  1753  001AE0  6E88               	movwf	136,c	;volatile
  1754                           
  1755                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xBF;
  1756  001AE2  0EBF               	movlw	191
  1757  001AE4  6E89               	movwf	137,c	;volatile
  1758                           
  1759                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  1760  001AE6  0EBF               	movlw	191
  1761  001AE8  6E8A               	movwf	138,c	;volatile
  1762                           
  1763                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFE;
  1764  001AEA  0EFE               	movlw	254
  1765  001AEC  6E8B               	movwf	139,c	;volatile
  1766  001AEE                     
  1767                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
  1768  001AEE  010F               	movlb	15	; () banked
  1769  001AF0  6926               	setf	38,b	;volatile
  1770                           
  1771                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x3B;
  1772  001AF2  0E3B               	movlw	59
  1773  001AF4  6F21               	movwf	33,b	;volatile
  1774                           
  1775                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x37;
  1776  001AF6  0E37               	movlw	55
  1777  001AF8  6F19               	movwf	25,b	;volatile
  1778                           
  1779                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  1780  001AFA  0E07               	movlw	7
  1781  001AFC  6F2E               	movwf	46,b	;volatile
  1782  001AFE                     
  1783                           ; BSR set to: 15
  1784                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
  1785  001AFE  6911               	setf	17,b	;volatile
  1786                           
  1787                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  1788  001B00  0E00               	movlw	0
  1789  001B02  6F25               	movwf	37,b	;volatile
  1790                           
  1791                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  1792  001B04  0E00               	movlw	0
  1793  001B06  6F2D               	movwf	45,b	;volatile
  1794                           
  1795                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  1796  001B08  0E00               	movlw	0
  1797  001B0A  6F18               	movwf	24,b	;volatile
  1798                           
  1799                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  1800  001B0C  0E00               	movlw	0
  1801  001B0E  6F10               	movwf	16,b	;volatile
  1802                           
  1803                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  1804  001B10  0E00               	movlw	0
  1805  001B12  6F20               	movwf	32,b	;volatile
  1806                           
  1807                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
  1808  001B14  0E00               	movlw	0
  1809  001B16  6F2C               	movwf	44,b	;volatile
  1810                           
  1811                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
  1812  001B18  0E00               	movlw	0
  1813  001B1A  6F0F               	movwf	15,b	;volatile
  1814                           
  1815                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
  1816  001B1C  0E00               	movlw	0
  1817  001B1E  6F17               	movwf	23,b	;volatile
  1818                           
  1819                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
  1820  001B20  0E00               	movlw	0
  1821  001B22  6F1F               	movwf	31,b	;volatile
  1822                           
  1823                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
  1824  001B24  0E00               	movlw	0
  1825  001B26  6F24               	movwf	36,b	;volatile
  1826  001B28                     
  1827                           ; BSR set to: 15
  1828                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
  1829  001B28  690E               	setf	14,b	;volatile
  1830  001B2A                     
  1831                           ; BSR set to: 15
  1832                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
  1833  001B2A  6916               	setf	22,b	;volatile
  1834  001B2C                     
  1835                           ; BSR set to: 15
  1836                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
  1837  001B2C  691E               	setf	30,b	;volatile
  1838  001B2E                     
  1839                           ; BSR set to: 15
  1840                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
  1841  001B2E  6923               	setf	35,b	;volatile
  1842                           
  1843                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
  1844  001B30  0E07               	movlw	7
  1845  001B32  6F2B               	movwf	43,b	;volatile
  1846  001B34                     
  1847                           ; BSR set to: 15
  1848                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
  1849  001B34  690D               	setf	13,b	;volatile
  1850  001B36                     
  1851                           ; BSR set to: 15
  1852                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
  1853  001B36  6915               	setf	21,b	;volatile
  1854  001B38                     
  1855                           ; BSR set to: 15
  1856                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
  1857  001B38  691D               	setf	29,b	;volatile
  1858  001B3A                     
  1859                           ; BSR set to: 15
  1860                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
  1861  001B3A  6922               	setf	34,b	;volatile
  1862                           
  1863                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x0F;
  1864  001B3C  0E0F               	movlw	15
  1865  001B3E  6F2A               	movwf	42,b	;volatile
  1866                           
  1867                           ;mcc_generated_files/pin_manager.c: 127:     RX1PPS = 0x17;
  1868  001B40  0E17               	movlw	23
  1869  001B42  010E               	movlb	14	; () banked
  1870  001B44  6FB5               	movwf	181,b	;volatile
  1871                           
  1872                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x0B;
  1873  001B46  0E0B               	movlw	11
  1874  001B48  6FF5               	movwf	245,b	;volatile
  1875                           
  1876                           ;mcc_generated_files/pin_manager.c: 129:     RC6PPS = 0x09;
  1877  001B4A  0E09               	movlw	9
  1878  001B4C  6FFD               	movwf	253,b	;volatile
  1879                           
  1880                           ;mcc_generated_files/pin_manager.c: 130:     RX2PPS = 0x0F;
  1881  001B4E  0E0F               	movlw	15
  1882  001B50  6F8D               	movwf	141,b	;volatile
  1883  001B52                     
  1884                           ; BSR set to: 14
  1885  001B52  0012               	return		;funcret
  1886  001B54                     __end_of_PIN_MANAGER_Initialize:
  1887                           	opt callstack 0
  1888                           
  1889 ;; *************** function _OSCILLATOR_Initialize *****************
  1890 ;; Defined at:
  1891 ;;		line 60 in file "mcc_generated_files/mcc.c"
  1892 ;; Parameters:    Size  Location     Type
  1893 ;;		None
  1894 ;; Auto vars:     Size  Location     Type
  1895 ;;		None
  1896 ;; Return value:  Size  Location     Type
  1897 ;;                  1    wreg      void 
  1898 ;; Registers used:
  1899 ;;		wreg, status,2
  1900 ;; Tracked objects:
  1901 ;;		On entry : 0/0
  1902 ;;		On exit  : 0/0
  1903 ;;		Unchanged: 0/0
  1904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1909 ;;Total ram usage:        0 bytes
  1910 ;; Hardware stack levels used:    1
  1911 ;; Hardware stack levels required when called:    4
  1912 ;; This function calls:
  1913 ;;		Nothing
  1914 ;; This function is called by:
  1915 ;;		_SYSTEM_Initialize
  1916 ;; This function uses a non-reentrant model
  1917 ;;
  1918                           
  1919                           	psect	text4
  1920  0022C8                     __ptext4:
  1921                           	opt callstack 0
  1922  0022C8                     _OSCILLATOR_Initialize:
  1923                           	opt callstack 25
  1924  0022C8                     
  1925                           ;mcc_generated_files/mcc.c: 63:     OSCCON1 = 0x60;
  1926  0022C8  0E60               	movlw	96
  1927  0022CA  010E               	movlb	14	; () banked
  1928  0022CC  6FD8               	movwf	216,b	;volatile
  1929                           
  1930                           ;mcc_generated_files/mcc.c: 65:     OSCCON3 = 0x00;
  1931  0022CE  0E00               	movlw	0
  1932  0022D0  6FDA               	movwf	218,b	;volatile
  1933                           
  1934                           ;mcc_generated_files/mcc.c: 67:     OSCEN = 0x00;
  1935  0022D2  0E00               	movlw	0
  1936  0022D4  6FDC               	movwf	220,b	;volatile
  1937                           
  1938                           ;mcc_generated_files/mcc.c: 69:     OSCFRQ = 0x06;
  1939  0022D6  0E06               	movlw	6
  1940  0022D8  6FDE               	movwf	222,b	;volatile
  1941                           
  1942                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  1943  0022DA  0E00               	movlw	0
  1944  0022DC  6FDD               	movwf	221,b	;volatile
  1945  0022DE                     
  1946                           ; BSR set to: 14
  1947  0022DE  0012               	return		;funcret
  1948  0022E0                     __end_of_OSCILLATOR_Initialize:
  1949                           	opt callstack 0
  1950                           
  1951 ;; *************** function _INTERRUPT_Initialize *****************
  1952 ;; Defined at:
  1953 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1954 ;; Parameters:    Size  Location     Type
  1955 ;;		None
  1956 ;; Auto vars:     Size  Location     Type
  1957 ;;		None
  1958 ;; Return value:  Size  Location     Type
  1959 ;;                  1    wreg      void 
  1960 ;; Registers used:
  1961 ;;		None
  1962 ;; Tracked objects:
  1963 ;;		On entry : 0/0
  1964 ;;		On exit  : 0/0
  1965 ;;		Unchanged: 0/0
  1966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1971 ;;Total ram usage:        0 bytes
  1972 ;; Hardware stack levels used:    1
  1973 ;; Hardware stack levels required when called:    4
  1974 ;; This function calls:
  1975 ;;		Nothing
  1976 ;; This function is called by:
  1977 ;;		_SYSTEM_Initialize
  1978 ;; This function uses a non-reentrant model
  1979 ;;
  1980                           
  1981                           	psect	text5
  1982  00239A                     __ptext5:
  1983                           	opt callstack 0
  1984  00239A                     _INTERRUPT_Initialize:
  1985                           	opt callstack 25
  1986  00239A                     
  1987                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
  1988  00239A  9AF2               	bcf	242,5,c	;volatile
  1989  00239C  0012               	return		;funcret
  1990  00239E                     __end_of_INTERRUPT_Initialize:
  1991                           	opt callstack 0
  1992                           
  1993 ;; *************** function _EUSART2_Initialize *****************
  1994 ;; Defined at:
  1995 ;;		line 88 in file "mcc_generated_files/eusart2.c"
  1996 ;; Parameters:    Size  Location     Type
  1997 ;;		None
  1998 ;; Auto vars:     Size  Location     Type
  1999 ;;		None
  2000 ;; Return value:  Size  Location     Type
  2001 ;;                  1    wreg      void 
  2002 ;; Registers used:
  2003 ;;		wreg, status,2, status,0, cstack
  2004 ;; Tracked objects:
  2005 ;;		On entry : 0/0
  2006 ;;		On exit  : 0/0
  2007 ;;		Unchanged: 0/0
  2008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2013 ;;Total ram usage:        0 bytes
  2014 ;; Hardware stack levels used:    1
  2015 ;; Hardware stack levels required when called:    5
  2016 ;; This function calls:
  2017 ;;		_EUSART2_SetErrorHandler
  2018 ;;		_EUSART2_SetFramingErrorHandler
  2019 ;;		_EUSART2_SetOverrunErrorHandler
  2020 ;;		_EUSART2_SetRxInterruptHandler
  2021 ;;		_EUSART2_SetTxInterruptHandler
  2022 ;; This function is called by:
  2023 ;;		_SYSTEM_Initialize
  2024 ;; This function uses a non-reentrant model
  2025 ;;
  2026                           
  2027                           	psect	text6
  2028  001B54                     __ptext6:
  2029                           	opt callstack 0
  2030  001B54                     _EUSART2_Initialize:
  2031                           	opt callstack 24
  2032  001B54                     
  2033                           ;mcc_generated_files/eusart2.c: 91:     PIE3bits.RC2IE = 0;
  2034  001B54  010E               	movlb	14	; () banked
  2035  001B56  9FC5               	bcf	197,7,b	;volatile
  2036  001B58                     
  2037                           ; BSR set to: 14
  2038                           ;mcc_generated_files/eusart2.c: 92:     EUSART2_SetRxInterruptHandler(EUSART2_Receive_IS
      +                          R);
  2039  001B58  0E10               	movlw	low _EUSART2_Receive_ISR
  2040  001B5A  6E05               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler^0,c
  2041  001B5C  0E18               	movlw	high _EUSART2_Receive_ISR
  2042  001B5E  6E06               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)^0,c
  2043  001B60  EC8B  F011         	call	_EUSART2_SetRxInterruptHandler	;wreg free
  2044  001B64                     
  2045                           ;mcc_generated_files/eusart2.c: 93:     PIE3bits.TX2IE = 0;
  2046  001B64  010E               	movlb	14	; () banked
  2047  001B66  9DC5               	bcf	197,6,b	;volatile
  2048                           
  2049                           ;mcc_generated_files/eusart2.c: 94:     EUSART2_SetTxInterruptHandler(EUSART2_Transmit_I
      +                          SR);
  2050  001B68  0EF8               	movlw	low _EUSART2_Transmit_ISR
  2051  001B6A  6E05               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler^0,c
  2052  001B6C  0E1F               	movlw	high _EUSART2_Transmit_ISR
  2053  001B6E  6E06               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)^0,c
  2054  001B70  EC86  F011         	call	_EUSART2_SetTxInterruptHandler	;wreg free
  2055  001B74                     
  2056                           ;mcc_generated_files/eusart2.c: 98:     BAUD2CON = 0x08;
  2057  001B74  0E08               	movlw	8
  2058  001B76  010E               	movlb	14	; () banked
  2059  001B78  6F9F               	movwf	159,b	;volatile
  2060  001B7A                     
  2061                           ; BSR set to: 14
  2062                           ;mcc_generated_files/eusart2.c: 101:     RC2STA = 0x90;
  2063  001B7A  0E90               	movlw	144
  2064  001B7C  6F9D               	movwf	157,b	;volatile
  2065  001B7E                     
  2066                           ; BSR set to: 14
  2067                           ;mcc_generated_files/eusart2.c: 104:     TX2STA = 0x24;
  2068  001B7E  0E24               	movlw	36
  2069  001B80  6F9E               	movwf	158,b	;volatile
  2070  001B82                     
  2071                           ; BSR set to: 14
  2072                           ;mcc_generated_files/eusart2.c: 107:     SP2BRGL = 0x40;
  2073  001B82  0E40               	movlw	64
  2074  001B84  6F9B               	movwf	155,b	;volatile
  2075  001B86                     
  2076                           ; BSR set to: 14
  2077                           ;mcc_generated_files/eusart2.c: 110:     SP2BRGH = 0x03;
  2078  001B86  0E03               	movlw	3
  2079  001B88  6F9C               	movwf	156,b	;volatile
  2080  001B8A                     
  2081                           ; BSR set to: 14
  2082                           ;mcc_generated_files/eusart2.c: 113:     EUSART2_SetFramingErrorHandler(EUSART2_DefaultF
      +                          ramingErrorHandler);
  2083  001B8A  0E9E               	movlw	low _EUSART2_DefaultFramingErrorHandler
  2084  001B8C  6E05               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler^0,c
  2085  001B8E  0E23               	movlw	high _EUSART2_DefaultFramingErrorHandler
  2086  001B90  6E06               	movwf	(EUSART2_SetFramingErrorHandler@interruptHandler+1)^0,c
  2087  001B92  EC95  F011         	call	_EUSART2_SetFramingErrorHandler	;wreg free
  2088  001B96                     
  2089                           ;mcc_generated_files/eusart2.c: 114:     EUSART2_SetOverrunErrorHandler(EUSART2_DefaultO
      +                          verrunErrorHandler);
  2090  001B96  0E7A               	movlw	low _EUSART2_DefaultOverrunErrorHandler
  2091  001B98  6E05               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler^0,c
  2092  001B9A  0E23               	movlw	high _EUSART2_DefaultOverrunErrorHandler
  2093  001B9C  6E06               	movwf	(EUSART2_SetOverrunErrorHandler@interruptHandler+1)^0,c
  2094  001B9E  EC90  F011         	call	_EUSART2_SetOverrunErrorHandler	;wreg free
  2095  001BA2                     
  2096                           ;mcc_generated_files/eusart2.c: 115:     EUSART2_SetErrorHandler(EUSART2_DefaultErrorHan
      +                          dler);
  2097  001BA2  0E88               	movlw	low _EUSART2_DefaultErrorHandler
  2098  001BA4  6E05               	movwf	EUSART2_SetErrorHandler@interruptHandler^0,c
  2099  001BA6  0E23               	movlw	high _EUSART2_DefaultErrorHandler
  2100  001BA8  6E06               	movwf	(EUSART2_SetErrorHandler@interruptHandler+1)^0,c
  2101  001BAA  EC9A  F011         	call	_EUSART2_SetErrorHandler	;wreg free
  2102                           
  2103                           ;mcc_generated_files/eusart2.c: 117:     eusart2RxLastError.status = 0;
  2104  001BAE  0E00               	movlw	0
  2105  001BB0  0100               	movlb	0	; () banked
  2106  001BB2  6F9B               	movwf	_eusart2RxLastError& (0+255),b	;volatile
  2107                           
  2108                           ;mcc_generated_files/eusart2.c: 120:     eusart2TxHead = 0;
  2109  001BB4  0E00               	movlw	0
  2110  001BB6  6F9F               	movwf	_eusart2TxHead& (0+255),b	;volatile
  2111                           
  2112                           ;mcc_generated_files/eusart2.c: 121:     eusart2TxTail = 0;
  2113  001BB8  0E00               	movlw	0
  2114  001BBA  6F9E               	movwf	_eusart2TxTail& (0+255),b	;volatile
  2115                           
  2116                           ;mcc_generated_files/eusart2.c: 122:     eusart2TxBufferRemaining = sizeof(eusart2TxBuff
      +                          er);
  2117  001BBC  0E08               	movlw	8
  2118  001BBE  6FE1               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
  2119                           
  2120                           ;mcc_generated_files/eusart2.c: 124:     eusart2RxHead = 0;
  2121  001BC0  0E00               	movlw	0
  2122  001BC2  6E5A               	movwf	_eusart2RxHead^0,c	;volatile
  2123                           
  2124                           ;mcc_generated_files/eusart2.c: 125:     eusart2RxTail = 0;
  2125  001BC4  0E00               	movlw	0
  2126  001BC6  6F9D               	movwf	_eusart2RxTail& (0+255),b	;volatile
  2127                           
  2128                           ;mcc_generated_files/eusart2.c: 126:     eusart2RxCount = 0;
  2129  001BC8  0E00               	movlw	0
  2130  001BCA  6F9C               	movwf	_eusart2RxCount& (0+255),b	;volatile
  2131  001BCC                     
  2132                           ; BSR set to: 0
  2133                           ;mcc_generated_files/eusart2.c: 129:     PIE3bits.RC2IE = 1;
  2134  001BCC  010E               	movlb	14	; () banked
  2135  001BCE  8FC5               	bsf	197,7,b	;volatile
  2136  001BD0                     
  2137                           ; BSR set to: 14
  2138  001BD0  0012               	return		;funcret
  2139  001BD2                     __end_of_EUSART2_Initialize:
  2140                           	opt callstack 0
  2141                           
  2142 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
  2143 ;; Defined at:
  2144 ;;		line 285 in file "mcc_generated_files/eusart2.c"
  2145 ;; Parameters:    Size  Location     Type
  2146 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2147 ;;		 -> EUSART2_Transmit_ISR(1), 
  2148 ;; Auto vars:     Size  Location     Type
  2149 ;;		None
  2150 ;; Return value:  Size  Location     Type
  2151 ;;                  1    wreg      void 
  2152 ;; Registers used:
  2153 ;;		wreg, status,2, status,0
  2154 ;; Tracked objects:
  2155 ;;		On entry : 0/0
  2156 ;;		On exit  : 0/0
  2157 ;;		Unchanged: 0/0
  2158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2159 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2162 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2163 ;;Total ram usage:        2 bytes
  2164 ;; Hardware stack levels used:    1
  2165 ;; Hardware stack levels required when called:    4
  2166 ;; This function calls:
  2167 ;;		Nothing
  2168 ;; This function is called by:
  2169 ;;		_EUSART2_Initialize
  2170 ;; This function uses a non-reentrant model
  2171 ;;
  2172                           
  2173                           	psect	text7
  2174  00230C                     __ptext7:
  2175                           	opt callstack 0
  2176  00230C                     _EUSART2_SetTxInterruptHandler:
  2177                           	opt callstack 24
  2178  00230C                     
  2179                           ;mcc_generated_files/eusart2.c: 286:     EUSART2_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  2180  00230C  C005  F0DE         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
  2181  002310  C006  F0DF         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
  2182  002314  0012               	return		;funcret
  2183  002316                     __end_of_EUSART2_SetTxInterruptHandler:
  2184                           	opt callstack 0
  2185                           
  2186 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
  2187 ;; Defined at:
  2188 ;;		line 289 in file "mcc_generated_files/eusart2.c"
  2189 ;; Parameters:    Size  Location     Type
  2190 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2191 ;;		 -> EUSART2_Receive_ISR(1), 
  2192 ;; Auto vars:     Size  Location     Type
  2193 ;;		None
  2194 ;; Return value:  Size  Location     Type
  2195 ;;                  1    wreg      void 
  2196 ;; Registers used:
  2197 ;;		wreg, status,2, status,0
  2198 ;; Tracked objects:
  2199 ;;		On entry : 0/0
  2200 ;;		On exit  : 0/0
  2201 ;;		Unchanged: 0/0
  2202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2203 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2206 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2207 ;;Total ram usage:        2 bytes
  2208 ;; Hardware stack levels used:    1
  2209 ;; Hardware stack levels required when called:    4
  2210 ;; This function calls:
  2211 ;;		Nothing
  2212 ;; This function is called by:
  2213 ;;		_EUSART2_Initialize
  2214 ;; This function uses a non-reentrant model
  2215 ;;
  2216                           
  2217                           	psect	text8
  2218  002316                     __ptext8:
  2219                           	opt callstack 0
  2220  002316                     _EUSART2_SetRxInterruptHandler:
  2221                           	opt callstack 24
  2222  002316                     
  2223                           ;mcc_generated_files/eusart2.c: 290:     EUSART2_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  2224  002316  C005  F0DC         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
  2225  00231A  C006  F0DD         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
  2226  00231E  0012               	return		;funcret
  2227  002320                     __end_of_EUSART2_SetRxInterruptHandler:
  2228                           	opt callstack 0
  2229                           
  2230 ;; *************** function _EUSART2_SetOverrunErrorHandler *****************
  2231 ;; Defined at:
  2232 ;;		line 277 in file "mcc_generated_files/eusart2.c"
  2233 ;; Parameters:    Size  Location     Type
  2234 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2235 ;;		 -> EUSART2_DefaultOverrunErrorHandler(1), 
  2236 ;; Auto vars:     Size  Location     Type
  2237 ;;		None
  2238 ;; Return value:  Size  Location     Type
  2239 ;;                  1    wreg      void 
  2240 ;; Registers used:
  2241 ;;		wreg, status,2, status,0
  2242 ;; Tracked objects:
  2243 ;;		On entry : 0/0
  2244 ;;		On exit  : 0/0
  2245 ;;		Unchanged: 0/0
  2246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2247 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2250 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2251 ;;Total ram usage:        2 bytes
  2252 ;; Hardware stack levels used:    1
  2253 ;; Hardware stack levels required when called:    4
  2254 ;; This function calls:
  2255 ;;		Nothing
  2256 ;; This function is called by:
  2257 ;;		_EUSART2_Initialize
  2258 ;; This function uses a non-reentrant model
  2259 ;;
  2260                           
  2261                           	psect	text9
  2262  002320                     __ptext9:
  2263                           	opt callstack 0
  2264  002320                     _EUSART2_SetOverrunErrorHandler:
  2265                           	opt callstack 24
  2266  002320                     
  2267                           ;mcc_generated_files/eusart2.c: 278:     EUSART2_OverrunErrorHandler = interruptHandler;
  2268  002320  C005  F0D4         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler,_EUSART2_OverrunErrorHandler
  2269  002324  C006  F0D5         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler+1,_EUSART2_OverrunErrorHandler+1
  2270  002328  0012               	return		;funcret
  2271  00232A                     __end_of_EUSART2_SetOverrunErrorHandler:
  2272                           	opt callstack 0
  2273                           
  2274 ;; *************** function _EUSART2_SetFramingErrorHandler *****************
  2275 ;; Defined at:
  2276 ;;		line 273 in file "mcc_generated_files/eusart2.c"
  2277 ;; Parameters:    Size  Location     Type
  2278 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2279 ;;		 -> EUSART2_DefaultFramingErrorHandler(1), 
  2280 ;; Auto vars:     Size  Location     Type
  2281 ;;		None
  2282 ;; Return value:  Size  Location     Type
  2283 ;;                  1    wreg      void 
  2284 ;; Registers used:
  2285 ;;		wreg, status,2, status,0
  2286 ;; Tracked objects:
  2287 ;;		On entry : 0/0
  2288 ;;		On exit  : 0/0
  2289 ;;		Unchanged: 0/0
  2290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2291 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2294 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2295 ;;Total ram usage:        2 bytes
  2296 ;; Hardware stack levels used:    1
  2297 ;; Hardware stack levels required when called:    4
  2298 ;; This function calls:
  2299 ;;		Nothing
  2300 ;; This function is called by:
  2301 ;;		_EUSART2_Initialize
  2302 ;; This function uses a non-reentrant model
  2303 ;;
  2304                           
  2305                           	psect	text10
  2306  00232A                     __ptext10:
  2307                           	opt callstack 0
  2308  00232A                     _EUSART2_SetFramingErrorHandler:
  2309                           	opt callstack 24
  2310  00232A                     
  2311                           ;mcc_generated_files/eusart2.c: 274:     EUSART2_FramingErrorHandler = interruptHandler;
  2312  00232A  C005  F0D6         	movff	EUSART2_SetFramingErrorHandler@interruptHandler,_EUSART2_FramingErrorHandler
  2313  00232E  C006  F0D7         	movff	EUSART2_SetFramingErrorHandler@interruptHandler+1,_EUSART2_FramingErrorHandler+1
  2314  002332  0012               	return		;funcret
  2315  002334                     __end_of_EUSART2_SetFramingErrorHandler:
  2316                           	opt callstack 0
  2317                           
  2318 ;; *************** function _EUSART2_SetErrorHandler *****************
  2319 ;; Defined at:
  2320 ;;		line 281 in file "mcc_generated_files/eusart2.c"
  2321 ;; Parameters:    Size  Location     Type
  2322 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2323 ;;		 -> EUSART2_DefaultErrorHandler(1), 
  2324 ;; Auto vars:     Size  Location     Type
  2325 ;;		None
  2326 ;; Return value:  Size  Location     Type
  2327 ;;                  1    wreg      void 
  2328 ;; Registers used:
  2329 ;;		wreg, status,2, status,0
  2330 ;; Tracked objects:
  2331 ;;		On entry : 0/0
  2332 ;;		On exit  : 0/0
  2333 ;;		Unchanged: 0/0
  2334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2335 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2338 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2339 ;;Total ram usage:        2 bytes
  2340 ;; Hardware stack levels used:    1
  2341 ;; Hardware stack levels required when called:    4
  2342 ;; This function calls:
  2343 ;;		Nothing
  2344 ;; This function is called by:
  2345 ;;		_EUSART2_Initialize
  2346 ;; This function uses a non-reentrant model
  2347 ;;
  2348                           
  2349                           	psect	text11
  2350  002334                     __ptext11:
  2351                           	opt callstack 0
  2352  002334                     _EUSART2_SetErrorHandler:
  2353                           	opt callstack 24
  2354  002334                     
  2355                           ;mcc_generated_files/eusart2.c: 282:     EUSART2_ErrorHandler = interruptHandler;
  2356  002334  C005  F0D2         	movff	EUSART2_SetErrorHandler@interruptHandler,_EUSART2_ErrorHandler
  2357  002338  C006  F0D3         	movff	EUSART2_SetErrorHandler@interruptHandler+1,_EUSART2_ErrorHandler+1
  2358  00233C  0012               	return		;funcret
  2359  00233E                     __end_of_EUSART2_SetErrorHandler:
  2360                           	opt callstack 0
  2361                           
  2362 ;; *************** function _EUSART1_Initialize *****************
  2363 ;; Defined at:
  2364 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  2365 ;; Parameters:    Size  Location     Type
  2366 ;;		None
  2367 ;; Auto vars:     Size  Location     Type
  2368 ;;		None
  2369 ;; Return value:  Size  Location     Type
  2370 ;;                  1    wreg      void 
  2371 ;; Registers used:
  2372 ;;		wreg, status,2, status,0, cstack
  2373 ;; Tracked objects:
  2374 ;;		On entry : 0/0
  2375 ;;		On exit  : 0/0
  2376 ;;		Unchanged: 0/0
  2377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2382 ;;Total ram usage:        0 bytes
  2383 ;; Hardware stack levels used:    1
  2384 ;; Hardware stack levels required when called:    5
  2385 ;; This function calls:
  2386 ;;		_EUSART1_SetErrorHandler
  2387 ;;		_EUSART1_SetFramingErrorHandler
  2388 ;;		_EUSART1_SetOverrunErrorHandler
  2389 ;;		_EUSART1_SetRxInterruptHandler
  2390 ;;		_EUSART1_SetTxInterruptHandler
  2391 ;; This function is called by:
  2392 ;;		_SYSTEM_Initialize
  2393 ;; This function uses a non-reentrant model
  2394 ;;
  2395                           
  2396                           	psect	text12
  2397  001BD2                     __ptext12:
  2398                           	opt callstack 0
  2399  001BD2                     _EUSART1_Initialize:
  2400                           	opt callstack 24
  2401  001BD2                     
  2402                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
  2403  001BD2  010E               	movlb	14	; () banked
  2404  001BD4  9BC5               	bcf	197,5,b	;volatile
  2405  001BD6                     
  2406                           ; BSR set to: 14
  2407                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  2408  001BD6  0ED0               	movlw	low _EUSART1_Receive_ISR
  2409  001BD8  6E05               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
  2410  001BDA  0E18               	movlw	high _EUSART1_Receive_ISR
  2411  001BDC  6E06               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
  2412  001BDE  ECA4  F011         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  2413  001BE2                     
  2414                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
  2415  001BE2  010E               	movlb	14	; () banked
  2416  001BE4  99C5               	bcf	197,4,b	;volatile
  2417                           
  2418                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  2419  001BE6  0E84               	movlw	low _EUSART1_Transmit_ISR
  2420  001BE8  6E05               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
  2421  001BEA  0E20               	movlw	high _EUSART1_Transmit_ISR
  2422  001BEC  6E06               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
  2423  001BEE  EC9F  F011         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  2424  001BF2                     
  2425                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
  2426  001BF2  0E08               	movlw	8
  2427  001BF4  6E9F               	movwf	159,c	;volatile
  2428  001BF6                     
  2429                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
  2430  001BF6  0E90               	movlw	144
  2431  001BF8  6E9D               	movwf	157,c	;volatile
  2432  001BFA                     
  2433                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
  2434  001BFA  0E24               	movlw	36
  2435  001BFC  6E9E               	movwf	158,c	;volatile
  2436  001BFE                     
  2437                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x40;
  2438  001BFE  0E40               	movlw	64
  2439  001C00  6E9B               	movwf	155,c	;volatile
  2440  001C02                     
  2441                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x03;
  2442  001C02  0E03               	movlw	3
  2443  001C04  6E9C               	movwf	156,c	;volatile
  2444  001C06                     
  2445                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  2446  001C06  0EA0               	movlw	low _EUSART1_DefaultFramingErrorHandler
  2447  001C08  6E05               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  2448  001C0A  0E23               	movlw	high _EUSART1_DefaultFramingErrorHandler
  2449  001C0C  6E06               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  2450  001C0E  ECAE  F011         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  2451  001C12                     
  2452                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  2453  001C12  0E8E               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  2454  001C14  6E05               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  2455  001C16  0E23               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  2456  001C18  6E06               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  2457  001C1A  ECA9  F011         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  2458  001C1E                     
  2459                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  2460  001C1E  0E94               	movlw	low _EUSART1_DefaultErrorHandler
  2461  001C20  6E05               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  2462  001C22  0E23               	movlw	high _EUSART1_DefaultErrorHandler
  2463  001C24  6E06               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  2464  001C26  ECB3  F011         	call	_EUSART1_SetErrorHandler	;wreg free
  2465                           
  2466                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
  2467  001C2A  0E00               	movlw	0
  2468  001C2C  0100               	movlb	0	; () banked
  2469  001C2E  6F96               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  2470                           
  2471                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
  2472  001C30  0E00               	movlw	0
  2473  001C32  6F9A               	movwf	_eusart1TxHead& (0+255),b	;volatile
  2474                           
  2475                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
  2476  001C34  0E00               	movlw	0
  2477  001C36  6F99               	movwf	_eusart1TxTail& (0+255),b	;volatile
  2478                           
  2479                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  2480  001C38  0E10               	movlw	16
  2481  001C3A  6FE0               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
  2482                           
  2483                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
  2484  001C3C  0E00               	movlw	0
  2485  001C3E  6E59               	movwf	_eusart1RxHead^0,c	;volatile
  2486                           
  2487                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
  2488  001C40  0E00               	movlw	0
  2489  001C42  6F98               	movwf	_eusart1RxTail& (0+255),b	;volatile
  2490                           
  2491                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
  2492  001C44  0E00               	movlw	0
  2493  001C46  6F97               	movwf	_eusart1RxCount& (0+255),b	;volatile
  2494  001C48                     
  2495                           ; BSR set to: 0
  2496                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
  2497  001C48  010E               	movlb	14	; () banked
  2498  001C4A  8BC5               	bsf	197,5,b	;volatile
  2499  001C4C                     
  2500                           ; BSR set to: 14
  2501  001C4C  0012               	return		;funcret
  2502  001C4E                     __end_of_EUSART1_Initialize:
  2503                           	opt callstack 0
  2504                           
  2505 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  2506 ;; Defined at:
  2507 ;;		line 276 in file "mcc_generated_files/eusart1.c"
  2508 ;; Parameters:    Size  Location     Type
  2509 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2510 ;;		 -> EUSART1_Transmit_ISR(1), 
  2511 ;; Auto vars:     Size  Location     Type
  2512 ;;		None
  2513 ;; Return value:  Size  Location     Type
  2514 ;;                  1    wreg      void 
  2515 ;; Registers used:
  2516 ;;		wreg, status,2, status,0
  2517 ;; Tracked objects:
  2518 ;;		On entry : 0/0
  2519 ;;		On exit  : 0/0
  2520 ;;		Unchanged: 0/0
  2521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2522 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2525 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2526 ;;Total ram usage:        2 bytes
  2527 ;; Hardware stack levels used:    1
  2528 ;; Hardware stack levels required when called:    4
  2529 ;; This function calls:
  2530 ;;		Nothing
  2531 ;; This function is called by:
  2532 ;;		_EUSART1_Initialize
  2533 ;; This function uses a non-reentrant model
  2534 ;;
  2535                           
  2536                           	psect	text13
  2537  00233E                     __ptext13:
  2538                           	opt callstack 0
  2539  00233E                     _EUSART1_SetTxInterruptHandler:
  2540                           	opt callstack 24
  2541  00233E                     
  2542                           ;mcc_generated_files/eusart1.c: 277:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  2543  00233E  C005  F0DA         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  2544  002342  C006  F0DB         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  2545  002346  0012               	return		;funcret
  2546  002348                     __end_of_EUSART1_SetTxInterruptHandler:
  2547                           	opt callstack 0
  2548                           
  2549 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  2550 ;; Defined at:
  2551 ;;		line 280 in file "mcc_generated_files/eusart1.c"
  2552 ;; Parameters:    Size  Location     Type
  2553 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2554 ;;		 -> EUSART1_Receive_ISR(1), 
  2555 ;; Auto vars:     Size  Location     Type
  2556 ;;		None
  2557 ;; Return value:  Size  Location     Type
  2558 ;;                  1    wreg      void 
  2559 ;; Registers used:
  2560 ;;		wreg, status,2, status,0
  2561 ;; Tracked objects:
  2562 ;;		On entry : 0/0
  2563 ;;		On exit  : 0/0
  2564 ;;		Unchanged: 0/0
  2565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2566 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2569 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2570 ;;Total ram usage:        2 bytes
  2571 ;; Hardware stack levels used:    1
  2572 ;; Hardware stack levels required when called:    4
  2573 ;; This function calls:
  2574 ;;		Nothing
  2575 ;; This function is called by:
  2576 ;;		_EUSART1_Initialize
  2577 ;; This function uses a non-reentrant model
  2578 ;;
  2579                           
  2580                           	psect	text14
  2581  002348                     __ptext14:
  2582                           	opt callstack 0
  2583  002348                     _EUSART1_SetRxInterruptHandler:
  2584                           	opt callstack 24
  2585  002348                     
  2586                           ;mcc_generated_files/eusart1.c: 281:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  2587  002348  C005  F0D8         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  2588  00234C  C006  F0D9         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  2589  002350  0012               	return		;funcret
  2590  002352                     __end_of_EUSART1_SetRxInterruptHandler:
  2591                           	opt callstack 0
  2592                           
  2593 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  2594 ;; Defined at:
  2595 ;;		line 268 in file "mcc_generated_files/eusart1.c"
  2596 ;; Parameters:    Size  Location     Type
  2597 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2598 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  2599 ;; Auto vars:     Size  Location     Type
  2600 ;;		None
  2601 ;; Return value:  Size  Location     Type
  2602 ;;                  1    wreg      void 
  2603 ;; Registers used:
  2604 ;;		wreg, status,2, status,0
  2605 ;; Tracked objects:
  2606 ;;		On entry : 0/0
  2607 ;;		On exit  : 0/0
  2608 ;;		Unchanged: 0/0
  2609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2610 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2613 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2614 ;;Total ram usage:        2 bytes
  2615 ;; Hardware stack levels used:    1
  2616 ;; Hardware stack levels required when called:    4
  2617 ;; This function calls:
  2618 ;;		Nothing
  2619 ;; This function is called by:
  2620 ;;		_EUSART1_Initialize
  2621 ;; This function uses a non-reentrant model
  2622 ;;
  2623                           
  2624                           	psect	text15
  2625  002352                     __ptext15:
  2626                           	opt callstack 0
  2627  002352                     _EUSART1_SetOverrunErrorHandler:
  2628                           	opt callstack 24
  2629  002352                     
  2630                           ;mcc_generated_files/eusart1.c: 269:     EUSART1_OverrunErrorHandler = interruptHandler;
  2631  002352  C005  F0CE         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  2632  002356  C006  F0CF         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  2633  00235A  0012               	return		;funcret
  2634  00235C                     __end_of_EUSART1_SetOverrunErrorHandler:
  2635                           	opt callstack 0
  2636                           
  2637 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  2638 ;; Defined at:
  2639 ;;		line 264 in file "mcc_generated_files/eusart1.c"
  2640 ;; Parameters:    Size  Location     Type
  2641 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2642 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  2643 ;; Auto vars:     Size  Location     Type
  2644 ;;		None
  2645 ;; Return value:  Size  Location     Type
  2646 ;;                  1    wreg      void 
  2647 ;; Registers used:
  2648 ;;		wreg, status,2, status,0
  2649 ;; Tracked objects:
  2650 ;;		On entry : 0/0
  2651 ;;		On exit  : 0/0
  2652 ;;		Unchanged: 0/0
  2653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2654 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2657 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2658 ;;Total ram usage:        2 bytes
  2659 ;; Hardware stack levels used:    1
  2660 ;; Hardware stack levels required when called:    4
  2661 ;; This function calls:
  2662 ;;		Nothing
  2663 ;; This function is called by:
  2664 ;;		_EUSART1_Initialize
  2665 ;; This function uses a non-reentrant model
  2666 ;;
  2667                           
  2668                           	psect	text16
  2669  00235C                     __ptext16:
  2670                           	opt callstack 0
  2671  00235C                     _EUSART1_SetFramingErrorHandler:
  2672                           	opt callstack 24
  2673  00235C                     
  2674                           ;mcc_generated_files/eusart1.c: 265:     EUSART1_FramingErrorHandler = interruptHandler;
  2675  00235C  C005  F0D0         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  2676  002360  C006  F0D1         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  2677  002364  0012               	return		;funcret
  2678  002366                     __end_of_EUSART1_SetFramingErrorHandler:
  2679                           	opt callstack 0
  2680                           
  2681 ;; *************** function _EUSART1_SetErrorHandler *****************
  2682 ;; Defined at:
  2683 ;;		line 272 in file "mcc_generated_files/eusart1.c"
  2684 ;; Parameters:    Size  Location     Type
  2685 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2686 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  2687 ;; Auto vars:     Size  Location     Type
  2688 ;;		None
  2689 ;; Return value:  Size  Location     Type
  2690 ;;                  1    wreg      void 
  2691 ;; Registers used:
  2692 ;;		wreg, status,2, status,0
  2693 ;; Tracked objects:
  2694 ;;		On entry : 0/0
  2695 ;;		On exit  : 0/0
  2696 ;;		Unchanged: 0/0
  2697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2698 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2701 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2702 ;;Total ram usage:        2 bytes
  2703 ;; Hardware stack levels used:    1
  2704 ;; Hardware stack levels required when called:    4
  2705 ;; This function calls:
  2706 ;;		Nothing
  2707 ;; This function is called by:
  2708 ;;		_EUSART1_Initialize
  2709 ;; This function uses a non-reentrant model
  2710 ;;
  2711                           
  2712                           	psect	text17
  2713  002366                     __ptext17:
  2714                           	opt callstack 0
  2715  002366                     _EUSART1_SetErrorHandler:
  2716                           	opt callstack 24
  2717  002366                     
  2718                           ;mcc_generated_files/eusart1.c: 273:     EUSART1_ErrorHandler = interruptHandler;
  2719  002366  C005  F0CC         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  2720  00236A  C006  F0CD         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  2721  00236E  0012               	return		;funcret
  2722  002370                     __end_of_EUSART1_SetErrorHandler:
  2723                           	opt callstack 0
  2724                           
  2725 ;; *************** function _RXMode *****************
  2726 ;; Defined at:
  2727 ;;		line 56 in file "main.c"
  2728 ;; Parameters:    Size  Location     Type
  2729 ;;		None
  2730 ;; Auto vars:     Size  Location     Type
  2731 ;;		None
  2732 ;; Return value:  Size  Location     Type
  2733 ;;                  1    wreg      void 
  2734 ;; Registers used:
  2735 ;;		None
  2736 ;; Tracked objects:
  2737 ;;		On entry : 0/0
  2738 ;;		On exit  : 0/0
  2739 ;;		Unchanged: 0/0
  2740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2745 ;;Total ram usage:        0 bytes
  2746 ;; Hardware stack levels used:    1
  2747 ;; Hardware stack levels required when called:    4
  2748 ;; This function calls:
  2749 ;;		Nothing
  2750 ;; This function is called by:
  2751 ;;		_main
  2752 ;; This function uses a non-reentrant model
  2753 ;;
  2754                           
  2755                           	psect	text18
  2756  002382                     __ptext18:
  2757                           	opt callstack 0
  2758  002382                     _RXMode:
  2759                           	opt callstack 26
  2760  002382  9086               	bcf	134,0,c	;volatile
  2761  002384  9683               	bcf	131,3,c	;volatile
  2762  002386  0012               	return		;funcret
  2763  002388                     __end_of_RXMode:
  2764                           	opt callstack 0
  2765                           
  2766 ;; *************** function _PrintModbus *****************
  2767 ;; Defined at:
  2768 ;;		line 107 in file "main.c"
  2769 ;; Parameters:    Size  Location     Type
  2770 ;;		None
  2771 ;; Auto vars:     Size  Location     Type
  2772 ;;  i               2   41[BANK0 ] int 
  2773 ;; Return value:  Size  Location     Type
  2774 ;;                  1    wreg      void 
  2775 ;; Registers used:
  2776 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2777 ;; Tracked objects:
  2778 ;;		On entry : 0/0
  2779 ;;		On exit  : 0/0
  2780 ;;		Unchanged: 0/0
  2781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2783 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2784 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2785 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2786 ;;Total ram usage:        3 bytes
  2787 ;; Hardware stack levels used:    1
  2788 ;; Hardware stack levels required when called:   13
  2789 ;; This function calls:
  2790 ;;		_printf
  2791 ;; This function is called by:
  2792 ;;		_main
  2793 ;; This function uses a non-reentrant model
  2794 ;;
  2795                           
  2796                           	psect	text19
  2797  001CCA                     __ptext19:
  2798                           	opt callstack 0
  2799  001CCA                     _PrintModbus:
  2800                           	opt callstack 17
  2801  001CCA                     
  2802                           ;main.c: 112:     printf("\r\nModbus Data Capture Complete:\r\n");
  2803  001CCA  0E72               	movlw	low STR_10
  2804  001CCC  0100               	movlb	0	; () banked
  2805  001CCE  6FBD               	movwf	printf@fmt& (0+255),b
  2806  001CD0  0EFF               	movlw	high STR_10
  2807  001CD2  6FBE               	movwf	(printf@fmt+1)& (0+255),b
  2808  001CD4  EC22  F011         	call	_printf	;wreg free
  2809  001CD8                     
  2810                           ;main.c: 113:     for(i=0; i< ModDataCnt ; i++ ){
  2811  001CD8  0E00               	movlw	0
  2812  001CDA  0100               	movlb	0	; () banked
  2813  001CDC  6FCA               	movwf	(PrintModbus@i+1)& (0+255),b
  2814  001CDE  0E00               	movlw	0
  2815  001CE0  6FC9               	movwf	PrintModbus@i& (0+255),b
  2816  001CE2  EF8B  F00E         	goto	l3962
  2817  001CE6                     l3958:
  2818                           
  2819                           ; BSR set to: 0
  2820                           ;main.c: 114:         printf("   Byte Num: %i Val: 0x%02x \r\n", i, ModbusData[i]);
  2821  001CE6  0E94               	movlw	low STR_11
  2822  001CE8  6FBD               	movwf	printf@fmt& (0+255),b
  2823  001CEA  0EFF               	movlw	high STR_11
  2824  001CEC  6FBE               	movwf	(printf@fmt+1)& (0+255),b
  2825  001CEE  C0C9  F0BF         	movff	PrintModbus@i,?_printf+2
  2826  001CF2  C0CA  F0C0         	movff	PrintModbus@i+1,?_printf+3
  2827  001CF6  0E00               	movlw	low _ModbusData
  2828  001CF8  25C9               	addwf	PrintModbus@i& (0+255),w,b
  2829  001CFA  6ED9               	movwf	fsr2l,c
  2830  001CFC  0E01               	movlw	high _ModbusData
  2831  001CFE  21CA               	addwfc	(PrintModbus@i+1)& (0+255),w,b
  2832  001D00  6EDA               	movwf	fsr2h,c
  2833  001D02  50DF               	movf	indf2,w,c
  2834  001D04  6E55               	movwf	??_PrintModbus^0,c
  2835  001D06  5055               	movf	??_PrintModbus^0,w,c
  2836  001D08  6FC1               	movwf	(?_printf+4)& (0+255),b
  2837  001D0A  6BC2               	clrf	(?_printf+5)& (0+255),b
  2838  001D0C  EC22  F011         	call	_printf	;wreg free
  2839  001D10                     
  2840                           ;main.c: 115:     }
  2841  001D10  0100               	movlb	0	; () banked
  2842  001D12  4BC9               	infsnz	PrintModbus@i& (0+255),f,b
  2843  001D14  2BCA               	incf	(PrintModbus@i+1)& (0+255),f,b
  2844  001D16                     l3962:
  2845                           
  2846                           ; BSR set to: 0
  2847  001D16  518E               	movf	_ModDataCnt& (0+255),w,b
  2848  001D18  5DC9               	subwf	PrintModbus@i& (0+255),w,b
  2849  001D1A  51CA               	movf	(PrintModbus@i+1)& (0+255),w,b
  2850  001D1C  0A80               	xorlw	128
  2851  001D1E  6E55               	movwf	??_PrintModbus^0,c
  2852  001D20  518F               	movf	(_ModDataCnt+1)& (0+255),w,b
  2853  001D22  0A80               	xorlw	128
  2854  001D24  5855               	subwfb	??_PrintModbus^0,w,c
  2855  001D26  A0D8               	btfss	status,0,c
  2856  001D28  EF98  F00E         	goto	u3561
  2857  001D2C  EF9A  F00E         	goto	u3560
  2858  001D30                     u3561:
  2859  001D30  EF73  F00E         	goto	l3958
  2860  001D34                     u3560:
  2861  001D34                     
  2862                           ; BSR set to: 0
  2863                           ;main.c: 117:     ModDataCnt = 0;
  2864  001D34  0E00               	movlw	0
  2865  001D36  6F8F               	movwf	(_ModDataCnt+1)& (0+255),b
  2866  001D38  0E00               	movlw	0
  2867  001D3A  6F8E               	movwf	_ModDataCnt& (0+255),b
  2868  001D3C                     
  2869                           ; BSR set to: 0
  2870  001D3C  0012               	return		;funcret
  2871  001D3E                     __end_of_PrintModbus:
  2872                           	opt callstack 0
  2873                           
  2874 ;; *************** function _InitialiseString *****************
  2875 ;; Defined at:
  2876 ;;		line 28 in file "main.c"
  2877 ;; Parameters:    Size  Location     Type
  2878 ;;		None
  2879 ;; Auto vars:     Size  Location     Type
  2880 ;;		None
  2881 ;; Return value:  Size  Location     Type
  2882 ;;                  1    wreg      void 
  2883 ;; Registers used:
  2884 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2885 ;; Tracked objects:
  2886 ;;		On entry : 0/0
  2887 ;;		On exit  : 0/0
  2888 ;;		Unchanged: 0/0
  2889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2894 ;;Total ram usage:        0 bytes
  2895 ;; Hardware stack levels used:    1
  2896 ;; Hardware stack levels required when called:   13
  2897 ;; This function calls:
  2898 ;;		_printf
  2899 ;; This function is called by:
  2900 ;;		_main
  2901 ;; This function uses a non-reentrant model
  2902 ;;
  2903                           
  2904                           	psect	text20
  2905  001C4E                     __ptext20:
  2906                           	opt callstack 0
  2907  001C4E                     _InitialiseString:
  2908                           	opt callstack 17
  2909  001C4E                     
  2910                           ;main.c: 31:     printf("\rDan and Sam's Modbus GPIO Expansion - AP000xxxxx V0.1\r\n");
  2911  001C4E  0E7F               	movlw	low STR_1
  2912  001C50  0100               	movlb	0	; () banked
  2913  001C52  6FBD               	movwf	printf@fmt& (0+255),b
  2914  001C54  0EFE               	movlw	high STR_1
  2915  001C56  6FBE               	movwf	(printf@fmt+1)& (0+255),b
  2916  001C58  EC22  F011         	call	_printf	;wreg free
  2917                           
  2918                           ;main.c: 32:     printf("\rCard Ser No. xxxxxxx \r\n");
  2919  001C5C  0ED0               	movlw	low STR_2
  2920  001C5E  0100               	movlb	0	; () banked
  2921  001C60  6FBD               	movwf	printf@fmt& (0+255),b
  2922  001C62  0EFF               	movlw	high STR_2
  2923  001C64  6FBE               	movwf	(printf@fmt+1)& (0+255),b
  2924  001C66  EC22  F011         	call	_printf	;wreg free
  2925                           
  2926                           ;main.c: 33:     printf("\rCompiled on %s at %s by XC8 version %u\r\n\n",
  2927  001C6A  0E24               	movlw	low STR_3
  2928  001C6C  0100               	movlb	0	; () banked
  2929  001C6E  6FBD               	movwf	printf@fmt& (0+255),b
  2930  001C70  0EFF               	movlw	high STR_3
  2931  001C72  6FBE               	movwf	(printf@fmt+1)& (0+255),b
  2932  001C74  0EE9               	movlw	low STR_4
  2933  001C76  6FBF               	movwf	(?_printf+2)& (0+255),b
  2934  001C78  0EFF               	movlw	high STR_4
  2935  001C7A  6FC0               	movwf	(?_printf+3)& (0+255),b
  2936  001C7C  0EF5               	movlw	low STR_5
  2937  001C7E  6FC1               	movwf	(?_printf+4)& (0+255),b
  2938  001C80  0EFF               	movlw	high STR_5
  2939  001C82  6FC2               	movwf	(?_printf+5)& (0+255),b
  2940  001C84  0E08               	movlw	8
  2941  001C86  6FC4               	movwf	(?_printf+7)& (0+255),b
  2942  001C88  0E34               	movlw	52
  2943  001C8A  6FC3               	movwf	(?_printf+6)& (0+255),b
  2944  001C8C  EC22  F011         	call	_printf	;wreg free
  2945                           
  2946                           ;main.c: 35:     printf("\rFunction Codes Supported:\r\n");
  2947  001C90  0EB3               	movlw	low STR_6
  2948  001C92  0100               	movlb	0	; () banked
  2949  001C94  6FBD               	movwf	printf@fmt& (0+255),b
  2950  001C96  0EFF               	movlw	high STR_6
  2951  001C98  6FBE               	movwf	(printf@fmt+1)& (0+255),b
  2952  001C9A  EC22  F011         	call	_printf	;wreg free
  2953                           
  2954                           ;main.c: 36:     printf("\r   0x03 - Read Multiple Registers (Max 32x 16bit)\r\n");
  2955  001C9E  0EEF               	movlw	low STR_7
  2956  001CA0  0100               	movlb	0	; () banked
  2957  001CA2  6FBD               	movwf	printf@fmt& (0+255),b
  2958  001CA4  0EFE               	movlw	high STR_7
  2959  001CA6  6FBE               	movwf	(printf@fmt+1)& (0+255),b
  2960  001CA8  EC22  F011         	call	_printf	;wreg free
  2961                           
  2962                           ;main.c: 37:     printf("\r   0x10 - Write Multiple Registers (Max 32x 16bit)\r\n\n");
  2963  001CAC  0EB8               	movlw	low STR_8
  2964  001CAE  0100               	movlb	0	; () banked
  2965  001CB0  6FBD               	movwf	printf@fmt& (0+255),b
  2966  001CB2  0EFE               	movlw	high STR_8
  2967  001CB4  6FBE               	movwf	(printf@fmt+1)& (0+255),b
  2968  001CB6  EC22  F011         	call	_printf	;wreg free
  2969                           
  2970                           ;main.c: 38:     printf("\rInitalisation Complete - Ready\r\n\n");
  2971  001CBA  0E4F               	movlw	low STR_9
  2972  001CBC  0100               	movlb	0	; () banked
  2973  001CBE  6FBD               	movwf	printf@fmt& (0+255),b
  2974  001CC0  0EFF               	movlw	high STR_9
  2975  001CC2  6FBE               	movwf	(printf@fmt+1)& (0+255),b
  2976  001CC4  EC22  F011         	call	_printf	;wreg free
  2977  001CC8  0012               	return		;funcret
  2978  001CCA                     __end_of_InitialiseString:
  2979                           	opt callstack 0
  2980                           
  2981 ;; *************** function _printf *****************
  2982 ;; Defined at:
  2983 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
  2984 ;; Parameters:    Size  Location     Type
  2985 ;;  fmt             2   29[BANK0 ] PTR const unsigned char 
  2986 ;;		 -> STR_11(31), STR_10(34), STR_9(35), STR_8(55), 
  2987 ;;		 -> STR_7(53), STR_6(29), STR_3(43), STR_2(25), 
  2988 ;;		 -> STR_1(57), 
  2989 ;; Auto vars:     Size  Location     Type
  2990 ;;  ap              2   39[BANK0 ] PTR void [1]
  2991 ;;		 -> ?_printf(2), 
  2992 ;;  ret             2    0        int 
  2993 ;; Return value:  Size  Location     Type
  2994 ;;                  2   29[BANK0 ] int 
  2995 ;; Registers used:
  2996 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2997 ;; Tracked objects:
  2998 ;;		On entry : 0/0
  2999 ;;		On exit  : 0/0
  3000 ;;		Unchanged: 0/0
  3001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3002 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3003 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3005 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3006 ;;Total ram usage:       12 bytes
  3007 ;; Hardware stack levels used:    1
  3008 ;; Hardware stack levels required when called:   12
  3009 ;; This function calls:
  3010 ;;		_vfprintf
  3011 ;; This function is called by:
  3012 ;;		_InitialiseString
  3013 ;;		_PrintModbus
  3014 ;; This function uses a non-reentrant model
  3015 ;;
  3016                           
  3017                           	psect	text21
  3018  002244                     __ptext21:
  3019                           	opt callstack 0
  3020  002244                     _printf:
  3021                           	opt callstack 17
  3022  002244  0EBF               	movlw	low (?_printf+2)
  3023  002246  0100               	movlb	0	; () banked
  3024  002248  6FC7               	movwf	printf@ap& (0+255),b
  3025  00224A  0E00               	movlw	high (?_printf+2)
  3026  00224C  6FC8               	movwf	(printf@ap+1)& (0+255),b
  3027  00224E                     
  3028                           ; BSR set to: 0
  3029  00224E  0E00               	movlw	0
  3030  002250  6FB7               	movwf	vfprintf@fp& (0+255),b
  3031  002252  0E00               	movlw	0
  3032  002254  6FB8               	movwf	(vfprintf@fp+1)& (0+255),b
  3033  002256  C0BD  F0B9         	movff	printf@fmt,vfprintf@fmt
  3034  00225A  C0BE  F0BA         	movff	printf@fmt+1,vfprintf@fmt+1
  3035  00225E  0EC7               	movlw	low printf@ap
  3036  002260  6FBB               	movwf	vfprintf@ap& (0+255),b
  3037  002262  0E00               	movlw	high printf@ap
  3038  002264  6FBC               	movwf	(vfprintf@ap+1)& (0+255),b
  3039  002266  EC9F  F00E         	call	_vfprintf	;wreg free
  3040  00226A  0012               	return		;funcret
  3041  00226C                     __end_of_printf:
  3042                           	opt callstack 0
  3043                           
  3044 ;; *************** function _vfprintf *****************
  3045 ;; Defined at:
  3046 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3047 ;; Parameters:    Size  Location     Type
  3048 ;;  fp              2   23[BANK0 ] PTR struct _IO_FILE
  3049 ;;		 -> NULL(0), 
  3050 ;;  fmt             2   25[BANK0 ] PTR const unsigned char 
  3051 ;;		 -> STR_11(31), STR_10(34), STR_9(35), STR_8(55), 
  3052 ;;		 -> STR_7(53), STR_6(29), STR_3(43), STR_2(25), 
  3053 ;;		 -> STR_1(57), 
  3054 ;;  ap              2   27[BANK0 ] PTR PTR void 
  3055 ;;		 -> printf@ap(2), 
  3056 ;; Auto vars:     Size  Location     Type
  3057 ;;  cfmt            2   82[COMRAM] PTR unsigned char 
  3058 ;;		 -> STR_11(31), STR_10(34), STR_9(35), STR_8(55), 
  3059 ;;		 -> STR_7(53), STR_6(29), STR_3(43), STR_2(25), 
  3060 ;;		 -> STR_1(57), 
  3061 ;; Return value:  Size  Location     Type
  3062 ;;                  2   23[BANK0 ] int 
  3063 ;; Registers used:
  3064 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3065 ;; Tracked objects:
  3066 ;;		On entry : 0/0
  3067 ;;		On exit  : 0/0
  3068 ;;		Unchanged: 0/0
  3069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3070 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3071 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3073 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3074 ;;Total ram usage:        8 bytes
  3075 ;; Hardware stack levels used:    1
  3076 ;; Hardware stack levels required when called:   11
  3077 ;; This function calls:
  3078 ;;		_vfpfcnvrt
  3079 ;; This function is called by:
  3080 ;;		_printf
  3081 ;; This function uses a non-reentrant model
  3082 ;;
  3083                           
  3084                           	psect	text22
  3085  001D3E                     __ptext22:
  3086                           	opt callstack 0
  3087  001D3E                     _vfprintf:
  3088                           	opt callstack 17
  3089  001D3E                     
  3090                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  3091  001D3E  C0B9  F053         	movff	vfprintf@fmt,vfprintf@cfmt
  3092  001D42  C0BA  F054         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3093  001D46                     
  3094                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  3095  001D46  0E00               	movlw	0
  3096  001D48  0100               	movlb	0	; () banked
  3097  001D4A  6F89               	movwf	(_nout+1)& (0+255),b
  3098  001D4C  0E00               	movlw	0
  3099  001D4E  6F88               	movwf	_nout& (0+255),b
  3100                           
  3101                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3102  001D50  EFBD  F00E         	goto	l3942
  3103  001D54                     l3940:
  3104                           
  3105                           ; BSR set to: 0
  3106                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  3107  001D54  C0B7  F049         	movff	vfprintf@fp,vfpfcnvrt@fp
  3108  001D58  C0B8  F04A         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3109  001D5C  0E53               	movlw	low vfprintf@cfmt
  3110  001D5E  6E4B               	movwf	vfpfcnvrt@fmt^0,c
  3111  001D60  0E00               	movlw	high vfprintf@cfmt
  3112  001D62  6E4C               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3113  001D64  C0BB  F04D         	movff	vfprintf@ap,vfpfcnvrt@ap
  3114  001D68  C0BC  F04E         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3115  001D6C  EC95  F000         	call	_vfpfcnvrt	;wreg free
  3116  001D70  5049               	movf	?_vfpfcnvrt^0,w,c
  3117  001D72  0100               	movlb	0	; () banked
  3118  001D74  2788               	addwf	_nout& (0+255),f,b
  3119  001D76  504A               	movf	(?_vfpfcnvrt+1)^0,w,c
  3120  001D78  2389               	addwfc	(_nout+1)& (0+255),f,b
  3121  001D7A                     l3942:
  3122                           
  3123                           ; BSR set to: 0
  3124                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3125  001D7A  C053  FFF6         	movff	vfprintf@cfmt,tblptrl
  3126  001D7E  C054  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3127  001D82                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3128  001D82  6AF8               	clrf	tblptru,c
  3129  001D84                     	endif
  3130  001D84                     	if	0	;tblptru may be non-zero
  3131  001D84                     	endif
  3132  001D84  0008               	tblrd		*
  3133  001D86  50F5               	movf	tablat,w,c
  3134  001D88  0900               	iorlw	0
  3135  001D8A  A4D8               	btfss	status,2,c
  3136  001D8C  EFCA  F00E         	goto	u3551
  3137  001D90  EFCC  F00E         	goto	u3550
  3138  001D94                     u3551:
  3139  001D94  EFAA  F00E         	goto	l3940
  3140  001D98                     u3550:
  3141  001D98                     
  3142                           ; BSR set to: 0
  3143                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  3144  001D98  C088  F0B7         	movff	_nout,?_vfprintf
  3145  001D9C  C089  F0B8         	movff	_nout+1,?_vfprintf+1
  3146  001DA0                     
  3147                           ; BSR set to: 0
  3148  001DA0  0012               	return		;funcret
  3149  001DA2                     __end_of_vfprintf:
  3150                           	opt callstack 0
  3151                           
  3152 ;; *************** function _vfpfcnvrt *****************
  3153 ;; Defined at:
  3154 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3155 ;; Parameters:    Size  Location     Type
  3156 ;;  fp              2   72[COMRAM] PTR struct _IO_FILE
  3157 ;;		 -> NULL(0), 
  3158 ;;  fmt             2   74[COMRAM] PTR PTR unsigned char 
  3159 ;;		 -> vfprintf@cfmt(2), 
  3160 ;;  ap              2   76[COMRAM] PTR PTR void 
  3161 ;;		 -> printf@ap(2), 
  3162 ;; Auto vars:     Size  Location     Type
  3163 ;;  llu             8   15[BANK0 ] unsigned long long 
  3164 ;;  ll              8    0[BANK0 ] long long 
  3165 ;;  f               4    0        long long 
  3166 ;;  vp              3    0        PTR void 
  3167 ;;  ct              3    0        unsigned char [3]
  3168 ;;  done            2   10[BANK0 ] int 
  3169 ;;  cp              2    8[BANK0 ] PTR unsigned char 
  3170 ;;		 -> ?_printf(2), STR_5(9), STR_4(12), 
  3171 ;;  i               2    0        int 
  3172 ;;  c               1   14[BANK0 ] unsigned char 
  3173 ;; Return value:  Size  Location     Type
  3174 ;;                  2   72[COMRAM] int 
  3175 ;; Registers used:
  3176 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3177 ;; Tracked objects:
  3178 ;;		On entry : 0/0
  3179 ;;		On exit  : 0/0
  3180 ;;		Unchanged: 0/0
  3181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3182 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3183 ;;      Locals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3184 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3185 ;;      Totals:        10      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3186 ;;Total ram usage:       33 bytes
  3187 ;; Hardware stack levels used:    1
  3188 ;; Hardware stack levels required when called:   10
  3189 ;; This function calls:
  3190 ;;		_atoi
  3191 ;;		_dtoa
  3192 ;;		_fputc
  3193 ;;		_isdigit
  3194 ;;		_stoa
  3195 ;;		_utoa
  3196 ;;		_xtoa
  3197 ;; This function is called by:
  3198 ;;		_vfprintf
  3199 ;; This function uses a non-reentrant model
  3200 ;;
  3201                           
  3202                           	psect	text23
  3203  00012A                     __ptext23:
  3204                           	opt callstack 0
  3205  00012A                     _vfpfcnvrt:
  3206                           	opt callstack 17
  3207  00012A                     
  3208                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  3209  00012A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3210  00012E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3211  000132  CFDE FFF6          	movff	postinc2,tblptrl
  3212  000136  CFDD FFF7          	movff	postdec2,tblptrh
  3213  00013A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3214  00013A  6AF8               	clrf	tblptru,c
  3215  00013C                     	endif
  3216  00013C                     	if	0	;tblptru may be non-zero
  3217  00013C                     	endif
  3218  00013C  0008               	tblrd		*
  3219  00013E  50F5               	movf	tablat,w,c
  3220  000140  0A25               	xorlw	37
  3221  000142  A4D8               	btfss	status,2,c
  3222  000144  EFA6  F000         	goto	u2861
  3223  000148  EFA8  F000         	goto	u2860
  3224  00014C                     u2861:
  3225  00014C  EF3D  F003         	goto	l3428
  3226  000150                     u2860:
  3227  000150                     
  3228                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  3229  000150  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3230  000154  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3231  000158  2ADE               	incf	postinc2,f,c
  3232  00015A  0E00               	movlw	0
  3233  00015C  22DD               	addwfc	postdec2,f,c
  3234  00015E                     
  3235                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  3236  00015E  0E00               	movlw	0
  3237  000160  0100               	movlb	0	; () banked
  3238  000162  6F8B               	movwf	(_width+1)& (0+255),b
  3239  000164  0E00               	movlw	0
  3240  000166  6F8A               	movwf	_width& (0+255),b
  3241  000168  C08A  F057         	movff	_width,_flags
  3242  00016C  C08B  F058         	movff	_width+1,_flags+1
  3243  000170                     
  3244                           ; BSR set to: 0
  3245                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  3246  000170  698C               	setf	_prec& (0+255),b
  3247  000172  698D               	setf	(_prec+1)& (0+255),b
  3248  000174                     
  3249                           ; BSR set to: 0
  3250                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  3251  000174  0E00               	movlw	0
  3252  000176  6FAB               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  3253  000178  0E00               	movlw	0
  3254  00017A  6FAA               	movwf	vfpfcnvrt@done& (0+255),b
  3255                           
  3256                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  3257  00017C  EF07  F001         	goto	l3350
  3258  000180                     l3324:
  3259                           
  3260                           ; BSR set to: 0
  3261                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  3262  000180  8057               	bsf	_flags^0,0,c
  3263  000182                     l3326:
  3264                           
  3265                           ; BSR set to: 0
  3266                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  3267  000182  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3268  000186  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3269  00018A  2ADE               	incf	postinc2,f,c
  3270  00018C  0E00               	movlw	0
  3271  00018E  22DD               	addwfc	postdec2,f,c
  3272                           
  3273                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  3274  000190  EF07  F001         	goto	l3350
  3275  000194                     l3328:
  3276                           
  3277                           ; BSR set to: 0
  3278                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  3279  000194  8257               	bsf	_flags^0,1,c
  3280  000196  EFC1  F000         	goto	l3326
  3281  00019A                     l3332:
  3282                           
  3283                           ; BSR set to: 0
  3284                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  3285  00019A  8457               	bsf	_flags^0,2,c
  3286  00019C  EFC1  F000         	goto	l3326
  3287  0001A0                     l3336:
  3288                           
  3289                           ; BSR set to: 0
  3290                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  3291  0001A0  8657               	bsf	_flags^0,3,c
  3292  0001A2  EFC1  F000         	goto	l3326
  3293  0001A6                     l3340:
  3294                           
  3295                           ; BSR set to: 0
  3296                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  3297  0001A6  8857               	bsf	_flags^0,4,c
  3298  0001A8  EFC1  F000         	goto	l3326
  3299  0001AC                     l3344:
  3300                           
  3301                           ; BSR set to: 0
  3302                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  3303  0001AC  0E00               	movlw	0
  3304  0001AE  6FAB               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  3305  0001B0  0E01               	movlw	1
  3306  0001B2  6FAA               	movwf	vfpfcnvrt@done& (0+255),b
  3307                           
  3308                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  3309  0001B4  EF07  F001         	goto	l3350
  3310  0001B8                     l3348:
  3311                           
  3312                           ; BSR set to: 0
  3313  0001B8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3314  0001BC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3315  0001C0  CFDE FFF6          	movff	postinc2,tblptrl
  3316  0001C4  CFDD FFF7          	movff	postdec2,tblptrh
  3317  0001C8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3318  0001C8  6AF8               	clrf	tblptru,c
  3319  0001CA                     	endif
  3320  0001CA                     	if	0	;tblptru may be non-zero
  3321  0001CA                     	endif
  3322  0001CA  0008               	tblrd		*
  3323  0001CC  50F5               	movf	tablat,w,c
  3324  0001CE  6E4F               	movwf	??_vfpfcnvrt^0,c
  3325  0001D0  6A50               	clrf	(??_vfpfcnvrt+1)^0,c
  3326                           
  3327                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3328                           ; Switch size 1, requested type "simple"
  3329                           ; Number of cases is 1, Range of values is 0 to 0
  3330                           ; switch strategies available:
  3331                           ; Name         Instructions Cycles
  3332                           ; simple_byte            4     3 (average)
  3333                           ;	Chosen strategy is simple_byte
  3334  0001D2  5050               	movf	(??_vfpfcnvrt+1)^0,w,c
  3335  0001D4  0A00               	xorlw	0	; case 0
  3336  0001D6  B4D8               	btfsc	status,2,c
  3337  0001D8  EFF0  F000         	goto	l4088
  3338  0001DC  EFD6  F000         	goto	l3344
  3339  0001E0                     l4088:
  3340                           
  3341                           ; BSR set to: 0
  3342                           ; Switch size 1, requested type "simple"
  3343                           ; Number of cases is 5, Range of values is 32 to 48
  3344                           ; switch strategies available:
  3345                           ; Name         Instructions Cycles
  3346                           ; simple_byte           16     9 (average)
  3347                           ;	Chosen strategy is simple_byte
  3348  0001E0  504F               	movf	??_vfpfcnvrt^0,w,c
  3349  0001E2  0A20               	xorlw	32	; case 32
  3350  0001E4  B4D8               	btfsc	status,2,c
  3351  0001E6  EFD0  F000         	goto	l3336
  3352  0001EA  0A03               	xorlw	3	; case 35
  3353  0001EC  B4D8               	btfsc	status,2,c
  3354  0001EE  EFD3  F000         	goto	l3340
  3355  0001F2  0A08               	xorlw	8	; case 43
  3356  0001F4  B4D8               	btfsc	status,2,c
  3357  0001F6  EFCD  F000         	goto	l3332
  3358  0001FA  0A06               	xorlw	6	; case 45
  3359  0001FC  B4D8               	btfsc	status,2,c
  3360  0001FE  EFC0  F000         	goto	l3324
  3361  000202  0A1D               	xorlw	29	; case 48
  3362  000204  B4D8               	btfsc	status,2,c
  3363  000206  EFCA  F000         	goto	l3328
  3364  00020A  EFD6  F000         	goto	l3344
  3365  00020E                     l3350:
  3366                           
  3367                           ; BSR set to: 0
  3368                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  3369  00020E  51AA               	movf	vfpfcnvrt@done& (0+255),w,b
  3370  000210  11AB               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  3371  000212  B4D8               	btfsc	status,2,c
  3372  000214  EF0E  F001         	goto	u2871
  3373  000218  EF10  F001         	goto	u2870
  3374  00021C                     u2871:
  3375  00021C  EFDC  F000         	goto	l3348
  3376  000220                     u2870:
  3377  000220                     
  3378                           ; BSR set to: 0
  3379                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  3380  000220  A057               	btfss	_flags^0,0,c
  3381  000222  EF15  F001         	goto	u2881
  3382  000226  EF17  F001         	goto	u2880
  3383  00022A                     u2881:
  3384  00022A  EF18  F001         	goto	l3354
  3385  00022E                     u2880:
  3386  00022E                     
  3387                           ; BSR set to: 0
  3388                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  3389  00022E  9257               	bcf	_flags^0,1,c
  3390  000230                     l3354:
  3391                           
  3392                           ; BSR set to: 0
  3393                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  3394  000230  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3395  000234  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3396  000238  CFDE FFF6          	movff	postinc2,tblptrl
  3397  00023C  CFDD FFF7          	movff	postdec2,tblptrh
  3398  000240                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3399  000240  6AF8               	clrf	tblptru,c
  3400  000242                     	endif
  3401  000242                     	if	0	;tblptru may be non-zero
  3402  000242                     	endif
  3403  000242  0008               	tblrd		*
  3404  000244  50F5               	movf	tablat,w,c
  3405  000246  0A2A               	xorlw	42
  3406  000248  A4D8               	btfss	status,2,c
  3407  00024A  EF29  F001         	goto	u2891
  3408  00024E  EF2B  F001         	goto	u2890
  3409  000252                     u2891:
  3410  000252  EF54  F001         	goto	l3362
  3411  000256                     u2890:
  3412  000256                     
  3413                           ; BSR set to: 0
  3414                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  3415  000256  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3416  00025A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3417  00025E  2ADE               	incf	postinc2,f,c
  3418  000260  0E00               	movlw	0
  3419  000262  22DD               	addwfc	postdec2,f,c
  3420                           
  3421                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  3422  000264  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3423  000268  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3424  00026C  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  3425  000270  0E02               	movlw	2
  3426  000272  26DE               	addwf	postinc2,f,c
  3427  000274  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  3428  000278  0E00               	movlw	0
  3429  00027A  22DD               	addwfc	postdec2,f,c
  3430  00027C  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3431  000280  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3432  000284  CFDE F08A          	movff	postinc2,_width
  3433  000288  CFDD F08B          	movff	postdec2,_width+1
  3434  00028C                     
  3435                           ; BSR set to: 0
  3436                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  3437  00028C  BF8B               	btfsc	(_width+1)& (0+255),7,b
  3438  00028E  EF4D  F001         	goto	u2900
  3439  000292  EF4B  F001         	goto	u2901
  3440  000296                     u2901:
  3441  000296  EF99  F001         	goto	l3372
  3442  00029A                     u2900:
  3443  00029A                     
  3444                           ; BSR set to: 0
  3445                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  3446  00029A  8057               	bsf	_flags^0,0,c
  3447                           
  3448                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  3449  00029C  6D8A               	negf	_width& (0+255),b
  3450  00029E  1F8B               	comf	(_width+1)& (0+255),f,b
  3451  0002A0  B0D8               	btfsc	status,0,c
  3452  0002A2  2B8B               	incf	(_width+1)& (0+255),f,b
  3453  0002A4  EF99  F001         	goto	l3372
  3454  0002A8                     l3362:
  3455                           
  3456                           ; BSR set to: 0
  3457                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  3458  0002A8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3459  0002AC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3460  0002B0  CFDE F00C          	movff	postinc2,atoi@s
  3461  0002B4  CFDD F00D          	movff	postdec2,atoi@s+1
  3462  0002B8  EC03  F008         	call	_atoi	;wreg free
  3463  0002BC  C00C  F08A         	movff	?_atoi,_width
  3464  0002C0  C00D  F08B         	movff	?_atoi+1,_width+1
  3465                           
  3466                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3467  0002C4  EF6B  F001         	goto	l3366
  3468  0002C8                     l3364:
  3469                           
  3470                           ; BSR set to: 0
  3471                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  3472  0002C8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3473  0002CC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3474  0002D0  2ADE               	incf	postinc2,f,c
  3475  0002D2  0E00               	movlw	0
  3476  0002D4  22DD               	addwfc	postdec2,f,c
  3477  0002D6                     l3366:
  3478  0002D6  0ED0               	movlw	208
  3479  0002D8  6E4F               	movwf	??_vfpfcnvrt^0,c
  3480  0002DA  0EFF               	movlw	255
  3481  0002DC  6E50               	movwf	(??_vfpfcnvrt+1)^0,c
  3482  0002DE  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3483  0002E2  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3484  0002E6  CFDE FFF6          	movff	postinc2,tblptrl
  3485  0002EA  CFDD FFF7          	movff	postdec2,tblptrh
  3486  0002EE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3487  0002EE  6AF8               	clrf	tblptru,c
  3488  0002F0                     	endif
  3489  0002F0                     	if	0	;tblptru may be non-zero
  3490  0002F0                     	endif
  3491  0002F0  0008               	tblrd		*
  3492  0002F2  50F5               	movf	tablat,w,c
  3493  0002F4  6E51               	movwf	(??_vfpfcnvrt+2)^0,c
  3494  0002F6  6A52               	clrf	(??_vfpfcnvrt+3)^0,c
  3495  0002F8  504F               	movf	??_vfpfcnvrt^0,w,c
  3496  0002FA  2651               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3497  0002FC  5050               	movf	(??_vfpfcnvrt+1)^0,w,c
  3498  0002FE  2252               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3499  000300  5052               	movf	(??_vfpfcnvrt+3)^0,w,c
  3500  000302  E10A               	bnz	u2910
  3501  000304  0E0A               	movlw	10
  3502  000306  5C51               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3503  000308  A0D8               	btfss	status,0,c
  3504  00030A  EF89  F001         	goto	u2911
  3505  00030E  EF8C  F001         	goto	u2910
  3506  000312                     u2911:
  3507  000312  0E01               	movlw	1
  3508  000314  EF8D  F001         	goto	u2920
  3509  000318                     u2910:
  3510  000318  0E00               	movlw	0
  3511  00031A                     u2920:
  3512  00031A  0100               	movlb	0	; () banked
  3513  00031C  6FAC               	movwf	_vfpfcnvrt$1265& (0+255),b
  3514  00031E  6BAD               	clrf	(_vfpfcnvrt$1265+1)& (0+255),b
  3515  000320                     
  3516                           ; BSR set to: 0
  3517  000320  51AC               	movf	_vfpfcnvrt$1265& (0+255),w,b
  3518  000322  11AD               	iorwf	(_vfpfcnvrt$1265+1)& (0+255),w,b
  3519  000324  A4D8               	btfss	status,2,c
  3520  000326  EF97  F001         	goto	u2931
  3521  00032A  EF99  F001         	goto	u2930
  3522  00032E                     u2931:
  3523  00032E  EF64  F001         	goto	l3364
  3524  000332                     u2930:
  3525  000332                     l3372:
  3526                           
  3527                           ; BSR set to: 0
  3528                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3529  000332  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3530  000336  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3531  00033A  CFDE FFF6          	movff	postinc2,tblptrl
  3532  00033E  CFDD FFF7          	movff	postdec2,tblptrh
  3533  000342                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3534  000342  6AF8               	clrf	tblptru,c
  3535  000344                     	endif
  3536  000344                     	if	0	;tblptru may be non-zero
  3537  000344                     	endif
  3538  000344  0008               	tblrd		*
  3539  000346  50F5               	movf	tablat,w,c
  3540  000348  0A64               	xorlw	100
  3541  00034A  B4D8               	btfsc	status,2,c
  3542  00034C  EFAA  F001         	goto	u2941
  3543  000350  EFAC  F001         	goto	u2940
  3544  000354                     u2941:
  3545  000354  EFBF  F001         	goto	l3376
  3546  000358                     u2940:
  3547  000358                     
  3548                           ; BSR set to: 0
  3549  000358  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3550  00035C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3551  000360  CFDE FFF6          	movff	postinc2,tblptrl
  3552  000364  CFDD FFF7          	movff	postdec2,tblptrh
  3553  000368                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3554  000368  6AF8               	clrf	tblptru,c
  3555  00036A                     	endif
  3556  00036A                     	if	0	;tblptru may be non-zero
  3557  00036A                     	endif
  3558  00036A  0008               	tblrd		*
  3559  00036C  50F5               	movf	tablat,w,c
  3560  00036E  0A69               	xorlw	105
  3561  000370  A4D8               	btfss	status,2,c
  3562  000372  EFBD  F001         	goto	u2951
  3563  000376  EFBF  F001         	goto	u2950
  3564  00037A                     u2951:
  3565  00037A  EFFF  F001         	goto	l3382
  3566  00037E                     u2950:
  3567  00037E                     l3376:
  3568                           
  3569                           ; BSR set to: 0
  3570                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  3571  00037E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3572  000382  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3573  000386  2ADE               	incf	postinc2,f,c
  3574  000388  0E00               	movlw	0
  3575  00038A  22DD               	addwfc	postdec2,f,c
  3576                           
  3577                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3578  00038C  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3579  000390  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3580  000394  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  3581  000398  0E02               	movlw	2
  3582  00039A  26DE               	addwf	postinc2,f,c
  3583  00039C  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  3584  0003A0  0E00               	movlw	0
  3585  0003A2  22DD               	addwfc	postdec2,f,c
  3586  0003A4  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3587  0003A8  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3588  0003AC  CFDE F0A0          	movff	postinc2,vfpfcnvrt@ll
  3589  0003B0  CFDD F0A1          	movff	postdec2,vfpfcnvrt@ll+1
  3590  0003B4  0E00               	movlw	0
  3591  0003B6  BFA1               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  3592  0003B8  0EFF               	movlw	-1
  3593  0003BA  6FA2               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  3594  0003BC  6FA3               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  3595  0003BE  6FA4               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  3596  0003C0  6FA5               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  3597  0003C2  6FA6               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  3598  0003C4  6FA7               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  3599  0003C6                     
  3600                           ; BSR set to: 0
  3601                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  3602  0003C6  C049  F022         	movff	vfpfcnvrt@fp,dtoa@fp
  3603  0003CA  C04A  F023         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3604  0003CE  C0A0  F024         	movff	vfpfcnvrt@ll,dtoa@d
  3605  0003D2  C0A1  F025         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3606  0003D6  C0A2  F026         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3607  0003DA  C0A3  F027         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3608  0003DE  C0A4  F028         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3609  0003E2  C0A5  F029         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3610  0003E6  C0A6  F02A         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3611  0003EA  C0A7  F02B         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3612  0003EE  EC5A  F003         	call	_dtoa	;wreg free
  3613  0003F2  C022  F049         	movff	?_dtoa,?_vfpfcnvrt
  3614  0003F6  C023  F04A         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3615  0003FA  EF59  F003         	goto	l790
  3616  0003FE                     l3382:
  3617                           
  3618                           ; BSR set to: 0
  3619                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  3620  0003FE  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3621  000402  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3622  000406  CFDE FFF6          	movff	postinc2,tblptrl
  3623  00040A  CFDD FFF7          	movff	postdec2,tblptrh
  3624  00040E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3625  00040E  6AF8               	clrf	tblptru,c
  3626  000410                     	endif
  3627  000410                     	if	0	;tblptru may be non-zero
  3628  000410                     	endif
  3629  000410  0008               	tblrd		*
  3630  000412  50F5               	movf	tablat,w,c
  3631  000414  0A73               	xorlw	115
  3632  000416  A4D8               	btfss	status,2,c
  3633  000418  EF10  F002         	goto	u2961
  3634  00041C  EF12  F002         	goto	u2960
  3635  000420                     u2961:
  3636  000420  EF3D  F002         	goto	l3390
  3637  000424                     u2960:
  3638  000424                     
  3639                           ; BSR set to: 0
  3640                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  3641  000424  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3642  000428  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3643  00042C  2ADE               	incf	postinc2,f,c
  3644  00042E  0E00               	movlw	0
  3645  000430  22DD               	addwfc	postdec2,f,c
  3646                           
  3647                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  3648  000432  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3649  000436  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3650  00043A  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  3651  00043E  0E02               	movlw	2
  3652  000440  26DE               	addwf	postinc2,f,c
  3653  000442  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  3654  000446  0E00               	movlw	0
  3655  000448  22DD               	addwfc	postdec2,f,c
  3656  00044A  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3657  00044E  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3658  000452  CFDE F0A8          	movff	postinc2,vfpfcnvrt@cp
  3659  000456  CFDD F0A9          	movff	postdec2,vfpfcnvrt@cp+1
  3660  00045A                     
  3661                           ; BSR set to: 0
  3662                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  3663  00045A  C049  F010         	movff	vfpfcnvrt@fp,stoa@fp
  3664  00045E  C04A  F011         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  3665  000462  C0A8  F012         	movff	vfpfcnvrt@cp,stoa@s
  3666  000466  C0A9  F013         	movff	vfpfcnvrt@cp+1,stoa@s+1
  3667  00046A  EC36  F007         	call	_stoa	;wreg free
  3668  00046E  C010  F049         	movff	?_stoa,?_vfpfcnvrt
  3669  000472  C011  F04A         	movff	?_stoa+1,?_vfpfcnvrt+1
  3670  000476  EF59  F003         	goto	l790
  3671  00047A                     l3390:
  3672                           
  3673                           ; BSR set to: 0
  3674                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  3675  00047A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3676  00047E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3677  000482  CFDE FFF6          	movff	postinc2,tblptrl
  3678  000486  CFDD FFF7          	movff	postdec2,tblptrh
  3679  00048A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3680  00048A  6AF8               	clrf	tblptru,c
  3681  00048C                     	endif
  3682  00048C                     	if	0	;tblptru may be non-zero
  3683  00048C                     	endif
  3684  00048C  0008               	tblrd		*
  3685  00048E  50F5               	movf	tablat,w,c
  3686  000490  0A75               	xorlw	117
  3687  000492  A4D8               	btfss	status,2,c
  3688  000494  EF4E  F002         	goto	u2971
  3689  000498  EF50  F002         	goto	u2970
  3690  00049C                     u2971:
  3691  00049C  EF91  F002         	goto	l3398
  3692  0004A0                     u2970:
  3693  0004A0                     
  3694                           ; BSR set to: 0
  3695                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  3696  0004A0  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3697  0004A4  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3698  0004A8  2ADE               	incf	postinc2,f,c
  3699  0004AA  0E00               	movlw	0
  3700  0004AC  22DD               	addwfc	postdec2,f,c
  3701                           
  3702                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  3703  0004AE  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3704  0004B2  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3705  0004B6  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  3706  0004BA  0E02               	movlw	2
  3707  0004BC  26DE               	addwf	postinc2,f,c
  3708  0004BE  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  3709  0004C2  0E00               	movlw	0
  3710  0004C4  22DD               	addwfc	postdec2,f,c
  3711  0004C6  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3712  0004CA  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3713  0004CE  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
  3714  0004D2  CFDD F052          	movff	postdec2,??_vfpfcnvrt+3
  3715  0004D6  C051  F0AF         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3716  0004DA  C052  F0B0         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3717  0004DE  6BB1               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3718  0004E0  6BB2               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3719  0004E2  6BB3               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3720  0004E4  6BB4               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3721  0004E6  6BB5               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3722  0004E8  6BB6               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3723  0004EA                     
  3724                           ; BSR set to: 0
  3725                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
  3726  0004EA  C049  F022         	movff	vfpfcnvrt@fp,utoa@fp
  3727  0004EE  C04A  F023         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  3728  0004F2  C0AF  F024         	movff	vfpfcnvrt@llu,utoa@d
  3729  0004F6  C0B0  F025         	movff	vfpfcnvrt@llu+1,utoa@d+1
  3730  0004FA  C0B1  F026         	movff	vfpfcnvrt@llu+2,utoa@d+2
  3731  0004FE  C0B2  F027         	movff	vfpfcnvrt@llu+3,utoa@d+3
  3732  000502  C0B3  F028         	movff	vfpfcnvrt@llu+4,utoa@d+4
  3733  000506  C0B4  F029         	movff	vfpfcnvrt@llu+5,utoa@d+5
  3734  00050A  C0B5  F02A         	movff	vfpfcnvrt@llu+6,utoa@d+6
  3735  00050E  C0B6  F02B         	movff	vfpfcnvrt@llu+7,utoa@d+7
  3736  000512  EC35  F006         	call	_utoa	;wreg free
  3737  000516  C022  F049         	movff	?_utoa,?_vfpfcnvrt
  3738  00051A  C023  F04A         	movff	?_utoa+1,?_vfpfcnvrt+1
  3739  00051E  EF59  F003         	goto	l790
  3740  000522                     l3398:
  3741                           
  3742                           ; BSR set to: 0
  3743                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  3744  000522  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3745  000526  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3746  00052A  CFDE FFF6          	movff	postinc2,tblptrl
  3747  00052E  CFDD FFF7          	movff	postdec2,tblptrh
  3748  000532                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3749  000532  6AF8               	clrf	tblptru,c
  3750  000534                     	endif
  3751  000534                     	if	0	;tblptru may be non-zero
  3752  000534                     	endif
  3753  000534  0008               	tblrd		*
  3754  000536  50F5               	movf	tablat,w,c
  3755  000538  0A78               	xorlw	120
  3756  00053A  B4D8               	btfsc	status,2,c
  3757  00053C  EFA2  F002         	goto	u2981
  3758  000540  EFA4  F002         	goto	u2980
  3759  000544                     u2981:
  3760  000544  EFB7  F002         	goto	l3402
  3761  000548                     u2980:
  3762  000548                     
  3763                           ; BSR set to: 0
  3764  000548  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3765  00054C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3766  000550  CFDE FFF6          	movff	postinc2,tblptrl
  3767  000554  CFDD FFF7          	movff	postdec2,tblptrh
  3768  000558                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3769  000558  6AF8               	clrf	tblptru,c
  3770  00055A                     	endif
  3771  00055A                     	if	0	;tblptru may be non-zero
  3772  00055A                     	endif
  3773  00055A  0008               	tblrd		*
  3774  00055C  50F5               	movf	tablat,w,c
  3775  00055E  0A58               	xorlw	88
  3776  000560  A4D8               	btfss	status,2,c
  3777  000562  EFB5  F002         	goto	u2991
  3778  000566  EFB7  F002         	goto	u2990
  3779  00056A                     u2991:
  3780  00056A  EF06  F003         	goto	l3412
  3781  00056E                     u2990:
  3782  00056E                     l3402:
  3783                           
  3784                           ; BSR set to: 0
  3785                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  3786  00056E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3787  000572  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3788  000576  CFDE FFF6          	movff	postinc2,tblptrl
  3789  00057A  CFDD FFF7          	movff	postdec2,tblptrh
  3790  00057E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3791  00057E  6AF8               	clrf	tblptru,c
  3792  000580                     	endif
  3793  000580                     	if	0	;tblptru may be non-zero
  3794  000580                     	endif
  3795  000580  0008               	tblrd		*
  3796  000582  CFF5 F0AE          	movff	tablat,vfpfcnvrt@c
  3797  000586                     
  3798                           ; BSR set to: 0
  3799                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  3800  000586  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3801  00058A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3802  00058E  2ADE               	incf	postinc2,f,c
  3803  000590  0E00               	movlw	0
  3804  000592  22DD               	addwfc	postdec2,f,c
  3805  000594                     
  3806                           ; BSR set to: 0
  3807                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  3808  000594  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3809  000598  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3810  00059C  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  3811  0005A0  0E02               	movlw	2
  3812  0005A2  26DE               	addwf	postinc2,f,c
  3813  0005A4  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  3814  0005A8  0E00               	movlw	0
  3815  0005AA  22DD               	addwfc	postdec2,f,c
  3816  0005AC  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3817  0005B0  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3818  0005B4  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
  3819  0005B8  CFDD F052          	movff	postdec2,??_vfpfcnvrt+3
  3820  0005BC  C051  F0AF         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3821  0005C0  C052  F0B0         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3822  0005C4  6BB1               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3823  0005C6  6BB2               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3824  0005C8  6BB3               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3825  0005CA  6BB4               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3826  0005CC  6BB5               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3827  0005CE  6BB6               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3828  0005D0                     
  3829                           ; BSR set to: 0
  3830                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
  3831  0005D0  C049  F022         	movff	vfpfcnvrt@fp,xtoa@fp
  3832  0005D4  C04A  F023         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  3833  0005D8  C0AF  F024         	movff	vfpfcnvrt@llu,xtoa@d
  3834  0005DC  C0B0  F025         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  3835  0005E0  C0B1  F026         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  3836  0005E4  C0B2  F027         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  3837  0005E8  C0B3  F028         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  3838  0005EC  C0B4  F029         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  3839  0005F0  C0B5  F02A         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  3840  0005F4  C0B6  F02B         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  3841  0005F8  C0AE  F02C         	movff	vfpfcnvrt@c,xtoa@x
  3842  0005FC  ECCA  F004         	call	_xtoa	;wreg free
  3843  000600  C022  F049         	movff	?_xtoa,?_vfpfcnvrt
  3844  000604  C023  F04A         	movff	?_xtoa+1,?_vfpfcnvrt+1
  3845  000608  EF59  F003         	goto	l790
  3846  00060C                     l3412:
  3847                           
  3848                           ; BSR set to: 0
  3849                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  3850  00060C  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3851  000610  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3852  000614  CFDE FFF6          	movff	postinc2,tblptrl
  3853  000618  CFDD FFF7          	movff	postdec2,tblptrh
  3854  00061C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3855  00061C  6AF8               	clrf	tblptru,c
  3856  00061E                     	endif
  3857  00061E                     	if	0	;tblptru may be non-zero
  3858  00061E                     	endif
  3859  00061E  0008               	tblrd		*
  3860  000620  50F5               	movf	tablat,w,c
  3861  000622  0A25               	xorlw	37
  3862  000624  A4D8               	btfss	status,2,c
  3863  000626  EF17  F003         	goto	u3001
  3864  00062A  EF19  F003         	goto	u3000
  3865  00062E                     u3001:
  3866  00062E  EF30  F003         	goto	l3422
  3867  000632                     u3000:
  3868  000632                     
  3869                           ; BSR set to: 0
  3870                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  3871  000632  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3872  000636  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3873  00063A  2ADE               	incf	postinc2,f,c
  3874  00063C  0E00               	movlw	0
  3875  00063E  22DD               	addwfc	postdec2,f,c
  3876  000640                     
  3877                           ; BSR set to: 0
  3878                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  3879  000640  0E00               	movlw	0
  3880  000642  6E08               	movwf	(fputc@c+1)^0,c
  3881  000644  0E25               	movlw	37
  3882  000646  6E07               	movwf	fputc@c^0,c
  3883  000648  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
  3884  00064C  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3885  000650  EC18  F00D         	call	_fputc	;wreg free
  3886  000654                     l3418:
  3887                           
  3888                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  3889  000654  0E00               	movlw	0
  3890  000656  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
  3891  000658  0E01               	movlw	1
  3892  00065A  6E49               	movwf	?_vfpfcnvrt^0,c
  3893  00065C  EF59  F003         	goto	l790
  3894  000660                     l3422:
  3895                           
  3896                           ; BSR set to: 0
  3897                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  3898  000660  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3899  000664  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3900  000668  2ADE               	incf	postinc2,f,c
  3901  00066A  0E00               	movlw	0
  3902  00066C  22DD               	addwfc	postdec2,f,c
  3903  00066E                     
  3904                           ; BSR set to: 0
  3905                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  3906  00066E  0E00               	movlw	0
  3907  000670  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
  3908  000672  0E00               	movlw	0
  3909  000674  6E49               	movwf	?_vfpfcnvrt^0,c
  3910  000676  EF59  F003         	goto	l790
  3911  00067A                     l3428:
  3912                           
  3913                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  3914  00067A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3915  00067E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3916  000682  CFDE FFF6          	movff	postinc2,tblptrl
  3917  000686  CFDD FFF7          	movff	postdec2,tblptrh
  3918  00068A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3919  00068A  6AF8               	clrf	tblptru,c
  3920  00068C                     	endif
  3921  00068C                     	if	0	;tblptru may be non-zero
  3922  00068C                     	endif
  3923  00068C  0008               	tblrd		*
  3924  00068E  50F5               	movf	tablat,w,c
  3925  000690  6E07               	movwf	fputc@c^0,c
  3926  000692  6A08               	clrf	(fputc@c+1)^0,c
  3927  000694  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
  3928  000698  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3929  00069C  EC18  F00D         	call	_fputc	;wreg free
  3930  0006A0                     
  3931                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  3932  0006A0  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3933  0006A4  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3934  0006A8  2ADE               	incf	postinc2,f,c
  3935  0006AA  0E00               	movlw	0
  3936  0006AC  22DD               	addwfc	postdec2,f,c
  3937  0006AE  EF2A  F003         	goto	l3418
  3938  0006B2                     l790:
  3939  0006B2  0012               	return		;funcret
  3940  0006B4                     __end_of_vfpfcnvrt:
  3941                           	opt callstack 0
  3942                           
  3943 ;; *************** function _xtoa *****************
  3944 ;; Defined at:
  3945 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3946 ;; Parameters:    Size  Location     Type
  3947 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  3948 ;;		 -> NULL(0), 
  3949 ;;  d               8   35[COMRAM] unsigned long long 
  3950 ;;  x               1   43[COMRAM] unsigned char 
  3951 ;; Auto vars:     Size  Location     Type
  3952 ;;  n               8   60[COMRAM] unsigned long long 
  3953 ;;  c               2   70[COMRAM] int 
  3954 ;;  i               2   68[COMRAM] int 
  3955 ;;  w               2   58[COMRAM] int 
  3956 ;;  p               2   56[COMRAM] int 
  3957 ;; Return value:  Size  Location     Type
  3958 ;;                  2   33[COMRAM] int 
  3959 ;; Registers used:
  3960 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3961 ;; Tracked objects:
  3962 ;;		On entry : 0/0
  3963 ;;		On exit  : 0/0
  3964 ;;		Unchanged: 0/0
  3965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3966 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3967 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3968 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3969 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3970 ;;Total ram usage:       39 bytes
  3971 ;; Hardware stack levels used:    1
  3972 ;; Hardware stack levels required when called:    9
  3973 ;; This function calls:
  3974 ;;		_isalpha
  3975 ;;		_isupper
  3976 ;;		_pad
  3977 ;;		_toupper
  3978 ;; This function is called by:
  3979 ;;		_vfpfcnvrt
  3980 ;; This function uses a non-reentrant model
  3981 ;;
  3982                           
  3983                           	psect	text24
  3984  000994                     __ptext24:
  3985                           	opt callstack 0
  3986  000994                     _xtoa:
  3987                           	opt callstack 17
  3988  000994                     
  3989                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  3990  000994  0100               	movlb	0	; () banked
  3991  000996  BF8D               	btfsc	(_prec+1)& (0+255),7,b
  3992  000998  EFD0  F004         	goto	u2621
  3993  00099C  EFD2  F004         	goto	u2620
  3994  0009A0                     u2621:
  3995  0009A0  EFD3  F004         	goto	l3210
  3996  0009A4                     u2620:
  3997  0009A4                     
  3998                           ; BSR set to: 0
  3999                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  4000  0009A4  9257               	bcf	_flags^0,1,c
  4001  0009A6                     l3210:
  4002                           
  4003                           ; BSR set to: 0
  4004                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  4005  0009A6  BF8D               	btfsc	(_prec+1)& (0+255),7,b
  4006  0009A8  EFE0  F004         	goto	u2630
  4007  0009AC  518D               	movf	(_prec+1)& (0+255),w,b
  4008  0009AE  E106               	bnz	u2631
  4009  0009B0  058C               	decf	_prec& (0+255),w,b
  4010  0009B2  B0D8               	btfsc	status,0,c
  4011  0009B4  EFDE  F004         	goto	u2631
  4012  0009B8  EFE0  F004         	goto	u2630
  4013  0009BC                     u2631:
  4014  0009BC  EFE6  F004         	goto	l736
  4015  0009C0                     u2630:
  4016  0009C0                     
  4017                           ; BSR set to: 0
  4018  0009C0  0E00               	movlw	0
  4019  0009C2  6E3A               	movwf	(xtoa@p+1)^0,c
  4020  0009C4  0E01               	movlw	1
  4021  0009C6  6E39               	movwf	xtoa@p^0,c
  4022  0009C8  EFEA  F004         	goto	l738
  4023  0009CC                     l736:
  4024                           
  4025                           ; BSR set to: 0
  4026  0009CC  C08C  F039         	movff	_prec,xtoa@p
  4027  0009D0  C08D  F03A         	movff	_prec+1,xtoa@p+1
  4028  0009D4                     l738:
  4029                           
  4030                           ; BSR set to: 0
  4031                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  4032  0009D4  C08A  F03B         	movff	_width,xtoa@w
  4033  0009D8  C08B  F03C         	movff	_width+1,xtoa@w+1
  4034                           
  4035                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  4036  0009DC  A857               	btfss	_flags^0,4,c
  4037  0009DE  EFF3  F004         	goto	u2641
  4038  0009E2  EFF5  F004         	goto	u2640
  4039  0009E6                     u2641:
  4040  0009E6  EFF9  F004         	goto	l3216
  4041  0009EA                     u2640:
  4042  0009EA                     
  4043                           ; BSR set to: 0
  4044                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  4045  0009EA  0EFE               	movlw	254
  4046  0009EC  263B               	addwf	xtoa@w^0,f,c
  4047  0009EE  0EFF               	movlw	255
  4048  0009F0  223C               	addwfc	(xtoa@w+1)^0,f,c
  4049  0009F2                     l3216:
  4050                           
  4051                           ; BSR set to: 0
  4052                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  4053  0009F2  C024  F03D         	movff	xtoa@d,xtoa@n
  4054  0009F6  C025  F03E         	movff	xtoa@d+1,xtoa@n+1
  4055  0009FA  C026  F03F         	movff	xtoa@d+2,xtoa@n+2
  4056  0009FE  C027  F040         	movff	xtoa@d+3,xtoa@n+3
  4057  000A02  C028  F041         	movff	xtoa@d+4,xtoa@n+4
  4058  000A06  C029  F042         	movff	xtoa@d+5,xtoa@n+5
  4059  000A0A  C02A  F043         	movff	xtoa@d+6,xtoa@n+6
  4060  000A0E  C02B  F044         	movff	xtoa@d+7,xtoa@n+7
  4061  000A12                     
  4062                           ; BSR set to: 0
  4063                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  4064  000A12  0E00               	movlw	0
  4065  000A14  6E46               	movwf	(xtoa@i+1)^0,c
  4066  000A16  0E1F               	movlw	31
  4067  000A18  6E45               	movwf	xtoa@i^0,c
  4068  000A1A                     
  4069                           ; BSR set to: 0
  4070                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  4071  000A1A  0E00               	movlw	0
  4072  000A1C  0101               	movlb	1	; () banked
  4073  000A1E  6FE7               	movwf	(_dbuf+31)& (0+255),b
  4074                           
  4075                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4076  000A20  EFC5  F005         	goto	l3252
  4077  000A24                     l3222:
  4078                           
  4079                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  4080  000A24  0645               	decf	xtoa@i^0,f,c
  4081  000A26  A0D8               	btfss	status,0,c
  4082  000A28  0646               	decf	(xtoa@i+1)^0,f,c
  4083  000A2A                     
  4084                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  4085  000A2A  0E0F               	movlw	15
  4086  000A2C  143D               	andwf	xtoa@n^0,w,c
  4087  000A2E  6E47               	movwf	xtoa@c^0,c
  4088  000A30  6A48               	clrf	(xtoa@c+1)^0,c
  4089  000A32                     
  4090                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  4091  000A32  BE48               	btfsc	(xtoa@c+1)^0,7,c
  4092  000A34  EF25  F005         	goto	u2651
  4093  000A38  5048               	movf	(xtoa@c+1)^0,w,c
  4094  000A3A  E109               	bnz	u2650
  4095  000A3C  0E0A               	movlw	10
  4096  000A3E  5C47               	subwf	xtoa@c^0,w,c
  4097  000A40  A0D8               	btfss	status,0,c
  4098  000A42  EF25  F005         	goto	u2651
  4099  000A46  EF27  F005         	goto	u2650
  4100  000A4A                     u2651:
  4101  000A4A  EF2F  F005         	goto	l3230
  4102  000A4E                     u2650:
  4103  000A4E  0E57               	movlw	87
  4104  000A50  2447               	addwf	xtoa@c^0,w,c
  4105  000A52  6E47               	movwf	xtoa@c^0,c
  4106  000A54  0E00               	movlw	0
  4107  000A56  2048               	addwfc	(xtoa@c+1)^0,w,c
  4108  000A58  6E48               	movwf	(xtoa@c+1)^0,c
  4109  000A5A  EF35  F005         	goto	l745
  4110  000A5E                     l3230:
  4111  000A5E  0E30               	movlw	48
  4112  000A60  2447               	addwf	xtoa@c^0,w,c
  4113  000A62  6E47               	movwf	xtoa@c^0,c
  4114  000A64  0E00               	movlw	0
  4115  000A66  2048               	addwfc	(xtoa@c+1)^0,w,c
  4116  000A68  6E48               	movwf	(xtoa@c+1)^0,c
  4117  000A6A                     l745:
  4118  000A6A  0EBF               	movlw	191
  4119  000A6C  6E2D               	movwf	??_xtoa^0,c
  4120  000A6E  0EFF               	movlw	255
  4121  000A70  6E2E               	movwf	(??_xtoa+1)^0,c
  4122  000A72  502C               	movf	xtoa@x^0,w,c
  4123  000A74  6E2F               	movwf	(??_xtoa+2)^0,c
  4124  000A76  6A30               	clrf	(??_xtoa+3)^0,c
  4125  000A78  502D               	movf	??_xtoa^0,w,c
  4126  000A7A  262F               	addwf	(??_xtoa+2)^0,f,c
  4127  000A7C  502E               	movf	(??_xtoa+1)^0,w,c
  4128  000A7E  2230               	addwfc	(??_xtoa+3)^0,f,c
  4129  000A80  5030               	movf	(??_xtoa+3)^0,w,c
  4130  000A82  E10A               	bnz	u2660
  4131  000A84  0E1A               	movlw	26
  4132  000A86  5C2F               	subwf	(??_xtoa+2)^0,w,c
  4133  000A88  A0D8               	btfss	status,0,c
  4134  000A8A  EF49  F005         	goto	u2661
  4135  000A8E  EF4C  F005         	goto	u2660
  4136  000A92                     u2661:
  4137  000A92  0E01               	movlw	1
  4138  000A94  EF4D  F005         	goto	u2670
  4139  000A98                     u2660:
  4140  000A98  0E00               	movlw	0
  4141  000A9A                     u2670:
  4142  000A9A  6E35               	movwf	_xtoa$1250^0,c
  4143  000A9C  6A36               	clrf	(_xtoa$1250+1)^0,c
  4144  000A9E  5035               	movf	_xtoa$1250^0,w,c
  4145  000AA0  1036               	iorwf	(_xtoa$1250+1)^0,w,c
  4146  000AA2  B4D8               	btfsc	status,2,c
  4147  000AA4  EF56  F005         	goto	u2681
  4148  000AA8  EF58  F005         	goto	u2680
  4149  000AAC                     u2681:
  4150  000AAC  EF88  F005         	goto	l3244
  4151  000AB0                     u2680:
  4152  000AB0  0E9F               	movlw	159
  4153  000AB2  6E2D               	movwf	??_xtoa^0,c
  4154  000AB4  0EFF               	movlw	255
  4155  000AB6  6E2E               	movwf	(??_xtoa+1)^0,c
  4156  000AB8  0E20               	movlw	32
  4157  000ABA  1047               	iorwf	xtoa@c^0,w,c
  4158  000ABC  6E2F               	movwf	(??_xtoa+2)^0,c
  4159  000ABE  0E00               	movlw	0
  4160  000AC0  1048               	iorwf	(xtoa@c+1)^0,w,c
  4161  000AC2  6E30               	movwf	(??_xtoa+3)^0,c
  4162  000AC4  502D               	movf	??_xtoa^0,w,c
  4163  000AC6  262F               	addwf	(??_xtoa+2)^0,f,c
  4164  000AC8  502E               	movf	(??_xtoa+1)^0,w,c
  4165  000ACA  2230               	addwfc	(??_xtoa+3)^0,f,c
  4166  000ACC  5030               	movf	(??_xtoa+3)^0,w,c
  4167  000ACE  E10A               	bnz	u2690
  4168  000AD0  0E1A               	movlw	26
  4169  000AD2  5C2F               	subwf	(??_xtoa+2)^0,w,c
  4170  000AD4  A0D8               	btfss	status,0,c
  4171  000AD6  EF6F  F005         	goto	u2691
  4172  000ADA  EF72  F005         	goto	u2690
  4173  000ADE                     u2691:
  4174  000ADE  0E01               	movlw	1
  4175  000AE0  EF73  F005         	goto	u2700
  4176  000AE4                     u2690:
  4177  000AE4  0E00               	movlw	0
  4178  000AE6                     u2700:
  4179  000AE6  6E37               	movwf	_xtoa$1251^0,c
  4180  000AE8  6A38               	clrf	(_xtoa$1251+1)^0,c
  4181  000AEA  5037               	movf	_xtoa$1251^0,w,c
  4182  000AEC  1038               	iorwf	(_xtoa$1251+1)^0,w,c
  4183  000AEE  B4D8               	btfsc	status,2,c
  4184  000AF0  EF7C  F005         	goto	u2711
  4185  000AF4  EF7E  F005         	goto	u2710
  4186  000AF8                     u2711:
  4187  000AF8  EF88  F005         	goto	l3244
  4188  000AFC                     u2710:
  4189  000AFC                     
  4190                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  4191  000AFC  C047  F00B         	movff	xtoa@c,toupper@c
  4192  000B00  C048  F00C         	movff	xtoa@c+1,toupper@c+1
  4193  000B04  ECD1  F00E         	call	_toupper	;wreg free
  4194  000B08  C00B  F047         	movff	?_toupper,xtoa@c
  4195  000B0C  C00C  F048         	movff	?_toupper+1,xtoa@c+1
  4196  000B10                     l3244:
  4197                           
  4198                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  4199  000B10  0EC8               	movlw	low _dbuf
  4200  000B12  2445               	addwf	xtoa@i^0,w,c
  4201  000B14  6ED9               	movwf	fsr2l,c
  4202  000B16  0E01               	movlw	high _dbuf
  4203  000B18  2046               	addwfc	(xtoa@i+1)^0,w,c
  4204  000B1A  6EDA               	movwf	fsr2h,c
  4205  000B1C  C047  FFDF         	movff	xtoa@c,indf2
  4206  000B20                     
  4207                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  4208  000B20  0639               	decf	xtoa@p^0,f,c
  4209  000B22  A0D8               	btfss	status,0,c
  4210  000B24  063A               	decf	(xtoa@p+1)^0,f,c
  4211  000B26                     
  4212                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  4213  000B26  063B               	decf	xtoa@w^0,f,c
  4214  000B28  A0D8               	btfss	status,0,c
  4215  000B2A  063C               	decf	(xtoa@w+1)^0,f,c
  4216  000B2C                     
  4217                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  4218  000B2C  C03D  F02D         	movff	xtoa@n,??_xtoa
  4219  000B30  C03E  F02E         	movff	xtoa@n+1,??_xtoa+1
  4220  000B34  C03F  F02F         	movff	xtoa@n+2,??_xtoa+2
  4221  000B38  C040  F030         	movff	xtoa@n+3,??_xtoa+3
  4222  000B3C  C041  F031         	movff	xtoa@n+4,??_xtoa+4
  4223  000B40  C042  F032         	movff	xtoa@n+5,??_xtoa+5
  4224  000B44  C043  F033         	movff	xtoa@n+6,??_xtoa+6
  4225  000B48  C044  F034         	movff	xtoa@n+7,??_xtoa+7
  4226  000B4C  0E05               	movlw	5
  4227  000B4E  EFB2  F005         	goto	u2720
  4228  000B52                     u2725:
  4229  000B52  90D8               	bcf	status,0,c
  4230  000B54  3234               	rrcf	(??_xtoa+7)^0,f,c
  4231  000B56  3233               	rrcf	(??_xtoa+6)^0,f,c
  4232  000B58  3232               	rrcf	(??_xtoa+5)^0,f,c
  4233  000B5A  3231               	rrcf	(??_xtoa+4)^0,f,c
  4234  000B5C  3230               	rrcf	(??_xtoa+3)^0,f,c
  4235  000B5E  322F               	rrcf	(??_xtoa+2)^0,f,c
  4236  000B60  322E               	rrcf	(??_xtoa+1)^0,f,c
  4237  000B62  322D               	rrcf	??_xtoa^0,f,c
  4238  000B64                     u2720:
  4239  000B64  2EE8               	decfsz	wreg,f,c
  4240  000B66  EFA9  F005         	goto	u2725
  4241  000B6A  C02D  F03D         	movff	??_xtoa,xtoa@n
  4242  000B6E  C02E  F03E         	movff	??_xtoa+1,xtoa@n+1
  4243  000B72  C02F  F03F         	movff	??_xtoa+2,xtoa@n+2
  4244  000B76  C030  F040         	movff	??_xtoa+3,xtoa@n+3
  4245  000B7A  C031  F041         	movff	??_xtoa+4,xtoa@n+4
  4246  000B7E  C032  F042         	movff	??_xtoa+5,xtoa@n+5
  4247  000B82  C033  F043         	movff	??_xtoa+6,xtoa@n+6
  4248  000B86  C034  F044         	movff	??_xtoa+7,xtoa@n+7
  4249  000B8A                     l3252:
  4250                           
  4251                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4252  000B8A  BE46               	btfsc	(xtoa@i+1)^0,7,c
  4253  000B8C  EFD1  F005         	goto	u2731
  4254  000B90  5046               	movf	(xtoa@i+1)^0,w,c
  4255  000B92  E109               	bnz	u2730
  4256  000B94  0E02               	movlw	2
  4257  000B96  5C45               	subwf	xtoa@i^0,w,c
  4258  000B98  A0D8               	btfss	status,0,c
  4259  000B9A  EFD1  F005         	goto	u2731
  4260  000B9E  EFD3  F005         	goto	u2730
  4261  000BA2                     u2731:
  4262  000BA2  EF03  F006         	goto	l759
  4263  000BA6                     u2730:
  4264  000BA6  503D               	movf	xtoa@n^0,w,c
  4265  000BA8  103E               	iorwf	(xtoa@n+1)^0,w,c
  4266  000BAA  103F               	iorwf	(xtoa@n+2)^0,w,c
  4267  000BAC  1040               	iorwf	(xtoa@n+3)^0,w,c
  4268  000BAE  1041               	iorwf	(xtoa@n+4)^0,w,c
  4269  000BB0  1042               	iorwf	(xtoa@n+5)^0,w,c
  4270  000BB2  1043               	iorwf	(xtoa@n+6)^0,w,c
  4271  000BB4  1044               	iorwf	(xtoa@n+7)^0,w,c
  4272  000BB6  A4D8               	btfss	status,2,c
  4273  000BB8  EFE0  F005         	goto	u2741
  4274  000BBC  EFE2  F005         	goto	u2740
  4275  000BC0                     u2741:
  4276  000BC0  EF12  F005         	goto	l3222
  4277  000BC4                     u2740:
  4278  000BC4  BE3A               	btfsc	(xtoa@p+1)^0,7,c
  4279  000BC6  EFEF  F005         	goto	u2750
  4280  000BCA  503A               	movf	(xtoa@p+1)^0,w,c
  4281  000BCC  E106               	bnz	u2751
  4282  000BCE  0439               	decf	xtoa@p^0,w,c
  4283  000BD0  B0D8               	btfsc	status,0,c
  4284  000BD2  EFED  F005         	goto	u2751
  4285  000BD6  EFEF  F005         	goto	u2750
  4286  000BDA                     u2751:
  4287  000BDA  EF12  F005         	goto	l3222
  4288  000BDE                     u2750:
  4289  000BDE  BE3C               	btfsc	(xtoa@w+1)^0,7,c
  4290  000BE0  EFFA  F005         	goto	u2761
  4291  000BE4  503C               	movf	(xtoa@w+1)^0,w,c
  4292  000BE6  E108               	bnz	u2760
  4293  000BE8  043B               	decf	xtoa@w^0,w,c
  4294  000BEA  A0D8               	btfss	status,0,c
  4295  000BEC  EFFA  F005         	goto	u2761
  4296  000BF0  EFFC  F005         	goto	u2760
  4297  000BF4                     u2761:
  4298  000BF4  EF03  F006         	goto	l759
  4299  000BF8                     u2760:
  4300  000BF8  B257               	btfsc	_flags^0,1,c
  4301  000BFA  EF01  F006         	goto	u2771
  4302  000BFE  EF03  F006         	goto	u2770
  4303  000C02                     u2771:
  4304  000C02  EF12  F005         	goto	l3222
  4305  000C06                     u2770:
  4306  000C06                     l759:
  4307                           
  4308                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  4309  000C06  A857               	btfss	_flags^0,4,c
  4310  000C08  EF08  F006         	goto	u2781
  4311  000C0C  EF0A  F006         	goto	u2780
  4312  000C10                     u2781:
  4313  000C10  EF20  F006         	goto	l3268
  4314  000C14                     u2780:
  4315  000C14                     
  4316                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  4317  000C14  0645               	decf	xtoa@i^0,f,c
  4318  000C16  A0D8               	btfss	status,0,c
  4319  000C18  0646               	decf	(xtoa@i+1)^0,f,c
  4320  000C1A                     
  4321                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  4322  000C1A  0EC8               	movlw	low _dbuf
  4323  000C1C  2445               	addwf	xtoa@i^0,w,c
  4324  000C1E  6ED9               	movwf	fsr2l,c
  4325  000C20  0E01               	movlw	high _dbuf
  4326  000C22  2046               	addwfc	(xtoa@i+1)^0,w,c
  4327  000C24  6EDA               	movwf	fsr2h,c
  4328  000C26  C02C  FFDF         	movff	xtoa@x,indf2
  4329  000C2A                     
  4330                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  4331  000C2A  0645               	decf	xtoa@i^0,f,c
  4332  000C2C  A0D8               	btfss	status,0,c
  4333  000C2E  0646               	decf	(xtoa@i+1)^0,f,c
  4334                           
  4335                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  4336  000C30  0EC8               	movlw	low _dbuf
  4337  000C32  2445               	addwf	xtoa@i^0,w,c
  4338  000C34  6ED9               	movwf	fsr2l,c
  4339  000C36  0E01               	movlw	high _dbuf
  4340  000C38  2046               	addwfc	(xtoa@i+1)^0,w,c
  4341  000C3A  6EDA               	movwf	fsr2h,c
  4342  000C3C  0E30               	movlw	48
  4343  000C3E  6EDF               	movwf	indf2,c
  4344  000C40                     l3268:
  4345                           
  4346                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  4347  000C40  C022  F017         	movff	xtoa@fp,pad@fp
  4348  000C44  C023  F018         	movff	xtoa@fp+1,pad@fp+1
  4349  000C48  0EC8               	movlw	low _dbuf
  4350  000C4A  2445               	addwf	xtoa@i^0,w,c
  4351  000C4C  6E19               	movwf	pad@buf^0,c
  4352  000C4E  0E01               	movlw	high _dbuf
  4353  000C50  2046               	addwfc	(xtoa@i+1)^0,w,c
  4354  000C52  6E1A               	movwf	(pad@buf+1)^0,c
  4355  000C54  C03B  F01B         	movff	xtoa@w,pad@p
  4356  000C58  C03C  F01C         	movff	xtoa@w+1,pad@p+1
  4357  000C5C  ECA7  F00B         	call	_pad	;wreg free
  4358  000C60  C017  F022         	movff	?_pad,?_xtoa
  4359  000C64  C018  F023         	movff	?_pad+1,?_xtoa+1
  4360  000C68  0012               	return		;funcret
  4361  000C6A                     __end_of_xtoa:
  4362                           	opt callstack 0
  4363                           
  4364 ;; *************** function _toupper *****************
  4365 ;; Defined at:
  4366 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
  4367 ;; Parameters:    Size  Location     Type
  4368 ;;  c               2   10[COMRAM] int 
  4369 ;; Auto vars:     Size  Location     Type
  4370 ;;		None
  4371 ;; Return value:  Size  Location     Type
  4372 ;;                  2   10[COMRAM] int 
  4373 ;; Registers used:
  4374 ;;		wreg, status,2, status,0
  4375 ;; Tracked objects:
  4376 ;;		On entry : 0/0
  4377 ;;		On exit  : 0/0
  4378 ;;		Unchanged: 0/0
  4379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4380 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4381 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4382 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4383 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4384 ;;Total ram usage:        8 bytes
  4385 ;; Hardware stack levels used:    1
  4386 ;; Hardware stack levels required when called:    5
  4387 ;; This function calls:
  4388 ;;		_islower
  4389 ;; This function is called by:
  4390 ;;		_xtoa
  4391 ;; This function uses a non-reentrant model
  4392 ;;
  4393                           
  4394                           	psect	text25
  4395  001DA2                     __ptext25:
  4396                           	opt callstack 0
  4397  001DA2                     _toupper:
  4398                           	opt callstack 20
  4399  001DA2  0E9F               	movlw	159
  4400  001DA4  6E0D               	movwf	??_toupper^0,c
  4401  001DA6  0EFF               	movlw	255
  4402  001DA8  6E0E               	movwf	(??_toupper+1)^0,c
  4403  001DAA  C00B  F00F         	movff	toupper@c,??_toupper+2
  4404  001DAE  C00C  F010         	movff	toupper@c+1,??_toupper+3
  4405  001DB2  500D               	movf	??_toupper^0,w,c
  4406  001DB4  260F               	addwf	(??_toupper+2)^0,f,c
  4407  001DB6  500E               	movf	(??_toupper+1)^0,w,c
  4408  001DB8  2210               	addwfc	(??_toupper+3)^0,f,c
  4409  001DBA  5010               	movf	(??_toupper+3)^0,w,c
  4410  001DBC  E10A               	bnz	u2030
  4411  001DBE  0E1A               	movlw	26
  4412  001DC0  5C0F               	subwf	(??_toupper+2)^0,w,c
  4413  001DC2  A0D8               	btfss	status,0,c
  4414  001DC4  EFE6  F00E         	goto	u2031
  4415  001DC8  EFE9  F00E         	goto	u2030
  4416  001DCC                     u2031:
  4417  001DCC  0E01               	movlw	1
  4418  001DCE  EFEA  F00E         	goto	u2040
  4419  001DD2                     u2030:
  4420  001DD2  0E00               	movlw	0
  4421  001DD4                     u2040:
  4422  001DD4  6E11               	movwf	_toupper$1816^0,c
  4423  001DD6  6A12               	clrf	(_toupper$1816+1)^0,c
  4424  001DD8  5011               	movf	_toupper$1816^0,w,c
  4425  001DDA  1012               	iorwf	(_toupper$1816+1)^0,w,c
  4426  001DDC  B4D8               	btfsc	status,2,c
  4427  001DDE  EFF3  F00E         	goto	u2051
  4428  001DE2  EFF5  F00E         	goto	u2050
  4429  001DE6                     u2051:
  4430  001DE6  EFFB  F00E         	goto	l1578
  4431  001DEA                     u2050:
  4432  001DEA  0E5F               	movlw	95
  4433  001DEC  140B               	andwf	toupper@c^0,w,c
  4434  001DEE  6E0B               	movwf	?_toupper^0,c
  4435  001DF0  6A0C               	clrf	(?_toupper+1)^0,c
  4436  001DF2  EFFF  F00E         	goto	l1583
  4437  001DF6                     l1578:
  4438  001DF6  C00B  F00B         	movff	toupper@c,?_toupper
  4439  001DFA  C00C  F00C         	movff	toupper@c+1,?_toupper+1
  4440  001DFE                     l1583:
  4441  001DFE  0012               	return		;funcret
  4442  001E00                     __end_of_toupper:
  4443                           	opt callstack 0
  4444                           
  4445 ;; *************** function _islower *****************
  4446 ;; Defined at:
  4447 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
  4448 ;; Parameters:    Size  Location     Type
  4449 ;;  c               2    4[COMRAM] int 
  4450 ;; Auto vars:     Size  Location     Type
  4451 ;;		None
  4452 ;; Return value:  Size  Location     Type
  4453 ;;                  2    4[COMRAM] int 
  4454 ;; Registers used:
  4455 ;;		wreg, status,2, status,0
  4456 ;; Tracked objects:
  4457 ;;		On entry : 0/0
  4458 ;;		On exit  : 0/0
  4459 ;;		Unchanged: 0/0
  4460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4461 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4463 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4464 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4465 ;;Total ram usage:        6 bytes
  4466 ;; Hardware stack levels used:    1
  4467 ;; Hardware stack levels required when called:    4
  4468 ;; This function calls:
  4469 ;;		Nothing
  4470 ;; This function is called by:
  4471 ;;		_toupper
  4472 ;; This function uses a non-reentrant model
  4473 ;;
  4474                           
  4475                           	psect	text26
  4476  002144                     __ptext26:
  4477                           	opt callstack 0
  4478  002144                     _islower:
  4479                           	opt callstack 20
  4480  002144  0E9F               	movlw	159
  4481  002146  6E07               	movwf	??_islower^0,c
  4482  002148  0EFF               	movlw	255
  4483  00214A  6E08               	movwf	(??_islower+1)^0,c
  4484  00214C  C005  F009         	movff	islower@c,??_islower+2
  4485  002150  C006  F00A         	movff	islower@c+1,??_islower+3
  4486  002154  5007               	movf	??_islower^0,w,c
  4487  002156  2609               	addwf	(??_islower+2)^0,f,c
  4488  002158  5008               	movf	(??_islower+1)^0,w,c
  4489  00215A  220A               	addwfc	(??_islower+3)^0,f,c
  4490  00215C  500A               	movf	(??_islower+3)^0,w,c
  4491  00215E  E10A               	bnz	u1920
  4492  002160  0E1A               	movlw	26
  4493  002162  5C09               	subwf	(??_islower+2)^0,w,c
  4494  002164  A0D8               	btfss	status,0,c
  4495  002166  EFB7  F010         	goto	u1921
  4496  00216A  EFBA  F010         	goto	u1920
  4497  00216E                     u1921:
  4498  00216E  0E01               	movlw	1
  4499  002170  EFBB  F010         	goto	u1930
  4500  002174                     u1920:
  4501  002174  0E00               	movlw	0
  4502  002176                     u1930:
  4503  002176  6E05               	movwf	?_islower^0,c
  4504  002178  6A06               	clrf	(?_islower+1)^0,c
  4505  00217A  0012               	return		;funcret
  4506  00217C                     __end_of_islower:
  4507                           	opt callstack 0
  4508                           
  4509 ;; *************** function _isupper *****************
  4510 ;; Defined at:
  4511 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  4512 ;; Parameters:    Size  Location     Type
  4513 ;;  c               2    4[COMRAM] int 
  4514 ;; Auto vars:     Size  Location     Type
  4515 ;;		None
  4516 ;; Return value:  Size  Location     Type
  4517 ;;                  2    4[COMRAM] int 
  4518 ;; Registers used:
  4519 ;;		wreg, status,2, status,0
  4520 ;; Tracked objects:
  4521 ;;		On entry : 0/0
  4522 ;;		On exit  : 0/0
  4523 ;;		Unchanged: 0/0
  4524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4525 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4527 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4528 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4529 ;;Total ram usage:        6 bytes
  4530 ;; Hardware stack levels used:    1
  4531 ;; Hardware stack levels required when called:    4
  4532 ;; This function calls:
  4533 ;;		Nothing
  4534 ;; This function is called by:
  4535 ;;		_xtoa
  4536 ;; This function uses a non-reentrant model
  4537 ;;
  4538                           
  4539                           	psect	text27
  4540  00217C                     __ptext27:
  4541                           	opt callstack 0
  4542  00217C                     _isupper:
  4543                           	opt callstack 21
  4544  00217C  0EBF               	movlw	191
  4545  00217E  6E07               	movwf	??_isupper^0,c
  4546  002180  0EFF               	movlw	255
  4547  002182  6E08               	movwf	(??_isupper+1)^0,c
  4548  002184  C005  F009         	movff	isupper@c,??_isupper+2
  4549  002188  C006  F00A         	movff	isupper@c+1,??_isupper+3
  4550  00218C  5007               	movf	??_isupper^0,w,c
  4551  00218E  2609               	addwf	(??_isupper+2)^0,f,c
  4552  002190  5008               	movf	(??_isupper+1)^0,w,c
  4553  002192  220A               	addwfc	(??_isupper+3)^0,f,c
  4554  002194  500A               	movf	(??_isupper+3)^0,w,c
  4555  002196  E10A               	bnz	u1990
  4556  002198  0E1A               	movlw	26
  4557  00219A  5C09               	subwf	(??_isupper+2)^0,w,c
  4558  00219C  A0D8               	btfss	status,0,c
  4559  00219E  EFD3  F010         	goto	u1991
  4560  0021A2  EFD6  F010         	goto	u1990
  4561  0021A6                     u1991:
  4562  0021A6  0E01               	movlw	1
  4563  0021A8  EFD7  F010         	goto	u2000
  4564  0021AC                     u1990:
  4565  0021AC  0E00               	movlw	0
  4566  0021AE                     u2000:
  4567  0021AE  6E05               	movwf	?_isupper^0,c
  4568  0021B0  6A06               	clrf	(?_isupper+1)^0,c
  4569  0021B2  0012               	return		;funcret
  4570  0021B4                     __end_of_isupper:
  4571                           	opt callstack 0
  4572                           
  4573 ;; *************** function _isalpha *****************
  4574 ;; Defined at:
  4575 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
  4576 ;; Parameters:    Size  Location     Type
  4577 ;;  c               2    4[COMRAM] int 
  4578 ;; Auto vars:     Size  Location     Type
  4579 ;;		None
  4580 ;; Return value:  Size  Location     Type
  4581 ;;                  2    4[COMRAM] int 
  4582 ;; Registers used:
  4583 ;;		wreg, status,2, status,0
  4584 ;; Tracked objects:
  4585 ;;		On entry : 0/0
  4586 ;;		On exit  : 0/0
  4587 ;;		Unchanged: 0/0
  4588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4589 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4591 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4592 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4593 ;;Total ram usage:        6 bytes
  4594 ;; Hardware stack levels used:    1
  4595 ;; Hardware stack levels required when called:    4
  4596 ;; This function calls:
  4597 ;;		Nothing
  4598 ;; This function is called by:
  4599 ;;		_xtoa
  4600 ;; This function uses a non-reentrant model
  4601 ;;
  4602                           
  4603                           	psect	text28
  4604  002108                     __ptext28:
  4605                           	opt callstack 0
  4606  002108                     _isalpha:
  4607                           	opt callstack 21
  4608  002108  0E9F               	movlw	159
  4609  00210A  6E07               	movwf	??_isalpha^0,c
  4610  00210C  0EFF               	movlw	255
  4611  00210E  6E08               	movwf	(??_isalpha+1)^0,c
  4612  002110  0E20               	movlw	32
  4613  002112  1005               	iorwf	isalpha@c^0,w,c
  4614  002114  6E09               	movwf	(??_isalpha+2)^0,c
  4615  002116  0E00               	movlw	0
  4616  002118  1006               	iorwf	(isalpha@c+1)^0,w,c
  4617  00211A  6E0A               	movwf	(??_isalpha+3)^0,c
  4618  00211C  5007               	movf	??_isalpha^0,w,c
  4619  00211E  2609               	addwf	(??_isalpha+2)^0,f,c
  4620  002120  5008               	movf	(??_isalpha+1)^0,w,c
  4621  002122  220A               	addwfc	(??_isalpha+3)^0,f,c
  4622  002124  500A               	movf	(??_isalpha+3)^0,w,c
  4623  002126  E10A               	bnz	u2010
  4624  002128  0E1A               	movlw	26
  4625  00212A  5C09               	subwf	(??_isalpha+2)^0,w,c
  4626  00212C  A0D8               	btfss	status,0,c
  4627  00212E  EF9B  F010         	goto	u2011
  4628  002132  EF9E  F010         	goto	u2010
  4629  002136                     u2011:
  4630  002136  0E01               	movlw	1
  4631  002138  EF9F  F010         	goto	u2020
  4632  00213C                     u2010:
  4633  00213C  0E00               	movlw	0
  4634  00213E                     u2020:
  4635  00213E  6E05               	movwf	?_isalpha^0,c
  4636  002140  6A06               	clrf	(?_isalpha+1)^0,c
  4637  002142  0012               	return		;funcret
  4638  002144                     __end_of_isalpha:
  4639                           	opt callstack 0
  4640                           
  4641 ;; *************** function _utoa *****************
  4642 ;; Defined at:
  4643 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4644 ;; Parameters:    Size  Location     Type
  4645 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  4646 ;;		 -> NULL(0), 
  4647 ;;  d               8   35[COMRAM] unsigned long long 
  4648 ;; Auto vars:     Size  Location     Type
  4649 ;;  n               8   55[COMRAM] unsigned long long 
  4650 ;;  i               2   63[COMRAM] int 
  4651 ;;  w               2   53[COMRAM] int 
  4652 ;;  p               2   51[COMRAM] int 
  4653 ;; Return value:  Size  Location     Type
  4654 ;;                  2   33[COMRAM] int 
  4655 ;; Registers used:
  4656 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4657 ;; Tracked objects:
  4658 ;;		On entry : 0/0
  4659 ;;		On exit  : 0/0
  4660 ;;		Unchanged: 0/0
  4661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4662 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4663 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4664 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4665 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4666 ;;Total ram usage:       32 bytes
  4667 ;; Hardware stack levels used:    1
  4668 ;; Hardware stack levels required when called:    9
  4669 ;; This function calls:
  4670 ;;		___lodiv
  4671 ;;		___lomod
  4672 ;;		_pad
  4673 ;; This function is called by:
  4674 ;;		_vfpfcnvrt
  4675 ;; This function uses a non-reentrant model
  4676 ;;
  4677                           
  4678                           	psect	text29
  4679  000C6A                     __ptext29:
  4680                           	opt callstack 0
  4681  000C6A                     _utoa:
  4682                           	opt callstack 17
  4683  000C6A                     
  4684                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  4685  000C6A  0100               	movlb	0	; () banked
  4686  000C6C  BF8D               	btfsc	(_prec+1)& (0+255),7,b
  4687  000C6E  EF3B  F006         	goto	u2551
  4688  000C72  EF3D  F006         	goto	u2550
  4689  000C76                     u2551:
  4690  000C76  EF3E  F006         	goto	l3174
  4691  000C7A                     u2550:
  4692  000C7A                     
  4693                           ; BSR set to: 0
  4694                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  4695  000C7A  9257               	bcf	_flags^0,1,c
  4696  000C7C                     l3174:
  4697                           
  4698                           ; BSR set to: 0
  4699                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  4700  000C7C  BF8D               	btfsc	(_prec+1)& (0+255),7,b
  4701  000C7E  EF4B  F006         	goto	u2560
  4702  000C82  518D               	movf	(_prec+1)& (0+255),w,b
  4703  000C84  E106               	bnz	u2561
  4704  000C86  058C               	decf	_prec& (0+255),w,b
  4705  000C88  B0D8               	btfsc	status,0,c
  4706  000C8A  EF49  F006         	goto	u2561
  4707  000C8E  EF4B  F006         	goto	u2560
  4708  000C92                     u2561:
  4709  000C92  EF51  F006         	goto	l721
  4710  000C96                     u2560:
  4711  000C96                     
  4712                           ; BSR set to: 0
  4713  000C96  0E00               	movlw	0
  4714  000C98  6E35               	movwf	(utoa@p+1)^0,c
  4715  000C9A  0E01               	movlw	1
  4716  000C9C  6E34               	movwf	utoa@p^0,c
  4717  000C9E  EF55  F006         	goto	l723
  4718  000CA2                     l721:
  4719                           
  4720                           ; BSR set to: 0
  4721  000CA2  C08C  F034         	movff	_prec,utoa@p
  4722  000CA6  C08D  F035         	movff	_prec+1,utoa@p+1
  4723  000CAA                     l723:
  4724                           
  4725                           ; BSR set to: 0
  4726                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  4727  000CAA  C08A  F036         	movff	_width,utoa@w
  4728  000CAE  C08B  F037         	movff	_width+1,utoa@w+1
  4729                           
  4730                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  4731  000CB2  C024  F038         	movff	utoa@d,utoa@n
  4732  000CB6  C025  F039         	movff	utoa@d+1,utoa@n+1
  4733  000CBA  C026  F03A         	movff	utoa@d+2,utoa@n+2
  4734  000CBE  C027  F03B         	movff	utoa@d+3,utoa@n+3
  4735  000CC2  C028  F03C         	movff	utoa@d+4,utoa@n+4
  4736  000CC6  C029  F03D         	movff	utoa@d+5,utoa@n+5
  4737  000CCA  C02A  F03E         	movff	utoa@d+6,utoa@n+6
  4738  000CCE  C02B  F03F         	movff	utoa@d+7,utoa@n+7
  4739  000CD2                     
  4740                           ; BSR set to: 0
  4741                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  4742  000CD2  0E00               	movlw	0
  4743  000CD4  6E41               	movwf	(utoa@i+1)^0,c
  4744  000CD6  0E1F               	movlw	31
  4745  000CD8  6E40               	movwf	utoa@i^0,c
  4746  000CDA                     
  4747                           ; BSR set to: 0
  4748                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  4749  000CDA  0E00               	movlw	0
  4750  000CDC  0101               	movlb	1	; () banked
  4751  000CDE  6FE7               	movwf	(_dbuf+31)& (0+255),b
  4752                           
  4753                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4754  000CE0  EFE8  F006         	goto	l3192
  4755  000CE4                     l3182:
  4756                           
  4757                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  4758  000CE4  0640               	decf	utoa@i^0,f,c
  4759  000CE6  A0D8               	btfss	status,0,c
  4760  000CE8  0641               	decf	(utoa@i+1)^0,f,c
  4761  000CEA                     
  4762                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  4763  000CEA  0EC8               	movlw	low _dbuf
  4764  000CEC  2440               	addwf	utoa@i^0,w,c
  4765  000CEE  6ED9               	movwf	fsr2l,c
  4766  000CF0  0E01               	movlw	high _dbuf
  4767  000CF2  2041               	addwfc	(utoa@i+1)^0,w,c
  4768  000CF4  6EDA               	movwf	fsr2h,c
  4769  000CF6  C038  F005         	movff	utoa@n,___lomod@dividend
  4770  000CFA  C039  F006         	movff	utoa@n+1,___lomod@dividend+1
  4771  000CFE  C03A  F007         	movff	utoa@n+2,___lomod@dividend+2
  4772  000D02  C03B  F008         	movff	utoa@n+3,___lomod@dividend+3
  4773  000D06  C03C  F009         	movff	utoa@n+4,___lomod@dividend+4
  4774  000D0A  C03D  F00A         	movff	utoa@n+5,___lomod@dividend+5
  4775  000D0E  C03E  F00B         	movff	utoa@n+6,___lomod@dividend+6
  4776  000D12  C03F  F00C         	movff	utoa@n+7,___lomod@dividend+7
  4777  000D16  0E0A               	movlw	10
  4778  000D18  6E0D               	movwf	___lomod@divisor^0,c
  4779  000D1A  0E00               	movlw	0
  4780  000D1C  6E0E               	movwf	(___lomod@divisor+1)^0,c
  4781  000D1E  0E00               	movlw	0
  4782  000D20  6E0F               	movwf	(___lomod@divisor+2)^0,c
  4783  000D22  0E00               	movlw	0
  4784  000D24  6E10               	movwf	(___lomod@divisor+3)^0,c
  4785  000D26  0E00               	movlw	0
  4786  000D28  6E11               	movwf	(___lomod@divisor+4)^0,c
  4787  000D2A  0E00               	movlw	0
  4788  000D2C  6E12               	movwf	(___lomod@divisor+5)^0,c
  4789  000D2E  0E00               	movlw	0
  4790  000D30  6E13               	movwf	(___lomod@divisor+6)^0,c
  4791  000D32  0E00               	movlw	0
  4792  000D34  6E14               	movwf	(___lomod@divisor+7)^0,c
  4793  000D36  EC3F  F00B         	call	___lomod	;wreg free
  4794  000D3A  C005  F02C         	movff	?___lomod,??_utoa
  4795  000D3E  C006  F02D         	movff	?___lomod+1,??_utoa+1
  4796  000D42  C007  F02E         	movff	?___lomod+2,??_utoa+2
  4797  000D46  C008  F02F         	movff	?___lomod+3,??_utoa+3
  4798  000D4A  C009  F030         	movff	?___lomod+4,??_utoa+4
  4799  000D4E  C00A  F031         	movff	?___lomod+5,??_utoa+5
  4800  000D52  C00B  F032         	movff	?___lomod+6,??_utoa+6
  4801  000D56  C00C  F033         	movff	?___lomod+7,??_utoa+7
  4802  000D5A  502C               	movf	??_utoa^0,w,c
  4803  000D5C  0F30               	addlw	48
  4804  000D5E  6EDF               	movwf	indf2,c
  4805  000D60                     
  4806                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  4807  000D60  0634               	decf	utoa@p^0,f,c
  4808  000D62  A0D8               	btfss	status,0,c
  4809  000D64  0635               	decf	(utoa@p+1)^0,f,c
  4810  000D66                     
  4811                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  4812  000D66  0636               	decf	utoa@w^0,f,c
  4813  000D68  A0D8               	btfss	status,0,c
  4814  000D6A  0637               	decf	(utoa@w+1)^0,f,c
  4815  000D6C                     
  4816                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  4817  000D6C  C038  F005         	movff	utoa@n,___lodiv@dividend
  4818  000D70  C039  F006         	movff	utoa@n+1,___lodiv@dividend+1
  4819  000D74  C03A  F007         	movff	utoa@n+2,___lodiv@dividend+2
  4820  000D78  C03B  F008         	movff	utoa@n+3,___lodiv@dividend+3
  4821  000D7C  C03C  F009         	movff	utoa@n+4,___lodiv@dividend+4
  4822  000D80  C03D  F00A         	movff	utoa@n+5,___lodiv@dividend+5
  4823  000D84  C03E  F00B         	movff	utoa@n+6,___lodiv@dividend+6
  4824  000D88  C03F  F00C         	movff	utoa@n+7,___lodiv@dividend+7
  4825  000D8C  0E0A               	movlw	10
  4826  000D8E  6E0D               	movwf	___lodiv@divisor^0,c
  4827  000D90  0E00               	movlw	0
  4828  000D92  6E0E               	movwf	(___lodiv@divisor+1)^0,c
  4829  000D94  0E00               	movlw	0
  4830  000D96  6E0F               	movwf	(___lodiv@divisor+2)^0,c
  4831  000D98  0E00               	movlw	0
  4832  000D9A  6E10               	movwf	(___lodiv@divisor+3)^0,c
  4833  000D9C  0E00               	movlw	0
  4834  000D9E  6E11               	movwf	(___lodiv@divisor+4)^0,c
  4835  000DA0  0E00               	movlw	0
  4836  000DA2  6E12               	movwf	(___lodiv@divisor+5)^0,c
  4837  000DA4  0E00               	movlw	0
  4838  000DA6  6E13               	movwf	(___lodiv@divisor+6)^0,c
  4839  000DA8  0E00               	movlw	0
  4840  000DAA  6E14               	movwf	(___lodiv@divisor+7)^0,c
  4841  000DAC  ECC7  F00A         	call	___lodiv	;wreg free
  4842  000DB0  C005  F038         	movff	?___lodiv,utoa@n
  4843  000DB4  C006  F039         	movff	?___lodiv+1,utoa@n+1
  4844  000DB8  C007  F03A         	movff	?___lodiv+2,utoa@n+2
  4845  000DBC  C008  F03B         	movff	?___lodiv+3,utoa@n+3
  4846  000DC0  C009  F03C         	movff	?___lodiv+4,utoa@n+4
  4847  000DC4  C00A  F03D         	movff	?___lodiv+5,utoa@n+5
  4848  000DC8  C00B  F03E         	movff	?___lodiv+6,utoa@n+6
  4849  000DCC  C00C  F03F         	movff	?___lodiv+7,utoa@n+7
  4850  000DD0                     l3192:
  4851                           
  4852                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4853  000DD0  5040               	movf	utoa@i^0,w,c
  4854  000DD2  1041               	iorwf	(utoa@i+1)^0,w,c
  4855  000DD4  B4D8               	btfsc	status,2,c
  4856  000DD6  EFEF  F006         	goto	u2571
  4857  000DDA  EFF1  F006         	goto	u2570
  4858  000DDE                     u2571:
  4859  000DDE  EF21  F007         	goto	l3202
  4860  000DE2                     u2570:
  4861  000DE2  5038               	movf	utoa@n^0,w,c
  4862  000DE4  1039               	iorwf	(utoa@n+1)^0,w,c
  4863  000DE6  103A               	iorwf	(utoa@n+2)^0,w,c
  4864  000DE8  103B               	iorwf	(utoa@n+3)^0,w,c
  4865  000DEA  103C               	iorwf	(utoa@n+4)^0,w,c
  4866  000DEC  103D               	iorwf	(utoa@n+5)^0,w,c
  4867  000DEE  103E               	iorwf	(utoa@n+6)^0,w,c
  4868  000DF0  103F               	iorwf	(utoa@n+7)^0,w,c
  4869  000DF2  A4D8               	btfss	status,2,c
  4870  000DF4  EFFE  F006         	goto	u2581
  4871  000DF8  EF00  F007         	goto	u2580
  4872  000DFC                     u2581:
  4873  000DFC  EF72  F006         	goto	l3182
  4874  000E00                     u2580:
  4875  000E00  BE35               	btfsc	(utoa@p+1)^0,7,c
  4876  000E02  EF0D  F007         	goto	u2590
  4877  000E06  5035               	movf	(utoa@p+1)^0,w,c
  4878  000E08  E106               	bnz	u2591
  4879  000E0A  0434               	decf	utoa@p^0,w,c
  4880  000E0C  B0D8               	btfsc	status,0,c
  4881  000E0E  EF0B  F007         	goto	u2591
  4882  000E12  EF0D  F007         	goto	u2590
  4883  000E16                     u2591:
  4884  000E16  EF72  F006         	goto	l3182
  4885  000E1A                     u2590:
  4886  000E1A  BE37               	btfsc	(utoa@w+1)^0,7,c
  4887  000E1C  EF18  F007         	goto	u2601
  4888  000E20  5037               	movf	(utoa@w+1)^0,w,c
  4889  000E22  E108               	bnz	u2600
  4890  000E24  0436               	decf	utoa@w^0,w,c
  4891  000E26  A0D8               	btfss	status,0,c
  4892  000E28  EF18  F007         	goto	u2601
  4893  000E2C  EF1A  F007         	goto	u2600
  4894  000E30                     u2601:
  4895  000E30  EF21  F007         	goto	l3202
  4896  000E34                     u2600:
  4897  000E34  B257               	btfsc	_flags^0,1,c
  4898  000E36  EF1F  F007         	goto	u2611
  4899  000E3A  EF21  F007         	goto	u2610
  4900  000E3E                     u2611:
  4901  000E3E  EF72  F006         	goto	l3182
  4902  000E42                     u2610:
  4903  000E42                     l3202:
  4904                           
  4905                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  4906  000E42  C022  F017         	movff	utoa@fp,pad@fp
  4907  000E46  C023  F018         	movff	utoa@fp+1,pad@fp+1
  4908  000E4A  0EC8               	movlw	low _dbuf
  4909  000E4C  2440               	addwf	utoa@i^0,w,c
  4910  000E4E  6E19               	movwf	pad@buf^0,c
  4911  000E50  0E01               	movlw	high _dbuf
  4912  000E52  2041               	addwfc	(utoa@i+1)^0,w,c
  4913  000E54  6E1A               	movwf	(pad@buf+1)^0,c
  4914  000E56  C036  F01B         	movff	utoa@w,pad@p
  4915  000E5A  C037  F01C         	movff	utoa@w+1,pad@p+1
  4916  000E5E  ECA7  F00B         	call	_pad	;wreg free
  4917  000E62  C017  F022         	movff	?_pad,?_utoa
  4918  000E66  C018  F023         	movff	?_pad+1,?_utoa+1
  4919  000E6A  0012               	return		;funcret
  4920  000E6C                     __end_of_utoa:
  4921                           	opt callstack 0
  4922                           
  4923 ;; *************** function ___lomod *****************
  4924 ;; Defined at:
  4925 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
  4926 ;; Parameters:    Size  Location     Type
  4927 ;;  dividend        8    4[COMRAM] unsigned long long 
  4928 ;;  divisor         8   12[COMRAM] unsigned long long 
  4929 ;; Auto vars:     Size  Location     Type
  4930 ;;  counter         1   20[COMRAM] unsigned char 
  4931 ;; Return value:  Size  Location     Type
  4932 ;;                  8    4[COMRAM] unsigned long long 
  4933 ;; Registers used:
  4934 ;;		wreg, status,2, status,0
  4935 ;; Tracked objects:
  4936 ;;		On entry : 0/0
  4937 ;;		On exit  : 0/0
  4938 ;;		Unchanged: 0/0
  4939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4940 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4941 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4943 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4944 ;;Total ram usage:       17 bytes
  4945 ;; Hardware stack levels used:    1
  4946 ;; Hardware stack levels required when called:    4
  4947 ;; This function calls:
  4948 ;;		Nothing
  4949 ;; This function is called by:
  4950 ;;		_utoa
  4951 ;; This function uses a non-reentrant model
  4952 ;;
  4953                           
  4954                           	psect	text30
  4955  00167E                     __ptext30:
  4956                           	opt callstack 0
  4957  00167E                     ___lomod:
  4958                           	opt callstack 21
  4959  00167E  500D               	movf	___lomod@divisor^0,w,c
  4960  001680  100E               	iorwf	(___lomod@divisor+1)^0,w,c
  4961  001682  100F               	iorwf	(___lomod@divisor+2)^0,w,c
  4962  001684  1010               	iorwf	(___lomod@divisor+3)^0,w,c
  4963  001686  1011               	iorwf	(___lomod@divisor+4)^0,w,c
  4964  001688  1012               	iorwf	(___lomod@divisor+5)^0,w,c
  4965  00168A  1013               	iorwf	(___lomod@divisor+6)^0,w,c
  4966  00168C  1014               	iorwf	(___lomod@divisor+7)^0,w,c
  4967  00168E  B4D8               	btfsc	status,2,c
  4968  001690  EF4C  F00B         	goto	u2251
  4969  001694  EF4E  F00B         	goto	u2250
  4970  001698                     u2251:
  4971  001698  EF96  F00B         	goto	l1253
  4972  00169C                     u2250:
  4973  00169C  0E01               	movlw	1
  4974  00169E  6E15               	movwf	___lomod@counter^0,c
  4975  0016A0  EF5C  F00B         	goto	l3044
  4976  0016A4                     l3042:
  4977  0016A4  90D8               	bcf	status,0,c
  4978  0016A6  360D               	rlcf	___lomod@divisor^0,f,c
  4979  0016A8  360E               	rlcf	(___lomod@divisor+1)^0,f,c
  4980  0016AA  360F               	rlcf	(___lomod@divisor+2)^0,f,c
  4981  0016AC  3610               	rlcf	(___lomod@divisor+3)^0,f,c
  4982  0016AE  3611               	rlcf	(___lomod@divisor+4)^0,f,c
  4983  0016B0  3612               	rlcf	(___lomod@divisor+5)^0,f,c
  4984  0016B2  3613               	rlcf	(___lomod@divisor+6)^0,f,c
  4985  0016B4  3614               	rlcf	(___lomod@divisor+7)^0,f,c
  4986  0016B6  2A15               	incf	___lomod@counter^0,f,c
  4987  0016B8                     l3044:
  4988  0016B8  AE14               	btfss	(___lomod@divisor+7)^0,7,c
  4989  0016BA  EF61  F00B         	goto	u2261
  4990  0016BE  EF63  F00B         	goto	u2260
  4991  0016C2                     u2261:
  4992  0016C2  EF52  F00B         	goto	l3042
  4993  0016C6                     u2260:
  4994  0016C6                     l3046:
  4995  0016C6  500D               	movf	___lomod@divisor^0,w,c
  4996  0016C8  5C05               	subwf	___lomod@dividend^0,w,c
  4997  0016CA  500E               	movf	(___lomod@divisor+1)^0,w,c
  4998  0016CC  5806               	subwfb	(___lomod@dividend+1)^0,w,c
  4999  0016CE  500F               	movf	(___lomod@divisor+2)^0,w,c
  5000  0016D0  5807               	subwfb	(___lomod@dividend+2)^0,w,c
  5001  0016D2  5010               	movf	(___lomod@divisor+3)^0,w,c
  5002  0016D4  5808               	subwfb	(___lomod@dividend+3)^0,w,c
  5003  0016D6  5011               	movf	(___lomod@divisor+4)^0,w,c
  5004  0016D8  5809               	subwfb	(___lomod@dividend+4)^0,w,c
  5005  0016DA  5012               	movf	(___lomod@divisor+5)^0,w,c
  5006  0016DC  580A               	subwfb	(___lomod@dividend+5)^0,w,c
  5007  0016DE  5013               	movf	(___lomod@divisor+6)^0,w,c
  5008  0016E0  580B               	subwfb	(___lomod@dividend+6)^0,w,c
  5009  0016E2  5014               	movf	(___lomod@divisor+7)^0,w,c
  5010  0016E4  580C               	subwfb	(___lomod@dividend+7)^0,w,c
  5011  0016E6  A0D8               	btfss	status,0,c
  5012  0016E8  EF78  F00B         	goto	u2271
  5013  0016EC  EF7A  F00B         	goto	u2270
  5014  0016F0                     u2271:
  5015  0016F0  EF8A  F00B         	goto	l3050
  5016  0016F4                     u2270:
  5017  0016F4  500D               	movf	___lomod@divisor^0,w,c
  5018  0016F6  5E05               	subwf	___lomod@dividend^0,f,c
  5019  0016F8  500E               	movf	(___lomod@divisor+1)^0,w,c
  5020  0016FA  5A06               	subwfb	(___lomod@dividend+1)^0,f,c
  5021  0016FC  500F               	movf	(___lomod@divisor+2)^0,w,c
  5022  0016FE  5A07               	subwfb	(___lomod@dividend+2)^0,f,c
  5023  001700  5010               	movf	(___lomod@divisor+3)^0,w,c
  5024  001702  5A08               	subwfb	(___lomod@dividend+3)^0,f,c
  5025  001704  5011               	movf	(___lomod@divisor+4)^0,w,c
  5026  001706  5A09               	subwfb	(___lomod@dividend+4)^0,f,c
  5027  001708  5012               	movf	(___lomod@divisor+5)^0,w,c
  5028  00170A  5A0A               	subwfb	(___lomod@dividend+5)^0,f,c
  5029  00170C  5013               	movf	(___lomod@divisor+6)^0,w,c
  5030  00170E  5A0B               	subwfb	(___lomod@dividend+6)^0,f,c
  5031  001710  5014               	movf	(___lomod@divisor+7)^0,w,c
  5032  001712  5A0C               	subwfb	(___lomod@dividend+7)^0,f,c
  5033  001714                     l3050:
  5034  001714  90D8               	bcf	status,0,c
  5035  001716  3214               	rrcf	(___lomod@divisor+7)^0,f,c
  5036  001718  3213               	rrcf	(___lomod@divisor+6)^0,f,c
  5037  00171A  3212               	rrcf	(___lomod@divisor+5)^0,f,c
  5038  00171C  3211               	rrcf	(___lomod@divisor+4)^0,f,c
  5039  00171E  3210               	rrcf	(___lomod@divisor+3)^0,f,c
  5040  001720  320F               	rrcf	(___lomod@divisor+2)^0,f,c
  5041  001722  320E               	rrcf	(___lomod@divisor+1)^0,f,c
  5042  001724  320D               	rrcf	___lomod@divisor^0,f,c
  5043  001726  2E15               	decfsz	___lomod@counter^0,f,c
  5044  001728  EF63  F00B         	goto	l3046
  5045  00172C                     l1253:
  5046  00172C  C005  F005         	movff	___lomod@dividend,?___lomod
  5047  001730  C006  F006         	movff	___lomod@dividend+1,?___lomod+1
  5048  001734  C007  F007         	movff	___lomod@dividend+2,?___lomod+2
  5049  001738  C008  F008         	movff	___lomod@dividend+3,?___lomod+3
  5050  00173C  C009  F009         	movff	___lomod@dividend+4,?___lomod+4
  5051  001740  C00A  F00A         	movff	___lomod@dividend+5,?___lomod+5
  5052  001744  C00B  F00B         	movff	___lomod@dividend+6,?___lomod+6
  5053  001748  C00C  F00C         	movff	___lomod@dividend+7,?___lomod+7
  5054  00174C  0012               	return		;funcret
  5055  00174E                     __end_of___lomod:
  5056                           	opt callstack 0
  5057                           
  5058 ;; *************** function ___lodiv *****************
  5059 ;; Defined at:
  5060 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
  5061 ;; Parameters:    Size  Location     Type
  5062 ;;  dividend        8    4[COMRAM] unsigned long long 
  5063 ;;  divisor         8   12[COMRAM] unsigned long long 
  5064 ;; Auto vars:     Size  Location     Type
  5065 ;;  quotient        8   20[COMRAM] unsigned long long 
  5066 ;;  counter         1   28[COMRAM] unsigned char 
  5067 ;; Return value:  Size  Location     Type
  5068 ;;                  8    4[COMRAM] unsigned long long 
  5069 ;; Registers used:
  5070 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5071 ;; Tracked objects:
  5072 ;;		On entry : 0/0
  5073 ;;		On exit  : 0/0
  5074 ;;		Unchanged: 0/0
  5075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5076 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5077 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5079 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5080 ;;Total ram usage:       25 bytes
  5081 ;; Hardware stack levels used:    1
  5082 ;; Hardware stack levels required when called:    4
  5083 ;; This function calls:
  5084 ;;		Nothing
  5085 ;; This function is called by:
  5086 ;;		_utoa
  5087 ;; This function uses a non-reentrant model
  5088 ;;
  5089                           
  5090                           	psect	text31
  5091  00158E                     __ptext31:
  5092                           	opt callstack 0
  5093  00158E                     ___lodiv:
  5094                           	opt callstack 21
  5095  00158E  EE20  F015         	lfsr	2,___lodiv@quotient
  5096  001592  0E07               	movlw	7
  5097  001594                     u2211:
  5098  001594  6ADE               	clrf	postinc2,c
  5099  001596  06E8               	decf	wreg,f,c
  5100  001598  E2FD               	bc	u2211
  5101  00159A  500D               	movf	___lodiv@divisor^0,w,c
  5102  00159C  100E               	iorwf	(___lodiv@divisor+1)^0,w,c
  5103  00159E  100F               	iorwf	(___lodiv@divisor+2)^0,w,c
  5104  0015A0  1010               	iorwf	(___lodiv@divisor+3)^0,w,c
  5105  0015A2  1011               	iorwf	(___lodiv@divisor+4)^0,w,c
  5106  0015A4  1012               	iorwf	(___lodiv@divisor+5)^0,w,c
  5107  0015A6  1013               	iorwf	(___lodiv@divisor+6)^0,w,c
  5108  0015A8  1014               	iorwf	(___lodiv@divisor+7)^0,w,c
  5109  0015AA  B4D8               	btfsc	status,2,c
  5110  0015AC  EFDA  F00A         	goto	u2221
  5111  0015B0  EFDC  F00A         	goto	u2220
  5112  0015B4                     u2221:
  5113  0015B4  EF2E  F00B         	goto	l1243
  5114  0015B8                     u2220:
  5115  0015B8  0E01               	movlw	1
  5116  0015BA  6E1D               	movwf	___lodiv@counter^0,c
  5117  0015BC  EFEA  F00A         	goto	l3024
  5118  0015C0                     l3022:
  5119  0015C0  90D8               	bcf	status,0,c
  5120  0015C2  360D               	rlcf	___lodiv@divisor^0,f,c
  5121  0015C4  360E               	rlcf	(___lodiv@divisor+1)^0,f,c
  5122  0015C6  360F               	rlcf	(___lodiv@divisor+2)^0,f,c
  5123  0015C8  3610               	rlcf	(___lodiv@divisor+3)^0,f,c
  5124  0015CA  3611               	rlcf	(___lodiv@divisor+4)^0,f,c
  5125  0015CC  3612               	rlcf	(___lodiv@divisor+5)^0,f,c
  5126  0015CE  3613               	rlcf	(___lodiv@divisor+6)^0,f,c
  5127  0015D0  3614               	rlcf	(___lodiv@divisor+7)^0,f,c
  5128  0015D2  2A1D               	incf	___lodiv@counter^0,f,c
  5129  0015D4                     l3024:
  5130  0015D4  AE14               	btfss	(___lodiv@divisor+7)^0,7,c
  5131  0015D6  EFEF  F00A         	goto	u2231
  5132  0015DA  EFF1  F00A         	goto	u2230
  5133  0015DE                     u2231:
  5134  0015DE  EFE0  F00A         	goto	l3022
  5135  0015E2                     u2230:
  5136  0015E2                     l3026:
  5137  0015E2  90D8               	bcf	status,0,c
  5138  0015E4  3615               	rlcf	___lodiv@quotient^0,f,c
  5139  0015E6  3616               	rlcf	(___lodiv@quotient+1)^0,f,c
  5140  0015E8  3617               	rlcf	(___lodiv@quotient+2)^0,f,c
  5141  0015EA  3618               	rlcf	(___lodiv@quotient+3)^0,f,c
  5142  0015EC  3619               	rlcf	(___lodiv@quotient+4)^0,f,c
  5143  0015EE  361A               	rlcf	(___lodiv@quotient+5)^0,f,c
  5144  0015F0  361B               	rlcf	(___lodiv@quotient+6)^0,f,c
  5145  0015F2  361C               	rlcf	(___lodiv@quotient+7)^0,f,c
  5146  0015F4  500D               	movf	___lodiv@divisor^0,w,c
  5147  0015F6  5C05               	subwf	___lodiv@dividend^0,w,c
  5148  0015F8  500E               	movf	(___lodiv@divisor+1)^0,w,c
  5149  0015FA  5806               	subwfb	(___lodiv@dividend+1)^0,w,c
  5150  0015FC  500F               	movf	(___lodiv@divisor+2)^0,w,c
  5151  0015FE  5807               	subwfb	(___lodiv@dividend+2)^0,w,c
  5152  001600  5010               	movf	(___lodiv@divisor+3)^0,w,c
  5153  001602  5808               	subwfb	(___lodiv@dividend+3)^0,w,c
  5154  001604  5011               	movf	(___lodiv@divisor+4)^0,w,c
  5155  001606  5809               	subwfb	(___lodiv@dividend+4)^0,w,c
  5156  001608  5012               	movf	(___lodiv@divisor+5)^0,w,c
  5157  00160A  580A               	subwfb	(___lodiv@dividend+5)^0,w,c
  5158  00160C  5013               	movf	(___lodiv@divisor+6)^0,w,c
  5159  00160E  580B               	subwfb	(___lodiv@dividend+6)^0,w,c
  5160  001610  5014               	movf	(___lodiv@divisor+7)^0,w,c
  5161  001612  580C               	subwfb	(___lodiv@dividend+7)^0,w,c
  5162  001614  A0D8               	btfss	status,0,c
  5163  001616  EF0F  F00B         	goto	u2241
  5164  00161A  EF11  F00B         	goto	u2240
  5165  00161E                     u2241:
  5166  00161E  EF22  F00B         	goto	l3034
  5167  001622                     u2240:
  5168  001622  500D               	movf	___lodiv@divisor^0,w,c
  5169  001624  5E05               	subwf	___lodiv@dividend^0,f,c
  5170  001626  500E               	movf	(___lodiv@divisor+1)^0,w,c
  5171  001628  5A06               	subwfb	(___lodiv@dividend+1)^0,f,c
  5172  00162A  500F               	movf	(___lodiv@divisor+2)^0,w,c
  5173  00162C  5A07               	subwfb	(___lodiv@dividend+2)^0,f,c
  5174  00162E  5010               	movf	(___lodiv@divisor+3)^0,w,c
  5175  001630  5A08               	subwfb	(___lodiv@dividend+3)^0,f,c
  5176  001632  5011               	movf	(___lodiv@divisor+4)^0,w,c
  5177  001634  5A09               	subwfb	(___lodiv@dividend+4)^0,f,c
  5178  001636  5012               	movf	(___lodiv@divisor+5)^0,w,c
  5179  001638  5A0A               	subwfb	(___lodiv@dividend+5)^0,f,c
  5180  00163A  5013               	movf	(___lodiv@divisor+6)^0,w,c
  5181  00163C  5A0B               	subwfb	(___lodiv@dividend+6)^0,f,c
  5182  00163E  5014               	movf	(___lodiv@divisor+7)^0,w,c
  5183  001640  5A0C               	subwfb	(___lodiv@dividend+7)^0,f,c
  5184  001642  8015               	bsf	___lodiv@quotient^0,0,c
  5185  001644                     l3034:
  5186  001644  90D8               	bcf	status,0,c
  5187  001646  3214               	rrcf	(___lodiv@divisor+7)^0,f,c
  5188  001648  3213               	rrcf	(___lodiv@divisor+6)^0,f,c
  5189  00164A  3212               	rrcf	(___lodiv@divisor+5)^0,f,c
  5190  00164C  3211               	rrcf	(___lodiv@divisor+4)^0,f,c
  5191  00164E  3210               	rrcf	(___lodiv@divisor+3)^0,f,c
  5192  001650  320F               	rrcf	(___lodiv@divisor+2)^0,f,c
  5193  001652  320E               	rrcf	(___lodiv@divisor+1)^0,f,c
  5194  001654  320D               	rrcf	___lodiv@divisor^0,f,c
  5195  001656  2E1D               	decfsz	___lodiv@counter^0,f,c
  5196  001658  EFF1  F00A         	goto	l3026
  5197  00165C                     l1243:
  5198  00165C  C015  F005         	movff	___lodiv@quotient,?___lodiv
  5199  001660  C016  F006         	movff	___lodiv@quotient+1,?___lodiv+1
  5200  001664  C017  F007         	movff	___lodiv@quotient+2,?___lodiv+2
  5201  001668  C018  F008         	movff	___lodiv@quotient+3,?___lodiv+3
  5202  00166C  C019  F009         	movff	___lodiv@quotient+4,?___lodiv+4
  5203  001670  C01A  F00A         	movff	___lodiv@quotient+5,?___lodiv+5
  5204  001674  C01B  F00B         	movff	___lodiv@quotient+6,?___lodiv+6
  5205  001678  C01C  F00C         	movff	___lodiv@quotient+7,?___lodiv+7
  5206  00167C  0012               	return		;funcret
  5207  00167E                     __end_of___lodiv:
  5208                           	opt callstack 0
  5209                           
  5210 ;; *************** function _stoa *****************
  5211 ;; Defined at:
  5212 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5213 ;; Parameters:    Size  Location     Type
  5214 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  5215 ;;		 -> NULL(0), 
  5216 ;;  s               2   17[COMRAM] PTR unsigned char 
  5217 ;;		 -> ?_printf(2), STR_5(9), STR_4(12), 
  5218 ;; Auto vars:     Size  Location     Type
  5219 ;;  nuls            7   20[COMRAM] unsigned char [7]
  5220 ;;  l               2   35[COMRAM] int 
  5221 ;;  p               2   33[COMRAM] int 
  5222 ;;  cp              2   31[COMRAM] PTR unsigned char 
  5223 ;;		 -> ?_printf(2), stoa@nuls(7), STR_5(9), STR_4(12), 
  5224 ;;  w               2   29[COMRAM] int 
  5225 ;;  i               2   27[COMRAM] int 
  5226 ;; Return value:  Size  Location     Type
  5227 ;;                  2   15[COMRAM] int 
  5228 ;; Registers used:
  5229 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5230 ;; Tracked objects:
  5231 ;;		On entry : 0/0
  5232 ;;		On exit  : 0/0
  5233 ;;		Unchanged: 0/0
  5234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5235 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5236 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5237 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5238 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5239 ;;Total ram usage:       22 bytes
  5240 ;; Hardware stack levels used:    1
  5241 ;; Hardware stack levels required when called:    7
  5242 ;; This function calls:
  5243 ;;		_fputc
  5244 ;;		_strlen
  5245 ;; This function is called by:
  5246 ;;		_vfpfcnvrt
  5247 ;; This function uses a non-reentrant model
  5248 ;;
  5249                           
  5250                           	psect	text32
  5251  000E6C                     __ptext32:
  5252                           	opt callstack 0
  5253  000E6C                     _stoa:
  5254                           	opt callstack 19
  5255  000E6C                     
  5256                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  5257  000E6C  EE20  F0ED         	lfsr	2,stoa@F1139
  5258  000E70  EE10  F015         	lfsr	1,stoa@nuls
  5259  000E74  0E06               	movlw	6
  5260  000E76                     u2451:
  5261  000E76  CFDB FFE3          	movff	plusw2,plusw1
  5262  000E7A  06E8               	decf	wreg,f,c
  5263  000E7C  E2FC               	bc	u2451
  5264  000E7E                     
  5265                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  5266  000E7E  C012  F020         	movff	stoa@s,stoa@cp
  5267  000E82  C013  F021         	movff	stoa@s+1,stoa@cp+1
  5268  000E86                     
  5269                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  5270  000E86  5020               	movf	stoa@cp^0,w,c
  5271  000E88  1021               	iorwf	(stoa@cp+1)^0,w,c
  5272  000E8A  A4D8               	btfss	status,2,c
  5273  000E8C  EF4A  F007         	goto	u2461
  5274  000E90  EF4C  F007         	goto	u2460
  5275  000E94                     u2461:
  5276  000E94  EF50  F007         	goto	l3136
  5277  000E98                     u2460:
  5278  000E98                     
  5279                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  5280  000E98  0E15               	movlw	low stoa@nuls
  5281  000E9A  6E20               	movwf	stoa@cp^0,c
  5282  000E9C  0E00               	movlw	high stoa@nuls
  5283  000E9E  6E21               	movwf	(stoa@cp+1)^0,c
  5284  000EA0                     l3136:
  5285                           
  5286                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  5287  000EA0  C020  F005         	movff	stoa@cp,strlen@s
  5288  000EA4  C021  F006         	movff	stoa@cp+1,strlen@s+1
  5289  000EA8  ECAF  F00F         	call	_strlen	;wreg free
  5290  000EAC  C005  F024         	movff	?_strlen,stoa@l
  5291  000EB0  C006  F025         	movff	?_strlen+1,stoa@l+1
  5292  000EB4                     
  5293                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  5294  000EB4  C08C  F022         	movff	_prec,stoa@p
  5295  000EB8  C08D  F023         	movff	_prec+1,stoa@p+1
  5296  000EBC                     
  5297                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  5298  000EBC  BE23               	btfsc	(stoa@p+1)^0,7,c
  5299  000EBE  EF63  F007         	goto	u2471
  5300  000EC2  EF65  F007         	goto	u2470
  5301  000EC6                     u2471:
  5302  000EC6  EF7A  F007         	goto	l702
  5303  000ECA                     u2470:
  5304  000ECA  5024               	movf	stoa@l^0,w,c
  5305  000ECC  5C22               	subwf	stoa@p^0,w,c
  5306  000ECE  5023               	movf	(stoa@p+1)^0,w,c
  5307  000ED0  0A80               	xorlw	128
  5308  000ED2  6E14               	movwf	??_stoa^0,c
  5309  000ED4  5025               	movf	(stoa@l+1)^0,w,c
  5310  000ED6  0A80               	xorlw	128
  5311  000ED8  5814               	subwfb	??_stoa^0,w,c
  5312  000EDA  A0D8               	btfss	status,0,c
  5313  000EDC  EF72  F007         	goto	u2481
  5314  000EE0  EF74  F007         	goto	u2480
  5315  000EE4                     u2481:
  5316  000EE4  EF76  F007         	goto	l700
  5317  000EE8                     u2480:
  5318  000EE8  EF7A  F007         	goto	l702
  5319  000EEC                     l700:
  5320  000EEC  C022  F024         	movff	stoa@p,stoa@l
  5321  000EF0  C023  F025         	movff	stoa@p+1,stoa@l+1
  5322  000EF4                     l702:
  5323                           
  5324                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  5325  000EF4  C024  F022         	movff	stoa@l,stoa@p
  5326  000EF8  C025  F023         	movff	stoa@l+1,stoa@p+1
  5327                           
  5328                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  5329  000EFC  C08A  F01E         	movff	_width,stoa@w
  5330  000F00  C08B  F01F         	movff	_width+1,stoa@w+1
  5331                           
  5332                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  5333  000F04  B057               	btfsc	_flags^0,0,c
  5334  000F06  EF87  F007         	goto	u2491
  5335  000F0A  EF89  F007         	goto	u2490
  5336  000F0E                     u2491:
  5337  000F0E  EFA6  F007         	goto	l3152
  5338  000F12                     u2490:
  5339  000F12  EF97  F007         	goto	l3150
  5340  000F16                     l3146:
  5341                           
  5342                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  5343  000F16  0E00               	movlw	0
  5344  000F18  6E08               	movwf	(fputc@c+1)^0,c
  5345  000F1A  0E20               	movlw	32
  5346  000F1C  6E07               	movwf	fputc@c^0,c
  5347  000F1E  C010  F009         	movff	stoa@fp,fputc@fp
  5348  000F22  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  5349  000F26  EC18  F00D         	call	_fputc	;wreg free
  5350  000F2A                     
  5351                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  5352  000F2A  4A24               	infsnz	stoa@l^0,f,c
  5353  000F2C  2A25               	incf	(stoa@l+1)^0,f,c
  5354  000F2E                     l3150:
  5355                           
  5356                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  5357  000F2E  501E               	movf	stoa@w^0,w,c
  5358  000F30  5C24               	subwf	stoa@l^0,w,c
  5359  000F32  5025               	movf	(stoa@l+1)^0,w,c
  5360  000F34  0A80               	xorlw	128
  5361  000F36  6E14               	movwf	??_stoa^0,c
  5362  000F38  501F               	movf	(stoa@w+1)^0,w,c
  5363  000F3A  0A80               	xorlw	128
  5364  000F3C  5814               	subwfb	??_stoa^0,w,c
  5365  000F3E  A0D8               	btfss	status,0,c
  5366  000F40  EFA4  F007         	goto	u2501
  5367  000F44  EFA6  F007         	goto	u2500
  5368  000F48                     u2501:
  5369  000F48  EF8B  F007         	goto	l3146
  5370  000F4C                     u2500:
  5371  000F4C                     l3152:
  5372                           
  5373                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  5374  000F4C  0E00               	movlw	0
  5375  000F4E  6E1D               	movwf	(stoa@i+1)^0,c
  5376  000F50  0E00               	movlw	0
  5377  000F52  6E1C               	movwf	stoa@i^0,c
  5378                           
  5379                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  5380  000F54  EFCB  F007         	goto	l3160
  5381  000F58                     l3154:
  5382                           
  5383                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  5384  000F58  C020  FFF6         	movff	stoa@cp,tblptrl
  5385  000F5C  C021  FFF7         	movff	stoa@cp+1,tblptrh
  5386  000F60  0E00               	movlw	low (__mediumconst shr (0+16))
  5387  000F62  6EF8               	movwf	tblptru,c
  5388  000F64  0E0E               	movlw	(high __ramtop+-1)
  5389  000F66  64F7               	cpfsgt	tblptrh,c
  5390  000F68  D003               	bra	u2517
  5391  000F6A  0008               	tblrd		*
  5392  000F6C  50F5               	movf	tablat,w,c
  5393  000F6E  D005               	bra	u2510
  5394  000F70                     u2517:
  5395  000F70  CFF6 FFE9          	movff	tblptrl,fsr0l
  5396  000F74  CFF7 FFEA          	movff	tblptrh,fsr0h
  5397  000F78  50EF               	movf	indf0,w,c
  5398  000F7A                     u2510:
  5399  000F7A  6E14               	movwf	??_stoa^0,c
  5400  000F7C  5014               	movf	??_stoa^0,w,c
  5401  000F7E  6E07               	movwf	fputc@c^0,c
  5402  000F80  6A08               	clrf	(fputc@c+1)^0,c
  5403  000F82  C010  F009         	movff	stoa@fp,fputc@fp
  5404  000F86  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  5405  000F8A  EC18  F00D         	call	_fputc	;wreg free
  5406  000F8E                     
  5407                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  5408  000F8E  4A20               	infsnz	stoa@cp^0,f,c
  5409  000F90  2A21               	incf	(stoa@cp+1)^0,f,c
  5410  000F92                     
  5411                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  5412  000F92  4A1C               	infsnz	stoa@i^0,f,c
  5413  000F94  2A1D               	incf	(stoa@i+1)^0,f,c
  5414  000F96                     l3160:
  5415                           
  5416                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  5417  000F96  5022               	movf	stoa@p^0,w,c
  5418  000F98  5C1C               	subwf	stoa@i^0,w,c
  5419  000F9A  501D               	movf	(stoa@i+1)^0,w,c
  5420  000F9C  0A80               	xorlw	128
  5421  000F9E  6E14               	movwf	??_stoa^0,c
  5422  000FA0  5023               	movf	(stoa@p+1)^0,w,c
  5423  000FA2  0A80               	xorlw	128
  5424  000FA4  5814               	subwfb	??_stoa^0,w,c
  5425  000FA6  A0D8               	btfss	status,0,c
  5426  000FA8  EFD8  F007         	goto	u2521
  5427  000FAC  EFDA  F007         	goto	u2520
  5428  000FB0                     u2521:
  5429  000FB0  EFAC  F007         	goto	l3154
  5430  000FB4                     u2520:
  5431  000FB4                     
  5432                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  5433  000FB4  A057               	btfss	_flags^0,0,c
  5434  000FB6  EFDF  F007         	goto	u2531
  5435  000FBA  EFE1  F007         	goto	u2530
  5436  000FBE                     u2531:
  5437  000FBE  EFFE  F007         	goto	l712
  5438  000FC2                     u2530:
  5439  000FC2  EFEF  F007         	goto	l3168
  5440  000FC6                     l3164:
  5441                           
  5442                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  5443  000FC6  0E00               	movlw	0
  5444  000FC8  6E08               	movwf	(fputc@c+1)^0,c
  5445  000FCA  0E20               	movlw	32
  5446  000FCC  6E07               	movwf	fputc@c^0,c
  5447  000FCE  C010  F009         	movff	stoa@fp,fputc@fp
  5448  000FD2  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  5449  000FD6  EC18  F00D         	call	_fputc	;wreg free
  5450  000FDA                     
  5451                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  5452  000FDA  4A24               	infsnz	stoa@l^0,f,c
  5453  000FDC  2A25               	incf	(stoa@l+1)^0,f,c
  5454  000FDE                     l3168:
  5455                           
  5456                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  5457  000FDE  501E               	movf	stoa@w^0,w,c
  5458  000FE0  5C24               	subwf	stoa@l^0,w,c
  5459  000FE2  5025               	movf	(stoa@l+1)^0,w,c
  5460  000FE4  0A80               	xorlw	128
  5461  000FE6  6E14               	movwf	??_stoa^0,c
  5462  000FE8  501F               	movf	(stoa@w+1)^0,w,c
  5463  000FEA  0A80               	xorlw	128
  5464  000FEC  5814               	subwfb	??_stoa^0,w,c
  5465  000FEE  A0D8               	btfss	status,0,c
  5466  000FF0  EFFC  F007         	goto	u2541
  5467  000FF4  EFFE  F007         	goto	u2540
  5468  000FF8                     u2541:
  5469  000FF8  EFE3  F007         	goto	l3164
  5470  000FFC                     u2540:
  5471  000FFC                     l712:
  5472                           
  5473                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  5474  000FFC  C024  F010         	movff	stoa@l,?_stoa
  5475  001000  C025  F011         	movff	stoa@l+1,?_stoa+1
  5476  001004  0012               	return		;funcret
  5477  001006                     __end_of_stoa:
  5478                           	opt callstack 0
  5479                           
  5480 ;; *************** function _dtoa *****************
  5481 ;; Defined at:
  5482 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5483 ;; Parameters:    Size  Location     Type
  5484 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  5485 ;;		 -> NULL(0), 
  5486 ;;  d               8   35[COMRAM] long long 
  5487 ;; Auto vars:     Size  Location     Type
  5488 ;;  n               8   59[COMRAM] long long 
  5489 ;;  i               2   67[COMRAM] int 
  5490 ;;  s               2   57[COMRAM] int 
  5491 ;;  w               2   55[COMRAM] int 
  5492 ;;  p               2   53[COMRAM] int 
  5493 ;; Return value:  Size  Location     Type
  5494 ;;                  2   33[COMRAM] int 
  5495 ;; Registers used:
  5496 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5497 ;; Tracked objects:
  5498 ;;		On entry : 0/0
  5499 ;;		On exit  : 0/0
  5500 ;;		Unchanged: 0/0
  5501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5502 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5503 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5504 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5505 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5506 ;;Total ram usage:       36 bytes
  5507 ;; Hardware stack levels used:    1
  5508 ;; Hardware stack levels required when called:    9
  5509 ;; This function calls:
  5510 ;;		___aodiv
  5511 ;;		___aomod
  5512 ;;		_abs
  5513 ;;		_pad
  5514 ;; This function is called by:
  5515 ;;		_vfpfcnvrt
  5516 ;; This function uses a non-reentrant model
  5517 ;;
  5518                           
  5519                           	psect	text33
  5520  0006B4                     __ptext33:
  5521                           	opt callstack 0
  5522  0006B4                     _dtoa:
  5523                           	opt callstack 17
  5524  0006B4                     
  5525                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  5526  0006B4  C024  F03C         	movff	dtoa@d,dtoa@n
  5527  0006B8  C025  F03D         	movff	dtoa@d+1,dtoa@n+1
  5528  0006BC  C026  F03E         	movff	dtoa@d+2,dtoa@n+2
  5529  0006C0  C027  F03F         	movff	dtoa@d+3,dtoa@n+3
  5530  0006C4  C028  F040         	movff	dtoa@d+4,dtoa@n+4
  5531  0006C8  C029  F041         	movff	dtoa@d+5,dtoa@n+5
  5532  0006CC  C02A  F042         	movff	dtoa@d+6,dtoa@n+6
  5533  0006D0  C02B  F043         	movff	dtoa@d+7,dtoa@n+7
  5534  0006D4                     
  5535                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  5536  0006D4  BE43               	btfsc	(dtoa@n+7)^0,7,c
  5537  0006D6  EF6F  F003         	goto	u2301
  5538  0006DA  EF72  F003         	goto	u2300
  5539  0006DE                     u2301:
  5540  0006DE  0E01               	movlw	1
  5541  0006E0  EF73  F003         	goto	u2310
  5542  0006E4                     u2300:
  5543  0006E4  0E00               	movlw	0
  5544  0006E6                     u2310:
  5545  0006E6  6E3A               	movwf	dtoa@s^0,c
  5546  0006E8  6A3B               	clrf	(dtoa@s+1)^0,c
  5547                           
  5548                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  5549  0006EA  503A               	movf	dtoa@s^0,w,c
  5550  0006EC  103B               	iorwf	(dtoa@s+1)^0,w,c
  5551  0006EE  B4D8               	btfsc	status,2,c
  5552  0006F0  EF7C  F003         	goto	u2321
  5553  0006F4  EF7E  F003         	goto	u2320
  5554  0006F8                     u2321:
  5555  0006F8  EF8E  F003         	goto	l3072
  5556  0006FC                     u2320:
  5557  0006FC                     
  5558                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  5559  0006FC  1E43               	comf	(dtoa@n+7)^0,f,c
  5560  0006FE  1E42               	comf	(dtoa@n+6)^0,f,c
  5561  000700  1E41               	comf	(dtoa@n+5)^0,f,c
  5562  000702  1E40               	comf	(dtoa@n+4)^0,f,c
  5563  000704  1E3F               	comf	(dtoa@n+3)^0,f,c
  5564  000706  1E3E               	comf	(dtoa@n+2)^0,f,c
  5565  000708  1E3D               	comf	(dtoa@n+1)^0,f,c
  5566  00070A  6C3C               	negf	dtoa@n^0,c
  5567  00070C  0E00               	movlw	0
  5568  00070E  223D               	addwfc	(dtoa@n+1)^0,f,c
  5569  000710  223E               	addwfc	(dtoa@n+2)^0,f,c
  5570  000712  223F               	addwfc	(dtoa@n+3)^0,f,c
  5571  000714  2240               	addwfc	(dtoa@n+4)^0,f,c
  5572  000716  2241               	addwfc	(dtoa@n+5)^0,f,c
  5573  000718  2242               	addwfc	(dtoa@n+6)^0,f,c
  5574  00071A  2243               	addwfc	(dtoa@n+7)^0,f,c
  5575  00071C                     l3072:
  5576                           
  5577                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  5578  00071C  0100               	movlb	0	; () banked
  5579  00071E  BF8D               	btfsc	(_prec+1)& (0+255),7,b
  5580  000720  EF94  F003         	goto	u2331
  5581  000724  EF96  F003         	goto	u2330
  5582  000728                     u2331:
  5583  000728  EF97  F003         	goto	l3076
  5584  00072C                     u2330:
  5585  00072C                     
  5586                           ; BSR set to: 0
  5587                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  5588  00072C  9257               	bcf	_flags^0,1,c
  5589  00072E                     l3076:
  5590                           
  5591                           ; BSR set to: 0
  5592                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  5593  00072E  BF8D               	btfsc	(_prec+1)& (0+255),7,b
  5594  000730  EFA4  F003         	goto	u2340
  5595  000734  518D               	movf	(_prec+1)& (0+255),w,b
  5596  000736  E106               	bnz	u2341
  5597  000738  058C               	decf	_prec& (0+255),w,b
  5598  00073A  B0D8               	btfsc	status,0,c
  5599  00073C  EFA2  F003         	goto	u2341
  5600  000740  EFA4  F003         	goto	u2340
  5601  000744                     u2341:
  5602  000744  EFAA  F003         	goto	l673
  5603  000748                     u2340:
  5604  000748                     
  5605                           ; BSR set to: 0
  5606  000748  0E00               	movlw	0
  5607  00074A  6E37               	movwf	(dtoa@p+1)^0,c
  5608  00074C  0E01               	movlw	1
  5609  00074E  6E36               	movwf	dtoa@p^0,c
  5610  000750  EFAE  F003         	goto	l675
  5611  000754                     l673:
  5612                           
  5613                           ; BSR set to: 0
  5614  000754  C08C  F036         	movff	_prec,dtoa@p
  5615  000758  C08D  F037         	movff	_prec+1,dtoa@p+1
  5616  00075C                     l675:
  5617                           
  5618                           ; BSR set to: 0
  5619                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  5620  00075C  C08A  F038         	movff	_width,dtoa@w
  5621  000760  C08B  F039         	movff	_width+1,dtoa@w+1
  5622  000764                     
  5623                           ; BSR set to: 0
  5624                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  5625  000764  503A               	movf	dtoa@s^0,w,c
  5626  000766  103B               	iorwf	(dtoa@s+1)^0,w,c
  5627  000768  A4D8               	btfss	status,2,c
  5628  00076A  EFB9  F003         	goto	u2351
  5629  00076E  EFBB  F003         	goto	u2350
  5630  000772                     u2351:
  5631  000772  EFC2  F003         	goto	l3084
  5632  000776                     u2350:
  5633  000776                     
  5634                           ; BSR set to: 0
  5635  000776  A457               	btfss	_flags^0,2,c
  5636  000778  EFC0  F003         	goto	u2361
  5637  00077C  EFC2  F003         	goto	u2360
  5638  000780                     u2361:
  5639  000780  EFC5  F003         	goto	l3086
  5640  000784                     u2360:
  5641  000784                     l3084:
  5642                           
  5643                           ; BSR set to: 0
  5644                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  5645  000784  0638               	decf	dtoa@w^0,f,c
  5646  000786  A0D8               	btfss	status,0,c
  5647  000788  0639               	decf	(dtoa@w+1)^0,f,c
  5648  00078A                     l3086:
  5649                           
  5650                           ; BSR set to: 0
  5651                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  5652  00078A  0E00               	movlw	0
  5653  00078C  6E45               	movwf	(dtoa@i+1)^0,c
  5654  00078E  0E1F               	movlw	31
  5655  000790  6E44               	movwf	dtoa@i^0,c
  5656  000792                     
  5657                           ; BSR set to: 0
  5658                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  5659  000792  0E00               	movlw	0
  5660  000794  0101               	movlb	1	; () banked
  5661  000796  6FE7               	movwf	(_dbuf+31)& (0+255),b
  5662                           
  5663                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5664  000798  EF4A  F004         	goto	l3100
  5665  00079C                     l3090:
  5666                           
  5667                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  5668  00079C  0644               	decf	dtoa@i^0,f,c
  5669  00079E  A0D8               	btfss	status,0,c
  5670  0007A0  0645               	decf	(dtoa@i+1)^0,f,c
  5671  0007A2                     
  5672                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  5673  0007A2  0EC8               	movlw	low _dbuf
  5674  0007A4  2444               	addwf	dtoa@i^0,w,c
  5675  0007A6  6ED9               	movwf	fsr2l,c
  5676  0007A8  0E01               	movlw	high _dbuf
  5677  0007AA  2045               	addwfc	(dtoa@i+1)^0,w,c
  5678  0007AC  6EDA               	movwf	fsr2h,c
  5679  0007AE  C03C  F005         	movff	dtoa@n,___aomod@dividend
  5680  0007B2  C03D  F006         	movff	dtoa@n+1,___aomod@dividend+1
  5681  0007B6  C03E  F007         	movff	dtoa@n+2,___aomod@dividend+2
  5682  0007BA  C03F  F008         	movff	dtoa@n+3,___aomod@dividend+3
  5683  0007BE  C040  F009         	movff	dtoa@n+4,___aomod@dividend+4
  5684  0007C2  C041  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  5685  0007C6  C042  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  5686  0007CA  C043  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  5687  0007CE  0E0A               	movlw	10
  5688  0007D0  6E0D               	movwf	___aomod@divisor^0,c
  5689  0007D2  0E00               	movlw	0
  5690  0007D4  6E0E               	movwf	(___aomod@divisor+1)^0,c
  5691  0007D6  0E00               	movlw	0
  5692  0007D8  6E0F               	movwf	(___aomod@divisor+2)^0,c
  5693  0007DA  0E00               	movlw	0
  5694  0007DC  6E10               	movwf	(___aomod@divisor+3)^0,c
  5695  0007DE  0E00               	movlw	0
  5696  0007E0  6E11               	movwf	(___aomod@divisor+4)^0,c
  5697  0007E2  0E00               	movlw	0
  5698  0007E4  6E12               	movwf	(___aomod@divisor+5)^0,c
  5699  0007E6  0E00               	movlw	0
  5700  0007E8  6E13               	movwf	(___aomod@divisor+6)^0,c
  5701  0007EA  0E00               	movlw	0
  5702  0007EC  6E14               	movwf	(___aomod@divisor+7)^0,c
  5703  0007EE  EC94  F009         	call	___aomod	;wreg free
  5704  0007F2  C005  F02C         	movff	?___aomod,??_dtoa
  5705  0007F6  C006  F02D         	movff	?___aomod+1,??_dtoa+1
  5706  0007FA  C007  F02E         	movff	?___aomod+2,??_dtoa+2
  5707  0007FE  C008  F02F         	movff	?___aomod+3,??_dtoa+3
  5708  000802  C009  F030         	movff	?___aomod+4,??_dtoa+4
  5709  000806  C00A  F031         	movff	?___aomod+5,??_dtoa+5
  5710  00080A  C00B  F032         	movff	?___aomod+6,??_dtoa+6
  5711  00080E  C00C  F033         	movff	?___aomod+7,??_dtoa+7
  5712  000812  C02C  F017         	movff	??_dtoa,abs@a
  5713  000816  C02E  F018         	movff	??_dtoa+2,abs@a+1
  5714  00081A  EC64  F010         	call	_abs	;wreg free
  5715  00081E  5017               	movf	?_abs^0,w,c
  5716  000820  0F30               	addlw	48
  5717  000822  6EDF               	movwf	indf2,c
  5718  000824                     
  5719                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  5720  000824  0636               	decf	dtoa@p^0,f,c
  5721  000826  A0D8               	btfss	status,0,c
  5722  000828  0637               	decf	(dtoa@p+1)^0,f,c
  5723  00082A                     
  5724                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  5725  00082A  0638               	decf	dtoa@w^0,f,c
  5726  00082C  A0D8               	btfss	status,0,c
  5727  00082E  0639               	decf	(dtoa@w+1)^0,f,c
  5728  000830                     
  5729                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  5730  000830  C03C  F005         	movff	dtoa@n,___aodiv@dividend
  5731  000834  C03D  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  5732  000838  C03E  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  5733  00083C  C03F  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  5734  000840  C040  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  5735  000844  C041  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  5736  000848  C042  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  5737  00084C  C043  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  5738  000850  0E0A               	movlw	10
  5739  000852  6E0D               	movwf	___aodiv@divisor^0,c
  5740  000854  0E00               	movlw	0
  5741  000856  6E0E               	movwf	(___aodiv@divisor+1)^0,c
  5742  000858  0E00               	movlw	0
  5743  00085A  6E0F               	movwf	(___aodiv@divisor+2)^0,c
  5744  00085C  0E00               	movlw	0
  5745  00085E  6E10               	movwf	(___aodiv@divisor+3)^0,c
  5746  000860  0E00               	movlw	0
  5747  000862  6E11               	movwf	(___aodiv@divisor+4)^0,c
  5748  000864  0E00               	movlw	0
  5749  000866  6E12               	movwf	(___aodiv@divisor+5)^0,c
  5750  000868  0E00               	movlw	0
  5751  00086A  6E13               	movwf	(___aodiv@divisor+6)^0,c
  5752  00086C  0E00               	movlw	0
  5753  00086E  6E14               	movwf	(___aodiv@divisor+7)^0,c
  5754  000870  ECD0  F008         	call	___aodiv	;wreg free
  5755  000874  C005  F03C         	movff	?___aodiv,dtoa@n
  5756  000878  C006  F03D         	movff	?___aodiv+1,dtoa@n+1
  5757  00087C  C007  F03E         	movff	?___aodiv+2,dtoa@n+2
  5758  000880  C008  F03F         	movff	?___aodiv+3,dtoa@n+3
  5759  000884  C009  F040         	movff	?___aodiv+4,dtoa@n+4
  5760  000888  C00A  F041         	movff	?___aodiv+5,dtoa@n+5
  5761  00088C  C00B  F042         	movff	?___aodiv+6,dtoa@n+6
  5762  000890  C00C  F043         	movff	?___aodiv+7,dtoa@n+7
  5763  000894                     l3100:
  5764                           
  5765                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5766  000894  BE45               	btfsc	(dtoa@i+1)^0,7,c
  5767  000896  EF55  F004         	goto	u2371
  5768  00089A  5045               	movf	(dtoa@i+1)^0,w,c
  5769  00089C  E108               	bnz	u2370
  5770  00089E  0444               	decf	dtoa@i^0,w,c
  5771  0008A0  A0D8               	btfss	status,0,c
  5772  0008A2  EF55  F004         	goto	u2371
  5773  0008A6  EF57  F004         	goto	u2370
  5774  0008AA                     u2371:
  5775  0008AA  EF87  F004         	goto	l3110
  5776  0008AE                     u2370:
  5777  0008AE  503C               	movf	dtoa@n^0,w,c
  5778  0008B0  103D               	iorwf	(dtoa@n+1)^0,w,c
  5779  0008B2  103E               	iorwf	(dtoa@n+2)^0,w,c
  5780  0008B4  103F               	iorwf	(dtoa@n+3)^0,w,c
  5781  0008B6  1040               	iorwf	(dtoa@n+4)^0,w,c
  5782  0008B8  1041               	iorwf	(dtoa@n+5)^0,w,c
  5783  0008BA  1042               	iorwf	(dtoa@n+6)^0,w,c
  5784  0008BC  1043               	iorwf	(dtoa@n+7)^0,w,c
  5785  0008BE  A4D8               	btfss	status,2,c
  5786  0008C0  EF64  F004         	goto	u2381
  5787  0008C4  EF66  F004         	goto	u2380
  5788  0008C8                     u2381:
  5789  0008C8  EFCE  F003         	goto	l3090
  5790  0008CC                     u2380:
  5791  0008CC  BE37               	btfsc	(dtoa@p+1)^0,7,c
  5792  0008CE  EF73  F004         	goto	u2390
  5793  0008D2  5037               	movf	(dtoa@p+1)^0,w,c
  5794  0008D4  E106               	bnz	u2391
  5795  0008D6  0436               	decf	dtoa@p^0,w,c
  5796  0008D8  B0D8               	btfsc	status,0,c
  5797  0008DA  EF71  F004         	goto	u2391
  5798  0008DE  EF73  F004         	goto	u2390
  5799  0008E2                     u2391:
  5800  0008E2  EFCE  F003         	goto	l3090
  5801  0008E6                     u2390:
  5802  0008E6  BE39               	btfsc	(dtoa@w+1)^0,7,c
  5803  0008E8  EF7E  F004         	goto	u2401
  5804  0008EC  5039               	movf	(dtoa@w+1)^0,w,c
  5805  0008EE  E108               	bnz	u2400
  5806  0008F0  0438               	decf	dtoa@w^0,w,c
  5807  0008F2  A0D8               	btfss	status,0,c
  5808  0008F4  EF7E  F004         	goto	u2401
  5809  0008F8  EF80  F004         	goto	u2400
  5810  0008FC                     u2401:
  5811  0008FC  EF87  F004         	goto	l3110
  5812  000900                     u2400:
  5813  000900  B257               	btfsc	_flags^0,1,c
  5814  000902  EF85  F004         	goto	u2411
  5815  000906  EF87  F004         	goto	u2410
  5816  00090A                     u2411:
  5817  00090A  EFCE  F003         	goto	l3090
  5818  00090E                     u2410:
  5819  00090E                     l3110:
  5820                           
  5821                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  5822  00090E  503A               	movf	dtoa@s^0,w,c
  5823  000910  103B               	iorwf	(dtoa@s+1)^0,w,c
  5824  000912  A4D8               	btfss	status,2,c
  5825  000914  EF8E  F004         	goto	u2421
  5826  000918  EF90  F004         	goto	u2420
  5827  00091C                     u2421:
  5828  00091C  EF97  F004         	goto	l3114
  5829  000920                     u2420:
  5830  000920  A457               	btfss	_flags^0,2,c
  5831  000922  EF95  F004         	goto	u2431
  5832  000926  EF97  F004         	goto	u2430
  5833  00092A                     u2431:
  5834  00092A  EFB5  F004         	goto	l3124
  5835  00092E                     u2430:
  5836  00092E                     l3114:
  5837                           
  5838                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  5839  00092E  0644               	decf	dtoa@i^0,f,c
  5840  000930  A0D8               	btfss	status,0,c
  5841  000932  0645               	decf	(dtoa@i+1)^0,f,c
  5842  000934                     
  5843                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  5844  000934  503A               	movf	dtoa@s^0,w,c
  5845  000936  103B               	iorwf	(dtoa@s+1)^0,w,c
  5846  000938  A4D8               	btfss	status,2,c
  5847  00093A  EFA1  F004         	goto	u2441
  5848  00093E  EFA3  F004         	goto	u2440
  5849  000942                     u2441:
  5850  000942  EFA9  F004         	goto	l3120
  5851  000946                     u2440:
  5852  000946  0E00               	movlw	0
  5853  000948  6E35               	movwf	(_dtoa$1221+1)^0,c
  5854  00094A  0E2B               	movlw	43
  5855  00094C  6E34               	movwf	_dtoa$1221^0,c
  5856  00094E  EFAD  F004         	goto	l3122
  5857  000952                     l3120:
  5858  000952  0E00               	movlw	0
  5859  000954  6E35               	movwf	(_dtoa$1221+1)^0,c
  5860  000956  0E2D               	movlw	45
  5861  000958  6E34               	movwf	_dtoa$1221^0,c
  5862  00095A                     l3122:
  5863  00095A  0EC8               	movlw	low _dbuf
  5864  00095C  2444               	addwf	dtoa@i^0,w,c
  5865  00095E  6ED9               	movwf	fsr2l,c
  5866  000960  0E01               	movlw	high _dbuf
  5867  000962  2045               	addwfc	(dtoa@i+1)^0,w,c
  5868  000964  6EDA               	movwf	fsr2h,c
  5869  000966  C034  FFDF         	movff	_dtoa$1221,indf2
  5870  00096A                     l3124:
  5871                           
  5872                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  5873  00096A  C022  F017         	movff	dtoa@fp,pad@fp
  5874  00096E  C023  F018         	movff	dtoa@fp+1,pad@fp+1
  5875  000972  0EC8               	movlw	low _dbuf
  5876  000974  2444               	addwf	dtoa@i^0,w,c
  5877  000976  6E19               	movwf	pad@buf^0,c
  5878  000978  0E01               	movlw	high _dbuf
  5879  00097A  2045               	addwfc	(dtoa@i+1)^0,w,c
  5880  00097C  6E1A               	movwf	(pad@buf+1)^0,c
  5881  00097E  C038  F01B         	movff	dtoa@w,pad@p
  5882  000982  C039  F01C         	movff	dtoa@w+1,pad@p+1
  5883  000986  ECA7  F00B         	call	_pad	;wreg free
  5884  00098A  C017  F022         	movff	?_pad,?_dtoa
  5885  00098E  C018  F023         	movff	?_pad+1,?_dtoa+1
  5886  000992  0012               	return		;funcret
  5887  000994                     __end_of_dtoa:
  5888                           	opt callstack 0
  5889                           
  5890 ;; *************** function _pad *****************
  5891 ;; Defined at:
  5892 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5893 ;; Parameters:    Size  Location     Type
  5894 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  5895 ;;		 -> NULL(0), 
  5896 ;;  buf             2   24[COMRAM] PTR unsigned char 
  5897 ;;		 -> dbuf(32), 
  5898 ;;  p               2   26[COMRAM] int 
  5899 ;; Auto vars:     Size  Location     Type
  5900 ;;  w               2   31[COMRAM] int 
  5901 ;;  i               2   29[COMRAM] int 
  5902 ;; Return value:  Size  Location     Type
  5903 ;;                  2   22[COMRAM] int 
  5904 ;; Registers used:
  5905 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5906 ;; Tracked objects:
  5907 ;;		On entry : 0/0
  5908 ;;		On exit  : 0/0
  5909 ;;		Unchanged: 0/0
  5910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5911 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5912 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5913 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5914 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5915 ;;Total ram usage:       11 bytes
  5916 ;; Hardware stack levels used:    1
  5917 ;; Hardware stack levels required when called:    8
  5918 ;; This function calls:
  5919 ;;		_fputc
  5920 ;;		_fputs
  5921 ;;		_strlen
  5922 ;; This function is called by:
  5923 ;;		_dtoa
  5924 ;;		_utoa
  5925 ;;		_xtoa
  5926 ;; This function uses a non-reentrant model
  5927 ;;
  5928                           
  5929                           	psect	text34
  5930  00174E                     __ptext34:
  5931                           	opt callstack 0
  5932  00174E                     _pad:
  5933                           	opt callstack 17
  5934  00174E                     
  5935                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  5936  00174E  A057               	btfss	_flags^0,0,c
  5937  001750  EFAC  F00B         	goto	u1941
  5938  001754  EFAE  F00B         	goto	u1940
  5939  001758                     u1941:
  5940  001758  EFB8  F00B         	goto	l2886
  5941  00175C                     u1940:
  5942  00175C                     
  5943                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  5944  00175C  C019  F010         	movff	pad@buf,fputs@s
  5945  001760  C01A  F011         	movff	pad@buf+1,fputs@s+1
  5946  001764  C017  F012         	movff	pad@fp,fputs@fp
  5947  001768  C018  F013         	movff	pad@fp+1,fputs@fp+1
  5948  00176C  EC20  F010         	call	_fputs	;wreg free
  5949  001770                     l2886:
  5950                           
  5951                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  5952  001770  BE1C               	btfsc	(pad@p+1)^0,7,c
  5953  001772  EFBD  F00B         	goto	u1951
  5954  001776  EFBF  F00B         	goto	u1950
  5955  00177A                     u1951:
  5956  00177A  EFC5  F00B         	goto	l2890
  5957  00177E                     u1950:
  5958  00177E  C01B  F020         	movff	pad@p,pad@w
  5959  001782  C01C  F021         	movff	pad@p+1,pad@w+1
  5960  001786  EFC9  F00B         	goto	l662
  5961  00178A                     l2890:
  5962  00178A  0E00               	movlw	0
  5963  00178C  6E21               	movwf	(pad@w+1)^0,c
  5964  00178E  0E00               	movlw	0
  5965  001790  6E20               	movwf	pad@w^0,c
  5966  001792                     l662:
  5967                           
  5968                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  5969  001792  0E00               	movlw	0
  5970  001794  6E1F               	movwf	(pad@i+1)^0,c
  5971  001796  0E00               	movlw	0
  5972  001798  6E1E               	movwf	pad@i^0,c
  5973                           
  5974                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  5975  00179A  EFDB  F00B         	goto	l2896
  5976  00179E                     l2892:
  5977                           
  5978                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  5979  00179E  0E00               	movlw	0
  5980  0017A0  6E08               	movwf	(fputc@c+1)^0,c
  5981  0017A2  0E20               	movlw	32
  5982  0017A4  6E07               	movwf	fputc@c^0,c
  5983  0017A6  C017  F009         	movff	pad@fp,fputc@fp
  5984  0017AA  C018  F00A         	movff	pad@fp+1,fputc@fp+1
  5985  0017AE  EC18  F00D         	call	_fputc	;wreg free
  5986  0017B2                     
  5987                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  5988  0017B2  4A1E               	infsnz	pad@i^0,f,c
  5989  0017B4  2A1F               	incf	(pad@i+1)^0,f,c
  5990  0017B6                     l2896:
  5991                           
  5992                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  5993  0017B6  5020               	movf	pad@w^0,w,c
  5994  0017B8  5C1E               	subwf	pad@i^0,w,c
  5995  0017BA  501F               	movf	(pad@i+1)^0,w,c
  5996  0017BC  0A80               	xorlw	128
  5997  0017BE  6E1D               	movwf	??_pad^0,c
  5998  0017C0  5021               	movf	(pad@w+1)^0,w,c
  5999  0017C2  0A80               	xorlw	128
  6000  0017C4  581D               	subwfb	??_pad^0,w,c
  6001  0017C6  A0D8               	btfss	status,0,c
  6002  0017C8  EFE8  F00B         	goto	u1961
  6003  0017CC  EFEA  F00B         	goto	u1960
  6004  0017D0                     u1961:
  6005  0017D0  EFCF  F00B         	goto	l2892
  6006  0017D4                     u1960:
  6007  0017D4                     
  6008                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  6009  0017D4  B057               	btfsc	_flags^0,0,c
  6010  0017D6  EFEF  F00B         	goto	u1971
  6011  0017DA  EFF1  F00B         	goto	u1970
  6012  0017DE                     u1971:
  6013  0017DE  EFFB  F00B         	goto	l2900
  6014  0017E2                     u1970:
  6015  0017E2                     
  6016                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  6017  0017E2  C019  F010         	movff	pad@buf,fputs@s
  6018  0017E6  C01A  F011         	movff	pad@buf+1,fputs@s+1
  6019  0017EA  C017  F012         	movff	pad@fp,fputs@fp
  6020  0017EE  C018  F013         	movff	pad@fp+1,fputs@fp+1
  6021  0017F2  EC20  F010         	call	_fputs	;wreg free
  6022  0017F6                     l2900:
  6023                           
  6024                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  6025  0017F6  C019  F005         	movff	pad@buf,strlen@s
  6026  0017FA  C01A  F006         	movff	pad@buf+1,strlen@s+1
  6027  0017FE  ECAF  F00F         	call	_strlen	;wreg free
  6028  001802  5020               	movf	pad@w^0,w,c
  6029  001804  2405               	addwf	?_strlen^0,w,c
  6030  001806  6E17               	movwf	?_pad^0,c
  6031  001808  5021               	movf	(pad@w+1)^0,w,c
  6032  00180A  2006               	addwfc	(?_strlen+1)^0,w,c
  6033  00180C  6E18               	movwf	(?_pad+1)^0,c
  6034  00180E  0012               	return		;funcret
  6035  001810                     __end_of_pad:
  6036                           	opt callstack 0
  6037                           
  6038 ;; *************** function _strlen *****************
  6039 ;; Defined at:
  6040 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  6041 ;; Parameters:    Size  Location     Type
  6042 ;;  s               2    4[COMRAM] PTR const unsigned char 
  6043 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), STR_5(9), 
  6044 ;;		 -> STR_4(12), 
  6045 ;; Auto vars:     Size  Location     Type
  6046 ;;  a               2    6[COMRAM] PTR const unsigned char 
  6047 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), STR_5(9), 
  6048 ;;		 -> STR_4(12), 
  6049 ;; Return value:  Size  Location     Type
  6050 ;;                  2    4[COMRAM] unsigned int 
  6051 ;; Registers used:
  6052 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  6053 ;; Tracked objects:
  6054 ;;		On entry : 0/0
  6055 ;;		On exit  : 0/0
  6056 ;;		Unchanged: 0/0
  6057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6058 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6059 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6061 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6062 ;;Total ram usage:        4 bytes
  6063 ;; Hardware stack levels used:    1
  6064 ;; Hardware stack levels required when called:    4
  6065 ;; This function calls:
  6066 ;;		Nothing
  6067 ;; This function is called by:
  6068 ;;		_pad
  6069 ;;		_stoa
  6070 ;; This function uses a non-reentrant model
  6071 ;;
  6072                           
  6073                           	psect	text35
  6074  001F5E                     __ptext35:
  6075                           	opt callstack 0
  6076  001F5E                     _strlen:
  6077                           	opt callstack 20
  6078  001F5E  C005  F007         	movff	strlen@s,strlen@a
  6079  001F62  C006  F008         	movff	strlen@s+1,strlen@a+1
  6080  001F66  EFB7  F00F         	goto	l2872
  6081  001F6A                     l2870:
  6082  001F6A  4A05               	infsnz	strlen@s^0,f,c
  6083  001F6C  2A06               	incf	(strlen@s+1)^0,f,c
  6084  001F6E                     l2872:
  6085  001F6E  C005  FFF6         	movff	strlen@s,tblptrl
  6086  001F72  C006  FFF7         	movff	strlen@s+1,tblptrh
  6087  001F76  0E00               	movlw	low (__mediumconst shr (0+16))
  6088  001F78  6EF8               	movwf	tblptru,c
  6089  001F7A  0E0E               	movlw	(high __ramtop+-1)
  6090  001F7C  64F7               	cpfsgt	tblptrh,c
  6091  001F7E  D003               	bra	u1907
  6092  001F80  0008               	tblrd		*
  6093  001F82  50F5               	movf	tablat,w,c
  6094  001F84  D005               	bra	u1900
  6095  001F86                     u1907:
  6096  001F86  CFF6 FFE9          	movff	tblptrl,fsr0l
  6097  001F8A  CFF7 FFEA          	movff	tblptrh,fsr0h
  6098  001F8E  50EF               	movf	indf0,w,c
  6099  001F90                     u1900:
  6100  001F90  0900               	iorlw	0
  6101  001F92  A4D8               	btfss	status,2,c
  6102  001F94  EFCE  F00F         	goto	u1911
  6103  001F98  EFD0  F00F         	goto	u1910
  6104  001F9C                     u1911:
  6105  001F9C  EFB5  F00F         	goto	l2870
  6106  001FA0                     u1910:
  6107  001FA0  5007               	movf	strlen@a^0,w,c
  6108  001FA2  5C05               	subwf	strlen@s^0,w,c
  6109  001FA4  6E05               	movwf	?_strlen^0,c
  6110  001FA6  5008               	movf	(strlen@a+1)^0,w,c
  6111  001FA8  5806               	subwfb	(strlen@s+1)^0,w,c
  6112  001FAA  6E06               	movwf	(?_strlen+1)^0,c
  6113  001FAC  0012               	return		;funcret
  6114  001FAE                     __end_of_strlen:
  6115                           	opt callstack 0
  6116                           
  6117 ;; *************** function _fputs *****************
  6118 ;; Defined at:
  6119 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  6120 ;; Parameters:    Size  Location     Type
  6121 ;;  s               2   15[COMRAM] PTR const unsigned char 
  6122 ;;		 -> dbuf(32), 
  6123 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  6124 ;;		 -> NULL(0), 
  6125 ;; Auto vars:     Size  Location     Type
  6126 ;;  i               2   20[COMRAM] int 
  6127 ;;  c               1   19[COMRAM] unsigned char 
  6128 ;; Return value:  Size  Location     Type
  6129 ;;                  2   15[COMRAM] int 
  6130 ;; Registers used:
  6131 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6132 ;; Tracked objects:
  6133 ;;		On entry : 0/0
  6134 ;;		On exit  : 0/0
  6135 ;;		Unchanged: 0/0
  6136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6137 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6138 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6140 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6141 ;;Total ram usage:        7 bytes
  6142 ;; Hardware stack levels used:    1
  6143 ;; Hardware stack levels required when called:    7
  6144 ;; This function calls:
  6145 ;;		_fputc
  6146 ;; This function is called by:
  6147 ;;		_pad
  6148 ;; This function uses a non-reentrant model
  6149 ;;
  6150                           
  6151                           	psect	text36
  6152  002040                     __ptext36:
  6153                           	opt callstack 0
  6154  002040                     _fputs:
  6155                           	opt callstack 17
  6156  002040  0E00               	movlw	0
  6157  002042  6E16               	movwf	(fputs@i+1)^0,c
  6158  002044  0E00               	movlw	0
  6159  002046  6E15               	movwf	fputs@i^0,c
  6160  002048  EF31  F010         	goto	l2866
  6161  00204C                     l2862:
  6162  00204C  C014  F007         	movff	fputs@c,fputc@c
  6163  002050  6A08               	clrf	(fputc@c+1)^0,c
  6164  002052  C012  F009         	movff	fputs@fp,fputc@fp
  6165  002056  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
  6166  00205A  EC18  F00D         	call	_fputc	;wreg free
  6167  00205E  4A15               	infsnz	fputs@i^0,f,c
  6168  002060  2A16               	incf	(fputs@i+1)^0,f,c
  6169  002062                     l2866:
  6170  002062  5015               	movf	fputs@i^0,w,c
  6171  002064  2410               	addwf	fputs@s^0,w,c
  6172  002066  6ED9               	movwf	fsr2l,c
  6173  002068  5016               	movf	(fputs@i+1)^0,w,c
  6174  00206A  2011               	addwfc	(fputs@s+1)^0,w,c
  6175  00206C  6EDA               	movwf	fsr2h,c
  6176  00206E  50DF               	movf	indf2,w,c
  6177  002070  6E14               	movwf	fputs@c^0,c
  6178  002072  5014               	movf	fputs@c^0,w,c
  6179  002074  A4D8               	btfss	status,2,c
  6180  002076  EF3F  F010         	goto	u1891
  6181  00207A  EF41  F010         	goto	u1890
  6182  00207E                     u1891:
  6183  00207E  EF26  F010         	goto	l2862
  6184  002082                     u1890:
  6185  002082  0012               	return		;funcret
  6186  002084                     __end_of_fputs:
  6187                           	opt callstack 0
  6188                           
  6189 ;; *************** function _fputc *****************
  6190 ;; Defined at:
  6191 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  6192 ;; Parameters:    Size  Location     Type
  6193 ;;  c               2    6[COMRAM] int 
  6194 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
  6195 ;;		 -> NULL(0), 
  6196 ;; Auto vars:     Size  Location     Type
  6197 ;;		None
  6198 ;; Return value:  Size  Location     Type
  6199 ;;                  2    6[COMRAM] int 
  6200 ;; Registers used:
  6201 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6202 ;; Tracked objects:
  6203 ;;		On entry : 0/0
  6204 ;;		On exit  : 0/0
  6205 ;;		Unchanged: 0/0
  6206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6207 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6209 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6210 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6211 ;;Total ram usage:        9 bytes
  6212 ;; Hardware stack levels used:    1
  6213 ;; Hardware stack levels required when called:    6
  6214 ;; This function calls:
  6215 ;;		_putch
  6216 ;; This function is called by:
  6217 ;;		_pad
  6218 ;;		_stoa
  6219 ;;		_vfpfcnvrt
  6220 ;;		_fputs
  6221 ;; This function uses a non-reentrant model
  6222 ;;
  6223                           
  6224                           	psect	text37
  6225  001A30                     __ptext37:
  6226                           	opt callstack 0
  6227  001A30                     _fputc:
  6228                           	opt callstack 17
  6229  001A30  5009               	movf	fputc@fp^0,w,c
  6230  001A32  100A               	iorwf	(fputc@fp+1)^0,w,c
  6231  001A34  B4D8               	btfsc	status,2,c
  6232  001A36  EF1F  F00D         	goto	u1851
  6233  001A3A  EF21  F00D         	goto	u1850
  6234  001A3E                     u1851:
  6235  001A3E  EF2A  F00D         	goto	l2850
  6236  001A42                     u1850:
  6237  001A42  5009               	movf	fputc@fp^0,w,c
  6238  001A44  100A               	iorwf	(fputc@fp+1)^0,w,c
  6239  001A46  A4D8               	btfss	status,2,c
  6240  001A48  EF28  F00D         	goto	u1861
  6241  001A4C  EF2A  F00D         	goto	u1860
  6242  001A50                     u1861:
  6243  001A50  EF2F  F00D         	goto	l2852
  6244  001A54                     u1860:
  6245  001A54                     l2850:
  6246  001A54  5007               	movf	fputc@c^0,w,c
  6247  001A56  ECB8  F011         	call	_putch
  6248  001A5A  EF62  F00D         	goto	l1552
  6249  001A5E                     l2852:
  6250  001A5E  EE20 F004          	lfsr	2,4
  6251  001A62  5009               	movf	fputc@fp^0,w,c
  6252  001A64  26D9               	addwf	fsr2l,f,c
  6253  001A66  500A               	movf	(fputc@fp+1)^0,w,c
  6254  001A68  22DA               	addwfc	fsr2h,f,c
  6255  001A6A  50DE               	movf	postinc2,w,c
  6256  001A6C  10DE               	iorwf	postinc2,w,c
  6257  001A6E  B4D8               	btfsc	status,2,c
  6258  001A70  EF3C  F00D         	goto	u1871
  6259  001A74  EF3E  F00D         	goto	u1870
  6260  001A78                     u1871:
  6261  001A78  EF59  F00D         	goto	l2856
  6262  001A7C                     u1870:
  6263  001A7C  EE20 F004          	lfsr	2,4
  6264  001A80  5009               	movf	fputc@fp^0,w,c
  6265  001A82  26D9               	addwf	fsr2l,f,c
  6266  001A84  500A               	movf	(fputc@fp+1)^0,w,c
  6267  001A86  22DA               	addwfc	fsr2h,f,c
  6268  001A88  EE10 F002          	lfsr	1,2
  6269  001A8C  5009               	movf	fputc@fp^0,w,c
  6270  001A8E  26E1               	addwf	fsr1l,f,c
  6271  001A90  500A               	movf	(fputc@fp+1)^0,w,c
  6272  001A92  22E2               	addwfc	fsr1h,f,c
  6273  001A94  50DE               	movf	postinc2,w,c
  6274  001A96  5CE6               	subwf	postinc1,w,c
  6275  001A98  50E6               	movf	postinc1,w,c
  6276  001A9A  0A80               	xorlw	128
  6277  001A9C  6E0F               	movwf	(??_fputc+4)^0,c
  6278  001A9E  50DE               	movf	postinc2,w,c
  6279  001AA0  0A80               	xorlw	128
  6280  001AA2  580F               	subwfb	(??_fputc+4)^0,w,c
  6281  001AA4  B0D8               	btfsc	status,0,c
  6282  001AA6  EF57  F00D         	goto	u1881
  6283  001AAA  EF59  F00D         	goto	u1880
  6284  001AAE                     u1881:
  6285  001AAE  EF62  F00D         	goto	l1552
  6286  001AB2                     u1880:
  6287  001AB2                     l2856:
  6288  001AB2  EE20 F002          	lfsr	2,2
  6289  001AB6  5009               	movf	fputc@fp^0,w,c
  6290  001AB8  26D9               	addwf	fsr2l,f,c
  6291  001ABA  500A               	movf	(fputc@fp+1)^0,w,c
  6292  001ABC  22DA               	addwfc	fsr2h,f,c
  6293  001ABE  2ADE               	incf	postinc2,f,c
  6294  001AC0  0E00               	movlw	0
  6295  001AC2  22DD               	addwfc	postdec2,f,c
  6296  001AC4                     l1552:
  6297  001AC4  0012               	return		;funcret
  6298  001AC6                     __end_of_fputc:
  6299                           	opt callstack 0
  6300                           
  6301 ;; *************** function _putch *****************
  6302 ;; Defined at:
  6303 ;;		line 201 in file "mcc_generated_files/eusart2.c"
  6304 ;; Parameters:    Size  Location     Type
  6305 ;;  txData          1    wreg     unsigned char 
  6306 ;; Auto vars:     Size  Location     Type
  6307 ;;  txData          1    5[COMRAM] unsigned char 
  6308 ;; Return value:  Size  Location     Type
  6309 ;;                  1    wreg      void 
  6310 ;; Registers used:
  6311 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6312 ;; Tracked objects:
  6313 ;;		On entry : 0/0
  6314 ;;		On exit  : 0/0
  6315 ;;		Unchanged: 0/0
  6316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6318 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6320 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6321 ;;Total ram usage:        1 bytes
  6322 ;; Hardware stack levels used:    1
  6323 ;; Hardware stack levels required when called:    5
  6324 ;; This function calls:
  6325 ;;		_EUSART2_Write
  6326 ;; This function is called by:
  6327 ;;		_fputc
  6328 ;; This function uses a non-reentrant model
  6329 ;;
  6330                           
  6331                           	psect	text38
  6332  002370                     __ptext38:
  6333                           	opt callstack 0
  6334  002370                     _putch:
  6335                           	opt callstack 17
  6336                           
  6337                           ;incstack = 0
  6338                           ;putch@txData stored from wreg
  6339  002370  6E06               	movwf	putch@txData^0,c
  6340  002372                     
  6341                           ;mcc_generated_files/eusart2.c: 201: void putch(char txData);mcc_generated_files/eusart2
      +                          .c: 202: {;mcc_generated_files/eusart2.c: 203:     EUSART2_Write(txData);
  6342  002372  5006               	movf	putch@txData^0,w,c
  6343  002374  EC00  F00F         	call	_EUSART2_Write
  6344  002378  0012               	return		;funcret
  6345  00237A                     __end_of_putch:
  6346                           	opt callstack 0
  6347                           
  6348 ;; *************** function _EUSART2_Write *****************
  6349 ;; Defined at:
  6350 ;;		line 173 in file "mcc_generated_files/eusart2.c"
  6351 ;; Parameters:    Size  Location     Type
  6352 ;;  txData          1    wreg     unsigned char 
  6353 ;; Auto vars:     Size  Location     Type
  6354 ;;  txData          1    4[COMRAM] unsigned char 
  6355 ;; Return value:  Size  Location     Type
  6356 ;;                  1    wreg      void 
  6357 ;; Registers used:
  6358 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6359 ;; Tracked objects:
  6360 ;;		On entry : 0/0
  6361 ;;		On exit  : 0/0
  6362 ;;		Unchanged: 0/0
  6363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6365 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6367 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6368 ;;Total ram usage:        1 bytes
  6369 ;; Hardware stack levels used:    1
  6370 ;; Hardware stack levels required when called:    4
  6371 ;; This function calls:
  6372 ;;		Nothing
  6373 ;; This function is called by:
  6374 ;;		_putch
  6375 ;; This function uses a non-reentrant model
  6376 ;;
  6377                           
  6378                           	psect	text39
  6379  001E00                     __ptext39:
  6380                           	opt callstack 0
  6381  001E00                     _EUSART2_Write:
  6382                           	opt callstack 17
  6383                           
  6384                           ;incstack = 0
  6385                           ;EUSART2_Write@txData stored from wreg
  6386  001E00  6E05               	movwf	EUSART2_Write@txData^0,c
  6387  001E02                     l2828:
  6388                           
  6389                           ;mcc_generated_files/eusart2.c: 175:     while(0 == eusart2TxBufferRemaining)
  6390  001E02  0100               	movlb	0	; () banked
  6391  001E04  51E1               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
  6392  001E06  B4D8               	btfsc	status,2,c
  6393  001E08  EF08  F00F         	goto	u1821
  6394  001E0C  EF0A  F00F         	goto	u1820
  6395  001E10                     u1821:
  6396  001E10  EF01  F00F         	goto	l2828
  6397  001E14                     u1820:
  6398  001E14                     
  6399                           ; BSR set to: 0
  6400                           ;mcc_generated_files/eusart2.c: 179:     if(0 == PIE3bits.TX2IE)
  6401  001E14  010E               	movlb	14	; () banked
  6402  001E16  BDC5               	btfsc	197,6,b	;volatile
  6403  001E18  EF10  F00F         	goto	u1831
  6404  001E1C  EF12  F00F         	goto	u1830
  6405  001E20                     u1831:
  6406  001E20  EF16  F00F         	goto	l321
  6407  001E24                     u1830:
  6408  001E24                     
  6409                           ; BSR set to: 14
  6410                           ;mcc_generated_files/eusart2.c: 180:     {;mcc_generated_files/eusart2.c: 181:         T
      +                          X2REG = txData;
  6411  001E24  C005  FE9A         	movff	EUSART2_Write@txData,3738	;volatile
  6412                           
  6413                           ;mcc_generated_files/eusart2.c: 182:     }
  6414  001E28  EF2C  F00F         	goto	l2842
  6415  001E2C                     l321:
  6416                           
  6417                           ; BSR set to: 14
  6418                           ;mcc_generated_files/eusart2.c: 184:     {;mcc_generated_files/eusart2.c: 185:         P
      +                          IE3bits.TX2IE = 0;
  6419  001E2C  9DC5               	bcf	197,6,b	;volatile
  6420  001E2E                     
  6421                           ; BSR set to: 14
  6422                           ;mcc_generated_files/eusart2.c: 186:         eusart2TxBuffer[eusart2TxHead++] = txData;
  6423  001E2E  0E80               	movlw	low _eusart2TxBuffer
  6424  001E30  0100               	movlb	0	; () banked
  6425  001E32  259F               	addwf	_eusart2TxHead& (0+255),w,b	;volatile
  6426  001E34  6ED9               	movwf	fsr2l,c
  6427  001E36  6ADA               	clrf	fsr2h,c
  6428  001E38  0E00               	movlw	high _eusart2TxBuffer
  6429  001E3A  22DA               	addwfc	fsr2h,f,c
  6430  001E3C  C005  FFDF         	movff	EUSART2_Write@txData,indf2
  6431  001E40                     
  6432                           ; BSR set to: 0
  6433  001E40  2B9F               	incf	_eusart2TxHead& (0+255),f,b	;volatile
  6434  001E42                     
  6435                           ; BSR set to: 0
  6436                           ;mcc_generated_files/eusart2.c: 187:         if(sizeof(eusart2TxBuffer) <= eusart2TxHead
      +                          )
  6437  001E42  0E07               	movlw	7
  6438  001E44  659F               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
  6439  001E46  EF27  F00F         	goto	u1841
  6440  001E4A  EF29  F00F         	goto	u1840
  6441  001E4E                     u1841:
  6442  001E4E  EF2B  F00F         	goto	l2840
  6443  001E52                     u1840:
  6444  001E52                     
  6445                           ; BSR set to: 0
  6446                           ;mcc_generated_files/eusart2.c: 188:         {;mcc_generated_files/eusart2.c: 189:      
      +                                 eusart2TxHead = 0;
  6447  001E52  0E00               	movlw	0
  6448  001E54  6F9F               	movwf	_eusart2TxHead& (0+255),b	;volatile
  6449  001E56                     l2840:
  6450                           
  6451                           ; BSR set to: 0
  6452                           ;mcc_generated_files/eusart2.c: 191:         eusart2TxBufferRemaining--;
  6453  001E56  07E1               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
  6454  001E58                     l2842:
  6455                           
  6456                           ;mcc_generated_files/eusart2.c: 193:     PIE3bits.TX2IE = 1;
  6457  001E58  010E               	movlb	14	; () banked
  6458  001E5A  8DC5               	bsf	197,6,b	;volatile
  6459  001E5C                     
  6460                           ; BSR set to: 14
  6461  001E5C  0012               	return		;funcret
  6462  001E5E                     __end_of_EUSART2_Write:
  6463                           	opt callstack 0
  6464                           
  6465 ;; *************** function _abs *****************
  6466 ;; Defined at:
  6467 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  6468 ;; Parameters:    Size  Location     Type
  6469 ;;  a               2   22[COMRAM] int 
  6470 ;; Auto vars:     Size  Location     Type
  6471 ;;		None
  6472 ;; Return value:  Size  Location     Type
  6473 ;;                  2   22[COMRAM] int 
  6474 ;; Registers used:
  6475 ;;		wreg, status,2, status,0
  6476 ;; Tracked objects:
  6477 ;;		On entry : 0/0
  6478 ;;		On exit  : 0/0
  6479 ;;		Unchanged: 0/0
  6480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6481 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6483 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6484 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6485 ;;Total ram usage:        4 bytes
  6486 ;; Hardware stack levels used:    1
  6487 ;; Hardware stack levels required when called:    4
  6488 ;; This function calls:
  6489 ;;		Nothing
  6490 ;; This function is called by:
  6491 ;;		_dtoa
  6492 ;; This function uses a non-reentrant model
  6493 ;;
  6494                           
  6495                           	psect	text40
  6496  0020C8                     __ptext40:
  6497                           	opt callstack 0
  6498  0020C8                     _abs:
  6499                           	opt callstack 21
  6500  0020C8  BE18               	btfsc	(abs@a+1)^0,7,c
  6501  0020CA  EF71  F010         	goto	u1980
  6502  0020CE  5018               	movf	(abs@a+1)^0,w,c
  6503  0020D0  E106               	bnz	u1981
  6504  0020D2  0417               	decf	abs@a^0,w,c
  6505  0020D4  B0D8               	btfsc	status,0,c
  6506  0020D6  EF6F  F010         	goto	u1981
  6507  0020DA  EF71  F010         	goto	u1980
  6508  0020DE                     u1981:
  6509  0020DE  EF7F  F010         	goto	l1480
  6510  0020E2                     u1980:
  6511  0020E2  C017  F019         	movff	abs@a,??_abs
  6512  0020E6  C018  F01A         	movff	abs@a+1,??_abs+1
  6513  0020EA  1E19               	comf	??_abs^0,f,c
  6514  0020EC  1E1A               	comf	(??_abs+1)^0,f,c
  6515  0020EE  4A19               	infsnz	??_abs^0,f,c
  6516  0020F0  2A1A               	incf	(??_abs+1)^0,f,c
  6517  0020F2  C019  F017         	movff	??_abs,?_abs
  6518  0020F6  C01A  F018         	movff	??_abs+1,?_abs+1
  6519  0020FA  EF83  F010         	goto	l1483
  6520  0020FE                     l1480:
  6521  0020FE  C017  F017         	movff	abs@a,?_abs
  6522  002102  C018  F018         	movff	abs@a+1,?_abs+1
  6523  002106                     l1483:
  6524  002106  0012               	return		;funcret
  6525  002108                     __end_of_abs:
  6526                           	opt callstack 0
  6527                           
  6528 ;; *************** function ___aomod *****************
  6529 ;; Defined at:
  6530 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  6531 ;; Parameters:    Size  Location     Type
  6532 ;;  dividend        8    4[COMRAM] long long 
  6533 ;;  divisor         8   12[COMRAM] long long 
  6534 ;; Auto vars:     Size  Location     Type
  6535 ;;  sign            1   21[COMRAM] unsigned char 
  6536 ;;  counter         1   20[COMRAM] unsigned char 
  6537 ;; Return value:  Size  Location     Type
  6538 ;;                  8    4[COMRAM] long long 
  6539 ;; Registers used:
  6540 ;;		wreg, status,2, status,0
  6541 ;; Tracked objects:
  6542 ;;		On entry : 0/0
  6543 ;;		On exit  : 0/0
  6544 ;;		Unchanged: 0/0
  6545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6546 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6547 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6549 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6550 ;;Total ram usage:       18 bytes
  6551 ;; Hardware stack levels used:    1
  6552 ;; Hardware stack levels required when called:    4
  6553 ;; This function calls:
  6554 ;;		Nothing
  6555 ;; This function is called by:
  6556 ;;		_dtoa
  6557 ;; This function uses a non-reentrant model
  6558 ;;
  6559                           
  6560                           	psect	text41
  6561  001328                     __ptext41:
  6562                           	opt callstack 0
  6563  001328                     ___aomod:
  6564                           	opt callstack 21
  6565  001328  0E00               	movlw	0
  6566  00132A  6E16               	movwf	___aomod@sign^0,c
  6567  00132C  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
  6568  00132E  EF9D  F009         	goto	u2150
  6569  001332  EF9B  F009         	goto	u2151
  6570  001336                     u2151:
  6571  001336  EFAF  F009         	goto	l2988
  6572  00133A                     u2150:
  6573  00133A  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  6574  00133C  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  6575  00133E  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  6576  001340  1E09               	comf	(___aomod@dividend+4)^0,f,c
  6577  001342  1E08               	comf	(___aomod@dividend+3)^0,f,c
  6578  001344  1E07               	comf	(___aomod@dividend+2)^0,f,c
  6579  001346  1E06               	comf	(___aomod@dividend+1)^0,f,c
  6580  001348  6C05               	negf	___aomod@dividend^0,c
  6581  00134A  0E00               	movlw	0
  6582  00134C  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  6583  00134E  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  6584  001350  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  6585  001352  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  6586  001354  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  6587  001356  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  6588  001358  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  6589  00135A  0E01               	movlw	1
  6590  00135C  6E16               	movwf	___aomod@sign^0,c
  6591  00135E                     l2988:
  6592  00135E  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
  6593  001360  EFB6  F009         	goto	u2160
  6594  001364  EFB4  F009         	goto	u2161
  6595  001368                     u2161:
  6596  001368  EFC6  F009         	goto	l2992
  6597  00136C                     u2160:
  6598  00136C  1E14               	comf	(___aomod@divisor+7)^0,f,c
  6599  00136E  1E13               	comf	(___aomod@divisor+6)^0,f,c
  6600  001370  1E12               	comf	(___aomod@divisor+5)^0,f,c
  6601  001372  1E11               	comf	(___aomod@divisor+4)^0,f,c
  6602  001374  1E10               	comf	(___aomod@divisor+3)^0,f,c
  6603  001376  1E0F               	comf	(___aomod@divisor+2)^0,f,c
  6604  001378  1E0E               	comf	(___aomod@divisor+1)^0,f,c
  6605  00137A  6C0D               	negf	___aomod@divisor^0,c
  6606  00137C  0E00               	movlw	0
  6607  00137E  220E               	addwfc	(___aomod@divisor+1)^0,f,c
  6608  001380  220F               	addwfc	(___aomod@divisor+2)^0,f,c
  6609  001382  2210               	addwfc	(___aomod@divisor+3)^0,f,c
  6610  001384  2211               	addwfc	(___aomod@divisor+4)^0,f,c
  6611  001386  2212               	addwfc	(___aomod@divisor+5)^0,f,c
  6612  001388  2213               	addwfc	(___aomod@divisor+6)^0,f,c
  6613  00138A  2214               	addwfc	(___aomod@divisor+7)^0,f,c
  6614  00138C                     l2992:
  6615  00138C  500D               	movf	___aomod@divisor^0,w,c
  6616  00138E  100E               	iorwf	(___aomod@divisor+1)^0,w,c
  6617  001390  100F               	iorwf	(___aomod@divisor+2)^0,w,c
  6618  001392  1010               	iorwf	(___aomod@divisor+3)^0,w,c
  6619  001394  1011               	iorwf	(___aomod@divisor+4)^0,w,c
  6620  001396  1012               	iorwf	(___aomod@divisor+5)^0,w,c
  6621  001398  1013               	iorwf	(___aomod@divisor+6)^0,w,c
  6622  00139A  1014               	iorwf	(___aomod@divisor+7)^0,w,c
  6623  00139C  B4D8               	btfsc	status,2,c
  6624  00139E  EFD3  F009         	goto	u2171
  6625  0013A2  EFD5  F009         	goto	u2170
  6626  0013A6                     u2171:
  6627  0013A6  EF1D  F00A         	goto	l3008
  6628  0013AA                     u2170:
  6629  0013AA  0E01               	movlw	1
  6630  0013AC  6E15               	movwf	___aomod@counter^0,c
  6631  0013AE  EFE3  F009         	goto	l2998
  6632  0013B2                     l2996:
  6633  0013B2  90D8               	bcf	status,0,c
  6634  0013B4  360D               	rlcf	___aomod@divisor^0,f,c
  6635  0013B6  360E               	rlcf	(___aomod@divisor+1)^0,f,c
  6636  0013B8  360F               	rlcf	(___aomod@divisor+2)^0,f,c
  6637  0013BA  3610               	rlcf	(___aomod@divisor+3)^0,f,c
  6638  0013BC  3611               	rlcf	(___aomod@divisor+4)^0,f,c
  6639  0013BE  3612               	rlcf	(___aomod@divisor+5)^0,f,c
  6640  0013C0  3613               	rlcf	(___aomod@divisor+6)^0,f,c
  6641  0013C2  3614               	rlcf	(___aomod@divisor+7)^0,f,c
  6642  0013C4  2A15               	incf	___aomod@counter^0,f,c
  6643  0013C6                     l2998:
  6644  0013C6  AE14               	btfss	(___aomod@divisor+7)^0,7,c
  6645  0013C8  EFE8  F009         	goto	u2181
  6646  0013CC  EFEA  F009         	goto	u2180
  6647  0013D0                     u2181:
  6648  0013D0  EFD9  F009         	goto	l2996
  6649  0013D4                     u2180:
  6650  0013D4                     l3000:
  6651  0013D4  500D               	movf	___aomod@divisor^0,w,c
  6652  0013D6  5C05               	subwf	___aomod@dividend^0,w,c
  6653  0013D8  500E               	movf	(___aomod@divisor+1)^0,w,c
  6654  0013DA  5806               	subwfb	(___aomod@dividend+1)^0,w,c
  6655  0013DC  500F               	movf	(___aomod@divisor+2)^0,w,c
  6656  0013DE  5807               	subwfb	(___aomod@dividend+2)^0,w,c
  6657  0013E0  5010               	movf	(___aomod@divisor+3)^0,w,c
  6658  0013E2  5808               	subwfb	(___aomod@dividend+3)^0,w,c
  6659  0013E4  5011               	movf	(___aomod@divisor+4)^0,w,c
  6660  0013E6  5809               	subwfb	(___aomod@dividend+4)^0,w,c
  6661  0013E8  5012               	movf	(___aomod@divisor+5)^0,w,c
  6662  0013EA  580A               	subwfb	(___aomod@dividend+5)^0,w,c
  6663  0013EC  5013               	movf	(___aomod@divisor+6)^0,w,c
  6664  0013EE  580B               	subwfb	(___aomod@dividend+6)^0,w,c
  6665  0013F0  5014               	movf	(___aomod@divisor+7)^0,w,c
  6666  0013F2  580C               	subwfb	(___aomod@dividend+7)^0,w,c
  6667  0013F4  A0D8               	btfss	status,0,c
  6668  0013F6  EFFF  F009         	goto	u2191
  6669  0013FA  EF01  F00A         	goto	u2190
  6670  0013FE                     u2191:
  6671  0013FE  EF11  F00A         	goto	l3004
  6672  001402                     u2190:
  6673  001402  500D               	movf	___aomod@divisor^0,w,c
  6674  001404  5E05               	subwf	___aomod@dividend^0,f,c
  6675  001406  500E               	movf	(___aomod@divisor+1)^0,w,c
  6676  001408  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
  6677  00140A  500F               	movf	(___aomod@divisor+2)^0,w,c
  6678  00140C  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
  6679  00140E  5010               	movf	(___aomod@divisor+3)^0,w,c
  6680  001410  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
  6681  001412  5011               	movf	(___aomod@divisor+4)^0,w,c
  6682  001414  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
  6683  001416  5012               	movf	(___aomod@divisor+5)^0,w,c
  6684  001418  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
  6685  00141A  5013               	movf	(___aomod@divisor+6)^0,w,c
  6686  00141C  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
  6687  00141E  5014               	movf	(___aomod@divisor+7)^0,w,c
  6688  001420  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
  6689  001422                     l3004:
  6690  001422  90D8               	bcf	status,0,c
  6691  001424  3214               	rrcf	(___aomod@divisor+7)^0,f,c
  6692  001426  3213               	rrcf	(___aomod@divisor+6)^0,f,c
  6693  001428  3212               	rrcf	(___aomod@divisor+5)^0,f,c
  6694  00142A  3211               	rrcf	(___aomod@divisor+4)^0,f,c
  6695  00142C  3210               	rrcf	(___aomod@divisor+3)^0,f,c
  6696  00142E  320F               	rrcf	(___aomod@divisor+2)^0,f,c
  6697  001430  320E               	rrcf	(___aomod@divisor+1)^0,f,c
  6698  001432  320D               	rrcf	___aomod@divisor^0,f,c
  6699  001434  2E15               	decfsz	___aomod@counter^0,f,c
  6700  001436  EFEA  F009         	goto	l3000
  6701  00143A                     l3008:
  6702  00143A  5016               	movf	___aomod@sign^0,w,c
  6703  00143C  B4D8               	btfsc	status,2,c
  6704  00143E  EF23  F00A         	goto	u2201
  6705  001442  EF25  F00A         	goto	u2200
  6706  001446                     u2201:
  6707  001446  EF35  F00A         	goto	l3012
  6708  00144A                     u2200:
  6709  00144A  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  6710  00144C  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  6711  00144E  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  6712  001450  1E09               	comf	(___aomod@dividend+4)^0,f,c
  6713  001452  1E08               	comf	(___aomod@dividend+3)^0,f,c
  6714  001454  1E07               	comf	(___aomod@dividend+2)^0,f,c
  6715  001456  1E06               	comf	(___aomod@dividend+1)^0,f,c
  6716  001458  6C05               	negf	___aomod@dividend^0,c
  6717  00145A  0E00               	movlw	0
  6718  00145C  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  6719  00145E  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  6720  001460  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  6721  001462  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  6722  001464  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  6723  001466  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  6724  001468  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  6725  00146A                     l3012:
  6726  00146A  C005  F005         	movff	___aomod@dividend,?___aomod
  6727  00146E  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  6728  001472  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  6729  001476  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  6730  00147A  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  6731  00147E  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  6732  001482  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  6733  001486  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  6734  00148A  0012               	return		;funcret
  6735  00148C                     __end_of___aomod:
  6736                           	opt callstack 0
  6737                           
  6738 ;; *************** function ___aodiv *****************
  6739 ;; Defined at:
  6740 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  6741 ;; Parameters:    Size  Location     Type
  6742 ;;  dividend        8    4[COMRAM] long long 
  6743 ;;  divisor         8   12[COMRAM] long long 
  6744 ;; Auto vars:     Size  Location     Type
  6745 ;;  quotient        8   22[COMRAM] long long 
  6746 ;;  sign            1   21[COMRAM] unsigned char 
  6747 ;;  counter         1   20[COMRAM] unsigned char 
  6748 ;; Return value:  Size  Location     Type
  6749 ;;                  8    4[COMRAM] long long 
  6750 ;; Registers used:
  6751 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6752 ;; Tracked objects:
  6753 ;;		On entry : 0/0
  6754 ;;		On exit  : 0/0
  6755 ;;		Unchanged: 0/0
  6756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6757 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6758 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6760 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6761 ;;Total ram usage:       26 bytes
  6762 ;; Hardware stack levels used:    1
  6763 ;; Hardware stack levels required when called:    4
  6764 ;; This function calls:
  6765 ;;		Nothing
  6766 ;; This function is called by:
  6767 ;;		_dtoa
  6768 ;; This function uses a non-reentrant model
  6769 ;;
  6770                           
  6771                           	psect	text42
  6772  0011A0                     __ptext42:
  6773                           	opt callstack 0
  6774  0011A0                     ___aodiv:
  6775                           	opt callstack 21
  6776  0011A0  0E00               	movlw	0
  6777  0011A2  6E16               	movwf	___aodiv@sign^0,c
  6778  0011A4  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
  6779  0011A6  EFD9  F008         	goto	u2080
  6780  0011AA  EFD7  F008         	goto	u2081
  6781  0011AE                     u2081:
  6782  0011AE  EFEB  F008         	goto	l2944
  6783  0011B2                     u2080:
  6784  0011B2  1E14               	comf	(___aodiv@divisor+7)^0,f,c
  6785  0011B4  1E13               	comf	(___aodiv@divisor+6)^0,f,c
  6786  0011B6  1E12               	comf	(___aodiv@divisor+5)^0,f,c
  6787  0011B8  1E11               	comf	(___aodiv@divisor+4)^0,f,c
  6788  0011BA  1E10               	comf	(___aodiv@divisor+3)^0,f,c
  6789  0011BC  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
  6790  0011BE  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
  6791  0011C0  6C0D               	negf	___aodiv@divisor^0,c
  6792  0011C2  0E00               	movlw	0
  6793  0011C4  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
  6794  0011C6  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
  6795  0011C8  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
  6796  0011CA  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
  6797  0011CC  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
  6798  0011CE  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
  6799  0011D0  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
  6800  0011D2  0E01               	movlw	1
  6801  0011D4  6E16               	movwf	___aodiv@sign^0,c
  6802  0011D6                     l2944:
  6803  0011D6  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
  6804  0011D8  EFF2  F008         	goto	u2090
  6805  0011DC  EFF0  F008         	goto	u2091
  6806  0011E0                     u2091:
  6807  0011E0  EF04  F009         	goto	l2950
  6808  0011E4                     u2090:
  6809  0011E4  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
  6810  0011E6  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
  6811  0011E8  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
  6812  0011EA  1E09               	comf	(___aodiv@dividend+4)^0,f,c
  6813  0011EC  1E08               	comf	(___aodiv@dividend+3)^0,f,c
  6814  0011EE  1E07               	comf	(___aodiv@dividend+2)^0,f,c
  6815  0011F0  1E06               	comf	(___aodiv@dividend+1)^0,f,c
  6816  0011F2  6C05               	negf	___aodiv@dividend^0,c
  6817  0011F4  0E00               	movlw	0
  6818  0011F6  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
  6819  0011F8  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
  6820  0011FA  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
  6821  0011FC  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
  6822  0011FE  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
  6823  001200  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
  6824  001202  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
  6825  001204  0E01               	movlw	1
  6826  001206  1A16               	xorwf	___aodiv@sign^0,f,c
  6827  001208                     l2950:
  6828  001208  EE20  F017         	lfsr	2,___aodiv@quotient
  6829  00120C  0E07               	movlw	7
  6830  00120E                     u2101:
  6831  00120E  6ADE               	clrf	postinc2,c
  6832  001210  06E8               	decf	wreg,f,c
  6833  001212  E2FD               	bc	u2101
  6834  001214  500D               	movf	___aodiv@divisor^0,w,c
  6835  001216  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
  6836  001218  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
  6837  00121A  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
  6838  00121C  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
  6839  00121E  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
  6840  001220  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
  6841  001222  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
  6842  001224  B4D8               	btfsc	status,2,c
  6843  001226  EF17  F009         	goto	u2111
  6844  00122A  EF19  F009         	goto	u2110
  6845  00122E                     u2111:
  6846  00122E  EF6B  F009         	goto	l2972
  6847  001232                     u2110:
  6848  001232  0E01               	movlw	1
  6849  001234  6E15               	movwf	___aodiv@counter^0,c
  6850  001236  EF27  F009         	goto	l2958
  6851  00123A                     l2956:
  6852  00123A  90D8               	bcf	status,0,c
  6853  00123C  360D               	rlcf	___aodiv@divisor^0,f,c
  6854  00123E  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
  6855  001240  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
  6856  001242  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
  6857  001244  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
  6858  001246  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
  6859  001248  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
  6860  00124A  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
  6861  00124C  2A15               	incf	___aodiv@counter^0,f,c
  6862  00124E                     l2958:
  6863  00124E  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
  6864  001250  EF2C  F009         	goto	u2121
  6865  001254  EF2E  F009         	goto	u2120
  6866  001258                     u2121:
  6867  001258  EF1D  F009         	goto	l2956
  6868  00125C                     u2120:
  6869  00125C                     l2960:
  6870  00125C  90D8               	bcf	status,0,c
  6871  00125E  3617               	rlcf	___aodiv@quotient^0,f,c
  6872  001260  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
  6873  001262  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
  6874  001264  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
  6875  001266  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
  6876  001268  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
  6877  00126A  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
  6878  00126C  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
  6879  00126E  500D               	movf	___aodiv@divisor^0,w,c
  6880  001270  5C05               	subwf	___aodiv@dividend^0,w,c
  6881  001272  500E               	movf	(___aodiv@divisor+1)^0,w,c
  6882  001274  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
  6883  001276  500F               	movf	(___aodiv@divisor+2)^0,w,c
  6884  001278  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
  6885  00127A  5010               	movf	(___aodiv@divisor+3)^0,w,c
  6886  00127C  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
  6887  00127E  5011               	movf	(___aodiv@divisor+4)^0,w,c
  6888  001280  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
  6889  001282  5012               	movf	(___aodiv@divisor+5)^0,w,c
  6890  001284  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
  6891  001286  5013               	movf	(___aodiv@divisor+6)^0,w,c
  6892  001288  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
  6893  00128A  5014               	movf	(___aodiv@divisor+7)^0,w,c
  6894  00128C  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
  6895  00128E  A0D8               	btfss	status,0,c
  6896  001290  EF4C  F009         	goto	u2131
  6897  001294  EF4E  F009         	goto	u2130
  6898  001298                     u2131:
  6899  001298  EF5F  F009         	goto	l2968
  6900  00129C                     u2130:
  6901  00129C  500D               	movf	___aodiv@divisor^0,w,c
  6902  00129E  5E05               	subwf	___aodiv@dividend^0,f,c
  6903  0012A0  500E               	movf	(___aodiv@divisor+1)^0,w,c
  6904  0012A2  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
  6905  0012A4  500F               	movf	(___aodiv@divisor+2)^0,w,c
  6906  0012A6  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
  6907  0012A8  5010               	movf	(___aodiv@divisor+3)^0,w,c
  6908  0012AA  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
  6909  0012AC  5011               	movf	(___aodiv@divisor+4)^0,w,c
  6910  0012AE  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
  6911  0012B0  5012               	movf	(___aodiv@divisor+5)^0,w,c
  6912  0012B2  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
  6913  0012B4  5013               	movf	(___aodiv@divisor+6)^0,w,c
  6914  0012B6  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
  6915  0012B8  5014               	movf	(___aodiv@divisor+7)^0,w,c
  6916  0012BA  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
  6917  0012BC  8017               	bsf	___aodiv@quotient^0,0,c
  6918  0012BE                     l2968:
  6919  0012BE  90D8               	bcf	status,0,c
  6920  0012C0  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
  6921  0012C2  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
  6922  0012C4  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
  6923  0012C6  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
  6924  0012C8  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
  6925  0012CA  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
  6926  0012CC  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
  6927  0012CE  320D               	rrcf	___aodiv@divisor^0,f,c
  6928  0012D0  2E15               	decfsz	___aodiv@counter^0,f,c
  6929  0012D2  EF2E  F009         	goto	l2960
  6930  0012D6                     l2972:
  6931  0012D6  5016               	movf	___aodiv@sign^0,w,c
  6932  0012D8  B4D8               	btfsc	status,2,c
  6933  0012DA  EF71  F009         	goto	u2141
  6934  0012DE  EF73  F009         	goto	u2140
  6935  0012E2                     u2141:
  6936  0012E2  EF83  F009         	goto	l2976
  6937  0012E6                     u2140:
  6938  0012E6  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
  6939  0012E8  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
  6940  0012EA  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
  6941  0012EC  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
  6942  0012EE  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
  6943  0012F0  1E19               	comf	(___aodiv@quotient+2)^0,f,c
  6944  0012F2  1E18               	comf	(___aodiv@quotient+1)^0,f,c
  6945  0012F4  6C17               	negf	___aodiv@quotient^0,c
  6946  0012F6  0E00               	movlw	0
  6947  0012F8  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
  6948  0012FA  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
  6949  0012FC  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
  6950  0012FE  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
  6951  001300  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
  6952  001302  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
  6953  001304  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
  6954  001306                     l2976:
  6955  001306  C017  F005         	movff	___aodiv@quotient,?___aodiv
  6956  00130A  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  6957  00130E  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  6958  001312  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  6959  001316  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  6960  00131A  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  6961  00131E  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  6962  001322  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  6963  001326  0012               	return		;funcret
  6964  001328                     __end_of___aodiv:
  6965                           	opt callstack 0
  6966                           
  6967 ;; *************** function _atoi *****************
  6968 ;; Defined at:
  6969 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  6970 ;; Parameters:    Size  Location     Type
  6971 ;;  s               2   11[COMRAM] PTR const unsigned char 
  6972 ;;		 -> STR_11(31), STR_10(34), STR_9(35), STR_8(55), 
  6973 ;;		 -> STR_7(53), STR_6(29), STR_3(43), STR_2(25), 
  6974 ;;		 -> STR_1(57), 
  6975 ;; Auto vars:     Size  Location     Type
  6976 ;;  n               2   24[COMRAM] int 
  6977 ;;  neg             2   17[COMRAM] int 
  6978 ;; Return value:  Size  Location     Type
  6979 ;;                  2   11[COMRAM] int 
  6980 ;; Registers used:
  6981 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6982 ;; Tracked objects:
  6983 ;;		On entry : 0/0
  6984 ;;		On exit  : 0/0
  6985 ;;		Unchanged: 0/0
  6986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6987 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6988 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6989 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6990 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6991 ;;Total ram usage:       15 bytes
  6992 ;; Hardware stack levels used:    1
  6993 ;; Hardware stack levels required when called:    5
  6994 ;; This function calls:
  6995 ;;		___wmul
  6996 ;;		_isdigit
  6997 ;;		_isspace
  6998 ;; This function is called by:
  6999 ;;		_vfpfcnvrt
  7000 ;; This function uses a non-reentrant model
  7001 ;;
  7002                           
  7003                           	psect	text43
  7004  001006                     __ptext43:
  7005                           	opt callstack 0
  7006  001006                     _atoi:
  7007                           	opt callstack 21
  7008  001006  0E00               	movlw	0
  7009  001008  6E1A               	movwf	(atoi@n+1)^0,c
  7010  00100A  0E00               	movlw	0
  7011  00100C  6E19               	movwf	atoi@n^0,c
  7012  00100E  0E00               	movlw	0
  7013  001010  6E13               	movwf	(atoi@neg+1)^0,c
  7014  001012  0E00               	movlw	0
  7015  001014  6E12               	movwf	atoi@neg^0,c
  7016  001016  EF0F  F008         	goto	l3276
  7017  00101A                     l3274:
  7018  00101A  4A0C               	infsnz	atoi@s^0,f,c
  7019  00101C  2A0D               	incf	(atoi@s+1)^0,f,c
  7020  00101E                     l3276:
  7021  00101E  0E01               	movlw	1
  7022  001020  6E18               	movwf	_atoi$1726^0,c
  7023  001022  C00C  FFF6         	movff	atoi@s,tblptrl
  7024  001026  C00D  FFF7         	movff	atoi@s+1,tblptrh
  7025  00102A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7026  00102A  6AF8               	clrf	tblptru,c
  7027  00102C                     	endif
  7028  00102C                     	if	0	;tblptru may be non-zero
  7029  00102C                     	endif
  7030  00102C  0008               	tblrd		*
  7031  00102E  50F5               	movf	tablat,w,c
  7032  001030  0A20               	xorlw	32
  7033  001032  B4D8               	btfsc	status,2,c
  7034  001034  EF1E  F008         	goto	u2791
  7035  001038  EF20  F008         	goto	u2790
  7036  00103C                     u2791:
  7037  00103C  EF3E  F008         	goto	l3284
  7038  001040                     u2790:
  7039  001040  0EF7               	movlw	247
  7040  001042  6E0E               	movwf	??_atoi^0,c
  7041  001044  0EFF               	movlw	255
  7042  001046  6E0F               	movwf	(??_atoi+1)^0,c
  7043  001048  C00C  FFF6         	movff	atoi@s,tblptrl
  7044  00104C  C00D  FFF7         	movff	atoi@s+1,tblptrh
  7045  001050                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7046  001050  6AF8               	clrf	tblptru,c
  7047  001052                     	endif
  7048  001052                     	if	0	;tblptru may be non-zero
  7049  001052                     	endif
  7050  001052  0008               	tblrd		*
  7051  001054  50F5               	movf	tablat,w,c
  7052  001056  6E10               	movwf	(??_atoi+2)^0,c
  7053  001058  6A11               	clrf	(??_atoi+3)^0,c
  7054  00105A  500E               	movf	??_atoi^0,w,c
  7055  00105C  2610               	addwf	(??_atoi+2)^0,f,c
  7056  00105E  500F               	movf	(??_atoi+1)^0,w,c
  7057  001060  2211               	addwfc	(??_atoi+3)^0,f,c
  7058  001062  5011               	movf	(??_atoi+3)^0,w,c
  7059  001064  E109               	bnz	u2800
  7060  001066  0E05               	movlw	5
  7061  001068  5C10               	subwf	(??_atoi+2)^0,w,c
  7062  00106A  A0D8               	btfss	status,0,c
  7063  00106C  EF3A  F008         	goto	u2801
  7064  001070  EF3C  F008         	goto	u2800
  7065  001074                     u2801:
  7066  001074  EF3E  F008         	goto	l3284
  7067  001078                     u2800:
  7068  001078  0E00               	movlw	0
  7069  00107A  6E18               	movwf	_atoi$1726^0,c
  7070  00107C                     l3284:
  7071  00107C  C018  F014         	movff	_atoi$1726,_atoi$1725
  7072  001080  6A15               	clrf	(_atoi$1725+1)^0,c
  7073  001082  5014               	movf	_atoi$1725^0,w,c
  7074  001084  1015               	iorwf	(_atoi$1725+1)^0,w,c
  7075  001086  A4D8               	btfss	status,2,c
  7076  001088  EF48  F008         	goto	u2811
  7077  00108C  EF4A  F008         	goto	u2810
  7078  001090                     u2811:
  7079  001090  EF0D  F008         	goto	l3274
  7080  001094                     u2810:
  7081  001094  EF54  F008         	goto	l3294
  7082  001098                     l3290:
  7083  001098  0E00               	movlw	0
  7084  00109A  6E13               	movwf	(atoi@neg+1)^0,c
  7085  00109C  0E01               	movlw	1
  7086  00109E  6E12               	movwf	atoi@neg^0,c
  7087  0010A0                     l3292:
  7088  0010A0  4A0C               	infsnz	atoi@s^0,f,c
  7089  0010A2  2A0D               	incf	(atoi@s+1)^0,f,c
  7090  0010A4  EF8B  F008         	goto	l3300
  7091  0010A8                     l3294:
  7092  0010A8  C00C  FFF6         	movff	atoi@s,tblptrl
  7093  0010AC  C00D  FFF7         	movff	atoi@s+1,tblptrh
  7094  0010B0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7095  0010B0  6AF8               	clrf	tblptru,c
  7096  0010B2                     	endif
  7097  0010B2                     	if	0	;tblptru may be non-zero
  7098  0010B2                     	endif
  7099  0010B2  0008               	tblrd		*
  7100  0010B4  50F5               	movf	tablat,w,c
  7101  0010B6  6E0E               	movwf	??_atoi^0,c
  7102  0010B8  6A0F               	clrf	(??_atoi+1)^0,c
  7103                           
  7104                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7105                           ; Switch size 1, requested type "simple"
  7106                           ; Number of cases is 1, Range of values is 0 to 0
  7107                           ; switch strategies available:
  7108                           ; Name         Instructions Cycles
  7109                           ; simple_byte            4     3 (average)
  7110                           ;	Chosen strategy is simple_byte
  7111  0010BA  500F               	movf	(??_atoi+1)^0,w,c
  7112  0010BC  0A00               	xorlw	0	; case 0
  7113  0010BE  B4D8               	btfsc	status,2,c
  7114  0010C0  EF64  F008         	goto	l4090
  7115  0010C4  EF8B  F008         	goto	l3300
  7116  0010C8                     l4090:
  7117                           
  7118                           ; Switch size 1, requested type "simple"
  7119                           ; Number of cases is 2, Range of values is 43 to 45
  7120                           ; switch strategies available:
  7121                           ; Name         Instructions Cycles
  7122                           ; simple_byte            7     4 (average)
  7123                           ;	Chosen strategy is simple_byte
  7124  0010C8  500E               	movf	??_atoi^0,w,c
  7125  0010CA  0A2B               	xorlw	43	; case 43
  7126  0010CC  B4D8               	btfsc	status,2,c
  7127  0010CE  EF50  F008         	goto	l3292
  7128  0010D2  0A06               	xorlw	6	; case 45
  7129  0010D4  B4D8               	btfsc	status,2,c
  7130  0010D6  EF4C  F008         	goto	l3290
  7131  0010DA  EF8B  F008         	goto	l3300
  7132  0010DE                     l3296:
  7133  0010DE  C019  F005         	movff	atoi@n,___wmul@multiplier
  7134  0010E2  C01A  F006         	movff	atoi@n+1,___wmul@multiplier+1
  7135  0010E6  0E00               	movlw	0
  7136  0010E8  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  7137  0010EA  0E0A               	movlw	10
  7138  0010EC  6E07               	movwf	___wmul@multiplicand^0,c
  7139  0010EE  EC36  F011         	call	___wmul	;wreg free
  7140  0010F2  C00C  FFF6         	movff	atoi@s,tblptrl
  7141  0010F6  C00D  FFF7         	movff	atoi@s+1,tblptrh
  7142  0010FA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7143  0010FA  6AF8               	clrf	tblptru,c
  7144  0010FC                     	endif
  7145  0010FC                     	if	0	;tblptru may be non-zero
  7146  0010FC                     	endif
  7147  0010FC  0008               	tblrd		*
  7148  0010FE  50F5               	movf	tablat,w,c
  7149  001100  5E05               	subwf	?___wmul^0,f,c
  7150  001102  0E00               	movlw	0
  7151  001104  5A06               	subwfb	(?___wmul+1)^0,f,c
  7152  001106  0E30               	movlw	48
  7153  001108  2405               	addwf	?___wmul^0,w,c
  7154  00110A  6E19               	movwf	atoi@n^0,c
  7155  00110C  0E00               	movlw	0
  7156  00110E  2006               	addwfc	(?___wmul+1)^0,w,c
  7157  001110  6E1A               	movwf	(atoi@n+1)^0,c
  7158  001112  EF50  F008         	goto	l3292
  7159  001116                     l3300:
  7160  001116  0ED0               	movlw	208
  7161  001118  6E0E               	movwf	??_atoi^0,c
  7162  00111A  0EFF               	movlw	255
  7163  00111C  6E0F               	movwf	(??_atoi+1)^0,c
  7164  00111E  C00C  FFF6         	movff	atoi@s,tblptrl
  7165  001122  C00D  FFF7         	movff	atoi@s+1,tblptrh
  7166  001126                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7167  001126  6AF8               	clrf	tblptru,c
  7168  001128                     	endif
  7169  001128                     	if	0	;tblptru may be non-zero
  7170  001128                     	endif
  7171  001128  0008               	tblrd		*
  7172  00112A  50F5               	movf	tablat,w,c
  7173  00112C  6E10               	movwf	(??_atoi+2)^0,c
  7174  00112E  6A11               	clrf	(??_atoi+3)^0,c
  7175  001130  500E               	movf	??_atoi^0,w,c
  7176  001132  2610               	addwf	(??_atoi+2)^0,f,c
  7177  001134  500F               	movf	(??_atoi+1)^0,w,c
  7178  001136  2211               	addwfc	(??_atoi+3)^0,f,c
  7179  001138  5011               	movf	(??_atoi+3)^0,w,c
  7180  00113A  E10A               	bnz	u2820
  7181  00113C  0E0A               	movlw	10
  7182  00113E  5C10               	subwf	(??_atoi+2)^0,w,c
  7183  001140  A0D8               	btfss	status,0,c
  7184  001142  EFA5  F008         	goto	u2821
  7185  001146  EFA8  F008         	goto	u2820
  7186  00114A                     u2821:
  7187  00114A  0E01               	movlw	1
  7188  00114C  EFA9  F008         	goto	u2830
  7189  001150                     u2820:
  7190  001150  0E00               	movlw	0
  7191  001152                     u2830:
  7192  001152  6E16               	movwf	_atoi$1727^0,c
  7193  001154  6A17               	clrf	(_atoi$1727+1)^0,c
  7194  001156  5016               	movf	_atoi$1727^0,w,c
  7195  001158  1017               	iorwf	(_atoi$1727+1)^0,w,c
  7196  00115A  A4D8               	btfss	status,2,c
  7197  00115C  EFB2  F008         	goto	u2841
  7198  001160  EFB4  F008         	goto	u2840
  7199  001164                     u2841:
  7200  001164  EF6F  F008         	goto	l3296
  7201  001168                     u2840:
  7202  001168  5012               	movf	atoi@neg^0,w,c
  7203  00116A  1013               	iorwf	(atoi@neg+1)^0,w,c
  7204  00116C  A4D8               	btfss	status,2,c
  7205  00116E  EFBB  F008         	goto	u2851
  7206  001172  EFBD  F008         	goto	u2850
  7207  001176                     u2851:
  7208  001176  EFCB  F008         	goto	l1511
  7209  00117A                     u2850:
  7210  00117A  C019  F00E         	movff	atoi@n,??_atoi
  7211  00117E  C01A  F00F         	movff	atoi@n+1,??_atoi+1
  7212  001182  1E0E               	comf	??_atoi^0,f,c
  7213  001184  1E0F               	comf	(??_atoi+1)^0,f,c
  7214  001186  4A0E               	infsnz	??_atoi^0,f,c
  7215  001188  2A0F               	incf	(??_atoi+1)^0,f,c
  7216  00118A  C00E  F00C         	movff	??_atoi,?_atoi
  7217  00118E  C00F  F00D         	movff	??_atoi+1,?_atoi+1
  7218  001192  EFCF  F008         	goto	l1514
  7219  001196                     l1511:
  7220  001196  C019  F00C         	movff	atoi@n,?_atoi
  7221  00119A  C01A  F00D         	movff	atoi@n+1,?_atoi+1
  7222  00119E                     l1514:
  7223  00119E  0012               	return		;funcret
  7224  0011A0                     __end_of_atoi:
  7225                           	opt callstack 0
  7226                           
  7227 ;; *************** function _isspace *****************
  7228 ;; Defined at:
  7229 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  7230 ;; Parameters:    Size  Location     Type
  7231 ;;  c               2    4[COMRAM] int 
  7232 ;; Auto vars:     Size  Location     Type
  7233 ;;		None
  7234 ;; Return value:  Size  Location     Type
  7235 ;;                  2    4[COMRAM] int 
  7236 ;; Registers used:
  7237 ;;		wreg, status,2, status,0
  7238 ;; Tracked objects:
  7239 ;;		On entry : 0/0
  7240 ;;		On exit  : 0/0
  7241 ;;		Unchanged: 0/0
  7242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7243 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7244 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7245 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7246 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7247 ;;Total ram usage:        7 bytes
  7248 ;; Hardware stack levels used:    1
  7249 ;; Hardware stack levels required when called:    4
  7250 ;; This function calls:
  7251 ;;		Nothing
  7252 ;; This function is called by:
  7253 ;;		_atoi
  7254 ;; This function uses a non-reentrant model
  7255 ;;
  7256                           
  7257                           	psect	text44
  7258  001F0C                     __ptext44:
  7259                           	opt callstack 0
  7260  001F0C                     _isspace:
  7261                           	opt callstack 21
  7262  001F0C  0E01               	movlw	1
  7263  001F0E  6E0B               	movwf	_isspace$1752^0,c
  7264  001F10  0E20               	movlw	32
  7265  001F12  1805               	xorwf	isspace@c^0,w,c
  7266  001F14  1006               	iorwf	(isspace@c+1)^0,w,c
  7267  001F16  B4D8               	btfsc	status,2,c
  7268  001F18  EF90  F00F         	goto	u2281
  7269  001F1C  EF92  F00F         	goto	u2280
  7270  001F20                     u2281:
  7271  001F20  EFAB  F00F         	goto	l3062
  7272  001F24                     u2280:
  7273  001F24  0EF7               	movlw	247
  7274  001F26  6E07               	movwf	??_isspace^0,c
  7275  001F28  0EFF               	movlw	255
  7276  001F2A  6E08               	movwf	(??_isspace+1)^0,c
  7277  001F2C  C005  F009         	movff	isspace@c,??_isspace+2
  7278  001F30  C006  F00A         	movff	isspace@c+1,??_isspace+3
  7279  001F34  5007               	movf	??_isspace^0,w,c
  7280  001F36  2609               	addwf	(??_isspace+2)^0,f,c
  7281  001F38  5008               	movf	(??_isspace+1)^0,w,c
  7282  001F3A  220A               	addwfc	(??_isspace+3)^0,f,c
  7283  001F3C  500A               	movf	(??_isspace+3)^0,w,c
  7284  001F3E  E109               	bnz	u2290
  7285  001F40  0E05               	movlw	5
  7286  001F42  5C09               	subwf	(??_isspace+2)^0,w,c
  7287  001F44  A0D8               	btfss	status,0,c
  7288  001F46  EFA7  F00F         	goto	u2291
  7289  001F4A  EFA9  F00F         	goto	u2290
  7290  001F4E                     u2291:
  7291  001F4E  EFAB  F00F         	goto	l3062
  7292  001F52                     u2290:
  7293  001F52  0E00               	movlw	0
  7294  001F54  6E0B               	movwf	_isspace$1752^0,c
  7295  001F56                     l3062:
  7296  001F56  C00B  F005         	movff	_isspace$1752,?_isspace
  7297  001F5A  6A06               	clrf	(?_isspace+1)^0,c
  7298  001F5C  0012               	return		;funcret
  7299  001F5E                     __end_of_isspace:
  7300                           	opt callstack 0
  7301                           
  7302 ;; *************** function _isdigit *****************
  7303 ;; Defined at:
  7304 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  7305 ;; Parameters:    Size  Location     Type
  7306 ;;  c               2    4[COMRAM] int 
  7307 ;; Auto vars:     Size  Location     Type
  7308 ;;		None
  7309 ;; Return value:  Size  Location     Type
  7310 ;;                  2    4[COMRAM] int 
  7311 ;; Registers used:
  7312 ;;		wreg, status,2, status,0
  7313 ;; Tracked objects:
  7314 ;;		On entry : 0/0
  7315 ;;		On exit  : 0/0
  7316 ;;		Unchanged: 0/0
  7317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7318 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7320 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7321 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7322 ;;Total ram usage:        6 bytes
  7323 ;; Hardware stack levels used:    1
  7324 ;; Hardware stack levels required when called:    4
  7325 ;; This function calls:
  7326 ;;		Nothing
  7327 ;; This function is called by:
  7328 ;;		_vfpfcnvrt
  7329 ;;		_atoi
  7330 ;; This function uses a non-reentrant model
  7331 ;;
  7332                           
  7333                           	psect	text45
  7334  0021B4                     __ptext45:
  7335                           	opt callstack 0
  7336  0021B4                     _isdigit:
  7337                           	opt callstack 22
  7338  0021B4  0ED0               	movlw	208
  7339  0021B6  6E07               	movwf	??_isdigit^0,c
  7340  0021B8  0EFF               	movlw	255
  7341  0021BA  6E08               	movwf	(??_isdigit+1)^0,c
  7342  0021BC  C005  F009         	movff	isdigit@c,??_isdigit+2
  7343  0021C0  C006  F00A         	movff	isdigit@c+1,??_isdigit+3
  7344  0021C4  5007               	movf	??_isdigit^0,w,c
  7345  0021C6  2609               	addwf	(??_isdigit+2)^0,f,c
  7346  0021C8  5008               	movf	(??_isdigit+1)^0,w,c
  7347  0021CA  220A               	addwfc	(??_isdigit+3)^0,f,c
  7348  0021CC  500A               	movf	(??_isdigit+3)^0,w,c
  7349  0021CE  E10A               	bnz	u2060
  7350  0021D0  0E0A               	movlw	10
  7351  0021D2  5C09               	subwf	(??_isdigit+2)^0,w,c
  7352  0021D4  A0D8               	btfss	status,0,c
  7353  0021D6  EFEF  F010         	goto	u2061
  7354  0021DA  EFF2  F010         	goto	u2060
  7355  0021DE                     u2061:
  7356  0021DE  0E01               	movlw	1
  7357  0021E0  EFF3  F010         	goto	u2070
  7358  0021E4                     u2060:
  7359  0021E4  0E00               	movlw	0
  7360  0021E6                     u2070:
  7361  0021E6  6E05               	movwf	?_isdigit^0,c
  7362  0021E8  6A06               	clrf	(?_isdigit+1)^0,c
  7363  0021EA  0012               	return		;funcret
  7364  0021EC                     __end_of_isdigit:
  7365                           	opt callstack 0
  7366                           
  7367 ;; *************** function ___wmul *****************
  7368 ;; Defined at:
  7369 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  7370 ;; Parameters:    Size  Location     Type
  7371 ;;  multiplier      2    4[COMRAM] unsigned int 
  7372 ;;  multiplicand    2    6[COMRAM] unsigned int 
  7373 ;; Auto vars:     Size  Location     Type
  7374 ;;  product         2    8[COMRAM] unsigned int 
  7375 ;; Return value:  Size  Location     Type
  7376 ;;                  2    4[COMRAM] unsigned int 
  7377 ;; Registers used:
  7378 ;;		wreg, status,2, status,0, prodl, prodh
  7379 ;; Tracked objects:
  7380 ;;		On entry : 0/0
  7381 ;;		On exit  : 0/0
  7382 ;;		Unchanged: 0/0
  7383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7384 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7385 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7387 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7388 ;;Total ram usage:        6 bytes
  7389 ;; Hardware stack levels used:    1
  7390 ;; Hardware stack levels required when called:    4
  7391 ;; This function calls:
  7392 ;;		Nothing
  7393 ;; This function is called by:
  7394 ;;		_atoi
  7395 ;; This function uses a non-reentrant model
  7396 ;;
  7397                           
  7398                           	psect	text46
  7399  00226C                     __ptext46:
  7400                           	opt callstack 0
  7401  00226C                     ___wmul:
  7402                           	opt callstack 21
  7403  00226C  5005               	movf	___wmul@multiplier^0,w,c
  7404  00226E  0207               	mulwf	___wmul@multiplicand^0,c
  7405  002270  CFF3 F009          	movff	prodl,___wmul@product
  7406  002274  CFF4 F00A          	movff	prodh,___wmul@product+1
  7407  002278  5005               	movf	___wmul@multiplier^0,w,c
  7408  00227A  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  7409  00227C  50F3               	movf	243,w,c
  7410  00227E  260A               	addwf	(___wmul@product+1)^0,f,c
  7411  002280  5006               	movf	(___wmul@multiplier+1)^0,w,c
  7412  002282  0207               	mulwf	___wmul@multiplicand^0,c
  7413  002284  50F3               	movf	243,w,c
  7414  002286  260A               	addwf	(___wmul@product+1)^0,f,c
  7415  002288  C009  F005         	movff	___wmul@product,?___wmul
  7416  00228C  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  7417  002290  0012               	return		;funcret
  7418  002292                     __end_of___wmul:
  7419                           	opt callstack 0
  7420                           
  7421 ;; *************** function _EUSART1_is_rx_ready *****************
  7422 ;; Defined at:
  7423 ;;		line 137 in file "mcc_generated_files/eusart1.c"
  7424 ;; Parameters:    Size  Location     Type
  7425 ;;		None
  7426 ;; Auto vars:     Size  Location     Type
  7427 ;;		None
  7428 ;; Return value:  Size  Location     Type
  7429 ;;                  1    wreg      _Bool 
  7430 ;; Registers used:
  7431 ;;		wreg, status,2
  7432 ;; Tracked objects:
  7433 ;;		On entry : 0/0
  7434 ;;		On exit  : 0/0
  7435 ;;		Unchanged: 0/0
  7436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7441 ;;Total ram usage:        0 bytes
  7442 ;; Hardware stack levels used:    1
  7443 ;; Hardware stack levels required when called:    4
  7444 ;; This function calls:
  7445 ;;		Nothing
  7446 ;; This function is called by:
  7447 ;;		_main
  7448 ;; This function uses a non-reentrant model
  7449 ;;
  7450                           
  7451                           	psect	text47
  7452  0022E0                     __ptext47:
  7453                           	opt callstack 0
  7454  0022E0                     _EUSART1_is_rx_ready:
  7455                           	opt callstack 26
  7456  0022E0                     
  7457                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
  7458  0022E0  0100               	movlb	0	; () banked
  7459  0022E2  5197               	movf	_eusart1RxCount& (0+255),w,b	;volatile
  7460  0022E4  A4D8               	btfss	status,2,c
  7461  0022E6  EF77  F011         	goto	u3141
  7462  0022EA  EF7A  F011         	goto	u3140
  7463  0022EE                     u3141:
  7464  0022EE  0E01               	movlw	1
  7465  0022F0  EF7B  F011         	goto	u3150
  7466  0022F4                     u3140:
  7467  0022F4  0E00               	movlw	0
  7468  0022F6                     u3150:
  7469  0022F6                     
  7470                           ; BSR set to: 0
  7471  0022F6  0012               	return		;funcret
  7472  0022F8                     __end_of_EUSART1_is_rx_ready:
  7473                           	opt callstack 0
  7474                           
  7475 ;; *************** function _EUSART1_Read *****************
  7476 ;; Defined at:
  7477 ;;		line 151 in file "mcc_generated_files/eusart1.c"
  7478 ;; Parameters:    Size  Location     Type
  7479 ;;		None
  7480 ;; Auto vars:     Size  Location     Type
  7481 ;;  readValue       1    4[COMRAM] unsigned char 
  7482 ;; Return value:  Size  Location     Type
  7483 ;;                  1    wreg      unsigned char 
  7484 ;; Registers used:
  7485 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7486 ;; Tracked objects:
  7487 ;;		On entry : 0/0
  7488 ;;		On exit  : 0/0
  7489 ;;		Unchanged: 0/0
  7490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7492 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7494 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7495 ;;Total ram usage:        1 bytes
  7496 ;; Hardware stack levels used:    1
  7497 ;; Hardware stack levels required when called:    4
  7498 ;; This function calls:
  7499 ;;		Nothing
  7500 ;; This function is called by:
  7501 ;;		_main
  7502 ;; This function uses a non-reentrant model
  7503 ;;
  7504                           
  7505                           	psect	text48
  7506  001E5E                     __ptext48:
  7507                           	opt callstack 0
  7508  001E5E                     _EUSART1_Read:
  7509                           	opt callstack 26
  7510  001E5E                     l3656:
  7511                           
  7512                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
  7513  001E5E  0100               	movlb	0	; () banked
  7514  001E60  5197               	movf	_eusart1RxCount& (0+255),w,b	;volatile
  7515  001E62  B4D8               	btfsc	status,2,c
  7516  001E64  EF36  F00F         	goto	u3161
  7517  001E68  EF38  F00F         	goto	u3160
  7518  001E6C                     u3161:
  7519  001E6C  EF2F  F00F         	goto	l3656
  7520  001E70                     u3160:
  7521  001E70                     
  7522                           ; BSR set to: 0
  7523                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
  7524  001E70  0E64               	movlw	low _eusart1RxStatusBuffer
  7525  001E72  2598               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
  7526  001E74  6ED9               	movwf	fsr2l,c
  7527  001E76  6ADA               	clrf	fsr2h,c
  7528  001E78  0E01               	movlw	high _eusart1RxStatusBuffer
  7529  001E7A  22DA               	addwfc	fsr2h,f,c
  7530  001E7C  50DF               	movf	indf2,w,c
  7531  001E7E  6F96               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  7532                           
  7533                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
  7534  001E80  0E64               	movlw	low _eusart1RxBuffer
  7535  001E82  2598               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
  7536  001E84  6ED9               	movwf	fsr2l,c
  7537  001E86  6ADA               	clrf	fsr2h,c
  7538  001E88  0E02               	movlw	high _eusart1RxBuffer
  7539  001E8A  22DA               	addwfc	fsr2h,f,c
  7540  001E8C  50DF               	movf	indf2,w,c
  7541  001E8E  6E05               	movwf	EUSART1_Read@readValue^0,c
  7542  001E90                     
  7543                           ; BSR set to: 0
  7544  001E90  2B98               	incf	_eusart1RxTail& (0+255),f,b	;volatile
  7545  001E92                     
  7546                           ; BSR set to: 0
  7547                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
  7548  001E92  0E63               	movlw	99
  7549  001E94  6598               	cpfsgt	_eusart1RxTail& (0+255),b	;volatile
  7550  001E96  EF4F  F00F         	goto	u3171
  7551  001E9A  EF51  F00F         	goto	u3170
  7552  001E9E                     u3171:
  7553  001E9E  EF53  F00F         	goto	l3666
  7554  001EA2                     u3170:
  7555  001EA2                     
  7556                           ; BSR set to: 0
  7557                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
  7558  001EA2  0E00               	movlw	0
  7559  001EA4  6F98               	movwf	_eusart1RxTail& (0+255),b	;volatile
  7560  001EA6                     l3666:
  7561                           
  7562                           ; BSR set to: 0
  7563                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
  7564  001EA6  010E               	movlb	14	; () banked
  7565  001EA8  9BC5               	bcf	197,5,b	;volatile
  7566  001EAA                     
  7567                           ; BSR set to: 14
  7568                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
  7569  001EAA  0100               	movlb	0	; () banked
  7570  001EAC  0797               	decf	_eusart1RxCount& (0+255),f,b	;volatile
  7571  001EAE                     
  7572                           ; BSR set to: 0
  7573                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
  7574  001EAE  010E               	movlb	14	; () banked
  7575  001EB0  8BC5               	bsf	197,5,b	;volatile
  7576  001EB2                     
  7577                           ; BSR set to: 14
  7578                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
  7579  001EB2  5005               	movf	EUSART1_Read@readValue^0,w,c
  7580  001EB4                     
  7581                           ; BSR set to: 14
  7582  001EB4  0012               	return		;funcret
  7583  001EB6                     __end_of_EUSART1_Read:
  7584                           	opt callstack 0
  7585                           
  7586 ;; *************** function _ClearRxBuff *****************
  7587 ;; Defined at:
  7588 ;;		line 70 in file "main.c"
  7589 ;; Parameters:    Size  Location     Type
  7590 ;;		None
  7591 ;; Auto vars:     Size  Location     Type
  7592 ;;  i               2    5[COMRAM] int 
  7593 ;; Return value:  Size  Location     Type
  7594 ;;                  1    wreg      void 
  7595 ;; Registers used:
  7596 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7597 ;; Tracked objects:
  7598 ;;		On entry : 0/0
  7599 ;;		On exit  : 0/0
  7600 ;;		Unchanged: 0/0
  7601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7603 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7604 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7605 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7606 ;;Total ram usage:        3 bytes
  7607 ;; Hardware stack levels used:    1
  7608 ;; Hardware stack levels required when called:    4
  7609 ;; This function calls:
  7610 ;;		Nothing
  7611 ;; This function is called by:
  7612 ;;		_main
  7613 ;; This function uses a non-reentrant model
  7614 ;;
  7615                           
  7616                           	psect	text49
  7617  001FAE                     __ptext49:
  7618                           	opt callstack 0
  7619  001FAE                     _ClearRxBuff:
  7620                           	opt callstack 26
  7621  001FAE                     
  7622                           ;main.c: 72:     int i = 0;
  7623  001FAE  0E00               	movlw	0
  7624  001FB0  6E07               	movwf	(ClearRxBuff@i+1)^0,c
  7625  001FB2  0E00               	movlw	0
  7626  001FB4  6E06               	movwf	ClearRxBuff@i^0,c
  7627                           
  7628                           ;main.c: 73:     for(i=0; i<ByteNum; i++ ){
  7629  001FB6  0E00               	movlw	0
  7630  001FB8  6E07               	movwf	(ClearRxBuff@i+1)^0,c
  7631  001FBA  0E00               	movlw	0
  7632  001FBC  6E06               	movwf	ClearRxBuff@i^0,c
  7633  001FBE  EFEB  F00F         	goto	l3734
  7634  001FC2                     l3730:
  7635                           
  7636                           ; BSR set to: 0
  7637                           ;main.c: 74:         rxData[i] = 0xFF;
  7638  001FC2  0E00               	movlw	low _rxData
  7639  001FC4  2406               	addwf	ClearRxBuff@i^0,w,c
  7640  001FC6  6ED9               	movwf	fsr2l,c
  7641  001FC8  0E02               	movlw	high _rxData
  7642  001FCA  2007               	addwfc	(ClearRxBuff@i+1)^0,w,c
  7643  001FCC  6EDA               	movwf	fsr2h,c
  7644  001FCE  0EFF               	movlw	255
  7645  001FD0  6EDF               	movwf	indf2,c
  7646  001FD2                     
  7647                           ; BSR set to: 0
  7648                           ;main.c: 75:     }
  7649  001FD2  4A06               	infsnz	ClearRxBuff@i^0,f,c
  7650  001FD4  2A07               	incf	(ClearRxBuff@i+1)^0,f,c
  7651  001FD6                     l3734:
  7652  001FD6  0100               	movlb	0	; () banked
  7653  001FD8  5190               	movf	_ByteNum& (0+255),w,b
  7654  001FDA  5C06               	subwf	ClearRxBuff@i^0,w,c
  7655  001FDC  5007               	movf	(ClearRxBuff@i+1)^0,w,c
  7656  001FDE  0A80               	xorlw	128
  7657  001FE0  6E05               	movwf	??_ClearRxBuff^0,c
  7658  001FE2  5191               	movf	(_ByteNum+1)& (0+255),w,b
  7659  001FE4  0A80               	xorlw	128
  7660  001FE6  5805               	subwfb	??_ClearRxBuff^0,w,c
  7661  001FE8  A0D8               	btfss	status,0,c
  7662  001FEA  EFF9  F00F         	goto	u3291
  7663  001FEE  EFFB  F00F         	goto	u3290
  7664  001FF2                     u3291:
  7665  001FF2  EFE1  F00F         	goto	l3730
  7666  001FF6                     u3290:
  7667  001FF6                     
  7668                           ; BSR set to: 0
  7669  001FF6  0012               	return		;funcret
  7670  001FF8                     __end_of_ClearRxBuff:
  7671                           	opt callstack 0
  7672                           
  7673 ;; *************** function _AddRxBuffToModBus *****************
  7674 ;; Defined at:
  7675 ;;		line 79 in file "main.c"
  7676 ;; Parameters:    Size  Location     Type
  7677 ;;		None
  7678 ;; Auto vars:     Size  Location     Type
  7679 ;;  i               2    5[COMRAM] int 
  7680 ;; Return value:  Size  Location     Type
  7681 ;;                  1    wreg      void 
  7682 ;; Registers used:
  7683 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7684 ;; Tracked objects:
  7685 ;;		On entry : 0/0
  7686 ;;		On exit  : 0/0
  7687 ;;		Unchanged: 0/0
  7688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7690 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7691 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7692 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7693 ;;Total ram usage:        3 bytes
  7694 ;; Hardware stack levels used:    1
  7695 ;; Hardware stack levels required when called:    4
  7696 ;; This function calls:
  7697 ;;		Nothing
  7698 ;; This function is called by:
  7699 ;;		_main
  7700 ;; This function uses a non-reentrant model
  7701 ;;
  7702                           
  7703                           	psect	text50
  7704  001990                     __ptext50:
  7705                           	opt callstack 0
  7706  001990                     _AddRxBuffToModBus:
  7707                           	opt callstack 26
  7708  001990                     
  7709                           ;main.c: 83:     int i = 0;
  7710  001990  0E00               	movlw	0
  7711  001992  6E07               	movwf	(AddRxBuffToModBus@i+1)^0,c
  7712  001994  0E00               	movlw	0
  7713  001996  6E06               	movwf	AddRxBuffToModBus@i^0,c
  7714                           
  7715                           ;main.c: 85:     for(i=0l; i<ByteNum; i++){
  7716  001998  0E00               	movlw	0
  7717  00199A  6E07               	movwf	(AddRxBuffToModBus@i+1)^0,c
  7718  00199C  0E00               	movlw	0
  7719  00199E  6E06               	movwf	AddRxBuffToModBus@i^0,c
  7720  0019A0  EFE4  F00C         	goto	l3744
  7721  0019A4                     l3738:
  7722                           
  7723                           ; BSR set to: 0
  7724                           ;main.c: 86:         ModbusData[ModDataCnt] = rxData[i];
  7725  0019A4  0E00               	movlw	low _rxData
  7726  0019A6  2406               	addwf	AddRxBuffToModBus@i^0,w,c
  7727  0019A8  6ED9               	movwf	fsr2l,c
  7728  0019AA  0E02               	movlw	high _rxData
  7729  0019AC  2007               	addwfc	(AddRxBuffToModBus@i+1)^0,w,c
  7730  0019AE  6EDA               	movwf	fsr2h,c
  7731  0019B0  0E00               	movlw	low _ModbusData
  7732  0019B2  258E               	addwf	_ModDataCnt& (0+255),w,b
  7733  0019B4  6EE1               	movwf	fsr1l,c
  7734  0019B6  0E01               	movlw	high _ModbusData
  7735  0019B8  218F               	addwfc	(_ModDataCnt+1)& (0+255),w,b
  7736  0019BA  6EE2               	movwf	fsr1h,c
  7737  0019BC  CFDF FFE7          	movff	indf2,indf1
  7738  0019C0                     
  7739                           ; BSR set to: 0
  7740                           ;main.c: 87:         ModDataCnt++;
  7741  0019C0  4B8E               	infsnz	_ModDataCnt& (0+255),f,b
  7742  0019C2  2B8F               	incf	(_ModDataCnt+1)& (0+255),f,b
  7743  0019C4                     
  7744                           ; BSR set to: 0
  7745                           ;main.c: 88:     }
  7746  0019C4  4A06               	infsnz	AddRxBuffToModBus@i^0,f,c
  7747  0019C6  2A07               	incf	(AddRxBuffToModBus@i+1)^0,f,c
  7748  0019C8                     l3744:
  7749  0019C8  0100               	movlb	0	; () banked
  7750  0019CA  5190               	movf	_ByteNum& (0+255),w,b
  7751  0019CC  5C06               	subwf	AddRxBuffToModBus@i^0,w,c
  7752  0019CE  5007               	movf	(AddRxBuffToModBus@i+1)^0,w,c
  7753  0019D0  0A80               	xorlw	128
  7754  0019D2  6E05               	movwf	??_AddRxBuffToModBus^0,c
  7755  0019D4  5191               	movf	(_ByteNum+1)& (0+255),w,b
  7756  0019D6  0A80               	xorlw	128
  7757  0019D8  5805               	subwfb	??_AddRxBuffToModBus^0,w,c
  7758  0019DA  A0D8               	btfss	status,0,c
  7759  0019DC  EFF2  F00C         	goto	u3301
  7760  0019E0  EFF4  F00C         	goto	u3300
  7761  0019E4                     u3301:
  7762  0019E4  EFD2  F00C         	goto	l3738
  7763  0019E8                     u3300:
  7764  0019E8                     
  7765                           ; BSR set to: 0
  7766                           ;main.c: 93:     if(ModbusData[1] == 0x0F){
  7767  0019E8  0E0F               	movlw	15
  7768  0019EA  0101               	movlb	1	; () banked
  7769  0019EC  1901               	xorwf	(_ModbusData+1)& (0+255),w,b
  7770  0019EE  A4D8               	btfss	status,2,c
  7771  0019F0  EFFC  F00C         	goto	u3311
  7772  0019F4  EFFE  F00C         	goto	u3310
  7773  0019F8                     u3311:
  7774  0019F8  EF07  F00D         	goto	l3750
  7775  0019FC                     u3310:
  7776  0019FC                     l3748:
  7777                           
  7778                           ; BSR set to: 1
  7779                           ;main.c: 94:         ExpectedBytes = ModbusData[6] + 9;
  7780  0019FC  0E09               	movlw	9
  7781  0019FE  2506               	addwf	(_ModbusData+6)& (0+255),w,b
  7782  001A00  0100               	movlb	0	; () banked
  7783  001A02  6FF4               	movwf	_ExpectedBytes& (0+255),b
  7784  001A04  6BF5               	clrf	(_ExpectedBytes+1)& (0+255),b
  7785  001A06  0E00               	movlw	0
  7786  001A08  23F5               	addwfc	(_ExpectedBytes+1)& (0+255),f,b
  7787                           
  7788                           ;main.c: 95:     }else if (ModbusData[1] == 0x10){
  7789  001A0A  EF17  F00D         	goto	l593
  7790  001A0E                     l3750:
  7791                           
  7792                           ; BSR set to: 1
  7793  001A0E  0E10               	movlw	16
  7794  001A10  1901               	xorwf	(_ModbusData+1)& (0+255),w,b
  7795  001A12  A4D8               	btfss	status,2,c
  7796  001A14  EF0E  F00D         	goto	u3321
  7797  001A18  EF10  F00D         	goto	u3320
  7798  001A1C                     u3321:
  7799  001A1C  EF12  F00D         	goto	l3754
  7800  001A20                     u3320:
  7801  001A20  EFFE  F00C         	goto	l3748
  7802  001A24                     l3754:
  7803                           
  7804                           ; BSR set to: 1
  7805                           ;main.c: 98:         ExpectedBytes = 8;
  7806  001A24  0E00               	movlw	0
  7807  001A26  0100               	movlb	0	; () banked
  7808  001A28  6FF5               	movwf	(_ExpectedBytes+1)& (0+255),b
  7809  001A2A  0E08               	movlw	8
  7810  001A2C  6FF4               	movwf	_ExpectedBytes& (0+255),b
  7811  001A2E                     l593:
  7812                           
  7813                           ; BSR set to: 0
  7814  001A2E  0012               	return		;funcret
  7815  001A30                     __end_of_AddRxBuffToModBus:
  7816                           	opt callstack 0
  7817                           
  7818 ;; *************** function _INTERRUPT_InterruptManager *****************
  7819 ;; Defined at:
  7820 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  7821 ;; Parameters:    Size  Location     Type
  7822 ;;		None
  7823 ;; Auto vars:     Size  Location     Type
  7824 ;;		None
  7825 ;; Return value:  Size  Location     Type
  7826 ;;                  1    wreg      void 
  7827 ;; Registers used:
  7828 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  7829 ;; Tracked objects:
  7830 ;;		On entry : 0/0
  7831 ;;		On exit  : 0/0
  7832 ;;		Unchanged: 0/0
  7833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7836 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7837 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7838 ;;Total ram usage:        4 bytes
  7839 ;; Hardware stack levels used:    1
  7840 ;; Hardware stack levels required when called:    3
  7841 ;; This function calls:
  7842 ;;		Absolute function
  7843 ;;		_EUSART1_Receive_ISR
  7844 ;;		_EUSART1_Transmit_ISR
  7845 ;;		_EUSART2_Receive_ISR
  7846 ;;		_EUSART2_Transmit_ISR
  7847 ;; This function is called by:
  7848 ;;		Interrupt level 2
  7849 ;; This function uses a non-reentrant model
  7850 ;;
  7851                           
  7852                           	psect	intcode
  7853  000008                     __pintcode:
  7854                           	opt callstack 0
  7855  000008                     _INTERRUPT_InterruptManager:
  7856                           	opt callstack 17
  7857                           
  7858                           ; BSR set to: 0
  7859                           ;incstack = 0
  7860  000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  7861  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  7862  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  7863  000012  CFD9 F003          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  7864  000016  CFDA F004          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  7865  00001A                     
  7866                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  7867  00001A  ACF2               	btfss	242,6,c	;volatile
  7868  00001C  EF12  F000         	goto	i2u334_41
  7869  000020  EF14  F000         	goto	i2u334_40
  7870  000024                     i2u334_41:
  7871  000024  EF89  F000         	goto	i2l159
  7872  000028                     i2u334_40:
  7873  000028                     
  7874                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
  7875  000028  010E               	movlb	14	; () banked
  7876  00002A  ADC5               	btfss	197,6,b	;volatile
  7877  00002C  EF1A  F000         	goto	i2u335_41
  7878  000030  EF1C  F000         	goto	i2u335_40
  7879  000034                     i2u335_41:
  7880  000034  EF32  F000         	goto	i2l150
  7881  000038                     i2u335_40:
  7882  000038                     
  7883                           ; BSR set to: 14
  7884  000038  ADCD               	btfss	205,6,b	;volatile
  7885  00003A  EF21  F000         	goto	i2u336_41
  7886  00003E  EF23  F000         	goto	i2u336_40
  7887  000042                     i2u336_41:
  7888  000042  EF32  F000         	goto	i2l150
  7889  000046                     i2u336_40:
  7890  000046                     
  7891                           ; BSR set to: 14
  7892                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART2_TxDefaultInterruptHandler();
  7893  000046  D802               	call	i2u337_48
  7894  000048  EF30  F000         	goto	i2u337_49
  7895  00004C                     i2u337_48:
  7896  00004C  0005               	push	
  7897  00004E  6EFA               	movwf	pclath,c
  7898  000050  0100               	movlb	0	; () banked
  7899  000052  51DE               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
  7900  000054  6EFD               	movwf	tosl,c
  7901  000056  51DF               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
  7902  000058  6EFE               	movwf	tosh,c
  7903  00005A  6AFF               	clrf	tosu,c
  7904  00005C  50FA               	movf	pclath,w,c
  7905  00005E  0012               	return		;indir
  7906  000060                     i2u337_49:
  7907                           
  7908                           ;mcc_generated_files/interrupt_manager.c: 66:         }
  7909  000060  EF89  F000         	goto	i2l159
  7910  000064                     i2l150:
  7911                           
  7912                           ; BSR set to: 14
  7913  000064  AFC5               	btfss	197,7,b	;volatile
  7914  000066  EF37  F000         	goto	i2u338_41
  7915  00006A  EF39  F000         	goto	i2u338_40
  7916  00006E                     i2u338_41:
  7917  00006E  EF4F  F000         	goto	i2l152
  7918  000072                     i2u338_40:
  7919  000072                     
  7920                           ; BSR set to: 14
  7921  000072  AFCD               	btfss	205,7,b	;volatile
  7922  000074  EF3E  F000         	goto	i2u339_41
  7923  000078  EF40  F000         	goto	i2u339_40
  7924  00007C                     i2u339_41:
  7925  00007C  EF4F  F000         	goto	i2l152
  7926  000080                     i2u339_40:
  7927  000080                     
  7928                           ; BSR set to: 14
  7929                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART2_RxDefaultInterruptHandler();
  7930  000080  D802               	call	i2u340_48
  7931  000082  EF4D  F000         	goto	i2u340_49
  7932  000086                     i2u340_48:
  7933  000086  0005               	push	
  7934  000088  6EFA               	movwf	pclath,c
  7935  00008A  0100               	movlb	0	; () banked
  7936  00008C  51DC               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
  7937  00008E  6EFD               	movwf	tosl,c
  7938  000090  51DD               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
  7939  000092  6EFE               	movwf	tosh,c
  7940  000094  6AFF               	clrf	tosu,c
  7941  000096  50FA               	movf	pclath,w,c
  7942  000098  0012               	return		;indir
  7943  00009A                     i2u340_49:
  7944                           
  7945                           ;mcc_generated_files/interrupt_manager.c: 70:         }
  7946  00009A  EF89  F000         	goto	i2l159
  7947  00009E                     i2l152:
  7948                           
  7949                           ; BSR set to: 14
  7950  00009E  A9C5               	btfss	197,4,b	;volatile
  7951  0000A0  EF54  F000         	goto	i2u341_41
  7952  0000A4  EF56  F000         	goto	i2u341_40
  7953  0000A8                     i2u341_41:
  7954  0000A8  EF6C  F000         	goto	i2l154
  7955  0000AC                     i2u341_40:
  7956  0000AC                     
  7957                           ; BSR set to: 14
  7958  0000AC  A9CD               	btfss	205,4,b	;volatile
  7959  0000AE  EF5B  F000         	goto	i2u342_41
  7960  0000B2  EF5D  F000         	goto	i2u342_40
  7961  0000B6                     i2u342_41:
  7962  0000B6  EF6C  F000         	goto	i2l154
  7963  0000BA                     i2u342_40:
  7964  0000BA                     
  7965                           ; BSR set to: 14
  7966                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART1_TxDefaultInterruptHandler();
  7967  0000BA  D802               	call	i2u343_48
  7968  0000BC  EF6A  F000         	goto	i2u343_49
  7969  0000C0                     i2u343_48:
  7970  0000C0  0005               	push	
  7971  0000C2  6EFA               	movwf	pclath,c
  7972  0000C4  0100               	movlb	0	; () banked
  7973  0000C6  51DA               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
  7974  0000C8  6EFD               	movwf	tosl,c
  7975  0000CA  51DB               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
  7976  0000CC  6EFE               	movwf	tosh,c
  7977  0000CE  6AFF               	clrf	tosu,c
  7978  0000D0  50FA               	movf	pclath,w,c
  7979  0000D2  0012               	return		;indir
  7980  0000D4                     i2u343_49:
  7981                           
  7982                           ;mcc_generated_files/interrupt_manager.c: 74:         }
  7983  0000D4  EF89  F000         	goto	i2l159
  7984  0000D8                     i2l154:
  7985                           
  7986                           ; BSR set to: 14
  7987  0000D8  ABC5               	btfss	197,5,b	;volatile
  7988  0000DA  EF71  F000         	goto	i2u344_41
  7989  0000DE  EF73  F000         	goto	i2u344_40
  7990  0000E2                     i2u344_41:
  7991  0000E2  EF89  F000         	goto	i2l153
  7992  0000E6                     i2u344_40:
  7993  0000E6                     
  7994                           ; BSR set to: 14
  7995  0000E6  ABCD               	btfss	205,5,b	;volatile
  7996  0000E8  EF78  F000         	goto	i2u345_41
  7997  0000EC  EF7A  F000         	goto	i2u345_40
  7998  0000F0                     i2u345_41:
  7999  0000F0  EF89  F000         	goto	i2l153
  8000  0000F4                     i2u345_40:
  8001  0000F4                     
  8002                           ; BSR set to: 14
  8003                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             EUSART1_RxDefaultInterruptHandler();
  8004  0000F4  D802               	call	i2u346_48
  8005  0000F6  EF87  F000         	goto	i2u346_49
  8006  0000FA                     i2u346_48:
  8007  0000FA  0005               	push	
  8008  0000FC  6EFA               	movwf	pclath,c
  8009  0000FE  0100               	movlb	0	; () banked
  8010  000100  51D8               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
  8011  000102  6EFD               	movwf	tosl,c
  8012  000104  51D9               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
  8013  000106  6EFE               	movwf	tosh,c
  8014  000108  6AFF               	clrf	tosu,c
  8015  00010A  50FA               	movf	pclath,w,c
  8016  00010C  0012               	return		;indir
  8017  00010E                     i2u346_49:
  8018                           
  8019                           ;mcc_generated_files/interrupt_manager.c: 78:         }
  8020  00010E  EF89  F000         	goto	i2l159
  8021  000112                     i2l153:
  8022  000112                     i2l159:
  8023  000112  C004  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  8024  000116  C003  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  8025  00011A  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  8026  00011E  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  8027  000122  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8028  000124  0011               	retfie		f
  8029  000126                     __end_of_INTERRUPT_InterruptManager:
  8030                           	opt callstack 0
  8031                           
  8032 ;; *************** function _EUSART2_Transmit_ISR *****************
  8033 ;; Defined at:
  8034 ;;		line 206 in file "mcc_generated_files/eusart2.c"
  8035 ;; Parameters:    Size  Location     Type
  8036 ;;		None
  8037 ;; Auto vars:     Size  Location     Type
  8038 ;;		None
  8039 ;; Return value:  Size  Location     Type
  8040 ;;                  1    wreg      void 
  8041 ;; Registers used:
  8042 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8043 ;; Tracked objects:
  8044 ;;		On entry : 0/0
  8045 ;;		On exit  : 0/0
  8046 ;;		Unchanged: 0/0
  8047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8052 ;;Total ram usage:        0 bytes
  8053 ;; Hardware stack levels used:    1
  8054 ;; This function calls:
  8055 ;;		Nothing
  8056 ;; This function is called by:
  8057 ;;		_EUSART2_Initialize
  8058 ;;		_INTERRUPT_InterruptManager
  8059 ;; This function uses a non-reentrant model
  8060 ;;
  8061                           
  8062                           	psect	text52
  8063  001FF8                     __ptext52:
  8064                           	opt callstack 0
  8065  001FF8                     _EUSART2_Transmit_ISR:
  8066                           	opt callstack 19
  8067  001FF8                     
  8068                           ;mcc_generated_files/eusart2.c: 210:     if(sizeof(eusart2TxBuffer) > eusart2TxBufferRem
      +                          aining)
  8069  001FF8  0E08               	movlw	8
  8070  001FFA  0100               	movlb	0	; () banked
  8071  001FFC  61E1               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
  8072  001FFE  EF03  F010         	goto	i2u306_41
  8073  002002  EF05  F010         	goto	i2u306_40
  8074  002006                     i2u306_41:
  8075  002006  EF1D  F010         	goto	i2l333
  8076  00200A                     i2u306_40:
  8077  00200A                     
  8078                           ; BSR set to: 0
  8079                           ;mcc_generated_files/eusart2.c: 211:     {;mcc_generated_files/eusart2.c: 212:         T
      +                          X2REG = eusart2TxBuffer[eusart2TxTail++];
  8080  00200A  0E80               	movlw	low _eusart2TxBuffer
  8081  00200C  259E               	addwf	_eusart2TxTail& (0+255),w,b	;volatile
  8082  00200E  6ED9               	movwf	fsr2l,c
  8083  002010  6ADA               	clrf	fsr2h,c
  8084  002012  0E00               	movlw	high _eusart2TxBuffer
  8085  002014  22DA               	addwfc	fsr2h,f,c
  8086  002016  50DF               	movf	indf2,w,c
  8087  002018  010E               	movlb	14	; () banked
  8088  00201A  6F9A               	movwf	154,b	;volatile
  8089  00201C                     
  8090                           ; BSR set to: 14
  8091  00201C  0100               	movlb	0	; () banked
  8092  00201E  2B9E               	incf	_eusart2TxTail& (0+255),f,b	;volatile
  8093  002020                     
  8094                           ; BSR set to: 0
  8095                           ;mcc_generated_files/eusart2.c: 213:         if(sizeof(eusart2TxBuffer) <= eusart2TxTail
      +                          )
  8096  002020  0E07               	movlw	7
  8097  002022  659E               	cpfsgt	_eusart2TxTail& (0+255),b	;volatile
  8098  002024  EF16  F010         	goto	i2u307_41
  8099  002028  EF18  F010         	goto	i2u307_40
  8100  00202C                     i2u307_41:
  8101  00202C  EF1A  F010         	goto	i2l3628
  8102  002030                     i2u307_40:
  8103  002030                     
  8104                           ; BSR set to: 0
  8105                           ;mcc_generated_files/eusart2.c: 214:         {;mcc_generated_files/eusart2.c: 215:      
      +                                 eusart2TxTail = 0;
  8106  002030  0E00               	movlw	0
  8107  002032  6F9E               	movwf	_eusart2TxTail& (0+255),b	;volatile
  8108  002034                     i2l3628:
  8109                           
  8110                           ; BSR set to: 0
  8111                           ;mcc_generated_files/eusart2.c: 217:         eusart2TxBufferRemaining++;
  8112  002034  2BE1               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
  8113                           
  8114                           ;mcc_generated_files/eusart2.c: 218:     }
  8115  002036  EF1F  F010         	goto	i2l336
  8116  00203A                     i2l333:
  8117                           
  8118                           ; BSR set to: 0
  8119                           ;mcc_generated_files/eusart2.c: 220:     {;mcc_generated_files/eusart2.c: 221:         P
      +                          IE3bits.TX2IE = 0;
  8120  00203A  010E               	movlb	14	; () banked
  8121  00203C  9DC5               	bcf	197,6,b	;volatile
  8122  00203E                     i2l336:
  8123  00203E  0012               	return		;funcret
  8124  002040                     __end_of_EUSART2_Transmit_ISR:
  8125                           	opt callstack 0
  8126                           
  8127 ;; *************** function _EUSART2_Receive_ISR *****************
  8128 ;; Defined at:
  8129 ;;		line 225 in file "mcc_generated_files/eusart2.c"
  8130 ;; Parameters:    Size  Location     Type
  8131 ;;		None
  8132 ;; Auto vars:     Size  Location     Type
  8133 ;;		None
  8134 ;; Return value:  Size  Location     Type
  8135 ;;                  1    wreg      void 
  8136 ;; Registers used:
  8137 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  8138 ;; Tracked objects:
  8139 ;;		On entry : 0/0
  8140 ;;		On exit  : 0/0
  8141 ;;		Unchanged: 0/0
  8142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8147 ;;Total ram usage:        0 bytes
  8148 ;; Hardware stack levels used:    1
  8149 ;; Hardware stack levels required when called:    2
  8150 ;; This function calls:
  8151 ;;		Absolute function
  8152 ;;		_EUSART2_DefaultErrorHandler
  8153 ;;		_EUSART2_DefaultFramingErrorHandler
  8154 ;;		_EUSART2_DefaultOverrunErrorHandler
  8155 ;;		_EUSART2_RxDataHandler
  8156 ;; This function is called by:
  8157 ;;		_EUSART2_Initialize
  8158 ;;		_INTERRUPT_InterruptManager
  8159 ;; This function uses a non-reentrant model
  8160 ;;
  8161                           
  8162                           	psect	text53
  8163  001810                     __ptext53:
  8164                           	opt callstack 0
  8165  001810                     _EUSART2_Receive_ISR:
  8166                           	opt callstack 17
  8167  001810                     
  8168                           ;mcc_generated_files/eusart2.c: 228:     eusart2RxStatusBuffer[eusart2RxHead].status = 0
      +                          ;
  8169  001810  0E70               	movlw	low _eusart2RxStatusBuffer
  8170  001812  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
  8171  001814  6ED9               	movwf	fsr2l,c
  8172  001816  6ADA               	clrf	fsr2h,c
  8173  001818  0E00               	movlw	high _eusart2RxStatusBuffer
  8174  00181A  22DA               	addwfc	fsr2h,f,c
  8175  00181C  0E00               	movlw	0
  8176  00181E  6EDF               	movwf	indf2,c
  8177  001820                     
  8178                           ;mcc_generated_files/eusart2.c: 230:     if(RC2STAbits.FERR){
  8179  001820  010E               	movlb	14	; () banked
  8180  001822  A59D               	btfss	157,2,b	;volatile
  8181  001824  EF16  F00C         	goto	i2u308_41
  8182  001828  EF18  F00C         	goto	i2u308_40
  8183  00182C                     i2u308_41:
  8184  00182C  EF2C  F00C         	goto	i2l3638
  8185  001830                     i2u308_40:
  8186  001830                     
  8187                           ; BSR set to: 14
  8188                           ;mcc_generated_files/eusart2.c: 231:         eusart2RxStatusBuffer[eusart2RxHead].ferr =
      +                           1;
  8189  001830  0E70               	movlw	low _eusart2RxStatusBuffer
  8190  001832  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
  8191  001834  6ED9               	movwf	fsr2l,c
  8192  001836  6ADA               	clrf	fsr2h,c
  8193  001838  0E00               	movlw	high _eusart2RxStatusBuffer
  8194  00183A  22DA               	addwfc	fsr2h,f,c
  8195  00183C  0100               	movlb	0	; () banked
  8196  00183E  82DF               	bsf	indf2,1,c
  8197  001840                     
  8198                           ; BSR set to: 0
  8199                           ;mcc_generated_files/eusart2.c: 232:         EUSART2_FramingErrorHandler();
  8200  001840  D802               	call	i2u309_48
  8201  001842  EF2C  F00C         	goto	i2u309_49
  8202  001846                     i2u309_48:
  8203  001846  0005               	push	
  8204  001848  6EFA               	movwf	pclath,c
  8205  00184A  51D6               	movf	_EUSART2_FramingErrorHandler& (0+255),w,b
  8206  00184C  6EFD               	movwf	tosl,c
  8207  00184E  51D7               	movf	(_EUSART2_FramingErrorHandler+1)& (0+255),w,b
  8208  001850  6EFE               	movwf	tosh,c
  8209  001852  6AFF               	clrf	tosu,c
  8210  001854  50FA               	movf	pclath,w,c
  8211  001856  0012               	return		;indir
  8212  001858                     i2u309_49:
  8213  001858                     i2l3638:
  8214                           
  8215                           ;mcc_generated_files/eusart2.c: 235:     if(RC2STAbits.OERR){
  8216  001858  010E               	movlb	14	; () banked
  8217  00185A  A39D               	btfss	157,1,b	;volatile
  8218  00185C  EF32  F00C         	goto	i2u310_41
  8219  001860  EF34  F00C         	goto	i2u310_40
  8220  001864                     i2u310_41:
  8221  001864  EF48  F00C         	goto	i2l3644
  8222  001868                     i2u310_40:
  8223  001868                     
  8224                           ; BSR set to: 14
  8225                           ;mcc_generated_files/eusart2.c: 236:         eusart2RxStatusBuffer[eusart2RxHead].oerr =
      +                           1;
  8226  001868  0E70               	movlw	low _eusart2RxStatusBuffer
  8227  00186A  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
  8228  00186C  6ED9               	movwf	fsr2l,c
  8229  00186E  6ADA               	clrf	fsr2h,c
  8230  001870  0E00               	movlw	high _eusart2RxStatusBuffer
  8231  001872  22DA               	addwfc	fsr2h,f,c
  8232  001874  0100               	movlb	0	; () banked
  8233  001876  84DF               	bsf	indf2,2,c
  8234  001878                     
  8235                           ; BSR set to: 0
  8236                           ;mcc_generated_files/eusart2.c: 237:         EUSART2_OverrunErrorHandler();
  8237  001878  D802               	call	i2u311_48
  8238  00187A  EF48  F00C         	goto	i2u311_49
  8239  00187E                     i2u311_48:
  8240  00187E  0005               	push	
  8241  001880  6EFA               	movwf	pclath,c
  8242  001882  51D4               	movf	_EUSART2_OverrunErrorHandler& (0+255),w,b
  8243  001884  6EFD               	movwf	tosl,c
  8244  001886  51D5               	movf	(_EUSART2_OverrunErrorHandler+1)& (0+255),w,b
  8245  001888  6EFE               	movwf	tosh,c
  8246  00188A  6AFF               	clrf	tosu,c
  8247  00188C  50FA               	movf	pclath,w,c
  8248  00188E  0012               	return		;indir
  8249  001890                     i2u311_49:
  8250  001890                     i2l3644:
  8251                           
  8252                           ;mcc_generated_files/eusart2.c: 240:     if(eusart2RxStatusBuffer[eusart2RxHead].status)
      +                          {
  8253  001890  0E70               	movlw	low _eusart2RxStatusBuffer
  8254  001892  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
  8255  001894  6ED9               	movwf	fsr2l,c
  8256  001896  6ADA               	clrf	fsr2h,c
  8257  001898  0E00               	movlw	high _eusart2RxStatusBuffer
  8258  00189A  22DA               	addwfc	fsr2h,f,c
  8259  00189C  50DF               	movf	indf2,w,c
  8260  00189E  B4D8               	btfsc	status,2,c
  8261  0018A0  EF54  F00C         	goto	i2u312_41
  8262  0018A4  EF56  F00C         	goto	i2u312_40
  8263  0018A8                     i2u312_41:
  8264  0018A8  EF65  F00C         	goto	i2l3648
  8265  0018AC                     i2u312_40:
  8266  0018AC                     
  8267                           ;mcc_generated_files/eusart2.c: 241:         EUSART2_ErrorHandler();
  8268  0018AC  D802               	call	i2u313_48
  8269  0018AE  EF63  F00C         	goto	i2u313_49
  8270  0018B2                     i2u313_48:
  8271  0018B2  0005               	push	
  8272  0018B4  6EFA               	movwf	pclath,c
  8273  0018B6  0100               	movlb	0	; () banked
  8274  0018B8  51D2               	movf	_EUSART2_ErrorHandler& (0+255),w,b
  8275  0018BA  6EFD               	movwf	tosl,c
  8276  0018BC  51D3               	movf	(_EUSART2_ErrorHandler+1)& (0+255),w,b
  8277  0018BE  6EFE               	movwf	tosh,c
  8278  0018C0  6AFF               	clrf	tosu,c
  8279  0018C2  50FA               	movf	pclath,w,c
  8280  0018C4  0012               	return		;indir
  8281  0018C6                     i2u313_49:
  8282                           
  8283                           ;mcc_generated_files/eusart2.c: 242:     } else {
  8284  0018C6  EF67  F00C         	goto	i2l343
  8285  0018CA                     i2l3648:
  8286                           
  8287                           ;mcc_generated_files/eusart2.c: 243:         EUSART2_RxDataHandler();
  8288  0018CA  ECF6  F010         	call	_EUSART2_RxDataHandler	;wreg free
  8289  0018CE                     i2l343:
  8290  0018CE  0012               	return		;funcret
  8291  0018D0                     __end_of_EUSART2_Receive_ISR:
  8292                           	opt callstack 0
  8293                           
  8294 ;; *************** function _EUSART2_DefaultOverrunErrorHandler *****************
  8295 ;; Defined at:
  8296 ;;		line 261 in file "mcc_generated_files/eusart2.c"
  8297 ;; Parameters:    Size  Location     Type
  8298 ;;		None
  8299 ;; Auto vars:     Size  Location     Type
  8300 ;;		None
  8301 ;; Return value:  Size  Location     Type
  8302 ;;                  1    wreg      void 
  8303 ;; Registers used:
  8304 ;;		None
  8305 ;; Tracked objects:
  8306 ;;		On entry : 0/0
  8307 ;;		On exit  : 0/0
  8308 ;;		Unchanged: 0/0
  8309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8314 ;;Total ram usage:        0 bytes
  8315 ;; Hardware stack levels used:    1
  8316 ;; This function calls:
  8317 ;;		Nothing
  8318 ;; This function is called by:
  8319 ;;		_EUSART2_Initialize
  8320 ;;		_EUSART2_Receive_ISR
  8321 ;; This function uses a non-reentrant model
  8322 ;;
  8323                           
  8324                           	psect	text54
  8325  00237A                     __ptext54:
  8326                           	opt callstack 0
  8327  00237A                     _EUSART2_DefaultOverrunErrorHandler:
  8328                           	opt callstack 18
  8329  00237A                     
  8330                           ;mcc_generated_files/eusart2.c: 264:     RC2STAbits.CREN = 0;
  8331  00237A  010E               	movlb	14	; () banked
  8332  00237C  999D               	bcf	157,4,b	;volatile
  8333                           
  8334                           ;mcc_generated_files/eusart2.c: 265:     RC2STAbits.CREN = 1;
  8335  00237E  899D               	bsf	157,4,b	;volatile
  8336  002380                     
  8337                           ; BSR set to: 14
  8338  002380  0012               	return		;funcret
  8339  002382                     __end_of_EUSART2_DefaultOverrunErrorHandler:
  8340                           	opt callstack 0
  8341                           
  8342 ;; *************** function _EUSART2_DefaultFramingErrorHandler *****************
  8343 ;; Defined at:
  8344 ;;		line 259 in file "mcc_generated_files/eusart2.c"
  8345 ;; Parameters:    Size  Location     Type
  8346 ;;		None
  8347 ;; Auto vars:     Size  Location     Type
  8348 ;;		None
  8349 ;; Return value:  Size  Location     Type
  8350 ;;                  1    wreg      void 
  8351 ;; Registers used:
  8352 ;;		None
  8353 ;; Tracked objects:
  8354 ;;		On entry : 0/0
  8355 ;;		On exit  : 0/0
  8356 ;;		Unchanged: 0/0
  8357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8362 ;;Total ram usage:        0 bytes
  8363 ;; Hardware stack levels used:    1
  8364 ;; This function calls:
  8365 ;;		Nothing
  8366 ;; This function is called by:
  8367 ;;		_EUSART2_Initialize
  8368 ;;		_EUSART2_Receive_ISR
  8369 ;; This function uses a non-reentrant model
  8370 ;;
  8371                           
  8372                           	psect	text55
  8373  00239E                     __ptext55:
  8374                           	opt callstack 0
  8375  00239E                     _EUSART2_DefaultFramingErrorHandler:
  8376                           	opt callstack 18
  8377  00239E  0012               	return		;funcret
  8378  0023A0                     __end_of_EUSART2_DefaultFramingErrorHandler:
  8379                           	opt callstack 0
  8380                           
  8381 ;; *************** function _EUSART2_DefaultErrorHandler *****************
  8382 ;; Defined at:
  8383 ;;		line 269 in file "mcc_generated_files/eusart2.c"
  8384 ;; Parameters:    Size  Location     Type
  8385 ;;		None
  8386 ;; Auto vars:     Size  Location     Type
  8387 ;;		None
  8388 ;; Return value:  Size  Location     Type
  8389 ;;                  1    wreg      void 
  8390 ;; Registers used:
  8391 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8392 ;; Tracked objects:
  8393 ;;		On entry : 0/0
  8394 ;;		On exit  : 0/0
  8395 ;;		Unchanged: 0/0
  8396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8401 ;;Total ram usage:        0 bytes
  8402 ;; Hardware stack levels used:    1
  8403 ;; Hardware stack levels required when called:    1
  8404 ;; This function calls:
  8405 ;;		_EUSART2_RxDataHandler
  8406 ;; This function is called by:
  8407 ;;		_EUSART2_Initialize
  8408 ;;		_EUSART2_Receive_ISR
  8409 ;; This function uses a non-reentrant model
  8410 ;;
  8411                           
  8412                           	psect	text56
  8413  002388                     __ptext56:
  8414                           	opt callstack 0
  8415  002388                     _EUSART2_DefaultErrorHandler:
  8416                           	opt callstack 17
  8417  002388                     
  8418                           ;mcc_generated_files/eusart2.c: 270:     EUSART2_RxDataHandler();
  8419  002388  ECF6  F010         	call	_EUSART2_RxDataHandler	;wreg free
  8420  00238C  0012               	return		;funcret
  8421  00238E                     __end_of_EUSART2_DefaultErrorHandler:
  8422                           	opt callstack 0
  8423                           
  8424 ;; *************** function _EUSART2_RxDataHandler *****************
  8425 ;; Defined at:
  8426 ;;		line 249 in file "mcc_generated_files/eusart2.c"
  8427 ;; Parameters:    Size  Location     Type
  8428 ;;		None
  8429 ;; Auto vars:     Size  Location     Type
  8430 ;;		None
  8431 ;; Return value:  Size  Location     Type
  8432 ;;                  1    wreg      void 
  8433 ;; Registers used:
  8434 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8435 ;; Tracked objects:
  8436 ;;		On entry : 0/0
  8437 ;;		On exit  : 0/0
  8438 ;;		Unchanged: 0/0
  8439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8444 ;;Total ram usage:        0 bytes
  8445 ;; Hardware stack levels used:    1
  8446 ;; This function calls:
  8447 ;;		Nothing
  8448 ;; This function is called by:
  8449 ;;		_EUSART2_Receive_ISR
  8450 ;;		_EUSART2_DefaultErrorHandler
  8451 ;; This function uses a non-reentrant model
  8452 ;;
  8453                           
  8454                           	psect	text57
  8455  0021EC                     __ptext57:
  8456                           	opt callstack 0
  8457  0021EC                     _EUSART2_RxDataHandler:
  8458                           	opt callstack 18
  8459  0021EC                     
  8460                           ;mcc_generated_files/eusart2.c: 251:     eusart2RxBuffer[eusart2RxHead++] = RC2REG;
  8461  0021EC  0E78               	movlw	low _eusart2RxBuffer
  8462  0021EE  245A               	addwf	_eusart2RxHead^0,w,c	;volatile
  8463  0021F0  6ED9               	movwf	fsr2l,c
  8464  0021F2  6ADA               	clrf	fsr2h,c
  8465  0021F4  0E00               	movlw	high _eusart2RxBuffer
  8466  0021F6  22DA               	addwfc	fsr2h,f,c
  8467  0021F8  CE99 FFDF          	movff	3737,indf2	;volatile
  8468  0021FC  2A5A               	incf	_eusart2RxHead^0,f,c	;volatile
  8469  0021FE                     
  8470                           ;mcc_generated_files/eusart2.c: 252:     if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
  8471  0021FE  0E07               	movlw	7
  8472  002200  645A               	cpfsgt	_eusart2RxHead^0,c	;volatile
  8473  002202  EF05  F011         	goto	i2u301_41
  8474  002206  EF07  F011         	goto	i2u301_40
  8475  00220A                     i2u301_41:
  8476  00220A  EF09  F011         	goto	i2l3464
  8477  00220E                     i2u301_40:
  8478  00220E                     
  8479                           ;mcc_generated_files/eusart2.c: 253:     {;mcc_generated_files/eusart2.c: 254:         e
      +                          usart2RxHead = 0;
  8480  00220E  0E00               	movlw	0
  8481  002210  6E5A               	movwf	_eusart2RxHead^0,c	;volatile
  8482  002212                     i2l3464:
  8483                           
  8484                           ;mcc_generated_files/eusart2.c: 256:     eusart2RxCount++;
  8485  002212  0100               	movlb	0	; () banked
  8486  002214  2B9C               	incf	_eusart2RxCount& (0+255),f,b	;volatile
  8487  002216                     
  8488                           ; BSR set to: 0
  8489  002216  0012               	return		;funcret
  8490  002218                     __end_of_EUSART2_RxDataHandler:
  8491                           	opt callstack 0
  8492                           
  8493 ;; *************** function _EUSART1_Transmit_ISR *****************
  8494 ;; Defined at:
  8495 ;;		line 197 in file "mcc_generated_files/eusart1.c"
  8496 ;; Parameters:    Size  Location     Type
  8497 ;;		None
  8498 ;; Auto vars:     Size  Location     Type
  8499 ;;		None
  8500 ;; Return value:  Size  Location     Type
  8501 ;;                  1    wreg      void 
  8502 ;; Registers used:
  8503 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8504 ;; Tracked objects:
  8505 ;;		On entry : 0/0
  8506 ;;		On exit  : 0/0
  8507 ;;		Unchanged: 0/0
  8508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8513 ;;Total ram usage:        0 bytes
  8514 ;; Hardware stack levels used:    1
  8515 ;; This function calls:
  8516 ;;		Nothing
  8517 ;; This function is called by:
  8518 ;;		_EUSART1_Initialize
  8519 ;;		_INTERRUPT_InterruptManager
  8520 ;; This function uses a non-reentrant model
  8521 ;;
  8522                           
  8523                           	psect	text58
  8524  002084                     __ptext58:
  8525                           	opt callstack 0
  8526  002084                     _EUSART1_Transmit_ISR:
  8527                           	opt callstack 19
  8528  002084                     
  8529                           ;mcc_generated_files/eusart1.c: 201:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
  8530  002084  0E10               	movlw	16
  8531  002086  0100               	movlb	0	; () banked
  8532  002088  61E0               	cpfslt	_eusart1TxBufferRemaining& (0+255),b	;volatile
  8533  00208A  EF49  F010         	goto	i2u321_41
  8534  00208E  EF4B  F010         	goto	i2u321_40
  8535  002092                     i2u321_41:
  8536  002092  EF61  F010         	goto	i2l477
  8537  002096                     i2u321_40:
  8538  002096                     
  8539                           ; BSR set to: 0
  8540                           ;mcc_generated_files/eusart1.c: 202:     {;mcc_generated_files/eusart1.c: 203:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
  8541  002096  0E60               	movlw	low _eusart1TxBuffer
  8542  002098  2599               	addwf	_eusart1TxTail& (0+255),w,b	;volatile
  8543  00209A  6ED9               	movwf	fsr2l,c
  8544  00209C  6ADA               	clrf	fsr2h,c
  8545  00209E  0E00               	movlw	high _eusart1TxBuffer
  8546  0020A0  22DA               	addwfc	fsr2h,f,c
  8547  0020A2  50DF               	movf	indf2,w,c
  8548  0020A4  6E9A               	movwf	154,c	;volatile
  8549  0020A6                     
  8550                           ; BSR set to: 0
  8551  0020A6  2B99               	incf	_eusart1TxTail& (0+255),f,b	;volatile
  8552  0020A8                     
  8553                           ; BSR set to: 0
  8554                           ;mcc_generated_files/eusart1.c: 204:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
  8555  0020A8  0E0F               	movlw	15
  8556  0020AA  6599               	cpfsgt	_eusart1TxTail& (0+255),b	;volatile
  8557  0020AC  EF5A  F010         	goto	i2u322_41
  8558  0020B0  EF5C  F010         	goto	i2u322_40
  8559  0020B4                     i2u322_41:
  8560  0020B4  EF5E  F010         	goto	i2l3704
  8561  0020B8                     i2u322_40:
  8562  0020B8                     
  8563                           ; BSR set to: 0
  8564                           ;mcc_generated_files/eusart1.c: 205:         {;mcc_generated_files/eusart1.c: 206:      
      +                                 eusart1TxTail = 0;
  8565  0020B8  0E00               	movlw	0
  8566  0020BA  6F99               	movwf	_eusart1TxTail& (0+255),b	;volatile
  8567  0020BC                     i2l3704:
  8568                           
  8569                           ; BSR set to: 0
  8570                           ;mcc_generated_files/eusart1.c: 208:         eusart1TxBufferRemaining++;
  8571  0020BC  2BE0               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
  8572                           
  8573                           ;mcc_generated_files/eusart1.c: 209:     }
  8574  0020BE  EF63  F010         	goto	i2l480
  8575  0020C2                     i2l477:
  8576                           
  8577                           ; BSR set to: 0
  8578                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         P
      +                          IE3bits.TX1IE = 0;
  8579  0020C2  010E               	movlb	14	; () banked
  8580  0020C4  99C5               	bcf	197,4,b	;volatile
  8581  0020C6                     i2l480:
  8582  0020C6  0012               	return		;funcret
  8583  0020C8                     __end_of_EUSART1_Transmit_ISR:
  8584                           	opt callstack 0
  8585                           
  8586 ;; *************** function _EUSART1_Receive_ISR *****************
  8587 ;; Defined at:
  8588 ;;		line 216 in file "mcc_generated_files/eusart1.c"
  8589 ;; Parameters:    Size  Location     Type
  8590 ;;		None
  8591 ;; Auto vars:     Size  Location     Type
  8592 ;;		None
  8593 ;; Return value:  Size  Location     Type
  8594 ;;                  1    wreg      void 
  8595 ;; Registers used:
  8596 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  8597 ;; Tracked objects:
  8598 ;;		On entry : 0/0
  8599 ;;		On exit  : 0/0
  8600 ;;		Unchanged: 0/0
  8601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8606 ;;Total ram usage:        0 bytes
  8607 ;; Hardware stack levels used:    1
  8608 ;; Hardware stack levels required when called:    2
  8609 ;; This function calls:
  8610 ;;		Absolute function
  8611 ;;		_EUSART1_DefaultErrorHandler
  8612 ;;		_EUSART1_DefaultFramingErrorHandler
  8613 ;;		_EUSART1_DefaultOverrunErrorHandler
  8614 ;;		_EUSART1_RxDataHandler
  8615 ;; This function is called by:
  8616 ;;		_EUSART1_Initialize
  8617 ;;		_INTERRUPT_InterruptManager
  8618 ;; This function uses a non-reentrant model
  8619 ;;
  8620                           
  8621                           	psect	text59
  8622  0018D0                     __ptext59:
  8623                           	opt callstack 0
  8624  0018D0                     _EUSART1_Receive_ISR:
  8625                           	opt callstack 17
  8626  0018D0                     
  8627                           ;mcc_generated_files/eusart1.c: 219:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
  8628  0018D0  0E64               	movlw	low _eusart1RxStatusBuffer
  8629  0018D2  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
  8630  0018D4  6ED9               	movwf	fsr2l,c
  8631  0018D6  6ADA               	clrf	fsr2h,c
  8632  0018D8  0E01               	movlw	high _eusart1RxStatusBuffer
  8633  0018DA  22DA               	addwfc	fsr2h,f,c
  8634  0018DC  0E00               	movlw	0
  8635  0018DE  6EDF               	movwf	indf2,c
  8636  0018E0                     
  8637                           ;mcc_generated_files/eusart1.c: 221:     if(RC1STAbits.FERR){
  8638  0018E0  A49D               	btfss	157,2,c	;volatile
  8639  0018E2  EF75  F00C         	goto	i2u323_41
  8640  0018E6  EF77  F00C         	goto	i2u323_40
  8641  0018EA                     i2u323_41:
  8642  0018EA  EF8C  F00C         	goto	i2l3714
  8643  0018EE                     i2u323_40:
  8644  0018EE                     
  8645                           ;mcc_generated_files/eusart1.c: 222:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
  8646  0018EE  0E64               	movlw	low _eusart1RxStatusBuffer
  8647  0018F0  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
  8648  0018F2  6ED9               	movwf	fsr2l,c
  8649  0018F4  6ADA               	clrf	fsr2h,c
  8650  0018F6  0E01               	movlw	high _eusart1RxStatusBuffer
  8651  0018F8  22DA               	addwfc	fsr2h,f,c
  8652  0018FA  0101               	movlb	1	; () banked
  8653  0018FC  82DF               	bsf	indf2,1,c
  8654  0018FE                     
  8655                           ; BSR set to: 1
  8656                           ;mcc_generated_files/eusart1.c: 223:         EUSART1_FramingErrorHandler();
  8657  0018FE  D802               	call	i2u324_48
  8658  001900  EF8C  F00C         	goto	i2u324_49
  8659  001904                     i2u324_48:
  8660  001904  0005               	push	
  8661  001906  6EFA               	movwf	pclath,c
  8662  001908  0100               	movlb	0	; () banked
  8663  00190A  51D0               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
  8664  00190C  6EFD               	movwf	tosl,c
  8665  00190E  51D1               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
  8666  001910  6EFE               	movwf	tosh,c
  8667  001912  6AFF               	clrf	tosu,c
  8668  001914  50FA               	movf	pclath,w,c
  8669  001916  0012               	return		;indir
  8670  001918                     i2u324_49:
  8671  001918                     i2l3714:
  8672                           
  8673                           ;mcc_generated_files/eusart1.c: 226:     if(RC1STAbits.OERR){
  8674  001918  A29D               	btfss	157,1,c	;volatile
  8675  00191A  EF91  F00C         	goto	i2u325_41
  8676  00191E  EF93  F00C         	goto	i2u325_40
  8677  001922                     i2u325_41:
  8678  001922  EFA8  F00C         	goto	i2l3720
  8679  001926                     i2u325_40:
  8680  001926                     
  8681                           ;mcc_generated_files/eusart1.c: 227:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
  8682  001926  0E64               	movlw	low _eusart1RxStatusBuffer
  8683  001928  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
  8684  00192A  6ED9               	movwf	fsr2l,c
  8685  00192C  6ADA               	clrf	fsr2h,c
  8686  00192E  0E01               	movlw	high _eusart1RxStatusBuffer
  8687  001930  22DA               	addwfc	fsr2h,f,c
  8688  001932  0101               	movlb	1	; () banked
  8689  001934  84DF               	bsf	indf2,2,c
  8690  001936                     
  8691                           ; BSR set to: 1
  8692                           ;mcc_generated_files/eusart1.c: 228:         EUSART1_OverrunErrorHandler();
  8693  001936  D802               	call	i2u326_48
  8694  001938  EFA8  F00C         	goto	i2u326_49
  8695  00193C                     i2u326_48:
  8696  00193C  0005               	push	
  8697  00193E  6EFA               	movwf	pclath,c
  8698  001940  0100               	movlb	0	; () banked
  8699  001942  51CE               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
  8700  001944  6EFD               	movwf	tosl,c
  8701  001946  51CF               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
  8702  001948  6EFE               	movwf	tosh,c
  8703  00194A  6AFF               	clrf	tosu,c
  8704  00194C  50FA               	movf	pclath,w,c
  8705  00194E  0012               	return		;indir
  8706  001950                     i2u326_49:
  8707  001950                     i2l3720:
  8708                           
  8709                           ;mcc_generated_files/eusart1.c: 231:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
  8710  001950  0E64               	movlw	low _eusart1RxStatusBuffer
  8711  001952  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
  8712  001954  6ED9               	movwf	fsr2l,c
  8713  001956  6ADA               	clrf	fsr2h,c
  8714  001958  0E01               	movlw	high _eusart1RxStatusBuffer
  8715  00195A  22DA               	addwfc	fsr2h,f,c
  8716  00195C  50DF               	movf	indf2,w,c
  8717  00195E  B4D8               	btfsc	status,2,c
  8718  001960  EFB4  F00C         	goto	i2u327_41
  8719  001964  EFB6  F00C         	goto	i2u327_40
  8720  001968                     i2u327_41:
  8721  001968  EFC5  F00C         	goto	i2l3724
  8722  00196C                     i2u327_40:
  8723  00196C                     
  8724                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_ErrorHandler();
  8725  00196C  D802               	call	i2u328_48
  8726  00196E  EFC3  F00C         	goto	i2u328_49
  8727  001972                     i2u328_48:
  8728  001972  0005               	push	
  8729  001974  6EFA               	movwf	pclath,c
  8730  001976  0100               	movlb	0	; () banked
  8731  001978  51CC               	movf	_EUSART1_ErrorHandler& (0+255),w,b
  8732  00197A  6EFD               	movwf	tosl,c
  8733  00197C  51CD               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
  8734  00197E  6EFE               	movwf	tosh,c
  8735  001980  6AFF               	clrf	tosu,c
  8736  001982  50FA               	movf	pclath,w,c
  8737  001984  0012               	return		;indir
  8738  001986                     i2u328_49:
  8739                           
  8740                           ;mcc_generated_files/eusart1.c: 233:     } else {
  8741  001986  EFC7  F00C         	goto	i2l487
  8742  00198A                     i2l3724:
  8743                           
  8744                           ;mcc_generated_files/eusart1.c: 234:         EUSART1_RxDataHandler();
  8745  00198A  EC0C  F011         	call	_EUSART1_RxDataHandler	;wreg free
  8746  00198E                     i2l487:
  8747  00198E  0012               	return		;funcret
  8748  001990                     __end_of_EUSART1_Receive_ISR:
  8749                           	opt callstack 0
  8750                           
  8751 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
  8752 ;; Defined at:
  8753 ;;		line 252 in file "mcc_generated_files/eusart1.c"
  8754 ;; Parameters:    Size  Location     Type
  8755 ;;		None
  8756 ;; Auto vars:     Size  Location     Type
  8757 ;;		None
  8758 ;; Return value:  Size  Location     Type
  8759 ;;                  1    wreg      void 
  8760 ;; Registers used:
  8761 ;;		None
  8762 ;; Tracked objects:
  8763 ;;		On entry : 0/0
  8764 ;;		On exit  : 0/0
  8765 ;;		Unchanged: 0/0
  8766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8771 ;;Total ram usage:        0 bytes
  8772 ;; Hardware stack levels used:    1
  8773 ;; This function calls:
  8774 ;;		Nothing
  8775 ;; This function is called by:
  8776 ;;		_EUSART1_Initialize
  8777 ;;		_EUSART1_Receive_ISR
  8778 ;; This function uses a non-reentrant model
  8779 ;;
  8780                           
  8781                           	psect	text60
  8782  00238E                     __ptext60:
  8783                           	opt callstack 0
  8784  00238E                     _EUSART1_DefaultOverrunErrorHandler:
  8785                           	opt callstack 18
  8786  00238E                     
  8787                           ;mcc_generated_files/eusart1.c: 255:     RC1STAbits.CREN = 0;
  8788  00238E  989D               	bcf	157,4,c	;volatile
  8789                           
  8790                           ;mcc_generated_files/eusart1.c: 256:     RC1STAbits.CREN = 1;
  8791  002390  889D               	bsf	157,4,c	;volatile
  8792  002392  0012               	return		;funcret
  8793  002394                     __end_of_EUSART1_DefaultOverrunErrorHandler:
  8794                           	opt callstack 0
  8795                           
  8796 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
  8797 ;; Defined at:
  8798 ;;		line 250 in file "mcc_generated_files/eusart1.c"
  8799 ;; Parameters:    Size  Location     Type
  8800 ;;		None
  8801 ;; Auto vars:     Size  Location     Type
  8802 ;;		None
  8803 ;; Return value:  Size  Location     Type
  8804 ;;                  1    wreg      void 
  8805 ;; Registers used:
  8806 ;;		None
  8807 ;; Tracked objects:
  8808 ;;		On entry : 0/0
  8809 ;;		On exit  : 0/0
  8810 ;;		Unchanged: 0/0
  8811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8816 ;;Total ram usage:        0 bytes
  8817 ;; Hardware stack levels used:    1
  8818 ;; This function calls:
  8819 ;;		Nothing
  8820 ;; This function is called by:
  8821 ;;		_EUSART1_Initialize
  8822 ;;		_EUSART1_Receive_ISR
  8823 ;; This function uses a non-reentrant model
  8824 ;;
  8825                           
  8826                           	psect	text61
  8827  0023A0                     __ptext61:
  8828                           	opt callstack 0
  8829  0023A0                     _EUSART1_DefaultFramingErrorHandler:
  8830                           	opt callstack 18
  8831  0023A0  0012               	return		;funcret
  8832  0023A2                     __end_of_EUSART1_DefaultFramingErrorHandler:
  8833                           	opt callstack 0
  8834                           
  8835 ;; *************** function _EUSART1_DefaultErrorHandler *****************
  8836 ;; Defined at:
  8837 ;;		line 260 in file "mcc_generated_files/eusart1.c"
  8838 ;; Parameters:    Size  Location     Type
  8839 ;;		None
  8840 ;; Auto vars:     Size  Location     Type
  8841 ;;		None
  8842 ;; Return value:  Size  Location     Type
  8843 ;;                  1    wreg      void 
  8844 ;; Registers used:
  8845 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8846 ;; Tracked objects:
  8847 ;;		On entry : 0/0
  8848 ;;		On exit  : 0/0
  8849 ;;		Unchanged: 0/0
  8850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8855 ;;Total ram usage:        0 bytes
  8856 ;; Hardware stack levels used:    1
  8857 ;; Hardware stack levels required when called:    1
  8858 ;; This function calls:
  8859 ;;		_EUSART1_RxDataHandler
  8860 ;; This function is called by:
  8861 ;;		_EUSART1_Initialize
  8862 ;;		_EUSART1_Receive_ISR
  8863 ;; This function uses a non-reentrant model
  8864 ;;
  8865                           
  8866                           	psect	text62
  8867  002394                     __ptext62:
  8868                           	opt callstack 0
  8869  002394                     _EUSART1_DefaultErrorHandler:
  8870                           	opt callstack 17
  8871  002394                     
  8872                           ;mcc_generated_files/eusart1.c: 261:     EUSART1_RxDataHandler();
  8873  002394  EC0C  F011         	call	_EUSART1_RxDataHandler	;wreg free
  8874  002398  0012               	return		;funcret
  8875  00239A                     __end_of_EUSART1_DefaultErrorHandler:
  8876                           	opt callstack 0
  8877                           
  8878 ;; *************** function _EUSART1_RxDataHandler *****************
  8879 ;; Defined at:
  8880 ;;		line 240 in file "mcc_generated_files/eusart1.c"
  8881 ;; Parameters:    Size  Location     Type
  8882 ;;		None
  8883 ;; Auto vars:     Size  Location     Type
  8884 ;;		None
  8885 ;; Return value:  Size  Location     Type
  8886 ;;                  1    wreg      void 
  8887 ;; Registers used:
  8888 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8889 ;; Tracked objects:
  8890 ;;		On entry : 0/0
  8891 ;;		On exit  : 0/0
  8892 ;;		Unchanged: 0/0
  8893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8898 ;;Total ram usage:        0 bytes
  8899 ;; Hardware stack levels used:    1
  8900 ;; This function calls:
  8901 ;;		Nothing
  8902 ;; This function is called by:
  8903 ;;		_EUSART1_Receive_ISR
  8904 ;;		_EUSART1_DefaultErrorHandler
  8905 ;; This function uses a non-reentrant model
  8906 ;;
  8907                           
  8908                           	psect	text63
  8909  002218                     __ptext63:
  8910                           	opt callstack 0
  8911  002218                     _EUSART1_RxDataHandler:
  8912                           	opt callstack 18
  8913  002218                     
  8914                           ;mcc_generated_files/eusart1.c: 242:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
  8915  002218  0E64               	movlw	low _eusart1RxBuffer
  8916  00221A  2459               	addwf	_eusart1RxHead^0,w,c	;volatile
  8917  00221C  6ED9               	movwf	fsr2l,c
  8918  00221E  6ADA               	clrf	fsr2h,c
  8919  002220  0E02               	movlw	high _eusart1RxBuffer
  8920  002222  22DA               	addwfc	fsr2h,f,c
  8921  002224  CF99 FFDF          	movff	3993,indf2	;volatile
  8922  002228  2A59               	incf	_eusart1RxHead^0,f,c	;volatile
  8923  00222A                     
  8924                           ;mcc_generated_files/eusart1.c: 243:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  8925  00222A  0E63               	movlw	99
  8926  00222C  6459               	cpfsgt	_eusart1RxHead^0,c	;volatile
  8927  00222E  EF1B  F011         	goto	i2u302_41
  8928  002232  EF1D  F011         	goto	i2u302_40
  8929  002236                     i2u302_41:
  8930  002236  EF1F  F011         	goto	i2l3484
  8931  00223A                     i2u302_40:
  8932  00223A                     
  8933                           ;mcc_generated_files/eusart1.c: 244:     {;mcc_generated_files/eusart1.c: 245:         e
      +                          usart1RxHead = 0;
  8934  00223A  0E00               	movlw	0
  8935  00223C  6E59               	movwf	_eusart1RxHead^0,c	;volatile
  8936  00223E                     i2l3484:
  8937                           
  8938                           ;mcc_generated_files/eusart1.c: 247:     eusart1RxCount++;
  8939  00223E  0100               	movlb	0	; () banked
  8940  002240  2B97               	incf	_eusart1RxCount& (0+255),f,b	;volatile
  8941  002242                     
  8942                           ; BSR set to: 0
  8943  002242  0012               	return		;funcret
  8944  002244                     __end_of_EUSART1_RxDataHandler:
  8945                           	opt callstack 0
  8946                           
  8947                           	psect	text64
  8948  000000                     __ptext64:
  8949                           	opt callstack 0
  8950  000000                     
  8951                           	psect	rparam
  8952  0000                     
  8953                           	psect	temp
  8954  00005B                     btemp:
  8955                           	opt callstack 0
  8956  00005B                     	ds	1
  8957  0000                     int$flags	set	btemp
  8958  0000                     wtemp8	set	btemp+1
  8959  0000                     ttemp5	set	btemp+1
  8960  0000                     ttemp6	set	btemp+4
  8961  0000                     ttemp7	set	btemp+8
  8962                           tosu	equ	0xFFF
  8963                           tosh	equ	0xFFE
  8964                           tosl	equ	0xFFD
  8965                           stkptr	equ	0xFFC
  8966                           pclatu	equ	0xFFB
  8967                           pclath	equ	0xFFA
  8968                           pcl	equ	0xFF9
  8969                           tblptru	equ	0xFF8
  8970                           tblptrh	equ	0xFF7
  8971                           tblptrl	equ	0xFF6
  8972                           tablat	equ	0xFF5
  8973                           prodh	equ	0xFF4
  8974                           prodl	equ	0xFF3
  8975                           indf0	equ	0xFEF
  8976                           postinc0	equ	0xFEE
  8977                           postdec0	equ	0xFED
  8978                           preinc0	equ	0xFEC
  8979                           plusw0	equ	0xFEB
  8980                           fsr0h	equ	0xFEA
  8981                           fsr0l	equ	0xFE9
  8982                           wreg	equ	0xFE8
  8983                           indf1	equ	0xFE7
  8984                           postinc1	equ	0xFE6
  8985                           postdec1	equ	0xFE5
  8986                           preinc1	equ	0xFE4
  8987                           plusw1	equ	0xFE3
  8988                           fsr1h	equ	0xFE2
  8989                           fsr1l	equ	0xFE1
  8990                           bsr	equ	0xFE0
  8991                           indf2	equ	0xFDF
  8992                           postinc2	equ	0xFDE
  8993                           postdec2	equ	0xFDD
  8994                           preinc2	equ	0xFDC
  8995                           plusw2	equ	0xFDB
  8996                           fsr2h	equ	0xFDA
  8997                           fsr2l	equ	0xFD9
  8998                           status	equ	0xFD8


Data Sizes:
    Strings     383
    Constant    0
    Data        20
    BSS         500
    Persistent  22
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      90
    BANK0           160     44     150
    BANK1           256      0     232
    BANK2           256      0     200
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), STR_5(CODE[9]), 
		 -> STR_4(CODE[12]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), STR_5(CODE[9]), 
		 -> STR_4(CODE[12]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_11(CODE[31]), STR_10(CODE[34]), STR_9(CODE[35]), STR_8(CODE[55]), 
		 -> STR_7(CODE[53]), STR_6(CODE[29]), STR_3(CODE[43]), STR_2(CODE[25]), 
		 -> STR_1(CODE[57]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1765_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_11(CODE[31]), STR_10(CODE[34]), STR_9(CODE[35]), STR_8(CODE[55]), 
		 -> STR_7(CODE[53]), STR_6(CODE[29]), STR_3(CODE[43]), STR_2(CODE[25]), 
		 -> STR_1(CODE[57]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_11(CODE[31]), STR_10(CODE[34]), STR_9(CODE[35]), STR_8(CODE[55]), 
		 -> STR_7(CODE[53]), STR_6(CODE[29]), STR_3(CODE[43]), STR_2(CODE[25]), 
		 -> STR_1(CODE[57]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 57
		 -> STR_11(CODE[31]), STR_10(CODE[34]), STR_9(CODE[35]), STR_8(CODE[55]), 
		 -> STR_7(CODE[53]), STR_6(CODE[29]), STR_3(CODE[43]), STR_2(CODE[25]), 
		 -> STR_1(CODE[57]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), STR_5(CODE[9]), STR_4(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), STR_5(CODE[9]), STR_4(CODE[12]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), STR_5(CODE[9]), STR_4(CODE[12]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    EUSART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), 

    EUSART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), 

    EUSART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultErrorHandler(), 

    EUSART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultFramingErrorHandler(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_Receive_ISR(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _main->_PrintModbus
    _EUSART2_Initialize->_EUSART2_SetErrorHandler
    _EUSART2_Initialize->_EUSART2_SetFramingErrorHandler
    _EUSART2_Initialize->_EUSART2_SetOverrunErrorHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART2_Write
    _abs->___aomod
    _atoi->_isspace

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_PrintModbus
    _PrintModbus->_printf
    _InitialiseString->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   50394
                                             85 COMRAM     1     1      0
                                             43 BANK0      1     1      0
                  _AddRxBuffToModBus
                        _ClearRxBuff
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                   _InitialiseString
                        _PrintModbus
                             _RXMode
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     980
                 _EUSART1_Initialize
                 _EUSART2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     490
            _EUSART2_SetErrorHandler
     _EUSART2_SetFramingErrorHandler
     _EUSART2_SetOverrunErrorHandler
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetOverrunErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetFramingErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetErrorHandler                              2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     490
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _RXMode                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PrintModbus                                          3     3      0   24679
                                             84 COMRAM     1     1      0
                                             41 BANK0      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _InitialiseString                                     0     0      0   24577
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              12     4      8   24577
                                             29 BANK0     12     4      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   23662
                                             82 COMRAM     2     2      0
                                             23 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           45    39      6   23099
                                             72 COMRAM    10     4      6
                                              0 BANK0     23    23      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    5707
                                             33 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     412
                                             10 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     161
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     161
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     161
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    5203
                                             33 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     311
                                              4 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     314
                                              4 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2139
                                             15 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    5802
                                             33 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4153
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     242
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1691
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1290
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0      66
                                              5 COMRAM     1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (10) _EUSART2_Write                                       1     1      0      44
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1428
                                             11 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     237
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     587
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         1     1      0      24
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ClearRxBuff                                          3     3      0      47
                                              4 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _AddRxBuffToModBus                                    3     3      0      47
                                              4 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          4     4      0       0
                                              0 COMRAM     4     4      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                _EUSART2_Receive_ISR *
               _EUSART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (12) _EUSART2_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART2_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART2_DefaultErrorHandler *
 _EUSART2_DefaultFramingErrorHandler *
 _EUSART2_DefaultOverrunErrorHandler *
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART2_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART2_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART2_DefaultErrorHandler                         0     0      0       0
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART2_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AddRxBuffToModBus
   _ClearRxBuff
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _InitialiseString
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _PrintModbus
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _RXMode
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetErrorHandler
       _EUSART2_SetFramingErrorHandler
       _EUSART2_SetOverrunErrorHandler
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _EUSART2_Receive_ISR *
     Absolute function(Fake) *
     _EUSART2_DefaultErrorHandler *
       _EUSART2_RxDataHandler
     _EUSART2_DefaultFramingErrorHandler *
     _EUSART2_DefaultOverrunErrorHandler *
     _EUSART2_RxDataHandler *
   _EUSART2_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      C8      10       78.1%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      E8       8       90.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2C      96       5       93.8%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2A0       6        0.0%
DATA                 0      0     2A0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Mar 02 22:28:26 2021

                      _eusart1TxBufferRemaining 00E0                          ?_EUSART2_RxDataHandler 0001  
                                   __CFG_CP$OFF 000000                                              l81 1B52  
                           ___wmul@multiplicand 0007                                     __CFG_LVP$ON 000000  
                                           l121 22C6                                             l124 22DE  
                                           l127 22AC                                             l320 1E14  
                                           l144 239C                                             l321 1E2C  
                                           l330 2378                                             l324 1E5C  
                                           l503 2364                                             l512 2346  
                                           l506 235A                                             l362 2328  
                                           l515 2350                                             l371 231E  
                                           l452 22F6                                             l700 0EEC  
                                           l509 236E                                             l365 233C  
                                           l702 0EF4                                             l446 1C4C  
                                           l711 0FB4                                             l359 2332  
                                           l712 0FFC                                             l552 1CC8  
                                           l368 2314                                             l296 1BD0  
                                           l465 1EB4                                             l721 0CA2  
                                           l801 1D98                                             l802 1DA0  
                                           l570 2384                                             l731 0E6A  
                                           l723 0CAA                                             l716 1004  
                                           l572 2386                                             l805 2290  
                                           l662 1792                                             l583 1FF6  
                                           l736 09CC                                             l568 2382  
                                           l593 1A2E                                             l665 17D4  
                                           l673 0754                                             l761 0C68  
                                           l745 0A6A                                             l738 09D4  
                                           l667 180E                                             l675 075C  
                                           l932 148A                                             l693 0992  
                                           l790 06B2                                             l919 1326  
                                           l759 0C06                                             l775 0220  
                                           l599 1D3C                                    __CFG_CPD$OFF 000000  
        __end_of_EUSART2_SetFramingErrorHandler 2334         __size_of_EUSART2_SetFramingErrorHandler 000A  
                _EUSART2_SetFramingErrorHandler 232A                                             _abs 20C8  
                                           _pad 174E                         __size_of_PMD_Initialize 001C  
                                           tosl 000FFD                                             wreg 000FE8  
                                  __CFG_ZCD$OFF 000000                                            ?_abs 0017  
                                          l3000 13D4                                            l3010 144A  
                                          l3002 1402                                            l1250 167C  
                                          l1243 165C                                            l3012 146A  
                                          l3004 1422                                            l3100 0894  
                                          l3020 15B8                                            l1260 174C  
                                          l1253 172C                                            l3006 1434  
                                          l3102 08AE                                            l3110 090E  
                                          l3030 1622                                            l3022 15C0  
                                          l1511 1196                                            l3008 143A  
                                          l3120 0952                                            l3112 0920  
                                          l3104 08CC                                            l3032 1642  
                                          l3024 15D4                                            l3016 158E  
                                          l3040 169C                                            l3200 0E34  
                                          l4000 14FC                                            l1514 119E  
                                          l3122 095A                                            l3114 092E  
                                          l3106 08E6                                            l3130 0E7E  
                                          l3034 1644                                            l3026 15E2  
                                          l3018 159A                                            l3050 1714  
                                          l3042 16A4                                            l3202 0E42  
                                          l3210 09A6                                            l4010 1524  
                                          l4002 150E                                            l1523 21EA  
                                          l1531 1F5C                                            l3060 1F52  
                                          l3300 1116                                            l3116 0934  
                                          l3124 096A                                            l3108 0900  
                                          l3140 0EBC                                            l3132 0E86  
                                          l3036 1656                                            l3028 15F4  
                                          l3052 1726                                            l3044 16B8  
                                          l3220 0A1A                                            l3212 09C0  
                                          l4004 1512                                            l4012 1546  
                                          l1517 2142                                            l3062 1F56  
                                          l3054 1F0C                                            l3118 0946  
                                          l3070 06FC                                            l3150 0F2E  
                                          l3142 0ECA                                            l3134 0E98  
                                          l3046 16C6                                            l3038 167E  
                                          l3230 0A5E                                            l3222 0A24  
                                          l3214 09EA                                            l3206 0994  
                                          l4014 155E                                            l4006 1516  
                                          l3056 1F10                                            l3304 1156  
                                          l1480 20FE                                            l1552 1AC4  
                                          l1560 2082                                            l3080 0764  
                                          l3072 071C                                            l3160 0F96  
                                          l3152 0F4C                                            l3136 0EA0  
                                          l3128 0E6C                                            l3048 16F4  
                                          l3240 0AEA                                            l3224 0A2A  
                                          l3216 09F2                                            l3208 09A4  
                                          l3400 0548                                            l3320 0170  
                                          l4016 1562                                            l4008 151C  
                                          l1537 21B2                                            l3058 1F24  
                                          l3306 1168                                            l3090 079C  
                                          l3082 0776                                            l3074 072C  
                                          l3066 06B4                                            l3154 0F58  
                                          l3146 0F16                                            l3138 0EB4  
                                          l3170 0C6A                                            l3250 0B2C  
                                          l3242 0AFC                                            l3234 0A9E  
                                          l3226 0A32                                            l3218 0A12  
                                          l3402 056E                                            l3322 0174  
                                          l3314 012A                                            l1483 2106  
                                          l3308 117A                                            l3092 07A2  
                                          l3084 0784                                            l3076 072E  
                                          l3068 06D4                                            l3164 0FC6  
                                          l3156 0F8E                                            l3148 0F2A  
                                          l3180 0CDA                                            l3172 0C7A  
                                          l3260 0BF8                                            l3236 0AB0  
                                          l3244 0B10                                            l3228 0A4E  
                                          l3252 0B8A                                            l3404 0586  
                                          l3412 060C                                            l3340 01A6  
                                          l3332 019A                                            l3324 0180  
                                          l3316 0150                                            l3500 1B28  
                                          l1573 1FAC                                            l3094 0824  
                                          l3086 078A                                            l3078 0748  
                                          l3166 0FDA                                            l3158 0F92  
                                          l3190 0D6C                                            l3182 0CE4  
                                          l3174 0C7C                                            l3262 0C14  
                                          l3254 0BA6                                            l3246 0B20  
                                          l3430 06A0                                            l3414 0632  
                                          l3422 0660                                            l3406 0594  
                                          l3326 0182                                            l3350 020E  
                                          l3318 015E                                            l3510 1B36  
                                          l3502 1B2A                                            l1583 1DFE  
                                          l1567 226A                                            l3280 1040  
                                          l3272 1006                                            l3096 082A  
                                          l3088 0792                                            l3168 0FDE  
                                          l3184 0CEA                                            l3192 0DD0  
                                          l3176 0C96                                            l3264 0C1A  
                                          l3256 0BC4                                            l3248 0B26  
                                          l3424 066E                                            l3416 0640  
                                          l3408 05D0                                            l3360 029A  
                                          l3352 022E                                            l3344 01AC  
                                          l3336 01A0                                            l3328 0194  
                                          l3520 22C8                                            l3512 1B38  
                                          l3504 1B2C                                            l4090 10C8  
                                          l3290 1098                                            l3282 1078  
                                          l3274 101A                                            l3098 0830  
                                          l3194 0DE2                                            l3186 0D60  
                                          l3178 0CD2                                            l1578 1DF6  
                                          l3266 0C2A                                            l3258 0BDE  
                                          l3418 0654                                            l3370 0320  
                                          l3362 02A8                                            l3354 0230  
                                          l3530 1BF6                                            l3522 1BD2  
                                          l3450 232A                                            l3514 1B3A  
                                          l3506 1B2E                                            l3292 10A0  
                                          l3284 107C                                            l3276 101E  
                                          l2900 17F6                                            l3196 0E00  
                                          l3188 0D66                                            l3268 0C40  
                                          l3364 02C8                                            l3372 0332  
                                          l3356 0256                                            l3348 01B8  
                                          l3428 067A                                            l3540 1C12  
                                          l3532 1BFA                                            l3524 1BD6  
                                          l3452 2320                                            l3516 239A  
                                          l3508 1B34                                            l1589 217A  
                                          l3294 10A8                                            l3278 1022  
                                          l2830 1E24                                            l3198 0E1A  
                                          l3390 047A                                            l3382 03FE  
                                          l3374 0358                                            l3366 02D6  
                                          l3358 028C                                            l3470 235C  
                                          l3542 1C1E                                            l3534 1BFE  
                                          l3526 1BE2                                            l3454 2334  
                                          l3446 2316                                            l3550 1B64  
                                          l3518 2292                                            l3296 10DE  
                                          l3288 1082                                            l2904 20C8  
                                          l2840 1E56                                            l2832 1E2E  
                                          l2912 2108                                            l2920 1DD8  
                                          l3392 04A0                                            l3384 0424  
                                          l3376 037E                                            l4088 01E0  
                                          l3472 2352                                            l3544 1C48  
                                          l3536 1C02                                            l3528 1BF2  
                                          l3448 230C                                            l3560 1B86  
                                          l3552 1B74                                            l3730 1FC2  
                                          l3650 22E0                                            l2930 226C  
                                          l2906 20E2                                            l2834 1E40  
                                          l2842 1E58                                            l2826 1E02  
                                          l2850 1A54                                            l2922 1DEA  
                                          l3394 04EA                                            l3386 045A  
                                          l3378 03C6                                            l3474 2366  
                                          l3466 2348                                            l3538 1C06  
                                          l3562 1B8A                                            l3554 1B7A  
                                          l3546 1B54                                            l3740 19C0  
                                          l3732 1FD2                                            l3660 1E90  
                                          l2932 2288                                            l2940 11B2  
                                          l2836 1E42                                            l2828 1E02  
                                          l2844 2372                                            l2852 1A5E  
                                          l2860 2040                                            l2908 217C  
                                          l2916 1DA2                                            l3468 233E  
                                          l3564 1B96                                            l3556 1B7E  
                                          l3548 1B58                                            l3750 1A0E  
                                          l3742 19C4                                            l3734 1FD6  
                                          l3670 1EAE                                            l3662 1E92  
                                          l3654 1E5E                                            l2926 21B4  
                                          l2950 1208                                            l2942 11D2  
                                          l2838 1E52                                            l2854 1A7C  
                                          l2846 1A30                                            l2862 204C  
                                          l2870 1F6A                                            l3398 0522  
                                          l3566 1BA2                                            l3558 1B82  
                                          l3494 1AC6                                            l3590 22BA  
                                          ?_pad 0017                                            l3744 19C8  
                                          l3736 1990                                            l3728 1FAE  
                                          l3672 1EB2                                            l3664 1EA2  
                                          l3656 1E5E                                            l2960 125C  
                                          l2952 1214                                            l2944 11D6  
                                          l2936 11A0                                            l2856 1AB2  
                                          l2848 1A42                                            l2864 205E  
                                          l2872 1F6E                                            l3568 1BCC  
                                          l3496 1AEE                                            l3592 22BE  
                                          l3584 22AE                                            l3754 1A24  
                                          l3746 19E8                                            l3738 19A4  
                                          l3666 1EA6                                            l3658 1E70  
                                          l2970 12D0                                            l2962 126E  
                                          l2954 1232                                            l2946 11E4  
                                          l2938 11A4                                            l2866 2062  
                                          l2874 1FA0                                            l2890 178A  
                                          l2882 174E                                            l3498 1AFE  
                                          l3594 22C2                                            l3586 22B2  
                                          l3748 19FC                                            l3668 1EAA  
                                          l2964 129C                                            l2956 123A  
                                          l2972 12D6                                            l2948 1204  
                                          l2980 1328                                            l2868 1F5E  
                                          l2892 179E                                            l2884 175C  
                                          l3940 1D54                                            l3588 22B6  
                                          l2974 12E6                                            l2966 12BC  
                                          l2958 124E                                            l2990 136C  
                                          l2982 132C                                            l2894 17B2  
                                          l2886 1770                                            l2878 2144  
                                          l3942 1D7A                                            l3950 1C4E  
                                          l2976 1306                                            l2968 12BE  
                                          l2992 138C                                            l2984 133A  
                                          l2896 17B6                                            l2888 177E  
                                          l3936 1D3E                                            l3944 2244  
                                          l3960 1D10                                            l3952 1CCA  
                                          l2994 13AA                                            l2986 135A  
                                          l2898 17E2                                            l3938 1D46  
                                          l3946 224E                                            l3962 1D16  
                                          l3954 1CCA                                            l3970 1492  
                                          l2996 13B2                                            l2988 135E  
                                          l3964 1D34                                            l3956 1CD8  
                                          l3980 149C                                            l3972 1494  
                                          l2998 13C6                                            l3958 1CE6  
                                          l3982 14A0                                            l3974 1496  
                                          l3966 148C                                            l3992 14C6  
                                          l3984 14A4                                            l3976 1498  
                                          l3968 1490                                            l3994 14DE  
                                          l3986 14A8                                            l3978 149A  
                                          l3996 14E2                                            l3988 14AE  
                                          l3998 14F6                                            STR_1 FE7F  
                                          STR_2 FFD0                                            STR_3 FF24  
                                          STR_4 FFE9                                            STR_5 FFF5  
                                          STR_6 FFB3                                            STR_7 FEEF  
                                          STR_8 FEB8                                            STR_9 FF4F  
                                          u2000 21AE                                            u2010 213C  
                                          u2011 2136                                            u2020 213E  
                                          u2101 120E                                            u2110 1232  
                                          u2030 1DD2                                            u2111 122E  
                                          u2031 1DCC                                            u2120 125C  
                                          u2200 144A                                            u2040 1DD4  
                                          u3000 0632                                            u2121 1258  
                                          u2201 1446                                            u3001 062E  
                                          u2130 129C                                            u2050 1DEA  
                                          u2131 1298                                            u2211 1594  
                                          u2051 1DE6                                            u2060 21E4  
                                          u2140 12E6                                            u2300 06E4  
                                          u2220 15B8                                            u2061 21DE  
                                          u2141 12E2                                            u2301 06DE  
                                          u2221 15B4                                            _LATA 000F83  
                                          u2070 21E6                                            u2150 133A  
                                          u2310 06E6                                            u2230 15E2  
                                          _LATB 000F84                                            u2151 1336  
                                          u2231 15DE                                            _LATC 000F85  
                                          u2080 11B2                                            u2160 136C  
                                          u2400 0900                                            u2320 06FC  
                                          u2240 1622                                            _LATD 000F86  
                                          u2081 11AE                                            u2161 1368  
                                          u2401 08FC                                            u2321 06F8  
                                          u2241 161E                                            _LATE 000F87  
                                          u2090 11E4                                            u2170 13AA  
                                          u2410 090E                                            u2330 072C  
                                          u2250 169C                                            u2091 11E0  
                                          u2171 13A6                                            u2411 090A  
                                          u2331 0728                                            u2251 1698  
                                          u3300 19E8                                            u3140 22F4  
                                          u2180 13D4                                            u2420 0920  
                                          u2340 0748                                            u2500 0F4C  
                                          u2260 16C6                                            u3301 19E4  
                                          u3141 22EE                                            u2181 13D0  
                                          u2421 091C                                            u2341 0744  
                                          u2501 0F48                                            u2261 16C2  
                                          u3310 19FC                                            u3150 22F6  
                                          u2190 1402                                            u2430 092E  
                                          u2350 0776                                            u2510 0F7A  
                                          u2270 16F4                                            u3311 19F8  
                                          u2191 13FE                                            u2431 092A  
                                          u2351 0772                                            u2271 16F0  
                                          u3320 1A20                                            u3160 1E70  
                                          u2280 1F24                                            u2440 0946  
                                          u2360 0784                                            u2520 0FB4  
                                          u2600 0E34                                            u3321 1A1C  
                                          u3161 1E6C                                            u2281 1F20  
                                          u2441 0942                                            u2361 0780  
                                          u2521 0FB0                                            u2601 0E30  
                                          u3170 1EA2                                            u2290 1F52  
                                          u2370 08AE                                            u2530 0FC2  
                                          u2610 0E42                                            u3171 1E9E  
                                          u2291 1F4E                                            u2371 08AA  
                                          u2531 0FBE                                            u2451 0E76  
                                          u2611 0E3E                                            u1820 1E14  
                                          u1900 1F90                                            u2380 08CC  
                                          u2540 0FFC                                            u2460 0E98  
                                          u2700 0AE6                                            u2620 09A4  
                                          u1821 1E10                                            u2381 08C8  
                                          u2541 0FF8                                            u2517 0F70  
                                          u2461 0E94                                            u2621 09A0  
                                          u1830 1E24                                            u1910 1FA0  
                                          u2390 08E6                                            u2470 0ECA  
                                          u2550 0C7A                                            u2710 0AFC  
                                          u2630 09C0                                            u1831 1E20  
                                          u1911 1F9C                                            u2391 08E2  
                                          u2471 0EC6                                            u2551 0C76  
                                          u2711 0AF8                                            u2631 09BC  
                                          u2800 1078                                            u1840 1E52  
                                          u2480 0EE8                                            u2560 0C96  
                                          u1920 2174                                            u2720 0B64  
                                          u2640 09EA                                            u3600 1534  
                                          u2801 1074                                            u1841 1E4E  
                                          u2481 0EE4                                            u2561 0C92  
                                          u1921 216E                                            u2641 09E6  
                                          u3601 152E                                            u3290 1FF6  
                                          u2810 1094                                            u1850 1A42  
                                          u2490 0F12                                            u2570 0DE2  
                                          u1930 2176                                            u2730 0BA6  
                                          u2650 0A4E                                            u3610 155E  
                                          u3291 1FF2                                            u2811 1090  
                                          u1851 1A3E                                            u1907 1F86  
                                          u2491 0F0E                                            u2571 0DDE  
                                          u2731 0BA2                                            u2651 0A4A  
                                          u3611 155A                                            u2820 1150  
                                          u1860 1A54                                            u1940 175C  
                                          u2580 0E00                                            u2740 0BC4  
                                          u2660 0A98                                            u2900 029A  
                                          u3620 1572                                            u2821 114A  
                                          u1861 1A50                                            u1941 1758  
                                          u2581 0DFC                                            u2741 0BC0  
                                          u2725 0B52                                            u2661 0A92  
                                          u2901 0296                                            u3621 156C  
                                          u2830 1152                                            u1870 1A7C  
                                          u1950 177E                                            u2590 0E1A  
                                          u2750 0BDE                                            u2670 0A9A  
                                          u2910 0318                                            u3550 1D98  
                                          u3606 1536                                            u1871 1A78  
                                          u1951 177A                                            u2591 0E16  
                                          u2751 0BDA                                            u2911 0312  
                                          u3551 1D94                                            u2840 1168  
                                          u1880 1AB2                                            u1960 17D4  
                                          u2760 0BF8                                            u2680 0AB0  
                                          u2920 031A                                            u3560 1D34  
                                          u2841 1164                                            u1881 1AAE  
                                          u1961 17D0                                            u2761 0BF4  
                                          u2681 0AAC                                            u3561 1D30  
                                          u2850 117A                                            u1890 2082  
                                          u1970 17E2                                            u2770 0C06  
                                          u2690 0AE4                                            u2930 0332  
                                          u3626 1574                                            u3570 14C2  
                                          u2851 1176                                            u1891 207E  
                                          u1971 17DE                                            u2771 0C02  
                                          u2691 0ADE                                            u2931 032E  
                                          u3571 14BE                                            u1980 20E2  
                                          u2780 0C14                                            u2940 0358  
                                          u2860 0150                                            u3580 14F6  
                                          _PMD0 000EE1                                            u1981 20DE  
                                          u2781 0C10                                            u2941 0354  
                                          u2861 014C                                            u3581 14F2  
                                          _PMD1 000EE2                                            u2790 1040  
                                          u1990 21AC                                            u2950 037E  
                                          u2870 0220                                            u3590 150E  
                                          _PMD2 000EE3                                            u2791 103C  
                                          u1991 21A6                                            u2951 037A  
                                          u2871 021C                                            u3591 150A  
                                          _PMD3 000EE4                                            u2960 0424  
                                          u2880 022E                                            _PMD4 000EE5  
                                          u2961 0420                                            u2881 022A  
                                          _PMD5 000EE6                                            u2970 04A0  
                                          u2890 0256                                            u2971 049C  
                                          u2891 0252                                            u2980 0548  
                                          u2981 0544                                            u2990 056E  
                                          u2991 056A                                            _WPUA 000F10  
                                          _WPUB 000F18                                            _WPUC 000F20  
                                          _WPUD 000F25                                            _WPUE 000F2D  
                         ??_EUSART2_Receive_ISR 0001                                   __CFG_FCMEN$ON 000000  
                                 _EUSART2_Write 1E00                                            abs@a 0017  
                                          _dbuf 01C8                                            _atoi 1006  
                                          _main 148C                                            _dtoa 06B4  
                                 ?_EUSART1_Read 0001                                            _loop 0092  
                                          _prec 008C                                            _nout 0088  
                                          pad@i 001E                                            pad@p 001B  
                                          fsr0h 000FEA                                            fsr1h 000FE2  
                                          indf0 000FEF                                            fsr2h 000FDA  
                                          fsr0l 000FE9                                            indf1 000FE7  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 0020                                            fsr2l 000FD9  
                                          _stoa 0E6C                                            btemp 005B  
                                          _utoa 0C6A                                            _xtoa 0994  
                                          prodh 000FF4                                            prodl 000FF3  
                                          start 0126                    __end_of_EUSART2_Transmit_ISR 2040  
                                 __CFG_CSWEN$ON 000000                  fp__EUSART1_DefaultErrorHandler 0000  
                                  ___param_bank 000000                                   __CFG_SCANE$ON 000000  
                                         ??_abs 0019                                           ??_pad 001D  
                __size_of_OSCILLATOR_Initialize 0018                   __end_of_OSCILLATOR_Initialize 22E0  
                         _eusart1RxStatusBuffer 0164                                 __end_of___aodiv 1328  
                                         ?_atoi 000C                                           ?_main 0001  
                                         ?_dtoa 0022                                 __end_of___aomod 148C  
                                         STR_10 FF72                                           STR_11 FF94  
                                 __CFG_WDTE$OFF 000000                                           ?_stoa 0010  
                                         ?_utoa 0022                                 __end_of___lodiv 167E  
                                         ?_xtoa 0022                                 __end_of___lomod 174E  
                                __CFG_DEBUG$OFF 000000                                           i2l150 0064  
                                         i2l152 009E                                           i2l153 0112  
                                         i2l154 00D8                                           i2l500 2398  
                                         i2l333 203A                                           i2l350 239E  
                                         i2l343 18CE                                           i2l159 0112  
                                         i2l336 203E                                           i2l353 2380  
                                         i2l347 2216                                           i2l356 238C  
                                         i2l480 20C6                                           i2l491 2242  
                                         i2l477 20C2                                           i2l494 23A0  
                                         i2l487 198E                                           i2l497 2392  
                                         _OSCEN 000EDC                                    vfpfcnvrt@fmt 004B  
                                  vfpfcnvrt@llu 00AF                                           _TRISA 000F88  
                                         _TRISB 000F89                                           _TRISC 000F8A  
                                         _TRISD 000F8B                                           _TRISE 000F8C  
                                         _Debug 0095                                   __CFG_WRT0$OFF 000000  
                                 __CFG_WRT1$OFF 000000                                   __CFG_WRT2$OFF 000000  
                                 __CFG_WRT3$OFF 000000                            _EUSART1_Transmit_ISR 2084  
                                __CFG_EBTR0$OFF 000000                                  __CFG_EBTR1$OFF 000000  
                                __CFG_EBTR2$OFF 000000                                  __CFG_EBTR3$OFF 000000  
                                 __CFG_WRTB$OFF 000000                                   __CFG_WRTC$OFF 000000  
                                 __CFG_WRTD$OFF 000000                                           _data1 00E2  
                                __CFG_EBTRB$OFF 000000                                           _flags 0057  
                                         _fputc 1A30                                 __end_of_isalpha 2144  
                                         _fputs 2040                                 __end_of_isdigit 21EC  
                            __CFG_MCLRE$EXTMCLR 000000                                           atoi@n 0019  
                                         pad@fp 0017                                           atoi@s 000C  
                                         _width 008A                                           _putch 2370  
                                         dtoa@d 0024                                           dtoa@i 0044  
                                         dtoa@n 003C                                           dtoa@p 0036  
                                         dtoa@s 003A                                           dtoa@w 0038  
                               __end_of_islower 217C                                 __end_of_isspace 1F5E  
                                ?_EUSART2_Write 0001                                 __end_of_isupper 21B4  
                                         pclath 000FFA                                           tablat 000FF5  
                                   _ClearRxBuff 1FAE                                  ??_EUSART1_Read 0005  
                                         plusw1 000FE3                                           plusw2 000FDB  
                                         stoa@i 001C                                           stoa@l 0024  
                                         stoa@p 0022                                           stoa@s 0012  
                                         stoa@w 001E                                           ttemp5 005C  
                                         ttemp6 005F                                           ttemp7 0063  
                                         utoa@d 0024                                           utoa@i 0040  
                                         utoa@n 0038                                           utoa@p 0034  
                                         utoa@w 0036                                           status 000FD8  
                                    _ModDataCnt 008E                                           wtemp8 005C  
                                         xtoa@c 0047                                           xtoa@d 0024  
                                         xtoa@i 0045                                           xtoa@n 003D  
                                         xtoa@p 0039                                           xtoa@w 003B  
                                         xtoa@x 002C                                 __end_of_toupper 1E00  
                              ___lodiv@dividend 0005           fp__EUSART1_DefaultFramingErrorHandler 0000  
    __end_of_EUSART1_DefaultFramingErrorHandler 23A2     __size_of_EUSART1_DefaultFramingErrorHandler 0002  
          ??_EUSART1_DefaultFramingErrorHandler 0001             ?_EUSART1_DefaultFramingErrorHandler 0001  
            _EUSART1_DefaultFramingErrorHandler 23A0           __end_of_EUSART2_SetTxInterruptHandler 2316  
        __size_of_EUSART2_SetTxInterruptHandler 000A                   _EUSART2_SetTxInterruptHandler 230C  
                                  _toupper$1816 0011                                 __initialization 1EB6  
                                  __end_of_atoi 11A0                      __end_of_EUSART1_Initialize 1C4E  
                                  __end_of_main 158E                                    __end_of_dtoa 0994  
                     __size_of_InitialiseString 007C                                    __end_of_stoa 1006  
                                  __end_of_utoa 0E6C                                    __end_of_xtoa 0C6A  
                   ?_INTERRUPT_InterruptManager 0001                                          ??_atoi 000E  
                                        ??_main 0056                                          ??_dtoa 002C  
                                        ??_stoa 0014                                          ??_utoa 002C  
                                        ??_xtoa 002D                                   __activetblptr 000003  
           __end_of_EUSART2_DefaultErrorHandler 238E                     _EUSART2_DefaultErrorHandler 2388  
                                    _ModbusData 0100                           ?_EUSART1_Transmit_ISR 0001  
                              ___lodiv@quotient 0015                      __end_of_EUSART2_Initialize 1BD2  
                      _eusart2TxBufferRemaining 00E1                                          ?_fputc 0007  
                                        ?_fputs 0010                                          _ANSELA 000F11  
                                        ?_putch 0001                                          _ANSELB 000F19  
                                        _ANSELC 000F21                                          _ANSELD 000F26  
                                        _ANSELE 000F2E                                          _RC1REG 000F99  
                                        _RC2REG 000E99                                          _RC1STA 000F9D  
                                        _RC2STA 000E9D                                          _RB6PPS 000EF5  
                                        _ODCONA 000F0F                                          _ODCONB 000F17  
                                        _ODCONC 000F1F                                          _RC6PPS 000EFD  
                                        _ODCOND 000F24                                          _ODCONE 000F2C  
                  __size_of_EUSART1_is_rx_ready 0018                                  __CFG_WDTCCS$SC 000000  
                                        i2l3700 20A8                                          i2l3460 21FE  
                                        i2l3620 200A                                          i2l3710 18EE  
                                        i2l3702 20B8                                          i2l3462 220E  
                                        i2l3630 1810                                          i2l3622 201C  
                                        i2l3480 222A                                          i2l3720 1950  
                                        i2l3712 18FE                                          i2l3704 20BC  
                                        i2l3464 2212                                          i2l3456 21EC  
                                        i2l3640 1868                                          i2l3632 1820  
                                        i2l3624 2020                                          i2l3482 223A  
                                        i2l3722 196C                                          i2l3714 1918  
                                        i2l3706 18D0                                          i2l3458 21FC  
                                        i2l3570 237A                                          i2l3642 1878  
                                        i2l3634 1830                                          i2l3626 2030  
                                        i2l3618 1FF8                                          i2l3484 223E  
                                        i2l3476 2218                                          i2l3724 198A  
                                        i2l3716 1926                                          i2l3708 18E0  
                                        i2l3572 2388                                          i2l3644 1890  
                                        i2l3636 1840                                          i2l3628 2034  
                                        i2l3478 2228                                          i2l3574 238E  
                                        i2l3718 1936                                          i2l3646 18AC  
                                        i2l3638 1858                                          i2l3576 2394  
                                        i2l3648 18CA                                          _INLVLA 000F0D  
                                        i2l3770 001A                                          _INLVLB 000F15  
                                        _INLVLC 000F1D                                          i2l3780 0080  
                                        i2l3772 0028                                          _INLVLD 000F22  
                                        _INLVLE 000F2A                                          i2l3694 2084  
                                        i2l3782 00AC                                          i2l3774 0038  
                                        i2l3696 2096                                          i2l3784 00BA  
                                        i2l3776 0046                                          i2l3698 20A6  
                                        i2l3786 00E6                                          i2l3778 0072  
                                        i2l3788 00F4                                          _TABLAT 000FF5  
                                        _OSCFRQ 000EDE                                   vfpfcnvrt@done 00AA  
                                        _NVMDAT 000F80                                          _RX1PPS 000EB5  
                                        _RX2PPS 000E8D                                          _TX1REG 000F9A  
                                        _TX2REG 000E9A                                          _TX1STA 000F9E  
                                        _TX2STA 000E9E                                          _RXMode 2382  
                                __CFG_PWRTE$OFF 000000                                  __CFG_XINST$OFF 000000  
                                  vfprintf@cfmt 0053                       __CFG_RSTOSC$HFINTOSC_1MHZ 000000  
                            AddRxBuffToModBus@i 0006                                       ??___aodiv 0015  
                                     ??___aomod 0015                                          ___wmul 226C  
                                __CFG_STVREN$ON 000000                                       ??___lodiv 0015  
                                     ??___lomod 0015                        ?_EUSART1_SetErrorHandler 0005  
                                        clear_0 1EDC                                          clear_1 1EE8  
                                        clear_2 1EF4                                          _rxData 0200  
                   _EUSART2_FramingErrorHandler 00D6                                          _printf 2244  
                                        pad@buf 0019                ??_EUSART1_SetOverrunErrorHandler 0007  
               ?_EUSART1_SetOverrunErrorHandler 0005                                          dtoa@fp 0022  
                                        _strlen 1F5E                                   _ExpectedBytes 00F4  
                                        fputc@c 0007                                  _PMD_Initialize 2292  
                                        fputs@c 0014                                          fputs@i 0015  
                                        fputs@s 0010                                       ??_isalpha 0007  
                                     ??_isdigit 0007                                   ??_PrintModbus 0055  
                                     ??_islower 0007                                    __mediumconst FE7E  
                                     ??_isspace 0007                                          tblptrh 000FF7  
                                     ??_isupper 0007                                          tblptrl 000FF6  
                                        tblptru 000FF8                            _EUSART2_Transmit_ISR 1FF8  
                                        stoa@cp 0020                                          stoa@fp 0010  
                              __end_of_vfprintf 1DA2                                          utoa@fp 0022  
                               ??_EUSART2_Write 0005                                          xtoa@fp 0022  
                               _eusart1RxBuffer 0264                                       ??_toupper 000D  
                 __size_of_INTERRUPT_Initialize 0004                                 _eusart2RxBuffer 0078  
                               _eusart1TxBuffer 0060                               _SYSTEM_Initialize 22AE  
                               _eusart2TxBuffer 0080                                      __accesstop 0060  
                       __end_of__initialization 1F02                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                         ??_EUSART2_RxDataHandler 0001  
                __size_of_EUSART1_RxDataHandler 002C                   __end_of_EUSART1_RxDataHandler 2244  
                                __pcstackCOMRAM 0001                                    __pidataBANK0 22F8  
                           ??_SYSTEM_Initialize 0007                                   __end_of_fputc 1AC6  
                                 __end_of_fputs 2084                  ?_EUSART2_SetTxInterruptHandler 0005  
                                 __end_of_putch 237A                          __end_of_PMD_Initialize 22AE  
                          __end_of_EUSART1_Read 1EB6                          ??_EUSART1_Transmit_ISR 0001  
                      ?_EUSART2_SetErrorHandler 0005                           ?_EUSART2_Transmit_ISR 0001  
                   __end_of_EUSART1_Receive_ISR 1990                                         ??_fputc 000B  
                     __end_of_SYSTEM_Initialize 22C8                                         ??_fputs 0014  
                                       ??_putch 0006                                   _eusart1RxHead 0059  
                                 _eusart1TxHead 009A                                   _eusart2RxHead 005A  
                                 _eusart1RxTail 0098                                   _eusart2TxHead 009F  
                                    __pbssBANK0 0060                                      __pbssBANK1 0100  
                                    __pbssBANK2 0200                                   _eusart2RxTail 009D  
                                 _eusart1TxTail 0099               _EUSART1_TxDefaultInterruptHandler 00DA  
                                 _eusart2TxTail 009E                 ??_EUSART1_SetRxInterruptHandler 0007  
                           __end_of_PrintModbus 1D3E                ??_EUSART2_SetFramingErrorHandler 0007  
               ?_EUSART2_SetFramingErrorHandler 0005                                         ?_RXMode 0001  
               __end_of_EUSART1_SetErrorHandler 2370                                _InitialiseString 1C4E  
                                       ?___wmul 0005                                 __CFG_PPS1WAY$ON 000000  
                                       ?_printf 00BD                                 ?_PMD_Initialize 0001  
                                       ?_strlen 0005          __end_of_EUSART1_SetFramingErrorHandler 2366  
       __size_of_EUSART1_SetFramingErrorHandler 000A                  _EUSART1_SetFramingErrorHandler 235C  
                         _eusart2RxStatusBuffer 0070                    ?_EUSART1_DefaultErrorHandler 0001  
                                       _SP1BRGH 000F9C                                         _SP1BRGL 000F9B  
                                       _SP2BRGH 000E9C                                         _SP2BRGL 000E9B  
                                       _OSCCON1 000ED8                                         _OSCCON3 000EDA  
                   __end_of_EUSART2_Receive_ISR 18D0                              __size_of_vfpfcnvrt 058A  
                                       _TBLPTRH 000FF7                                         _TBLPTRL 000FF6  
                                       _TBLPTRU 000FF8                                         _NVMADRH 000F7F  
                                       _NVMADRL 000F7E                                         _OSCTUNE 000EDD  
                                       _NVMCON2 000F82                                         _SLRCONA 000F0E  
                                       _SLRCONB 000F16                                         _SLRCONC 000F1E  
                                       _SLRCOND 000F23                                         _SLRCONE 000F2B  
                              ___lomod@dividend 0005                                    ?_ClearRxBuff 0001  
                                       _ByteNum 0090                                 __size_of_RXMode 0006  
                                       __Hparam 0000                                         __Lparam 0000  
                fp__EUSART2_DefaultErrorHandler 0000                                         ___aodiv 11A0  
                                       ___aomod 1328                                 __size_of___wmul 0026  
                                       ___lodiv 158E                                         ___lomod 167E  
                                     ?_vfprintf 00B7                             _EUSART1_is_rx_ready 22E0  
                                       __pcinit 1EB6                 __end_of_EUSART2_SetErrorHandler 233E  
                                       __ramtop 0F00                                         __ptext0 148C  
                                       __ptext1 22AE                                         __ptext2 2292  
                                       __ptext3 1AC6                                         __ptext4 22C8  
                                       __ptext5 239A                                         __ptext6 1B54  
                                       __ptext7 230C                                         __ptext8 2316  
                                       __ptext9 2320                                 __size_of_printf 0028  
                               __size_of_strlen 0050           fp__EUSART2_DefaultOverrunErrorHandler 0000  
    __end_of_EUSART2_DefaultOverrunErrorHandler 2382     __size_of_EUSART2_DefaultOverrunErrorHandler 0008  
          ??_EUSART2_DefaultOverrunErrorHandler 0001             ?_EUSART2_DefaultOverrunErrorHandler 0001  
            _EUSART2_DefaultOverrunErrorHandler 237A                           _OSCILLATOR_Initialize 22C8  
                        ??_EUSART2_Transmit_ISR 0001                                    __size_of_abs 0040  
                                  __size_of_pad 00C2                                         _isalpha 2108  
                                       _isdigit 21B4                              _EUSART1_Initialize 1BD2  
                                       _islower 2144                        ??_PIN_MANAGER_Initialize 0005  
                                       _isspace 1F0C                                     _PrintModbus 1CCA  
                                       _isupper 217C                   ??_EUSART1_DefaultErrorHandler 0001  
                                       atoi@neg 0012                      __size_of_SYSTEM_Initialize 001A  
                                       _toupper 1DA2                            end_of_initialization 1F02  
                          ?_EUSART1_is_rx_ready 0001                             ?_EUSART1_Initialize 0001  
                                       fputc@fp 0009                     _EUSART1_OverrunErrorHandler 00CE  
                                       fputs@fp 0012           __end_of_EUSART1_SetRxInterruptHandler 2352  
        __size_of_EUSART1_SetRxInterruptHandler 000A                   _EUSART1_SetRxInterruptHandler 2348  
                            _EUSART2_Initialize 1B54                               __end_of_vfpfcnvrt 06B4  
                                       postdec1 000FE5                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc1 000FE6  
                                       postinc2 000FDE                           __size_of_EUSART1_Read 0058  
                                    ??_vfprintf 0053                            ??_EUSART1_Initialize 0007  
                         __CFG_WDTCPS$WDTCPS_31 000000                             ?_EUSART2_Initialize 0001  
                                       strlen@a 0007                                         strlen@s 0005  
                       fp__EUSART1_Transmit_ISR 0000                                      main@RXStat 00CB  
              __size_of_EUSART1_SetErrorHandler 000A                                __CFG_FEXTOSC$OFF 000000  
                         ??_EUSART1_is_rx_ready 0005                            ??_EUSART2_Initialize 0007  
                                  _EUSART1_Read 1E5E            __size_of_EUSART1_DefaultErrorHandler 0006  
                                __end_of_RXMode 2388                  __size_of_EUSART2_RxDataHandler 002C  
                 __end_of_EUSART2_RxDataHandler 2218                    __end_of_INTERRUPT_Initialize 239E  
                                   vfpfcnvrt@ap 004D                                     vfpfcnvrt@cp 00A8  
                                   vfpfcnvrt@fp 0049                                     vfpfcnvrt@ll 00A0  
                                __end_of___wmul 2292                          ?_OSCILLATOR_Initialize 0001  
                                __end_of_printf 226C                                  __end_of_strlen 1FAE  
                           start_initialization 1EB6                                 ___lodiv@divisor 000D  
                               ___lodiv@counter 001D                 __size_of_PIN_MANAGER_Initialize 008E  
                                   __end_of_abs 2108                                     __end_of_pad 1810  
                      __end_of_InitialiseString 1CCA   EUSART1_SetRxInterruptHandler@interruptHandler 0005  
 EUSART1_SetTxInterruptHandler@interruptHandler 0005   EUSART2_SetRxInterruptHandler@interruptHandler 0005  
 EUSART2_SetTxInterruptHandler@interruptHandler 0005                                     putch@txData 0006  
                         __end_of_EUSART2_Write 1E5E                          fp__EUSART1_Receive_ISR 0000  
              __size_of_EUSART2_SetErrorHandler 000A                                        ??_RXMode 0005  
                          __size_of_ClearRxBuff 004A          __end_of_EUSART2_SetOverrunErrorHandler 232A  
       __size_of_EUSART2_SetOverrunErrorHandler 000A                  _EUSART2_SetOverrunErrorHandler 2320  
                              __CFG_LPBOREN$OFF 000000                                    ClearRxBuff@i 0006  
                                   vfprintf@fmt 00B9                                ??_PMD_Initialize 0005  
                                      ??___wmul 0009                           _EUSART1_RxDataHandler 2218  
                ?_EUSART1_SetRxInterruptHandler 0005                                     __pdataBANK0 00E2  
                                      ??_printf 0055                                        ??_strlen 0007  
                                _eusart1RxCount 0097                                  _eusart2RxCount 009C  
                                   __pbssCOMRAM 0057               _EUSART1_RxDefaultInterruptHandler 00D8  
                 __size_of_EUSART1_Transmit_ISR 0044                                   __pcstackBANK0 00A0  
                              ___aodiv@dividend 0005                         fp__EUSART2_Transmit_ISR 0000  
                             _AddRxBuffToModBus 1990                             EUSART2_Write@txData 0005  
               ??_EUSART1_SetTxInterruptHandler 0007                              ?_AddRxBuffToModBus 0001  
              ??_EUSART1_SetFramingErrorHandler 0007                 ?_EUSART1_SetFramingErrorHandler 0005  
               ??_EUSART2_SetRxInterruptHandler 0007                    __size_of_EUSART1_Receive_ISR 00C0  
                        fp__EUSART2_Receive_ISR 0000                                       _atoi$1725 0014  
                                     _atoi$1726 0018                                       _atoi$1727 0016  
                                     __pnvBANK0 00CC                             ??_AddRxBuffToModBus 0005  
                        _PIN_MANAGER_Initialize 1AC6                                       _dtoa$1221 0034  
                                     __pintcode 0008                                   __pmediumconst FE7E  
                                      ?___aodiv 0005                                        ?___aomod 0005  
                              ___aodiv@quotient 0017                                        ?___lodiv 0005  
                                      ?___lomod 0005               _EUSART2_TxDefaultInterruptHandler 00DE  
                  ??_INTERRUPT_InterruptManager 0001                               __size_of_vfprintf 0064  
                               ___lomod@divisor 000D                                        _BAUD1CON 000F9F  
                                      _BAUD2CON 000E9F                                 ___lomod@counter 0015  
         fp__EUSART1_DefaultOverrunErrorHandler 0000      __end_of_EUSART1_DefaultOverrunErrorHandler 2394  
   __size_of_EUSART1_DefaultOverrunErrorHandler 0006            ??_EUSART1_DefaultOverrunErrorHandler 0001  
           ?_EUSART1_DefaultOverrunErrorHandler 0001              _EUSART1_DefaultOverrunErrorHandler 238E  
                                      ?_isalpha 0005                                        ?_isdigit 0005  
                          _EUSART1_ErrorHandler 00CC                    ?_EUSART2_DefaultErrorHandler 0001  
                                      ?_islower 0005                                        ?_isspace 0005  
                                  ?_PrintModbus 0001                       __end_of_AddRxBuffToModBus 1A30  
                                      ?_isupper 0005                         _EUSART1_SetErrorHandler 2366  
                                __size_of_fputc 0096                                  __size_of_fputs 0044  
                                      ?_toupper 000B                                  __size_of_putch 000A  
                          _INTERRUPT_Initialize 239A                    __size_of_EUSART2_Receive_ISR 00C0  
                                ___wmul@product 0009                                        _LATAbits 000F83  
       EUSART1_SetErrorHandler@interruptHandler 0005         EUSART2_SetErrorHandler@interruptHandler 0005  
                                      _LATDbits 000F86                                        _PIE3bits 000EC5  
                           __CFG_BORV$VBOR_2P45 000000                                        i2u301_40 220E  
                                      i2u301_41 220A                                        i2u302_40 223A  
                                      i2u310_40 1868                                        i2u302_41 2236  
                                      i2u310_41 1864             __size_of_INTERRUPT_InterruptManager 011E  
                                      i2u312_40 18AC                                        i2u311_48 187E  
                                      i2u312_41 18A8                                        i2u311_49 1890  
                                      i2u321_40 2096                                        i2u321_41 2092  
                                      i2u322_40 20B8                                        i2u313_48 18B2  
                                      i2u306_40 200A                                        i2u322_41 20B4  
                                      i2u313_49 18C6                                        i2u306_41 2006  
                                      i2u323_40 18EE                                        i2u307_40 2030  
                                      i2u323_41 18EA                                        i2u307_41 202C  
                                      i2u308_40 1830                                        i2u308_41 182C  
                                      i2u325_40 1926                                        i2u324_48 1904  
                                      i2u341_40 00AC                                        i2u340_48 0086  
                                      i2u325_41 1922                                        i2u324_49 1918  
                                      i2u341_41 00A8                                        i2u340_49 009A  
                                      i2u309_48 1846                                        i2u342_40 00BA  
                                      i2u334_40 0028                                        i2u309_49 1858  
                                      i2u342_41 00B6                                        i2u334_41 0024  
                                      i2u327_40 196C                                        i2u326_48 193C  
                                      i2u335_40 0038                                        i2u327_41 1968  
                                      i2u326_49 1950                                        i2u335_41 0034  
                                      i2u344_40 00E6                                        i2u343_48 00C0  
                                      i2u336_40 0046                                        i2u344_41 00E2  
                                      i2u343_49 00D4                                        i2u336_41 0042  
                                      i2u328_48 1972                                        i2u345_40 00F4  
                                      i2u328_49 1986                                        i2u345_41 00F0  
                                      i2u338_40 0072                                        i2u337_48 004C  
                                      i2u338_41 006E                                        i2u337_49 0060  
                                      i2u346_48 00FA                                        i2u339_40 0080  
                                      i2u346_49 010E                                        i2u339_41 007C  
                                      _PIR3bits 000ECD                                        _PIR7bits 000ED1  
                        ?_EUSART1_RxDataHandler 0001                                       _vfpfcnvrt 012A  
                                     _xtoa$1250 0035                                       _xtoa$1251 0037  
                             ___wmul@multiplier 0005                   __size_of_EUSART2_Transmit_ISR 0048  
                                  _isspace$1752 000B                   ??_EUSART2_DefaultErrorHandler 0001  
                                    vfpfcnvrt@c 00AE                                       copy_data0 1ECA  
                         ?_INTERRUPT_Initialize 0001                         _EUSART2_SetErrorHandler 2334  
                         EUSART1_Read@readValue 0005                     _EUSART2_OverrunErrorHandler 00D4  
         __end_of_EUSART1_SetTxInterruptHandler 2348          __size_of_EUSART1_SetTxInterruptHandler 000A  
                 _EUSART1_SetTxInterruptHandler 233E                                        __Hrparam 0000  
         __end_of_EUSART2_SetRxInterruptHandler 2320          __size_of_EUSART2_SetRxInterruptHandler 000A  
                 _EUSART2_SetRxInterruptHandler 2316                                      vfprintf@ap 00BB  
                                      __Lrparam 0000                                      vfprintf@fp 00B7  
                            __CFG_BOREN$SBORDIS 000000                         ??_OSCILLATOR_Initialize 0005  
                              __size_of___aodiv 0188                                __size_of___aomod 0164  
                              __size_of___lodiv 00F0                                __size_of___lomod 00D0  
                   __size_of_EUSART1_Initialize 007C                                      ?_vfpfcnvrt 0049  
                               ___aodiv@divisor 000D                                 ___aodiv@counter 0015  
                     ??_EUSART1_SetErrorHandler 0007             __end_of_EUSART1_DefaultErrorHandler 239A  
                   _EUSART1_DefaultErrorHandler 2394                     __end_of_EUSART1_is_rx_ready 22F8  
                          _EUSART2_ErrorHandler 00D2                                __size_of_isalpha 003C  
                              __size_of_isdigit 0038                      __size_of_AddRxBuffToModBus 00A0  
                              __size_of_islower 0038                                __size_of_isspace 0052  
                                      __ptext10 232A                                        __ptext11 2334  
                                      __ptext20 1C4E                                        __ptext12 1BD2  
                                      __ptext21 2244                                        __ptext13 233E  
                                      __ptext30 167E                                        __ptext22 1D3E  
                                      __ptext14 2348                                        __ptext31 158E  
                                      __ptext23 012A                                        __ptext15 2352  
                                      __ptext40 20C8                                        __ptext32 0E6C  
                                      __ptext24 0994                                        __ptext16 235C  
                                      __ptext41 1328                                        __ptext33 06B4  
                                      __ptext25 1DA2                                        __ptext17 2366  
                                      __ptext50 1990                                        __ptext42 11A0  
                                      __ptext34 174E                                        __ptext26 2144  
                                      __ptext18 2382                                        __ptext43 1006  
                                      __ptext35 1F5E                                        __ptext27 217C  
                                      __ptext19 1CCA                                        __ptext60 238E  
                                      __ptext52 1FF8                                        __ptext44 1F0C  
                                      __ptext36 2040                                        __ptext28 2108  
                                      __ptext61 23A0                                        __ptext53 1810  
                                      __ptext45 21B4                                        __ptext37 1A30  
                                      __ptext29 0C6A                                        __ptext62 2394  
                                      __ptext54 237A                                        __ptext46 226C  
                                      __ptext38 2370                                        __ptext63 2218  
                                      __ptext55 239E                                        __ptext47 22E0  
                                      __ptext39 1E00                                        __ptext64 0000  
                                      __ptext56 2388                                        __ptext48 1E5E  
                                      __ptext57 21EC                                        __ptext49 1FAE  
                                      __ptext58 2084                                        __ptext59 18D0  
                              __size_of_isupper 0038                               ?_InitialiseString 0001  
                              __size_of_toupper 005E                     __size_of_EUSART2_Initialize 007E  
                            ??_InitialiseString 0055                                   __size_of_atoi 019A  
                                 __size_of_main 0102                                   __size_of_dtoa 02E0  
                                 __size_of_stoa 019A           fp__EUSART2_DefaultFramingErrorHandler 0000  
    __end_of_EUSART2_DefaultFramingErrorHandler 23A0     __size_of_EUSART2_DefaultFramingErrorHandler 0002  
          ??_EUSART2_DefaultFramingErrorHandler 0001             ?_EUSART2_DefaultFramingErrorHandler 0001  
            _EUSART2_DefaultFramingErrorHandler 239E                                   __size_of_utoa 0202  
                                 __size_of_xtoa 02D6                            __CFG_WDTCWS$WDTCWS_7 000000  
                                  PrintModbus@i 00C9            __size_of_EUSART2_DefaultErrorHandler 0006  
                                    _RC1STAbits 000F9D                                       stoa@F1139 00ED  
                                    _RC2STAbits 000E9D  EUSART1_SetOverrunErrorHandler@interruptHandler 0005  
EUSART2_SetOverrunErrorHandler@interruptHandler 0005                                        _rxStatus 0094  
                                      int$flags 005B                                        _vfprintf 1D3E  
            __end_of_INTERRUPT_InterruptManager 0126                      _INTERRUPT_InterruptManager 0008  
                         _EUSART2_RxDataHandler 21EC                                       printf@fmt 00BD  
                   _EUSART1_FramingErrorHandler 00D0                             _EUSART1_Receive_ISR 18D0  
                              ___aomod@dividend 0005                ??_EUSART2_SetOverrunErrorHandler 0007  
               ?_EUSART2_SetOverrunErrorHandler 0005                                  _vfpfcnvrt$1265 00AC  
                                    _INTCONbits 000FF2                                     _NVMCON1bits 000F81  
                                      isalpha@c 0005                                        isdigit@c 0005  
                        ??_INTERRUPT_Initialize 0005                       ??_EUSART2_SetErrorHandler 0007  
                          __size_of_PrintModbus 0074                                        intlevel2 0000  
                                 ??_ClearRxBuff 0005                            ?_EUSART1_Receive_ISR 0001  
                                      islower@c 0005                                        isspace@c 0005  
                       ?_PIN_MANAGER_Initialize 0001                               __CFG_CLKOUTEN$OFF 000000  
        __end_of_EUSART1_SetOverrunErrorHandler 235C         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 2352                                        isupper@c 0005  
                  __end_of_EUSART1_Transmit_ISR 20C8                                        printf@ap 00C7  
EUSART1_SetFramingErrorHandler@interruptHandler 0005  EUSART2_SetFramingErrorHandler@interruptHandler 0005  
                ?_EUSART1_SetTxInterruptHandler 0005                  ?_EUSART2_SetRxInterruptHandler 0005  
                               ___aomod@divisor 000D                                     ??_vfpfcnvrt 004F  
                                      stoa@nuls 0015                                 ___aomod@counter 0015  
                            _eusart1RxLastError 0096                          __size_of_EUSART2_Write 005E  
                           _EUSART2_Receive_ISR 1810                                        toupper@c 000B  
                                    _TX1STAbits 000F9E                                      _TX2STAbits 000E9E  
                                  ___aodiv@sign 0016                           ??_EUSART1_Receive_ISR 0001  
                __end_of_PIN_MANAGER_Initialize 1B54                 ??_EUSART2_SetTxInterruptHandler 0007  
                          ?_EUSART2_Receive_ISR 0001                              _eusart2RxLastError 009B  
                       ??_EUSART1_RxDataHandler 0001                                    ___aomod@sign 0016  
             _EUSART2_RxDefaultInterruptHandler 00DC                             __end_of_ClearRxBuff 1FF8  
