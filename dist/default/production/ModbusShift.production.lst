

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Mar 07 12:10:48 2021

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F46K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    96                           	psect	text76,global,reloc=2,class=CODE,delta=1
    97                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    98                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    99  0000                     
   100                           ; Version 2.10
   101                           ; Generated 31/07/2019 GMT
   102                           ; 
   103                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   104                           ; All rights reserved.
   105                           ; 
   106                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   107                           ; 
   108                           ; Redistribution and use in source and binary forms, with or without modification, are
   109                           ; permitted provided that the following conditions are met:
   110                           ; 
   111                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   112                           ;        conditions and the following disclaimer.
   113                           ; 
   114                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   115                           ;        of conditions and the following disclaimer in the documentation and/or other
   116                           ;        materials provided with the distribution.
   117                           ; 
   118                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   119                           ;        software without specific prior written permission.
   120                           ; 
   121                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   122                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   123                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   124                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   125                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   126                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   127                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   128                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   129                           ; 
   130                           ; 
   131                           ; Code-generator required, PIC18F46K40 Definitions
   132                           ; 
   133                           ; SFR Addresses
   134  0000                     
   135                           	psect	idataBANK0
   136  0029A8                     __pidataBANK0:
   137                           	opt callstack 0
   138                           
   139                           ;initializer for stoa@F1139
   140  0029A8  28                 	db	40
   141  0029A9  6E                 	db	110
   142  0029AA  75                 	db	117
   143  0029AB  6C                 	db	108
   144  0029AC  6C                 	db	108
   145  0029AD  29                 	db	41
   146  0029AE  00                 	db	0
   147                           
   148                           ;initializer for _ExpectedBytes
   149  0029AF  0008               	dw	8
   150                           
   151                           ;initializer for _MBResCRC
   152  0029B1  FFFF               	dw	65535
   153                           
   154                           	psect	idataBANK1
   155  0028F6                     __pidataBANK1:
   156                           	opt callstack 0
   157                           
   158                           ;initializer for _MB300xx
   159  0028F6  01                 	db	1
   160  0028F7  07                 	db	7
   161  0028F8  FF                 	db	255
   162  0028F9  04                 	db	4
   163  0028FA  05                 	db	5
   164  0028FB  06                 	db	6
   165  0028FC  07                 	db	7
   166  0028FD  08                 	db	8
   167  0028FE  09                 	db	9
   168  0028FF  0A                 	db	10
   169  002900  0B                 	db	11
   170  002901  0C                 	db	12
   171  002902  0D                 	db	13
   172  002903  0E                 	db	14
   173  002904  0F                 	db	15
   174  002905  10                 	db	16
   175  002906  11                 	db	17
   176  002907  12                 	db	18
   177  002908  13                 	db	19
   178  002909  14                 	db	20
   179  00290A  15                 	db	21
   180  00290B  16                 	db	22
   181  00290C  17                 	db	23
   182  00290D  18                 	db	24
   183  00290E  19                 	db	25
   184  00290F  20                 	db	32
   185  002910  21                 	db	33
   186  002911  22                 	db	34
   187  002912  23                 	db	35
   188  002913  24                 	db	36
   189  002914  25                 	db	37
   190  002915  26                 	db	38
   191                           
   192                           	psect	nvBANK0
   193  0000DF                     __pnvBANK0:
   194                           	opt callstack 0
   195  0000DF                     _EUSART1_ErrorHandler:
   196                           	opt callstack 0
   197  0000DF                     	ds	2
   198  0000E1                     _EUSART1_OverrunErrorHandler:
   199                           	opt callstack 0
   200  0000E1                     	ds	2
   201  0000E3                     _EUSART1_FramingErrorHandler:
   202                           	opt callstack 0
   203  0000E3                     	ds	2
   204  0000E5                     _EUSART2_ErrorHandler:
   205                           	opt callstack 0
   206  0000E5                     	ds	2
   207  0000E7                     _EUSART2_OverrunErrorHandler:
   208                           	opt callstack 0
   209  0000E7                     	ds	2
   210  0000E9                     _EUSART2_FramingErrorHandler:
   211                           	opt callstack 0
   212  0000E9                     	ds	2
   213  0000EB                     _EUSART1_RxDefaultInterruptHandler:
   214                           	opt callstack 0
   215  0000EB                     	ds	2
   216  0000ED                     _EUSART1_TxDefaultInterruptHandler:
   217                           	opt callstack 0
   218  0000ED                     	ds	2
   219  0000EF                     _EUSART2_RxDefaultInterruptHandler:
   220                           	opt callstack 0
   221  0000EF                     	ds	2
   222  0000F1                     _EUSART2_TxDefaultInterruptHandler:
   223                           	opt callstack 0
   224  0000F1                     	ds	2
   225  0000F3                     _eusart1TxBufferRemaining:
   226                           	opt callstack 0
   227  0000F3                     	ds	1
   228  0000F4                     _eusart2TxBufferRemaining:
   229                           	opt callstack 0
   230  0000F4                     	ds	1
   231  0000                     _RC2REG	set	3737
   232  0000                     _RC2STAbits	set	3741
   233  0000                     _TX2REG	set	3738
   234  0000                     _TX2STAbits	set	3742
   235  0000                     _SP2BRGH	set	3740
   236  0000                     _SP2BRGL	set	3739
   237  0000                     _TX2STA	set	3742
   238  0000                     _RC2STA	set	3741
   239  0000                     _BAUD2CON	set	3743
   240  0000                     _PIR7bits	set	3793
   241  0000                     _PIR3bits	set	3789
   242  0000                     _PIE3bits	set	3781
   243  0000                     _PMD5	set	3814
   244  0000                     _PMD4	set	3813
   245  0000                     _PMD3	set	3812
   246  0000                     _PMD2	set	3811
   247  0000                     _PMD1	set	3810
   248  0000                     _PMD0	set	3809
   249  0000                     _OSCTUNE	set	3805
   250  0000                     _OSCFRQ	set	3806
   251  0000                     _OSCEN	set	3804
   252  0000                     _OSCCON3	set	3802
   253  0000                     _OSCCON1	set	3800
   254  0000                     _RX2PPS	set	3725
   255  0000                     _RC6PPS	set	3837
   256  0000                     _RB6PPS	set	3829
   257  0000                     _RX1PPS	set	3765
   258  0000                     _INLVLE	set	3882
   259  0000                     _INLVLD	set	3874
   260  0000                     _INLVLC	set	3869
   261  0000                     _INLVLB	set	3861
   262  0000                     _INLVLA	set	3853
   263  0000                     _SLRCONE	set	3883
   264  0000                     _SLRCOND	set	3875
   265  0000                     _SLRCONC	set	3870
   266  0000                     _SLRCONB	set	3862
   267  0000                     _SLRCONA	set	3854
   268  0000                     _ODCOND	set	3876
   269  0000                     _ODCONC	set	3871
   270  0000                     _ODCONB	set	3863
   271  0000                     _ODCONA	set	3855
   272  0000                     _ODCONE	set	3884
   273  0000                     _WPUC	set	3872
   274  0000                     _WPUA	set	3856
   275  0000                     _WPUB	set	3864
   276  0000                     _WPUE	set	3885
   277  0000                     _WPUD	set	3877
   278  0000                     _ANSELA	set	3857
   279  0000                     _ANSELE	set	3886
   280  0000                     _ANSELB	set	3865
   281  0000                     _ANSELC	set	3873
   282  0000                     _ANSELD	set	3878
   283  0000                     _LATDbits	set	3974
   284  0000                     _LATAbits	set	3971
   285  0000                     _RC1REG	set	3993
   286  0000                     _RC1STAbits	set	3997
   287  0000                     _TX1REG	set	3994
   288  0000                     _TX1STAbits	set	3998
   289  0000                     _SP1BRGH	set	3996
   290  0000                     _SP1BRGL	set	3995
   291  0000                     _TX1STA	set	3998
   292  0000                     _RC1STA	set	3997
   293  0000                     _BAUD1CON	set	3999
   294  0000                     _NVMDAT	set	3968
   295  0000                     _NVMADRL	set	3966
   296  0000                     _NVMADRH	set	3967
   297  0000                     _NVMCON2	set	3970
   298  0000                     _TABLAT	set	4085
   299  0000                     _TBLPTRL	set	4086
   300  0000                     _TBLPTRH	set	4087
   301  0000                     _TBLPTRU	set	4088
   302  0000                     _NVMCON1bits	set	3969
   303  0000                     _INTCONbits	set	4082
   304  0000                     _TRISD	set	3979
   305  0000                     _TRISC	set	3978
   306  0000                     _TRISB	set	3977
   307  0000                     _TRISA	set	3976
   308  0000                     _TRISE	set	3980
   309  0000                     _LATC	set	3973
   310  0000                     _LATB	set	3972
   311  0000                     _LATA	set	3971
   312  0000                     _LATD	set	3974
   313  0000                     _LATE	set	3975
   314                           
   315                           	psect	mediumconst
   316  00FE06                     __pmediumconst:
   317                           	opt callstack 0
   318  00FE06  00                 	db	0
   319  00FE07                     STR_1:
   320                           
   321                           ; BSR set to: 0
   322  00FE07  0D                 	db	13
   323  00FE08  44                 	db	68	;'D'
   324  00FE09  61                 	db	97	;'a'
   325  00FE0A  6E                 	db	110	;'n'
   326  00FE0B  20                 	db	32
   327  00FE0C  61                 	db	97	;'a'
   328  00FE0D  6E                 	db	110	;'n'
   329  00FE0E  64                 	db	100	;'d'
   330  00FE0F  20                 	db	32
   331  00FE10  53                 	db	83	;'S'
   332  00FE11  61                 	db	97	;'a'
   333  00FE12  6D                 	db	109	;'m'
   334  00FE13  27                 	db	39
   335  00FE14  73                 	db	115	;'s'
   336  00FE15  20                 	db	32
   337  00FE16  4D                 	db	77	;'M'
   338  00FE17  6F                 	db	111	;'o'
   339  00FE18  64                 	db	100	;'d'
   340  00FE19  62                 	db	98	;'b'
   341  00FE1A  75                 	db	117	;'u'
   342  00FE1B  73                 	db	115	;'s'
   343  00FE1C  20                 	db	32
   344  00FE1D  47                 	db	71	;'G'
   345  00FE1E  50                 	db	80	;'P'
   346  00FE1F  49                 	db	73	;'I'
   347  00FE20  4F                 	db	79	;'O'
   348  00FE21  20                 	db	32
   349  00FE22  45                 	db	69	;'E'
   350  00FE23  78                 	db	120	;'x'
   351  00FE24  70                 	db	112	;'p'
   352  00FE25  61                 	db	97	;'a'
   353  00FE26  6E                 	db	110	;'n'
   354  00FE27  73                 	db	115	;'s'
   355  00FE28  69                 	db	105	;'i'
   356  00FE29  6F                 	db	111	;'o'
   357  00FE2A  6E                 	db	110	;'n'
   358  00FE2B  20                 	db	32
   359  00FE2C  2D                 	db	45
   360  00FE2D  20                 	db	32
   361  00FE2E  41                 	db	65	;'A'
   362  00FE2F  50                 	db	80	;'P'
   363  00FE30  30                 	db	48	;'0'
   364  00FE31  30                 	db	48	;'0'
   365  00FE32  30                 	db	48	;'0'
   366  00FE33  78                 	db	120	;'x'
   367  00FE34  78                 	db	120	;'x'
   368  00FE35  78                 	db	120	;'x'
   369  00FE36  78                 	db	120	;'x'
   370  00FE37  78                 	db	120	;'x'
   371  00FE38  20                 	db	32
   372  00FE39  56                 	db	86	;'V'
   373  00FE3A  30                 	db	48	;'0'
   374  00FE3B  2E                 	db	46
   375  00FE3C  31                 	db	49	;'1'
   376  00FE3D  0D                 	db	13
   377  00FE3E  0A                 	db	10
   378  00FE3F  00                 	db	0
   379  00FE40                     STR_8:
   380                           
   381                           ; BSR set to: 0
   382  00FE40  0D                 	db	13
   383  00FE41  20                 	db	32
   384  00FE42  20                 	db	32
   385  00FE43  20                 	db	32
   386  00FE44  30                 	db	48	;'0'
   387  00FE45  78                 	db	120	;'x'
   388  00FE46  31                 	db	49	;'1'
   389  00FE47  30                 	db	48	;'0'
   390  00FE48  20                 	db	32
   391  00FE49  2D                 	db	45
   392  00FE4A  20                 	db	32
   393  00FE4B  57                 	db	87	;'W'
   394  00FE4C  72                 	db	114	;'r'
   395  00FE4D  69                 	db	105	;'i'
   396  00FE4E  74                 	db	116	;'t'
   397  00FE4F  65                 	db	101	;'e'
   398  00FE50  20                 	db	32
   399  00FE51  4D                 	db	77	;'M'
   400  00FE52  75                 	db	117	;'u'
   401  00FE53  6C                 	db	108	;'l'
   402  00FE54  74                 	db	116	;'t'
   403  00FE55  69                 	db	105	;'i'
   404  00FE56  70                 	db	112	;'p'
   405  00FE57  6C                 	db	108	;'l'
   406  00FE58  65                 	db	101	;'e'
   407  00FE59  20                 	db	32
   408  00FE5A  52                 	db	82	;'R'
   409  00FE5B  65                 	db	101	;'e'
   410  00FE5C  67                 	db	103	;'g'
   411  00FE5D  69                 	db	105	;'i'
   412  00FE5E  73                 	db	115	;'s'
   413  00FE5F  74                 	db	116	;'t'
   414  00FE60  65                 	db	101	;'e'
   415  00FE61  72                 	db	114	;'r'
   416  00FE62  73                 	db	115	;'s'
   417  00FE63  20                 	db	32
   418  00FE64  28                 	db	40
   419  00FE65  4D                 	db	77	;'M'
   420  00FE66  61                 	db	97	;'a'
   421  00FE67  78                 	db	120	;'x'
   422  00FE68  20                 	db	32
   423  00FE69  33                 	db	51	;'3'
   424  00FE6A  32                 	db	50	;'2'
   425  00FE6B  78                 	db	120	;'x'
   426  00FE6C  20                 	db	32
   427  00FE6D  31                 	db	49	;'1'
   428  00FE6E  36                 	db	54	;'6'
   429  00FE6F  62                 	db	98	;'b'
   430  00FE70  69                 	db	105	;'i'
   431  00FE71  74                 	db	116	;'t'
   432  00FE72  29                 	db	41
   433  00FE73  0D                 	db	13
   434  00FE74  0A                 	db	10
   435  00FE75  0A                 	db	10
   436  00FE76  00                 	db	0
   437  00FE77                     STR_7:
   438                           
   439                           ; BSR set to: 0
   440  00FE77  0D                 	db	13
   441  00FE78  20                 	db	32
   442  00FE79  20                 	db	32
   443  00FE7A  20                 	db	32
   444  00FE7B  30                 	db	48	;'0'
   445  00FE7C  78                 	db	120	;'x'
   446  00FE7D  30                 	db	48	;'0'
   447  00FE7E  33                 	db	51	;'3'
   448  00FE7F  20                 	db	32
   449  00FE80  2D                 	db	45
   450  00FE81  20                 	db	32
   451  00FE82  52                 	db	82	;'R'
   452  00FE83  65                 	db	101	;'e'
   453  00FE84  61                 	db	97	;'a'
   454  00FE85  64                 	db	100	;'d'
   455  00FE86  20                 	db	32
   456  00FE87  4D                 	db	77	;'M'
   457  00FE88  75                 	db	117	;'u'
   458  00FE89  6C                 	db	108	;'l'
   459  00FE8A  74                 	db	116	;'t'
   460  00FE8B  69                 	db	105	;'i'
   461  00FE8C  70                 	db	112	;'p'
   462  00FE8D  6C                 	db	108	;'l'
   463  00FE8E  65                 	db	101	;'e'
   464  00FE8F  20                 	db	32
   465  00FE90  52                 	db	82	;'R'
   466  00FE91  65                 	db	101	;'e'
   467  00FE92  67                 	db	103	;'g'
   468  00FE93  69                 	db	105	;'i'
   469  00FE94  73                 	db	115	;'s'
   470  00FE95  74                 	db	116	;'t'
   471  00FE96  65                 	db	101	;'e'
   472  00FE97  72                 	db	114	;'r'
   473  00FE98  73                 	db	115	;'s'
   474  00FE99  20                 	db	32
   475  00FE9A  28                 	db	40
   476  00FE9B  4D                 	db	77	;'M'
   477  00FE9C  61                 	db	97	;'a'
   478  00FE9D  78                 	db	120	;'x'
   479  00FE9E  20                 	db	32
   480  00FE9F  33                 	db	51	;'3'
   481  00FEA0  32                 	db	50	;'2'
   482  00FEA1  78                 	db	120	;'x'
   483  00FEA2  20                 	db	32
   484  00FEA3  31                 	db	49	;'1'
   485  00FEA4  36                 	db	54	;'6'
   486  00FEA5  62                 	db	98	;'b'
   487  00FEA6  69                 	db	105	;'i'
   488  00FEA7  74                 	db	116	;'t'
   489  00FEA8  29                 	db	41
   490  00FEA9  0D                 	db	13
   491  00FEAA  0A                 	db	10
   492  00FEAB  00                 	db	0
   493  00FEAC                     STR_3:
   494                           
   495                           ; BSR set to: 0
   496  00FEAC  0D                 	db	13
   497  00FEAD  43                 	db	67	;'C'
   498  00FEAE  6F                 	db	111	;'o'
   499  00FEAF  6D                 	db	109	;'m'
   500  00FEB0  70                 	db	112	;'p'
   501  00FEB1  69                 	db	105	;'i'
   502  00FEB2  6C                 	db	108	;'l'
   503  00FEB3  65                 	db	101	;'e'
   504  00FEB4  64                 	db	100	;'d'
   505  00FEB5  20                 	db	32
   506  00FEB6  6F                 	db	111	;'o'
   507  00FEB7  6E                 	db	110	;'n'
   508  00FEB8  20                 	db	32
   509  00FEB9  25                 	db	37
   510  00FEBA  73                 	db	115	;'s'
   511  00FEBB  20                 	db	32
   512  00FEBC  61                 	db	97	;'a'
   513  00FEBD  74                 	db	116	;'t'
   514  00FEBE  20                 	db	32
   515  00FEBF  25                 	db	37
   516  00FEC0  73                 	db	115	;'s'
   517  00FEC1  20                 	db	32
   518  00FEC2  62                 	db	98	;'b'
   519  00FEC3  79                 	db	121	;'y'
   520  00FEC4  20                 	db	32
   521  00FEC5  58                 	db	88	;'X'
   522  00FEC6  43                 	db	67	;'C'
   523  00FEC7  38                 	db	56	;'8'
   524  00FEC8  20                 	db	32
   525  00FEC9  76                 	db	118	;'v'
   526  00FECA  65                 	db	101	;'e'
   527  00FECB  72                 	db	114	;'r'
   528  00FECC  73                 	db	115	;'s'
   529  00FECD  69                 	db	105	;'i'
   530  00FECE  6F                 	db	111	;'o'
   531  00FECF  6E                 	db	110	;'n'
   532  00FED0  20                 	db	32
   533  00FED1  25                 	db	37
   534  00FED2  75                 	db	117	;'u'
   535  00FED3  0D                 	db	13
   536  00FED4  0A                 	db	10
   537  00FED5  0A                 	db	10
   538  00FED6  00                 	db	0
   539  00FED7                     STR_17:
   540                           
   541                           ; BSR set to: 0
   542  00FED7  63                 	db	99	;'c'
   543  00FED8  72                 	db	114	;'r'
   544  00FED9  63                 	db	99	;'c'
   545  00FEDA  48                 	db	72	;'H'
   546  00FEDB  69                 	db	105	;'i'
   547  00FEDC  67                 	db	103	;'g'
   548  00FEDD  68                 	db	104	;'h'
   549  00FEDE  3A                 	db	58	;':'
   550  00FEDF  20                 	db	32
   551  00FEE0  30                 	db	48	;'0'
   552  00FEE1  78                 	db	120	;'x'
   553  00FEE2  25                 	db	37
   554  00FEE3  30                 	db	48	;'0'
   555  00FEE4  32                 	db	50	;'2'
   556  00FEE5  78                 	db	120	;'x'
   557  00FEE6  20                 	db	32
   558  00FEE7  20                 	db	32
   559  00FEE8  63                 	db	99	;'c'
   560  00FEE9  72                 	db	114	;'r'
   561  00FEEA  63                 	db	99	;'c'
   562  00FEEB  4C                 	db	76	;'L'
   563  00FEEC  6F                 	db	111	;'o'
   564  00FEED  77                 	db	119	;'w'
   565  00FEEE  3A                 	db	58	;':'
   566  00FEEF  20                 	db	32
   567  00FEF0  30                 	db	48	;'0'
   568  00FEF1  78                 	db	120	;'x'
   569  00FEF2  25                 	db	37
   570  00FEF3  30                 	db	48	;'0'
   571  00FEF4  32                 	db	50	;'2'
   572  00FEF5  78                 	db	120	;'x'
   573  00FEF6  20                 	db	32
   574  00FEF7  20                 	db	32
   575  00FEF8  0D                 	db	13
   576  00FEF9  0A                 	db	10
   577  00FEFA  00                 	db	0
   578  00FEFB                     STR_9:
   579                           
   580                           ; BSR set to: 0
   581  00FEFB  0D                 	db	13
   582  00FEFC  49                 	db	73	;'I'
   583  00FEFD  6E                 	db	110	;'n'
   584  00FEFE  69                 	db	105	;'i'
   585  00FEFF  74                 	db	116	;'t'
   586  00FF00  61                 	db	97	;'a'
   587  00FF01  6C                 	db	108	;'l'
   588  00FF02  69                 	db	105	;'i'
   589  00FF03  73                 	db	115	;'s'
   590  00FF04  61                 	db	97	;'a'
   591  00FF05  74                 	db	116	;'t'
   592  00FF06  69                 	db	105	;'i'
   593  00FF07  6F                 	db	111	;'o'
   594  00FF08  6E                 	db	110	;'n'
   595  00FF09  20                 	db	32
   596  00FF0A  43                 	db	67	;'C'
   597  00FF0B  6F                 	db	111	;'o'
   598  00FF0C  6D                 	db	109	;'m'
   599  00FF0D  70                 	db	112	;'p'
   600  00FF0E  6C                 	db	108	;'l'
   601  00FF0F  65                 	db	101	;'e'
   602  00FF10  74                 	db	116	;'t'
   603  00FF11  65                 	db	101	;'e'
   604  00FF12  20                 	db	32
   605  00FF13  2D                 	db	45
   606  00FF14  20                 	db	32
   607  00FF15  52                 	db	82	;'R'
   608  00FF16  65                 	db	101	;'e'
   609  00FF17  61                 	db	97	;'a'
   610  00FF18  64                 	db	100	;'d'
   611  00FF19  79                 	db	121	;'y'
   612  00FF1A  0D                 	db	13
   613  00FF1B  0A                 	db	10
   614  00FF1C  0A                 	db	10
   615  00FF1D  00                 	db	0
   616  00FF1E                     STR_13:
   617                           
   618                           ; BSR set to: 0
   619  00FF1E  4D                 	db	77	;'M'
   620  00FF1F  6F                 	db	111	;'o'
   621  00FF20  64                 	db	100	;'d'
   622  00FF21  62                 	db	98	;'b'
   623  00FF22  75                 	db	117	;'u'
   624  00FF23  73                 	db	115	;'s'
   625  00FF24  20                 	db	32
   626  00FF25  44                 	db	68	;'D'
   627  00FF26  61                 	db	97	;'a'
   628  00FF27  74                 	db	116	;'t'
   629  00FF28  61                 	db	97	;'a'
   630  00FF29  20                 	db	32
   631  00FF2A  43                 	db	67	;'C'
   632  00FF2B  61                 	db	97	;'a'
   633  00FF2C  70                 	db	112	;'p'
   634  00FF2D  74                 	db	116	;'t'
   635  00FF2E  75                 	db	117	;'u'
   636  00FF2F  72                 	db	114	;'r'
   637  00FF30  65                 	db	101	;'e'
   638  00FF31  20                 	db	32
   639  00FF32  43                 	db	67	;'C'
   640  00FF33  6F                 	db	111	;'o'
   641  00FF34  6D                 	db	109	;'m'
   642  00FF35  70                 	db	112	;'p'
   643  00FF36  6C                 	db	108	;'l'
   644  00FF37  65                 	db	101	;'e'
   645  00FF38  74                 	db	116	;'t'
   646  00FF39  65                 	db	101	;'e'
   647  00FF3A  3A                 	db	58	;':'
   648  00FF3B  0D                 	db	13
   649  00FF3C  0A                 	db	10
   650  00FF3D  00                 	db	0
   651  00FF3E                     STR_6:
   652                           
   653                           ; BSR set to: 0
   654  00FF3E  0D                 	db	13
   655  00FF3F  46                 	db	70	;'F'
   656  00FF40  75                 	db	117	;'u'
   657  00FF41  6E                 	db	110	;'n'
   658  00FF42  63                 	db	99	;'c'
   659  00FF43  74                 	db	116	;'t'
   660  00FF44  69                 	db	105	;'i'
   661  00FF45  6F                 	db	111	;'o'
   662  00FF46  6E                 	db	110	;'n'
   663  00FF47  20                 	db	32
   664  00FF48  43                 	db	67	;'C'
   665  00FF49  6F                 	db	111	;'o'
   666  00FF4A  64                 	db	100	;'d'
   667  00FF4B  65                 	db	101	;'e'
   668  00FF4C  73                 	db	115	;'s'
   669  00FF4D  20                 	db	32
   670  00FF4E  53                 	db	83	;'S'
   671  00FF4F  75                 	db	117	;'u'
   672  00FF50  70                 	db	112	;'p'
   673  00FF51  70                 	db	112	;'p'
   674  00FF52  6F                 	db	111	;'o'
   675  00FF53  72                 	db	114	;'r'
   676  00FF54  74                 	db	116	;'t'
   677  00FF55  65                 	db	101	;'e'
   678  00FF56  64                 	db	100	;'d'
   679  00FF57  3A                 	db	58	;':'
   680  00FF58  0D                 	db	13
   681  00FF59  0A                 	db	10
   682  00FF5A  00                 	db	0
   683  00FF5B                     STR_16:
   684                           
   685                           ; BSR set to: 0
   686  00FF5B  46                 	db	70	;'F'
   687  00FF5C  75                 	db	117	;'u'
   688  00FF5D  6E                 	db	110	;'n'
   689  00FF5E  63                 	db	99	;'c'
   690  00FF5F  74                 	db	116	;'t'
   691  00FF60  69                 	db	105	;'i'
   692  00FF61  6F                 	db	111	;'o'
   693  00FF62  6E                 	db	110	;'n'
   694  00FF63  20                 	db	32
   695  00FF64  43                 	db	67	;'C'
   696  00FF65  6F                 	db	111	;'o'
   697  00FF66  64                 	db	100	;'d'
   698  00FF67  65                 	db	101	;'e'
   699  00FF68  20                 	db	32
   700  00FF69  69                 	db	105	;'i'
   701  00FF6A  73                 	db	115	;'s'
   702  00FF6B  3A                 	db	58	;':'
   703  00FF6C  20                 	db	32
   704  00FF6D  30                 	db	48	;'0'
   705  00FF6E  78                 	db	120	;'x'
   706  00FF6F  25                 	db	37
   707  00FF70  30                 	db	48	;'0'
   708  00FF71  32                 	db	50	;'2'
   709  00FF72  78                 	db	120	;'x'
   710  00FF73  20                 	db	32
   711  00FF74  0D                 	db	13
   712  00FF75  0A                 	db	10
   713  00FF76  00                 	db	0
   714  00FF77                     STR_19:
   715                           
   716                           ; BSR set to: 0
   717  00FF77  43                 	db	67	;'C'
   718  00FF78  52                 	db	82	;'R'
   719  00FF79  43                 	db	67	;'C'
   720  00FF7A  20                 	db	32
   721  00FF7B  64                 	db	100	;'d'
   722  00FF7C  69                 	db	105	;'i'
   723  00FF7D  64                 	db	100	;'d'
   724  00FF7E  20                 	db	32
   725  00FF7F  4E                 	db	78	;'N'
   726  00FF80  4F                 	db	79	;'O'
   727  00FF81  54                 	db	84	;'T'
   728  00FF82  20                 	db	32
   729  00FF83  63                 	db	99	;'c'
   730  00FF84  68                 	db	104	;'h'
   731  00FF85  65                 	db	101	;'e'
   732  00FF86  63                 	db	99	;'c'
   733  00FF87  6B                 	db	107	;'k'
   734  00FF88  20                 	db	32
   735  00FF89  6F                 	db	111	;'o'
   736  00FF8A  75                 	db	117	;'u'
   737  00FF8B  74                 	db	116	;'t'
   738  00FF8C  2E                 	db	46
   739  00FF8D  20                 	db	32
   740  00FF8E  0D                 	db	13
   741  00FF8F  0A                 	db	10
   742  00FF90  0A                 	db	10
   743  00FF91  00                 	db	0
   744  00FF92                     STR_2:
   745                           
   746                           ; BSR set to: 0
   747  00FF92  0D                 	db	13
   748  00FF93  43                 	db	67	;'C'
   749  00FF94  61                 	db	97	;'a'
   750  00FF95  72                 	db	114	;'r'
   751  00FF96  64                 	db	100	;'d'
   752  00FF97  20                 	db	32
   753  00FF98  53                 	db	83	;'S'
   754  00FF99  65                 	db	101	;'e'
   755  00FF9A  72                 	db	114	;'r'
   756  00FF9B  20                 	db	32
   757  00FF9C  4E                 	db	78	;'N'
   758  00FF9D  6F                 	db	111	;'o'
   759  00FF9E  2E                 	db	46
   760  00FF9F  20                 	db	32
   761  00FFA0  78                 	db	120	;'x'
   762  00FFA1  78                 	db	120	;'x'
   763  00FFA2  78                 	db	120	;'x'
   764  00FFA3  78                 	db	120	;'x'
   765  00FFA4  78                 	db	120	;'x'
   766  00FFA5  78                 	db	120	;'x'
   767  00FFA6  78                 	db	120	;'x'
   768  00FFA7  20                 	db	32
   769  00FFA8  0D                 	db	13
   770  00FFA9  0A                 	db	10
   771  00FFAA  00                 	db	0
   772  00FFAB                     STR_11:
   773                           
   774                           ; BSR set to: 0
   775  00FFAB  20                 	db	32
   776  00FFAC  20                 	db	32
   777  00FFAD  20                 	db	32
   778  00FFAE  42                 	db	66	;'B'
   779  00FFAF  79                 	db	121	;'y'
   780  00FFB0  74                 	db	116	;'t'
   781  00FFB1  65                 	db	101	;'e'
   782  00FFB2  20                 	db	32
   783  00FFB3  25                 	db	37
   784  00FFB4  69                 	db	105	;'i'
   785  00FFB5  20                 	db	32
   786  00FFB6  3A                 	db	58	;':'
   787  00FFB7  20                 	db	32
   788  00FFB8  30                 	db	48	;'0'
   789  00FFB9  78                 	db	120	;'x'
   790  00FFBA  25                 	db	37
   791  00FFBB  30                 	db	48	;'0'
   792  00FFBC  32                 	db	50	;'2'
   793  00FFBD  78                 	db	120	;'x'
   794  00FFBE  20                 	db	32
   795  00FFBF  0D                 	db	13
   796  00FFC0  0A                 	db	10
   797  00FFC1  00                 	db	0
   798  00FFC2                     STR_18:
   799                           
   800                           ; BSR set to: 0
   801  00FFC2  43                 	db	67	;'C'
   802  00FFC3  52                 	db	82	;'R'
   803  00FFC4  43                 	db	67	;'C'
   804  00FFC5  20                 	db	32
   805  00FFC6  43                 	db	67	;'C'
   806  00FFC7  68                 	db	104	;'h'
   807  00FFC8  65                 	db	101	;'e'
   808  00FFC9  63                 	db	99	;'c'
   809  00FFCA  6B                 	db	107	;'k'
   810  00FFCB  65                 	db	101	;'e'
   811  00FFCC  64                 	db	100	;'d'
   812  00FFCD  20                 	db	32
   813  00FFCE  4F                 	db	79	;'O'
   814  00FFCF  75                 	db	117	;'u'
   815  00FFD0  74                 	db	116	;'t'
   816  00FFD1  2E                 	db	46
   817  00FFD2  20                 	db	32
   818  00FFD3  0D                 	db	13
   819  00FFD4  0A                 	db	10
   820  00FFD5  0A                 	db	10
   821  00FFD6  00                 	db	0
   822  00FFD7                     STR_10:
   823                           
   824                           ; BSR set to: 0
   825  00FFD7  4D                 	db	77	;'M'
   826  00FFD8  6F                 	db	111	;'o'
   827  00FFD9  64                 	db	100	;'d'
   828  00FFDA  62                 	db	98	;'b'
   829  00FFDB  75                 	db	117	;'u'
   830  00FFDC  73                 	db	115	;'s'
   831  00FFDD  20                 	db	32
   832  00FFDE  52                 	db	82	;'R'
   833  00FFDF  65                 	db	101	;'e'
   834  00FFE0  73                 	db	115	;'s'
   835  00FFE1  70                 	db	112	;'p'
   836  00FFE2  6F                 	db	111	;'o'
   837  00FFE3  6E                 	db	110	;'n'
   838  00FFE4  73                 	db	115	;'s'
   839  00FFE5  65                 	db	101	;'e'
   840  00FFE6  3A                 	db	58	;':'
   841  00FFE7  0D                 	db	13
   842  00FFE8  0A                 	db	10
   843  00FFE9  00                 	db	0
   844  00FFEA                     STR_4:
   845                           
   846                           ; BSR set to: 0
   847  00FFEA  4D                 	db	77	;'M'
   848  00FFEB  61                 	db	97	;'a'
   849  00FFEC  72                 	db	114	;'r'
   850  00FFED  20                 	db	32
   851  00FFEE  20                 	db	32
   852  00FFEF  37                 	db	55	;'7'
   853  00FFF0  20                 	db	32
   854  00FFF1  32                 	db	50	;'2'
   855  00FFF2  30                 	db	48	;'0'
   856  00FFF3  32                 	db	50	;'2'
   857  00FFF4  31                 	db	49	;'1'
   858  00FFF5  00                 	db	0
   859  00FFF6                     STR_5:
   860                           
   861                           ; BSR set to: 0
   862  00FFF6  31                 	db	49	;'1'
   863  00FFF7  32                 	db	50	;'2'
   864  00FFF8  3A                 	db	58	;':'
   865  00FFF9  31                 	db	49	;'1'
   866  00FFFA  30                 	db	48	;'0'
   867  00FFFB  3A                 	db	58	;':'
   868  00FFFC  34                 	db	52	;'4'
   869  00FFFD  31                 	db	49	;'1'
   870  00FFFE  00                 	db	0
   871  0000                     
   872                           ; #config settings
   873  00FFFF  00                 	db	0	; dummy byte at the end
   874  0000                     
   875                           	psect	cinit
   876  001FB6                     __pcinit:
   877                           	opt callstack 0
   878  001FB6                     start_initialization:
   879                           	opt callstack 0
   880  001FB6                     __initialization:
   881                           	opt callstack 0
   882                           
   883                           ; Initialize objects allocated to BANK1 (32 bytes)
   884                           ; load TBLPTR registers with __pidataBANK1
   885  001FB6  0EF6               	movlw	low __pidataBANK1
   886  001FB8  6EF6               	movwf	tblptrl,c
   887  001FBA  0E28               	movlw	high __pidataBANK1
   888  001FBC  6EF7               	movwf	tblptrh,c
   889  001FBE  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   890  001FC0  6EF8               	movwf	tblptru,c
   891  001FC2  EE01  F0C4         	lfsr	0,__pdataBANK1
   892  001FC6  EE10 F020          	lfsr	1,32
   893  001FCA                     copy_data0:
   894  001FCA  0009               	tblrd		*+
   895  001FCC  CFF5 FFEE          	movff	tablat,postinc0
   896  001FD0  50E5               	movf	postdec1,w,c
   897  001FD2  50E1               	movf	fsr1l,w,c
   898  001FD4  E1FA               	bnz	copy_data0
   899                           
   900                           ; Initialize objects allocated to BANK0 (11 bytes)
   901                           ; load TBLPTR registers with __pidataBANK0
   902  001FD6  0EA8               	movlw	low __pidataBANK0
   903  001FD8  6EF6               	movwf	tblptrl,c
   904  001FDA  0E29               	movlw	high __pidataBANK0
   905  001FDC  6EF7               	movwf	tblptrh,c
   906  001FDE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   907  001FE0  6EF8               	movwf	tblptru,c
   908  001FE2  EE00  F0F5         	lfsr	0,__pdataBANK0
   909  001FE6  EE10 F00B          	lfsr	1,11
   910  001FEA                     copy_data1:
   911  001FEA  0009               	tblrd		*+
   912  001FEC  CFF5 FFEE          	movff	tablat,postinc0
   913  001FF0  50E5               	movf	postdec1,w,c
   914  001FF2  50E1               	movf	fsr1l,w,c
   915  001FF4  E1FA               	bnz	copy_data1
   916                           
   917                           ; Clear objects allocated to BANK3 (100 bytes)
   918  001FF6  EE03  F000         	lfsr	0,__pbssBANK3
   919  001FFA  0E64               	movlw	100
   920  001FFC                     clear_0:
   921  001FFC  6AEE               	clrf	postinc0,c
   922  001FFE  06E8               	decf	wreg,f,c
   923  002000  E1FD               	bnz	clear_0
   924                           
   925                           ; Clear objects allocated to BANK2 (200 bytes)
   926  002002  EE02  F000         	lfsr	0,__pbssBANK2
   927  002006  0EC8               	movlw	200
   928  002008                     clear_1:
   929  002008  6AEE               	clrf	postinc0,c
   930  00200A  06E8               	decf	wreg,f,c
   931  00200C  E1FD               	bnz	clear_1
   932                           
   933                           ; Clear objects allocated to BANK1 (196 bytes)
   934  00200E  EE01  F000         	lfsr	0,__pbssBANK1
   935  002012  0EC4               	movlw	196
   936  002014                     clear_2:
   937  002014  6AEE               	clrf	postinc0,c
   938  002016  06E8               	decf	wreg,f,c
   939  002018  E1FD               	bnz	clear_2
   940                           
   941                           ; Clear objects allocated to BANK0 (67 bytes)
   942  00201A  EE00  F060         	lfsr	0,__pbssBANK0
   943  00201E  0E43               	movlw	67
   944  002020                     clear_3:
   945  002020  6AEE               	clrf	postinc0,c
   946  002022  06E8               	decf	wreg,f,c
   947  002024  E1FD               	bnz	clear_3
   948                           
   949                           ; Clear objects allocated to COMRAM (4 bytes)
   950  002026  6A59               	clrf	(__pbssCOMRAM+3)& (0+255),c
   951  002028  6A58               	clrf	(__pbssCOMRAM+2)& (0+255),c
   952  00202A  6A57               	clrf	(__pbssCOMRAM+1)& (0+255),c
   953  00202C  6A56               	clrf	__pbssCOMRAM& (0+255),c
   954  00202E                     end_of_initialization:
   955                           	opt callstack 0
   956  00202E                     __end_of__initialization:
   957                           	opt callstack 0
   958  00202E  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   959  002030  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   960  002032  0100               	movlb	0
   961  002034  EF94  F009         	goto	_main	;jump to C main() function
   962                           
   963                           	psect	bssCOMRAM
   964  000056                     __pbssCOMRAM:
   965                           	opt callstack 0
   966  000056                     _flags:
   967                           	opt callstack 0
   968  000056                     	ds	2
   969  000058                     _eusart1RxHead:
   970                           	opt callstack 0
   971  000058                     	ds	1
   972  000059                     _eusart2RxHead:
   973                           	opt callstack 0
   974  000059                     	ds	1
   975                           
   976                           	psect	bssBANK0
   977  000060                     __pbssBANK0:
   978                           	opt callstack 0
   979  000060                     _eusart1TxBuffer:
   980                           	opt callstack 0
   981  000060                     	ds	16
   982  000070                     _eusart2RxStatusBuffer:
   983                           	opt callstack 0
   984  000070                     	ds	8
   985  000078                     _eusart2RxBuffer:
   986                           	opt callstack 0
   987  000078                     	ds	8
   988  000080                     _eusart2TxBuffer:
   989                           	opt callstack 0
   990  000080                     	ds	8
   991  000088                     _nout:
   992                           	opt callstack 0
   993  000088                     	ds	2
   994  00008A                     _width:
   995                           	opt callstack 0
   996  00008A                     	ds	2
   997  00008C                     _prec:
   998                           	opt callstack 0
   999  00008C                     	ds	2
  1000  00008E                     _ByteNum:
  1001                           	opt callstack 0
  1002  00008E                     	ds	2
  1003  000090                     _MBResCnt:
  1004                           	opt callstack 0
  1005  000090                     	ds	2
  1006  000092                     _i:
  1007                           	opt callstack 0
  1008  000092                     	ds	2
  1009  000094                     _ModDataCnt:
  1010                           	opt callstack 0
  1011  000094                     	ds	2
  1012  000096                     _rxStatus:
  1013                           	opt callstack 0
  1014  000096                     	ds	1
  1015  000097                     _RXStat:
  1016                           	opt callstack 0
  1017  000097                     	ds	1
  1018  000098                     _Debug:
  1019                           	opt callstack 0
  1020  000098                     	ds	1
  1021  000099                     _eusart1RxLastError:
  1022                           	opt callstack 0
  1023  000099                     	ds	1
  1024  00009A                     _eusart1RxCount:
  1025                           	opt callstack 0
  1026  00009A                     	ds	1
  1027  00009B                     _eusart1RxTail:
  1028                           	opt callstack 0
  1029  00009B                     	ds	1
  1030  00009C                     _eusart1TxTail:
  1031                           	opt callstack 0
  1032  00009C                     	ds	1
  1033  00009D                     _eusart1TxHead:
  1034                           	opt callstack 0
  1035  00009D                     	ds	1
  1036  00009E                     _eusart2RxLastError:
  1037                           	opt callstack 0
  1038  00009E                     	ds	1
  1039  00009F                     _eusart2RxCount:
  1040                           	opt callstack 0
  1041  00009F                     	ds	1
  1042  0000A0                     _eusart2RxTail:
  1043                           	opt callstack 0
  1044  0000A0                     	ds	1
  1045  0000A1                     _eusart2TxTail:
  1046                           	opt callstack 0
  1047  0000A1                     	ds	1
  1048  0000A2                     _eusart2TxHead:
  1049                           	opt callstack 0
  1050  0000A2                     	ds	1
  1051                           
  1052                           	psect	dataBANK0
  1053  0000F5                     __pdataBANK0:
  1054                           	opt callstack 0
  1055  0000F5                     stoa@F1139:
  1056                           	opt callstack 0
  1057  0000F5                     	ds	7
  1058  0000FC                     _ExpectedBytes:
  1059                           	opt callstack 0
  1060  0000FC                     	ds	2
  1061  0000FE                     _MBResCRC:
  1062                           	opt callstack 0
  1063  0000FE                     	ds	2
  1064                           
  1065                           	psect	bssBANK1
  1066  000100                     __pbssBANK1:
  1067                           	opt callstack 0
  1068  000100                     _ModbusData:
  1069                           	opt callstack 0
  1070  000100                     	ds	100
  1071  000164                     _MB400xx:
  1072                           	opt callstack 0
  1073  000164                     	ds	32
  1074  000184                     _dbuf:
  1075                           	opt callstack 0
  1076  000184                     	ds	32
  1077  0001A4                     _MBRespon:
  1078                           	opt callstack 0
  1079  0001A4                     	ds	32
  1080                           
  1081                           	psect	dataBANK1
  1082  0001C4                     __pdataBANK1:
  1083                           	opt callstack 0
  1084  0001C4                     _MB300xx:
  1085                           	opt callstack 0
  1086  0001C4                     	ds	32
  1087                           
  1088                           	psect	bssBANK2
  1089  000200                     __pbssBANK2:
  1090                           	opt callstack 0
  1091  000200                     _eusart1RxStatusBuffer:
  1092                           	opt callstack 0
  1093  000200                     	ds	100
  1094  000264                     _eusart1RxBuffer:
  1095                           	opt callstack 0
  1096  000264                     	ds	100
  1097                           
  1098                           	psect	bssBANK3
  1099  000300                     __pbssBANK3:
  1100                           	opt callstack 0
  1101  000300                     _rxData:
  1102                           	opt callstack 0
  1103  000300                     	ds	100
  1104                           
  1105                           	psect	cstackBANK0
  1106  0000A3                     __pcstackBANK0:
  1107                           	opt callstack 0
  1108  0000A3                     vfpfcnvrt@ll:
  1109                           	opt callstack 0
  1110                           
  1111                           ; 8 bytes @ 0x0
  1112  0000A3                     	ds	8
  1113  0000AB                     vfpfcnvrt@cp:
  1114                           	opt callstack 0
  1115                           
  1116                           ; 2 bytes @ 0x8
  1117  0000AB                     	ds	2
  1118  0000AD                     vfpfcnvrt@c:
  1119                           	opt callstack 0
  1120                           
  1121                           ; 1 bytes @ 0xA
  1122  0000AD                     	ds	1
  1123  0000AE                     vfpfcnvrt@done:
  1124                           	opt callstack 0
  1125                           
  1126                           ; 2 bytes @ 0xB
  1127  0000AE                     	ds	2
  1128  0000B0                     _vfpfcnvrt$1356:
  1129                           	opt callstack 0
  1130                           
  1131                           ; 2 bytes @ 0xD
  1132  0000B0                     	ds	2
  1133  0000B2                     vfpfcnvrt@llu:
  1134                           	opt callstack 0
  1135                           
  1136                           ; 8 bytes @ 0xF
  1137  0000B2                     	ds	8
  1138  0000BA                     ?_vfprintf:
  1139                           	opt callstack 0
  1140  0000BA                     vfprintf@fp:
  1141                           	opt callstack 0
  1142                           
  1143                           ; 2 bytes @ 0x17
  1144  0000BA                     	ds	2
  1145  0000BC                     vfprintf@fmt:
  1146                           	opt callstack 0
  1147                           
  1148                           ; 2 bytes @ 0x19
  1149  0000BC                     	ds	2
  1150  0000BE                     vfprintf@ap:
  1151                           	opt callstack 0
  1152                           
  1153                           ; 2 bytes @ 0x1B
  1154  0000BE                     	ds	2
  1155  0000C0                     ?_printf:
  1156                           	opt callstack 0
  1157  0000C0                     printf@fmt:
  1158                           	opt callstack 0
  1159                           
  1160                           ; 2 bytes @ 0x1D
  1161  0000C0                     	ds	10
  1162  0000CA                     printf@ap:
  1163                           	opt callstack 0
  1164                           
  1165                           ; 2 bytes @ 0x27
  1166  0000CA                     	ds	2
  1167  0000CC                     ??_checkCRC:
  1168  0000CC                     PrintModRespon@i:
  1169                           	opt callstack 0
  1170  0000CC                     PrintModbus@i:
  1171                           	opt callstack 0
  1172                           
  1173                           ; 2 bytes @ 0x29
  1174  0000CC                     	ds	5
  1175  0000D1                     checkCRC@crcHigh:
  1176                           	opt callstack 0
  1177                           
  1178                           ; 2 bytes @ 0x2E
  1179  0000D1                     	ds	2
  1180  0000D3                     checkCRC@crcLow:
  1181                           	opt callstack 0
  1182                           
  1183                           ; 2 bytes @ 0x30
  1184  0000D3                     	ds	2
  1185  0000D5                     checkCRC@j:
  1186                           	opt callstack 0
  1187                           
  1188                           ; 2 bytes @ 0x32
  1189  0000D5                     	ds	2
  1190  0000D7                     checkCRC@crc:
  1191                           	opt callstack 0
  1192                           
  1193                           ; 2 bytes @ 0x34
  1194  0000D7                     	ds	2
  1195  0000D9                     checkCRC@i:
  1196                           	opt callstack 0
  1197                           
  1198                           ; 2 bytes @ 0x36
  1199  0000D9                     	ds	2
  1200  0000DB                     ??_main:
  1201                           
  1202                           ; 1 bytes @ 0x38
  1203  0000DB                     	ds	4
  1204                           
  1205                           	psect	cstackCOMRAM
  1206  000001                     __pcstackCOMRAM:
  1207                           	opt callstack 0
  1208  000001                     ??_INTERRUPT_InterruptManager:
  1209  000001                     
  1210                           ; 1 bytes @ 0x0
  1211  000001                     	ds	4
  1212  000005                     ??_ClearRxBuff:
  1213  000005                     ??_AddRxBuffToModBus:
  1214  000005                     ?_strlen:
  1215                           	opt callstack 0
  1216  000005                     ?_isupper:
  1217                           	opt callstack 0
  1218  000005                     ?_isalpha:
  1219                           	opt callstack 0
  1220  000005                     ?_isdigit:
  1221                           	opt callstack 0
  1222  000005                     ?_isspace:
  1223                           	opt callstack 0
  1224  000005                     ?_islower:
  1225                           	opt callstack 0
  1226  000005                     ?_generateCRCHI:
  1227                           	opt callstack 0
  1228  000005                     ?_generateCRCLo:
  1229                           	opt callstack 0
  1230  000005                     ?___wmul:
  1231                           	opt callstack 0
  1232  000005                     ?___aodiv:
  1233                           	opt callstack 0
  1234  000005                     ?___aomod:
  1235                           	opt callstack 0
  1236  000005                     ?___lodiv:
  1237                           	opt callstack 0
  1238  000005                     ?___lomod:
  1239                           	opt callstack 0
  1240  000005                     EUSART2_Write@txData:
  1241                           	opt callstack 0
  1242  000005                     EUSART1_Read@readValue:
  1243                           	opt callstack 0
  1244  000005                     EUSART1_Write@txData:
  1245                           	opt callstack 0
  1246  000005                     EUSART2_SetFramingErrorHandler@interruptHandler:
  1247                           	opt callstack 0
  1248  000005                     EUSART2_SetOverrunErrorHandler@interruptHandler:
  1249                           	opt callstack 0
  1250  000005                     EUSART2_SetErrorHandler@interruptHandler:
  1251                           	opt callstack 0
  1252  000005                     EUSART2_SetTxInterruptHandler@interruptHandler:
  1253                           	opt callstack 0
  1254  000005                     EUSART2_SetRxInterruptHandler@interruptHandler:
  1255                           	opt callstack 0
  1256  000005                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1257                           	opt callstack 0
  1258  000005                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1259                           	opt callstack 0
  1260  000005                     EUSART1_SetErrorHandler@interruptHandler:
  1261                           	opt callstack 0
  1262  000005                     EUSART1_SetTxInterruptHandler@interruptHandler:
  1263                           	opt callstack 0
  1264  000005                     EUSART1_SetRxInterruptHandler@interruptHandler:
  1265                           	opt callstack 0
  1266  000005                     ClearModbusRespon@i:
  1267                           	opt callstack 0
  1268  000005                     generateCRCHI@MessCnt:
  1269                           	opt callstack 0
  1270  000005                     generateCRCLo@MessCnt:
  1271                           	opt callstack 0
  1272  000005                     ClearModbusData@i:
  1273                           	opt callstack 0
  1274  000005                     ___wmul@multiplier:
  1275                           	opt callstack 0
  1276  000005                     isalpha@c:
  1277                           	opt callstack 0
  1278  000005                     isdigit@c:
  1279                           	opt callstack 0
  1280  000005                     isspace@c:
  1281                           	opt callstack 0
  1282  000005                     isupper@c:
  1283                           	opt callstack 0
  1284  000005                     strlen@s:
  1285                           	opt callstack 0
  1286  000005                     islower@c:
  1287                           	opt callstack 0
  1288  000005                     ___aodiv@dividend:
  1289                           	opt callstack 0
  1290  000005                     ___aomod@dividend:
  1291                           	opt callstack 0
  1292  000005                     ___lodiv@dividend:
  1293                           	opt callstack 0
  1294  000005                     ___lomod@dividend:
  1295                           	opt callstack 0
  1296                           
  1297                           ; 8 bytes @ 0x4
  1298  000005                     	ds	1
  1299  000006                     putch@txData:
  1300                           	opt callstack 0
  1301  000006                     UART1_Write_string@data:
  1302                           	opt callstack 0
  1303  000006                     ClearRxBuff@i:
  1304                           	opt callstack 0
  1305  000006                     AddRxBuffToModBus@i:
  1306                           	opt callstack 0
  1307                           
  1308                           ; 2 bytes @ 0x5
  1309  000006                     	ds	1
  1310  000007                     ??_isupper:
  1311  000007                     ??_isalpha:
  1312  000007                     ??_isdigit:
  1313  000007                     ??_isspace:
  1314  000007                     ??_islower:
  1315  000007                     ??_generateCRCHI:
  1316  000007                     ??_generateCRCLo:
  1317  000007                     ___wmul@multiplicand:
  1318                           	opt callstack 0
  1319  000007                     fputc@c:
  1320                           	opt callstack 0
  1321  000007                     strlen@a:
  1322                           	opt callstack 0
  1323                           
  1324                           ; 2 bytes @ 0x6
  1325  000007                     	ds	1
  1326  000008                     UART1_Write_string@data_len:
  1327                           	opt callstack 0
  1328  000008                     generateCRCHI@crcLow:
  1329                           	opt callstack 0
  1330                           
  1331                           ; 2 bytes @ 0x7
  1332  000008                     	ds	1
  1333  000009                     ___wmul@product:
  1334                           	opt callstack 0
  1335  000009                     fputc@fp:
  1336                           	opt callstack 0
  1337                           
  1338                           ; 2 bytes @ 0x8
  1339  000009                     	ds	1
  1340  00000A                     ??_UART1_Write_string:
  1341  00000A                     generateCRCHI@crcHigh:
  1342                           	opt callstack 0
  1343                           
  1344                           ; 2 bytes @ 0x9
  1345  00000A                     	ds	1
  1346  00000B                     ??_fputc:
  1347  00000B                     ?_toupper:
  1348                           	opt callstack 0
  1349  00000B                     _isspace$1843:
  1350                           	opt callstack 0
  1351  00000B                     UART1_Write_string@i:
  1352                           	opt callstack 0
  1353  00000B                     generateCRCLo@crcLow:
  1354                           	opt callstack 0
  1355  00000B                     toupper@c:
  1356                           	opt callstack 0
  1357                           
  1358                           ; 2 bytes @ 0xA
  1359  00000B                     	ds	1
  1360  00000C                     ?_atoi:
  1361                           	opt callstack 0
  1362  00000C                     generateCRCHI@i:
  1363                           	opt callstack 0
  1364  00000C                     atoi@s:
  1365                           	opt callstack 0
  1366                           
  1367                           ; 2 bytes @ 0xB
  1368  00000C                     	ds	1
  1369  00000D                     ??_toupper:
  1370  00000D                     generateCRCLo@i:
  1371                           	opt callstack 0
  1372  00000D                     ___aodiv@divisor:
  1373                           	opt callstack 0
  1374  00000D                     ___aomod@divisor:
  1375                           	opt callstack 0
  1376  00000D                     ___lodiv@divisor:
  1377                           	opt callstack 0
  1378  00000D                     ___lomod@divisor:
  1379                           	opt callstack 0
  1380                           
  1381                           ; 8 bytes @ 0xC
  1382  00000D                     	ds	1
  1383  00000E                     ??_atoi:
  1384  00000E                     generateCRCHI@j:
  1385                           	opt callstack 0
  1386                           
  1387                           ; 2 bytes @ 0xD
  1388  00000E                     	ds	1
  1389  00000F                     generateCRCLo@j:
  1390                           	opt callstack 0
  1391                           
  1392                           ; 2 bytes @ 0xE
  1393  00000F                     	ds	1
  1394  000010                     ?_stoa:
  1395                           	opt callstack 0
  1396  000010                     generateCRCHI@crc:
  1397                           	opt callstack 0
  1398  000010                     stoa@fp:
  1399                           	opt callstack 0
  1400  000010                     fputs@s:
  1401                           	opt callstack 0
  1402                           
  1403                           ; 2 bytes @ 0xF
  1404  000010                     	ds	1
  1405  000011                     generateCRCLo@crc:
  1406                           	opt callstack 0
  1407  000011                     _toupper$1907:
  1408                           	opt callstack 0
  1409                           
  1410                           ; 2 bytes @ 0x10
  1411  000011                     	ds	1
  1412  000012                     stoa@s:
  1413                           	opt callstack 0
  1414  000012                     atoi@neg:
  1415                           	opt callstack 0
  1416  000012                     fputs@fp:
  1417                           	opt callstack 0
  1418                           
  1419                           ; 2 bytes @ 0x11
  1420  000012                     	ds	2
  1421  000014                     ??_stoa:
  1422  000014                     fputs@c:
  1423                           	opt callstack 0
  1424  000014                     _atoi$1816:
  1425                           	opt callstack 0
  1426                           
  1427                           ; 2 bytes @ 0x13
  1428  000014                     	ds	1
  1429  000015                     ___aodiv@counter:
  1430                           	opt callstack 0
  1431  000015                     ___aomod@counter:
  1432                           	opt callstack 0
  1433  000015                     ___lomod@counter:
  1434                           	opt callstack 0
  1435  000015                     fputs@i:
  1436                           	opt callstack 0
  1437  000015                     stoa@nuls:
  1438                           	opt callstack 0
  1439  000015                     ___lodiv@quotient:
  1440                           	opt callstack 0
  1441                           
  1442                           ; 8 bytes @ 0x14
  1443  000015                     	ds	1
  1444  000016                     ___aodiv@sign:
  1445                           	opt callstack 0
  1446  000016                     ___aomod@sign:
  1447                           	opt callstack 0
  1448  000016                     _atoi$1818:
  1449                           	opt callstack 0
  1450                           
  1451                           ; 2 bytes @ 0x15
  1452  000016                     	ds	1
  1453  000017                     ?_abs:
  1454                           	opt callstack 0
  1455  000017                     ?_pad:
  1456                           	opt callstack 0
  1457  000017                     pad@fp:
  1458                           	opt callstack 0
  1459  000017                     abs@a:
  1460                           	opt callstack 0
  1461  000017                     ___aodiv@quotient:
  1462                           	opt callstack 0
  1463                           
  1464                           ; 8 bytes @ 0x16
  1465  000017                     	ds	1
  1466  000018                     _atoi$1817:
  1467                           	opt callstack 0
  1468                           
  1469                           ; 1 bytes @ 0x17
  1470  000018                     	ds	1
  1471  000019                     ??_abs:
  1472  000019                     pad@buf:
  1473                           	opt callstack 0
  1474  000019                     atoi@n:
  1475                           	opt callstack 0
  1476                           
  1477                           ; 2 bytes @ 0x18
  1478  000019                     	ds	2
  1479  00001B                     pad@p:
  1480                           	opt callstack 0
  1481                           
  1482                           ; 2 bytes @ 0x1A
  1483  00001B                     	ds	1
  1484  00001C                     stoa@i:
  1485                           	opt callstack 0
  1486                           
  1487                           ; 2 bytes @ 0x1B
  1488  00001C                     	ds	1
  1489  00001D                     ??_pad:
  1490  00001D                     ___lodiv@counter:
  1491                           	opt callstack 0
  1492                           
  1493                           ; 1 bytes @ 0x1C
  1494  00001D                     	ds	1
  1495  00001E                     pad@i:
  1496                           	opt callstack 0
  1497  00001E                     stoa@w:
  1498                           	opt callstack 0
  1499                           
  1500                           ; 2 bytes @ 0x1D
  1501  00001E                     	ds	2
  1502  000020                     pad@w:
  1503                           	opt callstack 0
  1504  000020                     stoa@cp:
  1505                           	opt callstack 0
  1506                           
  1507                           ; 2 bytes @ 0x1F
  1508  000020                     	ds	2
  1509  000022                     ?_dtoa:
  1510                           	opt callstack 0
  1511  000022                     ?_utoa:
  1512                           	opt callstack 0
  1513  000022                     ?_xtoa:
  1514                           	opt callstack 0
  1515  000022                     dtoa@fp:
  1516                           	opt callstack 0
  1517  000022                     stoa@p:
  1518                           	opt callstack 0
  1519  000022                     utoa@fp:
  1520                           	opt callstack 0
  1521  000022                     xtoa@fp:
  1522                           	opt callstack 0
  1523                           
  1524                           ; 2 bytes @ 0x21
  1525  000022                     	ds	2
  1526  000024                     stoa@l:
  1527                           	opt callstack 0
  1528  000024                     dtoa@d:
  1529                           	opt callstack 0
  1530  000024                     utoa@d:
  1531                           	opt callstack 0
  1532  000024                     xtoa@d:
  1533                           	opt callstack 0
  1534                           
  1535                           ; 8 bytes @ 0x23
  1536  000024                     	ds	8
  1537  00002C                     ??_dtoa:
  1538  00002C                     ??_utoa:
  1539  00002C                     xtoa@x:
  1540                           	opt callstack 0
  1541                           
  1542                           ; 1 bytes @ 0x2B
  1543  00002C                     	ds	1
  1544  00002D                     ??_xtoa:
  1545                           
  1546                           ; 1 bytes @ 0x2C
  1547  00002D                     	ds	7
  1548  000034                     _dtoa$1312:
  1549                           	opt callstack 0
  1550  000034                     utoa@p:
  1551                           	opt callstack 0
  1552                           
  1553                           ; 2 bytes @ 0x33
  1554  000034                     	ds	1
  1555  000035                     _xtoa$1341:
  1556                           	opt callstack 0
  1557                           
  1558                           ; 2 bytes @ 0x34
  1559  000035                     	ds	1
  1560  000036                     dtoa@p:
  1561                           	opt callstack 0
  1562  000036                     utoa@w:
  1563                           	opt callstack 0
  1564                           
  1565                           ; 2 bytes @ 0x35
  1566  000036                     	ds	1
  1567  000037                     _xtoa$1342:
  1568                           	opt callstack 0
  1569                           
  1570                           ; 2 bytes @ 0x36
  1571  000037                     	ds	1
  1572  000038                     dtoa@w:
  1573                           	opt callstack 0
  1574  000038                     utoa@n:
  1575                           	opt callstack 0
  1576                           
  1577                           ; 8 bytes @ 0x37
  1578  000038                     	ds	1
  1579  000039                     xtoa@p:
  1580                           	opt callstack 0
  1581                           
  1582                           ; 2 bytes @ 0x38
  1583  000039                     	ds	1
  1584  00003A                     dtoa@s:
  1585                           	opt callstack 0
  1586                           
  1587                           ; 2 bytes @ 0x39
  1588  00003A                     	ds	1
  1589  00003B                     xtoa@w:
  1590                           	opt callstack 0
  1591                           
  1592                           ; 2 bytes @ 0x3A
  1593  00003B                     	ds	1
  1594  00003C                     dtoa@n:
  1595                           	opt callstack 0
  1596                           
  1597                           ; 8 bytes @ 0x3B
  1598  00003C                     	ds	1
  1599  00003D                     xtoa@n:
  1600                           	opt callstack 0
  1601                           
  1602                           ; 8 bytes @ 0x3C
  1603  00003D                     	ds	3
  1604  000040                     utoa@i:
  1605                           	opt callstack 0
  1606                           
  1607                           ; 2 bytes @ 0x3F
  1608  000040                     	ds	4
  1609  000044                     dtoa@i:
  1610                           	opt callstack 0
  1611                           
  1612                           ; 2 bytes @ 0x43
  1613  000044                     	ds	1
  1614  000045                     xtoa@i:
  1615                           	opt callstack 0
  1616                           
  1617                           ; 2 bytes @ 0x44
  1618  000045                     	ds	2
  1619  000047                     xtoa@c:
  1620                           	opt callstack 0
  1621                           
  1622                           ; 2 bytes @ 0x46
  1623  000047                     	ds	2
  1624  000049                     ?_vfpfcnvrt:
  1625                           	opt callstack 0
  1626  000049                     vfpfcnvrt@fp:
  1627                           	opt callstack 0
  1628                           
  1629                           ; 2 bytes @ 0x48
  1630  000049                     	ds	2
  1631  00004B                     vfpfcnvrt@fmt:
  1632                           	opt callstack 0
  1633                           
  1634                           ; 2 bytes @ 0x4A
  1635  00004B                     	ds	2
  1636  00004D                     vfpfcnvrt@ap:
  1637                           	opt callstack 0
  1638                           
  1639                           ; 2 bytes @ 0x4C
  1640  00004D                     	ds	2
  1641  00004F                     ??_vfpfcnvrt:
  1642                           
  1643                           ; 1 bytes @ 0x4E
  1644  00004F                     	ds	4
  1645  000053                     vfprintf@cfmt:
  1646                           	opt callstack 0
  1647                           
  1648                           ; 2 bytes @ 0x52
  1649  000053                     	ds	2
  1650  000055                     ??_ModbusRx:
  1651  000055                     ??_PrintModRespon:
  1652  000055                     ??_PrintModbus:
  1653                           
  1654                           ; 1 bytes @ 0x54
  1655  000055                     	ds	1
  1656                           
  1657 ;;
  1658 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1659 ;;
  1660 ;; *************** function _main *****************
  1661 ;; Defined at:
  1662 ;;		line 209 in file "main.c"
  1663 ;; Parameters:    Size  Location     Type
  1664 ;;		None
  1665 ;; Auto vars:     Size  Location     Type
  1666 ;;  RXStat          1    0        _Bool 
  1667 ;; Return value:  Size  Location     Type
  1668 ;;                  1    wreg      void 
  1669 ;; Registers used:
  1670 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1671 ;; Tracked objects:
  1672 ;;		On entry : 0/0
  1673 ;;		On exit  : 0/0
  1674 ;;		Unchanged: 0/0
  1675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1677 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1678 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1679 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1680 ;;Total ram usage:        5 bytes
  1681 ;; Hardware stack levels required when called:   15
  1682 ;; This function calls:
  1683 ;;		_ClearModbusData
  1684 ;;		_ClearModbusRespon
  1685 ;;		_ClearRxBuff
  1686 ;;		_InitialiseString
  1687 ;;		_ModbusRx
  1688 ;;		_PrintModRespon
  1689 ;;		_PrintModbus
  1690 ;;		_RXMode
  1691 ;;		_SYSTEM_Initialize
  1692 ;;		_UART1_Write_string
  1693 ;;		_generateCRCHI
  1694 ;;		_generateCRCLo
  1695 ;;		_printf
  1696 ;; This function is called by:
  1697 ;;		Startup code after reset
  1698 ;; This function uses a non-reentrant model
  1699 ;;
  1700                           
  1701                           	psect	text0
  1702  001328                     __ptext0:
  1703                           	opt callstack 0
  1704  001328                     _main:
  1705                           	opt callstack 16
  1706  001328                     
  1707                           ;main.c: 212:     SYSTEM_Initialize();
  1708  001328  EC99  F014         	call	_SYSTEM_Initialize	;wreg free
  1709  00132C                     
  1710                           ;main.c: 219:     (INTCONbits.GIE = 1);
  1711  00132C  8EF2               	bsf	242,7,c	;volatile
  1712  00132E                     
  1713                           ;main.c: 225:     (INTCONbits.PEIE = 1);
  1714  00132E  8CF2               	bsf	242,6,c	;volatile
  1715  001330  9883               	bcf	131,4,c	;volatile
  1716  001332  9A83               	bcf	131,5,c	;volatile
  1717  001334  9C83               	bcf	131,6,c	;volatile
  1718  001336  9E83               	bcf	131,7,c	;volatile
  1719  001338                     
  1720                           ;main.c: 235:     InitialiseString();
  1721  001338  EC99  F010         	call	_InitialiseString	;wreg free
  1722  00133C                     
  1723                           ;main.c: 238:     RXMode();
  1724  00133C  EC18  F015         	call	_RXMode	;wreg free
  1725  001340                     
  1726                           ;main.c: 239:     ClearRxBuff();
  1727  001340  ECE8  F012         	call	_ClearRxBuff	;wreg free
  1728  001344                     
  1729                           ;main.c: 240:     ClearModbusRespon();
  1730  001344  EC75  F013         	call	_ClearModbusRespon	;wreg free
  1731  001348                     l5504:
  1732                           
  1733                           ;main.c: 246:     {;main.c: 247:         if(ModbusRx() == 1){
  1734  001348  ECA8  F00B         	call	_ModbusRx	;wreg free
  1735  00134C  06E8               	decf	wreg,f,c
  1736  00134E  A4D8               	btfss	status,2,c
  1737  001350  EFAC  F009         	goto	u5611
  1738  001354  EFAE  F009         	goto	u5610
  1739  001358                     u5611:
  1740  001358  EFA4  F009         	goto	l5504
  1741  00135C                     u5610:
  1742  00135C                     
  1743                           ;main.c: 249:             PrintModbus();
  1744  00135C  ECD7  F010         	call	_PrintModbus	;wreg free
  1745  001360                     
  1746                           ;main.c: 251:             if(ModbusData[1] == 0x03)
  1747  001360  0E03               	movlw	3
  1748  001362  0101               	movlb	1	; () banked
  1749  001364  1901               	xorwf	(_ModbusData+1)& (0+255),w,b
  1750  001366  A4D8               	btfss	status,2,c
  1751  001368  EFB8  F009         	goto	u5621
  1752  00136C  EFBA  F009         	goto	u5620
  1753  001370                     u5621:
  1754  001370  EF3E  F00A         	goto	l5538
  1755  001374                     u5620:
  1756  001374                     
  1757                           ; BSR set to: 1
  1758                           ;main.c: 252:             {;main.c: 262:                 MBResCnt = 0;
  1759  001374  0E00               	movlw	0
  1760  001376  0100               	movlb	0	; () banked
  1761  001378  6F91               	movwf	(_MBResCnt+1)& (0+255),b
  1762  00137A  0E00               	movlw	0
  1763  00137C  6F90               	movwf	_MBResCnt& (0+255),b
  1764  00137E                     
  1765                           ; BSR set to: 0
  1766                           ;main.c: 263:                 MBRespon[0] = ModbusData[0];
  1767  00137E  C100  F1A4         	movff	_ModbusData,_MBRespon
  1768  001382                     
  1769                           ; BSR set to: 0
  1770                           ;main.c: 264:                 MBRespon[1] = ModbusData[1];
  1771  001382  C101  F1A5         	movff	_ModbusData+1,_MBRespon+1
  1772  001386                     
  1773                           ; BSR set to: 0
  1774                           ;main.c: 265:                 MBRespon[2] = ModbusData[5] *2;
  1775  001386  0101               	movlb	1	; () banked
  1776  001388  5105               	movf	(_ModbusData+5)& (0+255),w,b
  1777  00138A  0D02               	mullw	2
  1778  00138C  CFF3 F1A6          	movff	prodl,_MBRespon+2
  1779  001390                     
  1780                           ; BSR set to: 1
  1781                           ;main.c: 266:                 MBResCnt = MBResCnt + 3;
  1782  001390  0E03               	movlw	3
  1783  001392  0100               	movlb	0	; () banked
  1784  001394  2590               	addwf	_MBResCnt& (0+255),w,b
  1785  001396  6F90               	movwf	_MBResCnt& (0+255),b
  1786  001398  0E00               	movlw	0
  1787  00139A  2191               	addwfc	(_MBResCnt+1)& (0+255),w,b
  1788  00139C  6F91               	movwf	(_MBResCnt+1)& (0+255),b
  1789  00139E                     
  1790                           ; BSR set to: 0
  1791                           ;main.c: 267:                 for(i=0; i< (ModbusData[5]*2) ; i++ ){
  1792  00139E  0E00               	movlw	0
  1793  0013A0  6F93               	movwf	(_i+1)& (0+255),b
  1794  0013A2  0E00               	movlw	0
  1795  0013A4  6F92               	movwf	_i& (0+255),b
  1796  0013A6  EFF9  F009         	goto	l5528
  1797  0013AA                     l5522:
  1798                           
  1799                           ; BSR set to: 0
  1800                           ;main.c: 268:                     MBRespon[i +3] = MB300xx[ModbusData[3] +i -1];
  1801  0013AA  0EFF               	movlw	255
  1802  0013AC  6FDB               	movwf	??_main& (0+255),b
  1803  0013AE  0EFF               	movlw	255
  1804  0013B0  6FDC               	movwf	(??_main+1)& (0+255),b
  1805  0013B2  0EC4               	movlw	low _MB300xx
  1806  0013B4  6FDD               	movwf	(??_main+2)& (0+255),b
  1807  0013B6  0E01               	movlw	high _MB300xx
  1808  0013B8  6FDE               	movwf	(??_main+3)& (0+255),b
  1809  0013BA  51DB               	movf	??_main& (0+255),w,b
  1810  0013BC  27DD               	addwf	(??_main+2)& (0+255),f,b
  1811  0013BE  51DC               	movf	(??_main+1)& (0+255),w,b
  1812  0013C0  23DE               	addwfc	(??_main+3)& (0+255),f,b
  1813  0013C2  0101               	movlb	1	; () banked
  1814  0013C4  5103               	movf	(_ModbusData+3)& (0+255),w,b
  1815  0013C6  0100               	movlb	0	; () banked
  1816  0013C8  27DD               	addwf	(??_main+2)& (0+255),f,b
  1817  0013CA  0E00               	movlw	0
  1818  0013CC  23DE               	addwfc	(??_main+3)& (0+255),f,b
  1819  0013CE  5192               	movf	_i& (0+255),w,b
  1820  0013D0  25DD               	addwf	(??_main+2)& (0+255),w,b
  1821  0013D2  6ED9               	movwf	fsr2l,c
  1822  0013D4  5193               	movf	(_i+1)& (0+255),w,b
  1823  0013D6  21DE               	addwfc	(??_main+3)& (0+255),w,b
  1824  0013D8  6EDA               	movwf	fsr2h,c
  1825  0013DA  0EA7               	movlw	low (_MBRespon+3)
  1826  0013DC  2592               	addwf	_i& (0+255),w,b
  1827  0013DE  6EE1               	movwf	fsr1l,c
  1828  0013E0  0E01               	movlw	high (_MBRespon+3)
  1829  0013E2  2193               	addwfc	(_i+1)& (0+255),w,b
  1830  0013E4  6EE2               	movwf	fsr1h,c
  1831  0013E6  CFDF FFE7          	movff	indf2,indf1
  1832  0013EA                     
  1833                           ; BSR set to: 0
  1834                           ;main.c: 270:                 MBResCnt++;
  1835  0013EA  4B90               	infsnz	_MBResCnt& (0+255),f,b
  1836  0013EC  2B91               	incf	(_MBResCnt+1)& (0+255),f,b
  1837  0013EE                     
  1838                           ; BSR set to: 0
  1839                           ;main.c: 271:                 }
  1840  0013EE  4B92               	infsnz	_i& (0+255),f,b
  1841  0013F0  2B93               	incf	(_i+1)& (0+255),f,b
  1842  0013F2                     l5528:
  1843                           
  1844                           ; BSR set to: 0
  1845  0013F2  0101               	movlb	1	; () banked
  1846  0013F4  5105               	movf	(_ModbusData+5)& (0+255),w,b
  1847  0013F6  0D02               	mullw	2
  1848  0013F8  50F3               	movf	243,w,c
  1849  0013FA  0100               	movlb	0	; () banked
  1850  0013FC  5D92               	subwf	_i& (0+255),w,b
  1851  0013FE  5193               	movf	(_i+1)& (0+255),w,b
  1852  001400  0A80               	xorlw	128
  1853  001402  6FDB               	movwf	??_main& (0+255),b
  1854  001404  50F4               	movf	244,w,c
  1855  001406  0A80               	xorlw	128
  1856  001408  59DB               	subwfb	??_main& (0+255),w,b
  1857  00140A  A0D8               	btfss	status,0,c
  1858  00140C  EF0A  F00A         	goto	u5631
  1859  001410  EF0C  F00A         	goto	u5630
  1860  001414                     u5631:
  1861  001414  EFD5  F009         	goto	l5522
  1862  001418                     u5630:
  1863  001418                     
  1864                           ; BSR set to: 0
  1865                           ;main.c: 279:                 MBRespon[i +3] = generateCRCHI(MBResCnt);
  1866  001418  C090  F005         	movff	_MBResCnt,generateCRCHI@MessCnt
  1867  00141C  C091  F006         	movff	_MBResCnt+1,generateCRCHI@MessCnt+1
  1868  001420  EC9F  F00E         	call	_generateCRCHI	;wreg free
  1869  001424  0EA7               	movlw	low (_MBRespon+3)
  1870  001426  0100               	movlb	0	; () banked
  1871  001428  2592               	addwf	_i& (0+255),w,b
  1872  00142A  6ED9               	movwf	fsr2l,c
  1873  00142C  0E01               	movlw	high (_MBRespon+3)
  1874  00142E  2193               	addwfc	(_i+1)& (0+255),w,b
  1875  001430  6EDA               	movwf	fsr2h,c
  1876  001432  C005  FFDF         	movff	?_generateCRCHI,indf2
  1877                           
  1878                           ;main.c: 280:                 MBRespon[i +4] = generateCRCLo(MBResCnt);
  1879  001436  C090  F005         	movff	_MBResCnt,generateCRCLo@MessCnt
  1880  00143A  C091  F006         	movff	_MBResCnt+1,generateCRCLo@MessCnt+1
  1881  00143E  EC1D  F00D         	call	_generateCRCLo	;wreg free
  1882  001442  0EA8               	movlw	low (_MBRespon+4)
  1883  001444  0100               	movlb	0	; () banked
  1884  001446  2592               	addwf	_i& (0+255),w,b
  1885  001448  6ED9               	movwf	fsr2l,c
  1886  00144A  0E01               	movlw	high (_MBRespon+4)
  1887  00144C  2193               	addwfc	(_i+1)& (0+255),w,b
  1888  00144E  6EDA               	movwf	fsr2h,c
  1889  001450  C005  FFDF         	movff	?_generateCRCLo,indf2
  1890  001454                     
  1891                           ; BSR set to: 0
  1892                           ;main.c: 282:                 MBResCnt = MBResCnt +2;
  1893  001454  0E02               	movlw	2
  1894  001456  2590               	addwf	_MBResCnt& (0+255),w,b
  1895  001458  6F90               	movwf	_MBResCnt& (0+255),b
  1896  00145A  0E00               	movlw	0
  1897  00145C  2191               	addwfc	(_MBResCnt+1)& (0+255),w,b
  1898  00145E  6F91               	movwf	(_MBResCnt+1)& (0+255),b
  1899  001460                     
  1900                           ; BSR set to: 0
  1901                           ;main.c: 284:                 PrintModRespon();
  1902  001460  EC13  F011         	call	_PrintModRespon	;wreg free
  1903  001464                     
  1904                           ;main.c: 286:                 UART1_Write_string(MBRespon,MBResCnt);
  1905  001464  0EA4               	movlw	low _MBRespon
  1906  001466  6E06               	movwf	UART1_Write_string@data^0,c
  1907  001468  0E01               	movlw	high _MBRespon
  1908  00146A  6E07               	movwf	(UART1_Write_string@data+1)^0,c
  1909  00146C  C090  F008         	movff	_MBResCnt,UART1_Write_string@data_len
  1910  001470  C091  F009         	movff	_MBResCnt+1,UART1_Write_string@data_len+1
  1911  001474  EC4F  F011         	call	_UART1_Write_string	;wreg free
  1912                           
  1913                           ;main.c: 288:             }else{
  1914  001478  EF48  F00A         	goto	l5540
  1915  00147C                     l5538:
  1916                           
  1917                           ; BSR set to: 1
  1918                           ;main.c: 289:                 printf("Function Code is: 0x%02x \r\n", ModbusData[1]);
  1919  00147C  0E5B               	movlw	low STR_16
  1920  00147E  0100               	movlb	0	; () banked
  1921  001480  6FC0               	movwf	printf@fmt& (0+255),b
  1922  001482  0EFF               	movlw	high STR_16
  1923  001484  6FC1               	movwf	(printf@fmt+1)& (0+255),b
  1924  001486  C101  F0C2         	movff	_ModbusData+1,?_printf+2
  1925  00148A  6BC3               	clrf	(?_printf+3)& (0+255),b
  1926  00148C  EC54  F014         	call	_printf	;wreg free
  1927  001490                     l5540:
  1928                           
  1929                           ;main.c: 293:             ClearModbusData();
  1930  001490  ECC2  F012         	call	_ClearModbusData	;wreg free
  1931  001494                     
  1932                           ;main.c: 294:             ClearModbusRespon();
  1933  001494  EC75  F013         	call	_ClearModbusRespon	;wreg free
  1934  001498  EFA4  F009         	goto	l5504
  1935  00149C  EF93  F000         	goto	start
  1936  0014A0                     __end_of_main:
  1937                           	opt callstack 0
  1938                           
  1939 ;; *************** function _generateCRCLo *****************
  1940 ;; Defined at:
  1941 ;;		line 173 in file "main.c"
  1942 ;; Parameters:    Size  Location     Type
  1943 ;;  MessCnt         2    4[COMRAM] int 
  1944 ;; Auto vars:     Size  Location     Type
  1945 ;;  crc             2   16[COMRAM] unsigned int 
  1946 ;;  j               2   14[COMRAM] int 
  1947 ;;  i               2   12[COMRAM] int 
  1948 ;;  crcLow          2   10[COMRAM] unsigned int 
  1949 ;;  crcHigh         2    0        unsigned int 
  1950 ;; Return value:  Size  Location     Type
  1951 ;;                  2    4[COMRAM] unsigned int 
  1952 ;; Registers used:
  1953 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1954 ;; Tracked objects:
  1955 ;;		On entry : 0/0
  1956 ;;		On exit  : 0/0
  1957 ;;		Unchanged: 0/0
  1958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1959 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1960 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1961 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1962 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1963 ;;Total ram usage:       14 bytes
  1964 ;; Hardware stack levels used:    1
  1965 ;; Hardware stack levels required when called:    4
  1966 ;; This function calls:
  1967 ;;		Nothing
  1968 ;; This function is called by:
  1969 ;;		_main
  1970 ;; This function uses a non-reentrant model
  1971 ;;
  1972                           
  1973                           	psect	text1
  1974  001A3A                     __ptext1:
  1975                           	opt callstack 0
  1976  001A3A                     _generateCRCLo:
  1977                           	opt callstack 26
  1978  001A3A                     
  1979                           ;main.c: 174:   unsigned int crc = 0xFFFF;
  1980  001A3A  6811               	setf	generateCRCLo@crc^0,c
  1981  001A3C  6812               	setf	(generateCRCLo@crc+1)^0,c
  1982  001A3E                     
  1983                           ;main.c: 176:   unsigned int crcLow = 0;
  1984  001A3E  0E00               	movlw	0
  1985  001A40  6E0C               	movwf	(generateCRCLo@crcLow+1)^0,c
  1986  001A42  0E00               	movlw	0
  1987  001A44  6E0B               	movwf	generateCRCLo@crcLow^0,c
  1988                           
  1989                           ;main.c: 177:   int i,j = 0;
  1990  001A46  0E00               	movlw	0
  1991  001A48  6E10               	movwf	(generateCRCLo@j+1)^0,c
  1992  001A4A  0E00               	movlw	0
  1993  001A4C  6E0F               	movwf	generateCRCLo@j^0,c
  1994                           
  1995                           ;main.c: 179:     for(i=0;i<MessCnt;i++){
  1996  001A4E  0E00               	movlw	0
  1997  001A50  6E0E               	movwf	(generateCRCLo@i+1)^0,c
  1998  001A52  0E00               	movlw	0
  1999  001A54  6E0D               	movwf	generateCRCLo@i^0,c
  2000  001A56  EF5C  F00D         	goto	l5410
  2001  001A5A                     l5392:
  2002                           
  2003                           ;main.c: 180:       crc ^= MBRespon[i];
  2004  001A5A  0EA4               	movlw	low _MBRespon
  2005  001A5C  240D               	addwf	generateCRCLo@i^0,w,c
  2006  001A5E  6ED9               	movwf	fsr2l,c
  2007  001A60  0E01               	movlw	high _MBRespon
  2008  001A62  200E               	addwfc	(generateCRCLo@i+1)^0,w,c
  2009  001A64  6EDA               	movwf	fsr2h,c
  2010  001A66  50DF               	movf	indf2,w,c
  2011  001A68  6E07               	movwf	??_generateCRCLo^0,c
  2012  001A6A  5007               	movf	??_generateCRCLo^0,w,c
  2013  001A6C  1A11               	xorwf	generateCRCLo@crc^0,f,c
  2014  001A6E                     
  2015                           ;main.c: 181:       for(j=8; j!=0; j--){
  2016  001A6E  0E00               	movlw	0
  2017  001A70  6E10               	movwf	(generateCRCLo@j+1)^0,c
  2018  001A72  0E08               	movlw	8
  2019  001A74  6E0F               	movwf	generateCRCLo@j^0,c
  2020  001A76                     l602:
  2021                           
  2022                           ;main.c: 182:         if((crc & 0x0001) != 0){
  2023  001A76  A011               	btfss	generateCRCLo@crc^0,0,c
  2024  001A78  EF40  F00D         	goto	u5491
  2025  001A7C  EF42  F00D         	goto	u5490
  2026  001A80                     u5491:
  2027  001A80  EF4B  F00D         	goto	l5404
  2028  001A84                     u5490:
  2029  001A84                     
  2030                           ;main.c: 183:           crc >>= 1;
  2031  001A84  90D8               	bcf	status,0,c
  2032  001A86  3212               	rrcf	(generateCRCLo@crc+1)^0,f,c
  2033  001A88  3211               	rrcf	generateCRCLo@crc^0,f,c
  2034  001A8A                     
  2035                           ;main.c: 184:           crc ^= 0xA001;
  2036  001A8A  0E01               	movlw	1
  2037  001A8C  1A11               	xorwf	generateCRCLo@crc^0,f,c
  2038  001A8E  0EA0               	movlw	160
  2039  001A90  1A12               	xorwf	(generateCRCLo@crc+1)^0,f,c
  2040                           
  2041                           ;main.c: 185:         }
  2042  001A92  EF4E  F00D         	goto	l605
  2043  001A96                     l5404:
  2044                           
  2045                           ;main.c: 187:           crc >>= 1;
  2046  001A96  90D8               	bcf	status,0,c
  2047  001A98  3212               	rrcf	(generateCRCLo@crc+1)^0,f,c
  2048  001A9A  3211               	rrcf	generateCRCLo@crc^0,f,c
  2049  001A9C                     l605:
  2050                           
  2051                           ;main.c: 189:       }
  2052  001A9C  060F               	decf	generateCRCLo@j^0,f,c
  2053  001A9E  A0D8               	btfss	status,0,c
  2054  001AA0  0610               	decf	(generateCRCLo@j+1)^0,f,c
  2055  001AA2  500F               	movf	generateCRCLo@j^0,w,c
  2056  001AA4  1010               	iorwf	(generateCRCLo@j+1)^0,w,c
  2057  001AA6  A4D8               	btfss	status,2,c
  2058  001AA8  EF58  F00D         	goto	u5501
  2059  001AAC  EF5A  F00D         	goto	u5500
  2060  001AB0                     u5501:
  2061  001AB0  EF3B  F00D         	goto	l602
  2062  001AB4                     u5500:
  2063  001AB4                     
  2064                           ;main.c: 190:     }
  2065  001AB4  4A0D               	infsnz	generateCRCLo@i^0,f,c
  2066  001AB6  2A0E               	incf	(generateCRCLo@i+1)^0,f,c
  2067  001AB8                     l5410:
  2068  001AB8  5005               	movf	generateCRCLo@MessCnt^0,w,c
  2069  001ABA  5C0D               	subwf	generateCRCLo@i^0,w,c
  2070  001ABC  500E               	movf	(generateCRCLo@i+1)^0,w,c
  2071  001ABE  0A80               	xorlw	128
  2072  001AC0  6E07               	movwf	??_generateCRCLo^0,c
  2073  001AC2  5006               	movf	(generateCRCLo@MessCnt+1)^0,w,c
  2074  001AC4  0A80               	xorlw	128
  2075  001AC6  5807               	subwfb	??_generateCRCLo^0,w,c
  2076  001AC8  A0D8               	btfss	status,0,c
  2077  001ACA  EF69  F00D         	goto	u5511
  2078  001ACE  EF6B  F00D         	goto	u5510
  2079  001AD2                     u5511:
  2080  001AD2  EF2D  F00D         	goto	l5392
  2081  001AD6                     u5510:
  2082  001AD6                     
  2083                           ;main.c: 193:     crcLow = (crc & 0xFF00) >>8;
  2084  001AD6  C011  F007         	movff	generateCRCLo@crc,??_generateCRCLo
  2085  001ADA  C012  F008         	movff	generateCRCLo@crc+1,??_generateCRCLo+1
  2086  001ADE  C008  F007         	movff	??_generateCRCLo+1,??_generateCRCLo
  2087  001AE2  6A08               	clrf	(??_generateCRCLo+1)^0,c
  2088  001AE4  5007               	movf	??_generateCRCLo^0,w,c
  2089  001AE6  6E0B               	movwf	generateCRCLo@crcLow^0,c
  2090  001AE8  6A0C               	clrf	(generateCRCLo@crcLow+1)^0,c
  2091  001AEA                     
  2092                           ;main.c: 196:     crc = crcLow;
  2093  001AEA  C00B  F011         	movff	generateCRCLo@crcLow,generateCRCLo@crc
  2094  001AEE  C00C  F012         	movff	generateCRCLo@crcLow+1,generateCRCLo@crc+1
  2095  001AF2                     
  2096                           ;main.c: 197:   return crc;
  2097  001AF2  C011  F005         	movff	generateCRCLo@crc,?_generateCRCLo
  2098  001AF6  C012  F006         	movff	generateCRCLo@crc+1,?_generateCRCLo+1
  2099  001AFA  0012               	return		;funcret
  2100  001AFC                     __end_of_generateCRCLo:
  2101                           	opt callstack 0
  2102                           
  2103 ;; *************** function _generateCRCHI *****************
  2104 ;; Defined at:
  2105 ;;		line 146 in file "main.c"
  2106 ;; Parameters:    Size  Location     Type
  2107 ;;  MessCnt         2    4[COMRAM] int 
  2108 ;; Auto vars:     Size  Location     Type
  2109 ;;  crc             2   15[COMRAM] unsigned int 
  2110 ;;  j               2   13[COMRAM] int 
  2111 ;;  i               2   11[COMRAM] int 
  2112 ;;  crcHigh         2    9[COMRAM] unsigned int 
  2113 ;;  crcLow          2    7[COMRAM] unsigned int 
  2114 ;; Return value:  Size  Location     Type
  2115 ;;                  2    4[COMRAM] unsigned int 
  2116 ;; Registers used:
  2117 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2118 ;; Tracked objects:
  2119 ;;		On entry : 0/0
  2120 ;;		On exit  : 0/0
  2121 ;;		Unchanged: 0/0
  2122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2123 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2124 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2125 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2126 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2127 ;;Total ram usage:       13 bytes
  2128 ;; Hardware stack levels used:    1
  2129 ;; Hardware stack levels required when called:    4
  2130 ;; This function calls:
  2131 ;;		Nothing
  2132 ;; This function is called by:
  2133 ;;		_main
  2134 ;; This function uses a non-reentrant model
  2135 ;;
  2136                           
  2137                           	psect	text2
  2138  001D3E                     __ptext2:
  2139                           	opt callstack 0
  2140  001D3E                     _generateCRCHI:
  2141                           	opt callstack 26
  2142  001D3E                     
  2143                           ;main.c: 147:   unsigned int crc = 0xFFFF;
  2144  001D3E  6810               	setf	generateCRCHI@crc^0,c
  2145  001D40  6811               	setf	(generateCRCHI@crc+1)^0,c
  2146  001D42                     
  2147                           ;main.c: 149:   unsigned int crcLow = 0;
  2148  001D42  0E00               	movlw	0
  2149  001D44  6E09               	movwf	(generateCRCHI@crcLow+1)^0,c
  2150  001D46  0E00               	movlw	0
  2151  001D48  6E08               	movwf	generateCRCHI@crcLow^0,c
  2152                           
  2153                           ;main.c: 150:   int i,j = 0;
  2154  001D4A  0E00               	movlw	0
  2155  001D4C  6E0F               	movwf	(generateCRCHI@j+1)^0,c
  2156  001D4E  0E00               	movlw	0
  2157  001D50  6E0E               	movwf	generateCRCHI@j^0,c
  2158                           
  2159                           ;main.c: 152:     for(i=0;i<MessCnt;i++){
  2160  001D52  0E00               	movlw	0
  2161  001D54  6E0D               	movwf	(generateCRCHI@i+1)^0,c
  2162  001D56  0E00               	movlw	0
  2163  001D58  6E0C               	movwf	generateCRCHI@i^0,c
  2164  001D5A  EFDE  F00E         	goto	l5378
  2165  001D5E                     l5360:
  2166                           
  2167                           ;main.c: 153:       crc ^= MBRespon[i];
  2168  001D5E  0EA4               	movlw	low _MBRespon
  2169  001D60  240C               	addwf	generateCRCHI@i^0,w,c
  2170  001D62  6ED9               	movwf	fsr2l,c
  2171  001D64  0E01               	movlw	high _MBRespon
  2172  001D66  200D               	addwfc	(generateCRCHI@i+1)^0,w,c
  2173  001D68  6EDA               	movwf	fsr2h,c
  2174  001D6A  50DF               	movf	indf2,w,c
  2175  001D6C  6E07               	movwf	??_generateCRCHI^0,c
  2176  001D6E  5007               	movf	??_generateCRCHI^0,w,c
  2177  001D70  1A10               	xorwf	generateCRCHI@crc^0,f,c
  2178  001D72                     
  2179                           ;main.c: 154:       for(j=8; j!=0; j--){
  2180  001D72  0E00               	movlw	0
  2181  001D74  6E0F               	movwf	(generateCRCHI@j+1)^0,c
  2182  001D76  0E08               	movlw	8
  2183  001D78  6E0E               	movwf	generateCRCHI@j^0,c
  2184  001D7A                     l592:
  2185                           
  2186                           ;main.c: 155:         if((crc & 0x0001) != 0){
  2187  001D7A  A010               	btfss	generateCRCHI@crc^0,0,c
  2188  001D7C  EFC2  F00E         	goto	u5461
  2189  001D80  EFC4  F00E         	goto	u5460
  2190  001D84                     u5461:
  2191  001D84  EFCD  F00E         	goto	l5372
  2192  001D88                     u5460:
  2193  001D88                     
  2194                           ;main.c: 156:           crc >>= 1;
  2195  001D88  90D8               	bcf	status,0,c
  2196  001D8A  3211               	rrcf	(generateCRCHI@crc+1)^0,f,c
  2197  001D8C  3210               	rrcf	generateCRCHI@crc^0,f,c
  2198  001D8E                     
  2199                           ;main.c: 157:           crc ^= 0xA001;
  2200  001D8E  0E01               	movlw	1
  2201  001D90  1A10               	xorwf	generateCRCHI@crc^0,f,c
  2202  001D92  0EA0               	movlw	160
  2203  001D94  1A11               	xorwf	(generateCRCHI@crc+1)^0,f,c
  2204                           
  2205                           ;main.c: 158:         }
  2206  001D96  EFD0  F00E         	goto	l595
  2207  001D9A                     l5372:
  2208                           
  2209                           ;main.c: 160:           crc >>= 1;
  2210  001D9A  90D8               	bcf	status,0,c
  2211  001D9C  3211               	rrcf	(generateCRCHI@crc+1)^0,f,c
  2212  001D9E  3210               	rrcf	generateCRCHI@crc^0,f,c
  2213  001DA0                     l595:
  2214                           
  2215                           ;main.c: 162:       }
  2216  001DA0  060E               	decf	generateCRCHI@j^0,f,c
  2217  001DA2  A0D8               	btfss	status,0,c
  2218  001DA4  060F               	decf	(generateCRCHI@j+1)^0,f,c
  2219  001DA6  500E               	movf	generateCRCHI@j^0,w,c
  2220  001DA8  100F               	iorwf	(generateCRCHI@j+1)^0,w,c
  2221  001DAA  A4D8               	btfss	status,2,c
  2222  001DAC  EFDA  F00E         	goto	u5471
  2223  001DB0  EFDC  F00E         	goto	u5470
  2224  001DB4                     u5471:
  2225  001DB4  EFBD  F00E         	goto	l592
  2226  001DB8                     u5470:
  2227  001DB8                     
  2228                           ;main.c: 163:     }
  2229  001DB8  4A0C               	infsnz	generateCRCHI@i^0,f,c
  2230  001DBA  2A0D               	incf	(generateCRCHI@i+1)^0,f,c
  2231  001DBC                     l5378:
  2232  001DBC  5005               	movf	generateCRCHI@MessCnt^0,w,c
  2233  001DBE  5C0C               	subwf	generateCRCHI@i^0,w,c
  2234  001DC0  500D               	movf	(generateCRCHI@i+1)^0,w,c
  2235  001DC2  0A80               	xorlw	128
  2236  001DC4  6E07               	movwf	??_generateCRCHI^0,c
  2237  001DC6  5006               	movf	(generateCRCHI@MessCnt+1)^0,w,c
  2238  001DC8  0A80               	xorlw	128
  2239  001DCA  5807               	subwfb	??_generateCRCHI^0,w,c
  2240  001DCC  A0D8               	btfss	status,0,c
  2241  001DCE  EFEB  F00E         	goto	u5481
  2242  001DD2  EFED  F00E         	goto	u5480
  2243  001DD6                     u5481:
  2244  001DD6  EFAF  F00E         	goto	l5360
  2245  001DDA                     u5480:
  2246  001DDA                     
  2247                           ;main.c: 165:     crcHigh = (crc & 0x00FF);
  2248  001DDA  5010               	movf	generateCRCHI@crc^0,w,c
  2249  001DDC  6E0A               	movwf	generateCRCHI@crcHigh^0,c
  2250  001DDE  6A0B               	clrf	(generateCRCHI@crcHigh+1)^0,c
  2251  001DE0                     
  2252                           ;main.c: 169:     crc = crcHigh;
  2253  001DE0  C00A  F010         	movff	generateCRCHI@crcHigh,generateCRCHI@crc
  2254  001DE4  C00B  F011         	movff	generateCRCHI@crcHigh+1,generateCRCHI@crc+1
  2255  001DE8                     
  2256                           ;main.c: 170:   return crc;
  2257  001DE8  C010  F005         	movff	generateCRCHI@crc,?_generateCRCHI
  2258  001DEC  C011  F006         	movff	generateCRCHI@crc+1,?_generateCRCHI+1
  2259  001DF0  0012               	return		;funcret
  2260  001DF2                     __end_of_generateCRCHI:
  2261                           	opt callstack 0
  2262                           
  2263 ;; *************** function _UART1_Write_string *****************
  2264 ;; Defined at:
  2265 ;;		line 61 in file "main.c"
  2266 ;; Parameters:    Size  Location     Type
  2267 ;;  data            2    5[COMRAM] PTR unsigned char 
  2268 ;;		 -> MBRespon(32), 
  2269 ;;  data_len        2    7[COMRAM] int 
  2270 ;; Auto vars:     Size  Location     Type
  2271 ;;  i               2   10[COMRAM] int 
  2272 ;; Return value:  Size  Location     Type
  2273 ;;                  1    wreg      void 
  2274 ;; Registers used:
  2275 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2276 ;; Tracked objects:
  2277 ;;		On entry : 0/0
  2278 ;;		On exit  : 0/0
  2279 ;;		Unchanged: 0/0
  2280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2281 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2282 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2283 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2284 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2285 ;;Total ram usage:        7 bytes
  2286 ;; Hardware stack levels used:    1
  2287 ;; Hardware stack levels required when called:    5
  2288 ;; This function calls:
  2289 ;;		_EUSART1_Write
  2290 ;;		_EUSART1_is_tx_done
  2291 ;;		_EUSART1_is_tx_ready
  2292 ;;		_TXMode
  2293 ;; This function is called by:
  2294 ;;		_main
  2295 ;; This function uses a non-reentrant model
  2296 ;;
  2297                           
  2298                           	psect	text3
  2299  00229E                     __ptext3:
  2300                           	opt callstack 0
  2301  00229E                     _UART1_Write_string:
  2302                           	opt callstack 25
  2303  00229E                     
  2304                           ;main.c: 61:  void UART1_Write_string(unsigned char * data, int data_len);main.c: 62: {;
      +                          main.c: 63:      TXMode();
  2305  00229E  EC15  F015         	call	_TXMode	;wreg free
  2306  0022A2                     l5304:
  2307  0022A2  ECA6  F014         	call	_EUSART1_is_tx_ready	;wreg free
  2308  0022A6  0900               	iorlw	0
  2309  0022A8  B4D8               	btfsc	status,2,c
  2310  0022AA  EF59  F011         	goto	u5401
  2311  0022AE  EF5B  F011         	goto	u5400
  2312  0022B2                     u5401:
  2313  0022B2  EF51  F011         	goto	l5304
  2314  0022B6                     u5400:
  2315  0022B6                     
  2316                           ;main.c: 65:     for (int i = 0; i < data_len; i++) {
  2317  0022B6  0E00               	movlw	0
  2318  0022B8  6E0C               	movwf	(UART1_Write_string@i+1)^0,c
  2319  0022BA  0E00               	movlw	0
  2320  0022BC  6E0B               	movwf	UART1_Write_string@i^0,c
  2321  0022BE  EF76  F011         	goto	l5314
  2322  0022C2                     l5308:
  2323                           
  2324                           ;main.c: 66:         EUSART1_Write(data[i]);
  2325  0022C2  500B               	movf	UART1_Write_string@i^0,w,c
  2326  0022C4  2406               	addwf	UART1_Write_string@data^0,w,c
  2327  0022C6  6ED9               	movwf	fsr2l,c
  2328  0022C8  500C               	movf	(UART1_Write_string@i+1)^0,w,c
  2329  0022CA  2007               	addwfc	(UART1_Write_string@data+1)^0,w,c
  2330  0022CC  6EDA               	movwf	fsr2h,c
  2331  0022CE  50DF               	movf	indf2,w,c
  2332  0022D0  ECB8  F011         	call	_EUSART1_Write
  2333  0022D4                     l5310:
  2334  0022D4  ECCA  F014         	call	_EUSART1_is_tx_done	;wreg free
  2335  0022D8  0900               	iorlw	0
  2336  0022DA  B4D8               	btfsc	status,2,c
  2337  0022DC  EF72  F011         	goto	u5411
  2338  0022E0  EF74  F011         	goto	u5410
  2339  0022E4                     u5411:
  2340  0022E4  EF6A  F011         	goto	l5310
  2341  0022E8                     u5410:
  2342  0022E8                     
  2343                           ;main.c: 68:     }
  2344  0022E8  4A0B               	infsnz	UART1_Write_string@i^0,f,c
  2345  0022EA  2A0C               	incf	(UART1_Write_string@i+1)^0,f,c
  2346  0022EC                     l5314:
  2347  0022EC  5008               	movf	UART1_Write_string@data_len^0,w,c
  2348  0022EE  5C0B               	subwf	UART1_Write_string@i^0,w,c
  2349  0022F0  500C               	movf	(UART1_Write_string@i+1)^0,w,c
  2350  0022F2  0A80               	xorlw	128
  2351  0022F4  6E0A               	movwf	??_UART1_Write_string^0,c
  2352  0022F6  5009               	movf	(UART1_Write_string@data_len+1)^0,w,c
  2353  0022F8  0A80               	xorlw	128
  2354  0022FA  580A               	subwfb	??_UART1_Write_string^0,w,c
  2355  0022FC  A0D8               	btfss	status,0,c
  2356  0022FE  EF83  F011         	goto	u5421
  2357  002302  EF85  F011         	goto	u5420
  2358  002306                     u5421:
  2359  002306  EF61  F011         	goto	l5308
  2360  00230A                     u5420:
  2361  00230A  0012               	return		;funcret
  2362  00230C                     __end_of_UART1_Write_string:
  2363                           	opt callstack 0
  2364                           
  2365 ;; *************** function _TXMode *****************
  2366 ;; Defined at:
  2367 ;;		line 16 in file "Modbus.c"
  2368 ;; Parameters:    Size  Location     Type
  2369 ;;		None
  2370 ;; Auto vars:     Size  Location     Type
  2371 ;;		None
  2372 ;; Return value:  Size  Location     Type
  2373 ;;                  1    wreg      void 
  2374 ;; Registers used:
  2375 ;;		None
  2376 ;; Tracked objects:
  2377 ;;		On entry : 0/0
  2378 ;;		On exit  : 0/0
  2379 ;;		Unchanged: 0/0
  2380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2385 ;;Total ram usage:        0 bytes
  2386 ;; Hardware stack levels used:    1
  2387 ;; Hardware stack levels required when called:    4
  2388 ;; This function calls:
  2389 ;;		Nothing
  2390 ;; This function is called by:
  2391 ;;		_UART1_Write_string
  2392 ;; This function uses a non-reentrant model
  2393 ;;
  2394                           
  2395                           	psect	text4
  2396  002A2A                     __ptext4:
  2397                           	opt callstack 0
  2398  002A2A                     _TXMode:
  2399                           	opt callstack 25
  2400  002A2A  8086               	bsf	134,0,c	;volatile
  2401  002A2C  8683               	bsf	131,3,c	;volatile
  2402  002A2E  0012               	return		;funcret
  2403  002A30                     __end_of_TXMode:
  2404                           	opt callstack 0
  2405                           
  2406 ;; *************** function _EUSART1_is_tx_ready *****************
  2407 ;; Defined at:
  2408 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  2409 ;; Parameters:    Size  Location     Type
  2410 ;;		None
  2411 ;; Auto vars:     Size  Location     Type
  2412 ;;		None
  2413 ;; Return value:  Size  Location     Type
  2414 ;;                  1    wreg      _Bool 
  2415 ;; Registers used:
  2416 ;;		wreg, status,2
  2417 ;; Tracked objects:
  2418 ;;		On entry : 0/0
  2419 ;;		On exit  : 0/0
  2420 ;;		Unchanged: 0/0
  2421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2426 ;;Total ram usage:        0 bytes
  2427 ;; Hardware stack levels used:    1
  2428 ;; Hardware stack levels required when called:    4
  2429 ;; This function calls:
  2430 ;;		Nothing
  2431 ;; This function is called by:
  2432 ;;		_UART1_Write_string
  2433 ;; This function uses a non-reentrant model
  2434 ;;
  2435                           
  2436                           	psect	text5
  2437  00294C                     __ptext5:
  2438                           	opt callstack 0
  2439  00294C                     _EUSART1_is_tx_ready:
  2440                           	opt callstack 25
  2441  00294C                     
  2442                           ;mcc_generated_files/eusart1.c: 134:     return (eusart1TxBufferRemaining ? 1 : 0);
  2443  00294C  0100               	movlb	0	; () banked
  2444  00294E  51F3               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
  2445  002950  A4D8               	btfss	status,2,c
  2446  002952  EFAD  F014         	goto	u5211
  2447  002956  EFB0  F014         	goto	u5210
  2448  00295A                     u5211:
  2449  00295A  0E01               	movlw	1
  2450  00295C  EFB1  F014         	goto	u5220
  2451  002960                     u5210:
  2452  002960  0E00               	movlw	0
  2453  002962                     u5220:
  2454  002962                     
  2455                           ; BSR set to: 0
  2456  002962  0012               	return		;funcret
  2457  002964                     __end_of_EUSART1_is_tx_ready:
  2458                           	opt callstack 0
  2459                           
  2460 ;; *************** function _EUSART1_is_tx_done *****************
  2461 ;; Defined at:
  2462 ;;		line 142 in file "mcc_generated_files/eusart1.c"
  2463 ;; Parameters:    Size  Location     Type
  2464 ;;		None
  2465 ;; Auto vars:     Size  Location     Type
  2466 ;;		None
  2467 ;; Return value:  Size  Location     Type
  2468 ;;                  1    wreg      _Bool 
  2469 ;; Registers used:
  2470 ;;		wreg
  2471 ;; Tracked objects:
  2472 ;;		On entry : 0/0
  2473 ;;		On exit  : 0/0
  2474 ;;		Unchanged: 0/0
  2475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2480 ;;Total ram usage:        0 bytes
  2481 ;; Hardware stack levels used:    1
  2482 ;; Hardware stack levels required when called:    4
  2483 ;; This function calls:
  2484 ;;		Nothing
  2485 ;; This function is called by:
  2486 ;;		_UART1_Write_string
  2487 ;; This function uses a non-reentrant model
  2488 ;;
  2489                           
  2490                           	psect	text6
  2491  002994                     __ptext6:
  2492                           	opt callstack 0
  2493  002994                     _EUSART1_is_tx_done:
  2494                           	opt callstack 25
  2495  002994                     
  2496                           ;mcc_generated_files/eusart1.c: 144:     return TX1STAbits.TRMT;
  2497  002994  B29E               	btfsc	158,1,c	;volatile
  2498  002996  EFCF  F014         	goto	u5251
  2499  00299A  EFD2  F014         	goto	u5250
  2500  00299E                     u5251:
  2501  00299E  0E01               	movlw	1
  2502  0029A0  EFD3  F014         	goto	u5256
  2503  0029A4                     u5250:
  2504  0029A4  0E00               	movlw	0
  2505  0029A6                     u5256:
  2506  0029A6  0012               	return		;funcret
  2507  0029A8                     __end_of_EUSART1_is_tx_done:
  2508                           	opt callstack 0
  2509                           
  2510 ;; *************** function _EUSART1_Write *****************
  2511 ;; Defined at:
  2512 ;;		line 173 in file "mcc_generated_files/eusart1.c"
  2513 ;; Parameters:    Size  Location     Type
  2514 ;;  txData          1    wreg     unsigned char 
  2515 ;; Auto vars:     Size  Location     Type
  2516 ;;  txData          1    4[COMRAM] unsigned char 
  2517 ;; Return value:  Size  Location     Type
  2518 ;;                  1    wreg      void 
  2519 ;; Registers used:
  2520 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2521 ;; Tracked objects:
  2522 ;;		On entry : 0/0
  2523 ;;		On exit  : 0/0
  2524 ;;		Unchanged: 0/0
  2525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2527 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2529 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2530 ;;Total ram usage:        1 bytes
  2531 ;; Hardware stack levels used:    1
  2532 ;; Hardware stack levels required when called:    4
  2533 ;; This function calls:
  2534 ;;		Nothing
  2535 ;; This function is called by:
  2536 ;;		_UART1_Write_string
  2537 ;; This function uses a non-reentrant model
  2538 ;;
  2539                           
  2540                           	psect	text7
  2541  002370                     __ptext7:
  2542                           	opt callstack 0
  2543  002370                     _EUSART1_Write:
  2544                           	opt callstack 25
  2545                           
  2546                           ;incstack = 0
  2547                           ;EUSART1_Write@txData stored from wreg
  2548  002370  6E05               	movwf	EUSART1_Write@txData^0,c
  2549  002372                     l5202:
  2550                           
  2551                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
  2552  002372  0100               	movlb	0	; () banked
  2553  002374  51F3               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
  2554  002376  B4D8               	btfsc	status,2,c
  2555  002378  EFC0  F011         	goto	u5281
  2556  00237C  EFC2  F011         	goto	u5280
  2557  002380                     u5281:
  2558  002380  EFB9  F011         	goto	l5202
  2559  002384                     u5280:
  2560  002384                     
  2561                           ; BSR set to: 0
  2562                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE3bits.TX1IE)
  2563  002384  010E               	movlb	14	; () banked
  2564  002386  B9C5               	btfsc	197,4,b	;volatile
  2565  002388  EFC8  F011         	goto	u5291
  2566  00238C  EFCA  F011         	goto	u5290
  2567  002390                     u5291:
  2568  002390  EFCE  F011         	goto	l471
  2569  002394                     u5290:
  2570  002394                     
  2571                           ; BSR set to: 14
  2572                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          X1REG = txData;
  2573  002394  C005  FF9A         	movff	EUSART1_Write@txData,3994	;volatile
  2574                           
  2575                           ;mcc_generated_files/eusart1.c: 182:     }
  2576  002398  EFE4  F011         	goto	l5216
  2577  00239C                     l471:
  2578                           
  2579                           ; BSR set to: 14
  2580                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE3bits.TX1IE = 0;
  2581  00239C  99C5               	bcf	197,4,b	;volatile
  2582  00239E                     
  2583                           ; BSR set to: 14
  2584                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
  2585  00239E  0E60               	movlw	low _eusart1TxBuffer
  2586  0023A0  0100               	movlb	0	; () banked
  2587  0023A2  259D               	addwf	_eusart1TxHead& (0+255),w,b	;volatile
  2588  0023A4  6ED9               	movwf	fsr2l,c
  2589  0023A6  6ADA               	clrf	fsr2h,c
  2590  0023A8  0E00               	movlw	high _eusart1TxBuffer
  2591  0023AA  22DA               	addwfc	fsr2h,f,c
  2592  0023AC  C005  FFDF         	movff	EUSART1_Write@txData,indf2
  2593  0023B0                     
  2594                           ; BSR set to: 0
  2595  0023B0  2B9D               	incf	_eusart1TxHead& (0+255),f,b	;volatile
  2596  0023B2                     
  2597                           ; BSR set to: 0
  2598                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
  2599  0023B2  0E0F               	movlw	15
  2600  0023B4  659D               	cpfsgt	_eusart1TxHead& (0+255),b	;volatile
  2601  0023B6  EFDF  F011         	goto	u5301
  2602  0023BA  EFE1  F011         	goto	u5300
  2603  0023BE                     u5301:
  2604  0023BE  EFE3  F011         	goto	l5214
  2605  0023C2                     u5300:
  2606  0023C2                     
  2607                           ; BSR set to: 0
  2608                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
  2609  0023C2  0E00               	movlw	0
  2610  0023C4  6F9D               	movwf	_eusart1TxHead& (0+255),b	;volatile
  2611  0023C6                     l5214:
  2612                           
  2613                           ; BSR set to: 0
  2614                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
  2615  0023C6  07F3               	decf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
  2616  0023C8                     l5216:
  2617                           
  2618                           ;mcc_generated_files/eusart1.c: 193:     PIE3bits.TX1IE = 1;
  2619  0023C8  010E               	movlb	14	; () banked
  2620  0023CA  89C5               	bsf	197,4,b	;volatile
  2621  0023CC                     
  2622                           ; BSR set to: 14
  2623  0023CC  0012               	return		;funcret
  2624  0023CE                     __end_of_EUSART1_Write:
  2625                           	opt callstack 0
  2626                           
  2627 ;; *************** function _SYSTEM_Initialize *****************
  2628 ;; Defined at:
  2629 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2630 ;; Parameters:    Size  Location     Type
  2631 ;;		None
  2632 ;; Auto vars:     Size  Location     Type
  2633 ;;		None
  2634 ;; Return value:  Size  Location     Type
  2635 ;;                  1    wreg      void 
  2636 ;; Registers used:
  2637 ;;		wreg, status,2, status,0, cstack
  2638 ;; Tracked objects:
  2639 ;;		On entry : 0/0
  2640 ;;		On exit  : 0/0
  2641 ;;		Unchanged: 0/0
  2642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2647 ;;Total ram usage:        0 bytes
  2648 ;; Hardware stack levels used:    1
  2649 ;; Hardware stack levels required when called:    6
  2650 ;; This function calls:
  2651 ;;		_EUSART1_Initialize
  2652 ;;		_EUSART2_Initialize
  2653 ;;		_INTERRUPT_Initialize
  2654 ;;		_OSCILLATOR_Initialize
  2655 ;;		_PIN_MANAGER_Initialize
  2656 ;;		_PMD_Initialize
  2657 ;; This function is called by:
  2658 ;;		_main
  2659 ;; This function uses a non-reentrant model
  2660 ;;
  2661                           
  2662                           	psect	text8
  2663  002932                     __ptext8:
  2664                           	opt callstack 0
  2665  002932                     _SYSTEM_Initialize:
  2666                           	opt callstack 24
  2667  002932                     
  2668                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  2669  002932  EC24  F015         	call	_INTERRUPT_Initialize	;wreg free
  2670  002936                     
  2671                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  2672  002936  EC8B  F014         	call	_PMD_Initialize	;wreg free
  2673  00293A                     
  2674                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  2675  00293A  EC94  F00F         	call	_PIN_MANAGER_Initialize	;wreg free
  2676  00293E                     
  2677                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  2678  00293E  ECB2  F014         	call	_OSCILLATOR_Initialize	;wreg free
  2679  002942                     
  2680                           ;mcc_generated_files/mcc.c: 56:     EUSART1_Initialize();
  2681  002942  EC5B  F010         	call	_EUSART1_Initialize	;wreg free
  2682  002946                     
  2683                           ;mcc_generated_files/mcc.c: 57:     EUSART2_Initialize();
  2684  002946  EC1C  F010         	call	_EUSART2_Initialize	;wreg free
  2685  00294A  0012               	return		;funcret
  2686  00294C                     __end_of_SYSTEM_Initialize:
  2687                           	opt callstack 0
  2688                           
  2689 ;; *************** function _PMD_Initialize *****************
  2690 ;; Defined at:
  2691 ;;		line 74 in file "mcc_generated_files/mcc.c"
  2692 ;; Parameters:    Size  Location     Type
  2693 ;;		None
  2694 ;; Auto vars:     Size  Location     Type
  2695 ;;		None
  2696 ;; Return value:  Size  Location     Type
  2697 ;;                  1    wreg      void 
  2698 ;; Registers used:
  2699 ;;		wreg, status,2
  2700 ;; Tracked objects:
  2701 ;;		On entry : 0/0
  2702 ;;		On exit  : 0/0
  2703 ;;		Unchanged: 0/0
  2704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2709 ;;Total ram usage:        0 bytes
  2710 ;; Hardware stack levels used:    1
  2711 ;; Hardware stack levels required when called:    4
  2712 ;; This function calls:
  2713 ;;		Nothing
  2714 ;; This function is called by:
  2715 ;;		_SYSTEM_Initialize
  2716 ;; This function uses a non-reentrant model
  2717 ;;
  2718                           
  2719                           	psect	text9
  2720  002916                     __ptext9:
  2721                           	opt callstack 0
  2722  002916                     _PMD_Initialize:
  2723                           	opt callstack 25
  2724  002916                     
  2725                           ;mcc_generated_files/mcc.c: 77:     PMD0 = 0x00;
  2726  002916  0E00               	movlw	0
  2727  002918  010E               	movlb	14	; () banked
  2728  00291A  6FE1               	movwf	225,b	;volatile
  2729                           
  2730                           ;mcc_generated_files/mcc.c: 79:     PMD1 = 0x00;
  2731  00291C  0E00               	movlw	0
  2732  00291E  6FE2               	movwf	226,b	;volatile
  2733                           
  2734                           ;mcc_generated_files/mcc.c: 81:     PMD2 = 0x00;
  2735  002920  0E00               	movlw	0
  2736  002922  6FE3               	movwf	227,b	;volatile
  2737                           
  2738                           ;mcc_generated_files/mcc.c: 83:     PMD3 = 0x00;
  2739  002924  0E00               	movlw	0
  2740  002926  6FE4               	movwf	228,b	;volatile
  2741                           
  2742                           ;mcc_generated_files/mcc.c: 85:     PMD4 = 0x00;
  2743  002928  0E00               	movlw	0
  2744  00292A  6FE5               	movwf	229,b	;volatile
  2745                           
  2746                           ;mcc_generated_files/mcc.c: 87:     PMD5 = 0x00;
  2747  00292C  0E00               	movlw	0
  2748  00292E  6FE6               	movwf	230,b	;volatile
  2749  002930                     
  2750                           ; BSR set to: 14
  2751  002930  0012               	return		;funcret
  2752  002932                     __end_of_PMD_Initialize:
  2753                           	opt callstack 0
  2754                           
  2755 ;; *************** function _PIN_MANAGER_Initialize *****************
  2756 ;; Defined at:
  2757 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2758 ;; Parameters:    Size  Location     Type
  2759 ;;		None
  2760 ;; Auto vars:     Size  Location     Type
  2761 ;;		None
  2762 ;; Return value:  Size  Location     Type
  2763 ;;                  1    wreg      void 
  2764 ;; Registers used:
  2765 ;;		wreg, status,2
  2766 ;; Tracked objects:
  2767 ;;		On entry : 0/0
  2768 ;;		On exit  : 0/0
  2769 ;;		Unchanged: 0/0
  2770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2775 ;;Total ram usage:        0 bytes
  2776 ;; Hardware stack levels used:    1
  2777 ;; Hardware stack levels required when called:    4
  2778 ;; This function calls:
  2779 ;;		Nothing
  2780 ;; This function is called by:
  2781 ;;		_SYSTEM_Initialize
  2782 ;; This function uses a non-reentrant model
  2783 ;;
  2784                           
  2785                           	psect	text10
  2786  001F28                     __ptext10:
  2787                           	opt callstack 0
  2788  001F28                     _PIN_MANAGER_Initialize:
  2789                           	opt callstack 25
  2790  001F28                     
  2791                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  2792  001F28  0E00               	movlw	0
  2793  001F2A  6E87               	movwf	135,c	;volatile
  2794                           
  2795                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  2796  001F2C  0E00               	movlw	0
  2797  001F2E  6E86               	movwf	134,c	;volatile
  2798                           
  2799                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  2800  001F30  0E00               	movlw	0
  2801  001F32  6E83               	movwf	131,c	;volatile
  2802                           
  2803                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  2804  001F34  0E00               	movlw	0
  2805  001F36  6E84               	movwf	132,c	;volatile
  2806                           
  2807                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  2808  001F38  0E00               	movlw	0
  2809  001F3A  6E85               	movwf	133,c	;volatile
  2810                           
  2811                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  2812  001F3C  0E07               	movlw	7
  2813  001F3E  6E8C               	movwf	140,c	;volatile
  2814                           
  2815                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x07;
  2816  001F40  0E07               	movlw	7
  2817  001F42  6E88               	movwf	136,c	;volatile
  2818                           
  2819                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xBF;
  2820  001F44  0EBF               	movlw	191
  2821  001F46  6E89               	movwf	137,c	;volatile
  2822                           
  2823                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  2824  001F48  0EBF               	movlw	191
  2825  001F4A  6E8A               	movwf	138,c	;volatile
  2826                           
  2827                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFE;
  2828  001F4C  0EFE               	movlw	254
  2829  001F4E  6E8B               	movwf	139,c	;volatile
  2830  001F50                     
  2831                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
  2832  001F50  010F               	movlb	15	; () banked
  2833  001F52  6926               	setf	38,b	;volatile
  2834                           
  2835                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x3B;
  2836  001F54  0E3B               	movlw	59
  2837  001F56  6F21               	movwf	33,b	;volatile
  2838                           
  2839                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x37;
  2840  001F58  0E37               	movlw	55
  2841  001F5A  6F19               	movwf	25,b	;volatile
  2842                           
  2843                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  2844  001F5C  0E07               	movlw	7
  2845  001F5E  6F2E               	movwf	46,b	;volatile
  2846  001F60                     
  2847                           ; BSR set to: 15
  2848                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
  2849  001F60  6911               	setf	17,b	;volatile
  2850                           
  2851                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  2852  001F62  0E00               	movlw	0
  2853  001F64  6F25               	movwf	37,b	;volatile
  2854                           
  2855                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  2856  001F66  0E00               	movlw	0
  2857  001F68  6F2D               	movwf	45,b	;volatile
  2858                           
  2859                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  2860  001F6A  0E00               	movlw	0
  2861  001F6C  6F18               	movwf	24,b	;volatile
  2862                           
  2863                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  2864  001F6E  0E00               	movlw	0
  2865  001F70  6F10               	movwf	16,b	;volatile
  2866                           
  2867                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  2868  001F72  0E00               	movlw	0
  2869  001F74  6F20               	movwf	32,b	;volatile
  2870                           
  2871                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
  2872  001F76  0E00               	movlw	0
  2873  001F78  6F2C               	movwf	44,b	;volatile
  2874                           
  2875                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
  2876  001F7A  0E00               	movlw	0
  2877  001F7C  6F0F               	movwf	15,b	;volatile
  2878                           
  2879                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
  2880  001F7E  0E00               	movlw	0
  2881  001F80  6F17               	movwf	23,b	;volatile
  2882                           
  2883                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
  2884  001F82  0E00               	movlw	0
  2885  001F84  6F1F               	movwf	31,b	;volatile
  2886                           
  2887                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
  2888  001F86  0E00               	movlw	0
  2889  001F88  6F24               	movwf	36,b	;volatile
  2890  001F8A                     
  2891                           ; BSR set to: 15
  2892                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
  2893  001F8A  690E               	setf	14,b	;volatile
  2894  001F8C                     
  2895                           ; BSR set to: 15
  2896                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
  2897  001F8C  6916               	setf	22,b	;volatile
  2898  001F8E                     
  2899                           ; BSR set to: 15
  2900                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
  2901  001F8E  691E               	setf	30,b	;volatile
  2902  001F90                     
  2903                           ; BSR set to: 15
  2904                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
  2905  001F90  6923               	setf	35,b	;volatile
  2906                           
  2907                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
  2908  001F92  0E07               	movlw	7
  2909  001F94  6F2B               	movwf	43,b	;volatile
  2910  001F96                     
  2911                           ; BSR set to: 15
  2912                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
  2913  001F96  690D               	setf	13,b	;volatile
  2914  001F98                     
  2915                           ; BSR set to: 15
  2916                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
  2917  001F98  6915               	setf	21,b	;volatile
  2918  001F9A                     
  2919                           ; BSR set to: 15
  2920                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
  2921  001F9A  691D               	setf	29,b	;volatile
  2922  001F9C                     
  2923                           ; BSR set to: 15
  2924                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
  2925  001F9C  6922               	setf	34,b	;volatile
  2926                           
  2927                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x0F;
  2928  001F9E  0E0F               	movlw	15
  2929  001FA0  6F2A               	movwf	42,b	;volatile
  2930                           
  2931                           ;mcc_generated_files/pin_manager.c: 127:     RX1PPS = 0x17;
  2932  001FA2  0E17               	movlw	23
  2933  001FA4  010E               	movlb	14	; () banked
  2934  001FA6  6FB5               	movwf	181,b	;volatile
  2935                           
  2936                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x0B;
  2937  001FA8  0E0B               	movlw	11
  2938  001FAA  6FF5               	movwf	245,b	;volatile
  2939                           
  2940                           ;mcc_generated_files/pin_manager.c: 129:     RC6PPS = 0x09;
  2941  001FAC  0E09               	movlw	9
  2942  001FAE  6FFD               	movwf	253,b	;volatile
  2943                           
  2944                           ;mcc_generated_files/pin_manager.c: 130:     RX2PPS = 0x0F;
  2945  001FB0  0E0F               	movlw	15
  2946  001FB2  6F8D               	movwf	141,b	;volatile
  2947  001FB4                     
  2948                           ; BSR set to: 14
  2949  001FB4  0012               	return		;funcret
  2950  001FB6                     __end_of_PIN_MANAGER_Initialize:
  2951                           	opt callstack 0
  2952                           
  2953 ;; *************** function _OSCILLATOR_Initialize *****************
  2954 ;; Defined at:
  2955 ;;		line 60 in file "mcc_generated_files/mcc.c"
  2956 ;; Parameters:    Size  Location     Type
  2957 ;;		None
  2958 ;; Auto vars:     Size  Location     Type
  2959 ;;		None
  2960 ;; Return value:  Size  Location     Type
  2961 ;;                  1    wreg      void 
  2962 ;; Registers used:
  2963 ;;		wreg, status,2
  2964 ;; Tracked objects:
  2965 ;;		On entry : 0/0
  2966 ;;		On exit  : 0/0
  2967 ;;		Unchanged: 0/0
  2968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2973 ;;Total ram usage:        0 bytes
  2974 ;; Hardware stack levels used:    1
  2975 ;; Hardware stack levels required when called:    4
  2976 ;; This function calls:
  2977 ;;		Nothing
  2978 ;; This function is called by:
  2979 ;;		_SYSTEM_Initialize
  2980 ;; This function uses a non-reentrant model
  2981 ;;
  2982                           
  2983                           	psect	text11
  2984  002964                     __ptext11:
  2985                           	opt callstack 0
  2986  002964                     _OSCILLATOR_Initialize:
  2987                           	opt callstack 25
  2988  002964                     
  2989                           ;mcc_generated_files/mcc.c: 63:     OSCCON1 = 0x60;
  2990  002964  0E60               	movlw	96
  2991  002966  010E               	movlb	14	; () banked
  2992  002968  6FD8               	movwf	216,b	;volatile
  2993                           
  2994                           ;mcc_generated_files/mcc.c: 65:     OSCCON3 = 0x00;
  2995  00296A  0E00               	movlw	0
  2996  00296C  6FDA               	movwf	218,b	;volatile
  2997                           
  2998                           ;mcc_generated_files/mcc.c: 67:     OSCEN = 0x00;
  2999  00296E  0E00               	movlw	0
  3000  002970  6FDC               	movwf	220,b	;volatile
  3001                           
  3002                           ;mcc_generated_files/mcc.c: 69:     OSCFRQ = 0x06;
  3003  002972  0E06               	movlw	6
  3004  002974  6FDE               	movwf	222,b	;volatile
  3005                           
  3006                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  3007  002976  0E00               	movlw	0
  3008  002978  6FDD               	movwf	221,b	;volatile
  3009  00297A                     
  3010                           ; BSR set to: 14
  3011  00297A  0012               	return		;funcret
  3012  00297C                     __end_of_OSCILLATOR_Initialize:
  3013                           	opt callstack 0
  3014                           
  3015 ;; *************** function _INTERRUPT_Initialize *****************
  3016 ;; Defined at:
  3017 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3018 ;; Parameters:    Size  Location     Type
  3019 ;;		None
  3020 ;; Auto vars:     Size  Location     Type
  3021 ;;		None
  3022 ;; Return value:  Size  Location     Type
  3023 ;;                  1    wreg      void 
  3024 ;; Registers used:
  3025 ;;		None
  3026 ;; Tracked objects:
  3027 ;;		On entry : 0/0
  3028 ;;		On exit  : 0/0
  3029 ;;		Unchanged: 0/0
  3030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3035 ;;Total ram usage:        0 bytes
  3036 ;; Hardware stack levels used:    1
  3037 ;; Hardware stack levels required when called:    4
  3038 ;; This function calls:
  3039 ;;		Nothing
  3040 ;; This function is called by:
  3041 ;;		_SYSTEM_Initialize
  3042 ;; This function uses a non-reentrant model
  3043 ;;
  3044                           
  3045                           	psect	text12
  3046  002A48                     __ptext12:
  3047                           	opt callstack 0
  3048  002A48                     _INTERRUPT_Initialize:
  3049                           	opt callstack 25
  3050  002A48                     
  3051                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
  3052  002A48  9AF2               	bcf	242,5,c	;volatile
  3053  002A4A  0012               	return		;funcret
  3054  002A4C                     __end_of_INTERRUPT_Initialize:
  3055                           	opt callstack 0
  3056                           
  3057 ;; *************** function _EUSART2_Initialize *****************
  3058 ;; Defined at:
  3059 ;;		line 88 in file "mcc_generated_files/eusart2.c"
  3060 ;; Parameters:    Size  Location     Type
  3061 ;;		None
  3062 ;; Auto vars:     Size  Location     Type
  3063 ;;		None
  3064 ;; Return value:  Size  Location     Type
  3065 ;;                  1    wreg      void 
  3066 ;; Registers used:
  3067 ;;		wreg, status,2, status,0, cstack
  3068 ;; Tracked objects:
  3069 ;;		On entry : 0/0
  3070 ;;		On exit  : 0/0
  3071 ;;		Unchanged: 0/0
  3072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3077 ;;Total ram usage:        0 bytes
  3078 ;; Hardware stack levels used:    1
  3079 ;; Hardware stack levels required when called:    5
  3080 ;; This function calls:
  3081 ;;		_EUSART2_SetErrorHandler
  3082 ;;		_EUSART2_SetFramingErrorHandler
  3083 ;;		_EUSART2_SetOverrunErrorHandler
  3084 ;;		_EUSART2_SetRxInterruptHandler
  3085 ;;		_EUSART2_SetTxInterruptHandler
  3086 ;; This function is called by:
  3087 ;;		_SYSTEM_Initialize
  3088 ;; This function uses a non-reentrant model
  3089 ;;
  3090                           
  3091                           	psect	text13
  3092  002038                     __ptext13:
  3093                           	opt callstack 0
  3094  002038                     _EUSART2_Initialize:
  3095                           	opt callstack 24
  3096  002038                     
  3097                           ;mcc_generated_files/eusart2.c: 91:     PIE3bits.RC2IE = 0;
  3098  002038  010E               	movlb	14	; () banked
  3099  00203A  9FC5               	bcf	197,7,b	;volatile
  3100  00203C                     
  3101                           ; BSR set to: 14
  3102                           ;mcc_generated_files/eusart2.c: 92:     EUSART2_SetRxInterruptHandler(EUSART2_Receive_IS
      +                          R);
  3103  00203C  0EBE               	movlw	low _EUSART2_Receive_ISR
  3104  00203E  6E05               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler^0,c
  3105  002040  0E1B               	movlw	high _EUSART2_Receive_ISR
  3106  002042  6E06               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)^0,c
  3107  002044  ECDF  F014         	call	_EUSART2_SetRxInterruptHandler	;wreg free
  3108  002048                     
  3109                           ;mcc_generated_files/eusart2.c: 93:     PIE3bits.TX2IE = 0;
  3110  002048  010E               	movlb	14	; () banked
  3111  00204A  9DC5               	bcf	197,6,b	;volatile
  3112                           
  3113                           ;mcc_generated_files/eusart2.c: 94:     EUSART2_SetTxInterruptHandler(EUSART2_Transmit_I
      +                          SR);
  3114  00204C  0E1A               	movlw	low _EUSART2_Transmit_ISR
  3115  00204E  6E05               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler^0,c
  3116  002050  0E26               	movlw	high _EUSART2_Transmit_ISR
  3117  002052  6E06               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)^0,c
  3118  002054  ECDA  F014         	call	_EUSART2_SetTxInterruptHandler	;wreg free
  3119  002058                     
  3120                           ;mcc_generated_files/eusart2.c: 98:     BAUD2CON = 0x08;
  3121  002058  0E08               	movlw	8
  3122  00205A  010E               	movlb	14	; () banked
  3123  00205C  6F9F               	movwf	159,b	;volatile
  3124  00205E                     
  3125                           ; BSR set to: 14
  3126                           ;mcc_generated_files/eusart2.c: 101:     RC2STA = 0x90;
  3127  00205E  0E90               	movlw	144
  3128  002060  6F9D               	movwf	157,b	;volatile
  3129  002062                     
  3130                           ; BSR set to: 14
  3131                           ;mcc_generated_files/eusart2.c: 104:     TX2STA = 0x24;
  3132  002062  0E24               	movlw	36
  3133  002064  6F9E               	movwf	158,b	;volatile
  3134  002066                     
  3135                           ; BSR set to: 14
  3136                           ;mcc_generated_files/eusart2.c: 107:     SP2BRGL = 0x40;
  3137  002066  0E40               	movlw	64
  3138  002068  6F9B               	movwf	155,b	;volatile
  3139  00206A                     
  3140                           ; BSR set to: 14
  3141                           ;mcc_generated_files/eusart2.c: 110:     SP2BRGH = 0x03;
  3142  00206A  0E03               	movlw	3
  3143  00206C  6F9C               	movwf	156,b	;volatile
  3144  00206E                     
  3145                           ; BSR set to: 14
  3146                           ;mcc_generated_files/eusart2.c: 113:     EUSART2_SetFramingErrorHandler(EUSART2_DefaultF
      +                          ramingErrorHandler);
  3147  00206E  0E4C               	movlw	low _EUSART2_DefaultFramingErrorHandler
  3148  002070  6E05               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler^0,c
  3149  002072  0E2A               	movlw	high _EUSART2_DefaultFramingErrorHandler
  3150  002074  6E06               	movwf	(EUSART2_SetFramingErrorHandler@interruptHandler+1)^0,c
  3151  002076  ECE9  F014         	call	_EUSART2_SetFramingErrorHandler	;wreg free
  3152  00207A                     
  3153                           ;mcc_generated_files/eusart2.c: 114:     EUSART2_SetOverrunErrorHandler(EUSART2_DefaultO
      +                          verrunErrorHandler);
  3154  00207A  0E22               	movlw	low _EUSART2_DefaultOverrunErrorHandler
  3155  00207C  6E05               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler^0,c
  3156  00207E  0E2A               	movlw	high _EUSART2_DefaultOverrunErrorHandler
  3157  002080  6E06               	movwf	(EUSART2_SetOverrunErrorHandler@interruptHandler+1)^0,c
  3158  002082  ECE4  F014         	call	_EUSART2_SetOverrunErrorHandler	;wreg free
  3159  002086                     
  3160                           ;mcc_generated_files/eusart2.c: 115:     EUSART2_SetErrorHandler(EUSART2_DefaultErrorHan
      +                          dler);
  3161  002086  0E36               	movlw	low _EUSART2_DefaultErrorHandler
  3162  002088  6E05               	movwf	EUSART2_SetErrorHandler@interruptHandler^0,c
  3163  00208A  0E2A               	movlw	high _EUSART2_DefaultErrorHandler
  3164  00208C  6E06               	movwf	(EUSART2_SetErrorHandler@interruptHandler+1)^0,c
  3165  00208E  ECEE  F014         	call	_EUSART2_SetErrorHandler	;wreg free
  3166                           
  3167                           ;mcc_generated_files/eusart2.c: 117:     eusart2RxLastError.status = 0;
  3168  002092  0E00               	movlw	0
  3169  002094  0100               	movlb	0	; () banked
  3170  002096  6F9E               	movwf	_eusart2RxLastError& (0+255),b	;volatile
  3171                           
  3172                           ;mcc_generated_files/eusart2.c: 120:     eusart2TxHead = 0;
  3173  002098  0E00               	movlw	0
  3174  00209A  6FA2               	movwf	_eusart2TxHead& (0+255),b	;volatile
  3175                           
  3176                           ;mcc_generated_files/eusart2.c: 121:     eusart2TxTail = 0;
  3177  00209C  0E00               	movlw	0
  3178  00209E  6FA1               	movwf	_eusart2TxTail& (0+255),b	;volatile
  3179                           
  3180                           ;mcc_generated_files/eusart2.c: 122:     eusart2TxBufferRemaining = sizeof(eusart2TxBuff
      +                          er);
  3181  0020A0  0E08               	movlw	8
  3182  0020A2  6FF4               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
  3183                           
  3184                           ;mcc_generated_files/eusart2.c: 124:     eusart2RxHead = 0;
  3185  0020A4  0E00               	movlw	0
  3186  0020A6  6E59               	movwf	_eusart2RxHead^0,c	;volatile
  3187                           
  3188                           ;mcc_generated_files/eusart2.c: 125:     eusart2RxTail = 0;
  3189  0020A8  0E00               	movlw	0
  3190  0020AA  6FA0               	movwf	_eusart2RxTail& (0+255),b	;volatile
  3191                           
  3192                           ;mcc_generated_files/eusart2.c: 126:     eusart2RxCount = 0;
  3193  0020AC  0E00               	movlw	0
  3194  0020AE  6F9F               	movwf	_eusart2RxCount& (0+255),b	;volatile
  3195  0020B0                     
  3196                           ; BSR set to: 0
  3197                           ;mcc_generated_files/eusart2.c: 129:     PIE3bits.RC2IE = 1;
  3198  0020B0  010E               	movlb	14	; () banked
  3199  0020B2  8FC5               	bsf	197,7,b	;volatile
  3200  0020B4                     
  3201                           ; BSR set to: 14
  3202  0020B4  0012               	return		;funcret
  3203  0020B6                     __end_of_EUSART2_Initialize:
  3204                           	opt callstack 0
  3205                           
  3206 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
  3207 ;; Defined at:
  3208 ;;		line 285 in file "mcc_generated_files/eusart2.c"
  3209 ;; Parameters:    Size  Location     Type
  3210 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3211 ;;		 -> EUSART2_Transmit_ISR(1), 
  3212 ;; Auto vars:     Size  Location     Type
  3213 ;;		None
  3214 ;; Return value:  Size  Location     Type
  3215 ;;                  1    wreg      void 
  3216 ;; Registers used:
  3217 ;;		wreg, status,2, status,0
  3218 ;; Tracked objects:
  3219 ;;		On entry : 0/0
  3220 ;;		On exit  : 0/0
  3221 ;;		Unchanged: 0/0
  3222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3223 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3226 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3227 ;;Total ram usage:        2 bytes
  3228 ;; Hardware stack levels used:    1
  3229 ;; Hardware stack levels required when called:    4
  3230 ;; This function calls:
  3231 ;;		Nothing
  3232 ;; This function is called by:
  3233 ;;		_EUSART2_Initialize
  3234 ;; This function uses a non-reentrant model
  3235 ;;
  3236                           
  3237                           	psect	text14
  3238  0029B4                     __ptext14:
  3239                           	opt callstack 0
  3240  0029B4                     _EUSART2_SetTxInterruptHandler:
  3241                           	opt callstack 24
  3242  0029B4                     
  3243                           ;mcc_generated_files/eusart2.c: 286:     EUSART2_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  3244  0029B4  C005  F0F1         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
  3245  0029B8  C006  F0F2         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
  3246  0029BC  0012               	return		;funcret
  3247  0029BE                     __end_of_EUSART2_SetTxInterruptHandler:
  3248                           	opt callstack 0
  3249                           
  3250 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
  3251 ;; Defined at:
  3252 ;;		line 289 in file "mcc_generated_files/eusart2.c"
  3253 ;; Parameters:    Size  Location     Type
  3254 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3255 ;;		 -> EUSART2_Receive_ISR(1), 
  3256 ;; Auto vars:     Size  Location     Type
  3257 ;;		None
  3258 ;; Return value:  Size  Location     Type
  3259 ;;                  1    wreg      void 
  3260 ;; Registers used:
  3261 ;;		wreg, status,2, status,0
  3262 ;; Tracked objects:
  3263 ;;		On entry : 0/0
  3264 ;;		On exit  : 0/0
  3265 ;;		Unchanged: 0/0
  3266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3267 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3270 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3271 ;;Total ram usage:        2 bytes
  3272 ;; Hardware stack levels used:    1
  3273 ;; Hardware stack levels required when called:    4
  3274 ;; This function calls:
  3275 ;;		Nothing
  3276 ;; This function is called by:
  3277 ;;		_EUSART2_Initialize
  3278 ;; This function uses a non-reentrant model
  3279 ;;
  3280                           
  3281                           	psect	text15
  3282  0029BE                     __ptext15:
  3283                           	opt callstack 0
  3284  0029BE                     _EUSART2_SetRxInterruptHandler:
  3285                           	opt callstack 24
  3286  0029BE                     
  3287                           ;mcc_generated_files/eusart2.c: 290:     EUSART2_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  3288  0029BE  C005  F0EF         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
  3289  0029C2  C006  F0F0         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
  3290  0029C6  0012               	return		;funcret
  3291  0029C8                     __end_of_EUSART2_SetRxInterruptHandler:
  3292                           	opt callstack 0
  3293                           
  3294 ;; *************** function _EUSART2_SetOverrunErrorHandler *****************
  3295 ;; Defined at:
  3296 ;;		line 277 in file "mcc_generated_files/eusart2.c"
  3297 ;; Parameters:    Size  Location     Type
  3298 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3299 ;;		 -> EUSART2_DefaultOverrunErrorHandler(1), 
  3300 ;; Auto vars:     Size  Location     Type
  3301 ;;		None
  3302 ;; Return value:  Size  Location     Type
  3303 ;;                  1    wreg      void 
  3304 ;; Registers used:
  3305 ;;		wreg, status,2, status,0
  3306 ;; Tracked objects:
  3307 ;;		On entry : 0/0
  3308 ;;		On exit  : 0/0
  3309 ;;		Unchanged: 0/0
  3310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3311 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3314 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3315 ;;Total ram usage:        2 bytes
  3316 ;; Hardware stack levels used:    1
  3317 ;; Hardware stack levels required when called:    4
  3318 ;; This function calls:
  3319 ;;		Nothing
  3320 ;; This function is called by:
  3321 ;;		_EUSART2_Initialize
  3322 ;; This function uses a non-reentrant model
  3323 ;;
  3324                           
  3325                           	psect	text16
  3326  0029C8                     __ptext16:
  3327                           	opt callstack 0
  3328  0029C8                     _EUSART2_SetOverrunErrorHandler:
  3329                           	opt callstack 24
  3330  0029C8                     
  3331                           ;mcc_generated_files/eusart2.c: 278:     EUSART2_OverrunErrorHandler = interruptHandler;
  3332  0029C8  C005  F0E7         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler,_EUSART2_OverrunErrorHandler
  3333  0029CC  C006  F0E8         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler+1,_EUSART2_OverrunErrorHandler+1
  3334  0029D0  0012               	return		;funcret
  3335  0029D2                     __end_of_EUSART2_SetOverrunErrorHandler:
  3336                           	opt callstack 0
  3337                           
  3338 ;; *************** function _EUSART2_SetFramingErrorHandler *****************
  3339 ;; Defined at:
  3340 ;;		line 273 in file "mcc_generated_files/eusart2.c"
  3341 ;; Parameters:    Size  Location     Type
  3342 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3343 ;;		 -> EUSART2_DefaultFramingErrorHandler(1), 
  3344 ;; Auto vars:     Size  Location     Type
  3345 ;;		None
  3346 ;; Return value:  Size  Location     Type
  3347 ;;                  1    wreg      void 
  3348 ;; Registers used:
  3349 ;;		wreg, status,2, status,0
  3350 ;; Tracked objects:
  3351 ;;		On entry : 0/0
  3352 ;;		On exit  : 0/0
  3353 ;;		Unchanged: 0/0
  3354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3355 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3358 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3359 ;;Total ram usage:        2 bytes
  3360 ;; Hardware stack levels used:    1
  3361 ;; Hardware stack levels required when called:    4
  3362 ;; This function calls:
  3363 ;;		Nothing
  3364 ;; This function is called by:
  3365 ;;		_EUSART2_Initialize
  3366 ;; This function uses a non-reentrant model
  3367 ;;
  3368                           
  3369                           	psect	text17
  3370  0029D2                     __ptext17:
  3371                           	opt callstack 0
  3372  0029D2                     _EUSART2_SetFramingErrorHandler:
  3373                           	opt callstack 24
  3374  0029D2                     
  3375                           ;mcc_generated_files/eusart2.c: 274:     EUSART2_FramingErrorHandler = interruptHandler;
  3376  0029D2  C005  F0E9         	movff	EUSART2_SetFramingErrorHandler@interruptHandler,_EUSART2_FramingErrorHandler
  3377  0029D6  C006  F0EA         	movff	EUSART2_SetFramingErrorHandler@interruptHandler+1,_EUSART2_FramingErrorHandler+1
  3378  0029DA  0012               	return		;funcret
  3379  0029DC                     __end_of_EUSART2_SetFramingErrorHandler:
  3380                           	opt callstack 0
  3381                           
  3382 ;; *************** function _EUSART2_SetErrorHandler *****************
  3383 ;; Defined at:
  3384 ;;		line 281 in file "mcc_generated_files/eusart2.c"
  3385 ;; Parameters:    Size  Location     Type
  3386 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3387 ;;		 -> EUSART2_DefaultErrorHandler(1), 
  3388 ;; Auto vars:     Size  Location     Type
  3389 ;;		None
  3390 ;; Return value:  Size  Location     Type
  3391 ;;                  1    wreg      void 
  3392 ;; Registers used:
  3393 ;;		wreg, status,2, status,0
  3394 ;; Tracked objects:
  3395 ;;		On entry : 0/0
  3396 ;;		On exit  : 0/0
  3397 ;;		Unchanged: 0/0
  3398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3399 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3402 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3403 ;;Total ram usage:        2 bytes
  3404 ;; Hardware stack levels used:    1
  3405 ;; Hardware stack levels required when called:    4
  3406 ;; This function calls:
  3407 ;;		Nothing
  3408 ;; This function is called by:
  3409 ;;		_EUSART2_Initialize
  3410 ;; This function uses a non-reentrant model
  3411 ;;
  3412                           
  3413                           	psect	text18
  3414  0029DC                     __ptext18:
  3415                           	opt callstack 0
  3416  0029DC                     _EUSART2_SetErrorHandler:
  3417                           	opt callstack 24
  3418  0029DC                     
  3419                           ;mcc_generated_files/eusart2.c: 282:     EUSART2_ErrorHandler = interruptHandler;
  3420  0029DC  C005  F0E5         	movff	EUSART2_SetErrorHandler@interruptHandler,_EUSART2_ErrorHandler
  3421  0029E0  C006  F0E6         	movff	EUSART2_SetErrorHandler@interruptHandler+1,_EUSART2_ErrorHandler+1
  3422  0029E4  0012               	return		;funcret
  3423  0029E6                     __end_of_EUSART2_SetErrorHandler:
  3424                           	opt callstack 0
  3425                           
  3426 ;; *************** function _EUSART1_Initialize *****************
  3427 ;; Defined at:
  3428 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  3429 ;; Parameters:    Size  Location     Type
  3430 ;;		None
  3431 ;; Auto vars:     Size  Location     Type
  3432 ;;		None
  3433 ;; Return value:  Size  Location     Type
  3434 ;;                  1    wreg      void 
  3435 ;; Registers used:
  3436 ;;		wreg, status,2, status,0, cstack
  3437 ;; Tracked objects:
  3438 ;;		On entry : 0/0
  3439 ;;		On exit  : 0/0
  3440 ;;		Unchanged: 0/0
  3441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3446 ;;Total ram usage:        0 bytes
  3447 ;; Hardware stack levels used:    1
  3448 ;; Hardware stack levels required when called:    5
  3449 ;; This function calls:
  3450 ;;		_EUSART1_SetErrorHandler
  3451 ;;		_EUSART1_SetFramingErrorHandler
  3452 ;;		_EUSART1_SetOverrunErrorHandler
  3453 ;;		_EUSART1_SetRxInterruptHandler
  3454 ;;		_EUSART1_SetTxInterruptHandler
  3455 ;; This function is called by:
  3456 ;;		_SYSTEM_Initialize
  3457 ;; This function uses a non-reentrant model
  3458 ;;
  3459                           
  3460                           	psect	text19
  3461  0020B6                     __ptext19:
  3462                           	opt callstack 0
  3463  0020B6                     _EUSART1_Initialize:
  3464                           	opt callstack 24
  3465  0020B6                     
  3466                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
  3467  0020B6  010E               	movlb	14	; () banked
  3468  0020B8  9BC5               	bcf	197,5,b	;volatile
  3469  0020BA                     
  3470                           ; BSR set to: 14
  3471                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  3472  0020BA  0E7E               	movlw	low _EUSART1_Receive_ISR
  3473  0020BC  6E05               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
  3474  0020BE  0E1C               	movlw	high _EUSART1_Receive_ISR
  3475  0020C0  6E06               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
  3476  0020C2  ECF8  F014         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  3477  0020C6                     
  3478                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
  3479  0020C6  010E               	movlb	14	; () banked
  3480  0020C8  99C5               	bcf	197,4,b	;volatile
  3481                           
  3482                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  3483  0020CA  0EA6               	movlw	low _EUSART1_Transmit_ISR
  3484  0020CC  6E05               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
  3485  0020CE  0E26               	movlw	high _EUSART1_Transmit_ISR
  3486  0020D0  6E06               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
  3487  0020D2  ECF3  F014         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  3488  0020D6                     
  3489                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
  3490  0020D6  0E08               	movlw	8
  3491  0020D8  6E9F               	movwf	159,c	;volatile
  3492  0020DA                     
  3493                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
  3494  0020DA  0E90               	movlw	144
  3495  0020DC  6E9D               	movwf	157,c	;volatile
  3496  0020DE                     
  3497                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
  3498  0020DE  0E24               	movlw	36
  3499  0020E0  6E9E               	movwf	158,c	;volatile
  3500  0020E2                     
  3501                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x40;
  3502  0020E2  0E40               	movlw	64
  3503  0020E4  6E9B               	movwf	155,c	;volatile
  3504  0020E6                     
  3505                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x03;
  3506  0020E6  0E03               	movlw	3
  3507  0020E8  6E9C               	movwf	156,c	;volatile
  3508  0020EA                     
  3509                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  3510  0020EA  0E4E               	movlw	low _EUSART1_DefaultFramingErrorHandler
  3511  0020EC  6E05               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  3512  0020EE  0E2A               	movlw	high _EUSART1_DefaultFramingErrorHandler
  3513  0020F0  6E06               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  3514  0020F2  EC02  F015         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  3515  0020F6                     
  3516                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  3517  0020F6  0E3C               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  3518  0020F8  6E05               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  3519  0020FA  0E2A               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  3520  0020FC  6E06               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  3521  0020FE  ECFD  F014         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  3522  002102                     
  3523                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  3524  002102  0E42               	movlw	low _EUSART1_DefaultErrorHandler
  3525  002104  6E05               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  3526  002106  0E2A               	movlw	high _EUSART1_DefaultErrorHandler
  3527  002108  6E06               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  3528  00210A  EC07  F015         	call	_EUSART1_SetErrorHandler	;wreg free
  3529                           
  3530                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
  3531  00210E  0E00               	movlw	0
  3532  002110  0100               	movlb	0	; () banked
  3533  002112  6F99               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  3534                           
  3535                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
  3536  002114  0E00               	movlw	0
  3537  002116  6F9D               	movwf	_eusart1TxHead& (0+255),b	;volatile
  3538                           
  3539                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
  3540  002118  0E00               	movlw	0
  3541  00211A  6F9C               	movwf	_eusart1TxTail& (0+255),b	;volatile
  3542                           
  3543                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  3544  00211C  0E10               	movlw	16
  3545  00211E  6FF3               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
  3546                           
  3547                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
  3548  002120  0E00               	movlw	0
  3549  002122  6E58               	movwf	_eusart1RxHead^0,c	;volatile
  3550                           
  3551                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
  3552  002124  0E00               	movlw	0
  3553  002126  6F9B               	movwf	_eusart1RxTail& (0+255),b	;volatile
  3554                           
  3555                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
  3556  002128  0E00               	movlw	0
  3557  00212A  6F9A               	movwf	_eusart1RxCount& (0+255),b	;volatile
  3558  00212C                     
  3559                           ; BSR set to: 0
  3560                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
  3561  00212C  010E               	movlb	14	; () banked
  3562  00212E  8BC5               	bsf	197,5,b	;volatile
  3563  002130                     
  3564                           ; BSR set to: 14
  3565  002130  0012               	return		;funcret
  3566  002132                     __end_of_EUSART1_Initialize:
  3567                           	opt callstack 0
  3568                           
  3569 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  3570 ;; Defined at:
  3571 ;;		line 276 in file "mcc_generated_files/eusart1.c"
  3572 ;; Parameters:    Size  Location     Type
  3573 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3574 ;;		 -> EUSART1_Transmit_ISR(1), 
  3575 ;; Auto vars:     Size  Location     Type
  3576 ;;		None
  3577 ;; Return value:  Size  Location     Type
  3578 ;;                  1    wreg      void 
  3579 ;; Registers used:
  3580 ;;		wreg, status,2, status,0
  3581 ;; Tracked objects:
  3582 ;;		On entry : 0/0
  3583 ;;		On exit  : 0/0
  3584 ;;		Unchanged: 0/0
  3585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3586 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3589 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3590 ;;Total ram usage:        2 bytes
  3591 ;; Hardware stack levels used:    1
  3592 ;; Hardware stack levels required when called:    4
  3593 ;; This function calls:
  3594 ;;		Nothing
  3595 ;; This function is called by:
  3596 ;;		_EUSART1_Initialize
  3597 ;; This function uses a non-reentrant model
  3598 ;;
  3599                           
  3600                           	psect	text20
  3601  0029E6                     __ptext20:
  3602                           	opt callstack 0
  3603  0029E6                     _EUSART1_SetTxInterruptHandler:
  3604                           	opt callstack 24
  3605  0029E6                     
  3606                           ;mcc_generated_files/eusart1.c: 277:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  3607  0029E6  C005  F0ED         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  3608  0029EA  C006  F0EE         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  3609  0029EE  0012               	return		;funcret
  3610  0029F0                     __end_of_EUSART1_SetTxInterruptHandler:
  3611                           	opt callstack 0
  3612                           
  3613 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  3614 ;; Defined at:
  3615 ;;		line 280 in file "mcc_generated_files/eusart1.c"
  3616 ;; Parameters:    Size  Location     Type
  3617 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3618 ;;		 -> EUSART1_Receive_ISR(1), 
  3619 ;; Auto vars:     Size  Location     Type
  3620 ;;		None
  3621 ;; Return value:  Size  Location     Type
  3622 ;;                  1    wreg      void 
  3623 ;; Registers used:
  3624 ;;		wreg, status,2, status,0
  3625 ;; Tracked objects:
  3626 ;;		On entry : 0/0
  3627 ;;		On exit  : 0/0
  3628 ;;		Unchanged: 0/0
  3629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3630 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3633 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3634 ;;Total ram usage:        2 bytes
  3635 ;; Hardware stack levels used:    1
  3636 ;; Hardware stack levels required when called:    4
  3637 ;; This function calls:
  3638 ;;		Nothing
  3639 ;; This function is called by:
  3640 ;;		_EUSART1_Initialize
  3641 ;; This function uses a non-reentrant model
  3642 ;;
  3643                           
  3644                           	psect	text21
  3645  0029F0                     __ptext21:
  3646                           	opt callstack 0
  3647  0029F0                     _EUSART1_SetRxInterruptHandler:
  3648                           	opt callstack 24
  3649  0029F0                     
  3650                           ;mcc_generated_files/eusart1.c: 281:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  3651  0029F0  C005  F0EB         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  3652  0029F4  C006  F0EC         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  3653  0029F8  0012               	return		;funcret
  3654  0029FA                     __end_of_EUSART1_SetRxInterruptHandler:
  3655                           	opt callstack 0
  3656                           
  3657 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  3658 ;; Defined at:
  3659 ;;		line 268 in file "mcc_generated_files/eusart1.c"
  3660 ;; Parameters:    Size  Location     Type
  3661 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3662 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  3663 ;; Auto vars:     Size  Location     Type
  3664 ;;		None
  3665 ;; Return value:  Size  Location     Type
  3666 ;;                  1    wreg      void 
  3667 ;; Registers used:
  3668 ;;		wreg, status,2, status,0
  3669 ;; Tracked objects:
  3670 ;;		On entry : 0/0
  3671 ;;		On exit  : 0/0
  3672 ;;		Unchanged: 0/0
  3673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3674 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3677 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3678 ;;Total ram usage:        2 bytes
  3679 ;; Hardware stack levels used:    1
  3680 ;; Hardware stack levels required when called:    4
  3681 ;; This function calls:
  3682 ;;		Nothing
  3683 ;; This function is called by:
  3684 ;;		_EUSART1_Initialize
  3685 ;; This function uses a non-reentrant model
  3686 ;;
  3687                           
  3688                           	psect	text22
  3689  0029FA                     __ptext22:
  3690                           	opt callstack 0
  3691  0029FA                     _EUSART1_SetOverrunErrorHandler:
  3692                           	opt callstack 24
  3693  0029FA                     
  3694                           ;mcc_generated_files/eusart1.c: 269:     EUSART1_OverrunErrorHandler = interruptHandler;
  3695  0029FA  C005  F0E1         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  3696  0029FE  C006  F0E2         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  3697  002A02  0012               	return		;funcret
  3698  002A04                     __end_of_EUSART1_SetOverrunErrorHandler:
  3699                           	opt callstack 0
  3700                           
  3701 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  3702 ;; Defined at:
  3703 ;;		line 264 in file "mcc_generated_files/eusart1.c"
  3704 ;; Parameters:    Size  Location     Type
  3705 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3706 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  3707 ;; Auto vars:     Size  Location     Type
  3708 ;;		None
  3709 ;; Return value:  Size  Location     Type
  3710 ;;                  1    wreg      void 
  3711 ;; Registers used:
  3712 ;;		wreg, status,2, status,0
  3713 ;; Tracked objects:
  3714 ;;		On entry : 0/0
  3715 ;;		On exit  : 0/0
  3716 ;;		Unchanged: 0/0
  3717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3718 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3721 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3722 ;;Total ram usage:        2 bytes
  3723 ;; Hardware stack levels used:    1
  3724 ;; Hardware stack levels required when called:    4
  3725 ;; This function calls:
  3726 ;;		Nothing
  3727 ;; This function is called by:
  3728 ;;		_EUSART1_Initialize
  3729 ;; This function uses a non-reentrant model
  3730 ;;
  3731                           
  3732                           	psect	text23
  3733  002A04                     __ptext23:
  3734                           	opt callstack 0
  3735  002A04                     _EUSART1_SetFramingErrorHandler:
  3736                           	opt callstack 24
  3737  002A04                     
  3738                           ;mcc_generated_files/eusart1.c: 265:     EUSART1_FramingErrorHandler = interruptHandler;
  3739  002A04  C005  F0E3         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  3740  002A08  C006  F0E4         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  3741  002A0C  0012               	return		;funcret
  3742  002A0E                     __end_of_EUSART1_SetFramingErrorHandler:
  3743                           	opt callstack 0
  3744                           
  3745 ;; *************** function _EUSART1_SetErrorHandler *****************
  3746 ;; Defined at:
  3747 ;;		line 272 in file "mcc_generated_files/eusart1.c"
  3748 ;; Parameters:    Size  Location     Type
  3749 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3750 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  3751 ;; Auto vars:     Size  Location     Type
  3752 ;;		None
  3753 ;; Return value:  Size  Location     Type
  3754 ;;                  1    wreg      void 
  3755 ;; Registers used:
  3756 ;;		wreg, status,2, status,0
  3757 ;; Tracked objects:
  3758 ;;		On entry : 0/0
  3759 ;;		On exit  : 0/0
  3760 ;;		Unchanged: 0/0
  3761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3762 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3765 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3766 ;;Total ram usage:        2 bytes
  3767 ;; Hardware stack levels used:    1
  3768 ;; Hardware stack levels required when called:    4
  3769 ;; This function calls:
  3770 ;;		Nothing
  3771 ;; This function is called by:
  3772 ;;		_EUSART1_Initialize
  3773 ;; This function uses a non-reentrant model
  3774 ;;
  3775                           
  3776                           	psect	text24
  3777  002A0E                     __ptext24:
  3778                           	opt callstack 0
  3779  002A0E                     _EUSART1_SetErrorHandler:
  3780                           	opt callstack 24
  3781  002A0E                     
  3782                           ;mcc_generated_files/eusart1.c: 273:     EUSART1_ErrorHandler = interruptHandler;
  3783  002A0E  C005  F0DF         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  3784  002A12  C006  F0E0         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  3785  002A16  0012               	return		;funcret
  3786  002A18                     __end_of_EUSART1_SetErrorHandler:
  3787                           	opt callstack 0
  3788                           
  3789 ;; *************** function _PrintModbus *****************
  3790 ;; Defined at:
  3791 ;;		line 92 in file "main.c"
  3792 ;; Parameters:    Size  Location     Type
  3793 ;;		None
  3794 ;; Auto vars:     Size  Location     Type
  3795 ;;  i               2   41[BANK0 ] int 
  3796 ;; Return value:  Size  Location     Type
  3797 ;;                  1    wreg      void 
  3798 ;; Registers used:
  3799 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3800 ;; Tracked objects:
  3801 ;;		On entry : 0/0
  3802 ;;		On exit  : 0/0
  3803 ;;		Unchanged: 0/0
  3804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3806 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3807 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3808 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3809 ;;Total ram usage:        3 bytes
  3810 ;; Hardware stack levels used:    1
  3811 ;; Hardware stack levels required when called:   13
  3812 ;; This function calls:
  3813 ;;		_printf
  3814 ;; This function is called by:
  3815 ;;		_main
  3816 ;; This function uses a non-reentrant model
  3817 ;;
  3818                           
  3819                           	psect	text25
  3820  0021AE                     __ptext25:
  3821                           	opt callstack 0
  3822  0021AE                     _PrintModbus:
  3823                           	opt callstack 17
  3824  0021AE                     
  3825                           ;main.c: 97:     printf("Modbus Data Capture Complete:\r\n");
  3826  0021AE  0E1E               	movlw	low STR_13
  3827  0021B0  0100               	movlb	0	; () banked
  3828  0021B2  6FC0               	movwf	printf@fmt& (0+255),b
  3829  0021B4  0EFF               	movlw	high STR_13
  3830  0021B6  6FC1               	movwf	(printf@fmt+1)& (0+255),b
  3831  0021B8  EC54  F014         	call	_printf	;wreg free
  3832  0021BC                     
  3833                           ;main.c: 98:     for(i=0; i< ModDataCnt ; i++ ){
  3834  0021BC  0E00               	movlw	0
  3835  0021BE  0100               	movlb	0	; () banked
  3836  0021C0  6FCD               	movwf	(PrintModbus@i+1)& (0+255),b
  3837  0021C2  0E00               	movlw	0
  3838  0021C4  6FCC               	movwf	PrintModbus@i& (0+255),b
  3839  0021C6  EFFD  F010         	goto	l5352
  3840  0021CA                     l5348:
  3841                           
  3842                           ; BSR set to: 0
  3843                           ;main.c: 99:         printf("   Byte %i : 0x%02x \r\n", i, ModbusData[i]);
  3844  0021CA  0EAB               	movlw	low STR_11
  3845  0021CC  6FC0               	movwf	printf@fmt& (0+255),b
  3846  0021CE  0EFF               	movlw	high STR_11
  3847  0021D0  6FC1               	movwf	(printf@fmt+1)& (0+255),b
  3848  0021D2  C0CC  F0C2         	movff	PrintModbus@i,?_printf+2
  3849  0021D6  C0CD  F0C3         	movff	PrintModbus@i+1,?_printf+3
  3850  0021DA  0E00               	movlw	low _ModbusData
  3851  0021DC  25CC               	addwf	PrintModbus@i& (0+255),w,b
  3852  0021DE  6ED9               	movwf	fsr2l,c
  3853  0021E0  0E01               	movlw	high _ModbusData
  3854  0021E2  21CD               	addwfc	(PrintModbus@i+1)& (0+255),w,b
  3855  0021E4  6EDA               	movwf	fsr2h,c
  3856  0021E6  50DF               	movf	indf2,w,c
  3857  0021E8  6E55               	movwf	??_PrintModbus^0,c
  3858  0021EA  5055               	movf	??_PrintModbus^0,w,c
  3859  0021EC  6FC4               	movwf	(?_printf+4)& (0+255),b
  3860  0021EE  6BC5               	clrf	(?_printf+5)& (0+255),b
  3861  0021F0  EC54  F014         	call	_printf	;wreg free
  3862  0021F4                     
  3863                           ;main.c: 100:     }
  3864  0021F4  0100               	movlb	0	; () banked
  3865  0021F6  4BCC               	infsnz	PrintModbus@i& (0+255),f,b
  3866  0021F8  2BCD               	incf	(PrintModbus@i+1)& (0+255),f,b
  3867  0021FA                     l5352:
  3868                           
  3869                           ; BSR set to: 0
  3870  0021FA  5194               	movf	_ModDataCnt& (0+255),w,b
  3871  0021FC  5DCC               	subwf	PrintModbus@i& (0+255),w,b
  3872  0021FE  51CD               	movf	(PrintModbus@i+1)& (0+255),w,b
  3873  002200  0A80               	xorlw	128
  3874  002202  6E55               	movwf	??_PrintModbus^0,c
  3875  002204  5195               	movf	(_ModDataCnt+1)& (0+255),w,b
  3876  002206  0A80               	xorlw	128
  3877  002208  5855               	subwfb	??_PrintModbus^0,w,c
  3878  00220A  A0D8               	btfss	status,0,c
  3879  00220C  EF0A  F011         	goto	u5451
  3880  002210  EF0C  F011         	goto	u5450
  3881  002214                     u5451:
  3882  002214  EFE5  F010         	goto	l5348
  3883  002218                     u5450:
  3884  002218                     
  3885                           ; BSR set to: 0
  3886                           ;main.c: 101:     printf("\r\n\n");
  3887  002218  0ED3               	movlw	low (STR_18+17)
  3888  00221A  6FC0               	movwf	printf@fmt& (0+255),b
  3889  00221C  0EFF               	movlw	high (STR_18+17)
  3890  00221E  6FC1               	movwf	(printf@fmt+1)& (0+255),b
  3891  002220  EC54  F014         	call	_printf	;wreg free
  3892  002224  0012               	return		;funcret
  3893  002226                     __end_of_PrintModbus:
  3894                           	opt callstack 0
  3895                           
  3896 ;; *************** function _PrintModRespon *****************
  3897 ;; Defined at:
  3898 ;;		line 73 in file "main.c"
  3899 ;; Parameters:    Size  Location     Type
  3900 ;;		None
  3901 ;; Auto vars:     Size  Location     Type
  3902 ;;  i               2   41[BANK0 ] int 
  3903 ;; Return value:  Size  Location     Type
  3904 ;;                  1    wreg      void 
  3905 ;; Registers used:
  3906 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3907 ;; Tracked objects:
  3908 ;;		On entry : 0/0
  3909 ;;		On exit  : 0/0
  3910 ;;		Unchanged: 0/0
  3911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3913 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3914 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3915 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3916 ;;Total ram usage:        3 bytes
  3917 ;; Hardware stack levels used:    1
  3918 ;; Hardware stack levels required when called:   13
  3919 ;; This function calls:
  3920 ;;		_printf
  3921 ;; This function is called by:
  3922 ;;		_main
  3923 ;; This function uses a non-reentrant model
  3924 ;;
  3925                           
  3926                           	psect	text26
  3927  002226                     __ptext26:
  3928                           	opt callstack 0
  3929  002226                     _PrintModRespon:
  3930                           	opt callstack 17
  3931  002226                     
  3932                           ;main.c: 76:     printf("Modbus Response:\r\n");
  3933  002226  0ED7               	movlw	low STR_10
  3934  002228  0100               	movlb	0	; () banked
  3935  00222A  6FC0               	movwf	printf@fmt& (0+255),b
  3936  00222C  0EFF               	movlw	high STR_10
  3937  00222E  6FC1               	movwf	(printf@fmt+1)& (0+255),b
  3938  002230  EC54  F014         	call	_printf	;wreg free
  3939  002234                     
  3940                           ;main.c: 77:     for(i=0; i< MBResCnt ; i++ ){
  3941  002234  0E00               	movlw	0
  3942  002236  0100               	movlb	0	; () banked
  3943  002238  6FCD               	movwf	(PrintModRespon@i+1)& (0+255),b
  3944  00223A  0E00               	movlw	0
  3945  00223C  6FCC               	movwf	PrintModRespon@i& (0+255),b
  3946  00223E  EF39  F011         	goto	l5326
  3947  002242                     l5322:
  3948                           
  3949                           ; BSR set to: 0
  3950                           ;main.c: 78:         printf("   Byte %i : 0x%02x \r\n", i, MBRespon[i]);
  3951  002242  0EAB               	movlw	low STR_11
  3952  002244  6FC0               	movwf	printf@fmt& (0+255),b
  3953  002246  0EFF               	movlw	high STR_11
  3954  002248  6FC1               	movwf	(printf@fmt+1)& (0+255),b
  3955  00224A  C0CC  F0C2         	movff	PrintModRespon@i,?_printf+2
  3956  00224E  C0CD  F0C3         	movff	PrintModRespon@i+1,?_printf+3
  3957  002252  0EA4               	movlw	low _MBRespon
  3958  002254  25CC               	addwf	PrintModRespon@i& (0+255),w,b
  3959  002256  6ED9               	movwf	fsr2l,c
  3960  002258  0E01               	movlw	high _MBRespon
  3961  00225A  21CD               	addwfc	(PrintModRespon@i+1)& (0+255),w,b
  3962  00225C  6EDA               	movwf	fsr2h,c
  3963  00225E  50DF               	movf	indf2,w,c
  3964  002260  6E55               	movwf	??_PrintModRespon^0,c
  3965  002262  5055               	movf	??_PrintModRespon^0,w,c
  3966  002264  6FC4               	movwf	(?_printf+4)& (0+255),b
  3967  002266  6BC5               	clrf	(?_printf+5)& (0+255),b
  3968  002268  EC54  F014         	call	_printf	;wreg free
  3969  00226C                     
  3970                           ;main.c: 79:     }
  3971  00226C  0100               	movlb	0	; () banked
  3972  00226E  4BCC               	infsnz	PrintModRespon@i& (0+255),f,b
  3973  002270  2BCD               	incf	(PrintModRespon@i+1)& (0+255),f,b
  3974  002272                     l5326:
  3975                           
  3976                           ; BSR set to: 0
  3977  002272  5190               	movf	_MBResCnt& (0+255),w,b
  3978  002274  5DCC               	subwf	PrintModRespon@i& (0+255),w,b
  3979  002276  51CD               	movf	(PrintModRespon@i+1)& (0+255),w,b
  3980  002278  0A80               	xorlw	128
  3981  00227A  6E55               	movwf	??_PrintModRespon^0,c
  3982  00227C  5191               	movf	(_MBResCnt+1)& (0+255),w,b
  3983  00227E  0A80               	xorlw	128
  3984  002280  5855               	subwfb	??_PrintModRespon^0,w,c
  3985  002282  A0D8               	btfss	status,0,c
  3986  002284  EF46  F011         	goto	u5431
  3987  002288  EF48  F011         	goto	u5430
  3988  00228C                     u5431:
  3989  00228C  EF21  F011         	goto	l5322
  3990  002290                     u5430:
  3991  002290                     
  3992                           ; BSR set to: 0
  3993                           ;main.c: 80:     printf("\r\n\n");
  3994  002290  0ED3               	movlw	low (STR_18+17)
  3995  002292  6FC0               	movwf	printf@fmt& (0+255),b
  3996  002294  0EFF               	movlw	high (STR_18+17)
  3997  002296  6FC1               	movwf	(printf@fmt+1)& (0+255),b
  3998  002298  EC54  F014         	call	_printf	;wreg free
  3999  00229C  0012               	return		;funcret
  4000  00229E                     __end_of_PrintModRespon:
  4001                           	opt callstack 0
  4002                           
  4003 ;; *************** function _ModbusRx *****************
  4004 ;; Defined at:
  4005 ;;		line 106 in file "Modbus.c"
  4006 ;; Parameters:    Size  Location     Type
  4007 ;;		None
  4008 ;; Auto vars:     Size  Location     Type
  4009 ;;		None
  4010 ;; Return value:  Size  Location     Type
  4011 ;;                  1    wreg      _Bool 
  4012 ;; Registers used:
  4013 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4014 ;; Tracked objects:
  4015 ;;		On entry : 0/0
  4016 ;;		On exit  : 0/0
  4017 ;;		Unchanged: 0/0
  4018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4021 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4022 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4023 ;;Total ram usage:        1 bytes
  4024 ;; Hardware stack levels used:    1
  4025 ;; Hardware stack levels required when called:   14
  4026 ;; This function calls:
  4027 ;;		_AddRxBuffToModBus
  4028 ;;		_ClearRxBuff
  4029 ;;		_EUSART1_Read
  4030 ;;		_EUSART1_is_rx_ready
  4031 ;;		_RXMode
  4032 ;;		_checkCRC
  4033 ;;		_printf
  4034 ;; This function is called by:
  4035 ;;		_main
  4036 ;; This function uses a non-reentrant model
  4037 ;;
  4038                           
  4039                           	psect	text27
  4040  001750                     __ptext27:
  4041                           	opt callstack 0
  4042  001750                     _ModbusRx:
  4043                           	opt callstack 16
  4044  001750                     
  4045                           ;Modbus.c: 107:     RXMode();
  4046  001750  EC18  F015         	call	_RXMode	;wreg free
  4047  001754                     
  4048                           ;Modbus.c: 108:     if(EUSART1_is_rx_ready()){
  4049  001754  ECBE  F014         	call	_EUSART1_is_rx_ready	;wreg free
  4050  001758  0900               	iorlw	0
  4051  00175A  B4D8               	btfsc	status,2,c
  4052  00175C  EFB2  F00B         	goto	u5521
  4053  001760  EFB4  F00B         	goto	u5520
  4054  001764                     u5521:
  4055  001764  EF3B  F00C         	goto	l5462
  4056  001768                     u5520:
  4057  001768                     l5424:
  4058                           
  4059                           ;Modbus.c: 110:             if(EUSART1_is_rx_ready()){
  4060  001768  ECBE  F014         	call	_EUSART1_is_rx_ready	;wreg free
  4061  00176C  0900               	iorlw	0
  4062  00176E  B4D8               	btfsc	status,2,c
  4063  001770  EFBC  F00B         	goto	u5531
  4064  001774  EFBE  F00B         	goto	u5530
  4065  001778                     u5531:
  4066  001778  EFDB  F00B         	goto	l5436
  4067  00177C                     u5530:
  4068  00177C  EFCE  F00B         	goto	l5432
  4069  001780                     l5428:
  4070                           
  4071                           ;Modbus.c: 114:                     rxData[ByteNum] = EUSART1_Read();
  4072  001780  EC45  F012         	call	_EUSART1_Read	;wreg free
  4073  001784  6E55               	movwf	??_ModbusRx^0,c
  4074  001786  0E00               	movlw	low _rxData
  4075  001788  0100               	movlb	0	; () banked
  4076  00178A  258E               	addwf	_ByteNum& (0+255),w,b
  4077  00178C  6ED9               	movwf	fsr2l,c
  4078  00178E  0E03               	movlw	high _rxData
  4079  001790  218F               	addwfc	(_ByteNum+1)& (0+255),w,b
  4080  001792  6EDA               	movwf	fsr2h,c
  4081  001794  C055  FFDF         	movff	??_ModbusRx,indf2
  4082  001798                     
  4083                           ; BSR set to: 0
  4084                           ;Modbus.c: 115:                     ByteNum++;
  4085  001798  4B8E               	infsnz	_ByteNum& (0+255),f,b
  4086  00179A  2B8F               	incf	(_ByteNum+1)& (0+255),f,b
  4087  00179C                     l5432:
  4088                           
  4089                           ;Modbus.c: 112:                 while(EUSART1_is_rx_ready()){
  4090  00179C  ECBE  F014         	call	_EUSART1_is_rx_ready	;wreg free
  4091  0017A0  0900               	iorlw	0
  4092  0017A2  A4D8               	btfss	status,2,c
  4093  0017A4  EFD6  F00B         	goto	u5541
  4094  0017A8  EFD8  F00B         	goto	u5540
  4095  0017AC                     u5541:
  4096  0017AC  EFC0  F00B         	goto	l5428
  4097  0017B0                     u5540:
  4098  0017B0                     
  4099                           ;Modbus.c: 118:                 RXStat = 1;
  4100  0017B0  0E01               	movlw	1
  4101  0017B2  0100               	movlb	0	; () banked
  4102  0017B4  6F97               	movwf	_RXStat& (0+255),b
  4103  0017B6                     l5436:
  4104                           
  4105                           ;Modbus.c: 121:             if(RXStat ==1){
  4106  0017B6  0100               	movlb	0	; () banked
  4107  0017B8  0597               	decf	_RXStat& (0+255),w,b
  4108  0017BA  A4D8               	btfss	status,2,c
  4109  0017BC  EFE2  F00B         	goto	u5551
  4110  0017C0  EFE4  F00B         	goto	u5550
  4111  0017C4                     u5551:
  4112  0017C4  EF00  F00C         	goto	l5448
  4113  0017C8                     u5550:
  4114  0017C8                     
  4115                           ; BSR set to: 0
  4116                           ;Modbus.c: 124:                 AddRxBuffToModBus();
  4117  0017C8  ECF9  F00E         	call	_AddRxBuffToModBus	;wreg free
  4118  0017CC                     
  4119                           ;Modbus.c: 125:                 ClearRxBuff();
  4120  0017CC  ECE8  F012         	call	_ClearRxBuff	;wreg free
  4121  0017D0                     
  4122                           ;Modbus.c: 126:                 RXStat = 0;
  4123  0017D0  0E00               	movlw	0
  4124  0017D2  0100               	movlb	0	; () banked
  4125  0017D4  6F97               	movwf	_RXStat& (0+255),b
  4126  0017D6                     
  4127                           ; BSR set to: 0
  4128                           ;Modbus.c: 127:                 ByteNum = 0;
  4129  0017D6  0E00               	movlw	0
  4130  0017D8  6F8F               	movwf	(_ByteNum+1)& (0+255),b
  4131  0017DA  0E00               	movlw	0
  4132  0017DC  6F8E               	movwf	_ByteNum& (0+255),b
  4133  0017DE                     
  4134                           ; BSR set to: 0
  4135  0017DE  B883               	btfsc	131,4,c	;volatile
  4136  0017E0  EFF4  F00B         	goto	u5561
  4137  0017E4  EFF7  F00B         	goto	u5560
  4138  0017E8                     u5561:
  4139  0017E8  0E01               	movlw	1
  4140  0017EA  EFF8  F00B         	goto	u5566
  4141  0017EE                     u5560:
  4142  0017EE  0E00               	movlw	0
  4143  0017F0                     u5566:
  4144  0017F0  0AFF               	xorlw	255
  4145  0017F2  6E55               	movwf	??_ModbusRx^0,c
  4146  0017F4  3A55               	swapf	??_ModbusRx^0,f,c
  4147  0017F6  5083               	movf	131,w,c	;volatile
  4148  0017F8  1855               	xorwf	??_ModbusRx^0,w,c
  4149  0017FA  0BEF               	andlw	-17
  4150  0017FC  1855               	xorwf	??_ModbusRx^0,w,c
  4151  0017FE  6E83               	movwf	131,c	;volatile
  4152  001800                     l5448:
  4153                           
  4154                           ; BSR set to: 0
  4155                           ;Modbus.c: 130:         }while(ModDataCnt != ExpectedBytes);
  4156  001800  51FC               	movf	_ExpectedBytes& (0+255),w,b
  4157  001802  1994               	xorwf	_ModDataCnt& (0+255),w,b
  4158  001804  E107               	bnz	u5571
  4159  001806  51FD               	movf	(_ExpectedBytes+1)& (0+255),w,b
  4160  001808  1995               	xorwf	(_ModDataCnt+1)& (0+255),w,b
  4161  00180A  A4D8               	btfss	status,2,c
  4162  00180C  EF0A  F00C         	goto	u5571
  4163  001810  EF0C  F00C         	goto	u5570
  4164  001814                     u5571:
  4165  001814  EFB4  F00B         	goto	l5424
  4166  001818                     u5570:
  4167  001818                     
  4168                           ; BSR set to: 0
  4169  001818  BA83               	btfsc	131,5,c	;volatile
  4170  00181A  EF11  F00C         	goto	u5581
  4171  00181E  EF14  F00C         	goto	u5580
  4172  001822                     u5581:
  4173  001822  0E01               	movlw	1
  4174  001824  EF15  F00C         	goto	u5586
  4175  001828                     u5580:
  4176  001828  0E00               	movlw	0
  4177  00182A                     u5586:
  4178  00182A  0AFF               	xorlw	255
  4179  00182C  6E55               	movwf	??_ModbusRx^0,c
  4180  00182E  3A55               	swapf	??_ModbusRx^0,f,c
  4181  001830  4655               	rlncf	??_ModbusRx^0,f,c
  4182  001832  5083               	movf	131,w,c	;volatile
  4183  001834  1855               	xorwf	??_ModbusRx^0,w,c
  4184  001836  0BDF               	andlw	-33
  4185  001838  1855               	xorwf	??_ModbusRx^0,w,c
  4186  00183A  6E83               	movwf	131,c	;volatile
  4187  00183C                     
  4188                           ; BSR set to: 0
  4189                           ;Modbus.c: 135:         if(checkCRC() == 1)
  4190  00183C  EC02  F00B         	call	_checkCRC	;wreg free
  4191  001840  06E8               	decf	wreg,f,c
  4192  001842  A4D8               	btfss	status,2,c
  4193  001844  EF26  F00C         	goto	u5591
  4194  001848  EF28  F00C         	goto	u5590
  4195  00184C                     u5591:
  4196  00184C  EF31  F00C         	goto	l5456
  4197  001850                     u5590:
  4198  001850                     
  4199                           ;Modbus.c: 136:         {;Modbus.c: 137:             printf("CRC Checked Out. \r\n\n");
  4200  001850  0EC2               	movlw	low STR_18
  4201  001852  0100               	movlb	0	; () banked
  4202  001854  6FC0               	movwf	printf@fmt& (0+255),b
  4203  001856  0EFF               	movlw	high STR_18
  4204  001858  6FC1               	movwf	(printf@fmt+1)& (0+255),b
  4205  00185A  EC54  F014         	call	_printf	;wreg free
  4206                           
  4207                           ;Modbus.c: 138:         }else{
  4208  00185E  EF38  F00C         	goto	l5458
  4209  001862                     l5456:
  4210                           
  4211                           ;Modbus.c: 139:             printf("CRC did NOT check out. \r\n\n");
  4212  001862  0E77               	movlw	low STR_19
  4213  001864  0100               	movlb	0	; () banked
  4214  001866  6FC0               	movwf	printf@fmt& (0+255),b
  4215  001868  0EFF               	movlw	high STR_19
  4216  00186A  6FC1               	movwf	(printf@fmt+1)& (0+255),b
  4217  00186C  EC54  F014         	call	_printf	;wreg free
  4218  001870                     l5458:
  4219                           
  4220                           ;Modbus.c: 145:         return 1;
  4221  001870  0E01               	movlw	1
  4222  001872  EF3C  F00C         	goto	l719
  4223  001876                     l5462:
  4224                           
  4225                           ;Modbus.c: 147:     return 0;
  4226  001876  0E00               	movlw	0
  4227  001878                     l719:
  4228  001878  0012               	return		;funcret
  4229  00187A                     __end_of_ModbusRx:
  4230                           	opt callstack 0
  4231                           
  4232 ;; *************** function _checkCRC *****************
  4233 ;; Defined at:
  4234 ;;		line 74 in file "Modbus.c"
  4235 ;; Parameters:    Size  Location     Type
  4236 ;;		None
  4237 ;; Auto vars:     Size  Location     Type
  4238 ;;  i               2   54[BANK0 ] int 
  4239 ;;  crc             2   52[BANK0 ] unsigned int 
  4240 ;;  j               2   50[BANK0 ] int 
  4241 ;;  crcLow          2   48[BANK0 ] unsigned int 
  4242 ;;  crcHigh         2   46[BANK0 ] unsigned int 
  4243 ;; Return value:  Size  Location     Type
  4244 ;;                  1    wreg      _Bool 
  4245 ;; Registers used:
  4246 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4247 ;; Tracked objects:
  4248 ;;		On entry : 0/0
  4249 ;;		On exit  : 0/0
  4250 ;;		Unchanged: 0/0
  4251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4253 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4254 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4255 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4256 ;;Total ram usage:       15 bytes
  4257 ;; Hardware stack levels used:    1
  4258 ;; Hardware stack levels required when called:   13
  4259 ;; This function calls:
  4260 ;;		_printf
  4261 ;; This function is called by:
  4262 ;;		_ModbusRx
  4263 ;; This function uses a non-reentrant model
  4264 ;;
  4265                           
  4266                           	psect	text28
  4267  001604                     __ptext28:
  4268                           	opt callstack 0
  4269  001604                     _checkCRC:
  4270                           	opt callstack 16
  4271  001604                     
  4272                           ;Modbus.c: 75:   unsigned int crc = 0xFFFF;
  4273  001604  0100               	movlb	0	; () banked
  4274  001606  69D7               	setf	checkCRC@crc& (0+255),b
  4275  001608  69D8               	setf	(checkCRC@crc+1)& (0+255),b
  4276  00160A                     
  4277                           ; BSR set to: 0
  4278                           ;Modbus.c: 77:   unsigned int crcLow = 0;
  4279  00160A  0E00               	movlw	0
  4280  00160C  6FD4               	movwf	(checkCRC@crcLow+1)& (0+255),b
  4281  00160E  0E00               	movlw	0
  4282  001610  6FD3               	movwf	checkCRC@crcLow& (0+255),b
  4283                           
  4284                           ;Modbus.c: 78:   int i,j = 0;
  4285  001612  0E00               	movlw	0
  4286  001614  6FD6               	movwf	(checkCRC@j+1)& (0+255),b
  4287  001616  0E00               	movlw	0
  4288  001618  6FD5               	movwf	checkCRC@j& (0+255),b
  4289                           
  4290                           ;Modbus.c: 80:     for(i=0;i<ModDataCnt-2;i++){
  4291  00161A  0E00               	movlw	0
  4292  00161C  6FDA               	movwf	(checkCRC@i+1)& (0+255),b
  4293  00161E  0E00               	movlw	0
  4294  001620  6FD9               	movwf	checkCRC@i& (0+255),b
  4295  001622  EF42  F00B         	goto	l5268
  4296  001626                     l5250:
  4297                           
  4298                           ; BSR set to: 0
  4299                           ;Modbus.c: 81:       crc ^= ModbusData[i];
  4300  001626  0E00               	movlw	low _ModbusData
  4301  001628  25D9               	addwf	checkCRC@i& (0+255),w,b
  4302  00162A  6ED9               	movwf	fsr2l,c
  4303  00162C  0E01               	movlw	high _ModbusData
  4304  00162E  21DA               	addwfc	(checkCRC@i+1)& (0+255),w,b
  4305  001630  6EDA               	movwf	fsr2h,c
  4306  001632  50DF               	movf	indf2,w,c
  4307  001634  6FCC               	movwf	??_checkCRC& (0+255),b
  4308  001636  51CC               	movf	??_checkCRC& (0+255),w,b
  4309  001638  1BD7               	xorwf	checkCRC@crc& (0+255),f,b
  4310  00163A                     
  4311                           ; BSR set to: 0
  4312                           ;Modbus.c: 82:       for(j=8; j!=0; j--){
  4313  00163A  0E00               	movlw	0
  4314  00163C  6FD6               	movwf	(checkCRC@j+1)& (0+255),b
  4315  00163E  0E08               	movlw	8
  4316  001640  6FD5               	movwf	checkCRC@j& (0+255),b
  4317  001642                     l695:
  4318                           
  4319                           ; BSR set to: 0
  4320                           ;Modbus.c: 83:         if((crc & 0x0001) != 0){
  4321  001642  A1D7               	btfss	checkCRC@crc& (0+255),0,b
  4322  001644  EF26  F00B         	goto	u5351
  4323  001648  EF28  F00B         	goto	u5350
  4324  00164C                     u5351:
  4325  00164C  EF31  F00B         	goto	l5262
  4326  001650                     u5350:
  4327  001650                     
  4328                           ; BSR set to: 0
  4329                           ;Modbus.c: 84:           crc >>= 1;
  4330  001650  90D8               	bcf	status,0,c
  4331  001652  33D8               	rrcf	(checkCRC@crc+1)& (0+255),f,b
  4332  001654  33D7               	rrcf	checkCRC@crc& (0+255),f,b
  4333  001656                     
  4334                           ; BSR set to: 0
  4335                           ;Modbus.c: 85:           crc ^= 0xA001;
  4336  001656  0E01               	movlw	1
  4337  001658  1BD7               	xorwf	checkCRC@crc& (0+255),f,b
  4338  00165A  0EA0               	movlw	160
  4339  00165C  1BD8               	xorwf	(checkCRC@crc+1)& (0+255),f,b
  4340                           
  4341                           ;Modbus.c: 86:         }
  4342  00165E  EF34  F00B         	goto	l698
  4343  001662                     l5262:
  4344                           
  4345                           ; BSR set to: 0
  4346                           ;Modbus.c: 88:           crc >>= 1;
  4347  001662  90D8               	bcf	status,0,c
  4348  001664  33D8               	rrcf	(checkCRC@crc+1)& (0+255),f,b
  4349  001666  33D7               	rrcf	checkCRC@crc& (0+255),f,b
  4350  001668                     l698:
  4351                           
  4352                           ; BSR set to: 0
  4353                           ;Modbus.c: 90:       }
  4354  001668  07D5               	decf	checkCRC@j& (0+255),f,b
  4355  00166A  A0D8               	btfss	status,0,c
  4356  00166C  07D6               	decf	(checkCRC@j+1)& (0+255),f,b
  4357  00166E                     
  4358                           ; BSR set to: 0
  4359  00166E  51D5               	movf	checkCRC@j& (0+255),w,b
  4360  001670  11D6               	iorwf	(checkCRC@j+1)& (0+255),w,b
  4361  001672  A4D8               	btfss	status,2,c
  4362  001674  EF3E  F00B         	goto	u5361
  4363  001678  EF40  F00B         	goto	u5360
  4364  00167C                     u5361:
  4365  00167C  EF21  F00B         	goto	l695
  4366  001680                     u5360:
  4367  001680                     
  4368                           ; BSR set to: 0
  4369                           ;Modbus.c: 91:     }
  4370  001680  4BD9               	infsnz	checkCRC@i& (0+255),f,b
  4371  001682  2BDA               	incf	(checkCRC@i+1)& (0+255),f,b
  4372  001684                     l5268:
  4373                           
  4374                           ; BSR set to: 0
  4375  001684  0EFE               	movlw	254
  4376  001686  6FCC               	movwf	??_checkCRC& (0+255),b
  4377  001688  0EFF               	movlw	255
  4378  00168A  6FCD               	movwf	(??_checkCRC+1)& (0+255),b
  4379  00168C  C094  F0CE         	movff	_ModDataCnt,??_checkCRC+2
  4380  001690  C095  F0CF         	movff	_ModDataCnt+1,??_checkCRC+3
  4381  001694  51CC               	movf	??_checkCRC& (0+255),w,b
  4382  001696  27CE               	addwf	(??_checkCRC+2)& (0+255),f,b
  4383  001698  51CD               	movf	(??_checkCRC+1)& (0+255),w,b
  4384  00169A  23CF               	addwfc	(??_checkCRC+3)& (0+255),f,b
  4385  00169C  51CE               	movf	(??_checkCRC+2)& (0+255),w,b
  4386  00169E  5DD9               	subwf	checkCRC@i& (0+255),w,b
  4387  0016A0  51DA               	movf	(checkCRC@i+1)& (0+255),w,b
  4388  0016A2  0A80               	xorlw	128
  4389  0016A4  6FD0               	movwf	(??_checkCRC+4)& (0+255),b
  4390  0016A6  51CF               	movf	(??_checkCRC+3)& (0+255),w,b
  4391  0016A8  0A80               	xorlw	128
  4392  0016AA  59D0               	subwfb	(??_checkCRC+4)& (0+255),w,b
  4393  0016AC  A0D8               	btfss	status,0,c
  4394  0016AE  EF5B  F00B         	goto	u5371
  4395  0016B2  EF5D  F00B         	goto	u5370
  4396  0016B6                     u5371:
  4397  0016B6  EF13  F00B         	goto	l5250
  4398  0016BA                     u5370:
  4399  0016BA                     
  4400                           ; BSR set to: 0
  4401                           ;Modbus.c: 93:   crcHigh = (crc & 0x00FF);
  4402  0016BA  51D7               	movf	checkCRC@crc& (0+255),w,b
  4403  0016BC  6FD1               	movwf	checkCRC@crcHigh& (0+255),b
  4404  0016BE  6BD2               	clrf	(checkCRC@crcHigh+1)& (0+255),b
  4405                           
  4406                           ;Modbus.c: 94:   crcLow = (crc & 0xFF00) >>8;
  4407  0016C0  C0D7  F0CC         	movff	checkCRC@crc,??_checkCRC
  4408  0016C4  C0D8  F0CD         	movff	checkCRC@crc+1,??_checkCRC+1
  4409  0016C8  C0CD  F0CC         	movff	??_checkCRC+1,??_checkCRC
  4410  0016CC  6BCD               	clrf	(??_checkCRC+1)& (0+255),b
  4411  0016CE  51CC               	movf	??_checkCRC& (0+255),w,b
  4412  0016D0  6FD3               	movwf	checkCRC@crcLow& (0+255),b
  4413  0016D2  6BD4               	clrf	(checkCRC@crcLow+1)& (0+255),b
  4414  0016D4                     
  4415                           ; BSR set to: 0
  4416                           ;Modbus.c: 95:   printf("crcHigh: 0x%02x  crcLow: 0x%02x  \r\n", crcHigh, crcLow);
  4417  0016D4  0ED7               	movlw	low STR_17
  4418  0016D6  6FC0               	movwf	printf@fmt& (0+255),b
  4419  0016D8  0EFE               	movlw	high STR_17
  4420  0016DA  6FC1               	movwf	(printf@fmt+1)& (0+255),b
  4421  0016DC  C0D1  F0C2         	movff	checkCRC@crcHigh,?_printf+2
  4422  0016E0  C0D2  F0C3         	movff	checkCRC@crcHigh+1,?_printf+3
  4423  0016E4  C0D3  F0C4         	movff	checkCRC@crcLow,?_printf+4
  4424  0016E8  C0D4  F0C5         	movff	checkCRC@crcLow+1,?_printf+5
  4425  0016EC  EC54  F014         	call	_printf	;wreg free
  4426  0016F0                     
  4427                           ;Modbus.c: 96:   if((crcHigh == ModbusData[i])&&(crcLow == ModbusData[i+1]))
  4428  0016F0  0E00               	movlw	low _ModbusData
  4429  0016F2  0100               	movlb	0	; () banked
  4430  0016F4  25D9               	addwf	checkCRC@i& (0+255),w,b
  4431  0016F6  6ED9               	movwf	fsr2l,c
  4432  0016F8  0E01               	movlw	high _ModbusData
  4433  0016FA  21DA               	addwfc	(checkCRC@i+1)& (0+255),w,b
  4434  0016FC  6EDA               	movwf	fsr2h,c
  4435  0016FE  50DF               	movf	indf2,w,c
  4436  001700  6FCC               	movwf	??_checkCRC& (0+255),b
  4437  001702  6BCD               	clrf	(??_checkCRC+1)& (0+255),b
  4438  001704  51D1               	movf	checkCRC@crcHigh& (0+255),w,b
  4439  001706  19CC               	xorwf	??_checkCRC& (0+255),w,b
  4440  001708  E107               	bnz	u5381
  4441  00170A  51D2               	movf	(checkCRC@crcHigh+1)& (0+255),w,b
  4442  00170C  19CD               	xorwf	(??_checkCRC+1)& (0+255),w,b
  4443  00170E  A4D8               	btfss	status,2,c
  4444  001710  EF8C  F00B         	goto	u5381
  4445  001714  EF8E  F00B         	goto	u5380
  4446  001718                     u5381:
  4447  001718  EFA6  F00B         	goto	l5284
  4448  00171C                     u5380:
  4449  00171C                     
  4450                           ; BSR set to: 0
  4451  00171C  0E01               	movlw	low (_ModbusData+1)
  4452  00171E  25D9               	addwf	checkCRC@i& (0+255),w,b
  4453  001720  6ED9               	movwf	fsr2l,c
  4454  001722  0E01               	movlw	high (_ModbusData+1)
  4455  001724  21DA               	addwfc	(checkCRC@i+1)& (0+255),w,b
  4456  001726  6EDA               	movwf	fsr2h,c
  4457  001728  50DF               	movf	indf2,w,c
  4458  00172A  6FCC               	movwf	??_checkCRC& (0+255),b
  4459  00172C  6BCD               	clrf	(??_checkCRC+1)& (0+255),b
  4460  00172E  51D3               	movf	checkCRC@crcLow& (0+255),w,b
  4461  001730  19CC               	xorwf	??_checkCRC& (0+255),w,b
  4462  001732  E107               	bnz	u5391
  4463  001734  51D4               	movf	(checkCRC@crcLow+1)& (0+255),w,b
  4464  001736  19CD               	xorwf	(??_checkCRC+1)& (0+255),w,b
  4465  001738  A4D8               	btfss	status,2,c
  4466  00173A  EFA1  F00B         	goto	u5391
  4467  00173E  EFA3  F00B         	goto	u5390
  4468  001742                     u5391:
  4469  001742  EFA6  F00B         	goto	l5284
  4470  001746                     u5390:
  4471  001746                     
  4472                           ; BSR set to: 0
  4473                           ;Modbus.c: 97:   {;Modbus.c: 98:     return 1;
  4474  001746  0E01               	movlw	1
  4475  001748  EFA7  F00B         	goto	l701
  4476  00174C                     l5284:
  4477                           
  4478                           ; BSR set to: 0
  4479                           ;Modbus.c: 101:     return 0;
  4480  00174C  0E00               	movlw	0
  4481  00174E                     l701:
  4482                           
  4483                           ; BSR set to: 0
  4484  00174E  0012               	return		;funcret
  4485  001750                     __end_of_checkCRC:
  4486                           	opt callstack 0
  4487                           
  4488 ;; *************** function _RXMode *****************
  4489 ;; Defined at:
  4490 ;;		line 22 in file "Modbus.c"
  4491 ;; Parameters:    Size  Location     Type
  4492 ;;		None
  4493 ;; Auto vars:     Size  Location     Type
  4494 ;;		None
  4495 ;; Return value:  Size  Location     Type
  4496 ;;                  1    wreg      void 
  4497 ;; Registers used:
  4498 ;;		None
  4499 ;; Tracked objects:
  4500 ;;		On entry : 0/0
  4501 ;;		On exit  : 0/0
  4502 ;;		Unchanged: 0/0
  4503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4508 ;;Total ram usage:        0 bytes
  4509 ;; Hardware stack levels used:    1
  4510 ;; Hardware stack levels required when called:    4
  4511 ;; This function calls:
  4512 ;;		Nothing
  4513 ;; This function is called by:
  4514 ;;		_main
  4515 ;;		_ModbusRx
  4516 ;; This function uses a non-reentrant model
  4517 ;;
  4518                           
  4519                           	psect	text29
  4520  002A30                     __ptext29:
  4521                           	opt callstack 0
  4522  002A30                     _RXMode:
  4523                           	opt callstack 26
  4524  002A30  9086               	bcf	134,0,c	;volatile
  4525  002A32  9683               	bcf	131,3,c	;volatile
  4526  002A34  0012               	return		;funcret
  4527  002A36                     __end_of_RXMode:
  4528                           	opt callstack 0
  4529                           
  4530 ;; *************** function _EUSART1_is_rx_ready *****************
  4531 ;; Defined at:
  4532 ;;		line 137 in file "mcc_generated_files/eusart1.c"
  4533 ;; Parameters:    Size  Location     Type
  4534 ;;		None
  4535 ;; Auto vars:     Size  Location     Type
  4536 ;;		None
  4537 ;; Return value:  Size  Location     Type
  4538 ;;                  1    wreg      _Bool 
  4539 ;; Registers used:
  4540 ;;		wreg, status,2
  4541 ;; Tracked objects:
  4542 ;;		On entry : 0/0
  4543 ;;		On exit  : 0/0
  4544 ;;		Unchanged: 0/0
  4545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4550 ;;Total ram usage:        0 bytes
  4551 ;; Hardware stack levels used:    1
  4552 ;; Hardware stack levels required when called:    4
  4553 ;; This function calls:
  4554 ;;		Nothing
  4555 ;; This function is called by:
  4556 ;;		_ModbusRx
  4557 ;; This function uses a non-reentrant model
  4558 ;;
  4559                           
  4560                           	psect	text30
  4561  00297C                     __ptext30:
  4562                           	opt callstack 0
  4563  00297C                     _EUSART1_is_rx_ready:
  4564                           	opt callstack 25
  4565  00297C                     
  4566                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
  4567  00297C  0100               	movlb	0	; () banked
  4568  00297E  519A               	movf	_eusart1RxCount& (0+255),w,b	;volatile
  4569  002980  A4D8               	btfss	status,2,c
  4570  002982  EFC5  F014         	goto	u5231
  4571  002986  EFC8  F014         	goto	u5230
  4572  00298A                     u5231:
  4573  00298A  0E01               	movlw	1
  4574  00298C  EFC9  F014         	goto	u5240
  4575  002990                     u5230:
  4576  002990  0E00               	movlw	0
  4577  002992                     u5240:
  4578  002992                     
  4579                           ; BSR set to: 0
  4580  002992  0012               	return		;funcret
  4581  002994                     __end_of_EUSART1_is_rx_ready:
  4582                           	opt callstack 0
  4583                           
  4584 ;; *************** function _EUSART1_Read *****************
  4585 ;; Defined at:
  4586 ;;		line 151 in file "mcc_generated_files/eusart1.c"
  4587 ;; Parameters:    Size  Location     Type
  4588 ;;		None
  4589 ;; Auto vars:     Size  Location     Type
  4590 ;;  readValue       1    4[COMRAM] unsigned char 
  4591 ;; Return value:  Size  Location     Type
  4592 ;;                  1    wreg      unsigned char 
  4593 ;; Registers used:
  4594 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4595 ;; Tracked objects:
  4596 ;;		On entry : 0/0
  4597 ;;		On exit  : 0/0
  4598 ;;		Unchanged: 0/0
  4599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4601 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4603 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4604 ;;Total ram usage:        1 bytes
  4605 ;; Hardware stack levels used:    1
  4606 ;; Hardware stack levels required when called:    4
  4607 ;; This function calls:
  4608 ;;		Nothing
  4609 ;; This function is called by:
  4610 ;;		_ModbusRx
  4611 ;; This function uses a non-reentrant model
  4612 ;;
  4613                           
  4614                           	psect	text31
  4615  00248A                     __ptext31:
  4616                           	opt callstack 0
  4617  00248A                     _EUSART1_Read:
  4618                           	opt callstack 25
  4619  00248A                     l5180:
  4620                           
  4621                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
  4622  00248A  0100               	movlb	0	; () banked
  4623  00248C  519A               	movf	_eusart1RxCount& (0+255),w,b	;volatile
  4624  00248E  B4D8               	btfsc	status,2,c
  4625  002490  EF4C  F012         	goto	u5261
  4626  002494  EF4E  F012         	goto	u5260
  4627  002498                     u5261:
  4628  002498  EF45  F012         	goto	l5180
  4629  00249C                     u5260:
  4630  00249C                     
  4631                           ; BSR set to: 0
  4632                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
  4633  00249C  0E00               	movlw	low _eusart1RxStatusBuffer
  4634  00249E  259B               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
  4635  0024A0  6ED9               	movwf	fsr2l,c
  4636  0024A2  6ADA               	clrf	fsr2h,c
  4637  0024A4  0E02               	movlw	high _eusart1RxStatusBuffer
  4638  0024A6  22DA               	addwfc	fsr2h,f,c
  4639  0024A8  50DF               	movf	indf2,w,c
  4640  0024AA  6F99               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  4641                           
  4642                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
  4643  0024AC  0E64               	movlw	low _eusart1RxBuffer
  4644  0024AE  259B               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
  4645  0024B0  6ED9               	movwf	fsr2l,c
  4646  0024B2  6ADA               	clrf	fsr2h,c
  4647  0024B4  0E02               	movlw	high _eusart1RxBuffer
  4648  0024B6  22DA               	addwfc	fsr2h,f,c
  4649  0024B8  50DF               	movf	indf2,w,c
  4650  0024BA  6E05               	movwf	EUSART1_Read@readValue^0,c
  4651  0024BC                     
  4652                           ; BSR set to: 0
  4653  0024BC  2B9B               	incf	_eusart1RxTail& (0+255),f,b	;volatile
  4654  0024BE                     
  4655                           ; BSR set to: 0
  4656                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
  4657  0024BE  0E63               	movlw	99
  4658  0024C0  659B               	cpfsgt	_eusart1RxTail& (0+255),b	;volatile
  4659  0024C2  EF65  F012         	goto	u5271
  4660  0024C6  EF67  F012         	goto	u5270
  4661  0024CA                     u5271:
  4662  0024CA  EF69  F012         	goto	l5190
  4663  0024CE                     u5270:
  4664  0024CE                     
  4665                           ; BSR set to: 0
  4666                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
  4667  0024CE  0E00               	movlw	0
  4668  0024D0  6F9B               	movwf	_eusart1RxTail& (0+255),b	;volatile
  4669  0024D2                     l5190:
  4670                           
  4671                           ; BSR set to: 0
  4672                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
  4673  0024D2  010E               	movlb	14	; () banked
  4674  0024D4  9BC5               	bcf	197,5,b	;volatile
  4675  0024D6                     
  4676                           ; BSR set to: 14
  4677                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
  4678  0024D6  0100               	movlb	0	; () banked
  4679  0024D8  079A               	decf	_eusart1RxCount& (0+255),f,b	;volatile
  4680  0024DA                     
  4681                           ; BSR set to: 0
  4682                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
  4683  0024DA  010E               	movlb	14	; () banked
  4684  0024DC  8BC5               	bsf	197,5,b	;volatile
  4685  0024DE                     
  4686                           ; BSR set to: 14
  4687                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
  4688  0024DE  5005               	movf	EUSART1_Read@readValue^0,w,c
  4689  0024E0                     
  4690                           ; BSR set to: 14
  4691  0024E0  0012               	return		;funcret
  4692  0024E2                     __end_of_EUSART1_Read:
  4693                           	opt callstack 0
  4694                           
  4695 ;; *************** function _ClearRxBuff *****************
  4696 ;; Defined at:
  4697 ;;		line 38 in file "Modbus.c"
  4698 ;; Parameters:    Size  Location     Type
  4699 ;;		None
  4700 ;; Auto vars:     Size  Location     Type
  4701 ;;  i               2    5[COMRAM] int 
  4702 ;; Return value:  Size  Location     Type
  4703 ;;                  1    wreg      void 
  4704 ;; Registers used:
  4705 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4706 ;; Tracked objects:
  4707 ;;		On entry : 0/0
  4708 ;;		On exit  : 0/0
  4709 ;;		Unchanged: 0/0
  4710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4712 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4713 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4714 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4715 ;;Total ram usage:        3 bytes
  4716 ;; Hardware stack levels used:    1
  4717 ;; Hardware stack levels required when called:    4
  4718 ;; This function calls:
  4719 ;;		Nothing
  4720 ;; This function is called by:
  4721 ;;		_main
  4722 ;;		_ModbusRx
  4723 ;; This function uses a non-reentrant model
  4724 ;;
  4725                           
  4726                           	psect	text32
  4727  0025D0                     __ptext32:
  4728                           	opt callstack 0
  4729  0025D0                     _ClearRxBuff:
  4730                           	opt callstack 25
  4731  0025D0                     
  4732                           ;Modbus.c: 40:     int i = 0;
  4733  0025D0  0E00               	movlw	0
  4734  0025D2  6E07               	movwf	(ClearRxBuff@i+1)^0,c
  4735  0025D4  0E00               	movlw	0
  4736  0025D6  6E06               	movwf	ClearRxBuff@i^0,c
  4737                           
  4738                           ;Modbus.c: 41:     for(i=0; i<ByteNum; i++ ){
  4739  0025D8  0E00               	movlw	0
  4740  0025DA  6E07               	movwf	(ClearRxBuff@i+1)^0,c
  4741  0025DC  0E00               	movlw	0
  4742  0025DE  6E06               	movwf	ClearRxBuff@i^0,c
  4743  0025E0  EFFC  F012         	goto	l5224
  4744  0025E4                     l5220:
  4745                           
  4746                           ; BSR set to: 0
  4747                           ;Modbus.c: 42:         rxData[i] = 0xFF;
  4748  0025E4  0E00               	movlw	low _rxData
  4749  0025E6  2406               	addwf	ClearRxBuff@i^0,w,c
  4750  0025E8  6ED9               	movwf	fsr2l,c
  4751  0025EA  0E03               	movlw	high _rxData
  4752  0025EC  2007               	addwfc	(ClearRxBuff@i+1)^0,w,c
  4753  0025EE  6EDA               	movwf	fsr2h,c
  4754  0025F0  0EFF               	movlw	255
  4755  0025F2  6EDF               	movwf	indf2,c
  4756  0025F4                     
  4757                           ; BSR set to: 0
  4758                           ;Modbus.c: 43:     }
  4759  0025F4  4A06               	infsnz	ClearRxBuff@i^0,f,c
  4760  0025F6  2A07               	incf	(ClearRxBuff@i+1)^0,f,c
  4761  0025F8                     l5224:
  4762  0025F8  0100               	movlb	0	; () banked
  4763  0025FA  518E               	movf	_ByteNum& (0+255),w,b
  4764  0025FC  5C06               	subwf	ClearRxBuff@i^0,w,c
  4765  0025FE  5007               	movf	(ClearRxBuff@i+1)^0,w,c
  4766  002600  0A80               	xorlw	128
  4767  002602  6E05               	movwf	??_ClearRxBuff^0,c
  4768  002604  518F               	movf	(_ByteNum+1)& (0+255),w,b
  4769  002606  0A80               	xorlw	128
  4770  002608  5805               	subwfb	??_ClearRxBuff^0,w,c
  4771  00260A  A0D8               	btfss	status,0,c
  4772  00260C  EF0A  F013         	goto	u5311
  4773  002610  EF0C  F013         	goto	u5310
  4774  002614                     u5311:
  4775  002614  EFF2  F012         	goto	l5220
  4776  002618                     u5310:
  4777  002618                     
  4778                           ; BSR set to: 0
  4779  002618  0012               	return		;funcret
  4780  00261A                     __end_of_ClearRxBuff:
  4781                           	opt callstack 0
  4782                           
  4783 ;; *************** function _AddRxBuffToModBus *****************
  4784 ;; Defined at:
  4785 ;;		line 47 in file "Modbus.c"
  4786 ;; Parameters:    Size  Location     Type
  4787 ;;		None
  4788 ;; Auto vars:     Size  Location     Type
  4789 ;;  i               2    5[COMRAM] int 
  4790 ;; Return value:  Size  Location     Type
  4791 ;;                  1    wreg      void 
  4792 ;; Registers used:
  4793 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4794 ;; Tracked objects:
  4795 ;;		On entry : 0/0
  4796 ;;		On exit  : 0/0
  4797 ;;		Unchanged: 0/0
  4798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4800 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4801 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4802 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4803 ;;Total ram usage:        3 bytes
  4804 ;; Hardware stack levels used:    1
  4805 ;; Hardware stack levels required when called:    4
  4806 ;; This function calls:
  4807 ;;		Nothing
  4808 ;; This function is called by:
  4809 ;;		_ModbusRx
  4810 ;; This function uses a non-reentrant model
  4811 ;;
  4812                           
  4813                           	psect	text33
  4814  001DF2                     __ptext33:
  4815                           	opt callstack 0
  4816  001DF2                     _AddRxBuffToModBus:
  4817                           	opt callstack 25
  4818  001DF2                     
  4819                           ;Modbus.c: 51:     int i = 0;
  4820  001DF2  0E00               	movlw	0
  4821  001DF4  6E07               	movwf	(AddRxBuffToModBus@i+1)^0,c
  4822  001DF6  0E00               	movlw	0
  4823  001DF8  6E06               	movwf	AddRxBuffToModBus@i^0,c
  4824                           
  4825                           ;Modbus.c: 53:     for(i=0l; i<ByteNum; i++){
  4826  001DFA  0E00               	movlw	0
  4827  001DFC  6E07               	movwf	(AddRxBuffToModBus@i+1)^0,c
  4828  001DFE  0E00               	movlw	0
  4829  001E00  6E06               	movwf	AddRxBuffToModBus@i^0,c
  4830  001E02  EF15  F00F         	goto	l5234
  4831  001E06                     l5228:
  4832                           
  4833                           ; BSR set to: 0
  4834                           ;Modbus.c: 54:         ModbusData[ModDataCnt] = rxData[i];
  4835  001E06  0E00               	movlw	low _rxData
  4836  001E08  2406               	addwf	AddRxBuffToModBus@i^0,w,c
  4837  001E0A  6ED9               	movwf	fsr2l,c
  4838  001E0C  0E03               	movlw	high _rxData
  4839  001E0E  2007               	addwfc	(AddRxBuffToModBus@i+1)^0,w,c
  4840  001E10  6EDA               	movwf	fsr2h,c
  4841  001E12  0E00               	movlw	low _ModbusData
  4842  001E14  2594               	addwf	_ModDataCnt& (0+255),w,b
  4843  001E16  6EE1               	movwf	fsr1l,c
  4844  001E18  0E01               	movlw	high _ModbusData
  4845  001E1A  2195               	addwfc	(_ModDataCnt+1)& (0+255),w,b
  4846  001E1C  6EE2               	movwf	fsr1h,c
  4847  001E1E  CFDF FFE7          	movff	indf2,indf1
  4848  001E22                     
  4849                           ; BSR set to: 0
  4850                           ;Modbus.c: 55:         ModDataCnt++;
  4851  001E22  4B94               	infsnz	_ModDataCnt& (0+255),f,b
  4852  001E24  2B95               	incf	(_ModDataCnt+1)& (0+255),f,b
  4853  001E26                     
  4854                           ; BSR set to: 0
  4855                           ;Modbus.c: 56:     }
  4856  001E26  4A06               	infsnz	AddRxBuffToModBus@i^0,f,c
  4857  001E28  2A07               	incf	(AddRxBuffToModBus@i+1)^0,f,c
  4858  001E2A                     l5234:
  4859  001E2A  0100               	movlb	0	; () banked
  4860  001E2C  518E               	movf	_ByteNum& (0+255),w,b
  4861  001E2E  5C06               	subwf	AddRxBuffToModBus@i^0,w,c
  4862  001E30  5007               	movf	(AddRxBuffToModBus@i+1)^0,w,c
  4863  001E32  0A80               	xorlw	128
  4864  001E34  6E05               	movwf	??_AddRxBuffToModBus^0,c
  4865  001E36  518F               	movf	(_ByteNum+1)& (0+255),w,b
  4866  001E38  0A80               	xorlw	128
  4867  001E3A  5805               	subwfb	??_AddRxBuffToModBus^0,w,c
  4868  001E3C  A0D8               	btfss	status,0,c
  4869  001E3E  EF23  F00F         	goto	u5321
  4870  001E42  EF25  F00F         	goto	u5320
  4871  001E46                     u5321:
  4872  001E46  EF03  F00F         	goto	l5228
  4873  001E4A                     u5320:
  4874  001E4A                     
  4875                           ; BSR set to: 0
  4876                           ;Modbus.c: 61:     if(ModbusData[1] == 0x0F){
  4877  001E4A  0E0F               	movlw	15
  4878  001E4C  0101               	movlb	1	; () banked
  4879  001E4E  1901               	xorwf	(_ModbusData+1)& (0+255),w,b
  4880  001E50  A4D8               	btfss	status,2,c
  4881  001E52  EF2D  F00F         	goto	u5331
  4882  001E56  EF2F  F00F         	goto	u5330
  4883  001E5A                     u5331:
  4884  001E5A  EF38  F00F         	goto	l5240
  4885  001E5E                     u5330:
  4886  001E5E                     l5238:
  4887                           
  4888                           ; BSR set to: 1
  4889                           ;Modbus.c: 62:         ExpectedBytes = ModbusData[6] + 9;
  4890  001E5E  0E09               	movlw	9
  4891  001E60  2506               	addwf	(_ModbusData+6)& (0+255),w,b
  4892  001E62  0100               	movlb	0	; () banked
  4893  001E64  6FFC               	movwf	_ExpectedBytes& (0+255),b
  4894  001E66  6BFD               	clrf	(_ExpectedBytes+1)& (0+255),b
  4895  001E68  0E00               	movlw	0
  4896  001E6A  23FD               	addwfc	(_ExpectedBytes+1)& (0+255),f,b
  4897                           
  4898                           ;Modbus.c: 63:     }else if (ModbusData[1] == 0x10){
  4899  001E6C  EF48  F00F         	goto	l690
  4900  001E70                     l5240:
  4901                           
  4902                           ; BSR set to: 1
  4903  001E70  0E10               	movlw	16
  4904  001E72  1901               	xorwf	(_ModbusData+1)& (0+255),w,b
  4905  001E74  A4D8               	btfss	status,2,c
  4906  001E76  EF3F  F00F         	goto	u5341
  4907  001E7A  EF41  F00F         	goto	u5340
  4908  001E7E                     u5341:
  4909  001E7E  EF43  F00F         	goto	l5244
  4910  001E82                     u5340:
  4911  001E82  EF2F  F00F         	goto	l5238
  4912  001E86                     l5244:
  4913                           
  4914                           ; BSR set to: 1
  4915                           ;Modbus.c: 66:         ExpectedBytes = 8;
  4916  001E86  0E00               	movlw	0
  4917  001E88  0100               	movlb	0	; () banked
  4918  001E8A  6FFD               	movwf	(_ExpectedBytes+1)& (0+255),b
  4919  001E8C  0E08               	movlw	8
  4920  001E8E  6FFC               	movwf	_ExpectedBytes& (0+255),b
  4921  001E90                     l690:
  4922                           
  4923                           ; BSR set to: 0
  4924  001E90  0012               	return		;funcret
  4925  001E92                     __end_of_AddRxBuffToModBus:
  4926                           	opt callstack 0
  4927                           
  4928 ;; *************** function _InitialiseString *****************
  4929 ;; Defined at:
  4930 ;;		line 34 in file "main.c"
  4931 ;; Parameters:    Size  Location     Type
  4932 ;;		None
  4933 ;; Auto vars:     Size  Location     Type
  4934 ;;		None
  4935 ;; Return value:  Size  Location     Type
  4936 ;;                  1    wreg      void 
  4937 ;; Registers used:
  4938 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4939 ;; Tracked objects:
  4940 ;;		On entry : 0/0
  4941 ;;		On exit  : 0/0
  4942 ;;		Unchanged: 0/0
  4943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4948 ;;Total ram usage:        0 bytes
  4949 ;; Hardware stack levels used:    1
  4950 ;; Hardware stack levels required when called:   13
  4951 ;; This function calls:
  4952 ;;		_printf
  4953 ;; This function is called by:
  4954 ;;		_main
  4955 ;; This function uses a non-reentrant model
  4956 ;;
  4957                           
  4958                           	psect	text34
  4959  002132                     __ptext34:
  4960                           	opt callstack 0
  4961  002132                     _InitialiseString:
  4962                           	opt callstack 17
  4963  002132                     
  4964                           ;main.c: 37:     printf("\rDan and Sam's Modbus GPIO Expansion - AP000xxxxx V0.1\r\n");
  4965  002132  0E07               	movlw	low STR_1
  4966  002134  0100               	movlb	0	; () banked
  4967  002136  6FC0               	movwf	printf@fmt& (0+255),b
  4968  002138  0EFE               	movlw	high STR_1
  4969  00213A  6FC1               	movwf	(printf@fmt+1)& (0+255),b
  4970  00213C  EC54  F014         	call	_printf	;wreg free
  4971                           
  4972                           ;main.c: 38:     printf("\rCard Ser No. xxxxxxx \r\n");
  4973  002140  0E92               	movlw	low STR_2
  4974  002142  0100               	movlb	0	; () banked
  4975  002144  6FC0               	movwf	printf@fmt& (0+255),b
  4976  002146  0EFF               	movlw	high STR_2
  4977  002148  6FC1               	movwf	(printf@fmt+1)& (0+255),b
  4978  00214A  EC54  F014         	call	_printf	;wreg free
  4979                           
  4980                           ;main.c: 39:     printf("\rCompiled on %s at %s by XC8 version %u\r\n\n",
  4981  00214E  0EAC               	movlw	low STR_3
  4982  002150  0100               	movlb	0	; () banked
  4983  002152  6FC0               	movwf	printf@fmt& (0+255),b
  4984  002154  0EFE               	movlw	high STR_3
  4985  002156  6FC1               	movwf	(printf@fmt+1)& (0+255),b
  4986  002158  0EEA               	movlw	low STR_4
  4987  00215A  6FC2               	movwf	(?_printf+2)& (0+255),b
  4988  00215C  0EFF               	movlw	high STR_4
  4989  00215E  6FC3               	movwf	(?_printf+3)& (0+255),b
  4990  002160  0EF6               	movlw	low STR_5
  4991  002162  6FC4               	movwf	(?_printf+4)& (0+255),b
  4992  002164  0EFF               	movlw	high STR_5
  4993  002166  6FC5               	movwf	(?_printf+5)& (0+255),b
  4994  002168  0E08               	movlw	8
  4995  00216A  6FC7               	movwf	(?_printf+7)& (0+255),b
  4996  00216C  0E34               	movlw	52
  4997  00216E  6FC6               	movwf	(?_printf+6)& (0+255),b
  4998  002170  EC54  F014         	call	_printf	;wreg free
  4999                           
  5000                           ;main.c: 41:     printf("\rFunction Codes Supported:\r\n");
  5001  002174  0E3E               	movlw	low STR_6
  5002  002176  0100               	movlb	0	; () banked
  5003  002178  6FC0               	movwf	printf@fmt& (0+255),b
  5004  00217A  0EFF               	movlw	high STR_6
  5005  00217C  6FC1               	movwf	(printf@fmt+1)& (0+255),b
  5006  00217E  EC54  F014         	call	_printf	;wreg free
  5007                           
  5008                           ;main.c: 42:     printf("\r   0x03 - Read Multiple Registers (Max 32x 16bit)\r\n");
  5009  002182  0E77               	movlw	low STR_7
  5010  002184  0100               	movlb	0	; () banked
  5011  002186  6FC0               	movwf	printf@fmt& (0+255),b
  5012  002188  0EFE               	movlw	high STR_7
  5013  00218A  6FC1               	movwf	(printf@fmt+1)& (0+255),b
  5014  00218C  EC54  F014         	call	_printf	;wreg free
  5015                           
  5016                           ;main.c: 43:     printf("\r   0x10 - Write Multiple Registers (Max 32x 16bit)\r\n\n");
  5017  002190  0E40               	movlw	low STR_8
  5018  002192  0100               	movlb	0	; () banked
  5019  002194  6FC0               	movwf	printf@fmt& (0+255),b
  5020  002196  0EFE               	movlw	high STR_8
  5021  002198  6FC1               	movwf	(printf@fmt+1)& (0+255),b
  5022  00219A  EC54  F014         	call	_printf	;wreg free
  5023                           
  5024                           ;main.c: 44:     printf("\rInitalisation Complete - Ready\r\n\n");
  5025  00219E  0EFB               	movlw	low STR_9
  5026  0021A0  0100               	movlb	0	; () banked
  5027  0021A2  6FC0               	movwf	printf@fmt& (0+255),b
  5028  0021A4  0EFE               	movlw	high STR_9
  5029  0021A6  6FC1               	movwf	(printf@fmt+1)& (0+255),b
  5030  0021A8  EC54  F014         	call	_printf	;wreg free
  5031  0021AC  0012               	return		;funcret
  5032  0021AE                     __end_of_InitialiseString:
  5033                           	opt callstack 0
  5034                           
  5035 ;; *************** function _printf *****************
  5036 ;; Defined at:
  5037 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
  5038 ;; Parameters:    Size  Location     Type
  5039 ;;  fmt             2   29[BANK0 ] PTR const unsigned char 
  5040 ;;		 -> STR_19(27), STR_18(21), STR_17(36), STR_16(28), 
  5041 ;;		 -> STR_15(4), STR_14(23), STR_13(32), STR_12(4), 
  5042 ;;		 -> STR_11(23), STR_10(19), STR_9(35), STR_8(55), 
  5043 ;;		 -> STR_7(53), STR_6(29), STR_3(43), STR_2(25), 
  5044 ;;		 -> STR_1(57), 
  5045 ;; Auto vars:     Size  Location     Type
  5046 ;;  ap              2   39[BANK0 ] PTR void [1]
  5047 ;;		 -> ?_printf(2), 
  5048 ;;  ret             2    0        int 
  5049 ;; Return value:  Size  Location     Type
  5050 ;;                  2   29[BANK0 ] int 
  5051 ;; Registers used:
  5052 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5053 ;; Tracked objects:
  5054 ;;		On entry : 0/0
  5055 ;;		On exit  : 0/0
  5056 ;;		Unchanged: 0/0
  5057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5058 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5059 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5061 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5062 ;;Total ram usage:       12 bytes
  5063 ;; Hardware stack levels used:    1
  5064 ;; Hardware stack levels required when called:   12
  5065 ;; This function calls:
  5066 ;;		_vfprintf
  5067 ;; This function is called by:
  5068 ;;		_InitialiseString
  5069 ;;		_PrintModRespon
  5070 ;;		_PrintModbus
  5071 ;;		_main
  5072 ;;		_checkCRC
  5073 ;;		_ModbusRx
  5074 ;; This function uses a non-reentrant model
  5075 ;;
  5076                           
  5077                           	psect	text35
  5078  0028A8                     __ptext35:
  5079                           	opt callstack 0
  5080  0028A8                     _printf:
  5081                           	opt callstack 18
  5082  0028A8  0EC2               	movlw	low (?_printf+2)
  5083  0028AA  0100               	movlb	0	; () banked
  5084  0028AC  6FCA               	movwf	printf@ap& (0+255),b
  5085  0028AE  0E00               	movlw	high (?_printf+2)
  5086  0028B0  6FCB               	movwf	(printf@ap+1)& (0+255),b
  5087  0028B2                     
  5088                           ; BSR set to: 0
  5089  0028B2  0E00               	movlw	0
  5090  0028B4  6FBA               	movwf	vfprintf@fp& (0+255),b
  5091  0028B6  0E00               	movlw	0
  5092  0028B8  6FBB               	movwf	(vfprintf@fp+1)& (0+255),b
  5093  0028BA  C0C0  F0BC         	movff	printf@fmt,vfprintf@fmt
  5094  0028BE  C0C1  F0BD         	movff	printf@fmt+1,vfprintf@fmt+1
  5095  0028C2  0ECA               	movlw	low printf@ap
  5096  0028C4  6FBE               	movwf	vfprintf@ap& (0+255),b
  5097  0028C6  0E00               	movlw	high printf@ap
  5098  0028C8  6FBF               	movwf	(vfprintf@ap+1)& (0+255),b
  5099  0028CA  EC86  F011         	call	_vfprintf	;wreg free
  5100  0028CE  0012               	return		;funcret
  5101  0028D0                     __end_of_printf:
  5102                           	opt callstack 0
  5103                           
  5104 ;; *************** function _vfprintf *****************
  5105 ;; Defined at:
  5106 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5107 ;; Parameters:    Size  Location     Type
  5108 ;;  fp              2   23[BANK0 ] PTR struct _IO_FILE
  5109 ;;		 -> NULL(0), 
  5110 ;;  fmt             2   25[BANK0 ] PTR const unsigned char 
  5111 ;;		 -> STR_19(27), STR_18(21), STR_17(36), STR_16(28), 
  5112 ;;		 -> STR_15(4), STR_14(23), STR_13(32), STR_12(4), 
  5113 ;;		 -> STR_11(23), STR_10(19), STR_9(35), STR_8(55), 
  5114 ;;		 -> STR_7(53), STR_6(29), STR_3(43), STR_2(25), 
  5115 ;;		 -> STR_1(57), 
  5116 ;;  ap              2   27[BANK0 ] PTR PTR void 
  5117 ;;		 -> printf@ap(2), 
  5118 ;; Auto vars:     Size  Location     Type
  5119 ;;  cfmt            2   82[COMRAM] PTR unsigned char 
  5120 ;;		 -> STR_19(27), STR_18(21), STR_17(36), STR_16(28), 
  5121 ;;		 -> STR_15(4), STR_14(23), STR_13(32), STR_12(4), 
  5122 ;;		 -> STR_11(23), STR_10(19), STR_9(35), STR_8(55), 
  5123 ;;		 -> STR_7(53), STR_6(29), STR_3(43), STR_2(25), 
  5124 ;;		 -> STR_1(57), 
  5125 ;; Return value:  Size  Location     Type
  5126 ;;                  2   23[BANK0 ] int 
  5127 ;; Registers used:
  5128 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5129 ;; Tracked objects:
  5130 ;;		On entry : 0/0
  5131 ;;		On exit  : 0/0
  5132 ;;		Unchanged: 0/0
  5133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5134 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5135 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5137 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5138 ;;Total ram usage:        8 bytes
  5139 ;; Hardware stack levels used:    1
  5140 ;; Hardware stack levels required when called:   11
  5141 ;; This function calls:
  5142 ;;		_vfpfcnvrt
  5143 ;; This function is called by:
  5144 ;;		_printf
  5145 ;; This function uses a non-reentrant model
  5146 ;;
  5147                           
  5148                           	psect	text36
  5149  00230C                     __ptext36:
  5150                           	opt callstack 0
  5151  00230C                     _vfprintf:
  5152                           	opt callstack 18
  5153  00230C                     
  5154                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  5155  00230C  C0BC  F053         	movff	vfprintf@fmt,vfprintf@cfmt
  5156  002310  C0BD  F054         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  5157  002314                     
  5158                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  5159  002314  0E00               	movlw	0
  5160  002316  0100               	movlb	0	; () banked
  5161  002318  6F89               	movwf	(_nout+1)& (0+255),b
  5162  00231A  0E00               	movlw	0
  5163  00231C  6F88               	movwf	_nout& (0+255),b
  5164                           
  5165                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5166  00231E  EFA4  F011         	goto	l5062
  5167  002322                     l5060:
  5168                           
  5169                           ; BSR set to: 0
  5170                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  5171  002322  C0BA  F049         	movff	vfprintf@fp,vfpfcnvrt@fp
  5172  002326  C0BB  F04A         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  5173  00232A  0E53               	movlw	low vfprintf@cfmt
  5174  00232C  6E4B               	movwf	vfpfcnvrt@fmt^0,c
  5175  00232E  0E00               	movlw	high vfprintf@cfmt
  5176  002330  6E4C               	movwf	(vfpfcnvrt@fmt+1)^0,c
  5177  002332  C0BE  F04D         	movff	vfprintf@ap,vfpfcnvrt@ap
  5178  002336  C0BF  F04E         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  5179  00233A  EC95  F000         	call	_vfpfcnvrt	;wreg free
  5180  00233E  5049               	movf	?_vfpfcnvrt^0,w,c
  5181  002340  0100               	movlb	0	; () banked
  5182  002342  2788               	addwf	_nout& (0+255),f,b
  5183  002344  504A               	movf	(?_vfpfcnvrt+1)^0,w,c
  5184  002346  2389               	addwfc	(_nout+1)& (0+255),f,b
  5185  002348                     l5062:
  5186                           
  5187                           ; BSR set to: 0
  5188                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5189  002348  C053  FFF6         	movff	vfprintf@cfmt,tblptrl
  5190  00234C  C054  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  5191  002350                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5192  002350  6AF8               	clrf	tblptru,c
  5193  002352                     	endif
  5194  002352                     	if	0	;tblptru may be non-zero
  5195  002352                     	endif
  5196  002352  0008               	tblrd		*
  5197  002354  50F5               	movf	tablat,w,c
  5198  002356  0900               	iorlw	0
  5199  002358  A4D8               	btfss	status,2,c
  5200  00235A  EFB1  F011         	goto	u5201
  5201  00235E  EFB3  F011         	goto	u5200
  5202  002362                     u5201:
  5203  002362  EF91  F011         	goto	l5060
  5204  002366                     u5200:
  5205  002366                     
  5206                           ; BSR set to: 0
  5207                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  5208  002366  C088  F0BA         	movff	_nout,?_vfprintf
  5209  00236A  C089  F0BB         	movff	_nout+1,?_vfprintf+1
  5210  00236E                     
  5211                           ; BSR set to: 0
  5212  00236E  0012               	return		;funcret
  5213  002370                     __end_of_vfprintf:
  5214                           	opt callstack 0
  5215                           
  5216 ;; *************** function _vfpfcnvrt *****************
  5217 ;; Defined at:
  5218 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5219 ;; Parameters:    Size  Location     Type
  5220 ;;  fp              2   72[COMRAM] PTR struct _IO_FILE
  5221 ;;		 -> NULL(0), 
  5222 ;;  fmt             2   74[COMRAM] PTR PTR unsigned char 
  5223 ;;		 -> vfprintf@cfmt(2), 
  5224 ;;  ap              2   76[COMRAM] PTR PTR void 
  5225 ;;		 -> printf@ap(2), 
  5226 ;; Auto vars:     Size  Location     Type
  5227 ;;  llu             8   15[BANK0 ] unsigned long long 
  5228 ;;  ll              8    0[BANK0 ] long long 
  5229 ;;  f               4    0        long long 
  5230 ;;  vp              3    0        PTR void 
  5231 ;;  ct              3    0        unsigned char [3]
  5232 ;;  done            2   11[BANK0 ] int 
  5233 ;;  cp              2    8[BANK0 ] PTR unsigned char 
  5234 ;;		 -> ?_printf(2), STR_5(9), STR_4(12), 
  5235 ;;  i               2    0        int 
  5236 ;;  c               1   10[BANK0 ] unsigned char 
  5237 ;; Return value:  Size  Location     Type
  5238 ;;                  2   72[COMRAM] int 
  5239 ;; Registers used:
  5240 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5241 ;; Tracked objects:
  5242 ;;		On entry : 0/0
  5243 ;;		On exit  : 0/0
  5244 ;;		Unchanged: 0/0
  5245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5246 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5247 ;;      Locals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5248 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5249 ;;      Totals:        10      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5250 ;;Total ram usage:       33 bytes
  5251 ;; Hardware stack levels used:    1
  5252 ;; Hardware stack levels required when called:   10
  5253 ;; This function calls:
  5254 ;;		_atoi
  5255 ;;		_dtoa
  5256 ;;		_fputc
  5257 ;;		_isdigit
  5258 ;;		_stoa
  5259 ;;		_utoa
  5260 ;;		_xtoa
  5261 ;; This function is called by:
  5262 ;;		_vfprintf
  5263 ;; This function uses a non-reentrant model
  5264 ;;
  5265                           
  5266                           	psect	text37
  5267  00012A                     __ptext37:
  5268                           	opt callstack 0
  5269  00012A                     _vfpfcnvrt:
  5270                           	opt callstack 18
  5271  00012A                     
  5272                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  5273  00012A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5274  00012E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5275  000132  CFDE FFF6          	movff	postinc2,tblptrl
  5276  000136  CFDD FFF7          	movff	postdec2,tblptrh
  5277  00013A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5278  00013A  6AF8               	clrf	tblptru,c
  5279  00013C                     	endif
  5280  00013C                     	if	0	;tblptru may be non-zero
  5281  00013C                     	endif
  5282  00013C  0008               	tblrd		*
  5283  00013E  50F5               	movf	tablat,w,c
  5284  000140  0A25               	xorlw	37
  5285  000142  A4D8               	btfss	status,2,c
  5286  000144  EFA6  F000         	goto	u5051
  5287  000148  EFA8  F000         	goto	u5050
  5288  00014C                     u5051:
  5289  00014C  EF3D  F003         	goto	l5038
  5290  000150                     u5050:
  5291  000150                     
  5292                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  5293  000150  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5294  000154  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5295  000158  2ADE               	incf	postinc2,f,c
  5296  00015A  0E00               	movlw	0
  5297  00015C  22DD               	addwfc	postdec2,f,c
  5298  00015E                     
  5299                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  5300  00015E  0E00               	movlw	0
  5301  000160  0100               	movlb	0	; () banked
  5302  000162  6F8B               	movwf	(_width+1)& (0+255),b
  5303  000164  0E00               	movlw	0
  5304  000166  6F8A               	movwf	_width& (0+255),b
  5305  000168  C08A  F056         	movff	_width,_flags
  5306  00016C  C08B  F057         	movff	_width+1,_flags+1
  5307  000170                     
  5308                           ; BSR set to: 0
  5309                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  5310  000170  698C               	setf	_prec& (0+255),b
  5311  000172  698D               	setf	(_prec+1)& (0+255),b
  5312  000174                     
  5313                           ; BSR set to: 0
  5314                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  5315  000174  0E00               	movlw	0
  5316  000176  6FAF               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  5317  000178  0E00               	movlw	0
  5318  00017A  6FAE               	movwf	vfpfcnvrt@done& (0+255),b
  5319                           
  5320                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  5321  00017C  EF07  F001         	goto	l4960
  5322  000180                     l4934:
  5323                           
  5324                           ; BSR set to: 0
  5325                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  5326  000180  8056               	bsf	_flags^0,0,c
  5327  000182                     l4936:
  5328                           
  5329                           ; BSR set to: 0
  5330                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  5331  000182  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5332  000186  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5333  00018A  2ADE               	incf	postinc2,f,c
  5334  00018C  0E00               	movlw	0
  5335  00018E  22DD               	addwfc	postdec2,f,c
  5336                           
  5337                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  5338  000190  EF07  F001         	goto	l4960
  5339  000194                     l4938:
  5340                           
  5341                           ; BSR set to: 0
  5342                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  5343  000194  8256               	bsf	_flags^0,1,c
  5344  000196  EFC1  F000         	goto	l4936
  5345  00019A                     l4942:
  5346                           
  5347                           ; BSR set to: 0
  5348                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  5349  00019A  8456               	bsf	_flags^0,2,c
  5350  00019C  EFC1  F000         	goto	l4936
  5351  0001A0                     l4946:
  5352                           
  5353                           ; BSR set to: 0
  5354                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  5355  0001A0  8656               	bsf	_flags^0,3,c
  5356  0001A2  EFC1  F000         	goto	l4936
  5357  0001A6                     l4950:
  5358                           
  5359                           ; BSR set to: 0
  5360                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  5361  0001A6  8856               	bsf	_flags^0,4,c
  5362  0001A8  EFC1  F000         	goto	l4936
  5363  0001AC                     l4954:
  5364                           
  5365                           ; BSR set to: 0
  5366                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  5367  0001AC  0E00               	movlw	0
  5368  0001AE  6FAF               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  5369  0001B0  0E01               	movlw	1
  5370  0001B2  6FAE               	movwf	vfpfcnvrt@done& (0+255),b
  5371                           
  5372                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  5373  0001B4  EF07  F001         	goto	l4960
  5374  0001B8                     l4958:
  5375                           
  5376                           ; BSR set to: 0
  5377  0001B8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5378  0001BC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5379  0001C0  CFDE FFF6          	movff	postinc2,tblptrl
  5380  0001C4  CFDD FFF7          	movff	postdec2,tblptrh
  5381  0001C8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5382  0001C8  6AF8               	clrf	tblptru,c
  5383  0001CA                     	endif
  5384  0001CA                     	if	0	;tblptru may be non-zero
  5385  0001CA                     	endif
  5386  0001CA  0008               	tblrd		*
  5387  0001CC  50F5               	movf	tablat,w,c
  5388  0001CE  6E4F               	movwf	??_vfpfcnvrt^0,c
  5389  0001D0  6A50               	clrf	(??_vfpfcnvrt+1)^0,c
  5390                           
  5391                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5392                           ; Switch size 1, requested type "simple"
  5393                           ; Number of cases is 1, Range of values is 0 to 0
  5394                           ; switch strategies available:
  5395                           ; Name         Instructions Cycles
  5396                           ; simple_byte            4     3 (average)
  5397                           ;	Chosen strategy is simple_byte
  5398  0001D2  5050               	movf	(??_vfpfcnvrt+1)^0,w,c
  5399  0001D4  0A00               	xorlw	0	; case 0
  5400  0001D6  B4D8               	btfsc	status,2,c
  5401  0001D8  EFF0  F000         	goto	l5614
  5402  0001DC  EFD6  F000         	goto	l4954
  5403  0001E0                     l5614:
  5404                           
  5405                           ; BSR set to: 0
  5406                           ; Switch size 1, requested type "simple"
  5407                           ; Number of cases is 5, Range of values is 32 to 48
  5408                           ; switch strategies available:
  5409                           ; Name         Instructions Cycles
  5410                           ; simple_byte           16     9 (average)
  5411                           ;	Chosen strategy is simple_byte
  5412  0001E0  504F               	movf	??_vfpfcnvrt^0,w,c
  5413  0001E2  0A20               	xorlw	32	; case 32
  5414  0001E4  B4D8               	btfsc	status,2,c
  5415  0001E6  EFD0  F000         	goto	l4946
  5416  0001EA  0A03               	xorlw	3	; case 35
  5417  0001EC  B4D8               	btfsc	status,2,c
  5418  0001EE  EFD3  F000         	goto	l4950
  5419  0001F2  0A08               	xorlw	8	; case 43
  5420  0001F4  B4D8               	btfsc	status,2,c
  5421  0001F6  EFCD  F000         	goto	l4942
  5422  0001FA  0A06               	xorlw	6	; case 45
  5423  0001FC  B4D8               	btfsc	status,2,c
  5424  0001FE  EFC0  F000         	goto	l4934
  5425  000202  0A1D               	xorlw	29	; case 48
  5426  000204  B4D8               	btfsc	status,2,c
  5427  000206  EFCA  F000         	goto	l4938
  5428  00020A  EFD6  F000         	goto	l4954
  5429  00020E                     l4960:
  5430                           
  5431                           ; BSR set to: 0
  5432                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  5433  00020E  51AE               	movf	vfpfcnvrt@done& (0+255),w,b
  5434  000210  11AF               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  5435  000212  B4D8               	btfsc	status,2,c
  5436  000214  EF0E  F001         	goto	u5061
  5437  000218  EF10  F001         	goto	u5060
  5438  00021C                     u5061:
  5439  00021C  EFDC  F000         	goto	l4958
  5440  000220                     u5060:
  5441  000220                     
  5442                           ; BSR set to: 0
  5443                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  5444  000220  A056               	btfss	_flags^0,0,c
  5445  000222  EF15  F001         	goto	u5071
  5446  000226  EF17  F001         	goto	u5070
  5447  00022A                     u5071:
  5448  00022A  EF18  F001         	goto	l4964
  5449  00022E                     u5070:
  5450  00022E                     
  5451                           ; BSR set to: 0
  5452                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  5453  00022E  9256               	bcf	_flags^0,1,c
  5454  000230                     l4964:
  5455                           
  5456                           ; BSR set to: 0
  5457                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  5458  000230  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5459  000234  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5460  000238  CFDE FFF6          	movff	postinc2,tblptrl
  5461  00023C  CFDD FFF7          	movff	postdec2,tblptrh
  5462  000240                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5463  000240  6AF8               	clrf	tblptru,c
  5464  000242                     	endif
  5465  000242                     	if	0	;tblptru may be non-zero
  5466  000242                     	endif
  5467  000242  0008               	tblrd		*
  5468  000244  50F5               	movf	tablat,w,c
  5469  000246  0A2A               	xorlw	42
  5470  000248  A4D8               	btfss	status,2,c
  5471  00024A  EF29  F001         	goto	u5081
  5472  00024E  EF2B  F001         	goto	u5080
  5473  000252                     u5081:
  5474  000252  EF54  F001         	goto	l4972
  5475  000256                     u5080:
  5476  000256                     
  5477                           ; BSR set to: 0
  5478                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  5479  000256  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5480  00025A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5481  00025E  2ADE               	incf	postinc2,f,c
  5482  000260  0E00               	movlw	0
  5483  000262  22DD               	addwfc	postdec2,f,c
  5484                           
  5485                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  5486  000264  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5487  000268  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5488  00026C  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  5489  000270  0E02               	movlw	2
  5490  000272  26DE               	addwf	postinc2,f,c
  5491  000274  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  5492  000278  0E00               	movlw	0
  5493  00027A  22DD               	addwfc	postdec2,f,c
  5494  00027C  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5495  000280  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5496  000284  CFDE F08A          	movff	postinc2,_width
  5497  000288  CFDD F08B          	movff	postdec2,_width+1
  5498  00028C                     
  5499                           ; BSR set to: 0
  5500                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  5501  00028C  BF8B               	btfsc	(_width+1)& (0+255),7,b
  5502  00028E  EF4D  F001         	goto	u5090
  5503  000292  EF4B  F001         	goto	u5091
  5504  000296                     u5091:
  5505  000296  EF99  F001         	goto	l4982
  5506  00029A                     u5090:
  5507  00029A                     
  5508                           ; BSR set to: 0
  5509                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  5510  00029A  8056               	bsf	_flags^0,0,c
  5511                           
  5512                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  5513  00029C  6D8A               	negf	_width& (0+255),b
  5514  00029E  1F8B               	comf	(_width+1)& (0+255),f,b
  5515  0002A0  B0D8               	btfsc	status,0,c
  5516  0002A2  2B8B               	incf	(_width+1)& (0+255),f,b
  5517  0002A4  EF99  F001         	goto	l4982
  5518  0002A8                     l4972:
  5519                           
  5520                           ; BSR set to: 0
  5521                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  5522  0002A8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5523  0002AC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5524  0002B0  CFDE F00C          	movff	postinc2,atoi@s
  5525  0002B4  CFDD F00D          	movff	postdec2,atoi@s+1
  5526  0002B8  EC03  F008         	call	_atoi	;wreg free
  5527  0002BC  C00C  F08A         	movff	?_atoi,_width
  5528  0002C0  C00D  F08B         	movff	?_atoi+1,_width+1
  5529                           
  5530                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  5531  0002C4  EF6B  F001         	goto	l4976
  5532  0002C8                     l4974:
  5533                           
  5534                           ; BSR set to: 0
  5535                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  5536  0002C8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5537  0002CC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5538  0002D0  2ADE               	incf	postinc2,f,c
  5539  0002D2  0E00               	movlw	0
  5540  0002D4  22DD               	addwfc	postdec2,f,c
  5541  0002D6                     l4976:
  5542  0002D6  0ED0               	movlw	208
  5543  0002D8  6E4F               	movwf	??_vfpfcnvrt^0,c
  5544  0002DA  0EFF               	movlw	255
  5545  0002DC  6E50               	movwf	(??_vfpfcnvrt+1)^0,c
  5546  0002DE  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5547  0002E2  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5548  0002E6  CFDE FFF6          	movff	postinc2,tblptrl
  5549  0002EA  CFDD FFF7          	movff	postdec2,tblptrh
  5550  0002EE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5551  0002EE  6AF8               	clrf	tblptru,c
  5552  0002F0                     	endif
  5553  0002F0                     	if	0	;tblptru may be non-zero
  5554  0002F0                     	endif
  5555  0002F0  0008               	tblrd		*
  5556  0002F2  50F5               	movf	tablat,w,c
  5557  0002F4  6E51               	movwf	(??_vfpfcnvrt+2)^0,c
  5558  0002F6  6A52               	clrf	(??_vfpfcnvrt+3)^0,c
  5559  0002F8  504F               	movf	??_vfpfcnvrt^0,w,c
  5560  0002FA  2651               	addwf	(??_vfpfcnvrt+2)^0,f,c
  5561  0002FC  5050               	movf	(??_vfpfcnvrt+1)^0,w,c
  5562  0002FE  2252               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  5563  000300  5052               	movf	(??_vfpfcnvrt+3)^0,w,c
  5564  000302  E10A               	bnz	u5100
  5565  000304  0E0A               	movlw	10
  5566  000306  5C51               	subwf	(??_vfpfcnvrt+2)^0,w,c
  5567  000308  A0D8               	btfss	status,0,c
  5568  00030A  EF89  F001         	goto	u5101
  5569  00030E  EF8C  F001         	goto	u5100
  5570  000312                     u5101:
  5571  000312  0E01               	movlw	1
  5572  000314  EF8D  F001         	goto	u5110
  5573  000318                     u5100:
  5574  000318  0E00               	movlw	0
  5575  00031A                     u5110:
  5576  00031A  0100               	movlb	0	; () banked
  5577  00031C  6FB0               	movwf	_vfpfcnvrt$1356& (0+255),b
  5578  00031E  6BB1               	clrf	(_vfpfcnvrt$1356+1)& (0+255),b
  5579  000320                     
  5580                           ; BSR set to: 0
  5581  000320  51B0               	movf	_vfpfcnvrt$1356& (0+255),w,b
  5582  000322  11B1               	iorwf	(_vfpfcnvrt$1356+1)& (0+255),w,b
  5583  000324  A4D8               	btfss	status,2,c
  5584  000326  EF97  F001         	goto	u5121
  5585  00032A  EF99  F001         	goto	u5120
  5586  00032E                     u5121:
  5587  00032E  EF64  F001         	goto	l4974
  5588  000332                     u5120:
  5589  000332                     l4982:
  5590                           
  5591                           ; BSR set to: 0
  5592                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  5593  000332  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5594  000336  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5595  00033A  CFDE FFF6          	movff	postinc2,tblptrl
  5596  00033E  CFDD FFF7          	movff	postdec2,tblptrh
  5597  000342                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5598  000342  6AF8               	clrf	tblptru,c
  5599  000344                     	endif
  5600  000344                     	if	0	;tblptru may be non-zero
  5601  000344                     	endif
  5602  000344  0008               	tblrd		*
  5603  000346  50F5               	movf	tablat,w,c
  5604  000348  0A64               	xorlw	100
  5605  00034A  B4D8               	btfsc	status,2,c
  5606  00034C  EFAA  F001         	goto	u5131
  5607  000350  EFAC  F001         	goto	u5130
  5608  000354                     u5131:
  5609  000354  EFBF  F001         	goto	l4986
  5610  000358                     u5130:
  5611  000358                     
  5612                           ; BSR set to: 0
  5613  000358  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5614  00035C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5615  000360  CFDE FFF6          	movff	postinc2,tblptrl
  5616  000364  CFDD FFF7          	movff	postdec2,tblptrh
  5617  000368                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5618  000368  6AF8               	clrf	tblptru,c
  5619  00036A                     	endif
  5620  00036A                     	if	0	;tblptru may be non-zero
  5621  00036A                     	endif
  5622  00036A  0008               	tblrd		*
  5623  00036C  50F5               	movf	tablat,w,c
  5624  00036E  0A69               	xorlw	105
  5625  000370  A4D8               	btfss	status,2,c
  5626  000372  EFBD  F001         	goto	u5141
  5627  000376  EFBF  F001         	goto	u5140
  5628  00037A                     u5141:
  5629  00037A  EFFF  F001         	goto	l4992
  5630  00037E                     u5140:
  5631  00037E                     l4986:
  5632                           
  5633                           ; BSR set to: 0
  5634                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  5635  00037E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5636  000382  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5637  000386  2ADE               	incf	postinc2,f,c
  5638  000388  0E00               	movlw	0
  5639  00038A  22DD               	addwfc	postdec2,f,c
  5640                           
  5641                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  5642  00038C  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5643  000390  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5644  000394  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  5645  000398  0E02               	movlw	2
  5646  00039A  26DE               	addwf	postinc2,f,c
  5647  00039C  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  5648  0003A0  0E00               	movlw	0
  5649  0003A2  22DD               	addwfc	postdec2,f,c
  5650  0003A4  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5651  0003A8  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5652  0003AC  CFDE F0A3          	movff	postinc2,vfpfcnvrt@ll
  5653  0003B0  CFDD F0A4          	movff	postdec2,vfpfcnvrt@ll+1
  5654  0003B4  0E00               	movlw	0
  5655  0003B6  BFA4               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  5656  0003B8  0EFF               	movlw	-1
  5657  0003BA  6FA5               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  5658  0003BC  6FA6               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  5659  0003BE  6FA7               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  5660  0003C0  6FA8               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  5661  0003C2  6FA9               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  5662  0003C4  6FAA               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  5663  0003C6                     
  5664                           ; BSR set to: 0
  5665                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  5666  0003C6  C049  F022         	movff	vfpfcnvrt@fp,dtoa@fp
  5667  0003CA  C04A  F023         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  5668  0003CE  C0A3  F024         	movff	vfpfcnvrt@ll,dtoa@d
  5669  0003D2  C0A4  F025         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  5670  0003D6  C0A5  F026         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  5671  0003DA  C0A6  F027         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  5672  0003DE  C0A7  F028         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  5673  0003E2  C0A8  F029         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  5674  0003E6  C0A9  F02A         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  5675  0003EA  C0AA  F02B         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  5676  0003EE  EC5A  F003         	call	_dtoa	;wreg free
  5677  0003F2  C022  F049         	movff	?_dtoa,?_vfpfcnvrt
  5678  0003F6  C023  F04A         	movff	?_dtoa+1,?_vfpfcnvrt+1
  5679  0003FA  EF59  F003         	goto	l884
  5680  0003FE                     l4992:
  5681                           
  5682                           ; BSR set to: 0
  5683                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  5684  0003FE  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5685  000402  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5686  000406  CFDE FFF6          	movff	postinc2,tblptrl
  5687  00040A  CFDD FFF7          	movff	postdec2,tblptrh
  5688  00040E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5689  00040E  6AF8               	clrf	tblptru,c
  5690  000410                     	endif
  5691  000410                     	if	0	;tblptru may be non-zero
  5692  000410                     	endif
  5693  000410  0008               	tblrd		*
  5694  000412  50F5               	movf	tablat,w,c
  5695  000414  0A73               	xorlw	115
  5696  000416  A4D8               	btfss	status,2,c
  5697  000418  EF10  F002         	goto	u5151
  5698  00041C  EF12  F002         	goto	u5150
  5699  000420                     u5151:
  5700  000420  EF3D  F002         	goto	l5000
  5701  000424                     u5150:
  5702  000424                     
  5703                           ; BSR set to: 0
  5704                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  5705  000424  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5706  000428  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5707  00042C  2ADE               	incf	postinc2,f,c
  5708  00042E  0E00               	movlw	0
  5709  000430  22DD               	addwfc	postdec2,f,c
  5710                           
  5711                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  5712  000432  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5713  000436  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5714  00043A  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  5715  00043E  0E02               	movlw	2
  5716  000440  26DE               	addwf	postinc2,f,c
  5717  000442  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  5718  000446  0E00               	movlw	0
  5719  000448  22DD               	addwfc	postdec2,f,c
  5720  00044A  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5721  00044E  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5722  000452  CFDE F0AB          	movff	postinc2,vfpfcnvrt@cp
  5723  000456  CFDD F0AC          	movff	postdec2,vfpfcnvrt@cp+1
  5724  00045A                     
  5725                           ; BSR set to: 0
  5726                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  5727  00045A  C049  F010         	movff	vfpfcnvrt@fp,stoa@fp
  5728  00045E  C04A  F011         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  5729  000462  C0AB  F012         	movff	vfpfcnvrt@cp,stoa@s
  5730  000466  C0AC  F013         	movff	vfpfcnvrt@cp+1,stoa@s+1
  5731  00046A  EC36  F007         	call	_stoa	;wreg free
  5732  00046E  C010  F049         	movff	?_stoa,?_vfpfcnvrt
  5733  000472  C011  F04A         	movff	?_stoa+1,?_vfpfcnvrt+1
  5734  000476  EF59  F003         	goto	l884
  5735  00047A                     l5000:
  5736                           
  5737                           ; BSR set to: 0
  5738                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  5739  00047A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5740  00047E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5741  000482  CFDE FFF6          	movff	postinc2,tblptrl
  5742  000486  CFDD FFF7          	movff	postdec2,tblptrh
  5743  00048A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5744  00048A  6AF8               	clrf	tblptru,c
  5745  00048C                     	endif
  5746  00048C                     	if	0	;tblptru may be non-zero
  5747  00048C                     	endif
  5748  00048C  0008               	tblrd		*
  5749  00048E  50F5               	movf	tablat,w,c
  5750  000490  0A75               	xorlw	117
  5751  000492  A4D8               	btfss	status,2,c
  5752  000494  EF4E  F002         	goto	u5161
  5753  000498  EF50  F002         	goto	u5160
  5754  00049C                     u5161:
  5755  00049C  EF91  F002         	goto	l5008
  5756  0004A0                     u5160:
  5757  0004A0                     
  5758                           ; BSR set to: 0
  5759                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  5760  0004A0  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5761  0004A4  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5762  0004A8  2ADE               	incf	postinc2,f,c
  5763  0004AA  0E00               	movlw	0
  5764  0004AC  22DD               	addwfc	postdec2,f,c
  5765                           
  5766                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  5767  0004AE  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5768  0004B2  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5769  0004B6  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  5770  0004BA  0E02               	movlw	2
  5771  0004BC  26DE               	addwf	postinc2,f,c
  5772  0004BE  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  5773  0004C2  0E00               	movlw	0
  5774  0004C4  22DD               	addwfc	postdec2,f,c
  5775  0004C6  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5776  0004CA  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5777  0004CE  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
  5778  0004D2  CFDD F052          	movff	postdec2,??_vfpfcnvrt+3
  5779  0004D6  C051  F0B2         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5780  0004DA  C052  F0B3         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5781  0004DE  6BB4               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5782  0004E0  6BB5               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5783  0004E2  6BB6               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5784  0004E4  6BB7               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5785  0004E6  6BB8               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5786  0004E8  6BB9               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5787  0004EA                     
  5788                           ; BSR set to: 0
  5789                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
  5790  0004EA  C049  F022         	movff	vfpfcnvrt@fp,utoa@fp
  5791  0004EE  C04A  F023         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  5792  0004F2  C0B2  F024         	movff	vfpfcnvrt@llu,utoa@d
  5793  0004F6  C0B3  F025         	movff	vfpfcnvrt@llu+1,utoa@d+1
  5794  0004FA  C0B4  F026         	movff	vfpfcnvrt@llu+2,utoa@d+2
  5795  0004FE  C0B5  F027         	movff	vfpfcnvrt@llu+3,utoa@d+3
  5796  000502  C0B6  F028         	movff	vfpfcnvrt@llu+4,utoa@d+4
  5797  000506  C0B7  F029         	movff	vfpfcnvrt@llu+5,utoa@d+5
  5798  00050A  C0B8  F02A         	movff	vfpfcnvrt@llu+6,utoa@d+6
  5799  00050E  C0B9  F02B         	movff	vfpfcnvrt@llu+7,utoa@d+7
  5800  000512  EC35  F006         	call	_utoa	;wreg free
  5801  000516  C022  F049         	movff	?_utoa,?_vfpfcnvrt
  5802  00051A  C023  F04A         	movff	?_utoa+1,?_vfpfcnvrt+1
  5803  00051E  EF59  F003         	goto	l884
  5804  000522                     l5008:
  5805                           
  5806                           ; BSR set to: 0
  5807                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  5808  000522  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5809  000526  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5810  00052A  CFDE FFF6          	movff	postinc2,tblptrl
  5811  00052E  CFDD FFF7          	movff	postdec2,tblptrh
  5812  000532                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5813  000532  6AF8               	clrf	tblptru,c
  5814  000534                     	endif
  5815  000534                     	if	0	;tblptru may be non-zero
  5816  000534                     	endif
  5817  000534  0008               	tblrd		*
  5818  000536  50F5               	movf	tablat,w,c
  5819  000538  0A78               	xorlw	120
  5820  00053A  B4D8               	btfsc	status,2,c
  5821  00053C  EFA2  F002         	goto	u5171
  5822  000540  EFA4  F002         	goto	u5170
  5823  000544                     u5171:
  5824  000544  EFB7  F002         	goto	l5012
  5825  000548                     u5170:
  5826  000548                     
  5827                           ; BSR set to: 0
  5828  000548  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5829  00054C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5830  000550  CFDE FFF6          	movff	postinc2,tblptrl
  5831  000554  CFDD FFF7          	movff	postdec2,tblptrh
  5832  000558                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5833  000558  6AF8               	clrf	tblptru,c
  5834  00055A                     	endif
  5835  00055A                     	if	0	;tblptru may be non-zero
  5836  00055A                     	endif
  5837  00055A  0008               	tblrd		*
  5838  00055C  50F5               	movf	tablat,w,c
  5839  00055E  0A58               	xorlw	88
  5840  000560  A4D8               	btfss	status,2,c
  5841  000562  EFB5  F002         	goto	u5181
  5842  000566  EFB7  F002         	goto	u5180
  5843  00056A                     u5181:
  5844  00056A  EF06  F003         	goto	l5022
  5845  00056E                     u5180:
  5846  00056E                     l5012:
  5847                           
  5848                           ; BSR set to: 0
  5849                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  5850  00056E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5851  000572  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5852  000576  CFDE FFF6          	movff	postinc2,tblptrl
  5853  00057A  CFDD FFF7          	movff	postdec2,tblptrh
  5854  00057E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5855  00057E  6AF8               	clrf	tblptru,c
  5856  000580                     	endif
  5857  000580                     	if	0	;tblptru may be non-zero
  5858  000580                     	endif
  5859  000580  0008               	tblrd		*
  5860  000582  CFF5 F0AD          	movff	tablat,vfpfcnvrt@c
  5861  000586                     
  5862                           ; BSR set to: 0
  5863                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  5864  000586  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5865  00058A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5866  00058E  2ADE               	incf	postinc2,f,c
  5867  000590  0E00               	movlw	0
  5868  000592  22DD               	addwfc	postdec2,f,c
  5869  000594                     
  5870                           ; BSR set to: 0
  5871                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  5872  000594  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5873  000598  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5874  00059C  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  5875  0005A0  0E02               	movlw	2
  5876  0005A2  26DE               	addwf	postinc2,f,c
  5877  0005A4  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  5878  0005A8  0E00               	movlw	0
  5879  0005AA  22DD               	addwfc	postdec2,f,c
  5880  0005AC  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5881  0005B0  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5882  0005B4  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
  5883  0005B8  CFDD F052          	movff	postdec2,??_vfpfcnvrt+3
  5884  0005BC  C051  F0B2         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5885  0005C0  C052  F0B3         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5886  0005C4  6BB4               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5887  0005C6  6BB5               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5888  0005C8  6BB6               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5889  0005CA  6BB7               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5890  0005CC  6BB8               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5891  0005CE  6BB9               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5892  0005D0                     
  5893                           ; BSR set to: 0
  5894                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
  5895  0005D0  C049  F022         	movff	vfpfcnvrt@fp,xtoa@fp
  5896  0005D4  C04A  F023         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  5897  0005D8  C0B2  F024         	movff	vfpfcnvrt@llu,xtoa@d
  5898  0005DC  C0B3  F025         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  5899  0005E0  C0B4  F026         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  5900  0005E4  C0B5  F027         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  5901  0005E8  C0B6  F028         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  5902  0005EC  C0B7  F029         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  5903  0005F0  C0B8  F02A         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  5904  0005F4  C0B9  F02B         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  5905  0005F8  C0AD  F02C         	movff	vfpfcnvrt@c,xtoa@x
  5906  0005FC  ECCA  F004         	call	_xtoa	;wreg free
  5907  000600  C022  F049         	movff	?_xtoa,?_vfpfcnvrt
  5908  000604  C023  F04A         	movff	?_xtoa+1,?_vfpfcnvrt+1
  5909  000608  EF59  F003         	goto	l884
  5910  00060C                     l5022:
  5911                           
  5912                           ; BSR set to: 0
  5913                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  5914  00060C  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5915  000610  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5916  000614  CFDE FFF6          	movff	postinc2,tblptrl
  5917  000618  CFDD FFF7          	movff	postdec2,tblptrh
  5918  00061C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5919  00061C  6AF8               	clrf	tblptru,c
  5920  00061E                     	endif
  5921  00061E                     	if	0	;tblptru may be non-zero
  5922  00061E                     	endif
  5923  00061E  0008               	tblrd		*
  5924  000620  50F5               	movf	tablat,w,c
  5925  000622  0A25               	xorlw	37
  5926  000624  A4D8               	btfss	status,2,c
  5927  000626  EF17  F003         	goto	u5191
  5928  00062A  EF19  F003         	goto	u5190
  5929  00062E                     u5191:
  5930  00062E  EF30  F003         	goto	l5032
  5931  000632                     u5190:
  5932  000632                     
  5933                           ; BSR set to: 0
  5934                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  5935  000632  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5936  000636  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5937  00063A  2ADE               	incf	postinc2,f,c
  5938  00063C  0E00               	movlw	0
  5939  00063E  22DD               	addwfc	postdec2,f,c
  5940  000640                     
  5941                           ; BSR set to: 0
  5942                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  5943  000640  0E00               	movlw	0
  5944  000642  6E08               	movwf	(fputc@c+1)^0,c
  5945  000644  0E25               	movlw	37
  5946  000646  6E07               	movwf	fputc@c^0,c
  5947  000648  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
  5948  00064C  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5949  000650  EC49  F00F         	call	_fputc	;wreg free
  5950  000654                     l5028:
  5951                           
  5952                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  5953  000654  0E00               	movlw	0
  5954  000656  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
  5955  000658  0E01               	movlw	1
  5956  00065A  6E49               	movwf	?_vfpfcnvrt^0,c
  5957  00065C  EF59  F003         	goto	l884
  5958  000660                     l5032:
  5959                           
  5960                           ; BSR set to: 0
  5961                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  5962  000660  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5963  000664  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5964  000668  2ADE               	incf	postinc2,f,c
  5965  00066A  0E00               	movlw	0
  5966  00066C  22DD               	addwfc	postdec2,f,c
  5967  00066E                     
  5968                           ; BSR set to: 0
  5969                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  5970  00066E  0E00               	movlw	0
  5971  000670  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
  5972  000672  0E00               	movlw	0
  5973  000674  6E49               	movwf	?_vfpfcnvrt^0,c
  5974  000676  EF59  F003         	goto	l884
  5975  00067A                     l5038:
  5976                           
  5977                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  5978  00067A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5979  00067E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5980  000682  CFDE FFF6          	movff	postinc2,tblptrl
  5981  000686  CFDD FFF7          	movff	postdec2,tblptrh
  5982  00068A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5983  00068A  6AF8               	clrf	tblptru,c
  5984  00068C                     	endif
  5985  00068C                     	if	0	;tblptru may be non-zero
  5986  00068C                     	endif
  5987  00068C  0008               	tblrd		*
  5988  00068E  50F5               	movf	tablat,w,c
  5989  000690  6E07               	movwf	fputc@c^0,c
  5990  000692  6A08               	clrf	(fputc@c+1)^0,c
  5991  000694  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
  5992  000698  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5993  00069C  EC49  F00F         	call	_fputc	;wreg free
  5994  0006A0                     
  5995                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  5996  0006A0  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5997  0006A4  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5998  0006A8  2ADE               	incf	postinc2,f,c
  5999  0006AA  0E00               	movlw	0
  6000  0006AC  22DD               	addwfc	postdec2,f,c
  6001  0006AE  EF2A  F003         	goto	l5028
  6002  0006B2                     l884:
  6003  0006B2  0012               	return		;funcret
  6004  0006B4                     __end_of_vfpfcnvrt:
  6005                           	opt callstack 0
  6006                           
  6007 ;; *************** function _xtoa *****************
  6008 ;; Defined at:
  6009 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6010 ;; Parameters:    Size  Location     Type
  6011 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  6012 ;;		 -> NULL(0), 
  6013 ;;  d               8   35[COMRAM] unsigned long long 
  6014 ;;  x               1   43[COMRAM] unsigned char 
  6015 ;; Auto vars:     Size  Location     Type
  6016 ;;  n               8   60[COMRAM] unsigned long long 
  6017 ;;  c               2   70[COMRAM] int 
  6018 ;;  i               2   68[COMRAM] int 
  6019 ;;  w               2   58[COMRAM] int 
  6020 ;;  p               2   56[COMRAM] int 
  6021 ;; Return value:  Size  Location     Type
  6022 ;;                  2   33[COMRAM] int 
  6023 ;; Registers used:
  6024 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6025 ;; Tracked objects:
  6026 ;;		On entry : 0/0
  6027 ;;		On exit  : 0/0
  6028 ;;		Unchanged: 0/0
  6029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6030 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6031 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6032 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6033 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6034 ;;Total ram usage:       39 bytes
  6035 ;; Hardware stack levels used:    1
  6036 ;; Hardware stack levels required when called:    9
  6037 ;; This function calls:
  6038 ;;		_isalpha
  6039 ;;		_isupper
  6040 ;;		_pad
  6041 ;;		_toupper
  6042 ;; This function is called by:
  6043 ;;		_vfpfcnvrt
  6044 ;; This function uses a non-reentrant model
  6045 ;;
  6046                           
  6047                           	psect	text38
  6048  000994                     __ptext38:
  6049                           	opt callstack 0
  6050  000994                     _xtoa:
  6051                           	opt callstack 18
  6052  000994                     
  6053                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  6054  000994  0100               	movlb	0	; () banked
  6055  000996  BF8D               	btfsc	(_prec+1)& (0+255),7,b
  6056  000998  EFD0  F004         	goto	u4811
  6057  00099C  EFD2  F004         	goto	u4810
  6058  0009A0                     u4811:
  6059  0009A0  EFD3  F004         	goto	l4820
  6060  0009A4                     u4810:
  6061  0009A4                     
  6062                           ; BSR set to: 0
  6063                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  6064  0009A4  9256               	bcf	_flags^0,1,c
  6065  0009A6                     l4820:
  6066                           
  6067                           ; BSR set to: 0
  6068                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  6069  0009A6  BF8D               	btfsc	(_prec+1)& (0+255),7,b
  6070  0009A8  EFE0  F004         	goto	u4820
  6071  0009AC  518D               	movf	(_prec+1)& (0+255),w,b
  6072  0009AE  E106               	bnz	u4821
  6073  0009B0  058C               	decf	_prec& (0+255),w,b
  6074  0009B2  B0D8               	btfsc	status,0,c
  6075  0009B4  EFDE  F004         	goto	u4821
  6076  0009B8  EFE0  F004         	goto	u4820
  6077  0009BC                     u4821:
  6078  0009BC  EFE6  F004         	goto	l830
  6079  0009C0                     u4820:
  6080  0009C0                     
  6081                           ; BSR set to: 0
  6082  0009C0  0E00               	movlw	0
  6083  0009C2  6E3A               	movwf	(xtoa@p+1)^0,c
  6084  0009C4  0E01               	movlw	1
  6085  0009C6  6E39               	movwf	xtoa@p^0,c
  6086  0009C8  EFEA  F004         	goto	l832
  6087  0009CC                     l830:
  6088                           
  6089                           ; BSR set to: 0
  6090  0009CC  C08C  F039         	movff	_prec,xtoa@p
  6091  0009D0  C08D  F03A         	movff	_prec+1,xtoa@p+1
  6092  0009D4                     l832:
  6093                           
  6094                           ; BSR set to: 0
  6095                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  6096  0009D4  C08A  F03B         	movff	_width,xtoa@w
  6097  0009D8  C08B  F03C         	movff	_width+1,xtoa@w+1
  6098                           
  6099                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  6100  0009DC  A856               	btfss	_flags^0,4,c
  6101  0009DE  EFF3  F004         	goto	u4831
  6102  0009E2  EFF5  F004         	goto	u4830
  6103  0009E6                     u4831:
  6104  0009E6  EFF9  F004         	goto	l4826
  6105  0009EA                     u4830:
  6106  0009EA                     
  6107                           ; BSR set to: 0
  6108                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  6109  0009EA  0EFE               	movlw	254
  6110  0009EC  263B               	addwf	xtoa@w^0,f,c
  6111  0009EE  0EFF               	movlw	255
  6112  0009F0  223C               	addwfc	(xtoa@w+1)^0,f,c
  6113  0009F2                     l4826:
  6114                           
  6115                           ; BSR set to: 0
  6116                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  6117  0009F2  C024  F03D         	movff	xtoa@d,xtoa@n
  6118  0009F6  C025  F03E         	movff	xtoa@d+1,xtoa@n+1
  6119  0009FA  C026  F03F         	movff	xtoa@d+2,xtoa@n+2
  6120  0009FE  C027  F040         	movff	xtoa@d+3,xtoa@n+3
  6121  000A02  C028  F041         	movff	xtoa@d+4,xtoa@n+4
  6122  000A06  C029  F042         	movff	xtoa@d+5,xtoa@n+5
  6123  000A0A  C02A  F043         	movff	xtoa@d+6,xtoa@n+6
  6124  000A0E  C02B  F044         	movff	xtoa@d+7,xtoa@n+7
  6125  000A12                     
  6126                           ; BSR set to: 0
  6127                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  6128  000A12  0E00               	movlw	0
  6129  000A14  6E46               	movwf	(xtoa@i+1)^0,c
  6130  000A16  0E1F               	movlw	31
  6131  000A18  6E45               	movwf	xtoa@i^0,c
  6132  000A1A                     
  6133                           ; BSR set to: 0
  6134                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  6135  000A1A  0E00               	movlw	0
  6136  000A1C  0101               	movlb	1	; () banked
  6137  000A1E  6FA3               	movwf	(_dbuf+31)& (0+255),b
  6138                           
  6139                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6140  000A20  EFC5  F005         	goto	l4862
  6141  000A24                     l4832:
  6142                           
  6143                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  6144  000A24  0645               	decf	xtoa@i^0,f,c
  6145  000A26  A0D8               	btfss	status,0,c
  6146  000A28  0646               	decf	(xtoa@i+1)^0,f,c
  6147  000A2A                     
  6148                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  6149  000A2A  0E0F               	movlw	15
  6150  000A2C  143D               	andwf	xtoa@n^0,w,c
  6151  000A2E  6E47               	movwf	xtoa@c^0,c
  6152  000A30  6A48               	clrf	(xtoa@c+1)^0,c
  6153  000A32                     
  6154                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  6155  000A32  BE48               	btfsc	(xtoa@c+1)^0,7,c
  6156  000A34  EF25  F005         	goto	u4841
  6157  000A38  5048               	movf	(xtoa@c+1)^0,w,c
  6158  000A3A  E109               	bnz	u4840
  6159  000A3C  0E0A               	movlw	10
  6160  000A3E  5C47               	subwf	xtoa@c^0,w,c
  6161  000A40  A0D8               	btfss	status,0,c
  6162  000A42  EF25  F005         	goto	u4841
  6163  000A46  EF27  F005         	goto	u4840
  6164  000A4A                     u4841:
  6165  000A4A  EF2F  F005         	goto	l4840
  6166  000A4E                     u4840:
  6167  000A4E  0E57               	movlw	87
  6168  000A50  2447               	addwf	xtoa@c^0,w,c
  6169  000A52  6E47               	movwf	xtoa@c^0,c
  6170  000A54  0E00               	movlw	0
  6171  000A56  2048               	addwfc	(xtoa@c+1)^0,w,c
  6172  000A58  6E48               	movwf	(xtoa@c+1)^0,c
  6173  000A5A  EF35  F005         	goto	l839
  6174  000A5E                     l4840:
  6175  000A5E  0E30               	movlw	48
  6176  000A60  2447               	addwf	xtoa@c^0,w,c
  6177  000A62  6E47               	movwf	xtoa@c^0,c
  6178  000A64  0E00               	movlw	0
  6179  000A66  2048               	addwfc	(xtoa@c+1)^0,w,c
  6180  000A68  6E48               	movwf	(xtoa@c+1)^0,c
  6181  000A6A                     l839:
  6182  000A6A  0EBF               	movlw	191
  6183  000A6C  6E2D               	movwf	??_xtoa^0,c
  6184  000A6E  0EFF               	movlw	255
  6185  000A70  6E2E               	movwf	(??_xtoa+1)^0,c
  6186  000A72  502C               	movf	xtoa@x^0,w,c
  6187  000A74  6E2F               	movwf	(??_xtoa+2)^0,c
  6188  000A76  6A30               	clrf	(??_xtoa+3)^0,c
  6189  000A78  502D               	movf	??_xtoa^0,w,c
  6190  000A7A  262F               	addwf	(??_xtoa+2)^0,f,c
  6191  000A7C  502E               	movf	(??_xtoa+1)^0,w,c
  6192  000A7E  2230               	addwfc	(??_xtoa+3)^0,f,c
  6193  000A80  5030               	movf	(??_xtoa+3)^0,w,c
  6194  000A82  E10A               	bnz	u4850
  6195  000A84  0E1A               	movlw	26
  6196  000A86  5C2F               	subwf	(??_xtoa+2)^0,w,c
  6197  000A88  A0D8               	btfss	status,0,c
  6198  000A8A  EF49  F005         	goto	u4851
  6199  000A8E  EF4C  F005         	goto	u4850
  6200  000A92                     u4851:
  6201  000A92  0E01               	movlw	1
  6202  000A94  EF4D  F005         	goto	u4860
  6203  000A98                     u4850:
  6204  000A98  0E00               	movlw	0
  6205  000A9A                     u4860:
  6206  000A9A  6E35               	movwf	_xtoa$1341^0,c
  6207  000A9C  6A36               	clrf	(_xtoa$1341+1)^0,c
  6208  000A9E  5035               	movf	_xtoa$1341^0,w,c
  6209  000AA0  1036               	iorwf	(_xtoa$1341+1)^0,w,c
  6210  000AA2  B4D8               	btfsc	status,2,c
  6211  000AA4  EF56  F005         	goto	u4871
  6212  000AA8  EF58  F005         	goto	u4870
  6213  000AAC                     u4871:
  6214  000AAC  EF88  F005         	goto	l4854
  6215  000AB0                     u4870:
  6216  000AB0  0E9F               	movlw	159
  6217  000AB2  6E2D               	movwf	??_xtoa^0,c
  6218  000AB4  0EFF               	movlw	255
  6219  000AB6  6E2E               	movwf	(??_xtoa+1)^0,c
  6220  000AB8  0E20               	movlw	32
  6221  000ABA  1047               	iorwf	xtoa@c^0,w,c
  6222  000ABC  6E2F               	movwf	(??_xtoa+2)^0,c
  6223  000ABE  0E00               	movlw	0
  6224  000AC0  1048               	iorwf	(xtoa@c+1)^0,w,c
  6225  000AC2  6E30               	movwf	(??_xtoa+3)^0,c
  6226  000AC4  502D               	movf	??_xtoa^0,w,c
  6227  000AC6  262F               	addwf	(??_xtoa+2)^0,f,c
  6228  000AC8  502E               	movf	(??_xtoa+1)^0,w,c
  6229  000ACA  2230               	addwfc	(??_xtoa+3)^0,f,c
  6230  000ACC  5030               	movf	(??_xtoa+3)^0,w,c
  6231  000ACE  E10A               	bnz	u4880
  6232  000AD0  0E1A               	movlw	26
  6233  000AD2  5C2F               	subwf	(??_xtoa+2)^0,w,c
  6234  000AD4  A0D8               	btfss	status,0,c
  6235  000AD6  EF6F  F005         	goto	u4881
  6236  000ADA  EF72  F005         	goto	u4880
  6237  000ADE                     u4881:
  6238  000ADE  0E01               	movlw	1
  6239  000AE0  EF73  F005         	goto	u4890
  6240  000AE4                     u4880:
  6241  000AE4  0E00               	movlw	0
  6242  000AE6                     u4890:
  6243  000AE6  6E37               	movwf	_xtoa$1342^0,c
  6244  000AE8  6A38               	clrf	(_xtoa$1342+1)^0,c
  6245  000AEA  5037               	movf	_xtoa$1342^0,w,c
  6246  000AEC  1038               	iorwf	(_xtoa$1342+1)^0,w,c
  6247  000AEE  B4D8               	btfsc	status,2,c
  6248  000AF0  EF7C  F005         	goto	u4901
  6249  000AF4  EF7E  F005         	goto	u4900
  6250  000AF8                     u4901:
  6251  000AF8  EF88  F005         	goto	l4854
  6252  000AFC                     u4900:
  6253  000AFC                     
  6254                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  6255  000AFC  C047  F00B         	movff	xtoa@c,toupper@c
  6256  000B00  C048  F00C         	movff	xtoa@c+1,toupper@c+1
  6257  000B04  ECE7  F011         	call	_toupper	;wreg free
  6258  000B08  C00B  F047         	movff	?_toupper,xtoa@c
  6259  000B0C  C00C  F048         	movff	?_toupper+1,xtoa@c+1
  6260  000B10                     l4854:
  6261                           
  6262                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  6263  000B10  0E84               	movlw	low _dbuf
  6264  000B12  2445               	addwf	xtoa@i^0,w,c
  6265  000B14  6ED9               	movwf	fsr2l,c
  6266  000B16  0E01               	movlw	high _dbuf
  6267  000B18  2046               	addwfc	(xtoa@i+1)^0,w,c
  6268  000B1A  6EDA               	movwf	fsr2h,c
  6269  000B1C  C047  FFDF         	movff	xtoa@c,indf2
  6270  000B20                     
  6271                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  6272  000B20  0639               	decf	xtoa@p^0,f,c
  6273  000B22  A0D8               	btfss	status,0,c
  6274  000B24  063A               	decf	(xtoa@p+1)^0,f,c
  6275  000B26                     
  6276                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  6277  000B26  063B               	decf	xtoa@w^0,f,c
  6278  000B28  A0D8               	btfss	status,0,c
  6279  000B2A  063C               	decf	(xtoa@w+1)^0,f,c
  6280  000B2C                     
  6281                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  6282  000B2C  C03D  F02D         	movff	xtoa@n,??_xtoa
  6283  000B30  C03E  F02E         	movff	xtoa@n+1,??_xtoa+1
  6284  000B34  C03F  F02F         	movff	xtoa@n+2,??_xtoa+2
  6285  000B38  C040  F030         	movff	xtoa@n+3,??_xtoa+3
  6286  000B3C  C041  F031         	movff	xtoa@n+4,??_xtoa+4
  6287  000B40  C042  F032         	movff	xtoa@n+5,??_xtoa+5
  6288  000B44  C043  F033         	movff	xtoa@n+6,??_xtoa+6
  6289  000B48  C044  F034         	movff	xtoa@n+7,??_xtoa+7
  6290  000B4C  0E05               	movlw	5
  6291  000B4E  EFB2  F005         	goto	u4910
  6292  000B52                     u4915:
  6293  000B52  90D8               	bcf	status,0,c
  6294  000B54  3234               	rrcf	(??_xtoa+7)^0,f,c
  6295  000B56  3233               	rrcf	(??_xtoa+6)^0,f,c
  6296  000B58  3232               	rrcf	(??_xtoa+5)^0,f,c
  6297  000B5A  3231               	rrcf	(??_xtoa+4)^0,f,c
  6298  000B5C  3230               	rrcf	(??_xtoa+3)^0,f,c
  6299  000B5E  322F               	rrcf	(??_xtoa+2)^0,f,c
  6300  000B60  322E               	rrcf	(??_xtoa+1)^0,f,c
  6301  000B62  322D               	rrcf	??_xtoa^0,f,c
  6302  000B64                     u4910:
  6303  000B64  2EE8               	decfsz	wreg,f,c
  6304  000B66  EFA9  F005         	goto	u4915
  6305  000B6A  C02D  F03D         	movff	??_xtoa,xtoa@n
  6306  000B6E  C02E  F03E         	movff	??_xtoa+1,xtoa@n+1
  6307  000B72  C02F  F03F         	movff	??_xtoa+2,xtoa@n+2
  6308  000B76  C030  F040         	movff	??_xtoa+3,xtoa@n+3
  6309  000B7A  C031  F041         	movff	??_xtoa+4,xtoa@n+4
  6310  000B7E  C032  F042         	movff	??_xtoa+5,xtoa@n+5
  6311  000B82  C033  F043         	movff	??_xtoa+6,xtoa@n+6
  6312  000B86  C034  F044         	movff	??_xtoa+7,xtoa@n+7
  6313  000B8A                     l4862:
  6314                           
  6315                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6316  000B8A  BE46               	btfsc	(xtoa@i+1)^0,7,c
  6317  000B8C  EFD1  F005         	goto	u4921
  6318  000B90  5046               	movf	(xtoa@i+1)^0,w,c
  6319  000B92  E109               	bnz	u4920
  6320  000B94  0E02               	movlw	2
  6321  000B96  5C45               	subwf	xtoa@i^0,w,c
  6322  000B98  A0D8               	btfss	status,0,c
  6323  000B9A  EFD1  F005         	goto	u4921
  6324  000B9E  EFD3  F005         	goto	u4920
  6325  000BA2                     u4921:
  6326  000BA2  EF03  F006         	goto	l853
  6327  000BA6                     u4920:
  6328  000BA6  503D               	movf	xtoa@n^0,w,c
  6329  000BA8  103E               	iorwf	(xtoa@n+1)^0,w,c
  6330  000BAA  103F               	iorwf	(xtoa@n+2)^0,w,c
  6331  000BAC  1040               	iorwf	(xtoa@n+3)^0,w,c
  6332  000BAE  1041               	iorwf	(xtoa@n+4)^0,w,c
  6333  000BB0  1042               	iorwf	(xtoa@n+5)^0,w,c
  6334  000BB2  1043               	iorwf	(xtoa@n+6)^0,w,c
  6335  000BB4  1044               	iorwf	(xtoa@n+7)^0,w,c
  6336  000BB6  A4D8               	btfss	status,2,c
  6337  000BB8  EFE0  F005         	goto	u4931
  6338  000BBC  EFE2  F005         	goto	u4930
  6339  000BC0                     u4931:
  6340  000BC0  EF12  F005         	goto	l4832
  6341  000BC4                     u4930:
  6342  000BC4  BE3A               	btfsc	(xtoa@p+1)^0,7,c
  6343  000BC6  EFEF  F005         	goto	u4940
  6344  000BCA  503A               	movf	(xtoa@p+1)^0,w,c
  6345  000BCC  E106               	bnz	u4941
  6346  000BCE  0439               	decf	xtoa@p^0,w,c
  6347  000BD0  B0D8               	btfsc	status,0,c
  6348  000BD2  EFED  F005         	goto	u4941
  6349  000BD6  EFEF  F005         	goto	u4940
  6350  000BDA                     u4941:
  6351  000BDA  EF12  F005         	goto	l4832
  6352  000BDE                     u4940:
  6353  000BDE  BE3C               	btfsc	(xtoa@w+1)^0,7,c
  6354  000BE0  EFFA  F005         	goto	u4951
  6355  000BE4  503C               	movf	(xtoa@w+1)^0,w,c
  6356  000BE6  E108               	bnz	u4950
  6357  000BE8  043B               	decf	xtoa@w^0,w,c
  6358  000BEA  A0D8               	btfss	status,0,c
  6359  000BEC  EFFA  F005         	goto	u4951
  6360  000BF0  EFFC  F005         	goto	u4950
  6361  000BF4                     u4951:
  6362  000BF4  EF03  F006         	goto	l853
  6363  000BF8                     u4950:
  6364  000BF8  B256               	btfsc	_flags^0,1,c
  6365  000BFA  EF01  F006         	goto	u4961
  6366  000BFE  EF03  F006         	goto	u4960
  6367  000C02                     u4961:
  6368  000C02  EF12  F005         	goto	l4832
  6369  000C06                     u4960:
  6370  000C06                     l853:
  6371                           
  6372                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  6373  000C06  A856               	btfss	_flags^0,4,c
  6374  000C08  EF08  F006         	goto	u4971
  6375  000C0C  EF0A  F006         	goto	u4970
  6376  000C10                     u4971:
  6377  000C10  EF20  F006         	goto	l4878
  6378  000C14                     u4970:
  6379  000C14                     
  6380                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  6381  000C14  0645               	decf	xtoa@i^0,f,c
  6382  000C16  A0D8               	btfss	status,0,c
  6383  000C18  0646               	decf	(xtoa@i+1)^0,f,c
  6384  000C1A                     
  6385                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  6386  000C1A  0E84               	movlw	low _dbuf
  6387  000C1C  2445               	addwf	xtoa@i^0,w,c
  6388  000C1E  6ED9               	movwf	fsr2l,c
  6389  000C20  0E01               	movlw	high _dbuf
  6390  000C22  2046               	addwfc	(xtoa@i+1)^0,w,c
  6391  000C24  6EDA               	movwf	fsr2h,c
  6392  000C26  C02C  FFDF         	movff	xtoa@x,indf2
  6393  000C2A                     
  6394                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  6395  000C2A  0645               	decf	xtoa@i^0,f,c
  6396  000C2C  A0D8               	btfss	status,0,c
  6397  000C2E  0646               	decf	(xtoa@i+1)^0,f,c
  6398                           
  6399                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  6400  000C30  0E84               	movlw	low _dbuf
  6401  000C32  2445               	addwf	xtoa@i^0,w,c
  6402  000C34  6ED9               	movwf	fsr2l,c
  6403  000C36  0E01               	movlw	high _dbuf
  6404  000C38  2046               	addwfc	(xtoa@i+1)^0,w,c
  6405  000C3A  6EDA               	movwf	fsr2h,c
  6406  000C3C  0E30               	movlw	48
  6407  000C3E  6EDF               	movwf	indf2,c
  6408  000C40                     l4878:
  6409                           
  6410                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  6411  000C40  C022  F017         	movff	xtoa@fp,pad@fp
  6412  000C44  C023  F018         	movff	xtoa@fp+1,pad@fp+1
  6413  000C48  0E84               	movlw	low _dbuf
  6414  000C4A  2445               	addwf	xtoa@i^0,w,c
  6415  000C4C  6E19               	movwf	pad@buf^0,c
  6416  000C4E  0E01               	movlw	high _dbuf
  6417  000C50  2046               	addwfc	(xtoa@i+1)^0,w,c
  6418  000C52  6E1A               	movwf	(pad@buf+1)^0,c
  6419  000C54  C03B  F01B         	movff	xtoa@w,pad@p
  6420  000C58  C03C  F01C         	movff	xtoa@w+1,pad@p+1
  6421  000C5C  EC7E  F00D         	call	_pad	;wreg free
  6422  000C60  C017  F022         	movff	?_pad,?_xtoa
  6423  000C64  C018  F023         	movff	?_pad+1,?_xtoa+1
  6424  000C68  0012               	return		;funcret
  6425  000C6A                     __end_of_xtoa:
  6426                           	opt callstack 0
  6427                           
  6428 ;; *************** function _toupper *****************
  6429 ;; Defined at:
  6430 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
  6431 ;; Parameters:    Size  Location     Type
  6432 ;;  c               2   10[COMRAM] int 
  6433 ;; Auto vars:     Size  Location     Type
  6434 ;;		None
  6435 ;; Return value:  Size  Location     Type
  6436 ;;                  2   10[COMRAM] int 
  6437 ;; Registers used:
  6438 ;;		wreg, status,2, status,0
  6439 ;; Tracked objects:
  6440 ;;		On entry : 0/0
  6441 ;;		On exit  : 0/0
  6442 ;;		Unchanged: 0/0
  6443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6444 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6445 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6446 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6447 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6448 ;;Total ram usage:        8 bytes
  6449 ;; Hardware stack levels used:    1
  6450 ;; Hardware stack levels required when called:    5
  6451 ;; This function calls:
  6452 ;;		_islower
  6453 ;; This function is called by:
  6454 ;;		_xtoa
  6455 ;; This function uses a non-reentrant model
  6456 ;;
  6457                           
  6458                           	psect	text39
  6459  0023CE                     __ptext39:
  6460                           	opt callstack 0
  6461  0023CE                     _toupper:
  6462                           	opt callstack 21
  6463  0023CE  0E9F               	movlw	159
  6464  0023D0  6E0D               	movwf	??_toupper^0,c
  6465  0023D2  0EFF               	movlw	255
  6466  0023D4  6E0E               	movwf	(??_toupper+1)^0,c
  6467  0023D6  C00B  F00F         	movff	toupper@c,??_toupper+2
  6468  0023DA  C00C  F010         	movff	toupper@c+1,??_toupper+3
  6469  0023DE  500D               	movf	??_toupper^0,w,c
  6470  0023E0  260F               	addwf	(??_toupper+2)^0,f,c
  6471  0023E2  500E               	movf	(??_toupper+1)^0,w,c
  6472  0023E4  2210               	addwfc	(??_toupper+3)^0,f,c
  6473  0023E6  5010               	movf	(??_toupper+3)^0,w,c
  6474  0023E8  E10A               	bnz	u4220
  6475  0023EA  0E1A               	movlw	26
  6476  0023EC  5C0F               	subwf	(??_toupper+2)^0,w,c
  6477  0023EE  A0D8               	btfss	status,0,c
  6478  0023F0  EFFC  F011         	goto	u4221
  6479  0023F4  EFFF  F011         	goto	u4220
  6480  0023F8                     u4221:
  6481  0023F8  0E01               	movlw	1
  6482  0023FA  EF00  F012         	goto	u4230
  6483  0023FE                     u4220:
  6484  0023FE  0E00               	movlw	0
  6485  002400                     u4230:
  6486  002400  6E11               	movwf	_toupper$1907^0,c
  6487  002402  6A12               	clrf	(_toupper$1907+1)^0,c
  6488  002404  5011               	movf	_toupper$1907^0,w,c
  6489  002406  1012               	iorwf	(_toupper$1907+1)^0,w,c
  6490  002408  B4D8               	btfsc	status,2,c
  6491  00240A  EF09  F012         	goto	u4241
  6492  00240E  EF0B  F012         	goto	u4240
  6493  002412                     u4241:
  6494  002412  EF11  F012         	goto	l1672
  6495  002416                     u4240:
  6496  002416  0E5F               	movlw	95
  6497  002418  140B               	andwf	toupper@c^0,w,c
  6498  00241A  6E0B               	movwf	?_toupper^0,c
  6499  00241C  6A0C               	clrf	(?_toupper+1)^0,c
  6500  00241E  EF15  F012         	goto	l1677
  6501  002422                     l1672:
  6502  002422  C00B  F00B         	movff	toupper@c,?_toupper
  6503  002426  C00C  F00C         	movff	toupper@c+1,?_toupper+1
  6504  00242A                     l1677:
  6505  00242A  0012               	return		;funcret
  6506  00242C                     __end_of_toupper:
  6507                           	opt callstack 0
  6508                           
  6509 ;; *************** function _islower *****************
  6510 ;; Defined at:
  6511 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
  6512 ;; Parameters:    Size  Location     Type
  6513 ;;  c               2    4[COMRAM] int 
  6514 ;; Auto vars:     Size  Location     Type
  6515 ;;		None
  6516 ;; Return value:  Size  Location     Type
  6517 ;;                  2    4[COMRAM] int 
  6518 ;; Registers used:
  6519 ;;		wreg, status,2, status,0
  6520 ;; Tracked objects:
  6521 ;;		On entry : 0/0
  6522 ;;		On exit  : 0/0
  6523 ;;		Unchanged: 0/0
  6524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6525 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6527 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6528 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6529 ;;Total ram usage:        6 bytes
  6530 ;; Hardware stack levels used:    1
  6531 ;; Hardware stack levels required when called:    4
  6532 ;; This function calls:
  6533 ;;		Nothing
  6534 ;; This function is called by:
  6535 ;;		_toupper
  6536 ;; This function uses a non-reentrant model
  6537 ;;
  6538                           
  6539                           	psect	text40
  6540  0027A8                     __ptext40:
  6541                           	opt callstack 0
  6542  0027A8                     _islower:
  6543                           	opt callstack 21
  6544  0027A8  0E9F               	movlw	159
  6545  0027AA  6E07               	movwf	??_islower^0,c
  6546  0027AC  0EFF               	movlw	255
  6547  0027AE  6E08               	movwf	(??_islower+1)^0,c
  6548  0027B0  C005  F009         	movff	islower@c,??_islower+2
  6549  0027B4  C006  F00A         	movff	islower@c+1,??_islower+3
  6550  0027B8  5007               	movf	??_islower^0,w,c
  6551  0027BA  2609               	addwf	(??_islower+2)^0,f,c
  6552  0027BC  5008               	movf	(??_islower+1)^0,w,c
  6553  0027BE  220A               	addwfc	(??_islower+3)^0,f,c
  6554  0027C0  500A               	movf	(??_islower+3)^0,w,c
  6555  0027C2  E10A               	bnz	u4110
  6556  0027C4  0E1A               	movlw	26
  6557  0027C6  5C09               	subwf	(??_islower+2)^0,w,c
  6558  0027C8  A0D8               	btfss	status,0,c
  6559  0027CA  EFE9  F013         	goto	u4111
  6560  0027CE  EFEC  F013         	goto	u4110
  6561  0027D2                     u4111:
  6562  0027D2  0E01               	movlw	1
  6563  0027D4  EFED  F013         	goto	u4120
  6564  0027D8                     u4110:
  6565  0027D8  0E00               	movlw	0
  6566  0027DA                     u4120:
  6567  0027DA  6E05               	movwf	?_islower^0,c
  6568  0027DC  6A06               	clrf	(?_islower+1)^0,c
  6569  0027DE  0012               	return		;funcret
  6570  0027E0                     __end_of_islower:
  6571                           	opt callstack 0
  6572                           
  6573 ;; *************** function _isupper *****************
  6574 ;; Defined at:
  6575 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  6576 ;; Parameters:    Size  Location     Type
  6577 ;;  c               2    4[COMRAM] int 
  6578 ;; Auto vars:     Size  Location     Type
  6579 ;;		None
  6580 ;; Return value:  Size  Location     Type
  6581 ;;                  2    4[COMRAM] int 
  6582 ;; Registers used:
  6583 ;;		wreg, status,2, status,0
  6584 ;; Tracked objects:
  6585 ;;		On entry : 0/0
  6586 ;;		On exit  : 0/0
  6587 ;;		Unchanged: 0/0
  6588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6589 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6591 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6592 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6593 ;;Total ram usage:        6 bytes
  6594 ;; Hardware stack levels used:    1
  6595 ;; Hardware stack levels required when called:    4
  6596 ;; This function calls:
  6597 ;;		Nothing
  6598 ;; This function is called by:
  6599 ;;		_xtoa
  6600 ;; This function uses a non-reentrant model
  6601 ;;
  6602                           
  6603                           	psect	text41
  6604  0027E0                     __ptext41:
  6605                           	opt callstack 0
  6606  0027E0                     _isupper:
  6607                           	opt callstack 22
  6608  0027E0  0EBF               	movlw	191
  6609  0027E2  6E07               	movwf	??_isupper^0,c
  6610  0027E4  0EFF               	movlw	255
  6611  0027E6  6E08               	movwf	(??_isupper+1)^0,c
  6612  0027E8  C005  F009         	movff	isupper@c,??_isupper+2
  6613  0027EC  C006  F00A         	movff	isupper@c+1,??_isupper+3
  6614  0027F0  5007               	movf	??_isupper^0,w,c
  6615  0027F2  2609               	addwf	(??_isupper+2)^0,f,c
  6616  0027F4  5008               	movf	(??_isupper+1)^0,w,c
  6617  0027F6  220A               	addwfc	(??_isupper+3)^0,f,c
  6618  0027F8  500A               	movf	(??_isupper+3)^0,w,c
  6619  0027FA  E10A               	bnz	u4180
  6620  0027FC  0E1A               	movlw	26
  6621  0027FE  5C09               	subwf	(??_isupper+2)^0,w,c
  6622  002800  A0D8               	btfss	status,0,c
  6623  002802  EF05  F014         	goto	u4181
  6624  002806  EF08  F014         	goto	u4180
  6625  00280A                     u4181:
  6626  00280A  0E01               	movlw	1
  6627  00280C  EF09  F014         	goto	u4190
  6628  002810                     u4180:
  6629  002810  0E00               	movlw	0
  6630  002812                     u4190:
  6631  002812  6E05               	movwf	?_isupper^0,c
  6632  002814  6A06               	clrf	(?_isupper+1)^0,c
  6633  002816  0012               	return		;funcret
  6634  002818                     __end_of_isupper:
  6635                           	opt callstack 0
  6636                           
  6637 ;; *************** function _isalpha *****************
  6638 ;; Defined at:
  6639 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
  6640 ;; Parameters:    Size  Location     Type
  6641 ;;  c               2    4[COMRAM] int 
  6642 ;; Auto vars:     Size  Location     Type
  6643 ;;		None
  6644 ;; Return value:  Size  Location     Type
  6645 ;;                  2    4[COMRAM] int 
  6646 ;; Registers used:
  6647 ;;		wreg, status,2, status,0
  6648 ;; Tracked objects:
  6649 ;;		On entry : 0/0
  6650 ;;		On exit  : 0/0
  6651 ;;		Unchanged: 0/0
  6652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6653 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6655 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6656 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6657 ;;Total ram usage:        6 bytes
  6658 ;; Hardware stack levels used:    1
  6659 ;; Hardware stack levels required when called:    4
  6660 ;; This function calls:
  6661 ;;		Nothing
  6662 ;; This function is called by:
  6663 ;;		_xtoa
  6664 ;; This function uses a non-reentrant model
  6665 ;;
  6666                           
  6667                           	psect	text42
  6668  00276C                     __ptext42:
  6669                           	opt callstack 0
  6670  00276C                     _isalpha:
  6671                           	opt callstack 22
  6672  00276C  0E9F               	movlw	159
  6673  00276E  6E07               	movwf	??_isalpha^0,c
  6674  002770  0EFF               	movlw	255
  6675  002772  6E08               	movwf	(??_isalpha+1)^0,c
  6676  002774  0E20               	movlw	32
  6677  002776  1005               	iorwf	isalpha@c^0,w,c
  6678  002778  6E09               	movwf	(??_isalpha+2)^0,c
  6679  00277A  0E00               	movlw	0
  6680  00277C  1006               	iorwf	(isalpha@c+1)^0,w,c
  6681  00277E  6E0A               	movwf	(??_isalpha+3)^0,c
  6682  002780  5007               	movf	??_isalpha^0,w,c
  6683  002782  2609               	addwf	(??_isalpha+2)^0,f,c
  6684  002784  5008               	movf	(??_isalpha+1)^0,w,c
  6685  002786  220A               	addwfc	(??_isalpha+3)^0,f,c
  6686  002788  500A               	movf	(??_isalpha+3)^0,w,c
  6687  00278A  E10A               	bnz	u4200
  6688  00278C  0E1A               	movlw	26
  6689  00278E  5C09               	subwf	(??_isalpha+2)^0,w,c
  6690  002790  A0D8               	btfss	status,0,c
  6691  002792  EFCD  F013         	goto	u4201
  6692  002796  EFD0  F013         	goto	u4200
  6693  00279A                     u4201:
  6694  00279A  0E01               	movlw	1
  6695  00279C  EFD1  F013         	goto	u4210
  6696  0027A0                     u4200:
  6697  0027A0  0E00               	movlw	0
  6698  0027A2                     u4210:
  6699  0027A2  6E05               	movwf	?_isalpha^0,c
  6700  0027A4  6A06               	clrf	(?_isalpha+1)^0,c
  6701  0027A6  0012               	return		;funcret
  6702  0027A8                     __end_of_isalpha:
  6703                           	opt callstack 0
  6704                           
  6705 ;; *************** function _utoa *****************
  6706 ;; Defined at:
  6707 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6708 ;; Parameters:    Size  Location     Type
  6709 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  6710 ;;		 -> NULL(0), 
  6711 ;;  d               8   35[COMRAM] unsigned long long 
  6712 ;; Auto vars:     Size  Location     Type
  6713 ;;  n               8   55[COMRAM] unsigned long long 
  6714 ;;  i               2   63[COMRAM] int 
  6715 ;;  w               2   53[COMRAM] int 
  6716 ;;  p               2   51[COMRAM] int 
  6717 ;; Return value:  Size  Location     Type
  6718 ;;                  2   33[COMRAM] int 
  6719 ;; Registers used:
  6720 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6721 ;; Tracked objects:
  6722 ;;		On entry : 0/0
  6723 ;;		On exit  : 0/0
  6724 ;;		Unchanged: 0/0
  6725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6726 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6727 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6728 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6729 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6730 ;;Total ram usage:       32 bytes
  6731 ;; Hardware stack levels used:    1
  6732 ;; Hardware stack levels required when called:    9
  6733 ;; This function calls:
  6734 ;;		___lodiv
  6735 ;;		___lomod
  6736 ;;		_pad
  6737 ;; This function is called by:
  6738 ;;		_vfpfcnvrt
  6739 ;; This function uses a non-reentrant model
  6740 ;;
  6741                           
  6742                           	psect	text43
  6743  000C6A                     __ptext43:
  6744                           	opt callstack 0
  6745  000C6A                     _utoa:
  6746                           	opt callstack 18
  6747  000C6A                     
  6748                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  6749  000C6A  0100               	movlb	0	; () banked
  6750  000C6C  BF8D               	btfsc	(_prec+1)& (0+255),7,b
  6751  000C6E  EF3B  F006         	goto	u4741
  6752  000C72  EF3D  F006         	goto	u4740
  6753  000C76                     u4741:
  6754  000C76  EF3E  F006         	goto	l4784
  6755  000C7A                     u4740:
  6756  000C7A                     
  6757                           ; BSR set to: 0
  6758                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  6759  000C7A  9256               	bcf	_flags^0,1,c
  6760  000C7C                     l4784:
  6761                           
  6762                           ; BSR set to: 0
  6763                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  6764  000C7C  BF8D               	btfsc	(_prec+1)& (0+255),7,b
  6765  000C7E  EF4B  F006         	goto	u4750
  6766  000C82  518D               	movf	(_prec+1)& (0+255),w,b
  6767  000C84  E106               	bnz	u4751
  6768  000C86  058C               	decf	_prec& (0+255),w,b
  6769  000C88  B0D8               	btfsc	status,0,c
  6770  000C8A  EF49  F006         	goto	u4751
  6771  000C8E  EF4B  F006         	goto	u4750
  6772  000C92                     u4751:
  6773  000C92  EF51  F006         	goto	l815
  6774  000C96                     u4750:
  6775  000C96                     
  6776                           ; BSR set to: 0
  6777  000C96  0E00               	movlw	0
  6778  000C98  6E35               	movwf	(utoa@p+1)^0,c
  6779  000C9A  0E01               	movlw	1
  6780  000C9C  6E34               	movwf	utoa@p^0,c
  6781  000C9E  EF55  F006         	goto	l817
  6782  000CA2                     l815:
  6783                           
  6784                           ; BSR set to: 0
  6785  000CA2  C08C  F034         	movff	_prec,utoa@p
  6786  000CA6  C08D  F035         	movff	_prec+1,utoa@p+1
  6787  000CAA                     l817:
  6788                           
  6789                           ; BSR set to: 0
  6790                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  6791  000CAA  C08A  F036         	movff	_width,utoa@w
  6792  000CAE  C08B  F037         	movff	_width+1,utoa@w+1
  6793                           
  6794                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  6795  000CB2  C024  F038         	movff	utoa@d,utoa@n
  6796  000CB6  C025  F039         	movff	utoa@d+1,utoa@n+1
  6797  000CBA  C026  F03A         	movff	utoa@d+2,utoa@n+2
  6798  000CBE  C027  F03B         	movff	utoa@d+3,utoa@n+3
  6799  000CC2  C028  F03C         	movff	utoa@d+4,utoa@n+4
  6800  000CC6  C029  F03D         	movff	utoa@d+5,utoa@n+5
  6801  000CCA  C02A  F03E         	movff	utoa@d+6,utoa@n+6
  6802  000CCE  C02B  F03F         	movff	utoa@d+7,utoa@n+7
  6803  000CD2                     
  6804                           ; BSR set to: 0
  6805                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  6806  000CD2  0E00               	movlw	0
  6807  000CD4  6E41               	movwf	(utoa@i+1)^0,c
  6808  000CD6  0E1F               	movlw	31
  6809  000CD8  6E40               	movwf	utoa@i^0,c
  6810  000CDA                     
  6811                           ; BSR set to: 0
  6812                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  6813  000CDA  0E00               	movlw	0
  6814  000CDC  0101               	movlb	1	; () banked
  6815  000CDE  6FA3               	movwf	(_dbuf+31)& (0+255),b
  6816                           
  6817                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6818  000CE0  EFE8  F006         	goto	l4802
  6819  000CE4                     l4792:
  6820                           
  6821                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  6822  000CE4  0640               	decf	utoa@i^0,f,c
  6823  000CE6  A0D8               	btfss	status,0,c
  6824  000CE8  0641               	decf	(utoa@i+1)^0,f,c
  6825  000CEA                     
  6826                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  6827  000CEA  0E84               	movlw	low _dbuf
  6828  000CEC  2440               	addwf	utoa@i^0,w,c
  6829  000CEE  6ED9               	movwf	fsr2l,c
  6830  000CF0  0E01               	movlw	high _dbuf
  6831  000CF2  2041               	addwfc	(utoa@i+1)^0,w,c
  6832  000CF4  6EDA               	movwf	fsr2h,c
  6833  000CF6  C038  F005         	movff	utoa@n,___lomod@dividend
  6834  000CFA  C039  F006         	movff	utoa@n+1,___lomod@dividend+1
  6835  000CFE  C03A  F007         	movff	utoa@n+2,___lomod@dividend+2
  6836  000D02  C03B  F008         	movff	utoa@n+3,___lomod@dividend+3
  6837  000D06  C03C  F009         	movff	utoa@n+4,___lomod@dividend+4
  6838  000D0A  C03D  F00A         	movff	utoa@n+5,___lomod@dividend+5
  6839  000D0E  C03E  F00B         	movff	utoa@n+6,___lomod@dividend+6
  6840  000D12  C03F  F00C         	movff	utoa@n+7,___lomod@dividend+7
  6841  000D16  0E0A               	movlw	10
  6842  000D18  6E0D               	movwf	___lomod@divisor^0,c
  6843  000D1A  0E00               	movlw	0
  6844  000D1C  6E0E               	movwf	(___lomod@divisor+1)^0,c
  6845  000D1E  0E00               	movlw	0
  6846  000D20  6E0F               	movwf	(___lomod@divisor+2)^0,c
  6847  000D22  0E00               	movlw	0
  6848  000D24  6E10               	movwf	(___lomod@divisor+3)^0,c
  6849  000D26  0E00               	movlw	0
  6850  000D28  6E11               	movwf	(___lomod@divisor+4)^0,c
  6851  000D2A  0E00               	movlw	0
  6852  000D2C  6E12               	movwf	(___lomod@divisor+5)^0,c
  6853  000D2E  0E00               	movlw	0
  6854  000D30  6E13               	movwf	(___lomod@divisor+6)^0,c
  6855  000D32  0E00               	movlw	0
  6856  000D34  6E14               	movwf	(___lomod@divisor+7)^0,c
  6857  000D36  ECB5  F00C         	call	___lomod	;wreg free
  6858  000D3A  C005  F02C         	movff	?___lomod,??_utoa
  6859  000D3E  C006  F02D         	movff	?___lomod+1,??_utoa+1
  6860  000D42  C007  F02E         	movff	?___lomod+2,??_utoa+2
  6861  000D46  C008  F02F         	movff	?___lomod+3,??_utoa+3
  6862  000D4A  C009  F030         	movff	?___lomod+4,??_utoa+4
  6863  000D4E  C00A  F031         	movff	?___lomod+5,??_utoa+5
  6864  000D52  C00B  F032         	movff	?___lomod+6,??_utoa+6
  6865  000D56  C00C  F033         	movff	?___lomod+7,??_utoa+7
  6866  000D5A  502C               	movf	??_utoa^0,w,c
  6867  000D5C  0F30               	addlw	48
  6868  000D5E  6EDF               	movwf	indf2,c
  6869  000D60                     
  6870                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  6871  000D60  0634               	decf	utoa@p^0,f,c
  6872  000D62  A0D8               	btfss	status,0,c
  6873  000D64  0635               	decf	(utoa@p+1)^0,f,c
  6874  000D66                     
  6875                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  6876  000D66  0636               	decf	utoa@w^0,f,c
  6877  000D68  A0D8               	btfss	status,0,c
  6878  000D6A  0637               	decf	(utoa@w+1)^0,f,c
  6879  000D6C                     
  6880                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  6881  000D6C  C038  F005         	movff	utoa@n,___lodiv@dividend
  6882  000D70  C039  F006         	movff	utoa@n+1,___lodiv@dividend+1
  6883  000D74  C03A  F007         	movff	utoa@n+2,___lodiv@dividend+2
  6884  000D78  C03B  F008         	movff	utoa@n+3,___lodiv@dividend+3
  6885  000D7C  C03C  F009         	movff	utoa@n+4,___lodiv@dividend+4
  6886  000D80  C03D  F00A         	movff	utoa@n+5,___lodiv@dividend+5
  6887  000D84  C03E  F00B         	movff	utoa@n+6,___lodiv@dividend+6
  6888  000D88  C03F  F00C         	movff	utoa@n+7,___lodiv@dividend+7
  6889  000D8C  0E0A               	movlw	10
  6890  000D8E  6E0D               	movwf	___lodiv@divisor^0,c
  6891  000D90  0E00               	movlw	0
  6892  000D92  6E0E               	movwf	(___lodiv@divisor+1)^0,c
  6893  000D94  0E00               	movlw	0
  6894  000D96  6E0F               	movwf	(___lodiv@divisor+2)^0,c
  6895  000D98  0E00               	movlw	0
  6896  000D9A  6E10               	movwf	(___lodiv@divisor+3)^0,c
  6897  000D9C  0E00               	movlw	0
  6898  000D9E  6E11               	movwf	(___lodiv@divisor+4)^0,c
  6899  000DA0  0E00               	movlw	0
  6900  000DA2  6E12               	movwf	(___lodiv@divisor+5)^0,c
  6901  000DA4  0E00               	movlw	0
  6902  000DA6  6E13               	movwf	(___lodiv@divisor+6)^0,c
  6903  000DA8  0E00               	movlw	0
  6904  000DAA  6E14               	movwf	(___lodiv@divisor+7)^0,c
  6905  000DAC  EC3D  F00C         	call	___lodiv	;wreg free
  6906  000DB0  C005  F038         	movff	?___lodiv,utoa@n
  6907  000DB4  C006  F039         	movff	?___lodiv+1,utoa@n+1
  6908  000DB8  C007  F03A         	movff	?___lodiv+2,utoa@n+2
  6909  000DBC  C008  F03B         	movff	?___lodiv+3,utoa@n+3
  6910  000DC0  C009  F03C         	movff	?___lodiv+4,utoa@n+4
  6911  000DC4  C00A  F03D         	movff	?___lodiv+5,utoa@n+5
  6912  000DC8  C00B  F03E         	movff	?___lodiv+6,utoa@n+6
  6913  000DCC  C00C  F03F         	movff	?___lodiv+7,utoa@n+7
  6914  000DD0                     l4802:
  6915                           
  6916                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6917  000DD0  5040               	movf	utoa@i^0,w,c
  6918  000DD2  1041               	iorwf	(utoa@i+1)^0,w,c
  6919  000DD4  B4D8               	btfsc	status,2,c
  6920  000DD6  EFEF  F006         	goto	u4761
  6921  000DDA  EFF1  F006         	goto	u4760
  6922  000DDE                     u4761:
  6923  000DDE  EF21  F007         	goto	l4812
  6924  000DE2                     u4760:
  6925  000DE2  5038               	movf	utoa@n^0,w,c
  6926  000DE4  1039               	iorwf	(utoa@n+1)^0,w,c
  6927  000DE6  103A               	iorwf	(utoa@n+2)^0,w,c
  6928  000DE8  103B               	iorwf	(utoa@n+3)^0,w,c
  6929  000DEA  103C               	iorwf	(utoa@n+4)^0,w,c
  6930  000DEC  103D               	iorwf	(utoa@n+5)^0,w,c
  6931  000DEE  103E               	iorwf	(utoa@n+6)^0,w,c
  6932  000DF0  103F               	iorwf	(utoa@n+7)^0,w,c
  6933  000DF2  A4D8               	btfss	status,2,c
  6934  000DF4  EFFE  F006         	goto	u4771
  6935  000DF8  EF00  F007         	goto	u4770
  6936  000DFC                     u4771:
  6937  000DFC  EF72  F006         	goto	l4792
  6938  000E00                     u4770:
  6939  000E00  BE35               	btfsc	(utoa@p+1)^0,7,c
  6940  000E02  EF0D  F007         	goto	u4780
  6941  000E06  5035               	movf	(utoa@p+1)^0,w,c
  6942  000E08  E106               	bnz	u4781
  6943  000E0A  0434               	decf	utoa@p^0,w,c
  6944  000E0C  B0D8               	btfsc	status,0,c
  6945  000E0E  EF0B  F007         	goto	u4781
  6946  000E12  EF0D  F007         	goto	u4780
  6947  000E16                     u4781:
  6948  000E16  EF72  F006         	goto	l4792
  6949  000E1A                     u4780:
  6950  000E1A  BE37               	btfsc	(utoa@w+1)^0,7,c
  6951  000E1C  EF18  F007         	goto	u4791
  6952  000E20  5037               	movf	(utoa@w+1)^0,w,c
  6953  000E22  E108               	bnz	u4790
  6954  000E24  0436               	decf	utoa@w^0,w,c
  6955  000E26  A0D8               	btfss	status,0,c
  6956  000E28  EF18  F007         	goto	u4791
  6957  000E2C  EF1A  F007         	goto	u4790
  6958  000E30                     u4791:
  6959  000E30  EF21  F007         	goto	l4812
  6960  000E34                     u4790:
  6961  000E34  B256               	btfsc	_flags^0,1,c
  6962  000E36  EF1F  F007         	goto	u4801
  6963  000E3A  EF21  F007         	goto	u4800
  6964  000E3E                     u4801:
  6965  000E3E  EF72  F006         	goto	l4792
  6966  000E42                     u4800:
  6967  000E42                     l4812:
  6968                           
  6969                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  6970  000E42  C022  F017         	movff	utoa@fp,pad@fp
  6971  000E46  C023  F018         	movff	utoa@fp+1,pad@fp+1
  6972  000E4A  0E84               	movlw	low _dbuf
  6973  000E4C  2440               	addwf	utoa@i^0,w,c
  6974  000E4E  6E19               	movwf	pad@buf^0,c
  6975  000E50  0E01               	movlw	high _dbuf
  6976  000E52  2041               	addwfc	(utoa@i+1)^0,w,c
  6977  000E54  6E1A               	movwf	(pad@buf+1)^0,c
  6978  000E56  C036  F01B         	movff	utoa@w,pad@p
  6979  000E5A  C037  F01C         	movff	utoa@w+1,pad@p+1
  6980  000E5E  EC7E  F00D         	call	_pad	;wreg free
  6981  000E62  C017  F022         	movff	?_pad,?_utoa
  6982  000E66  C018  F023         	movff	?_pad+1,?_utoa+1
  6983  000E6A  0012               	return		;funcret
  6984  000E6C                     __end_of_utoa:
  6985                           	opt callstack 0
  6986                           
  6987 ;; *************** function ___lomod *****************
  6988 ;; Defined at:
  6989 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
  6990 ;; Parameters:    Size  Location     Type
  6991 ;;  dividend        8    4[COMRAM] unsigned long long 
  6992 ;;  divisor         8   12[COMRAM] unsigned long long 
  6993 ;; Auto vars:     Size  Location     Type
  6994 ;;  counter         1   20[COMRAM] unsigned char 
  6995 ;; Return value:  Size  Location     Type
  6996 ;;                  8    4[COMRAM] unsigned long long 
  6997 ;; Registers used:
  6998 ;;		wreg, status,2, status,0
  6999 ;; Tracked objects:
  7000 ;;		On entry : 0/0
  7001 ;;		On exit  : 0/0
  7002 ;;		Unchanged: 0/0
  7003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7004 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7005 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7007 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7008 ;;Total ram usage:       17 bytes
  7009 ;; Hardware stack levels used:    1
  7010 ;; Hardware stack levels required when called:    4
  7011 ;; This function calls:
  7012 ;;		Nothing
  7013 ;; This function is called by:
  7014 ;;		_utoa
  7015 ;; This function uses a non-reentrant model
  7016 ;;
  7017                           
  7018                           	psect	text44
  7019  00196A                     __ptext44:
  7020                           	opt callstack 0
  7021  00196A                     ___lomod:
  7022                           	opt callstack 22
  7023  00196A  500D               	movf	___lomod@divisor^0,w,c
  7024  00196C  100E               	iorwf	(___lomod@divisor+1)^0,w,c
  7025  00196E  100F               	iorwf	(___lomod@divisor+2)^0,w,c
  7026  001970  1010               	iorwf	(___lomod@divisor+3)^0,w,c
  7027  001972  1011               	iorwf	(___lomod@divisor+4)^0,w,c
  7028  001974  1012               	iorwf	(___lomod@divisor+5)^0,w,c
  7029  001976  1013               	iorwf	(___lomod@divisor+6)^0,w,c
  7030  001978  1014               	iorwf	(___lomod@divisor+7)^0,w,c
  7031  00197A  B4D8               	btfsc	status,2,c
  7032  00197C  EFC2  F00C         	goto	u4441
  7033  001980  EFC4  F00C         	goto	u4440
  7034  001984                     u4441:
  7035  001984  EF0C  F00D         	goto	l1347
  7036  001988                     u4440:
  7037  001988  0E01               	movlw	1
  7038  00198A  6E15               	movwf	___lomod@counter^0,c
  7039  00198C  EFD2  F00C         	goto	l4654
  7040  001990                     l4652:
  7041  001990  90D8               	bcf	status,0,c
  7042  001992  360D               	rlcf	___lomod@divisor^0,f,c
  7043  001994  360E               	rlcf	(___lomod@divisor+1)^0,f,c
  7044  001996  360F               	rlcf	(___lomod@divisor+2)^0,f,c
  7045  001998  3610               	rlcf	(___lomod@divisor+3)^0,f,c
  7046  00199A  3611               	rlcf	(___lomod@divisor+4)^0,f,c
  7047  00199C  3612               	rlcf	(___lomod@divisor+5)^0,f,c
  7048  00199E  3613               	rlcf	(___lomod@divisor+6)^0,f,c
  7049  0019A0  3614               	rlcf	(___lomod@divisor+7)^0,f,c
  7050  0019A2  2A15               	incf	___lomod@counter^0,f,c
  7051  0019A4                     l4654:
  7052  0019A4  AE14               	btfss	(___lomod@divisor+7)^0,7,c
  7053  0019A6  EFD7  F00C         	goto	u4451
  7054  0019AA  EFD9  F00C         	goto	u4450
  7055  0019AE                     u4451:
  7056  0019AE  EFC8  F00C         	goto	l4652
  7057  0019B2                     u4450:
  7058  0019B2                     l4656:
  7059  0019B2  500D               	movf	___lomod@divisor^0,w,c
  7060  0019B4  5C05               	subwf	___lomod@dividend^0,w,c
  7061  0019B6  500E               	movf	(___lomod@divisor+1)^0,w,c
  7062  0019B8  5806               	subwfb	(___lomod@dividend+1)^0,w,c
  7063  0019BA  500F               	movf	(___lomod@divisor+2)^0,w,c
  7064  0019BC  5807               	subwfb	(___lomod@dividend+2)^0,w,c
  7065  0019BE  5010               	movf	(___lomod@divisor+3)^0,w,c
  7066  0019C0  5808               	subwfb	(___lomod@dividend+3)^0,w,c
  7067  0019C2  5011               	movf	(___lomod@divisor+4)^0,w,c
  7068  0019C4  5809               	subwfb	(___lomod@dividend+4)^0,w,c
  7069  0019C6  5012               	movf	(___lomod@divisor+5)^0,w,c
  7070  0019C8  580A               	subwfb	(___lomod@dividend+5)^0,w,c
  7071  0019CA  5013               	movf	(___lomod@divisor+6)^0,w,c
  7072  0019CC  580B               	subwfb	(___lomod@dividend+6)^0,w,c
  7073  0019CE  5014               	movf	(___lomod@divisor+7)^0,w,c
  7074  0019D0  580C               	subwfb	(___lomod@dividend+7)^0,w,c
  7075  0019D2  A0D8               	btfss	status,0,c
  7076  0019D4  EFEE  F00C         	goto	u4461
  7077  0019D8  EFF0  F00C         	goto	u4460
  7078  0019DC                     u4461:
  7079  0019DC  EF00  F00D         	goto	l4660
  7080  0019E0                     u4460:
  7081  0019E0  500D               	movf	___lomod@divisor^0,w,c
  7082  0019E2  5E05               	subwf	___lomod@dividend^0,f,c
  7083  0019E4  500E               	movf	(___lomod@divisor+1)^0,w,c
  7084  0019E6  5A06               	subwfb	(___lomod@dividend+1)^0,f,c
  7085  0019E8  500F               	movf	(___lomod@divisor+2)^0,w,c
  7086  0019EA  5A07               	subwfb	(___lomod@dividend+2)^0,f,c
  7087  0019EC  5010               	movf	(___lomod@divisor+3)^0,w,c
  7088  0019EE  5A08               	subwfb	(___lomod@dividend+3)^0,f,c
  7089  0019F0  5011               	movf	(___lomod@divisor+4)^0,w,c
  7090  0019F2  5A09               	subwfb	(___lomod@dividend+4)^0,f,c
  7091  0019F4  5012               	movf	(___lomod@divisor+5)^0,w,c
  7092  0019F6  5A0A               	subwfb	(___lomod@dividend+5)^0,f,c
  7093  0019F8  5013               	movf	(___lomod@divisor+6)^0,w,c
  7094  0019FA  5A0B               	subwfb	(___lomod@dividend+6)^0,f,c
  7095  0019FC  5014               	movf	(___lomod@divisor+7)^0,w,c
  7096  0019FE  5A0C               	subwfb	(___lomod@dividend+7)^0,f,c
  7097  001A00                     l4660:
  7098  001A00  90D8               	bcf	status,0,c
  7099  001A02  3214               	rrcf	(___lomod@divisor+7)^0,f,c
  7100  001A04  3213               	rrcf	(___lomod@divisor+6)^0,f,c
  7101  001A06  3212               	rrcf	(___lomod@divisor+5)^0,f,c
  7102  001A08  3211               	rrcf	(___lomod@divisor+4)^0,f,c
  7103  001A0A  3210               	rrcf	(___lomod@divisor+3)^0,f,c
  7104  001A0C  320F               	rrcf	(___lomod@divisor+2)^0,f,c
  7105  001A0E  320E               	rrcf	(___lomod@divisor+1)^0,f,c
  7106  001A10  320D               	rrcf	___lomod@divisor^0,f,c
  7107  001A12  2E15               	decfsz	___lomod@counter^0,f,c
  7108  001A14  EFD9  F00C         	goto	l4656
  7109  001A18                     l1347:
  7110  001A18  C005  F005         	movff	___lomod@dividend,?___lomod
  7111  001A1C  C006  F006         	movff	___lomod@dividend+1,?___lomod+1
  7112  001A20  C007  F007         	movff	___lomod@dividend+2,?___lomod+2
  7113  001A24  C008  F008         	movff	___lomod@dividend+3,?___lomod+3
  7114  001A28  C009  F009         	movff	___lomod@dividend+4,?___lomod+4
  7115  001A2C  C00A  F00A         	movff	___lomod@dividend+5,?___lomod+5
  7116  001A30  C00B  F00B         	movff	___lomod@dividend+6,?___lomod+6
  7117  001A34  C00C  F00C         	movff	___lomod@dividend+7,?___lomod+7
  7118  001A38  0012               	return		;funcret
  7119  001A3A                     __end_of___lomod:
  7120                           	opt callstack 0
  7121                           
  7122 ;; *************** function ___lodiv *****************
  7123 ;; Defined at:
  7124 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
  7125 ;; Parameters:    Size  Location     Type
  7126 ;;  dividend        8    4[COMRAM] unsigned long long 
  7127 ;;  divisor         8   12[COMRAM] unsigned long long 
  7128 ;; Auto vars:     Size  Location     Type
  7129 ;;  quotient        8   20[COMRAM] unsigned long long 
  7130 ;;  counter         1   28[COMRAM] unsigned char 
  7131 ;; Return value:  Size  Location     Type
  7132 ;;                  8    4[COMRAM] unsigned long long 
  7133 ;; Registers used:
  7134 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7135 ;; Tracked objects:
  7136 ;;		On entry : 0/0
  7137 ;;		On exit  : 0/0
  7138 ;;		Unchanged: 0/0
  7139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7140 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7141 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7143 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7144 ;;Total ram usage:       25 bytes
  7145 ;; Hardware stack levels used:    1
  7146 ;; Hardware stack levels required when called:    4
  7147 ;; This function calls:
  7148 ;;		Nothing
  7149 ;; This function is called by:
  7150 ;;		_utoa
  7151 ;; This function uses a non-reentrant model
  7152 ;;
  7153                           
  7154                           	psect	text45
  7155  00187A                     __ptext45:
  7156                           	opt callstack 0
  7157  00187A                     ___lodiv:
  7158                           	opt callstack 22
  7159  00187A  EE20  F015         	lfsr	2,___lodiv@quotient
  7160  00187E  0E07               	movlw	7
  7161  001880                     u4401:
  7162  001880  6ADE               	clrf	postinc2,c
  7163  001882  06E8               	decf	wreg,f,c
  7164  001884  E2FD               	bc	u4401
  7165  001886  500D               	movf	___lodiv@divisor^0,w,c
  7166  001888  100E               	iorwf	(___lodiv@divisor+1)^0,w,c
  7167  00188A  100F               	iorwf	(___lodiv@divisor+2)^0,w,c
  7168  00188C  1010               	iorwf	(___lodiv@divisor+3)^0,w,c
  7169  00188E  1011               	iorwf	(___lodiv@divisor+4)^0,w,c
  7170  001890  1012               	iorwf	(___lodiv@divisor+5)^0,w,c
  7171  001892  1013               	iorwf	(___lodiv@divisor+6)^0,w,c
  7172  001894  1014               	iorwf	(___lodiv@divisor+7)^0,w,c
  7173  001896  B4D8               	btfsc	status,2,c
  7174  001898  EF50  F00C         	goto	u4411
  7175  00189C  EF52  F00C         	goto	u4410
  7176  0018A0                     u4411:
  7177  0018A0  EFA4  F00C         	goto	l1337
  7178  0018A4                     u4410:
  7179  0018A4  0E01               	movlw	1
  7180  0018A6  6E1D               	movwf	___lodiv@counter^0,c
  7181  0018A8  EF60  F00C         	goto	l4634
  7182  0018AC                     l4632:
  7183  0018AC  90D8               	bcf	status,0,c
  7184  0018AE  360D               	rlcf	___lodiv@divisor^0,f,c
  7185  0018B0  360E               	rlcf	(___lodiv@divisor+1)^0,f,c
  7186  0018B2  360F               	rlcf	(___lodiv@divisor+2)^0,f,c
  7187  0018B4  3610               	rlcf	(___lodiv@divisor+3)^0,f,c
  7188  0018B6  3611               	rlcf	(___lodiv@divisor+4)^0,f,c
  7189  0018B8  3612               	rlcf	(___lodiv@divisor+5)^0,f,c
  7190  0018BA  3613               	rlcf	(___lodiv@divisor+6)^0,f,c
  7191  0018BC  3614               	rlcf	(___lodiv@divisor+7)^0,f,c
  7192  0018BE  2A1D               	incf	___lodiv@counter^0,f,c
  7193  0018C0                     l4634:
  7194  0018C0  AE14               	btfss	(___lodiv@divisor+7)^0,7,c
  7195  0018C2  EF65  F00C         	goto	u4421
  7196  0018C6  EF67  F00C         	goto	u4420
  7197  0018CA                     u4421:
  7198  0018CA  EF56  F00C         	goto	l4632
  7199  0018CE                     u4420:
  7200  0018CE                     l4636:
  7201  0018CE  90D8               	bcf	status,0,c
  7202  0018D0  3615               	rlcf	___lodiv@quotient^0,f,c
  7203  0018D2  3616               	rlcf	(___lodiv@quotient+1)^0,f,c
  7204  0018D4  3617               	rlcf	(___lodiv@quotient+2)^0,f,c
  7205  0018D6  3618               	rlcf	(___lodiv@quotient+3)^0,f,c
  7206  0018D8  3619               	rlcf	(___lodiv@quotient+4)^0,f,c
  7207  0018DA  361A               	rlcf	(___lodiv@quotient+5)^0,f,c
  7208  0018DC  361B               	rlcf	(___lodiv@quotient+6)^0,f,c
  7209  0018DE  361C               	rlcf	(___lodiv@quotient+7)^0,f,c
  7210  0018E0  500D               	movf	___lodiv@divisor^0,w,c
  7211  0018E2  5C05               	subwf	___lodiv@dividend^0,w,c
  7212  0018E4  500E               	movf	(___lodiv@divisor+1)^0,w,c
  7213  0018E6  5806               	subwfb	(___lodiv@dividend+1)^0,w,c
  7214  0018E8  500F               	movf	(___lodiv@divisor+2)^0,w,c
  7215  0018EA  5807               	subwfb	(___lodiv@dividend+2)^0,w,c
  7216  0018EC  5010               	movf	(___lodiv@divisor+3)^0,w,c
  7217  0018EE  5808               	subwfb	(___lodiv@dividend+3)^0,w,c
  7218  0018F0  5011               	movf	(___lodiv@divisor+4)^0,w,c
  7219  0018F2  5809               	subwfb	(___lodiv@dividend+4)^0,w,c
  7220  0018F4  5012               	movf	(___lodiv@divisor+5)^0,w,c
  7221  0018F6  580A               	subwfb	(___lodiv@dividend+5)^0,w,c
  7222  0018F8  5013               	movf	(___lodiv@divisor+6)^0,w,c
  7223  0018FA  580B               	subwfb	(___lodiv@dividend+6)^0,w,c
  7224  0018FC  5014               	movf	(___lodiv@divisor+7)^0,w,c
  7225  0018FE  580C               	subwfb	(___lodiv@dividend+7)^0,w,c
  7226  001900  A0D8               	btfss	status,0,c
  7227  001902  EF85  F00C         	goto	u4431
  7228  001906  EF87  F00C         	goto	u4430
  7229  00190A                     u4431:
  7230  00190A  EF98  F00C         	goto	l4644
  7231  00190E                     u4430:
  7232  00190E  500D               	movf	___lodiv@divisor^0,w,c
  7233  001910  5E05               	subwf	___lodiv@dividend^0,f,c
  7234  001912  500E               	movf	(___lodiv@divisor+1)^0,w,c
  7235  001914  5A06               	subwfb	(___lodiv@dividend+1)^0,f,c
  7236  001916  500F               	movf	(___lodiv@divisor+2)^0,w,c
  7237  001918  5A07               	subwfb	(___lodiv@dividend+2)^0,f,c
  7238  00191A  5010               	movf	(___lodiv@divisor+3)^0,w,c
  7239  00191C  5A08               	subwfb	(___lodiv@dividend+3)^0,f,c
  7240  00191E  5011               	movf	(___lodiv@divisor+4)^0,w,c
  7241  001920  5A09               	subwfb	(___lodiv@dividend+4)^0,f,c
  7242  001922  5012               	movf	(___lodiv@divisor+5)^0,w,c
  7243  001924  5A0A               	subwfb	(___lodiv@dividend+5)^0,f,c
  7244  001926  5013               	movf	(___lodiv@divisor+6)^0,w,c
  7245  001928  5A0B               	subwfb	(___lodiv@dividend+6)^0,f,c
  7246  00192A  5014               	movf	(___lodiv@divisor+7)^0,w,c
  7247  00192C  5A0C               	subwfb	(___lodiv@dividend+7)^0,f,c
  7248  00192E  8015               	bsf	___lodiv@quotient^0,0,c
  7249  001930                     l4644:
  7250  001930  90D8               	bcf	status,0,c
  7251  001932  3214               	rrcf	(___lodiv@divisor+7)^0,f,c
  7252  001934  3213               	rrcf	(___lodiv@divisor+6)^0,f,c
  7253  001936  3212               	rrcf	(___lodiv@divisor+5)^0,f,c
  7254  001938  3211               	rrcf	(___lodiv@divisor+4)^0,f,c
  7255  00193A  3210               	rrcf	(___lodiv@divisor+3)^0,f,c
  7256  00193C  320F               	rrcf	(___lodiv@divisor+2)^0,f,c
  7257  00193E  320E               	rrcf	(___lodiv@divisor+1)^0,f,c
  7258  001940  320D               	rrcf	___lodiv@divisor^0,f,c
  7259  001942  2E1D               	decfsz	___lodiv@counter^0,f,c
  7260  001944  EF67  F00C         	goto	l4636
  7261  001948                     l1337:
  7262  001948  C015  F005         	movff	___lodiv@quotient,?___lodiv
  7263  00194C  C016  F006         	movff	___lodiv@quotient+1,?___lodiv+1
  7264  001950  C017  F007         	movff	___lodiv@quotient+2,?___lodiv+2
  7265  001954  C018  F008         	movff	___lodiv@quotient+3,?___lodiv+3
  7266  001958  C019  F009         	movff	___lodiv@quotient+4,?___lodiv+4
  7267  00195C  C01A  F00A         	movff	___lodiv@quotient+5,?___lodiv+5
  7268  001960  C01B  F00B         	movff	___lodiv@quotient+6,?___lodiv+6
  7269  001964  C01C  F00C         	movff	___lodiv@quotient+7,?___lodiv+7
  7270  001968  0012               	return		;funcret
  7271  00196A                     __end_of___lodiv:
  7272                           	opt callstack 0
  7273                           
  7274 ;; *************** function _stoa *****************
  7275 ;; Defined at:
  7276 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7277 ;; Parameters:    Size  Location     Type
  7278 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  7279 ;;		 -> NULL(0), 
  7280 ;;  s               2   17[COMRAM] PTR unsigned char 
  7281 ;;		 -> ?_printf(2), STR_5(9), STR_4(12), 
  7282 ;; Auto vars:     Size  Location     Type
  7283 ;;  nuls            7   20[COMRAM] unsigned char [7]
  7284 ;;  l               2   35[COMRAM] int 
  7285 ;;  p               2   33[COMRAM] int 
  7286 ;;  cp              2   31[COMRAM] PTR unsigned char 
  7287 ;;		 -> ?_printf(2), stoa@nuls(7), STR_5(9), STR_4(12), 
  7288 ;;  w               2   29[COMRAM] int 
  7289 ;;  i               2   27[COMRAM] int 
  7290 ;; Return value:  Size  Location     Type
  7291 ;;                  2   15[COMRAM] int 
  7292 ;; Registers used:
  7293 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7294 ;; Tracked objects:
  7295 ;;		On entry : 0/0
  7296 ;;		On exit  : 0/0
  7297 ;;		Unchanged: 0/0
  7298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7299 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7300 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7301 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7302 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7303 ;;Total ram usage:       22 bytes
  7304 ;; Hardware stack levels used:    1
  7305 ;; Hardware stack levels required when called:    7
  7306 ;; This function calls:
  7307 ;;		_fputc
  7308 ;;		_strlen
  7309 ;; This function is called by:
  7310 ;;		_vfpfcnvrt
  7311 ;; This function uses a non-reentrant model
  7312 ;;
  7313                           
  7314                           	psect	text46
  7315  000E6C                     __ptext46:
  7316                           	opt callstack 0
  7317  000E6C                     _stoa:
  7318                           	opt callstack 20
  7319  000E6C                     
  7320                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  7321  000E6C  EE20  F0F5         	lfsr	2,stoa@F1139
  7322  000E70  EE10  F015         	lfsr	1,stoa@nuls
  7323  000E74  0E06               	movlw	6
  7324  000E76                     u4641:
  7325  000E76  CFDB FFE3          	movff	plusw2,plusw1
  7326  000E7A  06E8               	decf	wreg,f,c
  7327  000E7C  E2FC               	bc	u4641
  7328  000E7E                     
  7329                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  7330  000E7E  C012  F020         	movff	stoa@s,stoa@cp
  7331  000E82  C013  F021         	movff	stoa@s+1,stoa@cp+1
  7332  000E86                     
  7333                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  7334  000E86  5020               	movf	stoa@cp^0,w,c
  7335  000E88  1021               	iorwf	(stoa@cp+1)^0,w,c
  7336  000E8A  A4D8               	btfss	status,2,c
  7337  000E8C  EF4A  F007         	goto	u4651
  7338  000E90  EF4C  F007         	goto	u4650
  7339  000E94                     u4651:
  7340  000E94  EF50  F007         	goto	l4746
  7341  000E98                     u4650:
  7342  000E98                     
  7343                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  7344  000E98  0E15               	movlw	low stoa@nuls
  7345  000E9A  6E20               	movwf	stoa@cp^0,c
  7346  000E9C  0E00               	movlw	high stoa@nuls
  7347  000E9E  6E21               	movwf	(stoa@cp+1)^0,c
  7348  000EA0                     l4746:
  7349                           
  7350                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  7351  000EA0  C020  F005         	movff	stoa@cp,strlen@s
  7352  000EA4  C021  F006         	movff	stoa@cp+1,strlen@s+1
  7353  000EA8  EC9A  F012         	call	_strlen	;wreg free
  7354  000EAC  C005  F024         	movff	?_strlen,stoa@l
  7355  000EB0  C006  F025         	movff	?_strlen+1,stoa@l+1
  7356  000EB4                     
  7357                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  7358  000EB4  C08C  F022         	movff	_prec,stoa@p
  7359  000EB8  C08D  F023         	movff	_prec+1,stoa@p+1
  7360  000EBC                     
  7361                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  7362  000EBC  BE23               	btfsc	(stoa@p+1)^0,7,c
  7363  000EBE  EF63  F007         	goto	u4661
  7364  000EC2  EF65  F007         	goto	u4660
  7365  000EC6                     u4661:
  7366  000EC6  EF7A  F007         	goto	l796
  7367  000ECA                     u4660:
  7368  000ECA  5024               	movf	stoa@l^0,w,c
  7369  000ECC  5C22               	subwf	stoa@p^0,w,c
  7370  000ECE  5023               	movf	(stoa@p+1)^0,w,c
  7371  000ED0  0A80               	xorlw	128
  7372  000ED2  6E14               	movwf	??_stoa^0,c
  7373  000ED4  5025               	movf	(stoa@l+1)^0,w,c
  7374  000ED6  0A80               	xorlw	128
  7375  000ED8  5814               	subwfb	??_stoa^0,w,c
  7376  000EDA  A0D8               	btfss	status,0,c
  7377  000EDC  EF72  F007         	goto	u4671
  7378  000EE0  EF74  F007         	goto	u4670
  7379  000EE4                     u4671:
  7380  000EE4  EF76  F007         	goto	l794
  7381  000EE8                     u4670:
  7382  000EE8  EF7A  F007         	goto	l796
  7383  000EEC                     l794:
  7384  000EEC  C022  F024         	movff	stoa@p,stoa@l
  7385  000EF0  C023  F025         	movff	stoa@p+1,stoa@l+1
  7386  000EF4                     l796:
  7387                           
  7388                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  7389  000EF4  C024  F022         	movff	stoa@l,stoa@p
  7390  000EF8  C025  F023         	movff	stoa@l+1,stoa@p+1
  7391                           
  7392                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  7393  000EFC  C08A  F01E         	movff	_width,stoa@w
  7394  000F00  C08B  F01F         	movff	_width+1,stoa@w+1
  7395                           
  7396                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  7397  000F04  B056               	btfsc	_flags^0,0,c
  7398  000F06  EF87  F007         	goto	u4681
  7399  000F0A  EF89  F007         	goto	u4680
  7400  000F0E                     u4681:
  7401  000F0E  EFA6  F007         	goto	l4762
  7402  000F12                     u4680:
  7403  000F12  EF97  F007         	goto	l4760
  7404  000F16                     l4756:
  7405                           
  7406                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  7407  000F16  0E00               	movlw	0
  7408  000F18  6E08               	movwf	(fputc@c+1)^0,c
  7409  000F1A  0E20               	movlw	32
  7410  000F1C  6E07               	movwf	fputc@c^0,c
  7411  000F1E  C010  F009         	movff	stoa@fp,fputc@fp
  7412  000F22  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  7413  000F26  EC49  F00F         	call	_fputc	;wreg free
  7414  000F2A                     
  7415                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  7416  000F2A  4A24               	infsnz	stoa@l^0,f,c
  7417  000F2C  2A25               	incf	(stoa@l+1)^0,f,c
  7418  000F2E                     l4760:
  7419                           
  7420                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  7421  000F2E  501E               	movf	stoa@w^0,w,c
  7422  000F30  5C24               	subwf	stoa@l^0,w,c
  7423  000F32  5025               	movf	(stoa@l+1)^0,w,c
  7424  000F34  0A80               	xorlw	128
  7425  000F36  6E14               	movwf	??_stoa^0,c
  7426  000F38  501F               	movf	(stoa@w+1)^0,w,c
  7427  000F3A  0A80               	xorlw	128
  7428  000F3C  5814               	subwfb	??_stoa^0,w,c
  7429  000F3E  A0D8               	btfss	status,0,c
  7430  000F40  EFA4  F007         	goto	u4691
  7431  000F44  EFA6  F007         	goto	u4690
  7432  000F48                     u4691:
  7433  000F48  EF8B  F007         	goto	l4756
  7434  000F4C                     u4690:
  7435  000F4C                     l4762:
  7436                           
  7437                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  7438  000F4C  0E00               	movlw	0
  7439  000F4E  6E1D               	movwf	(stoa@i+1)^0,c
  7440  000F50  0E00               	movlw	0
  7441  000F52  6E1C               	movwf	stoa@i^0,c
  7442                           
  7443                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  7444  000F54  EFCB  F007         	goto	l4770
  7445  000F58                     l4764:
  7446                           
  7447                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  7448  000F58  C020  FFF6         	movff	stoa@cp,tblptrl
  7449  000F5C  C021  FFF7         	movff	stoa@cp+1,tblptrh
  7450  000F60  0E00               	movlw	low (__mediumconst shr (0+16))
  7451  000F62  6EF8               	movwf	tblptru,c
  7452  000F64  0E0E               	movlw	(high __ramtop+-1)
  7453  000F66  64F7               	cpfsgt	tblptrh,c
  7454  000F68  D003               	bra	u4707
  7455  000F6A  0008               	tblrd		*
  7456  000F6C  50F5               	movf	tablat,w,c
  7457  000F6E  D005               	bra	u4700
  7458  000F70                     u4707:
  7459  000F70  CFF6 FFE9          	movff	tblptrl,fsr0l
  7460  000F74  CFF7 FFEA          	movff	tblptrh,fsr0h
  7461  000F78  50EF               	movf	indf0,w,c
  7462  000F7A                     u4700:
  7463  000F7A  6E14               	movwf	??_stoa^0,c
  7464  000F7C  5014               	movf	??_stoa^0,w,c
  7465  000F7E  6E07               	movwf	fputc@c^0,c
  7466  000F80  6A08               	clrf	(fputc@c+1)^0,c
  7467  000F82  C010  F009         	movff	stoa@fp,fputc@fp
  7468  000F86  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  7469  000F8A  EC49  F00F         	call	_fputc	;wreg free
  7470  000F8E                     
  7471                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  7472  000F8E  4A20               	infsnz	stoa@cp^0,f,c
  7473  000F90  2A21               	incf	(stoa@cp+1)^0,f,c
  7474  000F92                     
  7475                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  7476  000F92  4A1C               	infsnz	stoa@i^0,f,c
  7477  000F94  2A1D               	incf	(stoa@i+1)^0,f,c
  7478  000F96                     l4770:
  7479                           
  7480                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  7481  000F96  5022               	movf	stoa@p^0,w,c
  7482  000F98  5C1C               	subwf	stoa@i^0,w,c
  7483  000F9A  501D               	movf	(stoa@i+1)^0,w,c
  7484  000F9C  0A80               	xorlw	128
  7485  000F9E  6E14               	movwf	??_stoa^0,c
  7486  000FA0  5023               	movf	(stoa@p+1)^0,w,c
  7487  000FA2  0A80               	xorlw	128
  7488  000FA4  5814               	subwfb	??_stoa^0,w,c
  7489  000FA6  A0D8               	btfss	status,0,c
  7490  000FA8  EFD8  F007         	goto	u4711
  7491  000FAC  EFDA  F007         	goto	u4710
  7492  000FB0                     u4711:
  7493  000FB0  EFAC  F007         	goto	l4764
  7494  000FB4                     u4710:
  7495  000FB4                     
  7496                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  7497  000FB4  A056               	btfss	_flags^0,0,c
  7498  000FB6  EFDF  F007         	goto	u4721
  7499  000FBA  EFE1  F007         	goto	u4720
  7500  000FBE                     u4721:
  7501  000FBE  EFFE  F007         	goto	l806
  7502  000FC2                     u4720:
  7503  000FC2  EFEF  F007         	goto	l4778
  7504  000FC6                     l4774:
  7505                           
  7506                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  7507  000FC6  0E00               	movlw	0
  7508  000FC8  6E08               	movwf	(fputc@c+1)^0,c
  7509  000FCA  0E20               	movlw	32
  7510  000FCC  6E07               	movwf	fputc@c^0,c
  7511  000FCE  C010  F009         	movff	stoa@fp,fputc@fp
  7512  000FD2  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  7513  000FD6  EC49  F00F         	call	_fputc	;wreg free
  7514  000FDA                     
  7515                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  7516  000FDA  4A24               	infsnz	stoa@l^0,f,c
  7517  000FDC  2A25               	incf	(stoa@l+1)^0,f,c
  7518  000FDE                     l4778:
  7519                           
  7520                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  7521  000FDE  501E               	movf	stoa@w^0,w,c
  7522  000FE0  5C24               	subwf	stoa@l^0,w,c
  7523  000FE2  5025               	movf	(stoa@l+1)^0,w,c
  7524  000FE4  0A80               	xorlw	128
  7525  000FE6  6E14               	movwf	??_stoa^0,c
  7526  000FE8  501F               	movf	(stoa@w+1)^0,w,c
  7527  000FEA  0A80               	xorlw	128
  7528  000FEC  5814               	subwfb	??_stoa^0,w,c
  7529  000FEE  A0D8               	btfss	status,0,c
  7530  000FF0  EFFC  F007         	goto	u4731
  7531  000FF4  EFFE  F007         	goto	u4730
  7532  000FF8                     u4731:
  7533  000FF8  EFE3  F007         	goto	l4774
  7534  000FFC                     u4730:
  7535  000FFC                     l806:
  7536                           
  7537                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  7538  000FFC  C024  F010         	movff	stoa@l,?_stoa
  7539  001000  C025  F011         	movff	stoa@l+1,?_stoa+1
  7540  001004  0012               	return		;funcret
  7541  001006                     __end_of_stoa:
  7542                           	opt callstack 0
  7543                           
  7544 ;; *************** function _dtoa *****************
  7545 ;; Defined at:
  7546 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7547 ;; Parameters:    Size  Location     Type
  7548 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  7549 ;;		 -> NULL(0), 
  7550 ;;  d               8   35[COMRAM] long long 
  7551 ;; Auto vars:     Size  Location     Type
  7552 ;;  n               8   59[COMRAM] long long 
  7553 ;;  i               2   67[COMRAM] int 
  7554 ;;  s               2   57[COMRAM] int 
  7555 ;;  w               2   55[COMRAM] int 
  7556 ;;  p               2   53[COMRAM] int 
  7557 ;; Return value:  Size  Location     Type
  7558 ;;                  2   33[COMRAM] int 
  7559 ;; Registers used:
  7560 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7561 ;; Tracked objects:
  7562 ;;		On entry : 0/0
  7563 ;;		On exit  : 0/0
  7564 ;;		Unchanged: 0/0
  7565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7566 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7567 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7568 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7569 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7570 ;;Total ram usage:       36 bytes
  7571 ;; Hardware stack levels used:    1
  7572 ;; Hardware stack levels required when called:    9
  7573 ;; This function calls:
  7574 ;;		___aodiv
  7575 ;;		___aomod
  7576 ;;		_abs
  7577 ;;		_pad
  7578 ;; This function is called by:
  7579 ;;		_vfpfcnvrt
  7580 ;; This function uses a non-reentrant model
  7581 ;;
  7582                           
  7583                           	psect	text47
  7584  0006B4                     __ptext47:
  7585                           	opt callstack 0
  7586  0006B4                     _dtoa:
  7587                           	opt callstack 18
  7588  0006B4                     
  7589                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  7590  0006B4  C024  F03C         	movff	dtoa@d,dtoa@n
  7591  0006B8  C025  F03D         	movff	dtoa@d+1,dtoa@n+1
  7592  0006BC  C026  F03E         	movff	dtoa@d+2,dtoa@n+2
  7593  0006C0  C027  F03F         	movff	dtoa@d+3,dtoa@n+3
  7594  0006C4  C028  F040         	movff	dtoa@d+4,dtoa@n+4
  7595  0006C8  C029  F041         	movff	dtoa@d+5,dtoa@n+5
  7596  0006CC  C02A  F042         	movff	dtoa@d+6,dtoa@n+6
  7597  0006D0  C02B  F043         	movff	dtoa@d+7,dtoa@n+7
  7598  0006D4                     
  7599                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  7600  0006D4  BE43               	btfsc	(dtoa@n+7)^0,7,c
  7601  0006D6  EF6F  F003         	goto	u4491
  7602  0006DA  EF72  F003         	goto	u4490
  7603  0006DE                     u4491:
  7604  0006DE  0E01               	movlw	1
  7605  0006E0  EF73  F003         	goto	u4500
  7606  0006E4                     u4490:
  7607  0006E4  0E00               	movlw	0
  7608  0006E6                     u4500:
  7609  0006E6  6E3A               	movwf	dtoa@s^0,c
  7610  0006E8  6A3B               	clrf	(dtoa@s+1)^0,c
  7611                           
  7612                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  7613  0006EA  503A               	movf	dtoa@s^0,w,c
  7614  0006EC  103B               	iorwf	(dtoa@s+1)^0,w,c
  7615  0006EE  B4D8               	btfsc	status,2,c
  7616  0006F0  EF7C  F003         	goto	u4511
  7617  0006F4  EF7E  F003         	goto	u4510
  7618  0006F8                     u4511:
  7619  0006F8  EF8E  F003         	goto	l4682
  7620  0006FC                     u4510:
  7621  0006FC                     
  7622                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  7623  0006FC  1E43               	comf	(dtoa@n+7)^0,f,c
  7624  0006FE  1E42               	comf	(dtoa@n+6)^0,f,c
  7625  000700  1E41               	comf	(dtoa@n+5)^0,f,c
  7626  000702  1E40               	comf	(dtoa@n+4)^0,f,c
  7627  000704  1E3F               	comf	(dtoa@n+3)^0,f,c
  7628  000706  1E3E               	comf	(dtoa@n+2)^0,f,c
  7629  000708  1E3D               	comf	(dtoa@n+1)^0,f,c
  7630  00070A  6C3C               	negf	dtoa@n^0,c
  7631  00070C  0E00               	movlw	0
  7632  00070E  223D               	addwfc	(dtoa@n+1)^0,f,c
  7633  000710  223E               	addwfc	(dtoa@n+2)^0,f,c
  7634  000712  223F               	addwfc	(dtoa@n+3)^0,f,c
  7635  000714  2240               	addwfc	(dtoa@n+4)^0,f,c
  7636  000716  2241               	addwfc	(dtoa@n+5)^0,f,c
  7637  000718  2242               	addwfc	(dtoa@n+6)^0,f,c
  7638  00071A  2243               	addwfc	(dtoa@n+7)^0,f,c
  7639  00071C                     l4682:
  7640                           
  7641                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  7642  00071C  0100               	movlb	0	; () banked
  7643  00071E  BF8D               	btfsc	(_prec+1)& (0+255),7,b
  7644  000720  EF94  F003         	goto	u4521
  7645  000724  EF96  F003         	goto	u4520
  7646  000728                     u4521:
  7647  000728  EF97  F003         	goto	l4686
  7648  00072C                     u4520:
  7649  00072C                     
  7650                           ; BSR set to: 0
  7651                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  7652  00072C  9256               	bcf	_flags^0,1,c
  7653  00072E                     l4686:
  7654                           
  7655                           ; BSR set to: 0
  7656                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  7657  00072E  BF8D               	btfsc	(_prec+1)& (0+255),7,b
  7658  000730  EFA4  F003         	goto	u4530
  7659  000734  518D               	movf	(_prec+1)& (0+255),w,b
  7660  000736  E106               	bnz	u4531
  7661  000738  058C               	decf	_prec& (0+255),w,b
  7662  00073A  B0D8               	btfsc	status,0,c
  7663  00073C  EFA2  F003         	goto	u4531
  7664  000740  EFA4  F003         	goto	u4530
  7665  000744                     u4531:
  7666  000744  EFAA  F003         	goto	l767
  7667  000748                     u4530:
  7668  000748                     
  7669                           ; BSR set to: 0
  7670  000748  0E00               	movlw	0
  7671  00074A  6E37               	movwf	(dtoa@p+1)^0,c
  7672  00074C  0E01               	movlw	1
  7673  00074E  6E36               	movwf	dtoa@p^0,c
  7674  000750  EFAE  F003         	goto	l769
  7675  000754                     l767:
  7676                           
  7677                           ; BSR set to: 0
  7678  000754  C08C  F036         	movff	_prec,dtoa@p
  7679  000758  C08D  F037         	movff	_prec+1,dtoa@p+1
  7680  00075C                     l769:
  7681                           
  7682                           ; BSR set to: 0
  7683                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  7684  00075C  C08A  F038         	movff	_width,dtoa@w
  7685  000760  C08B  F039         	movff	_width+1,dtoa@w+1
  7686  000764                     
  7687                           ; BSR set to: 0
  7688                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  7689  000764  503A               	movf	dtoa@s^0,w,c
  7690  000766  103B               	iorwf	(dtoa@s+1)^0,w,c
  7691  000768  A4D8               	btfss	status,2,c
  7692  00076A  EFB9  F003         	goto	u4541
  7693  00076E  EFBB  F003         	goto	u4540
  7694  000772                     u4541:
  7695  000772  EFC2  F003         	goto	l4694
  7696  000776                     u4540:
  7697  000776                     
  7698                           ; BSR set to: 0
  7699  000776  A456               	btfss	_flags^0,2,c
  7700  000778  EFC0  F003         	goto	u4551
  7701  00077C  EFC2  F003         	goto	u4550
  7702  000780                     u4551:
  7703  000780  EFC5  F003         	goto	l4696
  7704  000784                     u4550:
  7705  000784                     l4694:
  7706                           
  7707                           ; BSR set to: 0
  7708                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  7709  000784  0638               	decf	dtoa@w^0,f,c
  7710  000786  A0D8               	btfss	status,0,c
  7711  000788  0639               	decf	(dtoa@w+1)^0,f,c
  7712  00078A                     l4696:
  7713                           
  7714                           ; BSR set to: 0
  7715                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  7716  00078A  0E00               	movlw	0
  7717  00078C  6E45               	movwf	(dtoa@i+1)^0,c
  7718  00078E  0E1F               	movlw	31
  7719  000790  6E44               	movwf	dtoa@i^0,c
  7720  000792                     
  7721                           ; BSR set to: 0
  7722                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  7723  000792  0E00               	movlw	0
  7724  000794  0101               	movlb	1	; () banked
  7725  000796  6FA3               	movwf	(_dbuf+31)& (0+255),b
  7726                           
  7727                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7728  000798  EF4A  F004         	goto	l4710
  7729  00079C                     l4700:
  7730                           
  7731                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  7732  00079C  0644               	decf	dtoa@i^0,f,c
  7733  00079E  A0D8               	btfss	status,0,c
  7734  0007A0  0645               	decf	(dtoa@i+1)^0,f,c
  7735  0007A2                     
  7736                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  7737  0007A2  0E84               	movlw	low _dbuf
  7738  0007A4  2444               	addwf	dtoa@i^0,w,c
  7739  0007A6  6ED9               	movwf	fsr2l,c
  7740  0007A8  0E01               	movlw	high _dbuf
  7741  0007AA  2045               	addwfc	(dtoa@i+1)^0,w,c
  7742  0007AC  6EDA               	movwf	fsr2h,c
  7743  0007AE  C03C  F005         	movff	dtoa@n,___aomod@dividend
  7744  0007B2  C03D  F006         	movff	dtoa@n+1,___aomod@dividend+1
  7745  0007B6  C03E  F007         	movff	dtoa@n+2,___aomod@dividend+2
  7746  0007BA  C03F  F008         	movff	dtoa@n+3,___aomod@dividend+3
  7747  0007BE  C040  F009         	movff	dtoa@n+4,___aomod@dividend+4
  7748  0007C2  C041  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  7749  0007C6  C042  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  7750  0007CA  C043  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  7751  0007CE  0E0A               	movlw	10
  7752  0007D0  6E0D               	movwf	___aomod@divisor^0,c
  7753  0007D2  0E00               	movlw	0
  7754  0007D4  6E0E               	movwf	(___aomod@divisor+1)^0,c
  7755  0007D6  0E00               	movlw	0
  7756  0007D8  6E0F               	movwf	(___aomod@divisor+2)^0,c
  7757  0007DA  0E00               	movlw	0
  7758  0007DC  6E10               	movwf	(___aomod@divisor+3)^0,c
  7759  0007DE  0E00               	movlw	0
  7760  0007E0  6E11               	movwf	(___aomod@divisor+4)^0,c
  7761  0007E2  0E00               	movlw	0
  7762  0007E4  6E12               	movwf	(___aomod@divisor+5)^0,c
  7763  0007E6  0E00               	movlw	0
  7764  0007E8  6E13               	movwf	(___aomod@divisor+6)^0,c
  7765  0007EA  0E00               	movlw	0
  7766  0007EC  6E14               	movwf	(___aomod@divisor+7)^0,c
  7767  0007EE  EC50  F00A         	call	___aomod	;wreg free
  7768  0007F2  C005  F02C         	movff	?___aomod,??_dtoa
  7769  0007F6  C006  F02D         	movff	?___aomod+1,??_dtoa+1
  7770  0007FA  C007  F02E         	movff	?___aomod+2,??_dtoa+2
  7771  0007FE  C008  F02F         	movff	?___aomod+3,??_dtoa+3
  7772  000802  C009  F030         	movff	?___aomod+4,??_dtoa+4
  7773  000806  C00A  F031         	movff	?___aomod+5,??_dtoa+5
  7774  00080A  C00B  F032         	movff	?___aomod+6,??_dtoa+6
  7775  00080E  C00C  F033         	movff	?___aomod+7,??_dtoa+7
  7776  000812  C02C  F017         	movff	??_dtoa,abs@a
  7777  000816  C02E  F018         	movff	??_dtoa+2,abs@a+1
  7778  00081A  EC96  F013         	call	_abs	;wreg free
  7779  00081E  5017               	movf	?_abs^0,w,c
  7780  000820  0F30               	addlw	48
  7781  000822  6EDF               	movwf	indf2,c
  7782  000824                     
  7783                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  7784  000824  0636               	decf	dtoa@p^0,f,c
  7785  000826  A0D8               	btfss	status,0,c
  7786  000828  0637               	decf	(dtoa@p+1)^0,f,c
  7787  00082A                     
  7788                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  7789  00082A  0638               	decf	dtoa@w^0,f,c
  7790  00082C  A0D8               	btfss	status,0,c
  7791  00082E  0639               	decf	(dtoa@w+1)^0,f,c
  7792  000830                     
  7793                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  7794  000830  C03C  F005         	movff	dtoa@n,___aodiv@dividend
  7795  000834  C03D  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  7796  000838  C03E  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  7797  00083C  C03F  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  7798  000840  C040  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  7799  000844  C041  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  7800  000848  C042  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  7801  00084C  C043  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  7802  000850  0E0A               	movlw	10
  7803  000852  6E0D               	movwf	___aodiv@divisor^0,c
  7804  000854  0E00               	movlw	0
  7805  000856  6E0E               	movwf	(___aodiv@divisor+1)^0,c
  7806  000858  0E00               	movlw	0
  7807  00085A  6E0F               	movwf	(___aodiv@divisor+2)^0,c
  7808  00085C  0E00               	movlw	0
  7809  00085E  6E10               	movwf	(___aodiv@divisor+3)^0,c
  7810  000860  0E00               	movlw	0
  7811  000862  6E11               	movwf	(___aodiv@divisor+4)^0,c
  7812  000864  0E00               	movlw	0
  7813  000866  6E12               	movwf	(___aodiv@divisor+5)^0,c
  7814  000868  0E00               	movlw	0
  7815  00086A  6E13               	movwf	(___aodiv@divisor+6)^0,c
  7816  00086C  0E00               	movlw	0
  7817  00086E  6E14               	movwf	(___aodiv@divisor+7)^0,c
  7818  000870  ECD0  F008         	call	___aodiv	;wreg free
  7819  000874  C005  F03C         	movff	?___aodiv,dtoa@n
  7820  000878  C006  F03D         	movff	?___aodiv+1,dtoa@n+1
  7821  00087C  C007  F03E         	movff	?___aodiv+2,dtoa@n+2
  7822  000880  C008  F03F         	movff	?___aodiv+3,dtoa@n+3
  7823  000884  C009  F040         	movff	?___aodiv+4,dtoa@n+4
  7824  000888  C00A  F041         	movff	?___aodiv+5,dtoa@n+5
  7825  00088C  C00B  F042         	movff	?___aodiv+6,dtoa@n+6
  7826  000890  C00C  F043         	movff	?___aodiv+7,dtoa@n+7
  7827  000894                     l4710:
  7828                           
  7829                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7830  000894  BE45               	btfsc	(dtoa@i+1)^0,7,c
  7831  000896  EF55  F004         	goto	u4561
  7832  00089A  5045               	movf	(dtoa@i+1)^0,w,c
  7833  00089C  E108               	bnz	u4560
  7834  00089E  0444               	decf	dtoa@i^0,w,c
  7835  0008A0  A0D8               	btfss	status,0,c
  7836  0008A2  EF55  F004         	goto	u4561
  7837  0008A6  EF57  F004         	goto	u4560
  7838  0008AA                     u4561:
  7839  0008AA  EF87  F004         	goto	l4720
  7840  0008AE                     u4560:
  7841  0008AE  503C               	movf	dtoa@n^0,w,c
  7842  0008B0  103D               	iorwf	(dtoa@n+1)^0,w,c
  7843  0008B2  103E               	iorwf	(dtoa@n+2)^0,w,c
  7844  0008B4  103F               	iorwf	(dtoa@n+3)^0,w,c
  7845  0008B6  1040               	iorwf	(dtoa@n+4)^0,w,c
  7846  0008B8  1041               	iorwf	(dtoa@n+5)^0,w,c
  7847  0008BA  1042               	iorwf	(dtoa@n+6)^0,w,c
  7848  0008BC  1043               	iorwf	(dtoa@n+7)^0,w,c
  7849  0008BE  A4D8               	btfss	status,2,c
  7850  0008C0  EF64  F004         	goto	u4571
  7851  0008C4  EF66  F004         	goto	u4570
  7852  0008C8                     u4571:
  7853  0008C8  EFCE  F003         	goto	l4700
  7854  0008CC                     u4570:
  7855  0008CC  BE37               	btfsc	(dtoa@p+1)^0,7,c
  7856  0008CE  EF73  F004         	goto	u4580
  7857  0008D2  5037               	movf	(dtoa@p+1)^0,w,c
  7858  0008D4  E106               	bnz	u4581
  7859  0008D6  0436               	decf	dtoa@p^0,w,c
  7860  0008D8  B0D8               	btfsc	status,0,c
  7861  0008DA  EF71  F004         	goto	u4581
  7862  0008DE  EF73  F004         	goto	u4580
  7863  0008E2                     u4581:
  7864  0008E2  EFCE  F003         	goto	l4700
  7865  0008E6                     u4580:
  7866  0008E6  BE39               	btfsc	(dtoa@w+1)^0,7,c
  7867  0008E8  EF7E  F004         	goto	u4591
  7868  0008EC  5039               	movf	(dtoa@w+1)^0,w,c
  7869  0008EE  E108               	bnz	u4590
  7870  0008F0  0438               	decf	dtoa@w^0,w,c
  7871  0008F2  A0D8               	btfss	status,0,c
  7872  0008F4  EF7E  F004         	goto	u4591
  7873  0008F8  EF80  F004         	goto	u4590
  7874  0008FC                     u4591:
  7875  0008FC  EF87  F004         	goto	l4720
  7876  000900                     u4590:
  7877  000900  B256               	btfsc	_flags^0,1,c
  7878  000902  EF85  F004         	goto	u4601
  7879  000906  EF87  F004         	goto	u4600
  7880  00090A                     u4601:
  7881  00090A  EFCE  F003         	goto	l4700
  7882  00090E                     u4600:
  7883  00090E                     l4720:
  7884                           
  7885                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  7886  00090E  503A               	movf	dtoa@s^0,w,c
  7887  000910  103B               	iorwf	(dtoa@s+1)^0,w,c
  7888  000912  A4D8               	btfss	status,2,c
  7889  000914  EF8E  F004         	goto	u4611
  7890  000918  EF90  F004         	goto	u4610
  7891  00091C                     u4611:
  7892  00091C  EF97  F004         	goto	l4724
  7893  000920                     u4610:
  7894  000920  A456               	btfss	_flags^0,2,c
  7895  000922  EF95  F004         	goto	u4621
  7896  000926  EF97  F004         	goto	u4620
  7897  00092A                     u4621:
  7898  00092A  EFB5  F004         	goto	l4734
  7899  00092E                     u4620:
  7900  00092E                     l4724:
  7901                           
  7902                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  7903  00092E  0644               	decf	dtoa@i^0,f,c
  7904  000930  A0D8               	btfss	status,0,c
  7905  000932  0645               	decf	(dtoa@i+1)^0,f,c
  7906  000934                     
  7907                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  7908  000934  503A               	movf	dtoa@s^0,w,c
  7909  000936  103B               	iorwf	(dtoa@s+1)^0,w,c
  7910  000938  A4D8               	btfss	status,2,c
  7911  00093A  EFA1  F004         	goto	u4631
  7912  00093E  EFA3  F004         	goto	u4630
  7913  000942                     u4631:
  7914  000942  EFA9  F004         	goto	l4730
  7915  000946                     u4630:
  7916  000946  0E00               	movlw	0
  7917  000948  6E35               	movwf	(_dtoa$1312+1)^0,c
  7918  00094A  0E2B               	movlw	43
  7919  00094C  6E34               	movwf	_dtoa$1312^0,c
  7920  00094E  EFAD  F004         	goto	l4732
  7921  000952                     l4730:
  7922  000952  0E00               	movlw	0
  7923  000954  6E35               	movwf	(_dtoa$1312+1)^0,c
  7924  000956  0E2D               	movlw	45
  7925  000958  6E34               	movwf	_dtoa$1312^0,c
  7926  00095A                     l4732:
  7927  00095A  0E84               	movlw	low _dbuf
  7928  00095C  2444               	addwf	dtoa@i^0,w,c
  7929  00095E  6ED9               	movwf	fsr2l,c
  7930  000960  0E01               	movlw	high _dbuf
  7931  000962  2045               	addwfc	(dtoa@i+1)^0,w,c
  7932  000964  6EDA               	movwf	fsr2h,c
  7933  000966  C034  FFDF         	movff	_dtoa$1312,indf2
  7934  00096A                     l4734:
  7935                           
  7936                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  7937  00096A  C022  F017         	movff	dtoa@fp,pad@fp
  7938  00096E  C023  F018         	movff	dtoa@fp+1,pad@fp+1
  7939  000972  0E84               	movlw	low _dbuf
  7940  000974  2444               	addwf	dtoa@i^0,w,c
  7941  000976  6E19               	movwf	pad@buf^0,c
  7942  000978  0E01               	movlw	high _dbuf
  7943  00097A  2045               	addwfc	(dtoa@i+1)^0,w,c
  7944  00097C  6E1A               	movwf	(pad@buf+1)^0,c
  7945  00097E  C038  F01B         	movff	dtoa@w,pad@p
  7946  000982  C039  F01C         	movff	dtoa@w+1,pad@p+1
  7947  000986  EC7E  F00D         	call	_pad	;wreg free
  7948  00098A  C017  F022         	movff	?_pad,?_dtoa
  7949  00098E  C018  F023         	movff	?_pad+1,?_dtoa+1
  7950  000992  0012               	return		;funcret
  7951  000994                     __end_of_dtoa:
  7952                           	opt callstack 0
  7953                           
  7954 ;; *************** function _pad *****************
  7955 ;; Defined at:
  7956 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7957 ;; Parameters:    Size  Location     Type
  7958 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  7959 ;;		 -> NULL(0), 
  7960 ;;  buf             2   24[COMRAM] PTR unsigned char 
  7961 ;;		 -> dbuf(32), 
  7962 ;;  p               2   26[COMRAM] int 
  7963 ;; Auto vars:     Size  Location     Type
  7964 ;;  w               2   31[COMRAM] int 
  7965 ;;  i               2   29[COMRAM] int 
  7966 ;; Return value:  Size  Location     Type
  7967 ;;                  2   22[COMRAM] int 
  7968 ;; Registers used:
  7969 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7970 ;; Tracked objects:
  7971 ;;		On entry : 0/0
  7972 ;;		On exit  : 0/0
  7973 ;;		Unchanged: 0/0
  7974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7975 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7976 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7977 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7978 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7979 ;;Total ram usage:       11 bytes
  7980 ;; Hardware stack levels used:    1
  7981 ;; Hardware stack levels required when called:    8
  7982 ;; This function calls:
  7983 ;;		_fputc
  7984 ;;		_fputs
  7985 ;;		_strlen
  7986 ;; This function is called by:
  7987 ;;		_dtoa
  7988 ;;		_utoa
  7989 ;;		_xtoa
  7990 ;; This function uses a non-reentrant model
  7991 ;;
  7992                           
  7993                           	psect	text48
  7994  001AFC                     __ptext48:
  7995                           	opt callstack 0
  7996  001AFC                     _pad:
  7997                           	opt callstack 18
  7998  001AFC                     
  7999                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  8000  001AFC  A056               	btfss	_flags^0,0,c
  8001  001AFE  EF83  F00D         	goto	u4131
  8002  001B02  EF85  F00D         	goto	u4130
  8003  001B06                     u4131:
  8004  001B06  EF8F  F00D         	goto	l4496
  8005  001B0A                     u4130:
  8006  001B0A                     
  8007                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  8008  001B0A  C019  F010         	movff	pad@buf,fputs@s
  8009  001B0E  C01A  F011         	movff	pad@buf+1,fputs@s+1
  8010  001B12  C017  F012         	movff	pad@fp,fputs@fp
  8011  001B16  C018  F013         	movff	pad@fp+1,fputs@fp+1
  8012  001B1A  EC31  F013         	call	_fputs	;wreg free
  8013  001B1E                     l4496:
  8014                           
  8015                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  8016  001B1E  BE1C               	btfsc	(pad@p+1)^0,7,c
  8017  001B20  EF94  F00D         	goto	u4141
  8018  001B24  EF96  F00D         	goto	u4140
  8019  001B28                     u4141:
  8020  001B28  EF9C  F00D         	goto	l4500
  8021  001B2C                     u4140:
  8022  001B2C  C01B  F020         	movff	pad@p,pad@w
  8023  001B30  C01C  F021         	movff	pad@p+1,pad@w+1
  8024  001B34  EFA0  F00D         	goto	l756
  8025  001B38                     l4500:
  8026  001B38  0E00               	movlw	0
  8027  001B3A  6E21               	movwf	(pad@w+1)^0,c
  8028  001B3C  0E00               	movlw	0
  8029  001B3E  6E20               	movwf	pad@w^0,c
  8030  001B40                     l756:
  8031                           
  8032                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  8033  001B40  0E00               	movlw	0
  8034  001B42  6E1F               	movwf	(pad@i+1)^0,c
  8035  001B44  0E00               	movlw	0
  8036  001B46  6E1E               	movwf	pad@i^0,c
  8037                           
  8038                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  8039  001B48  EFB2  F00D         	goto	l4506
  8040  001B4C                     l4502:
  8041                           
  8042                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  8043  001B4C  0E00               	movlw	0
  8044  001B4E  6E08               	movwf	(fputc@c+1)^0,c
  8045  001B50  0E20               	movlw	32
  8046  001B52  6E07               	movwf	fputc@c^0,c
  8047  001B54  C017  F009         	movff	pad@fp,fputc@fp
  8048  001B58  C018  F00A         	movff	pad@fp+1,fputc@fp+1
  8049  001B5C  EC49  F00F         	call	_fputc	;wreg free
  8050  001B60                     
  8051                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  8052  001B60  4A1E               	infsnz	pad@i^0,f,c
  8053  001B62  2A1F               	incf	(pad@i+1)^0,f,c
  8054  001B64                     l4506:
  8055                           
  8056                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  8057  001B64  5020               	movf	pad@w^0,w,c
  8058  001B66  5C1E               	subwf	pad@i^0,w,c
  8059  001B68  501F               	movf	(pad@i+1)^0,w,c
  8060  001B6A  0A80               	xorlw	128
  8061  001B6C  6E1D               	movwf	??_pad^0,c
  8062  001B6E  5021               	movf	(pad@w+1)^0,w,c
  8063  001B70  0A80               	xorlw	128
  8064  001B72  581D               	subwfb	??_pad^0,w,c
  8065  001B74  A0D8               	btfss	status,0,c
  8066  001B76  EFBF  F00D         	goto	u4151
  8067  001B7A  EFC1  F00D         	goto	u4150
  8068  001B7E                     u4151:
  8069  001B7E  EFA6  F00D         	goto	l4502
  8070  001B82                     u4150:
  8071  001B82                     
  8072                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  8073  001B82  B056               	btfsc	_flags^0,0,c
  8074  001B84  EFC6  F00D         	goto	u4161
  8075  001B88  EFC8  F00D         	goto	u4160
  8076  001B8C                     u4161:
  8077  001B8C  EFD2  F00D         	goto	l4510
  8078  001B90                     u4160:
  8079  001B90                     
  8080                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  8081  001B90  C019  F010         	movff	pad@buf,fputs@s
  8082  001B94  C01A  F011         	movff	pad@buf+1,fputs@s+1
  8083  001B98  C017  F012         	movff	pad@fp,fputs@fp
  8084  001B9C  C018  F013         	movff	pad@fp+1,fputs@fp+1
  8085  001BA0  EC31  F013         	call	_fputs	;wreg free
  8086  001BA4                     l4510:
  8087                           
  8088                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  8089  001BA4  C019  F005         	movff	pad@buf,strlen@s
  8090  001BA8  C01A  F006         	movff	pad@buf+1,strlen@s+1
  8091  001BAC  EC9A  F012         	call	_strlen	;wreg free
  8092  001BB0  5020               	movf	pad@w^0,w,c
  8093  001BB2  2405               	addwf	?_strlen^0,w,c
  8094  001BB4  6E17               	movwf	?_pad^0,c
  8095  001BB6  5021               	movf	(pad@w+1)^0,w,c
  8096  001BB8  2006               	addwfc	(?_strlen+1)^0,w,c
  8097  001BBA  6E18               	movwf	(?_pad+1)^0,c
  8098  001BBC  0012               	return		;funcret
  8099  001BBE                     __end_of_pad:
  8100                           	opt callstack 0
  8101                           
  8102 ;; *************** function _strlen *****************
  8103 ;; Defined at:
  8104 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  8105 ;; Parameters:    Size  Location     Type
  8106 ;;  s               2    4[COMRAM] PTR const unsigned char 
  8107 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), STR_5(9), 
  8108 ;;		 -> STR_4(12), 
  8109 ;; Auto vars:     Size  Location     Type
  8110 ;;  a               2    6[COMRAM] PTR const unsigned char 
  8111 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), STR_5(9), 
  8112 ;;		 -> STR_4(12), 
  8113 ;; Return value:  Size  Location     Type
  8114 ;;                  2    4[COMRAM] unsigned int 
  8115 ;; Registers used:
  8116 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  8117 ;; Tracked objects:
  8118 ;;		On entry : 0/0
  8119 ;;		On exit  : 0/0
  8120 ;;		Unchanged: 0/0
  8121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8122 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8123 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8125 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8126 ;;Total ram usage:        4 bytes
  8127 ;; Hardware stack levels used:    1
  8128 ;; Hardware stack levels required when called:    4
  8129 ;; This function calls:
  8130 ;;		Nothing
  8131 ;; This function is called by:
  8132 ;;		_pad
  8133 ;;		_stoa
  8134 ;; This function uses a non-reentrant model
  8135 ;;
  8136                           
  8137                           	psect	text49
  8138  002534                     __ptext49:
  8139                           	opt callstack 0
  8140  002534                     _strlen:
  8141                           	opt callstack 21
  8142  002534  C005  F007         	movff	strlen@s,strlen@a
  8143  002538  C006  F008         	movff	strlen@s+1,strlen@a+1
  8144  00253C  EFA2  F012         	goto	l4482
  8145  002540                     l4480:
  8146  002540  4A05               	infsnz	strlen@s^0,f,c
  8147  002542  2A06               	incf	(strlen@s+1)^0,f,c
  8148  002544                     l4482:
  8149  002544  C005  FFF6         	movff	strlen@s,tblptrl
  8150  002548  C006  FFF7         	movff	strlen@s+1,tblptrh
  8151  00254C  0E00               	movlw	low (__mediumconst shr (0+16))
  8152  00254E  6EF8               	movwf	tblptru,c
  8153  002550  0E0E               	movlw	(high __ramtop+-1)
  8154  002552  64F7               	cpfsgt	tblptrh,c
  8155  002554  D003               	bra	u4097
  8156  002556  0008               	tblrd		*
  8157  002558  50F5               	movf	tablat,w,c
  8158  00255A  D005               	bra	u4090
  8159  00255C                     u4097:
  8160  00255C  CFF6 FFE9          	movff	tblptrl,fsr0l
  8161  002560  CFF7 FFEA          	movff	tblptrh,fsr0h
  8162  002564  50EF               	movf	indf0,w,c
  8163  002566                     u4090:
  8164  002566  0900               	iorlw	0
  8165  002568  A4D8               	btfss	status,2,c
  8166  00256A  EFB9  F012         	goto	u4101
  8167  00256E  EFBB  F012         	goto	u4100
  8168  002572                     u4101:
  8169  002572  EFA0  F012         	goto	l4480
  8170  002576                     u4100:
  8171  002576  5007               	movf	strlen@a^0,w,c
  8172  002578  5C05               	subwf	strlen@s^0,w,c
  8173  00257A  6E05               	movwf	?_strlen^0,c
  8174  00257C  5008               	movf	(strlen@a+1)^0,w,c
  8175  00257E  5806               	subwfb	(strlen@s+1)^0,w,c
  8176  002580  6E06               	movwf	(?_strlen+1)^0,c
  8177  002582  0012               	return		;funcret
  8178  002584                     __end_of_strlen:
  8179                           	opt callstack 0
  8180                           
  8181 ;; *************** function _fputs *****************
  8182 ;; Defined at:
  8183 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  8184 ;; Parameters:    Size  Location     Type
  8185 ;;  s               2   15[COMRAM] PTR const unsigned char 
  8186 ;;		 -> dbuf(32), 
  8187 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  8188 ;;		 -> NULL(0), 
  8189 ;; Auto vars:     Size  Location     Type
  8190 ;;  i               2   20[COMRAM] int 
  8191 ;;  c               1   19[COMRAM] unsigned char 
  8192 ;; Return value:  Size  Location     Type
  8193 ;;                  2   15[COMRAM] int 
  8194 ;; Registers used:
  8195 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8196 ;; Tracked objects:
  8197 ;;		On entry : 0/0
  8198 ;;		On exit  : 0/0
  8199 ;;		Unchanged: 0/0
  8200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8201 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8202 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8204 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8205 ;;Total ram usage:        7 bytes
  8206 ;; Hardware stack levels used:    1
  8207 ;; Hardware stack levels required when called:    7
  8208 ;; This function calls:
  8209 ;;		_fputc
  8210 ;; This function is called by:
  8211 ;;		_pad
  8212 ;; This function uses a non-reentrant model
  8213 ;;
  8214                           
  8215                           	psect	text50
  8216  002662                     __ptext50:
  8217                           	opt callstack 0
  8218  002662                     _fputs:
  8219                           	opt callstack 18
  8220  002662  0E00               	movlw	0
  8221  002664  6E16               	movwf	(fputs@i+1)^0,c
  8222  002666  0E00               	movlw	0
  8223  002668  6E15               	movwf	fputs@i^0,c
  8224  00266A  EF42  F013         	goto	l4476
  8225  00266E                     l4472:
  8226  00266E  C014  F007         	movff	fputs@c,fputc@c
  8227  002672  6A08               	clrf	(fputc@c+1)^0,c
  8228  002674  C012  F009         	movff	fputs@fp,fputc@fp
  8229  002678  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
  8230  00267C  EC49  F00F         	call	_fputc	;wreg free
  8231  002680  4A15               	infsnz	fputs@i^0,f,c
  8232  002682  2A16               	incf	(fputs@i+1)^0,f,c
  8233  002684                     l4476:
  8234  002684  5015               	movf	fputs@i^0,w,c
  8235  002686  2410               	addwf	fputs@s^0,w,c
  8236  002688  6ED9               	movwf	fsr2l,c
  8237  00268A  5016               	movf	(fputs@i+1)^0,w,c
  8238  00268C  2011               	addwfc	(fputs@s+1)^0,w,c
  8239  00268E  6EDA               	movwf	fsr2h,c
  8240  002690  50DF               	movf	indf2,w,c
  8241  002692  6E14               	movwf	fputs@c^0,c
  8242  002694  5014               	movf	fputs@c^0,w,c
  8243  002696  A4D8               	btfss	status,2,c
  8244  002698  EF50  F013         	goto	u4081
  8245  00269C  EF52  F013         	goto	u4080
  8246  0026A0                     u4081:
  8247  0026A0  EF37  F013         	goto	l4472
  8248  0026A4                     u4080:
  8249  0026A4  0012               	return		;funcret
  8250  0026A6                     __end_of_fputs:
  8251                           	opt callstack 0
  8252                           
  8253 ;; *************** function _fputc *****************
  8254 ;; Defined at:
  8255 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  8256 ;; Parameters:    Size  Location     Type
  8257 ;;  c               2    6[COMRAM] int 
  8258 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
  8259 ;;		 -> NULL(0), 
  8260 ;; Auto vars:     Size  Location     Type
  8261 ;;		None
  8262 ;; Return value:  Size  Location     Type
  8263 ;;                  2    6[COMRAM] int 
  8264 ;; Registers used:
  8265 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8266 ;; Tracked objects:
  8267 ;;		On entry : 0/0
  8268 ;;		On exit  : 0/0
  8269 ;;		Unchanged: 0/0
  8270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8271 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8273 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8274 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8275 ;;Total ram usage:        9 bytes
  8276 ;; Hardware stack levels used:    1
  8277 ;; Hardware stack levels required when called:    6
  8278 ;; This function calls:
  8279 ;;		_putch
  8280 ;; This function is called by:
  8281 ;;		_pad
  8282 ;;		_stoa
  8283 ;;		_vfpfcnvrt
  8284 ;;		_fputs
  8285 ;; This function uses a non-reentrant model
  8286 ;;
  8287                           
  8288                           	psect	text51
  8289  001E92                     __ptext51:
  8290                           	opt callstack 0
  8291  001E92                     _fputc:
  8292                           	opt callstack 18
  8293  001E92  5009               	movf	fputc@fp^0,w,c
  8294  001E94  100A               	iorwf	(fputc@fp+1)^0,w,c
  8295  001E96  B4D8               	btfsc	status,2,c
  8296  001E98  EF50  F00F         	goto	u4041
  8297  001E9C  EF52  F00F         	goto	u4040
  8298  001EA0                     u4041:
  8299  001EA0  EF5B  F00F         	goto	l4460
  8300  001EA4                     u4040:
  8301  001EA4  5009               	movf	fputc@fp^0,w,c
  8302  001EA6  100A               	iorwf	(fputc@fp+1)^0,w,c
  8303  001EA8  A4D8               	btfss	status,2,c
  8304  001EAA  EF59  F00F         	goto	u4051
  8305  001EAE  EF5B  F00F         	goto	u4050
  8306  001EB2                     u4051:
  8307  001EB2  EF60  F00F         	goto	l4462
  8308  001EB6                     u4050:
  8309  001EB6                     l4460:
  8310  001EB6  5007               	movf	fputc@c^0,w,c
  8311  001EB8  EC0C  F015         	call	_putch
  8312  001EBC  EF93  F00F         	goto	l1646
  8313  001EC0                     l4462:
  8314  001EC0  EE20 F004          	lfsr	2,4
  8315  001EC4  5009               	movf	fputc@fp^0,w,c
  8316  001EC6  26D9               	addwf	fsr2l,f,c
  8317  001EC8  500A               	movf	(fputc@fp+1)^0,w,c
  8318  001ECA  22DA               	addwfc	fsr2h,f,c
  8319  001ECC  50DE               	movf	postinc2,w,c
  8320  001ECE  10DE               	iorwf	postinc2,w,c
  8321  001ED0  B4D8               	btfsc	status,2,c
  8322  001ED2  EF6D  F00F         	goto	u4061
  8323  001ED6  EF6F  F00F         	goto	u4060
  8324  001EDA                     u4061:
  8325  001EDA  EF8A  F00F         	goto	l4466
  8326  001EDE                     u4060:
  8327  001EDE  EE20 F004          	lfsr	2,4
  8328  001EE2  5009               	movf	fputc@fp^0,w,c
  8329  001EE4  26D9               	addwf	fsr2l,f,c
  8330  001EE6  500A               	movf	(fputc@fp+1)^0,w,c
  8331  001EE8  22DA               	addwfc	fsr2h,f,c
  8332  001EEA  EE10 F002          	lfsr	1,2
  8333  001EEE  5009               	movf	fputc@fp^0,w,c
  8334  001EF0  26E1               	addwf	fsr1l,f,c
  8335  001EF2  500A               	movf	(fputc@fp+1)^0,w,c
  8336  001EF4  22E2               	addwfc	fsr1h,f,c
  8337  001EF6  50DE               	movf	postinc2,w,c
  8338  001EF8  5CE6               	subwf	postinc1,w,c
  8339  001EFA  50E6               	movf	postinc1,w,c
  8340  001EFC  0A80               	xorlw	128
  8341  001EFE  6E0F               	movwf	(??_fputc+4)^0,c
  8342  001F00  50DE               	movf	postinc2,w,c
  8343  001F02  0A80               	xorlw	128
  8344  001F04  580F               	subwfb	(??_fputc+4)^0,w,c
  8345  001F06  B0D8               	btfsc	status,0,c
  8346  001F08  EF88  F00F         	goto	u4071
  8347  001F0C  EF8A  F00F         	goto	u4070
  8348  001F10                     u4071:
  8349  001F10  EF93  F00F         	goto	l1646
  8350  001F14                     u4070:
  8351  001F14                     l4466:
  8352  001F14  EE20 F002          	lfsr	2,2
  8353  001F18  5009               	movf	fputc@fp^0,w,c
  8354  001F1A  26D9               	addwf	fsr2l,f,c
  8355  001F1C  500A               	movf	(fputc@fp+1)^0,w,c
  8356  001F1E  22DA               	addwfc	fsr2h,f,c
  8357  001F20  2ADE               	incf	postinc2,f,c
  8358  001F22  0E00               	movlw	0
  8359  001F24  22DD               	addwfc	postdec2,f,c
  8360  001F26                     l1646:
  8361  001F26  0012               	return		;funcret
  8362  001F28                     __end_of_fputc:
  8363                           	opt callstack 0
  8364                           
  8365 ;; *************** function _putch *****************
  8366 ;; Defined at:
  8367 ;;		line 201 in file "mcc_generated_files/eusart2.c"
  8368 ;; Parameters:    Size  Location     Type
  8369 ;;  txData          1    wreg     unsigned char 
  8370 ;; Auto vars:     Size  Location     Type
  8371 ;;  txData          1    5[COMRAM] unsigned char 
  8372 ;; Return value:  Size  Location     Type
  8373 ;;                  1    wreg      void 
  8374 ;; Registers used:
  8375 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8376 ;; Tracked objects:
  8377 ;;		On entry : 0/0
  8378 ;;		On exit  : 0/0
  8379 ;;		Unchanged: 0/0
  8380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8382 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8384 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8385 ;;Total ram usage:        1 bytes
  8386 ;; Hardware stack levels used:    1
  8387 ;; Hardware stack levels required when called:    5
  8388 ;; This function calls:
  8389 ;;		_EUSART2_Write
  8390 ;; This function is called by:
  8391 ;;		_fputc
  8392 ;; This function uses a non-reentrant model
  8393 ;;
  8394                           
  8395                           	psect	text52
  8396  002A18                     __ptext52:
  8397                           	opt callstack 0
  8398  002A18                     _putch:
  8399                           	opt callstack 18
  8400                           
  8401                           ;incstack = 0
  8402                           ;putch@txData stored from wreg
  8403  002A18  6E06               	movwf	putch@txData^0,c
  8404  002A1A                     
  8405                           ;mcc_generated_files/eusart2.c: 201: void putch(char txData);mcc_generated_files/eusart2
      +                          .c: 202: {;mcc_generated_files/eusart2.c: 203:     EUSART2_Write(txData);
  8406  002A1A  5006               	movf	putch@txData^0,w,c
  8407  002A1C  EC16  F012         	call	_EUSART2_Write
  8408  002A20  0012               	return		;funcret
  8409  002A22                     __end_of_putch:
  8410                           	opt callstack 0
  8411                           
  8412 ;; *************** function _EUSART2_Write *****************
  8413 ;; Defined at:
  8414 ;;		line 173 in file "mcc_generated_files/eusart2.c"
  8415 ;; Parameters:    Size  Location     Type
  8416 ;;  txData          1    wreg     unsigned char 
  8417 ;; Auto vars:     Size  Location     Type
  8418 ;;  txData          1    4[COMRAM] unsigned char 
  8419 ;; Return value:  Size  Location     Type
  8420 ;;                  1    wreg      void 
  8421 ;; Registers used:
  8422 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8423 ;; Tracked objects:
  8424 ;;		On entry : 0/0
  8425 ;;		On exit  : 0/0
  8426 ;;		Unchanged: 0/0
  8427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8429 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8431 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8432 ;;Total ram usage:        1 bytes
  8433 ;; Hardware stack levels used:    1
  8434 ;; Hardware stack levels required when called:    4
  8435 ;; This function calls:
  8436 ;;		Nothing
  8437 ;; This function is called by:
  8438 ;;		_putch
  8439 ;; This function uses a non-reentrant model
  8440 ;;
  8441                           
  8442                           	psect	text53
  8443  00242C                     __ptext53:
  8444                           	opt callstack 0
  8445  00242C                     _EUSART2_Write:
  8446                           	opt callstack 18
  8447                           
  8448                           ;incstack = 0
  8449                           ;EUSART2_Write@txData stored from wreg
  8450  00242C  6E05               	movwf	EUSART2_Write@txData^0,c
  8451  00242E                     l4438:
  8452                           
  8453                           ;mcc_generated_files/eusart2.c: 175:     while(0 == eusart2TxBufferRemaining)
  8454  00242E  0100               	movlb	0	; () banked
  8455  002430  51F4               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
  8456  002432  B4D8               	btfsc	status,2,c
  8457  002434  EF1E  F012         	goto	u4011
  8458  002438  EF20  F012         	goto	u4010
  8459  00243C                     u4011:
  8460  00243C  EF17  F012         	goto	l4438
  8461  002440                     u4010:
  8462  002440                     
  8463                           ; BSR set to: 0
  8464                           ;mcc_generated_files/eusart2.c: 179:     if(0 == PIE3bits.TX2IE)
  8465  002440  010E               	movlb	14	; () banked
  8466  002442  BDC5               	btfsc	197,6,b	;volatile
  8467  002444  EF26  F012         	goto	u4021
  8468  002448  EF28  F012         	goto	u4020
  8469  00244C                     u4021:
  8470  00244C  EF2C  F012         	goto	l321
  8471  002450                     u4020:
  8472  002450                     
  8473                           ; BSR set to: 14
  8474                           ;mcc_generated_files/eusart2.c: 180:     {;mcc_generated_files/eusart2.c: 181:         T
      +                          X2REG = txData;
  8475  002450  C005  FE9A         	movff	EUSART2_Write@txData,3738	;volatile
  8476                           
  8477                           ;mcc_generated_files/eusart2.c: 182:     }
  8478  002454  EF42  F012         	goto	l4452
  8479  002458                     l321:
  8480                           
  8481                           ; BSR set to: 14
  8482                           ;mcc_generated_files/eusart2.c: 184:     {;mcc_generated_files/eusart2.c: 185:         P
      +                          IE3bits.TX2IE = 0;
  8483  002458  9DC5               	bcf	197,6,b	;volatile
  8484  00245A                     
  8485                           ; BSR set to: 14
  8486                           ;mcc_generated_files/eusart2.c: 186:         eusart2TxBuffer[eusart2TxHead++] = txData;
  8487  00245A  0E80               	movlw	low _eusart2TxBuffer
  8488  00245C  0100               	movlb	0	; () banked
  8489  00245E  25A2               	addwf	_eusart2TxHead& (0+255),w,b	;volatile
  8490  002460  6ED9               	movwf	fsr2l,c
  8491  002462  6ADA               	clrf	fsr2h,c
  8492  002464  0E00               	movlw	high _eusart2TxBuffer
  8493  002466  22DA               	addwfc	fsr2h,f,c
  8494  002468  C005  FFDF         	movff	EUSART2_Write@txData,indf2
  8495  00246C                     
  8496                           ; BSR set to: 0
  8497  00246C  2BA2               	incf	_eusart2TxHead& (0+255),f,b	;volatile
  8498  00246E                     
  8499                           ; BSR set to: 0
  8500                           ;mcc_generated_files/eusart2.c: 187:         if(sizeof(eusart2TxBuffer) <= eusart2TxHead
      +                          )
  8501  00246E  0E07               	movlw	7
  8502  002470  65A2               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
  8503  002472  EF3D  F012         	goto	u4031
  8504  002476  EF3F  F012         	goto	u4030
  8505  00247A                     u4031:
  8506  00247A  EF41  F012         	goto	l4450
  8507  00247E                     u4030:
  8508  00247E                     
  8509                           ; BSR set to: 0
  8510                           ;mcc_generated_files/eusart2.c: 188:         {;mcc_generated_files/eusart2.c: 189:      
      +                                 eusart2TxHead = 0;
  8511  00247E  0E00               	movlw	0
  8512  002480  6FA2               	movwf	_eusart2TxHead& (0+255),b	;volatile
  8513  002482                     l4450:
  8514                           
  8515                           ; BSR set to: 0
  8516                           ;mcc_generated_files/eusart2.c: 191:         eusart2TxBufferRemaining--;
  8517  002482  07F4               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
  8518  002484                     l4452:
  8519                           
  8520                           ;mcc_generated_files/eusart2.c: 193:     PIE3bits.TX2IE = 1;
  8521  002484  010E               	movlb	14	; () banked
  8522  002486  8DC5               	bsf	197,6,b	;volatile
  8523  002488                     
  8524                           ; BSR set to: 14
  8525  002488  0012               	return		;funcret
  8526  00248A                     __end_of_EUSART2_Write:
  8527                           	opt callstack 0
  8528                           
  8529 ;; *************** function _abs *****************
  8530 ;; Defined at:
  8531 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  8532 ;; Parameters:    Size  Location     Type
  8533 ;;  a               2   22[COMRAM] int 
  8534 ;; Auto vars:     Size  Location     Type
  8535 ;;		None
  8536 ;; Return value:  Size  Location     Type
  8537 ;;                  2   22[COMRAM] int 
  8538 ;; Registers used:
  8539 ;;		wreg, status,2, status,0
  8540 ;; Tracked objects:
  8541 ;;		On entry : 0/0
  8542 ;;		On exit  : 0/0
  8543 ;;		Unchanged: 0/0
  8544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8545 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8547 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8548 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8549 ;;Total ram usage:        4 bytes
  8550 ;; Hardware stack levels used:    1
  8551 ;; Hardware stack levels required when called:    4
  8552 ;; This function calls:
  8553 ;;		Nothing
  8554 ;; This function is called by:
  8555 ;;		_dtoa
  8556 ;; This function uses a non-reentrant model
  8557 ;;
  8558                           
  8559                           	psect	text54
  8560  00272C                     __ptext54:
  8561                           	opt callstack 0
  8562  00272C                     _abs:
  8563                           	opt callstack 22
  8564  00272C  BE18               	btfsc	(abs@a+1)^0,7,c
  8565  00272E  EFA3  F013         	goto	u4170
  8566  002732  5018               	movf	(abs@a+1)^0,w,c
  8567  002734  E106               	bnz	u4171
  8568  002736  0417               	decf	abs@a^0,w,c
  8569  002738  B0D8               	btfsc	status,0,c
  8570  00273A  EFA1  F013         	goto	u4171
  8571  00273E  EFA3  F013         	goto	u4170
  8572  002742                     u4171:
  8573  002742  EFB1  F013         	goto	l1574
  8574  002746                     u4170:
  8575  002746  C017  F019         	movff	abs@a,??_abs
  8576  00274A  C018  F01A         	movff	abs@a+1,??_abs+1
  8577  00274E  1E19               	comf	??_abs^0,f,c
  8578  002750  1E1A               	comf	(??_abs+1)^0,f,c
  8579  002752  4A19               	infsnz	??_abs^0,f,c
  8580  002754  2A1A               	incf	(??_abs+1)^0,f,c
  8581  002756  C019  F017         	movff	??_abs,?_abs
  8582  00275A  C01A  F018         	movff	??_abs+1,?_abs+1
  8583  00275E  EFB5  F013         	goto	l1577
  8584  002762                     l1574:
  8585  002762  C017  F017         	movff	abs@a,?_abs
  8586  002766  C018  F018         	movff	abs@a+1,?_abs+1
  8587  00276A                     l1577:
  8588  00276A  0012               	return		;funcret
  8589  00276C                     __end_of_abs:
  8590                           	opt callstack 0
  8591                           
  8592 ;; *************** function ___aomod *****************
  8593 ;; Defined at:
  8594 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  8595 ;; Parameters:    Size  Location     Type
  8596 ;;  dividend        8    4[COMRAM] long long 
  8597 ;;  divisor         8   12[COMRAM] long long 
  8598 ;; Auto vars:     Size  Location     Type
  8599 ;;  sign            1   21[COMRAM] unsigned char 
  8600 ;;  counter         1   20[COMRAM] unsigned char 
  8601 ;; Return value:  Size  Location     Type
  8602 ;;                  8    4[COMRAM] long long 
  8603 ;; Registers used:
  8604 ;;		wreg, status,2, status,0
  8605 ;; Tracked objects:
  8606 ;;		On entry : 0/0
  8607 ;;		On exit  : 0/0
  8608 ;;		Unchanged: 0/0
  8609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8610 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8611 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8613 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8614 ;;Total ram usage:       18 bytes
  8615 ;; Hardware stack levels used:    1
  8616 ;; Hardware stack levels required when called:    4
  8617 ;; This function calls:
  8618 ;;		Nothing
  8619 ;; This function is called by:
  8620 ;;		_dtoa
  8621 ;; This function uses a non-reentrant model
  8622 ;;
  8623                           
  8624                           	psect	text55
  8625  0014A0                     __ptext55:
  8626                           	opt callstack 0
  8627  0014A0                     ___aomod:
  8628                           	opt callstack 22
  8629  0014A0  0E00               	movlw	0
  8630  0014A2  6E16               	movwf	___aomod@sign^0,c
  8631  0014A4  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
  8632  0014A6  EF59  F00A         	goto	u4340
  8633  0014AA  EF57  F00A         	goto	u4341
  8634  0014AE                     u4341:
  8635  0014AE  EF6B  F00A         	goto	l4598
  8636  0014B2                     u4340:
  8637  0014B2  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  8638  0014B4  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  8639  0014B6  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  8640  0014B8  1E09               	comf	(___aomod@dividend+4)^0,f,c
  8641  0014BA  1E08               	comf	(___aomod@dividend+3)^0,f,c
  8642  0014BC  1E07               	comf	(___aomod@dividend+2)^0,f,c
  8643  0014BE  1E06               	comf	(___aomod@dividend+1)^0,f,c
  8644  0014C0  6C05               	negf	___aomod@dividend^0,c
  8645  0014C2  0E00               	movlw	0
  8646  0014C4  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  8647  0014C6  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  8648  0014C8  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  8649  0014CA  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  8650  0014CC  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  8651  0014CE  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  8652  0014D0  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  8653  0014D2  0E01               	movlw	1
  8654  0014D4  6E16               	movwf	___aomod@sign^0,c
  8655  0014D6                     l4598:
  8656  0014D6  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
  8657  0014D8  EF72  F00A         	goto	u4350
  8658  0014DC  EF70  F00A         	goto	u4351
  8659  0014E0                     u4351:
  8660  0014E0  EF82  F00A         	goto	l4602
  8661  0014E4                     u4350:
  8662  0014E4  1E14               	comf	(___aomod@divisor+7)^0,f,c
  8663  0014E6  1E13               	comf	(___aomod@divisor+6)^0,f,c
  8664  0014E8  1E12               	comf	(___aomod@divisor+5)^0,f,c
  8665  0014EA  1E11               	comf	(___aomod@divisor+4)^0,f,c
  8666  0014EC  1E10               	comf	(___aomod@divisor+3)^0,f,c
  8667  0014EE  1E0F               	comf	(___aomod@divisor+2)^0,f,c
  8668  0014F0  1E0E               	comf	(___aomod@divisor+1)^0,f,c
  8669  0014F2  6C0D               	negf	___aomod@divisor^0,c
  8670  0014F4  0E00               	movlw	0
  8671  0014F6  220E               	addwfc	(___aomod@divisor+1)^0,f,c
  8672  0014F8  220F               	addwfc	(___aomod@divisor+2)^0,f,c
  8673  0014FA  2210               	addwfc	(___aomod@divisor+3)^0,f,c
  8674  0014FC  2211               	addwfc	(___aomod@divisor+4)^0,f,c
  8675  0014FE  2212               	addwfc	(___aomod@divisor+5)^0,f,c
  8676  001500  2213               	addwfc	(___aomod@divisor+6)^0,f,c
  8677  001502  2214               	addwfc	(___aomod@divisor+7)^0,f,c
  8678  001504                     l4602:
  8679  001504  500D               	movf	___aomod@divisor^0,w,c
  8680  001506  100E               	iorwf	(___aomod@divisor+1)^0,w,c
  8681  001508  100F               	iorwf	(___aomod@divisor+2)^0,w,c
  8682  00150A  1010               	iorwf	(___aomod@divisor+3)^0,w,c
  8683  00150C  1011               	iorwf	(___aomod@divisor+4)^0,w,c
  8684  00150E  1012               	iorwf	(___aomod@divisor+5)^0,w,c
  8685  001510  1013               	iorwf	(___aomod@divisor+6)^0,w,c
  8686  001512  1014               	iorwf	(___aomod@divisor+7)^0,w,c
  8687  001514  B4D8               	btfsc	status,2,c
  8688  001516  EF8F  F00A         	goto	u4361
  8689  00151A  EF91  F00A         	goto	u4360
  8690  00151E                     u4361:
  8691  00151E  EFD9  F00A         	goto	l4618
  8692  001522                     u4360:
  8693  001522  0E01               	movlw	1
  8694  001524  6E15               	movwf	___aomod@counter^0,c
  8695  001526  EF9F  F00A         	goto	l4608
  8696  00152A                     l4606:
  8697  00152A  90D8               	bcf	status,0,c
  8698  00152C  360D               	rlcf	___aomod@divisor^0,f,c
  8699  00152E  360E               	rlcf	(___aomod@divisor+1)^0,f,c
  8700  001530  360F               	rlcf	(___aomod@divisor+2)^0,f,c
  8701  001532  3610               	rlcf	(___aomod@divisor+3)^0,f,c
  8702  001534  3611               	rlcf	(___aomod@divisor+4)^0,f,c
  8703  001536  3612               	rlcf	(___aomod@divisor+5)^0,f,c
  8704  001538  3613               	rlcf	(___aomod@divisor+6)^0,f,c
  8705  00153A  3614               	rlcf	(___aomod@divisor+7)^0,f,c
  8706  00153C  2A15               	incf	___aomod@counter^0,f,c
  8707  00153E                     l4608:
  8708  00153E  AE14               	btfss	(___aomod@divisor+7)^0,7,c
  8709  001540  EFA4  F00A         	goto	u4371
  8710  001544  EFA6  F00A         	goto	u4370
  8711  001548                     u4371:
  8712  001548  EF95  F00A         	goto	l4606
  8713  00154C                     u4370:
  8714  00154C                     l4610:
  8715  00154C  500D               	movf	___aomod@divisor^0,w,c
  8716  00154E  5C05               	subwf	___aomod@dividend^0,w,c
  8717  001550  500E               	movf	(___aomod@divisor+1)^0,w,c
  8718  001552  5806               	subwfb	(___aomod@dividend+1)^0,w,c
  8719  001554  500F               	movf	(___aomod@divisor+2)^0,w,c
  8720  001556  5807               	subwfb	(___aomod@dividend+2)^0,w,c
  8721  001558  5010               	movf	(___aomod@divisor+3)^0,w,c
  8722  00155A  5808               	subwfb	(___aomod@dividend+3)^0,w,c
  8723  00155C  5011               	movf	(___aomod@divisor+4)^0,w,c
  8724  00155E  5809               	subwfb	(___aomod@dividend+4)^0,w,c
  8725  001560  5012               	movf	(___aomod@divisor+5)^0,w,c
  8726  001562  580A               	subwfb	(___aomod@dividend+5)^0,w,c
  8727  001564  5013               	movf	(___aomod@divisor+6)^0,w,c
  8728  001566  580B               	subwfb	(___aomod@dividend+6)^0,w,c
  8729  001568  5014               	movf	(___aomod@divisor+7)^0,w,c
  8730  00156A  580C               	subwfb	(___aomod@dividend+7)^0,w,c
  8731  00156C  A0D8               	btfss	status,0,c
  8732  00156E  EFBB  F00A         	goto	u4381
  8733  001572  EFBD  F00A         	goto	u4380
  8734  001576                     u4381:
  8735  001576  EFCD  F00A         	goto	l4614
  8736  00157A                     u4380:
  8737  00157A  500D               	movf	___aomod@divisor^0,w,c
  8738  00157C  5E05               	subwf	___aomod@dividend^0,f,c
  8739  00157E  500E               	movf	(___aomod@divisor+1)^0,w,c
  8740  001580  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
  8741  001582  500F               	movf	(___aomod@divisor+2)^0,w,c
  8742  001584  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
  8743  001586  5010               	movf	(___aomod@divisor+3)^0,w,c
  8744  001588  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
  8745  00158A  5011               	movf	(___aomod@divisor+4)^0,w,c
  8746  00158C  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
  8747  00158E  5012               	movf	(___aomod@divisor+5)^0,w,c
  8748  001590  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
  8749  001592  5013               	movf	(___aomod@divisor+6)^0,w,c
  8750  001594  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
  8751  001596  5014               	movf	(___aomod@divisor+7)^0,w,c
  8752  001598  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
  8753  00159A                     l4614:
  8754  00159A  90D8               	bcf	status,0,c
  8755  00159C  3214               	rrcf	(___aomod@divisor+7)^0,f,c
  8756  00159E  3213               	rrcf	(___aomod@divisor+6)^0,f,c
  8757  0015A0  3212               	rrcf	(___aomod@divisor+5)^0,f,c
  8758  0015A2  3211               	rrcf	(___aomod@divisor+4)^0,f,c
  8759  0015A4  3210               	rrcf	(___aomod@divisor+3)^0,f,c
  8760  0015A6  320F               	rrcf	(___aomod@divisor+2)^0,f,c
  8761  0015A8  320E               	rrcf	(___aomod@divisor+1)^0,f,c
  8762  0015AA  320D               	rrcf	___aomod@divisor^0,f,c
  8763  0015AC  2E15               	decfsz	___aomod@counter^0,f,c
  8764  0015AE  EFA6  F00A         	goto	l4610
  8765  0015B2                     l4618:
  8766  0015B2  5016               	movf	___aomod@sign^0,w,c
  8767  0015B4  B4D8               	btfsc	status,2,c
  8768  0015B6  EFDF  F00A         	goto	u4391
  8769  0015BA  EFE1  F00A         	goto	u4390
  8770  0015BE                     u4391:
  8771  0015BE  EFF1  F00A         	goto	l4622
  8772  0015C2                     u4390:
  8773  0015C2  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  8774  0015C4  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  8775  0015C6  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  8776  0015C8  1E09               	comf	(___aomod@dividend+4)^0,f,c
  8777  0015CA  1E08               	comf	(___aomod@dividend+3)^0,f,c
  8778  0015CC  1E07               	comf	(___aomod@dividend+2)^0,f,c
  8779  0015CE  1E06               	comf	(___aomod@dividend+1)^0,f,c
  8780  0015D0  6C05               	negf	___aomod@dividend^0,c
  8781  0015D2  0E00               	movlw	0
  8782  0015D4  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  8783  0015D6  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  8784  0015D8  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  8785  0015DA  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  8786  0015DC  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  8787  0015DE  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  8788  0015E0  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  8789  0015E2                     l4622:
  8790  0015E2  C005  F005         	movff	___aomod@dividend,?___aomod
  8791  0015E6  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  8792  0015EA  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  8793  0015EE  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  8794  0015F2  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  8795  0015F6  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  8796  0015FA  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  8797  0015FE  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  8798  001602  0012               	return		;funcret
  8799  001604                     __end_of___aomod:
  8800                           	opt callstack 0
  8801                           
  8802 ;; *************** function ___aodiv *****************
  8803 ;; Defined at:
  8804 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  8805 ;; Parameters:    Size  Location     Type
  8806 ;;  dividend        8    4[COMRAM] long long 
  8807 ;;  divisor         8   12[COMRAM] long long 
  8808 ;; Auto vars:     Size  Location     Type
  8809 ;;  quotient        8   22[COMRAM] long long 
  8810 ;;  sign            1   21[COMRAM] unsigned char 
  8811 ;;  counter         1   20[COMRAM] unsigned char 
  8812 ;; Return value:  Size  Location     Type
  8813 ;;                  8    4[COMRAM] long long 
  8814 ;; Registers used:
  8815 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8816 ;; Tracked objects:
  8817 ;;		On entry : 0/0
  8818 ;;		On exit  : 0/0
  8819 ;;		Unchanged: 0/0
  8820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8821 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8822 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8824 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8825 ;;Total ram usage:       26 bytes
  8826 ;; Hardware stack levels used:    1
  8827 ;; Hardware stack levels required when called:    4
  8828 ;; This function calls:
  8829 ;;		Nothing
  8830 ;; This function is called by:
  8831 ;;		_dtoa
  8832 ;; This function uses a non-reentrant model
  8833 ;;
  8834                           
  8835                           	psect	text56
  8836  0011A0                     __ptext56:
  8837                           	opt callstack 0
  8838  0011A0                     ___aodiv:
  8839                           	opt callstack 22
  8840  0011A0  0E00               	movlw	0
  8841  0011A2  6E16               	movwf	___aodiv@sign^0,c
  8842  0011A4  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
  8843  0011A6  EFD9  F008         	goto	u4270
  8844  0011AA  EFD7  F008         	goto	u4271
  8845  0011AE                     u4271:
  8846  0011AE  EFEB  F008         	goto	l4554
  8847  0011B2                     u4270:
  8848  0011B2  1E14               	comf	(___aodiv@divisor+7)^0,f,c
  8849  0011B4  1E13               	comf	(___aodiv@divisor+6)^0,f,c
  8850  0011B6  1E12               	comf	(___aodiv@divisor+5)^0,f,c
  8851  0011B8  1E11               	comf	(___aodiv@divisor+4)^0,f,c
  8852  0011BA  1E10               	comf	(___aodiv@divisor+3)^0,f,c
  8853  0011BC  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
  8854  0011BE  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
  8855  0011C0  6C0D               	negf	___aodiv@divisor^0,c
  8856  0011C2  0E00               	movlw	0
  8857  0011C4  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
  8858  0011C6  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
  8859  0011C8  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
  8860  0011CA  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
  8861  0011CC  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
  8862  0011CE  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
  8863  0011D0  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
  8864  0011D2  0E01               	movlw	1
  8865  0011D4  6E16               	movwf	___aodiv@sign^0,c
  8866  0011D6                     l4554:
  8867  0011D6  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
  8868  0011D8  EFF2  F008         	goto	u4280
  8869  0011DC  EFF0  F008         	goto	u4281
  8870  0011E0                     u4281:
  8871  0011E0  EF04  F009         	goto	l4560
  8872  0011E4                     u4280:
  8873  0011E4  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
  8874  0011E6  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
  8875  0011E8  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
  8876  0011EA  1E09               	comf	(___aodiv@dividend+4)^0,f,c
  8877  0011EC  1E08               	comf	(___aodiv@dividend+3)^0,f,c
  8878  0011EE  1E07               	comf	(___aodiv@dividend+2)^0,f,c
  8879  0011F0  1E06               	comf	(___aodiv@dividend+1)^0,f,c
  8880  0011F2  6C05               	negf	___aodiv@dividend^0,c
  8881  0011F4  0E00               	movlw	0
  8882  0011F6  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
  8883  0011F8  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
  8884  0011FA  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
  8885  0011FC  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
  8886  0011FE  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
  8887  001200  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
  8888  001202  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
  8889  001204  0E01               	movlw	1
  8890  001206  1A16               	xorwf	___aodiv@sign^0,f,c
  8891  001208                     l4560:
  8892  001208  EE20  F017         	lfsr	2,___aodiv@quotient
  8893  00120C  0E07               	movlw	7
  8894  00120E                     u4291:
  8895  00120E  6ADE               	clrf	postinc2,c
  8896  001210  06E8               	decf	wreg,f,c
  8897  001212  E2FD               	bc	u4291
  8898  001214  500D               	movf	___aodiv@divisor^0,w,c
  8899  001216  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
  8900  001218  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
  8901  00121A  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
  8902  00121C  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
  8903  00121E  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
  8904  001220  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
  8905  001222  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
  8906  001224  B4D8               	btfsc	status,2,c
  8907  001226  EF17  F009         	goto	u4301
  8908  00122A  EF19  F009         	goto	u4300
  8909  00122E                     u4301:
  8910  00122E  EF6B  F009         	goto	l4582
  8911  001232                     u4300:
  8912  001232  0E01               	movlw	1
  8913  001234  6E15               	movwf	___aodiv@counter^0,c
  8914  001236  EF27  F009         	goto	l4568
  8915  00123A                     l4566:
  8916  00123A  90D8               	bcf	status,0,c
  8917  00123C  360D               	rlcf	___aodiv@divisor^0,f,c
  8918  00123E  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
  8919  001240  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
  8920  001242  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
  8921  001244  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
  8922  001246  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
  8923  001248  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
  8924  00124A  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
  8925  00124C  2A15               	incf	___aodiv@counter^0,f,c
  8926  00124E                     l4568:
  8927  00124E  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
  8928  001250  EF2C  F009         	goto	u4311
  8929  001254  EF2E  F009         	goto	u4310
  8930  001258                     u4311:
  8931  001258  EF1D  F009         	goto	l4566
  8932  00125C                     u4310:
  8933  00125C                     l4570:
  8934  00125C  90D8               	bcf	status,0,c
  8935  00125E  3617               	rlcf	___aodiv@quotient^0,f,c
  8936  001260  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
  8937  001262  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
  8938  001264  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
  8939  001266  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
  8940  001268  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
  8941  00126A  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
  8942  00126C  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
  8943  00126E  500D               	movf	___aodiv@divisor^0,w,c
  8944  001270  5C05               	subwf	___aodiv@dividend^0,w,c
  8945  001272  500E               	movf	(___aodiv@divisor+1)^0,w,c
  8946  001274  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
  8947  001276  500F               	movf	(___aodiv@divisor+2)^0,w,c
  8948  001278  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
  8949  00127A  5010               	movf	(___aodiv@divisor+3)^0,w,c
  8950  00127C  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
  8951  00127E  5011               	movf	(___aodiv@divisor+4)^0,w,c
  8952  001280  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
  8953  001282  5012               	movf	(___aodiv@divisor+5)^0,w,c
  8954  001284  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
  8955  001286  5013               	movf	(___aodiv@divisor+6)^0,w,c
  8956  001288  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
  8957  00128A  5014               	movf	(___aodiv@divisor+7)^0,w,c
  8958  00128C  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
  8959  00128E  A0D8               	btfss	status,0,c
  8960  001290  EF4C  F009         	goto	u4321
  8961  001294  EF4E  F009         	goto	u4320
  8962  001298                     u4321:
  8963  001298  EF5F  F009         	goto	l4578
  8964  00129C                     u4320:
  8965  00129C  500D               	movf	___aodiv@divisor^0,w,c
  8966  00129E  5E05               	subwf	___aodiv@dividend^0,f,c
  8967  0012A0  500E               	movf	(___aodiv@divisor+1)^0,w,c
  8968  0012A2  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
  8969  0012A4  500F               	movf	(___aodiv@divisor+2)^0,w,c
  8970  0012A6  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
  8971  0012A8  5010               	movf	(___aodiv@divisor+3)^0,w,c
  8972  0012AA  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
  8973  0012AC  5011               	movf	(___aodiv@divisor+4)^0,w,c
  8974  0012AE  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
  8975  0012B0  5012               	movf	(___aodiv@divisor+5)^0,w,c
  8976  0012B2  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
  8977  0012B4  5013               	movf	(___aodiv@divisor+6)^0,w,c
  8978  0012B6  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
  8979  0012B8  5014               	movf	(___aodiv@divisor+7)^0,w,c
  8980  0012BA  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
  8981  0012BC  8017               	bsf	___aodiv@quotient^0,0,c
  8982  0012BE                     l4578:
  8983  0012BE  90D8               	bcf	status,0,c
  8984  0012C0  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
  8985  0012C2  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
  8986  0012C4  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
  8987  0012C6  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
  8988  0012C8  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
  8989  0012CA  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
  8990  0012CC  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
  8991  0012CE  320D               	rrcf	___aodiv@divisor^0,f,c
  8992  0012D0  2E15               	decfsz	___aodiv@counter^0,f,c
  8993  0012D2  EF2E  F009         	goto	l4570
  8994  0012D6                     l4582:
  8995  0012D6  5016               	movf	___aodiv@sign^0,w,c
  8996  0012D8  B4D8               	btfsc	status,2,c
  8997  0012DA  EF71  F009         	goto	u4331
  8998  0012DE  EF73  F009         	goto	u4330
  8999  0012E2                     u4331:
  9000  0012E2  EF83  F009         	goto	l4586
  9001  0012E6                     u4330:
  9002  0012E6  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
  9003  0012E8  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
  9004  0012EA  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
  9005  0012EC  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
  9006  0012EE  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
  9007  0012F0  1E19               	comf	(___aodiv@quotient+2)^0,f,c
  9008  0012F2  1E18               	comf	(___aodiv@quotient+1)^0,f,c
  9009  0012F4  6C17               	negf	___aodiv@quotient^0,c
  9010  0012F6  0E00               	movlw	0
  9011  0012F8  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
  9012  0012FA  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
  9013  0012FC  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
  9014  0012FE  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
  9015  001300  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
  9016  001302  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
  9017  001304  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
  9018  001306                     l4586:
  9019  001306  C017  F005         	movff	___aodiv@quotient,?___aodiv
  9020  00130A  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  9021  00130E  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  9022  001312  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  9023  001316  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  9024  00131A  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  9025  00131E  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  9026  001322  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  9027  001326  0012               	return		;funcret
  9028  001328                     __end_of___aodiv:
  9029                           	opt callstack 0
  9030                           
  9031 ;; *************** function _atoi *****************
  9032 ;; Defined at:
  9033 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  9034 ;; Parameters:    Size  Location     Type
  9035 ;;  s               2   11[COMRAM] PTR const unsigned char 
  9036 ;;		 -> STR_19(27), STR_18(21), STR_17(36), STR_16(28), 
  9037 ;;		 -> STR_15(4), STR_14(23), STR_13(32), STR_12(4), 
  9038 ;;		 -> STR_11(23), STR_10(19), STR_9(35), STR_8(55), 
  9039 ;;		 -> STR_7(53), STR_6(29), STR_3(43), STR_2(25), 
  9040 ;;		 -> STR_1(57), 
  9041 ;; Auto vars:     Size  Location     Type
  9042 ;;  n               2   24[COMRAM] int 
  9043 ;;  neg             2   17[COMRAM] int 
  9044 ;; Return value:  Size  Location     Type
  9045 ;;                  2   11[COMRAM] int 
  9046 ;; Registers used:
  9047 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9048 ;; Tracked objects:
  9049 ;;		On entry : 0/0
  9050 ;;		On exit  : 0/0
  9051 ;;		Unchanged: 0/0
  9052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9053 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9054 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9055 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9056 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9057 ;;Total ram usage:       15 bytes
  9058 ;; Hardware stack levels used:    1
  9059 ;; Hardware stack levels required when called:    5
  9060 ;; This function calls:
  9061 ;;		___wmul
  9062 ;;		_isdigit
  9063 ;;		_isspace
  9064 ;; This function is called by:
  9065 ;;		_vfpfcnvrt
  9066 ;; This function uses a non-reentrant model
  9067 ;;
  9068                           
  9069                           	psect	text57
  9070  001006                     __ptext57:
  9071                           	opt callstack 0
  9072  001006                     _atoi:
  9073                           	opt callstack 22
  9074  001006  0E00               	movlw	0
  9075  001008  6E1A               	movwf	(atoi@n+1)^0,c
  9076  00100A  0E00               	movlw	0
  9077  00100C  6E19               	movwf	atoi@n^0,c
  9078  00100E  0E00               	movlw	0
  9079  001010  6E13               	movwf	(atoi@neg+1)^0,c
  9080  001012  0E00               	movlw	0
  9081  001014  6E12               	movwf	atoi@neg^0,c
  9082  001016  EF0F  F008         	goto	l4886
  9083  00101A                     l4884:
  9084  00101A  4A0C               	infsnz	atoi@s^0,f,c
  9085  00101C  2A0D               	incf	(atoi@s+1)^0,f,c
  9086  00101E                     l4886:
  9087  00101E  0E01               	movlw	1
  9088  001020  6E18               	movwf	_atoi$1817^0,c
  9089  001022  C00C  FFF6         	movff	atoi@s,tblptrl
  9090  001026  C00D  FFF7         	movff	atoi@s+1,tblptrh
  9091  00102A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9092  00102A  6AF8               	clrf	tblptru,c
  9093  00102C                     	endif
  9094  00102C                     	if	0	;tblptru may be non-zero
  9095  00102C                     	endif
  9096  00102C  0008               	tblrd		*
  9097  00102E  50F5               	movf	tablat,w,c
  9098  001030  0A20               	xorlw	32
  9099  001032  B4D8               	btfsc	status,2,c
  9100  001034  EF1E  F008         	goto	u4981
  9101  001038  EF20  F008         	goto	u4980
  9102  00103C                     u4981:
  9103  00103C  EF3E  F008         	goto	l4894
  9104  001040                     u4980:
  9105  001040  0EF7               	movlw	247
  9106  001042  6E0E               	movwf	??_atoi^0,c
  9107  001044  0EFF               	movlw	255
  9108  001046  6E0F               	movwf	(??_atoi+1)^0,c
  9109  001048  C00C  FFF6         	movff	atoi@s,tblptrl
  9110  00104C  C00D  FFF7         	movff	atoi@s+1,tblptrh
  9111  001050                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9112  001050  6AF8               	clrf	tblptru,c
  9113  001052                     	endif
  9114  001052                     	if	0	;tblptru may be non-zero
  9115  001052                     	endif
  9116  001052  0008               	tblrd		*
  9117  001054  50F5               	movf	tablat,w,c
  9118  001056  6E10               	movwf	(??_atoi+2)^0,c
  9119  001058  6A11               	clrf	(??_atoi+3)^0,c
  9120  00105A  500E               	movf	??_atoi^0,w,c
  9121  00105C  2610               	addwf	(??_atoi+2)^0,f,c
  9122  00105E  500F               	movf	(??_atoi+1)^0,w,c
  9123  001060  2211               	addwfc	(??_atoi+3)^0,f,c
  9124  001062  5011               	movf	(??_atoi+3)^0,w,c
  9125  001064  E109               	bnz	u4990
  9126  001066  0E05               	movlw	5
  9127  001068  5C10               	subwf	(??_atoi+2)^0,w,c
  9128  00106A  A0D8               	btfss	status,0,c
  9129  00106C  EF3A  F008         	goto	u4991
  9130  001070  EF3C  F008         	goto	u4990
  9131  001074                     u4991:
  9132  001074  EF3E  F008         	goto	l4894
  9133  001078                     u4990:
  9134  001078  0E00               	movlw	0
  9135  00107A  6E18               	movwf	_atoi$1817^0,c
  9136  00107C                     l4894:
  9137  00107C  C018  F014         	movff	_atoi$1817,_atoi$1816
  9138  001080  6A15               	clrf	(_atoi$1816+1)^0,c
  9139  001082  5014               	movf	_atoi$1816^0,w,c
  9140  001084  1015               	iorwf	(_atoi$1816+1)^0,w,c
  9141  001086  A4D8               	btfss	status,2,c
  9142  001088  EF48  F008         	goto	u5001
  9143  00108C  EF4A  F008         	goto	u5000
  9144  001090                     u5001:
  9145  001090  EF0D  F008         	goto	l4884
  9146  001094                     u5000:
  9147  001094  EF54  F008         	goto	l4904
  9148  001098                     l4900:
  9149  001098  0E00               	movlw	0
  9150  00109A  6E13               	movwf	(atoi@neg+1)^0,c
  9151  00109C  0E01               	movlw	1
  9152  00109E  6E12               	movwf	atoi@neg^0,c
  9153  0010A0                     l4902:
  9154  0010A0  4A0C               	infsnz	atoi@s^0,f,c
  9155  0010A2  2A0D               	incf	(atoi@s+1)^0,f,c
  9156  0010A4  EF8B  F008         	goto	l4910
  9157  0010A8                     l4904:
  9158  0010A8  C00C  FFF6         	movff	atoi@s,tblptrl
  9159  0010AC  C00D  FFF7         	movff	atoi@s+1,tblptrh
  9160  0010B0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9161  0010B0  6AF8               	clrf	tblptru,c
  9162  0010B2                     	endif
  9163  0010B2                     	if	0	;tblptru may be non-zero
  9164  0010B2                     	endif
  9165  0010B2  0008               	tblrd		*
  9166  0010B4  50F5               	movf	tablat,w,c
  9167  0010B6  6E0E               	movwf	??_atoi^0,c
  9168  0010B8  6A0F               	clrf	(??_atoi+1)^0,c
  9169                           
  9170                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9171                           ; Switch size 1, requested type "simple"
  9172                           ; Number of cases is 1, Range of values is 0 to 0
  9173                           ; switch strategies available:
  9174                           ; Name         Instructions Cycles
  9175                           ; simple_byte            4     3 (average)
  9176                           ;	Chosen strategy is simple_byte
  9177  0010BA  500F               	movf	(??_atoi+1)^0,w,c
  9178  0010BC  0A00               	xorlw	0	; case 0
  9179  0010BE  B4D8               	btfsc	status,2,c
  9180  0010C0  EF64  F008         	goto	l5616
  9181  0010C4  EF8B  F008         	goto	l4910
  9182  0010C8                     l5616:
  9183                           
  9184                           ; Switch size 1, requested type "simple"
  9185                           ; Number of cases is 2, Range of values is 43 to 45
  9186                           ; switch strategies available:
  9187                           ; Name         Instructions Cycles
  9188                           ; simple_byte            7     4 (average)
  9189                           ;	Chosen strategy is simple_byte
  9190  0010C8  500E               	movf	??_atoi^0,w,c
  9191  0010CA  0A2B               	xorlw	43	; case 43
  9192  0010CC  B4D8               	btfsc	status,2,c
  9193  0010CE  EF50  F008         	goto	l4902
  9194  0010D2  0A06               	xorlw	6	; case 45
  9195  0010D4  B4D8               	btfsc	status,2,c
  9196  0010D6  EF4C  F008         	goto	l4900
  9197  0010DA  EF8B  F008         	goto	l4910
  9198  0010DE                     l4906:
  9199  0010DE  C019  F005         	movff	atoi@n,___wmul@multiplier
  9200  0010E2  C01A  F006         	movff	atoi@n+1,___wmul@multiplier+1
  9201  0010E6  0E00               	movlw	0
  9202  0010E8  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  9203  0010EA  0E0A               	movlw	10
  9204  0010EC  6E07               	movwf	___wmul@multiplicand^0,c
  9205  0010EE  EC68  F014         	call	___wmul	;wreg free
  9206  0010F2  C00C  FFF6         	movff	atoi@s,tblptrl
  9207  0010F6  C00D  FFF7         	movff	atoi@s+1,tblptrh
  9208  0010FA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9209  0010FA  6AF8               	clrf	tblptru,c
  9210  0010FC                     	endif
  9211  0010FC                     	if	0	;tblptru may be non-zero
  9212  0010FC                     	endif
  9213  0010FC  0008               	tblrd		*
  9214  0010FE  50F5               	movf	tablat,w,c
  9215  001100  5E05               	subwf	?___wmul^0,f,c
  9216  001102  0E00               	movlw	0
  9217  001104  5A06               	subwfb	(?___wmul+1)^0,f,c
  9218  001106  0E30               	movlw	48
  9219  001108  2405               	addwf	?___wmul^0,w,c
  9220  00110A  6E19               	movwf	atoi@n^0,c
  9221  00110C  0E00               	movlw	0
  9222  00110E  2006               	addwfc	(?___wmul+1)^0,w,c
  9223  001110  6E1A               	movwf	(atoi@n+1)^0,c
  9224  001112  EF50  F008         	goto	l4902
  9225  001116                     l4910:
  9226  001116  0ED0               	movlw	208
  9227  001118  6E0E               	movwf	??_atoi^0,c
  9228  00111A  0EFF               	movlw	255
  9229  00111C  6E0F               	movwf	(??_atoi+1)^0,c
  9230  00111E  C00C  FFF6         	movff	atoi@s,tblptrl
  9231  001122  C00D  FFF7         	movff	atoi@s+1,tblptrh
  9232  001126                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9233  001126  6AF8               	clrf	tblptru,c
  9234  001128                     	endif
  9235  001128                     	if	0	;tblptru may be non-zero
  9236  001128                     	endif
  9237  001128  0008               	tblrd		*
  9238  00112A  50F5               	movf	tablat,w,c
  9239  00112C  6E10               	movwf	(??_atoi+2)^0,c
  9240  00112E  6A11               	clrf	(??_atoi+3)^0,c
  9241  001130  500E               	movf	??_atoi^0,w,c
  9242  001132  2610               	addwf	(??_atoi+2)^0,f,c
  9243  001134  500F               	movf	(??_atoi+1)^0,w,c
  9244  001136  2211               	addwfc	(??_atoi+3)^0,f,c
  9245  001138  5011               	movf	(??_atoi+3)^0,w,c
  9246  00113A  E10A               	bnz	u5010
  9247  00113C  0E0A               	movlw	10
  9248  00113E  5C10               	subwf	(??_atoi+2)^0,w,c
  9249  001140  A0D8               	btfss	status,0,c
  9250  001142  EFA5  F008         	goto	u5011
  9251  001146  EFA8  F008         	goto	u5010
  9252  00114A                     u5011:
  9253  00114A  0E01               	movlw	1
  9254  00114C  EFA9  F008         	goto	u5020
  9255  001150                     u5010:
  9256  001150  0E00               	movlw	0
  9257  001152                     u5020:
  9258  001152  6E16               	movwf	_atoi$1818^0,c
  9259  001154  6A17               	clrf	(_atoi$1818+1)^0,c
  9260  001156  5016               	movf	_atoi$1818^0,w,c
  9261  001158  1017               	iorwf	(_atoi$1818+1)^0,w,c
  9262  00115A  A4D8               	btfss	status,2,c
  9263  00115C  EFB2  F008         	goto	u5031
  9264  001160  EFB4  F008         	goto	u5030
  9265  001164                     u5031:
  9266  001164  EF6F  F008         	goto	l4906
  9267  001168                     u5030:
  9268  001168  5012               	movf	atoi@neg^0,w,c
  9269  00116A  1013               	iorwf	(atoi@neg+1)^0,w,c
  9270  00116C  A4D8               	btfss	status,2,c
  9271  00116E  EFBB  F008         	goto	u5041
  9272  001172  EFBD  F008         	goto	u5040
  9273  001176                     u5041:
  9274  001176  EFCB  F008         	goto	l1605
  9275  00117A                     u5040:
  9276  00117A  C019  F00E         	movff	atoi@n,??_atoi
  9277  00117E  C01A  F00F         	movff	atoi@n+1,??_atoi+1
  9278  001182  1E0E               	comf	??_atoi^0,f,c
  9279  001184  1E0F               	comf	(??_atoi+1)^0,f,c
  9280  001186  4A0E               	infsnz	??_atoi^0,f,c
  9281  001188  2A0F               	incf	(??_atoi+1)^0,f,c
  9282  00118A  C00E  F00C         	movff	??_atoi,?_atoi
  9283  00118E  C00F  F00D         	movff	??_atoi+1,?_atoi+1
  9284  001192  EFCF  F008         	goto	l1608
  9285  001196                     l1605:
  9286  001196  C019  F00C         	movff	atoi@n,?_atoi
  9287  00119A  C01A  F00D         	movff	atoi@n+1,?_atoi+1
  9288  00119E                     l1608:
  9289  00119E  0012               	return		;funcret
  9290  0011A0                     __end_of_atoi:
  9291                           	opt callstack 0
  9292                           
  9293 ;; *************** function _isspace *****************
  9294 ;; Defined at:
  9295 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  9296 ;; Parameters:    Size  Location     Type
  9297 ;;  c               2    4[COMRAM] int 
  9298 ;; Auto vars:     Size  Location     Type
  9299 ;;		None
  9300 ;; Return value:  Size  Location     Type
  9301 ;;                  2    4[COMRAM] int 
  9302 ;; Registers used:
  9303 ;;		wreg, status,2, status,0
  9304 ;; Tracked objects:
  9305 ;;		On entry : 0/0
  9306 ;;		On exit  : 0/0
  9307 ;;		Unchanged: 0/0
  9308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9309 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9310 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9311 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9312 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9313 ;;Total ram usage:        7 bytes
  9314 ;; Hardware stack levels used:    1
  9315 ;; Hardware stack levels required when called:    4
  9316 ;; This function calls:
  9317 ;;		Nothing
  9318 ;; This function is called by:
  9319 ;;		_atoi
  9320 ;; This function uses a non-reentrant model
  9321 ;;
  9322                           
  9323                           	psect	text58
  9324  0024E2                     __ptext58:
  9325                           	opt callstack 0
  9326  0024E2                     _isspace:
  9327                           	opt callstack 22
  9328  0024E2  0E01               	movlw	1
  9329  0024E4  6E0B               	movwf	_isspace$1843^0,c
  9330  0024E6  0E20               	movlw	32
  9331  0024E8  1805               	xorwf	isspace@c^0,w,c
  9332  0024EA  1006               	iorwf	(isspace@c+1)^0,w,c
  9333  0024EC  B4D8               	btfsc	status,2,c
  9334  0024EE  EF7B  F012         	goto	u4471
  9335  0024F2  EF7D  F012         	goto	u4470
  9336  0024F6                     u4471:
  9337  0024F6  EF96  F012         	goto	l4672
  9338  0024FA                     u4470:
  9339  0024FA  0EF7               	movlw	247
  9340  0024FC  6E07               	movwf	??_isspace^0,c
  9341  0024FE  0EFF               	movlw	255
  9342  002500  6E08               	movwf	(??_isspace+1)^0,c
  9343  002502  C005  F009         	movff	isspace@c,??_isspace+2
  9344  002506  C006  F00A         	movff	isspace@c+1,??_isspace+3
  9345  00250A  5007               	movf	??_isspace^0,w,c
  9346  00250C  2609               	addwf	(??_isspace+2)^0,f,c
  9347  00250E  5008               	movf	(??_isspace+1)^0,w,c
  9348  002510  220A               	addwfc	(??_isspace+3)^0,f,c
  9349  002512  500A               	movf	(??_isspace+3)^0,w,c
  9350  002514  E109               	bnz	u4480
  9351  002516  0E05               	movlw	5
  9352  002518  5C09               	subwf	(??_isspace+2)^0,w,c
  9353  00251A  A0D8               	btfss	status,0,c
  9354  00251C  EF92  F012         	goto	u4481
  9355  002520  EF94  F012         	goto	u4480
  9356  002524                     u4481:
  9357  002524  EF96  F012         	goto	l4672
  9358  002528                     u4480:
  9359  002528  0E00               	movlw	0
  9360  00252A  6E0B               	movwf	_isspace$1843^0,c
  9361  00252C                     l4672:
  9362  00252C  C00B  F005         	movff	_isspace$1843,?_isspace
  9363  002530  6A06               	clrf	(?_isspace+1)^0,c
  9364  002532  0012               	return		;funcret
  9365  002534                     __end_of_isspace:
  9366                           	opt callstack 0
  9367                           
  9368 ;; *************** function _isdigit *****************
  9369 ;; Defined at:
  9370 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  9371 ;; Parameters:    Size  Location     Type
  9372 ;;  c               2    4[COMRAM] int 
  9373 ;; Auto vars:     Size  Location     Type
  9374 ;;		None
  9375 ;; Return value:  Size  Location     Type
  9376 ;;                  2    4[COMRAM] int 
  9377 ;; Registers used:
  9378 ;;		wreg, status,2, status,0
  9379 ;; Tracked objects:
  9380 ;;		On entry : 0/0
  9381 ;;		On exit  : 0/0
  9382 ;;		Unchanged: 0/0
  9383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9384 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9386 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9387 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9388 ;;Total ram usage:        6 bytes
  9389 ;; Hardware stack levels used:    1
  9390 ;; Hardware stack levels required when called:    4
  9391 ;; This function calls:
  9392 ;;		Nothing
  9393 ;; This function is called by:
  9394 ;;		_vfpfcnvrt
  9395 ;;		_atoi
  9396 ;; This function uses a non-reentrant model
  9397 ;;
  9398                           
  9399                           	psect	text59
  9400  002818                     __ptext59:
  9401                           	opt callstack 0
  9402  002818                     _isdigit:
  9403                           	opt callstack 23
  9404  002818  0ED0               	movlw	208
  9405  00281A  6E07               	movwf	??_isdigit^0,c
  9406  00281C  0EFF               	movlw	255
  9407  00281E  6E08               	movwf	(??_isdigit+1)^0,c
  9408  002820  C005  F009         	movff	isdigit@c,??_isdigit+2
  9409  002824  C006  F00A         	movff	isdigit@c+1,??_isdigit+3
  9410  002828  5007               	movf	??_isdigit^0,w,c
  9411  00282A  2609               	addwf	(??_isdigit+2)^0,f,c
  9412  00282C  5008               	movf	(??_isdigit+1)^0,w,c
  9413  00282E  220A               	addwfc	(??_isdigit+3)^0,f,c
  9414  002830  500A               	movf	(??_isdigit+3)^0,w,c
  9415  002832  E10A               	bnz	u4250
  9416  002834  0E0A               	movlw	10
  9417  002836  5C09               	subwf	(??_isdigit+2)^0,w,c
  9418  002838  A0D8               	btfss	status,0,c
  9419  00283A  EF21  F014         	goto	u4251
  9420  00283E  EF24  F014         	goto	u4250
  9421  002842                     u4251:
  9422  002842  0E01               	movlw	1
  9423  002844  EF25  F014         	goto	u4260
  9424  002848                     u4250:
  9425  002848  0E00               	movlw	0
  9426  00284A                     u4260:
  9427  00284A  6E05               	movwf	?_isdigit^0,c
  9428  00284C  6A06               	clrf	(?_isdigit+1)^0,c
  9429  00284E  0012               	return		;funcret
  9430  002850                     __end_of_isdigit:
  9431                           	opt callstack 0
  9432                           
  9433 ;; *************** function ___wmul *****************
  9434 ;; Defined at:
  9435 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  9436 ;; Parameters:    Size  Location     Type
  9437 ;;  multiplier      2    4[COMRAM] unsigned int 
  9438 ;;  multiplicand    2    6[COMRAM] unsigned int 
  9439 ;; Auto vars:     Size  Location     Type
  9440 ;;  product         2    8[COMRAM] unsigned int 
  9441 ;; Return value:  Size  Location     Type
  9442 ;;                  2    4[COMRAM] unsigned int 
  9443 ;; Registers used:
  9444 ;;		wreg, status,2, status,0, prodl, prodh
  9445 ;; Tracked objects:
  9446 ;;		On entry : 0/0
  9447 ;;		On exit  : 0/0
  9448 ;;		Unchanged: 0/0
  9449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9450 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9451 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9453 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9454 ;;Total ram usage:        6 bytes
  9455 ;; Hardware stack levels used:    1
  9456 ;; Hardware stack levels required when called:    4
  9457 ;; This function calls:
  9458 ;;		Nothing
  9459 ;; This function is called by:
  9460 ;;		_atoi
  9461 ;; This function uses a non-reentrant model
  9462 ;;
  9463                           
  9464                           	psect	text60
  9465  0028D0                     __ptext60:
  9466                           	opt callstack 0
  9467  0028D0                     ___wmul:
  9468                           	opt callstack 22
  9469  0028D0  5005               	movf	___wmul@multiplier^0,w,c
  9470  0028D2  0207               	mulwf	___wmul@multiplicand^0,c
  9471  0028D4  CFF3 F009          	movff	prodl,___wmul@product
  9472  0028D8  CFF4 F00A          	movff	prodh,___wmul@product+1
  9473  0028DC  5005               	movf	___wmul@multiplier^0,w,c
  9474  0028DE  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  9475  0028E0  50F3               	movf	243,w,c
  9476  0028E2  260A               	addwf	(___wmul@product+1)^0,f,c
  9477  0028E4  5006               	movf	(___wmul@multiplier+1)^0,w,c
  9478  0028E6  0207               	mulwf	___wmul@multiplicand^0,c
  9479  0028E8  50F3               	movf	243,w,c
  9480  0028EA  260A               	addwf	(___wmul@product+1)^0,f,c
  9481  0028EC  C009  F005         	movff	___wmul@product,?___wmul
  9482  0028F0  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  9483  0028F4  0012               	return		;funcret
  9484  0028F6                     __end_of___wmul:
  9485                           	opt callstack 0
  9486                           
  9487 ;; *************** function _ClearModbusRespon *****************
  9488 ;; Defined at:
  9489 ;;		line 84 in file "main.c"
  9490 ;; Parameters:    Size  Location     Type
  9491 ;;		None
  9492 ;; Auto vars:     Size  Location     Type
  9493 ;;  i               2    4[COMRAM] int 
  9494 ;; Return value:  Size  Location     Type
  9495 ;;                  1    wreg      void 
  9496 ;; Registers used:
  9497 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9498 ;; Tracked objects:
  9499 ;;		On entry : 0/0
  9500 ;;		On exit  : 0/0
  9501 ;;		Unchanged: 0/0
  9502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9504 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9506 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9507 ;;Total ram usage:        2 bytes
  9508 ;; Hardware stack levels used:    1
  9509 ;; Hardware stack levels required when called:    4
  9510 ;; This function calls:
  9511 ;;		Nothing
  9512 ;; This function is called by:
  9513 ;;		_main
  9514 ;; This function uses a non-reentrant model
  9515 ;;
  9516                           
  9517                           	psect	text61
  9518  0026EA                     __ptext61:
  9519                           	opt callstack 0
  9520  0026EA                     _ClearModbusRespon:
  9521                           	opt callstack 26
  9522  0026EA                     
  9523                           ;main.c: 85:     int i = 0;
  9524  0026EA  0E00               	movlw	0
  9525  0026EC  6E06               	movwf	(ClearModbusRespon@i+1)^0,c
  9526  0026EE  0E00               	movlw	0
  9527  0026F0  6E05               	movwf	ClearModbusRespon@i^0,c
  9528                           
  9529                           ;main.c: 86:     for(i=0; i<32; i++ ){
  9530  0026F2  0E00               	movlw	0
  9531  0026F4  6E06               	movwf	(ClearModbusRespon@i+1)^0,c
  9532  0026F6  0E00               	movlw	0
  9533  0026F8  6E05               	movwf	ClearModbusRespon@i^0,c
  9534  0026FA                     l5336:
  9535                           
  9536                           ;main.c: 87:         MBRespon[i] = 0xFF;
  9537  0026FA  0EA4               	movlw	low _MBRespon
  9538  0026FC  2405               	addwf	ClearModbusRespon@i^0,w,c
  9539  0026FE  6ED9               	movwf	fsr2l,c
  9540  002700  0E01               	movlw	high _MBRespon
  9541  002702  2006               	addwfc	(ClearModbusRespon@i+1)^0,w,c
  9542  002704  6EDA               	movwf	fsr2h,c
  9543  002706  0EFF               	movlw	255
  9544  002708  6EDF               	movwf	indf2,c
  9545  00270A                     
  9546                           ;main.c: 88:     }
  9547  00270A  4A05               	infsnz	ClearModbusRespon@i^0,f,c
  9548  00270C  2A06               	incf	(ClearModbusRespon@i+1)^0,f,c
  9549  00270E  BE06               	btfsc	(ClearModbusRespon@i+1)^0,7,c
  9550  002710  EF93  F013         	goto	u5441
  9551  002714  5006               	movf	(ClearModbusRespon@i+1)^0,w,c
  9552  002716  E109               	bnz	u5440
  9553  002718  0E20               	movlw	32
  9554  00271A  5C05               	subwf	ClearModbusRespon@i^0,w,c
  9555  00271C  A0D8               	btfss	status,0,c
  9556  00271E  EF93  F013         	goto	u5441
  9557  002722  EF95  F013         	goto	u5440
  9558  002726                     u5441:
  9559  002726  EF7D  F013         	goto	l5336
  9560  00272A                     u5440:
  9561  00272A  0012               	return		;funcret
  9562  00272C                     __end_of_ClearModbusRespon:
  9563                           	opt callstack 0
  9564                           
  9565 ;; *************** function _ClearModbusData *****************
  9566 ;; Defined at:
  9567 ;;		line 28 in file "Modbus.c"
  9568 ;; Parameters:    Size  Location     Type
  9569 ;;		None
  9570 ;; Auto vars:     Size  Location     Type
  9571 ;;  i               2    4[COMRAM] int 
  9572 ;; Return value:  Size  Location     Type
  9573 ;;                  1    wreg      void 
  9574 ;; Registers used:
  9575 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9576 ;; Tracked objects:
  9577 ;;		On entry : 0/0
  9578 ;;		On exit  : 0/0
  9579 ;;		Unchanged: 0/0
  9580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9582 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9584 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9585 ;;Total ram usage:        2 bytes
  9586 ;; Hardware stack levels used:    1
  9587 ;; Hardware stack levels required when called:    4
  9588 ;; This function calls:
  9589 ;;		Nothing
  9590 ;; This function is called by:
  9591 ;;		_main
  9592 ;; This function uses a non-reentrant model
  9593 ;;
  9594                           
  9595                           	psect	text62
  9596  002584                     __ptext62:
  9597                           	opt callstack 0
  9598  002584                     _ClearModbusData:
  9599                           	opt callstack 26
  9600  002584                     
  9601                           ;Modbus.c: 29:     int i = 0;
  9602  002584  0E00               	movlw	0
  9603  002586  6E06               	movwf	(ClearModbusData@i+1)^0,c
  9604  002588  0E00               	movlw	0
  9605  00258A  6E05               	movwf	ClearModbusData@i^0,c
  9606                           
  9607                           ;Modbus.c: 30:     for(i=0; i<99; i++ ){
  9608  00258C  0E00               	movlw	0
  9609  00258E  6E06               	movwf	(ClearModbusData@i+1)^0,c
  9610  002590  0E00               	movlw	0
  9611  002592  6E05               	movwf	ClearModbusData@i^0,c
  9612  002594                     l5472:
  9613                           
  9614                           ;Modbus.c: 31:         ModbusData[i] = 0xFF;
  9615  002594  0E00               	movlw	low _ModbusData
  9616  002596  2405               	addwf	ClearModbusData@i^0,w,c
  9617  002598  6ED9               	movwf	fsr2l,c
  9618  00259A  0E01               	movlw	high _ModbusData
  9619  00259C  2006               	addwfc	(ClearModbusData@i+1)^0,w,c
  9620  00259E  6EDA               	movwf	fsr2h,c
  9621  0025A0  0EFF               	movlw	255
  9622  0025A2  6EDF               	movwf	indf2,c
  9623  0025A4                     
  9624                           ;Modbus.c: 32:     }
  9625  0025A4  4A05               	infsnz	ClearModbusData@i^0,f,c
  9626  0025A6  2A06               	incf	(ClearModbusData@i+1)^0,f,c
  9627  0025A8  BE06               	btfsc	(ClearModbusData@i+1)^0,7,c
  9628  0025AA  EFE0  F012         	goto	u5601
  9629  0025AE  5006               	movf	(ClearModbusData@i+1)^0,w,c
  9630  0025B0  E109               	bnz	u5600
  9631  0025B2  0E63               	movlw	99
  9632  0025B4  5C05               	subwf	ClearModbusData@i^0,w,c
  9633  0025B6  A0D8               	btfss	status,0,c
  9634  0025B8  EFE0  F012         	goto	u5601
  9635  0025BC  EFE2  F012         	goto	u5600
  9636  0025C0                     u5601:
  9637  0025C0  EFCA  F012         	goto	l5472
  9638  0025C4                     u5600:
  9639  0025C4                     
  9640                           ;Modbus.c: 34:     ModDataCnt = 0;
  9641  0025C4  0E00               	movlw	0
  9642  0025C6  0100               	movlb	0	; () banked
  9643  0025C8  6F95               	movwf	(_ModDataCnt+1)& (0+255),b
  9644  0025CA  0E00               	movlw	0
  9645  0025CC  6F94               	movwf	_ModDataCnt& (0+255),b
  9646  0025CE                     
  9647                           ; BSR set to: 0
  9648  0025CE  0012               	return		;funcret
  9649  0025D0                     __end_of_ClearModbusData:
  9650                           	opt callstack 0
  9651                           
  9652 ;; *************** function _INTERRUPT_InterruptManager *****************
  9653 ;; Defined at:
  9654 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  9655 ;; Parameters:    Size  Location     Type
  9656 ;;		None
  9657 ;; Auto vars:     Size  Location     Type
  9658 ;;		None
  9659 ;; Return value:  Size  Location     Type
  9660 ;;                  1    wreg      void 
  9661 ;; Registers used:
  9662 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  9663 ;; Tracked objects:
  9664 ;;		On entry : 0/0
  9665 ;;		On exit  : 0/0
  9666 ;;		Unchanged: 0/0
  9667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9670 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9671 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9672 ;;Total ram usage:        4 bytes
  9673 ;; Hardware stack levels used:    1
  9674 ;; Hardware stack levels required when called:    3
  9675 ;; This function calls:
  9676 ;;		Absolute function
  9677 ;;		_EUSART1_Receive_ISR
  9678 ;;		_EUSART1_Transmit_ISR
  9679 ;;		_EUSART2_Receive_ISR
  9680 ;;		_EUSART2_Transmit_ISR
  9681 ;; This function is called by:
  9682 ;;		Interrupt level 2
  9683 ;; This function uses a non-reentrant model
  9684 ;;
  9685                           
  9686                           	psect	intcode
  9687  000008                     __pintcode:
  9688                           	opt callstack 0
  9689  000008                     _INTERRUPT_InterruptManager:
  9690                           	opt callstack 16
  9691                           
  9692                           ; BSR set to: 0
  9693                           ;incstack = 0
  9694  000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9695  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  9696  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  9697  000012  CFD9 F003          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  9698  000016  CFDA F004          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  9699  00001A                     
  9700                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  9701  00001A  ACF2               	btfss	242,6,c	;volatile
  9702  00001C  EF12  F000         	goto	i2u385_41
  9703  000020  EF14  F000         	goto	i2u385_40
  9704  000024                     i2u385_41:
  9705  000024  EF89  F000         	goto	i2l159
  9706  000028                     i2u385_40:
  9707  000028                     
  9708                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
  9709  000028  010E               	movlb	14	; () banked
  9710  00002A  ADC5               	btfss	197,6,b	;volatile
  9711  00002C  EF1A  F000         	goto	i2u386_41
  9712  000030  EF1C  F000         	goto	i2u386_40
  9713  000034                     i2u386_41:
  9714  000034  EF32  F000         	goto	i2l150
  9715  000038                     i2u386_40:
  9716  000038                     
  9717                           ; BSR set to: 14
  9718  000038  ADCD               	btfss	205,6,b	;volatile
  9719  00003A  EF21  F000         	goto	i2u387_41
  9720  00003E  EF23  F000         	goto	i2u387_40
  9721  000042                     i2u387_41:
  9722  000042  EF32  F000         	goto	i2l150
  9723  000046                     i2u387_40:
  9724  000046                     
  9725                           ; BSR set to: 14
  9726                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART2_TxDefaultInterruptHandler();
  9727  000046  D802               	call	i2u388_48
  9728  000048  EF30  F000         	goto	i2u388_49
  9729  00004C                     i2u388_48:
  9730  00004C  0005               	push	
  9731  00004E  6EFA               	movwf	pclath,c
  9732  000050  0100               	movlb	0	; () banked
  9733  000052  51F1               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
  9734  000054  6EFD               	movwf	tosl,c
  9735  000056  51F2               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
  9736  000058  6EFE               	movwf	tosh,c
  9737  00005A  6AFF               	clrf	tosu,c
  9738  00005C  50FA               	movf	pclath,w,c
  9739  00005E  0012               	return		;indir
  9740  000060                     i2u388_49:
  9741                           
  9742                           ;mcc_generated_files/interrupt_manager.c: 66:         }
  9743  000060  EF89  F000         	goto	i2l159
  9744  000064                     i2l150:
  9745                           
  9746                           ; BSR set to: 14
  9747  000064  AFC5               	btfss	197,7,b	;volatile
  9748  000066  EF37  F000         	goto	i2u389_41
  9749  00006A  EF39  F000         	goto	i2u389_40
  9750  00006E                     i2u389_41:
  9751  00006E  EF4F  F000         	goto	i2l152
  9752  000072                     i2u389_40:
  9753  000072                     
  9754                           ; BSR set to: 14
  9755  000072  AFCD               	btfss	205,7,b	;volatile
  9756  000074  EF3E  F000         	goto	i2u390_41
  9757  000078  EF40  F000         	goto	i2u390_40
  9758  00007C                     i2u390_41:
  9759  00007C  EF4F  F000         	goto	i2l152
  9760  000080                     i2u390_40:
  9761  000080                     
  9762                           ; BSR set to: 14
  9763                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART2_RxDefaultInterruptHandler();
  9764  000080  D802               	call	i2u391_48
  9765  000082  EF4D  F000         	goto	i2u391_49
  9766  000086                     i2u391_48:
  9767  000086  0005               	push	
  9768  000088  6EFA               	movwf	pclath,c
  9769  00008A  0100               	movlb	0	; () banked
  9770  00008C  51EF               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
  9771  00008E  6EFD               	movwf	tosl,c
  9772  000090  51F0               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
  9773  000092  6EFE               	movwf	tosh,c
  9774  000094  6AFF               	clrf	tosu,c
  9775  000096  50FA               	movf	pclath,w,c
  9776  000098  0012               	return		;indir
  9777  00009A                     i2u391_49:
  9778                           
  9779                           ;mcc_generated_files/interrupt_manager.c: 70:         }
  9780  00009A  EF89  F000         	goto	i2l159
  9781  00009E                     i2l152:
  9782                           
  9783                           ; BSR set to: 14
  9784  00009E  A9C5               	btfss	197,4,b	;volatile
  9785  0000A0  EF54  F000         	goto	i2u392_41
  9786  0000A4  EF56  F000         	goto	i2u392_40
  9787  0000A8                     i2u392_41:
  9788  0000A8  EF6C  F000         	goto	i2l154
  9789  0000AC                     i2u392_40:
  9790  0000AC                     
  9791                           ; BSR set to: 14
  9792  0000AC  A9CD               	btfss	205,4,b	;volatile
  9793  0000AE  EF5B  F000         	goto	i2u393_41
  9794  0000B2  EF5D  F000         	goto	i2u393_40
  9795  0000B6                     i2u393_41:
  9796  0000B6  EF6C  F000         	goto	i2l154
  9797  0000BA                     i2u393_40:
  9798  0000BA                     
  9799                           ; BSR set to: 14
  9800                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART1_TxDefaultInterruptHandler();
  9801  0000BA  D802               	call	i2u394_48
  9802  0000BC  EF6A  F000         	goto	i2u394_49
  9803  0000C0                     i2u394_48:
  9804  0000C0  0005               	push	
  9805  0000C2  6EFA               	movwf	pclath,c
  9806  0000C4  0100               	movlb	0	; () banked
  9807  0000C6  51ED               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
  9808  0000C8  6EFD               	movwf	tosl,c
  9809  0000CA  51EE               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
  9810  0000CC  6EFE               	movwf	tosh,c
  9811  0000CE  6AFF               	clrf	tosu,c
  9812  0000D0  50FA               	movf	pclath,w,c
  9813  0000D2  0012               	return		;indir
  9814  0000D4                     i2u394_49:
  9815                           
  9816                           ;mcc_generated_files/interrupt_manager.c: 74:         }
  9817  0000D4  EF89  F000         	goto	i2l159
  9818  0000D8                     i2l154:
  9819                           
  9820                           ; BSR set to: 14
  9821  0000D8  ABC5               	btfss	197,5,b	;volatile
  9822  0000DA  EF71  F000         	goto	i2u395_41
  9823  0000DE  EF73  F000         	goto	i2u395_40
  9824  0000E2                     i2u395_41:
  9825  0000E2  EF89  F000         	goto	i2l153
  9826  0000E6                     i2u395_40:
  9827  0000E6                     
  9828                           ; BSR set to: 14
  9829  0000E6  ABCD               	btfss	205,5,b	;volatile
  9830  0000E8  EF78  F000         	goto	i2u396_41
  9831  0000EC  EF7A  F000         	goto	i2u396_40
  9832  0000F0                     i2u396_41:
  9833  0000F0  EF89  F000         	goto	i2l153
  9834  0000F4                     i2u396_40:
  9835  0000F4                     
  9836                           ; BSR set to: 14
  9837                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             EUSART1_RxDefaultInterruptHandler();
  9838  0000F4  D802               	call	i2u397_48
  9839  0000F6  EF87  F000         	goto	i2u397_49
  9840  0000FA                     i2u397_48:
  9841  0000FA  0005               	push	
  9842  0000FC  6EFA               	movwf	pclath,c
  9843  0000FE  0100               	movlb	0	; () banked
  9844  000100  51EB               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
  9845  000102  6EFD               	movwf	tosl,c
  9846  000104  51EC               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
  9847  000106  6EFE               	movwf	tosh,c
  9848  000108  6AFF               	clrf	tosu,c
  9849  00010A  50FA               	movf	pclath,w,c
  9850  00010C  0012               	return		;indir
  9851  00010E                     i2u397_49:
  9852                           
  9853                           ;mcc_generated_files/interrupt_manager.c: 78:         }
  9854  00010E  EF89  F000         	goto	i2l159
  9855  000112                     i2l153:
  9856  000112                     i2l159:
  9857  000112  C004  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  9858  000116  C003  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  9859  00011A  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  9860  00011E  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  9861  000122  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9862  000124  0011               	retfie		f
  9863  000126                     __end_of_INTERRUPT_InterruptManager:
  9864                           	opt callstack 0
  9865                           
  9866 ;; *************** function _EUSART2_Transmit_ISR *****************
  9867 ;; Defined at:
  9868 ;;		line 206 in file "mcc_generated_files/eusart2.c"
  9869 ;; Parameters:    Size  Location     Type
  9870 ;;		None
  9871 ;; Auto vars:     Size  Location     Type
  9872 ;;		None
  9873 ;; Return value:  Size  Location     Type
  9874 ;;                  1    wreg      void 
  9875 ;; Registers used:
  9876 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9877 ;; Tracked objects:
  9878 ;;		On entry : 0/0
  9879 ;;		On exit  : 0/0
  9880 ;;		Unchanged: 0/0
  9881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9886 ;;Total ram usage:        0 bytes
  9887 ;; Hardware stack levels used:    1
  9888 ;; This function calls:
  9889 ;;		Nothing
  9890 ;; This function is called by:
  9891 ;;		_EUSART2_Initialize
  9892 ;;		_INTERRUPT_InterruptManager
  9893 ;; This function uses a non-reentrant model
  9894 ;;
  9895                           
  9896                           	psect	text64
  9897  00261A                     __ptext64:
  9898                           	opt callstack 0
  9899  00261A                     _EUSART2_Transmit_ISR:
  9900                           	opt callstack 18
  9901  00261A                     
  9902                           ;mcc_generated_files/eusart2.c: 210:     if(sizeof(eusart2TxBuffer) > eusart2TxBufferRem
      +                          aining)
  9903  00261A  0E08               	movlw	8
  9904  00261C  0100               	movlb	0	; () banked
  9905  00261E  61F4               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
  9906  002620  EF14  F013         	goto	i2u348_41
  9907  002624  EF16  F013         	goto	i2u348_40
  9908  002628                     i2u348_41:
  9909  002628  EF2E  F013         	goto	i2l333
  9910  00262C                     i2u348_40:
  9911  00262C                     
  9912                           ; BSR set to: 0
  9913                           ;mcc_generated_files/eusart2.c: 211:     {;mcc_generated_files/eusart2.c: 212:         T
      +                          X2REG = eusart2TxBuffer[eusart2TxTail++];
  9914  00262C  0E80               	movlw	low _eusart2TxBuffer
  9915  00262E  25A1               	addwf	_eusart2TxTail& (0+255),w,b	;volatile
  9916  002630  6ED9               	movwf	fsr2l,c
  9917  002632  6ADA               	clrf	fsr2h,c
  9918  002634  0E00               	movlw	high _eusart2TxBuffer
  9919  002636  22DA               	addwfc	fsr2h,f,c
  9920  002638  50DF               	movf	indf2,w,c
  9921  00263A  010E               	movlb	14	; () banked
  9922  00263C  6F9A               	movwf	154,b	;volatile
  9923  00263E                     
  9924                           ; BSR set to: 14
  9925  00263E  0100               	movlb	0	; () banked
  9926  002640  2BA1               	incf	_eusart2TxTail& (0+255),f,b	;volatile
  9927  002642                     
  9928                           ; BSR set to: 0
  9929                           ;mcc_generated_files/eusart2.c: 213:         if(sizeof(eusart2TxBuffer) <= eusart2TxTail
      +                          )
  9930  002642  0E07               	movlw	7
  9931  002644  65A1               	cpfsgt	_eusart2TxTail& (0+255),b	;volatile
  9932  002646  EF27  F013         	goto	i2u349_41
  9933  00264A  EF29  F013         	goto	i2u349_40
  9934  00264E                     i2u349_41:
  9935  00264E  EF2B  F013         	goto	i2l4044
  9936  002652                     i2u349_40:
  9937  002652                     
  9938                           ; BSR set to: 0
  9939                           ;mcc_generated_files/eusart2.c: 214:         {;mcc_generated_files/eusart2.c: 215:      
      +                                 eusart2TxTail = 0;
  9940  002652  0E00               	movlw	0
  9941  002654  6FA1               	movwf	_eusart2TxTail& (0+255),b	;volatile
  9942  002656                     i2l4044:
  9943                           
  9944                           ; BSR set to: 0
  9945                           ;mcc_generated_files/eusart2.c: 217:         eusart2TxBufferRemaining++;
  9946  002656  2BF4               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
  9947                           
  9948                           ;mcc_generated_files/eusart2.c: 218:     }
  9949  002658  EF30  F013         	goto	i2l336
  9950  00265C                     i2l333:
  9951                           
  9952                           ; BSR set to: 0
  9953                           ;mcc_generated_files/eusart2.c: 220:     {;mcc_generated_files/eusart2.c: 221:         P
      +                          IE3bits.TX2IE = 0;
  9954  00265C  010E               	movlb	14	; () banked
  9955  00265E  9DC5               	bcf	197,6,b	;volatile
  9956  002660                     i2l336:
  9957  002660  0012               	return		;funcret
  9958  002662                     __end_of_EUSART2_Transmit_ISR:
  9959                           	opt callstack 0
  9960                           
  9961 ;; *************** function _EUSART2_Receive_ISR *****************
  9962 ;; Defined at:
  9963 ;;		line 225 in file "mcc_generated_files/eusart2.c"
  9964 ;; Parameters:    Size  Location     Type
  9965 ;;		None
  9966 ;; Auto vars:     Size  Location     Type
  9967 ;;		None
  9968 ;; Return value:  Size  Location     Type
  9969 ;;                  1    wreg      void 
  9970 ;; Registers used:
  9971 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  9972 ;; Tracked objects:
  9973 ;;		On entry : 0/0
  9974 ;;		On exit  : 0/0
  9975 ;;		Unchanged: 0/0
  9976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9981 ;;Total ram usage:        0 bytes
  9982 ;; Hardware stack levels used:    1
  9983 ;; Hardware stack levels required when called:    2
  9984 ;; This function calls:
  9985 ;;		Absolute function
  9986 ;;		_EUSART2_DefaultErrorHandler
  9987 ;;		_EUSART2_DefaultFramingErrorHandler
  9988 ;;		_EUSART2_DefaultOverrunErrorHandler
  9989 ;;		_EUSART2_RxDataHandler
  9990 ;; This function is called by:
  9991 ;;		_EUSART2_Initialize
  9992 ;;		_INTERRUPT_InterruptManager
  9993 ;; This function uses a non-reentrant model
  9994 ;;
  9995                           
  9996                           	psect	text65
  9997  001BBE                     __ptext65:
  9998                           	opt callstack 0
  9999  001BBE                     _EUSART2_Receive_ISR:
 10000                           	opt callstack 16
 10001  001BBE                     
 10002                           ;mcc_generated_files/eusart2.c: 228:     eusart2RxStatusBuffer[eusart2RxHead].status = 0
      +                          ;
 10003  001BBE  0E70               	movlw	low _eusart2RxStatusBuffer
 10004  001BC0  2459               	addwf	_eusart2RxHead^0,w,c	;volatile
 10005  001BC2  6ED9               	movwf	fsr2l,c
 10006  001BC4  6ADA               	clrf	fsr2h,c
 10007  001BC6  0E00               	movlw	high _eusart2RxStatusBuffer
 10008  001BC8  22DA               	addwfc	fsr2h,f,c
 10009  001BCA  0E00               	movlw	0
 10010  001BCC  6EDF               	movwf	indf2,c
 10011  001BCE                     
 10012                           ;mcc_generated_files/eusart2.c: 230:     if(RC2STAbits.FERR){
 10013  001BCE  010E               	movlb	14	; () banked
 10014  001BD0  A59D               	btfss	157,2,b	;volatile
 10015  001BD2  EFED  F00D         	goto	i2u350_41
 10016  001BD6  EFEF  F00D         	goto	i2u350_40
 10017  001BDA                     i2u350_41:
 10018  001BDA  EF03  F00E         	goto	i2l4054
 10019  001BDE                     i2u350_40:
 10020  001BDE                     
 10021                           ; BSR set to: 14
 10022                           ;mcc_generated_files/eusart2.c: 231:         eusart2RxStatusBuffer[eusart2RxHead].ferr =
      +                           1;
 10023  001BDE  0E70               	movlw	low _eusart2RxStatusBuffer
 10024  001BE0  2459               	addwf	_eusart2RxHead^0,w,c	;volatile
 10025  001BE2  6ED9               	movwf	fsr2l,c
 10026  001BE4  6ADA               	clrf	fsr2h,c
 10027  001BE6  0E00               	movlw	high _eusart2RxStatusBuffer
 10028  001BE8  22DA               	addwfc	fsr2h,f,c
 10029  001BEA  0100               	movlb	0	; () banked
 10030  001BEC  82DF               	bsf	indf2,1,c
 10031  001BEE                     
 10032                           ; BSR set to: 0
 10033                           ;mcc_generated_files/eusart2.c: 232:         EUSART2_FramingErrorHandler();
 10034  001BEE  D802               	call	i2u351_48
 10035  001BF0  EF03  F00E         	goto	i2u351_49
 10036  001BF4                     i2u351_48:
 10037  001BF4  0005               	push	
 10038  001BF6  6EFA               	movwf	pclath,c
 10039  001BF8  51E9               	movf	_EUSART2_FramingErrorHandler& (0+255),w,b
 10040  001BFA  6EFD               	movwf	tosl,c
 10041  001BFC  51EA               	movf	(_EUSART2_FramingErrorHandler+1)& (0+255),w,b
 10042  001BFE  6EFE               	movwf	tosh,c
 10043  001C00  6AFF               	clrf	tosu,c
 10044  001C02  50FA               	movf	pclath,w,c
 10045  001C04  0012               	return		;indir
 10046  001C06                     i2u351_49:
 10047  001C06                     i2l4054:
 10048                           
 10049                           ;mcc_generated_files/eusart2.c: 235:     if(RC2STAbits.OERR){
 10050  001C06  010E               	movlb	14	; () banked
 10051  001C08  A39D               	btfss	157,1,b	;volatile
 10052  001C0A  EF09  F00E         	goto	i2u352_41
 10053  001C0E  EF0B  F00E         	goto	i2u352_40
 10054  001C12                     i2u352_41:
 10055  001C12  EF1F  F00E         	goto	i2l4060
 10056  001C16                     i2u352_40:
 10057  001C16                     
 10058                           ; BSR set to: 14
 10059                           ;mcc_generated_files/eusart2.c: 236:         eusart2RxStatusBuffer[eusart2RxHead].oerr =
      +                           1;
 10060  001C16  0E70               	movlw	low _eusart2RxStatusBuffer
 10061  001C18  2459               	addwf	_eusart2RxHead^0,w,c	;volatile
 10062  001C1A  6ED9               	movwf	fsr2l,c
 10063  001C1C  6ADA               	clrf	fsr2h,c
 10064  001C1E  0E00               	movlw	high _eusart2RxStatusBuffer
 10065  001C20  22DA               	addwfc	fsr2h,f,c
 10066  001C22  0100               	movlb	0	; () banked
 10067  001C24  84DF               	bsf	indf2,2,c
 10068  001C26                     
 10069                           ; BSR set to: 0
 10070                           ;mcc_generated_files/eusart2.c: 237:         EUSART2_OverrunErrorHandler();
 10071  001C26  D802               	call	i2u353_48
 10072  001C28  EF1F  F00E         	goto	i2u353_49
 10073  001C2C                     i2u353_48:
 10074  001C2C  0005               	push	
 10075  001C2E  6EFA               	movwf	pclath,c
 10076  001C30  51E7               	movf	_EUSART2_OverrunErrorHandler& (0+255),w,b
 10077  001C32  6EFD               	movwf	tosl,c
 10078  001C34  51E8               	movf	(_EUSART2_OverrunErrorHandler+1)& (0+255),w,b
 10079  001C36  6EFE               	movwf	tosh,c
 10080  001C38  6AFF               	clrf	tosu,c
 10081  001C3A  50FA               	movf	pclath,w,c
 10082  001C3C  0012               	return		;indir
 10083  001C3E                     i2u353_49:
 10084  001C3E                     i2l4060:
 10085                           
 10086                           ;mcc_generated_files/eusart2.c: 240:     if(eusart2RxStatusBuffer[eusart2RxHead].status)
      +                          {
 10087  001C3E  0E70               	movlw	low _eusart2RxStatusBuffer
 10088  001C40  2459               	addwf	_eusart2RxHead^0,w,c	;volatile
 10089  001C42  6ED9               	movwf	fsr2l,c
 10090  001C44  6ADA               	clrf	fsr2h,c
 10091  001C46  0E00               	movlw	high _eusart2RxStatusBuffer
 10092  001C48  22DA               	addwfc	fsr2h,f,c
 10093  001C4A  50DF               	movf	indf2,w,c
 10094  001C4C  B4D8               	btfsc	status,2,c
 10095  001C4E  EF2B  F00E         	goto	i2u354_41
 10096  001C52  EF2D  F00E         	goto	i2u354_40
 10097  001C56                     i2u354_41:
 10098  001C56  EF3C  F00E         	goto	i2l4064
 10099  001C5A                     i2u354_40:
 10100  001C5A                     
 10101                           ;mcc_generated_files/eusart2.c: 241:         EUSART2_ErrorHandler();
 10102  001C5A  D802               	call	i2u355_48
 10103  001C5C  EF3A  F00E         	goto	i2u355_49
 10104  001C60                     i2u355_48:
 10105  001C60  0005               	push	
 10106  001C62  6EFA               	movwf	pclath,c
 10107  001C64  0100               	movlb	0	; () banked
 10108  001C66  51E5               	movf	_EUSART2_ErrorHandler& (0+255),w,b
 10109  001C68  6EFD               	movwf	tosl,c
 10110  001C6A  51E6               	movf	(_EUSART2_ErrorHandler+1)& (0+255),w,b
 10111  001C6C  6EFE               	movwf	tosh,c
 10112  001C6E  6AFF               	clrf	tosu,c
 10113  001C70  50FA               	movf	pclath,w,c
 10114  001C72  0012               	return		;indir
 10115  001C74                     i2u355_49:
 10116                           
 10117                           ;mcc_generated_files/eusart2.c: 242:     } else {
 10118  001C74  EF3E  F00E         	goto	i2l343
 10119  001C78                     i2l4064:
 10120                           
 10121                           ;mcc_generated_files/eusart2.c: 243:         EUSART2_RxDataHandler();
 10122  001C78  EC28  F014         	call	_EUSART2_RxDataHandler	;wreg free
 10123  001C7C                     i2l343:
 10124  001C7C  0012               	return		;funcret
 10125  001C7E                     __end_of_EUSART2_Receive_ISR:
 10126                           	opt callstack 0
 10127                           
 10128 ;; *************** function _EUSART2_DefaultOverrunErrorHandler *****************
 10129 ;; Defined at:
 10130 ;;		line 261 in file "mcc_generated_files/eusart2.c"
 10131 ;; Parameters:    Size  Location     Type
 10132 ;;		None
 10133 ;; Auto vars:     Size  Location     Type
 10134 ;;		None
 10135 ;; Return value:  Size  Location     Type
 10136 ;;                  1    wreg      void 
 10137 ;; Registers used:
 10138 ;;		None
 10139 ;; Tracked objects:
 10140 ;;		On entry : 0/0
 10141 ;;		On exit  : 0/0
 10142 ;;		Unchanged: 0/0
 10143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10148 ;;Total ram usage:        0 bytes
 10149 ;; Hardware stack levels used:    1
 10150 ;; This function calls:
 10151 ;;		Nothing
 10152 ;; This function is called by:
 10153 ;;		_EUSART2_Initialize
 10154 ;;		_EUSART2_Receive_ISR
 10155 ;; This function uses a non-reentrant model
 10156 ;;
 10157                           
 10158                           	psect	text66
 10159  002A22                     __ptext66:
 10160                           	opt callstack 0
 10161  002A22                     _EUSART2_DefaultOverrunErrorHandler:
 10162                           	opt callstack 17
 10163  002A22                     
 10164                           ;mcc_generated_files/eusart2.c: 264:     RC2STAbits.CREN = 0;
 10165  002A22  010E               	movlb	14	; () banked
 10166  002A24  999D               	bcf	157,4,b	;volatile
 10167                           
 10168                           ;mcc_generated_files/eusart2.c: 265:     RC2STAbits.CREN = 1;
 10169  002A26  899D               	bsf	157,4,b	;volatile
 10170  002A28                     
 10171                           ; BSR set to: 14
 10172  002A28  0012               	return		;funcret
 10173  002A2A                     __end_of_EUSART2_DefaultOverrunErrorHandler:
 10174                           	opt callstack 0
 10175                           
 10176 ;; *************** function _EUSART2_DefaultFramingErrorHandler *****************
 10177 ;; Defined at:
 10178 ;;		line 259 in file "mcc_generated_files/eusart2.c"
 10179 ;; Parameters:    Size  Location     Type
 10180 ;;		None
 10181 ;; Auto vars:     Size  Location     Type
 10182 ;;		None
 10183 ;; Return value:  Size  Location     Type
 10184 ;;                  1    wreg      void 
 10185 ;; Registers used:
 10186 ;;		None
 10187 ;; Tracked objects:
 10188 ;;		On entry : 0/0
 10189 ;;		On exit  : 0/0
 10190 ;;		Unchanged: 0/0
 10191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10196 ;;Total ram usage:        0 bytes
 10197 ;; Hardware stack levels used:    1
 10198 ;; This function calls:
 10199 ;;		Nothing
 10200 ;; This function is called by:
 10201 ;;		_EUSART2_Initialize
 10202 ;;		_EUSART2_Receive_ISR
 10203 ;; This function uses a non-reentrant model
 10204 ;;
 10205                           
 10206                           	psect	text67
 10207  002A4C                     __ptext67:
 10208                           	opt callstack 0
 10209  002A4C                     _EUSART2_DefaultFramingErrorHandler:
 10210                           	opt callstack 17
 10211  002A4C  0012               	return		;funcret
 10212  002A4E                     __end_of_EUSART2_DefaultFramingErrorHandler:
 10213                           	opt callstack 0
 10214                           
 10215 ;; *************** function _EUSART2_DefaultErrorHandler *****************
 10216 ;; Defined at:
 10217 ;;		line 269 in file "mcc_generated_files/eusart2.c"
 10218 ;; Parameters:    Size  Location     Type
 10219 ;;		None
 10220 ;; Auto vars:     Size  Location     Type
 10221 ;;		None
 10222 ;; Return value:  Size  Location     Type
 10223 ;;                  1    wreg      void 
 10224 ;; Registers used:
 10225 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10226 ;; Tracked objects:
 10227 ;;		On entry : 0/0
 10228 ;;		On exit  : 0/0
 10229 ;;		Unchanged: 0/0
 10230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10235 ;;Total ram usage:        0 bytes
 10236 ;; Hardware stack levels used:    1
 10237 ;; Hardware stack levels required when called:    1
 10238 ;; This function calls:
 10239 ;;		_EUSART2_RxDataHandler
 10240 ;; This function is called by:
 10241 ;;		_EUSART2_Initialize
 10242 ;;		_EUSART2_Receive_ISR
 10243 ;; This function uses a non-reentrant model
 10244 ;;
 10245                           
 10246                           	psect	text68
 10247  002A36                     __ptext68:
 10248                           	opt callstack 0
 10249  002A36                     _EUSART2_DefaultErrorHandler:
 10250                           	opt callstack 16
 10251  002A36                     
 10252                           ;mcc_generated_files/eusart2.c: 270:     EUSART2_RxDataHandler();
 10253  002A36  EC28  F014         	call	_EUSART2_RxDataHandler	;wreg free
 10254  002A3A  0012               	return		;funcret
 10255  002A3C                     __end_of_EUSART2_DefaultErrorHandler:
 10256                           	opt callstack 0
 10257                           
 10258 ;; *************** function _EUSART2_RxDataHandler *****************
 10259 ;; Defined at:
 10260 ;;		line 249 in file "mcc_generated_files/eusart2.c"
 10261 ;; Parameters:    Size  Location     Type
 10262 ;;		None
 10263 ;; Auto vars:     Size  Location     Type
 10264 ;;		None
 10265 ;; Return value:  Size  Location     Type
 10266 ;;                  1    wreg      void 
 10267 ;; Registers used:
 10268 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10269 ;; Tracked objects:
 10270 ;;		On entry : 0/0
 10271 ;;		On exit  : 0/0
 10272 ;;		Unchanged: 0/0
 10273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10278 ;;Total ram usage:        0 bytes
 10279 ;; Hardware stack levels used:    1
 10280 ;; This function calls:
 10281 ;;		Nothing
 10282 ;; This function is called by:
 10283 ;;		_EUSART2_Receive_ISR
 10284 ;;		_EUSART2_DefaultErrorHandler
 10285 ;; This function uses a non-reentrant model
 10286 ;;
 10287                           
 10288                           	psect	text69
 10289  002850                     __ptext69:
 10290                           	opt callstack 0
 10291  002850                     _EUSART2_RxDataHandler:
 10292                           	opt callstack 17
 10293  002850                     
 10294                           ;mcc_generated_files/eusart2.c: 251:     eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 10295  002850  0E78               	movlw	low _eusart2RxBuffer
 10296  002852  2459               	addwf	_eusart2RxHead^0,w,c	;volatile
 10297  002854  6ED9               	movwf	fsr2l,c
 10298  002856  6ADA               	clrf	fsr2h,c
 10299  002858  0E00               	movlw	high _eusart2RxBuffer
 10300  00285A  22DA               	addwfc	fsr2h,f,c
 10301  00285C  CE99 FFDF          	movff	3737,indf2	;volatile
 10302  002860  2A59               	incf	_eusart2RxHead^0,f,c	;volatile
 10303  002862                     
 10304                           ;mcc_generated_files/eusart2.c: 252:     if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 10305  002862  0E07               	movlw	7
 10306  002864  6459               	cpfsgt	_eusart2RxHead^0,c	;volatile
 10307  002866  EF37  F014         	goto	i2u325_41
 10308  00286A  EF39  F014         	goto	i2u325_40
 10309  00286E                     i2u325_41:
 10310  00286E  EF3B  F014         	goto	i2l3766
 10311  002872                     i2u325_40:
 10312  002872                     
 10313                           ;mcc_generated_files/eusart2.c: 253:     {;mcc_generated_files/eusart2.c: 254:         e
      +                          usart2RxHead = 0;
 10314  002872  0E00               	movlw	0
 10315  002874  6E59               	movwf	_eusart2RxHead^0,c	;volatile
 10316  002876                     i2l3766:
 10317                           
 10318                           ;mcc_generated_files/eusart2.c: 256:     eusart2RxCount++;
 10319  002876  0100               	movlb	0	; () banked
 10320  002878  2B9F               	incf	_eusart2RxCount& (0+255),f,b	;volatile
 10321  00287A                     
 10322                           ; BSR set to: 0
 10323  00287A  0012               	return		;funcret
 10324  00287C                     __end_of_EUSART2_RxDataHandler:
 10325                           	opt callstack 0
 10326                           
 10327 ;; *************** function _EUSART1_Transmit_ISR *****************
 10328 ;; Defined at:
 10329 ;;		line 197 in file "mcc_generated_files/eusart1.c"
 10330 ;; Parameters:    Size  Location     Type
 10331 ;;		None
 10332 ;; Auto vars:     Size  Location     Type
 10333 ;;		None
 10334 ;; Return value:  Size  Location     Type
 10335 ;;                  1    wreg      void 
 10336 ;; Registers used:
 10337 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10338 ;; Tracked objects:
 10339 ;;		On entry : 0/0
 10340 ;;		On exit  : 0/0
 10341 ;;		Unchanged: 0/0
 10342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10347 ;;Total ram usage:        0 bytes
 10348 ;; Hardware stack levels used:    1
 10349 ;; This function calls:
 10350 ;;		Nothing
 10351 ;; This function is called by:
 10352 ;;		_EUSART1_Initialize
 10353 ;;		_INTERRUPT_InterruptManager
 10354 ;; This function uses a non-reentrant model
 10355 ;;
 10356                           
 10357                           	psect	text70
 10358  0026A6                     __ptext70:
 10359                           	opt callstack 0
 10360  0026A6                     _EUSART1_Transmit_ISR:
 10361                           	opt callstack 18
 10362  0026A6                     
 10363                           ;mcc_generated_files/eusart1.c: 201:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 10364  0026A6  0E10               	movlw	16
 10365  0026A8  0100               	movlb	0	; () banked
 10366  0026AA  61F3               	cpfslt	_eusart1TxBufferRemaining& (0+255),b	;volatile
 10367  0026AC  EF5A  F013         	goto	i2u356_41
 10368  0026B0  EF5C  F013         	goto	i2u356_40
 10369  0026B4                     i2u356_41:
 10370  0026B4  EF72  F013         	goto	i2l477
 10371  0026B8                     i2u356_40:
 10372  0026B8                     
 10373                           ; BSR set to: 0
 10374                           ;mcc_generated_files/eusart1.c: 202:     {;mcc_generated_files/eusart1.c: 203:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 10375  0026B8  0E60               	movlw	low _eusart1TxBuffer
 10376  0026BA  259C               	addwf	_eusart1TxTail& (0+255),w,b	;volatile
 10377  0026BC  6ED9               	movwf	fsr2l,c
 10378  0026BE  6ADA               	clrf	fsr2h,c
 10379  0026C0  0E00               	movlw	high _eusart1TxBuffer
 10380  0026C2  22DA               	addwfc	fsr2h,f,c
 10381  0026C4  50DF               	movf	indf2,w,c
 10382  0026C6  6E9A               	movwf	154,c	;volatile
 10383  0026C8                     
 10384                           ; BSR set to: 0
 10385  0026C8  2B9C               	incf	_eusart1TxTail& (0+255),f,b	;volatile
 10386  0026CA                     
 10387                           ; BSR set to: 0
 10388                           ;mcc_generated_files/eusart1.c: 204:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 10389  0026CA  0E0F               	movlw	15
 10390  0026CC  659C               	cpfsgt	_eusart1TxTail& (0+255),b	;volatile
 10391  0026CE  EF6B  F013         	goto	i2u357_41
 10392  0026D2  EF6D  F013         	goto	i2u357_40
 10393  0026D6                     i2u357_41:
 10394  0026D6  EF6F  F013         	goto	i2l4076
 10395  0026DA                     i2u357_40:
 10396  0026DA                     
 10397                           ; BSR set to: 0
 10398                           ;mcc_generated_files/eusart1.c: 205:         {;mcc_generated_files/eusart1.c: 206:      
      +                                 eusart1TxTail = 0;
 10399  0026DA  0E00               	movlw	0
 10400  0026DC  6F9C               	movwf	_eusart1TxTail& (0+255),b	;volatile
 10401  0026DE                     i2l4076:
 10402                           
 10403                           ; BSR set to: 0
 10404                           ;mcc_generated_files/eusart1.c: 208:         eusart1TxBufferRemaining++;
 10405  0026DE  2BF3               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 10406                           
 10407                           ;mcc_generated_files/eusart1.c: 209:     }
 10408  0026E0  EF74  F013         	goto	i2l480
 10409  0026E4                     i2l477:
 10410                           
 10411                           ; BSR set to: 0
 10412                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         P
      +                          IE3bits.TX1IE = 0;
 10413  0026E4  010E               	movlb	14	; () banked
 10414  0026E6  99C5               	bcf	197,4,b	;volatile
 10415  0026E8                     i2l480:
 10416  0026E8  0012               	return		;funcret
 10417  0026EA                     __end_of_EUSART1_Transmit_ISR:
 10418                           	opt callstack 0
 10419                           
 10420 ;; *************** function _EUSART1_Receive_ISR *****************
 10421 ;; Defined at:
 10422 ;;		line 216 in file "mcc_generated_files/eusart1.c"
 10423 ;; Parameters:    Size  Location     Type
 10424 ;;		None
 10425 ;; Auto vars:     Size  Location     Type
 10426 ;;		None
 10427 ;; Return value:  Size  Location     Type
 10428 ;;                  1    wreg      void 
 10429 ;; Registers used:
 10430 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 10431 ;; Tracked objects:
 10432 ;;		On entry : 0/0
 10433 ;;		On exit  : 0/0
 10434 ;;		Unchanged: 0/0
 10435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10440 ;;Total ram usage:        0 bytes
 10441 ;; Hardware stack levels used:    1
 10442 ;; Hardware stack levels required when called:    2
 10443 ;; This function calls:
 10444 ;;		Absolute function
 10445 ;;		_EUSART1_DefaultErrorHandler
 10446 ;;		_EUSART1_DefaultFramingErrorHandler
 10447 ;;		_EUSART1_DefaultOverrunErrorHandler
 10448 ;;		_EUSART1_RxDataHandler
 10449 ;; This function is called by:
 10450 ;;		_EUSART1_Initialize
 10451 ;;		_INTERRUPT_InterruptManager
 10452 ;; This function uses a non-reentrant model
 10453 ;;
 10454                           
 10455                           	psect	text71
 10456  001C7E                     __ptext71:
 10457                           	opt callstack 0
 10458  001C7E                     _EUSART1_Receive_ISR:
 10459                           	opt callstack 16
 10460  001C7E                     
 10461                           ;mcc_generated_files/eusart1.c: 219:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 10462  001C7E  0E00               	movlw	low _eusart1RxStatusBuffer
 10463  001C80  2458               	addwf	_eusart1RxHead^0,w,c	;volatile
 10464  001C82  6ED9               	movwf	fsr2l,c
 10465  001C84  6ADA               	clrf	fsr2h,c
 10466  001C86  0E02               	movlw	high _eusart1RxStatusBuffer
 10467  001C88  22DA               	addwfc	fsr2h,f,c
 10468  001C8A  0E00               	movlw	0
 10469  001C8C  6EDF               	movwf	indf2,c
 10470  001C8E                     
 10471                           ;mcc_generated_files/eusart1.c: 221:     if(RC1STAbits.FERR){
 10472  001C8E  A49D               	btfss	157,2,c	;volatile
 10473  001C90  EF4C  F00E         	goto	i2u358_41
 10474  001C94  EF4E  F00E         	goto	i2u358_40
 10475  001C98                     i2u358_41:
 10476  001C98  EF63  F00E         	goto	i2l4086
 10477  001C9C                     i2u358_40:
 10478  001C9C                     
 10479                           ;mcc_generated_files/eusart1.c: 222:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 10480  001C9C  0E00               	movlw	low _eusart1RxStatusBuffer
 10481  001C9E  2458               	addwf	_eusart1RxHead^0,w,c	;volatile
 10482  001CA0  6ED9               	movwf	fsr2l,c
 10483  001CA2  6ADA               	clrf	fsr2h,c
 10484  001CA4  0E02               	movlw	high _eusart1RxStatusBuffer
 10485  001CA6  22DA               	addwfc	fsr2h,f,c
 10486  001CA8  0102               	movlb	2	; () banked
 10487  001CAA  82DF               	bsf	indf2,1,c
 10488  001CAC                     
 10489                           ; BSR set to: 2
 10490                           ;mcc_generated_files/eusart1.c: 223:         EUSART1_FramingErrorHandler();
 10491  001CAC  D802               	call	i2u359_48
 10492  001CAE  EF63  F00E         	goto	i2u359_49
 10493  001CB2                     i2u359_48:
 10494  001CB2  0005               	push	
 10495  001CB4  6EFA               	movwf	pclath,c
 10496  001CB6  0100               	movlb	0	; () banked
 10497  001CB8  51E3               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
 10498  001CBA  6EFD               	movwf	tosl,c
 10499  001CBC  51E4               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
 10500  001CBE  6EFE               	movwf	tosh,c
 10501  001CC0  6AFF               	clrf	tosu,c
 10502  001CC2  50FA               	movf	pclath,w,c
 10503  001CC4  0012               	return		;indir
 10504  001CC6                     i2u359_49:
 10505  001CC6                     i2l4086:
 10506                           
 10507                           ;mcc_generated_files/eusart1.c: 226:     if(RC1STAbits.OERR){
 10508  001CC6  A29D               	btfss	157,1,c	;volatile
 10509  001CC8  EF68  F00E         	goto	i2u360_41
 10510  001CCC  EF6A  F00E         	goto	i2u360_40
 10511  001CD0                     i2u360_41:
 10512  001CD0  EF7F  F00E         	goto	i2l4092
 10513  001CD4                     i2u360_40:
 10514  001CD4                     
 10515                           ;mcc_generated_files/eusart1.c: 227:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 10516  001CD4  0E00               	movlw	low _eusart1RxStatusBuffer
 10517  001CD6  2458               	addwf	_eusart1RxHead^0,w,c	;volatile
 10518  001CD8  6ED9               	movwf	fsr2l,c
 10519  001CDA  6ADA               	clrf	fsr2h,c
 10520  001CDC  0E02               	movlw	high _eusart1RxStatusBuffer
 10521  001CDE  22DA               	addwfc	fsr2h,f,c
 10522  001CE0  0102               	movlb	2	; () banked
 10523  001CE2  84DF               	bsf	indf2,2,c
 10524  001CE4                     
 10525                           ; BSR set to: 2
 10526                           ;mcc_generated_files/eusart1.c: 228:         EUSART1_OverrunErrorHandler();
 10527  001CE4  D802               	call	i2u361_48
 10528  001CE6  EF7F  F00E         	goto	i2u361_49
 10529  001CEA                     i2u361_48:
 10530  001CEA  0005               	push	
 10531  001CEC  6EFA               	movwf	pclath,c
 10532  001CEE  0100               	movlb	0	; () banked
 10533  001CF0  51E1               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
 10534  001CF2  6EFD               	movwf	tosl,c
 10535  001CF4  51E2               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
 10536  001CF6  6EFE               	movwf	tosh,c
 10537  001CF8  6AFF               	clrf	tosu,c
 10538  001CFA  50FA               	movf	pclath,w,c
 10539  001CFC  0012               	return		;indir
 10540  001CFE                     i2u361_49:
 10541  001CFE                     i2l4092:
 10542                           
 10543                           ;mcc_generated_files/eusart1.c: 231:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 10544  001CFE  0E00               	movlw	low _eusart1RxStatusBuffer
 10545  001D00  2458               	addwf	_eusart1RxHead^0,w,c	;volatile
 10546  001D02  6ED9               	movwf	fsr2l,c
 10547  001D04  6ADA               	clrf	fsr2h,c
 10548  001D06  0E02               	movlw	high _eusart1RxStatusBuffer
 10549  001D08  22DA               	addwfc	fsr2h,f,c
 10550  001D0A  50DF               	movf	indf2,w,c
 10551  001D0C  B4D8               	btfsc	status,2,c
 10552  001D0E  EF8B  F00E         	goto	i2u362_41
 10553  001D12  EF8D  F00E         	goto	i2u362_40
 10554  001D16                     i2u362_41:
 10555  001D16  EF9C  F00E         	goto	i2l4096
 10556  001D1A                     i2u362_40:
 10557  001D1A                     
 10558                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_ErrorHandler();
 10559  001D1A  D802               	call	i2u363_48
 10560  001D1C  EF9A  F00E         	goto	i2u363_49
 10561  001D20                     i2u363_48:
 10562  001D20  0005               	push	
 10563  001D22  6EFA               	movwf	pclath,c
 10564  001D24  0100               	movlb	0	; () banked
 10565  001D26  51DF               	movf	_EUSART1_ErrorHandler& (0+255),w,b
 10566  001D28  6EFD               	movwf	tosl,c
 10567  001D2A  51E0               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
 10568  001D2C  6EFE               	movwf	tosh,c
 10569  001D2E  6AFF               	clrf	tosu,c
 10570  001D30  50FA               	movf	pclath,w,c
 10571  001D32  0012               	return		;indir
 10572  001D34                     i2u363_49:
 10573                           
 10574                           ;mcc_generated_files/eusart1.c: 233:     } else {
 10575  001D34  EF9E  F00E         	goto	i2l487
 10576  001D38                     i2l4096:
 10577                           
 10578                           ;mcc_generated_files/eusart1.c: 234:         EUSART1_RxDataHandler();
 10579  001D38  EC3E  F014         	call	_EUSART1_RxDataHandler	;wreg free
 10580  001D3C                     i2l487:
 10581  001D3C  0012               	return		;funcret
 10582  001D3E                     __end_of_EUSART1_Receive_ISR:
 10583                           	opt callstack 0
 10584                           
 10585 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 10586 ;; Defined at:
 10587 ;;		line 252 in file "mcc_generated_files/eusart1.c"
 10588 ;; Parameters:    Size  Location     Type
 10589 ;;		None
 10590 ;; Auto vars:     Size  Location     Type
 10591 ;;		None
 10592 ;; Return value:  Size  Location     Type
 10593 ;;                  1    wreg      void 
 10594 ;; Registers used:
 10595 ;;		None
 10596 ;; Tracked objects:
 10597 ;;		On entry : 0/0
 10598 ;;		On exit  : 0/0
 10599 ;;		Unchanged: 0/0
 10600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10605 ;;Total ram usage:        0 bytes
 10606 ;; Hardware stack levels used:    1
 10607 ;; This function calls:
 10608 ;;		Nothing
 10609 ;; This function is called by:
 10610 ;;		_EUSART1_Initialize
 10611 ;;		_EUSART1_Receive_ISR
 10612 ;; This function uses a non-reentrant model
 10613 ;;
 10614                           
 10615                           	psect	text72
 10616  002A3C                     __ptext72:
 10617                           	opt callstack 0
 10618  002A3C                     _EUSART1_DefaultOverrunErrorHandler:
 10619                           	opt callstack 17
 10620  002A3C                     
 10621                           ;mcc_generated_files/eusart1.c: 255:     RC1STAbits.CREN = 0;
 10622  002A3C  989D               	bcf	157,4,c	;volatile
 10623                           
 10624                           ;mcc_generated_files/eusart1.c: 256:     RC1STAbits.CREN = 1;
 10625  002A3E  889D               	bsf	157,4,c	;volatile
 10626  002A40  0012               	return		;funcret
 10627  002A42                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 10628                           	opt callstack 0
 10629                           
 10630 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 10631 ;; Defined at:
 10632 ;;		line 250 in file "mcc_generated_files/eusart1.c"
 10633 ;; Parameters:    Size  Location     Type
 10634 ;;		None
 10635 ;; Auto vars:     Size  Location     Type
 10636 ;;		None
 10637 ;; Return value:  Size  Location     Type
 10638 ;;                  1    wreg      void 
 10639 ;; Registers used:
 10640 ;;		None
 10641 ;; Tracked objects:
 10642 ;;		On entry : 0/0
 10643 ;;		On exit  : 0/0
 10644 ;;		Unchanged: 0/0
 10645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10650 ;;Total ram usage:        0 bytes
 10651 ;; Hardware stack levels used:    1
 10652 ;; This function calls:
 10653 ;;		Nothing
 10654 ;; This function is called by:
 10655 ;;		_EUSART1_Initialize
 10656 ;;		_EUSART1_Receive_ISR
 10657 ;; This function uses a non-reentrant model
 10658 ;;
 10659                           
 10660                           	psect	text73
 10661  002A4E                     __ptext73:
 10662                           	opt callstack 0
 10663  002A4E                     _EUSART1_DefaultFramingErrorHandler:
 10664                           	opt callstack 17
 10665  002A4E  0012               	return		;funcret
 10666  002A50                     __end_of_EUSART1_DefaultFramingErrorHandler:
 10667                           	opt callstack 0
 10668                           
 10669 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 10670 ;; Defined at:
 10671 ;;		line 260 in file "mcc_generated_files/eusart1.c"
 10672 ;; Parameters:    Size  Location     Type
 10673 ;;		None
 10674 ;; Auto vars:     Size  Location     Type
 10675 ;;		None
 10676 ;; Return value:  Size  Location     Type
 10677 ;;                  1    wreg      void 
 10678 ;; Registers used:
 10679 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10680 ;; Tracked objects:
 10681 ;;		On entry : 0/0
 10682 ;;		On exit  : 0/0
 10683 ;;		Unchanged: 0/0
 10684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10689 ;;Total ram usage:        0 bytes
 10690 ;; Hardware stack levels used:    1
 10691 ;; Hardware stack levels required when called:    1
 10692 ;; This function calls:
 10693 ;;		_EUSART1_RxDataHandler
 10694 ;; This function is called by:
 10695 ;;		_EUSART1_Initialize
 10696 ;;		_EUSART1_Receive_ISR
 10697 ;; This function uses a non-reentrant model
 10698 ;;
 10699                           
 10700                           	psect	text74
 10701  002A42                     __ptext74:
 10702                           	opt callstack 0
 10703  002A42                     _EUSART1_DefaultErrorHandler:
 10704                           	opt callstack 16
 10705  002A42                     
 10706                           ;mcc_generated_files/eusart1.c: 261:     EUSART1_RxDataHandler();
 10707  002A42  EC3E  F014         	call	_EUSART1_RxDataHandler	;wreg free
 10708  002A46  0012               	return		;funcret
 10709  002A48                     __end_of_EUSART1_DefaultErrorHandler:
 10710                           	opt callstack 0
 10711                           
 10712 ;; *************** function _EUSART1_RxDataHandler *****************
 10713 ;; Defined at:
 10714 ;;		line 240 in file "mcc_generated_files/eusart1.c"
 10715 ;; Parameters:    Size  Location     Type
 10716 ;;		None
 10717 ;; Auto vars:     Size  Location     Type
 10718 ;;		None
 10719 ;; Return value:  Size  Location     Type
 10720 ;;                  1    wreg      void 
 10721 ;; Registers used:
 10722 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10723 ;; Tracked objects:
 10724 ;;		On entry : 0/0
 10725 ;;		On exit  : 0/0
 10726 ;;		Unchanged: 0/0
 10727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10732 ;;Total ram usage:        0 bytes
 10733 ;; Hardware stack levels used:    1
 10734 ;; This function calls:
 10735 ;;		Nothing
 10736 ;; This function is called by:
 10737 ;;		_EUSART1_Receive_ISR
 10738 ;;		_EUSART1_DefaultErrorHandler
 10739 ;; This function uses a non-reentrant model
 10740 ;;
 10741                           
 10742                           	psect	text75
 10743  00287C                     __ptext75:
 10744                           	opt callstack 0
 10745  00287C                     _EUSART1_RxDataHandler:
 10746                           	opt callstack 17
 10747  00287C                     
 10748                           ;mcc_generated_files/eusart1.c: 242:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 10749  00287C  0E64               	movlw	low _eusart1RxBuffer
 10750  00287E  2458               	addwf	_eusart1RxHead^0,w,c	;volatile
 10751  002880  6ED9               	movwf	fsr2l,c
 10752  002882  6ADA               	clrf	fsr2h,c
 10753  002884  0E02               	movlw	high _eusart1RxBuffer
 10754  002886  22DA               	addwfc	fsr2h,f,c
 10755  002888  CF99 FFDF          	movff	3993,indf2	;volatile
 10756  00288C  2A58               	incf	_eusart1RxHead^0,f,c	;volatile
 10757  00288E                     
 10758                           ;mcc_generated_files/eusart1.c: 243:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 10759  00288E  0E63               	movlw	99
 10760  002890  6458               	cpfsgt	_eusart1RxHead^0,c	;volatile
 10761  002892  EF4D  F014         	goto	i2u326_41
 10762  002896  EF4F  F014         	goto	i2u326_40
 10763  00289A                     i2u326_41:
 10764  00289A  EF51  F014         	goto	i2l3786
 10765  00289E                     i2u326_40:
 10766  00289E                     
 10767                           ;mcc_generated_files/eusart1.c: 244:     {;mcc_generated_files/eusart1.c: 245:         e
      +                          usart1RxHead = 0;
 10768  00289E  0E00               	movlw	0
 10769  0028A0  6E58               	movwf	_eusart1RxHead^0,c	;volatile
 10770  0028A2                     i2l3786:
 10771                           
 10772                           ;mcc_generated_files/eusart1.c: 247:     eusart1RxCount++;
 10773  0028A2  0100               	movlb	0	; () banked
 10774  0028A4  2B9A               	incf	_eusart1RxCount& (0+255),f,b	;volatile
 10775  0028A6                     
 10776                           ; BSR set to: 0
 10777  0028A6  0012               	return		;funcret
 10778  0028A8                     __end_of_EUSART1_RxDataHandler:
 10779                           	opt callstack 0
 10780                           
 10781                           	psect	text76
 10782  000000                     __ptext76:
 10783                           	opt callstack 0
 10784  000000                     
 10785                           	psect	rparam
 10786  0000                     
 10787                           	psect	temp
 10788  00005A                     btemp:
 10789                           	opt callstack 0
 10790  00005A                     	ds	1
 10791  0000                     int$flags	set	btemp
 10792  0000                     wtemp8	set	btemp+1
 10793  0000                     ttemp5	set	btemp+1
 10794  0000                     ttemp6	set	btemp+4
 10795  0000                     ttemp7	set	btemp+8
 10796                           tosu	equ	0xFFF
 10797                           tosh	equ	0xFFE
 10798                           tosl	equ	0xFFD
 10799                           stkptr	equ	0xFFC
 10800                           pclatu	equ	0xFFB
 10801                           pclath	equ	0xFFA
 10802                           pcl	equ	0xFF9
 10803                           tblptru	equ	0xFF8
 10804                           tblptrh	equ	0xFF7
 10805                           tblptrl	equ	0xFF6
 10806                           tablat	equ	0xFF5
 10807                           prodh	equ	0xFF4
 10808                           prodl	equ	0xFF3
 10809                           indf0	equ	0xFEF
 10810                           postinc0	equ	0xFEE
 10811                           postdec0	equ	0xFED
 10812                           preinc0	equ	0xFEC
 10813                           plusw0	equ	0xFEB
 10814                           fsr0h	equ	0xFEA
 10815                           fsr0l	equ	0xFE9
 10816                           wreg	equ	0xFE8
 10817                           indf1	equ	0xFE7
 10818                           postinc1	equ	0xFE6
 10819                           postdec1	equ	0xFE5
 10820                           preinc1	equ	0xFE4
 10821                           plusw1	equ	0xFE3
 10822                           fsr1h	equ	0xFE2
 10823                           fsr1l	equ	0xFE1
 10824                           bsr	equ	0xFE0
 10825                           indf2	equ	0xFDF
 10826                           postinc2	equ	0xFDE
 10827                           postdec2	equ	0xFDD
 10828                           preinc2	equ	0xFDC
 10829                           plusw2	equ	0xFDB
 10830                           fsr2h	equ	0xFDA
 10831                           fsr2l	equ	0xFD9
 10832                           status	equ	0xFD8


Data Sizes:
    Strings     504
    Constant    0
    Data        43
    BSS         567
    Persistent  22
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      90
    BANK0           160     60     160
    BANK1           256      0     228
    BANK2           256      0     200
    BANK3           256      0     100
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), STR_5(CODE[9]), 
		 -> STR_4(CODE[12]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), STR_5(CODE[9]), 
		 -> STR_4(CODE[12]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_19(CODE[27]), STR_18(CODE[21]), STR_17(CODE[36]), STR_16(CODE[28]), 
		 -> STR_15(CODE[4]), STR_14(CODE[23]), STR_13(CODE[32]), STR_12(CODE[4]), 
		 -> STR_11(CODE[23]), STR_10(CODE[19]), STR_9(CODE[35]), STR_8(CODE[55]), 
		 -> STR_7(CODE[53]), STR_6(CODE[29]), STR_3(CODE[43]), STR_2(CODE[25]), 
		 -> STR_1(CODE[57]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1856_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_19(CODE[27]), STR_18(CODE[21]), STR_17(CODE[36]), STR_16(CODE[28]), 
		 -> STR_15(CODE[4]), STR_14(CODE[23]), STR_13(CODE[32]), STR_12(CODE[4]), 
		 -> STR_11(CODE[23]), STR_10(CODE[19]), STR_9(CODE[35]), STR_8(CODE[55]), 
		 -> STR_7(CODE[53]), STR_6(CODE[29]), STR_3(CODE[43]), STR_2(CODE[25]), 
		 -> STR_1(CODE[57]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_19(CODE[27]), STR_18(CODE[21]), STR_17(CODE[36]), STR_16(CODE[28]), 
		 -> STR_15(CODE[4]), STR_14(CODE[23]), STR_13(CODE[32]), STR_12(CODE[4]), 
		 -> STR_11(CODE[23]), STR_10(CODE[19]), STR_9(CODE[35]), STR_8(CODE[55]), 
		 -> STR_7(CODE[53]), STR_6(CODE[29]), STR_3(CODE[43]), STR_2(CODE[25]), 
		 -> STR_1(CODE[57]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 57
		 -> STR_19(CODE[27]), STR_18(CODE[21]), STR_17(CODE[36]), STR_16(CODE[28]), 
		 -> STR_15(CODE[4]), STR_14(CODE[23]), STR_13(CODE[32]), STR_12(CODE[4]), 
		 -> STR_11(CODE[23]), STR_10(CODE[19]), STR_9(CODE[35]), STR_8(CODE[55]), 
		 -> STR_7(CODE[53]), STR_6(CODE[29]), STR_3(CODE[43]), STR_2(CODE[25]), 
		 -> STR_1(CODE[57]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), STR_5(CODE[9]), STR_4(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), STR_5(CODE[9]), STR_4(CODE[12]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), STR_5(CODE[9]), STR_4(CODE[12]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    UART1_Write_string@data	PTR unsigned char  size(2) Largest target is 32
		 -> MBRespon(BANK1[32]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    EUSART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), 

    EUSART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), 

    EUSART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultErrorHandler(), 

    EUSART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultFramingErrorHandler(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_Receive_ISR(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _main->_ModbusRx
    _main->_PrintModRespon
    _main->_PrintModbus
    _UART1_Write_string->_EUSART1_Write
    _EUSART2_Initialize->_EUSART2_SetErrorHandler
    _EUSART2_Initialize->_EUSART2_SetFramingErrorHandler
    _EUSART2_Initialize->_EUSART2_SetOverrunErrorHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART2_Write
    _abs->___aomod
    _atoi->_isspace

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _PrintModbus->_printf
    _PrintModRespon->_printf
    _ModbusRx->_checkCRC
    _checkCRC->_printf
    _InitialiseString->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  192440
                                             85 COMRAM     1     1      0
                                             56 BANK0      4     4      0
                    _ClearModbusData
                  _ClearModbusRespon
                        _ClearRxBuff
                   _InitialiseString
                           _ModbusRx
                     _PrintModRespon
                        _PrintModbus
                             _RXMode
                  _SYSTEM_Initialize
                 _UART1_Write_string
                      _generateCRCHI
                      _generateCRCLo
                             _printf
 ---------------------------------------------------------------------------------
 (1) _generateCRCLo                                       14    12      2     445
                                              4 COMRAM    14    12      2
 ---------------------------------------------------------------------------------
 (1) _generateCRCHI                                       13    11      2     445
                                              4 COMRAM    13    11      2
 ---------------------------------------------------------------------------------
 (1) _UART1_Write_string                                   7     3      4     372
                                              5 COMRAM     7     3      4
                      _EUSART1_Write
                 _EUSART1_is_tx_done
                _EUSART1_is_tx_ready
                             _TXMode
 ---------------------------------------------------------------------------------
 (2) _TXMode                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_is_tx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_is_tx_done                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Write                                        1     1      0      62
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1210
                 _EUSART1_Initialize
                 _EUSART2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     605
            _EUSART2_SetErrorHandler
     _EUSART2_SetFramingErrorHandler
     _EUSART2_SetOverrunErrorHandler
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetOverrunErrorHandler                       2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetFramingErrorHandler                       2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetErrorHandler                              2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     605
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _PrintModbus                                          3     3      0   31579
                                             84 COMRAM     1     1      0
                                             41 BANK0      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _PrintModRespon                                       3     3      0   31579
                                             84 COMRAM     1     1      0
                                             41 BANK0      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _ModbusRx                                             1     1      0   63578
                                             84 COMRAM     1     1      0
                  _AddRxBuffToModBus
                        _ClearRxBuff
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                             _RXMode
                           _checkCRC
                             _printf
 ---------------------------------------------------------------------------------
 (2) _checkCRC                                            15    15      0   31922
                                             41 BANK0     15    15      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _RXMode                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         1     1      0      37
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ClearRxBuff                                          3     3      0      71
                                              4 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _AddRxBuffToModBus                                    3     3      0      71
                                              4 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _InitialiseString                                     0     0      0   31477
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              12     4      8   31477
                                             29 BANK0     12     4      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   29842
                                             82 COMRAM     2     2      0
                                             23 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           45    39      6   29279
                                             72 COMRAM    10     4      6
                                              0 BANK0     23    23      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    7157
                                             33 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     512
                                             10 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    6539
                                             33 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     412
                                              4 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     421
                                              4 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _stoa                                                22    18      4    2732
                                             15 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    7393
                                             33 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    5127
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     310
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    2077
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1577
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      93
                                              5 COMRAM     1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART2_Write                                        1     1      0      62
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1815
                                             11 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     712
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _ClearModbusRespon                                    2     2      0     102
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ClearModbusData                                      2     2      0     102
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManager                          4     4      0       0
                                              0 COMRAM     4     4      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                _EUSART2_Receive_ISR *
               _EUSART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _EUSART2_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART2_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART2_DefaultErrorHandler *
 _EUSART2_DefaultFramingErrorHandler *
 _EUSART2_DefaultOverrunErrorHandler *
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _EUSART2_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART2_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART2_DefaultErrorHandler                         0     0      0       0
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _EUSART2_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearModbusData
   _ClearModbusRespon
   _ClearRxBuff
   _InitialiseString
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _ModbusRx
     _AddRxBuffToModBus
     _ClearRxBuff
     _EUSART1_Read
     _EUSART1_is_rx_ready
     _RXMode
     _checkCRC
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _fputc
               _putch
                 _EUSART2_Write
             _isdigit
             _stoa
               _fputc
                 _putch
                   _EUSART2_Write
               _strlen
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART2_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART2_Write
                 _strlen
               _toupper
                 _islower
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _PrintModRespon
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _PrintModbus
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _fputc
             _putch
               _EUSART2_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART2_Write
             _strlen
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART2_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART2_Write
               _strlen
             _toupper
               _islower
   _RXMode
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetErrorHandler
       _EUSART2_SetFramingErrorHandler
       _EUSART2_SetOverrunErrorHandler
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _UART1_Write_string
     _EUSART1_Write
     _EUSART1_is_tx_done
     _EUSART1_is_tx_ready
     _TXMode
   _generateCRCHI
   _generateCRCLo
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART2_Write
             _fputs
               _fputc
                 _putch
                   _EUSART2_Write
             _strlen
         _fputc
           _putch
             _EUSART2_Write
         _isdigit
         _stoa
           _fputc
             _putch
               _EUSART2_Write
           _strlen
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _EUSART2_Write
             _fputs
               _fputc
                 _putch
                   _EUSART2_Write
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART2_Write
             _fputs
               _fputc
                 _putch
                   _EUSART2_Write
             _strlen
           _toupper
             _islower

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _EUSART2_Receive_ISR *
     Absolute function(Fake) *
     _EUSART2_DefaultErrorHandler *
       _EUSART2_RxDataHandler
     _EUSART2_DefaultFramingErrorHandler *
     _EUSART2_DefaultOverrunErrorHandler *
     _EUSART2_RxDataHandler *
   _EUSART2_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      64      12       39.1%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      C8      10       78.1%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      E4       8       89.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     3C      A0       5      100.0%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     30A       6        0.0%
DATA                 0      0     30A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Mar 07 12:10:48 2021

                      _eusart1TxBufferRemaining 00F3                          ?_EUSART2_RxDataHandler 0001  
                                             _i 0092                                     __CFG_CP$OFF 000000  
                                            l81 1FB4                             ___wmul@multiplicand 0007  
                                   __CFG_LVP$ON 000000                                             l121 294A  
                                           l124 297A                                             l127 2930  
                                           l320 2440                                             l144 2A4A  
                                           l321 2458                                             l330 2A20  
                                           l324 2488                                             l503 2A0C  
                                           l512 29EE                                             l506 2A02  
                                           l362 29D0                                             l602 1A76  
                                           l515 29F8                                             l371 29C6  
                                           l452 2992                                             l701 174E  
                                           l509 2A16                                             l365 29E4  
                                           l605 1A9C                                             l446 2130  
                                           l470 2384                                             l359 29DA  
                                           l471 239C                                             l455 29A6  
                                           l607 1AFA                                             l368 29BC  
                                           l296 20B4                                             l465 24E0  
                                           l449 2962                                             l810 1004  
                                           l474 23CC                                             l570 230A  
                                           l660 2A2C                                             l581 272A  
                                           l805 0FB4                                             l806 0FFC  
                                           l830 09CC                                             l558 21AC  
                                           l662 2A2E                                             l815 0CA2  
                                           l719 1878                                             l832 09D4  
                                           l680 2618                                             l576 229C  
                                           l592 1D7A                                             l761 1BBC  
                                           l825 0E6A                                             l817 0CAA  
                                           l665 2A30                                             l674 25CE  
                                           l690 1E90                                             l658 2A2A  
                                           l667 2A32                                             l587 2224  
                                           l595 1DA0                                             l756 1B40  
                                           l853 0C06                                             l669 2A34  
                                           l597 1DF0                                             l759 1B82  
                                           l767 0754                                             l855 0C68  
                                           l839 0A6A                                             l695 1642  
                                           l769 075C                                             l794 0EEC  
                                           l698 1668                                             l787 0992  
                                           l796 0EF4                                             l884 06B2  
                                           l869 0220                                             l895 2366  
                                           l896 236E                                             l899 28F4  
                                  __CFG_CPD$OFF 000000          __end_of_EUSART2_SetFramingErrorHandler 29DC  
       __size_of_EUSART2_SetFramingErrorHandler 000A                  _EUSART2_SetFramingErrorHandler 29D2  
                                           _abs 272C                                             _pad 1AFC  
                       __size_of_PMD_Initialize 001C                                             tosl 000FFD  
                                           wreg 000FE8                                    __CFG_ZCD$OFF 000000  
                                          l1013 1326                                            l1026 1602  
                                          ?_abs 0017                                            l1344 1968  
                                          l1337 1948                                            l1354 1A38  
                                          l1347 1A18                                            l1611 27A6  
                                          l1605 1196                                            l1631 2816  
                                          l1608 119E                                            l5000 047A  
                                          l1617 284E                                            l1625 2532  
                                          l5010 0548                                            l5002 04A0  
                                          l5012 056E                                            l5004 04EA  
                                          l5100 1F8E                                            l1661 28CE  
                                          l1574 2762                                            l1646 1F26  
                                          l1654 26A4                                            l5014 0586  
                                          l5022 060C                                            l5110 1F9C  
                                          l5102 1F90                                            l1672 2422  
                                          l5040 06A0                                            l5024 0632  
                                          l5032 0660                                            l5016 0594  
                                          l5008 0522                                            l5120 20BA  
                                          l5112 2A48                                            l5104 1F96  
                                          l5200 2372                                            l1577 276A  
                                          l5034 066E                                            l5026 0640  
                                          l5018 05D0                                            l5130 20E2  
                                          l5122 20C6                                            l5106 1F98  
                                          l5114 2916                                            l5210 23B2  
                                          l5202 2372                                            l1667 2582  
                                          l1683 27DE                                            l4500 1B38  
                                          l5028 0654                                            l5060 2322  
                                          l5300 2132                                            l5220 25E4  
                                          l5140 212C                                            l5132 20E6  
                                          l5124 20D6                                            l5116 2964  
                                          l5108 1F9A                                            l5212 23C2  
                                          l5204 2394                                            l1677 242A  
                                          l4510 1BA4                                            l4502 1B4C  
                                          l5038 067A                                            l5062 2348  
                                          l5230 1E22                                            l5222 25F4  
                                          l5134 20EA                                            l5126 20DA  
                                          l5118 20B6                                            l5070 29C8  
                                          l5150 205E                                            l5142 2038  
                                          l5214 23C6                                            l5206 239E  
                                          l5310 22D4                                            l5302 229E  
                                          l4600 14E4                                            l4440 2450  
                                          l4504 1B60                                            l5056 230C  
                                          l5240 1E70                                            l5232 1E26  
                                          l5224 25F8                                            l5320 2234  
                                          l5080 29FA                                            l5136 20F6  
                                          l5128 20DE                                            l5072 29DC  
                                          l5064 29BE                                            l5160 207A  
                                          l5152 2062                                            l5144 203C  
                                          l5208 23B0                                            l5216 23C8  
                                          l5312 22E8                                            l5304 22A2  
                                          l5400 1A84                                            l5330 26EA  
                                          l4610 154C                                            l4602 1504  
                                          l4514 272C                                            l4450 2482  
                                          l4442 245A                                            l4506 1B64  
                                          l4522 276C                                            l4530 2404  
                                          l5058 2314                                            l5234 1E2A  
                                          l5226 1DF2                                            l5218 25D0  
                                          l5170 297C                                            l5250 1626  
                                          l5322 2242                                            l5082 2A0E  
                                          l5074 29F0                                            l5138 2102  
                                          l5066 29B4                                            l5162 2086  
                                          l5154 2066                                            l5146 2048  
                                          l5090 1F28                                            l5314 22EC  
                                          l5306 22B6                                            l5402 1A8A  
                                          l5410 1AB8                                            l5340 270E  
                                          l4540 28D0                                            l4620 15C2  
                                          l4612 157A                                            l4604 1522  
                                          l4516 2746                                            l4444 246C  
                                          l4452 2484                                            l4436 242E  
                                          l4460 1EB6                                            l4508 1B90  
                                          l4700 079C                                            l4532 2416  
                                          l5084 28A8                                            l5244 1E86  
                                          l5236 1E4A                                            l5228 1E06  
                                          l5180 248A                                            l5260 1656  
                                          l5252 163A                                            l5420 1750  
                                          l5324 226C                                            l5316 2226  
                                          l5076 29E6                                            l5068 29D2  
                                          l5164 20B0                                            l5156 206A  
                                          l5148 2058                                            l5092 1F50  
                                          l5308 22C2                                            l5412 1AD6  
                                          l5404 1A96                                            l5500 1344  
                                          l4542 28EC                                            l4550 11B2  
                                          l4622 15E2                                            l4614 159A  
                                          l4606 152A                                            l4446 246E  
                                          l4438 242E                                            l4454 2A1A  
                                          l4462 1EC0                                            l4470 2662  
                                          l4702 07A2                                            l4710 0894  
                                          l4630 18A4                                            l4518 27E0  
                                          l4526 23CE                                            l5086 28B2  
                                          l5238 1E5E                                            l5190 24D2  
                                          l5182 249C                                            l5270 16BA  
                                          l5262 1662                                            l5246 1604  
                                          l5430 1798                                            l5422 1754  
                                          l5326 2272                                            l5318 2226  
                                          l5350 21F4                                            l5342 21AE  
                                          l5078 2A04                                            l5158 206E  
                                          l5094 1F60                                            l5174 2994  
                                          l5166 294C                                            l5414 1AEA  
                                          l5406 1AA2                                            l5510 1374  
                                          l5502 1348                                            ?_pad 0017  
                                          l5336 26FA                                            l4536 2818  
                                          l4560 1208                                            l4552 11D2  
                                          l4616 15AC                                            l4608 153E  
                                          l4448 247E                                            l4464 1EDE  
                                          l4456 1E92                                            l4472 266E  
                                          l4480 2540                                            l4712 08AE  
                                          l4720 090E                                            l4704 0824  
                                          l4640 190E                                            l4632 18AC  
                                          l4800 0D6C                                            l5192 24D6  
                                          l5184 24BC                                            l5272 16D4  
                                          l5264 166E                                            l5248 160A  
                                          l5440 17CC                                            l5432 179C  
                                          l5424 1768                                            l5328 2290  
                                          l5352 21FA                                            l5344 21AE  
                                          l5096 1F8A                                            l5360 1D5E  
                                          l5416 1AF2                                            l5408 1AB4  
                                          l5520 139E                                            l5512 137E  
                                          l5504 1348                                            l5338 270A  
                                          l4570 125C                                            l4562 1214  
                                          l4554 11D6                                            l4546 11A0  
                                          l4618 15B2                                            l4466 1F14  
                                          l4458 1EA4                                            l4474 2680  
                                          l4482 2544                                            l4730 0952  
                                          l4722 0920                                            l4714 08CC  
                                          l4706 082A                                            l4642 192E  
                                          l4634 18C0                                            l4626 187A  
                                          l4650 1988                                            l4810 0E34  
                                          l4802 0DD0                                            l5194 24DA  
                                          l5186 24BE                                            l5178 248A  
                                          l5274 16F0                                            l5266 1680  
                                          l5258 1650                                            l5450 1818  
                                          l5442 17D0                                            l5434 17B0  
                                          l5354 2218                                            l5346 21BC  
                                          l5098 1F8C                                            l5290 2936  
                                          l5370 1D8E                                            l5362 1D72  
                                          l5530 1418                                            l5522 13AA  
                                          l5514 1382                                            l5506 135C  
                                          l4900 1098                                            l4580 12D0  
                                          l4572 126E                                            l4564 1232  
                                          l4556 11E4                                            l4548 11A4  
                                          l4476 2684                                            l4484 2576  
                                          l4492 1AFC                                            l4732 095A  
                                          l4724 092E                                            l4716 08E6  
                                          l4708 0830                                            l4740 0E7E  
                                          l4644 1930                                            l4636 18CE  
                                          l4628 1886                                            l4660 1A00  
                                          l4652 1990                                            l4804 0DE2  
                                          l4812 0E42                                            l4820 09A6  
                                          l5196 24DE                                            l5188 24CE  
                                          l5276 171C                                            l5284 174C  
                                          l5268 1684                                            l5452 183C  
                                          l5444 17D6                                            l5428 1780  
                                          l5436 17B6                                            l5348 21CA  
                                          l5292 293A                                            l5380 1DDA  
                                          l5372 1D9A                                            l5356 1D3E  
                                          l5540 1490                                            l5532 1454  
                                          l5524 13EA                                            l5516 1386  
                                          l5508 1360                                            l4670 2528  
                                          l4910 1116                                            l4902 10A0  
                                          l4574 129C                                            l4566 123A  
                                          l4582 12D6                                            l4558 1204  
                                          l4590 14A0                                            l4478 2534  
                                          l4494 1B0A                                            l4726 0934  
                                          l4734 096A                                            l4718 0900  
                                          l4750 0EBC                                            l4742 0E86  
                                          l4646 1942                                            l4638 18E0  
                                          l4662 1A12                                            l4654 19A4  
                                          l4806 0E00                                            l4830 0A1A  
                                          l4822 09C0                                            l5614 01E0  
                                          l5278 1746                                            l5454 1850  
                                          l5446 17DE                                            l5438 17C8  
                                          l5462 1876                                            l5294 293E  
                                          l5382 1DE0                                            l5374 1DA6  
                                          l5358 1D42                                            l5390 1A3E  
                                          l5542 1494                                            l5534 1460  
                                          l5526 13EE                                            l5518 1390  
                                          l5472 2594                                            l4672 252C  
                                          l4664 24E2                                            l5616 10C8  
                                          l4904 10A8                                            l4584 12E6  
                                          l4576 12BC                                            l4568 124E  
                                          l4592 14A4                                            l4496 1B1E  
                                          l4728 0946                                            l4680 06FC  
                                          l4760 0F2E                                            l4752 0ECA  
                                          l4744 0E98                                            l4656 19B2  
                                          l4648 196A                                            l4808 0E1A  
                                          l4488 27A8                                            l4840 0A5E  
                                          l4832 0A24                                            l4824 09EA  
                                          l4816 0994                                            l5456 1862  
                                          l5448 1800                                            l5296 2942  
                                          l5288 2932                                            l5384 1DE8  
                                          l5376 1DB8                                            l5368 1D88  
                                          l5392 1A5A                                            l5536 1464  
                                          l5528 13F2                                            l5480 1328  
                                          l5474 25A4                                            l5466 2584  
                                          l4666 24E6                                            l4914 1156  
                                          l4906 10DE                                            l4586 1306  
                                          l4578 12BE                                            l4594 14B2  
                                          l4498 1B2C                                            l4690 0764  
                                          l4682 071C                                            l4770 0F96  
                                          l4762 0F4C                                            l4746 0EA0  
                                          l4738 0E6C                                            l4658 19E0  
                                          l4850 0AEA                                            l4834 0A2A  
                                          l4826 09F2                                            l4818 09A4  
                                          l4930 0170                                            l5458 1870  
                                          l5298 2946                                            l5378 1DBC  
                                          l5394 1A6E                                            l5538 147C  
                                          l5490 1334                                            l5482 132C  
                                          l5476 25A8                                            l4668 24FA  
                                          l4916 1168                                            l4596 14D2  
                                          l4692 0776                                            l4684 072C  
                                          l4676 06B4                                            l4764 0F58  
                                          l4756 0F16                                            l4748 0EB4  
                                          l4780 0C6A                                            l4860 0B2C  
                                          l4852 0AFC                                            l4844 0A9E  
                                          l4836 0A32                                            l4828 0A12  
                                          l4932 0174                                            l4924 012A  
                                          l5388 1A3A                                            l5492 1336  
                                          l5484 132E                                            l5478 25C4  
                                          l4918 117A                                            l4598 14D6  
                                          l4694 0784                                            l4686 072E  
                                          l4678 06D4                                            l4774 0FC6  
                                          l4766 0F8E                                            l4758 0F2A  
                                          l4790 0CDA                                            l4782 0C7A  
                                          l4870 0BF8                                            l4846 0AB0  
                                          l4854 0B10                                            l4838 0A4E  
                                          l4862 0B8A                                            l4950 01A6  
                                          l4942 019A                                            l4934 0180  
                                          l4926 0150                                            l5494 1338  
                                          l5486 1330                                            l4696 078A  
                                          l4688 0748                                            l4776 0FDA  
                                          l4768 0F92                                            l4792 0CE4  
                                          l4784 0C7C                                            l4872 0C14  
                                          l4864 0BA6                                            l4856 0B20  
                                          l4936 0182                                            l4960 020E  
                                          l4928 015E                                            l5496 133C  
                                          l5488 1332                                            l4890 1040  
                                          l4882 1006                                            l4698 0792  
                                          l4778 0FDE                                            l4794 0CEA  
                                          l4786 0C96                                            l4874 0C1A  
                                          l4866 0BC4                                            l4858 0B26  
                                          l4970 029A                                            l4962 022E  
                                          l4954 01AC                                            l4946 01A0  
                                          l4938 0194                                            l5498 1340  
                                          l4892 1078                                            l4884 101A  
                                          l4796 0D60                                            l4788 0CD2  
                                          l4876 0C2A                                            l4868 0BDE  
                                          l4980 0320                                            l4972 02A8  
                                          l4964 0230                                            l4894 107C  
                                          l4886 101E                                            l4798 0D66  
                                          l4878 0C40                                            l4974 02C8  
                                          l4982 0332                                            l4966 0256  
                                          l4958 01B8                                            l4888 1022  
                                          l4992 03FE                                            l4984 0358  
                                          l4976 02D6                                            l4968 028C  
                                          l4898 1082                                            l4994 0424  
                                          l4986 037E                                            l4996 045A  
                                          l4988 03C6                                            STR_1 FE07  
                                          STR_2 FF92                                            STR_3 FEAC  
                                          STR_4 FFEA                                            STR_5 FFF6  
                                          STR_6 FF3E                                            STR_7 FE77  
                                          STR_8 FE40                                            STR_9 FEFB  
                                          _LATA 000F83                                            _LATB 000F84  
                                          _LATC 000F85                                            _LATD 000F86  
                                          _LATE 000F87                                            u4010 2440  
                                          u4011 243C                                            u4020 2450  
                                          u4100 2576                                            u4021 244C  
                                          u4101 2572                                            u4030 247E  
                                          u4110 27D8                                            u4031 247A  
                                          u4111 27D2                                            u5000 1094  
                                          u4040 1EA4                                            u4200 27A0  
                                          u4120 27DA                                            u5001 1090  
                                          u4041 1EA0                                            u4201 279A  
                                          u5010 1150                                            u4050 1EB6  
                                          u4130 1B0A                                            u4210 27A2  
                                          u5011 114A                                            u4051 1EB2  
                                          u4131 1B06                                            u5020 1152  
                                          u4300 1232                                            u4060 1EDE  
                                          u4140 1B2C                                            u4220 23FE  
                                          u5100 0318                                            u4301 122E  
                                          u4061 1EDA                                            u4141 1B28  
                                          u4221 23F8                                            u5101 0312  
                                          u5030 1168                                            u4310 125C  
                                          u4070 1F14                                            u4150 1B82  
                                          u4230 2400                                            u5110 031A  
                                          u5031 1164                                            u4311 1258  
                                          u4071 1F10                                            u4151 1B7E  
                                          u5040 117A                                            u4320 129C  
                                          u4080 26A4                                            u4160 1B90  
                                          u4240 2416                                            u5120 0332  
                                          u5200 2366                                            u5041 1176  
                                          u4321 1298                                            u4081 26A0  
                                          u4161 1B8C                                            u4401 1880  
                                          u4241 2412                                            u5121 032E  
                                          u5201 2362                                            u4250 2848  
                                          u4330 12E6                                            u4170 2746  
                                          u4090 2566                                            u4410 18A4  
                                          u5130 0358                                            u5050 0150  
                                          u5210 2960                                            u4251 2842  
                                          u4331 12E2                                            u4171 2742  
                                          u4411 18A0                                            u5131 0354  
                                          u5051 014C                                            u5211 295A  
                                          u4260 284A                                            u4340 14B2  
                                          u4500 06E6                                            u4420 18CE  
                                          u4180 2810                                            u5140 037E  
                                          u5060 0220                                            u5300 23C2  
                                          u5220 2962                                            u4341 14AE  
                                          u4421 18CA                                            u4181 280A  
                                          u5141 037A                                            u5061 021C  
                                          u5301 23BE                                            u4270 11B2  
                                          u4350 14E4                                            u4510 06FC  
                                          u4430 190E                                            u4190 2812  
                                          u5150 0424                                            u5070 022E  
                                          u5310 2618                                            u5230 2990  
                                          u4271 11AE                                            u4351 14E0  
                                          u4511 06F8                                            u4431 190A  
                                          u5151 0420                                            u5071 022A  
                                          u5311 2614                                            u5231 298A  
                                          u4280 11E4                                            u4360 1522  
                                          u4600 090E                                            u4520 072C  
                                          u4440 1988                                            u5160 04A0  
                                          u5080 0256                                            u5320 1E4A  
                                          u5240 2992                                            u5400 22B6  
                                          u4281 11E0                                            u4361 151E  
                                          u4097 255C                                            u4601 090A  
                                          u4521 0728                                            u4441 1984  
                                          u5161 049C                                            u5081 0252  
                                          u5321 1E46                                            u5401 22B2  
                                          u4370 154C                                            u4610 0920  
                                          u4530 0748                                            u4450 19B2  
                                          u5170 0548                                            u5090 029A  
                                          u5330 1E5E                                            u5250 29A4  
                                          u5410 22E8                                            u4291 120E  
                                          u4371 1548                                            u4611 091C  
                                          u4531 0744                                            u4451 19AE  
                                          u5171 0544                                            u5091 0296  
                                          u5331 1E5A                                            u5251 299E  
                                          u5411 22E4                                            u4380 157A  
                                          u4620 092E                                            u4540 0776  
                                          u4700 0F7A                                            u4460 19E0  
                                          u5180 056E                                            u5340 1E82  
                                          u5260 249C                                            u5420 230A  
                                          u5500 1AB4                                            _PMD0 000EE1  
                                          u4381 1576                                            u4621 092A  
                                          u4541 0772                                            u4461 19DC  
                                          u5181 056A                                            u5341 1E7E  
                                          u5261 2498                                            u5421 2306  
                                          u5501 1AB0                                            _PMD1 000EE2  
                                          u4470 24FA                                            u4390 15C2  
                                          u4630 0946                                            u4550 0784  
                                          u4710 0FB4                                            u5190 0632  
                                          u5270 24CE                                            u5350 1650  
                                          u5430 2290                                            u5510 1AD6  
                                          _PMD2 000EE3                                            u4471 24F6  
                                          u4391 15BE                                            u4631 0942  
                                          u4551 0780                                            u4711 0FB0  
                                          u5191 062E                                            u5271 24CA  
                                          u5351 164C                                            u5431 228C  
                                          u5511 1AD2                                            _PMD3 000EE4  
                                          u5600 25C4                                            u5440 272A  
                                          u4480 2528                                            u4560 08AE  
                                          u4720 0FC2                                            u4800 0E42  
                                          u5360 1680                                            u5520 1768  
                                          u5280 2384                                            u5256 29A6  
                                          _PMD4 000EE5                                            u5601 25C0  
                                          u5441 2726                                            u4481 2524  
                                          u4561 08AA                                            u4721 0FBE  
                                          u4641 0E76                                            u4801 0E3E  
                                          u5361 167C                                            u5521 1764  
                                          u5281 2380                                            _PMD5 000EE6  
                                          u4570 08CC                                            u4490 06E4  
                                          u4730 0FFC                                            u4650 0E98  
                                          u4810 09A4                                            u5370 16BA  
                                          u5530 177C                                            u5450 2218  
                                          u5290 2394                                            u5610 135C  
                                          u4571 08C8                                            u4491 06DE  
                                          u4731 0FF8                                            u4707 0F70  
                                          u4651 0E94                                            u4811 09A0  
                                          u5371 16B6                                            u5531 1778  
                                          u5451 2214                                            u5291 2390  
                                          u5611 1358                                            u4580 08E6  
                                          u4660 0ECA                                            u4740 0C7A  
                                          u4900 0AFC                                            u4820 09C0  
                                          u5380 171C                                            u5540 17B0  
                                          u5460 1D88                                            u5620 1374  
                                          u4581 08E2                                            u4661 0EC6  
                                          u4741 0C76                                            u4901 0AF8  
                                          u4821 09BC                                            u5381 1718  
                                          u5541 17AC                                            u5461 1D84  
                                          u5621 1370                                            u4590 0900  
                                          u4670 0EE8                                            u4750 0C96  
                                          u4910 0B64                                            u4830 09EA  
                                          u5390 1746                                            u5550 17C8  
                                          u5470 1DB8                                            u5630 1418  
                                          u4591 08FC                                            u4671 0EE4  
                                          u4751 0C92                                            u4831 09E6  
                                          u5391 1742                                            u5551 17C4  
                                          u5471 1DB4                                            u5631 1414  
                                          u4680 0F12                                            u4760 0DE2  
                                          u4920 0BA6                                            u4840 0A4E  
                                          u5560 17EE                                            u5480 1DDA  
                                          u4681 0F0E                                            u4761 0DDE  
                                          u4921 0BA2                                            u4841 0A4A  
                                          u5561 17E8                                            u5481 1DD6  
                                          u4690 0F4C                                            u4770 0E00  
                                          u4930 0BC4                                            u4850 0A98  
                                          u5570 1818                                            u5490 1A84  
                                          u4691 0F48                                            u4771 0DFC  
                                          u4931 0BC0                                            u4915 0B52  
                                          u4851 0A92                                            u5571 1814  
                                          u5491 1A80                                            u4780 0E1A  
                                          u4940 0BDE                                            u4860 0A9A  
                                          u5580 1828                                            u4781 0E16  
                                          u4941 0BDA                                            u5581 1822  
                                          u4790 0E34                                            u4950 0BF8  
                                          u4870 0AB0                                            u5590 1850  
                                          u5566 17F0                                            u4791 0E30  
                                          u4951 0BF4                                            u4871 0AAC  
                                          u5591 184C                                            u4960 0C06  
                                          u4880 0AE4                                            u4961 0C02  
                                          u4881 0ADE                                            u4970 0C14  
                                          u4890 0AE6                                            u5586 182A  
                                          u4971 0C10                                            u4980 1040  
                                          u4981 103C                                            u4990 1078  
                                          u4991 1074                                            _WPUA 000F10  
                                          _WPUB 000F18                                            _WPUC 000F20  
                                          _WPUD 000F25                                            _WPUE 000F2D  
                         ??_EUSART2_Receive_ISR 0001                                  generateCRCHI@i 000C  
                                generateCRCHI@j 000E                                   _EUSART1_Write 2370  
                                 __CFG_FCMEN$ON 000000                                   _EUSART2_Write 242C  
                            ClearModbusRespon@i 0005                                            abs@a 0017  
                                generateCRCLo@i 000D                                  generateCRCLo@j 000F  
                                          _dbuf 0184                                            _atoi 1006  
                                          _main 1328                                            _dtoa 06B4  
                                 ?_EUSART1_Read 0001                                            _prec 008C  
                                          _nout 0088                                            pad@i 001E  
                                          pad@p 001B                                            fsr0h 000FEA  
                                          fsr1h 000FE2                                            indf0 000FEF  
                                          fsr2h 000FDA                                            fsr0l 000FE9  
                                          indf1 000FE7                                            indf2 000FDF  
                                          fsr1l 000FE1                                            pad@w 0020  
                                          fsr2l 000FD9                                            _stoa 0E6C  
                                          btemp 005A                                            _utoa 0C6A  
                                          _xtoa 0994                                            prodh 000FF4  
                                          prodl 000FF3                                            start 0126  
                  __end_of_EUSART2_Transmit_ISR 2662                                   __CFG_CSWEN$ON 000000  
                               ??_generateCRCHI 0007                             UART1_Write_string@i 000B  
                fp__EUSART1_DefaultErrorHandler 0000                                 ??_generateCRCLo 0007  
                                  ___param_bank 000000                                   __CFG_SCANE$ON 000000  
                                         ??_abs 0019                                           ??_pad 001D  
                __size_of_OSCILLATOR_Initialize 0018                   __end_of_OSCILLATOR_Initialize 297C  
                         _eusart1RxStatusBuffer 0200                                 __end_of___aodiv 1328  
                                         ?_atoi 000C                                           ?_main 0001  
                                         ?_dtoa 0022                                 __end_of___aomod 1604  
                                         STR_10 FFD7                                           STR_11 FFAB  
                                         STR_12 FFD3                                           STR_13 FF1E  
                                         STR_14 FFAB                                           STR_15 FFD3  
                                         STR_16 FF5B                                           STR_17 FED7  
                                 __CFG_WDTE$OFF 000000                                           STR_18 FFC2  
                                         STR_19 FF77                                ?_ClearModbusData 0001  
                                         ?_stoa 0010                                           ?_utoa 0022  
                               __end_of___lodiv 196A                                           ?_xtoa 0022  
                               __end_of___lomod 1A3A                                  __CFG_DEBUG$OFF 000000  
                                         i2l150 0064                                           i2l152 009E  
                                         i2l153 0112                                           i2l154 00D8  
                                         i2l500 2A46                                           i2l333 265C  
                                         i2l350 2A4C                                           i2l343 1C7C  
                                         i2l159 0112                                           i2l336 2660  
                                         i2l353 2A28                                           i2l347 287A  
                                         i2l356 2A3A                                           i2l480 26E8  
                                         i2l491 28A6                                           i2l477 26E4  
                                         i2l494 2A4E                                           i2l487 1D3C  
                                         i2l497 2A40                     __size_of_EUSART1_is_tx_done 0014  
                                         _OSCEN 000EDC                                    vfpfcnvrt@fmt 004B  
                                  vfpfcnvrt@llu 00B2                                           _TRISA 000F88  
                                         _TRISB 000F89                                           _TRISC 000F8A  
                                         _TRISD 000F8B                                           _TRISE 000F8C  
                                         _Debug 0098                                   __CFG_WRT0$OFF 000000  
                                 __CFG_WRT1$OFF 000000                                   __CFG_WRT2$OFF 000000  
                                 __CFG_WRT3$OFF 000000                            _EUSART1_Transmit_ISR 26A6  
                                __CFG_EBTR0$OFF 000000                                  __CFG_EBTR1$OFF 000000  
                          generateCRCHI@MessCnt 0005                                  __CFG_EBTR2$OFF 000000  
                                __CFG_EBTR3$OFF 000000                                   __CFG_WRTB$OFF 000000  
                                 __CFG_WRTC$OFF 000000                                   __CFG_WRTD$OFF 000000  
                                __CFG_EBTRB$OFF 000000                                           _flags 0056  
                                         _fputc 1E92                                 __end_of_isalpha 27A8  
                                         _fputs 2662                                 __end_of_isdigit 2850  
                            __CFG_MCLRE$EXTMCLR 000000                                           atoi@n 0019  
                                         pad@fp 0017                                           atoi@s 000C  
                                         _width 008A                                           _putch 2A18  
                                         dtoa@d 0024                                           dtoa@i 0044  
                                         dtoa@n 003C                                           dtoa@p 0036  
                                         dtoa@s 003A                                           dtoa@w 0038  
                               __end_of_islower 27E0                                 __end_of_isspace 2534  
                                ?_EUSART1_Write 0001                                  ?_EUSART2_Write 0001  
                               __end_of_isupper 2818                                           pclath 000FFA  
                                         tablat 000FF5                                     _ClearRxBuff 25D0  
                                ??_EUSART1_Read 0005                                           plusw1 000FE3  
                                         plusw2 000FDB                                           stoa@i 001C  
                                         stoa@l 0024                                           stoa@p 0022  
                                         stoa@s 0012                                           stoa@w 001E  
                                         ttemp5 005B                                           ttemp6 005E  
                                         ttemp7 0062                                           utoa@d 0024  
                                         utoa@i 0040                                           utoa@n 0038  
                                         utoa@p 0034                                           utoa@w 0036  
                                         status 000FD8                                      _ModDataCnt 0094  
                                         wtemp8 005B                                           xtoa@c 0047  
                                         xtoa@d 0024                                           xtoa@i 0045  
                                         xtoa@n 003D                                           xtoa@p 0039  
                                         xtoa@w 003B                                           xtoa@x 002C  
                          generateCRCHI@crcHigh 000A                                 __end_of_toupper 242C  
                              ___lodiv@dividend 0005           fp__EUSART1_DefaultFramingErrorHandler 0000  
    __end_of_EUSART1_DefaultFramingErrorHandler 2A50     __size_of_EUSART1_DefaultFramingErrorHandler 0002  
          ??_EUSART1_DefaultFramingErrorHandler 0001             ?_EUSART1_DefaultFramingErrorHandler 0001  
            _EUSART1_DefaultFramingErrorHandler 2A4E                                  checkCRC@crcLow 00D3  
         __end_of_EUSART2_SetTxInterruptHandler 29BE          __size_of_EUSART2_SetTxInterruptHandler 000A  
                 _EUSART2_SetTxInterruptHandler 29B4                                    _toupper$1907 0011  
                               __initialization 1FB6                                    __end_of_atoi 11A0  
                    __end_of_EUSART1_Initialize 2132                                    __end_of_main 14A0  
                                  __end_of_dtoa 0994                       __size_of_InitialiseString 007C  
                                  __end_of_stoa 1006                                    __end_of_utoa 0E6C  
                                  __end_of_xtoa 0C6A                     ?_INTERRUPT_InterruptManager 0001  
                              __end_of_ModbusRx 187A                                          ??_atoi 000E  
                                        ??_main 00DB                                          ??_dtoa 002C  
                                        ??_stoa 0014                                          ??_utoa 002C  
                                        ??_xtoa 002D                                   __activetblptr 000003  
           __end_of_EUSART2_DefaultErrorHandler 2A3C                     _EUSART2_DefaultErrorHandler 2A36  
                                    _ModbusData 0100                           ?_EUSART1_Transmit_ISR 0001  
                              ___lodiv@quotient 0015                      __end_of_EUSART2_Initialize 20B6  
                      _eusart2TxBufferRemaining 00F4                                          ?_fputc 0007  
                                        ?_fputs 0010                                          _ANSELA 000F11  
                                        ?_putch 0001                                          _ANSELB 000F19  
                                        _ANSELC 000F21                                          _ANSELD 000F26  
                                        _ANSELE 000F2E                                          _RC1REG 000F99  
                                        _RC2REG 000E99                                          _RC1STA 000F9D  
                                        _RC2STA 000E9D                                          _RB6PPS 000EF5  
                                        _ODCONA 000F0F                                          _ODCONB 000F17  
                                        _ODCONC 000F1F                                          _RC6PPS 000EFD  
                                        _ODCOND 000F24                                          _ODCONE 000F2C  
                  __size_of_EUSART1_is_rx_ready 0018                                  __CFG_WDTCCS$SC 000000  
                                        i2l4040 2642                                          i2l4050 1BDE  
                                        i2l4042 2652                                          i2l4034 261A  
                                        i2l4060 1C3E                                          i2l4052 1BEE  
                                        i2l4044 2656                                          i2l4036 262C  
                                        i2l4070 26C8                                          i2l4062 1C5A  
                                        i2l4054 1C06                                          i2l4046 1BBE  
                                        i2l4038 263E                                          i2l4080 1C8E  
                                        i2l4072 26CA                                          i2l4064 1C78  
                                        i2l4056 1C16                                          i2l4048 1BCE  
                                        i2l4090 1CE4                                          i2l4082 1C9C  
                                        i2l4074 26DA                                          i2l4066 26A6  
                                        i2l4058 1C26                                          i2l4092 1CFE  
                                        i2l4084 1CAC                                          i2l4076 26DE  
                                        i2l4068 26B8                                          i2l4094 1D1A  
                                        i2l4086 1CC6                                          i2l4078 1C7E  
                                        i2l4096 1D38                                          i2l4088 1CD4  
                                        i2l4280 0028                                          i2l4290 00AC  
                                        i2l4282 0038                                          i2l4292 00BA  
                                        i2l4284 0046                                          i2l4294 00E6  
                                        i2l4286 0072                                          i2l4278 001A  
                                        i2l3760 2860                                          i2l4296 00F4  
                                        i2l4288 0080                                          _INLVLA 000F0D  
                                        i2l3762 2862                                          _INLVLB 000F15  
                                        _INLVLC 000F1D                                          i2l3780 288C  
                                        i2l3764 2872                                          _INLVLD 000F22  
                                        _INLVLE 000F2A                                          i2l3782 288E  
                                        i2l3926 2A3C                                          i2l3766 2876  
                                        i2l3758 2850                                          i2l3870 2A22  
                                        i2l3784 289E                                          i2l3928 2A42  
                                        i2l3872 2A36                                          i2l3786 28A2  
                                        i2l3778 287C                                          _TABLAT 000FF5  
                                        _OSCFRQ 000EDE                                   vfpfcnvrt@done 00AE  
                  __size_of_EUSART1_is_tx_ready 0018                                          _NVMDAT 000F80  
                                        _RX1PPS 000EB5                                          _RX2PPS 000E8D  
                                        _TX1REG 000F9A                                          _TX2REG 000E9A  
                              __end_of_checkCRC 1750                                          _TX1STA 000F9E  
                                        _TX2STA 000E9E                                          _RXMode 2A30  
                                        _TXMode 2A2A                                          _RXStat 0097  
                                __CFG_PWRTE$OFF 000000                                generateCRCHI@crc 0010  
                            _UART1_Write_string 229E                                  __CFG_XINST$OFF 000000  
                                  vfprintf@cfmt 0053                       __CFG_RSTOSC$HFINTOSC_1MHZ 000000  
                            AddRxBuffToModBus@i 0006                                       ??___aodiv 0015  
                                     ??___aomod 0015                                          ___wmul 28D0  
                                __CFG_STVREN$ON 000000                                generateCRCLo@crc 0011  
                                     ??___lodiv 0015                                       ??___lomod 0015  
                           ?_UART1_Write_string 0006                        ?_EUSART1_SetErrorHandler 0005  
                                        clear_0 1FFC                                          clear_1 2008  
                                        clear_2 2014                                          clear_3 2020  
                                        _rxData 0300                     _EUSART2_FramingErrorHandler 00E9  
                                        _printf 28A8                                          pad@buf 0019  
              ??_EUSART1_SetOverrunErrorHandler 0007                 ?_EUSART1_SetOverrunErrorHandler 0005  
                                        dtoa@fp 0022                                          _strlen 2534  
                                 _ExpectedBytes 00FC                                          fputc@c 0007  
                                _PMD_Initialize 2916                                          fputs@c 0014  
                                        fputs@i 0015                                          fputs@s 0010  
                                     ??_isalpha 0007                                       ??_isdigit 0007  
                                 ??_PrintModbus 0055                                       ??_islower 0007  
                                  __mediumconst FE06                                       ??_isspace 0007  
                                        tblptrh 000FF7                                       ??_isupper 0007  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                          _EUSART2_Transmit_ISR 261A                                          stoa@cp 0020  
                                        stoa@fp 0010                                __end_of_vfprintf 2370  
                               ??_EUSART1_Write 0005                                          utoa@fp 0022  
                               ??_EUSART2_Write 0005                                          xtoa@fp 0022  
                               _eusart1RxBuffer 0264                                       ??_toupper 000D  
                          ??_UART1_Write_string 000A                   __size_of_INTERRUPT_Initialize 0004  
                               _eusart2RxBuffer 0078                                 _eusart1TxBuffer 0060  
                             _SYSTEM_Initialize 2932                         __size_of_PrintModRespon 0078  
                               _eusart2TxBuffer 0080                                      __accesstop 0060  
                       __end_of__initialization 202E                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                                 checkCRC@crcHigh 00D1  
                       ??_EUSART2_RxDataHandler 0001                  __size_of_EUSART1_RxDataHandler 002C  
                 __end_of_EUSART1_RxDataHandler 28A8                                  __pcstackCOMRAM 0001  
                                  __pidataBANK0 29A8                                    __pidataBANK1 28F6  
                           ??_SYSTEM_Initialize 0007                                   __end_of_fputc 1F28  
                                 __end_of_fputs 26A6                  ?_EUSART2_SetTxInterruptHandler 0005  
                                 __end_of_putch 2A22                          __end_of_PMD_Initialize 2932  
                          __end_of_EUSART1_Read 24E2                          ??_EUSART1_Transmit_ISR 0001  
                          generateCRCLo@MessCnt 0005                        ?_EUSART2_SetErrorHandler 0005  
                         ?_EUSART2_Transmit_ISR 0001                     __end_of_EUSART1_Receive_ISR 1D3E  
                                       ??_fputc 000B                       __end_of_SYSTEM_Initialize 294C  
                                       ??_fputs 0014                                         ??_putch 0006  
                                 _eusart1RxHead 0058                                   _eusart1TxHead 009D  
                                 _eusart2RxHead 0059                                   _eusart1RxTail 009B  
                                 _eusart2TxHead 00A2                                      __pbssBANK0 0060  
                                    __pbssBANK1 0100                                      __pbssBANK2 0200  
                                    __pbssBANK3 0300                                   _eusart2RxTail 00A0  
                                 _eusart1TxTail 009C               _EUSART1_TxDefaultInterruptHandler 00ED  
                                 _eusart2TxTail 00A1                 ??_EUSART1_SetRxInterruptHandler 0007  
                           __end_of_PrintModbus 2226                ??_EUSART2_SetFramingErrorHandler 0007  
               ?_EUSART2_SetFramingErrorHandler 0005                                       ?_ModbusRx 0001  
                                       ?_RXMode 0001                                         ?_TXMode 0001  
               __end_of_EUSART1_SetErrorHandler 2A18                                _InitialiseString 2132  
                                       ?___wmul 0005                                 __CFG_PPS1WAY$ON 000000  
                                       _MB300xx 01C4                                         _MB400xx 0164  
                                       ?_printf 00C0                                 ?_PMD_Initialize 0001  
                             _ClearModbusRespon 26EA                                         ?_strlen 0005  
        __end_of_EUSART1_SetFramingErrorHandler 2A0E         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler 2A04                           _eusart2RxStatusBuffer 0070  
                                     ?_checkCRC 0001                              ?_ClearModbusRespon 0001  
                  ?_EUSART1_DefaultErrorHandler 0001                                         _SP1BRGH 000F9C  
                                       _SP1BRGL 000F9B                                         _SP2BRGH 000E9C  
                                       _SP2BRGL 000E9B                                         _OSCCON1 000ED8  
                                       _OSCCON3 000EDA                     __end_of_EUSART2_Receive_ISR 1C7E  
                            __size_of_vfpfcnvrt 058A                                         _TBLPTRH 000FF7  
                                       _TBLPTRL 000FF6                                         _TBLPTRU 000FF8  
                                       _NVMADRH 000F7F                                         _NVMADRL 000F7E  
                                       _OSCTUNE 000EDD                                         _NVMCON2 000F82  
                                       _SLRCONA 000F0E                                         _SLRCONB 000F16  
                                       _SLRCONC 000F1E                                         _SLRCOND 000F23  
                                       _SLRCONE 000F2B                             ??_ClearModbusRespon 0005  
                              ___lomod@dividend 0005                                    ?_ClearRxBuff 0001  
                                    ??_ModbusRx 0055                                         _ByteNum 008E  
                               __size_of_RXMode 0006                                 __size_of_TXMode 0006  
                                       __Hparam 0000                                         __Lparam 0000  
                fp__EUSART2_DefaultErrorHandler 0000                                         ___aodiv 11A0  
                                       ___aomod 14A0                           __end_of_generateCRCHI 1DF2  
                         __end_of_generateCRCLo 1AFC                                 __size_of___wmul 0026  
                                       ___lodiv 187A                                         ___lomod 196A  
                                     ?_vfprintf 00BA                       __end_of_ClearModbusRespon 272C  
                           _EUSART1_is_rx_ready 297C                      __end_of_EUSART1_is_tx_done 29A8  
                                       __pcinit 1FB6                 __end_of_EUSART2_SetErrorHandler 29E6  
                                       __ramtop 0F00                             _EUSART1_is_tx_ready 294C  
                                       __ptext0 1328                                         __ptext1 1A3A  
                                       __ptext2 1D3E                                         __ptext3 229E  
                                       __ptext4 2A2A                                         __ptext5 294C  
                                       __ptext6 2994                                         __ptext7 2370  
                                       __ptext8 2932                                         __ptext9 2916  
                               __size_of_printf 0028                                 __size_of_strlen 0050  
                                    ??_checkCRC 00CC           fp__EUSART2_DefaultOverrunErrorHandler 0000  
    __end_of_EUSART2_DefaultOverrunErrorHandler 2A2A     __size_of_EUSART2_DefaultOverrunErrorHandler 0008  
          ??_EUSART2_DefaultOverrunErrorHandler 0001             ?_EUSART2_DefaultOverrunErrorHandler 0001  
            _EUSART2_DefaultOverrunErrorHandler 2A22                           _OSCILLATOR_Initialize 2964  
                        ??_EUSART2_Transmit_ISR 0001                                    __size_of_abs 0040  
                                  __size_of_pad 00C2                                         _isalpha 276C  
                                       _isdigit 2818                              _EUSART1_Initialize 20B6  
                                       _islower 27A8                        ??_PIN_MANAGER_Initialize 0005  
                                       _isspace 24E2                                     _PrintModbus 21AE  
                                       _isupper 27E0                   ??_EUSART1_DefaultErrorHandler 0001  
                                       atoi@neg 0012                      __size_of_SYSTEM_Initialize 001A  
                      __size_of_ClearModbusData 004C                                         _toupper 23CE  
                          end_of_initialization 202E                            ?_EUSART1_is_rx_ready 0001  
                           ?_EUSART1_Initialize 0001                                  _PrintModRespon 2226  
                          ?_EUSART1_is_tx_ready 0001                                         fputc@fp 0009  
                   _EUSART1_OverrunErrorHandler 00E1                                         fputs@fp 0012  
         __end_of_EUSART1_SetRxInterruptHandler 29FA          __size_of_EUSART1_SetRxInterruptHandler 000A  
                 _EUSART1_SetRxInterruptHandler 29F0                              _EUSART2_Initialize 2038  
                             __end_of_vfpfcnvrt 06B4                                         postdec1 000FE5  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                         __size_of_EUSART1_Read 0058                                      ??_vfprintf 0053  
                          ??_EUSART1_Initialize 0007                           __CFG_WDTCPS$WDTCPS_31 000000  
                           ?_EUSART2_Initialize 0001                                         strlen@a 0007  
                                       strlen@s 0005                                ClearModbusData@i 0005  
                       fp__EUSART1_Transmit_ISR 0000                          __end_of_PrintModRespon 229E  
              __size_of_EUSART1_SetErrorHandler 000A                             EUSART1_Write@txData 0005  
                              __CFG_FEXTOSC$OFF 000000                           ??_EUSART1_is_rx_ready 0005  
                          ??_EUSART2_Initialize 0007                           ??_EUSART1_is_tx_ready 0005  
                                  _EUSART1_Read 248A            __size_of_EUSART1_DefaultErrorHandler 0006  
                                __end_of_RXMode 2A36                                  __end_of_TXMode 2A30  
                        UART1_Write_string@data 0006                  __size_of_EUSART2_RxDataHandler 002C  
                 __end_of_EUSART2_RxDataHandler 287C                    __end_of_INTERRUPT_Initialize 2A4C  
                    __size_of_ClearModbusRespon 0042                                     vfpfcnvrt@ap 004D  
                                   vfpfcnvrt@cp 00AB                                     vfpfcnvrt@fp 0049  
                                   vfpfcnvrt@ll 00A3                                  __end_of___wmul 28F6  
                        ?_OSCILLATOR_Initialize 0001                                  __end_of_printf 28D0  
                                __end_of_strlen 2584                             generateCRCHI@crcLow 0008  
                           start_initialization 1FB6                                 ___lodiv@divisor 000D  
                               ___lodiv@counter 001D                 __size_of_PIN_MANAGER_Initialize 008E  
                                   __end_of_abs 276C                                     __end_of_pad 1BBE  
                      __end_of_InitialiseString 21AE   EUSART1_SetRxInterruptHandler@interruptHandler 0005  
 EUSART1_SetTxInterruptHandler@interruptHandler 0005   EUSART2_SetRxInterruptHandler@interruptHandler 0005  
 EUSART2_SetTxInterruptHandler@interruptHandler 0005                                 ?_PrintModRespon 0001  
                                   putch@txData 0006                           __end_of_EUSART1_Write 23CE  
                   __size_of_UART1_Write_string 006E                           __end_of_EUSART2_Write 248A  
                        fp__EUSART1_Receive_ISR 0000                __size_of_EUSART2_SetErrorHandler 000A  
                                      ??_RXMode 0005                            __size_of_ClearRxBuff 004A  
                             ??_ClearModbusData 0005                                        ??_TXMode 0005  
        __end_of_EUSART2_SetOverrunErrorHandler 29D2         __size_of_EUSART2_SetOverrunErrorHandler 000A  
                _EUSART2_SetOverrunErrorHandler 29C8                                __CFG_LPBOREN$OFF 000000  
                                  ClearRxBuff@i 0006                               __size_of_ModbusRx 012A  
                                   vfprintf@fmt 00BC                                ??_PMD_Initialize 0005  
                                      ??___wmul 0009                           _EUSART1_RxDataHandler 287C  
                ?_EUSART1_SetRxInterruptHandler 0005                                     __pdataBANK0 00F5  
                                   __pdataBANK1 01C4                                        ??_printf 0055  
                                      ??_strlen 0007                                  _eusart1RxCount 009A  
                                _eusart2RxCount 009F                                     __pbssCOMRAM 0056  
             _EUSART1_RxDefaultInterruptHandler 00EB                   __size_of_EUSART1_Transmit_ISR 0044  
                                 __pcstackBANK0 00A3                                ___aodiv@dividend 0005  
                             __size_of_checkCRC 014C                         fp__EUSART2_Transmit_ISR 0000  
                             _AddRxBuffToModBus 1DF2                             EUSART2_Write@txData 0005  
               ??_EUSART1_SetTxInterruptHandler 0007                              ?_AddRxBuffToModBus 0001  
              ??_EUSART1_SetFramingErrorHandler 0007                 ?_EUSART1_SetFramingErrorHandler 0005  
               ??_EUSART2_SetRxInterruptHandler 0007                    __size_of_EUSART1_Receive_ISR 00C0  
                        fp__EUSART2_Receive_ISR 0000                                       _atoi$1816 0014  
                                     _atoi$1817 0018                                       _atoi$1818 0016  
                                     __pnvBANK0 00DF                             generateCRCLo@crcLow 000B  
                           ??_AddRxBuffToModBus 0005                          _PIN_MANAGER_Initialize 1F28  
                                     _dtoa$1312 0034                                       __pintcode 0008  
                                 __pmediumconst FE06                                        ?___aodiv 0005  
                                      ?___aomod 0005                                ___aodiv@quotient 0017  
                                      ?___lodiv 0005                                        ?___lomod 0005  
             _EUSART2_TxDefaultInterruptHandler 00F1                    ??_INTERRUPT_InterruptManager 0001  
                             __size_of_vfprintf 0064                                 ___lomod@divisor 000D  
                                      _BAUD1CON 000F9F                                        _BAUD2CON 000E9F  
                                     checkCRC@i 00D9                                       checkCRC@j 00D5  
                               ___lomod@counter 0015           fp__EUSART1_DefaultOverrunErrorHandler 0000  
    __end_of_EUSART1_DefaultOverrunErrorHandler 2A42     __size_of_EUSART1_DefaultOverrunErrorHandler 0006  
          ??_EUSART1_DefaultOverrunErrorHandler 0001             ?_EUSART1_DefaultOverrunErrorHandler 0001  
            _EUSART1_DefaultOverrunErrorHandler 2A3C                                        ?_isalpha 0005  
                                      ?_isdigit 0005                            _EUSART1_ErrorHandler 00DF  
                  ?_EUSART2_DefaultErrorHandler 0001                                        ?_islower 0005  
                                      ?_isspace 0005                                    ?_PrintModbus 0001  
                     __end_of_AddRxBuffToModBus 1E92                                        ?_isupper 0005  
                       _EUSART1_SetErrorHandler 2A0E                              _EUSART1_is_tx_done 2994  
                                __size_of_fputc 0096                                  __size_of_fputs 0044  
                                      ?_toupper 000B                                  __size_of_putch 000A  
                          _INTERRUPT_Initialize 2A48                    __size_of_EUSART2_Receive_ISR 00C0  
                                ___wmul@product 0009                                        _LATAbits 000F83  
       EUSART1_SetErrorHandler@interruptHandler 0005         EUSART2_SetErrorHandler@interruptHandler 0005  
                                      _LATDbits 000F86                             ?_EUSART1_is_tx_done 0001  
                                      _PIE3bits 000EC5                             __CFG_BORV$VBOR_2P45 000000  
                    UART1_Write_string@data_len 0008                                        _MBResCRC 00FE  
           __size_of_INTERRUPT_InterruptManager 011E                                        i2u325_40 2872  
                                      i2u325_41 286E                                        i2u326_40 289E  
                                      i2u350_40 1BDE                                        _MBResCnt 0090  
                                      i2u326_41 289A                                        i2u350_41 1BDA  
                                      i2u360_40 1CD4                                        i2u352_40 1C16  
                                      i2u351_48 1BF4                                        i2u360_41 1CD0  
                                      i2u352_41 1C12                                        i2u351_49 1C06  
                                      i2u362_40 1D1A                                        i2u361_48 1CEA  
                                      i2u354_40 1C5A                                        i2u353_48 1C2C  
                                      i2u362_41 1D16                                        i2u361_49 1CFE  
                                      i2u354_41 1C56                                        i2u353_49 1C3E  
                                      i2u363_48 1D20                                        i2u356_40 26B8  
                                      i2u355_48 1C60                                        i2u348_40 262C  
                                      i2u363_49 1D34                                        i2u356_41 26B4  
                                      i2u355_49 1C74                                        i2u348_41 2628  
                                      i2u357_40 26DA                                        i2u349_40 2652  
                                      i2u357_41 26D6                                        i2u349_41 264E  
                                      _PIR3bits 000ECD                                        i2u358_40 1C9C  
                                      i2u390_40 0080                                        i2u358_41 1C98  
                                      i2u390_41 007C                                        i2u359_48 1CB2  
                                      i2u392_40 00AC                                        i2u391_48 0086  
                                      i2u359_49 1CC6                                        i2u392_41 00A8  
                                      i2u391_49 009A                                        i2u393_40 00BA  
                                      i2u385_40 0028                                        i2u393_41 00B6  
                                      i2u385_41 0024                                        i2u386_40 0038  
                                      i2u386_41 0034                                        i2u395_40 00E6  
                                      i2u394_48 00C0                                        i2u387_40 0046  
                                      i2u395_41 00E2                                        i2u394_49 00D4  
                                      i2u387_41 0042                                        i2u396_40 00F4  
                                      i2u396_41 00F0                                        i2u389_40 0072  
                                      i2u388_48 004C                                        i2u389_41 006E  
                                      i2u388_49 0060                                        _PIR7bits 000ED1  
                                      i2u397_48 00FA                                        i2u397_49 010E  
                                      _MBRespon 01A4                          ?_EUSART1_RxDataHandler 0001  
                                     _vfpfcnvrt 012A                                       _xtoa$1341 0035  
                                     _xtoa$1342 0037                               ___wmul@multiplier 0005  
                          ??_EUSART1_is_tx_done 0005                                     checkCRC@crc 00D7  
                 __size_of_EUSART2_Transmit_ISR 0048                                    _isspace$1843 000B  
                 ??_EUSART2_DefaultErrorHandler 0001                                      vfpfcnvrt@c 00AD  
                                     copy_data0 1FCA                                       copy_data1 1FEA  
                         ?_INTERRUPT_Initialize 0001                          __size_of_generateCRCHI 00B4  
                        __size_of_generateCRCLo 00C2                         _EUSART2_SetErrorHandler 29DC  
                         EUSART1_Read@readValue 0005                     _EUSART2_OverrunErrorHandler 00E7  
                                      _ModbusRx 1750           __end_of_EUSART1_SetTxInterruptHandler 29F0  
        __size_of_EUSART1_SetTxInterruptHandler 000A                   _EUSART1_SetTxInterruptHandler 29E6  
                                      __Hrparam 0000           __end_of_EUSART2_SetRxInterruptHandler 29C8  
        __size_of_EUSART2_SetRxInterruptHandler 000A                   _EUSART2_SetRxInterruptHandler 29BE  
                                    vfprintf@ap 00BE                                        __Lrparam 0000  
                                    vfprintf@fp 00BA                              __CFG_BOREN$SBORDIS 000000  
                       ??_OSCILLATOR_Initialize 0005                                __size_of___aodiv 0188  
                              __size_of___aomod 0164                                __size_of___lodiv 00F0  
                              __size_of___lomod 00D0                     __size_of_EUSART1_Initialize 007C  
                                    ?_vfpfcnvrt 0049                                 ___aodiv@divisor 000D  
                               ___aodiv@counter 0015                       ??_EUSART1_SetErrorHandler 0007  
                                      _checkCRC 1604             __end_of_EUSART1_DefaultErrorHandler 2A48  
                   _EUSART1_DefaultErrorHandler 2A42                                ??_PrintModRespon 0055  
                   __end_of_EUSART1_is_rx_ready 2994                            _EUSART2_ErrorHandler 00E5  
                              __size_of_isalpha 003C                                __size_of_isdigit 0038  
                   __end_of_EUSART1_is_tx_ready 2964                      __size_of_AddRxBuffToModBus 00A0  
                               _ClearModbusData 2584                                __size_of_islower 0038  
                              __size_of_isspace 0052                                        __ptext10 1F28  
                                      __ptext11 2964                                        __ptext20 29E6  
                                      __ptext12 2A48                                        __ptext21 29F0  
                                      __ptext13 2038                                        __ptext30 297C  
                                      __ptext22 29FA                                        __ptext14 29B4  
                                      __ptext31 248A                                        __ptext23 2A04  
                                      __ptext15 29BE                                        __ptext40 27A8  
                                      __ptext32 25D0                                        __ptext24 2A0E  
                                      __ptext16 29C8                                        __ptext41 27E0  
                                      __ptext33 1DF2                                        __ptext25 21AE  
                                      __ptext17 29D2                                        __ptext50 2662  
                                      __ptext42 276C                                        __ptext34 2132  
                                      __ptext26 2226                                        __ptext18 29DC  
                                      __ptext51 1E92                                        __ptext43 0C6A  
                                      __ptext35 28A8                                        __ptext27 1750  
                                      __ptext19 20B6                                        __ptext60 28D0  
                                      __ptext52 2A18                                        __ptext44 196A  
                                      __ptext36 230C                                        __ptext28 1604  
                                      __ptext61 26EA                                        __ptext53 242C  
                                      __ptext45 187A                                        __ptext37 012A  
                                      __ptext29 2A30                                        __ptext70 26A6  
                                      __ptext62 2584                                        __ptext54 272C  
                                      __ptext46 0E6C                                        __ptext38 0994  
                                      __ptext71 1C7E                                        __ptext55 14A0  
                                      __ptext47 06B4                                        __ptext39 23CE  
                                      __ptext72 2A3C                                        __ptext64 261A  
                                      __ptext56 11A0                                        __ptext48 1AFC  
                                      __ptext73 2A4E                                        __ptext65 1BBE  
                                      __ptext57 1006                                        __ptext49 2534  
                                      __ptext74 2A42                                        __ptext66 2A22  
                                      __ptext58 24E2                                        __ptext75 287C  
                                      __ptext67 2A4C                                        __ptext59 2818  
                                      __ptext76 0000                                        __ptext68 2A36  
                                      __ptext69 2850                                __size_of_isupper 0038  
                             ?_InitialiseString 0001                                __size_of_toupper 005E  
                   __size_of_EUSART2_Initialize 007E                              ??_InitialiseString 0055  
                                 __size_of_atoi 019A                                   __size_of_main 0178  
                                 __size_of_dtoa 02E0                                   __size_of_stoa 019A  
         fp__EUSART2_DefaultFramingErrorHandler 0000      __end_of_EUSART2_DefaultFramingErrorHandler 2A4E  
   __size_of_EUSART2_DefaultFramingErrorHandler 0002            ??_EUSART2_DefaultFramingErrorHandler 0001  
           ?_EUSART2_DefaultFramingErrorHandler 0001              _EUSART2_DefaultFramingErrorHandler 2A4C  
                                 __size_of_utoa 0202                                   __size_of_xtoa 02D6  
                          __CFG_WDTCWS$WDTCWS_7 000000                                    PrintModbus@i 00CC  
          __size_of_EUSART2_DefaultErrorHandler 0006                                      _RC1STAbits 000F9D  
                                     stoa@F1139 00F5                                      _RC2STAbits 000E9D  
EUSART1_SetOverrunErrorHandler@interruptHandler 0005  EUSART2_SetOverrunErrorHandler@interruptHandler 0005  
                               PrintModRespon@i 00CC                                        _rxStatus 0096  
                                      int$flags 005A                                        _vfprintf 230C  
                                 _generateCRCHI 1D3E                                   _generateCRCLo 1A3A  
            __end_of_INTERRUPT_InterruptManager 0126                      _INTERRUPT_InterruptManager 0008  
                         _EUSART2_RxDataHandler 2850                                       printf@fmt 00C0  
                   _EUSART1_FramingErrorHandler 00E3                             _EUSART1_Receive_ISR 1C7E  
                              ___aomod@dividend 0005                ??_EUSART2_SetOverrunErrorHandler 0007  
               ?_EUSART2_SetOverrunErrorHandler 0005                                  _vfpfcnvrt$1356 00B0  
                                    _INTCONbits 000FF2                                     _NVMCON1bits 000F81  
                                      isalpha@c 0005                      __end_of_UART1_Write_string 230C  
                                      isdigit@c 0005                          ??_INTERRUPT_Initialize 0005  
                     ??_EUSART2_SetErrorHandler 0007                            __size_of_PrintModbus 0078  
                                      intlevel2 0000                                   ??_ClearRxBuff 0005  
                          ?_EUSART1_Receive_ISR 0001                                        islower@c 0005  
                                      isspace@c 0005                         ?_PIN_MANAGER_Initialize 0001  
                             __CFG_CLKOUTEN$OFF 000000          __end_of_EUSART1_SetOverrunErrorHandler 2A04  
       __size_of_EUSART1_SetOverrunErrorHandler 000A                  _EUSART1_SetOverrunErrorHandler 29FA  
                                      isupper@c 0005                    __end_of_EUSART1_Transmit_ISR 26EA  
                                      printf@ap 00CA                                  ?_generateCRCHI 0005  
                                ?_generateCRCLo 0005  EUSART1_SetFramingErrorHandler@interruptHandler 0005  
EUSART2_SetFramingErrorHandler@interruptHandler 0005                  ?_EUSART1_SetTxInterruptHandler 0005  
                ?_EUSART2_SetRxInterruptHandler 0005                                 ___aomod@divisor 000D  
                                   ??_vfpfcnvrt 004F                                        stoa@nuls 0015  
                               ___aomod@counter 0015                          __size_of_EUSART1_Write 005E  
                            _eusart1RxLastError 0099                          __size_of_EUSART2_Write 005E  
                           _EUSART2_Receive_ISR 1BBE                         __end_of_ClearModbusData 25D0  
                                      toupper@c 000B                                      _TX1STAbits 000F9E  
                                    _TX2STAbits 000E9E                                    ___aodiv@sign 0016  
                         ??_EUSART1_Receive_ISR 0001                  __end_of_PIN_MANAGER_Initialize 1FB6  
               ??_EUSART2_SetTxInterruptHandler 0007                            ?_EUSART2_Receive_ISR 0001  
                            _eusart2RxLastError 009E                         ??_EUSART1_RxDataHandler 0001  
                                  ___aomod@sign 0016               _EUSART2_RxDefaultInterruptHandler 00EF  
                           __end_of_ClearRxBuff 261A  
